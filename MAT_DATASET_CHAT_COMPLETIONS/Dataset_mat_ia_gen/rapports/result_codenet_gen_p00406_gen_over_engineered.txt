================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class ArrowDirection:
    LEFT = 0
    RIGHT = 1

class Piece:
    def __init__(self, position: int, direction: int):
        self.position = position
        self.direction = direction

    def __repr__(self):
        return f"Piece(pos={self.position}, dir={'R' if self.direction==ArrowDirection.RIGHT else 'L'})"

class Board:
    def __init__(self, length: int, pieces: list):
        self.length = length
        self.pieces = pieces  # List[Piece]

    def calculate_max_score(self) -> int:
        """
        Calculate the maximum achievable score given the problem constraints.
        The clever approach is:
        - Sort pieces by position.
        - The final positions will be each piece placed in distinct cells in ascending order.
        - We assign final positions as a strictly increasing sequence to maximize total score.
        - Score formula for each piece:
          (if moving in arrow direction +1 per step, else -1 per step.)
        There's a known formula:
        
        max score = sum over pieces of abs(final_pos_i - initial_pos_i),
        minus twice the sum of movements against arrow direction.
        
        But the optimal final positions are either the sorted initial positions or the sorted positions with some fixed offset.
        
        The problem states a maximum score always exists.
        The problem boils down to:
            max score = sum over i of abs(final[i] - p[i]) - 2 * sum over i of moves_against_direction
        
        Actually, solution is:
        Let us order the final positions as an increasing sequence f1 < f2 < ... < fN such that 1 <= f1 ...
        The maximum score is:
          sum of distances in direction of arrows minus sum in opposite direction.
        
        It is proven the maximum score is:
            sum over i of (fi - p_i) * (1 if arrow=right else -1)
        
        Because moving in arrow direction yields +1 per step, opposite yields -1.
        So total score = sum over all pieces of (fi - pi) if arrow=right, else (pi - fi).
        
        Since final positions are distinct and sorted, choosing final positions is like placing numbers 1..N (or any contiguous block).
        
        Generally, optimal final positions are the positions sorted to minimize penalties.
        
        The below implementation calculates the score using the method known: final positions are
        1,2,...,N and initial positions are p sorted; then:
        
        score = sum over i of abs(final_i - p_i) - 2 * sum over i with arrow opposite of movement
        
        The key insight is that maximizing score equals to maximizing the sum of displacement in the arrow direction.
        So maximum score = sum over i of abs(final_i - p_i) - 2 * sum over pieces moving against arrow.
        We can prove the maximum is sum over i of (final_i - p_i) * (1 if arrow=right else -1).
        
        We assign final positions equal to 1 to N in ascending order.
        """
        N = len(self.pieces)
        # Sort pieces by position to assign final positions 1..N in ascending order
        self.pieces.sort(key=lambda x: x.position)
        
        max_score = 0
        for i, piece in enumerate(self.pieces, start=1):
            displacement = i - piece.position
            if piece.direction == ArrowDirection.RIGHT:
                # moves in direction arrow gives +1 score per step
                max_score += displacement
            else:
                # direction is left, moving left +1, so moves to right are negative score
                max_score += -displacement
        return max_score

class InputParser:
    @staticmethod
    def parse_input():
        import sys
        input = sys.stdin.readline
        N, L = map(int, input().split())
        pieces = []
        for _ in range(N):
            p_i, d_i = map(int, input().split())
            pieces.append(Piece(p_i, d_i))
        return Board(L, pieces)

class SolutionRunner:
    def __init__(self):
        self.board = None

    def run(self):
        self.board = InputParser.parse_input()
        result = self.board.calculate_max_score()
        print(result)

if __name__ == "__main__":
    runner = SolutionRunner()
    runner.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Arrow' (ID: 62441)
  → Token d'amorce (pas de prédiction)

Token 2: 'Direction' (ID: 14084)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7145854234695435
    2. ':' → logprob: -1.0895854234695435
    3. '(' → logprob: -2.214585304260254
    4. ' {' → logprob: -3.339585304260254
    5. '.' → logprob: -3.589585304260254
    6. '```' → logprob: -7.214585304260254
    7. '[' → logprob: -7.964585304260254
    8. ' ' → logprob: -8.339585304260254
    9. ' :' → logprob: -8.339585304260254
    10. '(:' → logprob: -9.589585304260254

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3388002812862396
    2. '.' → logprob: -1.338800311088562
    3. '(' → logprob: -3.9638001918792725
    4. '   ' → logprob: -5.713800430297852
    5. '```' → logprob: -6.588800430297852
    6. '():' → logprob: -7.963800430297852
    7. '(Enum' → logprob: -8.088800430297852
    8. ':
' → logprob: -8.588800430297852
    9. '_' → logprob: -8.713800430297852
    10. ' ' → logprob: -9.838800430297852

Token 5: ' LEFT' (ID: 48606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032030705362558365
    2. '```' → logprob: -4.0320305824279785
    3. ':' → logprob: -4.9070305824279785
    4. ' ' → logprob: -6.7820305824279785
    5. '.' → logprob: -7.1570305824279785
    6. 'UP' → logprob: -7.4070305824279785
    7. '_' → logprob: -7.4070305824279785
    8. '(' → logprob: -7.7820305824279785
    9. '_UP' → logprob: -7.9070305824279785
    10. '    ' → logprob: -8.282031059265137

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33113351464271545
    2. ' =' → logprob: -1.331133484840393
    3. ':' → logprob: -4.4561333656311035
    4. '.' → logprob: -6.0811333656311035
    5. '   ' → logprob: -6.0811333656311035
    6. '```' → logprob: -7.8311333656311035
    7. '_' → logprob: -8.081133842468262
    8. '=
' → logprob: -8.706133842468262
    9. ',' → logprob: -8.831133842468262
    10. ' =
' → logprob: -9.081133842468262

Token 7: ' ' (ID: 220)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.505519449710846
    2. ''' → logprob: -1.2555193901062012
    3. ' ' → logprob: -2.755519390106201
    4. ' "' → logprob: -3.755519390106201
    5. '1' → logprob: -4.505519390106201
    6. '"' → logprob: -4.755519390106201
    7. '0' → logprob: -5.630519390106201
    8. ' -' → logprob: -7.005519390106201
    9. '-' → logprob: -8.50551986694336
    10. '   ' → logprob: -8.63051986694336

Token 8: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.058928169310092926
    2. '0' → logprob: -3.6839282512664795
    3. '1' → logprob: -4.0589280128479
    4. '"' → logprob: -4.8089280128479
    5. '-' → logprob: -5.5589280128479
    6. ''<' → logprob: -6.1839280128479
    7. ''"' → logprob: -7.9339280128479
    8. ' '' → logprob: -8.683928489685059
    9. ' ' → logprob: -9.558928489685059
    10. '(' → logprob: -10.183928489685059

Token 9: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8685328364372253
    2. '_
' → logprob: -1.7435328960418701
    3. '' → logprob: -2.36853289604187
    4. '\n' → logprob: -2.49353289604187
    5. '```' → logprob: -2.74353289604187
    6. 'newline' → logprob: -3.74353289604187
    7. '_' → logprob: -3.86853289604187
    8. '    
' → logprob: -3.86853289604187
    9. '`
' → logprob: -3.99353289604187
    10. '  
' → logprob: -3.99353289604187

Token 10: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.37217265367507935
    2. '
' → logprob: -1.9971725940704346
    3. '\n' → logprob: -2.4971725940704346
    4. '``' → logprob: -3.4971725940704346
    5. 'newline' → logprob: -4.622172832489014
    6. '   ' → logprob: -4.622172832489014
    7. '    
' → logprob: -4.872172832489014
    8. '\' → logprob: -5.122172832489014
    9. '' → logprob: -5.122172832489014
    10. '`' → logprob: -5.247172832489014

Token 11: ' RIGHT' (ID: 51066)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10584946721792221
    2. '```' → logprob: -3.730849504470825
    3. 'RIGHT' (adapté à ' RIGHT') → logprob: -3.980849504470825
    4. '`
' → logprob: -4.105849266052246
    5. '\n' → logprob: -4.855849266052246
    6. '
' → logprob: -4.980849266052246
    7. '_
' → logprob: -4.980849266052246
    8. '``' → logprob: -5.355849266052246
    9. '`' → logprob: -5.605849266052246
    10. '    
' → logprob: -5.855849266052246

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009801307693123817
    2. '=' → logprob: -4.634801387786865
    3. ' ' → logprob: -10.509800910949707
    4. '   ' → logprob: -11.134800910949707
    5. '  ' → logprob: -13.634800910949707
    6. '    ' → logprob: -14.009800910949707
    7. '```' → logprob: -14.884800910949707
    8. ' =
' → logprob: -15.009800910949707
    9. ' ' → logprob: -15.259800910949707
    10. '`' → logprob: -15.509800910949707

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0429999977350235
    2. '1' → logprob: -3.1679999828338623
    3. '0' → logprob: -14.543000221252441
    4. ' ' → logprob: -15.668000221252441
    5. '2' → logprob: -16.292999267578125
    6. '```' → logprob: -17.042999267578125
    7. '   ' → logprob: -17.417999267578125
    8. '  ' → logprob: -18.105499267578125
    9. '4' → logprob: -18.230499267578125
    10. '3' → logprob: -18.917999267578125

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02054421976208687
    2. ' ' → logprob: -3.8955442905426025
    3. '0' → logprob: -13.270544052124023
    4. '   ' → logprob: -15.395544052124023
    5. '2' → logprob: -15.895544052124023
    6. ' ' → logprob: -16.020544052124023
    7. '```' → logprob: -16.145544052124023
    8. '  ' → logprob: -16.270544052124023
    9. '4' → logprob: -17.583044052124023
    10. '`' → logprob: -18.020544052124023

Token 15: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8763948678970337
    2. '
' → logprob: -1.3763948678970337
    3. '<|end|>' → logprob: -1.8763948678970337
    4. '\n' → logprob: -2.251394748687744
    5. 'newline' → logprob: -3.626394748687744
    6. '' → logprob: -4.251394748687744
    7. '\' → logprob: -4.501394748687744
    8. '.' → logprob: -5.626394748687744
    9. '   ' → logprob: -6.001394748687744
    10. '``' → logprob: -6.251394748687744

Token 16: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5748456120491028
    2. '
' → logprob: -1.699845552444458
    3. 'newline' → logprob: -2.824845552444458
    4. '.' → logprob: -2.949845552444458
    5. '\n' → logprob: -3.449845552444458
    6. '<|end|>' → logprob: -3.699845552444458
    7. ',' → logprob: -4.199845790863037
    8. '```' → logprob: -4.699845790863037
    9. '    
' → logprob: -5.074845790863037
    10. '' → logprob: -5.074845790863037

Token 17: ' Piece' (ID: 48233)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11467629671096802
    2. ''' → logprob: -2.8646762371063232
    3. ' Ar' → logprob: -3.8646762371063232
    4. ' Space' → logprob: -4.239676475524902
    5. '"' → logprob: -5.614676475524902
    6. ' User' → logprob: -5.864676475524902
    7. ' Arrow' → logprob: -6.114676475524902
    8. '`' → logprob: -6.864676475524902
    9. ' A' → logprob: -7.239676475524902
    10. ' Mouse' → logprob: -7.739676475524902

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032011198345571756
    2. '(' → logprob: -6.378201007843018
    3. '.' → logprob: -6.628201007843018
    4. '<|end|>' → logprob: -10.378201484680176
    5. ':**' → logprob: -10.753201484680176
    6. ' :' → logprob: -10.878201484680176
    7. '():' → logprob: -11.003201484680176
    8. '):' → logprob: -11.003201484680176
    9. '   ' → logprob: -11.128201484680176
    10. '(:' → logprob: -11.253201484680176

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23752829432487488
    2. '    ' → logprob: -1.6125283241271973
    3. ' ' → logprob: -4.862528324127197
    4. '(' → logprob: -7.112528324127197
    5. '    
' → logprob: -7.237528324127197
    6. '```' → logprob: -7.487528324127197
    7. '\' → logprob: -7.987528324127197
    8. '     
' → logprob: -8.237527847290039
    9. '  ' → logprob: -8.362527847290039
    10. '`' → logprob: -8.487527847290039

Token 20: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7775235772132874
    2. '   ' → logprob: -1.2775235176086426
    3. '    ' → logprob: -1.5275235176086426
    4. 'def' (adapté à ' def') → logprob: -3.2775235176086426
    5. '_' → logprob: -6.027523517608643
    6. 'd' → logprob: -6.402523517608643
    7. ' ' → logprob: -7.152523517608643
    8. ')' → logprob: -8.2775239944458
    9. '```' → logprob: -8.4025239944458
    10. 'class' → logprob: -8.5275239944458

Token 21: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009627176448702812
    2. '__' → logprob: -4.884627342224121
    3. ' init' → logprob: -7.384627342224121
    4. ' ' → logprob: -7.884627342224121
    5. ' ' → logprob: -8.134627342224121
    6. '_' → logprob: -8.259627342224121
    7. '_init' → logprob: -9.009627342224121
    8. ' constructor' → logprob: -9.384627342224121
    9. ' _' → logprob: -9.634627342224121
    10. ' calculate' → logprob: -10.759627342224121

Token 22: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.8624639324116288e-06
    2. 'ini' → logprob: -13.500001907348633
    3. 'in' → logprob: -15.500001907348633
    4. ' init' → logprob: -15.500001907348633
    5. 'i' → logprob: -16.625001907348633
    6. 'int' → logprob: -19.375001907348633
    7. '_init' → logprob: -19.875001907348633
    8. 'inite' → logprob: -20.250001907348633
    9. '	init' → logprob: -20.250001907348633
    10. 'innit' → logprob: -20.375001907348633

Token 23: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10105448216199875
    2. '__(' → logprob: -2.6010544300079346
    3. ' (' → logprob: -4.726054668426514
    4. '__' → logprob: -5.226054668426514
    5. '(self' → logprob: -5.726054668426514
    6. '<|end|>' → logprob: -6.226054668426514
    7. '_' → logprob: -6.726054668426514
    8. '__(
' → logprob: -8.101054191589355
    9. 'self' → logprob: -8.976054191589355
    10. '_(' → logprob: -9.101054191589355

Token 24: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008615754544734955
    2. ' self' → logprob: -4.758615970611572
    3. ')' → logprob: -13.758615493774414
    4. ' )' → logprob: -17.008615493774414
    5. '(self' → logprob: -17.633615493774414
    6. ' ' → logprob: -18.258615493774414
    7. '	self' → logprob: -18.383615493774414
    8. ' ' → logprob: -18.758615493774414
    9. '   ' → logprob: -18.883615493774414
    10. '       ' → logprob: -19.258615493774414

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0876184031367302
    2. ' ,' → logprob: -3.462618350982666
    3. 'self' → logprob: -3.462618350982666
    4. ' self' → logprob: -4.587618350982666
    5. ')' → logprob: -5.337618350982666
    6. ' ' → logprob: -5.962618350982666
    7. ' )' → logprob: -6.587618350982666
    8. '<|end|>' → logprob: -7.337618350982666
    9. ',self' → logprob: -7.462618350982666
    10. '(self' → logprob: -7.462618350982666

Token 26: ' position' (ID: 4010)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4889194071292877
    2. ' direction' → logprob: -1.3639193773269653
    3. ' color' → logprob: -2.863919496536255
    4. 'self' → logprob: -3.363919496536255
    5. ' position' → logprob: -4.363919258117676
    6. ' arrow' → logprob: -4.488919258117676
    7. ' )' → logprob: -5.488919258117676
    8. ' board' → logprob: -5.738919258117676
    9. ' x' → logprob: -6.238919258117676
    10. ')' → logprob: -6.738919258117676

Token 27: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07340115308761597
    2. '):' → logprob: -2.8234012126922607
    3. ')' → logprob: -4.698400974273682
    4. '=' → logprob: -6.823400974273682
    5. ' ,' → logprob: -7.448400974273682
    6. ':' → logprob: -7.698400974273682
    7. ' ):' → logprob: -9.69840145111084
    8. ' )' → logprob: -10.57340145111084
    9. '<|end|>' → logprob: -11.69840145111084
    10. '.' → logprob: -12.44840145111084

Token 28: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8196502923965454
    2. ' tuple' → logprob: -0.8196502923965454
    3. 'int' → logprob: -2.694650173187256
    4. ' )' → logprob: -4.194650173187256
    5. 'tuple' → logprob: -4.194650173187256
    6. ' Tuple' → logprob: -4.819650173187256
    7. ')' → logprob: -5.444650173187256
    8. ' (' → logprob: -5.569650173187256
    9. ' ' → logprob: -6.069650173187256
    10. 'Tuple' → logprob: -7.319650173187256

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16889791190624237
    2. '):' → logprob: -1.9188978672027588
    3. ')' → logprob: -4.793898105621338
    4. ' ,' → logprob: -8.41889762878418
    5. ' ):' → logprob: -9.54389762878418
    6. ':' → logprob: -10.79389762878418
    7. ' ' → logprob: -11.66889762878418
    8. '   ' → logprob: -12.16889762878418
    9. ' )' → logprob: -12.16889762878418
    10. '):
' → logprob: -12.54389762878418

Token 30: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.4397984743118286
    2. ' arrow' → logprob: -1.0647984743118286
    3. ' color' → logprob: -5.189798355102539
    4. ' ' → logprob: -6.064798355102539
    5. 'direction' → logprob: -6.564798355102539
    6. 'arrow' → logprob: -7.814798355102539
    7. ')' → logprob: -8.064798355102539
    8. ' orientation' → logprob: -8.064798355102539
    9. ' ' → logprob: -8.939798355102539
    10. ' current' → logprob: -9.439798355102539

Token 31: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001127836643718183
    2. '):' → logprob: -7.12612771987915
    3. ')' → logprob: -8.751128196716309
    4. '=' → logprob: -9.001128196716309
    5. ' :' → logprob: -10.251128196716309
    6. ' ):' → logprob: -13.126128196716309
    7. '<|end|>' → logprob: -13.126128196716309
    8. ' )' → logprob: -14.626128196716309
    9. ':int' → logprob: -14.751128196716309
    10. ',' → logprob: -14.876128196716309

Token 32: ' int' (ID: 677)
  Prédit: ' Arrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Arrow' → logprob: -0.2137293517589569
    2. 'Arrow' → logprob: -1.8387293815612793
    3. ' ' → logprob: -3.4637293815612793
    4. ' int' → logprob: -6.713729381561279
    5. ' arrow' → logprob: -7.463729381561279
    6. ')' → logprob: -9.838728904724121
    7. 'int' → logprob: -9.838728904724121
    8. ' '' → logprob: -9.963728904724121
    9. ' )' → logprob: -10.213728904724121
    10. '_arrow' → logprob: -10.213728904724121

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009082449832931161
    2. ')' → logprob: -7.250908374786377
    3. ':' → logprob: -9.000907897949219
    4. '   ' → logprob: -10.375907897949219
    5. ',' → logprob: -10.875907897949219
    6. ' ):' → logprob: -11.250907897949219
    7. '):
' → logprob: -12.250907897949219
    8. ' ' → logprob: -12.750907897949219
    9. '       ' → logprob: -13.750907897949219
    10. ''):' → logprob: -14.000907897949219

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027883611619472504
    2. ':' → logprob: -7.127788543701172
    3. ')' → logprob: -7.377788543701172
    4. '):' → logprob: -7.752788543701172
    5. '   ' → logprob: -8.502788543701172
    6. '<|end|>' → logprob: -8.627788543701172
    7. ' )' → logprob: -9.002788543701172
    8. '    ' → logprob: -9.377788543701172
    9. ' ):' → logprob: -9.377788543701172
    10. ' :' → logprob: -10.127788543701172

Token 35: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24164795875549316
    2. 'self' (adapté à ' self') → logprob: -1.7416479587554932
    3. ' self' → logprob: -3.241647958755493
    4. '```' → logprob: -9.116647720336914
    5. '   ' → logprob: -9.616647720336914
    6. ' ' → logprob: -9.741647720336914
    7. '           ' → logprob: -10.616647720336914
    8. ' ' → logprob: -10.991647720336914
    9. '        ' → logprob: -11.241647720336914
    10. '      ' → logprob: -11.866647720336914

Token 36: '.position' (ID: 13130)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010653206845745444
    2. ' .' → logprob: -7.126065254211426
    3. '.position' → logprob: -8.376065254211426
    4. ')' → logprob: -12.001065254211426
    5. ' ' → logprob: -12.251065254211426
    6. ').' → logprob: -12.751065254211426
    7. '.user' → logprob: -12.876065254211426
    8. '.period' → logprob: -13.751065254211426
    9. '.is' → logprob: -14.126065254211426
    10. '.status' → logprob: -14.251065254211426

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38695329427719116
    2. '=' → logprob: -1.136953353881836
    3. '<|end|>' → logprob: -10.886953353881836
    4. ' ' → logprob: -11.136953353881836
    5. '_' → logprob: -11.261953353881836
    6. ' =)' → logprob: -11.511953353881836
    7. ')' → logprob: -11.636953353881836
    8. ',' → logprob: -12.761953353881836
    9. '    ' → logprob: -13.386953353881836
    10. '=}' → logprob: -13.511953353881836

Token 38: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.07156189531087875
    2. 'position' → logprob: -2.696561813354492
    3. ' ' → logprob: -6.446561813354492
    4. '	position' → logprob: -10.946561813354492
    5. '(position' → logprob: -11.821561813354492
    6. '[position' → logprob: -12.071561813354492
    7. '.position' → logprob: -13.321561813354492
    8. ' )' → logprob: -13.696561813354492
    9. ' direction' → logprob: -14.071561813354492
    10. '_position' → logprob: -14.196561813354492

Token 39: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006954769138246775
    2. '<|end|>' → logprob: -6.131954669952393
    3. '        
' → logprob: -6.381954669952393
    4. '        ' → logprob: -6.506954669952393
    5. '
' → logprob: -7.256954669952393
    6. ' ' → logprob: -8.75695514678955
    7. ' 
' → logprob: -8.75695514678955
    8. '   ' → logprob: -9.25695514678955
    9. '```' → logprob: -9.38195514678955
    10. '    ' → logprob: -9.38195514678955

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009221808286383748
    2. 'self' → logprob: -7.500922203063965
    3. '        
' → logprob: -8.750922203063965
    4. '
' → logprob: -9.000922203063965
    5. '```' → logprob: -10.375922203063965
    6. ' self' → logprob: -11.250922203063965
    7. '        ' → logprob: -11.375922203063965
    8. '<|end|>' → logprob: -11.375922203063965
    9. '   ' → logprob: -12.375922203063965
    10. ',' → logprob: -13.000922203063965

Token 41: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06817837804555893
    2. ' self' → logprob: -3.068178415298462
    3. '       ' → logprob: -3.943178415298462
    4. '        ' → logprob: -12.693178176879883
    5. '	self' → logprob: -13.193178176879883
    6. 'direction' → logprob: -13.318178176879883
    7. ' ' → logprob: -13.443178176879883
    8. '   ' → logprob: -13.693178176879883
    9. '
' → logprob: -14.068178176879883
    10. '        
' → logprob: -14.318178176879883

Token 42: '.direction' (ID: 63524)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018288539722561836
    2. '.direction' → logprob: -4.018288612365723
    3. 'direction' → logprob: -9.268288612365723
    4. '.position' → logprob: -11.018288612365723
    5. '.arrow' → logprob: -11.768288612365723
    6. ' .' → logprob: -11.893288612365723
    7. '_direction' → logprob: -12.643288612365723
    8. ')' → logprob: -13.393288612365723
    9. '.Direction' → logprob: -14.393288612365723
    10. ' direction' → logprob: -14.768288612365723

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324722334742546
    2. '=' → logprob: -3.773247241973877
    3. ' ' → logprob: -14.523246765136719
    4. ' =
' → logprob: -14.523246765136719
    5. '<|end|>' → logprob: -15.023246765136719
    6. ' =)' → logprob: -15.148246765136719
    7. ')' → logprob: -16.52324676513672
    8. ' |=' → logprob: -18.14824676513672
    9. ' equals' → logprob: -18.39824676513672
    10. '.' → logprob: -18.39824676513672

Token 44: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.0021876145619899035
    2. 'direction' → logprob: -6.127187728881836
    3. ' ' → logprob: -13.877187728881836
    4. '(direction' → logprob: -14.002187728881836
    5. '.direction' → logprob: -14.877187728881836
    6. '_direction' → logprob: -15.877187728881836
    7. ' ' → logprob: -16.002187728881836
    8. 'Direction' → logprob: -17.252187728881836
    9. '方向' → logprob: -17.502187728881836
    10. 'dire' → logprob: -18.127187728881836

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3546086251735687
    2. '   ' → logprob: -1.3546086549758911
    3. '<|end|>' → logprob: -3.3546085357666016
    4. '    
' → logprob: -6.479608535766602
    5. '<|end|>' → logprob: -6.854608535766602
    6. '```' → logprob: -6.979608535766602
    7. '

' → logprob: -7.354608535766602
    8. '       ' → logprob: -8.604608535766602
    9. ' ' → logprob: -8.604608535766602
    10. ' 
' → logprob: -8.729608535766602

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5466068387031555
    2. '
' → logprob: -0.9216068387031555
    3. 'def' → logprob: -4.29660701751709
    4. '    
' → logprob: -5.79660701751709
    5. 'class' → logprob: -6.04660701751709
    6. '```' → logprob: -6.29660701751709
    7. ' 
' → logprob: -7.54660701751709
    8. '\n' → logprob: -7.67160701751709
    9. ' ' → logprob: -8.17160701751709
    10. '<|end|>' → logprob: -8.54660701751709

Token 47: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.019671104848384857
    2. '   ' → logprob: -4.1446709632873535
    3. ' def' → logprob: -5.8946709632873535
    4. '
' → logprob: -7.2696709632873535
    5. '    
' → logprob: -9.019671440124512
    6. ' ' → logprob: -11.144671440124512
    7. '	def' → logprob: -11.144671440124512
    8. '        
' → logprob: -12.019671440124512
    9. '```' → logprob: -12.144671440124512
    10. ' 
' → logprob: -12.144671440124512

Token 48: ' __' (ID: 2516)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.27164414525032043
    2. ' ' → logprob: -2.021644115447998
    3. ' space' → logprob: -3.021644115447998
    4. ' advance' → logprob: -4.271644115447998
    5. '_' → logprob: -4.396644115447998
    6. ' _' → logprob: -5.021644115447998
    7. ' def' → logprob: -5.271644115447998
    8. ' get' → logprob: -5.646644115447998
    9. ' is' → logprob: -6.271644115447998
    10. '_move' → logprob: -6.396644115447998

Token 49: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.7664045095443726
    2. 'str' → logprob: -1.0164045095443726
    3. 'eq' → logprob: -1.7664045095443726
    4. 'init' → logprob: -6.016404628753662
    5. 're' → logprob: -11.266404151916504
    6. 'r' → logprob: -12.266404151916504
    7. 'lt' → logprob: -12.391404151916504
    8. 'rep' → logprob: -12.641404151916504
    9. 'call' → logprob: -13.016404151916504
    10. 'e' → logprob: -13.141404151916504

Token 50: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3184362053871155
    2. '__' → logprob: -1.3184361457824707
    3. '__('' → logprob: -5.693436145782471
    4. '__(
' → logprob: -7.318436145782471
    5. '(' → logprob: -7.443436145782471
    6. '_' → logprob: -8.193436622619629
    7. '__((' → logprob: -9.068436622619629
    8. '__("' → logprob: -9.443436622619629
    9. '___' → logprob: -10.318436622619629
    10. '__(*' → logprob: -11.318436622619629

Token 51: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.780830830801278e-05
    2. ')' → logprob: -9.37508773803711
    3. ' self' → logprob: -13.12508773803711
    4. '(self' → logprob: -15.50008773803711
    5. '<|end|>' → logprob: -16.50008773803711
    6. ''s' → logprob: -16.62508773803711
    7. '_self' → logprob: -16.62508773803711
    8. ' ' → logprob: -16.62508773803711
    9. '
' → logprob: -16.87508773803711
    10. '

' → logprob: -16.87508773803711

Token 52: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07239684462547302
    2. '__' → logprob: -2.822396755218506
    3. '__)' → logprob: -5.322396755218506
    4. 'self' → logprob: -6.197396755218506
    5. '_' → logprob: -6.947396755218506
    6. ')__' → logprob: -7.197396755218506
    7. '):' → logprob: -7.572396755218506
    8. ' )' → logprob: -7.947396755218506
    9. '__('' → logprob: -8.697397232055664
    10. '<|end|>' → logprob: -9.072397232055664

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003664404503069818
    2. ' return' → logprob: -8.6253662109375
    3. ' f' → logprob: -9.3753662109375
    4. '        ' → logprob: -10.1253662109375
    5. 'return' → logprob: -10.3753662109375
    6. '    ' → logprob: -11.7503662109375
    7. '      ' → logprob: -11.7503662109375
    8. '           ' → logprob: -12.3753662109375
    9. '   ' → logprob: -12.5003662109375
    10. '     ' → logprob: -13.2503662109375

Token 54: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4925363063812256
    2. 'return' (adapté à ' return') → logprob: -1.2425363063812256
    3. ' return' → logprob: -2.3675363063812256
    4. ' f' → logprob: -5.242536544799805
    5. 'f' → logprob: -6.742536544799805
    6. '   ' → logprob: -9.617536544799805
    7. '           ' → logprob: -12.117536544799805
    8. '    ' → logprob: -12.242536544799805
    9. '{return' → logprob: -12.367536544799805
    10. '      ' → logprob: -12.617536544799805

Token 55: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.034017711877822876
    2. 'f' → logprob: -3.40901780128479
    3. '"' → logprob: -8.409017562866211
    4. ''' → logprob: -9.159017562866211
    5. ''f' → logprob: -10.534017562866211
    6. ' ' → logprob: -11.409017562866211
    7. '	f' → logprob: -13.159017562866211
    8. ' ' → logprob: -13.659017562866211
    9. ' F' → logprob: -14.284017562866211
    10. '`' → logprob: -14.659017562866211

Token 56: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08975227177143097
    2. ''' → logprob: -3.589752197265625
    3. '(' → logprob: -3.714752197265625
    4. '"{' → logprob: -4.464752197265625
    5. '{' → logprob: -4.714752197265625
    6. '(P' → logprob: -5.714752197265625
    7. ''{' → logprob: -5.839752197265625
    8. '"P' → logprob: -6.214752197265625
    9. '(f' → logprob: -6.339752197265625
    10. 'f' → logprob: -6.464752197265625

Token 57: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -0.024629143998026848
    2. '<' → logprob: -3.7746291160583496
    3. 'Pie' → logprob: -7.27462911605835
    4. '<P' → logprob: -8.399629592895508
    5. 'Arrow' → logprob: -9.274629592895508
    6. 'P' → logprob: -9.524629592895508
    7. '"' → logprob: -10.024629592895508
    8. 'Pi' → logprob: -10.149629592895508
    9. '{' → logprob: -10.274629592895508
    10. ' Piece' → logprob: -10.649629592895508

Token 58: '(pos' (ID: 24566)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16174869239330292
    2. '(position' → logprob: -1.9117486476898193
    3. '(Position' → logprob: -7.036748886108398
    4. '(direction' → logprob: -7.661748886108398
    5. '(pos' → logprob: -10.036748886108398
    6. '(
' → logprob: -10.536748886108398
    7. '(`' → logprob: -10.661748886108398
    8. '(x' → logprob: -11.411748886108398
    9. '(P' → logprob: -11.536748886108398
    10. '({' → logprob: -11.536748886108398

Token 59: '={' (ID: 1693)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -6.56364209135063e-05
    2. '{' → logprob: -10.875065803527832
    3. '={' → logprob: -10.875065803527832
    4. '```' → logprob: -11.625065803527832
    5. 'ITION' → logprob: -12.000065803527832
    6. '=' → logprob: -12.250065803527832
    7. 'i' → logprob: -12.625065803527832
    8. '{i' → logprob: -13.375065803527832
    9. 'iti' → logprob: -14.375065803527832
    10. ':' → logprob: -15.125065803527832

Token 60: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.288163083605468e-05
    2. '{' → logprob: -10.000052452087402
    3. 'elf' → logprob: -12.250052452087402
    4. ' self' → logprob: -13.500052452087402
    5. 's' → logprob: -15.125052452087402
    6. '```' → logprob: -15.625052452087402
    7. '(self' → logprob: -16.25005340576172
    8. '
' → logprob: -16.50005340576172
    9. 'sel' → logprob: -16.50005340576172
    10. '	self' → logprob: -16.87505340576172

Token 61: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.00046713458141312003
    2. '.' → logprob: -7.750467300415039
    3. '.direction' → logprob: -10.875467300415039
    4. 'position' → logprob: -11.750467300415039
    5. 'ion' → logprob: -12.875467300415039
    6. 'ition' → logprob: -13.000467300415039
    7. '	position' → logprob: -13.750467300415039
    8. 'osition' → logprob: -14.625467300415039
    9. ' .' → logprob: -14.625467300415039
    10. '.i' → logprob: -14.750467300415039

Token 62: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025669054593890905
    2. ' ,' → logprob: -8.375256538391113
    3. ',
' → logprob: -11.250256538391113
    4. ',pos' → logprob: -12.375256538391113
    5. ',p' → logprob: -12.875256538391113
    6. ',

' → logprob: -13.875256538391113
    7. ')' → logprob: -14.125256538391113
    8. '),' → logprob: -14.375256538391113
    9. '},' → logprob: -14.375256538391113
    10. ',)' → logprob: -14.375256538391113

Token 63: ' dir' (ID: 5609)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.4749539792537689
    2. 'direction' → logprob: -0.9749540090560913
    3. ' f' → logprob: -7.724954128265381
    4. 'd' → logprob: -9.224953651428223
    5. 'f' → logprob: -9.224953651428223
    6. ' d' → logprob: -9.349953651428223
    7. ' ,' → logprob: -10.474953651428223
    8. '_direction' → logprob: -10.599953651428223
    9. 'dir' → logprob: -10.974953651428223
    10. ' dir' → logprob: -11.724953651428223

Token 64: '={'' (ID: 24320)
  Prédit: '={'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.7813045978546143
    2. 'ection' → logprob: -1.1563045978546143
    3. '=' → logprob: -1.6563045978546143
    4. '=self' → logprob: -4.531304359436035
    5. '=}' → logprob: -4.656304359436035
    6. 'ect' → logprob: -4.781304359436035
    7. '={'' → logprob: -6.031304359436035
    8. '=`' → logprob: -6.656304359436035
    9. '={"' → logprob: -6.906304359436035
    10. '=<' → logprob: -7.531304359436035

Token 65: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.054616618901491165
    2. 'self' → logprob: -3.054616689682007
    3. 'Arrow' → logprob: -6.679616451263428
    4. 'LEFT' → logprob: -6.679616451263428
    5. ''s' → logprob: -6.929616451263428
    6. 'left' → logprob: -7.179616451263428
    7. ''<' → logprob: -7.179616451263428
    8. ' '' → logprob: -8.554616928100586
    9. 'Left' → logprob: -8.929616928100586
    10. ''L' → logprob: -9.554616928100586

Token 66: ''' (ID: 6)
  Prédit: 'IGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IGHT' → logprob: -0.13522063195705414
    2. ''' → logprob: -2.135220527648926
    3. 'ight' → logprob: -5.385220527648926
    4. 'I' → logprob: -6.260220527648926
    5. '}'' → logprob: -6.885220527648926
    6. ''}' → logprob: -8.385220527648926
    7. '}' → logprob: -9.135220527648926
    8. 'T' → logprob: -9.510220527648926
    9. 'IGH' → logprob: -9.885220527648926
    10. '"' → logprob: -10.385220527648926

Token 67: ' if' (ID: 538)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07192327082157135
    2. 'ight' → logprob: -3.57192325592041
    3. 'i' → logprob: -4.32192325592041
    4. '"' → logprob: -4.94692325592041
    5. ' if' → logprob: -5.32192325592041
    6. 'if' → logprob: -5.44692325592041
    7. 'IGHT' → logprob: -5.44692325592041
    8. '}'' → logprob: -6.07192325592041
    9. '}' → logprob: -6.82192325592041
    10. '>'' → logprob: -7.57192325592041

Token 68: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47409483790397644
    2. 'self' → logprob: -0.9740948677062988
    3. 'elf' → logprob: -11.34909439086914
    4. ' ' → logprob: -13.22409439086914
    5. '(self' → logprob: -13.22409439086914
    6. ' ' → logprob: -14.34909439086914
    7. '	self' → logprob: -14.59909439086914
    8. '=self' → logprob: -15.22409439086914
    9. '   ' → logprob: -15.34909439086914
    10. '_self' → logprob: -15.84909439086914

Token 69: '.direction' (ID: 63524)
  Prédit: '.direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direction' → logprob: -4.47757811343763e-05
    2. 'irection' → logprob: -10.625044822692871
    3. '.' → logprob: -11.500044822692871
    4. 'direction' → logprob: -11.625044822692871
    5. ' .' → logprob: -14.375044822692871
    6. '.position' → logprob: -15.500044822692871
    7. ' direction' → logprob: -16.750043869018555
    8. '.dir' → logprob: -17.125043869018555
    9. '.d' → logprob: -17.125043869018555
    10. '.arrow' → logprob: -17.125043869018555

Token 70: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132968246936798
    2. '==' → logprob: -1.3132967948913574
    3. '=' → logprob: -10.563297271728516
    4. ' =' → logprob: -12.313297271728516
    5. ' else' → logprob: -13.313297271728516
    6. ' ' → logprob: -13.938297271728516
    7. ')' → logprob: -14.313297271728516
    8. ' ' → logprob: -14.688297271728516
    9. '===' → logprob: -15.438297271728516
    10. 'else' → logprob: -15.438297271728516

Token 71: 'Arrow' (ID: 30361)
  Prédit: 'Arrow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arrow' → logprob: -0.004079589620232582
    2. ' Arrow' → logprob: -5.504079818725586
    3. ' ' → logprob: -13.879079818725586
    4. '_arrow' → logprob: -16.129079818725586
    5. ' arrow' → logprob: -17.504079818725586
    6. '1' → logprob: -17.629079818725586
    7. 'arrow' → logprob: -18.504079818725586
    8. '   ' → logprob: -18.629079818725586
    9. 'Piece' → logprob: -18.629079818725586
    10. 'self' → logprob: -18.754079818725586

Token 72: 'Direction' (ID: 14084)
  Prédit: 'Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.0005664954078383744
    2. '_DIRECTION' → logprob: -7.500566482543945
    3. 'D' → logprob: -11.500566482543945
    4. '_D' → logprob: -14.000566482543945
    5. '   ' → logprob: -14.625566482543945
    6. '.Direction' → logprob: -14.750566482543945
    7. 'direction' → logprob: -15.125566482543945
    8. '  ' → logprob: -15.750566482543945
    9. 'Directions' → logprob: -15.875566482543945
    10. 'Directional' → logprob: -15.875566482543945

Token 73: '.RIGHT' (ID: 101392)
  Prédit: '.RIGHT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.RIGHT' → logprob: -0.10039784759283066
    2. '.' → logprob: -2.350397825241089
    3. '.LEFT' → logprob: -8.975398063659668
    4. ' .' → logprob: -10.850398063659668
    5. 'RIGHT' → logprob: -11.225398063659668
    6. '.
' → logprob: -11.475398063659668
    7. '.Right' → logprob: -11.850398063659668
    8. '   ' → logprob: -12.225398063659668
    9. ''.' → logprob: -12.850398063659668
    10. '.

' → logprob: -13.475398063659668

Token 74: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.005234475247561932
    2. 'else' → logprob: -5.255234241485596
    3. '}' → logprob: -15.630234718322754
    4. ')' → logprob: -15.755234718322754
    5. '	else' → logprob: -15.755234718322754
    6. ' ' → logprob: -16.880233764648438
    7. '}else' → logprob: -17.005233764648438
    8. '```' → logprob: -17.630233764648438
    9. 'Else' → logprob: -17.880233764648438
    10. '_else' → logprob: -18.755233764648438

Token 75: ' '' (ID: 461)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.13998553156852722
    2. ''' → logprob: -2.1399855613708496
    3. ' '' → logprob: -4.38998556137085
    4. ''A' → logprob: -8.389985084533691
    5. ''I' → logprob: -9.139985084533691
    6. '"L' → logprob: -9.889985084533691
    7. 'L' → logprob: -10.014985084533691
    8. ''Ar' → logprob: -10.389985084533691
    9. ' ' → logprob: -10.639985084533691
    10. ''S' → logprob: -10.889985084533691

Token 76: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0008226146455854177
    2. ''L' → logprob: -7.1258225440979
    3. ' L' → logprob: -11.500823020935059
    4. ''' → logprob: -12.375823020935059
    5. 'LEFT' → logprob: -13.875823020935059
    6. '`' → logprob: -14.000823020935059
    7. '"L' → logprob: -14.375823020935059
    8. '
' → logprob: -15.250823020935059
    9. ' ' → logprob: -15.375823020935059
    10. '	L' → logprob: -15.375823020935059

Token 77: ''})' (ID: 168657)
  Prédit: ''})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''})' → logprob: -0.031103109940886497
    2. '})' → logprob: -3.5311031341552734
    3. ''' → logprob: -7.531103134155273
    4. '}')' → logprob: -7.781103134155273
    5. '"})' → logprob: -8.656103134155273
    6. '}'' → logprob: -9.031103134155273
    7. ''}' → logprob: -9.781103134155273
    8. '')' → logprob: -10.781103134155273
    9. ' })' → logprob: -11.656103134155273
    10. ''])' → logprob: -12.531103134155273

Token 78: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00047595196519978344
    2. '")' → logprob: -7.875475883483887
    3. ')"' → logprob: -9.625475883483887
    4. '"
' → logprob: -11.500475883483887
    5. ')' → logprob: -12.125475883483887
    6. '"`' → logprob: -12.250475883483887
    7. '"}' → logprob: -12.875475883483887
    8. '```' → logprob: -13.000475883483887
    9. '"""' → logprob: -13.125475883483887
    10. ' "' → logprob: -13.875475883483887

Token 79: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031314898282289505
    2. 'def' → logprob: -3.6563148498535156
    3. '

' → logprob: -6.531314849853516
    4. '    
' → logprob: -6.656314849853516
    5. '```' → logprob: -7.656314849853516
    6. '   ' → logprob: -7.781314849853516
    7. 'd' → logprob: -8.281314849853516
    8. '\n' → logprob: -8.656314849853516
    9. 'class' → logprob: -8.781314849853516
    10. ' 
' → logprob: -8.781314849853516

Token 80: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.047267667949199677
    2. ' Game' → logprob: -3.5472676753997803
    3. ' Puzzle' → logprob: -4.672267436981201
    4. ' Space' → logprob: -6.047267436981201
    5. ' Piece' → logprob: -6.797267436981201
    6. ' ' → logprob: -7.172267436981201
    7. ' Chess' → logprob: -7.422267436981201
    8. ' Player' → logprob: -7.547267436981201
    9. ' Checker' → logprob: -7.922267436981201
    10. ' Solution' → logprob: -7.922267436981201

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006654949975199997
    2. '<|end|>' → logprob: -7.750665664672852
    3. '(' → logprob: -9.125665664672852
    4. ':
' → logprob: -9.750665664672852
    5. '):' → logprob: -10.500665664672852
    6. ' :' → logprob: -10.875665664672852
    7. '():' → logprob: -12.250665664672852
    8. '<|end|>' → logprob: -12.500665664672852
    9. '```' → logprob: -13.125665664672852
    10. '(object' → logprob: -13.250665664672852

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01901070401072502
    2. '(' → logprob: -4.769010543823242
    3. ':' → logprob: -5.019010543823242
    4. '    
' → logprob: -7.019010543823242
    5. '    ' → logprob: -7.144010543823242
    6. '```' → logprob: -7.769010543823242
    7. '<|end|>' → logprob: -8.144010543823242
    8. ':
' → logprob: -8.394010543823242
    9. 'def' → logprob: -8.394010543823242
    10. '(n' → logprob: -8.644010543823242

Token 83: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.29740798473358154
    2. 'def' (adapté à ' def') → logprob: -1.4224079847335815
    3. '   ' → logprob: -4.297408103942871
    4. '    ' → logprob: -6.047408103942871
    5. ' ' → logprob: -9.797408103942871
    6. 'de' → logprob: -9.797408103942871
    7. ' de' → logprob: -11.922408103942871
    8. '	def' → logprob: -11.922408103942871
    9. '  ' → logprob: -12.297408103942871
    10. '```' → logprob: -12.422408103942871

Token 84: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0026871829759329557
    2. ' _' → logprob: -6.502686977386475
    3. ' ' → logprob: -7.127686977386475
    4. '__' → logprob: -8.627687454223633
    5. '_' → logprob: -9.752687454223633
    6. '  ' → logprob: -9.877687454223633
    7. ' ```' → logprob: -10.877687454223633
    8. ' ' → logprob: -11.002687454223633
    9. ' ___' → logprob: -11.127687454223633
    10. ' init' → logprob: -11.502687454223633

Token 85: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0003886086633428931
    2. 'i' → logprob: -8.500388145446777
    3. '   ' → logprob: -9.125388145446777
    4. ' init' → logprob: -10.250388145446777
    5. 'in' → logprob: -11.000388145446777
    6. 'ini' → logprob: -11.125388145446777
    7. '  ' → logprob: -12.625388145446777
    8. ' i' → logprob: -13.125388145446777
    9. '    ' → logprob: -13.875388145446777
    10. 'def' → logprob: -14.125388145446777

Token 86: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4559307396411896
    2. '__(' → logprob: -1.5809307098388672
    3. '(self' → logprob: -1.9559307098388672
    4. ' (' → logprob: -4.955930709838867
    5. '<|end|>' → logprob: -5.955930709838867
    6. '_' → logprob: -6.205930709838867
    7. '__(
' → logprob: -6.330930709838867
    8. ')(' → logprob: -6.455930709838867
    9. '__' → logprob: -6.830930709838867
    10. '_(' → logprob: -7.330930709838867

Token 87: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028410146478563547
    2. ' self' → logprob: -6.502840995788574
    3. ')' → logprob: -6.627840995788574
    4. ' )' → logprob: -12.127840995788574
    5. '0' → logprob: -13.002840995788574
    6. ' ' → logprob: -13.377840995788574
    7. 'size' → logprob: -13.502840995788574
    8. '       ' → logprob: -14.377840995788574
    9. '   ' → logprob: -14.502840995788574
    10. '
' → logprob: -14.502840995788574

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5877417325973511
    2. ' ,' → logprob: -0.8377417325973511
    3. ')' → logprob: -5.212741851806641
    4. ' )' → logprob: -5.587741851806641
    5. ' ' → logprob: -6.462741851806641
    6. 'self' → logprob: -7.587741851806641
    7. '<|end|>' → logprob: -9.08774185180664
    8. ',
' → logprob: -9.71274185180664
    9. '_' → logprob: -9.96274185180664
    10. ',self' → logprob: -10.21274185180664

Token 89: ' length' (ID: 5517)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5328157544136047
    2. ' size' → logprob: -1.03281569480896
    3. 'self' → logprob: -3.28281569480896
    4. ' width' → logprob: -4.282815933227539
    5. 'size' → logprob: -5.532815933227539
    6. ' length' → logprob: -7.282815933227539
    7. 'width' → logprob: -8.657815933227539
    8. ' n' → logprob: -9.032815933227539
    9. 'n' → logprob: -9.157815933227539
    10. ' )' → logprob: -9.282815933227539

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7872376441955566
    2. ',' → logprob: -1.2872376441955566
    3. '):' → logprob: -1.9122376441955566
    4. '=' → logprob: -2.1622376441955566
    5. ')' → logprob: -5.287237644195557
    6. ':int' → logprob: -8.162237167358398
    7. ' ,' → logprob: -8.162237167358398
    8. ' ):' → logprob: -8.787237167358398
    9. '):
' → logprob: -9.412237167358398
    10. ',
' → logprob: -10.037237167358398

Token 91: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.29485878348350525
    2. 'int' → logprob: -1.4198588132858276
    3. ' ' → logprob: -4.419858932495117
    4. '10' → logprob: -7.419858932495117
    5. ')' → logprob: -8.044858932495117
    6. '20' → logprob: -8.419858932495117
    7. ' )' → logprob: -8.419858932495117
    8. ' 
' → logprob: -10.294858932495117
    9. ':int' → logprob: -10.419858932495117
    10. '16' → logprob: -10.669858932495117

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01695740595459938
    2. '):' → logprob: -4.1419572830200195
    3. ')' → logprob: -7.1419572830200195
    4. '   ' → logprob: -9.76695728302002
    5. ' ,' → logprob: -10.51695728302002
    6. '):
' → logprob: -11.14195728302002
    7. '       ' → logprob: -11.26695728302002
    8. ',
' → logprob: -11.39195728302002
    9. '),' → logprob: -13.26695728302002
    10. ':' → logprob: -13.39195728302002

Token 93: ' pieces' (ID: 12762)
  Prédit: ' pieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pieces' → logprob: -0.041565071791410446
    2. 'pieces' → logprob: -3.291565179824829
    3. ' initial' → logprob: -6.66656494140625
    4. '   ' → logprob: -7.66656494140625
    5. ' num' → logprob: -7.91656494140625
    6. ')' → logprob: -8.54156494140625
    7. ' arrows' → logprob: -8.66656494140625
    8. 'num' → logprob: -8.91656494140625
    9. ' piece' → logprob: -8.91656494140625
    10. ' ' → logprob: -9.16656494140625

Token 94: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0618138313293457
    2. '):' → logprob: -3.0618138313293457
    3. '=' → logprob: -5.061813831329346
    4. ')' → logprob: -5.061813831329346
    5. '=[]' → logprob: -8.186813354492188
    6. '=None' → logprob: -9.936813354492188
    7. ',' → logprob: -10.311813354492188
    8. ':list' → logprob: -10.436813354492188
    9. '):
' → logprob: -10.936813354492188
    10. ')=' → logprob: -11.186813354492188

Token 95: ' list' (ID: 1562)
  Prédit: ' [])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [])' → logprob: -0.9258103370666504
    2. '[' → logprob: -1.3008103370666504
    3. ')' → logprob: -2.5508103370666504
    4. ' list' → logprob: -2.6758103370666504
    5. 'List' → logprob: -3.1758103370666504
    6. ' )' → logprob: -3.8008103370666504
    7. ' []' → logprob: -3.8008103370666504
    8. 'list' → logprob: -3.8008103370666504
    9. '[List' → logprob: -3.8008103370666504
    10. ' List' → logprob: -4.17581033706665

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.044436026364564896
    2. '[' → logprob: -3.544435977935791
    3. '[int' → logprob: -4.419435977935791
    4. '):
' → logprob: -6.544435977935791
    5. ')' → logprob: -7.544435977935791
    6. '=' → logprob: -8.04443645477295
    7. '[list' → logprob: -10.04443645477295
    8. '[List' → logprob: -10.16943645477295
    9. '   ' → logprob: -10.29443645477295
    10. ':' → logprob: -10.79443645477295

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015649731503799558
    2. '<|end|>' → logprob: -7.251564979553223
    3. 'self' → logprob: -8.376564979553223
    4. ' self' → logprob: -8.626564979553223
    5. '        
' → logprob: -8.876564979553223
    6. '   ' → logprob: -9.001564979553223
    7. '
' → logprob: -10.501564979553223
    8. ')' → logprob: -10.751564979553223
    9. ',' → logprob: -10.876564979553223
    10. ':' → logprob: -11.001564979553223

Token 98: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8625659346580505
    2. 'self' (adapté à ' self') → logprob: -0.8625659346580505
    3. ' 
' → logprob: -2.9875659942626953
    4. ' ' → logprob: -3.1125659942626953
    5. '       ' → logprob: -3.3625659942626953
    6. ' ' → logprob: -4.237565994262695
    7. '  
' → logprob: -6.362565994262695
    8. '    ' → logprob: -6.487565994262695
    9. '        
' → logprob: -6.487565994262695
    10. '   ' → logprob: -6.487565994262695

Token 99: '.length' (ID: 3116)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013741609873250127
    2. '.length' → logprob: -6.751374244689941
    3. ' .' → logprob: -9.126374244689941
    4. ' ' → logprob: -10.251374244689941
    5. '.position' → logprob: -10.876374244689941
    6. '.space' → logprob: -11.626374244689941
    7. '.board' → logprob: -12.126374244689941
    8. ' =' → logprob: -12.376374244689941
    9. 'length' → logprob: -12.626374244689941
    10. ' length' → logprob: -13.001374244689941

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048608824610710144
    2. '=' → logprob: -3.0486087799072266
    3. ' ' → logprob: -11.923608779907227
    4. ' =
' → logprob: -11.923608779907227
    5. '<|end|>' → logprob: -12.048608779907227
    6. ')' → logprob: -13.923608779907227
    7. '<|end|>' → logprob: -15.298608779907227
    8. ',' → logprob: -15.423608779907227
    9. ' =)' → logprob: -15.548608779907227
    10. ' +=' → logprob: -15.923608779907227

Token 101: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.06198235973715782
    2. 'length' → logprob: -2.8119823932647705
    3. '(length' → logprob: -11.811982154846191
    4. '	length' → logprob: -12.936982154846191
    5. '[length' → logprob: -13.311982154846191
    6. ',length' → logprob: -13.936982154846191
    7. 'ength' → logprob: -14.436982154846191
    8. ' lenght' → logprob: -14.561982154846191
    9. ' ' → logprob: -14.936982154846191
    10. 'leng' → logprob: -15.311982154846191

Token 102: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001617035741219297
    2. 'self' → logprob: -9.500162124633789
    3. '
' → logprob: -10.500162124633789
    4. '<|end|>' → logprob: -10.500162124633789
    5. '        
' → logprob: -11.125162124633789
    6. '   ' → logprob: -12.625162124633789
    7. ',' → logprob: -12.625162124633789
    8. ' self' → logprob: -12.625162124633789
    9. '  
' → logprob: -13.875162124633789
    10. ' ' → logprob: -13.875162124633789

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05306756868958473
    2. '        
' → logprob: -3.428067684173584
    3. ' 
' → logprob: -5.178067684173584
    4. 'self' → logprob: -5.553067684173584
    5. '  
' → logprob: -6.053067684173584
    6. '
' → logprob: -6.303067684173584
    7. ' ' → logprob: -6.678067684173584
    8. '<|end|>' → logprob: -6.678067684173584
    9. ' self' → logprob: -6.928067684173584
    10. '    
' → logprob: -7.303067684173584

Token 104: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4028516113758087
    2. ' self' → logprob: -1.1528515815734863
    3. '       ' → logprob: -4.152851581573486
    4. ' ' → logprob: -9.777852058410645
    5. '   ' → logprob: -10.152852058410645
    6. '	self' → logprob: -11.152852058410645
    7. '        
' → logprob: -12.277852058410645
    8. '        ' → logprob: -12.527852058410645
    9. '      ' → logprob: -12.652852058410645
    10. '  ' → logprob: -12.777852058410645

Token 105: '.p' (ID: 1201)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.020665207877755165
    2. '.p' → logprob: -3.895665168762207
    3. '   ' → logprob: -10.645665168762207
    4. ' .' → logprob: -10.770665168762207
    5. '.positions' → logprob: -11.145665168762207
    6. '=' → logprob: -11.270665168762207
    7. '.
' → logprob: -11.520665168762207
    8. ' ' → logprob: -12.020665168762207
    9. 'pieces' → logprob: -12.145665168762207
    10. ' =' → logprob: -12.145665168762207

Token 106: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -1.6405310816480778e-05
    2. 'pieces' → logprob: -11.125016212463379
    3. '   ' → logprob: -15.000016212463379
    4. 'ie' → logprob: -15.000016212463379
    5. 'ices' → logprob: -15.375016212463379
    6. '```' → logprob: -15.375016212463379
    7. '#' → logprob: -16.125017166137695
    8. 'iece' → logprob: -16.250017166137695
    9. 'i' → logprob: -16.375017166137695
    10. 'iec' → logprob: -16.875017166137695

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895353227853775
    2. '=' → logprob: -2.4639534950256348
    3. ' ' → logprob: -11.963953971862793
    4. ' =
' → logprob: -12.713953971862793
    5. '.' → logprob: -12.838953971862793
    6. '_' → logprob: -14.713953971862793
    7. '<|end|>' → logprob: -14.963953971862793
    8. ')' → logprob: -15.213953971862793
    9. '.extend' → logprob: -15.588953971862793
    10. '[:]' → logprob: -16.463953018188477

Token 108: ' pieces' (ID: 12762)
  Prédit: ' pieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pieces' → logprob: -0.009848754853010178
    2. 'pieces' → logprob: -4.634848594665527
    3. ' list' → logprob: -10.259848594665527
    4. ' []' → logprob: -10.884848594665527
    5. ' [' → logprob: -11.009848594665527
    6. '[' → logprob: -11.384848594665527
    7. '[]' → logprob: -12.509848594665527
    8. '[p' → logprob: -13.009848594665527
    9. ' piezas' → logprob: -13.509848594665527
    10. ' ' → logprob: -13.884848594665527

Token 109: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006007956340909004
    2. '

' → logprob: -6.506008148193359
    3. '   ' → logprob: -6.506008148193359
    4. '<|end|>' → logprob: -6.756008148193359
    5. '    
' → logprob: -6.881008148193359
    6. '  
' → logprob: -7.756008148193359
    7. ' 
' → logprob: -8.88100814819336
    8. 'def' → logprob: -9.50600814819336
    9. '\n' → logprob: -10.50600814819336
    10. '<|end|>' → logprob: -10.75600814819336

Token 110: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01852915994822979
    2. '   ' → logprob: -5.018528938293457
    3. '<|end|>' → logprob: -5.268528938293457
    4. '    
' → logprob: -5.643528938293457
    5. 'def' → logprob: -6.268528938293457
    6. '

' → logprob: -7.518528938293457
    7. '  
' → logprob: -8.643528938293457
    8. '<|end|>' → logprob: -8.768528938293457
    9. ' 
' → logprob: -9.393528938293457
    10. '        
' → logprob: -10.143528938293457

Token 111: ' List' (ID: 2655)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.397573322057724
    2. ' [' → logprob: -1.8975733518600464
    3. '[' → logprob: -2.272573232650757
    4. ' sorted' → logprob: -3.522573232650757
    5. ' [
' → logprob: -4.022573471069336
    6. ' ' → logprob: -4.897573471069336
    7. '[
' → logprob: -5.022573471069336
    8. 'list' → logprob: -5.647573471069336
    9. '   ' → logprob: -6.397573471069336
    10. '[:]' → logprob: -6.522573471069336

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24058827757835388
    2. ' of' → logprob: -1.6155883073806763
    3. '<|end|>' → logprob: -4.615588188171387
    4. 'of' → logprob: -5.990588188171387
    5. '[
' → logprob: -6.490588188171387
    6. '[int' → logprob: -7.615588188171387
    7. '<|end|>' → logprob: -8.115588188171387
    8. '```' → logprob: -9.490588188171387
    9. '	of' → logprob: -10.240588188171387
    10. '   ' → logprob: -10.365588188171387

Token 113: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -0.048589304089546204
    2. ' Piece' → logprob: -3.0485892295837402
    3. 'Pie' → logprob: -14.423589706420898
    4. ' piece' → logprob: -14.673589706420898
    5. '_piece' → logprob: -15.173589706420898
    6. ')' → logprob: -15.673589706420898
    7. 'Pieces' → logprob: -16.0485897064209
    8. '   ' → logprob: -16.7985897064209
    9. ']' → logprob: -16.9235897064209
    10. ' ' → logprob: -17.0485897064209

Token 114: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003793304320424795
    2. ')' → logprob: -6.003793239593506
    3. '<|end|>' → logprob: -7.253793239593506
    4. ']
' → logprob: -8.253793716430664
    5. ' ]' → logprob: -8.378793716430664
    6. '<|end|>' → logprob: -10.253793716430664
    7. '])' → logprob: -10.753793716430664
    8. ')]' → logprob: -11.128793716430664
    9. '   ' → logprob: -11.128793716430664
    10. ']

' → logprob: -11.378793716430664

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061766826547682285
    2. '
' → logprob: -5.631176471710205
    3. '    
' → logprob: -6.256176471710205
    4. 'def' → logprob: -7.881176471710205
    5. '<|end|>' → logprob: -8.756176948547363
    6. ' def' → logprob: -10.256176948547363
    7. '<|end|>' → logprob: -10.881176948547363
    8. '  
' → logprob: -11.131176948547363
    9. '	def' → logprob: -11.631176948547363
    10. '        
' → logprob: -11.631176948547363

Token 116: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002106363419443369
    2. 'd' → logprob: -6.502106189727783
    3. ' def' → logprob: -8.127106666564941
    4. '   ' → logprob: -8.127106666564941
    5. 'de' → logprob: -11.377106666564941
    6. ' ' → logprob: -14.252106666564941
    7. '    
' → logprob: -15.252106666564941
    8. '

' → logprob: -16.127105712890625
    9. '  ' → logprob: -16.252105712890625
    10. '```' → logprob: -16.252105712890625

Token 117: ' calculate' (ID: 17950)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.021188100799918175
    2. ' def' → logprob: -5.271188259124756
    3. '_move' → logprob: -5.771188259124756
    4. ' get' → logprob: -6.021188259124756
    5. ' step' → logprob: -6.271188259124756
    6. ' display' → logprob: -6.396188259124756
    7. ' ' → logprob: -6.771188259124756
    8. ' advance' → logprob: -6.896188259124756
    9. ' reset' → logprob: -7.271188259124756
    10. ' simulate' → logprob: -7.271188259124756

Token 118: '_max' (ID: 13731)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.030129075050354
    2. '_' → logprob: -1.280129075050354
    3. '_moves' → logprob: -1.405129075050354
    4. '_positions' → logprob: -3.0301289558410645
    5. '_m' → logprob: -4.2801289558410645
    6. '_score' → logprob: -4.5301289558410645
    7. '_space' → logprob: -4.6551289558410645
    8. '_move' → logprob: -4.7801289558410645
    9. '_final' → logprob: -5.1551289558410645
    10. '_possible' → logprob: -5.6551289558410645

Token 119: '_score' (ID: 22555)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -1.1783192157745361
    2. '_steps' → logprob: -1.8033192157745361
    3. '_jump' → logprob: -2.053319215774536
    4. '_score' → logprob: -2.428319215774536
    5. '_move' → logprob: -3.053319215774536
    6. '_distance' → logprob: -3.053319215774536
    7. '_j' → logprob: -3.178319215774536
    8. '_' → logprob: -3.303319215774536
    9. '_overlap' → logprob: -3.553319215774536
    10. '_m' → logprob: -4.053318977355957

Token 120: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13224588334560394
    2. '(' → logprob: -2.1322457790374756
    3. ' (' → logprob: -5.257246017456055
    4. 'self' → logprob: -10.007246017456055
    5. '()' → logprob: -11.007246017456055
    6. '(
' → logprob: -11.882246017456055
    7. '   ' → logprob: -11.882246017456055
    8. '(s' → logprob: -12.507246017456055
    9. ' self' → logprob: -12.632246017456055
    10. '_' → logprob: -12.632246017456055

Token 121: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36381015181541443
    2. ',' → logprob: -1.3638101816177368
    3. 'self' → logprob: -3.2388100624084473
    4. '):
' → logprob: -5.488810062408447
    5. ' ,' → logprob: -6.238810062408447
    6. ')' → logprob: -6.363810062408447
    7. ' ):' → logprob: -6.488810062408447
    8. '   ' → logprob: -8.988810539245605
    9. ' self' → logprob: -9.238810539245605
    10. ',self' → logprob: -9.363810539245605

Token 122: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4341903328895569
    2. '(' → logprob: -1.559190273284912
    3. ':' → logprob: -2.059190273284912
    4. '       ' → logprob: -5.184190273284912
    5. '(
' → logprob: -5.309190273284912
    6. ':
' → logprob: -6.684190273284912
    7. '   ' → logprob: -6.934190273284912
    8. 'self' → logprob: -8.05919075012207
    9. ' :' → logprob: -8.43419075012207
    10. '(s' → logprob: -8.55919075012207

Token 123: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.008693872950971127
    2. 'int' → logprob: -4.758693695068359
    3. ' None' → logprob: -10.00869369506836
    4. ' ' → logprob: -10.38369369506836
    5. ' list' → logprob: -14.25869369506836
    6. 'None' → logprob: -14.50869369506836
    7. ' 
' → logprob: -14.63369369506836
    8. ' ' → logprob: -14.88369369506836
    9. '[int' → logprob: -15.00869369506836
    10. '	int' → logprob: -15.50869369506836

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006371197756379843
    2. ':
' → logprob: -5.756371021270752
    3. '       ' → logprob: -6.006371021270752
    4. '(self' → logprob: -7.881371021270752
    5. '(' → logprob: -8.88137149810791
    6. '):' → logprob: -9.63137149810791
    7. '   ' → logprob: -9.88137149810791
    8. ',' → logprob: -10.50637149810791
    9. 'self' → logprob: -11.25637149810791
    10. '):
' → logprob: -11.63137149810791

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005878663621842861
    2. '        
' → logprob: -6.755878448486328
    3. '\' → logprob: -7.130878448486328
    4. '    ' → logprob: -7.255878448486328
    5. '\n' → logprob: -7.630878448486328
    6. '#' → logprob: -7.755878448486328
    7. ' ' → logprob: -7.880878448486328
    8. 'n' → logprob: -7.880878448486328
    9. ' 
' → logprob: -8.130878448486328
    10. '
' → logprob: -8.255878448486328

Token 126: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3178809583187103
    2. '        ' → logprob: -2.192880868911743
    3. ' 
' → logprob: -3.317880868911743
    4. '       ' → logprob: -3.567880868911743
    5. ' #' → logprob: -3.692880868911743
    6. ' max' → logprob: -3.942880868911743
    7. ' if' → logprob: -4.817881107330322
    8. '    ' → logprob: -4.942881107330322
    9. '#' → logprob: -5.192881107330322
    10. 'n' → logprob: -5.317881107330322

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3880433440208435
    2. '#' → logprob: -1.3880434036254883
    3. ' #' → logprob: -3.5130434036254883
    4. 'n' → logprob: -4.263043403625488
    5. '        ' → logprob: -4.638043403625488
    6. ' ' → logprob: -5.513043403625488
    7. 'p' → logprob: -5.513043403625488
    8. 'i' → logprob: -6.763043403625488
    9. 'max' → logprob: -6.888043403625488
    10. '   ' → logprob: -7.013043403625488

Token 128: ' Calculate' (ID: 38942)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.9537379741668701
    2. '#' → logprob: -1.0787379741668701
    3. ' max' → logprob: -2.20373797416687
    4. 'max' → logprob: -3.70373797416687
    5. ' pass' → logprob: -3.82873797416687
    6. '       ' → logprob: -3.95373797416687
    7. ' """
' → logprob: -4.078738212585449
    8. 'def' → logprob: -4.453738212585449
    9. ' def' → logprob: -4.828738212585449
    10. ' result' → logprob: -4.953738212585449

Token 129: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.009661057963967323
    2. ' max' → logprob: -5.1346611976623535
    3. ' maximum' → logprob: -7.1346611976623535
    4. '<|end|>' → logprob: -7.1346611976623535
    5. 'the' → logprob: -7.3846611976623535
    6. 's' → logprob: -8.009660720825195
    7. ' ' → logprob: -8.259660720825195
    8. '_' → logprob: -8.634660720825195
    9. '_max' → logprob: -8.759660720825195
    10. 'max' → logprob: -8.884660720825195

Token 130: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.07803983241319656
    2. 'max' → logprob: -3.5780398845672607
    3. 'maximum' → logprob: -3.5780398845672607
    4. ' max' → logprob: -4.203039646148682
    5. ' maximal' → logprob: -6.203039646148682
    6. ' best' → logprob: -6.328039646148682
    7. ' highest' → logprob: -8.57804012298584
    8. 'best' → logprob: -10.07804012298584
    9. ' next' → logprob: -10.07804012298584
    10. ' number' → logprob: -10.07804012298584

Token 131: ' achievable' (ID: 118877)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.9832566976547241
    2. ' possible' → logprob: -1.1082566976547241
    3. '_' → logprob: -2.1082568168640137
    4. '_score' → logprob: -2.8582568168640137
    5. ' ' → logprob: -3.8582568168640137
    6. '_possible' → logprob: -3.8582568168640137
    7. ' number' → logprob: -4.108256816864014
    8. ' space' → logprob: -4.358256816864014
    9. ' _' → logprob: -4.983256816864014
    10. ' move' → logprob: -5.233256816864014

Token 132: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.02969564124941826
    2. '_score' → logprob: -3.779695749282837
    3. 'score' → logprob: -5.279695510864258
    4. '_' → logprob: -7.279695510864258
    5. ' number' → logprob: -8.154695510864258
    6. ' ' → logprob: -9.279695510864258
    7. ' points' → logprob: -9.779695510864258
    8. '	score' → logprob: -10.154695510864258
    9. ' continuous' → logprob: -11.029695510864258
    10. ' jump' → logprob: -11.154695510864258

Token 133: ' given' (ID: 4335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3665849566459656
    2. ' by' → logprob: -1.2415850162506104
    3. '        
' → logprob: -5.241584777832031
    4. '   ' → logprob: -5.491584777832031
    5. ' from' → logprob: -5.991584777832031
    6. ',' → logprob: -6.366584777832031
    7. '
' → logprob: -7.366584777832031
    8. '        ' → logprob: -7.741584777832031
    9. 'from' → logprob: -7.866584777832031
    10. '(self' → logprob: -7.866584777832031

Token 134: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03474161773920059
    2. ' self' → logprob: -3.6597416400909424
    3. ' a' → logprob: -5.534741401672363
    4. '<|end|>' → logprob: -7.034741401672363
    5. 'the' → logprob: -7.284741401672363
    6. ' an' → logprob: -7.534741401672363
    7. '<|end|>' → logprob: -7.909741401672363
    8. '       ' → logprob: -8.034741401672363
    9. ' ' → logprob: -8.159741401672363
    10. 'self' → logprob: -8.159741401672363

Token 135: ' problem' (ID: 4792)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.033446166664361954
    2. ' board' → logprob: -4.408446311950684
    3. ' pieces' → logprob: -5.033446311950684
    4. ' positions' → logprob: -5.658446311950684
    5. ' initial' → logprob: -5.783446311950684
    6. 'current' → logprob: -5.908446311950684
    7. ' moves' → logprob: -7.158446311950684
    8. ' state' → logprob: -7.533446311950684
    9. ' starting' → logprob: -7.533446311950684
    10. ' configuration' → logprob: -8.158446311950684

Token 136: ' constraints' (ID: 31060)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1663801670074463
    2. '<|end|>' → logprob: -1.1663801670074463
    3. ' constraints' → logprob: -2.0413801670074463
    4. '       ' → logprob: -2.7913801670074463
    5. '<|end|>' → logprob: -2.7913801670074463
    6. '    ' → logprob: -4.041379928588867
    7. '        
' → logprob: -4.416379928588867
    8. ' statement' → logprob: -4.666379928588867
    9. ' by' → logprob: -4.666379928588867
    10. '
' → logprob: -4.791379928588867

Token 137: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05516209453344345
    2. '<|end|>' → logprob: -4.180161952972412
    3. '.' → logprob: -4.305161952972412
    4. ',' → logprob: -4.680161952972412
    5. ':' → logprob: -5.555161952972412
    6. '
' → logprob: -5.680161952972412
    7. '<|end|>' → logprob: -5.680161952972412
    8. ' by' → logprob: -6.805161952972412
    9. '        
' → logprob: -7.180161952972412
    10. '#' → logprob: -7.430161952972412

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04771612957119942
    2. '<|end|>' → logprob: -4.04771614074707
    3. '        
' → logprob: -4.67271614074707
    4. '
' → logprob: -4.67271614074707
    5. ' 
' → logprob: -5.54771614074707
    6. '#' → logprob: -6.04771614074707
    7. '```' → logprob: -6.92271614074707
    8. '        ' → logprob: -7.42271614074707
    9. '<|end|>' → logprob: -7.42271614074707
    10. ' ' → logprob: -7.54771614074707

Token 139: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008748359978199005
    2. '        
' → logprob: -6.133748531341553
    3. '#' → logprob: -6.383748531341553
    4. '        ' → logprob: -6.633748531341553
    5. '
' → logprob: -7.008748531341553
    6. ' 
' → logprob: -7.008748531341553
    7. '```' → logprob: -7.758748531341553
    8. '<|end|>' → logprob: -8.133748054504395
    9. 'n' → logprob: -8.883748054504395
    10. '"""' → logprob: -8.883748054504395

Token 140: ' clever' (ID: 42218)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06497316807508469
    2. ' current' → logprob: -3.5649731159210205
    3. ' ' → logprob: -4.1899733543396
    4. ' best' → logprob: -5.1899733543396
    5. '    ' → logprob: -5.9399733543396
    6. '        ' → logprob: -6.6899733543396
    7. ' code' → logprob: -6.9399733543396
    8. ' max' → logprob: -7.0649733543396
    9. '_' → logprob: -7.1899733543396
    10. ' pieces' → logprob: -7.4399733543396

Token 141: ' approach' (ID: 7139)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16390247642993927
    2. 'est' → logprob: -2.538902521133423
    3. '_' → logprob: -3.413902521133423
    4. '    ' → logprob: -4.538902282714844
    5. ' approach' → logprob: -5.538902282714844
    6. 'er' → logprob: -6.038902282714844
    7. 'es' → logprob: -6.288902282714844
    8. '   ' → logprob: -6.288902282714844
    9. ' 
' → logprob: -6.288902282714844
    10. ' use' → logprob: -6.288902282714844

Token 142: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0984015464782715
    2. ' is' → logprob: -1.2234015464782715
    3. ' ' → logprob: -1.4734015464782715
    4. '       ' → logprob: -2.8484015464782715
    5. ' involves' → logprob: -3.9734015464782715
    6. '   ' → logprob: -4.2234015464782715
    7. ' :' → logprob: -4.5984015464782715
    8. ',' → logprob: -4.7234015464782715
    9. '    ' → logprob: -4.9734015464782715
    10. '<|end|>' → logprob: -5.4734015464782715

Token 143: ':
' (ID: 734)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0005443345289677382
    2. 'to' → logprob: -7.875544548034668
    3. ' not' → logprob: -9.750544548034668
    4. '        ' → logprob: -10.625544548034668
    5. ' ' → logprob: -10.750544548034668
    6. ' based' → logprob: -11.125544548034668
    7. ' ' → logprob: -11.500544548034668
    8. '    ' → logprob: -11.750544548034668
    9. ' that' → logprob: -11.875544548034668
    10. ' t' → logprob: -12.250544548034668

Token 144: '       ' (ID: 309)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.14637470245361328
    2. '       ' → logprob: -2.2713747024536133
    3. ' ' → logprob: -3.7713747024536133
    4. '        
' → logprob: -6.021374702453613
    5. '    ' → logprob: -6.271374702453613
    6. ' to' → logprob: -6.521374702453613
    7. ' 
' → logprob: -7.021374702453613
    8. 'n' → logprob: -7.771374702453613
    9. ' ' → logprob: -8.396374702453613
    10. '         
' → logprob: -8.396374702453613

Token 145: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8908436298370361
    2. ' Initialize' → logprob: -2.140843629837036
    3. ' #' → logprob: -2.390843629837036
    4. ' ' → logprob: -2.390843629837036
    5. ' to' → logprob: -2.765843629837036
    6. ' def' → logprob: -3.140843629837036
    7. ' Sort' → logprob: -3.140843629837036
    8. ' Use' → logprob: -3.390843629837036
    9. '#' → logprob: -3.390843629837036
    10. ' Split' → logprob: -3.640843629837036

Token 146: ' Sort' (ID: 25945)
  Prédit: ' Use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Use' → logprob: -0.8510524034500122
    2. ' Consider' → logprob: -1.8510524034500122
    3. ' Initialize' → logprob: -2.3510522842407227
    4. ' We' → logprob: -3.1010522842407227
    5. ' Identify' → logprob: -3.6010522842407227
    6. ' Sim' → logprob: -3.7260522842407227
    7. ' Count' → logprob: -3.8510522842407227
    8. ' Find' → logprob: -3.9760522842407227
    9. ' Reverse' → logprob: -3.9760522842407227
    10. ' Sort' → logprob: -3.9760522842407227

Token 147: ' pieces' (ID: 12762)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5907232165336609
    2. '(self' → logprob: -0.8407232165336609
    3. ' the' → logprob: -4.715723037719727
    4. ' self' → logprob: -5.965723037719727
    5. '(
' → logprob: -6.965723037719727
    6. ' (' → logprob: -7.090723037719727
    7. 'self' → logprob: -7.590723037719727
    8. ' by' → logprob: -8.215723037719727
    9. ')' → logprob: -9.215723037719727
    10. 'the' → logprob: -9.465723037719727

Token 148: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.15120261907577515
    2. 'by' → logprob: -3.15120267868042
    3. '(' → logprob: -3.40120267868042
    4. ',' → logprob: -3.65120267868042
    5. '       ' → logprob: -4.52620267868042
    6. '   ' → logprob: -4.65120267868042
    7. '<|end|>' → logprob: -5.90120267868042
    8. ')' → logprob: -6.27620267868042
    9. '_by' → logprob: -6.27620267868042
    10. '.' → logprob: -6.40120267868042

Token 149: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.5834625363349915
    2. ' their' → logprob: -0.9584625363349915
    3. 'position' → logprob: -3.2084624767303467
    4. 'their' → logprob: -4.208462715148926
    5. ' the' → logprob: -7.083462715148926
    6. ' a' → logprob: -7.458462715148926
    7. ' p' → logprob: -8.208462715148926
    8. ' direction' → logprob: -8.583462715148926
    9. ' ' → logprob: -8.833462715148926
    10. '   ' → logprob: -8.833462715148926

Token 150: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28722360730171204
    2. ',' → logprob: -1.5372235774993896
    3. '.' → logprob: -4.412223815917969
    4. ',
' → logprob: -4.787223815917969
    5. ')' → logprob: -5.412223815917969
    6. '<|end|>' → logprob: -5.662223815917969
    7. '   ' → logprob: -6.787223815917969
    8. '[' → logprob: -7.162223815917969
    9. '.sort' → logprob: -7.662223815917969
    10. '
' → logprob: -7.662223815917969

Token 151: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0054059028625488
    2. '       ' → logprob: -1.1304059028625488
    3. '
' → logprob: -2.380405902862549
    4. '        
' → logprob: -2.630405902862549
    5. '\' → logprob: -3.130405902862549
    6. ' ' → logprob: -3.255405902862549
    7. '\n' → logprob: -3.880405902862549
    8. '        ' → logprob: -3.880405902862549
    9. '  
' → logprob: -5.005405902862549
    10. '' → logprob: -5.505405902862549

Token 152: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16940602660179138
    2. '\n' → logprob: -2.794405937194824
    3. '        ' → logprob: -3.544405937194824
    4. ' 
' → logprob: -3.919405937194824
    5. '        
' → logprob: -4.169405937194824
    6. '
' → logprob: -4.419405937194824
    7. ' ' → logprob: -4.544405937194824
    8. '\' → logprob: -6.294405937194824
    9. '```' → logprob: -6.419405937194824
    10. '  
' → logprob: -7.294405937194824

Token 153: ' The' (ID: 623)
  Prédit: ' Initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Initialize' → logprob: -1.0808508396148682
    2. ' def' → logprob: -1.8308508396148682
    3. 'Initialize' → logprob: -2.330850839614868
    4. ' Split' → logprob: -2.830850839614868
    5. ' Calculate' → logprob: -3.830850839614868
    6. ' Find' → logprob: -3.830850839614868
    7. '       ' → logprob: -3.955850839614868
    8. ' #' → logprob: -4.080850601196289
    9. ' Iterate' → logprob: -4.080850601196289
    10. ' Consider' → logprob: -4.205850601196289

Token 154: ' final' (ID: 1721)
  Prédit: ' pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pieces' → logprob: -1.3315808773040771
    2. 'n' → logprob: -2.081580877304077
    3. ' n' → logprob: -2.331580877304077
    4. ' max' → logprob: -2.706580877304077
    5. ' next' → logprob: -2.956580877304077
    6. 're' → logprob: -2.956580877304077
    7. ' positions' → logprob: -2.956580877304077
    8. ' score' → logprob: -3.206580877304077
    9. ' scores' → logprob: -3.331580877304077
    10. ' left' → logprob: -3.706580877304077

Token 155: ' positions' (ID: 15897)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8889797329902649
    2. ' result' → logprob: -2.38897967338562
    3. ' _' → logprob: -2.38897967338562
    4. ' positions' → logprob: -2.76397967338562
    5. '_score' → logprob: -2.76397967338562
    6. ' ' → logprob: -3.13897967338562
    7. ' score' → logprob: -3.38897967338562
    8. '_positions' → logprob: -3.51397967338562
    9. ' piece' → logprob: -4.013979911804199
    10. ' "' → logprob: -4.513979911804199

Token 156: ' will' (ID: 738)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.29895538091659546
    2. ' of' → logprob: -1.6739554405212402
    3. ' must' → logprob: -4.04895544052124
    4. ' can' → logprob: -4.17395544052124
    5. ' for' → logprob: -4.29895544052124
    6. ' ' → logprob: -5.17395544052124
    7. ' will' → logprob: -5.17395544052124
    8. ' should' → logprob: -5.92395544052124
    9. ' to' → logprob: -6.42395544052124
    10. '   ' → logprob: -6.67395544052124

Token 157: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.032948222011327744
    2. ' not' → logprob: -4.782948017120361
    3. ' always' → logprob: -5.032948017120361
    4. ' depend' → logprob: -5.407948017120361
    5. 'be' → logprob: -6.407948017120361
    6. ' alternate' → logprob: -6.407948017120361
    7. ' either' → logprob: -6.532948017120361
    8. ' remain' → logprob: -6.657948017120361
    9. ' all' → logprob: -6.657948017120361
    10. ' only' → logprob: -7.032948017120361

Token 158: ' each' (ID: 2454)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1699671745300293
    2. ' the' → logprob: -2.0449671745300293
    3. ' in' → logprob: -2.5449671745300293
    4. ' such' → logprob: -2.6699671745300293
    5. ' either' → logprob: -3.0449671745300293
    6. ' all' → logprob: -3.4199671745300293
    7. ' sorted' → logprob: -3.4199671745300293
    8. ' an' → logprob: -3.4199671745300293
    9. ' non' → logprob: -3.5449671745300293
    10. 'a' → logprob: -3.6699671745300293

Token 159: ' piece' (ID: 9047)
  Prédit: ' piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' piece' → logprob: -0.429989755153656
    2. ' of' → logprob: -2.054989814758301
    3. ' occupied' → logprob: -3.054989814758301
    4. 'piece' → logprob: -3.179989814758301
    5. ' position' → logprob: -3.554989814758301
    6. 'occupied' → logprob: -3.554989814758301
    7. 'position' → logprob: -4.304989814758301
    8. ' at' → logprob: -4.429989814758301
    9. ' unique' → logprob: -4.554989814758301
    10. ' token' → logprob: -5.054989814758301

Token 160: ' placed' (ID: 12989)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.9330024123191833
    2. ' ' → logprob: -1.5580024719238281
    3. ''s' → logprob: -2.433002471923828
    4. '+' → logprob: -2.558002471923828
    5. ',' → logprob: -3.308002471923828
    6. ' separated' → logprob: -3.433002471923828
    7. ' either' → logprob: -3.558002471923828
    8. ' +' → logprob: -3.558002471923828
    9. ' in' → logprob: -3.683002471923828
    10. ' assigned' → logprob: -4.558002471923828

Token 161: ' in' (ID: 306)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.4763430655002594
    2. ' in' → logprob: -1.476343035697937
    3. ' ' → logprob: -2.3513431549072266
    4. ' between' → logprob: -3.3513431549072266
    5. ' on' → logprob: -4.976343154907227
    6. ',' → logprob: -5.976343154907227
    7. 'at' → logprob: -6.226343154907227
    8. ' exactly' → logprob: -6.351343154907227
    9. 'in' → logprob: -6.601343154907227
    10. ' either' → logprob: -7.101343154907227

Token 162: ' distinct' (ID: 16913)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.19886192679405212
    2. ' the' → logprob: -2.948861837387085
    3. ' range' → logprob: -3.198861837387085
    4. ' an' → logprob: -3.448861837387085
    5. ' their' → logprob: -4.198862075805664
    6. ' one' → logprob: -4.698862075805664
    7. ' positions' → logprob: -4.698862075805664
    8. ' its' → logprob: -5.573862075805664
    9. 'range' → logprob: -5.573862075805664
    10. ' ' → logprob: -5.823862075805664

Token 163: ' cells' (ID: 11242)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.012658794410526752
    2. ' spots' → logprob: -5.262658596038818
    3. 'positions' → logprob: -5.637658596038818
    4. ' spaces' → logprob: -7.262658596038818
    5. ' places' → logprob: -7.387658596038818
    6. ',' → logprob: -7.387658596038818
    7. ' locations' → logprob: -7.887658596038818
    8. ' position' → logprob: -8.137659072875977
    9. ' indices' → logprob: -8.637659072875977
    10. ' integers' → logprob: -8.637659072875977

Token 164: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18210795521736145
    2. '.' → logprob: -2.557107925415039
    3. ' ,' → logprob: -3.807107925415039
    4. '       ' → logprob: -4.307107925415039
    5. ' ' → logprob: -4.432107925415039
    6. '<|end|>' → logprob: -4.932107925415039
    7. ' in' → logprob: -5.057107925415039
    8. ' that' → logprob: -5.182107925415039
    9. ',
' → logprob: -5.432107925415039
    10. ' after' → logprob: -5.557107925415039

Token 165: ' ascending' (ID: 75564)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.344917893409729
    2. ' a' → logprob: -1.594917893409729
    3. ' increasing' → logprob: -1.969917893409729
    4. ' range' → logprob: -2.4699177742004395
    5. ' sorted' → logprob: -2.7199177742004395
    6. 'range' → logprob: -2.8449177742004395
    7. 'the' → logprob: -3.3449177742004395
    8. ' an' → logprob: -3.5949177742004395
    9. 'sorted' → logprob: -3.5949177742004395
    10. ' order' → logprob: -3.8449177742004395

Token 166: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.0008404768304899335
    2. ' positions' → logprob: -7.625840663909912
    3. 'order' → logprob: -8.250840187072754
    4. ' position' → logprob: -10.250840187072754
    5. 'positions' → logprob: -10.875840187072754
    6. '<|end|>' → logprob: -11.375840187072754
    7. ' ' → logprob: -11.625840187072754
    8. ' sequence' → logprob: -12.875840187072754
    9. '_order' → logprob: -13.250840187072754
    10. 'position' → logprob: -13.500840187072754

Token 167: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5618487000465393
    2. ' of' → logprob: -1.6868486404418945
    3. '.' → logprob: -1.9368486404418945
    4. '       ' → logprob: -2.5618486404418945
    5. ' from' → logprob: -4.5618486404418945
    6. ' to' → logprob: -6.1868486404418945
    7. ' after' → logprob: -6.8118486404418945
    8. '   ' → logprob: -6.9368486404418945
    9. ' ,' → logprob: -6.9368486404418945
    10. ' starting' → logprob: -7.0618486404418945

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025415359996259212
    2. '        
' → logprob: -6.252541542053223
    3. '\n' → logprob: -9.002541542053223
    4. '        ' → logprob: -9.127541542053223
    5. '   ' → logprob: -9.877541542053223
    6. '\' → logprob: -10.002541542053223
    7. '
' → logprob: -10.002541542053223
    8. '```' → logprob: -10.377541542053223
    9. '<|end|>' → logprob: -10.502541542053223
    10. '#' → logprob: -10.627541542053223

Token 169: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004421127669047564
    2. '        
' → logprob: -8.125442504882812
    3. '   ' → logprob: -10.375442504882812
    4. '        ' → logprob: -10.500442504882812
    5. '```' → logprob: -11.250442504882812
    6. '#' → logprob: -11.375442504882812
    7. '      ' → logprob: -11.375442504882812
    8. '
' → logprob: -11.750442504882812
    9. '    ' → logprob: -12.000442504882812
    10. '           ' → logprob: -12.375442504882812

Token 170: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0149295330047607
    2. ' The' → logprob: -2.3899295330047607
    3. ' Calculate' → logprob: -2.5149295330047607
    4. 'Calculate' → logprob: -2.8899295330047607
    5. 'We' → logprob: -3.0149295330047607
    6. ' We' → logprob: -3.0149295330047607
    7. ' For' → logprob: -3.3899295330047607
    8. 'The' → logprob: -3.5149295330047607
    9. ' Initialize' → logprob: -3.8899295330047607
    10. '#' → logprob: -4.26492977142334

Token 171: ' assign' (ID: 14975)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030150892212986946
    2. ' can' → logprob: -4.905150890350342
    3. '   ' → logprob: -5.530150890350342
    4. '       ' → logprob: -5.780150890350342
    5. ' need' → logprob: -6.030150890350342
    6. '_' → logprob: -6.280150890350342
    7. 'n' → logprob: -6.405150890350342
    8. ' ' → logprob: -6.655150890350342
    9. ' def' → logprob: -7.405150890350342
    10. ''' → logprob: -7.405150890350342

Token 172: ' final' (ID: 1721)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.0266261100769043
    2. ' positions' → logprob: -1.7766261100769043
    3. ' the' → logprob: -1.9016261100769043
    4. ' final' → logprob: -2.6516261100769043
    5. ' pieces' → logprob: -3.2766261100769043
    6. ' scores' → logprob: -3.5266261100769043
    7. ' new' → logprob: -3.5266261100769043
    8. ' initial' → logprob: -3.7766261100769043
    9. 'final' → logprob: -3.7766261100769043
    10. 'positions' → logprob: -3.7766261100769043

Token 173: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.3840920627117157
    2. ' positions' → logprob: -1.384092092514038
    3. 'positions' → logprob: -3.009092092514038
    4. '_' → logprob: -4.134091854095459
    5. '_position' → logprob: -6.009091854095459
    6. ' =' → logprob: -9.009092330932617
    7. '_pos' → logprob: -9.259092330932617
    8. 'position' → logprob: -9.634092330932617
    9. ' to' → logprob: -10.009092330932617
    10. ' position' → logprob: -10.384092330932617

Token 174: ' as' (ID: 472)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2423476129770279
    2. ' =' → logprob: -2.3673477172851562
    3. ' based' → logprob: -3.3673477172851562
    4. '=' → logprob: -3.4923477172851562
    5. ' as' → logprob: -3.8673477172851562
    6. ' in' → logprob: -4.617347717285156
    7. 'to' → logprob: -4.867347717285156
    8. ' according' → logprob: -5.117347717285156
    9. ' that' → logprob: -5.867347717285156
    10. ' for' → logprob: -6.117347717285156

Token 175: ' a' (ID: 261)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7330566644668579
    2. ' the' → logprob: -1.358056664466858
    3. ' sorted' → logprob: -1.858056664466858
    4. ' positions' → logprob: -3.4830565452575684
    5. ' a' → logprob: -3.9830565452575684
    6. 'range' → logprob: -4.108056545257568
    7. ' [' → logprob: -4.483056545257568
    8. ' list' → logprob: -4.608056545257568
    9. ' self' → logprob: -4.983056545257568
    10. 'sorted' → logprob: -5.858056545257568

Token 176: ' strictly' (ID: 38971)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22895531356334686
    2. 'range' → logprob: -1.7289552688598633
    3. ' list' → logprob: -3.9789552688598633
    4. ' sorted' → logprob: -5.728955268859863
    5. 'r' → logprob: -6.353955268859863
    6. 'n' → logprob: -6.478955268859863
    7. 'sorted' → logprob: -7.728955268859863
    8. 'list' → logprob: -8.353955268859863
    9. ' sequence' → logprob: -8.478955268859863
    10. ' self' → logprob: -8.478955268859863

Token 177: ' increasing' (ID: 11293)
  Prédit: ' increasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increasing' → logprob: -0.25813549757003784
    2. 'in' → logprob: -1.5081355571746826
    3. 'ascending' → logprob: -5.7581353187561035
    4. ' ascending' → logprob: -6.5081353187561035
    5. 'sorted' → logprob: -8.383135795593262
    6. ' sorted' → logprob: -8.383135795593262
    7. 'increment' → logprob: -8.633135795593262
    8. ' incremental' → logprob: -8.633135795593262
    9. ' strictly' → logprob: -9.008135795593262
    10. 'strict' → logprob: -9.008135795593262

Token 178: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.19299925863742828
    2. 'sequence' → logprob: -1.817999243736267
    3. ' list' → logprob: -4.442999362945557
    4. 'list' → logprob: -6.692999362945557
    5. 'range' → logprob: -9.692998886108398
    6. ' range' → logprob: -10.317998886108398
    7. 'array' → logprob: -10.692998886108398
    8. ' array' → logprob: -11.192998886108398
    9. ' integer' → logprob: -12.192998886108398
    10. '[' → logprob: -12.817998886108398

Token 179: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.274653673171997
    2. ' starting' → logprob: -1.274653673171997
    3. ' from' → logprob: -1.649653673171997
    4. ' of' → logprob: -1.649653673171997
    5. '<|end|>' → logprob: -4.399653434753418
    6. ' ,' → logprob: -4.899653434753418
    7. '       ' → logprob: -4.899653434753418
    8. 'from' → logprob: -5.024653434753418
    9. ' that' → logprob: -5.149653434753418
    10. ' ' → logprob: -5.274653434753418

Token 180: ' maximize' (ID: 44207)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.48165223002433777
    2. ' each' → logprob: -2.23165225982666
    3. ' all' → logprob: -2.98165225982666
    4. 'the' → logprob: -3.23165225982666
    5. ' range' → logprob: -3.48165225982666
    6. ' pieces' → logprob: -3.60665225982666
    7. 'each' → logprob: -3.98165225982666
    8. ' maximize' → logprob: -3.98165225982666
    9. ' match' → logprob: -4.10665225982666
    10. ' self' → logprob: -4.23165225982666

Token 181: ' total' (ID: 3609)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.02813173457980156
    2. 'the' → logprob: -3.7781317234039307
    3. ' their' → logprob: -6.27813196182251
    4. ' score' → logprob: -7.15313196182251
    5. 'score' → logprob: -7.90313196182251
    6. ' scores' → logprob: -7.90313196182251
    7. ' distances' → logprob: -8.028131484985352
    8. ' spacing' → logprob: -8.278131484985352
    9. ' space' → logprob: -8.903131484985352
    10. 'distance' → logprob: -9.153131484985352

Token 182: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.5617371201515198
    2. ' distance' → logprob: -1.561737060546875
    3. ' positions' → logprob: -2.936737060546875
    4. ' distances' → logprob: -3.186737060546875
    5. '_' → logprob: -3.311737060546875
    6. '_score' → logprob: -4.061737060546875
    7. ' scores' → logprob: -4.186737060546875
    8. ' spacing' → logprob: -4.561737060546875
    9. ' difference' → logprob: -4.686737060546875
    10. ' position' → logprob: -4.936737060546875

Token 183: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18449440598487854
    2. '.' → logprob: -2.1844944953918457
    3. ',' → logprob: -2.9344944953918457
    4. ':' → logprob: -6.684494495391846
    5. '        ' → logprob: -8.559494018554688
    6. ' ,' → logprob: -8.559494018554688
    7. '
' → logprob: -8.934494018554688
    8. '        
' → logprob: -9.059494018554688
    9. ' for' → logprob: -9.559494018554688
    10. ',
' → logprob: -9.684494018554688

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4598884880542755
    2. '
' → logprob: -1.0848884582519531
    3. '        
' → logprob: -4.459888458251953
    4. '\n' → logprob: -5.209888458251953
    5. '<|end|>' → logprob: -5.334888458251953
    6. '\' → logprob: -6.334888458251953
    7. ' 
' → logprob: -6.459888458251953
    8. '        ' → logprob: -6.834888458251953
    9. '```' → logprob: -7.209888458251953
    10. 'n' → logprob: -7.209888458251953

Token 185: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13182072341442108
    2. '
' → logprob: -2.1318206787109375
    3. '        
' → logprob: -5.7568206787109375
    4. '```' → logprob: -7.6318206787109375
    5. '\n' → logprob: -7.8818206787109375
    6. ' 
' → logprob: -8.631820678710938
    7. '        ' → logprob: -8.756820678710938
    8. 'n' → logprob: -9.506820678710938
    9. '<|end|>' → logprob: -9.631820678710938
    10. '#' → logprob: -10.006820678710938

Token 186: ' Score' (ID: 30731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023143570870161057
    2. '        ' → logprob: -5.148143768310547
    3. ' Initialize' → logprob: -6.273143768310547
    4. '        
' → logprob: -6.648143768310547
    5. ' current' → logprob: -6.648143768310547
    6. 'We' → logprob: -6.773143768310547
    7. ' ' → logprob: -7.148143768310547
    8. ' We' → logprob: -7.148143768310547
    9. ' max' → logprob: -7.148143768310547
    10. 'Let's' → logprob: -7.148143768310547

Token 187: ' formula' (ID: 20690)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09296666830778122
    2. '=' → logprob: -3.3429665565490723
    3. ' is' → logprob: -3.4679665565490723
    4. ' ' → logprob: -4.467966556549072
    5. 's' → logprob: -4.717966556549072
    6. ' +=' → logprob: -7.217966556549072
    7. '_' → logprob: -7.967966556549072
    8. '   ' → logprob: -8.96796703338623
    9. ' per' → logprob: -9.84296703338623
    10. ' for' → logprob: -9.84296703338623

Token 188: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030734827741980553
    2. '=' → logprob: -4.155735015869141
    3. ':' → logprob: -4.405735015869141
    4. ' is' → logprob: -7.155735015869141
    5. '   ' → logprob: -7.280735015869141
    6. '       ' → logprob: -8.15573501586914
    7. ' for' → logprob: -8.40573501586914
    8. ' ' → logprob: -9.15573501586914
    9. ' :' → logprob: -9.90573501586914
    10. '    ' → logprob: -10.78073501586914

Token 189: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.21248191595077515
    2. ' a' → logprob: -2.58748197555542
    3. 'each' → logprob: -2.58748197555542
    4. ' piece' → logprob: -3.71248197555542
    5. ' i' → logprob: -5.33748197555542
    6. 'a' → logprob: -6.08748197555542
    7. ' the' → logprob: -6.33748197555542
    8. ' moving' → logprob: -6.46248197555542
    9. ' position' → logprob: -6.46248197555542
    10. ' final' → logprob: -6.83748197555542

Token 190: ' piece' (ID: 9047)
  Prédit: ' piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' piece' → logprob: -0.0019476758316159248
    2. ' ' → logprob: -7.25194787979126
    3. 'piece' → logprob: -7.87694787979126
    4. ' position' → logprob: -8.126947402954102
    5. ')' → logprob: -9.001947402954102
    6. '_piece' → logprob: -9.001947402954102
    7. '(piece' → logprob: -9.626947402954102
    8. ' final' → logprob: -10.126947402954102
    9. ' token' → logprob: -10.251947402954102
    10. ' cell' → logprob: -10.501947402954102

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9384634494781494
    2. ' =' → logprob: -1.0634634494781494
    3. ' is' → logprob: -1.9384634494781494
    4. '=' → logprob: -2.8134634494781494
    5. ' ' → logprob: -3.8134634494781494
    6. ')' → logprob: -5.06346321105957
    7. '(' → logprob: -5.68846321105957
    8. '   ' → logprob: -5.68846321105957
    9. ' +=' → logprob: -5.68846321105957
    10. ' (' → logprob: -5.93846321105957

Token 192: '         ' (ID: 983)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6442054510116577
    2. '       ' → logprob: -1.3942054510116577
    3. '           ' → logprob: -2.7692055702209473
    4. ' self' → logprob: -3.8942055702209473
    5. '(self' → logprob: -4.019205570220947
    6. '```' → logprob: -4.019205570220947
    7. '
' → logprob: -4.394205570220947
    8. '        ' → logprob: -4.644205570220947
    9. ' return' → logprob: -4.894205570220947
    10. ' position' → logprob: -5.019205570220947

Token 193: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.318130373954773
    2. ' abs' → logprob: -1.318130373954773
    3. ' max' → logprob: -1.693130373954773
    4. 'abs' → logprob: -2.3181304931640625
    5. ' self' → logprob: -3.3181304931640625
    6. ' score' → logprob: -3.8181304931640625
    7. '           ' → logprob: -3.9431304931640625
    8. ' final' → logprob: -4.0681304931640625
    9. 'max' → logprob: -4.5681304931640625
    10. 'score' → logprob: -4.5681304931640625

Token 194: 'if' (ID: 366)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7688704133033752
    2. ' self' → logprob: -1.1438703536987305
    3. ' final' → logprob: -2.5188703536987305
    4. 'final' → logprob: -3.5188703536987305
    5. ' abs' → logprob: -3.6438703536987305
    6. 'abs' → logprob: -4.2688703536987305
    7. ' (' → logprob: -4.6438703536987305
    8. 'length' → logprob: -4.6438703536987305
    9. '1' → logprob: -4.7688703536987305
    10. ' piece' → logprob: -4.8938703536987305

Token 195: ' moving' (ID: 10067)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.048656631261110306
    2. 'self' → logprob: -3.173656702041626
    3. ' piece' → logprob: -5.548656463623047
    4. ' p' → logprob: -7.673656463623047
    5. ' direction' → logprob: -8.048656463623047
    6. 'piece' → logprob: -8.423656463623047
    7. ' s' → logprob: -9.048656463623047
    8. ' ' → logprob: -9.173656463623047
    9. ' not' → logprob: -9.298656463623047
    10. ' arrow' → logprob: -9.423656463623047

Token 196: ' in' (ID: 306)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.7727704048156738
    2. ' to' → logprob: -2.147770404815674
    3. ' >' → logprob: -2.147770404815674
    4. '_' → logprob: -2.522770404815674
    5. '_right' → logprob: -2.522770404815674
    6. ' the' → logprob: -2.772770404815674
    7. ')' → logprob: -2.772770404815674
    8. ' right' → logprob: -2.772770404815674
    9. ' ' → logprob: -2.897770404815674
    10. ' _' → logprob: -3.397770404815674

Token 197: ' arrow' (ID: 33823)
  Prédit: 'Arrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Arrow' → logprob: -0.3693872094154358
    2. ' Arrow' → logprob: -1.244387149810791
    3. 'Right' → logprob: -4.869387149810791
    4. ' the' → logprob: -5.494387149810791
    5. 'the' → logprob: -6.244387149810791
    6. ' ' → logprob: -6.744387149810791
    7. 'self' → logprob: -6.994387149810791
    8. ' direction' → logprob: -7.119387149810791
    9. ')' → logprob: -7.369387149810791
    10. '   ' → logprob: -7.494387149810791

Token 198: ' direction' (ID: 9262)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.48014748096466064
    2. '_direction' → logprob: -1.3551474809646606
    3. ' ' → logprob: -2.980147361755371
    4. ')' → logprob: -4.230147361755371
    5. ' direction' → logprob: -4.355147361755371
    6. 'direction' → logprob: -4.605147361755371
    7. '   ' → logprob: -5.230147361755371
    8. '_' → logprob: -5.230147361755371
    9. '_DIRECTION' → logprob: -5.730147361755371
    10. '  ' → logprob: -5.980147361755371

Token 199: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2828177511692047
    2. ' )' → logprob: -2.032817840576172
    3. ' and' → logprob: -3.907817840576172
    4. '):' → logprob: -4.032817840576172
    5. ',' → logprob: -4.157817840576172
    6. '):
' → logprob: -4.157817840576172
    7. '==' → logprob: -4.907817840576172
    8. ' ==' → logprob: -5.157817840576172
    9. '   ' → logprob: -5.407817840576172
    10. ' to' → logprob: -5.907817840576172

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6363524794578552
    2. ' ' → logprob: -1.1363525390625
    3. ' (' → logprob: -2.7613525390625
    4. ' self' → logprob: -3.5113525390625
    5. ')' → logprob: -4.0113525390625
    6. 'self' → logprob: -4.3863525390625
    7. '(self' → logprob: -4.8863525390625
    8. '2' → logprob: -5.3863525390625
    9. '0' → logprob: -6.1363525390625
    10. '   ' → logprob: -6.3863525390625

Token 201: ' per' (ID: 777)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2049037516117096
    2. ' )' → logprob: -2.0799038410186768
    3. ' else' → logprob: -3.5799038410186768
    4. ' *' → logprob: -4.954903602600098
    5. ' +' → logprob: -5.454903602600098
    6. ' ' → logprob: -5.579903602600098
    7. '*' → logprob: -6.079903602600098
    8. '   ' → logprob: -6.079903602600098
    9. ' -' → logprob: -6.204903602600098
    10. ')*' → logprob: -6.579903602600098

Token 202: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5545303225517273
    2. ' cell' → logprob: -1.929530382156372
    3. 'step' → logprob: -1.929530382156372
    4. 'cell' → logprob: -3.679530382156372
    5. ' unit' → logprob: -3.679530382156372
    6. ' position' → logprob: -3.804530382156372
    7. 'position' → logprob: -4.429530143737793
    8. ' ' → logprob: -4.554530143737793
    9. ' move' → logprob: -4.929530143737793
    10. 'unit' → logprob: -5.304530143737793

Token 203: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22659027576446533
    2. ' )' → logprob: -1.6015902757644653
    3. '),' → logprob: -9.226590156555176
    4. '   ' → logprob: -9.226590156555176
    5. ')+' → logprob: -9.226590156555176
    6. ',' → logprob: -9.351590156555176
    7. ' for' → logprob: -9.601590156555176
    8. '       ' → logprob: -9.726590156555176
    9. ' )
' → logprob: -9.726590156555176
    10. ')
' → logprob: -9.976590156555176

Token 204: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7600752711296082
    2. '         ' → logprob: -1.760075330734253
    3. '          ' → logprob: -2.635075330734253
    4. ' then' → logprob: -3.010075330734253
    5. ' ' → logprob: -3.385075330734253
    6. '        ' → logprob: -3.510075330734253
    7. ')' → logprob: -3.510075330734253
    8. 'else' → logprob: -3.635075330734253
    9. '       ' → logprob: -3.885075330734253
    10. '           ' → logprob: -4.010075092315674

Token 205: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5594732165336609
    2. '-' → logprob: -1.3094732761383057
    3. ' ' → logprob: -2.3094732761383057
    4. '1' → logprob: -4.059473037719727
    5. '0' → logprob: -4.184473037719727
    6. ' *' → logprob: -5.309473037719727
    7. ' abs' → logprob: -5.684473037719727
    8. ')' → logprob: -6.059473037719727
    9. ' (' → logprob: -6.059473037719727
    10. ' subtract' → logprob: -6.309473037719727

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12850426137447357
    2. ' ' → logprob: -2.1285042762756348
    3. ' per' → logprob: -7.128504276275635
    4. ' -' → logprob: -8.503503799438477
    5. '-' → logprob: -9.378503799438477
    6. 'per' → logprob: -9.753503799438477
    7. ' step' → logprob: -9.753503799438477
    8. ')' → logprob: -9.753503799438477
    9. 'steps' → logprob: -10.191003799438477
    10. '+' → logprob: -10.503503799438477

Token 207: ' per' (ID: 777)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028786838054656982
    2. ' per' → logprob: -4.403786659240723
    3. ' )' → logprob: -4.528786659240723
    4. 'per' → logprob: -6.153786659240723
    5. ')
' → logprob: -7.653786659240723
    6. '   ' → logprob: -7.778786659240723
    7. '*' → logprob: -8.028786659240723
    8. ')*' → logprob: -8.153786659240723
    9. ' *' → logprob: -8.278786659240723
    10. ' ' → logprob: -8.528786659240723

Token 208: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.16057057678699493
    2. 'step' → logprob: -1.9105706214904785
    3. ' ' → logprob: -9.16057014465332
    4. '_step' → logprob: -9.78557014465332
    5. '-step' → logprob: -10.16057014465332
    6. '	step' → logprob: -10.41057014465332
    7. ' space' → logprob: -10.91057014465332
    8. ' move' → logprob: -11.16057014465332
    9. 'space' → logprob: -11.28557014465332
    10. ' steps' → logprob: -11.53557014465332

Token 209: '.)
' (ID: 32616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05883689969778061
    2. ' )' → logprob: -3.1838369369506836
    3. '       ' → logprob: -4.433836936950684
    4. '   ' → logprob: -6.683836936950684
    5. ')
' → logprob: -7.183836936950684
    6. '         ' → logprob: -8.433836936950684
    7. ' )
' → logprob: -8.933836936950684
    8. ' ' → logprob: -9.058836936950684
    9. '),' → logprob: -9.058836936950684
    10. '     ' → logprob: -9.183836936950684

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02849617972970009
    2. '        
' → logprob: -4.903496265411377
    3. '        ' → logprob: -5.278496265411377
    4. '
' → logprob: -5.403496265411377
    5. ')' → logprob: -5.903496265411377
    6. '   ' → logprob: -6.403496265411377
    7. '\n' → logprob: -7.028496265411377
    8. '<|end|>' → logprob: -7.028496265411377
    9. ' ' → logprob: -7.278496265411377
    10. ' 
' → logprob: -7.403496265411377

Token 211: ' There's' (ID: 32711)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0059648193418979645
    2. '        
' → logprob: -6.005964756011963
    3. '        ' → logprob: -6.880964756011963
    4. '"""' → logprob: -7.380964756011963
    5. '
' → logprob: -8.255965232849121
    6. '   ' → logprob: -8.255965232849121
    7. '"""
' → logprob: -8.505965232849121
    8. '"' → logprob: -8.630965232849121
    9. '\n' → logprob: -8.880965232849121
    10. ')' → logprob: -9.130965232849121

Token 212: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.11447548866271973
    2. ' an' → logprob: -3.1144754886627197
    3. ' no' → logprob: -4.239475250244141
    4. 'a' → logprob: -4.364475250244141
    5. ' more' → logprob: -4.364475250244141
    6. ' ' → logprob: -4.614475250244141
    7. '    ' → logprob: -5.739475250244141
    8. ' only' → logprob: -5.989475250244141
    9. '
' → logprob: -6.114475250244141
    10. '   ' → logprob: -6.614475250244141

Token 213: ' known' (ID: 5542)
  Prédit: ' missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' missing' → logprob: -1.7739953994750977
    2. ' constraint' → logprob: -1.7739953994750977
    3. ' space' → logprob: -2.0239953994750977
    4. ' return' → logprob: -3.1489953994750977
    5. 'space' → logprob: -3.1489953994750977
    6. ' gap' → logprob: -3.2739953994750977
    7. 'def' → logprob: -3.3989953994750977
    8. ' line' → logprob: -3.3989953994750977
    9. ' limit' → logprob: -3.6489953994750977
    10. ' blank' → logprob: -3.6489953994750977

Token 214: ' formula' (ID: 20690)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -0.43351122736930847
    2. ' approach' → logprob: -2.933511257171631
    3. ' formula' → logprob: -3.058511257171631
    4. ' method' → logprob: -3.433511257171631
    5. ' result' → logprob: -3.558511257171631
    6. ' combin' → logprob: -3.683511257171631
    7. ' mathematical' → logprob: -3.808511257171631
    8. '```' → logprob: -4.058511257171631
    9. ' solution' → logprob: -4.308511257171631
    10. ' way' → logprob: -4.308511257171631

Token 215: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7124755382537842
    2. ' for' → logprob: -1.2124755382537842
    3. ' :' → logprob: -2.212475538253784
    4. ',' → logprob: -3.587475538253784
    5. ' ' → logprob: -3.962475538253784
    6. ' ,' → logprob: -4.587475776672363
    7. '_' → logprob: -4.712475776672363
    8. ' :
' → logprob: -4.837475776672363
    9. ' that' → logprob: -5.087475776672363
    10. '
' → logprob: -5.587475776672363

Token 216: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003568469313904643
    2. '        ' → logprob: -6.378568649291992
    3. '        
' → logprob: -7.128568649291992
    4. '           ' → logprob: -7.628568649291992
    5. ')' → logprob: -8.378568649291992
    6. '   ' → logprob: -10.253568649291992
    7. '```' → logprob: -10.628568649291992
    8. '    ' → logprob: -10.628568649291992
    9. '      ' → logprob: -10.753568649291992
    10. '#' → logprob: -10.878568649291992

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011294675059616566
    2. '        ' → logprob: -6.386294841766357
    3. ' max' → logprob: -6.386294841766357
    4. '           ' → logprob: -7.136294841766357
    5. ' total' → logprob: -7.136294841766357
    6. 'max' → logprob: -7.261294841766357
    7. '        
' → logprob: -7.511294841766357
    8. ' for' → logprob: -7.511294841766357
    9. ' def' → logprob: -7.761294841766357
    10. 'def' → logprob: -8.0112943649292

Token 218: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7332952618598938
    2. 'max' (adapté à ' max') → logprob: -1.733295202255249
    3. ' n' → logprob: -1.983295202255249
    4. 'n' → logprob: -2.733295202255249
    5. '       ' → logprob: -3.858295202255249
    6. '#' → logprob: -4.108295440673828
    7. ' final' → logprob: -4.233295440673828
    8. ' def' → logprob: -4.983295440673828
    9. ' #' → logprob: -5.108295440673828
    10. ' total' → logprob: -5.108295440673828

Token 219: ' score' (ID: 8429)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0677056834101677
    2. '_score' → logprob: -3.4427056312561035
    3. '(' → logprob: -3.5677056312561035
    4. '_position' → logprob: -6.4427056312561035
    5. '_possible' → logprob: -7.5677056312561035
    6. '(
' → logprob: -7.6927056312561035
    7. '_positions' → logprob: -7.8177056312561035
    8. '_pos' → logprob: -8.192706108093262
    9. '\' → logprob: -8.317706108093262
    10. ' _' → logprob: -8.442706108093262

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14543360471725464
    2. '=' → logprob: -2.0204336643218994
    3. ':' → logprob: -6.39543342590332
    4. '   ' → logprob: -7.52043342590332
    5. ' is' → logprob: -8.64543342590332
    6. ' =
' → logprob: -8.89543342590332
    7. '       ' → logprob: -9.52043342590332
    8. ',' → logprob: -10.39543342590332
    9. '_' → logprob: -10.77043342590332
    10. '```' → logprob: -11.14543342590332

Token 221: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6420448422431946
    2. ' self' → logprob: -1.0170447826385498
    3. 'sum' → logprob: -2.64204478263855
    4. 'self' → logprob: -4.017045021057129
    5. ' max' → logprob: -4.142045021057129
    6. ' (' → logprob: -6.142045021057129
    7. 'max' → logprob: -6.517045021057129
    8. '0' → logprob: -7.017045021057129
    9. ' ' → logprob: -7.267045021057129
    10. ' length' → logprob: -8.142045021057129

Token 222: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02947007492184639
    2. '((' → logprob: -4.529469966888428
    3. '([' → logprob: -5.029469966888428
    4. '(
' → logprob: -5.779469966888428
    5. '(p' → logprob: -5.904469966888428
    6. '(abs' → logprob: -6.029469966888428
    7. '(i' → logprob: -6.779469966888428
    8. '([(' → logprob: -7.029469966888428
    9. '(self' → logprob: -8.404470443725586
    10. 'abs' → logprob: -8.654470443725586

Token 223: ' pieces' (ID: 12762)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9506751894950867
    2. ' i' → logprob: -1.4506752490997314
    3. ' pieces' → logprob: -2.3256752490997314
    4. ' p' → logprob: -2.3256752490997314
    5. 'i' → logprob: -2.7006752490997314
    6. ' piece' → logprob: -3.2006752490997314
    7. ' range' → logprob: -3.5756752490997314
    8. ' self' → logprob: -4.325675010681152
    9. 'all' → logprob: -4.950675010681152
    10. 'p' → logprob: -5.325675010681152

Token 224: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09920927882194519
    2. '(
' → logprob: -3.0992093086242676
    3. ' of' → logprob: -4.724209308624268
    4. '       ' → logprob: -4.974209308624268
    5. '[' → logprob: -5.099209308624268
    6. '(i' → logprob: -5.224209308624268
    7. '   ' → logprob: -5.349209308624268
    8. ' for' → logprob: -6.099209308624268
    9. '(self' → logprob: -6.349209308624268
    10. ' (' → logprob: -6.474209308624268

Token 225: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -1.001957654953003
    2. 'abs' → logprob: -1.376957654953003
    3. ' (' → logprob: -1.751957654953003
    4. '(abs' → logprob: -2.251957654953003
    5. ' max' → logprob: -3.626957654953003
    6. 'max' → logprob: -3.876957654953003
    7. ' ((' → logprob: -4.251957893371582
    8. '((' → logprob: -4.751957893371582
    9. '(max' → logprob: -5.001957893371582
    10. '(' → logprob: -5.001957893371582

Token 226: '(final' (ID: 14111)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2622740864753723
    2. '(piece' → logprob: -1.7622740268707275
    3. '(p' → logprob: -3.2622740268707275
    4. '(' → logprob: -4.012274265289307
    5. '(final' → logprob: -6.512274265289307
    6. '(position' → logprob: -7.137274265289307
    7. '(
' → logprob: -8.762273788452148
    8. '((' → logprob: -9.387273788452148
    9. '(pos' → logprob: -10.637273788452148
    10. '(P' → logprob: -11.387273788452148

Token 227: '_pos' (ID: 14692)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.12923340499401093
    2. 'position' → logprob: -2.8792333602905273
    3. ' position' → logprob: -3.3792333602905273
    4. '_positions' → logprob: -4.129233360290527
    5. '_' → logprob: -4.629233360290527
    6. '_pos' → logprob: -7.129233360290527
    7. ' positions' → logprob: -7.254233360290527
    8. ' _' → logprob: -7.254233360290527
    9. 'positions' → logprob: -7.379233360290527
    10. ' ' → logprob: -7.379233360290527

Token 228: '_i' (ID: 10853)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.15772336721420288
    2. '-' → logprob: -2.5327234268188477
    3. ')' → logprob: -3.2827234268188477
    4. '[' → logprob: -4.532723426818848
    5. 's' → logprob: -4.657723426818848
    6. '[i' → logprob: -5.782723426818848
    7. '_' → logprob: -6.657723426818848
    8. ' ' → logprob: -7.032723426818848
    9. '   ' → logprob: -7.282723426818848
    10. '+' → logprob: -7.532723426818848

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012399571016430855
    2. '-' → logprob: -4.762399673461914
    3. ')' → logprob: -5.762399673461914
    4. ' ' → logprob: -8.262399673461914
    5. ' )' → logprob: -8.512399673461914
    6. '[' → logprob: -9.887399673461914
    7. '_' → logprob: -10.762399673461914
    8. '[i' → logprob: -11.012399673461914
    9. ' +' → logprob: -11.887399673461914
    10. ',' → logprob: -12.012399673461914

Token 230: ' initial' (ID: 4871)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0319013595581055
    2. 'piece' → logprob: -1.4069013595581055
    3. ' pieces' → logprob: -1.7819013595581055
    4. ' self' → logprob: -2.2819013595581055
    5. 'pieces' → logprob: -2.5319013595581055
    6. ' piece' → logprob: -3.1569013595581055
    7. 'p' → logprob: -6.1569013595581055
    8. 'position' → logprob: -6.9069013595581055
    9. ' p' → logprob: -7.0319013595581055
    10. 'initial' → logprob: -7.9069013595581055

Token 231: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.4670397937297821
    2. '_position' → logprob: -1.2170398235321045
    3. '_' → logprob: -2.5920398235321045
    4. ' _' → logprob: -7.217039585113525
    5. '_i' → logprob: -7.342039585113525
    6. '_positions' → logprob: -8.342040061950684
    7. ')_' → logprob: -8.592040061950684
    8. ')' → logprob: -8.717040061950684
    9. 'position' → logprob: -9.967040061950684
    10. '_)' → logprob: -10.092040061950684

Token 232: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.013817442581057549
    2. 'i' → logprob: -4.638817310333252
    3. ')' → logprob: -6.138817310333252
    4. ')_' → logprob: -7.013817310333252
    5. '[i' → logprob: -8.13881778717041
    6. '_' → logprob: -8.26381778717041
    7. 's' → logprob: -8.51381778717041
    8. '[' → logprob: -9.13881778717041
    9. 'ition' → logprob: -9.51381778717041
    10. '_)' → logprob: -10.88881778717041

Token 233: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022638519294559956
    2. ' )' → logprob: -6.377264022827148
    3. '       ' → logprob: -8.377264022827148
    4. ')
' → logprob: -8.877264022827148
    5. ')`' → logprob: -9.627264022827148
    6. '))' → logprob: -10.752264022827148
    7. '   ' → logprob: -10.752264022827148
    8. '),' → logprob: -11.252264022827148
    9. ')+' → logprob: -11.627264022827148
    10. '+' → logprob: -11.752264022827148

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.457015722990036
    2. ' but' → logprob: -2.7070157527923584
    3. ' where' → logprob: -3.4570157527923584
    4. ' considering' → logprob: -3.4570157527923584
    5. ' as' → logprob: -3.5820157527923584
    6. ' and' → logprob: -3.7070157527923584
    7. ' then' → logprob: -3.9570157527923584
    8. ' assuming' → logprob: -3.9570157527923584
    9. ' because' → logprob: -4.082015514373779
    10. ' so' → logprob: -4.707015514373779

Token 235: ' minus' (ID: 40335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6207053065299988
    2. ' but' → logprob: -1.9957053661346436
    3. ' because' → logprob: -2.7457053661346436
    4. ' as' → logprob: -3.2457053661346436
    5. ' since' → logprob: -3.6207053661346436
    6. ' ignoring' → logprob: -3.7457053661346436
    7. ' assuming' → logprob: -4.1207051277160645
    8. ' considering' → logprob: -4.1207051277160645
    9. 'since' → logprob: -4.3707051277160645
    10. ' and' → logprob: -4.3707051277160645

Token 236: ' twice' (ID: 18370)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6603144407272339
    2. ' sum' → logprob: -1.6603144407272339
    3. ' len' → logprob: -2.4103145599365234
    4. ' self' → logprob: -2.6603145599365234
    5. ' number' → logprob: -3.2853145599365234
    6. ' (' → logprob: -3.5353145599365234
    7. ' ' → logprob: -3.6603145599365234
    8. ' abs' → logprob: -4.035314559936523
    9. '1' → logprob: -5.660314559936523
    10. 'sum' → logprob: -5.785314559936523

Token 237: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09769358485937119
    2. 'the' → logprob: -2.847693681716919
    3. ' sum' → logprob: -3.972693681716919
    4. 'sum' → logprob: -4.34769344329834
    5. ' min' → logprob: -7.09769344329834
    6. ' times' → logprob: -7.09769344329834
    7. 'min' → logprob: -7.09769344329834
    8. ' max' → logprob: -8.59769344329834
    9. 'max' → logprob: -9.09769344329834
    10. ' abs' → logprob: -9.09769344329834

Token 238: ' sum' (ID: 4215)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.059346944093704224
    2. 'number' → logprob: -3.184346914291382
    3. ' sum' → logprob: -4.559347152709961
    4. 'sum' → logprob: -6.309347152709961
    5. ' minimum' → logprob: -6.684347152709961
    6. ' total' → logprob: -7.684347152709961
    7. ' count' → logprob: -7.809347152709961
    8. ' ' → logprob: -8.059347152709961
    9. 'minimum' → logprob: -8.059347152709961
    10. 'min' → logprob: -8.309347152709961

Token 239: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.027814574539661407
    2. ' over' → logprob: -3.6528146266937256
    3. 'of' → logprob: -6.9028143882751465
    4. 'over' → logprob: -8.402814865112305
    5. ' ' → logprob: -9.027814865112305
    6. '(' → logprob: -10.527814865112305
    7. '	of' → logprob: -10.527814865112305
    8. ' (' → logprob: -10.902814865112305
    9. '_of' → logprob: -11.027814865112305
    10. '[' → logprob: -11.152814865112305

Token 240: ' movements' (ID: 33806)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.7767064571380615
    2. 'abs' → logprob: -2.5267064571380615
    3. '(piece' → logprob: -2.5267064571380615
    4. ' abs' → logprob: -2.6517064571380615
    5. '(abs' → logprob: -2.6517064571380615
    6. 'positions' → logprob: -2.9017064571380615
    7. '(i' → logprob: -3.0267064571380615
    8. ' the' → logprob: -3.0267064571380615
    9. '(' → logprob: -3.5267064571380615
    10. 'pieces' → logprob: -3.6517064571380615

Token 241: ' against' (ID: 4372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43889811635017395
    2. ' ' → logprob: -1.5638980865478516
    3. '_' → logprob: -3.3138980865478516
    4. ' )' → logprob: -4.188898086547852
    5. '.' → logprob: -4.313898086547852
    6. '<|end|>' → logprob: -4.438898086547852
    7. '   ' → logprob: -4.563898086547852
    8. '
' → logprob: -4.813898086547852
    9. '(' → logprob: -5.438898086547852
    10. '  ' → logprob: -5.688898086547852

Token 242: ' arrow' (ID: 33823)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.780518114566803
    2. ' the' → logprob: -1.0305180549621582
    3. 'direction' → logprob: -2.155518054962158
    4. ' direction' → logprob: -2.780518054962158
    5. '_direction' → logprob: -6.280518054962158
    6. ' their' → logprob: -6.780518054962158
    7. ' ' → logprob: -6.905518054962158
    8. 'their' → logprob: -7.280518054962158
    9. '_arrow' → logprob: -7.530518054962158
    10. 'arrow' → logprob: -7.655518054962158

Token 243: ' direction' (ID: 9262)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4675847887992859
    2. ')' → logprob: -1.3425848484039307
    3. '   ' → logprob: -2.7175848484039307
    4. ')
' → logprob: -4.467584609985352
    5. '
' → logprob: -5.467584609985352
    6. ' ' → logprob: -5.592584609985352
    7. '_' → logprob: -5.842584609985352
    8. '}' → logprob: -5.967584609985352
    9. ' )' → logprob: -6.092584609985352
    10. '.' → logprob: -6.217584609985352

Token 244: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1697065681219101
    2. '
' → logprob: -2.2947065830230713
    3. '        
' → logprob: -3.6697065830230713
    4. '\' → logprob: -5.169706344604492
    5. '\n' → logprob: -5.169706344604492
    6. '   ' → logprob: -5.294706344604492
    7. '.' → logprob: -6.169706344604492
    8. ')
' → logprob: -6.419706344604492
    9. ':' → logprob: -6.544706344604492
    10. ')' → logprob: -6.794706344604492

Token 245: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008709711022675037
    2. '        
' → logprob: -5.133709907531738
    3. '\n' → logprob: -7.008709907531738
    4. '\' → logprob: -7.758709907531738
    5. '
' → logprob: -8.008709907531738
    6. '<|end|>' → logprob: -8.883709907531738
    7. '   ' → logprob: -9.008709907531738
    8. ')' → logprob: -9.008709907531738
    9. '```' → logprob: -9.008709907531738
    10. '"' → logprob: -9.258709907531738

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01898357644677162
    2. '        
' → logprob: -4.393983364105225
    3. '
' → logprob: -5.268983364105225
    4. '"""
' → logprob: -7.893983364105225
    5. '"""' → logprob: -8.143983840942383
    6. '```' → logprob: -9.268983840942383
    7. '        ' → logprob: -9.393983840942383
    8. '   ' → logprob: -9.768983840942383
    9. 'Let's' → logprob: -10.018983840942383
    10. '\n' → logprob: -10.518983840942383

Token 247: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013907498680055141
    2. '        
' → logprob: -5.388907432556152
    3. '
' → logprob: -6.013907432556152
    4. '"""' → logprob: -6.388907432556152
    5. '```' → logprob: -7.138907432556152
    6. '\n' → logprob: -7.138907432556152
    7. ')' → logprob: -7.263907432556152
    8. '        ' → logprob: -7.513907432556152
    9. '   ' → logprob: -7.638907432556152
    10. '"""
' → logprob: -8.138907432556152

Token 248: ' the' (ID: 290)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.7220260500907898
    2. '       ' → logprob: -0.8470260500907898
    3. ' the' → logprob: -3.5970261096954346
    4. ' we' → logprob: -3.5970261096954346
    5. ' you' → logprob: -5.4720258712768555
    6. '    ' → logprob: -5.5970258712768555
    7. ' ' → logprob: -5.5970258712768555
    8. '        
' → logprob: -5.8470258712768555
    9. ' for' → logprob: -6.0970258712768555
    10. ' here' → logprob: -6.5970258712768555

Token 249: ' optimal' (ID: 24174)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8321905136108398
    2. ' code' → logprob: -1.8321905136108398
    3. ' def' → logprob: -1.9571905136108398
    4. ' ' → logprob: -2.70719051361084
    5. ' final' → logprob: -2.70719051361084
    6. 'def' → logprob: -2.70719051361084
    7. ' current' → logprob: -2.83219051361084
    8. ' rest' → logprob: -2.95719051361084
    9. ' best' → logprob: -3.58219051361084
    10. '   ' → logprob: -3.70719051361084

Token 250: ' final' (ID: 1721)
  Prédit: ' final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' final' → logprob: -1.2320300340652466
    2. 'final' → logprob: -1.7320300340652466
    3. '_positions' → logprob: -1.7320300340652466
    4. 'positions' → logprob: -2.857029914855957
    5. ' positions' → logprob: -2.982029914855957
    6. ' solution' → logprob: -3.232029914855957
    7. '_final' → logprob: -3.357029914855957
    8. ' code' → logprob: -3.982029914855957
    9. '
' → logprob: -4.357029914855957
    10. ' approach' → logprob: -4.482029914855957

Token 251: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.115432508289814
    2. 'positions' → logprob: -3.2404325008392334
    3. '_' → logprob: -3.6154325008392334
    4. '_pos' → logprob: -3.9904325008392334
    5. ' positions' → logprob: -4.2404327392578125
    6. '_position' → logprob: -4.8654327392578125
    7. 'position' → logprob: -6.9904327392578125
    8. ' _' → logprob: -7.4904327392578125
    9. 'pos' → logprob: -7.9904327392578125
    10. '   ' → logprob: -8.990432739257812

Token 252: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.12608902156352997
    2. ' =' → logprob: -2.376089096069336
    3. ' is' → logprob: -5.001089096069336
    4. '=' → logprob: -5.251089096069336
    5. ' can' → logprob: -5.626089096069336
    6. '<|end|>' → logprob: -6.001089096069336
    7. ' must' → logprob: -6.126089096069336
    8. ',' → logprob: -6.626089096069336
    9. ' ' → logprob: -7.376089096069336
    10. 'are' → logprob: -7.626089096069336

Token 253: ' either' (ID: 4784)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7076412439346313
    2. '[' → logprob: -2.332641124725342
    3. ' range' → logprob: -2.332641124725342
    4. 'range' → logprob: -2.457641124725342
    5. 'the' → logprob: -2.957641124725342
    6. ' [' → logprob: -2.957641124725342
    7. ' list' → logprob: -3.332641124725342
    8. ' sorted' → logprob: -3.582641124725342
    9. ' a' → logprob: -4.082641124725342
    10. 'sorted' → logprob: -4.207641124725342

Token 254: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3955554962158203
    2. 'the' → logprob: -2.1455554962158203
    3. ' a' → logprob: -2.6455554962158203
    4. '[' → logprob: -3.6455554962158203
    5. 'a' → logprob: -3.8955554962158203
    6. ' all' → logprob: -4.02055549621582
    7. 'self' → logprob: -4.27055549621582
    8. 'equal' → logprob: -4.89555549621582
    9. ' equal' → logprob: -5.02055549621582
    10. ' self' → logprob: -5.02055549621582

Token 255: ' sorted' (ID: 20099)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.0515575408935547
    2. 'range' → logprob: -1.9265575408935547
    3. 'positions' → logprob: -2.1765575408935547
    4. ' initial' → logprob: -2.9265575408935547
    5. 'sorted' → logprob: -2.9265575408935547
    6. 'pieces' → logprob: -3.0515575408935547
    7. '0' → logprob: -3.6765575408935547
    8. ' range' → logprob: -3.8015575408935547
    9. 'same' → logprob: -3.8015575408935547
    10. ' list' → logprob: -4.051557540893555

Token 256: ' initial' (ID: 4871)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6678629517555237
    2. ' list' → logprob: -1.542862892150879
    3. 'list' → logprob: -2.417862892150879
    4. ' positions' → logprob: -2.542862892150879
    5. '[' → logprob: -3.042862892150879
    6. ' initial' → logprob: -3.667862892150879
    7. 'initial' → logprob: -4.042862892150879
    8. '_positions' → logprob: -5.792862892150879
    9. '(initial' → logprob: -6.167862892150879
    10. ' array' → logprob: -6.542862892150879

Token 257: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.006507182493805885
    2. '_' → logprob: -5.506507396697998
    3. 'positions' → logprob: -7.006507396697998
    4. ' positions' → logprob: -7.631507396697998
    5. '_pos' → logprob: -7.756507396697998
    6. ' _' → logprob: -8.25650691986084
    7. '_position' → logprob: -9.25650691986084
    8. '```' → logprob: -9.63150691986084
    9. '_initial' → logprob: -10.00650691986084
    10. '_p' → logprob: -10.25650691986084

Token 258: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2113867998123169
    2. 'or' → logprob: -2.5863866806030273
    3. ',' → logprob: -2.9613866806030273
    4. '   ' → logprob: -4.336386680603027
    5. '[:]' → logprob: -4.461386680603027
    6. '[' → logprob: -4.961386680603027
    7. '+' → logprob: -4.961386680603027
    8. ' +' → logprob: -5.086386680603027
    9. ')' → logprob: -6.086386680603027
    10. '.' → logprob: -6.211386680603027

Token 259: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6581546068191528
    2. 'a' → logprob: -1.4081546068191528
    3. ' the' → logprob: -3.0331544876098633
    4. ' an' → logprob: -3.1581544876098633
    5. ' their' → logprob: -3.6581544876098633
    6. 'range' → logprob: -3.7831544876098633
    7. 'the' → logprob: -3.7831544876098633
    8. ' range' → logprob: -4.408154487609863
    9. ' shifted' → logprob: -4.533154487609863
    10. 'an' → logprob: -4.783154487609863

Token 260: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.5522907376289368
    2. 'sorted' → logprob: -1.552290678024292
    3. ' range' → logprob: -2.802290678024292
    4. ' next' → logprob: -2.927290678024292
    5. ' positions' → logprob: -4.177290916442871
    6. 'range' → logprob: -4.427290916442871
    7. 'positions' → logprob: -4.927290916442871
    8. 'next' → logprob: -5.052290916442871
    9. ' initial' → logprob: -5.052290916442871
    10. ' ones' → logprob: -5.052290916442871

Token 261: ' positions' (ID: 15897)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.39504361152648926
    2. ' positions' → logprob: -1.7700436115264893
    3. ' final' → logprob: -3.0200436115264893
    4. 'positions' → logprob: -3.6450436115264893
    5. 'initial' → logprob: -3.7700436115264893
    6. 'final' → logprob: -4.27004337310791
    7. '_positions' → logprob: -4.77004337310791
    8. '_initial' → logprob: -5.14504337310791
    9. ' range' → logprob: -5.39504337310791
    10. ' list' → logprob: -5.64504337310791

Token 262: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8469797372817993
    2. ',' → logprob: -1.9719797372817993
    3. '_' → logprob: -2.3469796180725098
    4. '+' → logprob: -2.5969796180725098
    5. '[' → logprob: -2.7219796180725098
    6. ')' → logprob: -2.7219796180725098
    7. '.' → logprob: -2.7219796180725098
    8. ' +' → logprob: -3.0969796180725098
    9. '_sorted' → logprob: -3.4719796180725098
    10. ' ' → logprob: -3.5969796180725098

Token 263: ' some' (ID: 1236)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.966248095035553
    2. ' some' → logprob: -1.5912480354309082
    3. ' all' → logprob: -2.716248035430908
    4. ' range' → logprob: -2.966248035430908
    5. '+' → logprob: -3.341248035430908
    6. ' +' → logprob: -3.466248035430908
    7. ' one' → logprob: -3.716248035430908
    8. ' a' → logprob: -3.841248035430908
    9. 'some' → logprob: -3.966248035430908
    10. ' offsets' → logprob: -4.091248035430908

Token 264: ' fixed' (ID: 13213)
  Prédit: ' offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' offset' → logprob: -1.3778568506240845
    2. 'offset' → logprob: -1.7528568506240845
    3. 'shift' → logprob: -1.8778568506240845
    4. ' adjustments' → logprob: -2.127856731414795
    5. ' shift' → logprob: -2.377856731414795
    6. ' shifts' → logprob: -2.877856731414795
    7. 'adjust' → logprob: -3.377856731414795
    8. ' adjustment' → logprob: -3.502856731414795
    9. ' padding' → logprob: -3.752856731414795
    10. ' offsets' → logprob: -3.877856731414795

Token 265: ' offset' (ID: 8985)
  Prédit: ' offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' offset' → logprob: -0.5659909248352051
    2. 'offset' → logprob: -1.065990924835205
    3. ' offsets' → logprob: -3.065990924835205
    4. ' shift' → logprob: -4.440990924835205
    5. ' shifts' → logprob: -5.065990924835205
    6. ' increment' → logprob: -5.315990924835205
    7. 'shift' → logprob: -5.315990924835205
    8. ' increments' → logprob: -5.940990924835205
    9. '+' → logprob: -6.565990924835205
    10. 'increment' → logprob: -6.690990924835205

Token 266: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8915185928344727
    2. ':' → logprob: -1.7665185928344727
    3. '<|end|>' → logprob: -2.0165185928344727
    4. ')' → logprob: -2.7665185928344727
    5. '   ' → logprob: -2.8915185928344727
    6. ',' → logprob: -3.3915185928344727
    7. '.' → logprob: -3.5165185928344727
    8. '       ' → logprob: -3.7665185928344727
    9. '
' → logprob: -4.016518592834473
    10. ' ' → logprob: -4.141518592834473

Token 267: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025006629526615143
    2. '   ' → logprob: -4.2750067710876465
    3. '        
' → logprob: -5.6500067710876465
    4. ')' → logprob: -6.1500067710876465
    5. '```' → logprob: -7.2750067710876465
    6. 'def' → logprob: -7.5250067710876465
    7. '#' → logprob: -7.7750067710876465
    8. '\n' → logprob: -8.150006294250488
    9. '"' → logprob: -8.150006294250488
    10. ' ' → logprob: -8.275006294250488

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032029079739004374
    2. '   ' → logprob: -6.75320291519165
    3. ')' → logprob: -7.50320291519165
    4. '        
' → logprob: -8.003202438354492
    5. '#' → logprob: -9.003202438354492
    6. '```' → logprob: -9.128202438354492
    7. '"""' → logprob: -9.128202438354492
    8. '        ' → logprob: -9.253202438354492
    9. '           ' → logprob: -9.503202438354492
    10. '    ' → logprob: -9.503202438354492

Token 269: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009785249829292297
    2. 'def' → logprob: -5.134785175323486
    3. '   ' → logprob: -6.509785175323486
    4. '        
' → logprob: -7.134785175323486
    5. '#' → logprob: -7.259785175323486
    6. '        ' → logprob: -9.009785652160645
    7. '
' → logprob: -9.134785652160645
    8. 'import' → logprob: -9.134785652160645
    9. ' 
' → logprob: -10.134785652160645
    10. 'Let's' → logprob: -10.259785652160645

Token 270: ' problem' (ID: 4792)
  Prédit: ' final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' final' → logprob: -0.8765107989311218
    2. ' def' → logprob: -1.5015108585357666
    3. ' code' → logprob: -2.7515108585357666
    4. ' next' → logprob: -3.0015108585357666
    5. 'def' → logprob: -3.1265108585357666
    6. ' best' → logprob: -3.2515108585357666
    7. ' pieces' → logprob: -3.7515108585357666
    8. ' problem' → logprob: -3.8765108585357666
    9. ' method' → logprob: -4.3765106201171875
    10. ' optimal' → logprob: -4.6265106201171875

Token 271: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7035270929336548
    2. '_' → logprob: -1.4535270929336548
    3. ' continues' → logprob: -2.3285269737243652
    4. ' ' → logprob: -2.5785269737243652
    5. ':' → logprob: -3.5785269737243652
    6. '<|end|>' → logprob: -4.078526973724365
    7. '   ' → logprob: -4.328526973724365
    8. ' remains' → logprob: -5.328526973724365
    9. ' _' → logprob: -5.578526973724365
    10. ''s' → logprob: -5.828526973724365

Token 272: ' a' (ID: 261)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.11849408596754074
    2. 'that' → logprob: -3.1184940338134766
    3. ' the' → logprob: -3.3684940338134766
    4. ' to' → logprob: -4.618494033813477
    5. 'the' → logprob: -4.743494033813477
    6. ' we' → logprob: -5.993494033813477
    7. ':' → logprob: -6.118494033813477
    8. '   ' → logprob: -6.618494033813477
    9. '...' → logprob: -6.868494033813477
    10. ',' → logprob: -6.993494033813477

Token 273: ' maximum' (ID: 10562)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2348901927471161
    2. 'b' → logprob: -3.4848902225494385
    3. ' possible' → logprob: -3.6098902225494385
    4. ' ' → logprob: -3.8598902225494385
    5. 'l' → logprob: -4.234889984130859
    6. 'ss' → logprob: -4.234889984130859
    7. 'll' → logprob: -4.484889984130859
    8. 's' → logprob: -4.734889984130859
    9. 'possible' → logprob: -4.984889984130859
    10. ' good' → logprob: -5.109889984130859

Token 274: ' score' (ID: 8429)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2973444163799286
    2. ' of' → logprob: -2.797344446182251
    3. ' possible' → logprob: -3.172344446182251
    4. ' _' → logprob: -3.672344446182251
    5. ' score' → logprob: -3.922344446182251
    6. '
' → logprob: -3.922344446182251
    7. ' is' → logprob: -4.672344207763672
    8. ' length' → logprob: -4.797344207763672
    9. ' position' → logprob: -4.922344207763672
    10. 'score' → logprob: -5.297344207763672

Token 275: ' always' (ID: 3324)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3851425647735596
    2. '=' → logprob: -1.5101425647735596
    3. ' =' → logprob: -1.6351425647735596
    4. ' ' → logprob: -2.5101425647735596
    5. ':' → logprob: -2.7601425647735596
    6. ' is' → logprob: -2.8851425647735596
    7. '.' → logprob: -2.8851425647735596
    8. '<|end|>' → logprob: -4.3851423263549805
    9. ' of' → logprob: -4.5101423263549805
    10. '       ' → logprob: -4.7601423263549805

Token 276: ' exists' (ID: 13031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1464823484420776
    2. '   ' → logprob: -1.3964823484420776
    3. ':' → logprob: -1.8964823484420776
    4. ' is' → logprob: -2.146482467651367
    5. '.' → logprob: -2.646482467651367
    6. '
' → logprob: -4.021482467651367
    7. ' ' → logprob: -4.271482467651367
    8. ' =' → logprob: -4.271482467651367
    9. '=' → logprob: -4.896482467651367
    10. ':
' → logprob: -5.396482467651367

Token 277: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4593092203140259
    2. '.' → logprob: -1.5843092203140259
    3. '       ' → logprob: -2.2093091011047363
    4. ',' → logprob: -3.9593091011047363
    5. '
' → logprob: -5.084309101104736
    6. '\n' → logprob: -5.084309101104736
    7. '   ' → logprob: -5.334309101104736
    8. ':
' → logprob: -5.584309101104736
    9. '.
' → logprob: -5.959309101104736
    10. ')' → logprob: -6.084309101104736

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030353400856256485
    2. '        
' → logprob: -5.030353546142578
    3. '
' → logprob: -5.155353546142578
    4. '   ' → logprob: -5.280353546142578
    5. ')' → logprob: -5.655353546142578
    6. '\n' → logprob: -5.780353546142578
    7. '\' → logprob: -6.655353546142578
    8. '    
' → logprob: -7.155353546142578
    9. '<|end|>' → logprob: -7.405353546142578
    10. '#' → logprob: -7.530353546142578

Token 279: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013061405159533024
    2. '        
' → logprob: -5.0130615234375
    3. '
' → logprob: -5.2630615234375
    4. '#' → logprob: -8.5130615234375
    5. '\n' → logprob: -9.2630615234375
    6. '\' → logprob: -9.2630615234375
    7. '   ' → logprob: -9.3880615234375
    8. '        ' → logprob: -9.5130615234375
    9. '    
' → logprob: -9.5130615234375
    10. '```' → logprob: -9.6380615234375

Token 280: ' problem' (ID: 4792)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.27016282081604
    2. '       ' → logprob: -2.02016282081604
    3. 'def' → logprob: -2.14516282081604
    4. ' best' → logprob: -2.27016282081604
    5. '   ' → logprob: -2.64516282081604
    6. ' final' → logprob: -2.89516282081604
    7. ' code' → logprob: -3.02016282081604
    8. ' next' → logprob: -3.77016282081604
    9. ' current' → logprob: -3.89516282081604
    10. ' method' → logprob: -4.020162582397461

Token 281: ' boils' (ID: 165683)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.1346226930618286
    2. '   ' → logprob: -1.3846226930618286
    3. '_' → logprob: -2.134622573852539
    4. ' continues' → logprob: -2.259622573852539
    5. ' ' → logprob: -2.384622573852539
    6. '.' → logprob: -3.384622573852539
    7. ''s' → logprob: -4.509622573852539
    8. ' can' → logprob: -4.634622573852539
    9. ' has' → logprob: -4.884622573852539
    10. '
' → logprob: -5.009622573852539

Token 282: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.1284385323524475
    2. ' down' → logprob: -2.2534384727478027
    3. 's' → logprob: -5.503438472747803
    4. '   ' → logprob: -5.628438472747803
    5. '       ' → logprob: -5.753438472747803
    6. 'd' → logprob: -6.628438472747803
    7. 'dow' → logprob: -6.753438472747803
    8. '_down' → logprob: -7.378438472747803
    9. 'downs' → logprob: -7.753438472747803
    10. '_' → logprob: -8.253438949584961

Token 283: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.584774911403656
    2. ' to' → logprob: -0.834774911403656
    3. '   ' → logprob: -5.709774971008301
    4. '_to' → logprob: -6.084774971008301
    5. '       ' → logprob: -6.709774971008301
    6. '    ' → logprob: -6.709774971008301
    7. '	to' → logprob: -8.5847749710083
    8. '_' → logprob: -8.8347749710083
    9. 'space' → logprob: -9.7097749710083
    10. '        ' → logprob: -9.8347749710083

Token 284: ':
' (ID: 734)
  Prédit: 'finding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finding' → logprob: -0.7354860305786133
    2. ' finding' → logprob: -0.9854860305786133
    3. ' placing' → logprob: -3.6104860305786133
    4. 'assign' → logprob: -3.7354860305786133
    5. 'placing' → logprob: -4.235486030578613
    6. 'min' → logprob: -4.485486030578613
    7. ' assigning' → logprob: -4.485486030578613
    8. ' minimizing' → logprob: -4.860486030578613
    9. ' sorting' → logprob: -4.985486030578613
    10. 'sorting' → logprob: -5.735486030578613

Token 285: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0057511525228619576
    2. '        ' → logprob: -6.130751132965088
    3. ' optimizing' → logprob: -7.380751132965088
    4. ' sorting' → logprob: -7.630751132965088
    5. '        
' → logprob: -7.755751132965088
    6. ' self' → logprob: -8.380751609802246
    7. ' finding' → logprob: -8.505751609802246
    8. ' Find' → logprob: -8.880751609802246
    9. 'Find' → logprob: -9.255751609802246
    10. '   ' → logprob: -9.380751609802246

Token 286: ' max' (ID: 2999)
  Prédit: ' finding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' finding' → logprob: -1.7182118892669678
    2. '#' → logprob: -1.9682118892669678
    3. '       ' → logprob: -2.2182118892669678
    4. 'finding' → logprob: -2.2182118892669678
    5. 'Finding' → logprob: -2.3432118892669678
    6. 'from' → logprob: -2.8432118892669678
    7. 'def' → logprob: -3.3432118892669678
    8. 'Assign' → logprob: -3.7182118892669678
    9. ' placing' → logprob: -3.7182118892669678
    10. ' #' → logprob: -3.7182118892669678

Token 287: ' score' (ID: 8429)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3632207214832306
    2. '_' → logprob: -2.113220691680908
    3. 'imize' → logprob: -2.363220691680908
    4. '(
' → logprob: -2.988220691680908
    5. '_score' → logprob: -4.613220691680908
    6. '(sum' → logprob: -4.988220691680908
    7. 'im' → logprob: -5.613220691680908
    8. 'imized' → logprob: -5.738220691680908
    9. '   ' → logprob: -5.988220691680908
    10. '(score' → logprob: -6.738220691680908

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03650319576263428
    2. '=' → logprob: -3.411503314971924
    3. '   ' → logprob: -6.411503314971924
    4. '       ' → logprob: -7.411503314971924
    5. ' =
' → logprob: -8.286502838134766
    6. ' is' → logprob: -9.286502838134766
    7. ':' → logprob: -9.536502838134766
    8. ' ' → logprob: -10.786502838134766
    9. 'def' → logprob: -11.036502838134766
    10. '(self' → logprob: -11.161502838134766

Token 289: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.300775408744812
    2. ' max' → logprob: -1.800775408744812
    3. 'sum' → logprob: -2.8007755279541016
    4. 'max' → logprob: -4.050775527954102
    5. '0' → logprob: -5.175775527954102
    6. ' self' → logprob: -5.300775527954102
    7. ' float' → logprob: -5.925775527954102
    8. ' ' → logprob: -7.050775527954102
    9. 'self' → logprob: -7.300775527954102
    10. '   ' → logprob: -7.550775527954102

Token 290: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22988823056221008
    2. '(
' → logprob: -2.2298882007598877
    3. '(i' → logprob: -3.4798882007598877
    4. '(abs' → logprob: -3.4798882007598877
    5. ' of' → logprob: -4.104888439178467
    6. '([' → logprob: -4.979888439178467
    7. ' over' → logprob: -5.479888439178467
    8. ' (' → logprob: -5.979888439178467
    9. '((' → logprob: -6.729888439178467
    10. '(max' → logprob: -7.604888439178467

Token 291: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0641406774520874
    2. ' pieces' → logprob: -1.1891406774520874
    3. 'i' → logprob: -1.5641406774520874
    4. ' all' → logprob: -2.939140796661377
    5. ' abs' → logprob: -3.314140796661377
    6. 'pieces' → logprob: -3.689140796661377
    7. 'abs' → logprob: -4.814140796661377
    8. 'all' → logprob: -5.314140796661377
    9. ' range' → logprob: -6.439140796661377
    10. ' final' → logprob: -6.564140796661377

Token 292: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.17578384280204773
    2. '=' → logprob: -2.92578387260437
    3. ' (' → logprob: -2.92578387260437
    4. 'of' → logprob: -3.80078387260437
    5. '   ' → logprob: -4.675783634185791
    6. '(' → logprob: -5.300783634185791
    7. ' i' → logprob: -5.675783634185791
    8. ' =' → logprob: -5.800783634185791
    9. ' ' → logprob: -6.050783634185791
    10. '(i' → logprob: -6.925783634185791

Token 293: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7026255130767822
    2. ' abs' → logprob: -0.7026255130767822
    3. 'max' → logprob: -5.327625274658203
    4. ' max' → logprob: -5.827625274658203
    5. ' pieces' → logprob: -7.952625274658203
    6. '(abs' → logprob: -8.202625274658203
    7. 'pieces' → logprob: -8.702625274658203
    8. '   ' → logprob: -8.702625274658203
    9. '|' → logprob: -9.077625274658203
    10. 'self' → logprob: -9.327625274658203

Token 294: '(final' (ID: 14111)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0369595289230347
    2. '(final' → logprob: -1.0369595289230347
    3. '(p' → logprob: -1.4119595289230347
    4. '(piece' → logprob: -3.286959648132324
    5. '(' → logprob: -5.161959648132324
    6. '(board' → logprob: -6.661959648132324
    7. '(initial' → logprob: -6.911959648132324
    8. '(
' → logprob: -7.036959648132324
    9. '((' → logprob: -8.161959648132324
    10. '(sorted' → logprob: -8.411959648132324

Token 295: '[i' (ID: 1768)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0011266445508226752
    2. '_positions' → logprob: -7.251126766204834
    3. '_position' → logprob: -7.876126766204834
    4. '_i' → logprob: -11.376126289367676
    5. '_' → logprob: -11.876126289367676
    6. 'pos' → logprob: -12.001126289367676
    7. ' _' → logprob: -12.751126289367676
    8. '[i' → logprob: -13.001126289367676
    9. '_p' → logprob: -13.376126289367676
    10. ')' → logprob: -14.376126289367676

Token 296: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007027800311334431
    2. ']_' → logprob: -8.250702857971191
    3. '_]' → logprob: -9.125702857971191
    4. ' ]' → logprob: -9.375702857971191
    5. '_i' → logprob: -9.625702857971191
    6. '_' → logprob: -10.250702857971191
    7. '   ' → logprob: -10.375702857971191
    8. '[i' → logprob: -10.375702857971191
    9. '_positions' → logprob: -10.750702857971191
    10. '[' → logprob: -11.250702857971191

Token 297: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.019426891580224037
    2. '-' → logprob: -4.0194268226623535
    3. ')' → logprob: -7.3944268226623535
    4. '_' → logprob: -8.269427299499512
    5. ']' → logprob: -9.144427299499512
    6. ' ' → logprob: -9.394427299499512
    7. '   ' → logprob: -10.269427299499512
    8. '[' → logprob: -10.644427299499512
    9. '[i' → logprob: -10.769427299499512
    10. '+' → logprob: -10.894427299499512

Token 298: ' p' (ID: 275)
  Prédit: ' pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pieces' → logprob: -0.850622832775116
    2. 'pieces' → logprob: -0.850622832775116
    3. 'self' → logprob: -2.7256228923797607
    4. ' self' → logprob: -2.7256228923797607
    5. ' initial' → logprob: -5.100622653961182
    6. 'initial' → logprob: -5.350622653961182
    7. 'piece' → logprob: -6.725622653961182
    8. 'board' → logprob: -6.725622653961182
    9. ' board' → logprob: -7.475622653961182
    10. 'p' → logprob: -8.60062313079834

Token 299: '[i' (ID: 1768)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.6324066519737244
    2. 'osition' → logprob: -0.8824066519737244
    3. 'i' → logprob: -3.632406711578369
    4. '[i' → logprob: -4.507406711578369
    5. 's' → logprob: -5.257406711578369
    6. '_i' → logprob: -5.257406711578369
    7. 'osi' → logprob: -6.007406711578369
    8. 'o' → logprob: -6.132406711578369
    9. 'osit' → logprob: -6.382406711578369
    10. '[' → logprob: -9.132406234741211

Token 300: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003968693315982819
    2. ')' → logprob: -6.003968715667725
    3. ']' → logprob: -6.753968715667725
    4. '_i' → logprob: -9.503968238830566
    5. ']),' → logprob: -9.628968238830566
    6. '[i' → logprob: -10.128968238830566
    7. '])
' → logprob: -10.378968238830566
    8. 'i' → logprob: -11.253968238830566
    9. '])+' → logprob: -11.253968238830566
    10. ')]' → logprob: -11.503968238830566

Token 301: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23667608201503754
    2. ':' → logprob: -2.611675977706909
    3. ')' → logprob: -2.736675977706909
    4. '   ' → logprob: -4.236676216125488
    5. '
' → logprob: -4.361676216125488
    6. '.' → logprob: -4.611676216125488
    7. '[' → logprob: -4.861676216125488
    8. '<|end|>' → logprob: -5.736676216125488
    9. '):' → logprob: -5.861676216125488
    10. '\n' → logprob: -5.986676216125488

Token 302: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2849295735359192
    2. ' ' → logprob: -1.4099295139312744
    3. ' sum' → logprob: -6.5349297523498535
    4. 'sum' → logprob: -7.1599297523498535
    5. ' (' → logprob: -8.159929275512695
    6. '   ' → logprob: -8.534929275512695
    7. '1' → logprob: -8.784929275512695
    8. '0' → logprob: -9.034929275512695
    9. '\t' → logprob: -9.284929275512695
    10. '
' → logprob: -9.284929275512695

Token 303: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0692165419459343
    2. ' ' → logprob: -2.81921648979187
    3. 'sum' → logprob: -5.569216728210449
    4. ' sum' → logprob: -6.069216728210449
    5. '0' → logprob: -8.69421672821045
    6. 'min' → logprob: -8.81921672821045
    7. '
' → logprob: -8.94421672821045
    8. '   ' → logprob: -8.94421672821045
    9. '1' → logprob: -9.19421672821045
    10. ' (' → logprob: -9.44421672821045

Token 304: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016431741416454315
    2. '*' → logprob: -4.14143180847168
    3. ' ' → logprob: -8.64143180847168
    4. 'sum' → logprob: -9.51643180847168
    5. ' sum' → logprob: -9.89143180847168
    6. ' *
' → logprob: -10.76643180847168
    7. ' ' → logprob: -10.89143180847168
    8. '*(' → logprob: -11.26643180847168
    9. 'abs' → logprob: -11.76643180847168
    10. ' times' → logprob: -12.14143180847168

Token 305: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7284625172615051
    2. 'sum' → logprob: -0.7284625172615051
    3. '(sum' → logprob: -4.1034626960754395
    4. ' (' → logprob: -4.7284626960754395
    5. 'min' → logprob: -5.9784626960754395
    6. ' min' → logprob: -6.2284626960754395
    7. '(' → logprob: -6.9784626960754395
    8. ' max' → logprob: -7.8534626960754395
    9. '0' → logprob: -7.8534626960754395
    10. '(i' → logprob: -8.228462219238281

Token 306: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.7166380286216736
    2. '(' → logprob: -1.8416380882263184
    3. ' of' → logprob: -2.2166380882263184
    4. 'over' → logprob: -2.8416380882263184
    5. 'against' → logprob: -2.8416380882263184
    6. '[' → logprob: -3.0916380882263184
    7. ' against' → logprob: -3.4666380882263184
    8. ' (' → logprob: -4.716638088226318
    9. '_over' → logprob: -4.966638088226318
    10. '(
' → logprob: -5.341638088226318

Token 307: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4109621047973633
    2. ' i' → logprob: -1.1609621047973633
    3. 'j' → logprob: -5.410962104797363
    4. ' j' → logprob: -5.535962104797363
    5. 'moves' → logprob: -6.160962104797363
    6. ' movements' → logprob: -6.410962104797363
    7. ' ' → logprob: -6.910962104797363
    8. ' (' → logprob: -6.910962104797363
    9. 'pieces' → logprob: -6.910962104797363
    10. ' pieces' → logprob: -7.035962104797363

Token 308: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.12279708683490753
    2. 'of' → logprob: -2.4977970123291016
    3. ' if' → logprob: -4.622797012329102
    4. ' (' → logprob: -4.872797012329102
    5. '[' → logprob: -5.247797012329102
    6. ' ' → logprob: -6.122797012329102
    7. '(' → logprob: -6.747797012329102
    8. '   ' → logprob: -7.122797012329102
    9. 'if' → logprob: -7.372797012329102
    10. '(of' → logprob: -7.372797012329102

Token 309: ' moves' (ID: 19523)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7286472320556641
    2. ' (' → logprob: -1.103647232055664
    3. '(' → logprob: -2.353647232055664
    4. 'i' → logprob: -3.728647232055664
    5. '(p' → logprob: -3.978647232055664
    6. '(int' → logprob: -4.478647232055664
    7. '((' → logprob: -4.853647232055664
    8. ' i' → logprob: -5.353647232055664
    9. '(max' → logprob: -5.478647232055664
    10. 'max' → logprob: -6.103647232055664

Token 310: '_again' (ID: 168328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9655593037605286
    2. '_' → logprob: -1.8405592441558838
    3. '   ' → logprob: -2.090559244155884
    4. ')' → logprob: -2.340559244155884
    5. ' ' → logprob: -3.090559244155884
    6. '<|end|>' → logprob: -3.590559244155884
    7. '[' → logprob: -3.965559244155884
    8. '    ' → logprob: -4.215559482574463
    9. ' _' → logprob: -4.340559482574463
    10. '        ' → logprob: -4.590559482574463

Token 311: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.00034869377850554883
    2. ' st' → logprob: -8.125349044799805
    3. 's' → logprob: -10.875349044799805
    4. '`' → logprob: -12.125349044799805
    5. 't' → logprob: -12.125349044799805
    6. '_st' → logprob: -12.250349044799805
    7. '```' → logprob: -12.250349044799805
    8. 'est' → logprob: -13.000349044799805
    9. '   ' → logprob: -14.125349044799805
    10. '[' → logprob: -14.125349044799805

Token 312: '_direction' (ID: 64332)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9595696926116943
    2. '       ' → logprob: -0.9595696926116943
    3. '   ' → logprob: -2.0845696926116943
    4. '_' → logprob: -3.3345696926116943
    5. '
' → logprob: -4.709569931030273
    6. '[' → logprob: -4.709569931030273
    7. ']' → logprob: -4.834569931030273
    8. '[i' → logprob: -4.834569931030273
    9. ' ' → logprob: -4.959569931030273
    10. '}' → logprob: -4.959569931030273

Token 313: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3911030888557434
    2. '   ' → logprob: -2.1411030292510986
    3. ')' → logprob: -3.0161030292510986
    4. ':' → logprob: -3.1411030292510986
    5. '.' → logprob: -3.2661030292510986
    6. '\n' → logprob: -3.7661030292510986
    7. '\' → logprob: -4.266103267669678
    8. '
' → logprob: -4.891103267669678
    9. '<|end|>' → logprob: -5.266103267669678
    10. '[' → logprob: -6.141103267669678

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02311117760837078
    2. ')' → logprob: -4.648111343383789
    3. ':' → logprob: -5.523111343383789
    4. '   ' → logprob: -5.898111343383789
    5. '.' → logprob: -6.398111343383789
    6. '\' → logprob: -6.648111343383789
    7. '        
' → logprob: -7.773111343383789
    8. '\n' → logprob: -7.898111343383789
    9. '<|end|>' → logprob: -8.148111343383789
    10. '```' → logprob: -8.273111343383789

Token 315: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005900472868233919
    2. '
' → logprob: -5.8809003829956055
    3. '        
' → logprob: -6.3809003829956055
    4. 'def' → logprob: -7.7559003829956055
    5. '   ' → logprob: -8.505900382995605
    6. '```' → logprob: -8.505900382995605
    7. '#' → logprob: -8.755900382995605
    8. '        ' → logprob: -9.505900382995605
    9. ' 
' → logprob: -10.130900382995605
    10. '\n' → logprob: -10.380900382995605

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7771169543266296
    2. '       ' → logprob: -0.7771169543266296
    3. ' the' → logprob: -3.4021170139312744
    4. '        ' → logprob: -4.277116775512695
    5. 'def' → logprob: -5.152116775512695
    6. ' we' → logprob: -5.152116775512695
    7. ':' → logprob: -5.777116775512695
    8. '   ' → logprob: -5.902116775512695
    9. ' ,' → logprob: -6.027116775512695
    10. 'the' → logprob: -6.277116775512695

Token 317: ' solution' (ID: 7578)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.21820618212223053
    2. ' final' → logprob: -2.9682061672210693
    3. ' for' → logprob: -3.4682061672210693
    4. ' we' → logprob: -4.093206405639648
    5. 'the' → logprob: -4.468206405639648
    6. '        ' → logprob: -4.718206405639648
    7. ' given' → logprob: -4.968206405639648
    8. ' you' → logprob: -5.218206405639648
    9. ' in' → logprob: -5.343206405639648
    10. ' since' → logprob: -5.343206405639648

Token 318: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5266242623329163
    2. ':' → logprob: -1.4016242027282715
    3. '   ' → logprob: -2.5266242027282715
    4. '       ' → logprob: -3.9016242027282715
    5. '=' → logprob: -4.0266242027282715
    6. '_' → logprob: -4.4016242027282715
    7. ' ' → logprob: -4.7766242027282715
    8. '
' → logprob: -5.5266242027282715
    9. ' is' → logprob: -5.7766242027282715
    10. '<|end|>' → logprob: -5.9016242027282715

Token 319: ':
' (ID: 734)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10469678789377213
    2. 'to' → logprob: -3.104696750640869
    3. '       ' → logprob: -3.979696750640869
    4. '```' → logprob: -5.229696750640869
    5. ' straightforward' → logprob: -5.229696750640869
    6. '   ' → logprob: -5.604696750640869
    7. 'max' → logprob: -5.604696750640869
    8. 'def' → logprob: -5.854696750640869
    9. ':' → logprob: -6.104696750640869
    10. 'simple' → logprob: -6.979696750640869

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004538704175502062
    2. '        ' → logprob: -5.629538536071777
    3. ' return' → logprob: -8.879538536071777
    4. '        
' → logprob: -8.879538536071777
    5. ' max' → logprob: -9.379538536071777
    6. ' ' → logprob: -10.004538536071777
    7. ' def' → logprob: -10.129538536071777
    8. 'def' → logprob: -10.129538536071777
    9. '```' → logprob: -10.129538536071777
    10. 'return' → logprob: -10.254538536071777

Token 321: ' Let' (ID: 9024)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5461775660514832
    2. ' sorted' → logprob: -1.296177625656128
    3. ' positions' → logprob: -3.171177625656128
    4. ' final' → logprob: -4.296177387237549
    5. ' max' → logprob: -4.671177387237549
    6. ' initial' → logprob: -4.671177387237549
    7. 'def' → logprob: -4.796177387237549
    8. 'sorted' → logprob: -4.796177387237549
    9. ' def' → logprob: -4.921177387237549
    10. ' n' → logprob: -5.046177387237549

Token 322: ' us' (ID: 765)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.0360655784606934
    2. ' n' → logprob: -1.5360655784606934
    3. ''s' → logprob: -1.7860655784606934
    4. 'p' → logprob: -2.6610655784606934
    5. 'n' → logprob: -2.9110655784606934
    6. ' initial' → logprob: -3.5360655784606934
    7. 'initial' → logprob: -3.6610655784606934
    8. ' positions' → logprob: -3.6610655784606934
    9. 'positions' → logprob: -3.7860655784606934
    10. '   ' → logprob: -5.161065578460693

Token 323: ' order' (ID: 2569)
  Prédit: ' consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' consider' → logprob: -0.8054525256156921
    2. ' sort' → logprob: -1.930452585220337
    3. 'consider' → logprob: -1.930452585220337
    4. ' define' → logprob: -2.055452585220337
    5. 'sort' → logprob: -2.805452585220337
    6. ' try' → logprob: -4.305452346801758
    7. 'def' → logprob: -4.430452346801758
    8. 'define' → logprob: -4.680452346801758
    9. '   ' → logprob: -5.055452346801758
    10. ' think' → logprob: -5.430452346801758

Token 324: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3672434985637665
    2. 'the' → logprob: -1.9922435283660889
    3. 'self' → logprob: -2.617243528366089
    4. ' pieces' → logprob: -3.367243528366089
    5. '(self' → logprob: -3.992243528366089
    6. 'pieces' → logprob: -4.11724328994751
    7. ' self' → logprob: -4.24224328994751
    8. '       ' → logprob: -6.49224328994751
    9. '   ' → logprob: -6.49224328994751
    10. '(p' → logprob: -6.61724328994751

Token 325: ' final' (ID: 1721)
  Prédit: ' pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pieces' → logprob: -0.30672329664230347
    2. 'pieces' → logprob: -1.4317233562469482
    3. ' initial' → logprob: -5.431723117828369
    4. 'p' → logprob: -5.431723117828369
    5. 'positions' → logprob: -5.431723117828369
    6. ' p' → logprob: -5.431723117828369
    7. ' positions' → logprob: -5.556723117828369
    8. ' final' → logprob: -6.431723117828369
    9. 'initial' → logprob: -7.056723117828369
    10. 'final' → logprob: -7.556723117828369

Token 326: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.07361369580030441
    2. 'positions' → logprob: -3.3236136436462402
    3. ' positions' → logprob: -3.5736136436462402
    4. '[i' → logprob: -5.82361364364624
    5. '[' → logprob: -6.82361364364624
    6. '_pos' → logprob: -7.19861364364624
    7. 'Positions' → logprob: -7.82361364364624
    8. '[]' → logprob: -8.073614120483398
    9. ' =' → logprob: -8.323614120483398
    10. '_' → logprob: -8.448614120483398

Token 327: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30064356327056885
    2. ' in' → logprob: -1.9256435632705688
    3. '=' → logprob: -3.4256434440612793
    4. ' by' → logprob: -3.5506434440612793
    5. '[i' → logprob: -4.425643444061279
    6. '_' → logprob: -4.550643444061279
    7. '   ' → logprob: -4.925643444061279
    8. ' as' → logprob: -5.300643444061279
    9. '[' → logprob: -5.925643444061279
    10. ',' → logprob: -6.050643444061279

Token 328: ' an' (ID: 448)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.7615418434143066
    2. 'list' → logprob: -1.2615418434143066
    3. 'range' → logprob: -2.6365418434143066
    4. '[' → logprob: -3.0115418434143066
    5. ' list' → logprob: -3.1365418434143066
    6. ' sorted' → logprob: -3.7615418434143066
    7. 'the' → logprob: -4.261541843414307
    8. '[p' → logprob: -4.511541843414307
    9. ' range' → logprob: -5.136541843414307
    10. '0' → logprob: -5.136541843414307

Token 329: ' increasing' (ID: 11293)
  Prédit: ' increasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increasing' → logprob: -0.32788214087486267
    2. 'in' → logprob: -1.702882170677185
    3. 'ascending' → logprob: -3.2028820514678955
    4. 'array' → logprob: -4.202882289886475
    5. ' ascending' → logprob: -4.702882289886475
    6. ' array' → logprob: -4.827882289886475
    7. 'ar' → logprob: -5.077882289886475
    8. '   ' → logprob: -5.577882289886475
    9. 'increment' → logprob: -5.827882289886475
    10. 'integer' → logprob: -5.952882289886475

Token 330: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.48841652274131775
    2. ' list' → logprob: -1.1134165525436401
    3. 'sequence' → logprob: -2.9884164333343506
    4. 'list' → logprob: -5.48841667175293
    5. ' array' → logprob: -6.73841667175293
    6. 'range' → logprob: -7.11341667175293
    7. ' range' → logprob: -7.36341667175293
    8. 'array' → logprob: -8.23841667175293
    9. '_list' → logprob: -8.98841667175293
    10. '[' → logprob: -9.36341667175293

Token 331: ' f' (ID: 285)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8757507801055908
    2. '[' → logprob: -1.0007507801055908
    3. '[i' → logprob: -2.500750780105591
    4. '       ' → logprob: -3.250750780105591
    5. 'or' → logprob: -3.750750780105591
    6. '   ' → logprob: -4.125750541687012
    7. 'u' → logprob: -4.125750541687012
    8. '[
' → logprob: -5.125750541687012
    9. '_
' → logprob: -5.375750541687012
    10. '```' → logprob: -5.625750541687012

Token 333: ' <' (ID: 464)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7553641200065613
    2. ',' → logprob: -1.255364179611206
    3. '+' → logprob: -1.630364179611206
    4. '       ' → logprob: -3.630364179611206
    5. '   ' → logprob: -5.255363941192627
    6. ' ,' → logprob: -5.380363941192627
    7. '<|end|>' → logprob: -5.505363941192627
    8. '[' → logprob: -5.880363941192627
    9. ',
' → logprob: -6.755363941192627
    10. '...' → logprob: -7.255363941192627

Token 334: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.0892065241932869
    2. 'f' → logprob: -2.4642064571380615
    3. '=' → logprob: -9.21420669555664
    4. ' ' → logprob: -9.46420669555664
    5. '_' → logprob: -10.08920669555664
    6. ' <' → logprob: -11.21420669555664
    7. ' ' → logprob: -11.46420669555664
    8. '<' → logprob: -11.71420669555664
    9. '_f' → logprob: -12.46420669555664
    10. ' =' → logprob: -12.96420669555664

Token 335: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004273919388651848
    2. '_' → logprob: -6.004273891448975
    3. '1' → logprob: -6.879273891448975
    4. 'f' → logprob: -7.254273891448975
    5. 'i' → logprob: -11.629274368286133
    6. ' f' → logprob: -11.629274368286133
    7. '```' → logprob: -11.629274368286133
    8. '<_' → logprob: -11.754274368286133
    9. '_i' → logprob: -11.879274368286133
    10. '<' → logprob: -13.004274368286133

Token 336: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8475155830383301
    2. '+' → logprob: -1.47251558303833
    3. '_' → logprob: -2.22251558303833
    4. ' +' → logprob: -2.97251558303833
    5. ',' → logprob: -3.09751558303833
    6. '   ' → logprob: -3.47251558303833
    7. '       ' → logprob: -3.97251558303833
    8. '<|end|>' → logprob: -3.97251558303833
    9. ' _' → logprob: -4.09751558303833
    10. '<' → logprob: -5.09751558303833

Token 337: ' ...' (ID: 2550)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.697002649307251
    2. ' f' → logprob: -0.697002649307251
    3. '...' → logprob: -5.697002410888672
    4. ' ...' → logprob: -7.947002410888672
    5. ' ' → logprob: -9.447002410888672
    6. ' <' → logprob: -11.072002410888672
    7. '<' → logprob: -11.322002410888672
    8. '_f' → logprob: -11.447002410888672
    9. '=' → logprob: -12.072002410888672
    10. ' ' → logprob: -12.197002410888672

Token 338: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14634771645069122
    2. '<' → logprob: -2.396347761154175
    3. '...' → logprob: -4.271347522735596
    4. '+' → logprob: -4.896347522735596
    5. '_' → logprob: -5.146347522735596
    6. ',' → logprob: -5.396347522735596
    7. 'f' → logprob: -5.521347522735596
    8. ' f' → logprob: -6.396347522735596
    9. '=' → logprob: -6.521347522735596
    10. ' of' → logprob: -7.271347522735596

Token 339: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3155170977115631
    2. 'fn' → logprob: -1.3155170679092407
    3. ' f' → logprob: -6.440516948699951
    4. ' fn' → logprob: -8.19051742553711
    5. '=' → logprob: -8.56551742553711
    6. '...' → logprob: -9.06551742553711
    7. 'fk' → logprob: -10.06551742553711
    8. ' =' → logprob: -11.94051742553711
    9. '_fn' → logprob: -12.44051742553711
    10. '=f' → logprob: -12.56551742553711

Token 340: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2971965968608856
    2. '_n' → logprob: -1.422196626663208
    3. 'i' → logprob: -5.672196388244629
    4. '_i' → logprob: -6.172196388244629
    5. ' _' → logprob: -6.672196388244629
    6. '_length' → logprob: -6.797196388244629
    7. '_' → logprob: -6.797196388244629
    8. 'length' → logprob: -6.797196388244629
    9. 'N' → logprob: -6.922196388244629
    10. '1' → logprob: -7.047196388244629

Token 341: ' such' (ID: 2238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30717167258262634
    2. '
' → logprob: -2.682171583175659
    3. ',' → logprob: -2.807171583175659
    4. '.' → logprob: -2.807171583175659
    5. ':
' → logprob: -4.182171821594238
    6. ':' → logprob: -4.432171821594238
    7. ',
' → logprob: -4.682171821594238
    8. '        
' → logprob: -4.682171821594238
    9. '.
' → logprob: -4.807171821594238
    10. '   ' → logprob: -5.432171821594238

Token 342: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.09285357594490051
    2. 'that' → logprob: -2.467853546142578
    3. '_that' → logprob: -5.967853546142578
    4. ' =' → logprob: -8.342853546142578
    5. ' as' → logprob: -8.592853546142578
    6. ' ' → logprob: -8.842853546142578
    7. '    ' → logprob: -8.967853546142578
    8. '   ' → logprob: -9.342853546142578
    9. 'at' → logprob: -9.717853546142578
    10. '=' → logprob: -9.842853546142578

Token 343: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5336268544197083
    2. 'for' → logprob: -2.1586267948150635
    3. 'final' → logprob: -2.1586267948150635
    4. ' for' → logprob: -2.9086267948150635
    5. ' f' → logprob: -3.4086267948150635
    6. 'each' → logprob: -3.7836267948150635
    7. ' each' → logprob: -3.9086267948150635
    8. 'fi' → logprob: -4.283627033233643
    9. ' the' → logprob: -4.533627033233643
    10. 'the' → logprob: -5.033627033233643

Token 344: '1' (ID: 16)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6413335800170898
    2. 'for' → logprob: -1.3913335800170898
    3. 'final' → logprob: -1.7663335800170898
    4. 'fi' → logprob: -4.26633358001709
    5. 'all' → logprob: -4.64133358001709
    6. ' for' → logprob: -5.14133358001709
    7. 'the' → logprob: -5.14133358001709
    8. 'each' → logprob: -5.26633358001709
    9. ' f' → logprob: -5.76633358001709
    10. 'they' → logprob: -6.26633358001709

Token 345: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0073703378438949585
    2. '<=' → logprob: -5.382370471954346
    3. ' ≤' → logprob: -6.882370471954346
    4. ' ' → logprob: -7.257370471954346
    5. ',' → logprob: -8.507369995117188
    6. '+' → logprob: -8.882369995117188
    7. ' +' → logprob: -8.882369995117188
    8. '   ' → logprob: -9.132369995117188
    9. '    ' → logprob: -9.632369995117188
    10. ' =' → logprob: -10.007369995117188

Token 346: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08478197455406189
    2. 'fi' → logprob: -2.5847818851470947
    3. ' f' → logprob: -5.334782123565674
    4. ' fi' → logprob: -6.959782123565674
    5. 'fk' → logprob: -9.459781646728516
    6. '   ' → logprob: -11.584781646728516
    7. 'fn' → logprob: -11.959781646728516
    8. ' ' → logprob: -13.084781646728516
    9. ' ' → logprob: -13.334781646728516
    10. '       ' → logprob: -14.209781646728516

Token 347: '1' (ID: 16)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.81317138671875
    2. 'i' → logprob: -0.93817138671875
    3. ' <=' → logprob: -2.68817138671875
    4. '_' → logprob: -3.56317138671875
    5. '<=' → logprob: -3.81317138671875
    6. '<' → logprob: -4.56317138671875
    7. '   ' → logprob: -4.56317138671875
    8. '[i' → logprob: -5.18817138671875
    9. ' ' → logprob: -5.68817138671875
    10. ' _' → logprob: -5.81317138671875

Token 348: ' ...
' (ID: 12646)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2119445949792862
    2. '<=' → logprob: -2.086944580078125
    3. ' <' → logprob: -3.086944580078125
    4. '<' → logprob: -3.961944580078125
    5. 'and' → logprob: -6.961944580078125
    6. ' and' → logprob: -7.711944580078125
    7. '<|end|>' → logprob: -8.461944580078125
    8. '+' → logprob: -8.836944580078125
    9. ' ≤' → logprob: -9.086944580078125
    10. ' ' → logprob: -9.461944580078125

Token 349: '       ' (ID: 309)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3057483434677124
    2. '<=' → logprob: -1.4307483434677124
    3. '<' → logprob: -4.680748462677002
    4. ' <' → logprob: -5.055748462677002
    5. '<|end|>' → logprob: -5.305748462677002
    6. '...' → logprob: -6.805748462677002
    7. 'and' → logprob: -6.805748462677002
    8. ' and' → logprob: -7.305748462677002
    9. ' ...' → logprob: -8.805747985839844
    10. ' ' → logprob: -9.055747985839844

Token 350: ' The' (ID: 623)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4104054272174835
    2. '<=' → logprob: -1.1604053974151611
    3. '<' → logprob: -4.53540563583374
    4. ' <' → logprob: -5.41040563583374
    5. '...' → logprob: -5.91040563583374
    6. '<|end|>' → logprob: -6.03540563583374
    7. 'and' → logprob: -7.28540563583374
    8. ' ...' → logprob: -7.41040563583374
    9. ' and' → logprob: -8.035405158996582
    10. ' ≤' → logprob: -8.285405158996582

Token 351: ' maximum' (ID: 10562)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.2269203662872314
    2. ' final' → logprob: -1.9769203662872314
    3. ' is' → logprob: -2.4769203662872314
    4. ' length' → logprob: -2.4769203662872314
    5. ' are' → logprob: -3.2269203662872314
    6. 'max' → logprob: -3.3519203662872314
    7. 'final' → logprob: -3.3519203662872314
    8. 'length' → logprob: -3.6019203662872314
    9. 'next' → logprob: -3.7269203662872314
    10. ' best' → logprob: -3.9769203662872314

Token 352: ' score' (ID: 8429)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5699578523635864
    2. ' _' → logprob: -1.1949578523635864
    3. ' ' → logprob: -3.444957733154297
    4. ' <=' → logprob: -3.569957733154297
    5. ' position' → logprob: -4.069957733154297
    6. 'position' → logprob: -4.444957733154297
    7. ' possible' → logprob: -4.944957733154297
    8. ' final' → logprob: -5.319957733154297
    9. 'final' → logprob: -5.569957733154297
    10. '_possible' → logprob: -5.694957733154297

Token 353: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35640382766723633
    2. '=' → logprob: -1.4814038276672363
    3. ' is' → logprob: -2.7314038276672363
    4. ' can' → logprob: -5.981403827667236
    5. '   ' → logprob: -6.106403827667236
    6. ' ' → logprob: -6.981403827667236
    7. ' <=' → logprob: -8.106403350830078
    8. 'is' → logprob: -8.481403350830078
    9. ' for' → logprob: -8.731403350830078
    10. '       ' → logprob: -8.731403350830078

Token 354: ':
' (ID: 734)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38380229473114014
    2. ' sum' → logprob: -1.6338022947311401
    3. 'self' → logprob: -2.8838024139404297
    4. 'sum' → logprob: -3.1338024139404297
    5. '       ' → logprob: -4.50880241394043
    6. ' =' → logprob: -5.00880241394043
    7. '        ' → logprob: -6.63380241394043
    8. '=' → logprob: -6.75880241394043
    9. ' equal' → logprob: -7.00880241394043
    10. '=sum' → logprob: -7.00880241394043

Token 355: '         ' (ID: 983)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.548366904258728
    2. '       ' → logprob: -1.673366904258728
    3. ' sum' → logprob: -2.0483670234680176
    4. ' max' → logprob: -2.6733670234680176
    5. 'self' → logprob: -4.048367023468018
    6. 'sum' → logprob: -4.923367023468018
    7. '        ' → logprob: -5.798367023468018
    8. 'max' → logprob: -6.298367023468018
    9. '    ' → logprob: -6.548367023468018
    10. ' ' → logprob: -6.548367023468018

Token 356: ' sum' (ID: 4215)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4308413565158844
    2. ' sum' → logprob: -1.430841326713562
    3. ' max' → logprob: -3.0558414459228516
    4. 'self' → logprob: -3.1808414459228516
    5. 'sum' (adapté à ' sum') → logprob: -4.180841445922852
    6. '=' → logprob: -6.305841445922852
    7. ' =' → logprob: -6.430841445922852
    8. 'max' → logprob: -6.680841445922852
    9. '       ' → logprob: -6.930841445922852
    10. '   ' → logprob: -8.430841445922852

Token 357: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.46951863169670105
    2. '(' → logprob: -1.7195186614990234
    3. '(abs' → logprob: -2.5945186614990234
    4. ' over' → logprob: -3.4695186614990234
    5. 'of' → logprob: -3.9695186614990234
    6. '(
' → logprob: -4.344518661499023
    7. 'abs' → logprob: -4.344518661499023
    8. '(i' → logprob: -4.844518661499023
    9. '([' → logprob: -4.969518661499023
    10. ' (' → logprob: -5.219518661499023

Token 358: ' distances' (ID: 48294)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.4295567572116852
    2. 'abs' → logprob: -1.1795567274093628
    3. '(abs' → logprob: -4.804556846618652
    4. ' max' → logprob: -5.304556846618652
    5. ' i' → logprob: -5.554556846618652
    6. 'max' → logprob: -5.679556846618652
    7. ' all' → logprob: -5.679556846618652
    8. 'i' → logprob: -5.804556846618652
    9. ' positions' → logprob: -6.179556846618652
    10. ' (' → logprob: -6.179556846618652

Token 359: ' in' (ID: 306)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.4771751165390015
    2. '-' → logprob: -1.7271751165390015
    3. ' ' → logprob: -1.8521751165390015
    4. '_' → logprob: -1.9771751165390015
    5. '=' → logprob: -2.477175235748291
    6. '   ' → logprob: -2.852175235748291
    7. '_i' → logprob: -3.102175235748291
    8. ' between' → logprob: -3.602175235748291
    9. '       ' → logprob: -4.227175235748291
    10. '[i' → logprob: -4.602175235748291

Token 360: ' direction' (ID: 9262)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.974054217338562
    2. ' positions' → logprob: -2.0990543365478516
    3. 'final' → logprob: -2.7240543365478516
    4. 'absolute' → logprob: -2.8490543365478516
    5. 'position' → logprob: -2.9740543365478516
    6. ' final' → logprob: -3.3490543365478516
    7. 'initial' → logprob: -3.4740543365478516
    8. 'abs' → logprob: -3.5990543365478516
    9. 'creasing' → logprob: -3.5990543365478516
    10. '```' → logprob: -3.5990543365478516

Token 361: ' of' (ID: 328)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0535180568695068
    2. '   ' → logprob: -2.178518056869507
    3. '       ' → logprob: -2.553518056869507
    4. '=' → logprob: -2.803518056869507
    5. ' ' → logprob: -2.803518056869507
    6. '-' → logprob: -3.053518056869507
    7. 'from' → logprob: -3.428518056869507
    8. ' between' → logprob: -3.428518056869507
    9. ' =' → logprob: -3.553518056869507
    10. ')' → logprob: -3.678518056869507

Token 362: ' arrows' (ID: 76213)
  Prédit: ' movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -1.5245790481567383
    2. ' arrows' → logprob: -1.5245790481567383
    3. 'pieces' → logprob: -1.6495790481567383
    4. 'movement' → logprob: -1.7745790481567383
    5. ' pieces' → logprob: -2.6495790481567383
    6. ' the' → logprob: -3.6495790481567383
    7. 'arrow' → logprob: -3.6495790481567383
    8. ' arrow' → logprob: -3.7745790481567383
    9. 'moves' → logprob: -4.024579048156738
    10. 'the' → logprob: -4.649579048156738

Token 363: ' minus' (ID: 40335)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.72267746925354
    2. '       ' → logprob: -1.97267746925354
    3. '1' → logprob: -2.09767746925354
    4. '   ' → logprob: -2.34767746925354
    5. ' +' → logprob: -2.34767746925354
    6. ',' → logprob: -2.72267746925354
    7. '=' → logprob: -3.09767746925354
    8. ')' → logprob: -3.34767746925354
    9. ' -' → logprob: -3.34767746925354
    10. ' =' → logprob: -3.59767746925354

Token 364: ' sum' (ID: 4215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9617341756820679
    2. ' ' → logprob: -0.9617341756820679
    3. ' sum' → logprob: -2.2117342948913574
    4. 'sum' → logprob: -2.8367342948913574
    5. ' twice' → logprob: -2.8367342948913574
    6. ' the' → logprob: -6.086734294891357
    7. ' double' → logprob: -6.586734294891357
    8. ' two' → logprob: -7.336734294891357
    9. 'the' → logprob: -7.336734294891357
    10. '1' → logprob: -7.586734294891357

Token 365: ' in' (ID: 306)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.06588041037321091
    2. 'of' → logprob: -3.065880298614502
    3. ' over' → logprob: -4.940880298614502
    4. ' ' → logprob: -5.440880298614502
    5. '   ' → logprob: -6.315880298614502
    6. '       ' → logprob: -7.065880298614502
    7. 'over' → logprob: -7.440880298614502
    8. '_of' → logprob: -7.565880298614502
    9. '_' → logprob: -8.31588077545166
    10. ' ' → logprob: -8.56588077545166

Token 366: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.382264643907547
    2. ' opposite' → logprob: -1.5072646141052246
    3. 'the' → logprob: -3.1322646141052246
    4. ' the' → logprob: -4.132264614105225
    5. 'direction' → logprob: -4.632264614105225
    6. ' direction' → logprob: -4.757264614105225
    7. 'against' → logprob: -5.007264614105225
    8. ' ' → logprob: -5.757264614105225
    9. ' against' → logprob: -6.507264614105225
    10. 'reverse' → logprob: -6.632264614105225

Token 367: ' direction' (ID: 9262)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.5565763711929321
    2. ' ' → logprob: -2.1815762519836426
    3. '_' → logprob: -2.4315762519836426
    4. ')' → logprob: -2.4315762519836426
    5. '_positions' → logprob: -2.4315762519836426
    6. '1' → logprob: -2.6815762519836426
    7. ' positions' → logprob: -3.1815762519836426
    8. '   ' → logprob: -3.1815762519836426
    9. '=' → logprob: -3.3065762519836426
    10. 'of' → logprob: -3.8065762519836426

Token 368: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4712395668029785
    2. '   ' → logprob: -1.8462395668029785
    3. '<|end|>' → logprob: -2.0962395668029785
    4. '.' → logprob: -2.3462395668029785
    5. ' ' → logprob: -2.8462395668029785
    6. '       ' → logprob: -2.8462395668029785
    7. ' =' → logprob: -2.8462395668029785
    8. '=' → logprob: -2.8462395668029785
    9. ')' → logprob: -2.8462395668029785
    10. ',' → logprob: -3.3462395668029785

Token 369: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33611899614334106
    2. '   ' → logprob: -1.5861189365386963
    3. ' ' → logprob: -4.336119174957275
    4. ' =' → logprob: -4.461119174957275
    5. ':' → logprob: -4.586119174957275
    6. '[' → logprob: -4.961119174957275
    7. '<|end|>' → logprob: -5.336119174957275
    8. '=' → logprob: -5.461119174957275
    9. ' +' → logprob: -5.711119174957275
    10. '1' → logprob: -5.836119174957275

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0385850667953491
    2. ':' → logprob: -1.6635850667953491
    3. '   ' → logprob: -2.0385851860046387
    4. ' ' → logprob: -2.2885851860046387
    5. '<|end|>' → logprob: -2.9135851860046387
    6. '=' → logprob: -3.6635851860046387
    7. '[' → logprob: -3.9135851860046387
    8. ')' → logprob: -4.038585186004639
    9. ' =' → logprob: -4.163585186004639
    10. '.' → logprob: -4.163585186004639

Token 371: ' It' (ID: 1225)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011990816332399845
    2. '   ' → logprob: -5.886991024017334
    3. '#' → logprob: -6.261991024017334
    4. '        
' → logprob: -6.386991024017334
    5. '        ' → logprob: -6.511991024017334
    6. 'def' → logprob: -7.886991024017334
    7. ')' → logprob: -8.136990547180176
    8. '\' → logprob: -8.261990547180176
    9. '<|end|>' → logprob: -8.261990547180176
    10. '    ' → logprob: -8.386990547180176

Token 372: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.059756990522146225
    2. 's' → logprob: -3.6847569942474365
    3. '_' → logprob: -5.059756755828857
    4. ' =' → logprob: -5.434756755828857
    5. ''s' → logprob: -5.559756755828857
    6. ' def' → logprob: -5.684756755828857
    7. ''' → logprob: -5.684756755828857
    8. '   ' → logprob: -5.809756755828857
    9. 'def' → logprob: -6.184756755828857
    10. '       ' → logprob: -6.434756755828857

Token 373: ' proven' (ID: 18879)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14652669429779053
    2. ' not' → logprob: -2.89652681350708
    3. 'not' → logprob: -4.27152681350708
    4. ' possible' → logprob: -4.27152681350708
    5. '        ' → logprob: -4.39652681350708
    6. '   ' → logprob: -4.64652681350708
    7. '    ' → logprob: -4.89652681350708
    8. ' best' → logprob: -5.27152681350708
    9. 'def' → logprob: -5.39652681350708
    10. 'possible' → logprob: -5.64652681350708

Token 374: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1318819522857666
    2. ' that' → logprob: -2.6318819522857666
    3. '   ' → logprob: -3.3818819522857666
    4. ' by' → logprob: -4.8818817138671875
    5. ' to' → logprob: -6.0068817138671875
    6. 'that' → logprob: -6.2568817138671875
    7. '        
' → logprob: -6.8818817138671875
    8. 'def' → logprob: -7.0068817138671875
    9. '        ' → logprob: -7.1318817138671875
    10. '    ' → logprob: -7.3818817138671875

Token 375: ' maximum' (ID: 10562)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.8349918723106384
    2. ' next' → logprob: -1.5849919319152832
    3. ' final' → logprob: -2.084991931915283
    4. ' optimal' → logprob: -2.459991931915283
    5. ' positions' → logprob: -3.834991931915283
    6. ' first' → logprob: -4.459991931915283
    7. ' ' → logprob: -4.459991931915283
    8. ' maximum' → logprob: -4.584991931915283
    9. ' position' → logprob: -4.709991931915283
    10. ' max' → logprob: -4.959991931915283

Token 376: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.1761513501405716
    2. '_score' → logprob: -2.3011512756347656
    3. ' possible' → logprob: -3.8011512756347656
    4. ' achievable' → logprob: -4.051151275634766
    5. 'score' → logprob: -4.676151275634766
    6. '_' → logprob: -5.551151275634766
    7. '_possible' → logprob: -6.176151275634766
    8. ' value' → logprob: -7.051151275634766
    9. ' distance' → logprob: -7.176151275634766
    10. ' ' → logprob: -7.426151275634766

Token 377: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1696455031633377
    2. ' can' → logprob: -2.5446455478668213
    3. ' =' → logprob: -3.5446455478668213
    4. '=' → logprob: -4.169645309448242
    5. ' ' → logprob: -5.044645309448242
    6. '<|end|>' → logprob: -5.419645309448242
    7. '   ' → logprob: -5.544645309448242
    8. '       ' → logprob: -5.669645309448242
    9. ')' → logprob: -5.669645309448242
    10. ' exists' → logprob: -6.294645309448242

Token 378: ':
' (ID: 734)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.8459787964820862
    2. 'sum' → logprob: -1.3459787368774414
    3. ' self' → logprob: -1.3459787368774414
    4. 'self' → logprob: -3.5959787368774414
    5. ' the' → logprob: -4.845978736877441
    6. ' equal' → logprob: -4.845978736877441
    7. '=sum' → logprob: -6.220978736877441
    8. '       ' → logprob: -7.220978736877441
    9. ' =' → logprob: -7.470978736877441
    10. 'equal' → logprob: -7.470978736877441

Token 379: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05283307656645775
    2. ' sum' → logprob: -4.052833080291748
    3. ' self' → logprob: -4.177833080291748
    4. ' max' → logprob: -4.927833080291748
    5. '        ' → logprob: -5.552833080291748
    6. 'sum' → logprob: -5.552833080291748
    7. 'self' → logprob: -6.052833080291748
    8. 'max' → logprob: -7.177833080291748
    9. '```' → logprob: -8.55283260345459
    10. ' ' → logprob: -9.17783260345459

Token 380: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.0528591871261597
    2. ' max' → logprob: -1.1778591871261597
    3. 'sum' (adapté à ' sum') → logprob: -1.8028591871261597
    4. ' self' → logprob: -2.302859306335449
    5. 'max' → logprob: -2.927859306335449
    6. 'self' → logprob: -3.802859306335449
    7. '   ' → logprob: -7.427859306335449
    8. '       ' → logprob: -7.552859306335449
    9. ' ' → logprob: -8.17785930633545
    10. '```' → logprob: -8.30285930633545

Token 381: ' over' (ID: 1072)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.1395518183708191
    2. '(' → logprob: -3.139551877975464
    3. ' of' → logprob: -3.514551877975464
    4. 'abs' → logprob: -3.889551877975464
    5. '(i' → logprob: -4.514551639556885
    6. '((' → logprob: -4.889551639556885
    7. 'of' → logprob: -5.514551639556885
    8. '([' → logprob: -5.514551639556885
    9. '(
' → logprob: -5.764551639556885
    10. '_{' → logprob: -6.889551639556885

Token 382: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5518060922622681
    2. ' i' → logprob: -0.9268060922622681
    3. ' abs' → logprob: -4.5518059730529785
    4. ' all' → logprob: -4.8018059730529785
    5. 'abs' → logprob: -5.0518059730529785
    6. 'all' → logprob: -6.3018059730529785
    7. ' pieces' → logprob: -8.176806449890137
    8. '   ' → logprob: -8.301806449890137
    9. 'pieces' → logprob: -8.301806449890137
    10. '_i' → logprob: -9.051806449890137

Token 383: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8855195641517639
    2. '(abs' → logprob: -1.3855195045471191
    3. 'abs' → logprob: -1.8855195045471191
    4. '   ' → logprob: -3.010519504547119
    5. '(' → logprob: -3.635519504547119
    6. '((' → logprob: -3.885519504547119
    7. 'of' → logprob: -3.885519504547119
    8. ' (' → logprob: -4.010519504547119
    9. ' abs' → logprob: -4.010519504547119
    10. '=' → logprob: -4.760519504547119

Token 384: ' (' (ID: 350)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.21759635210037231
    2. ' abs' → logprob: -1.7175962924957275
    3. 'max' → logprob: -4.467596530914307
    4. ' max' → logprob: -6.592596530914307
    5. '(abs' → logprob: -6.842596530914307
    6. 'p' → logprob: -7.092596530914307
    7. ' p' → logprob: -8.592596054077148
    8. 'i' → logprob: -8.592596054077148
    9. 'pieces' → logprob: -8.717596054077148
    10. 'self' → logprob: -8.967596054077148

Token 385: 'fi' (ID: 9608)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.020261801779270172
    2. 'self' → logprob: -4.395261764526367
    3. ' abs' → logprob: -5.520261764526367
    4. '(abs' → logprob: -6.395261764526367
    5. 'p' → logprob: -7.145261764526367
    6. 'max' → logprob: -8.020261764526367
    7. '(p' → logprob: -8.520261764526367
    8. '(self' → logprob: -9.020261764526367
    9. '   ' → logprob: -9.020261764526367
    10. '1' → logprob: -9.145261764526367

Token 386: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005776392761617899
    2. '-' → logprob: -5.255776405334473
    3. ' ' → logprob: -9.005776405334473
    4. ')' → logprob: -9.005776405334473
    5. ' *' → logprob: -9.630776405334473
    6. '*' → logprob: -10.005776405334473
    7. ' -
' → logprob: -10.380776405334473
    8. '<|end|>' → logprob: -11.130776405334473
    9. '   ' → logprob: -11.255776405334473
    10. ' +' → logprob: -11.255776405334473

Token 387: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08908700942993164
    2. 'self' → logprob: -3.4640870094299316
    3. ' p' → logprob: -3.5890870094299316
    4. 'pieces' → logprob: -4.339087009429932
    5. 'pi' → logprob: -4.839087009429932
    6. ' self' → logprob: -6.089087009429932
    7. ' pieces' → logprob: -6.839087009429932
    8. 'i' → logprob: -7.089087009429932
    9. ')' → logprob: -8.089086532592773
    10. '   ' → logprob: -8.839086532592773

Token 388: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1396203488111496
    2. '_i' → logprob: -2.389620304107666
    3. 'osition' → logprob: -3.764620304107666
    4. 'i' → logprob: -4.389620304107666
    5. 's' → logprob: -6.639620304107666
    6. ')' → logprob: -7.764620304107666
    7. 'os' → logprob: -8.139620780944824
    8. ')_' → logprob: -8.764620780944824
    9. '[_' → logprob: -9.014620780944824
    10. '[' → logprob: -9.014620780944824

Token 389: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012870650738477707
    2. ' if' → logprob: -4.887870788574219
    3. '[i' → logprob: -5.887870788574219
    4. '       ' → logprob: -7.512870788574219
    5. ' )' → logprob: -7.762870788574219
    6. 'if' → logprob: -7.887870788574219
    7. ')*' → logprob: -8.387870788574219
    8. '[' → logprob: -8.762870788574219
    9. ')**' → logprob: -8.887870788574219
    10. '   ' → logprob: -9.137870788574219

Token 390: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0926402807235718
    2. '       ' → logprob: -1.4676402807235718
    3. '+' → logprob: -2.0926403999328613
    4. ' +' → logprob: -2.3426403999328613
    5. '
' → logprob: -2.9676403999328613
    6. '[' → logprob: -3.2176403999328613
    7. ' ' → logprob: -3.7176403999328613
    8. '   ' → logprob: -3.8426403999328613
    9. '<|end|>' → logprob: -3.8426403999328613
    10. ':' → logprob: -4.467640399932861

Token 391: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04335072264075279
    2. ' (' → logprob: -3.1683506965637207
    3. '((' → logprob: -8.543351173400879
    4. '   ' → logprob: -9.293351173400879
    5. '{' → logprob: -11.168351173400879
    6. '       ' → logprob: -11.793351173400879
    7. '(
' → logprob: -12.043351173400879
    8. ' ((' → logprob: -12.043351173400879
    9. '(-' → logprob: -12.418351173400879
    10. '1' → logprob: -12.543351173400879

Token 392: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4442349374294281
    2. '1' → logprob: -1.0692349672317505
    3. ' (' → logprob: -4.319234848022461
    4. ' ' → logprob: -7.194234848022461
    5. '(-' → logprob: -7.444234848022461
    6. '{' → logprob: -8.694234848022461
    7. '2' → logprob: -8.694234848022461
    8. '   ' → logprob: -9.194234848022461
    9. '[' → logprob: -9.444234848022461
    10. '           ' → logprob: -9.694234848022461

Token 393: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.004801768809556961
    2. 'if' → logprob: -5.3798017501831055
    3. ' *' → logprob: -9.504801750183105
    4. ' -' → logprob: -10.379801750183105
    5. '*' → logprob: -10.879801750183105
    6. '   ' → logprob: -11.129801750183105
    7. '-' → logprob: -12.129801750183105
    8. '       ' → logprob: -12.379801750183105
    9. '    ' → logprob: -12.504801750183105
    10. ' ' → logprob: -12.504801750183105

Token 394: ' arrow' (ID: 33823)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.40600764751434326
    2. ' self' → logprob: -1.9060076475143433
    3. 'pieces' → logprob: -2.406007766723633
    4. ' pieces' → logprob: -3.406007766723633
    5. 'piece' → logprob: -3.906007766723633
    6. 'p' → logprob: -4.281007766723633
    7. ' (' → logprob: -5.281007766723633
    8. 'direction' → logprob: -5.656007766723633
    9. '(p' → logprob: -5.906007766723633
    10. '(self' → logprob: -6.031007766723633

Token 395: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.147377371788025
    2. ' ==' → logprob: -1.147377371788025
    3. 'Direction' → logprob: -1.397377371788025
    4. '[i' → logprob: -2.8973774909973145
    5. '_direction' → logprob: -3.2723774909973145
    6. '   ' → logprob: -5.5223774909973145
    7. 's' → logprob: -5.7723774909973145
    8. ' ' → logprob: -6.0223774909973145
    9. 'direction' → logprob: -6.0223774909973145
    10. ')' → logprob: -6.0223774909973145

Token 396: 'right' (ID: 2460)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42397961020469666
    2. 'Arrow' → logprob: -1.923979640007019
    3. '1' → logprob: -2.5489795207977295
    4. 'Direction' → logprob: -3.2989795207977295
    5. ' self' → logprob: -3.4239795207977295
    6. 'Right' → logprob: -4.298979759216309
    7. ' ' → logprob: -5.048979759216309
    8. 'Piece' → logprob: -5.423979759216309
    9. 'RIGHT' → logprob: -5.548979759216309
    10. '==' → logprob: -5.548979759216309

Token 397: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02063029259443283
    2. 'else' → logprob: -3.895630359649658
    3. ' ' → logprob: -10.5206298828125
    4. '           ' → logprob: -11.6456298828125
    5. '        ' → logprob: -11.7706298828125
    6. ' -' → logprob: -12.2706298828125
    7. '	else' → logprob: -12.3956298828125
    8. '       ' → logprob: -12.5206298828125
    9. '   ' → logprob: -12.6456298828125
    10. ')' → logprob: -12.7706298828125

Token 398: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14919452369213104
    2. ' -' → logprob: -2.2741944789886475
    3. '1' → logprob: -3.3991944789886475
    4. ' ' → logprob: -6.149194717407227
    5. '(-' → logprob: -9.899194717407227
    6. '   ' → logprob: -10.274194717407227
    7. ')' → logprob: -10.524194717407227
    8. '(' → logprob: -10.649194717407227
    9. '+' → logprob: -11.149194717407227
    10. ' (-' → logprob: -11.774194717407227

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006551315891556442
    2. ' ' → logprob: -7.375655174255371
    3. '-' → logprob: -11.375655174255371
    4. ')' → logprob: -11.625655174255371
    5. ' -' → logprob: -12.125655174255371
    6. 'Arrow' → logprob: -14.000655174255371
    7. ' ' → logprob: -15.250655174255371
    8. '   ' → logprob: -15.250655174255371
    9. '+' → logprob: -15.500655174255371
    10. '  ' → logprob: -15.750655174255371

Token 400: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014961723936721683
    2. ' )' → logprob: -6.626496315002441
    3. '       ' → logprob: -9.876496315002441
    4. ')
' → logprob: -10.251496315002441
    5. '   ' → logprob: -10.876496315002441
    6. '))' → logprob: -11.876496315002441
    7. '),' → logprob: -12.126496315002441
    8. '     ' → logprob: -12.126496315002441
    9. '         ' → logprob: -12.251496315002441
    10. '           ' → logprob: -12.626496315002441

Token 401: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18385565280914307
    2. ':' → logprob: -2.3088555335998535
    3. '   ' → logprob: -4.0588555335998535
    4. ')' → logprob: -4.5588555335998535
    5. '
' → logprob: -4.9338555335998535
    6. '        
' → logprob: -5.3088555335998535
    7. '):' → logprob: -5.5588555335998535
    8. ' 
' → logprob: -5.8088555335998535
    9. ' =' → logprob: -5.8088555335998535
    10. 'def' → logprob: -6.1838555335998535

Token 402: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7033148407936096
    2. '       ' → logprob: -1.4533147811889648
    3. ')' → logprob: -2.203314781188965
    4. '   ' → logprob: -3.203314781188965
    5. '\n' → logprob: -3.578314781188965
    6. '):' → logprob: -3.828314781188965
    7. '<|end|>' → logprob: -4.078314781188965
    8. '\' → logprob: -4.203314781188965
    9. '.' → logprob: -5.203314781188965
    10. ',' → logprob: -5.328314781188965

Token 403: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008263969793915749
    2. '   ' → logprob: -5.383264064788818
    3. '        ' → logprob: -6.883264064788818
    4. ':' → logprob: -7.508264064788818
    5. ')' → logprob: -7.758264064788818
    6. '    ' → logprob: -8.13326358795166
    7. '        
' → logprob: -8.50826358795166
    8. '           ' → logprob: -8.88326358795166
    9. '):' → logprob: -9.13326358795166
    10. ' ' → logprob: -9.25826358795166

Token 404: ' moving' (ID: 10067)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1457282453775406
    2. 'the' → logprob: -2.645728349685669
    3. ' final' → logprob: -4.27072811126709
    4. ' each' → logprob: -4.27072811126709
    5. '       ' → logprob: -4.77072811126709
    6. ' we' → logprob: -5.14572811126709
    7. 'final' → logprob: -5.39572811126709
    8. ' pieces' → logprob: -6.14572811126709
    9. ' all' → logprob: -6.14572811126709
    10. ' for' → logprob: -6.27072811126709

Token 405: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.0470401048660278
    2. ' in' → logprob: -1.0470401048660278
    3. ' against' → logprob: -2.6720399856567383
    4. ' pieces' → logprob: -2.6720399856567383
    5. 'against' → logprob: -2.7970399856567383
    6. ' the' → logprob: -3.4220399856567383
    7. ' each' → logprob: -4.547039985656738
    8. 'the' → logprob: -4.922039985656738
    9. ' forward' → logprob: -5.047039985656738
    10. ' right' → logprob: -5.297039985656738

Token 406: ' arrow' (ID: 33823)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3709955215454102
    2. ' arrow' → logprob: -1.4959955215454102
    3. 'direction' → logprob: -1.7459955215454102
    4. 'the' → logprob: -1.8709955215454102
    5. ' direction' → logprob: -2.37099552154541
    6. 'arrow' → logprob: -2.49599552154541
    7. 'right' → logprob: -5.37099552154541
    8. 'Arrow' → logprob: -5.37099552154541
    9. '_arrow' → logprob: -6.12099552154541
    10. ' Arrow' → logprob: -7.12099552154541

Token 407: ' direction' (ID: 9262)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18089590966701508
    2. '_direction' → logprob: -2.6808958053588867
    3. 'Direction' → logprob: -3.0558958053588867
    4. ' direction' → logprob: -3.5558958053588867
    5. 'direction' → logprob: -4.555895805358887
    6. '==' → logprob: -5.680895805358887
    7. ' =' → logprob: -5.930895805358887
    8. ' ==' → logprob: -6.430895805358887
    9. ' ' → logprob: -7.680895805358887
    10. 's' → logprob: -7.805895805358887

Token 408: ' yields' (ID: 59684)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0941123962402344
    2. ')' → logprob: -1.3441123962402344
    3. ' +' → logprob: -1.8441123962402344
    4. '+' → logprob: -1.9691123962402344
    5. ' ' → logprob: -3.8441123962402344
    6. ' continues' → logprob: -4.594112396240234
    7. ' )' → logprob: -4.719112396240234
    8. ',' → logprob: -5.219112396240234
    9. '<|end|>' → logprob: -5.469112396240234
    10. '       ' → logprob: -5.594112396240234

Token 409: ' +' (ID: 659)
  Prédit: ' positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.44142767786979675
    2. '+' → logprob: -1.6914277076721191
    3. ' +' → logprob: -2.191427707672119
    4. ' a' → logprob: -3.066427707672119
    5. 'positive' → logprob: -5.191427707672119
    6. ' more' → logprob: -5.191427707672119
    7. ' additional' → logprob: -7.566427707672119
    8. ' extra' → logprob: -8.066427230834961
    9. ' plus' → logprob: -8.191427230834961
    10. '1' → logprob: -8.316427230834961

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012085650814697146
    2. ' ' → logprob: -6.751208782196045
    3. '2' → logprob: -10.251208305358887
    4. 'score' → logprob: -13.751208305358887
    5. '0' → logprob: -14.751208305358887
    6. ',' → logprob: -14.876208305358887
    7. '   ' → logprob: -15.501208305358887
    8. '<|end|>' → logprob: -16.501209259033203
    9. 'scores' → logprob: -16.626209259033203
    10. '+' → logprob: -16.626209259033203

Token 411: ' per' (ID: 777)
  Prédit: ' per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' per' → logprob: -0.07275714725255966
    2. 'per' → logprob: -3.5727572441101074
    3. ' for' → logprob: -4.072757244110107
    4. ',' → logprob: -4.947757244110107
    5. '<|end|>' → logprob: -5.072757244110107
    6. ')' → logprob: -5.822757244110107
    7. ' ' → logprob: -6.197757244110107
    8. '       ' → logprob: -6.572757244110107
    9. 'for' → logprob: -6.572757244110107
    10. '   ' → logprob: -6.947757244110107

Token 412: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.3490089476108551
    2. ' step' → logprob: -1.2240089178085327
    3. ' unit' → logprob: -9.099008560180664
    4. 'unit' → logprob: -9.224008560180664
    5. 'space' → logprob: -9.349008560180664
    6. '-step' → logprob: -9.724008560180664
    7. '_step' → logprob: -10.099008560180664
    8. ' ' → logprob: -10.599008560180664
    9. 'move' → logprob: -10.849008560180664
    10. ' move' → logprob: -10.974008560180664

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9022613167762756
    2. ' ' → logprob: -1.7772612571716309
    3. '       ' → logprob: -1.9022612571716309
    4. ')' → logprob: -2.777261257171631
    5. '<|end|>' → logprob: -2.902261257171631
    6. '.' → logprob: -3.027261257171631
    7. '   ' → logprob: -3.402261257171631
    8. ' ,' → logprob: -4.152261257171631
    9. '    ' → logprob: -4.277261257171631
    10. '  ' → logprob: -5.152261257171631

Token 414: ' opposite' (ID: 23821)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.63626629114151
    2. ' and' → logprob: -1.2612662315368652
    3. 'and' → logprob: -2.6362662315368652
    4. '.' → logprob: -3.7612662315368652
    5. ' ' → logprob: -4.261266231536865
    6. ' not' → logprob: -4.511266231536865
    7. '           ' → logprob: -4.636266231536865
    8. ' the' → logprob: -4.761266231536865
    9. ' so' → logprob: -4.886266231536865
    10. ',' → logprob: -5.136266231536865

Token 415: ' yields' (ID: 59684)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.273610919713974
    2. 'direction' → logprob: -1.5236109495162964
    3. ' per' → logprob: -4.773611068725586
    4. '-direction' → logprob: -5.773611068725586
    5. ' for' → logprob: -6.148611068725586
    6. ' of' → logprob: -6.773611068725586
    7. ' else' → logprob: -6.773611068725586
    8. '   ' → logprob: -7.273611068725586
    9. 'per' → logprob: -7.273611068725586
    10. '_direction' → logprob: -7.273611068725586

Token 416: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06555377691984177
    2. '-' → logprob: -2.815553665161133
    3. ' ' → logprob: -5.690553665161133
    4. '2' → logprob: -9.815553665161133
    5. '0' → logprob: -9.815553665161133
    6. '1' → logprob: -9.940553665161133
    7. ' ' → logprob: -11.565553665161133
    8. ' a' → logprob: -12.190553665161133
    9. '  ' → logprob: -12.565553665161133
    10. '   ' → logprob: -12.815553665161133

Token 417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.750065803527832
    3. '2' → logprob: -11.875065803527832
    4. '-' → logprob: -14.625065803527832
    5. '.' → logprob: -16.25006675720215
    6. ' -' → logprob: -16.37506675720215
    7. '0' → logprob: -17.00006675720215
    8. ' ' → logprob: -17.00006675720215
    9. '```' → logprob: -17.25006675720215
    10. '   ' → logprob: -17.75006675720215

Token 418: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6762142181396484
    2. '       ' → logprob: -1.6762142181396484
    3. ')' → logprob: -2.5512142181396484
    4. '<|end|>' → logprob: -2.6762142181396484
    5. ' ' → logprob: -3.3012142181396484
    6. ',' → logprob: -3.3012142181396484
    7. '   ' → logprob: -3.4262142181396484
    8. '        
' → logprob: -4.551214218139648
    9. '  ' → logprob: -5.551214218139648
    10. '[' → logprob: -5.926214218139648

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04438278079032898
    2. ')' → logprob: -4.669382572174072
    3. '   ' → logprob: -4.919382572174072
    4. '        
' → logprob: -5.544382572174072
    5. '        ' → logprob: -5.669382572174072
    6. ' ' → logprob: -6.044382572174072
    7. ':' → logprob: -6.294382572174072
    8. '\' → logprob: -6.419382572174072
    9. '<|end|>' → logprob: -6.544382572174072
    10. '.' → logprob: -6.794382572174072

Token 420: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01517997495830059
    2. '   ' → logprob: -4.8901801109313965
    3. '        
' → logprob: -6.5151801109313965
    4. '<|end|>' → logprob: -6.5151801109313965
    5. 'def' → logprob: -7.1401801109313965
    6. '\' → logprob: -7.5151801109313965
    7. '        ' → logprob: -7.6401801109313965
    8. ')' → logprob: -7.6401801109313965
    9. '    ' → logprob: -8.015179634094238
    10. ' ' → logprob: -8.390179634094238

Token 421: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02200031839311123
    2. 'def' → logprob: -4.147000312805176
    3. ' def' → logprob: -6.647000312805176
    4. ' the' → logprob: -6.647000312805176
    5. ' final' → logprob: -7.022000312805176
    6. 'final' → logprob: -7.522000312805176
    7. '   ' → logprob: -8.272000312805176
    8. '        ' → logprob: -8.522000312805176
    9. ' positions' → logprob: -8.772000312805176
    10. ' return' → logprob: -8.772000312805176

Token 422: ' score' (ID: 8429)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.6493383646011353
    2. ' score' → logprob: -1.0243383646011353
    3. 'score' → logprob: -2.2743382453918457
    4. '_' → logprob: -4.774338245391846
    5. ' _' → logprob: -6.399338245391846
    6. ' return' → logprob: -6.899338245391846
    7. ' max' → logprob: -7.024338245391846
    8. 'max' → logprob: -7.149338245391846
    9. ' =' → logprob: -7.524338245391846
    10. '_max' → logprob: -7.649338245391846

Token 423: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18499228358268738
    2. '       ' → logprob: -2.1849923133850098
    3. '=' → logprob: -3.3099923133850098
    4. '   ' → logprob: -4.30999231338501
    5. ')' → logprob: -6.43499231338501
    6. ':' → logprob: -6.93499231338501
    7. ' +=' → logprob: -6.93499231338501
    8. ' is' → logprob: -7.05999231338501
    9. ' ' → logprob: -7.55999231338501
    10. '        ' → logprob: -8.434991836547852

Token 424: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4723624587059021
    2. ' sum' → logprob: -1.3473625183105469
    3. '0' → logprob: -2.222362518310547
    4. ' ' → logprob: -5.222362518310547
    5. '"' → logprob: -7.097362518310547
    6. '   ' → logprob: -7.597362518310547
    7. '       ' → logprob: -7.722362518310547
    8. '(sum' → logprob: -8.722362518310547
    9. 'max' → logprob: -8.847362518310547
    10. 'self' → logprob: -8.972362518310547

Token 425: ' over' (ID: 1072)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9864369034767151
    2. ' over' → logprob: -1.2364368438720703
    3. '(' → logprob: -1.4864368438720703
    4. ' (' → logprob: -3.7364368438720703
    5. ' +' → logprob: -3.8614368438720703
    6. ' +=' → logprob: -4.23643684387207
    7. '((' → logprob: -4.36143684387207
    8. '(
' → logprob: -4.61143684387207
    9. '[' → logprob: -5.11143684387207
    10. ' ' → logprob: -5.36143684387207

Token 426: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4741959869861603
    2. ' i' → logprob: -0.9741959571838379
    3. ' (' → logprob: -9.474196434020996
    4. '_i' → logprob: -10.974196434020996
    5. '(i' → logprob: -11.599196434020996
    6. '(' → logprob: -12.349196434020996
    7. ' ((' → logprob: -12.974196434020996
    8. '((' → logprob: -13.099196434020996
    9. '   ' → logprob: -13.224196434020996
    10. 'pieces' → logprob: -13.724196434020996

Token 427: ' pieces' (ID: 12762)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6541250944137573
    2. ' i' → logprob: -0.7791250944137573
    3. 'pieces' → logprob: -4.654125213623047
    4. ' pieces' → logprob: -4.904125213623047
    5. ' (' → logprob: -6.529125213623047
    6. '   ' → logprob: -6.779125213623047
    7. '_i' → logprob: -7.154125213623047
    8. ' ' → logprob: -8.779125213623047
    9. '(i' → logprob: -8.779125213623047
    10. '(' → logprob: -8.779125213623047

Token 428: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2922319173812866
    2. ' of' → logprob: -1.4172319173812866
    3. '   ' → logprob: -6.167232036590576
    4. ',' → logprob: -6.417232036590576
    5. '        ' → logprob: -6.792232036590576
    6. '(' → logprob: -7.042232036590576
    7. ':' → logprob: -7.292232036590576
    8. '           ' → logprob: -7.667232036590576
    9. 'of' → logprob: -7.667232036590576
    10. ' =' → logprob: -7.792232036590576

Token 429: ' (' (ID: 350)
  Prédit: '(fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -0.2724851965904236
    2. ' (' → logprob: -2.0224852561950684
    3. '(self' → logprob: -2.7724852561950684
    4. '(f' → logprob: -3.2724852561950684
    5. '((' → logprob: -6.147485256195068
    6. '(abs' → logprob: -6.897485256195068
    7. '(p' → logprob: -7.147485256195068
    8. '(' → logprob: -7.397485256195068
    9. '(piece' → logprob: -7.897485256195068
    10. ' ((' → logprob: -8.27248477935791

Token 430: 'fi' (ID: 9608)
  Prédit: '(fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -0.3482176661491394
    2. '(f' → logprob: -1.5982177257537842
    3. 'fi' → logprob: -3.348217725753784
    4. '(final' → logprob: -3.723217725753784
    5. 'final' → logprob: -4.848217487335205
    6. ' (' → logprob: -4.848217487335205
    7. '(self' → logprob: -4.973217487335205
    8. '(' → logprob: -5.473217487335205
    9. 'self' → logprob: -5.973217487335205
    10. 'f' → logprob: -6.848217487335205

Token 431: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00472666509449482
    2. '[i' → logprob: -6.004726886749268
    3. '-' → logprob: -6.629726886749268
    4. ' ' → logprob: -8.12972640991211
    5. '[' → logprob: -9.00472640991211
    6. ')' → logprob: -9.00472640991211
    7. ',' → logprob: -9.25472640991211
    8. '   ' → logprob: -9.50472640991211
    9. '_i' → logprob: -9.75472640991211
    10. ' if' → logprob: -10.87972640991211

Token 432: ' pi' (ID: 6404)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10449471324682236
    2. ' p' → logprob: -2.35449481010437
    3. 'self' → logprob: -6.479494571685791
    4. ' self' → logprob: -6.854494571685791
    5. 'pieces' → logprob: -7.854494571685791
    6. ' pieces' → logprob: -7.979494571685791
    7. 'pi' → logprob: -8.22949504852295
    8. '_p' → logprob: -8.35449504852295
    9. 'position' → logprob: -9.10449504852295
    10. 'piece' → logprob: -9.10449504852295

Token 433: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001980570232262835
    2. ')*' → logprob: -8.625198364257812
    3. ' )' → logprob: -11.875198364257812
    4. '       ' → logprob: -12.375198364257812
    5. '*)' → logprob: -12.875198364257812
    6. '   ' → logprob: -14.000198364257812
    7. '*' → logprob: -14.125198364257812
    8. ')*(' → logprob: -14.125198364257812
    9. ' *' → logprob: -15.000198364257812
    10. 'if' → logprob: -15.000198364257812

Token 434: ' if' (ID: 538)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1846359521150589
    2. '       ' → logprob: -2.559635877609253
    3. '<|end|>' → logprob: -3.309635877609253
    4. ')' → logprob: -4.059636116027832
    5. ' if' → logprob: -4.434636116027832
    6. '*' → logprob: -4.684636116027832
    7. '        ' → logprob: -5.184636116027832
    8. ' ' → logprob: -5.934636116027832
    9. '   ' → logprob: -6.809636116027832
    10. '
' → logprob: -7.559636116027832

Token 435: ' arrow' (ID: 33823)
  Prédit: ' piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' piece' → logprob: -0.7346749305725098
    2. ' self' → logprob: -1.7346749305725098
    3. ' direction' → logprob: -1.8596749305725098
    4. 'self' → logprob: -2.6096749305725098
    5. 'piece' → logprob: -3.1096749305725098
    6. 'direction' → logprob: -3.6096749305725098
    7. '(piece' → logprob: -3.8596749305725098
    8. ' arrow' → logprob: -5.10967493057251
    9. ' (' → logprob: -5.23467493057251
    10. '(self' → logprob: -5.98467493057251

Token 436: '=' (ID: 28)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4219505786895752
    2. '==' → logprob: -1.1719505786895752
    3. 'Direction' → logprob: -3.546950578689575
    4. '=' → logprob: -5.671950340270996
    5. '_direction' → logprob: -6.796950340270996
    6. '       ' → logprob: -8.296950340270996
    7. ')' → logprob: -8.546950340270996
    8. '   ' → logprob: -8.921950340270996
    9. ' =' → logprob: -9.171950340270996
    10. 'direction' → logprob: -9.796950340270996

Token 437: 'right' (ID: 2460)
  Prédit: 'Arrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arrow' → logprob: -0.12246659398078918
    2. ' Arrow' → logprob: -2.372466564178467
    3. 'Right' → logprob: -4.122466564178467
    4. 'RIGHT' → logprob: -5.622466564178467
    5. 'Direction' → logprob: -6.497466564178467
    6. 'right' → logprob: -8.747467041015625
    7. ' RIGHT' → logprob: -8.747467041015625
    8. ' Right' → logprob: -9.122467041015625
    9. ' right' → logprob: -9.372467041015625
    10. '`' → logprob: -10.747467041015625

Token 438: ',' (ID: 11)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.18457520008087158
    2. '       ' → logprob: -1.9345752000808716
    3. 'else' → logprob: -4.559575080871582
    4. ' +' → logprob: -4.934575080871582
    5. '        ' → logprob: -6.309575080871582
    6. ')' → logprob: -6.809575080871582
    7. ',' → logprob: -7.059575080871582
    8. '+' → logprob: -7.809575080871582
    9. '<|end|>' → logprob: -7.934575080871582
    10. '   ' → logprob: -8.184575080871582

Token 439: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.22596044838428497
    2. 'else' → logprob: -1.6009604930877686
    3. '       ' → logprob: -8.850960731506348
    4. ' and' → logprob: -9.350960731506348
    5. '           ' → logprob: -9.600960731506348
    6. ' or' → logprob: -9.850960731506348
    7. ' ' → logprob: -10.475960731506348
    8. '0' → logprob: -10.850960731506348
    9. '         ' → logprob: -10.850960731506348
    10. 'and' → logprob: -11.225960731506348

Token 440: ' (' (ID: 350)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7170985341072083
    2. '-(' → logprob: -0.8420985341072083
    3. ' -' → logprob: -2.9670984745025635
    4. ' -(' → logprob: -3.7170984745025635
    5. ' (' → logprob: -6.342098712921143
    6. ' ' → logprob: -7.217098712921143
    7. '(' → logprob: -7.217098712921143
    8. '   ' → logprob: -7.467098712921143
    9. '-f' → logprob: -7.592098712921143
    10. '`' → logprob: -8.467098236083984

Token 441: 'pi' (ID: 3455)
  Prédit: 'pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.06218300759792328
    2. 'p' → logprob: -3.312182903289795
    3. '-(' → logprob: -4.187182903289795
    4. '(pi' → logprob: -5.687182903289795
    5. '-' → logprob: -6.687182903289795
    6. '   ' → logprob: -6.937182903289795
    7. ' pi' → logprob: -7.062182903289795
    8. '(p' → logprob: -7.437182903289795
    9. '-p' → logprob: -7.812182903289795
    10. '(' → logprob: -7.937182903289795

Token 442: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006747227627784014
    2. '-' → logprob: -5.006747245788574
    3. ')' → logprob: -10.881747245788574
    4. ' ' → logprob: -12.256747245788574
    5. ' -
' → logprob: -12.381747245788574
    6. '<|end|>' → logprob: -13.756747245788574
    7. ' ' → logprob: -14.131747245788574
    8. ')-' → logprob: -15.131747245788574
    9. '-)' → logprob: -15.256747245788574
    10. ',' → logprob: -15.631747245788574

Token 443: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.003200169885531068
    2. ' fi' → logprob: -5.753200054168701
    3. '	fi' → logprob: -10.87820053100586
    4. '(fi' → logprob: -13.12820053100586
    5. ')' → logprob: -14.25320053100586
    6. ' ' → logprob: -14.50320053100586
    7. 'f' → logprob: -15.25320053100586
    8. '   ' → logprob: -16.37820053100586
    9. ' ' → logprob: -17.50320053100586
    10. '
' → logprob: -18.50320053100586

Token 444: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035357745946384966
    2. '_i' → logprob: -9.250353813171387
    3. ' )' → logprob: -9.625353813171387
    4. ')i' → logprob: -9.625353813171387
    5. ').' → logprob: -10.125353813171387
    6. 'i' → logprob: -10.750353813171387
    7. ')
' → logprob: -11.375353813171387
    8. '[i' → logprob: -11.375353813171387
    9. '))' → logprob: -11.750353813171387
    10. '),' → logprob: -12.000353813171387

Token 445: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5941391587257385
    2. ')' → logprob: -1.5941390991210938
    3. ':' → logprob: -2.9691390991210938
    4. '   ' → logprob: -3.0941390991210938
    5. ' ' → logprob: -3.5941390991210938
    6. '<|end|>' → logprob: -3.5941390991210938
    7. '
' → logprob: -3.9691390991210938
    8. '\n' → logprob: -4.719139099121094
    9. '.' → logprob: -4.844139099121094
    10. ' 
' → logprob: -4.844139099121094

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028153296560049057
    2. '   ' → logprob: -4.403153419494629
    3. ')' → logprob: -5.778153419494629
    4. '_' → logprob: -6.153153419494629
    5. ' ' → logprob: -6.403153419494629
    6. '        ' → logprob: -6.778153419494629
    7. '\' → logprob: -6.903153419494629
    8. ':' → logprob: -7.028153419494629
    9. '    ' → logprob: -7.153153419494629
    10. '<|end|>' → logprob: -7.403153419494629

Token 447: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016373354010283947
    2. 'def' → logprob: -7.6266374588012695
    3. '        ' → logprob: -7.8766374588012695
    4. '        
' → logprob: -8.37663745880127
    5. '   ' → logprob: -8.62663745880127
    6. 'n' → logprob: -9.62663745880127
    7. '#' → logprob: -9.62663745880127
    8. '
' → logprob: -10.37663745880127
    9. '    ' → logprob: -10.75163745880127
    10. '           ' → logprob: -10.87663745880127

Token 448: ' final' (ID: 1721)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6947394609451294
    2. 'the' → logprob: -1.8197394609451294
    3. ' final' → logprob: -2.06973934173584
    4. 'final' → logprob: -2.19473934173584
    5. 'f' → logprob: -3.69473934173584
    6. ' we' → logprob: -3.94473934173584
    7. ' f' → logprob: -4.31973934173584
    8. ' pieces' → logprob: -4.44473934173584
    9. 'we' → logprob: -4.56973934173584
    10. 'fi' → logprob: -5.81973934173584

Token 449: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.8492726683616638
    2. ' positions' → logprob: -0.9742726683616638
    3. 'positions' → logprob: -2.3492727279663086
    4. '_' → logprob: -2.4742727279663086
    5. ' _' → logprob: -5.474272727966309
    6. '[i' → logprob: -5.474272727966309
    7. '   ' → logprob: -6.599272727966309
    8. '[' → logprob: -6.599272727966309
    9. ' ' → logprob: -6.724272727966309
    10. '[]' → logprob: -7.099272727966309

Token 450: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.8495292663574219
    2. ' must' → logprob: -0.9745292663574219
    3. 'must' → logprob: -1.9745292663574219
    4. 'are' → logprob: -2.974529266357422
    5. ' should' → logprob: -6.599529266357422
    6. ' have' → logprob: -7.224529266357422
    7. ' can' → logprob: -7.474529266357422
    8. 's' → logprob: -7.724529266357422
    9. '   ' → logprob: -7.849529266357422
    10. '<|end|>' → logprob: -7.974529266357422

Token 451: ' distinct' (ID: 16913)
  Prédit: ' strictly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strictly' → logprob: -0.40343374013900757
    2. ' a' → logprob: -2.1534337997436523
    3. 'strict' → logprob: -3.0284337997436523
    4. 'a' → logprob: -3.7784337997436523
    5. ' assigned' → logprob: -3.7784337997436523
    6. ' sorted' → logprob: -4.028433799743652
    7. ' an' → logprob: -4.028433799743652
    8. ' in' → logprob: -4.528433799743652
    9. 'sorted' → logprob: -4.778433799743652
    10. ' chosen' → logprob: -4.903433799743652

Token 452: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.35226672887802124
    2. ',' → logprob: -1.477266788482666
    3. 'and' → logprob: -3.227266788482666
    4. ' ' → logprob: -5.227266788482666
    5. '.' → logprob: -5.352266788482666
    6. ' ,' → logprob: -5.602266788482666
    7. ' in' → logprob: -5.727266788482666
    8. ' from' → logprob: -5.727266788482666
    9. '   ' → logprob: -6.227266788482666
    10. ',
' → logprob: -6.602266788482666

Token 453: ' sorted' (ID: 20099)
  Prédit: ' strictly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strictly' → logprob: -0.5015332698822021
    2. 'in' → logprob: -1.8765332698822021
    3. ' increasing' → logprob: -2.001533269882202
    4. 'strict' → logprob: -3.376533269882202
    5. 'sorted' → logprob: -3.876533269882202
    6. ' sorted' → logprob: -3.876533269882202
    7. ' in' → logprob: -4.501533508300781
    8. 'increment' → logprob: -5.376533508300781
    9. '   ' → logprob: -5.876533508300781
    10. 'increase' → logprob: -6.876533508300781

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5941506028175354
    2. ' from' → logprob: -1.4691505432128906
    3. ' and' → logprob: -2.3441505432128906
    4. 'from' → logprob: -2.7191505432128906
    5. ' in' → logprob: -4.344150543212891
    6. 'and' → logprob: -4.469150543212891
    7. ' starting' → logprob: -4.844150543212891
    8. ' ,' → logprob: -4.969150543212891
    9. ',
' → logprob: -5.344150543212891
    10. '   ' → logprob: -5.719150543212891

Token 455: ' choosing' (ID: 20296)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5987698435783386
    2. ' f' → logprob: -1.9737699031829834
    3. '       ' → logprob: -2.4737699031829834
    4. 'the' → logprob: -2.8487699031829834
    5. ' ' → logprob: -3.4737699031829834
    6. ' we' → logprob: -3.7237699031829834
    7. '<|end|>' → logprob: -3.7237699031829834
    8. ' and' → logprob: -4.098769664764404
    9. 'f' → logprob: -4.223769664764404
    10. '...' → logprob: -5.348769664764404

Token 456: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.9627909064292908
    2. ' final' → logprob: -1.0877909660339355
    3. ' the' → logprob: -2.0877909660339355
    4. 'f' → logprob: -2.5877909660339355
    5. ' f' → logprob: -3.2127909660339355
    6. 'the' → logprob: -3.7127909660339355
    7. ' positions' → logprob: -4.8377909660339355
    8. 'positions' → logprob: -5.5877909660339355
    9. '   ' → logprob: -7.0877909660339355
    10. 'fi' → logprob: -7.2127909660339355

Token 457: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.2847314476966858
    2. 'positions' → logprob: -1.784731388092041
    3. ' positions' → logprob: -2.784731388092041
    4. '[i' → logprob: -5.034731388092041
    5. '_' → logprob: -5.784731388092041
    6. '   ' → logprob: -6.034731388092041
    7. ' _' → logprob: -6.409731388092041
    8. '[' → logprob: -6.909731388092041
    9. '```' → logprob: -7.159731388092041
    10. ' ' → logprob: -7.534731388092041

Token 458: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38920673727989197
    2. ' =' → logprob: -1.2642067670822144
    3. ' as' → logprob: -3.514206647872925
    4. 'as' → logprob: -5.514206886291504
    5. 'from' → logprob: -6.014206886291504
    6. ' to' → logprob: -6.389206886291504
    7. ' from' → logprob: -7.264206886291504
    8. ' starting' → logprob: -8.389206886291504
    9. ' in' → logprob: -8.764206886291504
    10. 'to' → logprob: -8.889206886291504

Token 459: ' like' (ID: 1299)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.256182074546814
    2. 'range' → logprob: -1.881182074546814
    3. ' the' → logprob: -2.0061821937561035
    4. ' ' → logprob: -2.7561821937561035
    5. ' a' → logprob: -2.7561821937561035
    6. '[' → logprob: -3.0061821937561035
    7. 'the' → logprob: -3.2561821937561035
    8. ' [' → logprob: -3.3811821937561035
    9. '1' → logprob: -3.5061821937561035
    10. 'positions' → logprob: -4.0061821937561035

Token 460: ' placing' (ID: 33268)
  Prédit: ' choosing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choosing' → logprob: -0.7105744481086731
    2. 'cho' → logprob: -0.9605744481086731
    3. 'assign' → logprob: -4.085574626922607
    4. ' assigning' → logprob: -4.085574626922607
    5. ' selecting' → logprob: -4.460574626922607
    6. ' picking' → logprob: -4.585574626922607
    7. 'starting' → logprob: -5.210574626922607
    8. 'range' → logprob: -5.210574626922607
    9. 'select' → logprob: -5.335574626922607
    10. ' a' → logprob: -5.335574626922607

Token 461: ' numbers' (ID: 8663)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6528761982917786
    2. ' pieces' → logprob: -1.2778761386871338
    3. 'the' → logprob: -3.152876138687134
    4. ' each' → logprob: -3.527876138687134
    5. ' them' → logprob: -3.902876138687134
    6. ' ' → logprob: -4.152876377105713
    7. ' positions' → logprob: -4.152876377105713
    8. 'positions' → logprob: -4.402876377105713
    9. ' at' → logprob: -4.527876377105713
    10. '1' → logprob: -4.652876377105713

Token 462: ' ' (ID: 220)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.3597016930580139
    2. 'from' → logprob: -1.8597016334533691
    3. ' ' → logprob: -2.859701633453369
    4. ' in' → logprob: -2.859701633453369
    5. ' starting' → logprob: -4.109701633453369
    6. '<|end|>' → logprob: -5.609701633453369
    7. '1' → logprob: -6.109701633453369
    8. 'in' → logprob: -6.234701633453369
    9. 'starting' → logprob: -6.734701633453369
    10. '```' → logprob: -7.109701633453369

Token 463: '1' (ID: 16)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12058866024017334
    2. '1' → logprob: -2.745588779449463
    3. ' from' → logprob: -3.995588779449463
    4. 'in' → logprob: -3.995588779449463
    5. ' ' → logprob: -5.245588779449463
    6. ' in' → logprob: -6.620588779449463
    7. '[' → logprob: -6.745588779449463
    8. 'starting' → logprob: -6.745588779449463
    9. '   ' → logprob: -6.995588779449463
    10. '```' → logprob: -7.120588779449463

Token 464: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8629586696624756
    2. ' to' → logprob: -1.6129586696624756
    3. ' through' → logprob: -1.7379586696624756
    4. ' ' → logprob: -1.9879586696624756
    5. ' ,' → logprob: -3.6129586696624756
    6. ' <=' → logprob: -4.362958908081055
    7. 'to' → logprob: -4.612958908081055
    8. '<|end|>' → logprob: -5.862958908081055
    9. 'through' → logprob: -5.987958908081055
    10. '<=' → logprob: -5.987958908081055

Token 465: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5876553654670715
    2. 'N' → logprob: -1.2126553058624268
    3. 'len' → logprob: -2.2126553058624268
    4. 'self' → logprob: -4.087655544281006
    5. ' len' → logprob: -4.587655544281006
    6. 'length' → logprob: -5.837655544281006
    7. ' N' → logprob: -6.462655544281006
    8. '...' → logprob: -6.712655544281006
    9. '<|end|>' → logprob: -6.837655544281006
    10. ' n' → logprob: -6.962655544281006

Token 466: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7575694918632507
    2. ',' → logprob: -1.6325695514678955
    3. '+' → logprob: -2.3825695514678955
    4. '...' → logprob: -2.5075695514678955
    5. ' through' → logprob: -4.007569313049316
    6. ' +' → logprob: -4.132569313049316
    7. '   ' → logprob: -4.257569313049316
    8. 'to' → logprob: -4.257569313049316
    9. ' for' → logprob: -4.257569313049316
    10. ' ' → logprob: -4.382569313049316

Token 467: 'or' (ID: 267)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -1.2067196369171143
    2. ',' → logprob: -1.4567196369171143
    3. ')' → logprob: -1.9567196369171143
    4. ' to' → logprob: -2.0817196369171143
    5. 'to' → logprob: -2.0817196369171143
    6. ' in' → logprob: -3.9567196369171143
    7. 'in' → logprob: -3.9567196369171143
    8. ' up' → logprob: -4.581719398498535
    9. '..' → logprob: -5.456719398498535
    10. ' through' → logprob: -5.706719398498535

Token 468: ' any' (ID: 1062)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -1.6304844617843628
    2. ' more' → logprob: -2.6304845809936523
    3. 'the' → logprob: -2.8804845809936523
    4. '1' → logprob: -2.8804845809936523
    5. 'some' → logprob: -2.8804845809936523
    6. ' a' → logprob: -3.0054845809936523
    7. ' any' → logprob: -3.0054845809936523
    8. 'any' → logprob: -3.1304845809936523
    9. 'a' → logprob: -3.2554845809936523
    10. ' ' → logprob: -3.3804845809936523

Token 469: ' contiguous' (ID: 130997)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -1.0138163566589355
    2. ' sequence' → logprob: -1.5138163566589355
    3. ' range' → logprob: -2.5138163566589355
    4. '
' → logprob: -3.0138163566589355
    5. ' ' → logprob: -3.3888163566589355
    6. 'valid' → logprob: -3.6388163566589355
    7. ')' → logprob: -3.8888163566589355
    8. 'sequence' → logprob: -3.8888163566589355
    9. 'range' → logprob: -4.2638163566589355
    10. ' subset' → logprob: -4.3888163566589355

Token 470: ' block' (ID: 4355)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.7023380994796753
    2. 'range' → logprob: -1.7023380994796753
    3. ' range' → logprob: -1.8273380994796753
    4. 'sequence' → logprob: -2.577338218688965
    5. ' segment' → logprob: -3.702338218688965
    6. ' block' → logprob: -3.952338218688965
    7. 'segment' → logprob: -4.202338218688965
    8. 'from' → logprob: -5.202338218688965
    9. ' ' → logprob: -5.327338218688965
    10. ' subset' → logprob: -5.702338218688965

Token 471: ').
' (ID: 6294)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.19975139200687408
    2. ' from' → logprob: -2.699751377105713
    3. ')' → logprob: -2.824751377105713
    4. ' starting' → logprob: -4.074751377105713
    5. '...' → logprob: -4.324751377105713
    6. 'of' → logprob: -5.074751377105713
    7. 'from' → logprob: -5.074751377105713
    8. ' )' → logprob: -5.449751377105713
    9. '+' → logprob: -6.449751377105713
    10. ' ...' → logprob: -6.824751377105713

Token 472: '        
' (ID: 3564)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3617030382156372
    2. '_' → logprob: -1.3617030382156372
    3. '=' → logprob: -2.3617029190063477
    4. ' =' → logprob: -2.4867029190063477
    5. '1' → logprob: -2.8617029190063477
    6. ',' → logprob: -2.8617029190063477
    7. ')' → logprob: -2.8617029190063477
    8. ':' → logprob: -3.7367029190063477
    9. '   ' → logprob: -3.7367029190063477
    10. '.' → logprob: -4.111702919006348

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25998321175575256
    2. '   ' → logprob: -2.5099833011627197
    3. '<|end|>' → logprob: -3.0099833011627197
    4. ':' → logprob: -3.1349833011627197
    5. '<|end|>' → logprob: -4.509983062744141
    6. ' ' → logprob: -4.634983062744141
    7. ')' → logprob: -5.384983062744141
    8. '.' → logprob: -5.384983062744141
    9. '        
' → logprob: -5.759983062744141
    10. '):' → logprob: -6.009983062744141

Token 474: ' Generally' (ID: 58435)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8064852356910706
    2. '   ' → logprob: -1.4314851760864258
    3. '1' → logprob: -2.681485176086426
    4. '[' → logprob: -2.681485176086426
    5. ' ' → logprob: -3.306485176086426
    6. ':' → logprob: -3.681485176086426
    7. '=' → logprob: -4.306485176086426
    8. ')' → logprob: -4.431485176086426
    9. ' =' → logprob: -4.556485176086426
    10. 'n' → logprob: -4.681485176086426

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7421080470085144
    2. ':' → logprob: -1.6171081066131592
    3. ' the' → logprob: -1.6171081066131592
    4. 'the' → logprob: -3.117108106613159
    5. '...' → logprob: -4.11710786819458
    6. ' =' → logprob: -4.99210786819458
    7. ' ,' → logprob: -5.24210786819458
    8. ':
' → logprob: -5.24210786819458
    9. ' we' → logprob: -5.36710786819458
    10. '=' → logprob: -5.36710786819458

Token 476: ' optimal' (ID: 24174)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2824667692184448
    2. ' final' → logprob: -1.9074667692184448
    3. ' N' → logprob: -2.2824668884277344
    4. '       ' → logprob: -2.7824668884277344
    5. ' best' → logprob: -2.9074668884277344
    6. 'final' → logprob: -2.9074668884277344
    7. ' for' → logprob: -3.2824668884277344
    8. 'def' → logprob: -3.4074668884277344
    9. 'the' → logprob: -3.5324668884277344
    10. ' we' → logprob: -3.6574668884277344

Token 477: ' final' (ID: 1721)
  Prédit: ' final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' final' → logprob: -0.25476595759391785
    2. 'final' → logprob: -2.0047659873962402
    3. ' positions' → logprob: -3.5047659873962402
    4. '_final' → logprob: -3.6297659873962402
    5. '_positions' → logprob: -3.8797659873962402
    6. '_' → logprob: -5.12976598739624
    7. 'positions' → logprob: -5.87976598739624
    8. ' choice' → logprob: -7.62976598739624
    9. ' block' → logprob: -7.62976598739624
    10. ' sequence' → logprob: -7.62976598739624

Token 478: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.2730819582939148
    2. 'positions' → logprob: -1.7730820178985596
    3. ' positions' → logprob: -2.7730820178985596
    4. '_' → logprob: -5.7730817794799805
    5. '_pos' → logprob: -7.2730817794799805
    6. '_position' → logprob: -7.3980817794799805
    7. ' =' → logprob: -7.8980817794799805
    8. 'position' → logprob: -8.39808177947998
    9. '=' → logprob: -8.39808177947998
    10. 'pos' → logprob: -8.64808177947998

Token 479: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5305373668670654
    2. '=' → logprob: -0.9055373668670654
    3. ' are' → logprob: -5.1555376052856445
    4. ' can' → logprob: -7.6555376052856445
    5. 'are' → logprob: -7.9055376052856445
    6. ' is' → logprob: -8.405537605285645
    7. '<|end|>' → logprob: -8.905537605285645
    8. 's' → logprob: -9.530537605285645
    9. 'can' → logprob: -9.655537605285645
    10. ',' → logprob: -10.280537605285645

Token 480: ' the' (ID: 290)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7432714700698853
    2. '1' → logprob: -1.9932714700698853
    3. ' the' → logprob: -1.9932714700698853
    4. 'range' → logprob: -2.7432713508605957
    5. 'the' → logprob: -2.9932713508605957
    6. ' [' → logprob: -3.3682713508605957
    7. ' range' → logprob: -3.7432713508605957
    8. ' ' → logprob: -3.9932713508605957
    9. ' either' → logprob: -4.243271350860596
    10. ' a' → logprob: -4.243271350860596

Token 481: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.2384697198867798
    2. 'sorted' → logprob: -1.4884697198867798
    3. 'initial' → logprob: -2.1134696006774902
    4. ' initial' → logprob: -2.7384696006774902
    5. ' positions' → logprob: -2.7384696006774902
    6. ' sorted' → logprob: -2.9884696006774902
    7. 'sequence' → logprob: -4.11346960067749
    8. '[' → logprob: -4.11346960067749
    9. ' ones' → logprob: -4.36346960067749
    10. 'first' → logprob: -4.36346960067749

Token 482: ' sorted' (ID: 20099)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.099634051322937
    2. ' =' → logprob: -1.224634051322937
    3. ' ' → logprob: -1.849634051322937
    4. '1' → logprob: -2.9746341705322266
    5. '=' → logprob: -2.9746341705322266
    6. ' from' → logprob: -3.3496341705322266
    7. '[' → logprob: -3.5996341705322266
    8. ' [' → logprob: -4.599634170532227
    9. ' in' → logprob: -5.349634170532227
    10. '```' → logprob: -5.474634170532227

Token 483: ' to' (ID: 316)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2681879699230194
    2. '[' → logprob: -3.018187999725342
    3. '=' → logprob: -3.518187999725342
    4. ')' → logprob: -3.768187999725342
    5. 'from' → logprob: -4.268187999725342
    6. ' ' → logprob: -4.518187999725342
    7. '+' → logprob: -4.518187999725342
    8. ' +' → logprob: -4.643187999725342
    9. '1' → logprob: -4.768187999725342
    10. '(range' → logprob: -4.893187999725342

Token 484: ' minimize' (ID: 41776)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -1.0648187398910522
    2. ' be' → logprob: -1.1898187398910522
    3. 'start' → logprob: -1.9398187398910522
    4. 'range' → logprob: -2.689818859100342
    5. '[' → logprob: -2.939818859100342
    6. '1' → logprob: -3.064818859100342
    7. ' range' → logprob: -4.439818859100342
    8. '<|end|>' → logprob: -4.939818859100342
    9. ' start' → logprob: -5.689818859100342
    10. 'begin' → logprob: -5.814818859100342

Token 485: ' penalties' (ID: 60163)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2313411682844162
    2. 'the' → logprob: -1.7313411235809326
    3. ' absolute' → logprob: -5.106341361999512
    4. 'abs' → logprob: -5.356341361999512
    5. ' abs' → logprob: -5.356341361999512
    6. ' total' → logprob: -5.356341361999512
    7. ' their' → logprob: -6.356341361999512
    8. 'absolute' → logprob: -6.481341361999512
    9. 'their' → logprob: -7.356341361999512
    10. ' displacement' → logprob: -7.481341361999512

Token 486: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2599643468856812
    2. ' =' → logprob: -1.3849643468856812
    3. '=' → logprob: -2.0099644660949707
    4. '   ' → logprob: -2.7599644660949707
    5. ')' → logprob: -3.0099644660949707
    6. '_' → logprob: -3.1349644660949707
    7. '[' → logprob: -3.2599644660949707
    8. '
' → logprob: -3.6349644660949707
    9. ' ' → logprob: -4.009964466094971
    10. '<|end|>' → logprob: -4.259964466094971

Token 487: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0038890838623047
    2. ':' → logprob: -1.6288890838623047
    3. '       ' → logprob: -1.6288890838623047
    4. ' =' → logprob: -2.3788890838623047
    5. '[' → logprob: -3.2538890838623047
    6. '
' → logprob: -4.128889083862305
    7. '=' → logprob: -4.253889083862305
    8. ')' → logprob: -4.628889083862305
    9. '```' → logprob: -4.753889083862305
    10. ' 
' → logprob: -4.878889083862305

Token 488: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1598968505859375
    2. '       ' → logprob: -2.2848968505859375
    3. '   ' → logprob: -4.0348968505859375
    4. ':
' → logprob: -5.0348968505859375
    5. ',' → logprob: -5.5348968505859375
    6. '\n' → logprob: -5.9098968505859375
    7. '
' → logprob: -6.1598968505859375
    8. '):' → logprob: -6.1598968505859375
    9. ' :' → logprob: -6.5348968505859375
    10. '        
' → logprob: -6.6598968505859375

Token 489: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014198764227330685
    2. '   ' → logprob: -5.3891987800598145
    3. 'def' → logprob: -5.8891987800598145
    4. '        
' → logprob: -6.0141987800598145
    5. ':' → logprob: -7.1391987800598145
    6. 'n' → logprob: -7.2641987800598145
    7. '```' → logprob: -7.7641987800598145
    8. '_' → logprob: -8.389198303222656
    9. ' 
' → logprob: -8.514198303222656
    10. ' ' → logprob: -8.639198303222656

Token 490: ' below' (ID: 4895)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.8410746455192566
    2. 'def' → logprob: -1.4660747051239014
    3. 'best' → logprob: -1.9660747051239014
    4. ' next' → logprob: -2.8410747051239014
    5. ' code' → logprob: -4.091074466705322
    6. 'next' → logprob: -4.216074466705322
    7. ' final' → logprob: -4.466074466705322
    8. 'optimal' → logprob: -4.466074466705322
    9. 'final' → logprob: -4.591074466705322
    10. ' optimal' → logprob: -4.841074466705322

Token 491: ' implementation' (ID: 13847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37111833691596985
    2. ' def' → logprob: -1.6211183071136475
    3. '   ' → logprob: -3.2461183071136475
    4. ' code' → logprob: -3.8711183071136475
    5. ' method' → logprob: -4.121118545532227
    6. '       ' → logprob: -4.621118545532227
    7. '```' → logprob: -4.621118545532227
    8. ' lines' → logprob: -5.621118545532227
    9. '_code' → logprob: -6.121118545532227
    10. ' line' → logprob: -6.371118545532227

Token 492: ' calculates' (ID: 101920)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46667999029159546
    2. ' def' → logprob: -1.8416800498962402
    3. 'def' → logprob: -2.2166800498962402
    4. '   ' → logprob: -2.9666800498962402
    5. ' continues' → logprob: -3.9666800498962402
    6. ' is' → logprob: -4.84168004989624
    7. ':' → logprob: -5.34168004989624
    8. '```' → logprob: -5.71668004989624
    9. ' calculates' → logprob: -5.71668004989624
    10. '        
' → logprob: -5.96668004989624

Token 493: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5946792364120483
    2. 'the' → logprob: -1.4696792364120483
    3. 'max' → logprob: -2.344679355621338
    4. 'optimal' → logprob: -3.094679355621338
    5. ' optimal' → logprob: -3.219679355621338
    6. '       ' → logprob: -5.094679355621338
    7. 'self' → logprob: -5.469679355621338
    8. ' max' → logprob: -5.469679355621338
    9. 'final' → logprob: -5.594679355621338
    10. ' minimal' → logprob: -5.969679355621338

Token 494: ' score' (ID: 8429)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -1.0347944498062134
    2. ' best' → logprob: -2.034794330596924
    3. 'max' → logprob: -2.284794330596924
    4. 'minimum' → logprob: -2.534794330596924
    5. 'best' → logprob: -2.909794330596924
    6. ' minimum' → logprob: -3.159794330596924
    7. 'minimal' → logprob: -3.284794330596924
    8. 'dp' → logprob: -3.284794330596924
    9. ' maximum' → logprob: -3.784794330596924
    10. ' max' → logprob: -4.284794330596924

Token 495: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11032940447330475
    2. '   ' → logprob: -3.3603293895721436
    3. ':' → logprob: -3.7353293895721436
    4. '(self' → logprob: -3.9853293895721436
    5. '        
' → logprob: -4.860329627990723
    6. '
' → logprob: -5.360329627990723
    7. ':
' → logprob: -5.610329627990723
    8. '[' → logprob: -6.235329627990723
    9. ',' → logprob: -7.110329627990723
    10. '```' → logprob: -7.110329627990723

Token 496: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2692394256591797
    2. 'positions' → logprob: -1.3942394256591797
    3. 'sorted' → logprob: -1.3942394256591797
    4. 'dynamic' → logprob: -2.8942394256591797
    5. 'prefix' → logprob: -3.3942394256591797
    6. 'final' → logprob: -3.6442394256591797
    7. 'position' → logprob: -4.26923942565918
    8. ' the' → logprob: -4.51923942565918
    9. ' sorted' → logprob: -4.89423942565918
    10. 'a' → logprob: -4.89423942565918

Token 497: ' method' (ID: 2595)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.9208628535270691
    2. 'sorted' → logprob: -1.7958629131317139
    3. 'median' → logprob: -2.420862913131714
    4. ' positions' → logprob: -2.545862913131714
    5. 'final' → logprob: -3.170862913131714
    6. 'two' → logprob: -3.670862913131714
    7. 'Hung' → logprob: -3.670862913131714
    8. ' sorted' → logprob: -3.795862913131714
    9. 'def' → logprob: -3.920862913131714
    10. 'import' → logprob: -4.045862674713135

Token 498: ' known' (ID: 5542)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2608082890510559
    2. ':' → logprob: -2.260808229446411
    3. '   ' → logprob: -2.510808229446411
    4. ' :' → logprob: -4.63580846786499
    5. '):' → logprob: -4.76080846786499
    6. ' =' → logprob: -5.01080846786499
    7. '    ' → logprob: -5.01080846786499
    8. '=' → logprob: -6.26080846786499
    9. '():' → logprob: -6.26080846786499
    10. '        ' → logprob: -6.63580846786499

Token 499: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041575364768505096
    2. ' to' → logprob: -4.0415754318237305
    3. '   ' → logprob: -4.4165754318237305
    4. ':' → logprob: -5.6665754318237305
    5. '    ' → logprob: -6.4165754318237305
    6. '        ' → logprob: -6.7915754318237305
    7. ' for' → logprob: -7.1665754318237305
    8. 'def' → logprob: -7.5415754318237305
    9. ' =' → logprob: -7.6665754318237305
    10. ' as' → logprob: -7.7915754318237305

Token 500: ' final' (ID: 1721)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03684910759329796
    2. '```' → logprob: -4.036849021911621
    3. 'n' → logprob: -5.411849021911621
    4. 'def' → logprob: -5.536849021911621
    5. '   ' → logprob: -5.786849021911621
    6. ' n' → logprob: -6.911849021911621
    7. '        
' → logprob: -7.286849021911621
    8. ' def' → logprob: -7.536849021911621
    9. ' positions' → logprob: -8.036849021911621
    10. ' _' → logprob: -8.036849021911621

Token 501: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0035173986107110977
    2. 'positions' → logprob: -6.5035176277160645
    3. '_pos' → logprob: -6.6285176277160645
    4. '   ' → logprob: -9.378517150878906
    5. 'Positions' → logprob: -9.378517150878906
    6. '       ' → logprob: -9.378517150878906
    7. '```' → logprob: -9.503517150878906
    8. '_' → logprob: -9.753517150878906
    9. ' =' → logprob: -10.003517150878906
    10. '_lengths' → logprob: -10.378517150878906

Token 502: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1621319204568863
    2. '=' → logprob: -1.912131905555725
    3. '   ' → logprob: -7.2871317863464355
    4. '=[]' → logprob: -7.9121317863464355
    5. '=[' → logprob: -8.537132263183594
    6. '       ' → logprob: -9.287132263183594
    7. '```' → logprob: -9.412132263183594
    8. '[' → logprob: -9.537132263183594
    9. ':' → logprob: -9.662132263183594
    10. ' =
' → logprob: -10.037132263183594

Token 503: '
' (ID: 198)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.15178385376930237
    2. ' range' → logprob: -2.7767839431762695
    3. 'list' → logprob: -3.0267839431762695
    4. 'range' → logprob: -3.7767839431762695
    5. ' sorted' → logprob: -5.2767839431762695
    6. 'sorted' → logprob: -6.6517839431762695
    7. ' the' → logprob: -8.27678394317627
    8. ' [' → logprob: -8.65178394317627
    9. '[' → logprob: -8.77678394317627
    10. '[list' → logprob: -10.15178394317627

Token 504: '       ' (ID: 309)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3389784097671509
    2. ' range' → logprob: -2.0889782905578613
    3. ' sorted' → logprob: -2.7139782905578613
    4. 'list' → logprob: -3.2139782905578613
    5. 'range' → logprob: -3.3389782905578613
    6. 'sorted' → logprob: -4.213978290557861
    7. ' the' → logprob: -6.338978290557861
    8. '   ' → logprob: -6.713978290557861
    9. '```' → logprob: -6.838978290557861
    10. '`' → logprob: -7.713978290557861

Token 505: ' ' (ID: 220)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.08743417263031
    2. 'range' → logprob: -1.21243417263031
    3. ' range' → logprob: -1.58743417263031
    4. 'list' → logprob: -2.2124342918395996
    5. 'sorted' → logprob: -4.5874342918396
    6. '[' → logprob: -4.7124342918396
    7. ' sorted' → logprob: -4.7124342918396
    8. ' the' → logprob: -4.8374342918396
    9. 'the' → logprob: -5.2124342918396
    10. ' [' → logprob: -5.7124342918396

Token 506: '1' (ID: 16)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.17636722326278687
    2. ' range' → logprob: -2.1763672828674316
    3. ' sorted' → logprob: -3.6763672828674316
    4. 'list' → logprob: -4.551367282867432
    5. 'range' → logprob: -4.676367282867432
    6. 'sorted' → logprob: -6.551367282867432
    7. ' the' → logprob: -7.301367282867432
    8. '[' → logprob: -8.676366806030273
    9. '   ' → logprob: -8.801366806030273
    10. '=list' → logprob: -9.301366806030273

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.182578906416893
    2. ' +' → logprob: -2.3075788021087646
    3. '+' → logprob: -4.057579040527344
    4. ' ' → logprob: -4.807579040527344
    5. ' ,' → logprob: -4.807579040527344
    6. '   ' → logprob: -4.932579040527344
    7. '...' → logprob: -5.182579040527344
    8. '<|end|>' → logprob: -5.432579040527344
    9. ' through' → logprob: -5.557579040527344
    10. 'import' → logprob: -5.682579040527344

Token 508: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2533080577850342
    2. ' ' → logprob: -1.5033080577850342
    3. ',' → logprob: -7.253308296203613
    4. '...' → logprob: -8.503308296203613
    5. ' ,' → logprob: -8.878308296203613
    6. '...,' → logprob: -9.128308296203613
    7. ' ...,' → logprob: -9.378308296203613
    8. ' ...' → logprob: -9.378308296203613
    9. '```' → logprob: -11.128308296203613
    10. '  ' → logprob: -11.878308296203613

Token 509: ',...' (ID: 35229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12030205130577087
    2. ',...' → logprob: -2.6203019618988037
    3. ',
' → logprob: -3.3703019618988037
    4. '...' → logprob: -5.620302200317383
    5. '..' → logprob: -6.995302200317383
    6. ',..' → logprob: -6.995302200317383
    7. ' ,' → logprob: -8.245302200317383
    8. '...,' → logprob: -8.495302200317383
    9. ',...
' → logprob: -8.995302200317383
    10. ',…' → logprob: -10.370302200317383

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12054618448019028
    2. '...' → logprob: -2.8705461025238037
    3. ',...' → logprob: -3.7455461025238037
    4. '..' → logprob: -4.120546340942383
    5. ',
' → logprob: -4.495546340942383
    6. '
' → logprob: -6.745546340942383
    7. '   ' → logprob: -7.245546340942383
    8. '+' → logprob: -7.245546340942383
    9. ',N' → logprob: -7.620546340942383
    10. '...,' → logprob: -7.620546340942383

Token 511: 'N' (ID: 45)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0001329791557509452
    2. ' len' → logprob: -9.75013256072998
    3. 'n' → logprob: -10.12513256072998
    4. 'self' → logprob: -11.25013256072998
    5. '(len' → logprob: -12.37513256072998
    6. '```' → logprob: -12.37513256072998
    7. '[len' → logprob: -12.50013256072998
    8. 'N' → logprob: -12.75013256072998
    9. '   ' → logprob: -13.25013256072998
    10. 'length' → logprob: -13.87513256072998

Token 512: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6796084642410278
    2. ':' → logprob: -0.8046084642410278
    3. '   ' → logprob: -4.429608345031738
    4. '        
' → logprob: -5.054608345031738
    5. ':
' → logprob: -5.179608345031738
    6. ',' → logprob: -5.554608345031738
    7. '\n' → logprob: -5.804608345031738
    8. '(' → logprob: -6.054608345031738
    9. '):' → logprob: -6.304608345031738
    10. ' :' → logprob: -6.554608345031738

Token 513: ' initial' (ID: 4871)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5603158473968506
    2. ' the' → logprob: -1.6853158473968506
    3. 'the' → logprob: -1.6853158473968506
    4. 'initial' → logprob: -1.9353158473968506
    5. ' initial' → logprob: -2.6853158473968506
    6. 'pieces' → logprob: -2.6853158473968506
    7. 'positions' → logprob: -3.3103158473968506
    8. ' pieces' → logprob: -3.9353158473968506
    9. ' p' → logprob: -3.9353158473968506
    10. '       ' → logprob: -4.81031608581543

Token 514: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.004745418205857277
    2. '_' → logprob: -6.1297454833984375
    3. '_p' → logprob: -7.1297454833984375
    4. ' _' → logprob: -7.7547454833984375
    5. 'positions' → logprob: -7.8797454833984375
    6. '_position' → logprob: -8.254745483398438
    7. '```' → logprob: -8.754745483398438
    8. '   ' → logprob: -9.129745483398438
    9. ')' → logprob: -9.504745483398438
    10. 'Positions' → logprob: -9.629745483398438

Token 515: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21387635171413422
    2. '   ' → logprob: -1.9638763666152954
    3. ':' → logprob: -3.713876247406006
    4. ' =' → logprob: -4.963876247406006
    5. '
' → logprob: -5.463876247406006
    6. 'def' → logprob: -5.963876247406006
    7. ' ' → logprob: -6.338876247406006
    8. '):' → logprob: -6.588876247406006
    9. '        
' → logprob: -6.713876247406006
    10. '(self' → logprob: -6.713876247406006

Token 516: ' p' (ID: 275)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.14296677708625793
    2. ' sorted' → logprob: -2.0179667472839355
    3. '   ' → logprob: -9.142967224121094
    4. '[' → logprob: -10.267967224121094
    5. 's' → logprob: -10.642967224121094
    6. '       ' → logprob: -10.642967224121094
    7. '(sorted' → logprob: -10.642967224121094
    8. '[p' → logprob: -11.267967224121094
    9. 'sort' → logprob: -11.392967224121094
    10. ']' → logprob: -11.767967224121094

Token 517: ' sorted' (ID: 20099)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9052145481109619
    2. ' =' → logprob: -2.030214548110962
    3. '       ' → logprob: -2.030214548110962
    4. '[' → logprob: -2.280214548110962
    5. '   ' → logprob: -2.655214548110962
    6. '=' → logprob: -2.905214548110962
    7. ':' → logprob: -4.155214309692383
    8. ')' → logprob: -4.655214309692383
    9. '
' → logprob: -4.905214309692383
    10. ']' → logprob: -4.905214309692383

Token 518: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09267573058605194
    2. '   ' → logprob: -3.2176756858825684
    3. '(self' → logprob: -3.5926756858825684
    4. 'self' → logprob: -4.592675685882568
    5. '
' → logprob: -5.592675685882568
    6. '        
' → logprob: -5.842675685882568
    7. '```' → logprob: -6.467675685882568
    8. 'def' → logprob: -6.967675685882568
    9. ':' → logprob: -7.592675685882568
    10. ':
' → logprob: -8.342676162719727

Token 519: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3039517104625702
    2. ':' → logprob: -1.9289517402648926
    3. '   ' → logprob: -3.3039517402648926
    4. '
' → logprob: -4.053951740264893
    5. '\n' → logprob: -4.178951740264893
    6. '```' → logprob: -4.678951740264893
    7. '        
' → logprob: -5.053951740264893
    8. ':
' → logprob: -5.178951740264893
    9. ',' → logprob: -5.678951740264893
    10. '):' → logprob: -5.678951740264893

Token 520: ':
' (ID: 734)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6950293779373169
    2. 'initial' → logprob: -1.820029377937317
    3. '       ' → logprob: -2.4450292587280273
    4. 'positions' → logprob: -2.8200292587280273
    5. 'pieces' → logprob: -2.9450292587280273
    6. 'final' → logprob: -3.0700292587280273
    7. 'sorted' → logprob: -3.6950292587280273
    8. 'score' → logprob: -4.320029258728027
    9. 'self' → logprob: -4.695029258728027
    10. 'def' → logprob: -4.945029258728027

Token 521: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10851715505123138
    2. ' n' → logprob: -3.7335171699523926
    3. 'score' → logprob: -3.7335171699523926
    4. 'n' → logprob: -4.233517169952393
    5. ' p' → logprob: -4.983517169952393
    6. ' initial' → logprob: -5.108517169952393
    7. ' score' → logprob: -5.233517169952393
    8. 'p' → logprob: -5.858517169952393
    9. '```' → logprob: -5.858517169952393
    10. 'initial' → logprob: -6.108517169952393

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010471240617334843
    2. 'n' → logprob: -5.135471343994141
    3. 'p' → logprob: -5.760471343994141
    4. ' n' → logprob: -8.13547134399414
    5. 'pieces' → logprob: -8.51047134399414
    6. ' p' → logprob: -8.63547134399414
    7. '   ' → logprob: -8.76047134399414
    8. 'positions' → logprob: -9.01047134399414
    9. '```' → logprob: -9.13547134399414
    10. 'sorted' → logprob: -9.26047134399414

Token 523: ' score' (ID: 8429)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36695802211761475
    2. 'n' → logprob: -1.6169580221176147
    3. 'p' → logprob: -2.6169581413269043
    4. 'pieces' → logprob: -3.9919581413269043
    5. 'positions' → logprob: -5.616958141326904
    6. 'sorted' → logprob: -5.616958141326904
    7. 'N' → logprob: -5.866958141326904
    8. ' n' → logprob: -6.116958141326904
    9. 'pos' → logprob: -6.866958141326904
    10. 'score' (adapté à ' score') → logprob: -7.116958141326904

Token 524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2032698541879654
    2. '=' → logprob: -1.7032698392868042
    3. '   ' → logprob: -7.203269958496094
    4. '       ' → logprob: -7.453269958496094
    5. 's' → logprob: -7.828269958496094
    6. '_' → logprob: -9.953269958496094
    7. ' ' → logprob: -10.953269958496094
    8. ' +=' → logprob: -11.578269958496094
    9. ' =
' → logprob: -11.828269958496094
    10. '  ' → logprob: -11.953269958496094

Token 525: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4574093222618103
    2. ' sum' → logprob: -1.457409381866455
    3. 'sum' → logprob: -2.707409381866455
    4. ' ' → logprob: -2.707409381866455
    5. '   ' → logprob: -7.582409381866455
    6. ' max' → logprob: -8.582408905029297
    7. 'max' → logprob: -9.707408905029297
    8. '  ' → logprob: -11.707408905029297
    9. '(sum' → logprob: -11.957408905029297
    10. ' -' → logprob: -12.207408905029297

Token 526: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4465493857860565
    2. '((' → logprob: -1.321549415588379
    3. '(abs' → logprob: -3.196549415588379
    4. '(
' → logprob: -3.571549415588379
    5. '(i' → logprob: -5.071549415588379
    6. '_' → logprob: -5.321549415588379
    7. '_i' → logprob: -6.071549415588379
    8. 'abs' → logprob: -6.196549415588379
    9. 'over' → logprob: -6.446549415588379
    10. ' of' → logprob: -6.821549415588379

Token 527: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1436537802219391
    2. ' i' → logprob: -2.0186538696289062
    3. 'pieces' → logprob: -8.393653869628906
    4. ' all' → logprob: -8.893653869628906
    5. ' pieces' → logprob: -9.268653869628906
    6. '   ' → logprob: -9.393653869628906
    7. ' abs' → logprob: -9.393653869628906
    8. 'abs' → logprob: -9.518653869628906
    9. 'all' → logprob: -9.768653869628906
    10. '[i' → logprob: -9.768653869628906

Token 528: ' of' (ID: 328)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3136809766292572
    2. ' of' → logprob: -1.6886810064315796
    3. '(' → logprob: -3.06368088722229
    4. 'of' → logprob: -4.688681125640869
    5. ' i' → logprob: -4.688681125640869
    6. ' ((' → logprob: -5.313681125640869
    7. '((' → logprob: -5.438681125640869
    8. '(i' → logprob: -5.563681125640869
    9. 'i' → logprob: -6.563681125640869
    10. '=' → logprob: -6.813681125640869

Token 529: ' abs' (ID: 8443)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.9114877581596375
    2. 'abs' → logprob: -1.4114878177642822
    3. ' (' → logprob: -2.4114878177642822
    4. ' abs' → logprob: -2.6614878177642822
    5. '(self' → logprob: -2.7864878177642822
    6. '((' → logprob: -2.9114878177642822
    7. '(p' → logprob: -3.2864878177642822
    8. 'self' → logprob: -4.411487579345703
    9. '(' → logprob: -4.536487579345703
    10. '(i' → logprob: -4.786487579345703

Token 530: '(final' (ID: 14111)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4614376425743103
    2. '(final' → logprob: -1.461437702178955
    3. '(p' → logprob: -2.461437702178955
    4. '(' → logprob: -3.586437702178955
    5. '(board' → logprob: -3.961437702178955
    6. '(piece' → logprob: -5.336437702178955
    7. 'final' → logprob: -8.336437225341797
    8. '(
' → logprob: -9.211437225341797
    9. '(P' → logprob: -9.461437225341797
    10. 'self' → logprob: -9.461437225341797

Token 531: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05059358850121498
    2. '[' → logprob: -3.675593614578247
    3. '_positions' → logprob: -4.550593376159668
    4. '_pos' → logprob: -5.175593376159668
    5. '[_' → logprob: -5.925593376159668
    6. '_position' → logprob: -6.800593376159668
    7. '(i' → logprob: -7.550593376159668
    8. '(' → logprob: -7.800593376159668
    9. 'positions' → logprob: -8.175593376159668
    10. '   ' → logprob: -8.300593376159668

Token 532: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.027994265779852867
    2. '-' → logprob: -4.027994155883789
    3. '[i' → logprob: -4.777994155883789
    4. ' ' → logprob: -7.777994155883789
    5. '_' → logprob: -7.902994155883789
    6. '[' → logprob: -8.152994155883789
    7. '_i' → logprob: -9.402994155883789
    8. 'i' → logprob: -9.652994155883789
    9. '[]' → logprob: -10.027994155883789
    10. '   ' → logprob: -10.652994155883789

Token 533: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09179868549108505
    2. 'pieces' → logprob: -2.466798782348633
    3. ' p' → logprob: -6.591798782348633
    4. 'self' → logprob: -7.716798782348633
    5. ' pieces' → logprob: -7.716798782348633
    6. 'sorted' → logprob: -7.966798782348633
    7. 'positions' → logprob: -9.591798782348633
    8. '   ' → logprob: -10.091798782348633
    9. 'piece' → logprob: -10.591798782348633
    10. 'initial' → logprob: -10.591798782348633

Token 534: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15506386756896973
    2. '_i' → logprob: -2.0300638675689697
    3. 's' → logprob: -4.780063629150391
    4. '[_' → logprob: -6.780063629150391
    5. 'osition' → logprob: -7.280063629150391
    6. '_positions' → logprob: -7.780063629150391
    7. 'os' → logprob: -8.15506362915039
    8. '[' → logprob: -8.40506362915039
    9. ')' → logprob: -8.40506362915039
    10. 'i' → logprob: -8.78006362915039

Token 535: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014388319104909897
    2. '[i' → logprob: -4.764388084411621
    3. ' )' → logprob: -5.764388084411621
    4. ')
' → logprob: -6.764388084411621
    5. '       ' → logprob: -7.389388084411621
    6. '   ' → logprob: -8.514388084411621
    7. '[' → logprob: -8.889388084411621
    8. ' -' → logprob: -9.264388084411621
    9. '
' → logprob: -10.139388084411621
    10. '           ' → logprob: -10.514388084411621

Token 536: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20128682255744934
    2. '   ' → logprob: -1.951286792755127
    3. ':' → logprob: -3.826286792755127
    4. '):' → logprob: -5.576286792755127
    5. '
' → logprob: -5.826286792755127
    6. ')' → logprob: -6.451286792755127
    7. '        
' → logprob: -6.576286792755127
    8. '(' → logprob: -6.826286792755127
    9. 'def' → logprob: -7.076286792755127
    10. '```' → logprob: -7.076286792755127

Token 537: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.40101781487464905
    2. ' ' → logprob: -1.1510177850723267
    3. '0' → logprob: -4.901017665863037
    4. ' sum' → logprob: -6.401017665863037
    5. 'sum' → logprob: -6.526017665863037
    6. ' (' → logprob: -7.151017665863037
    7. '1' → logprob: -7.526017665863037
    8. '(' → logprob: -7.776017665863037
    9. '   ' → logprob: -7.901017665863037
    10. '       ' → logprob: -8.401018142700195

Token 538: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22065360844135284
    2. '0' → logprob: -1.7206536531448364
    3. 'sum' → logprob: -4.845653533935547
    4. '(' → logprob: -5.220653533935547
    5. ' ' → logprob: -6.220653533935547
    6. 'len' → logprob: -6.595653533935547
    7. '1' → logprob: -7.095653533935547
    8. 'abs' → logprob: -8.095653533935547
    9. 'int' → logprob: -8.220653533935547
    10. ' (' → logprob: -8.220653533935547

Token 539: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4968532621860504
    2. ' *' → logprob: -1.371853232383728
    3. ')' → logprob: -2.7468533515930176
    4. '*' → logprob: -3.3718533515930176
    5. '<|end|>' → logprob: -3.8718533515930176
    6. '[' → logprob: -5.621853351593018
    7. '.' → logprob: -6.371853351593018
    8. '+' → logprob: -6.371853351593018
    9. '  ' → logprob: -6.496853351593018
    10. '   ' → logprob: -6.871853351593018

Token 540: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.050144702196121216
    2. ' sum' → logprob: -3.050144672393799
    3. '0' → logprob: -6.550144672393799
    4. '(sum' → logprob: -9.800145149230957
    5. 'len' → logprob: -10.425145149230957
    6. 'max' → logprob: -11.550145149230957
    7. ' ' → logprob: -12.050145149230957
    8. 'min' → logprob: -12.175145149230957
    9. 'i' → logprob: -12.175145149230957
    10. '	sum' → logprob: -12.800145149230957

Token 541: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7406445741653442
    2. '[' → logprob: -1.3656445741653442
    3. '_again' → logprob: -2.4906444549560547
    4. '_' → logprob: -2.8656444549560547
    5. 'against' → logprob: -4.115644454956055
    6. '_of' → logprob: -4.240644454956055
    7. ' of' → logprob: -4.365644454956055
    8. '(p' → logprob: -4.490644454956055
    9. ' _' → logprob: -4.615644454956055
    10. 'of' → logprob: -4.615644454956055

Token 542: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09706999361515045
    2. ' i' → logprob: -2.9720699787139893
    3. '(i' → logprob: -3.9720699787139893
    4. ' (' → logprob: -4.847070217132568
    5. '[i' → logprob: -4.972070217132568
    6. '[' → logprob: -6.097070217132568
    7. '(' → logprob: -6.847070217132568
    8. 'moves' → logprob: -6.972070217132568
    9. '(p' → logprob: -7.222070217132568
    10. ' [' → logprob: -8.22206974029541

Token 543: ' with' (ID: 483)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48273858428001404
    2. ' of' → logprob: -1.7327386140823364
    3. 'if' → logprob: -2.357738494873047
    4. 'of' → logprob: -2.482738494873047
    5. 'against' → logprob: -4.482738494873047
    6. '_of' → logprob: -5.607738494873047
    7. ' against' → logprob: -5.732738494873047
    8. '_again' → logprob: -6.232738494873047
    9. 'for' → logprob: -6.857738494873047
    10. ' (' → logprob: -7.107738494873047

Token 544: ' arrow' (ID: 33823)
  Prédit: '(piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(piece' → logprob: -0.6600605249404907
    2. '(p' → logprob: -1.4100605249404907
    3. ' (' → logprob: -2.285060405731201
    4. 'self' → logprob: -2.785060405731201
    5. ' pieces' → logprob: -3.910060405731201
    6. ' self' → logprob: -4.410060405731201
    7. 'piece' → logprob: -4.410060405731201
    8. '(self' → logprob: -4.660060405731201
    9. 'pieces' → logprob: -5.160060405731201
    10. ' piece' → logprob: -5.160060405731201

Token 545: ' opposite' (ID: 23821)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.42281612753868103
    2. '_' → logprob: -2.047816038131714
    3. '==' → logprob: -2.172816038131714
    4. ' ==' → logprob: -2.672816038131714
    5. 'Direction' → logprob: -4.422816276550293
    6. ' _' → logprob: -5.422816276550293
    7. '_in' → logprob: -6.047816276550293
    8. '=' → logprob: -6.047816276550293
    9. '_again' → logprob: -6.172816276550293
    10. '_DIRECTION' → logprob: -6.422816276550293

Token 546: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0141735076904297
    2. '_' → logprob: -2.3891735076904297
    3. '```' → logprob: -2.3891735076904297
    4. ' to' → logprob: -2.6391735076904297
    5. '_to' → logprob: -2.6391735076904297
    6. '_direction' → logprob: -2.7641735076904297
    7. '   ' → logprob: -3.1391735076904297
    8. '       ' → logprob: -3.6391735076904297
    9. 'to' → logprob: -3.8891735076904297
    10. 'def' → logprob: -4.13917350769043

Token 547: ' movement' (ID: 12772)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.11256838589906693
    2. ' direction' → logprob: -2.6125683784484863
    3. 'Arrow' → logprob: -4.112568378448486
    4. 'Direction' → logprob: -4.862568378448486
    5. 'arrow' → logprob: -5.237568378448486
    6. '_direction' → logprob: -6.612568378448486
    7. 'the' → logprob: -6.737568378448486
    8. '_arrow' → logprob: -7.987568378448486
    9. ' arrow' → logprob: -8.112568855285645
    10. ' the' → logprob: -8.737568855285645

Token 548: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08113907277584076
    2. '   ' → logprob: -3.081139087677002
    3. ':' → logprob: -4.831139087677002
    4. '(self' → logprob: -4.956139087677002
    5. '        
' → logprob: -5.331139087677002
    6. ':
' → logprob: -5.706139087677002
    7. '```' → logprob: -6.456139087677002
    8. '
' → logprob: -7.081139087677002
    9. '(' → logprob: -7.081139087677002
    10. '):
' → logprob: -7.206139087677002

Token 549: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43672606348991394
    2. '   ' → logprob: -2.0617260932922363
    3. ')' → logprob: -2.4367260932922363
    4. '):' → logprob: -3.1867260932922363
    5. '       ' → logprob: -3.5617260932922363
    6. ':
' → logprob: -4.436726093292236
    7. '
' → logprob: -4.561726093292236
    8. '=' → logprob: -4.686726093292236
    9. '):
' → logprob: -5.186726093292236
    10. '\n' → logprob: -5.311726093292236

Token 550: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04257053881883621
    2. '
' → logprob: -3.6675705909729004
    3. '        
' → logprob: -4.7925705909729
    4. '   ' → logprob: -6.2925705909729
    5. '\n' → logprob: -6.6675705909729
    6. ':' → logprob: -6.7925705909729
    7. '```' → logprob: -6.7925705909729
    8. '    
' → logprob: -8.167570114135742
    9. ':
' → logprob: -8.292570114135742
    10. ')' → logprob: -8.542570114135742

Token 551: ' key' (ID: 2140)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.2531346082687378
    2. '_' → logprob: -1.5031346082687378
    3. 'def' → logprob: -1.5031346082687378
    4. ' code' → logprob: -2.5031347274780273
    5. ' final' → logprob: -2.8781347274780273
    6. ' ' → logprob: -3.2531347274780273
    7. ' best' → logprob: -4.503134727478027
    8. 'n' → logprob: -4.628134727478027
    9. '#' → logprob: -4.628134727478027
    10. '
' → logprob: -4.878134727478027

Token 552: ' insight' (ID: 24058)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12912090122699738
    2. ' ' → logprob: -2.6291208267211914
    3. 'def' → logprob: -4.504120826721191
    4. ':' → logprob: -4.879120826721191
    5. '=' → logprob: -5.129120826721191
    6. '   ' → logprob: -5.379120826721191
    7. '    ' → logprob: -5.629120826721191
    8. ' _' → logprob: -5.754120826721191
    9. ' def' → logprob: -6.004120826721191
    10. ')' → logprob: -6.379120826721191

Token 553: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6814125180244446
    2. ' ' → logprob: -1.6814124584197998
    3. '=' → logprob: -1.9314124584197998
    4. ' =' → logprob: -2.9314124584198
    5. '_' → logprob: -2.9314124584198
    6. '   ' → logprob: -4.681412696838379
    7. ')' → logprob: -4.681412696838379
    8. '(' → logprob: -5.056412696838379
    9. '.' → logprob: -5.056412696838379
    10. ' is' → logprob: -5.181412696838379

Token 554: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4469020664691925
    2. ' that' → logprob: -1.5719020366668701
    3. ' to' → logprob: -2.32190203666687
    4. '   ' → logprob: -4.821902275085449
    5. ' the' → logprob: -4.821902275085449
    6. '        ' → logprob: -4.946902275085449
    7. 'that' → logprob: -4.946902275085449
    8. 'def' → logprob: -5.071902275085449
    9. ' for' → logprob: -6.071902275085449
    10. ' self' → logprob: -6.196902275085449

Token 555: ' maximizing' (ID: 130999)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8360782861709595
    2. ' the' → logprob: -1.3360782861709595
    3. 'final' → logprob: -2.83607816696167
    4. 'def' → logprob: -2.96107816696167
    5. '       ' → logprob: -3.71107816696167
    6. 'for' → logprob: -3.83607816696167
    7. ' for' → logprob: -3.96107816696167
    8. ' we' → logprob: -4.08607816696167
    9. 'self' → logprob: -4.33607816696167
    10. 'we' → logprob: -4.46107816696167

Token 556: ' score' (ID: 8429)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5752168297767639
    2. 'the' → logprob: -1.7002167701721191
    3. 'final' → logprob: -2.075216770172119
    4. ' final' → logprob: -2.825216770172119
    5. '_' → logprob: -3.950216770172119
    6. 'positions' → logprob: -4.450216770172119
    7. ' self' → logprob: -5.200216770172119
    8. 'score' → logprob: -5.450216770172119
    9. ' positions' → logprob: -5.450216770172119
    10. 'position' → logprob: -5.950216770172119

Token 557: ' equals' (ID: 29702)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7917503118515015
    2. ' ' → logprob: -1.5417503118515015
    3. ')' → logprob: -2.291750431060791
    4. ' is' → logprob: -2.666750431060791
    5. ':' → logprob: -2.916750431060791
    6. '<|end|>' → logprob: -3.791750431060791
    7. '   ' → logprob: -4.041750431060791
    8. '=' → logprob: -4.291750431060791
    9. ' continues' → logprob: -4.916750431060791
    10. ' =' → logprob: -5.166750431060791

Token 558: ' to' (ID: 316)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.36555367708206177
    2. ' sum' → logprob: -1.365553617477417
    3. 'max' → logprob: -4.115553855895996
    4. ' maximizing' → logprob: -4.115553855895996
    5. 'the' → logprob: -4.615553855895996
    6. ' the' → logprob: -5.115553855895996
    7. ' max' → logprob: -7.240553855895996
    8. 'maximize' → logprob: -7.865553855895996
    9. ' summ' → logprob: -8.115553855895996
    10. 'self' → logprob: -8.990553855895996

Token 559: ' maximizing' (ID: 130999)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04315744340419769
    2. ' sum' → logprob: -3.6681573390960693
    3. 'max' → logprob: -4.293157577514648
    4. 'maximize' → logprob: -6.168157577514648
    5. ' maximizing' → logprob: -7.793157577514648
    6. 'self' → logprob: -8.293157577514648
    7. ' max' → logprob: -8.793157577514648
    8. 'the' → logprob: -9.793157577514648
    9. '(sum' → logprob: -11.293157577514648
    10. ' maximize' → logprob: -11.418157577514648

Token 560: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1993619203567505
    2. 'sum' → logprob: -1.1993619203567505
    3. ' the' → logprob: -1.3243619203567505
    4. ' sum' → logprob: -2.449361801147461
    5. 'abs' → logprob: -5.074361801147461
    6. 'score' → logprob: -5.199361801147461
    7. '```' → logprob: -5.324361801147461
    8. 'direction' → logprob: -5.449361801147461
    9. '(sum' → logprob: -5.574361801147461
    10. 'difference' → logprob: -5.699361801147461

Token 561: ' sum' (ID: 4215)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.5187803506851196
    2. 'final' → logprob: -1.7687803506851196
    3. 'difference' → logprob: -1.8937803506851196
    4. ' final' → logprob: -2.26878023147583
    5. 'position' → logprob: -2.39378023147583
    6. 'sum' → logprob: -3.14378023147583
    7. ' positions' → logprob: -3.76878023147583
    8. '+' → logprob: -3.89378023147583
    9. ' sum' → logprob: -4.01878023147583
    10. ' ' → logprob: -4.26878023147583

Token 562: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04466827213764191
    2. ' of' → logprob: -3.794668197631836
    3. ' ' → logprob: -5.044668197631836
    4. ' _' → logprob: -5.419668197631836
    5. '(' → logprob: -5.544668197631836
    6. ' over' → logprob: -6.794668197631836
    7. '[' → logprob: -7.044668197631836
    8. '=' → logprob: -7.169668197631836
    9. ' =' → logprob: -7.544668197631836
    10. '   ' → logprob: -7.794668197631836

Token 563: ' displacement' (ID: 81657)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.282703161239624
    2. '(fi' → logprob: -1.407703161239624
    3. '(piece' → logprob: -2.657703161239624
    4. ' (' → logprob: -2.782703161239624
    5. '(f' → logprob: -2.907703161239624
    6. '(' → logprob: -2.907703161239624
    7. '(final' → logprob: -3.532703161239624
    8. '(abs' → logprob: -3.532703161239624
    9. 'final' → logprob: -3.782703161239624
    10. '(pi' → logprob: -4.032703399658203

Token 564: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6415942311286926
    2. '_' → logprob: -1.1415941715240479
    3. '<|end|>' → logprob: -2.766594171524048
    4. 's' → logprob: -3.891594171524048
    5. '.' → logprob: -4.516594409942627
    6. ' ' → logprob: -4.766594409942627
    7. '[' → logprob: -5.016594409942627
    8. ':' → logprob: -5.266594409942627
    9. '<|end|>' → logprob: -5.391594409942627
    10. '=' → logprob: -5.516594409942627

Token 565: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.835696280002594
    2. 'direction' → logprob: -1.3356962203979492
    3. ' the' → logprob: -2.085696220397949
    4. ' arrow' → logprob: -2.585696220397949
    5. ' direction' → logprob: -2.960696220397949
    6. 'arrow' → logprob: -3.335696220397949
    7. ' directions' → logprob: -4.585696220397949
    8. 'dire' → logprob: -5.835696220397949
    9. 'their' → logprob: -6.960696220397949
    10. 'Arrow' → logprob: -7.835696220397949

Token 566: ' arrow' (ID: 33823)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.44529202580451965
    2. 'direction' → logprob: -1.9452919960021973
    3. ' arrow' → logprob: -2.0702919960021973
    4. 'arrow' → logprob: -3.8202919960021973
    5. ' same' → logprob: -4.570291996002197
    6. ')' → logprob: -4.695291996002197
    7. ' ' → logprob: -4.695291996002197
    8. '+' → logprob: -4.945291996002197
    9. '_arrow' → logprob: -5.445291996002197
    10. ' directions' → logprob: -5.570291996002197

Token 567: ' direction' (ID: 9262)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47742849588394165
    2. '_direction' → logprob: -1.3524284362792969
    3. 'Direction' → logprob: -2.727428436279297
    4. ' _' → logprob: -4.102428436279297
    5. ' ' → logprob: -4.602428436279297
    6. 's' → logprob: -4.727428436279297
    7. ' direction' → logprob: -4.977428436279297
    8. ')' → logprob: -5.602428436279297
    9. 'Directions' → logprob: -6.852428436279297
    10. '[' → logprob: -6.977428436279297

Token 568: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2070908099412918
    2. '       ' → logprob: -2.5820908546447754
    3. '   ' → logprob: -2.5820908546447754
    4. '):' → logprob: -4.957090854644775
    5. '<|end|>' → logprob: -5.207090854644775
    6. ')' → logprob: -5.582090854644775
    7. 'def' → logprob: -6.207090854644775
    8. ' :' → logprob: -6.332090854644775
    9. ':
' → logprob: -6.457090854644775
    10. '[' → logprob: -6.582090854644775

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013059405609965324
    2. '   ' → logprob: -5.138059616088867
    3. ':' → logprob: -6.013059616088867
    4. '        
' → logprob: -6.263059616088867
    5. '):' → logprob: -7.263059616088867
    6. '```' → logprob: -7.638059616088867
    7. ')' → logprob: -8.388059616088867
    8. '
' → logprob: -8.638059616088867
    9. '[' → logprob: -9.388059616088867
    10. 'def' → logprob: -9.388059616088867

Token 570: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11342934519052505
    2. ':' → logprob: -2.988429307937622
    3. '
' → logprob: -4.488429546356201
    4. '   ' → logprob: -4.863429546356201
    5. '        
' → logprob: -4.863429546356201
    6. ' 
' → logprob: -5.363429546356201
    7. '\n' → logprob: -5.488429546356201
    8. '```' → logprob: -5.488429546356201
    9. '\' → logprob: -5.738429546356201
    10. ')' → logprob: -5.988429546356201

Token 571: ' maximum' (ID: 10562)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10038555413484573
    2. 'def' → logprob: -3.9753856658935547
    3. ' final' → logprob: -4.225385665893555
    4. ' p' → logprob: -4.725385665893555
    5. 'final' → logprob: -4.725385665893555
    6. ' sorted' → logprob: -5.350385665893555
    7. 'p' → logprob: -5.475385665893555
    8. ' pieces' → logprob: -5.475385665893555
    9. 'positions' → logprob: -5.475385665893555
    10. '   ' → logprob: -5.600385665893555

Token 572: ' score' (ID: 8429)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2329554557800293
    2. '_score' → logprob: -2.3579554557800293
    3. '_positions' → logprob: -3.2329554557800293
    4. ' _' → logprob: -3.3579554557800293
    5. ' ' → logprob: -4.607955455780029
    6. '_position' → logprob: -4.732955455780029
    7. ' score' → logprob: -4.982955455780029
    8. 'score' → logprob: -5.857955455780029
    9. '_possible' → logprob: -6.232955455780029
    10. ')' → logprob: -6.607955455780029

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5294244289398193
    2. ' =' → logprob: -1.0294244289398193
    3. ':' → logprob: -3.1544244289398193
    4. '(' → logprob: -5.279424667358398
    5. '   ' → logprob: -6.654424667358398
    6. ' ' → logprob: -6.654424667358398
    7. ')' → logprob: -7.154424667358398
    8. ' is' → logprob: -7.904424667358398
    9. '):' → logprob: -7.904424667358398
    10. '_' → logprob: -8.029424667358398

Token 574: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.9967707395553589
    2. 'sum' → logprob: -0.9967707395553589
    3. '0' → logprob: -1.4967707395553589
    4. 'max' → logprob: -4.121770858764648
    5. ' max' → logprob: -4.246770858764648
    6. ' ' → logprob: -5.496770858764648
    7. ' float' → logprob: -6.496770858764648
    8. 'float' → logprob: -6.621770858764648
    9. '   ' → logprob: -7.871770858764648
    10. '(sum' → logprob: -9.871770858764648

Token 575: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07073044031858444
    2. '(
' → logprob: -2.945730447769165
    3. '([' → logprob: -4.945730209350586
    4. '((' → logprob: -5.820730209350586
    5. '(i' → logprob: -5.945730209350586
    6. '(p' → logprob: -7.445730209350586
    7. '(abs' → logprob: -7.445730209350586
    8. 'over' → logprob: -7.695730209350586
    9. '([
' → logprob: -8.570730209350586
    10. ' over' → logprob: -8.695730209350586

Token 576: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13313302397727966
    2. ' i' → logprob: -2.7581329345703125
    3. 'piece' → logprob: -3.5081329345703125
    4. 'p' → logprob: -4.3831329345703125
    5. ' p' → logprob: -5.0081329345703125
    6. 'pieces' → logprob: -5.2581329345703125
    7. ' piece' → logprob: -5.7581329345703125
    8. '(piece' → logprob: -7.1331329345703125
    9. ' all' → logprob: -7.2581329345703125
    10. ' pieces' → logprob: -7.3831329345703125

Token 577: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.14908474683761597
    2. '(' → logprob: -2.8990848064422607
    3. 'of' → logprob: -3.6490848064422607
    4. '   ' → logprob: -4.024084568023682
    5. ' (' → logprob: -5.024084568023682
    6. '       ' → logprob: -5.024084568023682
    7. ':' → logprob: -5.149084568023682
    8. '.' → logprob: -5.649084568023682
    9. '[' → logprob: -5.649084568023682
    10. ' *' → logprob: -5.774084568023682

Token 578: ' abs' (ID: 8443)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2959119379520416
    2. '(p' → logprob: -1.9209119081497192
    3. ' (' → logprob: -3.170912027359009
    4. '(abs' → logprob: -3.420912027359009
    5. 'self' → logprob: -4.29591178894043
    6. '((' → logprob: -5.17091178894043
    7. 'abs' → logprob: -5.29591178894043
    8. '(piece' → logprob: -5.54591178894043
    9. '(' → logprob: -5.92091178894043
    10. '(i' → logprob: -7.04591178894043

Token 579: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.2025356888771057
    2. '(' → logprob: -1.702535629272461
    3. '(piece' → logprob: -7.452535629272461
    4. '(p' → logprob: -8.202535629272461
    5. '(self' → logprob: -8.952535629272461
    6. 'final' → logprob: -10.577535629272461
    7. '(
' → logprob: -10.702535629272461
    8. '((' → logprob: -10.702535629272461
    9. '(`' → logprob: -11.327535629272461
    10. '(abs' → logprob: -11.327535629272461

Token 580: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.053954839706421
    2. '_i' → logprob: -1.053954839706421
    3. '_positions' → logprob: -1.553954839706421
    4. '[' → logprob: -2.928954839706421
    5. '[
' → logprob: -4.928955078125
    6. '[_' → logprob: -5.053955078125
    7. '_pos' → logprob: -5.178955078125
    8. '_' → logprob: -5.428955078125
    9. ')' → logprob: -5.803955078125
    10. '_position' → logprob: -6.053955078125

Token 581: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005991128273308277
    2. '-' → logprob: -5.130990982055664
    3. ' ' → logprob: -10.630990982055664
    4. '[i' → logprob: -11.380990982055664
    5. '[' → logprob: -11.630990982055664
    6. ')' → logprob: -12.505990982055664
    7. '-i' → logprob: -12.755990982055664
    8. ' -
' → logprob: -13.130990982055664
    9. ',' → logprob: -13.380990982055664
    10. ' ' → logprob: -13.880990982055664

Token 582: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3842600882053375
    2. ' p' → logprob: -1.6342600584030151
    3. 'self' → logprob: -3.6342601776123047
    4. ' self' → logprob: -3.8842601776123047
    5. ' pieces' → logprob: -4.009260177612305
    6. ' i' → logprob: -4.009260177612305
    7. 'i' → logprob: -4.384260177612305
    8. '_p' → logprob: -4.634260177612305
    9. ')' → logprob: -4.759260177612305
    10. 'pieces' → logprob: -5.884260177612305

Token 583: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.005370479542762041
    2. '_' → logprob: -6.380370616912842
    3. 'os' → logprob: -6.380370616912842
    4. 'ieces' → logprob: -6.630370616912842
    5. 'i' → logprob: -8.630370140075684
    6. '[i' → logprob: -8.880370140075684
    7. 'osition' → logprob: -9.255370140075684
    8. '_os' → logprob: -9.755370140075684
    9. '_positions' → logprob: -10.505370140075684
    10. ')' → logprob: -10.505370140075684

Token 584: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006048128008842468
    2. ' )' → logprob: -5.256048202514648
    3. ')
' → logprob: -8.131048202514648
    4. '       ' → logprob: -8.256048202514648
    5. '   ' → logprob: -10.131048202514648
    6. '))' → logprob: -10.506048202514648
    7. '),' → logprob: -10.881048202514648
    8. '[' → logprob: -10.881048202514648
    9. '```' → logprob: -11.256048202514648
    10. ')`' → logprob: -11.381048202514648

Token 585: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20822644233703613
    2. ':' → logprob: -2.583226442337036
    3. '   ' → logprob: -3.208226442337036
    4. '
' → logprob: -4.208226203918457
    5. '```' → logprob: -4.208226203918457
    6. 'def' → logprob: -4.583226203918457
    7. ')' → logprob: -4.833226203918457
    8. '):' → logprob: -4.958226203918457
    9. '        
' → logprob: -5.708226203918457
    10. ':
' → logprob: -6.333226203918457

Token 586: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5244981050491333
    2. ' ' → logprob: -0.8994981050491333
    3. '0' → logprob: -6.774497985839844
    4. 'sum' → logprob: -9.899497985839844
    5. '1' → logprob: -10.149497985839844
    6. ' sum' → logprob: -10.399497985839844
    7. ' (' → logprob: -10.649497985839844
    8. '   ' → logprob: -10.774497985839844
    9. '(' → logprob: -11.149497985839844
    10. ' ' → logprob: -11.649497985839844

Token 587: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0037110040429979563
    2. '0' → logprob: -6.253711223602295
    3. ' ' → logprob: -7.003711223602295
    4. 'sum' → logprob: -7.253711223602295
    5. '(' → logprob: -9.503710746765137
    6. '1' → logprob: -10.253710746765137
    7. 'abs' → logprob: -11.628710746765137
    8. 'int' → logprob: -12.003710746765137
    9. 'min' → logprob: -12.191210746765137
    10. '   ' → logprob: -12.253710746765137

Token 588: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005958664696663618
    2. '*' → logprob: -5.130958557128906
    3. ' ' → logprob: -12.130958557128906
    4. '   ' → logprob: -12.255958557128906
    5. ' ' → logprob: -12.880958557128906
    6. '*object' → logprob: -13.130958557128906
    7. '	' → logprob: -13.255958557128906
    8. '*(' → logprob: -13.380958557128906
    9. '    ' → logprob: -13.630958557128906
    10. '**' → logprob: -13.630958557128906

Token 589: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10029228776693344
    2. ' sum' → logprob: -2.350292205810547
    3. '(sum' → logprob: -10.225292205810547
    4. '0' → logprob: -11.225292205810547
    5. 'min' → logprob: -11.225292205810547
    6. 'len' → logprob: -11.600292205810547
    7. 'max' → logprob: -12.600292205810547
    8. '   ' → logprob: -12.850292205810547
    9. ' ' → logprob: -13.100292205810547
    10. '	sum' → logprob: -13.975292205810547

Token 590: ' over' (ID: 1072)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1314921379089355
    2. ' _' → logprob: -1.6314921379089355
    3. '[' → logprob: -2.1314921379089355
    4. 'against' → logprob: -3.0064921379089355
    5. ' ' → logprob: -3.2564921379089355
    6. '_again' → logprob: -3.2564921379089355
    7. ' of' → logprob: -3.3814921379089355
    8. ' against' → logprob: -3.5064921379089355
    9. ' for' → logprob: -4.1314921379089355
    10. 'for' → logprob: -4.1314921379089355

Token 591: ' pieces' (ID: 12762)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5766955614089966
    2. 'i' → logprob: -0.8266955614089966
    3. ' pieces' → logprob: -8.826695442199707
    4. 'moves' → logprob: -9.451695442199707
    5. '[i' → logprob: -9.576695442199707
    6. '(i' → logprob: -9.701695442199707
    7. 'pieces' → logprob: -9.701695442199707
    8. 'range' → logprob: -9.826695442199707
    9. '[' → logprob: -10.326695442199707
    10. ' (' → logprob: -10.826695442199707

Token 592: ' moving' (ID: 10067)
  Prédit: 'against'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'against' → logprob: -0.5783259272575378
    2. '   ' → logprob: -1.3283259868621826
    3. 'op' → logprob: -2.4533259868621826
    4. ' against' → logprob: -3.9533259868621826
    5. '```' → logprob: -4.2033257484436035
    6. '_again' → logprob: -4.3283257484436035
    7. 'with' → logprob: -5.0783257484436035
    8. '_op' → logprob: -5.0783257484436035
    9. 'def' → logprob: -5.4533257484436035
    10. '       ' → logprob: -5.5783257484436035

Token 593: ' against' (ID: 4372)
  Prédit: '_again'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_again' → logprob: -0.8955104351043701
    2. 'against' → logprob: -0.8955104351043701
    3. ' against' → logprob: -1.7705104351043701
    4. '_' → logprob: -5.645510673522949
    5. '_op' → logprob: -6.270510673522949
    6. 'op' → logprob: -6.270510673522949
    7. '_in' → logprob: -7.020510673522949
    8. '```' → logprob: -7.145510673522949
    9. ' _' → logprob: -7.395510673522949
    10. ' opposite' → logprob: -7.395510673522949

Token 594: ' arrow' (ID: 33823)
  Prédit: ' their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' their' → logprob: -1.2371138334274292
    2. '_direction' → logprob: -1.7371138334274292
    3. 'the' → logprob: -1.9871138334274292
    4. ' the' → logprob: -1.9871138334274292
    5. 'direction' → logprob: -2.1121139526367188
    6. 'their' → logprob: -2.3621139526367188
    7. ' direction' → logprob: -3.6121139526367188
    8. '   ' → logprob: -5.237113952636719
    9. ' ' → logprob: -5.487113952636719
    10. '_arrow' → logprob: -6.362113952636719

Token 595: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3994337320327759
    2. '   ' → logprob: -1.3994337320327759
    3. ':' → logprob: -3.5244336128234863
    4. 'def' → logprob: -3.7744336128234863
    5. '):' → logprob: -5.274433612823486
    6. ':
' → logprob: -5.399433612823486
    7. '):
' → logprob: -5.899433612823486
    8. ')' → logprob: -6.024433612823486
    9. '```' → logprob: -6.149433612823486
    10. '(' → logprob: -6.274433612823486

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47562310099601746
    2. '   ' → logprob: -1.7256231307983398
    3. ':' → logprob: -2.22562313079834
    4. ':
' → logprob: -2.85062313079834
    5. '
' → logprob: -4.72562313079834
    6. '):
' → logprob: -4.97562313079834
    7. '        
' → logprob: -5.10062313079834
    8. '):' → logprob: -5.47562313079834
    9. '```' → logprob: -5.85062313079834
    10. 'def' → logprob: -6.22562313079834

Token 597: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06361820548772812
    2. ':' → logprob: -3.5636181831359863
    3. '
' → logprob: -4.563618183135986
    4. '   ' → logprob: -4.813618183135986
    5. '```' → logprob: -5.438618183135986
    6. '        
' → logprob: -5.688618183135986
    7. ':
' → logprob: -6.188618183135986
    8. '):' → logprob: -6.813618183135986
    9. 'def' → logprob: -6.938618183135986
    10. '):
' → logprob: -7.438618183135986

Token 598: ' can' (ID: 665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.4407668113708496
    2. ' ' → logprob: -1.6907668113708496
    3. ' def' → logprob: -1.6907668113708496
    4. '   ' → logprob: -2.1907668113708496
    5. 'def' → logprob: -2.3157668113708496
    6. ' return' → logprob: -3.1907668113708496
    7. '       ' → logprob: -3.5657668113708496
    8. '_' → logprob: -4.31576681137085
    9. ' can' → logprob: -4.44076681137085
    10. '.' → logprob: -4.56576681137085

Token 599: ' prove' (ID: 17717)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7943671941757202
    2. 'return' → logprob: -1.2943671941757202
    3. '   ' → logprob: -2.0443673133850098
    4. '       ' → logprob: -3.2943673133850098
    5. 'def' → logprob: -3.4193673133850098
    6. ' try' → logprob: -3.9193673133850098
    7. ' continue' → logprob: -4.16936731338501
    8. 'continue' → logprob: -4.79436731338501
    9. 'consider' → logprob: -5.66936731338501
    10. ' calculate' → logprob: -5.79436731338501

Token 600: ' the' (ID: 290)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.5340701937675476
    2. 'def' → logprob: -1.9090702533721924
    3. '       ' → logprob: -2.0340702533721924
    4. ' def' → logprob: -3.0340702533721924
    5. '   ' → logprob: -3.6590702533721924
    6. 'that' → logprob: -3.7840702533721924
    7. '```' → logprob: -4.284070014953613
    8. ' the' → logprob: -4.784070014953613
    9. ')' → logprob: -6.159070014953613
    10. '    ' → logprob: -6.284070014953613

Token 601: ' maximum' (ID: 10562)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7338531613349915
    2. '       ' → logprob: -1.8588531017303467
    3. 'final' → logprob: -2.1088531017303467
    4. ' final' → logprob: -2.3588531017303467
    5. '_' → logprob: -3.1088531017303467
    6. ' def' → logprob: -3.6088531017303467
    7. '   ' → logprob: -4.483853340148926
    8. '```' → logprob: -4.733853340148926
    9. ' best' → logprob: -4.983853340148926
    10. ')' → logprob: -5.108853340148926

Token 602: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0145281553268433
    2. '_score' → logprob: -1.6395281553268433
    3. '_' → logprob: -1.7645281553268433
    4. ' _' → logprob: -2.639528274536133
    5. '_positions' → logprob: -3.264528274536133
    6. ' score' → logprob: -3.639528274536133
    7. '```' → logprob: -3.764528274536133
    8. '       ' → logprob: -3.889528274536133
    9. '_position' → logprob: -4.264528274536133
    10. ' return' → logprob: -4.264528274536133

Token 603: ' sum' (ID: 4215)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6985238194465637
    2. ' max' → logprob: -1.198523759841919
    3. 'self' → logprob: -2.323523759841919
    4. 'max' → logprob: -3.323523759841919
    5. '   ' → logprob: -4.073523998260498
    6. '0' → logprob: -4.698523998260498
    7. ' sum' → logprob: -4.698523998260498
    8. ' ' → logprob: -5.073523998260498
    9. '       ' → logprob: -5.323523998260498
    10. 'sum' → logprob: -5.323523998260498

Token 604: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10861245542764664
    2. '(
' → logprob: -2.358612537384033
    3. '   ' → logprob: -6.733612537384033
    4. '_' → logprob: -6.733612537384033
    5. '(self' → logprob: -6.983612537384033
    6. '(p' → logprob: -6.983612537384033
    7. '(range' → logprob: -6.983612537384033
    8. '(i' → logprob: -7.108612537384033
    9. '(abs' → logprob: -7.733612537384033
    10. '       ' → logprob: -7.733612537384033

Token 605: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021041030064225197
    2. ' i' → logprob: -4.521040916442871
    3. 'abs' → logprob: -5.521040916442871
    4. ' abs' → logprob: -6.521040916442871
    5. '(abs' → logprob: -7.021040916442871
    6. '(i' → logprob: -7.146040916442871
    7. 'p' → logprob: -7.396040916442871
    8. 'pieces' → logprob: -7.646040916442871
    9. '(' → logprob: -8.146040916442871
    10. '(p' → logprob: -8.271040916442871

Token 606: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7891274690628052
    2. '   ' → logprob: -1.6641274690628052
    3. '(' → logprob: -2.0391273498535156
    4. 'of' → logprob: -2.6641273498535156
    5. '(p' → logprob: -3.2891273498535156
    6. ')' → logprob: -4.039127349853516
    7. '-' → logprob: -4.289127349853516
    8. ' -' → logprob: -4.539127349853516
    9. '(
' → logprob: -4.664127349853516
    10. '       ' → logprob: -4.664127349853516

Token 607: ' (' (ID: 350)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.49410566687583923
    2. 'abs' → logprob: -1.2441056966781616
    3. '(abs' → logprob: -3.244105577468872
    4. 'final' → logprob: -4.494105815887451
    5. 'i' → logprob: -4.744105815887451
    6. ' (' → logprob: -4.744105815887451
    7. ' final' → logprob: -4.994105815887451
    8. '(p' → logprob: -5.244105815887451
    9. '(final' → logprob: -5.369105815887451
    10. ' i' → logprob: -5.494105815887451

Token 608: 'final' (ID: 17196)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2264330387115479
    2. '(self' → logprob: -2.101433038711548
    3. '(p' → logprob: -2.226433038711548
    4. ' (' → logprob: -2.351433038711548
    5. '(final' → logprob: -2.601433038711548
    6. '(fi' → logprob: -2.851433038711548
    7. 'final' → logprob: -2.976433038711548
    8. '1' → logprob: -3.226433038711548
    9. '((' → logprob: -3.351433038711548
    10. '(f' → logprob: -3.726433038711548

Token 609: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.4039311707019806
    2. '[i' → logprob: -1.1539311408996582
    3. '_pos' → logprob: -4.903931140899658
    4. '[_' → logprob: -6.028931140899658
    5. '_positions' → logprob: -6.278931140899658
    6. ')' → logprob: -6.653931140899658
    7. '[' → logprob: -6.778931140899658
    8. '   ' → logprob: -7.528931140899658
    9. '[
' → logprob: -7.653931140899658
    10. 'pos' → logprob: -7.903931140899658

Token 610: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0026148976758122444
    2. '-' → logprob: -6.002614974975586
    3. ' ' → logprob: -9.377614974975586
    4. ' if' → logprob: -11.127614974975586
    5. ')' → logprob: -11.752614974975586
    6. 'if' → logprob: -11.877614974975586
    7. '[' → logprob: -12.502614974975586
    8. '```' → logprob: -12.502614974975586
    9. ',' → logprob: -12.877614974975586
    10. '>' → logprob: -13.127614974975586

Token 611: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.535220742225647
    2. ' p' → logprob: -0.910220742225647
    3. 'pieces' → logprob: -5.535220623016357
    4. ' pieces' → logprob: -5.660220623016357
    5. 'position' → logprob: -6.910220623016357
    6. '_p' → logprob: -7.160220623016357
    7. 'positions' → logprob: -7.660220623016357
    8. 'self' → logprob: -7.910220623016357
    9. ' self' → logprob: -8.410221099853516
    10. 'pi' → logprob: -8.535221099853516

Token 612: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.012661856599152088
    2. 'osition' → logprob: -4.637661933898926
    3. 'os' → logprob: -6.012661933898926
    4. '_os' → logprob: -8.512661933898926
    5. ' os' → logprob: -9.012661933898926
    6. 'osit' → logprob: -10.387661933898926
    7. 'i' → logprob: -10.887661933898926
    8. '_' → logprob: -11.137661933898926
    9. 'osi' → logprob: -11.762661933898926
    10. '_o' → logprob: -11.762661933898926

Token 613: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013559521175920963
    2. ' if' → logprob: -7.37635612487793
    3. ' )' → logprob: -8.25135612487793
    4. ')*' → logprob: -8.50135612487793
    5. '[i' → logprob: -9.37635612487793
    6. ')
' → logprob: -10.37635612487793
    7. '       ' → logprob: -10.37635612487793
    8. 'if' → logprob: -10.50135612487793
    9. '   ' → logprob: -10.87635612487793
    10. ' *' → logprob: -11.00135612487793

Token 614: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058877818286418915
    2. '   ' → logprob: -3.30887770652771
    3. ':' → logprob: -4.558877944946289
    4. '
' → logprob: -5.808877944946289
    5. '        
' → logprob: -6.183877944946289
    6. 'def' → logprob: -6.683877944946289
    7. '):' → logprob: -6.933877944946289
    8. ' :' → logprob: -7.808877944946289
    9. '```' → logprob: -7.808877944946289
    10. ':
' → logprob: -7.808877944946289

Token 615: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2522425949573517
    2. ' (' → logprob: -1.5022425651550293
    3. '((' → logprob: -8.627243041992188
    4. '(-' → logprob: -9.627243041992188
    5. ' ((' → logprob: -10.502243041992188
    6. '((-' → logprob: -11.252243041992188
    7. ' (-' → logprob: -11.377243041992188
    8. '1' → logprob: -12.127243041992188
    9. '{' → logprob: -12.627243041992188
    10. '(
' → logprob: -12.877243041992188

Token 616: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030093861743807793
    2. ' (' → logprob: -3.5300939083099365
    3. '1' → logprob: -8.030094146728516
    4. '(-' → logprob: -12.155094146728516
    5. '{' → logprob: -12.405094146728516
    6. '((' → logprob: -12.530094146728516
    7. ' ' → logprob: -13.530094146728516
    8. '   ' → logprob: -13.655094146728516
    9. '[' → logprob: -14.280094146728516
    10. '(
' → logprob: -14.655094146728516

Token 617: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008757212199270725
    2. 'if' → logprob: -4.7587571144104
    3. ' *' → logprob: -10.508757591247559
    4. '   ' → logprob: -11.133757591247559
    5. '       ' → logprob: -11.133757591247559
    6. '	if' → logprob: -11.133757591247559
    7. 'If' → logprob: -11.258757591247559
    8. '*' → logprob: -11.383757591247559
    9. ')' → logprob: -11.508757591247559
    10. ' ' → logprob: -12.008757591247559

Token 618: ' arrow' (ID: 33823)
  Prédit: '(piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(piece' → logprob: -0.942052960395813
    2. 'self' → logprob: -2.0670528411865234
    3. ' self' → logprob: -2.1920528411865234
    4. ' (' → logprob: -2.1920528411865234
    5. 'piece' → logprob: -2.1920528411865234
    6. ' piece' → logprob: -2.5670528411865234
    7. '(p' → logprob: -3.4420528411865234
    8. ' pieces' → logprob: -4.192052841186523
    9. '(self' → logprob: -4.567052841186523
    10. 'pieces' → logprob: -5.317052841186523

Token 619: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02359052561223507
    2. ' ==' → logprob: -3.773590564727783
    3. ')' → logprob: -8.648590087890625
    4. ')==' → logprob: -10.023590087890625
    5. '   ' → logprob: -10.273590087890625
    6. '=' → logprob: -10.398590087890625
    7. 'Direction' → logprob: -10.773590087890625
    8. '==-' → logprob: -11.898590087890625
    9. ']==' → logprob: -12.398590087890625
    10. '==
' → logprob: -12.523590087890625

Token 620: 'right' (ID: 2460)
  Prédit: 'Arrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arrow' → logprob: -0.10015178471803665
    2. 'Direction' → logprob: -3.225151777267456
    3. ' Arrow' → logprob: -3.350151777267456
    4. 'Right' → logprob: -4.100152015686035
    5. ' right' → logprob: -6.975152015686035
    6. '==' → logprob: -6.975152015686035
    7. 'right' → logprob: -7.975152015686035
    8. ' ==' → logprob: -7.975152015686035
    9. 'Piece' → logprob: -8.350152015686035
    10. 'RIGHT' → logprob: -8.600152015686035

Token 621: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.014202998019754887
    2. 'else' → logprob: -4.264203071594238
    3. ' ' → logprob: -11.514203071594238
    4. ')' → logprob: -11.764203071594238
    5. '       ' → logprob: -12.389203071594238
    6. '        ' → logprob: -12.514203071594238
    7. '           ' → logprob: -12.764203071594238
    8. ' -' → logprob: -13.389203071594238
    9. '	else' → logprob: -13.514203071594238
    10. ' ' → logprob: -13.764203071594238

Token 622: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07008782029151917
    2. ' -' → logprob: -2.6950879096984863
    3. '1' → logprob: -9.070087432861328
    4. ' ' → logprob: -10.695087432861328
    5. '(-' → logprob: -12.695087432861328
    6. '   ' → logprob: -13.070087432861328
    7. ')' → logprob: -13.195087432861328
    8. ' else' → logprob: -13.445087432861328
    9. 'else' → logprob: -14.195087432861328
    10. '−' → logprob: -14.570087432861328

Token 623: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026886403560638428
    2. ' -' → logprob: -3.776886463165283
    3. '1' → logprob: -5.651886463165283
    4. '(-' → logprob: -9.651885986328125
    5. ' ' → logprob: -9.901885986328125
    6. '(' → logprob: -12.901885986328125
    7. ' (-' → logprob: -13.276885986328125
    8. '   ' → logprob: -13.526885986328125
    9. '−' → logprob: -13.776885986328125
    10. ')' → logprob: -14.026885986328125

Token 624: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020568810869008303
    2. ')`' → logprob: -7.502057075500488
    3. '   ' → logprob: -7.627057075500488
    4. '       ' → logprob: -7.752057075500488
    5. ' )' → logprob: -8.127057075500488
    6. ')
' → logprob: -8.877057075500488
    7. '):' → logprob: -10.877057075500488
    8. '`)' → logprob: -10.877057075500488
    9. ')`
' → logprob: -11.377057075500488
    10. ':' → logprob: -11.377057075500488

Token 625: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6522149443626404
    2. '       ' → logprob: -0.9022149443626404
    3. ':' → logprob: -3.527215003967285
    4. '):' → logprob: -4.902215003967285
    5. '        
' → logprob: -5.152215003967285
    6. '```' → logprob: -5.277215003967285
    7. '):
' → logprob: -5.527215003967285
    8. '
' → logprob: -5.527215003967285
    9. 'def' → logprob: -5.652215003967285
    10. '    
' → logprob: -5.652215003967285

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10167966037988663
    2. '   ' → logprob: -2.351679563522339
    3. 'def' → logprob: -7.101679801940918
    4. ')' → logprob: -8.976679801940918
    5. ':' → logprob: -9.101679801940918
    6. '
' → logprob: -9.351679801940918
    7. '        
' → logprob: -9.351679801940918
    8. '):' → logprob: -9.851679801940918
    9. '```' → logprob: -9.976679801940918
    10. ' def' → logprob: -10.351679801940918

Token 627: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006394538097083569
    2. 'def' → logprob: -5.381394386291504
    3. '   ' → logprob: -6.631394386291504
    4. ' def' → logprob: -9.006394386291504
    5. '```' → logprob: -9.256394386291504
    6. '        
' → logprob: -9.881394386291504
    7. ')' → logprob: -10.131394386291504
    8. '):' → logprob: -10.381394386291504
    9. '):
' → logprob: -11.006394386291504
    10. '
' → logprob: -11.006394386291504

Token 628: ' assign' (ID: 14975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9895936846733093
    2. '   ' → logprob: -1.489593744277954
    3. ' ' → logprob: -1.739593744277954
    4. ' def' → logprob: -2.364593744277954
    5. '       ' → logprob: -3.864593744277954
    6. '
' → logprob: -3.989593744277954
    7. ')' → logprob: -4.114593505859375
    8. ' can' → logprob: -4.114593505859375
    9. '.' → logprob: -4.364593505859375
    10. ' need' → logprob: -4.864593505859375

Token 629: ' final' (ID: 1721)
  Prédit: ' final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' final' → logprob: -0.6941940188407898
    2. 'final' → logprob: -0.6941940188407898
    3. '   ' → logprob: -8.194193840026855
    4. '       ' → logprob: -8.944193840026855
    5. ' the' → logprob: -9.194193840026855
    6. '
' → logprob: -9.444193840026855
    7. '[' → logprob: -9.819193840026855
    8. '	final' → logprob: -9.944193840026855
    9. ' =' → logprob: -10.319193840026855
    10. '```' → logprob: -10.444193840026855

Token 630: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.035069361329078674
    2. '_' → logprob: -3.660069465637207
    3. 'positions' → logprob: -6.035069465637207
    4. '   ' → logprob: -6.660069465637207
    5. ' positions' → logprob: -7.035069465637207
    6. ' _' → logprob: -7.160069465637207
    7. '[i' → logprob: -7.160069465637207
    8. '_i' → logprob: -7.660069465637207
    9. ' =' → logprob: -7.785069465637207
    10. 'Positions' → logprob: -7.785069465637207

Token 631: ' equal' (ID: 12629)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4745464324951172
    2. ' =' → logprob: -0.9745464324951172
    3. '   ' → logprob: -8.474546432495117
    4. ' as' → logprob: -9.599546432495117
    5. '=
' → logprob: -9.849546432495117
    6. '=i' → logprob: -10.099546432495117
    7. '[i' → logprob: -11.099546432495117
    8. '    ' → logprob: -11.099546432495117
    9. '```' → logprob: -11.474546432495117
    10. ' =
' → logprob: -11.599546432495117

Token 632: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03963550925254822
    2. ' =' → logprob: -4.28963565826416
    3. ' to' → logprob: -4.41463565826416
    4. '   ' → logprob: -5.28963565826416
    5. 'to' → logprob: -5.66463565826416
    6. '=list' → logprob: -5.78963565826416
    7. '(range' → logprob: -8.03963565826416
    8. '       ' → logprob: -8.03963565826416
    9. 'range' → logprob: -8.28963565826416
    10. '_to' → logprob: -8.91463565826416

Token 633: ' ' (ID: 220)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.979788601398468
    2. 'list' → logprob: -0.979788601398468
    3. 'range' → logprob: -1.6047885417938232
    4. ' range' → logprob: -3.7297885417938232
    5. '[i' → logprob: -4.729788780212402
    6. '[' → logprob: -5.229788780212402
    7. 'i' → logprob: -5.979788780212402
    8. 'sorted' → logprob: -6.479788780212402
    9. '[list' → logprob: -6.479788780212402
    10. ' [' → logprob: -6.604788780212402

Token 634: '1' (ID: 16)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.33565133810043335
    2. 'range' → logprob: -1.3356513977050781
    3. 'sorted' → logprob: -3.960651397705078
    4. ' list' → logprob: -6.710651397705078
    5. 'i' → logprob: -7.085651397705078
    6. '[i' → logprob: -7.460651397705078
    7. '[' → logprob: -8.960651397705078
    8. ' range' → logprob: -8.960651397705078
    9. '[list' → logprob: -9.210651397705078
    10. '1' → logprob: -10.460651397705078

Token 635: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5515415072441101
    2. '<|end|>' → logprob: -1.0515415668487549
    3. ' ' → logprob: -4.051541328430176
    4. ')' → logprob: -4.176541328430176
    5. '...' → logprob: -4.551541328430176
    6. '.' → logprob: -4.801541328430176
    7. '..' → logprob: -5.676541328430176
    8. '  ' → logprob: -5.801541328430176
    9. '
' → logprob: -5.801541328430176
    10. ',
' → logprob: -6.051541328430176

Token 636: ' N' (ID: 478)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.012894894927740097
    2. ' len' → logprob: -4.887895107269287
    3. 'self' → logprob: -5.262895107269287
    4. ' self' → logprob: -9.637894630432129
    5. '
' → logprob: -11.387894630432129
    6. '(len' → logprob: -11.762894630432129
    7. '[len' → logprob: -12.887894630432129
    8. '   ' → logprob: -13.012894630432129
    9. '=len' → logprob: -13.387894630432129
    10. '```' → logprob: -13.762894630432129

Token 637: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02527156099677086
    2. '   ' → logprob: -4.650271415710449
    3. ':' → logprob: -4.775271415710449
    4. 'def' → logprob: -5.900271415710449
    5. '```' → logprob: -6.900271415710449
    6. ',' → logprob: -8.27527141571045
    7. ' ' → logprob: -8.27527141571045
    8. '=' → logprob: -8.40027141571045
    9. '):' → logprob: -8.40027141571045
    10. '        
' → logprob: -8.52527141571045

Token 638: ' ascending' (ID: 75564)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.9740452766418457
    2. 'sorted' → logprob: -1.0990452766418457
    3. ' order' → logprob: -2.3490452766418457
    4. 'ascending' → logprob: -2.7240452766418457
    5. 'the' → logprob: -3.4740452766418457
    6. 'range' → logprob: -3.4740452766418457
    7. 'in' → logprob: -3.9740452766418457
    8. 'self' → logprob: -4.099045276641846
    9. ' sorted' → logprob: -4.599045276641846
    10. ' ascending' → logprob: -4.724045276641846

Token 639: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.016377907246351242
    2. 'order' → logprob: -4.141377925872803
    3. '_order' → logprob: -8.266377449035645
    4. ' ' → logprob: -9.766377449035645
    5. '_' → logprob: -10.891377449035645
    6. ' _' → logprob: -11.766377449035645
    7. ',' → logprob: -14.641377449035645
    8. '	order' → logprob: -14.641377449035645
    9. ' ' → logprob: -14.766377449035645
    10. '   ' → logprob: -15.016377449035645

Token 640: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0645373985171318
    2. ':' → logprob: -3.689537286758423
    3. '   ' → logprob: -4.564537525177002
    4. '
' → logprob: -5.439537525177002
    5. '):' → logprob: -5.439537525177002
    6. ':
' → logprob: -5.564537525177002
    7. ',' → logprob: -5.814537525177002
    8. '        
' → logprob: -5.939537525177002
    9. ')' → logprob: -6.314537525177002
    10. ' and' → logprob: -6.689537525177002

Token 641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004561019130051136
    2. '   ' → logprob: -5.879560947418213
    3. '```' → logprob: -7.879560947418213
    4. 'def' → logprob: -8.004561424255371
    5. '):' → logprob: -8.504561424255371
    6. '        
' → logprob: -8.629561424255371
    7. ':' → logprob: -8.629561424255371
    8. ')' → logprob: -8.754561424255371
    9. ',' → logprob: -9.754561424255371
    10. '           ' → logprob: -10.129561424255371

Token 642: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008931171614676714
    2. '   ' → logprob: -7.6258931159973145
    3. '```' → logprob: -8.625893592834473
    4. '        
' → logprob: -9.500893592834473
    5. 'def' → logprob: -9.875893592834473
    6. ':' → logprob: -10.875893592834473
    7. ')' → logprob: -11.250893592834473
    8. '):' → logprob: -11.500893592834473
    9. '           ' → logprob: -11.625893592834473
    10. ',' → logprob: -11.625893592834473

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003751423500943929
    2. '        
' → logprob: -8.750374794006348
    3. 'def' → logprob: -9.250374794006348
    4. '   ' → logprob: -9.875374794006348
    5. '```' → logprob: -11.125374794006348
    6. '
' → logprob: -11.250374794006348
    7. '    
' → logprob: -11.500374794006348
    8. ')' → logprob: -12.250374794006348
    9. '      ' → logprob: -12.375374794006348
    10. ' def' → logprob: -12.500374794006348

Token 644: ' N' (ID: 478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011297365417703986
    2. 'n' → logprob: -7.126129627227783
    3. 'p' → logprob: -8.376130104064941
    4. 'pieces' → logprob: -10.626130104064941
    5. 'sorted' → logprob: -10.876130104064941
    6. 'positions' → logprob: -11.001130104064941
    7. 'def' → logprob: -11.626130104064941
    8. ' n' → logprob: -12.626130104064941
    9. '   ' → logprob: -12.751130104064941
    10. '```' → logprob: -13.001130104064941

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788998156785965
    2. '=' → logprob: -2.57889986038208
    3. ')' → logprob: -12.578899383544922
    4. ' ' → logprob: -13.328899383544922
    5. ' =
' → logprob: -13.578899383544922
    6. ',' → logprob: -14.078899383544922
    7. '=len' → logprob: -14.078899383544922
    8. '=int' → logprob: -14.578899383544922
    9. '       ' → logprob: -15.078899383544922
    10. ' ' → logprob: -15.703899383544922

Token 646: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10020667314529419
    2. ' len' → logprob: -2.3502066135406494
    3. '   ' → logprob: -17.22520637512207
    4. '       ' → logprob: -18.72520637512207
    5. '(len' → logprob: -19.10020637512207
    6. '	len' → logprob: -19.72520637512207
    7. '[len' → logprob: -20.35020637512207
    8. '=len' → logprob: -20.97520637512207
    9. 'self' → logprob: -21.10020637512207
    10. ' ' → logprob: -22.22520637512207

Token 647: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008622255176305771
    2. '(' → logprob: -4.758622169494629
    3. '(
' → logprob: -11.883622169494629
    4. 'self' → logprob: -15.008622169494629
    5. '(this' → logprob: -15.008622169494629
    6. '(s' → logprob: -15.758622169494629
    7. ' (' → logprob: -17.133623123168945
    8. '(

' → logprob: -17.133623123168945
    9. '(sel' → logprob: -17.633623123168945
    10. '(se' → logprob: -18.383623123168945

Token 648: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -13.000003814697266
    3. ' .' → logprob: -14.125003814697266
    4. '(p' → logprob: -15.375003814697266
    5. ').' → logprob: -15.750003814697266
    6. 'pieces' → logprob: -15.875003814697266
    7. 'p' → logprob: -16.250003814697266
    8. '.points' → logprob: -16.500003814697266
    9. '.parts' → logprob: -17.250003814697266
    10. '.positions' → logprob: -17.875003814697266

Token 649: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -8.061054359131958e-06
    2. 'pieces' → logprob: -11.750007629394531
    3. 'ie' → logprob: -17.12500762939453
    4. 'iece' → logprob: -17.50000762939453
    5. 'ices' → logprob: -18.62500762939453
    6. 'i' → logprob: -19.00000762939453
    7. 'iec' → logprob: -19.12500762939453
    8. '```' → logprob: -19.25000762939453
    9. '   ' → logprob: -19.50000762939453
    10. ' pieces' → logprob: -19.75000762939453

Token 650: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003380846756044775
    2. ')
' → logprob: -8.000338554382324
    3. '       ' → logprob: -13.375338554382324
    4. ')
' → logprob: -15.375338554382324
    5. ' )' → logprob: -15.500338554382324
    6. '   ' → logprob: -15.500338554382324
    7. '
' → logprob: -16.375337600708008
    8. ')

' → logprob: -16.500337600708008
    9. '),' → logprob: -17.250337600708008
    10. '<|end|>' → logprob: -17.250337600708008

Token 651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08681213855743408
    2. '
' → logprob: -2.8368120193481445
    3. '        
' → logprob: -4.0868120193481445
    4. '```' → logprob: -6.4618120193481445
    5. 'sorted' → logprob: -7.0868120193481445
    6. ' sorted' → logprob: -7.2118120193481445
    7. ' 
' → logprob: -7.5868120193481445
    8. 'positions' → logprob: -7.5868120193481445
    9. '  
' → logprob: -7.8368120193481445
    10. '_sorted' → logprob: -8.336812019348145

Token 652: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5819931030273438
    2. 'positions' → logprob: -1.4569931030273438
    3. 'self' → logprob: -2.3319931030273438
    4. ' positions' → logprob: -3.7069931030273438
    5. 'p' → logprob: -3.8319931030273438
    6. 'final' → logprob: -3.8319931030273438
    7. ' self' → logprob: -4.456993103027344
    8. 'sorted' → logprob: -4.456993103027344
    9. 'pieces' → logprob: -5.331993103027344
    10. ' final' → logprob: -5.456993103027344

Token 653: ' Sort' (ID: 25945)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.13633713126182556
    2. 'self' → logprob: -2.5113370418548584
    3. '#' → logprob: -4.5113372802734375
    4. 'sorted' → logprob: -4.5113372802734375
    5. 'p' → logprob: -4.7613372802734375
    6. 'final' → logprob: -5.0113372802734375
    7. 'pieces' → logprob: -5.1363372802734375
    8. 'pos' → logprob: -6.2613372802734375
    9. 'initial' → logprob: -7.2613372802734375
    10. '       ' → logprob: -8.011337280273438

Token 654: ' pieces' (ID: 12762)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22468768060207367
    2. 'pieces' → logprob: -2.2246875762939453
    3. '       ' → logprob: -3.0996875762939453
    4. '(self' → logprob: -3.5996875762939453
    5. 'positions' → logprob: -4.349687576293945
    6. ' self' → logprob: -6.224687576293945
    7. 'p' → logprob: -6.849687576293945
    8. 'by' → logprob: -6.849687576293945
    9. '_positions' → logprob: -7.099687576293945
    10. '_p' → logprob: -7.099687576293945

Token 655: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45786046981811523
    2. ' =' → logprob: -1.8328604698181152
    3. 'by' → logprob: -2.5828604698181152
    4. '       ' → logprob: -2.7078604698181152
    5. ' by' → logprob: -3.4578604698181152
    6. '_by' → logprob: -3.7078604698181152
    7. '_sorted' → logprob: -6.457860469818115
    8. '.sort' → logprob: -6.707860469818115
    9. '=self' → logprob: -6.832860469818115
    10. '(self' → logprob: -6.832860469818115

Token 656: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.40002456307411194
    2. 'lambda' → logprob: -1.1500245332717896
    3. 'p' → logprob: -5.4000244140625
    4. 'key' → logprob: -5.7750244140625
    5. 'piece' → logprob: -5.7750244140625
    6. ' lambda' → logprob: -6.2750244140625
    7. '=lambda' → logprob: -8.7750244140625
    8. ' position' → logprob: -9.0250244140625
    9. '(lambda' → logprob: -9.9000244140625
    10. '   ' → logprob: -9.9000244140625

Token 657: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19900763034820557
    2. ',' → logprob: -2.824007511138916
    3. ' =' → logprob: -3.324007511138916
    4. '=' → logprob: -3.699007511138916
    5. '
' → logprob: -4.449007511138916
    6. '.sort' → logprob: -4.574007511138916
    7. 'self' → logprob: -4.574007511138916
    8. '_sorted' → logprob: -5.449007511138916
    9. '        
' → logprob: -5.574007511138916
    10. ',
' → logprob: -5.574007511138916

Token 658: ' assign' (ID: 14975)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.46097391843795776
    2. 'sort' → logprob: -1.8359739780426025
    3. '_positions' → logprob: -2.0859739780426025
    4. 's' → logprob: -4.085973739624023
    5. ' positions' → logprob: -4.085973739624023
    6. 'pos' → logprob: -4.835973739624023
    7. 'sorted' → logprob: -5.460973739624023
    8. ' =' → logprob: -5.460973739624023
    9. '=' → logprob: -5.585973739624023
    10. 'continue' → logprob: -5.585973739624023

Token 659: ' final' (ID: 1721)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47328585386276245
    2. 'final' → logprob: -1.4732859134674072
    3. 'positions' → logprob: -3.3482859134674072
    4. ' final' → logprob: -3.7232859134674072
    5. '       ' → logprob: -3.9732859134674072
    6. 'key' → logprob: -4.098285675048828
    7. 'sorted' → logprob: -4.098285675048828
    8. ' self' → logprob: -4.348285675048828
    9. ' key' → logprob: -4.348285675048828
    10. ' positions' → logprob: -5.473285675048828

Token 660: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.019006604328751564
    2. 'positions' → logprob: -4.144006729125977
    3. '_pos' → logprob: -6.519006729125977
    4. '_' → logprob: -7.269006729125977
    5. '_position' → logprob: -8.519006729125977
    6. ' positions' → logprob: -9.144006729125977
    7. 'pos' → logprob: -9.144006729125977
    8. '```' → logprob: -9.269006729125977
    9. '   ' → logprob: -9.769006729125977
    10. '_final' → logprob: -9.769006729125977

Token 661: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09060028195381165
    2. ',' → logprob: -3.5906002521514893
    3. 'self' → logprob: -3.9656002521514893
    4. ' =' → logprob: -4.340600490570068
    5. '=' → logprob: -4.590600490570068
    6. '.' → logprob: -5.715600490570068
    7. 'sorted' → logprob: -5.965600490570068
    8. '.sort' → logprob: -6.215600490570068
    9. 'pieces' → logprob: -6.715600490570068
    10. '_sorted' → logprob: -6.840600490570068

Token 662: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5615898966789246
    2. '       ' → logprob: -1.5615899562835693
    3. '=' → logprob: -1.6865899562835693
    4. '=self' → logprob: -4.31158971786499
    5. ',' → logprob: -4.81158971786499
    6. '(self' → logprob: -5.06158971786499
    7. ' =' → logprob: -6.68658971786499
    8. 'sorted' → logprob: -6.68658971786499
    9. '=
' → logprob: -7.06158971786499
    10. '        
' → logprob: -7.06158971786499

Token 663: '..' (ID: 485)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1608588695526123
    2. ',' → logprob: -2.7858588695526123
    3. ' through' → logprob: -3.9108588695526123
    4. '
' → logprob: -4.660859107971191
    5. '   ' → logprob: -4.785859107971191
    6. '+' → logprob: -4.785859107971191
    7. '.' → logprob: -4.910859107971191
    8. ' +' → logprob: -5.285859107971191
    9. '..' → logprob: -5.660859107971191
    10. 'for' → logprob: -5.785859107971191

Token 664: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008176698349416256
    2. ' N' → logprob: -4.883176803588867
    3. ',' → logprob: -7.633176803588867
    4. '
' → logprob: -11.383176803588867
    5. '   ' → logprob: -11.383176803588867
    6. '...' → logprob: -11.508176803588867
    7. ',N' → logprob: -11.508176803588867
    8. ' ' → logprob: -11.633176803588867
    9. '=' → logprob: -11.883176803588867
    10. ',
' → logprob: -12.383176803588867

Token 665: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012516716495156288
    2. 'self' → logprob: -5.262516498565674
    3. ',' → logprob: -5.387516498565674
    4. '        
' → logprob: -7.012516498565674
    5. '
' → logprob: -7.262516498565674
    6. '<|end|>' → logprob: -8.137516975402832
    7. ',
' → logprob: -8.637516975402832
    8. ')' → logprob: -9.012516975402832
    9. '.' → logprob: -9.387516975402832
    10. '```' → logprob: -9.637516975402832

Token 666: ' ascending' (ID: 75564)
  Prédit: 'ascending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ascending' → logprob: -0.02346232905983925
    2. 'in' → logprob: -4.648462295532227
    3. ' ascending' → logprob: -4.898462295532227
    4. 'sorted' → logprob: -5.398462295532227
    5. 'order' → logprob: -7.523462295532227
    6. 'asc' → logprob: -7.648462295532227
    7. 'self' → logprob: -8.148462295532227
    8. 'creasing' → logprob: -8.898462295532227
    9. 'range' → logprob: -9.398462295532227
    10. ' increasing' → logprob: -10.273462295532227

Token 667: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.47927844524383545
    2. 'order' → logprob: -1.2292784452438354
    3. '_order' → logprob: -2.604278564453125
    4. '_' → logprob: -4.729278564453125
    5. ')' → logprob: -5.479278564453125
    6. ',' → logprob: -7.854278564453125
    7. '_p' → logprob: -8.354278564453125
    8. '.' → logprob: -9.104278564453125
    9. ' _' → logprob: -9.354278564453125
    10. '   ' → logprob: -10.104278564453125

Token 668: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046240516006946564
    2. '
' → logprob: -3.1712405681610107
    3. '        
' → logprob: -6.671240329742432
    4. ',' → logprob: -7.671240329742432
    5. '```' → logprob: -7.796240329742432
    6. 'self' → logprob: -8.04624080657959
    7. 'sorted' → logprob: -8.79624080657959
    8. ')' → logprob: -9.42124080657959
    9. '<|end|>' → logprob: -9.54624080657959
    10. '_sorted' → logprob: -9.79624080657959

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003764535649679601
    2. '        
' → logprob: -8.50037670135498
    3. '
' → logprob: -9.50037670135498
    4. 'self' → logprob: -9.87537670135498
    5. 'sorted' → logprob: -11.00037670135498
    6. ',' → logprob: -11.50037670135498
    7. '```' → logprob: -11.75037670135498
    8. 'pieces' → logprob: -13.50037670135498
    9. '_sorted' → logprob: -13.50037670135498
    10. ' sorted' → logprob: -13.50037670135498

Token 670: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4965243339538574
    2. 'self' (adapté à ' self') → logprob: -1.2465243339538574
    3. ' self' → logprob: -2.7465243339538574
    4. 'sorted' → logprob: -4.246524333953857
    5. ' sorted' → logprob: -4.496524333953857
    6. 'pieces' → logprob: -4.746524333953857
    7. ' pieces' → logprob: -5.621524333953857
    8. '        
' → logprob: -7.121524333953857
    9. '```' → logprob: -7.621524333953857
    10. '
' → logprob: -8.871524810791016

Token 671: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.06212744489312172
    2. '.' → logprob: -2.8121273517608643
    3. ' .' → logprob: -8.937127113342285
    4. '.
' → logprob: -11.687127113342285
    5. '.points' → logprob: -12.812127113342285
    6. '
' → logprob: -13.312127113342285
    7. '.п' → logprob: -13.437127113342285
    8. '.s' → logprob: -13.562127113342285
    9. '.parts' → logprob: -13.562127113342285
    10. '‌.' → logprob: -13.687127113342285

Token 672: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.00595664931461215
    2. 'pieces' → logprob: -5.130956649780273
    3. 'ices' → logprob: -11.755956649780273
    4. 'ie' → logprob: -12.505956649780273
    5. '_p' → logprob: -12.505956649780273
    6. 'iece' → logprob: -12.630956649780273
    7. '.p' → logprob: -12.630956649780273
    8. '=' → logprob: -14.380956649780273
    9. ' pieces' → logprob: -14.505956649780273
    10. '_' → logprob: -14.630956649780273

Token 673: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.018154270946979523
    2. '.' → logprob: -4.018154144287109
    3. '.sorted' → logprob: -13.39315414428711
    4. 'sort' → logprob: -13.64315414428711
    5. '=' → logprob: -14.01815414428711
    6. '_sorted' → logprob: -14.76815414428711
    7. 'sorted' → logprob: -16.01815414428711
    8. '.Sort' → logprob: -16.39315414428711
    9. ' .' → logprob: -16.76815414428711
    10. '.=' → logprob: -16.89315414428711

Token 674: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.004425490275025368
    2. '()' → logprob: -5.504425525665283
    3. '(' → logprob: -8.004425048828125
    4. '(
' → logprob: -11.879425048828125
    5. '(reverse' → logprob: -13.004425048828125
    6. 'key' → logprob: -13.129425048828125
    7. '()
' → logprob: -13.504425048828125
    8. '(lambda' → logprob: -15.754425048828125
    9. '()(' → logprob: -16.254425048828125
    10. '```' → logprob: -16.879425048828125

Token 675: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0011761783389374614
    2. '=' → logprob: -6.751176357269287
    3. 'lambda' → logprob: -12.251175880432129
    4. '(lambda' → logprob: -13.876175880432129
    5. '=
' → logprob: -15.251175880432129
    6. ' lambda' → logprob: -18.626176834106445
    7. '_lambda' → logprob: -18.751176834106445
    8. '=.' → logprob: -19.376176834106445
    9. 'attr' → logprob: -20.126176834106445
    10. 'operator' → logprob: -20.376176834106445

Token 676: ' x' (ID: 1215)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.5061587691307068
    2. 'p' → logprob: -1.2561588287353516
    3. ' piece' → logprob: -2.5061588287353516
    4. ' p' → logprob: -3.5061588287353516
    5. 'x' → logprob: -7.256158828735352
    6. '(piece' → logprob: -9.881158828735352
    7. 'pi' → logprob: -10.006158828735352
    8. ' x' → logprob: -10.256158828735352
    9. 'pie' → logprob: -12.256158828735352
    10. 'piec' → logprob: -12.881158828735352

Token 677: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3435186445713043
    2. 'x' → logprob: -1.468518614768982
    3. ' x' → logprob: -3.2185187339782715
    4. '=' → logprob: -4.5935187339782715
    5. '.' → logprob: -4.8435187339782715
    6. '=lambda' → logprob: -6.4685187339782715
    7. 'lambda' → logprob: -7.9685187339782715
    8. ':x' → logprob: -9.343518257141113
    9. ' :' → logprob: -9.468518257141113
    10. '   ' → logprob: -9.468518257141113

Token 678: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005236598663032055
    2. ' x' → logprob: -5.255236625671387
    3. 'lambda' → logprob: -12.880236625671387
    4. 'piece' → logprob: -16.25523567199707
    5. ' lambda' → logprob: -16.50523567199707
    6. 'p' → logprob: -17.63023567199707
    7. '(x' → logprob: -18.38023567199707
    8. 'position' → logprob: -18.50523567199707
    9. '	x' → logprob: -20.25523567199707
    10. ' piece' → logprob: -20.75523567199707

Token 679: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -1.1875571544806007e-05
    2. '.' → logprob: -11.500011444091797
    3. 'position' → logprob: -13.875011444091797
    4. '.x' → logprob: -14.875011444091797
    5. ' .' → logprob: -15.625011444091797
    6. ':' → logprob: -16.125011444091797
    7. '.pos' → logprob: -16.125011444091797
    8. '[position' → logprob: -17.125011444091797
    9. '.p' → logprob: -17.625011444091797
    10. 'osition' → logprob: -18.375011444091797

Token 680: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ')
' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.25001335144043
    4. '       ' → logprob: -15.50001335144043
    5. '   ' → logprob: -15.87501335144043
    6. '))' → logprob: -16.37501335144043
    7. ',' → logprob: -16.75001335144043
    8. ')`' → logprob: -17.12501335144043
    9. ')
' → logprob: -17.37501335144043
    10. ')

' → logprob: -18.25001335144043

Token 681: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073780277743935585
    2. '        
' → logprob: -5.507378101348877
    3. 'score' → logprob: -5.882378101348877
    4. '
' → logprob: -8.882377624511719
    5. '```' → logprob: -8.882377624511719
    6. ' score' → logprob: -9.132377624511719
    7. '_score' → logprob: -11.132377624511719
    8. 'final' → logprob: -11.132377624511719
    9. ',' → logprob: -11.132377624511719
    10. 'scores' → logprob: -11.507377624511719

Token 682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010746774263679981
    2. 'score' → logprob: -4.635746955871582
    3. 'final' → logprob: -7.760746955871582
    4. ' score' → logprob: -8.260746955871582
    5. 'max' → logprob: -9.635746955871582
    6. ' final' → logprob: -9.635746955871582
    7. 'total' → logprob: -10.135746955871582
    8. 'result' → logprob: -10.260746955871582
    9. '        
' → logprob: -10.635746955871582
    10. '```' → logprob: -10.885746955871582

Token 683: ' max' (ID: 2999)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.27698782086372375
    2. 'final' → logprob: -2.0269877910614014
    3. 'result' → logprob: -3.0269877910614014
    4. 'max' (adapté à ' max') → logprob: -3.7769877910614014
    5. 'res' → logprob: -4.0269880294799805
    6. 'total' → logprob: -4.2769880294799805
    7. '       ' → logprob: -5.5269880294799805
    8. 'N' → logprob: -6.9019880294799805
    9. 'ans' → logprob: -7.1519880294799805
    10. 'answer' → logprob: -7.7769880294799805

Token 684: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.011938863433897495
    2. '_' → logprob: -4.51193904876709
    3. '_pos' → logprob: -7.26193904876709
    4. '_position' → logprob: -9.26193904876709
    5. 'score' → logprob: -10.01193904876709
    6. '_positions' → logprob: -10.26193904876709
    7. '_final' → logprob: -12.01193904876709
    8. '_scores' → logprob: -12.51193904876709
    9. '_
' → logprob: -13.63693904876709
    10. '_sum' → logprob: -13.88693904876709

Token 685: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474077969789505
    2. '=' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.849078178405762
    4. ')' → logprob: -15.349078178405762
    5. ',' → logprob: -15.474078178405762
    6. 's' → logprob: -16.724077224731445
    7. ' +=' → logprob: -16.849077224731445
    8. ' ' → logprob: -16.974077224731445
    9. '_' → logprob: -18.099077224731445
    10. '   ' → logprob: -18.224077224731445

Token 686: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.000335693359375
    4. 'sum' → logprob: -16.250335693359375
    5. '  ' → logprob: -17.875335693359375
    6. '(' → logprob: -19.000335693359375
    7. ' ' → logprob: -19.125335693359375
    8. ' sum' → logprob: -20.000335693359375
    9. '
' → logprob: -20.000335693359375
    10. '1' → logprob: -20.687835693359375

Token 687: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. 'sum' → logprob: -14.000000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '   ' → logprob: -17.250001907348633
    5. 'float' → logprob: -19.875001907348633
    6. 'int' → logprob: -20.375001907348633
    7. '(' → logprob: -20.750001907348633
    8. '۰' → logprob: -21.125001907348633
    9. '  ' → logprob: -21.250001907348633
    10. '```' → logprob: -21.375001907348633

Token 688: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2134268432855606
    2. '
' → logprob: -1.7134268283843994
    3. '<|end|>' → logprob: -5.5884270668029785
    4. ' for' → logprob: -6.0884270668029785
    5. '        
' → logprob: -6.4634270668029785
    6. '	' → logprob: -6.9634270668029785
    7. 'for' → logprob: -6.9634270668029785
    8. '' → logprob: -7.9634270668029785
    9. '	for' → logprob: -8.08842658996582
    10. '   ' → logprob: -8.21342658996582

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030891962349414825
    2. '
' → logprob: -3.9058918952941895
    3. ' for' → logprob: -5.7808918952941895
    4. '        
' → logprob: -6.1558918952941895
    5. 'for' → logprob: -6.2808918952941895
    6. '	' → logprob: -7.1558918952941895
    7. '	for' → logprob: -7.4058918952941895
    8. '<|end|>' → logprob: -7.4058918952941895
    9. '   ' → logprob: -7.9058918952941895
    10. '  
' → logprob: -8.780892372131348

Token 690: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.044563036412000656
    2. '       ' → logprob: -3.294563055038452
    3. ' for' → logprob: -5.044562816619873
    4. 'final' → logprob: -10.169563293457031
    5. 'N' → logprob: -11.669563293457031
    6. 'n' → logprob: -12.044563293457031
    7. '        
' → logprob: -13.669563293457031
    8. '```' → logprob: -14.419563293457031
    9. ' N' → logprob: -14.544563293457031
    10. ' final' → logprob: -15.044563293457031

Token 691: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011048054322600365
    2. ' i' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.761048316955566
    4. 'idx' → logprob: -17.26104736328125
    5. ' ' → logprob: -17.38604736328125
    6. '	i' → logprob: -17.88604736328125
    7. 'index' → logprob: -18.38604736328125
    8. '  ' → logprob: -18.88604736328125
    9. ' idx' → logprob: -19.63604736328125
    10. '_i' → logprob: -20.26104736328125

Token 692: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43678566813468933
    2. 'in' → logprob: -1.0617856979370117
    3. ',' → logprob: -4.936785697937012
    4. '	in' → logprob: -7.936785697937012
    5. ' ' → logprob: -8.811785697937012
    6. ')' → logprob: -10.061785697937012
    7. '   ' → logprob: -10.186785697937012
    8. ' ,' → logprob: -10.311785697937012
    9. ',in' → logprob: -10.311785697937012
    10. '_in' → logprob: -10.436785697937012

Token 693: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -8.184812031686306e-05
    2. ' piece' → logprob: -9.500082015991211
    3. 'p' → logprob: -12.000082015991211
    4. '(piece' → logprob: -15.000082015991211
    5. 'pie' → logprob: -15.750082015991211
    6. '_piece' → logprob: -16.12508201599121
    7. 'piec' → logprob: -16.25008201599121
    8. '```' → logprob: -16.75008201599121
    9. 'pi' → logprob: -17.37508201599121
    10. 'pc' → logprob: -17.87508201599121

Token 694: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1315157115459442
    2. 'in' → logprob: -2.1315157413482666
    3. ',' → logprob: -5.8815155029296875
    4. ')' → logprob: -7.6315155029296875
    5. '	in' → logprob: -7.6315155029296875
    6. '<|end|>' → logprob: -8.256515502929688
    7. '       ' → logprob: -8.881515502929688
    8. '   ' → logprob: -9.506515502929688
    9. ' ' → logprob: -9.506515502929688
    10. '<|end|>' → logprob: -10.006515502929688

Token 695: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.2519426941871643
    2. 'enumer' → logprob: -1.5019426345825195
    3. 'self' → logprob: -11.50194263458252
    4. ' self' → logprob: -13.00194263458252
    5. 'range' → logprob: -14.50194263458252
    6. ' ' → logprob: -15.87694263458252
    7. '```' → logprob: -15.87694263458252
    8. ' range' → logprob: -16.251943588256836
    9. ' enumeration' → logprob: -16.376943588256836
    10. '.enumer' → logprob: -16.751943588256836

Token 696: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05054871365427971
    2. 'self' → logprob: -3.175548791885376
    3. ' self' → logprob: -5.675548553466797
    4. ',' → logprob: -6.425548553466797
    5. ' (' → logprob: -6.550548553466797
    6. '(' → logprob: -7.300548553466797
    7. ')' → logprob: -8.550548553466797
    8. '(range' → logprob: -9.550548553466797
    9. 'range' → logprob: -10.675548553466797
    10. '(s' → logprob: -10.925548553466797

Token 697: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.217951886355877e-05
    2. 'ieces' → logprob: -10.500061988830566
    3. '.' → logprob: -11.000061988830566
    4. ' .' → logprob: -11.250061988830566
    5. 'pieces' → logprob: -13.250061988830566
    6. ').' → logprob: -13.750061988830566
    7. 's' → logprob: -14.875061988830566
    8. '.s' → logprob: -15.500061988830566
    9. '.
' → logprob: -15.750061988830566
    10. ')' → logprob: -15.875061988830566

Token 698: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.0035846298560500145
    2. 'pieces' → logprob: -5.878584861755371
    3. 's' → logprob: -7.753584861755371
    4. '.p' → logprob: -8.378584861755371
    5. '.' → logprob: -9.628584861755371
    6. '.ec' → logprob: -12.003584861755371
    7. '.e' → logprob: -12.003584861755371
    8. 'ec' → logprob: -12.253584861755371
    9. '```' → logprob: -12.253584861755371
    10. 'ices' → logprob: -12.253584861755371

Token 699: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25369441509246826
    2. '):
' → logprob: -1.5036944150924683
    3. ',' → logprob: -7.253694534301758
    4. ':' → logprob: -7.753694534301758
    5. '):
' → logprob: -8.378694534301758
    6. '       ' → logprob: -8.628694534301758
    7. ')' → logprob: -9.253694534301758
    8. '   ' → logprob: -9.253694534301758
    9. ' ):' → logprob: -11.878694534301758
    10. '):

' → logprob: -12.003694534301758

Token 700: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30650800466537476
    2. 'start' → logprob: -2.0565080642700195
    3. ' start' → logprob: -2.0565080642700195
    4. ' ' → logprob: -4.8065080642700195
    5. 'i' → logprob: -12.43150806427002
    6. '0' → logprob: -12.93150806427002
    7. '   ' → logprob: -13.68150806427002
    8. ' i' → logprob: -13.68150806427002
    9. '_start' → logprob: -13.93150806427002
    10. '  ' → logprob: -14.43150806427002

Token 701: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.226628895296017e-06
    2. '=
' → logprob: -12.125007629394531
    3. ')=' → logprob: -13.875007629394531
    4. '1' → logprob: -14.375007629394531
    5. ')' → logprob: -16.12500762939453
    6. '=

' → logprob: -16.75000762939453
    7. '(' → logprob: -17.75000762939453
    8. '=int' → logprob: -18.37500762939453
    9. '=}' → logprob: -18.62500762939453
    10. '=i' → logprob: -18.75000762939453

Token 702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '=' → logprob: -17.375
    3. ' ' → logprob: -18.25
    4. '0' → logprob: -19.75
    5. ')' → logprob: -20.875
    6. '   ' → logprob: -21.0
    7. '```' → logprob: -21.125
    8. '
' → logprob: -22.375
    9. '۱' → logprob: -22.5
    10. '2' → logprob: -22.875

Token 703: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16088922321796417
    2. '):
' → logprob: -1.9108892679214478
    3. ':' → logprob: -7.535889148712158
    4. '       ' → logprob: -9.785889625549316
    5. '):
' → logprob: -9.910889625549316
    6. ')' → logprob: -10.910889625549316
    7. '   ' → logprob: -13.285889625549316
    8. '           ' → logprob: -13.285889625549316
    9. ':
' → logprob: -13.660889625549316
    10. '):

' → logprob: -13.910889625549316

Token 704: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007841374608688056
    2. '       ' → logprob: -7.875783920288086
    3. ' if' → logprob: -9.125783920288086
    4. 'if' → logprob: -9.625783920288086
    5. '```' → logprob: -9.625783920288086
    6. '          ' → logprob: -10.375783920288086
    7. '   ' → logprob: -10.375783920288086
    8. '            
' → logprob: -10.625783920288086
    9. '<|end|>' → logprob: -12.000783920288086
    10. '
' → logprob: -12.125783920288086

Token 705: ' displacement' (ID: 81657)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.197320818901062
    2. 'if' → logprob: -1.697320818901062
    3. 'delta' → logprob: -1.697320818901062
    4. '           ' → logprob: -2.0723209381103516
    5. 'direction' → logprob: -3.1973209381103516
    6. ' if' → logprob: -3.3223209381103516
    7. ' delta' → logprob: -3.4473209381103516
    8. ' diff' → logprob: -3.5723209381103516
    9. 'pos' → logprob: -3.8223209381103516
    10. 'offset' → logprob: -4.697320938110352

Token 706: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132723271846771
    2. '=' → logprob: -1.3132723569869995
    3. '            ' → logprob: -12.938272476196289
    4. '           ' → logprob: -13.313272476196289
    5. ' =
' → logprob: -13.563272476196289
    6. '        ' → logprob: -13.688272476196289
    7. ' ' → logprob: -14.063272476196289
    8. '		' → logprob: -14.688272476196289
    9. '=
' → logprob: -14.813272476196289
    10. '	' → logprob: -15.438272476196289

Token 707: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6051580309867859
    2. '(i' → logprob: -1.6051580905914307
    3. ' (' → logprob: -1.8551580905914307
    4. ' i' → logprob: -2.4801580905914307
    5. '(piece' → logprob: -4.855157852172852
    6. 'piece' → logprob: -5.605157852172852
    7. ' piece' → logprob: -6.855157852172852
    8. '(' → logprob: -8.855157852172852
    9. '           ' → logprob: -9.730157852172852
    10. '   ' → logprob: -9.980157852172852

Token 708: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009767891839146614
    2. '-' → logprob: -4.634768009185791
    3. '           ' → logprob: -11.634767532348633
    4. '            ' → logprob: -14.634767532348633
    5. '          ' → logprob: -14.759767532348633
    6. '-p' → logprob: -14.759767532348633
    7. ' ' → logprob: -15.134767532348633
    8. '        ' → logprob: -15.259767532348633
    9. '         ' → logprob: -15.509767532348633
    10. ' -
' → logprob: -15.759767532348633

Token 709: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.00015872348740231246
    2. ' piece' → logprob: -8.750158309936523
    3. '(piece' → logprob: -15.250158309936523
    4. 'pie' → logprob: -17.500158309936523
    5. 'piec' → logprob: -18.250158309936523
    6. '           ' → logprob: -19.000158309936523
    7. '_piece' → logprob: -20.750158309936523
    8. '1' → logprob: -20.875158309936523
    9. '-piece' → logprob: -21.250158309936523
    10. '`' → logprob: -21.625158309936523

Token 710: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.500001907348633
    3. ' .' → logprob: -14.625001907348633
    4. 'position' → logprob: -15.000001907348633
    5. '[position' → logprob: -17.875001907348633
    6. '.direction' → logprob: -19.000001907348633
    7. '.
' → logprob: -19.375001907348633
    8. '	position' → logprob: -19.625001907348633
    9. '.location' → logprob: -19.875001907348633
    10. '.status' → logprob: -20.125001907348633

Token 711: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10740360617637634
    2. ' if' → logprob: -2.857403516769409
    3. 'if' → logprob: -3.357403516769409
    4. '
' → logprob: -4.732403755187988
    5. '       ' → logprob: -7.857403755187988
    6. '            
' → logprob: -9.107403755187988
    7. '*' → logprob: -9.482403755187988
    8. ')' → logprob: -10.107403755187988
    9. '               ' → logprob: -10.357403755187988
    10. ' *' → logprob: -10.482403755187988

Token 712: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02182479202747345
    2. ' if' → logprob: -4.271824836730957
    3. 'if' → logprob: -4.896824836730957
    4. 'max' → logprob: -9.271824836730957
    5. '       ' → logprob: -10.771824836730957
    6. '            
' → logprob: -11.146824836730957
    7. '
' → logprob: -12.021824836730957
    8. ' max' → logprob: -12.146824836730957
    9. 'token' → logprob: -12.271824836730957
    10. 'direction' → logprob: -13.021824836730957

Token 713: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007422406226396561
    2. 'direction' → logprob: -5.25742244720459
    3. '           ' → logprob: -6.38242244720459
    4. ' if' → logprob: -9.00742244720459
    5. 'mult' → logprob: -9.13242244720459
    6. 'score' → logprob: -9.25742244720459
    7. 'sign' → logprob: -9.63242244720459
    8. 'dir' → logprob: -10.00742244720459
    9. 'max' → logprob: -10.13242244720459
    10. 'increment' → logprob: -11.63242244720459

Token 714: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.0029173342045396566
    2. ' piece' → logprob: -5.877917289733887
    3. '(piece' → logprob: -9.252917289733887
    4. '   ' → logprob: -11.377917289733887
    5. '           ' → logprob: -13.377917289733887
    6. 'pie' → logprob: -13.502917289733887
    7. '       ' → logprob: -14.002917289733887
    8. 'piec' → logprob: -14.627917289733887
    9. ' ' → logprob: -15.127917289733887
    10. '  ' → logprob: -15.627917289733887

Token 715: '.direction' (ID: 63524)
  Prédit: '.direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direction' → logprob: -2.2127087504486553e-05
    2. '.position' → logprob: -11.625021934509277
    3. 'direction' → logprob: -11.875021934509277
    4. '.' → logprob: -12.625021934509277
    5. '.orientation' → logprob: -14.250021934509277
    6. ' .' → logprob: -14.625021934509277
    7. '.velocity' → logprob: -15.750021934509277
    8. '.angle' → logprob: -16.000022888183594
    9. '.Direction' → logprob: -16.375022888183594
    10. '   ' → logprob: -16.375022888183594

Token 716: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25194576382637024
    2. ' ==' → logprob: -1.5019457340240479
    3. '==
' → logprob: -11.626945495605469
    4. '=' → logprob: -13.001945495605469
    5. ')==' → logprob: -13.001945495605469
    6. '===' → logprob: -14.251945495605469
    7. '()==' → logprob: -14.376945495605469
    8. ']==' → logprob: -14.501945495605469
    9. ' ' → logprob: -14.751945495605469
    10. '[' → logprob: -15.126945495605469

Token 717: ' Arrow' (ID: 62441)
  Prédit: 'Arrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arrow' → logprob: -0.006715370807796717
    2. ' Arrow' → logprob: -5.006715297698975
    3. '_arrow' → logprob: -20.256715774536133
    4. 'Arc' → logprob: -21.506715774536133
    5. 'arrow' → logprob: -21.506715774536133
    6. '   ' → logprob: -21.631715774536133
    7. 'Ar' → logprob: -22.006715774536133
    8. 'Answer' → logprob: -22.756715774536133
    9. '_ARROW' → logprob: -22.881715774536133
    10. ' arrow' → logprob: -23.506715774536133

Token 718: 'Direction' (ID: 14084)
  Prédit: 'Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -4.320199877838604e-07
    2. 'direction' → logprob: -15.875
    3. '_DIRECTION' → logprob: -16.375
    4. '.Direction' → logprob: -16.5
    5. '_direction' → logprob: -17.0
    6. 'Directional' → logprob: -17.375
    7. ' Direction' → logprob: -17.875
    8. '(Direction' → logprob: -18.125
    9. '[' → logprob: -18.5
    10. '```' → logprob: -19.0

Token 719: '.RIGHT' (ID: 101392)
  Prédit: '.RIGHT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.RIGHT' → logprob: -0.0004839385801460594
    2. '.' → logprob: -8.250483512878418
    3. 'RIGHT' → logprob: -9.000483512878418
    4. '.LEFT' → logprob: -9.250483512878418
    5. '_RIGHT' → logprob: -14.125483512878418
    6. '   ' → logprob: -14.750483512878418
    7. '.R' → logprob: -14.875483512878418
    8. '.Right' → logprob: -15.000483512878418
    9. ''.' → logprob: -15.375483512878418
    10. 'Right' → logprob: -15.750483512878418

Token 720: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2821977436542511
    2. ':
' → logprob: -1.4071977138519287
    3. ')' → logprob: -7.532197952270508
    4. '):
' → logprob: -8.157197952270508
    5. '               ' → logprob: -9.157197952270508
    6. '           ' → logprob: -9.782197952270508
    7. '):' → logprob: -10.157197952270508
    8. ':
' → logprob: -12.157197952270508
    9. '=' → logprob: -12.532197952270508
    10. ':return' → logprob: -12.657197952270508

Token 721: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032664805185049772
    2. 'max' → logprob: -5.753266334533691
    3. ' max' → logprob: -10.128266334533691
    4. '           ' → logprob: -10.878266334533691
    5. '+' → logprob: -11.378266334533691
    6. '                   ' → logprob: -11.753266334533691
    7. '   ' → logprob: -13.253266334533691
    8. '              ' → logprob: -13.503266334533691
    9. '                
' → logprob: -13.628266334533691
    10. '                ' → logprob: -14.003266334533691

Token 722: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008091091178357601
    2. '                   ' → logprob: -5.008090972900391
    3. ' max' → logprob: -7.133090972900391
    4. '               ' → logprob: -8.13309097290039
    5. '+' → logprob: -8.25809097290039
    6. '           ' → logprob: -11.63309097290039
    7. '                       ' → logprob: -12.63309097290039
    8. '   ' → logprob: -13.00809097290039
    9. '+=' → logprob: -13.88309097290039
    10. '	max' → logprob: -14.00809097290039

Token 723: ' moves' (ID: 19523)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001745775662129745
    2. ' max' → logprob: -8.750174522399902
    3. '               ' → logprob: -11.750174522399902
    4. '                   ' → logprob: -12.000174522399902
    5. '           ' → logprob: -13.250174522399902
    6. 'score' → logprob: -15.875174522399902
    7. '
' → logprob: -17.37517547607422
    8. '   ' → logprob: -17.37517547607422
    9. '	max' → logprob: -17.87517547607422
    10. '(max' → logprob: -18.87517547607422

Token 724: ' in' (ID: 306)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14571741223335266
    2. '               ' → logprob: -3.3957173824310303
    3. ' +=' → logprob: -3.7707173824310303
    4. '_score' → logprob: -3.7707173824310303
    5. 'score' → logprob: -4.020717620849609
    6. 'in' → logprob: -4.270717620849609
    7. '                   ' → logprob: -4.895717620849609
    8. '+' → logprob: -5.395717620849609
    9. '_in' → logprob: -5.645717620849609
    10. '=' → logprob: -6.395717620849609

Token 725: ' direction' (ID: 9262)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.2596074342727661
    2. ' displacement' → logprob: -2.1346073150634766
    3. '+' → logprob: -2.5096073150634766
    4. 'the' → logprob: -4.384607315063477
    5. 'positive' → logprob: -4.759607315063477
    6. 'direction' → logprob: -6.009607315063477
    7. ' the' → logprob: -6.884607315063477
    8. ' +' → logprob: -6.884607315063477
    9. '+
' → logprob: -7.009607315063477
    10. ' positive' → logprob: -7.259607315063477

Token 726: ' arrow' (ID: 33823)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8874379992485046
    2. '=' → logprob: -1.1374380588531494
    3. '                   ' → logprob: -2.5124380588531494
    4. 'max' → logprob: -3.1374380588531494
    5. '+' → logprob: -3.3874380588531494
    6. '+=' → logprob: -3.6374380588531494
    7. ' +=' → logprob: -4.01243782043457
    8. '           ' → logprob: -4.01243782043457
    9. ' =' → logprob: -4.13743782043457
    10. 'score' → logprob: -5.13743782043457

Token 727: ' gives' (ID: 8967)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2470550537109375
    2. '+' → logprob: -2.6220550537109375
    3. '               ' → logprob: -2.8720550537109375
    4. 'max' → logprob: -3.8720550537109375
    5. ':' → logprob: -3.9970550537109375
    6. '=' → logprob: -4.3720550537109375
    7. '                   ' → logprob: -4.9970550537109375
    8. ' +' → logprob: -5.1220550537109375
    9. '*' → logprob: -5.6220550537109375
    10. ',' → logprob: -5.9970550537109375

Token 728: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.487623006105423
    2. ' displacement' → logprob: -1.3626229763031006
    3. ' +' → logprob: -2.3626229763031006
    4. 'dis' → logprob: -3.3626229763031006
    5. 'max' → logprob: -7.98762321472168
    6. ' dis' → logprob: -8.73762321472168
    7. ' max' → logprob: -8.86262321472168
    8. '           ' → logprob: -9.36262321472168
    9. '               ' → logprob: -9.48762321472168
    10. ' +=' → logprob: -9.61262321472168

Token 729: '1' (ID: 16)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.04731133580207825
    2. ' displacement' → logprob: -3.422311305999756
    3. '1' → logprob: -4.422311305999756
    4. '           ' → logprob: -7.297311305999756
    5. ' dis' → logprob: -7.922311305999756
    6. '               ' → logprob: -8.547311782836914
    7. ' ' → logprob: -8.672311782836914
    8. '	dis' → logprob: -10.172311782836914
    9. 'abs' → logprob: -10.672311782836914
    10. '(dis' → logprob: -10.797311782836914

Token 730: ' score' (ID: 8429)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16870376467704773
    2. '               ' → logprob: -2.41870379447937
    3. '*' → logprob: -3.79370379447937
    4. ' *' → logprob: -4.043703556060791
    5. 'max' → logprob: -4.418703556060791
    6. '                   ' → logprob: -5.543703556060791
    7. '
' → logprob: -5.793703556060791
    8. ',' → logprob: -6.043703556060791
    9. 'score' → logprob: -6.168703556060791
    10. ' max' → logprob: -7.668703556060791

Token 731: ' per' (ID: 777)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019814400002360344
    2. '           ' → logprob: -4.019814491271973
    3. 'max' → logprob: -7.144814491271973
    4. '                   ' → logprob: -8.144814491271973
    5. ',' → logprob: -8.644814491271973
    6. ':' → logprob: -9.144814491271973
    7. ' max' → logprob: -9.144814491271973
    8. ':
' → logprob: -10.019814491271973
    9. '+' → logprob: -10.269814491271973
    10. '
' → logprob: -10.644814491271973

Token 732: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.13018518686294556
    2. ' step' → logprob: -2.130185127258301
    3. 'dis' → logprob: -6.130185127258301
    4. ' displacement' → logprob: -6.880185127258301
    5. '1' → logprob: -10.6301851272583
    6. 'unit' → logprob: -12.1301851272583
    7. '-step' → logprob: -12.6301851272583
    8. ' dis' → logprob: -12.8801851272583
    9. ' ' → logprob: -13.2551851272583
    10. 'distance' → logprob: -13.5051851272583

Token 733: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4969559609889984
    2. '           ' → logprob: -1.1219559907913208
    3. 'max' → logprob: -2.9969558715820312
    4. '                   ' → logprob: -4.496955871582031
    5. '+' → logprob: -6.246955871582031
    6. ' max' → logprob: -6.871955871582031
    7. ':' → logprob: -7.246955871582031
    8. ' +' → logprob: -7.871955871582031
    9. '
' → logprob: -8.496955871582031
    10. ':
' → logprob: -8.871955871582031

Token 734: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5890811085700989
    2. '               ' → logprob: -0.8390811085700989
    3. '                   ' → logprob: -5.589081287384033
    4. 'max' → logprob: -5.589081287384033
    5. '+' → logprob: -5.839081287384033
    6. ' +' → logprob: -6.464081287384033
    7. '*' → logprob: -7.839081287384033
    8. ' max' → logprob: -8.964080810546875
    9. ' *' → logprob: -9.089080810546875
    10. ')' → logprob: -9.339080810546875

Token 735: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.04142657667398453
    2. ' max' → logprob: -3.291426658630371
    3. '               ' → logprob: -6.416426658630371
    4. '                   ' → logprob: -6.791426658630371
    5. '           ' → logprob: -7.416426658630371
    6. '+' → logprob: -11.916426658630371
    7. '   ' → logprob: -12.416426658630371
    8. '	max' → logprob: -12.541426658630371
    9. ' ' → logprob: -14.041426658630371
    10. '                       ' → logprob: -14.291426658630371

Token 736: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -3.7697225252486533e-06
    2. 'score' → logprob: -13.000003814697266
    3. '_' → logprob: -14.125003814697266
    4. '_scores' → logprob: -14.250003814697266
    5. '_s' → logprob: -17.375003814697266
    6. 'Score' → logprob: -17.750003814697266
    7. '_SCORE' → logprob: -18.250003814697266
    8. ' _' → logprob: -18.375003814697266
    9. '_sc' → logprob: -18.500003814697266
    10. '_code' → logprob: -19.000003814697266

Token 737: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03804952651262283
    2. ' +=' → logprob: -3.2880494594573975
    3. '+' → logprob: -12.663049697875977
    4. '=' → logprob: -13.288049697875977
    5. ']+=' → logprob: -13.413049697875977
    6. '+=(' → logprob: -13.913049697875977
    7. '           ' → logprob: -15.413049697875977
    8. '+='' → logprob: -15.538049697875977
    9. '            ' → logprob: -15.663049697875977
    10. '+="' → logprob: -16.288049697875977

Token 738: ' displacement' (ID: 81657)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.00038145645521581173
    2. ' displacement' → logprob: -7.8753814697265625
    3. '(dis' → logprob: -14.500381469726562
    4. ' dis' → logprob: -14.750381469726562
    5. 'max' → logprob: -15.250381469726562
    6. 'disp' → logprob: -16.375381469726562
    7. '	dis' → logprob: -16.375381469726562
    8. '   ' → logprob: -17.125381469726562
    9. '-dis' → logprob: -17.250381469726562
    10. ' ' → logprob: -18.375381469726562

Token 739: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 740: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016324790194630623
    2. 'else' → logprob: -4.266324996948242
    3. ' else' → logprob: -6.141324996948242
    4. 'elif' → logprob: -12.641324996948242
    5. '	       ' → logprob: -13.766324996948242
    6. '<|end|>' → logprob: -14.266324996948242
    7. '		' → logprob: -14.391324996948242
    8. '       ' → logprob: -15.141324996948242
    9. ' elif' → logprob: -15.391324996948242
    10. '               ' → logprob: -15.641324996948242

Token 741: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.06044890731573105
    2. ' else' → logprob: -3.3104488849639893
    3. '           ' → logprob: -3.8104488849639893
    4. 'elif' → logprob: -11.31044864654541
    5. '       ' → logprob: -12.31044864654541
    6. '	       ' → logprob: -13.93544864654541
    7. '	else' → logprob: -14.06044864654541
    8. '		' → logprob: -14.31044864654541
    9. ' elif' → logprob: -15.18544864654541
    10. '               ' → logprob: -15.31044864654541

Token 742: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7348918318748474
    2. ':
' → logprob: -0.8598918318748474
    3. '               ' → logprob: -2.359891891479492
    4. '           ' → logprob: -6.109891891479492
    5. '       ' → logprob: -9.609891891479492
    6. '):
' → logprob: -9.609891891479492
    7. '              ' → logprob: -9.734891891479492
    8. '-' → logprob: -9.734891891479492
    9. '*' → logprob: -10.234891891479492
    10. '<|end|>' → logprob: -10.234891891479492

Token 743: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1667192429304123
    2. 'max' → logprob: -1.9167191982269287
    3. '           ' → logprob: -5.166719436645508
    4. ' max' → logprob: -7.791719436645508
    5. '       ' → logprob: -9.291719436645508
    6. '	max' → logprob: -9.666719436645508
    7. '[max' → logprob: -9.791719436645508
    8. ' ' → logprob: -10.666719436645508
    9. '(max' → logprob: -11.041719436645508
    10. '-max' → logprob: -11.416719436645508

Token 744: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0043470412492752075
    2. ' max' → logprob: -5.50434684753418
    3. '           ' → logprob: -8.25434684753418
    4. '               ' → logprob: -11.87934684753418
    5. '	max' → logprob: -14.25434684753418
    6. '   ' → logprob: -15.12934684753418
    7. ' ' → logprob: -15.50434684753418
    8. '       ' → logprob: -15.87934684753418
    9. '[max' → logprob: -15.87934684753418
    10. '-max' → logprob: -16.37934684753418

Token 745: ' direction' (ID: 9262)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.000271706550847739
    2. ' max' → logprob: -8.250271797180176
    3. '           ' → logprob: -11.500271797180176
    4. '               ' → logprob: -16.00027084350586
    5. '   ' → logprob: -17.00027084350586
    6. '	max' → logprob: -17.00027084350586
    7. '
' → logprob: -17.37527084350586
    8. '       ' → logprob: -18.37527084350586
    9. ' ' → logprob: -18.50027084350586
    10. '[max' → logprob: -18.62527084350586

Token 746: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.49956250190734863
    2. ' ==' → logprob: -1.6245625019073486
    3. '=' → logprob: -2.1245625019073486
    4. 'max' → logprob: -3.4995625019073486
    5. ' =' → logprob: -4.1245622634887695
    6. ':' → logprob: -5.2495622634887695
    7. '           ' → logprob: -5.2495622634887695
    8. ' +=' → logprob: -5.4995622634887695
    9. '==-' → logprob: -5.9995622634887695
    10. ')' → logprob: -6.3745622634887695

Token 747: ' left' (ID: 3561)
  Prédit: 'Arrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Arrow' → logprob: -0.04170355200767517
    2. ' Arrow' → logprob: -3.291703462600708
    3. '-' → logprob: -5.916703701019287
    4. ' -' → logprob: -7.291703701019287
    5. '_arrow' → logprob: -8.791703224182129
    6. '-arrow' → logprob: -10.166703224182129
    7. '   ' → logprob: -10.291703224182129
    8. ' ' → logprob: -10.791703224182129
    9. '_ARROW' → logprob: -12.416703224182129
    10. '  ' → logprob: -12.416703224182129

Token 748: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06570136547088623
    2. '           ' → logprob: -2.815701484680176
    3. 'max' → logprob: -6.440701484680176
    4. ':' → logprob: -7.315701484680176
    5. ',' → logprob: -7.940701484680176
    6. '                   ' → logprob: -8.815701484680176
    7. '-' → logprob: -8.940701484680176
    8. '              ' → logprob: -8.940701484680176
    9. '                ' → logprob: -9.065701484680176
    10. ':
' → logprob: -9.065701484680176

Token 749: ' moving' (ID: 10067)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04876847192645073
    2. ' max' → logprob: -3.0487685203552246
    3. '           ' → logprob: -8.798768043518066
    4. '-max' → logprob: -10.548768043518066
    5. '               ' → logprob: -13.798768043518066
    6. '                   ' → logprob: -14.423768043518066
    7. '	max' → logprob: -14.548768043518066
    8. '[max' → logprob: -15.048768043518066
    9. '-' → logprob: -15.298768043518066
    10. '   ' → logprob: -15.423768043518066

Token 750: ' left' (ID: 3561)
  Prédit: 'against'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'against' → logprob: -0.3020857870578766
    2. ' against' → logprob: -1.9270857572555542
    3. 'max' → logprob: -3.8020858764648438
    4. 'in' → logprob: -4.052085876464844
    5. '-' → logprob: -4.302085876464844
    6. ' opposite' → logprob: -5.052085876464844
    7. '-=' → logprob: -5.052085876464844
    8. ' away' → logprob: -5.302085876464844
    9. 'op' → logprob: -5.427085876464844
    10. ' -=' → logprob: -5.427085876464844

Token 751: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3694070875644684
    2. '-' → logprob: -1.494407057762146
    3. 'max' → logprob: -3.7444071769714355
    4. '               ' → logprob: -4.2444071769714355
    5. '-=' → logprob: -4.2444071769714355
    6. ' -=' → logprob: -4.3694071769714355
    7. ':' → logprob: -5.1194071769714355
    8. ' -' → logprob: -5.7444071769714355
    9. '=' → logprob: -6.3694071769714355
    10. ',' → logprob: -6.3694071769714355

Token 752: '1' (ID: 16)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.150748610496521
    2. 'dis' → logprob: -1.400748610496521
    3. '=' → logprob: -2.5257487297058105
    4. '(-' → logprob: -2.5257487297058105
    5. 'max' → logprob: -2.6507487297058105
    6. ' displacement' → logprob: -2.9007487297058105
    7. 'score' → logprob: -3.4007487297058105
    8. '-' → logprob: -3.5257487297058105
    9. ' (-' → logprob: -4.1507487297058105
    10. '1' → logprob: -4.4007487297058105

Token 753: ',' (ID: 11)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.7119366526603699
    2. '_score' → logprob: -1.3369367122650146
    3. ' score' → logprob: -1.7119367122650146
    4. ' *' → logprob: -2.9619367122650146
    5. '*' → logprob: -5.0869364738464355
    6. ' per' → logprob: -6.4619364738464355
    7. '           ' → logprob: -6.9619364738464355
    8. '<|end|>' → logprob: -6.9619364738464355
    9. '-score' → logprob: -7.0869364738464355
    10. '_scores' → logprob: -7.2119364738464355

Token 754: ' so' (ID: 813)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008645533584058285
    2. ' max' → logprob: -4.758645534515381
    3. '           ' → logprob: -10.883645057678223
    4. '               ' → logprob: -11.758645057678223
    5. '-max' → logprob: -13.383645057678223
    6. '                   ' → logprob: -13.508645057678223
    7. '
' → logprob: -15.258645057678223
    8. '	max' → logprob: -15.383645057678223
    9. '[max' → logprob: -15.758645057678223
    10. '_max' → logprob: -15.883645057678223

Token 755: ' moves' (ID: 19523)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03806077316403389
    2. ' max' → logprob: -3.2880606651306152
    3. '           ' → logprob: -10.913061141967773
    4. '               ' → logprob: -14.788061141967773
    5. '	max' → logprob: -15.788061141967773
    6. '[max' → logprob: -15.788061141967773
    7. '
' → logprob: -15.913061141967773
    8. '(max' → logprob: -16.663061141967773
    9. '                   ' → logprob: -16.913061141967773
    10. ' ' → logprob: -17.163061141967773

Token 756: ' to' (ID: 316)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.1561415195465088
    2. 'against' → logprob: -1.4061415195465088
    3. 'score' → logprob: -1.5311415195465088
    4. '           ' → logprob: -2.906141519546509
    5. 'in' → logprob: -3.031141519546509
    6. 'max' → logprob: -3.531141519546509
    7. '-=' → logprob: -4.15614128112793
    8. ' against' → logprob: -4.40614128112793
    9. '-score' → logprob: -4.40614128112793
    10. ' in' → logprob: -4.90614128112793

Token 757: ' right' (ID: 1849)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8667081594467163
    2. ' -' → logprob: -1.1167081594467163
    3. '-left' → logprob: -3.241708278656006
    4. ' piece' → logprob: -3.491708278656006
    5. '-piece' → logprob: -3.491708278656006
    6. 'the' → logprob: -3.741708278656006
    7. 'left' → logprob: -3.866708278656006
    8. 'piece' → logprob: -3.991708278656006
    9. '(piece' → logprob: -3.991708278656006
    10. '-p' → logprob: -4.241708278656006

Token 758: ' are' (ID: 553)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.260538786649704
    2. ' -' → logprob: -2.5105388164520264
    3. 'max' → logprob: -2.8855388164520264
    4. '           ' → logprob: -3.5105388164520264
    5. '-=' → logprob: -3.5105388164520264
    6. ' -=' → logprob: -4.010538578033447
    7. '+=' → logprob: -6.010538578033447
    8. '=' → logprob: -6.135538578033447
    9. ' max' → logprob: -6.385538578033447
    10. '               ' → logprob: -6.635538578033447

Token 759: ' negative' (ID: 12626)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5332743525505066
    2. '-' → logprob: -1.0332744121551514
    3. '-dis' → logprob: -3.9082744121551514
    4. '-score' → logprob: -4.033274173736572
    5. '-max' → logprob: -5.033274173736572
    6. ' max' → logprob: -5.658274173736572
    7. 'max' → logprob: -5.658274173736572
    8. '           ' → logprob: -6.033274173736572
    9. ' scored' → logprob: -7.283274173736572
    10. '-negative' → logprob: -8.03327465057373

Token 760: ' score' (ID: 8429)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1285394430160522
    2. 'max' → logprob: -1.5035394430160522
    3. ' -=' → logprob: -1.6285394430160522
    4. ' max' → logprob: -2.628539562225342
    5. ' -' → logprob: -2.628539562225342
    6. '-' → logprob: -3.503539562225342
    7. ' +=' → logprob: -3.503539562225342
    8. ' ' → logprob: -4.378539562225342
    9. '               ' → logprob: -5.003539562225342
    10. 'score' → logprob: -5.503539562225342

Token 761: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35656723380088806
    2. '-' → logprob: -1.9815672636032104
    3. '               ' → logprob: -2.106567144393921
    4. 'max' → logprob: -3.481567144393921
    5. ' -' → logprob: -5.9815673828125
    6. ' -=' → logprob: -6.2315673828125
    7. '-=' → logprob: -6.8565673828125
    8. '-max' → logprob: -6.9815673828125
    9. ' max' → logprob: -7.3565673828125
    10. '                   ' → logprob: -7.6065673828125

Token 762: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019573964178562164
    2. '               ' → logprob: -4.519574165344238
    3. '-' → logprob: -5.519574165344238
    4. 'max' → logprob: -6.019574165344238
    5. ' -' → logprob: -6.519574165344238
    6. ' max' → logprob: -8.269574165344238
    7. '-max' → logprob: -8.894574165344238
    8. '            ' → logprob: -10.519574165344238
    9. ' ' → logprob: -10.519574165344238
    10. '   ' → logprob: -10.894574165344238

Token 763: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0022562374360859394
    2. ' max' → logprob: -6.627256393432617
    3. '           ' → logprob: -7.252256393432617
    4. '               ' → logprob: -8.877256393432617
    5. '                   ' → logprob: -10.127256393432617
    6. '-max' → logprob: -11.252256393432617
    7. '[max' → logprob: -11.377256393432617
    8. '=max' → logprob: -12.252256393432617
    9. '	max' → logprob: -12.377256393432617
    10. ',max' → logprob: -12.502256393432617

Token 764: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.320199877838604e-07
    2. 'score' → logprob: -15.125
    3. '_scores' → logprob: -16.5
    4. 'Score' → logprob: -18.75
    5. '_code' → logprob: -19.125
    6. '_SCORE' → logprob: -19.25
    7. '_' → logprob: -20.375
    8. '_s' → logprob: -20.5
    9. '_sc' → logprob: -22.0
    10. ' score' → logprob: -22.0

Token 765: ' +=' (ID: 2757)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.025418590754270554
    2. '+=' → logprob: -4.275418758392334
    3. ' -=' → logprob: -4.525418758392334
    4. '-' → logprob: -8.150418281555176
    5. '          ' → logprob: -9.900418281555176
    6. ' +=' → logprob: -11.775418281555176
    7. '        ' → logprob: -12.150418281555176
    8. '            ' → logprob: -12.275418281555176
    9. '      ' → logprob: -13.275418281555176
    10. ' -' → logprob: -14.150418281555176

Token 766: ' -' (ID: 533)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.6270685791969299
    2. '-piece' → logprob: -0.8770685791969299
    3. '-dis' → logprob: -3.377068519592285
    4. '-' → logprob: -4.752068519592285
    5. ' -' → logprob: -5.377068519592285
    6. '-position' → logprob: -6.377068519592285
    7. '(-' → logprob: -7.877068519592285
    8. '-pos' → logprob: -9.252068519592285
    9. '-distance' → logprob: -10.252068519592285
    10. '-product' → logprob: -10.502068519592285

Token 767: 'dis' (ID: 4220)
  Prédit: 'dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -7.941850526549388e-06
    2. ' displacement' → logprob: -11.750007629394531
    3. '	dis' → logprob: -18.25000762939453
    4. '(dis' → logprob: -18.75000762939453
    5. ' dis' → logprob: -19.75000762939453
    6. '1' → logprob: -19.87500762939453
    7. '-dis' → logprob: -20.12500762939453
    8. 'Dis' → logprob: -20.12500762939453
    9. '_dis' → logprob: -20.12500762939453
    10. '   ' → logprob: -21.37500762939453

Token 768: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -9.968312951968983e-06
    2. 'p' → logprob: -12.250009536743164
    3. 't' → logprob: -13.000009536743164
    4. ' placement' → logprob: -13.500009536743164
    5. 'plac' → logprob: -13.750009536743164
    6. 'pl' → logprob: -15.750009536743164
    7. 'place' → logprob: -16.000009536743164
    8. 'Placement' → logprob: -16.125009536743164
    9. 'placing' → logprob: -17.750009536743164
    10. '-placement' → logprob: -17.750009536743164

Token 769: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05475284159183502
    2. '
' → logprob: -3.554752826690674
    3. 'return' → logprob: -3.804752826690674
    4. ' return' → logprob: -7.054752826690674
    5. '        
' → logprob: -7.054752826690674
    6. '<|end|>' → logprob: -8.179753303527832
    7. '	return' → logprob: -8.304753303527832
    8. '		
' → logprob: -10.054753303527832
    9. '  
' → logprob: -10.804753303527832
    10. '
' → logprob: -10.929753303527832

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4428790211677551
    2. '
' → logprob: -1.0678789615631104
    3. 'return' → logprob: -4.4428791999816895
    4. ' return' → logprob: -6.8178791999816895
    5. '        
' → logprob: -7.0678791999816895
    6. '
' → logprob: -9.192878723144531
    7. '<|end|>' → logprob: -9.317878723144531
    8. '	return' → logprob: -9.817878723144531
    9. '   ' → logprob: -10.192878723144531
    10. '    
' → logprob: -10.942878723144531

Token 771: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5107706189155579
    2. '
' → logprob: -1.010770559310913
    3. 'return' (adapté à ' return') → logprob: -3.385770559310913
    4. ' return' → logprob: -6.635770797729492
    5. '        
' → logprob: -7.510770797729492
    6. '
' → logprob: -8.885770797729492
    7. '	return' → logprob: -9.760770797729492
    8. '   ' → logprob: -10.385770797729492
    9. '<|end|>' → logprob: -10.510770797729492
    10. '    
' → logprob: -11.135770797729492

Token 772: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0024756586644798517
    2. ' max' → logprob: -6.002475738525391
    3. '	max' → logprob: -20.25247573852539
    4. '   ' → logprob: -21.37747573852539
    5. '(max' → logprob: -21.87747573852539
    6. '
' → logprob: -22.75247573852539
    7. '_max' → logprob: -22.87747573852539
    8. '`' → logprob: -23.12747573852539
    9. '```' → logprob: -23.12747573852539
    10. '       ' → logprob: -23.37747573852539

Token 773: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -6.704273118884885e-07
    2. '_scores' → logprob: -14.500000953674316
    3. 'score' → logprob: -16.0
    4. '_' → logprob: -17.375
    5. '_code' → logprob: -19.0
    6. '_SCORE' → logprob: -19.25
    7. 'Score' → logprob: -20.0
    8. '_token' → logprob: -20.0
    9. '```' → logprob: -20.0
    10. '_size' → logprob: -20.25

Token 774: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 775: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 776: ' Input' (ID: 10090)
  Prédit: ' Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Game' → logprob: -0.5387822985649109
    2. ' Solution' → logprob: -1.5387823581695557
    3. 'Game' → logprob: -2.1637823581695557
    4. 'Solution' → logprob: -3.2887823581695557
    5. ' Solver' → logprob: -4.038782119750977
    6. ' Test' → logprob: -4.538782119750977
    7. 'Test' → logprob: -5.163782119750977
    8. ' Chess' → logprob: -6.038782119750977
    9. ' Board' → logprob: -6.038782119750977
    10. 'Solver' → logprob: -6.163782119750977

Token 777: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.7533671855926514
    2. 'Parser' → logprob: -1.3783671855926514
    3. 'Handler' → logprob: -1.8783671855926514
    4. 'Data' → logprob: -2.6283671855926514
    5. ':' → logprob: -3.6283671855926514
    6. 'Processor' → logprob: -4.2533674240112305
    7. '():' → logprob: -6.3783674240112305
    8. 'Manager' → logprob: -6.7533674240112305
    9. 'Stream' → logprob: -6.7533674240112305
    10. 'Buffer' → logprob: -6.7533674240112305

Token 778: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004920298233628273
    2. ':
' → logprob: -8.250492095947266
    3. '(' → logprob: -8.875492095947266
    4. '():' → logprob: -10.125492095947266
    5. '<|end|>' → logprob: -11.000492095947266
    6. '):' → logprob: -12.000492095947266
    7. '>:' → logprob: -12.125492095947266
    8. ' :' → logprob: -12.250492095947266
    9. '(object' → logprob: -12.625492095947266
    10. '.' → logprob: -13.500492095947266

Token 779: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015391174703836441
    2. ' def' → logprob: -4.5153913497924805
    3. 'def' → logprob: -6.6403913497924805
    4. ':' → logprob: -6.8903913497924805
    5. '<|end|>' → logprob: -7.3903913497924805
    6. '    ' → logprob: -7.5153913497924805
    7. '    
' → logprob: -8.39039134979248
    8. 'class' → logprob: -8.89039134979248
    9. '	def' → logprob: -9.14039134979248
    10. '```' → logprob: -9.64039134979248

Token 780: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03489312902092934
    2. 'def' → logprob: -3.534893035888672
    3. '   ' → logprob: -5.284893035888672
    4. 'class' → logprob: -10.159893035888672
    5. '	def' → logprob: -11.284893035888672
    6. ' class' → logprob: -11.784893035888672
    7. '```' → logprob: -14.159893035888672
    8. 'import' → logprob: -14.409893035888672
    9. ' indentation' → logprob: -14.659893035888672
    10. ' indent' → logprob: -15.659893035888672

Token 781: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -5.3358446166384965e-05
    2. 'classmethod' → logprob: -10.000053405761719
    3. 'static' → logprob: -12.000053405761719
    4. 'dat' → logprob: -13.250053405761719
    5. 'st' → logprob: -18.62505340576172
    6. ' static' → logprob: -18.75005340576172
    7. 'stat' → logprob: -19.12505340576172
    8. 'property' → logprob: -20.12505340576172
    9. 'sta' → logprob: -21.75005340576172
    10. 'Static' → logprob: -23.12505340576172

Token 782: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01143587101250887
    2. ' def' → logprob: -4.6364359855651855
    3. '
' → logprob: -7.1364359855651855
    4. '(' → logprob: -7.5114359855651855
    5. '()' → logprob: -9.636435508728027
    6. '(
' → logprob: -9.761435508728027
    7. '(def' → logprob: -10.136435508728027
    8. '\' → logprob: -10.511435508728027
    9. '  
' → logprob: -10.511435508728027
    10. '()
' → logprob: -10.636435508728027

Token 783: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0789070799946785
    2. ' def' → logprob: -2.578907012939453
    3. '   ' → logprob: -11.328907012939453
    4. '
' → logprob: -12.328907012939453
    5. '	def' → logprob: -14.953907012939453
    6. ' ' → logprob: -15.578907012939453
    7. '    
' → logprob: -15.953907012939453
    8. '  ' → logprob: -16.828907012939453
    9. '  
' → logprob: -17.203907012939453
    10. ' 
' → logprob: -17.328907012939453

Token 784: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.2729995988775045e-06
    2. ' def' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.6250057220459
    4. '
' → logprob: -19.2500057220459
    5. 'de' → logprob: -20.8750057220459
    6. '	def' → logprob: -21.2500057220459
    7. '```' → logprob: -22.7500057220459
    8. ':def' → logprob: -23.0000057220459
    9. ' ' → logprob: -23.1250057220459
    10. 'ndef' → logprob: -23.3750057220459

Token 785: ' parse' (ID: 8420)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2546219229698181
    2. 'parse' → logprob: -1.504621982574463
    3. ' parse' → logprob: -6.504621982574463
    4. ' read' → logprob: -6.754621982574463
    5. 'def' → logprob: -11.129621505737305
    6. 'from' → logprob: -11.629621505737305
    7. ' readline' → logprob: -13.879621505737305
    8. 'get' → logprob: -14.004621505737305
    9. ' def' → logprob: -14.254621505737305
    10. 'input' → logprob: -14.504621505737305

Token 786: '_input' (ID: 12507)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7468432784080505
    2. '(line' → logprob: -1.7468433380126953
    3. '()' → logprob: -2.1218433380126953
    4. '(lines' → logprob: -2.1218433380126953
    5. '_input' → logprob: -3.6218433380126953
    6. '_line' → logprob: -3.6218433380126953
    7. '(' → logprob: -3.6218433380126953
    8. '_lines' → logprob: -4.496843338012695
    9. 'input' → logprob: -6.121843338012695
    10. 'def' → logprob: -6.121843338012695

Token 787: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.310637503862381
    2. '():' → logprob: -1.4356374740600586
    3. '()' → logprob: -3.9356374740600586
    4. '(input' → logprob: -5.810637474060059
    5. '("("' → logprob: -6.435637474060059
    6. '(cls' → logprob: -6.560637474060059
    7. '(line' → logprob: -7.060637474060059
    8. '(file' → logprob: -7.810637474060059
    9. '(self' → logprob: -8.185637474060059
    10. '():
' → logprob: -8.310637474060059

Token 788: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22913552820682526
    2. '       ' → logprob: -1.604135513305664
    3. '():' → logprob: -6.979135513305664
    4. '()\' → logprob: -7.104135513305664
    5. '   ' → logprob: -7.229135513305664
    6. '(' → logprob: -7.479135513305664
    7. '():
' → logprob: -8.354135513305664
    8. '()
' → logprob: -9.729135513305664
    9. '```' → logprob: -9.979135513305664
    10. '\' → logprob: -10.354135513305664

Token 789: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47847267985343933
    2. ' n' → logprob: -0.9784727096557617
    3. 'import' (adapté à ' import') → logprob: -5.978472709655762
    4. ' lines' → logprob: -6.853472709655762
    5. ' import' → logprob: -7.978472709655762
    6. 'lines' → logprob: -8.978472709655762
    7. 'num' → logprob: -9.103472709655762
    8. '       ' → logprob: -9.478472709655762
    9. 'line' → logprob: -9.853472709655762
    10. ' line' → logprob: -10.728472709655762

Token 790: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20142494142055511
    2. ' sys' → logprob: -1.7014249563217163
    3. '=sys' → logprob: -11.576424598693848
    4. '	sys' → logprob: -13.076424598693848
    5. '_sys' → logprob: -15.826424598693848
    6. '(sys' → logprob: -16.576425552368164
    7. '.sys' → logprob: -18.701425552368164
    8. 'stdin' → logprob: -20.076425552368164
    9. '/sys' → logprob: -20.951425552368164
    10. 'json' → logprob: -21.076425552368164

Token 791: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04639837145805359
    2. '        
' → logprob: -3.671398401260376
    3. '.readline' → logprob: -4.921398162841797
    4. '[' → logprob: -6.671398162841797
    5. '		
' → logprob: -6.671398162841797
    6. ' readline' → logprob: -6.796398162841797
    7. 'input' → logprob: -6.921398162841797
    8. ' lines' → logprob: -6.921398162841797
    9. '
' → logprob: -7.421398162841797
    10. 'line' → logprob: -7.546398162841797

Token 792: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12407276779413223
    2. ' lines' → logprob: -2.374072790145874
    3. 'lines' → logprob: -4.124072551727295
    4. 'line' → logprob: -5.874072551727295
    5. 'data' → logprob: -6.499072551727295
    6. 'input' → logprob: -6.874072551727295
    7. '	lines' → logprob: -7.499072551727295
    8. '        
' → logprob: -7.874072551727295
    9. ' line' → logprob: -7.874072551727295
    10. '_lines' → logprob: -9.249073028564453

Token 793: ' input' (ID: 3422)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.147177591919899
    2. 'n' → logprob: -2.5221776962280273
    3. ' n' → logprob: -3.2721776962280273
    4. 'lines' → logprob: -4.272177696228027
    5. 'data' → logprob: -5.772177696228027
    6. ' data' → logprob: -7.522177696228027
    7. 'input' (adapté à ' input') → logprob: -8.272177696228027
    8. ' input' → logprob: -8.522177696228027
    9. '       ' → logprob: -8.647177696228027
    10. 'line' → logprob: -8.772177696228027

Token 794: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15144526958465576
    2. '_data' → logprob: -2.6514453887939453
    3. '_line' → logprob: -3.2764453887939453
    4. '_lines' → logprob: -4.151445388793945
    5. '().' → logprob: -5.151445388793945
    6. ' =' → logprob: -5.651445388793945
    7. '=' → logprob: -5.776445388793945
    8. '.' → logprob: -6.901445388793945
    9. 'data' → logprob: -7.026445388793945
    10. '_' → logprob: -7.026445388793945

Token 795: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.005234121344983578
    2. ' sys' → logprob: -5.255234241485596
    3. '	sys' → logprob: -15.630233764648438
    4. 'input' → logprob: -16.005233764648438
    5. '=sys' → logprob: -16.255233764648438
    6. '(sys' → logprob: -17.130233764648438
    7. 'lambda' → logprob: -18.255233764648438
    8. '
' → logprob: -20.630233764648438
    9. '_sys' → logprob: -20.755233764648438
    10. 'stdin' → logprob: -21.755233764648438

Token 796: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.02074870839715004
    2. '().' → logprob: -4.395748615264893
    3. '.' → logprob: -4.895748615264893
    4. '.readline' → logprob: -7.645748615264893
    5. '.stdout' → logprob: -8.89574909210205
    6. 'stdin' → logprob: -10.14574909210205
    7. '()
' → logprob: -11.64574909210205
    8. ' .' → logprob: -11.77074909210205
    9. '._' → logprob: -11.89574909210205
    10. '.input' → logprob: -12.14574909210205

Token 797: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.25202304124832153
    2. '.readline' → logprob: -1.5020229816436768
    3. ' readline' → logprob: -10.002022743225098
    4. 'reader' → logprob: -11.002022743225098
    5. 'buffer' → logprob: -11.252022743225098
    6. '.read' → logprob: -11.752022743225098
    7. '_read' → logprob: -12.377022743225098
    8. 'readonly' → logprob: -12.502022743225098
    9. 'rea' → logprob: -13.502022743225098
    10. 'stdin' → logprob: -13.877022743225098

Token 798: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0553365983068943
    2. '().' → logprob: -3.5553367137908936
    3. '()
' → logprob: -3.6803367137908936
    4. '()\' → logprob: -11.305336952209473
    5. '())' → logprob: -11.930336952209473
    6. '()

' → logprob: -12.055336952209473
    7. '
' → logprob: -12.680336952209473
    8. '()<' → logprob: -12.930336952209473
    9. '()
' → logprob: -13.180336952209473
    10. '   ' → logprob: -13.680336952209473

Token 799: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2191130816936493
    2. '()
' → logprob: -1.7191131114959717
    3. '().' → logprob: -4.094112873077393
    4. '       ' → logprob: -7.219112873077393
    5. '()\' → logprob: -9.59411334991455
    6. '
' → logprob: -11.09411334991455
    7. '()

' → logprob: -11.46911334991455
    8. 'return' → logprob: -12.34411334991455
    9. '()<' → logprob: -12.34411334991455
    10. '   ' → logprob: -12.46911334991455

Token 800: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14778591692447662
    2. '       ' → logprob: -2.2727859020233154
    3. ' n' → logprob: -3.3977859020233154
    4. '(n' → logprob: -8.397786140441895
    5. 'num' → logprob: -8.522786140441895
    6. 'N' (adapté à ' N') → logprob: -8.647786140441895
    7. '        
' → logprob: -9.147786140441895
    8. 't' → logprob: -9.272786140441895
    9. '
' → logprob: -10.897786140441895
    10. '()' → logprob: -11.272786140441895

Token 801: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5771937370300293
    2. '=' → logprob: -1.0771937370300293
    3. ',' → logprob: -2.3271937370300293
    4. ' ,' → logprob: -8.077194213867188
    5. '=int' → logprob: -10.077194213867188
    6. ' =
' → logprob: -11.077194213867188
    7. '    ' → logprob: -12.077194213867188
    8. ',n' → logprob: -12.077194213867188
    9. '   ' → logprob: -12.202194213867188
    10. '()' → logprob: -12.327194213867188

Token 802: ' L' (ID: 451)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.20402653515338898
    2. ' ' → logprob: -3.204026460647583
    3. 'M' → logprob: -3.329026460647583
    4. ' n' → logprob: -3.579026460647583
    5. ' =' → logprob: -4.204026699066162
    6. '=' → logprob: -4.329026699066162
    7. ' input' → logprob: -4.829026699066162
    8. ' K' → logprob: -5.204026699066162
    9. ' k' → logprob: -5.454026699066162
    10. '*' → logprob: -5.579026699066162

Token 803: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062375884503126144
    2. ' =' → logprob: -2.812375783920288
    3. ',' → logprob: -7.812376022338867
    4. '=input' → logprob: -14.062376022338867
    5. ')' → logprob: -14.437376022338867
    6. ' ' → logprob: -14.562376022338867
    7. '[' → logprob: -14.687376022338867
    8. ' ,' → logprob: -14.937376022338867
    9. '=line' → logprob: -15.562376022338867
    10. '   ' → logprob: -15.687376022338867

Token 804: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01815134845674038
    2. 'map' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.76815128326416
    4. '	map' → logprob: -14.76815128326416
    5. ' input' → logprob: -14.89315128326416
    6. 'input' → logprob: -15.89315128326416
    7. ' list' → logprob: -16.268152236938477
    8. '(map' → logprob: -16.893152236938477
    9. ' m' → logprob: -17.018152236938477
    10. 'm' → logprob: -17.268152236938477

Token 805: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.610064685344696
    2. '(input' → logprob: -0.860064685344696
    3. '(' → logprob: -3.610064744949341
    4. '(str' → logprob: -5.360064506530762
    5. '(lambda' → logprob: -6.360064506530762
    6. 'input' → logprob: -10.610064506530762
    7. '(
' → logprob: -10.735064506530762
    8. '(list' → logprob: -12.110064506530762
    9. '(float' → logprob: -12.360064506530762
    10. ' (' → logprob: -13.235064506530762

Token 806: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39062291383743286
    2. '(input' → logprob: -1.390622854232788
    3. '(' → logprob: -3.265622854232788
    4. ',input' → logprob: -3.640622854232788
    5. 'input' → logprob: -4.890623092651367
    6. ')' → logprob: -6.390623092651367
    7. '(),' → logprob: -8.265623092651367
    8. '()' → logprob: -8.390623092651367
    9. '
' → logprob: -9.015623092651367
    10. '=input' → logprob: -9.890623092651367

Token 807: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002475777640938759
    2. ' input' → logprob: -6.002475738525391
    3. ')' → logprob: -17.37747573852539
    4. '(input' → logprob: -17.37747573852539
    5. 'str' → logprob: -18.87747573852539
    6. ',input' → logprob: -19.50247573852539
    7. '=input' → logprob: -19.62747573852539
    8. '<input' → logprob: -20.62747573852539
    9. '           ' → logprob: -21.00247573852539
    10. '	input' → logprob: -21.50247573852539

Token 808: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009143244242295623
    2. '()' → logprob: -7.000914096832275
    3. '())' → logprob: -13.000914573669434
    4. '()
' → logprob: -15.500914573669434
    5. '(' → logprob: -16.250913619995117
    6. ' ().' → logprob: -16.375913619995117
    7. '().'' → logprob: -17.375913619995117
    8. '()[' → logprob: -18.000913619995117
    9. '()<' → logprob: -18.000913619995117
    10. '()>' → logprob: -18.000913619995117

Token 809: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1344757080078125
    2. 'strip' → logprob: -2.1344757080078125
    3. '().' → logprob: -5.0094757080078125
    4. 'rstrip' → logprob: -7.1344757080078125
    5. ')' → logprob: -10.884475708007812
    6. '()' → logprob: -11.509475708007812
    7. 'read' → logprob: -11.884475708007812
    8. '(split' → logprob: -12.634475708007812
    9. '.strip' → logprob: -13.009475708007812
    10. '())' → logprob: -13.259475708007812

Token 810: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011133303865790367
    2. ')' → logprob: -4.761133193969727
    3. '()' → logprob: -6.011133193969727
    4. '())
' → logprob: -10.011133193969727
    5. '(' → logprob: -12.011133193969727
    6. '().' → logprob: -12.136133193969727
    7. '()))' → logprob: -12.386133193969727
    8. '))' → logprob: -13.886133193969727
    9. ' ())' → logprob: -14.261133193969727
    10. '('' → logprob: -14.386133193969727

Token 811: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03743823617696762
    2. '<|end|>' → logprob: -3.787438154220581
    3. '        
' → logprob: -4.53743839263916
    4. '		
' → logprob: -6.53743839263916
    5. '	' → logprob: -7.91243839263916
    6. '
' → logprob: -8.03743839263916
    7. '<|end|>' → logprob: -8.28743839263916
    8. ',' → logprob: -8.66243839263916
    9. '   ' → logprob: -8.78743839263916
    10. '[
' → logprob: -9.66243839263916

Token 812: ' pieces' (ID: 12762)
  Prédit: ' pieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pieces' → logprob: -0.31345507502555847
    2. 'pieces' (adapté à ' pieces') → logprob: -1.3134551048278809
    3. '       ' → logprob: -9.313454627990723
    4. 'p' → logprob: -10.688454627990723
    5. 'pcs' → logprob: -11.438454627990723
    6. 'results' → logprob: -11.688454627990723
    7. 'result' → logprob: -11.688454627990723
    8. 'piece' → logprob: -11.938454627990723
    9. ' pcs' → logprob: -12.313454627990723
    10. ' p' → logprob: -12.938454627990723

Token 813: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143400132656097
    2. '=' → logprob: -1.7014340162277222
    3. '=[]' → logprob: -10.826434135437012
    4. '[]' → logprob: -15.076434135437012
    5. ' =[' → logprob: -16.076433181762695
    6. '[' → logprob: -16.326433181762695
    7. '＝' → logprob: -16.451433181762695
    8. '=[]
' → logprob: -16.576433181762695
    9. ' ' → logprob: -17.451433181762695
    10. ',' → logprob: -17.576433181762695

Token 814: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0001593195047462359
    2. '[' → logprob: -9.25015926361084
    3. ' []' → logprob: -10.25015926361084
    4. '[]
' → logprob: -10.50015926361084
    5. '[]

' → logprob: -16.500160217285156
    6. '[]"' → logprob: -16.750160217285156
    7. '[]}' → logprob: -16.875160217285156
    8. '[
' → logprob: -16.875160217285156
    9. '[])' → logprob: -18.125160217285156
    10. '[]>' → logprob: -18.250160217285156

Token 815: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028785800095647573
    2. 'for' → logprob: -6.877878665924072
    3. ' for' → logprob: -6.877878665924072
    4. '<|end|>' → logprob: -7.252878665924072
    5. '	for' → logprob: -10.627878189086914
    6. '        
' → logprob: -10.877878189086914
    7. '	   ' → logprob: -11.002878189086914
    8. '	' → logprob: -11.127878189086914
    9. '   ' → logprob: -11.377878189086914
    10. '	       ' → logprob: -12.127878189086914

Token 816: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038166459649801254
    2. ' for' → logprob: -3.2881665229797363
    3. '       ' → logprob: -9.038166046142578
    4. '	for' → logprob: -12.038166046142578
    5. '<|end|>' → logprob: -16.038166046142578
    6. '        
' → logprob: -16.663166046142578
    7. '```' → logprob: -17.788166046142578
    8. '
' → logprob: -17.788166046142578
    9. ' ' → logprob: -18.663166046142578
    10. '	' → logprob: -18.913166046142578

Token 817: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.896309739408025e-07
    2. ' _' → logprob: -14.625000953674316
    3. '_i' → logprob: -16.375
    4. '_
' → logprob: -16.75
    5. '_=' → logprob: -19.0
    6. '_

' → logprob: -20.5
    7. '_
' → logprob: -20.75
    8. 'i' → logprob: -22.0
    9. '_range' → logprob: -22.0
    10. '   ' → logprob: -22.125

Token 818: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6964102983474731
    2. 'in' → logprob: -1.4464102983474731
    3. ' in' → logprob: -1.4464102983474731
    4. ' range' → logprob: -3.5714101791381836
    5. '_' → logprob: -5.946410179138184
    6. '_range' → logprob: -10.196410179138184
    7. 'i' → logprob: -11.446410179138184
    8. ' ' → logprob: -12.071410179138184
    9. ' _' → logprob: -12.321410179138184
    10. ')' → logprob: -12.946410179138184

Token 819: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '	range' → logprob: -17.50007438659668
    4. '(range' → logprob: -18.50007438659668
    5. 'in' → logprob: -19.25007438659668
    6. 'rang' → logprob: -19.37507438659668
    7. '```' → logprob: -19.75007438659668
    8. 'ange' → logprob: -19.87507438659668
    9. '
' → logprob: -19.87507438659668
    10. '_range' → logprob: -20.37507438659668

Token 820: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03806708753108978
    2. 'N' → logprob: -3.288067102432251
    3. ' N' → logprob: -11.038066864013672
    4. '(' → logprob: -12.038066864013672
    5. '	N' → logprob: -13.538066864013672
    6. '_N' → logprob: -13.788066864013672
    7. 'L' → logprob: -14.788066864013672
    8. '   ' → logprob: -15.163066864013672
    9. '(
' → logprob: -16.038066864013672
    10. ' (' → logprob: -16.288066864013672

Token 821: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05599971488118172
    2. '):' → logprob: -3.305999755859375
    3. '       ' → logprob: -5.055999755859375
    4. ':' → logprob: -5.180999755859375
    5. ',' → logprob: -5.680999755859375
    6. ':
' → logprob: -6.805999755859375
    7. '   ' → logprob: -7.180999755859375
    8. ')' → logprob: -9.180999755859375
    9. '):
' → logprob: -9.180999755859375
    10. '           ' → logprob: -9.305999755859375

Token 822: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01258029043674469
    2. '	       ' → logprob: -5.012580394744873
    3. 'tokens' → logprob: -6.637580394744873
    4. '   ' → logprob: -6.887580394744873
    5. '    	   ' → logprob: -6.887580394744873
    6. '		   ' → logprob: -7.387580394744873
    7. '	   ' → logprob: -7.512580394744873
    8. '       ' → logprob: -8.012579917907715
    9. '	           ' → logprob: -8.637579917907715
    10. '		           ' → logprob: -9.012579917907715

Token 823: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.6153378486633301
    2. 'pos' → logprob: -0.8653378486633301
    3. 'x' → logprob: -3.61533784866333
    4. ' pos' → logprob: -5.11533784866333
    5. ' p' → logprob: -5.36533784866333
    6. 'position' → logprob: -7.24033784866333
    7. ' x' → logprob: -9.115337371826172
    8. ' position' → logprob: -9.865337371826172
    9. 'd' → logprob: -10.240337371826172
    10. 'a' → logprob: -10.365337371826172

Token 824: '_i' (ID: 10853)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.3284633457660675
    2. ',' → logprob: -1.7034633159637451
    3. 'osition' → logprob: -2.328463315963745
    4. 'osi' → logprob: -8.453463554382324
    5. 'osit' → logprob: -9.703463554382324
    6. '_,' → logprob: -10.203463554382324
    7. ',pos' → logprob: -10.203463554382324
    8. 'pos' → logprob: -10.578463554382324
    9. ',d' → logprob: -10.578463554382324
    10. 'OS' → logprob: -11.453463554382324

Token 825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034001000225543976
    2. ',d' → logprob: -3.409001111984253
    3. 'd' → logprob: -9.034001350402832
    4. ' ,' → logprob: -9.409001350402832
    5. 'dir' → logprob: -10.409001350402832
    6. 'direction' → logprob: -10.534001350402832
    7. '_,' → logprob: -10.909001350402832
    8. 's' → logprob: -11.409001350402832
    9. 'ar' → logprob: -11.409001350402832
    10. ',s' → logprob: -11.534001350402832

Token 826: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006771695916540921
    2. ' d' → logprob: -7.750677108764648
    3. 'dir' → logprob: -9.000677108764648
    4. 'a' → logprob: -9.250677108764648
    5. 'c' → logprob: -11.375677108764648
    6. 'direction' → logprob: -12.500677108764648
    7. '_d' → logprob: -13.125677108764648
    8. 'di' → logprob: -13.375677108764648
    9. 'D' → logprob: -13.375677108764648
    10. '	d' → logprob: -13.750677108764648

Token 827: '_i' (ID: 10853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3312677145004272
    2. ' =' → logprob: -1.3312677145004272
    3. 'ir' → logprob: -1.7062677145004272
    4. '_i' → logprob: -2.081267833709717
    5. 'irection' → logprob: -2.206267833709717
    6. 'i' → logprob: -2.956267833709717
    7. 'e' → logprob: -7.206267833709717
    8. 'irect' → logprob: -7.706267833709717
    9. 'raw' → logprob: -8.331267356872559
    10. 'IRECTION' → logprob: -8.331267356872559

Token 828: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380721352994442
    2. ' =' → logprob: -3.288072109222412
    3. ',' → logprob: -10.41307258605957
    4. '=input' → logprob: -15.03807258605957
    5. '=line' → logprob: -16.03807258605957
    6. '   ' → logprob: -16.41307258605957
    7. ' ' → logprob: -16.66307258605957
    8. '_str' → logprob: -17.28807258605957
    9. '=
' → logprob: -17.41307258605957
    10. '=int' → logprob: -17.66307258605957

Token 829: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07895434647798538
    2. ' map' → logprob: -2.5789544582366943
    3. 'input' → logprob: -9.703954696655273
    4. ' input' → logprob: -12.703954696655273
    5. 'list' → logprob: -15.453954696655273
    6. 'm' → logprob: -16.203954696655273
    7. '	map' → logprob: -16.203954696655273
    8. 'int' → logprob: -16.828954696655273
    9. '(map' → logprob: -17.203954696655273
    10. '_map' → logprob: -17.578954696655273

Token 830: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003013809327967465
    2. 'int' → logprob: -8.125301361083984
    3. '(' → logprob: -13.125301361083984
    4. '(input' → logprob: -13.500301361083984
    5. '[int' → logprob: -13.875301361083984
    6. '<int' → logprob: -14.750301361083984
    7. '=int' → logprob: -15.625301361083984
    8. '(str' → logprob: -15.875301361083984
    9. '```' → logprob: -16.125301361083984
    10. ' int' → logprob: -16.500301361083984

Token 831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12760837376117706
    2. ',input' → logprob: -2.127608299255371
    3. '(input' → logprob: -8.252608299255371
    4. '(' → logprob: -8.252608299255371
    5. ' ,' → logprob: -10.002608299255371
    6. '(),' → logprob: -10.252608299255371
    7. ',(' → logprob: -11.252608299255371
    8. ',int' → logprob: -11.252608299255371
    9. '           ' → logprob: -11.627608299255371
    10. ',
' → logprob: -12.252608299255371

Token 832: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004306692280806601
    2. ' input' → logprob: -7.750430583953857
    3. '(input' → logprob: -20.125431060791016
    4. 'output' → logprob: -21.125431060791016
    5. ',input' → logprob: -21.125431060791016
    6. '           ' → logprob: -21.750431060791016
    7. '<input' → logprob: -21.875431060791016
    8. '_input' → logprob: -22.000431060791016
    9. '=input' → logprob: -22.000431060791016
    10. '[input' → logprob: -22.500431060791016

Token 833: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010032468708232045
    2. '()' → logprob: -9.250100135803223
    3. '()
' → logprob: -13.125100135803223
    4. ')' → logprob: -13.750100135803223
    5. ' ().' → logprob: -14.875100135803223
    6. '())' → logprob: -15.125100135803223
    7. '().
' → logprob: -15.875100135803223
    8. '.' → logprob: -16.37510108947754
    9. '.readline' → logprob: -16.50010108947754
    10. '.split' → logprob: -16.75010108947754

Token 834: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.5716304410016164e-05
    2. 'strip' → logprob: -10.250035285949707
    3. 'rstrip' → logprob: -15.500035285949707
    4. ' split' → logprob: -16.750036239624023
    5. '(split' → logprob: -17.125036239624023
    6. 'spl' → logprob: -18.500036239624023
    7. '.split' → logprob: -19.000036239624023
    8. 'read' → logprob: -19.875036239624023
    9. '_split' → logprob: -19.875036239624023
    10. 'plit' → logprob: -20.000036239624023

Token 835: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003230829257518053
    2. ')
' → logprob: -5.753231048583984
    3. '())' → logprob: -10.753231048583984
    4. '()' → logprob: -11.878231048583984
    5. ')
' → logprob: -11.878231048583984
    6. '))' → logprob: -12.253231048583984
    7. ')`
' → logprob: -12.378231048583984
    8. '       ' → logprob: -12.628231048583984
    9. ')`' → logprob: -13.253231048583984
    10. '())
' → logprob: -14.128231048583984

Token 836: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008650107774883509
    2. '       ' → logprob: -7.6258649826049805
    3. '<|end|>' → logprob: -8.37586498260498
    4. '   ' → logprob: -10.37586498260498
    5. ' pieces' → logprob: -10.62586498260498
    6. '	       ' → logprob: -10.87586498260498
    7. '<|end|>' → logprob: -11.25086498260498
    8. '            
' → logprob: -11.37586498260498
    9. '          ' → logprob: -11.50086498260498
    10. '               ' → logprob: -11.75086498260498

Token 837: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' (adapté à ' pieces') → logprob: -0.21001562476158142
    2. ' pieces' → logprob: -1.7100156545639038
    3. '           ' → logprob: -4.960015773773193
    4. '       ' → logprob: -7.210015773773193
    5. 'piece' → logprob: -7.585015773773193
    6. 'p' → logprob: -8.710015296936035
    7. 'direction' → logprob: -10.085015296936035
    8. ' piece' → logprob: -11.085015296936035
    9. ' direction' → logprob: -11.085015296936035
    10. '   ' → logprob: -11.210015296936035

Token 838: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011757015017792583
    2. '.' → logprob: -6.751175880432129
    3. '.Append' → logprob: -13.626175880432129
    4. ' .' → logprob: -13.751175880432129
    5. '.app' → logprob: -14.001175880432129
    6. 'append' → logprob: -14.626175880432129
    7. '.ap' → logprob: -14.626175880432129
    8. ').' → logprob: -15.126175880432129
    9. '.
' → logprob: -15.126175880432129
    10. '​.' → logprob: -15.126175880432129

Token 839: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -3.0590548703912646e-05
    2. '(' → logprob: -10.500030517578125
    3. 'Piece' → logprob: -13.000030517578125
    4. '(
' → logprob: -14.625030517578125
    5. ' Piece' → logprob: -16.375030517578125
    6. '(Point' → logprob: -16.750030517578125
    7. '(piece' → logprob: -17.500030517578125
    8. 'P' → logprob: -17.625030517578125
    9. '	P' → logprob: -18.250030517578125
    10. '((' → logprob: -18.250030517578125

Token 840: 'iece' (ID: 12778)
  Prédit: 'iece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iece' → logprob: -7.941850526549388e-06
    2. '(P' → logprob: -13.375007629394531
    3. 'iec' → logprob: -13.750007629394531
    4. '[' → logprob: -14.000007629394531
    5. '(' → logprob: -14.250007629394531
    6. 'ie' → logprob: -14.500007629394531
    7. 'ece' → logprob: -14.625007629394531
    8. 'Piece' → logprob: -14.750007629394531
    9. '   ' → logprob: -14.875007629394531
    10. 'ieces' → logprob: -15.125007629394531

Token 841: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00012403888104017824
    2. '(' → logprob: -9.000123977661133
    3. '(
' → logprob: -15.125123977661133
    4. '(position' → logprob: -16.000123977661133
    5. 'p' → logprob: -16.125123977661133
    6. '((' → logprob: -17.750123977661133
    7. '(i' → logprob: -18.250123977661133
    8. ' (' → logprob: -19.000123977661133
    9. ')' → logprob: -19.125123977661133
    10. '(

' → logprob: -19.875123977661133

Token 842: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.008739139884710312
    2. 'osition' → logprob: -4.758738994598389
    3. 'os' → logprob: -9.133739471435547
    4. 'i' → logprob: -11.508739471435547
    5. 'position' → logprob: -12.633739471435547
    6. 'osit' → logprob: -13.633739471435547
    7. '_os' → logprob: -15.133739471435547
    8. 'osi' → logprob: -15.258739471435547
    9. '[position' → logprob: -15.383739471435547
    10. '   ' → logprob: -15.758739471435547

Token 843: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009237268241122365
    2. ',d' → logprob: -7.0009236335754395
    3. ' ,' → logprob: -11.750924110412598
    4. ',p' → logprob: -12.750924110412598
    5. ',
' → logprob: -15.000924110412598
    6. '   ' → logprob: -15.000924110412598
    7. 'd' → logprob: -15.250924110412598
    8. '‌,' → logprob: -16.12592315673828
    9. '),' → logprob: -16.87592315673828
    10. '=' → logprob: -16.87592315673828

Token 844: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005956529639661312
    2. ' d' → logprob: -5.130956649780273
    3. '	d' → logprob: -12.005956649780273
    4. 'Arrow' → logprob: -12.005956649780273
    5. '   ' → logprob: -12.130956649780273
    6. '    ' → logprob: -13.505956649780273
    7. ' ' → logprob: -13.755956649780273
    8. '           ' → logprob: -13.880956649780273
    9. '       ' → logprob: -14.130956649780273
    10. ' Arrow' → logprob: -14.255956649780273

Token 845: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0011748670367524028
    2. 'irection' → logprob: -6.7511749267578125
    3. 'i' → logprob: -12.751174926757812
    4. 'irectional' → logprob: -14.751174926757812
    5. '=' → logprob: -15.376174926757812
    6. 'irections' → logprob: -15.376174926757812
    7. 'IRECTION' → logprob: -15.501174926757812
    8. ')' → logprob: -15.501174926757812
    9. 'irect' → logprob: -16.376174926757812
    10. 'ir' → logprob: -16.501174926757812

Token 846: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0021327754948288202
    2. '))
' → logprob: -6.252132892608643
    3. ')' → logprob: -8.502132415771484
    4. '       ' → logprob: -14.627132415771484
    5. '))

' → logprob: -15.502132415771484
    6. ')
' → logprob: -15.627132415771484
    7. '))
' → logprob: -15.752132415771484
    8. ')))' → logprob: -16.002132415771484
    9. ' ))' → logprob: -16.627132415771484
    10. '   ' → logprob: -17.377132415771484

Token 847: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03893633186817169
    2. '	' → logprob: -4.288936138153076
    3. '
' → logprob: -4.538936138153076
    4. 'return' → logprob: -4.788936138153076
    5. '	return' → logprob: -6.288936138153076
    6. '		
' → logprob: -6.538936138153076
    7. '<|end|>' → logprob: -7.288936138153076
    8. '        
' → logprob: -7.788936138153076
    9. '   ' → logprob: -7.913936138153076
    10. ' return' → logprob: -8.163936614990234

Token 848: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5749095678329468
    2. 'return' (adapté à ' return') → logprob: -0.9499095678329468
    3. ' return' → logprob: -3.1999096870422363
    4. '
' → logprob: -4.699909687042236
    5. '	return' → logprob: -8.699909210205078
    6. '	' → logprob: -8.949909210205078
    7. '        
' → logprob: -9.074909210205078
    8. 'b' → logprob: -9.449909210205078
    9. '   ' → logprob: -10.074909210205078
    10. '<|end|>' → logprob: -10.324909210205078

Token 849: ' Board' (ID: 10837)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.32403671741485596
    2. 'L' → logprob: -1.699036717414856
    3. ' Board' → logprob: -2.6990365982055664
    4. 'N' → logprob: -3.9490365982055664
    5. ' L' → logprob: -5.199036598205566
    6. '(Board' → logprob: -7.074036598205566
    7. ' N' → logprob: -7.199036598205566
    8. '(L' → logprob: -9.449036598205566
    9. 'B' → logprob: -10.324036598205566
    10. 'Piece' → logprob: -10.699036598205566

Token 850: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0009982750052586198
    2. '(' → logprob: -7.125998497009277
    3. '(length' → logprob: -9.750998497009277
    4. '(N' → logprob: -10.000998497009277
    5. '(
' → logprob: -10.125998497009277
    6. '(len' → logprob: -10.500998497009277
    7. '(Board' → logprob: -10.875998497009277
    8. '((' → logprob: -13.500998497009277
    9. '(B' → logprob: -14.500998497009277
    10. 'L' → logprob: -14.750998497009277

Token 851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018220659694634378
    2. ',p' → logprob: -8.625182151794434
    3. ' ,' → logprob: -13.000182151794434
    4. ',
' → logprob: -15.125182151794434
    5. '   ' → logprob: -17.75018310546875
    6. 'p' → logprob: -19.12518310546875
    7. '),' → logprob: -19.37518310546875
    8. '
' → logprob: -19.62518310546875
    9. '‌,' → logprob: -19.62518310546875
    10. '       ' → logprob: -19.87518310546875

Token 852: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.07888978719711304
    2. ' pieces' → logprob: -2.578889846801758
    3. 'piece' → logprob: -18.078889846801758
    4. 'pie' → logprob: -18.578889846801758
    5. '       ' → logprob: -18.703889846801758
    6. 'piec' → logprob: -18.703889846801758
    7. '   ' → logprob: -18.828889846801758
    8. 'Pieces' → logprob: -18.953889846801758
    9. ' piezas' → logprob: -19.703889846801758
    10. 'p' → logprob: -19.953889846801758

Token 853: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '<|end|>' → logprob: -12.625004768371582
    3. ')
' → logprob: -14.500004768371582
    4. ' )' → logprob: -15.750004768371582
    5. '))' → logprob: -16.000003814697266
    6. ')}}' → logprob: -16.250003814697266
    7. ')return' → logprob: -16.375003814697266
    8. '())' → logprob: -16.375003814697266
    9. ')}' → logprob: -16.500003814697266
    10. '   ' → logprob: -17.000003814697266

Token 854: 'class' (ID: 1444)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0011933216592296958
    2. 'def' → logprob: -7.001193523406982
    3. '```' → logprob: -8.376193046569824
    4. ' if' → logprob: -10.126193046569824
    5. '#' → logprob: -12.126193046569824
    6. 'board' → logprob: -12.751193046569824
    7. 'If' → logprob: -13.376193046569824
    8. 'Board' → logprob: -14.626193046569824
    9. '@if' → logprob: -15.376193046569824
    10. '<|end|>' → logprob: -15.376193046569824

Token 855: ' Solution' (ID: 20858)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.18893910944461823
    2. 'Solver' → logprob: -2.813939094543457
    3. 'Output' → logprob: -3.313939094543457
    4. ' Solution' → logprob: -3.438939094543457
    5. 'Main' → logprob: -4.063939094543457
    6. 'Runner' → logprob: -5.063939094543457
    7. 'Test' → logprob: -5.063939094543457
    8. ' Solver' → logprob: -5.063939094543457
    9. 'Game' → logprob: -5.313939094543457
    10. 'Tester' → logprob: -7.688939094543457

Token 856: 'Runner' (ID: 26032)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024977754801511765
    2. ':
' → logprob: -6.002497673034668
    3. ':def' → logprob: -11.502497673034668
    4. '():' → logprob: -11.877497673034668
    5. '):' → logprob: -13.377497673034668
    6. 'def' → logprob: -14.627497673034668
    7. '():
' → logprob: -14.627497673034668
    8. ':

' → logprob: -14.877497673034668
    9. '>:' → logprob: -15.127497673034668
    10. '   ' → logprob: -15.377497673034668

Token 857: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038920470979064703
    2. ':
' → logprob: -7.875389099121094
    3. ':def' → logprob: -12.125389099121094
    4. '():' → logprob: -14.125389099121094
    5. '):' → logprob: -14.375389099121094
    6. ' :' → logprob: -14.500389099121094
    7. '(' → logprob: -14.625389099121094
    8. ':

' → logprob: -15.000389099121094
    9. '<|end|>' → logprob: -15.250389099121094
    10. '>:' → logprob: -15.250389099121094

Token 858: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019068485125899315
    2. ' def' → logprob: -4.019068717956543
    3. ' class' → logprob: -7.269068717956543
    4. 'def' → logprob: -9.394068717956543
    5. 'class' → logprob: -10.144068717956543
    6. ' @' → logprob: -10.769068717956543
    7. 'staticmethod' → logprob: -11.144068717956543
    8. '<|end|>' → logprob: -11.144068717956543
    9. ' static' → logprob: -11.269068717956543
    10. '	def' → logprob: -12.144068717956543

Token 859: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.004085997585207224
    2. ' @' → logprob: -5.504086017608643
    3. '   ' → logprob: -12.504085540771484
    4. 'def' (adapté à ' def') → logprob: -12.504085540771484
    5. ' def' → logprob: -15.629085540771484
    6. 'staticmethod' → logprob: -17.379085540771484
    7. '
' → logprob: -19.754085540771484
    8. '@
' → logprob: -20.504085540771484
    9. ' ' → logprob: -20.754085540771484
    10. '```' → logprob: -22.254085540771484

Token 860: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11257979273796082
    2. ' run' → logprob: -2.487579822540283
    3. 'def' → logprob: -4.362579822540283
    4. ' __' → logprob: -4.987579822540283
    5. ' static' → logprob: -6.112579822540283
    6. ' main' → logprob: -7.737579822540283
    7. '__' → logprob: -7.987579822540283
    8. ' solve' → logprob: -8.987579345703125
    9. 'staticmethod' → logprob: -8.987579345703125
    10. '_' → logprob: -9.237579345703125

Token 861: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.088346359931165e-07
    2. 'main' → logprob: -14.250000953674316
    3. ' init' → logprob: -16.75
    4. 'new' → logprob: -17.25
    5. 'def' → logprob: -17.625
    6. 'next' → logprob: -18.375
    7. 'int' → logprob: -18.75
    8. 'call' → logprob: -18.875
    9. 'name' → logprob: -19.0
    10. 'staticmethod' → logprob: -19.0

Token 862: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.019417420029640198
    2. '(self' → logprob: -4.0194172859191895
    3. '__(
' → logprob: -7.3944172859191895
    4. '(' → logprob: -8.144417762756348
    5. '__' → logprob: -8.394417762756348
    6. ' (' → logprob: -9.394417762756348
    7. '_(' → logprob: -10.644417762756348
    8. 'self' → logprob: -11.394417762756348
    9. '(
' → logprob: -12.769417762756348
    10. '   ' → logprob: -13.019417762756348

Token 863: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011450992315076292
    2. ')' → logprob: -9.125114440917969
    3. ' self' → logprob: -12.625114440917969
    4. '
' → logprob: -14.125114440917969
    5. 'Board' → logprob: -14.500114440917969
    6. '(self' → logprob: -15.375114440917969
    7. '):
' → logprob: -15.375114440917969
    8. 'board' → logprob: -15.375114440917969
    9. 'Self' → logprob: -16.87511444091797
    10. ')(' → logprob: -17.25011444091797

Token 864: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030393933411687613
    2. 'self' → logprob: -6.003039360046387
    3. '):
' → logprob: -8.503039360046387
    4. '):' → logprob: -8.878039360046387
    5. '(self' → logprob: -8.878039360046387
    6. ',self' → logprob: -9.878039360046387
    7. ')' → logprob: -11.378039360046387
    8. ' self' → logprob: -11.878039360046387
    9. '__,' → logprob: -13.253039360046387
    10. ' (' → logprob: -13.628039360046387

Token 865: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002043748099822551
    2. ' self' → logprob: -9.000204086303711
    3. '       ' → logprob: -9.625204086303711
    4. '(self' → logprob: -11.500204086303711
    5. '	self' → logprob: -12.625204086303711
    6. '   ' → logprob: -14.125204086303711
    7. 'board' → logprob: -15.625204086303711
    8. '
' → logprob: -16.00020408630371
    9. ',self' → logprob: -16.50020408630371
    10. '        
' → logprob: -16.62520408630371

Token 866: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.017558591440320015
    2. ' self' → logprob: -4.767558574676514
    3. 'pass' → logprob: -5.642558574676514
    4. 'def' → logprob: -5.767558574676514
    5. '   ' → logprob: -6.642558574676514
    6. '       ' → logprob: -7.142558574676514
    7. ' pass' → logprob: -9.767559051513672
    8. ' def' → logprob: -10.517559051513672
    9. 'None' → logprob: -11.142559051513672
    10. 'board' → logprob: -11.267559051513672

Token 867: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.018482232466340065
    2. '.parser' → logprob: -4.268482208251953
    3. '.' → logprob: -5.768482208251953
    4. '.runner' → logprob: -7.268482208251953
    5. '.input' → logprob: -8.393482208251953
    6. '.processor' → logprob: -9.393482208251953
    7. '.Board' → logprob: -10.268482208251953
    8. '.reader' → logprob: -10.893482208251953
    9. '.executor' → logprob: -11.018482208251953
    10. '.solution' → logprob: -11.018482208251953

Token 868: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07899785041809082
    2. ' =' → logprob: -2.578997850418091
    3. '.' → logprob: -10.203997611999512
    4. ' ' → logprob: -10.328997611999512
    5. '=
' → logprob: -11.703997611999512
    6. ' =
' → logprob: -11.828997611999512
    7. '=None' → logprob: -12.453997611999512
    8. ')' → logprob: -12.453997611999512
    9. '   ' → logprob: -12.453997611999512
    10. ',' → logprob: -12.953997611999512

Token 869: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4835320711135864
    2. 'Input' → logprob: -0.9835320711135864
    3. ' None' → logprob: -4.858531951904297
    4. ' Input' → logprob: -6.483531951904297
    5. 'Board' → logprob: -9.108531951904297
    6. '(None' → logprob: -13.233531951904297
    7. '	Input' → logprob: -13.983531951904297
    8. 'input' → logprob: -13.983531951904297
    9. ' Board' → logprob: -14.233531951904297
    10. 'self' → logprob: -14.358531951904297

Token 870: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017825741320848465
    2. ' def' → logprob: -4.267825603485107
    3. 'def' → logprob: -5.767825603485107
    4. '
' → logprob: -8.392826080322266
    5. '<|end|>' → logprob: -8.392826080322266
    6. '    
' → logprob: -10.892826080322266
    7. '	def' → logprob: -11.017826080322266
    8. ',' → logprob: -11.392826080322266
    9. '<|end|>' → logprob: -11.767826080322266
    10. '[' → logprob: -12.392826080322266

Token 871: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04575840383768082
    2. ' def' → logprob: -3.4207584857940674
    3. 'def' → logprob: -4.420758247375488
    4. '	def' → logprob: -11.920758247375488
    5. '
' → logprob: -12.045758247375488
    6. '<|end|>' → logprob: -14.295758247375488
    7. ' ' → logprob: -15.170758247375488
    8. '    
' → logprob: -15.545758247375488
    9. '```' → logprob: -15.670758247375488
    10. '<|end|>' → logprob: -15.670758247375488

Token 872: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16023458540439606
    2. ' def' → logprob: -1.9102345705032349
    3. '   ' → logprob: -11.535234451293945
    4. '	def' → logprob: -14.160234451293945
    5. '
' → logprob: -18.785234451293945
    6. ' ' → logprob: -19.160234451293945
    7. '```' → logprob: -21.285234451293945
    8. 'de' → logprob: -22.160234451293945
    9. 'Def' → logprob: -22.160234451293945
    10. '  ' → logprob: -22.160234451293945

Token 873: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.144719660282135
    2. ' run' → logprob: -2.1447196006774902
    3. 'solve' → logprob: -4.39471960067749
    4. 'load' → logprob: -6.14471960067749
    5. 'read' → logprob: -6.64471960067749
    6. ' solve' → logprob: -6.89471960067749
    7. 'parse' → logprob: -7.39471960067749
    8. ' load' → logprob: -9.394720077514648
    9. 'main' → logprob: -10.394720077514648
    10. ' parse' → logprob: -10.519720077514648

Token 874: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.025815164670348167
    2. '()' → logprob: -4.025815010070801
    3. '(' → logprob: -4.900815010070801
    4. '(
' → logprob: -9.6508150100708
    5. 'self' → logprob: -9.9008150100708
    6. '_' → logprob: -10.7758150100708
    7. '():' → logprob: -11.0258150100708
    8. ' (' → logprob: -11.1508150100708
    9. '():
' → logprob: -12.0258150100708
    10. '(s' → logprob: -12.6508150100708

Token 875: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010377218015491962
    2. '):
' → logprob: -4.760377407073975
    3. ')' → logprob: -6.510377407073975
    4. '():' → logprob: -8.635376930236816
    5. '()' → logprob: -10.260376930236816
    6. ',' → logprob: -10.385376930236816
    7. '():
' → logprob: -12.135376930236816
    8. ' ):' → logprob: -12.135376930236816
    9. 'self' → logprob: -12.385376930236816
    10. '_' → logprob: -12.510376930236816

Token 876: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002602629829198122
    2. 'self' → logprob: -8.500260353088379
    3. '()' → logprob: -10.250260353088379
    4. '```' → logprob: -11.750260353088379
    5. '(self' → logprob: -12.750260353088379
    6. '        
' → logprob: -13.000260353088379
    7. ' self' → logprob: -13.125260353088379
    8. '
' → logprob: -13.375260353088379
    9. '   ' → logprob: -13.625260353088379
    10. '()
' → logprob: -14.125260353088379

Token 877: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18032480776309967
    2. ' self' → logprob: -1.9303247928619385
    3. '       ' → logprob: -3.9303247928619385
    4. 'board' → logprob: -8.55532455444336
    5. ' board' → logprob: -9.68032455444336
    6. '```' → logprob: -12.18032455444336
    7. '   ' → logprob: -13.93032455444336
    8. '	self' → logprob: -14.55532455444336
    9. 'b' → logprob: -14.80532455444336
    10. 'import' → logprob: -15.18032455444336

Token 878: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -1.0921942703134846e-05
    2. '.' → logprob: -11.50001049041748
    3. ' .' → logprob: -15.25001049041748
    4. '=' → logprob: -15.37501049041748
    5. '.b' → logprob: -16.375011444091797
    6. '=.' → logprob: -16.875011444091797
    7. '
' → logprob: -17.000011444091797
    8. ' =' → logprob: -17.000011444091797
    9. 'board' → logprob: -17.125011444091797
    10. '.bo' → logprob: -17.250011444091797

Token 879: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10026177763938904
    2. ' =' → logprob: -2.350261688232422
    3. '=self' → logprob: -9.850261688232422
    4. '.' → logprob: -14.100261688232422
    5. '=create' → logprob: -14.850261688232422
    6. 'self' → logprob: -15.100261688232422
    7. '＝' → logprob: -15.725261688232422
    8. ',' → logprob: -15.850261688232422
    9. '.=' → logprob: -15.850261688232422
    10. '=

' → logprob: -16.100261688232422

Token 880: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0001234428636962548
    2. ' Input' → logprob: -9.000123023986816
    3. '	Input' → logprob: -20.375123977661133
    4. '<Input' → logprob: -22.875123977661133
    5. '\Input' → logprob: -23.625123977661133
    6. '_Input' → logprob: -24.250123977661133
    7. '(Input' → logprob: -24.250123977661133
    8. '_input' → logprob: -25.125123977661133
    9. 'input' → logprob: -26.125123977661133
    10. '.Input' → logprob: -26.875123977661133

Token 881: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'Parse' → logprob: -19.25
    3. '_parser' → logprob: -20.375
    4. 'parser' → logprob: -20.625
    5. ' Parser' → logprob: -20.75
    6. 'Parsed' → logprob: -21.5
    7. 'Processor' → logprob: -21.875
    8. '.Parser' → logprob: -22.125
    9. 'Parsing' → logprob: -22.625
    10. 'Par' → logprob: -22.75

Token 882: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -8.196732960641384e-05
    2. '.' → logprob: -9.500082015991211
    3. '().' → logprob: -12.000082015991211
    4. ' .' → logprob: -14.500082015991211
    5. '=parse' → logprob: -16.37508201599121
    6. 'parse' → logprob: -16.87508201599121
    7. '   ' → logprob: -16.87508201599121
    8. '\.' → logprob: -17.00008201599121
    9. '```' → logprob: -17.50008201599121
    10. '{}.' → logprob: -17.62508201599121

Token 883: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.320199877838604e-07
    2. 'Input' → logprob: -16.0
    3. '_' → logprob: -16.375
    4. '_Input' → logprob: -16.5
    5. '_board' → logprob: -18.0
    6. '_output' → logprob: -18.25
    7. 'input' → logprob: -19.25
    8. '_inputs' → logprob: -19.25
    9. '_INPUT' → logprob: -19.5
    10. '<Input' → logprob: -19.75

Token 884: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.10031331330537796
    2. '()' → logprob: -2.350313425064087
    3. '       ' → logprob: -9.475313186645508
    4. '()
' → logprob: -10.600313186645508
    5. '()

' → logprob: -12.725313186645508
    6. '()\' → logprob: -13.725313186645508
    7. '()`' → logprob: -15.350313186645508
    8. '().
' → logprob: -16.225313186645508
    9. '().' → logprob: -16.475313186645508
    10. '())
' → logprob: -16.600313186645508

Token 885: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04194705933332443
    2. 'print' → logprob: -3.29194712638855
    3. 'result' → logprob: -5.666946887969971
    4. 'score' → logprob: -7.916946887969971
    5. '   ' → logprob: -10.416947364807129
    6. '```' → logprob: -10.666947364807129
    7. ' print' → logprob: -11.791947364807129
    8. 'return' → logprob: -12.041947364807129
    9. ' result' → logprob: -12.916947364807129
    10. 'output' → logprob: -13.541947364807129

Token 886: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003233070601709187
    2. 'score' → logprob: -8.750323295593262
    3. 'result' (adapté à ' result') → logprob: -8.750323295593262
    4. '       ' → logprob: -12.000323295593262
    5. ' print' → logprob: -15.250323295593262
    6. '```' → logprob: -19.125324249267578
    7. 'res' → logprob: -19.250324249267578
    8. 'max' → logprob: -19.750324249267578
    9. '
' → logprob: -21.375324249267578
    10. '        
' → logprob: -21.625324249267578

Token 887: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931529641151428
    2. ' =' → logprob: -0.6931529641151428
    3. '=self' → logprob: -13.568153381347656
    4. '   ' → logprob: -13.693153381347656
    5. ':' → logprob: -14.443153381347656
    6. '.' → logprob: -14.568153381347656
    7. '()' → logprob: -14.568153381347656
    8. ')' → logprob: -15.193153381347656
    9. '_' → logprob: -15.318153381347656
    10. '	' → logprob: -15.568153381347656

Token 888: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00861456897109747
    2. ' self' → logprob: -4.758614540100098
    3. '       ' → logprob: -18.508615493774414
    4. '(self' → logprob: -20.133615493774414
    5. '
' → logprob: -21.258615493774414
    6. '	self' → logprob: -21.383615493774414
    7. '        
' → logprob: -21.508615493774414
    8. '[self' → logprob: -22.883615493774414
    9. '=self' → logprob: -23.133615493774414
    10. '   ' → logprob: -23.633615493774414

Token 889: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -1.981667537620524e-06
    2. 'board' → logprob: -13.625001907348633
    3. '.' → logprob: -14.375001907348633
    4. '	board' → logprob: -16.750001907348633
    5. '.
' → logprob: -18.500001907348633
    6. ' .' → logprob: -18.750001907348633
    7. '
' → logprob: -19.000001907348633
    8. ' board' → logprob: -19.500001907348633
    9. '.Board' → logprob: -20.000001907348633
    10. 'Board' → logprob: -20.375001907348633

Token 890: '.calculate' (ID: 67851)
  Prédit: '.calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calculate' → logprob: -1.1160349458805285e-05
    2. '.' → logprob: -11.500011444091797
    3. '.cal' → logprob: -14.625011444091797
    4. ' .' → logprob: -15.000011444091797
    5. '.compute' → logprob: -16.500011444091797
    6. '.evaluate' → logprob: -17.000011444091797
    7. '.Calculate' → logprob: -17.000011444091797
    8. 'calculate' → logprob: -17.625011444091797
    9. '.calc' → logprob: -17.750011444091797
    10. '.
' → logprob: -18.375011444091797

Token 891: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.9361264946837764e-07
    2. 'max' → logprob: -16.25
    3. '_' → logprob: -18.75
    4. '_min' → logprob: -20.625
    5. '__' → logprob: -21.75
    6. '_
' → logprob: -21.875
    7. '_MAX' → logprob: -22.25
    8. 'Max' → logprob: -23.125
    9. '_Max' → logprob: -23.125
    10. ' max' → logprob: -24.0

Token 892: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -5.512236498361744e-07
    2. 'score' → logprob: -15.125000953674316
    3. '_scores' → logprob: -15.500000953674316
    4. '_' → logprob: -17.25
    5. '_SCORE' → logprob: -18.25
    6. '_s' → logprob: -19.125
    7. '_code' → logprob: -19.25
    8. ' _' → logprob: -20.625
    9. '_value' → logprob: -20.75
    10. '_status' → logprob: -21.25

Token 893: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023681918159127235
    2. 'print' → logprob: -3.773681879043579
    3. '
' → logprob: -8.023681640625
    4. ' print' → logprob: -9.648681640625
    5. '```' → logprob: -11.273681640625
    6. '<|end|>' → logprob: -11.273681640625
    7. '	' → logprob: -12.023681640625
    8. '        
' → logprob: -12.523681640625
    9. '	print' → logprob: -12.773681640625
    10. '   ' → logprob: -13.523681640625

Token 894: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04895045608282089
    2. 'print' → logprob: -3.048950433731079
    3. '```' → logprob: -8.6739501953125
    4. '
' → logprob: -9.4239501953125
    5. '	' → logprob: -9.9239501953125
    6. 'return' → logprob: -10.5489501953125
    7. ' print' → logprob: -11.2989501953125
    8. '   ' → logprob: -11.6739501953125
    9. '        
' → logprob: -12.1739501953125
    10. '	print' → logprob: -12.5489501953125

Token 895: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.8351892473874614e-05
    2. '       ' → logprob: -10.000048637390137
    3. ' print' → logprob: -12.750048637390137
    4. '```' → logprob: -18.75004768371582
    5. '	print' → logprob: -19.00004768371582
    6. 'return' → logprob: -20.37504768371582
    7. '
' → logprob: -20.50004768371582
    8. '#print' → logprob: -21.37504768371582
    9. '.print' → logprob: -22.00004768371582
    10. '_print' → logprob: -22.50004768371582

Token 896: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.0325924449716695e-05
    2. 'result' → logprob: -11.50001049041748
    3. '(' → logprob: -16.125009536743164
    4. '(f' → logprob: -19.750009536743164
    5. ' result' → logprob: -20.375009536743164
    6. '=result' → logprob: -20.750009536743164
    7. ',result' → logprob: -22.250009536743164
    8. '(res' → logprob: -22.375009536743164
    9. '[result' → logprob: -22.375009536743164
    10. '(results' → logprob: -23.250009536743164

Token 897: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014489953173324466
    2. '()' → logprob: -9.000144958496094
    3. '())' → logprob: -10.875144958496094
    4. ' )' → logprob: -13.500144958496094
    5. ')
' → logprob: -14.000144958496094
    6. '(' → logprob: -15.750144958496094
    7. '   ' → logprob: -16.750144958496094
    8. '))' → logprob: -17.250144958496094
    9. ')`' → logprob: -17.875144958496094
    10. '()
' → logprob: -18.250144958496094

Token 898: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004318433813750744
    2. 'Solution' → logprob: -5.5043182373046875
    3. 'solution' → logprob: -9.254318237304688
    4. ' if' → logprob: -9.629318237304688
    5. '```' → logprob: -10.254318237304688
    6. '#' → logprob: -10.879318237304688
    7. 'runner' → logprob: -12.004318237304688
    8. 'Runner' → logprob: -12.379318237304688
    9. 'If' → logprob: -12.379318237304688
    10. 'Solver' → logprob: -13.254318237304688

Token 899: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.25207334756851196
    2. '__' → logprob: -1.5020732879638672
    3. 'name' → logprob: -9.252073287963867
    4. '_name' → logprob: -10.252073287963867
    5. ' ' → logprob: -12.627073287963867
    6. 'Name' → logprob: -12.752073287963867
    7. '_' → logprob: -13.252073287963867
    8. '___' → logprob: -13.252073287963867
    9. ' ' → logprob: -13.627073287963867
    10. '```' → logprob: -14.752073287963867

Token 900: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02652030996978283
    2. ' ==' → logprob: -4.401520252227783
    3. ' __' → logprob: -4.401520252227783
    4. '==' → logprob: -7.026520252227783
    5. '_' → logprob: -7.651520252227783
    6. '<|end|>' → logprob: -9.901520729064941
    7. 'main' → logprob: -10.651520729064941
    8. 'name' → logprob: -10.651520729064941
    9. '.__' → logprob: -11.026520729064941
    10. '_main' → logprob: -11.151520729064941

Token 901: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.253090865968261e-06
    2. '__.__' → logprob: -12.125009536743164
    3. '==' → logprob: -12.750009536743164
    4. '=="' → logprob: -15.250009536743164
    5. '____' → logprob: -15.625009536743164
    6. '__
' → logprob: -16.000009536743164
    7. '__.' → logprob: -16.125009536743164
    8. '___' → logprob: -16.500009536743164
    9. 'name' → logprob: -16.750009536743164
    10. '"' → logprob: -18.125009536743164

Token 902: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002475539455190301
    2. '==' → logprob: -6.127475738525391
    3. '=="' → logprob: -8.37747573852539
    4. ' ==' → logprob: -9.87747573852539
    5. '__.__' → logprob: -12.62747573852539
    6. '=='' → logprob: -12.87747573852539
    7. '_' → logprob: -13.87747573852539
    8. '____' → logprob: -15.12747573852539
    9. '___' → logprob: -15.12747573852539
    10. '__
' → logprob: -15.25247573852539

Token 903: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001930420519784093
    2. ''' → logprob: -6.251930236816406
    3. ' "__' → logprob: -13.876930236816406
    4. '__' → logprob: -14.626930236816406
    5. '"name' → logprob: -16.126930236816406
    6. ''"' → logprob: -16.501930236816406
    7. '"class' → logprob: -17.126930236816406
    8. '"user' → logprob: -17.126930236816406
    9. '"'' → logprob: -17.626930236816406
    10. '"value' → logprob: -18.001930236816406

Token 904: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00011009939044015482
    2. '__' → logprob: -9.125109672546387
    3. 'name' → logprob: -14.125109672546387
    4. '"' → logprob: -15.750109672546387
    5. '_main' → logprob: -16.750110626220703
    6. ' main' → logprob: -17.250110626220703
    7. 'm' → logprob: -17.875110626220703
    8. 'ma' → logprob: -18.375110626220703
    9. 'built' → logprob: -18.375110626220703
    10. '__":
' → logprob: -18.625110626220703

Token 905: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16399362683296204
    2. '__' → logprob: -1.9139935970306396
    3. '__':
' → logprob: -6.163993835449219
    4. '__:' → logprob: -6.413993835449219
    5. ':' → logprob: -11.413993835449219
    6. '__
' → logprob: -12.788993835449219
    7. '__.' → logprob: -13.163993835449219
    8. '__
' → logprob: -13.663993835449219
    9. '__.__' → logprob: -13.788993835449219
    10. '__["' → logprob: -13.913993835449219

Token 906: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45646101236343384
    2. 'Solution' → logprob: -1.206460952758789
    3. ' Solution' → logprob: -2.706460952758789
    4. ' solution' → logprob: -8.706460952758789
    5. '_solution' → logprob: -9.331460952758789
    6. '	S' → logprob: -9.581460952758789
    7. '   ' → logprob: -10.456460952758789
    8. 'Solver' → logprob: -10.456460952758789
    9. 'SR' → logprob: -11.081460952758789
    10. 'Sol' → logprob: -11.581460952758789

Token 907: ' runner' (ID: 39201)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.06309343874454498
    2. 'runner' (adapté à ' runner') → logprob: -2.813093423843384
    3. 'solution' → logprob: -7.313093662261963
    4. 'sr' → logprob: -8.438093185424805
    5. 'solver' → logprob: -8.688093185424805
    6. 'sol' → logprob: -10.188093185424805
    7. ' runner' → logprob: -11.438093185424805
    8. ' Solution' → logprob: -11.563093185424805
    9. 'import' → logprob: -12.438093185424805
    10. '_solution' → logprob: -12.813093185424805

Token 908: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01440794114023447
    2. '.run' → logprob: -4.264408111572266
    3. ' =' → logprob: -9.389408111572266
    4. '().' → logprob: -9.389408111572266
    5. '.runner' → logprob: -10.389408111572266
    6. '=' → logprob: -11.264408111572266
    7. ' .' → logprob: -12.014408111572266
    8. '   ' → logprob: -12.264408111572266
    9. '()' → logprob: -12.389408111572266
    10. ').' → logprob: -12.639408111572266

Token 909: ' Solution' (ID: 20858)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.0019286326132714748
    2. ' Solution' → logprob: -6.251928806304932
    3. 'Solver' → logprob: -22.376928329467773
    4. 'Sol' → logprob: -22.376928329467773
    5. ' solution' → logprob: -22.876928329467773
    6. '_solution' → logprob: -23.501928329467773
    7. 'Sample' → logprob: -23.751928329467773
    8. 'S' → logprob: -24.126928329467773
    9. 'Solutions' → logprob: -24.376928329467773
    10. 'Source' → logprob: -24.376928329467773

Token 910: 'Runner' (ID: 26032)
  Prédit: 'Runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Runner' → logprob: -2.339278580620885e-06
    2. 'runner' → logprob: -13.125001907348633
    3. '_runner' → logprob: -15.875001907348633
    4. 'Run' → logprob: -16.125001907348633
    5. 'Runnable' → logprob: -18.500001907348633
    6. '.run' → logprob: -19.250001907348633
    7. ' runner' → logprob: -19.250001907348633
    8. ' Runner' → logprob: -19.375001907348633
    9. 'R' → logprob: -19.500001907348633
    10. '.runner' → logprob: -19.750001907348633

Token 911: '()
' (ID: 1234)
  Prédit: '.run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.2888438403606415
    2. '.runner' → logprob: -1.7888438701629639
    3. '
' → logprob: -3.038843870162964
    4. '.' → logprob: -3.413843870162964
    5. '   ' → logprob: -6.663843631744385
    6. 'runner' → logprob: -7.788843631744385
    7. '.
' → logprob: -7.788843631744385
    8. '.r' → logprob: -8.288844108581543
    9. '    
' → logprob: -8.413844108581543
    10. '  
' → logprob: -9.663844108581543

Token 912: '   ' (ID: 271)
  Prédit: '.runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.runner' → logprob: -0.21063590049743652
    2. 'runner' → logprob: -2.2106359004974365
    3. '.run' → logprob: -2.7106359004974365
    4. '   ' → logprob: -4.710636138916016
    5. '.' → logprob: -5.835636138916016
    6. '
' → logprob: -6.585636138916016
    7. '.r' → logprob: -8.835636138916016
    8. ' runner' → logprob: -8.960636138916016
    9. '    
' → logprob: -9.335636138916016
    10. 'run' → logprob: -10.085636138916016

Token 913: ' runner' (ID: 39201)
  Prédit: 'runner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runner' (adapté à ' runner') → logprob: -1.9361264946837764e-07
    2. ' runner' → logprob: -16.25
    3. 'run' → logprob: -20.25
    4. '.runner' → logprob: -21.25
    5. 'renderer' → logprob: -23.5
    6. '   ' → logprob: -24.375
    7. '_runner' → logprob: -24.5
    8. 'r' → logprob: -25.125
    9. 'running' → logprob: -26.125
    10. 'Runner' → logprob: -27.25

Token 914: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.01816176250576973
    2. '.' → logprob: -4.018161773681641
    3. '.
' → logprob: -11.39316177368164
    4. ' .' → logprob: -14.51816177368164
    5. '.Run' → logprob: -16.76816177368164
    6. '.execute' → logprob: -18.26816177368164
    7. '.

' → logprob: -18.51816177368164
    8. '.runner' → logprob: -18.89316177368164
    9. '.<' → logprob: -19.26816177368164
    10. '._' → logprob: -19.39316177368164

Token 915: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 913
Tokens correctement prédits (1ère position, stricte): 301
Tokens correctement prédits (1ère position, avec adaptation): 319
Tokens correctement prédits (top 10): 623
Précision stricte (1ère position): 32.97%
Précision adaptée (1ère position): 34.94%
Précision (top 10): 68.24%
================================================================================
