================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    sys.setrecursionlimit(10**7)
    input_lines = sys.stdin.read().splitlines()
    pos = 0
    while True:
        if pos >= len(input_lines):
            break
        line = input_lines[pos].strip()
        pos += 1
        if line == '':
            continue
        C,D,W,X = map(int,line.split())
        if C==0 and D==0 and W==0 and X==0:
            break
        E = []
        for i in range(C):
            row = list(map(int,input_lines[pos].split()))
            pos += 1
            E.append(row)
        F = []
        for i in range(C):
            row = list(map(int,input_lines[pos].split()))
            pos += 1
            F.append(row)

        # For each day j from 0 to D-1, we precompute all subsets of regions with E[i][j]>0 (regions where live can be held)
        # The conditions:
        # - On day j, can perform one or more lives following adjacency rule and no repeating same region same day
        # - adjacency is linear: region i connected to i-1 and i+1 only (except edges)
        # - For subset of regions selected in day j performance, the regions must be connected intervals in i (since adjacency is linear)
        #   or can moves start in one region and move to neighbors, but multiple intervals are not connected
        # But statement says "ある地域でライブを行った後、隣接する地域でライブを行える場合はその地域で同じ日に再びライブを行うことができる。"
        # That means that multiple live performances in same day can be done if they form connected sequence (linear chain)
        # So the set of regions selected on a day must be a connected chain of regions with E[i][j]>0 and no region repeated.
        # So for day j, possible performances are intervals of regions i1 to i2 with E[i][j]>0, and the chain goes from i1 to i2 or reverse, but since the chain is linear adjacency, the set must be continuous in index.
        # So possible multi-live sets on a day are contiguous intervals of regions where all E[i][j]>0.
        # Single region is also allowed.

        # So for each day j, find all intervals i1<=i<=i2 with i from 0 to C-1, where all E[i][j]>0.
        # For each such interval, compute sum of E and sum of F for that day.
        # Since same day multi-live day count (count of days with multiple lives) <= X.
        # Total burden sum <= W.

        # We'll do DP on days:
        # State: day, burden_used, multi_live_day_count
        # For burden_used from 0 to W
        # For multi_live_day_count from 0 to X
        # DP stores max profit

        # Since W=50 max, X=5 max, D=30, C=15, we can do it.

        # For each day, prepare all possible performances:
        # For one live in region i (if E[i][j]>0)
        # For intervals i1<=i2 of length >=1 where all E[i][j]>0

        # To simplify:
        # For day j:
        # for i1 in 0..C-1:
        #   for i2 in i1..C-1:
        #     if all E[k][j]>0 for k in i1..i2:
        #       sumE, sumF for those regions and day j
        #     else: skip

        max_profit = [[[-1]*(X+1) for _ in range(W+1)] for _ in range(D+1)]
        max_profit[0][0][0] = 0

        for day in range(D):
            # build performances
            performances = []
            for start in range(C):
                # stop if E[start][day]==0 continue to next start
                if E[start][day]==0:
                    continue
                sumE_perf = 0
                sumF_perf = 0
                for end in range(start,C):
                    if E[end][day] == 0:
                        break
                    sumE_perf += E[end][day]
                    sumF_perf += F[end][day]
                    length = end - start + 1
                    # if length ==1 => single live day
                    # if length >1 => multi live day
                    multi = 1 if length>1 else 0
                    performances.append((sumF_perf,speed:=sumE_perf,multi))
            # Also consider no live on this day
            performances.append((0,0,0))

            for w_used in range(W+1):
                for x_used in range(X+1):
                    if max_profit[day][w_used][x_used] == -1:
                        continue
                    current_profit = max_profit[day][w_used][x_used]
                    for burden,profit,multi in performances:
                        nw = w_used + burden
                        nx = x_used + multi
                        if nw <= W and nx <= X:
                            if max_profit[day+1][nw][nx] < current_profit + profit:
                                max_profit[day+1][nw][nx] = current_profit + profit

        ans = 0
        for w_used in range(W+1):
            for x_used in range(X+1):
                if max_profit[D][w_used][x_used] > ans:
                    ans = max_profit[D][w_used][x_used]
        print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.27129265666007996
    2. '\n' → logprob: -1.6462926864624023
    3. '   ' → logprob: -3.8962926864624023
    4. '    
' → logprob: -5.021292686462402
    5. '    ' → logprob: -5.646292686462402
    6. ''' → logprob: -5.896292686462402
    7. '```' → logprob: -6.146292686462402
    8. '(' → logprob: -6.396292686462402
    9. ' 
' → logprob: -6.521292686462402
    10. '\r' → logprob: -6.896292686462402

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4218076467514038
    2. '   ' → logprob: -1.6718076467514038
    3. 'pass' → logprob: -2.4218077659606934
    4. 'p' → logprob: -3.6718077659606934
    5. 'return' → logprob: -4.171807765960693
    6. 'r' → logprob: -4.421807765960693
    7. '#' → logprob: -5.171807765960693
    8. '    ' → logprob: -6.171807765960693
    9. 'a' → logprob: -6.296807765960693
    10. 'n' → logprob: -6.796807765960693

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.031138697639107704
    2. ' sys' → logprob: -3.6561386585235596
    3. ' math' → logprob: -5.781138896942139
    4. ' ' → logprob: -6.656138896942139
    5. ' numpy' → logprob: -8.65613842010498
    6. ' json' → logprob: -9.15613842010498
    7. ' random' → logprob: -10.15613842010498
    8. ' tensorflow' → logprob: -10.28113842010498
    9. ' space' → logprob: -11.15613842010498
    10. 'os' → logprob: -11.28113842010498

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16592592000961304
    2. 'newline' → logprob: -3.790925979614258
    3. '.readline' → logprob: -3.790925979614258
    4. '   ' → logprob: -4.040925979614258
    5. '.stdout' → logprob: -4.290925979614258
    6. '\n' → logprob: -4.665925979614258
    7. 'import' → logprob: -4.665925979614258
    8. '.print' → logprob: -4.790925979614258
    9. '```' → logprob: -4.790925979614258
    10. '[' → logprob: -5.290925979614258

Token 7: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6865933537483215
    2. '   ' → logprob: -2.3115932941436768
    3. 'newline' → logprob: -2.3115932941436768
    4. '\n' → logprob: -2.6865932941436768
    5. '.readline' → logprob: -3.1865932941436768
    6. 'import' → logprob: -3.9365932941436768
    7. '    
' → logprob: -4.061593532562256
    8. '[' → logprob: -4.186593532562256
    9. '
' → logprob: -4.311593532562256
    10. '<|end|>' → logprob: -4.311593532562256

Token 8: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34991130232810974
    2. ' ' → logprob: -2.3499112129211426
    3. '    ' → logprob: -2.3499112129211426
    4. '\n' → logprob: -3.7249112129211426
    5. '\' → logprob: -4.099911212921143
    6. '.' → logprob: -4.724911212921143
    7. '[' → logprob: -4.724911212921143
    8. 'import' → logprob: -4.849911212921143
    9. '  ' → logprob: -5.224911212921143
    10. 'newline' → logprob: -5.224911212921143

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.8087270038668066e-05
    2. ' .' → logprob: -11.125027656555176
    3. '.exit' → logprob: -12.625027656555176
    4. '.readline' → logprob: -13.375027656555176
    5. '.argv' → logprob: -13.500027656555176
    6. '.stdout' → logprob: -13.625027656555176
    7. '.import' → logprob: -14.125027656555176
    8. '.stdin' → logprob: -14.250027656555176
    9. '.`' → logprob: -14.875027656555176
    10. '.user' → logprob: -14.875027656555176

Token 10: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9795921444892883
    2. '_trace' → logprob: -1.1045920848846436
    3. '_version' → logprob: -2.6045920848846436
    4. 'trace' → logprob: -2.7295920848846436
    5. '_encoding' → logprob: -3.6045920848846436
    6. '_limit' → logprob: -3.8545920848846436
    7. '_ex' → logprob: -4.104592323303223
    8. '_execution' → logprob: -4.354592323303223
    9. 'rec' → logprob: -4.479592323303223
    10. '_exc' → logprob: -4.479592323303223

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.004407920874655247
    2. 'urs' → logprob: -6.25440788269043
    3. '_limit' → logprob: -7.00440788269043
    4. 'limit' → logprob: -7.62940788269043
    5. '_' → logprob: -8.25440788269043
    6. 'ursive' → logprob: -8.50440788269043
    7. 'ut' → logprob: -8.50440788269043
    8. 'urse' → logprob: -9.00440788269043
    9. 'ur' → logprob: -9.12940788269043
    10. 'urf' → logprob: -10.37940788269043

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5781434774398804
    2. '_limit' → logprob: -0.8281434774398804
    3. '_depth' → logprob: -6.32814359664917
    4. ' limit' → logprob: -9.078143119812012
    5. 'depth' → logprob: -9.328143119812012
    6. 'lim' → logprob: -9.828143119812012
    7. 'Limit' → logprob: -9.828143119812012
    8. '_lim' → logprob: -9.953143119812012
    9. '(limit' → logprob: -11.828143119812012
    10. 'error' → logprob: -11.828143119812012

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.36574100604048e-06
    2. '(

' → logprob: -13.500004768371582
    3. ' (' → logprob: -13.750004768371582
    4. '("("' → logprob: -14.125004768371582
    5. '(
' → logprob: -14.250004768371582
    6. '((' → logprob: -15.500004768371582
    7. '('' → logprob: -16.000003814697266
    8. '()' → logprob: -16.625003814697266
    9. '(
' → logprob: -18.250003814697266
    10. ')' → logprob: -18.375003814697266

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029773982241749763
    2. '100' → logprob: -3.5297739505767822
    3. ' ' → logprob: -11.029773712158203
    4. '1' → logprob: -12.154773712158203
    5. '   ' → logprob: -14.279773712158203
    6. '500' → logprob: -14.529773712158203
    7. '300' → logprob: -15.154773712158203
    8. '200' → logprob: -15.654773712158203
    9. '  ' → logprob: -15.904773712158203
    10. '999' → logprob: -16.154773712158203

Token 15: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1475098729133606
    2. '00' → logprob: -2.147509813308716
    3. '000' → logprob: -3.897509813308716
    4. '**' → logprob: -10.397509574890137
    5. '4' → logprob: -10.522509574890137
    6. '2' → logprob: -11.022509574890137
    7. '3' → logprob: -13.522509574890137
    8. '6' → logprob: -13.647509574890137
    9. '5' → logprob: -13.772509574890137
    10. ''' → logprob: -14.647509574890137

Token 16: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.003123883157968521
    2. '6' → logprob: -6.253123760223389
    3. '8' → logprob: -7.253123760223389
    4. '9' → logprob: -7.628123760223389
    5. '5' → logprob: -16.503124237060547
    6. '```' → logprob: -18.003124237060547
    7. ' ' → logprob: -18.253124237060547
    8. ')' → logprob: -19.128124237060547
    9. '}' → logprob: -19.253124237060547
    10. '4' → logprob: -19.503124237060547

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.875003814697266
    3. ')
' → logprob: -14.625003814697266
    4. '))' → logprob: -14.875003814697266
    5. ' ' → logprob: -17.500003814697266
    6. '),' → logprob: -18.125003814697266
    7. ')))' → logprob: -18.375003814697266
    8. '）' → logprob: -18.500003814697266
    9. '')' → logprob: -18.625003814697266
    10. ')`' → logprob: -18.875003814697266

Token 18: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5091768503189087
    2. '    
' → logprob: -1.8841768503189087
    3. '\n' → logprob: -2.509176731109619
    4. '   ' → logprob: -2.759176731109619
    5. '' → logprob: -3.009176731109619
    6. '\' → logprob: -3.384176731109619
    7. '```' → logprob: -5.134176731109619
    8. '  
' → logprob: -6.259176731109619
    9. ' 
' → logprob: -6.509176731109619
    10. '
' → logprob: -6.509176731109619

Token 19: ' input' (ID: 3422)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8334385752677917
    2. '    
' → logprob: -1.5834386348724365
    3. '   ' → logprob: -1.5834386348724365
    4. '\n' → logprob: -2.3334386348724365
    5. '
' → logprob: -3.9584386348724365
    6. ' 
' → logprob: -4.958438396453857
    7. '' → logprob: -4.958438396453857
    8. ' ' → logprob: -5.333438396453857
    9. '  
' → logprob: -5.333438396453857
    10. '```' → logprob: -5.458438396453857

Token 20: '_lines' (ID: 42980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002710722852498293
    2. '()' → logprob: -6.627710819244385
    3. '40' → logprob: -8.377710342407227
    4. ')' → logprob: -8.627710342407227
    5. '```' → logprob: -8.877710342407227
    6. '('' → logprob: -9.002710342407227
    7. '("("' → logprob: -9.127710342407227
    8. ''' → logprob: -9.377710342407227
    9. 's' → logprob: -9.752710342407227
    10. 'data' → logprob: -9.877710342407227

Token 21: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.562768816947937
    2. '[' → logprob: -1.312768816947937
    3. '=' → logprob: -2.1877689361572266
    4. '.' → logprob: -3.5627689361572266
    5. ' =' → logprob: -4.437768936157227
    6. '()' → logprob: -5.437768936157227
    7. ')' → logprob: -6.312768936157227
    8. '[:]' → logprob: -7.187768936157227
    9. ''' → logprob: -7.937768936157227
    10. '```' → logprob: -8.062768936157227

Token 22: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2734030783176422
    2. ' input' → logprob: -1.6484030485153198
    3. 'input' → logprob: -3.6484031677246094
    4. 'sys' → logprob: -4.273403167724609
    5. ' []' → logprob: -5.648403167724609
    6. ' ' → logprob: -6.398403167724609
    7. ' iter' → logprob: -7.523403167724609
    8. '[]' → logprob: -7.898403167724609
    9. ' [' → logprob: -8.39840316772461
    10. '   ' → logprob: -9.02340316772461

Token 23: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006625370588153601
    2. '.stdin' → logprob: -5.131625175476074
    3. '.readline' → logprob: -7.381625175476074
    4. ' .' → logprob: -10.006625175476074
    5. '.read' → logprob: -12.006625175476074
    6. '.stdout' → logprob: -12.256625175476074
    7. '.<' → logprob: -12.631625175476074
    8. '.​' → logprob: -12.881625175476074
    9. '.input' → logprob: -13.256625175476074
    10. '.argv' → logprob: -13.381625175476074

Token 24: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.08724464476108551
    2. '.' → logprob: -2.587244749069214
    3. '.readlines' → logprob: -5.087244510650635
    4. '.read' → logprob: -6.337244510650635
    5. 'read' → logprob: -7.962244510650635
    6. ' readline' → logprob: -11.337244987487793
    7. '```' → logprob: -12.337244987487793
    8. '<|end|>' → logprob: -13.087244987487793
    9. '.write' → logprob: -13.212244987487793
    10. '.Read' → logprob: -13.337244987487793

Token 25: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07305028289556503
    2. '()' → logprob: -2.6980502605438232
    3. '('' → logprob: -7.323050498962402
    4. '(

' → logprob: -7.573050498962402
    5. '40' → logprob: -7.698050498962402
    6. '().' → logprob: -7.823050498962402
    7. '("("' → logprob: -8.198050498962402
    8. '(
' → logprob: -8.323050498962402
    9. ''' → logprob: -9.448050498962402
    10. '"' → logprob: -9.448050498962402

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12711939215660095
    2. 'strip' → logprob: -2.127119302749634
    3. 'rstrip' → logprob: -8.627119064331055
    4. 'decode' → logprob: -11.377119064331055
    5. 'read' → logprob: -15.127119064331055
    6. 'replace' → logprob: -15.377119064331055
    7. ' split' → logprob: -16.252119064331055
    8. 's' → logprob: -18.127119064331055
    9. 'str' → logprob: -18.877119064331055
    10. '(split' → logprob: -19.627119064331055

Token 27: 'lines' (ID: 10105)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.769254744052887
    2. '('' → logprob: -1.0192546844482422
    3. 'lines' → logprob: -2.144254684448242
    4. '('\' → logprob: -3.394254684448242
    5. '()' → logprob: -4.144254684448242
    6. '("("' → logprob: -4.769254684448242
    7. '("\' → logprob: -8.394254684448242
    8. 'left' → logprob: -9.519254684448242
    9. '("' → logprob: -9.519254684448242
    10. '(\' → logprob: -9.644254684448242

Token 28: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004638980142772198
    2. '(' → logprob: -5.379639148712158
    3. ' ()' → logprob: -12.754638671875
    4. '()
' → logprob: -13.004638671875
    5. ')' → logprob: -13.254638671875
    6. '()`' → logprob: -13.254638671875
    7. '`()' → logprob: -13.629638671875
    8. '()[' → logprob: -13.754638671875
    9. '())' → logprob: -13.879638671875
    10. '(
' → logprob: -13.879638671875

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01714843139052391
    2. '    
' → logprob: -5.142148494720459
    3. ' ' → logprob: -5.767148494720459
    4. '<|end|>' → logprob: -6.142148494720459
    5. '[' → logprob: -6.767148494720459
    6. '    ' → logprob: -7.017148494720459
    7. ')' → logprob: -7.142148494720459
    8. '  ' → logprob: -7.267148494720459
    9. '
' → logprob: -7.642148494720459
    10. 'n' → logprob: -8.0171480178833

Token 30: ' pos' (ID: 1253)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1393628865480423
    2. 'n' → logprob: -2.6393628120422363
    3. ' ' → logprob: -4.014362812042236
    4. '    ' → logprob: -4.514362812042236
    5. '    
' → logprob: -4.889362812042236
    6. 'i' → logprob: -5.139362812042236
    7. 'd' → logprob: -5.639362812042236
    8. 'a' → logprob: -6.389362812042236
    9. 'for' → logprob: -6.389362812042236
    10. '```' → logprob: -6.639362812042236

Token 31: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.525741696357727
    2. ' =' → logprob: -1.400741696357727
    3. '=' → logprob: -2.0257415771484375
    4. 'ition' → logprob: -4.4007415771484375
    5. 'sible' → logprob: -5.5257415771484375
    6. 'itions' → logprob: -5.6507415771484375
    7. 'itional' → logprob: -6.0257415771484375
    8. 'i' → logprob: -6.5257415771484375
    9. ']' → logprob: -6.9007415771484375
    10. ')' → logprob: -7.1507415771484375

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009759863838553429
    2. ' ' → logprob: -4.634759902954102
    3. '[' → logprob: -13.259759902954102
    4. '1' → logprob: -14.134759902954102
    5. ' [' → logprob: -14.509759902954102
    6. '(' → logprob: -15.009759902954102
    7. 'len' → logprob: -16.5097599029541
    8. '   ' → logprob: -16.5722599029541
    9. '[]' → logprob: -16.8847599029541
    10. '  ' → logprob: -16.9472599029541

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.106736039626412e-05
    2. ' ' → logprob: -11.000031471252441
    3. '1' → logprob: -11.250031471252441
    4. '[' → logprob: -14.250031471252441
    5. '2' → logprob: -15.125031471252441
    6. '3' → logprob: -16.375030517578125
    7. '-' → logprob: -16.500030517578125
    8. 'len' → logprob: -16.625030517578125
    9. 'int' → logprob: -17.500030517578125
    10. '(' → logprob: -17.500030517578125

Token 34: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08936186879873276
    2. '    
' → logprob: -3.9643619060516357
    3. ' ' → logprob: -4.089361667633057
    4. '
' → logprob: -4.214361667633057
    5. '```' → logprob: -4.714361667633057
    6. '\n' → logprob: -4.964361667633057
    7. 'n' → logprob: -5.839361667633057
    8. '  ' → logprob: -5.964361667633057
    9. '' → logprob: -6.089361667633057
    10. '  
' → logprob: -6.214361667633057

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022066084668040276
    2. '```' → logprob: -5.147066116333008
    3. ' ' → logprob: -5.272066116333008
    4. 'n' → logprob: -5.397066116333008
    5. '    
' → logprob: -6.022066116333008
    6. '\n' → logprob: -7.522066116333008
    7. '  ' → logprob: -7.522066116333008
    8. '
' → logprob: -7.647066116333008
    9. 'pos' → logprob: -8.147066116333008
    10. '' → logprob: -8.147066116333008

Token 36: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2778835892677307
    2. 'n' → logprob: -1.902883529663086
    3. 'd' → logprob: -3.152883529663086
    4. 'p' → logprob: -4.277883529663086
    5. 'c' → logprob: -5.152883529663086
    6. '```' → logprob: -5.152883529663086
    7. 'i' → logprob: -5.527883529663086
    8. 'w' → logprob: -5.652883529663086
    9. ' ' → logprob: -5.777883529663086
    10. 'while' (adapté à ' while') → logprob: -6.027883529663086

Token 37: ' True' (ID: 6432)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.00895147118717432
    2. ' ' → logprob: -5.008951663970947
    3. 'pos' → logprob: -6.383951663970947
    4. '  ' → logprob: -8.758951187133789
    5. ' len' → logprob: -8.758951187133789
    6. ' not' → logprob: -9.383951187133789
    7. ' ' → logprob: -10.008951187133789
    8. ' True' → logprob: -10.008951187133789
    9. ' input' → logprob: -10.508951187133789
    10. ' (' → logprob: -11.258951187133789

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021736434428021312
    2. ' :' → logprob: -9.25021743774414
    3. ':**' → logprob: -9.87521743774414
    4. '   ' → logprob: -10.62521743774414
    5. '):' → logprob: -11.37521743774414
    6. ':
' → logprob: -11.37521743774414
    7. '():' → logprob: -11.62521743774414
    8. '       ' → logprob: -12.87521743774414
    9. '    ' → logprob: -12.87521743774414
    10. '[:]' → logprob: -13.50021743774414

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37091535329818726
    2. '    ' → logprob: -1.620915412902832
    3. ' ' → logprob: -2.745915412902832
    4. '   ' → logprob: -3.120915412902832
    5. '  ' → logprob: -7.120915412902832
    6. '     ' → logprob: -7.370915412902832
    7. '        
' → logprob: -7.495915412902832
    8. '        ' → logprob: -8.120915412902832
    9. '      ' → logprob: -8.120915412902832
    10. '    
' → logprob: -8.245915412902832

Token 40: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3945810794830322
    2. '   ' → logprob: -1.5195810794830322
    3. '    ' → logprob: -2.6445810794830322
    4. '       ' → logprob: -4.519580841064453
    5. 'i' → logprob: -4.644580841064453
    6. '  ' → logprob: -5.644580841064453
    7. ' if' → logprob: -5.769580841064453
    8. 'if' (adapté à ' if') → logprob: -6.269580841064453
    9. 'n' → logprob: -6.394580841064453
    10. ' try' → logprob: -6.394580841064453

Token 41: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.004116511438041925
    2. 'pos' → logprob: -5.504116535186768
    3. ' ' → logprob: -11.37911605834961
    4. ' not' → logprob: -11.50411605834961
    5. ' input' → logprob: -11.62911605834961
    6. '	pos' → logprob: -13.00411605834961
    7. ' ' → logprob: -13.25411605834961
    8. '_pos' → logprob: -14.12911605834961
    9. '(pos' → logprob: -14.12911605834961
    10. ' len' → logprob: -14.62911605834961

Token 42: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.03520943224430084
    2. ' <' → logprob: -3.5352094173431396
    3. ' ' → logprob: -5.410209655761719
    4. '>=' → logprob: -7.535209655761719
    5. ' ==' → logprob: -8.285209655761719
    6. '<' → logprob: -9.910209655761719
    7. '+' → logprob: -10.035209655761719
    8. '   ' → logprob: -10.160209655761719
    9. '  ' → logprob: -11.035209655761719
    10. '[' → logprob: -11.660209655761719

Token 43: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04858771339058876
    2. ' len' → logprob: -3.0485877990722656
    3. '   ' → logprob: -15.923587799072266
    4. '(len' → logprob: -16.173587799072266
    5. '	len' → logprob: -17.298587799072266
    6. '<len' → logprob: -17.673587799072266
    7. '=len' → logprob: -18.423587799072266
    8. '[len' → logprob: -19.423587799072266
    9. ',len' → logprob: -19.923587799072266
    10. 'input' → logprob: -20.173587799072266

Token 44: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5762368440628052
    2. '(' → logprob: -0.8262368440628052
    3. ' (' → logprob: -8.201236724853516
    4. 'input' → logprob: -12.076236724853516
    5. ' input' → logprob: -12.326236724853516
    6. ')' → logprob: -12.826236724853516
    7. '(pos' → logprob: -13.076236724853516
    8. '(
' → logprob: -13.576236724853516
    9. ' )' → logprob: -13.576236724853516
    10. '(

' → logprob: -13.576236724853516

Token 45: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.03521392197581e-05
    2. '_' → logprob: -10.500030517578125
    3. ')_' → logprob: -13.625030517578125
    4. '_line' → logprob: -14.375030517578125
    5. ' _' → logprob: -15.500030517578125
    6. ')' → logprob: -15.625030517578125
    7. '_LINES' → logprob: -15.625030517578125
    8. '_)' → logprob: -16.625030517578125
    9. '```' → logprob: -16.750030517578125
    10. '_s' → logprob: -16.875030517578125

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04213438928127289
    2. ')' → logprob: -3.5421342849731445
    3. ' ):' → logprob: -5.1671342849731445
    4. ' or' → logprob: -5.5421342849731445
    5. ':' → logprob: -6.6671342849731445
    6. '):
' → logprob: -6.9171342849731445
    7. ' )' → logprob: -8.292134284973145
    8. '   ' → logprob: -9.542134284973145
    9. '       ' → logprob: -9.917134284973145
    10. ' and' → logprob: -11.167134284973145

Token 47: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08489083498716354
    2. '       ' → logprob: -2.584890842437744
    3. ':' → logprob: -5.459890842437744
    4. '   ' → logprob: -7.959890842437744
    5. ' break' → logprob: -8.084890365600586
    6. ':
' → logprob: -8.209890365600586
    7. '\n' → logprob: -8.709890365600586
    8. '        ' → logprob: -9.084890365600586
    9. ' :' → logprob: -9.334890365600586
    10. '\' → logprob: -9.709890365600586

Token 48: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016085868701338768
    2. ' break' → logprob: -4.641086101531982
    3. 'break' (adapté à ' break') → logprob: -5.391086101531982
    4. '       ' → logprob: -6.891086101531982
    5. '\n' → logprob: -8.391085624694824
    6. '               ' → logprob: -8.766085624694824
    7. 'return' → logprob: -9.266085624694824
    8. '```' → logprob: -9.391085624694824
    9. ' return' → logprob: -9.766085624694824
    10. '   ' → logprob: -10.391085624694824

Token 49: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4385518729686737
    2. '
' → logprob: -1.688551902770996
    3. '        
' → logprob: -2.688551902770996
    4. '\n' → logprob: -2.938551902770996
    5. '\' → logprob: -4.313551902770996
    6. '    
' → logprob: -4.813551902770996
    7. ':' → logprob: -4.938551902770996
    8. '' → logprob: -5.313551902770996
    9. '```' → logprob: -6.063551902770996
    10. ':
' → logprob: -6.188551902770996

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08273251354694366
    2. '        
' → logprob: -3.5827324390411377
    3. '\n' → logprob: -4.457732677459717
    4. '\' → logprob: -4.582732677459717
    5. '    
' → logprob: -4.707732677459717
    6. ':' → logprob: -5.082732677459717
    7. '   ' → logprob: -5.082732677459717
    8. '```' → logprob: -6.332732677459717
    9. '
' → logprob: -6.832732677459717
    10. '    ' → logprob: -7.082732677459717

Token 51: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07304506748914719
    2. 'n' → logprob: -3.448045015335083
    3. '        
' → logprob: -4.073045253753662
    4. '   ' → logprob: -5.073045253753662
    5. ' ' → logprob: -5.573045253753662
    6. '    ' → logprob: -5.948045253753662
    7. '
' → logprob: -6.573045253753662
    8. '        ' → logprob: -6.698045253753662
    9. '    
' → logprob: -6.698045253753662
    10. ' 
' → logprob: -7.448045253753662

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015897235134616494
    2. '=' → logprob: -6.501589775085449
    3. ' ' → logprob: -9.75158977508545
    4. 's' → logprob: -11.62658977508545
    5. '[' → logprob: -12.25158977508545
    6. ' =
' → logprob: -12.37658977508545
    7. ' ==' → logprob: -13.50158977508545
    8. ' ,' → logprob: -13.50158977508545
    9. '   ' → logprob: -13.62658977508545
    10. ',' → logprob: -13.75158977508545

Token 53: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.00861528143286705
    2. 'input' → logprob: -4.758615493774414
    3. ' ' → logprob: -15.383615493774414
    4. '    ' → logprob: -16.508615493774414
    5. 'Input' → logprob: -16.508615493774414
    6. '	input' → logprob: -16.508615493774414
    7. '_input' → logprob: -16.758615493774414
    8. '=input' → logprob: -17.008615493774414
    9. ' ' → logprob: -17.133615493774414
    10. '(input' → logprob: -17.133615493774414

Token 54: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0002753981971181929
    2. '_line' → logprob: -8.250275611877441
    3. '_' → logprob: -12.250275611877441
    4. '_l' → logprob: -12.250275611877441
    5. '_lin' → logprob: -14.125275611877441
    6. '```' → logprob: -14.625275611877441
    7. '_LINES' → logprob: -14.875275611877441
    8. '_chars' → logprob: -15.125275611877441
    9. 'Lines' → logprob: -15.125275611877441
    10. '_li' → logprob: -15.125275611877441

Token 55: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0009131324477493763
    2. '[' → logprob: -7.000913143157959
    3. '```' → logprob: -14.5009126663208
    4. ' [' → logprob: -14.8759126663208
    5. '   ' → logprob: -14.8759126663208
    6. '[
' → logprob: -16.375913619995117
    7. '\[' → logprob: -16.375913619995117
    8. '[position' → logprob: -17.125913619995117
    9. '[++' → logprob: -17.500913619995117
    10. '[val' → logprob: -17.500913619995117

Token 56: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015793032944202423
    2. ')' → logprob: -4.6407928466796875
    3. '])' → logprob: -5.1407928466796875
    4. ')]' → logprob: -9.640792846679688
    5. '[' → logprob: -10.265792846679688
    6. ']
' → logprob: -10.390792846679688
    7. ' ]' → logprob: -11.140792846679688
    8. '][' → logprob: -12.265792846679688
    9. ')])' → logprob: -12.390792846679688
    10. '].' → logprob: -13.015792846679688

Token 57: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00046606172691099346
    2. 'split' → logprob: -7.7504658699035645
    3. 'rstrip' → logprob: -10.250466346740723
    4. 'startswith' → logprob: -17.875465393066406
    5. 'pos' → logprob: -18.000465393066406
    6. 'replace' → logprob: -18.625465393066406
    7. 'str' → logprob: -19.875465393066406
    8. ' strip' → logprob: -19.875465393066406
    9. '```' → logprob: -20.750465393066406
    10. ' ' → logprob: -21.000465393066406

Token 58: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026519153267145157
    2. '(' → logprob: -3.6515190601348877
    3. '('' → logprob: -8.901518821716309
    4. '()
' → logprob: -11.026518821716309
    5. '("("' → logprob: -11.401518821716309
    6. '()`' → logprob: -11.901518821716309
    7. '())' → logprob: -12.151518821716309
    8. '(
' → logprob: -12.276518821716309
    9. '().' → logprob: -12.401518821716309
    10. '();' → logprob: -12.401518821716309

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07377747446298599
    2. '<|end|>' → logprob: -2.948777437210083
    3. '\' → logprob: -5.448777675628662
    4. ')' → logprob: -5.698777675628662
    5. '   ' → logprob: -5.948777675628662
    6. '\n' → logprob: -5.948777675628662
    7. '        
' → logprob: -6.448777675628662
    8. '<|end|>' → logprob: -6.573777675628662
    9. '    ' → logprob: -7.448777675628662
    10. ':' → logprob: -7.448777675628662

Token 60: ' pos' (ID: 1253)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6212277412414551
    2. '+' → logprob: -0.8712277412414551
    3. ' +=' → logprob: -3.121227741241455
    4. '=' → logprob: -9.496227264404297
    5. '++' → logprob: -9.496227264404297
    6. ')' → logprob: -12.371227264404297
    7. ' +' → logprob: -12.371227264404297
    8. '+++' → logprob: -12.496227264404297
    9. '==' → logprob: -12.996227264404297
    10. '<|end|>' → logprob: -12.996227264404297

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '```' → logprob: -18.750158309936523
    4. '   ' → logprob: -19.250158309936523
    5. '１' → logprob: -20.375158309936523
    6. '0' → logprob: -20.500158309936523
    7. '`' → logprob: -21.687658309936523
    8. '  ' → logprob: -21.750158309936523
    9. ' ' → logprob: -21.875158309936523
    10. '-' → logprob: -22.062658309936523

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -19.75
    4. '１' → logprob: -21.5
    5. '   ' → logprob: -22.0
    6. '-' → logprob: -22.0
    7. '`' → logprob: -22.5
    8. '۱' → logprob: -22.8125
    9. '0' → logprob: -23.0625
    10. '१' → logprob: -23.25

Token 64: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047547840513288975
    2. '   ' → logprob: -6.379755020141602
    3. ' if' → logprob: -6.754755020141602
    4. 'if' → logprob: -7.379755020141602
    5. ' ' → logprob: -8.004755020141602
    6. '```' → logprob: -8.004755020141602
    7. '        
' → logprob: -8.504755020141602
    8. '<|end|>' → logprob: -8.629755020141602
    9. '    ' → logprob: -10.129755020141602
    10. '        ' → logprob: -10.379755020141602

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005914335139095783
    2. ' ' → logprob: -6.380914211273193
    3. '   ' → logprob: -6.630914211273193
    4. '        
' → logprob: -6.880914211273193
    5. ' if' → logprob: -7.380914211273193
    6. '    ' → logprob: -8.005914688110352
    7. '        ' → logprob: -8.380914688110352
    8. ',' → logprob: -8.755914688110352
    9. '<|end|>' → logprob: -8.880914688110352
    10. 'if' → logprob: -9.255914688110352

Token 66: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6424286365509033
    2. 'if' (adapté à ' if') → logprob: -1.5174286365509033
    3. '       ' → logprob: -1.7674286365509033
    4. 'n' → logprob: -2.8924286365509033
    5. ' if' → logprob: -4.267428398132324
    6. '   ' → logprob: -4.767428398132324
    7. ' ' → logprob: -6.642428398132324
    8. 't' → logprob: -7.017428398132324
    9. ' i' → logprob: -7.267428398132324
    10. '```' → logprob: -7.517428398132324

Token 67: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04560009762644768
    2. ' line' → logprob: -3.170600175857544
    3. 'not' → logprob: -6.170599937438965
    4. 'line' → logprob: -7.920599937438965
    5. ' ' → logprob: -8.920599937438965
    6. ' len' → logprob: -11.920599937438965
    7. ' ' → logprob: -13.295599937438965
    8. ' no' → logprob: -14.795599937438965
    9. '   ' → logprob: -15.295599937438965
    10. '  ' → logprob: -15.295599937438965

Token 68: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006736215204000473
    2. '==' → logprob: -5.0067362785339355
    3. ' ' → logprob: -11.256735801696777
    4. '.startswith' → logprob: -13.006735801696777
    5. ' =' → logprob: -13.756735801696777
    6. ' in' → logprob: -14.381735801696777
    7. '.strip' → logprob: -14.381735801696777
    8. ' ===' → logprob: -14.631735801696777
    9. '()==' → logprob: -15.131735801696777
    10. '=' → logprob: -15.256735801696777

Token 69: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6302527189254761
    2. '""' → logprob: -1.505252718925476
    3. ''' → logprob: -1.630252718925476
    4. '"' → logprob: -3.1302528381347656
    5. ' ''' → logprob: -5.755252838134766
    6. ' ""' → logprob: -6.630252838134766
    7. ' '' → logprob: -7.130252838134766
    8. ''"' → logprob: -9.380252838134766
    9. '"":' → logprob: -9.630252838134766
    10. ' "' → logprob: -9.755252838134766

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004339321982115507
    2. '       ' → logprob: -5.504339218139648
    3. ' continue' → logprob: -9.379339218139648
    4. '   ' → logprob: -9.754339218139648
    5. 'continue' → logprob: -9.754339218139648
    6. ' break' → logprob: -10.629339218139648
    7. 'break' → logprob: -10.754339218139648
    8. '<|end|>' → logprob: -12.254339218139648
    9. '               ' → logprob: -12.879339218139648
    10. '          ' → logprob: -13.254339218139648

Token 71: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3419052064418793
    2. '           ' → logprob: -1.8419052362442017
    3. 'break' → logprob: -2.091905117034912
    4. '       ' → logprob: -5.591905117034912
    5. ' continue' → logprob: -5.716905117034912
    6. ' break' → logprob: -7.716905117034912
    7. '   ' → logprob: -9.21690559387207
    8. '```' → logprob: -11.21690559387207
    9. '	continue' → logprob: -11.46690559387207
    10. 'return' → logprob: -11.84190559387207

Token 72: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006253215949982405
    2. 'n' → logprob: -5.381253242492676
    3. '   ' → logprob: -7.131253242492676
    4. '```' → logprob: -8.631253242492676
    5. '#' → logprob: -9.131253242492676
    6. '    ' → logprob: -9.756253242492676
    7. '        ' → logprob: -10.006253242492676
    8. '      ' → logprob: -10.006253242492676
    9. 's' → logprob: -10.256253242492676
    10. 'x' → logprob: -10.381253242492676

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21663518249988556
    2. 'n' → logprob: -1.7166352272033691
    3. 't' → logprob: -6.341635227203369
    4. '   ' → logprob: -6.466635227203369
    5. 'd' → logprob: -6.466635227203369
    6. '#' → logprob: -6.591635227203369
    7. 'x' → logprob: -6.716635227203369
    8. '```' → logprob: -6.966635227203369
    9. 'c' → logprob: -7.341635227203369
    10. 's' → logprob: -7.466635227203369

Token 74: ' C' (ID: 363)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1197996661067009
    2. 'N' → logprob: -2.4947996139526367
    3. 'a' → logprob: -4.244799613952637
    4. '   ' → logprob: -5.244799613952637
    5. '       ' → logprob: -5.869799613952637
    6. 'A' → logprob: -6.119799613952637
    7. 'h' → logprob: -6.494799613952637
    8. 'H' → logprob: -6.869799613952637
    9. 't' → logprob: -7.494799613952637
    10. 'm' → logprob: -7.619799613952637

Token 75: ',D' (ID: 61507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057669904083013535
    2. ' =' → logprob: -3.6826698780059814
    3. ' ,' → logprob: -4.0576701164245605
    4. '=' → logprob: -4.4326701164245605
    5. 'ount' → logprob: -8.057669639587402
    6. '   ' → logprob: -8.182669639587402
    7. '  ' → logprob: -8.182669639587402
    8. ' ' → logprob: -8.682669639587402
    9. 'ase' → logprob: -9.182669639587402
    10. 'ont' → logprob: -9.307669639587402

Token 76: ',W' (ID: 117252)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04325653612613678
    2. ',' → logprob: -3.6682565212249756
    3. '=' → logprob: -4.293256759643555
    4. ' ,' → logprob: -5.793256759643555
    5. ',N' → logprob: -10.168256759643555
    6. '=int' → logprob: -11.293256759643555
    7. ' ' → logprob: -11.418256759643555
    8. '  ' → logprob: -12.168256759643555
    9. ')' → logprob: -12.543256759643555
    10. ' =)' → logprob: -12.543256759643555

Token 77: ',X' (ID: 83943)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.69585120677948
    2. ' =' → logprob: -0.69585120677948
    3. ',' → logprob: -6.0708513259887695
    4. ',N' → logprob: -8.57085132598877
    5. '=input' → logprob: -10.19585132598877
    6. '=int' → logprob: -10.57085132598877
    7. ',n' → logprob: -10.69585132598877
    8. ' ,' → logprob: -10.82085132598877
    9. '=N' → logprob: -11.07085132598877
    10. ' ' → logprob: -11.19585132598877

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5783800482749939
    2. '=' → logprob: -0.8283800482749939
    3. ',' → logprob: -6.578380107879639
    4. ',N' → logprob: -7.828380107879639
    5. ',M' → logprob: -9.45337963104248
    6. ' ' → logprob: -9.70337963104248
    7. ',R' → logprob: -10.07837963104248
    8. ',Q' → logprob: -10.07837963104248
    9. '=input' → logprob: -10.20337963104248
    10. ',E' → logprob: -10.20337963104248

Token 79: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004597457125782967
    2. 'map' → logprob: -5.5045976638793945
    3. ' line' → logprob: -7.6295976638793945
    4. ' list' → logprob: -10.879597663879395
    5. 'line' → logprob: -11.629597663879395
    6. ' ' → logprob: -13.504597663879395
    7. '	map' → logprob: -13.879597663879395
    8. ' [' → logprob: -14.004597663879395
    9. ' m' → logprob: -14.254597663879395
    10. 'list' → logprob: -14.504597663879395

Token 80: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3955977261066437
    2. '(int' → logprob: -1.1455976963043213
    3. '(lambda' → logprob: -5.0205979347229
    4. '(str' → logprob: -6.2705979347229
    5. '<|end|>' → logprob: -9.395597457885742
    6. '(
' → logprob: -10.145597457885742
    7. '(list' → logprob: -10.770597457885742
    8. '<int' → logprob: -11.770597457885742
    9. '(eval' → logprob: -11.770597457885742
    10. 'int' → logprob: -12.020597457885742

Token 81: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.37866440415382385
    2. ')' → logprob: -1.7536643743515015
    3. '(' → logprob: -2.003664493560791
    4. ')(' → logprob: -5.753664493560791
    5. '<|end|>' → logprob: -5.878664493560791
    6. '[line' → logprob: -8.503664016723633
    7. '#line' → logprob: -8.753664016723633
    8. '(Line' → logprob: -8.878664016723633
    9. '(lines' → logprob: -9.128664016723633
    10. '(
' → logprob: -9.128664016723633

Token 82: '.split' (ID: 10347)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001487140398239717
    2. ')
' → logprob: -10.75014877319336
    3. '),' → logprob: -11.00014877319336
    4. ')`' → logprob: -11.25014877319336
    5. ')">' → logprob: -11.37514877319336
    6. ')>' → logprob: -11.50014877319336
    7. '(' → logprob: -11.50014877319336
    8. '))' → logprob: -11.87514877319336
    9. '<|end|>' → logprob: -11.87514877319336
    10. ')==' → logprob: -11.87514877319336

Token 83: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.20201022922992706
    2. '(' → logprob: -2.077010154724121
    3. '())' → logprob: -3.452010154724121
    4. '()' → logprob: -3.952010154724121
    5. ')' → logprob: -5.452010154724121
    6. '(','' → logprob: -6.202010154724121
    7. '("("' → logprob: -9.202010154724121
    8. '')' → logprob: -9.327010154724121
    9. '(',' → logprob: -9.952010154724121
    10. '("' → logprob: -10.202010154724121

Token 84: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6475297808647156
    2. ' if' → logprob: -1.7725298404693604
    3. '<|end|>' → logprob: -2.5225298404693604
    4. '#' → logprob: -2.7725298404693604
    5. ':' → logprob: -3.0225298404693604
    6. 'if' (adapté à ' if') → logprob: -3.3975298404693604
    7. 'i' → logprob: -3.7725298404693604
    8. ' 
' → logprob: -4.022529602050781
    9. ',' → logprob: -5.147529602050781
    10. '\' → logprob: -5.397529602050781

Token 86: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.03437943756580353
    2. 'C' → logprob: -3.409379482269287
    3. ' not' → logprob: -8.034379005432129
    4. ' ' → logprob: -8.284379005432129
    5. ' (' → logprob: -9.284379005432129
    6. '(' → logprob: -10.284379005432129
    7. ' W' → logprob: -12.034379005432129
    8. 'not' → logprob: -12.034379005432129
    9. ' D' → logprob: -12.659379005432129
    10. ' ' → logprob: -12.909379005432129

Token 87: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4351303279399872
    2. '==' → logprob: -1.0601303577423096
    3. ' <' → logprob: -5.9351301193237305
    4. '<' → logprob: -6.4351301193237305
    5. ' <=' → logprob: -6.5601301193237305
    6. '<=' → logprob: -7.8101301193237305
    7. '=' → logprob: -9.31013011932373
    8. '0' → logprob: -9.81013011932373
    9. ' >' → logprob: -10.31013011932373
    10. '>' → logprob: -10.31013011932373

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006919850129634142
    2. ' ' → logprob: -5.131919860839844
    3. 'D' → logprob: -7.006919860839844
    4. ' D' → logprob: -10.006919860839844
    5. '1' → logprob: -11.631919860839844
    6. 'W' → logprob: -11.631919860839844
    7. '-' → logprob: -12.319419860839844
    8. 'X' → logprob: -13.006919860839844
    9. '```' → logprob: -13.131919860839844
    10. '  ' → logprob: -13.194419860839844

Token 89: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2813054025173187
    2. 'and' → logprob: -1.4063054323196411
    3. ' ' → logprob: -9.156305313110352
    4. ':' → logprob: -10.281305313110352
    5. ' a' → logprob: -12.281305313110352
    6. '<|end|>' → logprob: -12.781305313110352
    7. '	and' → logprob: -12.906305313110352
    8. '  ' → logprob: -14.031305313110352
    9. 'a' → logprob: -14.031305313110352
    10. ' ' → logprob: -14.406305313110352

Token 90: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.4287213087081909
    2. ' D' → logprob: -1.053721308708191
    3. ' ' → logprob: -10.92872142791748
    4. '	D' → logprob: -13.92872142791748
    5. '<|end|>' → logprob: -14.05372142791748
    6. '  ' → logprob: -15.17872142791748
    7. ',D' → logprob: -15.55372142791748
    8. '   ' → logprob: -15.80372142791748
    9. ' ' → logprob: -15.80372142791748
    10. '>D' → logprob: -16.178720474243164

Token 91: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.018168555572628975
    2. ' ==' → logprob: -4.0181684494018555
    3. '<|end|>' → logprob: -11.768168449401855
    4. '=' → logprob: -12.393168449401855
    5. ' ' → logprob: -13.643168449401855
    6. '0' → logprob: -14.018168449401855
    7. '===' → logprob: -14.018168449401855
    8. '()==' → logprob: -14.143168449401855
    9. '==-' → logprob: -14.268168449401855
    10. '```' → logprob: -14.518168449401855

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017035098280757666
    2. ' ' → logprob: -6.37670373916626
    3. '<|end|>' → logprob: -13.751703262329102
    4. '  ' → logprob: -16.2517032623291
    5. 'and' → logprob: -16.3767032623291
    6. ' and' → logprob: -16.6892032623291
    7. '۰' → logprob: -17.0642032623291
    8. 'X' → logprob: -17.0642032623291
    9. '```' → logprob: -17.5642032623291
    10. ' X' → logprob: -17.6892032623291

Token 93: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014246124774217606
    2. 'and' → logprob: -4.264245986938477
    3. '<|end|>' → logprob: -9.889245986938477
    4. ' ' → logprob: -10.639245986938477
    5. '	and' → logprob: -12.514245986938477
    6. '<|end|>' → logprob: -12.514245986938477
    7. '0' → logprob: -15.889245986938477
    8. ' ' → logprob: -16.139245986938477
    9. 'a' → logprob: -16.264245986938477
    10. ' a' → logprob: -16.514245986938477

Token 94: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.07898221164941788
    2. ' W' → logprob: -2.57898211479187
    3. ' ' → logprob: -9.95398235321045
    4. 'and' → logprob: -11.70398235321045
    5. ' and' → logprob: -11.70398235321045
    6. '0' → logprob: -11.82898235321045
    7. 'X' → logprob: -12.20398235321045
    8. '<|end|>' → logprob: -12.32898235321045
    9. '   ' → logprob: -12.57898235321045
    10. '  ' → logprob: -12.95398235321045

Token 95: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -5.931863051955588e-05
    2. ' ==' → logprob: -9.750059127807617
    3. '()==' → logprob: -15.000059127807617
    4. '==
' → logprob: -15.375059127807617
    5. '<|end|>' → logprob: -16.000059127807617
    6. '=' → logprob: -16.375059127807617
    7. ']==' → logprob: -16.375059127807617
    8. ')==' → logprob: -16.750059127807617
    9. '0' → logprob: -16.875059127807617
    10. '===' → logprob: -17.125059127807617

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '  ' → logprob: -17.18773078918457
    4. 'and' → logprob: -17.31273078918457
    5. '=' → logprob: -17.81273078918457
    6. '<|end|>' → logprob: -17.93773078918457
    7. '<|end|>' → logprob: -18.06273078918457
    8. ' and' → logprob: -18.12523078918457
    9. '   ' → logprob: -18.25023078918457
    10. '۰' → logprob: -18.31273078918457

Token 97: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07897692918777466
    2. 'and' → logprob: -2.57897686958313
    3. ' ' → logprob: -9.70397663116455
    4. '0' → logprob: -11.45397663116455
    5. '	and' → logprob: -12.07897663116455
    6. '<|end|>' → logprob: -12.32897663116455
    7. ' ' → logprob: -13.57897663116455
    8. '   ' → logprob: -13.70397663116455
    9. '<|end|>' → logprob: -14.32897663116455
    10. ' a' → logprob: -14.57897663116455

Token 98: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.033691346645355225
    2. ' X' → logprob: -3.40869140625
    3. '0' → logprob: -10.28369140625
    4. ' ' → logprob: -11.53369140625
    5. 'x' → logprob: -14.65869140625
    6. ' ' → logprob: -14.78369140625
    7. '	X' → logprob: -15.03369140625
    8. 'C' → logprob: -16.15869140625
    9. '  ' → logprob: -16.15869140625
    10. '>X' → logprob: -16.40869140625

Token 99: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.000761745497584343
    2. ' ==' → logprob: -7.75076150894165
    3. '0' → logprob: -8.250761985778809
    4. '=' → logprob: -10.375761985778809
    5. '<|end|>' → logprob: -10.500761985778809
    6. '==
' → logprob: -12.500761985778809
    7. '```' → logprob: -13.250761985778809
    8. '()==' → logprob: -13.750761985778809
    9. ')==' → logprob: -13.875761985778809
    10. '==(' → logprob: -14.125761985778809

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.554343366995454e-05
    2. ' ' → logprob: -9.375085830688477
    3. '<|end|>' → logprob: -16.187585830688477
    4. '۰' → logprob: -16.312585830688477
    5. '   ' → logprob: -16.500085830688477
    6. '  ' → logprob: -16.562585830688477
    7. '1' → logprob: -16.625085830688477
    8. ''' → logprob: -17.375085830688477
    9. '```' → logprob: -17.500085830688477
    10. '<|end|>' → logprob: -17.687585830688477

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005249056499451399
    2. ':
' → logprob: -5.2552490234375
    3. ' :' → logprob: -12.3802490234375
    4. ':return' → logprob: -12.3802490234375
    5. '       ' → logprob: -12.6302490234375
    6. '   ' → logprob: -12.8802490234375
    7. ' :
' → logprob: -14.5052490234375
    8. '):' → logprob: -16.1302490234375
    9. ':

' → logprob: -16.5052490234375
    10. ':
' → logprob: -16.7552490234375

Token 102: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16975224018096924
    2. '       ' → logprob: -2.2947521209716797
    3. '           ' → logprob: -2.9197521209716797
    4. ':
' → logprob: -6.91975212097168
    5. '   ' → logprob: -8.29475212097168
    6. '	' → logprob: -10.04475212097168
    7. ' :' → logprob: -10.79475212097168
    8. '<|end|>' → logprob: -11.16975212097168
    9. '.' → logprob: -11.66975212097168
    10. '	   ' → logprob: -11.91975212097168

Token 103: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5066691040992737
    2. '           ' → logprob: -1.006669044494629
    3. ' break' → logprob: -3.506669044494629
    4. 'return' → logprob: -6.506669044494629
    5. '       ' → logprob: -7.756669044494629
    6. '	break' → logprob: -9.631669044494629
    7. '               ' → logprob: -10.381669044494629
    8. '   ' → logprob: -10.506669044494629
    9. ' return' → logprob: -10.881669044494629
    10. '```' → logprob: -12.756669044494629

Token 104: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10832943767309189
    2. '<|end|>' → logprob: -2.9833295345306396
    3. '
' → logprob: -3.3583295345306396
    4. '        
' → logprob: -5.1083292961120605
    5. '        ' → logprob: -5.8583292961120605
    6. '   ' → logprob: -5.9833292961120605
    7. ' ' → logprob: -6.6083292961120605
    8. '#' → logprob: -6.8583292961120605
    9. ')' → logprob: -7.3583292961120605
    10. '    ' → logprob: -7.6083292961120605

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04172961413860321
    2. '        
' → logprob: -4.16672945022583
    3. '        ' → logprob: -4.41672945022583
    4. '
' → logprob: -4.79172945022583
    5. '    ' → logprob: -6.29172945022583
    6. '   ' → logprob: -6.66672945022583
    7. '```' → logprob: -8.166729927062988
    8. '    
' → logprob: -8.416729927062988
    9. '<|end|>' → logprob: -8.541729927062988
    10. '      ' → logprob: -9.166729927062988

Token 106: ' E' (ID: 457)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9419330954551697
    2. '   ' → logprob: -2.6919331550598145
    3. 'result' → logprob: -2.6919331550598145
    4. 'answer' → logprob: -3.1919331550598145
    5. ' result' → logprob: -3.6294331550598145
    6. 's' → logprob: -3.7544331550598145
    7. 'total' → logprob: -3.7544331550598145
    8. 'a' → logprob: -3.7544331550598145
    9. 'n' → logprob: -3.8794331550598145
    10. ' answer' → logprob: -4.0669331550598145

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044467270374298096
    2. '=' → logprob: -3.2944672107696533
    3. 'm' → logprob: -6.544467449188232
    4. 's' → logprob: -6.794467449188232
    5. ' ' → logprob: -7.169467449188232
    6. '_' → logprob: -7.294467449188232
    7. ',' → logprob: -7.544467449188232
    8. 'x' → logprob: -8.356966972351074
    9. '   ' → logprob: -8.794466972351074
    10. 'd' → logprob: -9.231966972351074

Token 108: ' []
' (ID: 8911)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.6846172213554382
    2. ' (' → logprob: -1.559617280960083
    3. 'C' → logprob: -1.934617280960083
    4. ' D' → logprob: -3.559617280960083
    5. '(C' → logprob: -3.684617280960083
    6. ' W' → logprob: -4.059617042541504
    7. ' [' → logprob: -4.809617042541504
    8. ' max' → logprob: -4.809617042541504
    9. ' X' → logprob: -5.059617042541504
    10. 'D' → logprob: -5.059617042541504

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.089705228805542
    2. '<|end|>' → logprob: -1.214705228805542
    3. '   ' → logprob: -1.839705228805542
    4. 'for' → logprob: -2.464705228805542
    5. ' for' → logprob: -3.089705228805542
    6. '	for' → logprob: -3.464705228805542
    7. ' ' → logprob: -5.089705467224121
    8. '\t' → logprob: -5.214705467224121
    9. '	   ' → logprob: -5.339705467224121
    10. '<|end|>' → logprob: -5.464705467224121

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23164881765842438
    2. ' for' → logprob: -1.6066488027572632
    3. '   ' → logprob: -5.856648921966553
    4. '       ' → logprob: -6.356648921966553
    5. '	for' → logprob: -6.981648921966553
    6. '[' → logprob: -7.981648921966553
    7. '    ' → logprob: -8.606648445129395
    8. '\t' → logprob: -10.106648445129395
    9. ' ' → logprob: -10.481648445129395
    10. '	   ' → logprob: -10.981648445129395

Token 111: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04477667808532715
    2. '_' → logprob: -3.294776678085327
    3. ' i' → logprob: -5.044776916503906
    4. '_i' → logprob: -8.669776916503906
    5. ' ' → logprob: -9.669776916503906
    6. 'i' → logprob: -10.294776916503906
    7. '_d' → logprob: -15.419776916503906
    8. ' __' → logprob: -15.669776916503906
    9. ' ' → logprob: -16.294776916503906
    10. '_j' → logprob: -16.419776916503906

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03857899457216263
    2. 'in' → logprob: -3.288578987121582
    3. ' ' → logprob: -7.663578987121582
    4. '_' → logprob: -10.413578987121582
    5. '	in' → logprob: -11.413578987121582
    6. 'range' → logprob: -11.913578987121582
    7. 'n' → logprob: -12.413578987121582
    8. '<|end|>' → logprob: -12.663578987121582
    9. ' _' → logprob: -12.913578987121582
    10. 'space' → logprob: -13.413578987121582

Token 113: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0380459688603878
    2. ' range' → logprob: -3.288045883178711
    3. '	range' → logprob: -12.538045883178711
    4. ' ' → logprob: -14.788045883178711
    5. '  ' → logprob: -15.538045883178711
    6. '   ' → logprob: -15.788045883178711
    7. '(range' → logprob: -16.28804588317871
    8. 'rang' → logprob: -17.41304588317871
    9. ' xrange' → logprob: -17.66304588317871
    10. 'r' → logprob: -18.78804588317871

Token 114: '(C' (ID: 5559)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.1807650774717331
    2. '(C' → logprob: -1.8057650327682495
    3. '(' → logprob: -6.930765151977539
    4. 'D' → logprob: -10.680765151977539
    5. ' (' → logprob: -11.805765151977539
    6. '(E' → logprob: -12.930765151977539
    7. 'C' → logprob: -13.055765151977539
    8. ' D' → logprob: -13.930765151977539
    9. '(
' → logprob: -14.305765151977539
    10. '((' → logprob: -14.305765151977539

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010927118128165603
    2. '+' → logprob: -7.126092910766602
    3. '):
' → logprob: -9.376092910766602
    4. ' ):' → logprob: -9.751092910766602
    5. ')' → logprob: -9.876092910766602
    6. '*' → logprob: -10.126092910766602
    7. ':' → logprob: -10.626092910766602
    8. '   ' → logprob: -11.376092910766602
    9. '       ' → logprob: -12.751092910766602
    10. ',' → logprob: -12.876092910766602

Token 116: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07805449515581131
    2. '<|end|>' → logprob: -3.328054428100586
    3. '   ' → logprob: -3.578054428100586
    4. ' ' → logprob: -5.453054428100586
    5. '           ' → logprob: -6.328054428100586
    6. '<|end|>' → logprob: -6.453054428100586
    7. '	   ' → logprob: -7.328054428100586
    8. '    ' → logprob: -7.703054428100586
    9. '	' → logprob: -7.953054428100586
    10. '        ' → logprob: -8.328054428100586

Token 117: ' row' (ID: 5225)
  Prédit: ' E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.29900407791137695
    2. ' line' → logprob: -2.049004077911377
    3. 'E' → logprob: -2.299004077911377
    4. 'line' → logprob: -4.174004077911377
    5. '           ' → logprob: -5.049004077911377
    6. ' s' → logprob: -7.174004077911377
    7. '            ' → logprob: -7.424004077911377
    8. ' ' → logprob: -7.424004077911377
    9. '   ' → logprob: -7.549004077911377
    10. 'e' → logprob: -8.174003601074219

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13001678884029388
    2. '=' → logprob: -2.130016803741455
    3. '.append' → logprob: -6.630016803741455
    4. '_' → logprob: -6.630016803741455
    5. '=[]' → logprob: -8.755016326904297
    6. ',' → logprob: -9.880016326904297
    7. ' ' → logprob: -10.130016326904297
    8. '.' → logprob: -10.255016326904297
    9. '=line' → logprob: -10.630016326904297
    10. '_line' → logprob: -10.880016326904297

Token 119: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6344416737556458
    2. 'list' → logprob: -0.7594416737556458
    3. 'input' → logprob: -6.88444185256958
    4. ' input' → logprob: -7.25944185256958
    5. ' [' → logprob: -9.884441375732422
    6. '[' → logprob: -10.134441375732422
    7. '[]' → logprob: -12.134441375732422
    8. '[list' → logprob: -12.759441375732422
    9. ' tuple' → logprob: -13.384441375732422
    10. ' ' → logprob: -13.384441375732422

Token 120: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.000948141620028764
    2. '(' → logprob: -7.000947952270508
    3. '(int' → logprob: -10.875947952270508
    4. '()' → logprob: -11.875947952270508
    5. 'map' → logprob: -12.750947952270508
    6. '(range' → logprob: -12.875947952270508
    7. '(
' → logprob: -13.625947952270508
    8. ' map' → logprob: -13.875947952270508
    9. '.map' → logprob: -13.875947952270508
    10. '(input' → logprob: -14.000947952270508

Token 121: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0028486251831054688
    2. '(' → logprob: -5.8778486251831055
    3. '(lambda' → logprob: -11.002848625183105
    4. '[int' → logprob: -11.377848625183105
    5. '<int' → logprob: -12.252848625183105
    6. '<|end|>' → logprob: -12.252848625183105
    7. 'int' → logprob: -12.752848625183105
    8. '=int' → logprob: -14.002848625183105
    9. ']int' → logprob: -14.252848625183105
    10. '(
' → logprob: -14.627848625183105

Token 122: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2678675353527069
    2. '(input' → logprob: -1.5178675651550293
    3. ',' → logprob: -4.267867565155029
    4. '(' → logprob: -6.517867565155029
    5. 'input' → logprob: -8.642867088317871
    6. '(),' → logprob: -9.892867088317871
    7. '<|end|>' → logprob: -10.767867088317871
    8. ' ,' → logprob: -11.142867088317871
    9. ',int' → logprob: -11.517867088317871
    10. ')' → logprob: -11.517867088317871

Token 123: '_lines' (ID: 42980)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.045209042727947235
    2. '_lines' → logprob: -3.1702089309692383
    3. '()' → logprob: -6.545208930969238
    4. '(' → logprob: -7.545208930969238
    5. '.readline' → logprob: -8.920208930969238
    6. '(lines' → logprob: -10.920208930969238
    7. '())' → logprob: -10.920208930969238
    8. '()[' → logprob: -11.045208930969238
    9. '()(' → logprob: -11.170208930969238
    10. 's' → logprob: -12.545208930969238

Token 124: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.00000286102295
    3. ' [' → logprob: -16.750001907348633
    4. 'pos' → logprob: -16.750001907348633
    5. '[
' → logprob: -18.000001907348633
    6. '(pos' → logprob: -18.500001907348633
    7. '[C' → logprob: -18.875001907348633
    8. '[p' → logprob: -19.125001907348633
    9. '[position' → logprob: -19.375001907348633
    10. '[++' → logprob: -19.500001907348633

Token 125: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07541655004024506
    2. '[pos' → logprob: -3.3254165649414062
    3. '][' → logprob: -3.3254165649414062
    4. ']' → logprob: -7.825416564941406
    5. '   ' → logprob: -9.325416564941406
    6. '           ' → logprob: -9.950416564941406
    7. '[' → logprob: -9.950416564941406
    8. ' ' → logprob: -10.200416564941406
    9. '+' → logprob: -10.950416564941406
    10. ' ].' → logprob: -11.075416564941406

Token 126: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07889804989099503
    2. 'strip' → logprob: -2.5788979530334473
    3. ' split' → logprob: -12.453898429870605
    4. 'rstrip' → logprob: -12.578898429870605
    5. ' strip' → logprob: -14.203898429870605
    6. '.strip' → logprob: -17.07889747619629
    7. '(split' → logprob: -17.20389747619629
    8. 'replace' → logprob: -17.45389747619629
    9. 'spl' → logprob: -17.45389747619629
    10. '.split' → logprob: -17.45389747619629

Token 127: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05605054274201393
    2. '()' → logprob: -2.9310505390167236
    3. '())' → logprob: -7.431050777435303
    4. '))' → logprob: -8.431050300598145
    5. '()))
' → logprob: -8.681050300598145
    6. '(' → logprob: -9.556050300598145
    7. '()[' → logprob: -9.931050300598145
    8. '())))' → logprob: -11.306050300598145
    9. '()))

' → logprob: -11.431050300598145
    10. '().' → logprob: -11.806050300598145

Token 128: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16613422334194183
    2. '<|end|>' → logprob: -1.916134238243103
    3. 'pos' → logprob: -5.666134357452393
    4. '        
' → logprob: -7.541134357452393
    5. '<|end|>' → logprob: -7.666134357452393
    6. ')' → logprob: -8.041133880615234
    7. '   ' → logprob: -8.666133880615234
    8. '	pos' → logprob: -9.041133880615234
    9. '           ' → logprob: -9.166133880615234
    10. ',pos' → logprob: -9.416133880615234

Token 129: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.03401897847652435
    2. '       ' → logprob: -3.4090189933776855
    3. ' pos' → logprob: -8.534018516540527
    4. '   ' → logprob: -9.909018516540527
    5. '<|end|>' → logprob: -10.034018516540527
    6. '	pos' → logprob: -10.159018516540527
    7. '[pos' → logprob: -11.659018516540527
    8. '           ' → logprob: -11.909018516540527
    9. '_pos' → logprob: -12.034018516540527
    10. '
' → logprob: -12.534018516540527

Token 130: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012677866965532303
    2. ' +=' → logprob: -4.3876776695251465
    3. '+' → logprob: -9.012678146362305
    4. '++' → logprob: -10.262678146362305
    5. ']+=' → logprob: -11.887678146362305
    6. '+="' → logprob: -13.762678146362305
    7. '+='' → logprob: -13.887678146362305
    8. '```' → logprob: -14.012678146362305
    9. '+++' → logprob: -14.137678146362305
    10. '<|end|>' → logprob: -14.637678146362305

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.375335693359375
    4. '<|end|>' → logprob: -20.125335693359375
    5. '```' → logprob: -20.375335693359375
    6. '0' → logprob: -20.375335693359375
    7. '１' → logprob: -21.000335693359375
    8. '           ' → logprob: -21.000335693359375
    9. '  ' → logprob: -21.250335693359375
    10. '۱' → logprob: -21.750335693359375

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.8750057220459
    4. 'C' → logprob: -19.0000057220459
    5. '```' → logprob: -19.0000057220459
    6. '１' → logprob: -19.3750057220459
    7. 'i' → logprob: -20.3750057220459
    8. '۱' → logprob: -20.5000057220459
    9. '(' → logprob: -20.6875057220459
    10. '  ' → logprob: -21.0625057220459

Token 133: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3546683192253113
    2. '           ' → logprob: -1.229668378829956
    3. '   ' → logprob: -5.604668140411377
    4. '<|end|>' → logprob: -7.104668140411377
    5. '
' → logprob: -7.354668140411377
    6. '               ' → logprob: -8.479668617248535
    7. 'E' → logprob: -8.479668617248535
    8. ' E' → logprob: -9.229668617248535
    9. '        
' → logprob: -9.604668617248535
    10. '	' → logprob: -9.854668617248535

Token 134: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00368499755859375
    2. '<|end|>' → logprob: -6.878684997558594
    3. '           ' → logprob: -7.003684997558594
    4. 'E' → logprob: -7.253684997558594
    5. ')' → logprob: -8.128684997558594
    6. '   ' → logprob: -8.378684997558594
    7. ' E' → logprob: -8.628684997558594
    8. '        
' → logprob: -10.003684997558594
    9. '
' → logprob: -10.128684997558594
    10. '      ' → logprob: -10.628684997558594

Token 135: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.000788663572166115
    2. ' E' → logprob: -8.000788688659668
    3. '   ' → logprob: -8.875788688659668
    4. 'for' → logprob: -9.000788688659668
    5. '       ' → logprob: -9.375788688659668
    6. 'if' → logprob: -10.250788688659668
    7. 'sum' → logprob: -10.500788688659668
    8. 's' → logprob: -11.750788688659668
    9. '           ' → logprob: -11.875788688659668
    10. 'total' → logprob: -12.000788688659668

Token 136: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0029687879141420126
    2. '.' → logprob: -6.002968788146973
    3. '.extend' → logprob: -7.627968788146973
    4. '.app' → logprob: -12.377968788146973
    5. ' .' → logprob: -14.252968788146973
    6. '.ap' → logprob: -14.502968788146973
    7. '[i' → logprob: -15.127968788146973
    8. 'append' → logprob: -15.502968788146973
    9. '[' → logprob: -15.877968788146973
    10. '.setdefault' → logprob: -16.502967834472656

Token 137: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.00010592726175673306
    2. '(' → logprob: -9.250105857849121
    3. 'row' → logprob: -12.000105857849121
    4. '(list' → logprob: -13.000105857849121
    5. '(line' → logprob: -14.250105857849121
    6. ' (' → logprob: -15.250105857849121
    7. '(tuple' → logprob: -15.500105857849121
    8. ' row' → logprob: -16.125106811523438
    9. '(rows' → logprob: -16.750106811523438
    10. '(
' → logprob: -17.125106811523438

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6405310816480778e-05
    2. ' )' → logprob: -12.000016212463379
    3. ')
' → logprob: -12.000016212463379
    4. '[' → logprob: -13.625016212463379
    5. '   ' → logprob: -13.750016212463379
    6. ')return' → logprob: -14.500016212463379
    7. ' ' → logprob: -15.250016212463379
    8. '))' → logprob: -15.375016212463379
    9. '<|end|>' → logprob: -15.375016212463379
    10. '       ' → logprob: -16.000017166137695

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42563220858573914
    2. '<|end|>' → logprob: -1.8006322383880615
    3. '
' → logprob: -2.1756322383880615
    4. '   ' → logprob: -3.8006322383880615
    5. '        
' → logprob: -4.425631999969482
    6. ' ' → logprob: -5.425631999969482
    7. '[' → logprob: -5.675631999969482
    8. '    
' → logprob: -5.675631999969482
    9. '#' → logprob: -5.800631999969482
    10. ')' → logprob: -5.925631999969482

Token 140: ' F' (ID: 454)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.2738125324249268
    2. 'dp' → logprob: -2.3988125324249268
    3. '       ' → logprob: -2.5238125324249268
    4. 'M' → logprob: -2.6488125324249268
    5. 'D' → logprob: -3.0238125324249268
    6. 'R' → logprob: -3.1488125324249268
    7. 'def' → logprob: -3.3988125324249268
    8. '#' → logprob: -3.3988125324249268
    9. 'total' → logprob: -3.3988125324249268
    10. 'sum' → logprob: -3.3988125324249268

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05497865751385689
    2. '=' → logprob: -2.929978609085083
    3. '_' → logprob: -10.054978370666504
    4. '[' → logprob: -11.429978370666504
    5. ',' → logprob: -11.554978370666504
    6. '=[]' → logprob: -11.929978370666504
    7. '.' → logprob: -12.054978370666504
    8. ' ' → logprob: -12.304978370666504
    9. 'space' → logprob: -13.554978370666504
    10. '.append' → logprob: -13.679978370666504

Token 142: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0571422353386879
    2. ' []' → logprob: -3.0571422576904297
    3. '[]
' → logprob: -5.05714225769043
    4. '[' → logprob: -6.80714225769043
    5. 'list' → logprob: -7.68214225769043
    6. ' [' → logprob: -8.43214225769043
    7. '[list' → logprob: -8.93214225769043
    8. ' []
' → logprob: -9.80714225769043
    9. '[[' → logprob: -10.05714225769043
    10. '[
' → logprob: -10.55714225769043

Token 143: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22307200729846954
    2. '       ' → logprob: -1.7230720520019531
    3. ' for' → logprob: -3.848072052001953
    4. '<|end|>' → logprob: -9.848072052001953
    5. '	for' → logprob: -10.848072052001953
    6. '   ' → logprob: -11.098072052001953
    7. '[' → logprob: -11.473072052001953
    8. '
' → logprob: -13.473072052001953
    9. '           ' → logprob: -13.848072052001953
    10. '	' → logprob: -13.973072052001953

Token 144: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.52919222577475e-05
    2. ' for' → logprob: -9.500075340270996
    3. '       ' → logprob: -14.875075340270996
    4. '	for' → logprob: -17.50007438659668
    5. '[' → logprob: -18.37507438659668
    6. '   ' → logprob: -19.87507438659668
    7. '[]' → logprob: -21.12507438659668
    8. '
' → logprob: -22.00007438659668
    9. 'For' → logprob: -22.37507438659668
    10. '```' → logprob: -22.50007438659668

Token 145: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132849931716919
    2. ' i' → logprob: -1.313284993171692
    3. ' in' → logprob: -12.188284873962402
    4. 'j' → logprob: -12.313284873962402
    5. 'range' → logprob: -12.313284873962402
    6. ' range' → logprob: -12.688284873962402
    7. ' j' → logprob: -12.813284873962402
    8. '_i' → logprob: -14.188284873962402
    9. 'in' → logprob: -14.563284873962402
    10. 'd' → logprob: -14.813284873962402

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995522230863571
    2. 'in' → logprob: -2.6949551105499268
    3. ' ' → logprob: -11.819954872131348
    4. '   ' → logprob: -12.319954872131348
    5. 'In' → logprob: -13.569954872131348
    6. 'i' → logprob: -14.069954872131348
    7. '  ' → logprob: -14.444954872131348
    8. 's' → logprob: -14.569954872131348
    9. '0' → logprob: -14.819954872131348
    10. 'C' → logprob: -14.819954872131348

Token 147: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31327781081199646
    2. ' range' → logprob: -1.3132778406143188
    3. '(range' → logprob: -11.063278198242188
    4. ' ' → logprob: -15.938278198242188
    5. 'in' → logprob: -16.438278198242188
    6. '	range' → logprob: -16.438278198242188
    7. ' xrange' → logprob: -17.938278198242188
    8. 'ange' → logprob: -18.438278198242188
    9. ' in' → logprob: -18.438278198242188
    10. 'for' → logprob: -18.813278198242188

Token 148: '(C' (ID: 5559)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.005842064507305622
    2. '(C' → logprob: -5.380842208862305
    3. 'D' → logprob: -6.880842208862305
    4. '(' → logprob: -9.005842208862305
    5. ' (' → logprob: -10.505842208862305
    6. ' D' → logprob: -10.880842208862305
    7. 'C' → logprob: -11.380842208862305
    8. '[D' → logprob: -13.130842208862305
    9. '(int' → logprob: -13.380842208862305
    10. '(B' → logprob: -13.755842208862305

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005967780947685242
    2. '):
' → logprob: -5.130967617034912
    3. ':' → logprob: -11.00596809387207
    4. '   ' → logprob: -11.88096809387207
    5. ')' → logprob: -12.50596809387207
    6. '       ' → logprob: -12.63096809387207
    7. ' ):' → logprob: -12.88096809387207
    8. '+' → logprob: -13.38096809387207
    9. ']:' → logprob: -13.63096809387207
    10. '):
' → logprob: -13.75596809387207

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021052942611277103
    2. '       ' → logprob: -7.127105236053467
    3. ':
' → logprob: -7.877105236053467
    4. ':' → logprob: -8.002105712890625
    5. '   ' → logprob: -8.377105712890625
    6. '
' → logprob: -9.377105712890625
    7. 'row' → logprob: -9.877105712890625
    8. '	   ' → logprob: -10.002105712890625
    9. '	       ' → logprob: -10.377105712890625
    10. ' row' → logprob: -10.502105712890625

Token 151: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.06593319028615952
    2. 'row' (adapté à ' row') → logprob: -2.9409332275390625
    3. '           ' → logprob: -4.5659332275390625
    4. ' line' → logprob: -7.8159332275390625
    5. 'line' → logprob: -8.690933227539062
    6. '   ' → logprob: -12.315933227539062
    7. '               ' → logprob: -12.565933227539062
    8. ' ' → logprob: -12.690933227539062
    9. '	row' → logprob: -13.315933227539062
    10. '       ' → logprob: -13.690933227539062

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164102263748646
    2. '=' → logprob: -4.264163970947266
    3. ' ' → logprob: -14.639163970947266
    4. '=list' → logprob: -16.514163970947266
    5. '.append' → logprob: -17.514163970947266
    6. ' =
' → logprob: -17.514163970947266
    7. '=[]' → logprob: -18.264163970947266
    8. ' ' → logprob: -18.639163970947266
    9. '   ' → logprob: -18.889163970947266
    10. 's' → logprob: -18.889163970947266

Token 153: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2519291639328003
    2. ' list' → logprob: -1.5019291639328003
    3. '(list' → logprob: -16.251928329467773
    4. '=list' → logprob: -18.501928329467773
    5. 'List' → logprob: -19.626928329467773
    6. '	list' → logprob: -20.126928329467773
    7. '.list' → logprob: -20.126928329467773
    8. ':list' → logprob: -20.626928329467773
    9. 'map' → logprob: -21.001928329467773
    10. 'int' → logprob: -21.376928329467773

Token 154: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.407366916188039e-05
    2. 'map' → logprob: -10.375054359436035
    3. '(list' → logprob: -10.875054359436035
    4. '(int' → logprob: -13.250054359436035
    5. '.map' → logprob: -14.250054359436035
    6. '(' → logprob: -14.500054359436035
    7. ',map' → logprob: -14.750054359436035
    8. ' map' → logprob: -15.500054359436035
    9. '(
' → logprob: -16.00005340576172
    10. '	map' → logprob: -16.75005340576172

Token 155: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00023441045777872205
    2. 'int' → logprob: -8.625234603881836
    3. '[int' → logprob: -10.500234603881836
    4. '<int' → logprob: -11.125234603881836
    5. '=int' → logprob: -11.875234603881836
    6. ' (' → logprob: -13.125234603881836
    7. ',int' → logprob: -13.375234603881836
    8. '(' → logprob: -14.125234603881836
    9. ']int' → logprob: -14.625234603881836
    10. ' int' → logprob: -14.750234603881836

Token 156: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01815837249159813
    2. ',input' → logprob: -4.018158435821533
    3. ',' → logprob: -12.768157958984375
    4. '=input' → logprob: -13.268157958984375
    5. ' (' → logprob: -13.518157958984375
    6. '(' → logprob: -13.643157958984375
    7. '[input' → logprob: -14.018157958984375
    8. 'input' → logprob: -15.143157958984375
    9. '<input' → logprob: -15.893157958984375
    10. ' input' → logprob: -16.893157958984375

Token 157: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0025868352968245745
    2. 'lines' → logprob: -6.127586841583252
    3. '[pos' → logprob: -8.002586364746094
    4. 'Lines' → logprob: -10.627586364746094
    5. '```' → logprob: -10.877586364746094
    6. ' lines' → logprob: -11.877586364746094
    7. '_LINES' → logprob: -12.252586364746094
    8. '(pos' → logprob: -12.502586364746094
    9. 'pos' → logprob: -13.002586364746094
    10. '``' → logprob: -13.627586364746094

Token 158: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.9361264946837764e-07
    2. '(pos' → logprob: -16.75
    3. 'pos' → logprob: -16.875
    4. '[' → logprob: -17.125
    5. '```' → logprob: -17.5
    6. '[input' → logprob: -19.0
    7. '[prop' → logprob: -19.375
    8. ',pos' → logprob: -19.375
    9. '_lines' → logprob: -19.625
    10. 'Lines' → logprob: -19.875

Token 159: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0005479106330312788
    2. ').' → logprob: -8.500548362731934
    3. '().' → logprob: -8.750548362731934
    4. '.split' → logprob: -9.250548362731934
    5. '.' → logprob: -10.000548362731934
    6. ']' → logprob: -11.250548362731934
    7. '[pos' → logprob: -11.625548362731934
    8. ''].' → logprob: -11.875548362731934
    9. ' ].' → logprob: -12.250548362731934
    10. ' .' → logprob: -13.250548362731934

Token 160: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.77627644513268e-06
    2. 'strip' → logprob: -11.750008583068848
    3. ' split' → logprob: -14.125008583068848
    4. '(split' → logprob: -16.875009536743164
    5. 'rstrip' → logprob: -17.750009536743164
    6. '.split' → logprob: -18.500009536743164
    7. 'skip' → logprob: -18.750009536743164
    8. ')' → logprob: -18.875009536743164
    9. 'read' → logprob: -20.000009536743164
    10. 'decode' → logprob: -20.625009536743164

Token 161: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.14544731378555298
    2. '()' → logprob: -2.395447254180908
    3. '()))
' → logprob: -3.770447254180908
    4. '))' → logprob: -3.895447254180908
    5. '())' → logprob: -7.770447254180908
    6. '()
' → logprob: -8.520447731018066
    7. '(' → logprob: -9.395447731018066
    8. '))
' → logprob: -9.520447731018066
    9. '[]' → logprob: -11.145447731018066
    10. '().' → logprob: -11.270447731018066

Token 162: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02993665635585785
    2. '           ' → logprob: -4.029936790466309
    3. '   ' → logprob: -4.529936790466309
    4. 'pos' → logprob: -7.154936790466309
    5. '<|end|>' → logprob: -9.029936790466309
    6. '
' → logprob: -11.779936790466309
    7. ')' → logprob: -12.029936790466309
    8. '        
' → logprob: -12.904936790466309
    9. '```' → logprob: -12.904936790466309
    10. ' ' → logprob: -13.279936790466309

Token 163: ' pos' (ID: 1253)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.17997784912586212
    2. '+=' → logprob: -1.8049778938293457
    3. '+' → logprob: -8.929977416992188
    4. '          ' → logprob: -10.679977416992188
    5. ']+=' → logprob: -10.804977416992188
    6. '    ' → logprob: -11.054977416992188
    7. '            ' → logprob: -11.554977416992188
    8. '           ' → logprob: -12.054977416992188
    9. '        ' → logprob: -12.304977416992188
    10. ' ' → logprob: -12.304977416992188

Token 165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.35706390615087e-05
    2. '(' → logprob: -10.500033378601074
    3. ' ' → logprob: -12.125033378601074
    4. '(C' → logprob: -15.125033378601074
    5. '   ' → logprob: -16.00003433227539
    6. '```' → logprob: -16.50003433227539
    7. '           ' → logprob: -17.00003433227539
    8. ' (' → logprob: -17.12503433227539
    9. 'C' → logprob: -17.25003433227539
    10. ')' → logprob: -17.25003433227539

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. 'C' → logprob: -14.375001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '(' → logprob: -14.875001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '           ' → logprob: -17.125001907348633
    7. '```' → logprob: -17.250001907348633
    8. '(C' → logprob: -17.375001907348633
    9. '       ' → logprob: -17.875001907348633
    10. '0' → logprob: -19.250001907348633

Token 167: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009531481191515923
    2. '       ' → logprob: -7.000953197479248
    3. '   ' → logprob: -10.87595272064209
    4. '          ' → logprob: -11.87595272064209
    5. '               ' → logprob: -12.50095272064209
    6. 'F' → logprob: -12.50095272064209
    7. '         ' → logprob: -12.87595272064209
    8. '	       ' → logprob: -13.75095272064209
    9. '		' → logprob: -14.00095272064209
    10. ' F' → logprob: -14.37595272064209

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03440800681710243
    2. '       ' → logprob: -3.4094080924987793
    3. 'F' → logprob: -7.534408092498779
    4. '   ' → logprob: -8.534407615661621
    5. '               ' → logprob: -10.909407615661621
    6. ' F' → logprob: -12.534407615661621
    7. '          ' → logprob: -13.034407615661621
    8. '         ' → logprob: -13.284407615661621
    9. '<|end|>' → logprob: -13.534407615661621
    10. ' ' → logprob: -14.409407615661621

Token 169: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -3.2020991056924686e-05
    2. ' F' → logprob: -10.500032424926758
    3. '           ' → logprob: -12.875032424926758
    4. '       ' → logprob: -13.375032424926758
    5. '   ' → logprob: -15.125032424926758
    6. 'E' → logprob: -17.375032424926758
    7. '               ' → logprob: -17.750032424926758
    8. ' ' → logprob: -18.750032424926758
    9. '	F' → logprob: -19.125032424926758
    10. '  ' → logprob: -19.250032424926758

Token 170: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002624086628202349
    2. '.' → logprob: -8.250262260437012
    3. ' .' → logprob: -14.625262260437012
    4. '.app' → logprob: -15.250262260437012
    5. 'append' → logprob: -15.375262260437012
    6. '.Append' → logprob: -15.500262260437012
    7. '.extend' → logprob: -16.625263214111328
    8. '.ap' → logprob: -18.000263214111328
    9. '.add' → logprob: -18.500263214111328
    10. '.push' → logprob: -18.625263214111328

Token 171: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.500015258789062
    3. 'row' → logprob: -12.250015258789062
    4. '(line' → logprob: -15.875015258789062
    5. ' (' → logprob: -16.375015258789062
    6. '(list' → logprob: -16.375015258789062
    7. ' row' → logprob: -17.000015258789062
    8. '(
' → logprob: -18.125015258789062
    9. ',row' → logprob: -18.125015258789062
    10. '(rows' → logprob: -18.875015258789062

Token 172: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.56233171664644e-05
    2. ')
' → logprob: -9.875055313110352
    3. '       ' → logprob: -12.875055313110352
    4. '<|end|>' → logprob: -14.250055313110352
    5. ' )' → logprob: -14.875055313110352
    6. ')return' → logprob: -16.12505531311035
    7. '))' → logprob: -16.50005531311035
    8. '   ' → logprob: -16.75005531311035
    9. '#' → logprob: -16.75005531311035
    10. '[' → logprob: -17.25005531311035

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27227142453193665
    2. '<|end|>' → logprob: -1.6472713947296143
    3. '
' → logprob: -3.7722713947296143
    4. '        
' → logprob: -4.022271633148193
    5. '#' → logprob: -6.522271633148193
    6. '   ' → logprob: -7.522271633148193
    7. '        ' → logprob: -7.647271633148193
    8. '```' → logprob: -8.022271156311035
    9. '<|end|>' → logprob: -8.147271156311035
    10. ' for' → logprob: -8.647271156311035

Token 174: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1058415174484253
    2. 'S' → logprob: -2.230841636657715
    3. 'result' → logprob: -2.230841636657715
    4. 'total' → logprob: -2.730841636657715
    5. 'R' → logprob: -3.230841636657715
    6. '       ' → logprob: -3.230841636657715
    7. 'sum' → logprob: -3.230841636657715
    8. 's' → logprob: -3.480841636657715
    9. 'answer' → logprob: -3.480841636657715
    10. 'dp' → logprob: -4.105841636657715

Token 175: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7953051328659058
    2. 'total' → logprob: -2.0453052520751953
    3. 'result' → logprob: -2.4203052520751953
    4. 'def' → logprob: -3.1703052520751953
    5. 'answer' → logprob: -3.1703052520751953
    6. 's' → logprob: -3.2953052520751953
    7. 'sum' → logprob: -3.5453052520751953
    8. 'max' → logprob: -3.6703052520751953
    9. ' #' → logprob: -3.6703052520751953
    10. ' total' → logprob: -3.7953052520751953

Token 176: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09682190418243408
    2. ' d' → logprob: -2.9718217849731445
    3. ' _' → logprob: -4.7218217849731445
    4. 'i' → logprob: -5.3468217849731445
    5. ' w' → logprob: -5.5968217849731445
    6. ' j' → logprob: -5.5968217849731445
    7. ' day' → logprob: -5.7218217849731445
    8. ' c' → logprob: -5.8468217849731445
    9. ' k' → logprob: -5.8468217849731445
    10. 'd' → logprob: -6.3468217849731445

Token 177: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -1.090592622756958
    2. ' i' → logprob: -1.340592622756958
    3. 'i' → logprob: -2.215592622756958
    4. ' d' → logprob: -2.465592622756958
    5. 'd' → logprob: -2.715592622756958
    6. ' j' → logprob: -3.840592622756958
    7. 'day' → logprob: -4.090592384338379
    8. 'j' → logprob: -4.465592384338379
    9. ' k' → logprob: -4.590592384338379
    10. ' w' → logprob: -4.590592384338379

Token 178: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23032672703266144
    2. ',' → logprob: -2.4803266525268555
    3. ' for' → logprob: -2.7303266525268555
    4. '<|end|>' → logprob: -3.6053266525268555
    5. '        ' → logprob: -4.6053266525268555
    6. ' in' → logprob: -5.2303266525268555
    7. 'for' → logprob: -5.6053266525268555
    8. '   ' → logprob: -5.9803266525268555
    9. '    ' → logprob: -6.1053266525268555
    10. ' ' → logprob: -6.2303266525268555

Token 179: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14303550124168396
    2. ',' → logprob: -2.643035411834717
    3. ' for' → logprob: -3.768035411834717
    4. ' ' → logprob: -4.393035411834717
    5. '<|end|>' → logprob: -4.518035411834717
    6. ':' → logprob: -5.518035411834717
    7. 'in' → logprob: -5.643035411834717
    8. '   ' → logprob: -6.018035411834717
    9. 'for' → logprob: -6.018035411834717
    10. '    ' → logprob: -7.018035411834717

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010872321436181664
    2. '1' → logprob: -7.251087188720703
    3. ' ' → logprob: -8.126087188720703
    4. 'range' → logprob: -9.626087188720703
    5. ' range' → logprob: -12.126087188720703
    6. '   ' → logprob: -12.376087188720703
    7. '#' → logprob: -14.001087188720703
    8. '       ' → logprob: -14.001087188720703
    9. '```' → logprob: -14.001087188720703
    10. 'D' → logprob: -14.751087188720703

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016420960891991854
    2. '1' → logprob: -6.751642227172852
    3. 'range' → logprob: -8.126642227172852
    4. ' ' → logprob: -9.001642227172852
    5. ' range' → logprob: -9.876642227172852
    6. '   ' → logprob: -14.376642227172852
    7. '(' → logprob: -15.626642227172852
    8. '
' → logprob: -15.689142227172852
    9. '       ' → logprob: -16.62664222717285
    10. '```' → logprob: -16.68914222717285

Token 182: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.18287980556488037
    2. 'to' → logprob: -1.8078798055648804
    3. '   ' → logprob: -6.68287992477417
    4. '       ' → logprob: -6.80787992477417
    5. '        ' → logprob: -8.432879447937012
    6. '    ' → logprob: -8.682879447937012
    7. ' ' → logprob: -8.932879447937012
    8. ',' → logprob: -9.432879447937012
    9. '           ' → logprob: -9.682879447937012
    10. ' in' → logprob: -10.182879447937012

Token 183: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0072187380865216255
    2. ' D' → logprob: -5.007218837738037
    3. 'W' → logprob: -8.007218360900879
    4. '   ' → logprob: -9.507218360900879
    5. '(D' → logprob: -10.007218360900879
    6. ' ' → logprob: -11.632218360900879
    7. 'C' → logprob: -11.757218360900879
    8. '       ' → logprob: -12.132218360900879
    9. 'X' → logprob: -12.257218360900879
    10. '  ' → logprob: -12.382218360900879

Token 184: '-' (ID: 12)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.703685998916626
    2. '       ' → logprob: -1.328685998916626
    3. ' for' → logprob: -2.328685998916626
    4. 'for' → logprob: -2.828685998916626
    5. ':' → logprob: -3.328685998916626
    6. ',' → logprob: -4.078685760498047
    7. '    ' → logprob: -4.328685760498047
    8. ' ' → logprob: -5.328685760498047
    9. '        ' → logprob: -5.953685760498047
    10. '<|end|>' → logprob: -6.203685760498047

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.250009536743164
    4. '       ' → logprob: -17.750009536743164
    5. '           ' → logprob: -18.250009536743164
    6. '    ' → logprob: -18.625009536743164
    7. '
' → logprob: -19.125009536743164
    8. '  ' → logprob: -19.125009536743164
    9. '19' → logprob: -19.250009536743164
    10. '```' → logprob: -19.750009536743164

Token 186: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07484043389558792
    2. ',' → logprob: -3.449840545654297
    3. ' for' → logprob: -4.449840545654297
    4. '   ' → logprob: -4.449840545654297
    5. '<|end|>' → logprob: -5.074840545654297
    6. '
' → logprob: -5.449840545654297
    7. ':' → logprob: -6.074840545654297
    8. 'for' → logprob: -6.699840545654297
    9. '    ' → logprob: -7.449840545654297
    10. '        
' → logprob: -7.824840545654297

Token 187: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7458049654960632
    2. '       ' → logprob: -0.9958049654960632
    3. '        ' → logprob: -2.870805025100708
    4. ' total' → logprob: -3.745805025100708
    5. 'for' → logprob: -4.120804786682129
    6. ' max' → logprob: -5.245804786682129
    7. '        
' → logprob: -5.370804786682129
    8. ' sum' → logprob: -5.495804786682129
    9. ' ans' → logprob: -5.745804786682129
    10. '<|end|>' → logprob: -5.745804786682129

Token 188: ' pre' (ID: 876)
  Prédit: ' want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.9308956861495972
    2. ' need' → logprob: -1.4308956861495972
    3. ''ll' → logprob: -2.8058958053588867
    4. ' can' → logprob: -2.9308958053588867
    5. ' will' → logprob: -3.1808958053588867
    6. '       ' → logprob: -3.4308958053588867
    7. 'calculate' → logprob: -3.8058958053588867
    8. '#' → logprob: -4.055895805358887
    9. ' calculate' → logprob: -4.180895805358887
    10. 'need' → logprob: -4.180895805358887

Token 189: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.6167159080505371
    2. 'pare' → logprob: -0.8667159080505371
    3. '   ' → logprob: -4.241715908050537
    4. 'process' → logprob: -4.741715908050537
    5. ' compute' → logprob: -5.116715908050537
    6. 'calculate' → logprob: -5.616715908050537
    7. 'dict' → logprob: -6.116715908050537
    8. '       ' → logprob: -6.741715908050537
    9. ' calculate' → logprob: -7.616715908050537
    10. 'sum' → logprob: -7.616715908050537

Token 190: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7156348824501038
    2. 'the' → logprob: -1.590634822845459
    3. '       ' → logprob: -1.715634822845459
    4. ' prefix' → logprob: -3.465634822845459
    5. 'prefix' → logprob: -3.965634822845459
    6. ' a' → logprob: -4.590634822845459
    7. 'dp' → logprob: -5.215634822845459
    8. ' cumulative' → logprob: -5.340634822845459
    9. ' max' → logprob: -5.465634822845459
    10. 'possible' → logprob: -5.590634822845459

Token 191: ' subsets' (ID: 165377)
  Prédit: ' subsets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.29654088616371155
    2. 'possible' → logprob: -2.0465409755706787
    3. ' possible' → logprob: -3.1715409755706787
    4. ' combinations' → logprob: -4.2965407371521
    5. 'sub' → logprob: -4.4215407371521
    6. ' valid' → logprob: -4.9215407371521
    7. 'subset' → logprob: -4.9215407371521
    8. ' the' → logprob: -5.0465407371521
    9. 'the' → logprob: -5.0465407371521
    10. 'valid' → logprob: -5.5465407371521

Token 192: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9272699356079102
    2. '       ' → logprob: -1.0522699356079102
    3. '<|end|>' → logprob: -2.55226993560791
    4. '(' → logprob: -3.17726993560791
    5. ',' → logprob: -3.67726993560791
    6. ' ' → logprob: -3.80226993560791
    7. ' (' → logprob: -4.17726993560791
    8. 'of' → logprob: -4.42726993560791
    9. '   ' → logprob: -4.55226993560791
    10. ' for' → logprob: -4.67726993560791

Token 193: ' regions' (ID: 21043)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6262063980102539
    2. 'range' → logprob: -1.376206398010254
    3. '[' → logprob: -3.251206398010254
    4. 'W' → logprob: -3.751206398010254
    5. ' days' → logprob: -3.751206398010254
    6. ' workers' → logprob: -4.001206398010254
    7. 'workers' → logprob: -4.251206398010254
    8. '{' → logprob: -4.376206398010254
    9. 'days' → logprob: -4.751206398010254
    10. 'C' → logprob: -5.001206398010254

Token 194: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2571077346801758
    2. '<|end|>' → logprob: -1.8821077346801758
    3. ' that' → logprob: -2.132107734680176
    4. ' for' → logprob: -2.257107734680176
    5. 'for' → logprob: -2.757107734680176
    6. '       ' → logprob: -2.882107734680176
    7. '   ' → logprob: -3.257107734680176
    8. 'with' → logprob: -3.382107734680176
    9. ' with' → logprob: -3.507107734680176
    10. '.' → logprob: -4.007107734680176

Token 195: ' E' (ID: 457)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.8265869617462158
    2. 'size' → logprob: -1.8265869617462158
    3. 'W' → logprob: -2.326586961746216
    4. 'total' → logprob: -2.451586961746216
    5. 'C' → logprob: -3.576586961746216
    6. 'j' → logprob: -3.576586961746216
    7. 'coverage' → logprob: -3.576586961746216
    8. '```' → logprob: -3.701586961746216
    9. 'sum' → logprob: -3.826586961746216
    10. '1' → logprob: -3.951586961746216

Token 196: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2960010766983032
    2. '[' → logprob: -2.0460009574890137
    3. '[i' → logprob: -2.2960009574890137
    4. 'j' → logprob: -5.046000957489014
    5. ' [' → logprob: -5.671000957489014
    6. ' ' → logprob: -6.233500957489014
    7. '```' → logprob: -6.421000957489014
    8. ' j' → logprob: -7.296000957489014
    9. '[C' → logprob: -7.671000957489014
    10. 'sum' → logprob: -7.858500957489014

Token 197: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4075797498226166
    2. ']' → logprob: -1.532579779624939
    3. '[j' → logprob: -2.6575796604156494
    4. '[' → logprob: -3.7825796604156494
    5. '[i' → logprob: -4.5325798988342285
    6. ']>' → logprob: -5.7825798988342285
    7. ' ][' → logprob: -5.9075798988342285
    8. ']>=' → logprob: -6.6575798988342285
    9. ']==' → logprob: -7.1575798988342285
    10. '].' → logprob: -7.2825798988342285

Token 198: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008355113677680492
    2. ' j' → logprob: -4.883355140686035
    3. '][' → logprob: -7.633355140686035
    4. ']' → logprob: -8.633355140686035
    5. 'i' → logprob: -10.008355140686035
    6. ' ' → logprob: -11.758355140686035
    7. ',j' → logprob: -12.008355140686035
    8. '
' → logprob: -12.258355140686035
    9. '```' → logprob: -12.258355140686035
    10. ' ][' → logprob: -12.758355140686035

Token 199: ']>' (ID: 54651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0793488547205925
    2. '][' → logprob: -3.5793488025665283
    3. ']==' → logprob: -3.9543488025665283
    4. ']>=' → logprob: -4.829349040985107
    5. ' ]' → logprob: -4.954349040985107
    6. ']>' → logprob: -5.329349040985107
    7. ']<=' → logprob: -5.829349040985107
    8. '[' → logprob: -6.829349040985107
    9. '].' → logprob: -6.954349040985107
    10. '[i' → logprob: -7.454349040985107

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025271790102124214
    2. ' ' → logprob: -3.7752718925476074
    3. 'j' → logprob: -6.400271892547607
    4. '=' → logprob: -8.52527141571045
    5. ' j' → logprob: -9.15027141571045
    6. 'X' → logprob: -11.15027141571045
    7. 'i' → logprob: -11.96277141571045
    8. ' X' → logprob: -12.58777141571045
    9. '```' → logprob: -12.90027141571045
    10. 'E' → logprob: -12.90027141571045

Token 201: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6145670413970947
    2. '
' → logprob: -2.1145670413970947
    3. '        
' → logprob: -2.6145670413970947
    4. ',' → logprob: -2.7395670413970947
    5. ' ' → logprob: -3.2395670413970947
    6. '.' → logprob: -3.3645670413970947
    7. ' for' → logprob: -3.7395670413970947
    8. ':' → logprob: -4.114566802978516
    9. '   ' → logprob: -4.239566802978516
    10. 'for' → logprob: -4.364566802978516

Token 202: 'regions' (ID: 134292)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6330693364143372
    2. ' )' → logprob: -0.7580693364143372
    3. ' for' → logprob: -10.008069038391113
    4. ' ),' → logprob: -10.008069038391113
    5. '),' → logprob: -10.133069038391113
    6. ').' → logprob: -10.133069038391113
    7. ' ' → logprob: -10.258069038391113
    8. ' )
' → logprob: -10.258069038391113
    9. ' and' → logprob: -10.383069038391113
    10. 'for' → logprob: -10.508069038391113

Token 203: ' where' (ID: 1919)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9691489338874817
    2. ' and' → logprob: -1.594148874282837
    3. '])' → logprob: -1.969148874282837
    4. 'and' → logprob: -2.469148874282837
    5. ' for' → logprob: -3.219148874282837
    6. '=' → logprob: -3.344148874282837
    7. ']' → logprob: -3.719148874282837
    8. ' in' → logprob: -4.344149112701416
    9. 'for' → logprob: -4.344149112701416
    10. ' that' → logprob: -4.594149112701416

Token 204: ' live' (ID: 4561)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.2687782943248749
    2. ' E' → logprob: -1.6437783241271973
    3. ' the' → logprob: -4.268778324127197
    4. 'i' → logprob: -5.018778324127197
    5. 'the' → logprob: -5.018778324127197
    6. ')' → logprob: -5.393778324127197
    7. ' i' → logprob: -5.768778324127197
    8. 'X' → logprob: -7.893778324127197
    9. 'j' → logprob: -8.018777847290039
    10. 'C' → logprob: -8.081277847290039

Token 205: ' can' (ID: 665)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2850039005279541
    2. ' _' → logprob: -2.660003900527954
    3. 'space' → logprob: -3.035003900527954
    4. ')' → logprob: -3.910003900527954
    5. ' ' → logprob: -4.035003662109375
    6. '_space' → logprob: -4.285003662109375
    7. '    ' → logprob: -4.410003662109375
    8. '   ' → logprob: -4.660003662109375
    9. 'spaces' → logprob: -4.785003662109375
    10. '_events' → logprob: -5.785003662109375

Token 206: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.24944844841957092
    2. 'be' → logprob: -2.874448537826538
    3. ' exist' → logprob: -3.374448537826538
    4. ')' → logprob: -3.749448537826538
    5. ' continue' → logprob: -4.124448299407959
    6. 'exist' → logprob: -4.124448299407959
    7. ' in' → logprob: -4.249448299407959
    8. 'continue' → logprob: -4.499448299407959
    9. '>' → logprob: -5.249448299407959
    10. ' survive' → logprob: -5.624448299407959

Token 207: ' held' (ID: 7504)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.7822518348693848
    2. 'det' → logprob: -1.9072518348693848
    3. 'observ' → logprob: -2.1572518348693848
    4. 's' → logprob: -2.5322518348693848
    5. 'supported' → logprob: -3.1572518348693848
    6. 'tracked' → logprob: -3.1572518348693848
    7. 'seen' → logprob: -3.2822518348693848
    8. 'raised' → logprob: -3.6572518348693848
    9. 'held' → logprob: -3.9072518348693848
    10. 'saved' → logprob: -3.9072518348693848

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01990683376789093
    2. ' )' → logprob: -4.019906997680664
    3. ').' → logprob: -7.019906997680664
    4. '),' → logprob: -8.394906997680664
    5. ' at' → logprob: -8.769906997680664
    6. ',' → logprob: -8.769906997680664
    7. ' for' → logprob: -9.269906997680664
    8. 'for' → logprob: -10.144906997680664
    9. ' in' → logprob: -10.394906997680664
    10. '.' → logprob: -10.394906997680664

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050880275666713715
    2. '   ' → logprob: -4.550880432128906
    3. '        
' → logprob: -4.675880432128906
    4. '
' → logprob: -5.300880432128906
    5. ' ' → logprob: -5.300880432128906
    6. '\n' → logprob: -5.425880432128906
    7. '<|end|>' → logprob: -5.925880432128906
    8. '\' → logprob: -6.300880432128906
    9. ':' → logprob: -6.425880432128906
    10. '    
' → logprob: -6.800880432128906

Token 210: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8972651958465576
    2. ' subsets' → logprob: -1.6472651958465576
    3. ' for' → logprob: -2.1472651958465576
    4. ' sets' → logprob: -2.5222651958465576
    5. ' live' → logprob: -3.0222651958465576
    6. ' 
' → logprob: -3.6472651958465576
    7. '        
' → logprob: -3.8972651958465576
    8. ' day' → logprob: -4.022265434265137
    9. 'for' → logprob: -4.397265434265137
    10. '
' → logprob: -4.522265434265137

Token 211: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.0274062156677246
    2. 'valid' → logprob: -2.2774062156677246
    3. ' subsets' → logprob: -2.2774062156677246
    4. 'live' → logprob: -2.4024062156677246
    5. 'sub' → logprob: -2.5274062156677246
    6. 'available' → logprob: -2.6524062156677246
    7. 'day' → logprob: -2.9024062156677246
    8. 'regions' → logprob: -3.0274062156677246
    9. 'possible' → logprob: -3.1524062156677246
    10. 'for' → logprob: -3.7774062156677246

Token 212: ' conditions' (ID: 6409)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.7671827673912048
    2. ' next' → logprob: -2.2671828269958496
    3. 'for' → logprob: -3.0171828269958496
    4. 'sub' → logprob: -3.1421828269958496
    5. 'next' → logprob: -3.5171828269958496
    6. 'possible' → logprob: -3.5171828269958496
    7. 'valid' → logprob: -3.5171828269958496
    8. ' regions' → logprob: -3.6421828269958496
    9. 'regions' → logprob: -3.6421828269958496
    10. ' for' → logprob: -3.7671828269958496

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.873818576335907
    2. 'for' → logprob: -1.2488186359405518
    3. ' for' → logprob: -1.3738186359405518
    4. ' :' → logprob: -4.748818397521973
    5. ':
' → logprob: -5.248818397521973
    6. ' are' → logprob: -5.373818397521973
    7. ' ' → logprob: -5.623818397521973
    8. ',' → logprob: -5.623818397521973
    9. '       ' → logprob: -5.748818397521973
    10. '#' → logprob: -6.623818397521973

Token 214: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0802813246846199
    2. '        ' → logprob: -3.7052812576293945
    3. ' 
' → logprob: -3.9552812576293945
    4. '       ' → logprob: -4.7052812576293945
    5. '        
' → logprob: -5.4552812576293945
    6. ' for' → logprob: -5.4552812576293945
    7. '         
' → logprob: -5.7052812576293945
    8. ' \' → logprob: -5.8302812576293945
    9. 'for' → logprob: -6.2052812576293945
    10. '    ' → logprob: -6.5802812576293945

Token 215: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.012587070465088
    2. ' ' → logprob: -1.262587070465088
    3. '        ' → logprob: -2.262587070465088
    4. '       ' → logprob: -2.512587070465088
    5. ' 
' → logprob: -2.762587070465088
    6. 'for' → logprob: -3.512587070465088
    7. '        
' → logprob: -3.762587070465088
    8. '#' (adapté à ' #') → logprob: -4.012587070465088
    9. ' #' → logprob: -4.512587070465088
    10. '<|end|>' → logprob: -5.512587070465088

Token 216: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5831626653671265
    2. '#' → logprob: -1.8331626653671265
    3. 'for' → logprob: -1.9581626653671265
    4. ' #' → logprob: -2.333162784576416
    5. ' valid' → logprob: -4.333162784576416
    6. '       ' → logprob: -5.083162784576416
    7. ' 
' → logprob: -5.583162784576416
    8. '
' → logprob: -5.833162784576416
    9. 'valid' → logprob: -6.083162784576416
    10. '        ' → logprob: -6.208162784576416

Token 217: ' On' (ID: 2160)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6126788854598999
    2. 'for' → logprob: -0.8626788854598999
    3. ' all' → logprob: -5.1126790046691895
    4. ' ' → logprob: -5.3626790046691895
    5. 'For' → logprob: -5.7376790046691895
    6. '    ' → logprob: -5.8626790046691895
    7. ' For' → logprob: -5.9876790046691895
    8. '   ' → logprob: -6.2376790046691895
    9. '#' → logprob: -6.7376790046691895
    10. ' valid' → logprob: -6.8626790046691895

Token 218: ' day' (ID: 2163)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.3185306489467621
    2. 'each' → logprob: -1.8185306787490845
    3. ' day' → logprob: -2.693530559539795
    4. ' the' → logprob: -3.693530559539795
    5. 'the' → logprob: -4.943530559539795
    6. ' all' → logprob: -6.193530559539795
    7. ' line' → logprob: -6.818530559539795
    8. 'day' → logprob: -6.943530559539795
    9. ' j' → logprob: -7.193530559539795
    10. 'j' → logprob: -7.443530559539795

Token 219: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6069010496139526
    2. 'j' → logprob: -1.2319010496139526
    3. ' ' → logprob: -2.231901168823242
    4. '0' → logprob: -3.106901168823242
    5. '<|end|>' → logprob: -5.106901168823242
    6. ' ,' → logprob: -7.356901168823242
    7. ' ' → logprob: -7.606901168823242
    8. '  ' → logprob: -7.606901168823242
    9. ',' → logprob: -7.856901168823242
    10. ' `' → logprob: -7.856901168823242

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00516378553584218
    2. ' ,' → logprob: -5.505163669586182
    3. '<|end|>' → logprob: -7.380163669586182
    4. ',
' → logprob: -8.50516414642334
    5. ')' → logprob: -9.38016414642334
    6. ':' → logprob: -9.63016414642334
    7. ' ' → logprob: -9.75516414642334
    8. '<|end|>' → logprob: -11.88016414642334
    9. ' we' → logprob: -12.50516414642334
    10. '   ' → logprob: -12.63016414642334

Token 221: ' can' (ID: 665)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.5750021934509277
    2. 'we' → logprob: -1.7000021934509277
    3. ' subsets' → logprob: -1.8250021934509277
    4. ' all' → logprob: -2.0750021934509277
    5. 'for' → logprob: -2.4500021934509277
    6. ' for' → logprob: -2.5750021934509277
    7. 'the' → logprob: -3.2000021934509277
    8. ' the' → logprob: -3.4500021934509277
    9. 'all' → logprob: -3.8250021934509277
    10. ' there' → logprob: -4.450002193450928

Token 222: ' perform' (ID: 3347)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.709969162940979
    2. ''' → logprob: -2.2099690437316895
    3. 'not' → logprob: -2.9599690437316895
    4. '_hold' → logprob: -3.0849690437316895
    5. '_live' → logprob: -3.2099690437316895
    6. ' we' → logprob: -3.5849690437316895
    7. 'live' → logprob: -3.5849690437316895
    8. ''t' → logprob: -3.8349690437316895
    9. ')' → logprob: -3.8349690437316895
    10. '_use' → logprob: -4.2099690437316895

Token 223: ' one' (ID: 1001)
  Prédit: 'live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'live' → logprob: -1.1737624406814575
    2. ' live' → logprob: -1.9237624406814575
    3. ' any' → logprob: -2.173762321472168
    4. ' all' → logprob: -2.548762321472168
    5. ' the' → logprob: -2.798762321472168
    6. ' either' → logprob: -3.048762321472168
    7. 'the' → logprob: -3.173762321472168
    8. ' ' → logprob: -3.673762321472168
    9. ' a' → logprob: -3.798762321472168
    10. 'either' → logprob: -4.048762321472168

Token 224: ' or' (ID: 503)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.3546699285507202
    2. ' or' → logprob: -1.3546699285507202
    3. ' live' → logprob: -2.1046700477600098
    4. 'live' → logprob: -2.4796700477600098
    5. ' event' → logprob: -2.9796700477600098
    6. ' ' → logprob: -3.1046700477600098
    7. ' subset' → logprob: -3.4796700477600098
    8. 'of' → logprob: -3.7296700477600098
    9. ' competition' → logprob: -3.9796700477600098
    10. 'event' → logprob: -4.22967004776001

Token 225: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.12154923379421234
    2. 'none' → logprob: -3.121549129486084
    3. 'off' → logprob: -3.371549129486084
    4. 'not' → logprob: -4.246549129486084
    5. 'multiple' → logprob: -5.496549129486084
    6. 'no' → logprob: -5.496549129486084
    7. ' more' → logprob: -5.621549129486084
    8. 'one' → logprob: -5.996549129486084
    9. '   ' → logprob: -6.871549129486084
    10. ' ' → logprob: -6.996549129486084

Token 226: ' lives' (ID: 8354)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'regions' → logprob: -1.294046401977539
    2. 'live' → logprob: -1.919046401977539
    3. ' live' → logprob: -2.169046401977539
    4. ' regions' → logprob: -2.419046401977539
    5. 'spaces' → logprob: -2.794046401977539
    6. 'space' → logprob: -3.044046401977539
    7. 'lect' → logprob: -3.481546401977539
    8. ' spaces' → logprob: -3.981546401977539
    9. 'region' → logprob: -4.169046401977539
    10. ' space' → logprob: -4.294046401977539

Token 227: ' following' (ID: 3992)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' adjacency' (ID: 177015)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5395038723945618
    2. 'the' → logprob: -1.164503812789917
    3. '<|end|>' → logprob: -2.789503812789917
    4. ' a' → logprob: -4.539504051208496
    5. ' only' → logprob: -4.914504051208496
    6. ' all' → logprob: -5.039504051208496
    7. 'a' → logprob: -5.664504051208496
    8. ' any' → logprob: -6.664504051208496
    9. 'only' → logprob: -6.664504051208496
    10. ' contiguous' → logprob: -6.789504051208496

Token 229: ' rule' (ID: 10652)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: ' no' (ID: 860)
  Prédit: ' connectivity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connectivity' → logprob: -0.9276248216629028
    2. 'connect' → logprob: -2.0526247024536133
    3. 'continu' → logprob: -3.0526247024536133
    4. 'coverage' → logprob: -3.1776247024536133
    5. 'cont' → logprob: -3.4276247024536133
    6. ' coverage' → logprob: -3.5526247024536133
    7. 'connected' → logprob: -3.5526247024536133
    8. ' cont' → logprob: -3.6776247024536133
    9. ' no' → logprob: -3.6776247024536133
    10. '   ' → logprob: -4.177624702453613

Token 232: ' repeating' (ID: 74481)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.765623152256012
    2. 'over' → logprob: -1.0156230926513672
    3. 're' → logprob: -3.765623092651367
    4. ' overlaps' → logprob: -4.140623092651367
    5. ' repeats' → logprob: -4.390623092651367
    6. 'region' → logprob: -4.640623092651367
    7. '   ' → logprob: -4.640623092651367
    8. ' overlapping' → logprob: -4.640623092651367
    9. 't' → logprob: -4.640623092651367
    10. ' duplicates' → logprob: -4.890623092651367

Token 233: ' same' (ID: 2684)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7349352836608887
    2. ' ' → logprob: -1.2349352836608887
    3. ' _' → logprob: -2.7349352836608887
    4. '<|end|>' → logprob: -2.9849352836608887
    5. 's' → logprob: -3.3599352836608887
    6. ')' → logprob: -4.234935283660889
    7. '_s' → logprob: -4.734935283660889
    8. '_live' → logprob: -5.359935283660889
    9. ' )' → logprob: -5.609935283660889
    10. ' subsets' → logprob: -5.609935283660889

Token 234: ' region' (ID: 7967)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.2777429223060608
    2. ' region' → logprob: -1.527742862701416
    3. 'regions' → logprob: -4.152742862701416
    4. ' regions' → logprob: -5.652742862701416
    5. ' ' → logprob: -6.277742862701416
    6. ' day' → logprob: -7.277742862701416
    7. 'day' → logprob: -7.402742862701416
    8. '   ' → logprob: -7.527742862701416
    9. 'space' → logprob: -7.902742862701416
    10. '_region' → logprob: -8.402743339538574

Token 235: ' same' (ID: 2684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7571655511856079
    2. '
' → logprob: -0.8821655511856079
    3. '<|end|>' → logprob: -2.3821654319763184
    4. '        
' → logprob: -4.007165431976318
    5. ' for' → logprob: -6.882165431976318
    6. '<|end|>' → logprob: -7.007165431976318
    7. '        ' → logprob: -7.132165431976318
    8. ' ' → logprob: -7.757165431976318
    9. 'for' → logprob: -7.882165431976318
    10. ' 
' → logprob: -7.882165431976318

Token 236: ' day' (ID: 2163)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.4763702154159546
    2. ' day' → logprob: -0.9763702154159546
    3. 'line' → logprob: -7.226370334625244
    4. ' line' → logprob: -8.101369857788086
    5. 'live' → logprob: -8.226369857788086
    6. 'region' → logprob: -8.476369857788086
    7. '_day' → logprob: -8.851369857788086
    8. ' ' → logprob: -8.851369857788086
    9. ' live' → logprob: -9.351369857788086
    10. ' region' → logprob: -10.288869857788086

Token 237: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4910236597061157
    2. '<|end|>' → logprob: -1.3660236597061157
    3. '
' → logprob: -2.116023540496826
    4. '        
' → logprob: -5.366023540496826
    5. '<|end|>' → logprob: -6.366023540496826
    6. '#' → logprob: -6.741023540496826
    7. ' ' → logprob: -6.741023540496826
    8. '        ' → logprob: -7.116023540496826
    9. ' for' → logprob: -7.241023540496826
    10. 'for' → logprob: -8.366024017333984

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04807828739285469
    2. '        
' → logprob: -3.4230782985687256
    3. '<|end|>' → logprob: -5.1730780601501465
    4. '
' → logprob: -5.9230780601501465
    5. '   ' → logprob: -6.7980780601501465
    6. ' 
' → logprob: -7.2980780601501465
    7. ' ' → logprob: -7.4230780601501465
    8. '        ' → logprob: -7.5480780601501465
    9. '\n' → logprob: -8.048078536987305
    10. ',' → logprob: -8.048078536987305

Token 239: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07766477018594742
    2. '<|end|>' → logprob: -2.827664852142334
    3. '        
' → logprob: -4.827664852142334
    4. '#' (adapté à ' #') → logprob: -6.452664852142334
    5. '
' → logprob: -6.577664852142334
    6. ' ' → logprob: -6.577664852142334
    7. '        ' → logprob: -7.452664852142334
    8. '   ' → logprob: -7.452664852142334
    9. ' for' → logprob: -7.827664852142334
    10. '<|end|>' → logprob: -7.952664852142334

Token 240: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4516603946685791
    2. '
' → logprob: -1.576660394668579
    3. '#' → logprob: -2.826660394668579
    4. '        
' → logprob: -3.201660394668579
    5. 'for' → logprob: -3.701660394668579
    6. ' for' → logprob: -4.45166015625
    7. '        ' → logprob: -5.45166015625
    8. ' 
' → logprob: -5.57666015625
    9. '   ' → logprob: -6.45166015625
    10. '<|end|>' → logprob: -6.45166015625

Token 241: ' adjacency' (ID: 177015)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9817631244659424
    2. 'for' → logprob: -1.3567631244659424
    3. '#' → logprob: -2.2317631244659424
    4. ' #' → logprob: -2.6067631244659424
    5. '       ' → logprob: -2.9817631244659424
    6. '<|end|>' → logprob: -3.3567631244659424
    7. '
' → logprob: -3.4817631244659424
    8. '        ' → logprob: -4.106762886047363
    9. 'from' → logprob: -5.106762886047363
    10. ' ' → logprob: -5.106762886047363

Token 242: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21068225800991058
    2. ' =' → logprob: -2.7106821537017822
    3. 's' → logprob: -2.9606821537017822
    4. '=' → logprob: -4.085682392120361
    5. ')' → logprob: -4.210682392120361
    6. ' ' → logprob: -4.710682392120361
    7. '_list' → logprob: -4.960682392120361
    8. ',' → logprob: -5.085682392120361
    9. '_matrix' → logprob: -5.335682392120361
    10. '[' → logprob: -5.460682392120361

Token 243: ' linear' (ID: 23876)
  Prédit: ' defined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defined' → logprob: -1.3464372158050537
    2. ' E' → logprob: -1.9714372158050537
    3. 'E' → logprob: -2.2214372158050537
    4. 'defined' → logprob: -2.3464372158050537
    5. ' lambda' → logprob: -2.4714372158050537
    6. '[' → logprob: -2.9714372158050537
    7. ' given' → logprob: -2.9714372158050537
    8. ' ' → logprob: -3.9714372158050537
    9. 'lambda' → logprob: -4.096437454223633
    10. ' represented' → logprob: -4.096437454223633

Token 244: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.267591655254364
    2. '<|end|>' → logprob: -2.017591714859009
    3. '
' → logprob: -2.517591714859009
    4. '        
' → logprob: -4.14259147644043
    5. '<|end|>' → logprob: -6.64259147644043
    6. '        ' → logprob: -7.01759147644043
    7. ',' → logprob: -8.14259147644043
    8. ' for' → logprob: -8.14259147644043
    9. ' ' → logprob: -8.14259147644043
    10. '#' → logprob: -8.26759147644043

Token 245: ' region' (ID: 7967)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5313979387283325
    2. '<|end|>' → logprob: -1.6563979387283325
    3. 'for' → logprob: -2.156397819519043
    4. '#' → logprob: -3.656397819519043
    5. ' ' → logprob: -4.031397819519043
    6. ' #' → logprob: -4.531397819519043
    7. '0' → logprob: -4.656397819519043
    8. 'def' → logprob: -4.656397819519043
    9. ' i' → logprob: -5.781397819519043
    10. ' def' → logprob: -6.156397819519043

Token 246: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5040952563285828
    2. 'i' → logprob: -1.5040953159332275
    3. 's' → logprob: -2.0040953159332275
    4. '[i' → logprob: -4.129095077514648
    5. ' j' → logprob: -5.254095077514648
    6. ' ' → logprob: -5.504095077514648
    7. '0' → logprob: -5.629095077514648
    8. ' s' → logprob: -5.879095077514648
    9. ' indices' → logprob: -6.254095077514648
    10. 'j' → logprob: -6.879095077514648

Token 247: ' connected' (ID: 12079)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.866147518157959
    2. '-' → logprob: -1.116147518157959
    3. '+' → logprob: -2.991147518157959
    4. ',' → logprob: -3.241147518157959
    5. ' +' → logprob: -3.491147518157959
    6. ' and' → logprob: -3.491147518157959
    7. ' ==' → logprob: -3.491147518157959
    8. '<|end|>' → logprob: -3.491147518157959
    9. ' ' → logprob: -4.616147518157959
    10. '==' → logprob: -5.241147518157959

Token 248: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3594153821468353
    2. 'to' → logprob: -1.4844154119491577
    3. ' only' → logprob: -2.734415292739868
    4. 'only' → logprob: -4.984415531158447
    5. 'i' → logprob: -6.359415531158447
    6. ' with' → logprob: -7.609415531158447
    7. ' i' → logprob: -7.609415531158447
    8. ' ' → logprob: -8.609415054321289
    9. '-' → logprob: -8.984415054321289
    10. ',' → logprob: -8.984415054321289

Token 249: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5773995518684387
    2. 'i' → logprob: -0.8273995518684387
    3. '[i' → logprob: -7.577399730682373
    4. ' regions' → logprob: -8.202399253845215
    5. 'region' → logprob: -8.452399253845215
    6. ' region' → logprob: -8.827399253845215
    7. 'regions' → logprob: -9.327399253845215
    8. ' ' → logprob: -9.702399253845215
    9. ' adjacent' → logprob: -10.327399253845215
    10. ' [' → logprob: -11.452399253845215

Token 250: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5635899305343628
    2. ',' → logprob: -0.9385899305343628
    3. ' and' → logprob: -4.063590049743652
    4. 'and' → logprob: -5.313590049743652
    5. ' ' → logprob: -5.563590049743652
    6. ' -' → logprob: -5.813590049743652
    7. '+' → logprob: -6.063590049743652
    8. ' i' → logprob: -6.188590049743652
    9. 'i' → logprob: -6.438590049743652
    10. ' ,' → logprob: -6.438590049743652

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014991754665970802
    2. ' ' → logprob: -4.264991760253906
    3. 'i' → logprob: -7.764991760253906
    4. ' i' → logprob: -8.139991760253906
    5. '+' → logprob: -9.389991760253906
    6. '(i' → logprob: -12.514991760253906
    7. '0' → logprob: -12.764991760253906
    8. ' (' → logprob: -13.014991760253906
    9. '(' → logprob: -13.014991760253906
    10. '-' → logprob: -13.139991760253906

Token 252: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8296423554420471
    2. '       ' → logprob: -0.8296423554420471
    3. '        
' → logprob: -2.5796422958374023
    4. '<|end|>' → logprob: -3.4546422958374023
    5. '        ' → logprob: -4.829642295837402
    6. ',' → logprob: -5.704642295837402
    7. ' ' → logprob: -6.829642295837402
    8. ')' → logprob: -7.079642295837402
    9. ' and' → logprob: -7.329642295837402
    10. ' 
' → logprob: -7.454642295837402

Token 253: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4741944968700409
    2. ' i' → logprob: -0.9741945266723633
    3. ' ' → logprob: -9.599194526672363
    4. ' ' → logprob: -10.224194526672363
    5. '   ' → logprob: -12.099194526672363
    6. '
' → logprob: -12.849194526672363
    7. ' 
' → logprob: -13.599194526672363
    8. '	i' → logprob: -13.974194526672363
    9. '_i' → logprob: -14.724194526672363
    10. '(i' → logprob: -14.724194526672363

Token 254: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.748331606388092
    2. ',' → logprob: -1.9983315467834473
    3. ' +' → logprob: -2.3733315467834473
    4. ')' → logprob: -2.4983315467834473
    5. ',
' → logprob: -3.3733315467834473
    6. ' and' → logprob: -3.8733315467834473
    7. '+
' → logprob: -3.8733315467834473
    8. '       ' → logprob: -4.248331546783447
    9. '```' → logprob: -4.248331546783447
    10. '
' → logprob: -4.498331546783447

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004642899613827467
    2. ' ' → logprob: -5.629642963409424
    3. '0' → logprob: -7.129642963409424
    4. 'i' → logprob: -8.629642486572266
    5. ' i' → logprob: -10.504642486572266
    6. '   ' → logprob: -11.254642486572266
    7. '+' → logprob: -12.379642486572266
    8. '  ' → logprob: -13.129642486572266
    9. '
' → logprob: -13.129642486572266
    10. '```' → logprob: -13.254642486572266

Token 256: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2747522294521332
    2. '
' → logprob: -1.6497522592544556
    3. '<|end|>' → logprob: -3.274752140045166
    4. '        
' → logprob: -4.899752140045166
    5. '<|end|>' → logprob: -7.399752140045166
    6. '        ' → logprob: -8.274752616882324
    7. '\' → logprob: -8.399752616882324
    8. '   ' → logprob: -8.399752616882324
    9. ',' → logprob: -8.524752616882324
    10. '\n' → logprob: -8.649752616882324

Token 257: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5161588788032532
    2. '<|end|>' → logprob: -1.1411588191986084
    3. '
' → logprob: -2.7661588191986084
    4. '        
' → logprob: -5.3911590576171875
    5. ' ' → logprob: -5.7661590576171875
    6. '<|end|>' → logprob: -6.0161590576171875
    7. '#' → logprob: -6.1411590576171875
    8. '        ' → logprob: -6.3911590576171875
    9. '\' → logprob: -6.3911590576171875
    10. ',' → logprob: -7.0161590576171875

Token 258: 'except' (ID: 25035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016596360132098198
    2. ' )' → logprob: -4.39159631729126
    3. '       ' → logprob: -5.76659631729126
    4. ')
' → logprob: -7.14159631729126
    5. ' )
' → logprob: -9.766596794128418
    6. '   ' → logprob: -10.141596794128418
    7. '#' → logprob: -11.766596794128418
    8. '\n' → logprob: -11.891596794128418
    9. '```' → logprob: -12.016596794128418
    10. '<|end|>' → logprob: -12.391596794128418

Token 259: ' edges' (ID: 22569)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7317678928375244
    2. ' at' → logprob: -1.3567678928375244
    3. ' for' → logprob: -1.7317678928375244
    4. 'for' → logprob: -2.9817678928375244
    5. ' ' → logprob: -5.106767654418945
    6. 'at' → logprob: -5.356767654418945
    7. ' edges' → logprob: -5.856767654418945
    8. ' first' → logprob: -5.981767654418945
    9. 'edges' → logprob: -5.981767654418945
    10. ' the' → logprob: -5.981767654418945

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002770405262708664
    2. ')
' → logprob: -6.00277042388916
    3. ' )' → logprob: -9.25277042388916
    4. ').' → logprob: -9.62777042388916
    5. '       ' → logprob: -9.87777042388916
    6. '   ' → logprob: -10.75277042388916
    7. ')

' → logprob: -11.37777042388916
    8. ',' → logprob: -11.62777042388916
    9. '.' → logprob: -12.37777042388916
    10. '#' → logprob: -12.37777042388916

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19918715953826904
    2. '
' → logprob: -2.0741872787475586
    3. '<|end|>' → logprob: -3.5741872787475586
    4. '        
' → logprob: -3.8241872787475586
    5. ' for' → logprob: -6.949187278747559
    6. '   ' → logprob: -7.574187278747559
    7. '<|end|>' → logprob: -7.699187278747559
    8. 'for' → logprob: -7.824187278747559
    9. '    
' → logprob: -7.949187278747559
    10. 'def' → logprob: -8.074187278747559

Token 262: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6395456194877625
    2. '<|end|>' → logprob: -0.8895456194877625
    3. '
' → logprob: -3.8895456790924072
    4. '        
' → logprob: -4.389545440673828
    5. ' 
' → logprob: -4.764545440673828
    6. ' ' → logprob: -5.264545440673828
    7. '\n' → logprob: -6.139545440673828
    8. '<|end|>' → logprob: -6.389545440673828
    9. ' for' → logprob: -6.514545440673828
    10. '#' (adapté à ' #') → logprob: -6.764545440673828

Token 263: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49447840452194214
    2. '       ' → logprob: -1.369478464126587
    3. '#' → logprob: -3.119478464126587
    4. 'dp' → logprob: -3.869478464126587
    5. '        
' → logprob: -3.994478464126587
    6. 'for' → logprob: -4.619478225708008
    7. ' for' → logprob: -5.119478225708008
    8. 'def' → logprob: -5.244478225708008
    9. 'from' → logprob: -5.369478225708008
    10. ' 
' → logprob: -5.494478225708008

Token 264: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5939412713050842
    2. 'for' → logprob: -1.7189412117004395
    3. 'dp' → logprob: -2.5939412117004395
    4. 'from' → logprob: -3.0939412117004395
    5. ' #' → logprob: -3.2189412117004395
    6. ' for' → logprob: -3.4689412117004395
    7. '       ' → logprob: -3.4689412117004395
    8. 'def' → logprob: -4.3439412117004395
    9. ' from' → logprob: -5.4689412117004395
    10. 'possible' → logprob: -5.4689412117004395

Token 265: ' subset' (ID: 58845)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.13666650652885437
    2. 'j' → logprob: -2.1366665363311768
    3. ' day' → logprob: -5.886666297912598
    4. ' each' → logprob: -6.261666297912598
    5. ' ' → logprob: -6.636666297912598
    6. ' i' → logprob: -6.761666297912598
    7. 'each' → logprob: -7.386666297912598
    8. ' region' → logprob: -7.636666297912598
    9. ' d' → logprob: -8.011666297912598
    10. 'i' → logprob: -8.386666297912598

Token 266: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4647616147994995
    2. 's' → logprob: -1.5897616147994995
    3. ' =' → logprob: -1.5897616147994995
    4. ',' → logprob: -2.089761734008789
    5. ' ' → logprob: -2.714761734008789
    6. ' ,' → logprob: -3.089761734008789
    7. '<|end|>' → logprob: -3.339761734008789
    8. ' _' → logprob: -3.589761734008789
    9. ' of' → logprob: -4.089761734008789
    10. ' in' → logprob: -4.089761734008789

Token 267: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.4322355091571808
    2. ' regions' → logprob: -1.0572354793548584
    3. ' live' → logprob: -6.8072357177734375
    4. 'live' → logprob: -8.057235717773438
    5. 'adj' → logprob: -8.057235717773438
    6. ' i' → logprob: -8.432235717773438
    7. ' days' → logprob: -8.432235717773438
    8. 'region' → logprob: -8.807235717773438
    9. 'i' → logprob: -9.182235717773438
    10. ' the' → logprob: -9.369735717773438

Token 268: ' selected' (ID: 6386)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.6084951758384705
    2. ',' → logprob: -0.8584951758384705
    3. ' s' → logprob: -4.358495235443115
    4. ' ' → logprob: -5.483495235443115
    5. 's' → logprob: -5.483495235443115
    6. ' S' → logprob: -5.608495235443115
    7. ' with' → logprob: -6.733495235443115
    8. ',
' → logprob: -6.858495235443115
    9. ' :' → logprob: -6.858495235443115
    10. ' of' → logprob: -6.983495235443115

Token 269: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12756997346878052
    2. ' ,' → logprob: -2.2525699138641357
    3. ' for' → logprob: -5.627570152282715
    4. ':' → logprob: -5.752570152282715
    5. ',
' → logprob: -5.877570152282715
    6. ' on' → logprob: -6.377570152282715
    7. ' ' → logprob: -7.252570152282715
    8. 'for' → logprob: -8.002570152282715
    9. '_' → logprob: -8.502570152282715
    10. 's' → logprob: -8.627570152282715

Token 270: ' day' (ID: 2163)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0747357606887817
    2. ' j' → logprob: -1.0747357606887817
    3. ' day' → logprob: -1.3247357606887817
    4. 'day' → logprob: -3.199735641479492
    5. ' range' → logprob: -5.824735641479492
    6. '[j' → logprob: -6.074735641479492
    7. ' ' → logprob: -6.574735641479492
    8. 'range' → logprob: -6.949735641479492
    9. ' line' → logprob: -7.199735641479492
    10. '   ' → logprob: -7.699735641479492

Token 271: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5553845763206482
    2. 'j' → logprob: -1.430384635925293
    3. ' ' → logprob: -2.180384635925293
    4. ',' → logprob: -3.930384635925293
    5. '_j' → logprob: -4.055384635925293
    6. ' ,' → logprob: -4.680384635925293
    7. '_' → logprob: -5.055384635925293
    8. '    ' → logprob: -5.305384635925293
    9. ' ' → logprob: -5.555384635925293
    10. ',j' → logprob: -5.805384635925293

Token 272: ' performance' (ID: 6198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018137075006961823
    2. ':' → logprob: -5.143136978149414
    3. ' ,' → logprob: -5.143136978149414
    4. ',
' → logprob: -6.268136978149414
    5. '<|end|>' → logprob: -6.268136978149414
    6. ' ' → logprob: -8.143136978149414
    7. ' for' → logprob: -8.143136978149414
    8. '#' → logprob: -8.393136978149414
    9. ')' → logprob: -8.393136978149414
    10. '<|end|>' → logprob: -8.893136978149414

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035536568611860275
    2. 's' → logprob: -3.785536527633667
    3. ':' → logprob: -4.910536766052246
    4. ' ,' → logprob: -5.910536766052246
    5. ',
' → logprob: -7.410536766052246
    6. ')' → logprob: -7.660536766052246
    7. ' s' → logprob: -8.910536766052246
    8. ' ' → logprob: -9.285536766052246
    9. '       ' → logprob: -9.285536766052246
    10. '   ' → logprob: -9.285536766052246

Token 274: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6534050107002258
    2. ' we' → logprob: -2.278404951095581
    3. ' continue' → logprob: -2.403404951095581
    4. 'we' → logprob: -2.528404951095581
    5. 'continue' → logprob: -3.153404951095581
    6. ' the' → logprob: -3.278404951095581
    7. ' #' → logprob: -3.403404951095581
    8. 'the' → logprob: -3.778404951095581
    9. '       ' → logprob: -4.02840518951416
    10. 'pass' → logprob: -4.77840518951416

Token 275: ' regions' (ID: 21043)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.1158040761947632
    2. '#' → logprob: -1.3658040761947632
    3. ' #' → logprob: -2.7408041954040527
    4. ' total' → logprob: -2.8658041954040527
    5. ' next' → logprob: -3.3658041954040527
    6. ' sum' → logprob: -4.115804195404053
    7. ' ' → logprob: -4.115804195404053
    8. 'code' → logprob: -4.115804195404053
    9. ' subsets' → logprob: -4.115804195404053
    10. ' subset' → logprob: -4.240804195404053

Token 276: ' must' (ID: 2804)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.8544825315475464
    2. 'must' → logprob: -1.4794825315475464
    3. ' selected' → logprob: -2.604482650756836
    4. ' must' → logprob: -2.604482650756836
    5. ' are' → logprob: -3.479482650756836
    6. ' in' → logprob: -3.854482650756836
    7. 'chosen' → logprob: -4.354482650756836
    8. 'that' → logprob: -4.479482650756836
    9. 'in' → logprob: -4.604482650756836
    10. 'can' → logprob: -4.729482650756836

Token 277: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.8121246695518494
    2. 'be' → logprob: -1.4371247291564941
    3. ' form' → logprob: -1.6871247291564941
    4. 'form' → logprob: -2.062124729156494
    5. ' all' → logprob: -5.937124729156494
    6. 'all' → logprob: -6.937124729156494
    7. ' ' → logprob: -7.437124729156494
    8. 'have' → logprob: -7.437124729156494
    9. '   ' → logprob: -7.812124729156494
    10. ' have' → logprob: -8.312124252319336

Token 278: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.7614218592643738
    2. ' connected' → logprob: -1.7614219188690186
    3. 'sorted' → logprob: -2.1364219188690186
    4. 'all' → logprob: -2.5114219188690186
    5. ' all' → logprob: -2.7614219188690186
    6. ' contiguous' → logprob: -3.3864219188690186
    7. ' sorted' → logprob: -3.8864219188690186
    8. 'adj' → logprob: -4.2614216804504395
    9. 'cont' → logprob: -4.5114216804504395
    10. 'con' → logprob: -5.1364216804504395

Token 279: ' intervals' (ID: 49900)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38299399614334106
    2. 'for' → logprob: -1.8829939365386963
    3. '
' → logprob: -2.3829939365386963
    4. '#' → logprob: -3.8829939365386963
    5. 'def' → logprob: -3.8829939365386963
    6. ' for' → logprob: -4.632994174957275
    7. '        
' → logprob: -5.132994174957275
    8. 'from' → logprob: -5.757994174957275
    9. '   ' → logprob: -5.882994174957275
    10. 'if' → logprob: -7.257994174957275

Token 280: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1977161467075348
    2. '
' → logprob: -1.9477161169052124
    3. '        
' → logprob: -3.822716236114502
    4. '<|end|>' → logprob: -4.447716236114502
    5. '<|end|>' → logprob: -7.322716236114502
    6. ',' → logprob: -7.822716236114502
    7. '  
' → logprob: -8.822715759277344
    8. '        
        
' → logprob: -8.947715759277344
    9. '#' → logprob: -9.072715759277344
    10. '    
' → logprob: -9.072715759277344

Token 281: ' i' (ID: 575)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1791459619998932
    2. ' the' → logprob: -2.1791460514068604
    3. 'j' → logprob: -3.6791460514068604
    4. 'range' → logprob: -5.304145812988281
    5. 'region' → logprob: -5.429145812988281
    6. 'regions' → logprob: -5.804145812988281
    7. ' j' → logprob: -5.929145812988281
    8. 'indices' → logprob: -6.304145812988281
    9. 'terms' → logprob: -6.429145812988281
    10. 'line' → logprob: -6.929145812988281

Token 282: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05590818449854851
    2. '
' → logprob: -3.555908203125
    3. '        
' → logprob: -4.430908203125
    4. '<|end|>' → logprob: -4.680908203125
    5. '#' → logprob: -6.305908203125
    6. 'def' → logprob: -7.805908203125
    7. '   ' → logprob: -8.180908203125
    8. '        
        
' → logprob: -8.180908203125
    9. ',' → logprob: -8.180908203125
    10. 'from' → logprob: -8.305908203125

Token 283: 'since' (ID: 21910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03764008730649948
    2. ' )' → logprob: -5.41264009475708
    3. ' contiguous' → logprob: -5.53764009475708
    4. 'and' → logprob: -5.91264009475708
    5. ')
' → logprob: -5.91264009475708
    6. ' and' → logprob: -5.91264009475708
    7. '       ' → logprob: -6.16264009475708
    8. '#' → logprob: -6.28764009475708
    9. '   ' → logprob: -6.41264009475708
    10. 'the' → logprob: -6.78764009475708

Token 284: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.3500378131866455
    2. 'the' → logprob: -1.7250378131866455
    3. ' the' → logprob: -2.2250378131866455
    4. ' adjacency' → logprob: -2.3500378131866455
    5. 'regions' → logprob: -2.4750378131866455
    6. 'they' → logprob: -2.6000378131866455
    7. ' they' → logprob: -3.3500378131866455
    8. 'E' → logprob: -3.8500378131866455
    9. 'live' → logprob: -3.8500378131866455
    10. 'linear' → logprob: -4.100037574768066

Token 285: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48276233673095703
    2. ' is' → logprob: -1.232762336730957
    3. ' )' → logprob: -3.857762336730957
    4. 'is' → logprob: -3.982762336730957
    5. ' implies' → logprob: -4.232762336730957
    6. ' of' → logprob: -4.732762336730957
    7. ' in' → logprob: -5.732762336730957
    8. '),' → logprob: -6.232762336730957
    9. ' means' → logprob: -6.232762336730957
    10. ' ensures' → logprob: -6.357762336730957

Token 286: ' linear' (ID: 23876)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.35187840461730957
    2. ' linear' → logprob: -1.2268784046173096
    3. 'line' → logprob: -6.2268781661987305
    4. ' ' → logprob: -8.35187816619873
    5. '   ' → logprob: -8.60187816619873
    6. '1' → logprob: -8.72687816619873
    7. 'a' → logprob: -8.72687816619873
    8. 'continuous' → logprob: -8.97687816619873
    9. ' a' → logprob: -9.10187816619873
    10. ' line' → logprob: -9.60187816619873

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006481591612100601
    2. ',' → logprob: -5.881481647491455
    3. ' )' → logprob: -6.131481647491455
    4. '):' → logprob: -7.381481647491455
    5. ')
' → logprob: -8.506481170654297
    6. ').' → logprob: -8.506481170654297
    7. '):
' → logprob: -9.506481170654297
    8. ',
' → logprob: -9.631481170654297
    9. '),' → logprob: -9.881481170654297
    10. '   ' → logprob: -10.131481170654297

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36721307039260864
    2. '
' → logprob: -1.4922130107879639
    3. '        
' → logprob: -2.617213010787964
    4. '<|end|>' → logprob: -6.242213249206543
    5. ' 
' → logprob: -6.492213249206543
    6. '  
' → logprob: -7.117213249206543
    7. '#' → logprob: -7.617213249206543
    8. '        ' → logprob: -7.617213249206543
    9. '        
        
' → logprob: -7.617213249206543
    10. '\' → logprob: -7.742213249206543

Token 289: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08342805504798889
    2. '
' → logprob: -2.958428144454956
    3. '        
' → logprob: -3.958428144454956
    4. 'for' → logprob: -6.208427906036377
    5. ' for' → logprob: -6.458427906036377
    6. ' 
' → logprob: -6.583427906036377
    7. '#' (adapté à ' #') → logprob: -6.708427906036377
    8. '  
' → logprob: -7.583427906036377
    9. '   ' → logprob: -7.958427906036377
    10. '    
' → logprob: -8.333428382873535

Token 290: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12180604785680771
    2. 'for' → logprob: -3.1218061447143555
    3. ' for' → logprob: -3.6218061447143555
    4. '#' → logprob: -3.9968061447143555
    5. '        
' → logprob: -5.1218061447143555
    6. '
' → logprob: -5.3718061447143555
    7. ' #' → logprob: -6.2468061447143555
    8. '   ' → logprob: -6.9968061447143555
    9. ' 
' → logprob: -7.1218061447143555
    10. 'max' → logprob: -7.1218061447143555

Token 291: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49986982345581055
    2. '#' → logprob: -1.2498698234558105
    3. 'for' → logprob: -2.9998698234558105
    4. '
' → logprob: -3.4998698234558105
    5. '        
' → logprob: -5.3748698234558105
    6. 'max' → logprob: -5.4998698234558105
    7. '   ' → logprob: -6.3748698234558105
    8. 'For' → logprob: -6.4998698234558105
    9. ' #' → logprob: -6.6248698234558105
    10. ' for' → logprob: -6.6248698234558105

Token 292: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.582345962524414
    2. ' contiguous' → logprob: -1.832345962524414
    3. ' ' → logprob: -2.707345962524414
    4. '(' → logprob: -2.707345962524414
    5. ' all' → logprob: -2.832345962524414
    6. ' the' → logprob: -3.332345962524414
    7. '  ' → logprob: -3.582345962524414
    8. ' in' → logprob: -3.582345962524414
    9. ' (' → logprob: -3.582345962524414
    10. ' intervals' → logprob: -3.707345962524414

Token 293: ' moves' (ID: 19523)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.47840264439582825
    2. 'be' → logprob: -1.1034026145935059
    3. 'only' → logprob: -3.978402614593506
    4. ' only' → logprob: -4.728402614593506
    5. 'use' → logprob: -5.853402614593506
    6. 'jump' → logprob: -6.853402614593506
    7. ' ' → logprob: -6.978402614593506
    8. '   ' → logprob: -6.978402614593506
    9. ' use' → logprob: -7.103402614593506
    10. 'skip' → logprob: -7.228402614593506

Token 294: ' start' (ID: 1604)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.3401352167129517
    2. '_' → logprob: -1.8401352167129517
    3. ' between' → logprob: -2.090135097503662
    4. ' through' → logprob: -2.715135097503662
    5. '_to' → logprob: -2.840135097503662
    6. 's' → logprob: -3.215135097503662
    7. ' on' → logprob: -3.340135097503662
    8. 'to' → logprob: -3.465135097503662
    9. ' ' → logprob: -3.590135097503662
    10. '_between' → logprob: -3.715135097503662

Token 295: ' in' (ID: 306)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3957163393497467
    2. ' to' → logprob: -3.020716428756714
    3. 'to' → logprob: -3.020716428756714
    4. ' from' → logprob: -3.145716428756714
    5. ' on' → logprob: -3.270716428756714
    6. '=' → logprob: -3.645716428756714
    7. ' =' → logprob: -4.020716190338135
    8. ',' → logprob: -4.395716190338135
    9. 'and' → logprob: -4.395716190338135
    10. '_' → logprob: -4.645716190338135

Token 296: ' one' (ID: 1001)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.0928421020507812
    2. ' any' → logprob: -1.7178421020507812
    3. 'i' → logprob: -2.2178421020507812
    4. 'the' → logprob: -2.2178421020507812
    5. ' the' → logprob: -3.0928421020507812
    6. 'either' → logprob: -3.2178421020507812
    7. ' one' → logprob: -3.2178421020507812
    8. 'one' → logprob: -3.7178421020507812
    9. ' i' → logprob: -3.8428421020507812
    10. ' either' → logprob: -3.9678421020507812

Token 297: ' region' (ID: 7967)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9570949673652649
    2. ' region' → logprob: -0.9570949673652649
    3. ' space' → logprob: -3.45709490776062
    4. ' of' → logprob: -3.45709490776062
    5. 'region' → logprob: -3.58209490776062
    6. ' day' → logprob: -3.83209490776062
    7. ' position' → logprob: -4.082095146179199
    8. ' ' → logprob: -4.207095146179199
    9. '   ' → logprob: -4.332095146179199
    10. ' contiguous' → logprob: -4.457095146179199

Token 298: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14086812734603882
    2. '        
' → logprob: -3.1408681869506836
    3. '
' → logprob: -3.5158681869506836
    4. '<|end|>' → logprob: -3.6408681869506836
    5. ' for' → logprob: -5.390868186950684
    6. ',' → logprob: -5.515868186950684
    7. '#' → logprob: -5.890868186950684
    8. ' ' → logprob: -6.265868186950684
    9. '.' → logprob: -6.390868186950684
    10. '        ' → logprob: -6.390868186950684

Token 299: ' move' (ID: 5275)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.6051239967346191
    2. 'end' → logprob: -0.8551239967346191
    3. ' go' → logprob: -4.230123996734619
    4. ' ' → logprob: -6.480123996734619
    5. 'go' → logprob: -6.605123996734619
    6. ' move' → logprob: -6.605123996734619
    7. ' continue' → logprob: -6.605123996734619
    8. 'continue' → logprob: -6.605123996734619
    9. 'expand' → logprob: -6.605123996734619
    10. 'extend' → logprob: -6.730123996734619

Token 300: ' to' (ID: 316)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.9049502611160278
    2. ' to' → logprob: -1.0299502611160278
    3. 'to' → logprob: -3.0299501419067383
    4. 'through' → logprob: -3.4049501419067383
    5. ' on' → logprob: -3.5299501419067383
    6. 'from' → logprob: -3.7799501419067383
    7. '<|end|>' → logprob: -3.7799501419067383
    8. 's' → logprob: -4.279950141906738
    9. ' ' → logprob: -4.654950141906738
    10. ')' → logprob: -4.654950141906738

Token 301: ' neighbors' (ID: 31655)
  Prédit: 'another'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'another' → logprob: -0.3776590824127197
    2. 'the' → logprob: -2.2526590824127197
    3. ' another' → logprob: -2.2526590824127197
    4. ' the' → logprob: -3.3776590824127197
    5. 'next' → logprob: -3.6276590824127197
    6. ' next' → logprob: -4.752658843994141
    7. 'adj' → logprob: -5.002658843994141
    8. 'any' → logprob: -5.127658843994141
    9. 'a' → logprob: -5.752658843994141
    10. ' contiguous' → logprob: -5.877658843994141

Token 302: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026872480288147926
    2. '        
' → logprob: -4.651872634887695
    3. '<|end|>' → logprob: -4.776872634887695
    4. '
' → logprob: -5.276872634887695
    5. ',' → logprob: -7.526872634887695
    6. '#' → logprob: -7.776872634887695
    7. '<|end|>' → logprob: -8.026872634887695
    8. '   ' → logprob: -8.026872634887695
    9. ')' → logprob: -8.526872634887695
    10. ' for' → logprob: -8.651872634887695

Token 303: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02476731687784195
    2. '        
' → logprob: -4.8997673988342285
    3. '#' → logprob: -5.2747673988342285
    4. '           ' → logprob: -6.2747673988342285
    5. ' continue' → logprob: -6.8997673988342285
    6. ' 
' → logprob: -6.8997673988342285
    7. ' ' → logprob: -7.0247673988342285
    8. ' and' → logprob: -7.1497673988342285
    9. ' for' → logprob: -7.1497673988342285
    10. '
' → logprob: -7.2747673988342285

Token 304: ' multiple' (ID: 7598)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36462122201919556
    2. ' not' → logprob: -1.7396211624145508
    3. ' the' → logprob: -3.364621162414551
    4. ' #' → logprob: -3.989621162414551
    5. 'the' → logprob: -4.239621162414551
    6. 'not' → logprob: -4.364621162414551
    7. ' since' → logprob: -4.364621162414551
    8. 'since' → logprob: -5.364621162414551
    9. ' only' → logprob: -5.614621162414551
    10. '   ' → logprob: -5.739621162414551

Token 305: ' intervals' (ID: 49900)
  Prédit: ' contiguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -1.6666077375411987
    2. 's' → logprob: -1.7916077375411987
    3. ')' → logprob: -1.9166077375411987
    4. 'def' → logprob: -2.4166078567504883
    5. ' subsets' → logprob: -2.9166078567504883
    6. '_' → logprob: -3.0416078567504883
    7. ' intervals' → logprob: -3.7916078567504883
    8. '   ' → logprob: -3.9166078567504883
    9. '_ranges' → logprob: -4.041607856750488
    10. '#' → logprob: -4.041607856750488

Token 306: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3932510316371918
    2. '
' → logprob: -2.1432509422302246
    3. '#' → logprob: -3.3932509422302246
    4. '   ' → logprob: -3.5182509422302246
    5. ',' → logprob: -3.8932509422302246
    6. '        
' → logprob: -4.018250942230225
    7. ')' → logprob: -4.018250942230225
    8. 'def' → logprob: -4.768250942230225
    9. '.' → logprob: -4.893250942230225
    10. '<|end|>' → logprob: -5.143250942230225

Token 307: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5250552296638489
    2. 'not' → logprob: -0.9000552296638489
    3. ' impossible' → logprob: -8.150054931640625
    4. ' dis' → logprob: -8.400054931640625
    5. ' only' → logprob: -8.900054931640625
    6. ' never' → logprob: -8.900054931640625
    7. ' forbidden' → logprob: -9.275054931640625
    8. 'only' → logprob: -9.525054931640625
    9. 'never' → logprob: -9.650054931640625
    10. 'dis' → logprob: -9.775054931640625

Token 308: ' connected' (ID: 12079)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0725119337439537
    2. '
' → logprob: -3.822511911392212
    3. '   ' → logprob: -4.072512149810791
    4. ')' → logprob: -5.197512149810791
    5. '        
' → logprob: -5.322512149810791
    6. '<|end|>' → logprob: -5.572512149810791
    7. '#' → logprob: -6.197512149810791
    8. ' for' → logprob: -6.197512149810791
    9. 'for' → logprob: -6.322512149810791
    10. ' ' → logprob: -6.447512149810791

Token 309: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044496238231658936
    2. '
' → logprob: -4.419496059417725
    3. '        
' → logprob: -4.544496059417725
    4. 'for' → logprob: -4.794496059417725
    5. ' for' → logprob: -5.419496059417725
    6. '#' → logprob: -6.044496059417725
    7. '   ' → logprob: -6.544496059417725
    8. ' 
' → logprob: -7.294496059417725
    9. '  
' → logprob: -7.919496059417725
    10. '<|end|>' → logprob: -8.044496536254883

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08717471361160278
    2. '        
' → logprob: -3.212174654006958
    3. '
' → logprob: -3.837174654006958
    4. ' 
' → logprob: -5.087174892425537
    5. '   ' → logprob: -5.712174892425537
    6. '    
' → logprob: -6.087174892425537
    7. '  
' → logprob: -6.337174892425537
    8. '\' → logprob: -6.837174892425537
    9. '\n' → logprob: -7.087174892425537
    10. '<|end|>' → logprob: -7.087174892425537

Token 311: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1449510008096695
    2. '        
' → logprob: -3.144951105117798
    3. ' 
' → logprob: -3.644951105117798
    4. ' ' → logprob: -4.394950866699219
    5. '<|end|>' → logprob: -4.394950866699219
    6. '   ' → logprob: -5.019950866699219
    7. '
' → logprob: -5.144950866699219
    8. '\' → logprob: -5.144950866699219
    9. '  
' → logprob: -5.519950866699219
    10. '    
' → logprob: -5.644950866699219

Token 312: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04624553024768829
    2. 'for' → logprob: -4.421245574951172
    3. '#' → logprob: -4.671245574951172
    4. 'day' → logprob: -5.421245574951172
    5. ' subsets' → logprob: -5.796245574951172
    6. 'possible' → logprob: -5.921245574951172
    7. 'valid' → logprob: -6.296245574951172
    8. 'live' → logprob: -6.546245574951172
    9. ' for' → logprob: -6.671245574951172
    10. '        
' → logprob: -6.796245574951172

Token 313: ' statement' (ID: 9710)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7694657444953918
    2. ' we' → logprob: -1.644465684890747
    3. ' #' → logprob: -2.894465684890747
    4. ' the' → logprob: -2.894465684890747
    5. '       ' → logprob: -3.019465684890747
    6. 'for' → logprob: -3.394465684890747
    7. '    ' → logprob: -3.394465684890747
    8. ' ' → logprob: -3.644465684890747
    9. '        ' → logprob: -3.769465684890747
    10. '#' → logprob: -4.394465923309326

Token 314: ' says' (ID: 5003)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7916156053543091
    2. 's' → logprob: -1.541615605354309
    3. '<|end|>' → logprob: -1.791615605354309
    4. '<|end|>' → logprob: -3.0416154861450195
    5. '_' → logprob: -3.5416154861450195
    6. ' is' → logprob: -3.7916154861450195
    7. '#' → logprob: -3.9166154861450195
    8. ' continues' → logprob: -4.0416154861450195
    9. '.' → logprob: -5.5416154861450195
    10. ' was' → logprob: -5.7916154861450195

Token 315: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0768935680389404
    2. ':' → logprob: -1.5768935680389404
    3. ',' → logprob: -2.4518935680389404
    4. ' :' → logprob: -2.4518935680389404
    5. ' continue' → logprob: -3.4518935680389404
    6. ' ,' → logprob: -3.4518935680389404
    7. '<|end|>' → logprob: -3.4518935680389404
    8. ' we' → logprob: -3.5768935680389404
    9. ' that' → logprob: -3.7018935680389404
    10. ' the' → logprob: -3.8268935680389404

Token 316: 'ある' (ID: 73977)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39204075932502747
    2. 'for' → logprob: -1.892040729522705
    3. '       ' → logprob: -2.892040729522705
    4. '"' → logprob: -3.392040729522705
    5. 'continue' → logprob: -4.517040729522705
    6. ' for' → logprob: -4.767040729522705
    7. '   ' → logprob: -4.767040729522705
    8. '"""' → logprob: -4.892040729522705
    9. ' #' → logprob: -5.267040729522705
    10. ' continue' → logprob: -5.392040729522705

Token 317: '地域' (ID: 150232)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17498987913131714
    2. ' ' → logprob: -2.924989938735962
    3. ''' → logprob: -3.174989938735962
    4. ' \' → logprob: -3.424989938735962
    5. '\n' → logprob: -5.549989700317383
    6. '#' → logprob: -5.799989700317383
    7. '\' → logprob: -6.299989700317383
    8. 'の' → logprob: -6.424989700317383
    9. ')' → logprob: -6.549989700317383
    10. 's' → logprob: -6.549989700317383

Token 318: 'で' (ID: 4344)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.6870853900909424
    2. 'で' → logprob: -2.1870853900909424
    3. '<|end|>' → logprob: -2.6870853900909424
    4. 'が' → logprob: -3.0620853900909424
    5. '_' → logprob: -3.1870853900909424
    6. 'i' → logprob: -3.5620853900909424
    7. ' ' → logprob: -3.8120853900909424
    8. ' ' → logprob: -3.8120853900909424
    9. 'は' → logprob: -4.062085151672363
    10. 'を' → logprob: -4.062085151672363

Token 319: 'ライブ' (ID: 180415)
  Prédit: 'ライブ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ライブ' → logprob: -0.27270013093948364
    2. ''' → logprob: -2.397700071334839
    3. 'の' → logprob: -4.522700309753418
    4. ''s' → logprob: -4.522700309753418
    5. 'す' → logprob: -4.522700309753418
    6. ' ' → logprob: -4.897700309753418
    7. 'for' → logprob: -4.897700309753418
    8. '_' → logprob: -5.147700309753418
    9. '開催' → logprob: -5.147700309753418
    10. 'def' → logprob: -5.272700309753418

Token 320: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.32228368520736694
    2. 'が' → logprob: -1.4472837448120117
    3. '"' → logprob: -4.322283744812012
    4. 'の' → logprob: -5.072283744812012
    5. ' を' → logprob: -5.197283744812012
    6. ' "' → logprob: -5.572283744812012
    7. '_' → logprob: -6.572283744812012
    8. 'は' → logprob: -6.572283744812012
    9. ' が' → logprob: -6.697283744812012
    10. '開催' → logprob: -6.697283744812012

Token 321: '行' (ID: 6550)
  Prédit: 'でき'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'でき' → logprob: -0.14143654704093933
    2. '行' → logprob: -2.7664365768432617
    3. 'する' → logprob: -4.016436576843262
    4. '開催' → logprob: -4.516436576843262
    5. '```' → logprob: -4.641436576843262
    6. 'した' → logprob: -4.766436576843262
    7. '開' → logprob: -5.266436576843262
    8. 'し' → logprob: -6.266436576843262
    9. 'できます' → logprob: -6.391436576843262
    10. 'は' → logprob: -6.641436576843262

Token 322: 'った' (ID: 42917)
  Prédit: 'う'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'う' → logprob: -0.2914183735847473
    2. 'え' → logprob: -1.6664183139801025
    3. 'える' → logprob: -3.0414183139801025
    4. 'われ' → logprob: -4.916418552398682
    5. '```' → logprob: -5.666418552398682
    6. 'わ' → logprob: -6.416418552398682
    7. 'い' → logprob: -6.666418552398682
    8. 'お' → logprob: -6.666418552398682
    9. 'な' → logprob: -7.791418552398682
    10. '）' → logprob: -9.166418075561523

Token 323: '後' (ID: 27379)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.35183262825012207
    2. '_' → logprob: -1.601832628250122
    3. ' "' → logprob: -3.851832628250122
    4. ' ' → logprob: -4.726832389831543
    5. 'の' → logprob: -4.976832389831543
    6. 'が' → logprob: -5.226832389831543
    7. '.' → logprob: -5.476832389831543
    8. '```' → logprob: -5.601832389831543
    9. '。' → logprob: -5.851832389831543
    10. ' ' → logprob: -5.976832389831543

Token 324: '、' (ID: 1395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18833793699741364
    2. ' ,' → logprob: -2.938338041305542
    3. '、' → logprob: -3.938338041305542
    4. '"' → logprob: -4.063337802886963
    5. ' ' → logprob: -4.188337802886963
    6. 'で' → logprob: -4.563337802886963
    7. 'の' → logprob: -4.813337802886963
    8. ' "' → logprob: -5.188337802886963
    9. ' の' → logprob: -5.188337802886963
    10. ' ",' → logprob: -5.688337802886963

Token 325: '�' (ID: 11676)
  Prédit: 'その'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'その' → logprob: -1.1514769792556763
    2. '別' → logprob: -1.9014769792556763
    3. '次' → logprob: -2.4014768600463867
    4. '同' → logprob: -2.5264768600463867
    5. '\xe9\x9a' → logprob: -2.7764768600463867
    6. '他' → logprob: -3.1514768600463867
    7. 'そこ' → logprob: -3.2764768600463867
    8. 'さらに' → logprob: -3.4014768600463867
    9. ' ' → logprob: -3.5264768600463867
    10. 'また' → logprob: -3.7764768600463867

Token 326: '�' (ID: 96)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37295231223106384
    2. '_' → logprob: -1.2479523420333862
    3. '#' → logprob: -4.372952461242676
    4. '...' → logprob: -5.872952461242676
    5. '<|end|>' → logprob: -6.747952461242676
    6. ',' → logprob: -6.997952461242676
    7. ' ' → logprob: -7.247952461242676
    8. ' #' → logprob: -7.372952461242676
    9. 's' → logprob: -7.747952461242676
    10. ''' → logprob: -7.747952461242676

Token 327: '接' (ID: 9878)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14515958726406097
    2. '#' → logprob: -2.7701594829559326
    3. ' ' → logprob: -3.7701594829559326
    4. '_' → logprob: -4.020159721374512
    5. ' 
' → logprob: -5.395159721374512
    6. ' #' → logprob: -5.895159721374512
    7. ' \' → logprob: -6.020159721374512
    8. '[' → logprob: -6.395159721374512
    9. ',' → logprob: -6.395159721374512
    10. '\' → logprob: -6.645159721374512

Token 328: 'する' (ID: 39065)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3249799013137817
    2. '_' → logprob: -1.8249799013137817
    3. 'の' → logprob: -2.949979782104492
    4. 'で' → logprob: -2.949979782104492
    5. 'ん' → logprob: -3.324979782104492
    6. 'u' → logprob: -3.449979782104492
    7. 'ン' → logprob: -3.449979782104492
    8. '続' → logprob: -3.699979782104492
    9. 'x' → logprob: -3.887479782104492
    10. ' ' → logprob: -3.949979782104492

Token 329: '地域' (ID: 150232)
  Prédit: '地域'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '地域' → logprob: -1.344865083694458
    2. 'region' → logprob: -2.219865083694458
    3. 'た' → logprob: -2.344865083694458
    4. '```' → logprob: -2.719865083694458
    5. '場' → logprob: -3.219865083694458
    6. 'した' → logprob: -3.219865083694458
    7. 'い' → logprob: -3.594865083694458
    8. 'す' → logprob: -3.719865083694458
    9. 'で' → logprob: -3.844865083694458
    10. 'る' → logprob: -3.969865083694458

Token 330: 'で' (ID: 4344)
  Prédit: 'で'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'で' → logprob: -0.013273640535771847
    2. ' ' → logprob: -5.5132737159729
    3. 'が' → logprob: -5.8882737159729
    4. 'を' → logprob: -6.6382737159729
    5. 'に' → logprob: -7.2632737159729
    6. 'でも' → logprob: -7.3882737159729
    7. 'も' → logprob: -7.5132737159729
    8. 'の' → logprob: -7.8882737159729
    9. '<|end|>' → logprob: -8.013273239135742
    10. 'まで' → logprob: -8.138273239135742

Token 331: 'ライブ' (ID: 180415)
  Prédit: 'ライブ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ライブ' → logprob: -0.06689620763063431
    2. 'も' → logprob: -3.6918962001800537
    3. 'の' → logprob: -4.066896438598633
    4. ' ' → logprob: -6.066896438598633
    5. 'で' → logprob: -6.191896438598633
    6. ' live' → logprob: -6.441896438598633
    7. 'す' → logprob: -6.441896438598633
    8. 'よ' → logprob: -6.691896438598633
    9. 'を' → logprob: -6.691896438598633
    10. '続きを' → logprob: -6.816896438598633

Token 332: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.04724368080496788
    2. ' を' → logprob: -4.422243595123291
    3. '_' → logprob: -4.547243595123291
    4. 'の' → logprob: -5.547243595123291
    5. 'が' → logprob: -5.797243595123291
    6. ' ' → logprob: -6.047243595123291
    7. ' ' → logprob: -6.047243595123291
    8. '<|end|>' → logprob: -6.297243595123291
    9. '"' → logprob: -6.672243595123291
    10. '　' → logprob: -6.672243595123291

Token 333: '行' (ID: 6550)
  Prédit: '行'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '行' → logprob: -0.013542874716222286
    2. 'u' → logprob: -5.888542652130127
    3. 'を' → logprob: -6.138542652130127
    4. 'お' → logprob: -7.263542652130127
    5. 'す' → logprob: -7.388542652130127
    6. 'd' → logprob: -7.888542652130127
    7. '続' → logprob: -7.888542652130127
    8. 'う' → logprob: -7.888542652130127
    9. 'は' → logprob: -8.013543128967285
    10. '```' → logprob: -8.263543128967285

Token 334: 'える' (ID: 133169)
  Prédit: 'う'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'う' → logprob: -0.08270277082920074
    2. 'え' → logprob: -3.332702875137329
    3. 'を' → logprob: -4.45770263671875
    4. 'っ' → logprob: -4.83270263671875
    5. 'った' → logprob: -5.45770263671875
    6. 'える' → logprob: -5.83270263671875
    7. ' ' → logprob: -6.08270263671875
    8. 'い' → logprob: -6.20770263671875
    9. '続きを' → logprob: -6.20770263671875
    10. '```' → logprob: -6.20770263671875

Token 335: '場合' (ID: 72486)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6686720252037048
    2. ' ' → logprob: -1.7936720848083496
    3. '#' → logprob: -2.9186720848083496
    4. ' "' → logprob: -3.6686720848083496
    5. ' 
' → logprob: -3.7936720848083496
    6. '...' → logprob: -3.7936720848083496
    7. ' ' → logprob: -3.9186720848083496
    8. '_' → logprob: -4.04367208480835
    9. 'n' → logprob: -4.29367208480835
    10. '\n' → logprob: -4.41867208480835

Token 336: 'は' (ID: 5205)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38777783513069153
    2. 'が' → logprob: -1.7627778053283691
    3. '。' → logprob: -3.012777805328369
    4. '\n' → logprob: -4.387777805328369
    5. ' "' → logprob: -4.762777805328369
    6. '、' → logprob: -5.262777805328369
    7. 'ん' → logprob: -5.512777805328369
    8. '，' → logprob: -5.762777805328369
    9. 'す' → logprob: -5.762777805328369
    10. '
' → logprob: -5.762777805328369

Token 337: 'その' (ID: 32894)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -1.6568766832351685
    2. 'でき' → logprob: -1.6568766832351685
    3. 'た' → logprob: -2.156876564025879
    4. '、' → logprob: -2.781876564025879
    5. 'よ' → logprob: -3.281876564025879
    6. '�' → logprob: -3.406876564025879
    7. 'で' → logprob: -3.406876564025879
    8. 'が' → logprob: -3.531876564025879
    9. 'う' → logprob: -3.531876564025879
    10. 'え' → logprob: -3.781876564025879

Token 338: '地域' (ID: 150232)
  Prédit: '日'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '日' → logprob: -1.5632892847061157
    2. 'す' → logprob: -2.188289165496826
    3. 'u' → logprob: -3.313289165496826
    4. ' ' → logprob: -3.438289165496826
    5. '
' → logprob: -3.563289165496826
    6. 's' → logprob: -3.563289165496826
    7. 'が' → logprob: -3.563289165496826
    8. 'ため' → logprob: -3.563289165496826
    9. '続きを' → logprob: -3.563289165496826
    10. '続' → logprob: -3.688289165496826

Token 339: 'で' (ID: 4344)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2164441347122192
    2. '_' → logprob: -1.7164441347122192
    3. ')' → logprob: -2.3414440155029297
    4. 'の' → logprob: -2.8414440155029297
    5. ' ' → logprob: -3.2164440155029297
    6. 's' → logprob: -3.3414440155029297
    7. ''' → logprob: -3.3414440155029297
    8. ',' → logprob: -3.4664440155029297
    9. '#' → logprob: -3.7164440155029297
    10. '.' → logprob: -3.8414440155029297

Token 340: '同' (ID: 9553)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2158433198928833
    2. 'が' → logprob: -2.4658432006835938
    3. 'でき' → logprob: -2.7158432006835938
    4. 'よ' → logprob: -2.8408432006835938
    5. ' ' → logprob: -3.0908432006835938
    6. '続' → logprob: -3.2158432006835938
    7. '続きを' → logprob: -3.3408432006835938
    8. '```' → logprob: -3.5908432006835938
    9. ' ' → logprob: -3.8408432006835938
    10. 'す' → logprob: -3.8408432006835938

Token 341: 'じ' (ID: 29884)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5289866924285889
    2. ')' → logprob: -2.028986692428589
    3. ' ' → logprob: -2.653986692428589
    4. '.' → logprob: -3.653986692428589
    5. 'def' → logprob: -3.653986692428589
    6. '
' → logprob: -4.028986930847168
    7. ' 
' → logprob: -4.153986930847168
    8. '   ' → logprob: -4.278986930847168
    9. 'f' → logprob: -4.403986930847168
    10. '行' → logprob: -4.778986930847168

Token 342: '日に' (ID: 197932)
  Prédit: 'う'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'う' → logprob: -1.0970799922943115
    2. 'ま' → logprob: -1.2220799922943115
    3. 'で' → logprob: -2.5970799922943115
    4. '日' → logprob: -3.4720799922943115
    5. 'よ' → logprob: -3.4720799922943115
    6. 'い' → logprob: -3.5970799922943115
    7. 'コード' → logprob: -3.7220799922943115
    8. 'の' → logprob: -4.097080230712891
    9. 'す' → logprob: -4.222080230712891
    10. 'じ' → logprob: -4.472080230712891

Token 343: '再' (ID: 29020)
  Prédit: 'ライブ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ライブ' → logprob: -0.6727544069290161
    2. ' ' → logprob: -1.5477544069290161
    3. '_' → logprob: -2.2977542877197266
    4. 'で' → logprob: -3.4227542877197266
    5. ''' → logprob: -3.7977542877197266
    6. 'を' → logprob: -4.172754287719727
    7. 'が' → logprob: -4.422754287719727
    8. ' ' → logprob: -5.047754287719727
    9. ' live' → logprob: -5.297754287719727
    10. '続きを' → logprob: -5.485254287719727

Token 344: 'び' (ID: 58490)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8804324269294739
    2. ' ' → logprob: -2.255432367324829
    3. ')' → logprob: -2.630432367324829
    4. '   ' → logprob: -2.880432367324829
    5. '行' → logprob: -3.505432367324829
    6. '
' → logprob: -3.630432367324829
    7. '続' → logprob: -3.755432367324829
    8. '```' → logprob: -4.005432605743408
    9. 'び' → logprob: -4.005432605743408
    10. 'peated' → logprob: -4.130432605743408

Token 345: 'ライブ' (ID: 180415)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31053560972213745
    2. '_' → logprob: -1.8105356693267822
    3. ')' → logprob: -3.1855356693267822
    4. 'ライブ' → logprob: -4.310535430908203
    5. ' )' → logprob: -5.310535430908203
    6. ''' → logprob: -5.560535430908203
    7. ' ')' → logprob: -5.810535430908203
    8. '　' → logprob: -6.060535430908203
    9. ' ' → logprob: -6.185535430908203
    10. '続きを' → logprob: -6.310535430908203

Token 346: 'を' (ID: 7277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2238097190856934
    2. 'を' → logprob: -1.7238097190856934
    3. 'が' → logprob: -2.0988097190856934
    4. '<|end|>' → logprob: -3.0988097190856934
    5. '
' → logprob: -3.3488097190856934
    6. '\n' → logprob: -3.4738097190856934
    7. ' ' → logprob: -3.4738097190856934
    8. 'は' → logprob: -3.4738097190856934
    9. '_' → logprob: -3.5988097190856934
    10. ' ' → logprob: -3.7238097190856934

Token 347: '行' (ID: 6550)
  Prédit: '行'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '行' → logprob: -0.4012114405632019
    2. 'でき' → logprob: -2.0262115001678467
    3. 'を' → logprob: -2.4012115001678467
    4. 'が' → logprob: -3.1512115001678467
    5. '```' → logprob: -4.401211261749268
    6. '続' → logprob: -4.526211261749268
    7. 'できます' → logprob: -5.026211261749268
    8. 'は' → logprob: -5.526211261749268
    9. 'も' → logprob: -5.651211261749268
    10. 'する' → logprob: -6.151211261749268

Token 348: 'う' (ID: 8574)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6176657676696777
    2. 'う' → logprob: -2.2426657676696777
    3. ')' → logprob: -2.6176657676696777
    4. 'ん' → logprob: -3.7426657676696777
    5. '<|end|>' → logprob: -3.7426657676696777
    6. 'def' → logprob: -3.9926657676696777
    7. '_' → logprob: -4.367665767669678
    8. '続' → logprob: -4.367665767669678
    9. '続きを' → logprob: -4.367665767669678
    10. '=' → logprob: -4.367665767669678

Token 349: 'こと' (ID: 53217)
  Prédit: 'が'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.5592677593231201
    2. '"' → logprob: -2.05926775932312
    3. '#' → logprob: -3.18426775932312
    4. '。' → logprob: -3.80926775932312
    5. '\u' → logprob: -4.184267997741699
    6. '続' → logprob: -4.184267997741699
    7. 'でき' → logprob: -4.309267997741699
    8. 'ん' → logprob: -4.934267997741699
    9. 'お' → logprob: -4.934267997741699
    10. 'よ' → logprob: -5.059267997741699

Token 350: 'が' (ID: 6632)
  Prédit: 'が'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.3020241856575012
    2. 'は' → logprob: -2.5520241260528564
    3. 'でき' → logprob: -3.0520241260528564
    4. '。' → logprob: -3.1770241260528564
    5. 'を' → logprob: -5.3020243644714355
    6. 'す' → logprob: -5.3020243644714355
    7. 'で' → logprob: -5.4270243644714355
    8. 'う' → logprob: -5.4270243644714355
    9. 'ん' → logprob: -5.5520243644714355
    10. '#' → logprob: -5.5520243644714355

Token 351: 'でき' (ID: 78673)
  Prédit: 'でき'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'でき' → logprob: -1.431227207183838
    2. 'す' → logprob: -2.681227207183838
    3. 'が' → logprob: -2.806227207183838
    4. 'ん' → logprob: -2.806227207183838
    5. '\n' → logprob: -3.306227207183838
    6. 'し' → logprob: -3.431227207183838
    7. 'で' → logprob: -3.556227207183838
    8. 'う' → logprob: -3.556227207183838
    9. 'ー' → logprob: -3.806227207183838
    10. 'え' → logprob: -3.931227207183838

Token 352: 'る' (ID: 6996)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1341209411621094
    2. ' ' → logprob: -2.1341209411621094
    3. '_' → logprob: -3.1341209411621094
    4. 'う' → logprob: -3.1341209411621094
    5. 'u' → logprob: -3.2591209411621094
    6. 'def' → logprob: -3.3841209411621094
    7. 'が' → logprob: -3.3841209411621094
    8. 'ん' → logprob: -3.5091209411621094
    9. '続' → logprob: -3.6341209411621094
    10. ')' → logprob: -3.7591209411621094

Token 353: '。' (ID: 788)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7402141094207764
    2. '#' → logprob: -2.1152141094207764
    3. '
' → logprob: -2.1152141094207764
    4. ' ' → logprob: -2.1152141094207764
    5. ' 
' → logprob: -2.6152141094207764
    6. ')' → logprob: -2.8652141094207764
    7. '   ' → logprob: -3.1152141094207764
    8. ',' → logprob: -3.6152141094207764
    9. 'for' → logprob: -3.7402141094207764
    10. ' ' → logprob: -3.8652141094207764

Token 354: '"
' (ID: 1092)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2238013744354248
    2. '"' → logprob: -1.3488013744354248
    3. '_' → logprob: -1.7238013744354248
    4. ' ' → logprob: -2.973801374435425
    5. ' ' → logprob: -3.598801374435425
    6. ' 
' → logprob: -3.598801374435425
    7. '\' → logprob: -4.223801612854004
    8. '　' → logprob: -4.348801612854004
    9. '  
' → logprob: -4.473801612854004
    10. '\n' → logprob: -4.723801612854004

Token 355: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3862555027008057
    2. '       ' → logprob: -1.6362555027008057
    3. ' 
' → logprob: -1.8862555027008057
    4. '#' → logprob: -2.2612555027008057
    5. ')' → logprob: -2.6362555027008057
    6. ' ' → logprob: -3.1362555027008057
    7. '  
' → logprob: -3.7612555027008057
    8. ',' → logprob: -3.7612555027008057
    9. '
' → logprob: -3.8862555027008057
    10. '\' → logprob: -4.261255264282227

Token 356: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9317724108695984
    2. '       ' → logprob: -0.9317724108695984
    3. ' 
' → logprob: -2.806772470474243
    4. ')' → logprob: -3.806772470474243
    5. '   ' → logprob: -4.056772232055664
    6. '\n' → logprob: -4.306772232055664
    7. ' ' → logprob: -4.306772232055664
    8. '_' → logprob: -4.431772232055664
    9. '        
' → logprob: -4.681772232055664
    10. '#' (adapté à ' #') → logprob: -5.056772232055664

Token 357: ' That' (ID: 4569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6956314444541931
    2. '#' → logprob: -1.820631504058838
    3. ' ' → logprob: -1.945631504058838
    4. ' 
' → logprob: -2.570631504058838
    5. ' ' → logprob: -3.070631504058838
    6. '        ' → logprob: -4.195631504058838
    7. '\' → logprob: -4.570631504058838
    8. ' \' → logprob: -4.570631504058838
    9. '        
' → logprob: -5.070631504058838
    10. '\n' → logprob: -5.195631504058838

Token 358: ' means' (ID: 4748)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5309895277023315
    2. ' is' → logprob: -1.6559895277023315
    3. '#' → logprob: -2.780989646911621
    4. ' continues' → logprob: -3.655989646911621
    5. '<|end|>' → logprob: -3.780989646911621
    6. ')' → logprob: -3.905989646911621
    7. '=' → logprob: -4.155989646911621
    8. ' 
' → logprob: -4.405989646911621
    9. '
' → logprob: -4.530989646911621
    10. ' )' → logprob: -5.405989646911621

Token 359: ' that' (ID: 484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7988245487213135
    2. ' ' → logprob: -1.9238245487213135
    3. ' the' → logprob: -2.4238245487213135
    4. ' on' → logprob: -2.4238245487213135
    5. ' we' → logprob: -2.4238245487213135
    6. ' that' → logprob: -2.5488245487213135
    7. ' #' → logprob: -2.6738245487213135
    8. ' live' → logprob: -3.1738245487213135
    9. ' for' → logprob: -3.4238245487213135
    10. ' a' → logprob: -3.5488245487213135

Token 360: ' multiple' (ID: 7598)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.6384755373001099
    2. 'the' → logprob: -1.6384755373001099
    3. ' for' → logprob: -2.3884754180908203
    4. '#' → logprob: -2.7634754180908203
    5. 'for' → logprob: -2.7634754180908203
    6. ' you' → logprob: -3.0134754180908203
    7. ' if' → logprob: -3.1384754180908203
    8. ' live' → logprob: -3.2634754180908203
    9. 'you' → logprob: -3.2634754180908203
    10. ' we' → logprob: -3.3884754180908203

Token 361: ' live' (ID: 4561)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13638247549533844
    2. 'regions' → logprob: -3.761382579803467
    3. ' regions' → logprob: -3.886382579803467
    4. ' lines' → logprob: -4.636382579803467
    5. ' ' → logprob: -4.636382579803467
    6. ',' → logprob: -5.261382579803467
    7. '_regions' → logprob: -5.261382579803467
    8. ')' → logprob: -5.386382579803467
    9. '#' → logprob: -5.761382579803467
    10. 'ライブ' → logprob: -6.011382579803467

Token 362: ' performances' (ID: 27880)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05425715446472168
    2. '_' → logprob: -3.4292571544647217
    3. ' s' → logprob: -4.804257392883301
    4. ' ' → logprob: -4.929257392883301
    5. '_s' → logprob: -6.179257392883301
    6. '_sessions' → logprob: -7.679257392883301
    7. ' sessions' → logprob: -7.804257392883301
    8. ' _' → logprob: -7.929257392883301
    9. ''s' → logprob: -8.3042573928833
    10. '<|end|>' → logprob: -8.4292573928833

Token 363: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: ' same' (ID: 2684)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8801832795143127
    2. 'the' → logprob: -0.8801832795143127
    3. '同' → logprob: -2.130183219909668
    4. ' same' → logprob: -4.255183219909668
    5. ' one' → logprob: -4.380183219909668
    6. 'same' → logprob: -4.755183219909668
    7. ' a' → logprob: -4.880183219909668
    8. '一' → logprob: -5.505183219909668
    9. 'a' → logprob: -6.505183219909668
    10. 'one' → logprob: -7.130183219909668

Token 365: ' day' (ID: 2163)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6483862996101379
    2. ' ' → logprob: -1.3983862400054932
    3. 'day' → logprob: -3.023386240005493
    4. 'region' → logprob: -3.023386240005493
    5. ' day' → logprob: -3.148386240005493
    6. ' _' → logprob: -3.898386240005493
    7. '_day' → logprob: -3.898386240005493
    8. ' region' → logprob: -4.023386478424072
    9. ' line' → logprob: -5.398386478424072
    10. 'token' → logprob: -5.648386478424072

Token 366: ' can' (ID: 665)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.025913791730999947
    2. ' ' → logprob: -4.775913715362549
    3. 'be' → logprob: -4.775913715362549
    4. ' continue' → logprob: -5.900913715362549
    5. ' only' → logprob: -6.525913715362549
    6. ' happen' → logprob: -6.775913715362549
    7. ' occur' → logprob: -6.900913715362549
    8. 'continue' → logprob: -7.900913715362549
    9. '続' → logprob: -7.900913715362549
    10. 'occur' → logprob: -8.025914192199707

Token 368: ' done' (ID: 4167)
  Prédit: 'performed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'performed' → logprob: -0.8002136945724487
    2. 'done' → logprob: -0.9252136945724487
    3. ' done' → logprob: -3.3002138137817383
    4. '行' → logprob: -3.4252138137817383
    5. 'conduct' → logprob: -4.050213813781738
    6. 'continued' → logprob: -4.550213813781738
    7. ' performed' → logprob: -4.550213813781738
    8. 'made' → logprob: -4.925213813781738
    9. ' conducted' → logprob: -5.300213813781738
    10. '続' → logprob: -5.425213813781738

Token 369: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10193730890750885
    2. ',' → logprob: -3.1019372940063477
    3. '   ' → logprob: -4.601937294006348
    4. ' in' → logprob: -4.601937294006348
    5. '<|end|>' → logprob: -5.226937294006348
    6. ')' → logprob: -5.601937294006348
    7. '        
' → logprob: -5.726937294006348
    8. '.' → logprob: -5.726937294006348
    9. ' ' → logprob: -5.851937294006348
    10. '        ' → logprob: -6.476937294006348

Token 370: ' they' (ID: 1023)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.7453869581222534
    2. ' they' → logprob: -1.7453869581222534
    3. 'they' → logprob: -1.7453869581222534
    4. 'the' → logprob: -2.120387077331543
    5. ' all' → logprob: -2.870387077331543
    6. ' there' → logprob: -3.495387077331543
    7. ' adjacent' → logprob: -3.495387077331543
    8. ' selected' → logprob: -3.870387077331543
    9. ' we' → logprob: -4.245387077331543
    10. 'all' → logprob: -4.245387077331543

Token 371: ' form' (ID: 1625)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7102609276771545
    2. 'are' → logprob: -0.8352609276771545
    3. '#' → logprob: -4.08526086807251
    4. ' can' → logprob: -4.46026086807251
    5. 'can' → logprob: -4.46026086807251
    6. ' continue' → logprob: -4.96026086807251
    7. 'continue' → logprob: -5.46026086807251
    8. ' #' → logprob: -5.58526086807251
    9. '続' → logprob: -5.58526086807251
    10. ' form' → logprob: -6.71026086807251

Token 372: ' connected' (ID: 12079)
  Prédit: '連'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '連' → logprob: -0.758949339389801
    2. ' a' → logprob: -1.1339492797851562
    3. 'a' → logprob: -2.5089492797851562
    4. '一' → logprob: -3.0089492797851562
    5. ' ' → logprob: -3.6339492797851562
    6. ' contiguous' → logprob: -4.383949279785156
    7. '1' → logprob: -4.758949279785156
    8. ' one' → logprob: -4.883949279785156
    9. 'connected' → logprob: -5.633949279785156
    10. 'one' → logprob: -5.758949279785156

Token 373: ' sequence' (ID: 16281)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48007020354270935
    2. '_regions' → logprob: -2.605070114135742
    3. '_subset' → logprob: -2.855070114135742
    4. '_inter' → logprob: -3.355070114135742
    5. 'interval' → logprob: -3.480070114135742
    6. ' subset' → logprob: -3.605070114135742
    7. 'subset' → logprob: -3.605070114135742
    8. '_sub' → logprob: -3.730070114135742
    9. ' subsets' → logprob: -4.230070114135742
    10. 'segments' → logprob: -4.605070114135742

Token 374: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0332413911819458
    2. '        
' → logprob: -4.408241271972656
    3. '
' → logprob: -4.533241271972656
    4. '#' → logprob: -6.158241271972656
    5. '   ' → logprob: -6.658241271972656
    6. ',' → logprob: -7.033241271972656
    7. '<|end|>' → logprob: -7.033241271972656
    8. ' subsets' → logprob: -7.408241271972656
    9. 'for' → logprob: -7.908241271972656
    10. '```' → logprob: -8.033241271972656

Token 375: 'linear' (ID: 41454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05086079239845276
    2. ' )' → logprob: -3.05086088180542
    3. '）' → logprob: -6.80086088180542
    4. ' contiguous' → logprob: -8.300860404968262
    5. ',' → logprob: -8.550860404968262
    6. '<|end|>' → logprob: -9.425860404968262
    7. '#' → logprob: -9.550860404968262
    8. ' ' → logprob: -9.925860404968262
    9. 's' → logprob: -10.050860404968262
    10. ' ' → logprob: -10.300860404968262

Token 376: ' chain' (ID: 13464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27160120010375977
    2. '）' → logprob: -3.2716012001037598
    3. ' regions' → logprob: -3.6466012001037598
    4. ' )' → logprob: -3.6466012001037598
    5. ',' → logprob: -3.8966012001037598
    6. '_' → logprob: -4.02160120010376
    7. '#' → logprob: -4.27160120010376
    8. ' intervals' → logprob: -4.64660120010376
    9. 'regions' → logprob: -4.89660120010376
    10. '   ' → logprob: -5.14660120010376

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2649204730987549
    2. '       ' → logprob: -2.764920473098755
    3. '   ' → logprob: -2.764920473098755
    4. '<|end|>' → logprob: -2.889920473098755
    5. ',' → logprob: -3.639920473098755
    6. '<|end|>' → logprob: -5.264920234680176
    7. ' )' → logprob: -5.889920234680176
    8. 's' → logprob: -6.014920234680176
    9. ':' → logprob: -6.639920234680176
    10. '...' → logprob: -6.764920234680176

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007748471572995186
    2. '        
' → logprob: -5.882748603820801
    3. '
' → logprob: -6.007748603820801
    4. '   ' → logprob: -7.257748603820801
    5. '#' → logprob: -7.507748603820801
    6. 'def' → logprob: -8.8827486038208
    7. '```' → logprob: -8.8827486038208
    8. '<|end|>' → logprob: -9.1327486038208
    9. ')' → logprob: -9.2577486038208
    10. 'for' → logprob: -9.2577486038208

Token 379: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03716030344367027
    2. '
' → logprob: -4.037160396575928
    3. '        
' → logprob: -4.412160396575928
    4. '   ' → logprob: -6.287160396575928
    5. ' 
' → logprob: -7.037160396575928
    6. '  
' → logprob: -7.162160396575928
    7. '\n' → logprob: -7.287160396575928
    8. '    
' → logprob: -7.787160396575928
    9. 'for' → logprob: -7.912160396575928
    10. '#' (adapté à ' #') → logprob: -8.28715991973877

Token 380: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2145487666130066
    2. 'for' → logprob: -2.5895488262176514
    3. 'max' → logprob: -3.5895488262176514
    4. 'possible' → logprob: -3.5895488262176514
    5. '#' → logprob: -4.339548587799072
    6. 'valid' → logprob: -5.089548587799072
    7. 'dp' → logprob: -5.089548587799072
    8. 'sub' → logprob: -5.214548587799072
    9. 'day' → logprob: -5.464548587799072
    10. 'from' → logprob: -5.589548587799072

Token 381: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2608102560043335
    2. 'for' → logprob: -1.3858102560043335
    3. '#' → logprob: -2.135810375213623
    4. ' max' → logprob: -2.885810375213623
    5. 'max' → logprob: -3.010810375213623
    6. '   ' → logprob: -3.385810375213623
    7. ' #' → logprob: -3.510810375213623
    8. '       ' → logprob: -3.760810375213623
    9. ' subsets' → logprob: -3.760810375213623
    10. 'interval' → logprob: -3.885810375213623

Token 382: ' set' (ID: 920)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8287380933761597
    2. '#' → logprob: -1.8287380933761597
    3. ' for' → logprob: -2.078738212585449
    4. ' #' → logprob: -3.078738212585449
    5. 'possible' → logprob: -3.578738212585449
    6. 'max' → logprob: -3.703738212585449
    7. '   ' → logprob: -3.828738212585449
    8. 'def' → logprob: -3.953738212585449
    9. ' next' → logprob: -4.078738212585449
    10. 'next' → logprob: -4.203738212585449

Token 383: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9276132583618164
    2. '_' → logprob: -1.0526132583618164
    3. 's' → logprob: -2.0526132583618164
    4. ' of' → logprob: -2.5526132583618164
    5. ' =' → logprob: -4.302613258361816
    6. 'of' → logprob: -4.677613258361816
    7. '<|end|>' → logprob: -4.927613258361816
    8. ')' → logprob: -5.802613258361816
    9. ',' → logprob: -6.302613258361816
    10. '=' → logprob: -6.427613258361816

Token 384: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.05737121030688286
    2. ' regions' → logprob: -3.807371139526367
    3. 'indices' → logprob: -4.057371139526367
    4. 'i' → logprob: -5.557371139526367
    5. 'selected' → logprob: -6.432371139526367
    6. 'connected' → logprob: -6.557371139526367
    7. ' contiguous' → logprob: -6.557371139526367
    8. 'live' → logprob: -6.932371139526367
    9. ' indices' → logprob: -7.057371139526367
    10. 'days' → logprob: -7.182371139526367

Token 385: ' selected' (ID: 6386)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -1.4263373613357544
    2. ' selected' → logprob: -1.6763373613357544
    3. '_selected' → logprob: -1.8013373613357544
    4. ' must' → logprob: -2.301337242126465
    5. ' is' → logprob: -2.801337242126465
    6. ' of' → logprob: -3.051337242126465
    7. ' can' → logprob: -3.051337242126465
    8. ' with' → logprob: -3.926337242126465
    9. '_' → logprob: -4.426337242126465
    10. 'with' → logprob: -4.426337242126465

Token 386: ' on' (ID: 402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7095422744750977
    2. '<|end|>' → logprob: -1.4595422744750977
    3. ' is' → logprob: -2.9595422744750977
    4. ' ' → logprob: -3.0845422744750977
    5. ' must' → logprob: -3.8345422744750977
    6. ' for' → logprob: -3.8345422744750977
    7. ' =' → logprob: -3.8345422744750977
    8. 's' → logprob: -4.209542274475098
    9. ',' → logprob: -4.459542274475098
    10. ')' → logprob: -4.459542274475098

Token 387: ' a' (ID: 261)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.002428928855806589
    2. 'day' → logprob: -6.752429008483887
    3. ' j' → logprob: -7.377429008483887
    4. ' the' → logprob: -8.377429008483887
    5. ' ' → logprob: -9.127429008483887
    6. ' line' → logprob: -9.377429008483887
    7. ' each' → logprob: -9.377429008483887
    8. 'j' → logprob: -10.002429008483887
    9. 'the' → logprob: -10.127429008483887
    10. ' a' → logprob: -12.002429008483887

Token 388: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.1751570701599121
    2. ' line' → logprob: -2.550157070159912
    3. 'day' → logprob: -3.050157070159912
    4. ' ' → logprob: -3.925157070159912
    5. ' j' → logprob: -5.425157070159912
    6. ' given' → logprob: -5.800157070159912
    7. 'j' → logprob: -5.925157070159912
    8. ' single' → logprob: -6.425157070159912
    9. '_day' → logprob: -6.675157070159912
    10. 'line' → logprob: -6.800157070159912

Token 389: ' must' (ID: 2804)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6087259650230408
    2. '<|end|>' → logprob: -1.4837260246276855
    3. ' must' → logprob: -2.6087260246276855
    4. ' ' → logprob: -3.1087260246276855
    5. ' is' → logprob: -3.1087260246276855
    6. ' _' → logprob: -4.2337260246276855
    7. 's' → logprob: -4.6087260246276855
    8. ')' → logprob: -5.1087260246276855
    9. ' can' → logprob: -5.1087260246276855
    10. ',' → logprob: -5.2337260246276855

Token 390: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.19363555312156677
    2. 'be' → logprob: -1.8186355829238892
    3. ' form' → logprob: -4.9436354637146
    4. ' consist' → logprob: -5.6936354637146
    5. 'form' → logprob: -5.8186354637146
    6. 'cons' → logprob: -8.818635940551758
    7. '#' → logprob: -10.318635940551758
    8. ' ' → logprob: -10.943635940551758
    9. '	be' → logprob: -10.943635940551758
    10. '```' → logprob: -11.193635940551758

Token 391: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8924339413642883
    2. ' a' → logprob: -1.3924338817596436
    3. ' contiguous' → logprob: -2.0174338817596436
    4. 'continuous' → logprob: -2.6424338817596436
    5. '連' → logprob: -3.1424338817596436
    6. ' intervals' → logprob: -3.7674338817596436
    7. ' continuous' → logprob: -4.017434120178223
    8. 'interval' → logprob: -4.142434120178223
    9. 'cont' → logprob: -4.392434120178223
    10. 'an' → logprob: -4.767434120178223

Token 392: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -1.1127341985702515
    2. 'continuous' → logprob: -1.2377341985702515
    3. ' contiguous' → logprob: -1.7377341985702515
    4. ' connected' → logprob: -1.9877341985702515
    5. 'cont' → logprob: -3.362734317779541
    6. ' continuous' → logprob: -3.737734317779541
    7. '連' → logprob: -5.612734317779541
    8. 'single' → logprob: -5.862734317779541
    9. ' single' → logprob: -7.237734317779541
    10. '连续' → logprob: -7.362734317779541

Token 393: ' chain' (ID: 13464)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13276001811027527
    2. 'space' → logprob: -3.3827600479125977
    3. ' subset' → logprob: -3.5077600479125977
    4. ' _' → logprob: -3.8827600479125977
    5. 'subset' → logprob: -4.632760047912598
    6. ' space' → logprob: -4.757760047912598
    7. 'interval' → logprob: -5.757760047912598
    8. 'sequence' → logprob: -6.007760047912598
    9. ' ' → logprob: -6.132760047912598
    10. ' interval' → logprob: -6.257760047912598

Token 394: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09912723302841187
    2. '
' → logprob: -2.8491272926330566
    3. '        
' → logprob: -3.9741272926330566
    4. '\n' → logprob: -5.724127292633057
    5. '   ' → logprob: -5.974127292633057
    6. '<|end|>' → logprob: -6.474127292633057
    7. ' 
' → logprob: -6.599127292633057
    8. '    
' → logprob: -6.849127292633057
    9. '  
' → logprob: -6.849127292633057
    10. '\' → logprob: -6.849127292633057

Token 395: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.018148768693208694
    2. ' regions' → logprob: -4.518148899078369
    3. 'indices' → logprob: -5.393148899078369
    4. 'one' → logprob: -6.893148899078369
    5. ' one' → logprob: -7.643148899078369
    6. 'i' → logprob: -8.018148422241211
    7. '1' → logprob: -8.768148422241211
    8. 'region' → logprob: -8.768148422241211
    9. 'adj' → logprob: -9.518148422241211
    10. ' contiguous' → logprob: -9.518148422241211

Token 396: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3711596429347992
    2. '<|end|>' → logprob: -1.4961596727371216
    3. '        
' → logprob: -3.871159553527832
    4. ',' → logprob: -4.246159553527832
    5. '<|end|>' → logprob: -4.496159553527832
    6. ' 
' → logprob: -4.746159553527832
    7. '
' → logprob: -4.996159553527832
    8. '   ' → logprob: -5.746159553527832
    9. ' ' → logprob: -5.871159553527832
    10. '        ' → logprob: -6.246159553527832

Token 397: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.1968705952167511
    2. 'live' → logprob: -2.6968705654144287
    3. ' E' → logprob: -2.8218705654144287
    4. 'positive' → logprob: -3.9468705654144287
    5. 'no' → logprob: -4.571870803833008
    6. 'non' → logprob: -5.071870803833008
    7. 'ライブ' → logprob: -5.321870803833008
    8. 'all' → logprob: -5.946870803833008
    9. ' positive' → logprob: -6.821870803833008
    10. ' no' → logprob: -6.821870803833008

Token 398: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008398140780627728
    2. '[' → logprob: -5.633398056030273
    3. '[j' → logprob: -6.008398056030273
    4. ' [' → logprob: -6.258398056030273
    5. '```' → logprob: -8.633398056030273
    6. '   ' → logprob: -11.008398056030273
    7. '>' → logprob: -11.008398056030273
    8. '\[' → logprob: -11.008398056030273
    9. 'i' → logprob: -11.383398056030273
    10. '
' → logprob: -11.508398056030273

Token 399: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022186534479260445
    2. ']' → logprob: -6.877218723297119
    3. '[j' → logprob: -7.127218723297119
    4. ']>' → logprob: -9.127218246459961
    5. ' ][' → logprob: -9.627218246459961
    6. '>' → logprob: -9.752218246459961
    7. '[i' → logprob: -9.752218246459961
    8. '   ' → logprob: -10.252218246459961
    9. '[' → logprob: -10.877218246459961
    10. ']][' → logprob: -12.002218246459961

Token 400: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007827592082321644
    2. ']' → logprob: -5.1328277587890625
    3. ' j' → logprob: -7.1328277587890625
    4. '][' → logprob: -7.1328277587890625
    5. 'i' → logprob: -9.257827758789062
    6. '   ' → logprob: -10.007827758789062
    7. ' ]' → logprob: -10.632827758789062
    8. '[j' → logprob: -10.757827758789062
    9. '
' → logprob: -10.882827758789062
    10. ' ' → logprob: -11.007827758789062

Token 401: ']>' (ID: 54651)
  Prédit: ']>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.19478705525398254
    2. ']' → logprob: -1.8197870254516602
    3. '[i' → logprob: -4.94478702545166
    4. '][' → logprob: -5.81978702545166
    5. '>' → logprob: -5.94478702545166
    6. '[' → logprob: -6.81978702545166
    7. '[j' → logprob: -7.44478702545166
    8. ']>=' → logprob: -8.31978702545166
    9. ' ]' → logprob: -10.06978702545166
    10. ']==' → logprob: -10.19478702545166

Token 402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004637910984456539
    2. ' ' → logprob: -5.379637718200684
    3. '=' → logprob: -11.879637718200684
    4. '>' → logprob: -12.379637718200684
    5. '   ' → logprob: -12.754637718200684
    6. '```' → logprob: -14.129637718200684
    7. '  ' → logprob: -14.504637718200684
    8. '
' → logprob: -14.879637718200684
    9. ' ' → logprob: -15.629637718200684
    10. '     ' → logprob: -15.754637718200684

Token 403: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6385121941566467
    2. '
' → logprob: -0.8885121941566467
    3. '        
' → logprob: -3.638512134552002
    4. '<|end|>' → logprob: -4.638512134552002
    5. '\n' → logprob: -5.388512134552002
    6. ',' → logprob: -5.888512134552002
    7. '  
' → logprob: -6.013512134552002
    8. '#' → logprob: -6.013512134552002
    9. ' 
' → logprob: -6.263512134552002
    10. '<|end|>' → logprob: -6.763512134552002

Token 404: ' no' (ID: 860)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6626309752464294
    2. ' the' → logprob: -2.537631034851074
    3. ' contiguous' → logprob: -2.787631034851074
    4. 'all' → logprob: -3.162631034851074
    5. ' for' → logprob: -3.287631034851074
    6. 'the' → logprob: -3.412631034851074
    7. 'for' → logprob: -3.537631034851074
    8. ' length' → logprob: -4.037631034851074
    9. ' values' → logprob: -4.287631034851074
    10. ' that' → logprob: -4.412631034851074

Token 405: ' region' (ID: 7967)
  Prédit: ' repeats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' repeats' → logprob: -0.4383503198623657
    2. 're' → logprob: -2.313350200653076
    3. ' repeated' → logprob: -2.688350200653076
    4. 'duplicates' → logprob: -3.063350200653076
    5. ' duplicates' → logprob: -3.188350200653076
    6. 'repeat' → logprob: -3.563350200653076
    7. ' repeating' → logprob: -4.438350200653076
    8. ' repetition' → logprob: -4.438350200653076
    9. '重复' → logprob: -4.938350200653076
    10. 'duplicate' → logprob: -4.938350200653076

Token 406: ' repeated' (ID: 24161)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2820742130279541
    2. 's' → logprob: -2.407074213027954
    3. '_' → logprob: -3.532074213027954
    4. ' used' → logprob: -4.157073974609375
    5. ' in' → logprob: -4.532073974609375
    6. ')' → logprob: -4.532073974609375
    7. ',' → logprob: -4.657073974609375
    8. ' is' → logprob: -5.157073974609375
    9. ' can' → logprob: -5.157073974609375
    10. '<|end|>' → logprob: -5.282073974609375

Token 407: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04259727522730827
    2. '        
' → logprob: -4.04259729385376
    3. '
' → logprob: -4.16759729385376
    4. '#' → logprob: -5.41759729385376
    5. ',' → logprob: -7.41759729385376
    6. 'def' → logprob: -7.66759729385376
    7. '```' → logprob: -7.66759729385376
    8. '<|end|>' → logprob: -7.66759729385376
    9. '   ' → logprob: -8.167596817016602
    10. 's' → logprob: -8.667596817016602

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5970122814178467
    2. ' 
' → logprob: -1.7220122814178467
    3. '\n' → logprob: -2.3470122814178467
    4. '<|end|>' → logprob: -2.9720122814178467
    5. '\' → logprob: -3.0970122814178467
    6. ' ' → logprob: -3.9720122814178467
    7. '        
' → logprob: -3.9720122814178467
    8. '  
' → logprob: -4.847012519836426
    9. ' \' → logprob: -5.347012519836426
    10. '[' → logprob: -5.472012519836426

Token 409: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05755443871021271
    2. '        
' → logprob: -3.4325544834136963
    3. ' 
' → logprob: -4.932554244995117
    4. '
' → logprob: -5.932554244995117
    5. '        ' → logprob: -6.557554244995117
    6. '#' (adapté à ' #') → logprob: -6.682554244995117
    7. '\n' → logprob: -6.682554244995117
    8. '\' → logprob: -7.057554244995117
    9. '  
' → logprob: -7.057554244995117
    10. '<|end|>' → logprob: -7.057554244995117

Token 410: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40076592564582825
    2. '       ' → logprob: -2.275765895843506
    3. 'possible' → logprob: -3.025765895843506
    4. 'max' → logprob: -3.150765895843506
    5. 'for' → logprob: -3.400765895843506
    6. 'valid' → logprob: -3.525765895843506
    7. '#' → logprob: -3.900765895843506
    8. 'sub' → logprob: -4.275765895843506
    9. 'best' → logprob: -5.150765895843506
    10. 'interval' → logprob: -5.400765895843506

Token 411: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31544744968414307
    2. ' for' → logprob: -1.440447449684143
    3. '       ' → logprob: -4.8154473304748535
    4. '#' → logprob: -5.0654473304748535
    5. ' #' → logprob: -5.4404473304748535
    6. 'possible' → logprob: -6.5654473304748535
    7. ' possible' → logprob: -6.6904473304748535
    8. '   ' → logprob: -6.6904473304748535
    9. ' intervals' → logprob: -6.6904473304748535
    10. ' subsets' → logprob: -6.9404473304748535

Token 412: ' day' (ID: 2163)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04835182800889015
    2. ' j' → logprob: -3.298351764678955
    3. 'day' → logprob: -5.548351764678955
    4. 'each' → logprob: -5.923351764678955
    5. ' day' → logprob: -6.298351764678955
    6. 'i' → logprob: -6.923351764678955
    7. ' each' → logprob: -7.923351764678955
    8. 'length' → logprob: -9.548352241516113
    9. ' i' → logprob: -9.673352241516113
    10. 'd' → logprob: -10.048352241516113

Token 413: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.055334340780973434
    2. 'j' → logprob: -3.1803343296051025
    3. ' ' → logprob: -5.055334568023682
    4. '_' → logprob: -6.305334568023682
    5. '    ' → logprob: -6.430334568023682
    6. '_j' → logprob: -6.930334568023682
    7. '   ' → logprob: -8.305334091186523
    8. '	j' → logprob: -8.680334091186523
    9. ' _' → logprob: -8.805334091186523
    10. ' ,' → logprob: -8.930334091186523

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06089809536933899
    2. '   ' → logprob: -3.5608980655670166
    3. ':' → logprob: -4.310898303985596
    4. ' ,' → logprob: -4.310898303985596
    5. '       ' → logprob: -7.560898303985596
    6. ' ' → logprob: -7.935898303985596
    7. '=' → logprob: -8.060897827148438
    8. ' for' → logprob: -8.060897827148438
    9. ' in' → logprob: -8.310897827148438
    10. '[' → logprob: -8.435897827148438

Token 415: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3358667492866516
    2. ' for' → logprob: -2.335866689682007
    3. '#' → logprob: -3.335866689682007
    4. '   ' → logprob: -3.335866689682007
    5. 'l' → logprob: -3.460866689682007
    6. 'valid' → logprob: -4.085866928100586
    7. 'possible' → logprob: -4.335866928100586
    8. ' valid' → logprob: -4.710866928100586
    9. 'start' → logprob: -5.085866928100586
    10. ' #' → logprob: -5.335866928100586

Token 416: ' performances' (ID: 27880)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.3611043691635132
    2. 'sub' → logprob: -1.4861043691635132
    3. 'interval' → logprob: -3.6111044883728027
    4. '_ch' → logprob: -3.8611044883728027
    5. '_inter' → logprob: -4.611104488372803
    6. 'chains' → logprob: -4.861104488372803
    7. 'regions' → logprob: -5.861104488372803
    8. '_regions' → logprob: -5.986104488372803
    9. 'starts' → logprob: -6.361104488372803
    10. 'sets' → logprob: -7.361104488372803

Token 417: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11521314084529877
    2. '_' → logprob: -3.11521315574646
    3. '=' → logprob: -3.36521315574646
    4. 's' → logprob: -4.740212917327881
    5. '_sub' → logprob: -4.740212917327881
    6. '_ranges' → logprob: -5.365212917327881
    7. '_sets' → logprob: -6.490212917327881
    8. '_choices' → logprob: -7.365212917327881
    9. '_indices' → logprob: -7.740212917327881
    10. '_subset' → logprob: -7.865212917327881

Token 418: ' intervals' (ID: 49900)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018089184537529945
    2. ' []' → logprob: -4.393089294433594
    3. '[' → logprob: -6.393089294433594
    4. '   ' → logprob: -6.643089294433594
    5. '[]
' → logprob: -7.143089294433594
    6. '[][]' → logprob: -8.393089294433594
    7. '[],' → logprob: -8.768089294433594
    8. 'for' → logprob: -9.018089294433594
    9. '[(' → logprob: -9.268089294433594
    10. '[]}' → logprob: -9.268089294433594

Token 419: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5164581537246704
    2. 'for' → logprob: -2.266458034515381
    3. '_' → logprob: -2.391458034515381
    4. '
' → logprob: -3.141458034515381
    5. '        
' → logprob: -3.266458034515381
    6. '   ' → logprob: -3.391458034515381
    7. ' for' → logprob: -4.141458034515381
    8. ' 
' → logprob: -4.391458034515381
    9. '\n' → logprob: -4.641458034515381
    10. '\' → logprob: -4.891458034515381

Token 420: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.309108167886734
    2. 'i' → logprob: -1.6841081380844116
    3. 'E' → logprob: -2.934108257293701
    4. ' regions' → logprob: -4.559108257293701
    5. ' i' → logprob: -5.559108257293701
    6. 'length' → logprob: -5.684108257293701
    7. ' E' → logprob: -6.059108257293701
    8. '[i' → logprob: -6.809108257293701
    9. ' contiguous' → logprob: -6.809108257293701
    10. 'continuous' → logprob: -6.934108257293701

Token 421: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.383453369140625
    2. '       ' → logprob: -2.133453369140625
    3. 'for' → logprob: -2.508453369140625
    4. '[' → logprob: -3.758453369140625
    5. ',' → logprob: -3.883453369140625
    6. ' for' → logprob: -4.008453369140625
    7. ' _' → logprob: -4.633453369140625
    8. '_
' → logprob: -5.258453369140625
    9. ' 
' → logprob: -5.508453369140625
    10. ' =' → logprob: -5.508453369140625

Token 422: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1048321723937988
    2. '       ' → logprob: -1.9798321723937988
    3. 'for' → logprob: -1.9798321723937988
    4. ' for' → logprob: -2.729832172393799
    5. '   ' → logprob: -2.979832172393799
    6. ' ' → logprob: -2.979832172393799
    7. ' =' → logprob: -3.354832172393799
    8. ',' → logprob: -3.479832172393799
    9. '[' → logprob: -3.729832172393799
    10. ':' → logprob: -3.854832172393799

Token 423: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09379568696022034
    2. '=' → logprob: -2.7187957763671875
    3. ' ,' → logprob: -4.9687957763671875
    4. ',i' → logprob: -5.4687957763671875
    5. ' ' → logprob: -5.9687957763671875
    6. ',
' → logprob: -6.3437957763671875
    7. '[' → logprob: -6.7187957763671875
    8. '   ' → logprob: -7.0937957763671875
    9. '<=' → logprob: -7.2187957763671875
    10. 'i' → logprob: -7.2187957763671875

Token 424: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11285073310136795
    2. ' i' → logprob: -2.2378506660461426
    3. ' ' → logprob: -11.4878511428833
    4. 'j' → logprob: -11.7378511428833
    5. '   ' → logprob: -12.9878511428833
    6. ' j' → logprob: -13.1128511428833
    7. '	i' → logprob: -13.6128511428833
    8. ' ' → logprob: -13.7378511428833
    9. '_i' → logprob: -13.8628511428833
    10. '  ' → logprob: -14.6128511428833

Token 425: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.182749405503273
    2. '2' → logprob: -2.1827495098114014
    3. '+' → logprob: -3.5577495098114014
    4. 'j' → logprob: -4.432749271392822
    5. 'n' → logprob: -6.057749271392822
    6. '_' → logprob: -6.057749271392822
    7. 'i' → logprob: -6.557749271392822
    8. '   ' → logprob: -6.557749271392822
    9. ' j' → logprob: -6.807749271392822
    10. '_j' → logprob: -6.807749271392822

Token 426: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09233111143112183
    2. ',' → logprob: -3.7173311710357666
    3. ':' → logprob: -3.7173311710357666
    4. '   ' → logprob: -4.8423309326171875
    5. ' =' → logprob: -4.8423309326171875
    6. ' for' → logprob: -5.2173309326171875
    7. '        
' → logprob: -5.8423309326171875
    8. '[' → logprob: -6.0923309326171875
    9. ':
' → logprob: -6.0923309326171875
    10. '.' → logprob: -6.7173309326171875

Token 427: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.16054053604602814
    2. 'i' → logprob: -2.2855405807495117
    3. ' E' → logprob: -3.5355405807495117
    4. 'all' → logprob: -5.035540580749512
    5. ' all' → logprob: -5.410540580749512
    6. ' i' → logprob: -6.035540580749512
    7. '   ' → logprob: -6.535540580749512
    8. 'j' → logprob: -7.910540580749512
    9. 'for' → logprob: -8.285540580749512
    10. 'length' → logprob: -8.285540580749512

Token 428: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003711719298735261
    2. '[' → logprob: -5.878711700439453
    3. '[j' → logprob: -8.253711700439453
    4. ' [' → logprob: -8.253711700439453
    5. '```' → logprob: -9.003711700439453
    6. '>' → logprob: -10.003711700439453
    7. '[
' → logprob: -10.378711700439453
    8. '>[' → logprob: -10.753711700439453
    9. '   ' → logprob: -10.878711700439453
    10. '[E' → logprob: -11.628711700439453

Token 429: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08009890466928482
    2. ']' → logprob: -2.830098867416382
    3. ']>=' → logprob: -5.205099105834961
    4. '[i' → logprob: -5.455099105834961
    5. ']>' → logprob: -6.080099105834961
    6. '>=' → logprob: -6.455099105834961
    7. '[j' → logprob: -7.080099105834961
    8. ']==' → logprob: -7.330099105834961
    9. '>' → logprob: -7.705099105834961
    10. '   ' → logprob: -8.080099105834961

Token 430: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0006452414090745151
    2. ' j' → logprob: -8.000645637512207
    3. 'i' → logprob: -8.750645637512207
    4. ']' → logprob: -9.375645637512207
    5. '][' → logprob: -10.500645637512207
    6. '   ' → logprob: -10.875645637512207
    7. ' ' → logprob: -12.125645637512207
    8. '```' → logprob: -12.125645637512207
    9. '[j' → logprob: -13.500645637512207
    10. '    ' → logprob: -13.625645637512207

Token 431: ']>' (ID: 54651)
  Prédit: ']>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.46009135246276855
    2. ']' → logprob: -1.2100913524627686
    3. ']>=' → logprob: -3.2100913524627686
    4. '[i' → logprob: -3.8350913524627686
    5. '>' → logprob: -5.210091590881348
    6. '][' → logprob: -6.085091590881348
    7. '[' → logprob: -7.835091590881348
    8. '[]>' → logprob: -9.210091590881348
    9. 'i' → logprob: -9.460091590881348
    10. '   ' → logprob: -9.585091590881348

Token 432: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003334393841214478
    2. ' ' → logprob: -8.125333786010742
    3. '>' → logprob: -10.500333786010742
    4. '   ' → logprob: -11.875333786010742
    5. '```' → logprob: -13.875333786010742
    6. '
' → logprob: -14.875333786010742
    7. '  ' → logprob: -15.000333786010742
    8. '    ' → logprob: -16.000333786010742
    9. '[' → logprob: -16.000333786010742
    10. '1' → logprob: -16.125333786010742

Token 433: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8906092643737793
    2. ',' → logprob: -1.5156092643737793
    3. '_' → logprob: -2.2656092643737793
    4. 'for' → logprob: -2.5156092643737793
    5. '   ' → logprob: -2.8906092643737793
    6. ' for' → logprob: -3.1406092643737793
    7. ' =' → logprob: -4.265609264373779
    8. '.' → logprob: -4.890609264373779
    9. '        
' → logprob: -4.890609264373779
    10. ')' → logprob: -5.015609264373779

Token 434: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9988115429878235
    2. 'i' → logprob: -1.7488114833831787
    3. ' for' → logprob: -1.9988114833831787
    4. ' i' → logprob: -2.4988114833831787
    5. 'E' → logprob: -2.8738114833831787
    6. 'for' → logprob: -2.8738114833831787
    7. ' sum' → logprob: -3.6238114833831787
    8. 'all' → logprob: -4.123811721801758
    9. 'sum' → logprob: -4.248811721801758
    10. ' E' → logprob: -4.248811721801758

Token 436: ' chain' (ID: 13464)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.4790116548538208
    2. ' code' → logprob: -1.9790116548538208
    3. ' length' → logprob: -2.1040115356445312
    4. 'length' → logprob: -2.1040115356445312
    5. 'for' → logprob: -2.8540115356445312
    6. 'next' → logprob: -2.9790115356445312
    7. ' rest' → logprob: -3.4790115356445312
    8. ' for' → logprob: -3.4790115356445312
    9. '#' → logprob: -3.9790115356445312
    10. ' total' → logprob: -3.9790115356445312

Token 437: ' goes' (ID: 8805)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16109654307365417
    2. ' must' → logprob: -3.6610965728759766
    3. ' can' → logprob: -3.7860965728759766
    4. ' =' → logprob: -4.036096572875977
    5. 'must' → logprob: -4.411096572875977
    6. ' is' → logprob: -4.661096572875977
    7. ' s' → logprob: -4.911096572875977
    8. ' of' → logprob: -5.036096572875977
    9. ' continues' → logprob: -5.161096572875977
    10. '_end' → logprob: -5.286096572875977

Token 438: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.009527279995381832
    2. ' from' → logprob: -5.384527206420898
    3. 'through' → logprob: -5.759527206420898
    4. 'over' → logprob: -8.259527206420898
    5. '   ' → logprob: -8.384527206420898
    6. 'i' → logprob: -8.509527206420898
    7. ' through' → logprob: -8.634527206420898
    8. 'continu' → logprob: -8.634527206420898
    9. 'up' → logprob: -8.884527206420898
    10. 'all' → logprob: -9.509527206420898

Token 439: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029764147475361824
    2. ' i' → logprob: -3.529764175415039
    3. ' ' → logprob: -12.154764175415039
    4. '```' → logprob: -13.029764175415039
    5. '   ' → logprob: -13.529764175415039
    6. '
' → logprob: -13.779764175415039
    7. 'start' → logprob: -14.279764175415039
    8. 'E' → logprob: -14.404764175415039
    9. ' ' → logprob: -15.029764175415039
    10. '_i' → logprob: -15.404764175415039

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.337155355140567e-05
    2. '_' → logprob: -10.250062942504883
    3. '2' → logprob: -11.250062942504883
    4. '```' → logprob: -12.500062942504883
    5. 's' → logprob: -12.625062942504883
    6. '=' → logprob: -13.000062942504883
    7. '   ' → logprob: -14.125062942504883
    8. ' =' → logprob: -14.250062942504883
    9. '
' → logprob: -14.250062942504883
    10. ' ' → logprob: -14.625062942504883

Token 441: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5780190229415894
    2. ' to' → logprob: -0.8280190229415894
    3. ',' → logprob: -7.578019142150879
    4. ' ' → logprob: -7.578019142150879
    5. '   ' → logprob: -7.953019142150879
    6. '	to' → logprob: -8.578019142150879
    7. ' through' → logprob: -9.078019142150879
    8. '=' → logprob: -10.203019142150879
    9. '_to' → logprob: -10.453019142150879
    10. '  ' → logprob: -10.578019142150879

Token 442: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931542754173279
    2. ' i' → logprob: -0.6931542754173279
    3. ' ' → logprob: -12.318154335021973
    4. '   ' → logprob: -13.818154335021973
    5. ' ' → logprob: -14.693154335021973
    6. '_i' → logprob: -14.693154335021973
    7. '	i' → logprob: -15.193154335021973
    8. '  ' → logprob: -15.818154335021973
    9. '    ' → logprob: -15.943154335021973
    10. ',' → logprob: -17.505653381347656

Token 443: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.500000953674316
    3. '２' → logprob: -17.75
    4. ' ' → logprob: -17.9375
    5. '_' → logprob: -18.8125
    6. '₂' → logprob: -19.0
    7. '   ' → logprob: -19.1875
    8. '
' → logprob: -19.375
    9. '```' → logprob: -19.4375
    10. '۲' → logprob: -19.625

Token 444: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16633401811122894
    2. '<|end|>' → logprob: -2.1663339138031006
    3. '
' → logprob: -3.9163339138031006
    4. '<|end|>' → logprob: -4.66633415222168
    5. '        
' → logprob: -5.04133415222168
    6. ',' → logprob: -6.54133415222168
    7. '   ' → logprob: -8.54133415222168
    8. 'def' → logprob: -9.04133415222168
    9. ')' → logprob: -9.04133415222168
    10. '```' → logprob: -9.04133415222168

Token 445: ' reverse' (ID: 18199)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4405626654624939
    2. ' i' → logprob: -1.1905627250671387
    3. 'from' → logprob: -3.3155627250671387
    4. ' from' → logprob: -4.190562725067139
    5. ' back' → logprob: -8.31556224822998
    6. ' ' → logprob: -8.44056224822998
    7. 'back' → logprob: -9.56556224822998
    8. ' reverse' → logprob: -9.94056224822998
    9. ' or' → logprob: -10.06556224822998
    10. 'reverse' → logprob: -10.19056224822998

Token 446: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2525242567062378
    2. '       ' → logprob: -2.1275243759155273
    3. ',' → logprob: -4.002524375915527
    4. '<|end|>' → logprob: -4.252524375915527
    5. '        
' → logprob: -4.627524375915527
    6. '_' → logprob: -5.127524375915527
    7. '\n' → logprob: -5.127524375915527
    8. ':' → logprob: -5.377524375915527
    9. ')' → logprob: -5.377524375915527
    10. '   ' → logprob: -5.502524375915527

Token 447: ' but' (ID: 889)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0696905255317688
    2. '       ' → logprob: -3.569690465927124
    3. ' 
' → logprob: -4.569690704345703
    4. '        ' → logprob: -4.694690704345703
    5. '<|end|>' → logprob: -5.069690704345703
    6. '    ' → logprob: -6.069690704345703
    7. ')' → logprob: -6.569690704345703
    8. '        
' → logprob: -6.694690704345703
    9. ',' → logprob: -7.194690704345703
    10. '#' → logprob: -7.319690704345703

Token 448: ' since' (ID: 3630)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8313649892807007
    2. ' only' → logprob: -1.7063649892807007
    3. ' all' → logprob: -1.9563649892807007
    4. ' the' → logprob: -2.4563651084899902
    5. ' not' → logprob: -2.7063651084899902
    6. 'i' → logprob: -3.9563651084899902
    7. ' no' → logprob: -3.9563651084899902
    8. 'the' → logprob: -4.58136510848999
    9. ' must' → logprob: -4.95636510848999
    10. ' contiguous' → logprob: -5.08136510848999

Token 449: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8663608431816101
    2. 'the' → logprob: -1.2413609027862549
    3. 'E' → logprob: -2.616360902786255
    4. ' indentation' → logprob: -3.491360902786255
    5. ' i' → logprob: -3.616360902786255
    6. 'i' → logprob: -3.741360902786255
    7. ' we' → logprob: -3.866360902786255
    8. ' all' → logprob: -3.866360902786255
    9. ' E' → logprob: -4.116360664367676
    10. ' regions' → logprob: -4.491360664367676

Token 450: ' chain' (ID: 13464)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.9127040505409241
    2. ' regions' → logprob: -1.2877039909362793
    3. 'regions' → logprob: -2.5377039909362793
    4. ' chain' → logprob: -2.6627039909362793
    5. ' next' → logprob: -3.6627039909362793
    6. ' intervals' → logprob: -3.9127039909362793
    7. 'interval' → logprob: -4.162703990936279
    8. ' subset' → logprob: -4.412703990936279
    9. ' chains' → logprob: -4.787703990936279
    10. 'chain' → logprob: -4.787703990936279

Token 451: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.887769341468811
    2. '<|end|>' → logprob: -0.887769341468811
    3. 's' → logprob: -2.8877692222595215
    4. ' ' → logprob: -3.3877692222595215
    5. '_' → logprob: -3.6377692222595215
    6. '<|end|>' → logprob: -3.8877692222595215
    7. ' can' → logprob: -4.3877692222595215
    8. ' continues' → logprob: -5.0127692222595215
    9. ' must' → logprob: -5.0127692222595215
    10. ' consists' → logprob: -6.2627692222595215

Token 452: ' linear' (ID: 23876)
  Prédit: 'continuous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continuous' → logprob: -1.0428801774978638
    2. ' contiguous' → logprob: -1.5428801774978638
    3. ' continuous' → logprob: -2.542880058288574
    4. ' always' → logprob: -2.667880058288574
    5. 'always' → logprob: -2.792880058288574
    6. ' linear' → logprob: -2.792880058288574
    7. 'linear' → logprob: -2.917880058288574
    8. '連' → logprob: -3.417880058288574
    9. 'cont' → logprob: -3.417880058288574
    10. 'in' → logprob: -4.667880058288574

Token 453: ' adjacency' (ID: 177015)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13716132938861847
    2. '<|end|>' → logprob: -2.5121612548828125
    3. ' ,' → logprob: -4.5121612548828125
    4. '   ' → logprob: -4.6371612548828125
    5. '<|end|>' → logprob: -4.7621612548828125
    6. ')' → logprob: -5.1371612548828125
    7. ':' → logprob: -5.3871612548828125
    8. ' and' → logprob: -5.8871612548828125
    9. '       ' → logprob: -7.1371612548828125
    10. '}' → logprob: -7.6371612548828125

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34444066882133484
    2. ':' → logprob: -1.5944406986236572
    3. '       ' → logprob: -3.4694406986236572
    4. '   ' → logprob: -3.8444406986236572
    5. ' and' → logprob: -4.469440460205078
    6. '):' → logprob: -4.719440460205078
    7. ')' → logprob: -5.719440460205078
    8. ' ,' → logprob: -6.094440460205078
    9. '.' → logprob: -6.844440460205078
    10. ' for' → logprob: -6.844440460205078

Token 455: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1158000230789185
    2. ' continue' → logprob: -1.1158000230789185
    3. ' for' → logprob: -2.365799903869629
    4. 'continue' → logprob: -2.990799903869629
    5. '#' → logprob: -3.240799903869629
    6. ' #' → logprob: -3.615799903869629
    7. '<|end|>' → logprob: -3.865799903869629
    8. 'for' → logprob: -3.990799903869629
    9. '        ' → logprob: -3.990799903869629
    10. ' ' → logprob: -4.240799903869629

Token 456: ' set' (ID: 920)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.057216085493564606
    2. ' code' → logprob: -4.307216167449951
    3. ' rest' → logprob: -4.307216167449951
    4. 'next' → logprob: -4.432216167449951
    5. ' intervals' → logprob: -5.682216167449951
    6. ' subset' → logprob: -6.307216167449951
    7. ' subsets' → logprob: -6.432216167449951
    8. '#' → logprob: -6.807216167449951
    9. ' possible' → logprob: -6.932216167449951
    10. ' same' → logprob: -7.057216167449951

Token 457: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7584109306335449
    2. ' ' → logprob: -1.633410930633545
    3. ' of' → logprob: -2.008410930633545
    4. '_' → logprob: -2.133410930633545
    5. '=' → logprob: -3.383410930633545
    6. ' is' → logprob: -4.258410930633545
    7. '<|end|>' → logprob: -4.758410930633545
    8. ',' → logprob: -5.008410930633545
    9. ')' → logprob: -5.633410930633545
    10. '<|end|>' → logprob: -6.133410930633545

Token 458: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.042045366019010544
    2. 'be' → logprob: -3.5420453548431396
    3. ' consist' → logprob: -4.417045593261719
    4. 'cons' → logprob: -9.292045593261719
    5. ' form' → logprob: -10.667045593261719
    6. ' continue' → logprob: -11.292045593261719
    7. '_be' → logprob: -12.542045593261719
    8. 'form' → logprob: -12.542045593261719
    9. ' have' → logprob: -12.792045593261719
    10. 'continue' → logprob: -12.792045593261719

Token 459: ' continuous' (ID: 27979)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4021601378917694
    2. 'continuous' → logprob: -1.5271601676940918
    3. ' a' → logprob: -3.027160167694092
    4. ' contiguous' → logprob: -3.777160167694092
    5. ' continuous' → logprob: -4.402160167694092
    6. 'interval' → logprob: -4.652160167694092
    7. 'cont' → logprob: -4.777160167694092
    8. ' intervals' → logprob: -5.527160167694092
    9. '连续' → logprob: -5.652160167694092
    10. '連' → logprob: -6.402160167694092

Token 460: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09055542200803757
    2. '        
' → logprob: -3.590555429458618
    3. '<|end|>' → logprob: -3.590555429458618
    4. '
' → logprob: -4.340555191040039
    5. ',' → logprob: -4.715555191040039
    6. '<|end|>' → logprob: -5.715555191040039
    7. '   ' → logprob: -6.590555191040039
    8. ',
' → logprob: -7.715555191040039
    9. '.' → logprob: -7.965555191040039
    10. '        ' → logprob: -8.215555191040039

Token 461: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20075251162052155
    2. 'indices' → logprob: -2.2007524967193604
    3. 'region' → logprob: -3.8257524967193604
    4. ' i' → logprob: -4.0757527351379395
    5. ' indices' → logprob: -4.4507527351379395
    6. 'the' → logprob: -4.8257527351379395
    7. 'index' → logprob: -4.8257527351379395
    8. 'regions' → logprob: -6.3257527351379395
    9. ' region' → logprob: -7.4507527351379395
    10. 'range' → logprob: -7.7007527351379395

Token 462: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7707463502883911
    2. '<|end|>' → logprob: -1.0207463502883911
    3. '   ' → logprob: -3.5207462310791016
    4. '
' → logprob: -3.5207462310791016
    5. '<|end|>' → logprob: -3.8957462310791016
    6. ':' → logprob: -4.270746231079102
    7. ' ' → logprob: -4.395746231079102
    8. ',' → logprob: -4.395746231079102
    9. '[' → logprob: -4.520746231079102
    10. '        
' → logprob: -4.645746231079102

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017166713252663612
    2. '        
' → logprob: -4.767166614532471
    3. '\n' → logprob: -6.142166614532471
    4. '
' → logprob: -6.392166614532471
    5. '\' → logprob: -6.892166614532471
    6. ' 
' → logprob: -6.892166614532471
    7. '   ' → logprob: -7.392166614532471
    8. '  
' → logprob: -8.267167091369629
    9. '           ' → logprob: -8.392167091369629
    10. '#' → logprob: -8.392167091369629

Token 464: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07344556599855423
    2. 'dp' → logprob: -3.1984455585479736
    3. '
' → logprob: -4.448445796966553
    4. '        
' → logprob: -5.448445796966553
    5. '   ' → logprob: -5.573445796966553
    6. 'possible' → logprob: -6.073445796966553
    7. 'max' → logprob: -7.073445796966553
    8. 'next' → logprob: -7.198445796966553
    9. 'for' → logprob: -7.323445796966553
    10. ' dp' → logprob: -7.323445796966553

Token 465: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28289538621902466
    2. 'possible' → logprob: -2.28289532661438
    3. 'dp' → logprob: -3.15789532661438
    4. 'for' → logprob: -3.40789532661438
    5. ' possible' → logprob: -4.282895565032959
    6. 'max' → logprob: -4.657895565032959
    7. 'interval' → logprob: -5.157895565032959
    8. '
' → logprob: -5.282895565032959
    9. '#' → logprob: -5.282895565032959
    10. ' for' → logprob: -5.532895565032959

Token 466: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9873044490814209
    2. 'possible' → logprob: -1.237304449081421
    3. 'interval' → logprob: -1.987304449081421
    4. ' for' → logprob: -2.737304449081421
    5. '#' → logprob: -3.237304449081421
    6. 'dp' → logprob: -3.987304449081421
    7. ' intervals' → logprob: -3.987304449081421
    8. ' possible' → logprob: -4.1123046875
    9. 'max' → logprob: -4.3623046875
    10. 'from' → logprob: -5.7373046875

Token 467: ' multi' (ID: 12151)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2347172200679779
    2. 'interval' → logprob: -2.2347171306610107
    3. '_' → logprob: -3.2347171306610107
    4. '       ' → logprob: -4.60971736907959
    5. ' for' → logprob: -4.85971736907959
    6. '   ' → logprob: -4.85971736907959
    7. 'sub' → logprob: -4.98471736907959
    8. '_sub' → logprob: -4.98471736907959
    9. 'perform' → logprob: -5.10971736907959
    10. 'possible' → logprob: -5.60971736907959

Token 468: '-live' (ID: 154802)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.812421441078186
    2. 'ple' → logprob: -1.562421441078186
    3. '_' → logprob: -1.812421441078186
    4. '_line' → logprob: -3.0624213218688965
    5. '-' → logprob: -3.9374213218688965
    6. '-line' → logprob: -4.0624213218688965
    7. 'p' → logprob: -4.3124213218688965
    8. ' _' → logprob: -4.3124213218688965
    9. 'for' → logprob: -4.9374213218688965
    10. '_l' → logprob: -5.0624213218688965

Token 469: ' sets' (ID: 11982)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10840015113353729
    2. '_per' → logprob: -2.6084001064300537
    3. 'perform' → logprob: -4.483400344848633
    4. '_' → logprob: -5.108400344848633
    5. ' performances' → logprob: -6.358400344848633
    6. '_s' → logprob: -6.358400344848633
    7. '_sub' → logprob: -6.483400344848633
    8. '_sets' → logprob: -6.733400344848633
    9. ' subsets' → logprob: -7.108400344848633
    10. 'sets' → logprob: -7.608400344848633

Token 470: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09431219100952148
    2. '=' → logprob: -3.7193121910095215
    3. '_' → logprob: -3.8443121910095215
    4. '   ' → logprob: -4.0943121910095215
    5. ',' → logprob: -4.9693121910095215
    6. '       ' → logprob: -5.5943121910095215
    7. '<|end|>' → logprob: -6.0943121910095215
    8. ' for' → logprob: -6.3443121910095215
    9. '_ranges' → logprob: -6.3443121910095215
    10. ' ' → logprob: -6.4693121910095215

Token 471: ' a' (ID: 261)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.6873475909233093
    2. ' day' → logprob: -0.9373475909233093
    3. 'the' → logprob: -3.312347650527954
    4. 'each' → logprob: -3.687347650527954
    5. ' each' → logprob: -4.437347412109375
    6. 'a' → logprob: -4.812347412109375
    7. 'that' → logprob: -4.937347412109375
    8. ' that' → logprob: -5.312347412109375
    9. ' the' → logprob: -5.437347412109375
    10. ' a' → logprob: -5.562347412109375

Token 472: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.6395776271820068
    2. 'day' → logprob: -0.7645776271820068
    3. ' line' → logprob: -5.514577865600586
    4. 'line' → logprob: -6.014577865600586
    5. ' ' → logprob: -8.889577865600586
    6. 'j' → logprob: -9.139577865600586
    7. 'for' → logprob: -9.764577865600586
    8. '_day' → logprob: -10.264577865600586
    9. 'def' → logprob: -10.639577865600586
    10. 'D' → logprob: -11.139577865600586

Token 473: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23170563578605652
    2. ' must' → logprob: -2.981705665588379
    3. ' are' → logprob: -3.481705665588379
    4. '       ' → logprob: -3.981705665588379
    5. ' is' → logprob: -3.981705665588379
    6. '=' → logprob: -4.106705665588379
    7. '   ' → logprob: -4.856705665588379
    8. ' can' → logprob: -4.981705665588379
    9. ' for' → logprob: -4.981705665588379
    10. '_' → logprob: -4.981705665588379

Token 474: ' contiguous' (ID: 130997)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.3399412631988525
    2. ' intervals' → logprob: -1.3399412631988525
    3. 'all' → logprob: -1.4649412631988525
    4. ' contiguous' → logprob: -2.4649412631988525
    5. 'ranges' → logprob: -2.5899412631988525
    6. 'continuous' → logprob: -3.4649412631988525
    7. ' all' → logprob: -3.8399412631988525
    8. ' ranges' → logprob: -4.214941024780273
    9. ' continuous' → logprob: -5.714941024780273
    10. 'cont' → logprob: -5.839941024780273

Token 475: ' intervals' (ID: 49900)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5485852360725403
    2. '<|end|>' → logprob: -1.0485851764678955
    3. ' subsets' → logprob: -4.298585414886475
    4. ' ' → logprob: -4.673585414886475
    5. ' _' → logprob: -4.673585414886475
    6. '   ' → logprob: -5.173585414886475
    7. '[' → logprob: -5.298585414886475
    8. '_ranges' → logprob: -5.423585414886475
    9. '<|end|>' → logprob: -5.923585414886475
    10. 's' → logprob: -6.048585414886475

Token 476: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16711580753326416
    2. '       ' → logprob: -3.5421156883239746
    3. '   ' → logprob: -3.9171156883239746
    4. ',' → logprob: -3.9171156883239746
    5. '<|end|>' → logprob: -4.292115688323975
    6. '[' → logprob: -4.542115688323975
    7. '_
' → logprob: -4.542115688323975
    8. ' ' → logprob: -5.042115688323975
    9. '
' → logprob: -5.417115688323975
    10. ' _' → logprob: -5.417115688323975

Token 477: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.10990175604820251
    2. 'i' → logprob: -2.7349016666412354
    3. ' regions' → logprob: -3.9849016666412354
    4. 'E' → logprob: -4.1099019050598145
    5. ' i' → logprob: -6.3599019050598145
    6. ' E' → logprob: -6.8599019050598145
    7. 'indices' → logprob: -7.2349019050598145
    8. '[i' → logprob: -8.234901428222656
    9. 'live' → logprob: -9.359901428222656
    10. ' indices' → logprob: -9.859901428222656

Token 478: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27759137749671936
    2. ',' → logprob: -2.5275914669036865
    3. ' for' → logprob: -3.4025914669036865
    4. 'for' → logprob: -3.6525914669036865
    5. '        ' → logprob: -4.152591228485107
    6. '   ' → logprob: -4.402591228485107
    7. '        
' → logprob: -4.402591228485107
    8. '    ' → logprob: -4.902591228485107
    9. '<|end|>' → logprob: -5.027591228485107
    10. '_' → logprob: -5.277591228485107

Token 479: ' all' (ID: 722)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.030609160661697388
    2. ' E' → logprob: -4.030609130859375
    3. 'all' → logprob: -5.030609130859375
    4. ' all' → logprob: -5.155609130859375
    5. '   ' → logprob: -10.405609130859375
    6. 'for' → logprob: -11.030609130859375
    7. ' ' → logprob: -11.530609130859375
    8. '           ' → logprob: -12.155609130859375
    9. 'i' → logprob: -12.280609130859375
    10. '```' → logprob: -13.530609130859375

Token 480: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.07079397886991501
    2. ' E' → logprob: -2.695793867111206
    3. ' ' → logprob: -8.445794105529785
    4. '0' → logprob: -8.570794105529785
    5. 'i' → logprob: -8.570794105529785
    6. '   ' → logprob: -9.945794105529785
    7. '(E' → logprob: -10.445794105529785
    8. 'e' → logprob: -10.570794105529785
    9. 'all' → logprob: -10.820794105529785
    10. '(i' → logprob: -10.945794105529785

Token 481: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000703376077581197
    2. '[' → logprob: -7.87570333480835
    3. ' [' → logprob: -8.375703811645508
    4. '```' → logprob: -10.750703811645508
    5. '[][' → logprob: -12.000703811645508
    6. 'i' → logprob: -12.125703811645508
    7. '][' → logprob: -12.125703811645508
    8. '[j' → logprob: -12.250703811645508
    9. '   ' → logprob: -12.250703811645508
    10. ')' → logprob: -12.750703811645508

Token 482: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.024347053840756416
    2. '[i' → logprob: -3.7743470668792725
    3. ']' → logprob: -7.774346828460693
    4. '[j' → logprob: -8.149347305297852
    5. '   ' → logprob: -8.899347305297852
    6. '[' → logprob: -9.649347305297852
    7. ' ][' → logprob: -9.649347305297852
    8. '
' → logprob: -10.774347305297852
    9. '       ' → logprob: -11.149347305297852
    10. 'i' → logprob: -11.274347305297852

Token 483: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0026283347979187965
    2. '][' → logprob: -6.752628326416016
    3. 'i' → logprob: -6.877628326416016
    4. ' j' → logprob: -8.127628326416016
    5. ']' → logprob: -9.752628326416016
    6. '   ' → logprob: -10.502628326416016
    7. '[j' → logprob: -10.877628326416016
    8. ' ][' → logprob: -12.002628326416016
    9. '```' → logprob: -12.502628326416016
    10. ' ' → logprob: -12.627628326416016

Token 484: ']>' (ID: 54651)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3144054114818573
    2. ']>' → logprob: -1.5644054412841797
    3. ']' → logprob: -3.3144054412841797
    4. '[i' → logprob: -3.8144054412841797
    5. '>' → logprob: -6.81440544128418
    6. '[' → logprob: -7.93940544128418
    7. ']>=' → logprob: -8.31440544128418
    8. '   ' → logprob: -8.68940544128418
    9. '>[' → logprob: -9.56440544128418
    10. '[j' → logprob: -10.31440544128418

Token 485: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029148702742531896
    2. ' ' → logprob: -8.25029182434082
    3. 'i' → logprob: -11.00029182434082
    4. '   ' → logprob: -12.12529182434082
    5. '>' → logprob: -12.50029182434082
    6. '```' → logprob: -14.62529182434082
    7. '
' → logprob: -14.75029182434082
    8. '1' → logprob: -14.75029182434082
    9. '       ' → logprob: -15.00029182434082
    10. '  ' → logprob: -15.00029182434082

Token 486: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6882522702217102
    2. '_' → logprob: -1.3132522106170654
    3. '
' → logprob: -2.9382522106170654
    4. '   ' → logprob: -2.9382522106170654
    5. 'for' → logprob: -3.8132522106170654
    6. ',' → logprob: -3.9382522106170654
    7. '        
' → logprob: -4.3132524490356445
    8. ':' → logprob: -4.5632524490356445
    9. '_
' → logprob: -4.6882524490356445
    10. ' for' → logprob: -5.1882524490356445

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030932068824768066
    2. '        
' → logprob: -4.4059319496154785
    3. '\n' → logprob: -5.1559319496154785
    4. '   ' → logprob: -6.0309319496154785
    5. ' 
' → logprob: -6.5309319496154785
    6. '
' → logprob: -6.6559319496154785
    7. 'for' → logprob: -6.6559319496154785
    8. '#' → logprob: -6.9059319496154785
    9. '\' → logprob: -7.2809319496154785
    10. 'newline' → logprob: -7.5309319496154785

Token 488: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1257934719324112
    2. '
' → logprob: -3.00079345703125
    3. '        
' → logprob: -3.87579345703125
    4. 'for' → logprob: -4.62579345703125
    5. '\n' → logprob: -4.62579345703125
    6. ' 
' → logprob: -5.62579345703125
    7. 'newline' → logprob: -5.62579345703125
    8. '```' → logprob: -6.00079345703125
    9. '#' (adapté à ' #') → logprob: -6.12579345703125
    10. 'max' → logprob: -6.37579345703125

Token 489: ' Single' (ID: 16035)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7459973692893982
    2. 'possible' → logprob: -1.495997428894043
    3. 'for' → logprob: -2.245997428894043
    4. 'max' → logprob: -2.745997428894043
    5. 'interval' → logprob: -3.995997428894043
    6. '#' → logprob: -3.995997428894043
    7. 'live' → logprob: -3.995997428894043
    8. 'valid' → logprob: -4.370997428894043
    9. 'from' → logprob: -4.620997428894043
    10. 'min' → logprob: -4.870997428894043

Token 490: ' region' (ID: 7967)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6729442477226257
    2. ' line' → logprob: -2.0479443073272705
    3. ' _' → logprob: -2.4229443073272705
    4. ' ' → logprob: -2.5479443073272705
    5. 'line' → logprob: -2.6729443073272705
    6. '   ' → logprob: -4.172944068908691
    7. '       ' → logprob: -4.172944068908691
    8. 'space' → logprob: -4.297944068908691
    9. ' #' → logprob: -4.922944068908691
    10. ' space' → logprob: -5.047944068908691

Token 491: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: ' also' (ID: 1217)
  Prédit: 'also'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'also' → logprob: -0.9820715188980103
    2. ' also' → logprob: -1.1070715188980103
    3. ' always' → logprob: -2.8570713996887207
    4. 'possible' → logprob: -2.8570713996887207
    5. 'always' → logprob: -3.1070713996887207
    6. 'a' → logprob: -3.3570713996887207
    7. ' a' → logprob: -3.3570713996887207
    8. 'allowed' → logprob: -3.9820713996887207
    9. ' valid' → logprob: -4.482071399688721
    10. ' possible' → logprob: -4.607071399688721

Token 493: ' allowed' (ID: 9279)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.6733149886131287
    2. ' possible' → logprob: -1.5483150482177734
    3. 'a' → logprob: -2.0483150482177734
    4. ' a' → logprob: -2.4233150482177734
    5. ' valid' → logprob: -3.1733150482177734
    6. 'valid' → logprob: -4.673315048217773
    7. '   ' → logprob: -5.798315048217773
    8. 'allowed' → logprob: -6.173315048217773
    9. ' allowed' → logprob: -7.423315048217773
    10. ' ' → logprob: -7.548315048217773

Token 494: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011079768650233746
    2. '        
' → logprob: -5.136079788208008
    3. '
' → logprob: -6.511079788208008
    4. '   ' → logprob: -7.011079788208008
    5. '#' → logprob: -7.511079788208008
    6. '```' → logprob: -7.761079788208008
    7. ',' → logprob: -8.636079788208008
    8. 'def' → logprob: -8.761079788208008
    9. '<|end|>' → logprob: -9.011079788208008
    10. ' for' → logprob: -9.136079788208008

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040555935353040695
    2. '        
' → logprob: -3.540555953979492
    3. '
' → logprob: -5.665555953979492
    4. '\n' → logprob: -6.790555953979492
    5. '#' → logprob: -7.165555953979492
    6. 'for' → logprob: -7.540555953979492
    7. ' 
' → logprob: -7.540555953979492
    8. '    
' → logprob: -7.790555953979492
    9. '        
        
' → logprob: -7.915555953979492
    10. '\' → logprob: -7.915555953979492

Token 496: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8432121872901917
    2. 'dp' → logprob: -1.8432121276855469
    3. 'max' → logprob: -2.093212127685547
    4. 'possible' → logprob: -2.218212127685547
    5. 'for' → logprob: -2.468212127685547
    6. 'live' → logprob: -3.968212127685547
    7. '#' (adapté à ' #') → logprob: -4.093212127685547
    8. 'interval' → logprob: -4.593212127685547
    9. 'total' → logprob: -4.843212127685547
    10. 'day' → logprob: -4.968212127685547

Token 497: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7713031768798828
    2. 'possible' → logprob: -1.1463031768798828
    3. 'interval' → logprob: -3.396303176879883
    4. '#' → logprob: -3.521303176879883
    5. '       ' → logprob: -3.646303176879883
    6. 'max' → logprob: -3.771303176879883
    7. 'valid' → logprob: -4.021303176879883
    8. 'live' → logprob: -4.021303176879883
    9. 'for' → logprob: -4.271303176879883
    10. 'day' → logprob: -4.646303176879883

Token 498: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3263090252876282
    2. 'possible' → logprob: -2.2013089656829834
    3. '       ' → logprob: -2.9513089656829834
    4. '#' → logprob: -3.0763089656829834
    5. 'interval' → logprob: -4.0763092041015625
    6. ' for' → logprob: -4.4513092041015625
    7. 'max' → logprob: -4.5763092041015625
    8. 'from' → logprob: -4.9513092041015625
    9. 'live' → logprob: -5.8263092041015625
    10. 'day' → logprob: -5.8263092041015625

Token 499: ' each' (ID: 2454)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.32304707169532776
    2. ' j' → logprob: -1.3230470418930054
    3. ' day' → logprob: -5.198047161102295
    4. ' each' → logprob: -6.698047161102295
    5. ' i' → logprob: -7.073047161102295
    6. 'day' → logprob: -7.323047161102295
    7. 'each' → logprob: -7.323047161102295
    8. 'i' → logprob: -7.323047161102295
    9. ' ' → logprob: -10.198046684265137
    10. 'for' → logprob: -10.448046684265137

Token 500: ' day' (ID: 2163)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14942196011543274
    2. ' day' → logprob: -2.7744219303131104
    3. 'day' → logprob: -3.1494219303131104
    4. ' j' → logprob: -3.3994219303131104
    5. '_j' → logprob: -10.274421691894531
    6. 'for' → logprob: -10.524421691894531
    7. 'token' → logprob: -11.024421691894531
    8. 'def' → logprob: -11.274421691894531
    9. 'line' → logprob: -11.899421691894531
    10. '```' → logprob: -11.899421691894531

Token 501: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2029883712530136
    2. 'j' → logprob: -1.8279883861541748
    3. ',' → logprob: -4.327988147735596
    4. ' ,' → logprob: -5.702988147735596
    5. '_j' → logprob: -6.202988147735596
    6. '       ' → logprob: -6.452988147735596
    7. ',j' → logprob: -6.702988147735596
    8. ' #' → logprob: -7.702988147735596
    9. '   ' → logprob: -7.952988147735596
    10. '[j' → logprob: -8.452988624572754

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023400263860821724
    2. '   ' → logprob: -4.14840030670166
    3. ' ,' → logprob: -6.39840030670166
    4. ':' → logprob: -6.39840030670166
    5. 'for' → logprob: -6.89840030670166
    6. ' for' → logprob: -7.02340030670166
    7. '       ' → logprob: -7.02340030670166
    8. ',
' → logprob: -8.14840030670166
    9. '    ' → logprob: -9.39840030670166
    10. '#' → logprob: -9.39840030670166

Token 503: ' find' (ID: 1646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2199405431747437
    2. 'possible' → logprob: -1.9699405431747437
    3. 'for' → logprob: -2.094940662384033
    4. '#' → logprob: -2.094940662384033
    5. 'valid' → logprob: -3.094940662384033
    6. 'interval' → logprob: -3.094940662384033
    7. ' intervals' → logprob: -3.094940662384033
    8. ' possible' → logprob: -3.844940662384033
    9. 'live' → logprob: -3.969940662384033
    10. ' for' → logprob: -4.094940662384033

Token 504: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32458144426345825
    2. ' intervals' → logprob: -1.9495813846588135
    3. 'interval' → logprob: -3.1995813846588135
    4. ' contiguous' → logprob: -4.074581623077393
    5. 'start' → logprob: -4.199581623077393
    6. ' i' → logprob: -4.574581623077393
    7. 'for' → logprob: -4.699581623077393
    8. 'cont' → logprob: -4.949581623077393
    9. 'the' → logprob: -5.074581623077393
    10. 'ranges' → logprob: -5.199581623077393

Token 505: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.3186602294445038
    2. 'interval' → logprob: -1.5686602592468262
    3. 'i' → logprob: -3.193660259246826
    4. 'cont' → logprob: -4.818660259246826
    5. ' contiguous' → logprob: -5.443660259246826
    6. 'possible' → logprob: -6.193660259246826
    7. ' i' → logprob: -6.318660259246826
    8. 'start' → logprob: -6.443660259246826
    9. 'sub' → logprob: -6.568660259246826
    10. 'continuous' → logprob: -6.818660259246826

Token 506: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2112370729446411
    2. ' i' → logprob: -1.3362370729446411
    3. ' where' → logprob: -1.8362370729446411
    4. '[i' → logprob: -2.8362369537353516
    5. ' of' → logprob: -2.9612369537353516
    6. ' [' → logprob: -3.8362369537353516
    7. 'where' → logprob: -3.8362369537353516
    8. ' ' → logprob: -4.086236953735352
    9. '       ' → logprob: -4.086236953735352
    10. 'with' → logprob: -4.211236953735352

Token 507: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.527783989906311
    2. '=' → logprob: -1.527783989906311
    3. '_start' → logprob: -2.0277838706970215
    4. 'n' → logprob: -3.5277838706970215
    5. 'for' → logprob: -4.7777838706970215
    6. 'start' → logprob: -5.6527838706970215
    7. ' for' → logprob: -5.6527838706970215
    8. 's' → logprob: -5.7777838706970215
    9. '_where' → logprob: -6.2777838706970215
    10. ' where' → logprob: -6.4027838706970215

Token 508: '<=' (ID: 16672)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5090157985687256
    2. '=' → logprob: -1.5090157985687256
    3. ' =' → logprob: -1.6340157985687256
    4. 'from' → logprob: -1.7590157985687256
    5. ' in' → logprob: -2.6340157985687256
    6. ' ,' → logprob: -3.5090157985687256
    7. ' from' → logprob: -3.6340157985687256
    8. ' for' → logprob: -3.7590157985687256
    9. 'for' → logprob: -4.259016036987305
    10. 'in' → logprob: -4.884016036987305

Token 509: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020406410098075867
    2. ' i' → logprob: -4.270406246185303
    3. '0' → logprob: -5.270406246185303
    4. 'C' → logprob: -7.520406246185303
    5. 'j' → logprob: -7.895406246185303
    6. ' C' → logprob: -9.520406723022461
    7. ' ' → logprob: -9.770406723022461
    8. ' j' → logprob: -11.770406723022461
    9. '=' → logprob: -13.020406723022461
    10. '   ' → logprob: -13.395406723022461

Token 510: '<=' (ID: 16672)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.6444343328475952
    2. 'i' → logprob: -2.0194344520568848
    3. ' j' → logprob: -2.0194344520568848
    4. 'j' → logprob: -2.2694344520568848
    5. ' ' → logprob: -2.2694344520568848
    6. '0' → logprob: -2.2694344520568848
    7. '2' → logprob: -2.8944344520568848
    8. ' <=' → logprob: -3.1444344520568848
    9. '=' → logprob: -3.6444344520568848
    10. '<=' → logprob: -3.8944344520568848

Token 511: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006798021495342255
    2. 'j' → logprob: -5.756797790527344
    3. 'C' → logprob: -6.006797790527344
    4. ' i' → logprob: -6.881797790527344
    5. ' ' → logprob: -10.381797790527344
    6. ' C' → logprob: -11.006797790527344
    7. '   ' → logprob: -11.006797790527344
    8. '```' → logprob: -11.506797790527344
    9. 'N' → logprob: -12.006797790527344
    10. 'W' → logprob: -12.131797790527344

Token 512: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07030051946640015
    2. 'n' → logprob: -3.445300579071045
    3. '1' → logprob: -4.070300579071045
    4. 'j' → logprob: -4.195300579071045
    5. '   ' → logprob: -7.820300579071045
    6. 'C' → logprob: -7.820300579071045
    7. ' j' → logprob: -7.945300579071045
    8. '_j' → logprob: -7.945300579071045
    9. ' ' → logprob: -8.070300102233887
    10. 'i' → logprob: -8.195300102233887

Token 513: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.4086874723434448
    2. '       ' → logprob: -1.7836874723434448
    3. ' with' → logprob: -2.1586875915527344
    4. ' =' → logprob: -2.2836875915527344
    5. ' for' → logprob: -2.5336875915527344
    6. 'for' → logprob: -2.5336875915527344
    7. '=' → logprob: -3.0336875915527344
    8. '           ' → logprob: -3.4086875915527344
    9. ' where' → logprob: -3.9086875915527344
    10. ':' → logprob: -3.9086875915527344

Token 514: ' i' (ID: 575)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.8276236057281494
    2. 'E' → logprob: -1.2026236057281494
    3. 'all' → logprob: -1.9526236057281494
    4. 'i' → logprob: -2.3276236057281494
    5. '0' → logprob: -4.70262336730957
    6. ' E' → logprob: -5.32762336730957
    7. ' i' → logprob: -5.82762336730957
    8. 'for' → logprob: -6.70262336730957
    9. ' ' → logprob: -6.95262336730957
    10. 'j' → logprob: -7.07762336730957

Token 515: ' from' (ID: 591)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.5192723274230957
    2. '1' → logprob: -1.6442723274230957
    3. '=' → logprob: -1.7692723274230957
    4. 'n' → logprob: -2.3942723274230957
    5. ' <=' → logprob: -2.5192723274230957
    6. 's' → logprob: -2.8942723274230957
    7. '>=' → logprob: -3.2692723274230957
    8. 'for' → logprob: -3.7692723274230957
    9. ' =' → logprob: -4.519272327423096
    10. ' >=' → logprob: -4.769272327423096

Token 516: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021366903092712164
    2. ' ' → logprob: -8.500213623046875
    3. 'i' → logprob: -12.750213623046875
    4. 'j' → logprob: -13.125213623046875
    5. 'range' → logprob: -13.125213623046875
    6. 'C' → logprob: -14.000213623046875
    7. 'E' → logprob: -14.500213623046875
    8. '   ' → logprob: -15.000213623046875
    9. ' range' → logprob: -15.000213623046875
    10. '1' → logprob: -15.375213623046875

Token 517: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. 'range' → logprob: -15.250000953674316
    4. 'i' → logprob: -17.375001907348633
    5. 'j' → logprob: -17.750001907348633
    6. '[' → logprob: -18.250001907348633
    7. ' range' → logprob: -19.000001907348633
    8. '(' → logprob: -19.250001907348633
    9. '```' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.625001907348633

Token 518: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0708325132727623
    2. 'to' → logprob: -2.6958324909210205
    3. '       ' → logprob: -8.070832252502441
    4. '<|end|>' → logprob: -8.695832252502441
    5. '   ' → logprob: -9.570832252502441
    6. ' ' → logprob: -9.945832252502441
    7. ',' → logprob: -10.070832252502441
    8. '           ' → logprob: -10.070832252502441
    9. '	to' → logprob: -10.195832252502441
    10. '        ' → logprob: -10.445832252502441

Token 519: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00025752498186193407
    2. ' C' → logprob: -8.37525749206543
    3. '   ' → logprob: -10.75025749206543
    4. '       ' → logprob: -13.50025749206543
    5. '(C' → logprob: -13.62525749206543
    6. ' ' → logprob: -13.87525749206543
    7. '           ' → logprob: -14.25025749206543
    8. 'i' → logprob: -14.75025749206543
    9. '	C' → logprob: -15.62525749206543
    10. '         ' → logprob: -16.37525749206543

Token 520: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.750020027160645
    4. 'D' → logprob: -15.500020027160645
    5. 'C' → logprob: -15.625020027160645
    6. '-' → logprob: -16.12502098083496
    7. '       ' → logprob: -16.56252098083496
    8. '```' → logprob: -16.62502098083496
    9. '           ' → logprob: -17.31252098083496
    10. '2' → logprob: -17.43752098083496

Token 522: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01769176498055458
    2. ' for' → logprob: -4.642691612243652
    3. 'for' → logprob: -5.392691612243652
    4. ',' → logprob: -6.267691612243652
    5. '   ' → logprob: -7.392691612243652
    6. '```' → logprob: -8.392691612243652
    7. '           ' → logprob: -8.517691612243652
    8. '        
' → logprob: -9.267691612243652
    9. '        ' → logprob: -9.392691612243652
    10. ' and' → logprob: -9.517691612243652

Token 523: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3666830360889435
    2. ' for' → logprob: -1.741683006286621
    3. ' and' → logprob: -3.491683006286621
    4. 'for' → logprob: -3.741683006286621
    5. ' i' → logprob: -3.866683006286621
    6. '        ' → logprob: -4.491683006286621
    7. ' where' → logprob: -4.741683006286621
    8. '           ' → logprob: -4.866683006286621
    9. ' while' → logprob: -4.991683006286621
    10. 'and' → logprob: -6.116683006286621

Token 524: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.019054684787988663
    2. ' all' → logprob: -4.019054889678955
    3. 'E' → logprob: -7.269054889678955
    4. '   ' → logprob: -9.144054412841797
    5. '       ' → logprob: -10.144054412841797
    6. ' ' → logprob: -10.519054412841797
    7. ' E' → logprob: -11.394054412841797
    8. '           ' → logprob: -11.769054412841797
    9. 'for' → logprob: -12.019054412841797
    10. '    ' → logprob: -12.769054412841797

Token 525: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.10103832185268402
    2. ' E' → logprob: -2.3510382175445557
    3. 'i' → logprob: -7.976038455963135
    4. '   ' → logprob: -8.601037979125977
    5. ' i' → logprob: -9.226037979125977
    6. ' ' → logprob: -9.476037979125977
    7. '           ' → logprob: -10.226037979125977
    8. 'tokens' → logprob: -10.851037979125977
    9. 'j' → logprob: -11.601037979125977
    10. '               ' → logprob: -11.726037979125977

Token 526: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006627623923122883
    2. '[' → logprob: -5.381627559661865
    3. ' [' → logprob: -6.381627559661865
    4. '[j' → logprob: -9.131628036499023
    5. '```' → logprob: -9.881628036499023
    6. 'i' → logprob: -10.006628036499023
    7. ' ' → logprob: -10.631628036499023
    8. '   ' → logprob: -10.881628036499023
    9. '[
' → logprob: -11.256628036499023
    10. ' i' → logprob: -11.756628036499023

Token 527: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011956415139138699
    2. '[i' → logprob: -4.761956214904785
    3. '[j' → logprob: -6.011956214904785
    4. ']' → logprob: -8.011956214904785
    5. '[' → logprob: -9.136956214904785
    6. 'i' → logprob: -9.636956214904785
    7. ' ][' → logprob: -9.761956214904785
    8. ']][' → logprob: -9.886956214904785
    9. '   ' → logprob: -10.261956214904785
    10. '       ' → logprob: -10.386956214904785

Token 528: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007464984664693475
    2. 'i' → logprob: -8.250746726989746
    3. ']' → logprob: -8.625746726989746
    4. '][' → logprob: -8.750746726989746
    5. ' j' → logprob: -9.125746726989746
    6. '```' → logprob: -11.500746726989746
    7. '   ' → logprob: -11.625746726989746
    8. '[j' → logprob: -11.875746726989746
    9. '
' → logprob: -12.875746726989746
    10. ' ' → logprob: -13.000746726989746

Token 529: ']>' (ID: 54651)
  Prédit: ']>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.05597492307424545
    2. ']' → logprob: -2.9309749603271484
    3. ']>=' → logprob: -7.430974960327148
    4. '>' → logprob: -8.680974960327148
    5. '[i' → logprob: -8.930974960327148
    6. '][' → logprob: -9.805974960327148
    7. ']==' → logprob: -10.305974960327148
    8. ']!=' → logprob: -10.305974960327148
    9. ']]' → logprob: -10.555974960327148
    10. ' ]' → logprob: -11.180974960327148

Token 530: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.8750581741333
    3. '>' → logprob: -12.5000581741333
    4. '=' → logprob: -12.7500581741333
    5. '   ' → logprob: -15.8750581741333
    6. '```' → logprob: -17.500059127807617
    7. '  ' → logprob: -17.875059127807617
    8. '1' → logprob: -18.250059127807617
    9. '     ' → logprob: -18.500059127807617
    10. '           ' → logprob: -18.875059127807617

Token 531: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01555668842047453
    2. ' for' → logprob: -5.015556812286377
    3. 'for' → logprob: -5.015556812286377
    4. ',' → logprob: -6.765556812286377
    5. '        
' → logprob: -8.015556335449219
    6. '.' → logprob: -8.890556335449219
    7. '           ' → logprob: -9.265556335449219
    8. ':' → logprob: -9.390556335449219
    9. '```' → logprob: -9.390556335449219
    10. ' and' → logprob: -9.640556335449219

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03842104598879814
    2. 'for' → logprob: -3.663421154022217
    3. ' for' → logprob: -4.538421154022217
    4. '```' → logprob: -7.538421154022217
    5. '        
' → logprob: -7.913421154022217
    6. '
' → logprob: -8.913420677185059
    7. '   ' → logprob: -9.413420677185059
    8. '           ' → logprob: -9.663420677185059
    9. ',' → logprob: -10.538420677185059
    10. 'from' → logprob: -10.663420677185059

Token 533: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16857032477855682
    2. 'for' → logprob: -2.5435702800750732
    3. '
' → logprob: -3.1685702800750732
    4. ' for' → logprob: -4.793570518493652
    5. '```' → logprob: -4.793570518493652
    6. '        
' → logprob: -5.043570518493652
    7. '   ' → logprob: -6.043570518493652
    8. '\n' → logprob: -6.793570518493652
    9. 'possible' → logprob: -6.918570518493652
    10. 'interval' → logprob: -7.168570518493652

Token 534: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8137190937995911
    2. 'interval' → logprob: -1.3137190341949463
    3. 'for' → logprob: -1.4387190341949463
    4. 'possible' → logprob: -3.1887190341949463
    5. 'segments' → logprob: -6.188719272613525
    6. 'valid' → logprob: -6.438719272613525
    7. ' intervals' → logprob: -6.688719272613525
    8. 'live' → logprob: -6.938719272613525
    9. '   ' → logprob: -7.438719272613525
    10. ' for' → logprob: -7.688719272613525

Token 535: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8277096152305603
    2. 'j' → logprob: -1.202709674835205
    3. ' j' → logprob: -2.202709674835205
    4. ' i' → logprob: -2.452709674835205
    5. ' day' → logprob: -4.077709674835205
    6. '_' → logprob: -4.577709674835205
    7. ' _' → logprob: -4.577709674835205
    8. 'each' → logprob: -4.827709674835205
    9. '_j' → logprob: -5.327709674835205
    10. ' each' → logprob: -5.577709674835205

Token 536: ' such' (ID: 2238)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7007467150688171
    2. ' j' → logprob: -1.200746774673462
    3. 'i' → logprob: -2.450746774673462
    4. ' i' → logprob: -2.950746774673462
    5. ' day' → logprob: -4.075746536254883
    6. '_' → logprob: -4.325746536254883
    7. ' _' → logprob: -4.450746536254883
    8. '_j' → logprob: -4.450746536254883
    9. 'interval' → logprob: -5.575746536254883
    10. 'day' → logprob: -5.950746536254883

Token 537: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.406027227640152
    2. 'i' → logprob: -1.2810271978378296
    3. '_' → logprob: -4.031027317047119
    4. ' interval' → logprob: -4.406027317047119
    5. ' i' → logprob: -4.656027317047119
    6. ' ' → logprob: -5.531027317047119
    7. 'j' → logprob: -6.156027317047119
    8. 'day' → logprob: -6.156027317047119
    9. ' _' → logprob: -7.031027317047119
    10. ' day' → logprob: -7.031027317047119

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13673335313796997
    2. ':' → logprob: -2.511733293533325
    3. ' for' → logprob: -4.511733531951904
    4. ' i' → logprob: -4.636733531951904
    5. '       ' → logprob: -5.136733531951904
    6. 'for' → logprob: -5.386733531951904
    7. '           ' → logprob: -5.636733531951904
    8. ' ,' → logprob: -5.886733531951904
    9. 'i' → logprob: -6.011733531951904
    10. '        ' → logprob: -6.636733531951904

Token 539: ' compute' (ID: 23864)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.4430567026138306
    2. ' for' → logprob: -1.9430567026138306
    3. 'sum' → logprob: -2.068056583404541
    4. 'score' → logprob: -2.693056583404541
    5. ' #' → logprob: -2.818056583404541
    6. 'for' → logprob: -2.818056583404541
    7. '#' → logprob: -3.068056583404541
    8. ' score' → logprob: -3.318056583404541
    9. ' total' → logprob: -3.318056583404541
    10. ' length' → logprob: -4.068056583404541

Token 540: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.922507643699646
    2. 'the' → logprob: -1.422507643699646
    3. ' the' → logprob: -1.672507643699646
    4. ' sum' → logprob: -2.7975077629089355
    5. 'total' → logprob: -3.2975077629089355
    6. 'score' → logprob: -3.4225077629089355
    7. ' total' → logprob: -3.9225077629089355
    8. '   ' → logprob: -5.9225077629089355
    9. 'max' → logprob: -6.0475077629089355
    10. '           ' → logprob: -6.2975077629089355

Token 541: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2468336969614029
    2. '(' → logprob: -2.7468338012695312
    3. '       ' → logprob: -2.8718338012695312
    4. 'E' → logprob: -3.3718338012695312
    5. '(E' → logprob: -3.9968338012695312
    6. 'of' → logprob: -4.621833801269531
    7. 'for' → logprob: -5.371833801269531
    8. '        ' → logprob: -5.746833801269531
    9. '_i' → logprob: -5.871833801269531
    10. ' of' → logprob: -5.996833801269531

Token 542: ' E' (ID: 457)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.32151275873184204
    2. 'E' → logprob: -1.4465126991271973
    3. ' F' → logprob: -4.321512699127197
    4. 'X' → logprob: -4.446512699127197
    5. ' E' → logprob: -4.571512699127197
    6. 'i' → logprob: -6.446512699127197
    7. '   ' → logprob: -7.196512699127197
    8. 'W' → logprob: -7.946512699127197
    9. ' X' → logprob: -8.071513175964355
    10. ' ' → logprob: -8.696513175964355

Token 543: ' and' (ID: 326)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05556362867355347
    2. '[' → logprob: -2.9305636882781982
    3. '[
' → logprob: -7.805563449859619
    4. 'i' → logprob: -9.180563926696777
    5. '[j' → logprob: -9.555563926696777
    6. '```' → logprob: -11.055563926696777
    7. '\[' → logprob: -11.430563926696777
    8. ' [' → logprob: -11.555563926696777
    9. '   ' → logprob: -12.180563926696777
    10. '[start' → logprob: -12.430563926696777

Token 544: ' sum' (ID: 4215)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.07470016926527023
    2. ' F' → logprob: -2.824700117111206
    3. 'sum' → logprob: -4.699700355529785
    4. ' sum' → logprob: -6.949700355529785
    5. 'E' → logprob: -7.199700355529785
    6. 'for' → logprob: -7.449700355529785
    7. '```' → logprob: -8.699700355529785
    8. '   ' → logprob: -8.699700355529785
    9. 'D' → logprob: -9.199700355529785
    10. ' for' → logprob: -9.199700355529785

Token 545: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.18969900906085968
    2. ' of' → logprob: -3.0646989345550537
    3. '[' → logprob: -3.3146989345550537
    4. '   ' → logprob: -3.4396989345550537
    5. '           ' → logprob: -3.8146989345550537
    6. '       ' → logprob: -4.814699172973633
    7. '(' → logprob: -4.814699172973633
    8. '    ' → logprob: -5.314699172973633
    9. 'F' → logprob: -5.814699172973633
    10. '          ' → logprob: -6.314699172973633

Token 546: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0181843563914299
    2. ' F' → logprob: -4.018184185028076
    3. '   ' → logprob: -10.518184661865234
    4. ' ' → logprob: -13.393184661865234
    5. '```' → logprob: -13.518184661865234
    6. '(F' → logprob: -14.268184661865234
    7. '`' → logprob: -15.018184661865234
    8. ' ' → logprob: -15.018184661865234
    9. '	F' → logprob: -15.143184661865234
    10. '       ' → logprob: -15.143184661865234

Token 547: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015142528340220451
    2. '        
' → logprob: -4.765142440795898
    3. ' for' → logprob: -6.765142440795898
    4. 'for' → logprob: -7.015142440795898
    5. '        ' → logprob: -7.140142440795898
    6. '
' → logprob: -7.140142440795898
    7. '\' → logprob: -7.640142440795898
    8. '           ' → logprob: -7.640142440795898
    9. '  
' → logprob: -8.390142440795898
    10. '\n' → logprob: -8.515142440795898

Token 548: ' that' (ID: 484)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.254000723361969
    2. ' i' → logprob: -2.004000663757324
    3. 'the' → logprob: -3.629000663757324
    4. ' the' → logprob: -4.004000663757324
    5. ' that' → logprob: -4.254000663757324
    6. ' all' → logprob: -4.879000663757324
    7. 'that' → logprob: -4.879000663757324
    8. 'interval' → logprob: -5.754000663757324
    9. ' day' → logprob: -6.129000663757324
    10. 'all' → logprob: -6.629000663757324

Token 549: ' day' (ID: 2163)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.02481476403772831
    2. ' interval' → logprob: -3.8998148441314697
    3. 'day' → logprob: -6.149814605712891
    4. ' day' → logprob: -6.899814605712891
    5. 'i' → logprob: -7.899814605712891
    6. 'token' → logprob: -8.39981460571289
    7. ' ' → logprob: -8.52481460571289
    8. 'j' → logprob: -10.02481460571289
    9. 'range' → logprob: -10.14981460571289
    10. 'int' → logprob: -10.27481460571289

Token 550: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08204725384712219
    2. '
' → logprob: -3.0820472240448
    3. 'for' → logprob: -4.332047462463379
    4. '   ' → logprob: -4.832047462463379
    5. '        
' → logprob: -5.332047462463379
    6. ' for' → logprob: -6.207047462463379
    7. 'interval' → logprob: -7.082047462463379
    8. '#' → logprob: -7.457047462463379
    9. '```' → logprob: -7.707047462463379
    10. '\n' → logprob: -7.832047462463379

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13523176312446594
    2. '
' → logprob: -2.6352317333221436
    3. '        
' → logprob: -3.5102317333221436
    4. 'for' → logprob: -4.760231971740723
    5. '```' → logprob: -5.260231971740723
    6. ' for' → logprob: -5.760231971740723
    7. '        ' → logprob: -6.760231971740723
    8. '   ' → logprob: -7.510231971740723
    9. 'total' → logprob: -7.760231971740723
    10. '#' → logprob: -7.885231971740723

Token 552: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049683596938848495
    2. 'for' → logprob: -4.049683570861816
    3. '
' → logprob: -4.549683570861816
    4. '        
' → logprob: -4.674683570861816
    5. ' for' → logprob: -5.424683570861816
    6. 'interval' → logprob: -6.799683570861816
    7. 'possible' → logprob: -7.174683570861816
    8. ' intervals' → logprob: -7.799683570861816
    9. '```' → logprob: -7.799683570861816
    10. '#' (adapté à ' #') → logprob: -7.924683570861816

Token 553: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10265810787677765
    2. 'for' → logprob: -2.7276580333709717
    3. 'interval' → logprob: -4.852658271789551
    4. ' for' → logprob: -5.227658271789551
    5. 'dp' → logprob: -5.727658271789551
    6. 'results' → logprob: -5.727658271789551
    7. '   ' → logprob: -5.727658271789551
    8. 'possible' → logprob: -5.727658271789551
    9. ' intervals' → logprob: -7.227658271789551
    10. '
' → logprob: -7.227658271789551

Token 554: ' same' (ID: 2684)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.32014402747154236
    2. ' C' → logprob: -1.6951440572738647
    3. 'D' → logprob: -3.945143938064575
    4. ' the' → logprob: -4.070144176483154
    5. ' we' → logprob: -4.320144176483154
    6. ' D' → logprob: -4.570144176483154
    7. 'the' → logprob: -4.945144176483154
    8. 'E' → logprob: -5.570144176483154
    9. 'i' → logprob: -5.945144176483154
    10. '   ' → logprob: -5.945144176483154

Token 555: ' day' (ID: 2163)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7739794254302979
    2. ' day' → logprob: -1.3989794254302979
    3. 'day' → logprob: -2.148979425430298
    4. '_day' → logprob: -2.648979425430298
    5. ' ' → logprob: -3.898979425430298
    6. '   ' → logprob: -4.273979187011719
    7. ' _' → logprob: -4.898979187011719
    8. ' line' → logprob: -4.898979187011719
    9. 'for' → logprob: -5.023979187011719
    10. '
' → logprob: -5.023979187011719

Token 556: ' multi' (ID: 12151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44215044379234314
    2. '       ' → logprob: -2.067150354385376
    3. ' ,' → logprob: -2.567150354385376
    4. ' ' → logprob: -2.692150354385376
    5. ' j' → logprob: -4.067150592803955
    6. '   ' → logprob: -4.317150592803955
    7. ',j' → logprob: -4.817150592803955
    8. '        ' → logprob: -4.942150592803955
    9. 'j' → logprob: -5.067150592803955
    10. '        
' → logprob: -5.567150592803955

Token 557: '-live' (ID: 154802)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0514049232006073
    2. '-' → logprob: -3.9264049530029297
    3. ' _' → logprob: -4.80140495300293
    4. '_line' → logprob: -4.80140495300293
    5. '_live' → logprob: -5.67640495300293
    6. ')' → logprob: -6.17640495300293
    7. '_-' → logprob: -7.30140495300293
    8. '_\' → logprob: -7.30140495300293
    9. '_day' → logprob: -7.55140495300293
    10. '_
' → logprob: -7.67640495300293

Token 558: ' day' (ID: 2163)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22781173884868622
    2. '_' → logprob: -2.227811813354492
    3. ' ' → logprob: -3.727811813354492
    4. '   ' → logprob: -4.352811813354492
    5. '_s' → logprob: -4.477811813354492
    6. '       ' → logprob: -4.852811813354492
    7. '_sets' → logprob: -4.977811813354492
    8. '_ranges' → logprob: -5.102811813354492
    9. 'for' → logprob: -5.977811813354492
    10. '
' → logprob: -6.102811813354492

Token 559: ' count' (ID: 3605)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2194533348083496
    2. 's' → logprob: -2.3444533348083496
    3. '       ' → logprob: -3.5944533348083496
    4. '   ' → logprob: -4.09445333480835
    5. ')' → logprob: -4.21945333480835
    6. 'def' → logprob: -5.21945333480835
    7. ' ' → logprob: -5.21945333480835
    8. ' _' → logprob: -5.96945333480835
    9. '[' → logprob: -6.09445333480835
    10. ',' → logprob: -6.09445333480835

Token 560: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13323204219341278
    2. '   ' → logprob: -3.5082321166992188
    3. 's' → logprob: -3.6332321166992188
    4. '_' → logprob: -4.008232116699219
    5. 'for' → logprob: -4.008232116699219
    6. '           ' → logprob: -5.133232116699219
    7. '        
' → logprob: -5.508232116699219
    8. '        ' → logprob: -5.758232116699219
    9. '[j' → logprob: -6.008232116699219
    10. ' =' → logprob: -6.258232116699219

Token 561: 'count' (ID: 5420)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.981141209602356
    2. '_' → logprob: -0.981141209602356
    3. '   ' → logprob: -2.1061410903930664
    4. '[' → logprob: -3.3561410903930664
    5. '       ' → logprob: -3.9811410903930664
    6. ' ' → logprob: -4.356141090393066
    7. '    ' → logprob: -4.731141090393066
    8. '=' → logprob: -4.981141090393066
    9. ' )' → logprob: -5.481141090393066
    10. '<|end|>' → logprob: -5.481141090393066

Token 562: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6391323208808899
    2. 's' → logprob: -1.1391322612762451
    3. ')' → logprob: -2.014132261276245
    4. '   ' → logprob: -5.514132499694824
    5. '_s' → logprob: -6.139132499694824
    6. '[' → logprob: -6.514132499694824
    7. '=' → logprob: -6.764132499694824
    8. ' =' → logprob: -6.889132499694824
    9. '(' → logprob: -7.389132499694824
    10. ' _' → logprob: -7.514132499694824

Token 563: ' days' (ID: 3376)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5664740204811096
    2. ')' → logprob: -1.8164739608764648
    3. '_live' → logprob: -3.191473960876465
    4. ' the' → logprob: -3.691473960876465
    5. 'the' → logprob: -4.066473960876465
    6. 'live' → logprob: -4.066473960876465
    7. 'spaces' → logprob: -4.191473960876465
    8. ' ' → logprob: -4.316473960876465
    9. ' _' → logprob: -4.441473960876465
    10. 'regions' → logprob: -4.441473960876465

Token 564: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1820453703403473
    2. '_' → logprob: -3.3070454597473145
    3. '<|end|>' → logprob: -3.6820454597473145
    4. '   ' → logprob: -4.0570454597473145
    5. '=' → logprob: -4.4320454597473145
    6. ' +=' → logprob: -4.5570454597473145
    7. ' =' → logprob: -4.5570454597473145
    8. 'def' → logprob: -5.1820454597473145
    9. ',' → logprob: -5.3070454597473145
    10. ' )' → logprob: -5.4320454597473145

Token 565: ' multiple' (ID: 7598)
  Prédit: 'live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'live' → logprob: -0.21605359017848969
    2. ' live' → logprob: -2.7160534858703613
    3. ' at' → logprob: -2.9660534858703613
    4. 'perform' → logprob: -4.341053485870361
    5. '   ' → logprob: -4.591053485870361
    6. 'at' → logprob: -4.716053485870361
    7. ' a' → logprob: -4.966053485870361
    8. 'a' → logprob: -5.341053485870361
    9. '_' → logprob: -5.716053485870361
    10. 'space' → logprob: -5.966053485870361

Token 566: ' lives' (ID: 8354)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.650457501411438
    2. '_' → logprob: -0.775457501411438
    3. ' _' → logprob: -5.150457382202148
    4. 'live' → logprob: -5.275457382202148
    5. ')' → logprob: -6.400457382202148
    6. '_per' → logprob: -7.025457382202148
    7. '_spaces' → logprob: -7.900457382202148
    8. '_perf' → logprob: -7.900457382202148
    9. '```' → logprob: -8.025457382202148
    10. ' live' → logprob: -8.400457382202148

Token 567: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29677480459213257
    2. '_' → logprob: -1.5467748641967773
    3. '   ' → logprob: -4.171774864196777
    4. '=' → logprob: -5.171774864196777
    5. '[' → logprob: -5.671774864196777
    6. '       ' → logprob: -6.171774864196777
    7. 's' → logprob: -6.296774864196777
    8. '
' → logprob: -6.671774864196777
    9. ',' → logprob: -6.921774864196777
    10. '```' → logprob: -7.046774864196777

Token 568: ' <=' (ID: 5017)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37365588545799255
    2. '
' → logprob: -2.6236557960510254
    3. '       ' → logprob: -2.7486557960510254
    4. '_
' → logprob: -3.4986557960510254
    5. '   ' → logprob: -3.9986557960510254
    6. ' =' → logprob: -4.248655796051025
    7. '        
' → logprob: -4.373655796051025
    8. '<|end|>' → logprob: -4.498655796051025
    9. 'for' → logprob: -4.748655796051025
    10. ' ' → logprob: -4.998655796051025

Token 569: ' X' (ID: 2127)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23624537885189056
    2. ' ' → logprob: -1.6112453937530518
    3. '0' → logprob: -6.361245155334473
    4. '    ' → logprob: -6.611245155334473
    5. '32' → logprob: -6.611245155334473
    6. '2' → logprob: -6.986245155334473
    7. 'C' → logprob: -7.111245155334473
    8. '  ' → logprob: -7.486245155334473
    9. '10' → logprob: -7.486245155334473
    10. ')' → logprob: -7.736245155334473

Token 570: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021186813712120056
    2. '
' → logprob: -4.521186828613281
    3. '        
' → logprob: -5.146186828613281
    4. 'for' → logprob: -6.396186828613281
    5. '```' → logprob: -7.146186828613281
    6. ' for' → logprob: -7.896186828613281
    7. '   ' → logprob: -8.646186828613281
    8. '#' → logprob: -8.771186828613281
    9. ',' → logprob: -9.021186828613281
    10. 'def' → logprob: -9.146186828613281

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.305827260017395
    2. '_' → logprob: -2.4308271408081055
    3. '        
' → logprob: -2.4308271408081055
    4. ' 
' → logprob: -3.9308271408081055
    5. '   ' → logprob: -4.5558271408081055
    6. '_
' → logprob: -4.5558271408081055
    7. '\' → logprob: -4.9308271408081055
    8. '  
' → logprob: -5.3058271408081055
    9. '_j' → logprob: -5.4308271408081055
    10. '
' → logprob: -5.5558271408081055

Token 572: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031883034855127335
    2. 'dp' → logprob: -4.906883239746094
    3. '   ' → logprob: -5.406883239746094
    4. '        
' → logprob: -5.781883239746094
    5. 'def' → logprob: -6.031883239746094
    6. '
' → logprob: -6.156883239746094
    7. '#' (adapté à ' #') → logprob: -6.406883239746094
    8. 'for' → logprob: -6.406883239746094
    9. ' 
' → logprob: -6.656883239746094
    10. '\' → logprob: -7.156883239746094

Token 573: ' Total' (ID: 17565)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03513301536440849
    2. 'for' → logprob: -4.535132884979248
    3. '   ' → logprob: -5.035132884979248
    4. '
' → logprob: -5.660132884979248
    5. 'dp' → logprob: -5.660132884979248
    6. '        
' → logprob: -6.035132884979248
    7. '`' → logprob: -6.160132884979248
    8. ' for' → logprob: -7.035132884979248
    9. '```' → logprob: -7.535132884979248
    10. '#' → logprob: -7.535132884979248

Token 574: ' burden' (ID: 39183)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0221431665122509
    2. '_live' → logprob: -5.022143363952637
    3. '_points' → logprob: -5.522143363952637
    4. ' _' → logprob: -5.897143363952637
    5. '_l' → logprob: -6.147143363952637
    6. '_score' → logprob: -6.272143363952637
    7. '_cost' → logprob: -6.647143363952637
    8. '_days' → logprob: -7.022143363952637
    9. '_sum' → logprob: -7.647143363952637
    10. 'points' → logprob: -8.522143363952637

Token 575: ' sum' (ID: 4215)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0845491886138916
    2. '   ' → logprob: -1.5845491886138916
    3. '       ' → logprob: -1.9595491886138916
    4. '_' → logprob: -2.0845491886138916
    5. '=' → logprob: -2.8345491886138916
    6. '
' → logprob: -3.7095491886138916
    7. 'def' → logprob: -4.0845489501953125
    8. '_
' → logprob: -4.2095489501953125
    9. ')' → logprob: -4.9595489501953125
    10. '=
' → logprob: -5.3345489501953125

Token 576: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8584879636764526
    2. '   ' → logprob: -1.4834879636764526
    3. '_' → logprob: -1.8584879636764526
    4. '
' → logprob: -3.233488082885742
    5. ' =' → logprob: -3.483488082885742
    6. ':' → logprob: -3.608488082885742
    7. '=' → logprob: -4.608488082885742
    8. '        
' → logprob: -4.733488082885742
    9. '_
' → logprob: -4.983488082885742
    10. ' ' → logprob: -4.983488082885742

Token 577: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.7360618710517883
    2. ' W' → logprob: -0.9860618710517883
    3. 'X' → logprob: -3.3610618114471436
    4. '100' → logprob: -3.9860618114471436
    5. 'C' → logprob: -4.111062049865723
    6. ' X' → logprob: -4.236062049865723
    7. ' ' → logprob: -4.611062049865723
    8. ' C' → logprob: -4.986062049865723
    9. ' burden' → logprob: -5.236062049865723
    10. '   ' → logprob: -5.361062049865723

Token 578: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45632827281951904
    2. '
' → logprob: -1.331328272819519
    3. '        
' → logprob: -3.0813283920288086
    4. '   ' → logprob: -4.081328392028809
    5. ' 
' → logprob: -4.831328392028809
    6. '\n' → logprob: -4.956328392028809
    7. '\' → logprob: -5.581328392028809
    8. '    
' → logprob: -5.706328392028809
    9. '  
' → logprob: -5.956328392028809
    10. 'def' → logprob: -6.206328392028809

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19387224316596985
    2. '
' → logprob: -2.4438722133636475
    3. '        
' → logprob: -3.0688722133636475
    4. '   ' → logprob: -4.193872451782227
    5. 'def' → logprob: -4.818872451782227
    6. ' 
' → logprob: -5.818872451782227
    7. '    
' → logprob: -6.068872451782227
    8. '\n' → logprob: -6.193872451782227
    9. '\' → logprob: -6.318872451782227
    10. '#' → logprob: -6.318872451782227

Token 580: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08680328726768494
    2. 'dp' → logprob: -2.9618031978607178
    3. 'max' → logprob: -5.086803436279297
    4. 'for' → logprob: -5.211803436279297
    5. '#' (adapté à ' #') → logprob: -5.336803436279297
    6. '   ' → logprob: -6.461803436279297
    7. '        
' → logprob: -6.586803436279297
    8. 'from' → logprob: -6.711803436279297
    9. 'mask' → logprob: -6.836803436279297
    10. 'possible' → logprob: -6.961803436279297

Token 581: ' We'll' (ID: 46830)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05776655673980713
    2. '       ' → logprob: -3.5577664375305176
    3. ' dp' → logprob: -4.557766437530518
    4. '#' → logprob: -5.557766437530518
    5. 'max' → logprob: -5.807766437530518
    6. 'for' → logprob: -6.432766437530518
    7. 'mask' → logprob: -6.432766437530518
    8. 'if' → logprob: -6.557766437530518
    9. 'memo' → logprob: -6.932766437530518
    10. '   ' → logprob: -7.057766437530518

Token 582: ' do' (ID: 621)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4608928859233856
    2. 'dp' → logprob: -1.960892915725708
    3. 'use' → logprob: -2.460892915725708
    4. 'def' → logprob: -2.835892915725708
    5. ' continue' → logprob: -4.960892677307129
    6. '#' → logprob: -5.210892677307129
    7. 'import' → logprob: -5.335892677307129
    8. ' dp' → logprob: -5.460892677307129
    9. ' #' → logprob: -5.585892677307129
    10. 'dfs' → logprob: -5.585892677307129

Token 583: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31100940704345703
    2. ' dp' → logprob: -1.436009407043457
    3. ' DP' → logprob: -4.686009407043457
    4. ' a' → logprob: -5.186009407043457
    5. '       ' → logprob: -5.436009407043457
    6. ' dynamic' → logprob: -5.811009407043457
    7. 'DP' → logprob: -5.936009407043457
    8. '_dp' → logprob: -6.311009407043457
    9. '   ' → logprob: -6.936009407043457
    10. '    ' → logprob: -7.311009407043457

Token 584: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7736583352088928
    2. '       ' → logprob: -0.8986583352088928
    3. '   ' → logprob: -2.773658275604248
    4. '
' → logprob: -3.023658275604248
    5. '        
' → logprob: -5.148658275604248
    6. '    
' → logprob: -5.648658275604248
    7. ' dp' → logprob: -5.898658275604248
    8. 'def' → logprob: -6.398658275604248
    9. '#' → logprob: -6.648658275604248
    10. 'DP' → logprob: -7.023658275604248

Token 585: ' days' (ID: 3376)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -1.1349762678146362
    2. 'day' → logprob: -1.5099762678146362
    3. ' days' → logprob: -2.384976387023926
    4. ' C' → logprob: -3.009976387023926
    5. ' D' → logprob: -3.134976387023926
    6. 'the' → logprob: -3.384976387023926
    7. ' the' → logprob: -3.384976387023926
    8. ' (' → logprob: -3.384976387023926
    9. 'days' → logprob: -3.509976387023926
    10. 'dp' → logprob: -3.884976387023926

Token 586: ':
' (ID: 734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9076995849609375
    2. '   ' → logprob: -1.5326995849609375
    3. '
' → logprob: -1.7826995849609375
    4. '_
' → logprob: -2.0326995849609375
    5. '       ' → logprob: -3.9076995849609375
    6. 'dp' → logprob: -4.4076995849609375
    7. '    
' → logprob: -5.0326995849609375
    8. ',' → logprob: -5.0326995849609375
    9. 'def' → logprob: -5.1576995849609375
    10. ' 
' → logprob: -5.2826995849609375

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2414674460887909
    2. '   ' → logprob: -2.8664674758911133
    3. ' 
' → logprob: -3.2414674758911133
    4. '    ' → logprob: -3.6164674758911133
    5. ' dp' → logprob: -3.9914674758911133
    6. '        
' → logprob: -4.241467475891113
    7. 'dp' → logprob: -4.616467475891113
    8. ' ' → logprob: -4.741467475891113
    9. '    
' → logprob: -5.241467475891113
    10. '
' → logprob: -5.241467475891113

Token 588: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8743553161621094
    2. 'dp' → logprob: -1.3743553161621094
    3. '       ' → logprob: -1.6243553161621094
    4. ' dp' → logprob: -2.1243553161621094
    5. ' for' → logprob: -5.624355316162109
    6. 'from' → logprob: -6.249355316162109
    7. '
' → logprob: -6.249355316162109
    8. 'for' → logprob: -6.374355316162109
    9. ' from' → logprob: -6.999355316162109
    10. '#' (adapté à ' #') → logprob: -7.124355316162109

Token 589: ' State' (ID: 5388)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08607827126979828
    2. ' dp' → logprob: -2.58607816696167
    3. '   ' → logprob: -5.21107816696167
    4. 'from' → logprob: -7.33607816696167
    5. ' for' → logprob: -8.461078643798828
    6. ' from' → logprob: -8.461078643798828
    7. ' DP' → logprob: -8.461078643798828
    8. 'DP' → logprob: -8.586078643798828
    9. 'for' → logprob: -8.836078643798828
    10. '#' → logprob: -10.711078643798828

Token 590: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.799383819103241
    2. '[' → logprob: -1.5493838787078857
    3. '_' → logprob: -2.0493838787078857
    4. ' =' → logprob: -2.0493838787078857
    5. ':' → logprob: -4.049383640289307
    6. ',' → logprob: -4.549383640289307
    7. '   ' → logprob: -4.549383640289307
    8. ' ' → logprob: -4.799383640289307
    9. '=' → logprob: -4.799383640289307
    10. ' _' → logprob: -5.674383640289307

Token 591: ' day' (ID: 2163)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7158201336860657
    2. ' (' → logprob: -1.340820074081421
    3. ' dp' → logprob: -2.215820074081421
    4. 'day' → logprob: -2.840820074081421
    5. ' day' → logprob: -3.215820074081421
    6. '(' → logprob: -3.840820074081421
    7. 'd' → logprob: -5.2158203125
    8. '   ' → logprob: -5.5908203125
    9. '(day' → logprob: -5.5908203125
    10. 'j' → logprob: -5.8408203125

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6797903776168823
    2. ' ,' → logprob: -1.3047903776168823
    3. ' =' → logprob: -2.554790496826172
    4. '   ' → logprob: -3.554790496826172
    5. ' ' → logprob: -3.679790496826172
    6. '_' → logprob: -3.804790496826172
    7. ' _' → logprob: -4.179790496826172
    8. ')' → logprob: -4.179790496826172
    9. '    ' → logprob: -4.554790496826172
    10. '_,' → logprob: -5.554790496826172

Token 593: ' burden' (ID: 39183)
  Prédit: ' multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multi' → logprob: -0.780123233795166
    2. ' x' → logprob: -2.030123233795166
    3. 'multi' → logprob: -2.030123233795166
    4. ' live' → logprob: -2.780123233795166
    5. 'x' → logprob: -2.905123233795166
    6. ' used' → logprob: -3.030123233795166
    7. 'live' → logprob: -3.280123233795166
    8. 'used' → logprob: -4.155123233795166
    9. ' multiple' → logprob: -4.530123233795166
    10. 'mult' → logprob: -4.530123233795166

Token 594: '_used' (ID: 67016)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19028489291667938
    2. '_' → logprob: -2.6902849674224854
    3. ')' → logprob: -3.1902849674224854
    4. '   ' → logprob: -3.5652849674224854
    5. ',
' → logprob: -4.440284729003906
    6. '[' → logprob: -4.815284729003906
    7. '_,' → logprob: -6.065284729003906
    8. '=' → logprob: -6.065284729003906
    9. '       ' → logprob: -6.190284729003906
    10. ' =' → logprob: -6.690284729003906

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5106767416000366
    2. '[' → logprob: -1.5106767416000366
    3. '_' → logprob: -2.385676860809326
    4. '   ' → logprob: -2.760676860809326
    5. '=' → logprob: -5.135676860809326
    6. ')' → logprob: -5.510676860809326
    7. '       ' → logprob: -6.385676860809326
    8. ' =' → logprob: -6.510676860809326
    9. '_,' → logprob: -6.635676860809326
    10. '```' → logprob: -6.760676860809326

Token 596: ' multi' (ID: 12151)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' → logprob: -0.4742315113544464
    2. ' multi' → logprob: -1.349231481552124
    3. 'mult' → logprob: -2.349231481552124
    4. ' mult' → logprob: -5.224231719970703
    5. 'live' → logprob: -5.724231719970703
    6. 'x' → logprob: -5.849231719970703
    7. 'multiple' → logprob: -6.099231719970703
    8. ' x' → logprob: -6.599231719970703
    9. ' multiple' → logprob: -6.849231719970703
    10. ' days' → logprob: -6.974231719970703

Token 597: '_live' (ID: 133570)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03927554935216904
    2. '_day' → logprob: -3.539275646209717
    3. '_dim' → logprob: -5.664275646209717
    4. '-' → logprob: -6.414275646209717
    5. '_d' → logprob: -7.164275646209717
    6. ' _' → logprob: -7.414275646209717
    7. ',' → logprob: -7.539275646209717
    8. ')' → logprob: -7.914275646209717
    9. '_days' → logprob: -8.289275169372559
    10. '_p' → logprob: -8.539275169372559

Token 598: '_day' (ID: 38491)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5432903170585632
    2. ',' → logprob: -1.293290376663208
    3. '=' → logprob: -3.043290376663208
    4. ' =' → logprob: -3.668290376663208
    5. '   ' → logprob: -3.793290376663208
    6. '[' → logprob: -4.293290138244629
    7. ')' → logprob: -4.418290138244629
    8. ':' → logprob: -4.543290138244629
    9. '       ' → logprob: -5.418290138244629
    10. '_,' → logprob: -6.043290138244629

Token 599: '_count' (ID: 7536)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9141009449958801
    2. ',' → logprob: -1.4141008853912354
    3. '_' → logprob: -1.9141008853912354
    4. '       ' → logprob: -2.6641008853912354
    5. ')' → logprob: -2.9141008853912354
    6. ' =' → logprob: -3.6641008853912354
    7. ':' → logprob: -4.1641011238098145
    8. '
' → logprob: -4.4141011238098145
    9. '=' → logprob: -4.7891011238098145
    10. '[' → logprob: -5.2891011238098145

Token 600: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5986307263374329
    2. '_' → logprob: -0.9736307263374329
    3. '   ' → logprob: -3.723630666732788
    4. ')' → logprob: -4.098630905151367
    5. ':' → logprob: -4.973630905151367
    6. '_,' → logprob: -5.098630905151367
    7. ' =' → logprob: -5.723630905151367
    8. '=' → logprob: -5.723630905151367
    9. '_
' → logprob: -6.098630905151367
    10. '       ' → logprob: -6.223630905151367

Token 601: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6247481107711792
    2. '   ' → logprob: -1.2497481107711792
    3. '       ' → logprob: -2.1247482299804688
    4. ':' → logprob: -3.9997482299804688
    5. '_' → logprob: -4.499748229980469
    6. ')' → logprob: -4.999748229980469
    7. ',
' → logprob: -5.249748229980469
    8. '[' → logprob: -5.624748229980469
    9. '```' → logprob: -5.749748229980469
    10. ' =' → logprob: -6.874748229980469

Token 602: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7410227656364441
    2. ',' → logprob: -1.2410228252410889
    3. '       ' → logprob: -1.7410228252410889
    4. '_' → logprob: -4.24102258682251
    5. ')' → logprob: -4.36602258682251
    6. ',
' → logprob: -4.74102258682251
    7. ' =' → logprob: -4.99102258682251
    8. '=' → logprob: -5.74102258682251
    9. '
' → logprob: -6.61602258682251
    10. 'for' → logprob: -6.61602258682251

Token 603: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2370322346687317
    2. '   ' → logprob: -2.362032175064087
    3. '_' → logprob: -2.612032175064087
    4. ',' → logprob: -4.862032413482666
    5. '    ' → logprob: -5.112032413482666
    6. '\' → logprob: -5.362032413482666
    7. ')' → logprob: -5.737032413482666
    8. ' 
' → logprob: -5.987032413482666
    9. ' ' → logprob: -6.237032413482666
    10. ' \' → logprob: -6.487032413482666

Token 604: ' burden' (ID: 39183)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.1560307890176773
    2. ' d' → logprob: -3.0310308933258057
    3. 'day' → logprob: -3.4060308933258057
    4. ' _' → logprob: -3.6560308933258057
    5. ' j' → logprob: -4.656030654907227
    6. 'd' → logprob: -4.656030654907227
    7. ' next' → logprob: -4.906030654907227
    8. '_' → logprob: -5.281030654907227
    9. ' ' → logprob: -5.781030654907227
    10. 'j' → logprob: -7.031030654907227

Token 605: '_used' (ID: 67016)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013009507209062576
    2. '_used' → logprob: -4.638009548187256
    3. ' _' → logprob: -6.013009548187256
    4. '[' → logprob: -7.638009548187256
    5. '   ' → logprob: -9.138009071350098
    6. ')' → logprob: -9.888009071350098
    7. '_,' → logprob: -10.888009071350098
    8. ',' → logprob: -11.013009071350098
    9. '_[' → logprob: -11.013009071350098
    10. '_use' → logprob: -11.388009071350098

Token 606: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35222071409225464
    2. ',' → logprob: -1.7272207736968994
    3. 'in' → logprob: -3.4772207736968994
    4. '   ' → logprob: -3.6022207736968994
    5. ')' → logprob: -4.35222053527832
    6. '_' → logprob: -4.47722053527832
    7. ' ,' → logprob: -4.60222053527832
    8. ' ' → logprob: -5.10222053527832
    9. '+' → logprob: -5.60222053527832
    10. '=' → logprob: -5.72722053527832

Token 607: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03805674985051155
    2. ' ' → logprob: -3.2880568504333496
    3. '   ' → logprob: -11.288056373596191
    4. ' ' → logprob: -13.663056373596191
    5. '1' → logprob: -14.038056373596191
    6. '  ' → logprob: -15.663056373596191
    7. '    ' → logprob: -15.663056373596191
    8. '```' → logprob: -15.788056373596191
    9. '       ' → logprob: -16.788057327270508
    10. '=' → logprob: -16.788057327270508

Token 608: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010020548506872728
    2. ' ' → logprob: -9.250100135803223
    3. '   ' → logprob: -13.500100135803223
    4. '1' → logprob: -14.000100135803223
    5. 'W' → logprob: -14.250100135803223
    6. '```' → logprob: -16.00010108947754
    7. '
' → logprob: -16.25010108947754
    8. '(' → logprob: -16.25010108947754
    9. '000' → logprob: -16.50010108947754
    10. '  ' → logprob: -16.62510108947754

Token 609: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15263277292251587
    2. ' ' → logprob: -3.277632713317871
    3. '   ' → logprob: -3.402632713317871
    4. ' ,' → logprob: -3.402632713317871
    5. ')' → logprob: -4.277632713317871
    6. '=' → logprob: -5.027632713317871
    7. '    ' → logprob: -5.652632713317871
    8. '_' → logprob: -5.652632713317871
    9. ',
' → logprob: -6.152632713317871
    10. '  ' → logprob: -6.152632713317871

Token 610: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.1800549179315567
    2. ' W' → logprob: -1.8050549030303955
    3. ' ' → logprob: -8.555054664611816
    4. '   ' → logprob: -9.430054664611816
    5. '  ' → logprob: -11.680054664611816
    6. '100' → logprob: -11.805054664611816
    7. 'X' → logprob: -12.430054664611816
    8. '0' → logprob: -12.555054664611816
    9. '    ' → logprob: -13.055054664611816
    10. ' ' → logprob: -13.305054664611816

Token 611: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.635322630405426
    2. '   ' → logprob: -1.1353225708007812
    3. '[' → logprob: -2.3853225708007812
    4. ':' → logprob: -3.8853225708007812
    5. '       ' → logprob: -4.385322570800781
    6. ')' → logprob: -5.385322570800781
    7. ']' → logprob: -5.385322570800781
    8. ',
' → logprob: -5.885322570800781
    9. '][' → logprob: -6.635322570800781
    10. '
' → logprob: -6.635322570800781

Token 612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6949794292449951
    2. ',' → logprob: -1.1949794292449951
    3. '   ' → logprob: -2.319979429244995
    4. ')' → logprob: -2.694979429244995
    5. '_' → logprob: -4.819979667663574
    6. ' ' → logprob: -5.819979667663574
    7. '[' → logprob: -5.819979667663574
    8. ' ,' → logprob: -5.944979667663574
    9. ',
' → logprob: -5.944979667663574
    10. '    ' → logprob: -6.194979667663574

Token 613: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33625510334968567
    2. '   ' → logprob: -2.0862550735473633
    3. ',' → logprob: -2.2112550735473633
    4. ':' → logprob: -3.8362550735473633
    5. ')' → logprob: -4.461255073547363
    6. ',
' → logprob: -5.586255073547363
    7. '#' (adapté à ' #') → logprob: -6.336255073547363
    8. '.' → logprob: -6.711255073547363
    9. '           ' → logprob: -6.836255073547363
    10. '[' → logprob: -6.836255073547363

Token 614: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3184080421924591
    2. ',' → logprob: -1.9434080123901367
    3. '   ' → logprob: -2.8184080123901367
    4. 'for' → logprob: -4.193408012390137
    5. ' for' → logprob: -4.443408012390137
    6. 'dp' → logprob: -4.818408012390137
    7. '#' → logprob: -5.193408012390137
    8. ',
' → logprob: -5.193408012390137
    9. '
' → logprob: -5.443408012390137
    10. ')' → logprob: -5.443408012390137

Token 615: ' multi' (ID: 12151)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.683596134185791
    2. 'day' → logprob: -1.683596134185791
    3. ' D' → logprob: -2.058596134185791
    4. 'D' → logprob: -2.183596134185791
    5. ' C' → logprob: -4.433596134185791
    6. 'C' → logprob: -4.683596134185791
    7. '   ' → logprob: -4.683596134185791
    8. ' days' → logprob: -4.683596134185791
    9. ' multi' → logprob: -5.058596134185791
    10. 'd' → logprob: -5.308596134185791

Token 616: '_live' (ID: 133570)
  Prédit: '_live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.0057090697810053825
    2. '_' → logprob: -5.255709171295166
    3. ' _' → logprob: -8.255708694458008
    4. 'Live' → logprob: -9.380708694458008
    5. '_day' → logprob: -10.255708694458008
    6. '_used' → logprob: -11.255708694458008
    7. '_L' → logprob: -11.505708694458008
    8. '_use' → logprob: -12.005708694458008
    9. '_l' → logprob: -12.005708694458008
    10. '   ' → logprob: -12.005708694458008

Token 617: '_day' (ID: 38491)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.07097265869379044
    2. '_day' → logprob: -2.6959726810455322
    3. '_count' → logprob: -7.070972442626953
    4. '_' → logprob: -9.445972442626953
    5. ' _' → logprob: -9.695972442626953
    6. '_days' → logprob: -11.195972442626953
    7. '_alive' → logprob: -12.695972442626953
    8. '\' → logprob: -12.820972442626953
    9. '_cnt' → logprob: -12.945972442626953
    10. ''_' → logprob: -13.070972442626953

Token 618: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00033308175625279546
    2. 's' → logprob: -8.375332832336426
    3. '_counts' → logprob: -10.375332832336426
    4. 'count' → logprob: -11.000332832336426
    5. ' _' → logprob: -11.375332832336426
    6. '_used' → logprob: -11.750332832336426
    7. '```' → logprob: -11.875332832336426
    8. '_cnt' → logprob: -12.000332832336426
    9. '\' → logprob: -12.625332832336426
    10. '_' → logprob: -13.000332832336426

Token 619: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9592483043670654
    2. 'from' → logprob: -0.9592483043670654
    3. ' in' → logprob: -2.2092483043670654
    4. ' from' → logprob: -3.4592483043670654
    5. ')' → logprob: -3.8342483043670654
    6. ' ,' → logprob: -4.5842485427856445
    7. '_from' → logprob: -4.7092485427856445
    8. '   ' → logprob: -4.9592485427856445
    9. '_' → logprob: -5.0842485427856445
    10. '_used' → logprob: -5.2092485427856445

Token 620: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757032617926598
    2. ' ' → logprob: -4.634757041931152
    3. '   ' → logprob: -14.509757041931152
    4. ' ' → logprob: -15.384757041931152
    5. '  ' → logprob: -16.572256088256836
    6. '```' → logprob: -17.197256088256836
    7. '1' → logprob: -17.759756088256836
    8. '=' → logprob: -17.822256088256836
    9. '    ' → logprob: -18.259756088256836
    10. '     ' → logprob: -18.259756088256836

Token 621: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.016616291366518e-05
    2. ' ' → logprob: -9.625070571899414
    3. 'X' → logprob: -12.500070571899414
    4. '1' → logprob: -17.250070571899414
    5. ' X' → logprob: -17.375070571899414
    6. '   ' → logprob: -17.625070571899414
    7. 'x' → logprob: -17.625070571899414
    8. '
' → logprob: -18.000070571899414
    9. '```' → logprob: -18.562570571899414
    10. '=' → logprob: -18.812570571899414

Token 622: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6016936898231506
    2. '0' → logprob: -1.1016936302185059
    3. ' to' → logprob: -2.226693630218506
    4. 'import' → logprob: -5.101693630218506
    5. '+' → logprob: -6.976693630218506
    6. '           ' → logprob: -7.226693630218506
    7. '1' → logprob: -7.226693630218506
    8. 'def' → logprob: -7.601693630218506
    9. ' ' → logprob: -7.726693630218506
    10. '   ' → logprob: -7.851693630218506

Token 623: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0004317420825827867
    2. ' X' → logprob: -7.750431537628174
    3. ' ' → logprob: -14.125432014465332
    4. '   ' → logprob: -14.875432014465332
    5. '  ' → logprob: -18.250431060791016
    6. '	X' → logprob: -18.375431060791016
    7. '
' → logprob: -18.500431060791016
    8. '```' → logprob: -19.125431060791016
    9. '1' → logprob: -19.375431060791016
    10. '>X' → logprob: -19.625431060791016

Token 624: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.094814658164978
    2. '       ' → logprob: -1.219814658164978
    3. '_' → logprob: -1.344814658164978
    4. ',' → logprob: -3.0948147773742676
    5. ':' → logprob: -3.8448147773742676
    6. '
' → logprob: -4.719814777374268
    7. ')' → logprob: -5.219814777374268
    8. '_
' → logprob: -5.219814777374268
    9. ' =' → logprob: -5.594814777374268
    10. '        
' → logprob: -5.844814777374268

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16183578968048096
    2. '   ' → logprob: -2.9118356704711914
    3. '_' → logprob: -3.1618356704711914
    4. ',' → logprob: -4.036835670471191
    5. ')' → logprob: -4.786835670471191
    6. '        
' → logprob: -4.911835670471191
    7. '
' → logprob: -5.661835670471191
    8. '\' → logprob: -5.786835670471191
    9. '    
' → logprob: -6.161835670471191
    10. '[' → logprob: -6.411835670471191

Token 626: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1335890293121338
    2. '   ' → logprob: -3.133589029312134
    3. '\' → logprob: -3.633589029312134
    4. '\n' → logprob: -3.633589029312134
    5. '
' → logprob: -4.508588790893555
    6. ' 
' → logprob: -5.133588790893555
    7. '        
' → logprob: -5.758588790893555
    8. ' \' → logprob: -6.383588790893555
    9. '    
' → logprob: -6.883588790893555
    10. ',' → logprob: -7.008588790893555

Token 627: ' DP' (ID: 51992)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045747239142656326
    2. '   ' → logprob: -4.04574728012085
    3. 'dp' → logprob: -4.29574728012085
    4. '\' → logprob: -6.17074728012085
    5. '
' → logprob: -6.17074728012085
    6. '\n' → logprob: -6.92074728012085
    7. '        
' → logprob: -7.04574728012085
    8. ' 
' → logprob: -7.04574728012085
    9. ',' → logprob: -7.17074728012085
    10. '_' → logprob: -7.42074728012085

Token 628: ' stores' (ID: 14604)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45058906078338623
    2. '_' → logprob: -1.2005890607833862
    3. '=' → logprob: -3.325589179992676
    4. '[' → logprob: -4.325589179992676
    5. ')' → logprob: -4.825589179992676
    6. ' _' → logprob: -6.825589179992676
    7. ']' → logprob: -7.200589179992676
    8. '   ' → logprob: -7.700589179992676
    9. ' ' → logprob: -7.825589179992676
    10. '```' → logprob: -8.200589179992676

Token 629: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.395332932472229
    2. '-' → logprob: -1.645332932472229
    3. 'True' → logprob: -2.1453328132629395
    4. 'False' → logprob: -3.0203328132629395
    5. 'None' → logprob: -3.1453328132629395
    6. ' True' → logprob: -3.1453328132629395
    7. ' -' → logprob: -3.2703328132629395
    8. ' max' → logprob: -3.3953328132629395
    9. '0' → logprob: -3.3953328132629395
    10. 'maximum' → logprob: -3.3953328132629395

Token 630: ' profit' (ID: 15971)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.1353665590286255
    2. '_score' → logprob: -1.3853665590286255
    3. '_value' → logprob: -1.7603665590286255
    4. '_' → logprob: -2.010366439819336
    5. '_live' → logprob: -3.260366439819336
    6. 'score' → logprob: -3.760366439819336
    7. '_profit' → logprob: -4.385366439819336
    8. 'value' → logprob: -5.010366439819336
    9. '_val' → logprob: -5.135366439819336
    10. '_point' → logprob: -5.260366439819336

Token 631: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.306230068206787
    2. '   ' → logprob: -1.306230068206787
    3. '       ' → logprob: -1.931230068206787
    4. '
' → logprob: -2.306230068206787
    5. ' =' → logprob: -2.556230068206787
    6. '_
' → logprob: -2.681230068206787
    7. 'def' → logprob: -4.056230068206787
    8. '\' → logprob: -4.806230068206787
    9. ',' → logprob: -5.181230068206787
    10. '\n' → logprob: -5.556230068206787

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03044486977159977
    2. '   ' → logprob: -4.405445098876953
    3. '        
' → logprob: -4.530445098876953
    4. '
' → logprob: -5.780445098876953
    5. '    
' → logprob: -6.780445098876953
    6. ',' → logprob: -7.280445098876953
    7. '\n' → logprob: -8.280445098876953
    8. '\' → logprob: -8.530445098876953
    9. '    ' → logprob: -8.780445098876953
    10. ')' → logprob: -8.780445098876953

Token 633: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45051729679107666
    2. 'dp' → logprob: -1.2005172967910767
    3. '   ' → logprob: -2.825517177581787
    4. 'DP' → logprob: -7.325517177581787
    5. '        
' → logprob: -7.950517177581787
    6. '
' → logprob: -8.075517654418945
    7. 'for' → logprob: -8.075517654418945
    8. 'import' → logprob: -8.825517654418945
    9. '    
' → logprob: -8.950517654418945
    10. 'from' → logprob: -8.950517654418945

Token 634: ' Since' (ID: 12265)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.031398653984069824
    2. '       ' → logprob: -3.5313987731933594
    3. 'for' → logprob: -7.281398773193359
    4. 'DP' → logprob: -7.531398773193359
    5. '   ' → logprob: -8.65639877319336
    6. 'if' → logprob: -9.28139877319336
    7. '
' → logprob: -9.78139877319336
    8. ' dp' → logprob: -9.90639877319336
    9. 'from' → logprob: -10.90639877319336
    10. 'import' → logprob: -12.03139877319336

Token 635: ' W' (ID: 486)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3670521080493927
    2. ' C' → logprob: -1.7420520782470703
    3. 'D' → logprob: -2.7420520782470703
    4. ' ' → logprob: -3.3670520782470703
    5. ' D' → logprob: -3.9920520782470703
    6. 'pos' → logprob: -5.74205207824707
    7. '   ' → logprob: -5.74205207824707
    8. '    ' → logprob: -6.49205207824707
    9. 'd' → logprob: -6.61705207824707
    10. 'dp' → logprob: -7.74205207824707

Token 636: '=' (ID: 28)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24055097997188568
    2. '[' → logprob: -1.7405509948730469
    3. '=' → logprob: -3.740550994873047
    4. ')' → logprob: -5.115550994873047
    5. ',' → logprob: -5.990550994873047
    6. ' =' → logprob: -6.740550994873047
    7. '   ' → logprob: -7.115550994873047
    8. '[
' → logprob: -7.365550994873047
    9. '+' → logprob: -7.615550994873047
    10. ']' → logprob: -7.740550994873047

Token 637: '50' (ID: 1434)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2682432234287262
    2. '0' → logprob: -3.1432433128356934
    3. '10' → logprob: -3.2682433128356934
    4. '100' → logprob: -3.2682433128356934
    5. ' max' → logprob: -3.6432433128356934
    6. ''' → logprob: -4.018243312835693
    7. '   ' → logprob: -4.393243312835693
    8. 'max' → logprob: -4.768243312835693
    9. '1' → logprob: -5.143243312835693
    10. '"' → logprob: -5.518243312835693

Token 638: ' max' (ID: 2999)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3919813930988312
    2. '   ' → logprob: -2.641981363296509
    3. '_' → logprob: -3.141981363296509
    4. ',' → logprob: -3.266981363296509
    5. ')' → logprob: -3.391981363296509
    6. ':' → logprob: -3.891981363296509
    7. ',
' → logprob: -4.266981601715088
    8. '[' → logprob: -4.516981601715088
    9. '       ' → logprob: -4.516981601715088
    10. 'def' → logprob: -4.641981601715088

Token 639: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19312936067581177
    2. '
' → logprob: -1.943129301071167
    3. '        
' → logprob: -4.318129539489746
    4. '   ' → logprob: -4.693129539489746
    5. 'dp' → logprob: -5.693129539489746
    6. '```' → logprob: -7.068129539489746
    7. '    
' → logprob: -7.193129539489746
    8. ')' → logprob: -7.318129539489746
    9. 'def' → logprob: -8.068129539489746
    10. '  
' → logprob: -8.318129539489746

Token 640: ' X' (ID: 2127)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0490622520446777
    2. ' for' → logprob: -1.7990622520446777
    3. 'dp' → logprob: -1.7990622520446777
    4. '   ' → logprob: -1.9240622520446777
    5. 'for' → logprob: -2.6740622520446777
    6. ' dp' → logprob: -3.9240622520446777
    7. ' ' → logprob: -4.549062252044678
    8. '    ' → logprob: -4.549062252044678
    9. ' 
' → logprob: -4.674062252044678
    10. ')' → logprob: -5.049062252044678

Token 641: '=' (ID: 28)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3939560651779175
    2. '=' → logprob: -1.6439560651779175
    3. ' +' → logprob: -2.768956184387207
    4. ' =' → logprob: -3.893956184387207
    5. '<=' → logprob: -3.893956184387207
    6. ' <=' → logprob: -4.518956184387207
    7. '
' → logprob: -5.643956184387207
    8. 'max' → logprob: -5.643956184387207
    9. '   ' → logprob: -5.768956184387207
    10. ' <' → logprob: -6.643956184387207

Token 642: '5' (ID: 20)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.7445532083511353
    2. '51' → logprob: -1.1195532083511353
    3. '10' → logprob: -2.8695530891418457
    4. ' ' → logprob: -3.1195530891418457
    5. '5' → logprob: -3.4945530891418457
    6. '11' → logprob: -3.7445530891418457
    7. '2' → logprob: -4.119553089141846
    8. '6' → logprob: -4.619553089141846
    9. '3' → logprob: -4.994553089141846
    10. '20' → logprob: -6.244553089141846

Token 643: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03152121230959892
    2. '   ' → logprob: -4.656521320343018
    3. 'dp' → logprob: -4.781521320343018
    4. '
' → logprob: -5.406521320343018
    5. 'for' → logprob: -6.156521320343018
    6. '        
' → logprob: -6.531521320343018
    7. '```' → logprob: -7.281521320343018
    8. 'def' → logprob: -7.406521320343018
    9. ' for' → logprob: -7.531521320343018
    10. '`' → logprob: -7.531521320343018

Token 644: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8654467463493347
    2. '   ' → logprob: -1.2404468059539795
    3. '
' → logprob: -1.9904468059539795
    4. ':' → logprob: -2.4904468059539795
    5. ':
' → logprob: -4.4904465675354
    6. ',' → logprob: -4.7404465675354
    7. ')' → logprob: -5.3654465675354
    8. '    
' → logprob: -5.3654465675354
    9. '        
' → logprob: -5.4904465675354
    10. ' =' → logprob: -5.4904465675354

Token 645: ' D' (ID: 415)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3356115221977234
    2. '       ' → logprob: -2.210611581802368
    3. ' dp' → logprob: -2.835611581802368
    4. '   ' → logprob: -2.960611581802368
    5. ')' → logprob: -4.085611343383789
    6. ' for' → logprob: -4.085611343383789
    7. 'for' → logprob: -4.710611343383789
    8. 'DP' → logprob: -5.835611343383789
    9. '#' → logprob: -6.085611343383789
    10. 'import' → logprob: -6.085611343383789

Token 646: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.044524908065796
    2. ' =' → logprob: -1.544524908065796
    3. '   ' → logprob: -1.919524908065796
    4. '+' → logprob: -2.294524908065796
    5. ')' → logprob: -3.169524908065796
    6. ' <=' → logprob: -3.419524908065796
    7. ',' → logprob: -3.669524908065796
    8. '       ' → logprob: -4.419525146484375
    9. '_' → logprob: -4.544525146484375
    10. ' +=' → logprob: -4.669525146484375

Token 647: '30' (ID: 1130)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '50' → logprob: -0.8078480958938599
    2. 'D' → logprob: -1.3078480958938599
    3. ' D' → logprob: -1.9328480958938599
    4. ' ' → logprob: -2.4328479766845703
    5. '0' → logprob: -4.05784797668457
    6. '10' → logprob: -4.30784797668457
    7. '   ' → logprob: -5.30784797668457
    8. '100' → logprob: -5.80784797668457
    9. '20' → logprob: -6.18284797668457
    10. '5' → logprob: -6.18284797668457

Token 648: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.544968843460083
    2. '
' → logprob: -1.794968843460083
    3. '       ' → logprob: -1.794968843460083
    4. ':' → logprob: -3.669968843460083
    5. ',' → logprob: -4.919968605041504
    6. ':
' → logprob: -4.919968605041504
    7. ')' → logprob: -5.044968605041504
    8. 'def' → logprob: -5.294968605041504
    9. '    
' → logprob: -5.669968605041504
    10. '[' → logprob: -5.794968605041504

Token 649: ' C' (ID: 363)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6165278553962708
    2. '       ' → logprob: -1.241527795791626
    3. ' dp' → logprob: -3.241527795791626
    4. '   ' → logprob: -3.491527795791626
    5. '
' → logprob: -3.616527795791626
    6. ')' → logprob: -4.116528034210205
    7. 'def' → logprob: -4.241528034210205
    8. ' for' → logprob: -4.866528034210205
    9. 'import' → logprob: -4.866528034210205
    10. '#' → logprob: -5.116528034210205

Token 650: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9593473076820374
    2. ')' → logprob: -1.4593472480773926
    3. '=' → logprob: -1.8343472480773926
    4. '   ' → logprob: -2.9593472480773926
    5. '_' → logprob: -3.0843472480773926
    6. ']' → logprob: -3.2093472480773926
    7. '[
' → logprob: -3.4593472480773926
    8. ' =' → logprob: -4.084347248077393
    9. ',' → logprob: -4.709347248077393
    10. '+' → logprob: -5.334347248077393

Token 651: '15' (ID: 1055)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '50' → logprob: -1.2913120985031128
    2. '20' → logprob: -1.7913120985031128
    3. '10' → logprob: -2.0413122177124023
    4. 'C' → logprob: -2.2913122177124023
    5. '30' → logprob: -2.4163122177124023
    6. '5' → logprob: -2.5413122177124023
    7. '0' → logprob: -2.6663122177124023
    8. '4' → logprob: -3.9163122177124023
    9. ' ' → logprob: -4.416312217712402
    10. '3' → logprob: -4.541312217712402

Token 652: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8417403101921082
    2. '   ' → logprob: -1.466740369796753
    3. '
' → logprob: -1.966740369796753
    4. '_' → logprob: -2.841740369796753
    5. '        
' → logprob: -3.466740369796753
    6. ':' → logprob: -3.716740369796753
    7. '\n' → logprob: -3.841740369796753
    8. '    
' → logprob: -4.091740131378174
    9. '_
' → logprob: -4.716740131378174
    10. ',' → logprob: -5.341740131378174

Token 653: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17437614500522614
    2. 'possible' → logprob: -3.6743762493133545
    3. ' intervals' → logprob: -3.7993762493133545
    4. '   ' → logprob: -3.9243762493133545
    5. 'interval' → logprob: -4.049376010894775
    6. ' possible' → logprob: -4.299376010894775
    7. '#' → logprob: -4.674376010894775
    8. '        
' → logprob: -4.799376010894775
    9. 'dp' → logprob: -5.049376010894775
    10. 'for' → logprob: -5.299376010894775

Token 654: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.226523756980896
    2. '   ' → logprob: -1.351523756980896
    3. ' can' → logprob: -2.7265238761901855
    4. '=' → logprob: -2.8515238761901855
    5. ' continue' → logprob: -2.8515238761901855
    6. ' ' → logprob: -3.1015238761901855
    7. '       ' → logprob: -3.3515238761901855
    8. ')' → logprob: -3.6015238761901855
    9. ' will' → logprob: -3.7265238761901855
    10. '#' → logprob: -3.8515238761901855

Token 655: ' do' (ID: 621)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.40605250000953674
    2. '   ' → logprob: -1.7810524702072144
    3. '```' → logprob: -3.531052589416504
    4. '       ' → logprob: -3.656052589416504
    5. ' continue' → logprob: -3.781052589416504
    6. 'pre' → logprob: -3.906052589416504
    7. '#' → logprob: -4.781052589416504
    8. 'process' → logprob: -5.031052589416504
    9. ')' → logprob: -5.031052589416504
    10. 'implement' → logprob: -5.281052589416504

Token 656: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5970865488052368
    2. '   ' → logprob: -1.7220865488052368
    3. 'dp' → logprob: -1.9720865488052368
    4. ')' → logprob: -2.0970864295959473
    5. '```' → logprob: -2.0970864295959473
    6. '       ' → logprob: -2.5970864295959473
    7. ']' → logprob: -3.2220864295959473
    8. 'pass' → logprob: -3.4720864295959473
    9. ' for' → logprob: -3.7220864295959473
    10. 'continue' → logprob: -3.8470864295959473

Token 657: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39865291118621826
    2. '   ' → logprob: -2.148653030395508
    3. '
' → logprob: -2.273653030395508
    4. ':' → logprob: -3.273653030395508
    5. '        
' → logprob: -3.898653030395508
    6. '\n' → logprob: -4.023653030395508
    7. '    
' → logprob: -5.148653030395508
    8. ':
' → logprob: -5.273653030395508
    9. '  
' → logprob: -5.898653030395508
    10. ')' → logprob: -6.148653030395508

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022755831480026245
    2. '        
' → logprob: -4.2727556228637695
    3. '   ' → logprob: -5.5227556228637695
    4. '
' → logprob: -6.8977556228637695
    5. 'dp' → logprob: -7.2727556228637695
    6. '    
' → logprob: -7.7727556228637695
    7. '\n' → logprob: -8.14775562286377
    8. '#' → logprob: -8.52275562286377
    9. 'possible' → logprob: -8.52275562286377
    10. '`' → logprob: -8.52275562286377

Token 659: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18988418579101562
    2. 'dp' → logprob: -2.6898841857910156
    3. 'possible' → logprob: -3.5648841857910156
    4. 'interval' → logprob: -3.8148841857910156
    5. 'day' → logprob: -4.314884185791016
    6. '#' (adapté à ' #') → logprob: -4.314884185791016
    7. 'live' → logprob: -5.189884185791016
    8. '   ' → logprob: -5.564884185791016
    9. 'for' → logprob: -5.564884185791016
    10. 'perform' → logprob: -5.814884185791016

Token 660: ' For' (ID: 2214)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.8895890712738037
    2. 'dp' → logprob: -1.2645890712738037
    3. 'possible' → logprob: -1.8895890712738037
    4. 'day' → logprob: -2.7645890712738037
    5. '#' → logprob: -3.3895890712738037
    6. '   ' → logprob: -3.7645890712738037
    7. 'max' → logprob: -5.264589309692383
    8. '       ' → logprob: -5.389589309692383
    9. 'live' → logprob: -5.514589309692383
    10. 'perform' → logprob: -5.764589309692383

Token 661: ' each' (ID: 2454)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04659750312566757
    2. ' j' → logprob: -3.171597480773926
    3. ' day' → logprob: -6.796597480773926
    4. '_j' → logprob: -6.796597480773926
    5. 'day' → logprob: -7.171597480773926
    6. 'each' → logprob: -8.296597480773926
    7. ' each' → logprob: -8.671597480773926
    8. '#' → logprob: -10.671597480773926
    9. '```' → logprob: -10.796597480773926
    10. 'd' → logprob: -10.921597480773926

Token 662: ' day' (ID: 2163)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4312035143375397
    2. ' j' → logprob: -1.1812034845352173
    3. ' day' → logprob: -3.431203603744507
    4. 'day' → logprob: -4.681203365325928
    5. '_j' → logprob: -6.556203365325928
    6. '   ' → logprob: -9.181203842163086
    7. '_' → logprob: -9.806203842163086
    8. ' _' → logprob: -9.931203842163086
    9. '_day' → logprob: -10.181203842163086
    10. '```' → logprob: -10.806203842163086

Token 663: ',' (ID: 11)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.08220329880714417
    2. 'j' → logprob: -3.2072033882141113
    3. '       ' → logprob: -4.582203388214111
    4. ' for' → logprob: -4.707203388214111
    5. ',' → logprob: -5.207203388214111
    6. ' in' → logprob: -5.332203388214111
    7. '   ' → logprob: -5.582203388214111
    8. '_j' → logprob: -6.207203388214111
    9. ' ,' → logprob: -7.207203388214111
    10. ',j' → logprob: -7.332203388214111

Token 664: ' prepare' (ID: 13708)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.1218841075897217
    2. 'possible' → logprob: -1.2468841075897217
    3. ' intervals' → logprob: -2.2468841075897217
    4. '   ' → logprob: -2.4968841075897217
    5. '#' → logprob: -3.1218841075897217
    6. '       ' → logprob: -3.4968841075897217
    7. ' possible' → logprob: -3.7468841075897217
    8. 'day' → logprob: -3.8718841075897217
    9. 'for' → logprob: -4.371884346008301
    10. 'c' → logprob: -4.871884346008301

Token 665: ' all' (ID: 722)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1421627700328827
    2. ' intervals' → logprob: -3.142162799835205
    3. 'c' → logprob: -3.517162799835205
    4. 'possible' → logprob: -3.767162799835205
    5. 'valid' → logprob: -4.392162799835205
    6. '   ' → logprob: -4.892162799835205
    7. 'perform' → logprob: -5.142162799835205
    8. 'day' → logprob: -5.642162799835205
    9. 'options' → logprob: -6.267162799835205
    10. 'poss' → logprob: -7.017162799835205

Token 666: ' possible' (ID: 4149)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.44739675521850586
    2. ' intervals' → logprob: -1.0723967552185059
    3. 'possible' → logprob: -4.322396755218506
    4. 'perform' → logprob: -6.822396755218506
    5. 'valid' → logprob: -6.947396755218506
    6. ' possible' → logprob: -6.947396755218506
    7. ' valid' → logprob: -7.447396755218506
    8. 'sub' → logprob: -7.697396755218506
    9. '   ' → logprob: -7.947396755218506
    10. 'poss' → logprob: -8.822397232055664

Token 667: ' performances' (ID: 27880)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6502550840377808
    2. 'perform' → logprob: -1.1502550840377808
    3. ' intervals' → logprob: -2.4002552032470703
    4. '_per' → logprob: -4.27525520324707
    5. '_inter' → logprob: -4.27525520324707
    6. 'sub' → logprob: -4.65025520324707
    7. 'options' → logprob: -4.90025520324707
    8. ' subsets' → logprob: -4.90025520324707
    9. ' performances' → logprob: -5.65025520324707
    10. '_sub' → logprob: -5.65025520324707

Token 668: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6626680493354797
    2. '_per' → logprob: -1.537667989730835
    3. '       ' → logprob: -2.412667989730835
    4. '_j' → logprob: -2.787667989730835
    5. '   ' → logprob: -3.287667989730835
    6. '_' → logprob: -3.662667989730835
    7. '_possible' → logprob: -4.412668228149414
    8. '_inter' → logprob: -4.662668228149414
    9. '=' → logprob: -4.912668228149414
    10. ',' → logprob: -5.912668228149414

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04691160470247269
    2. 'possible' → logprob: -4.421911716461182
    3. ' possible' → logprob: -5.296911716461182
    4. '   ' → logprob: -5.421911716461182
    5. 'perform' → logprob: -5.671911716461182
    6. ' performances' → logprob: -5.796911716461182
    7. 'day' → logprob: -6.171911716461182
    8. '        
' → logprob: -6.171911716461182
    9. ' day' → logprob: -6.171911716461182
    10. 'performance' → logprob: -6.671911716461182

Token 670: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7153510451316833
    2. 'perform' → logprob: -1.2153511047363281
    3. 'possible' → logprob: -2.465351104736328
    4. 'day' → logprob: -3.090351104736328
    5. '   ' → logprob: -3.340351104736328
    6. ' day' → logprob: -4.590351104736328
    7. ' performances' → logprob: -4.840351104736328
    8. 'all' → logprob: -5.215351104736328
    9. 'for' → logprob: -5.590351104736328
    10. ' possible' → logprob: -5.840351104736328

Token 671: ' For' (ID: 2214)
  Prédit: 'perform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perform' → logprob: -0.13212953507900238
    2. 'possible' → logprob: -2.632129430770874
    3. 'day' → logprob: -4.132129669189453
    4. '   ' → logprob: -4.507129669189453
    5. 'interval' → logprob: -4.882129669189453
    6. 'performance' → logprob: -5.507129669189453
    7. '       ' → logprob: -5.882129669189453
    8. 'all' → logprob: -5.882129669189453
    9. 'for' → logprob: -6.132129669189453
    10. 'poss' → logprob: -6.507129669189453

Token 672: ' one' (ID: 1001)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.054115328937768936
    2. ' j' → logprob: -3.5541152954101562
    3. 'day' → logprob: -4.304115295410156
    4. ' day' → logprob: -5.679115295410156
    5. 'i' → logprob: -6.054115295410156
    6. 'each' → logprob: -6.429115295410156
    7. 'interval' → logprob: -6.804115295410156
    8. '_j' → logprob: -6.929115295410156
    9. ' each' → logprob: -8.679115295410156
    10. ' i' → logprob: -8.804115295410156

Token 673: ' live' (ID: 4561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6274924278259277
    2. '   ' → logprob: -1.6274924278259277
    3. 'day' → logprob: -2.6274924278259277
    4. '_day' → logprob: -2.8774924278259277
    5. ' day' → logprob: -3.1274924278259277
    6. '_' → logprob: -3.1274924278259277
    7. '_j' → logprob: -4.377492427825928
    8. ')' → logprob: -4.752492427825928
    9. ' _' → logprob: -5.002492427825928
    10. ' ' → logprob: -5.377492427825928

Token 674: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0156900882720947
    2. '   ' → logprob: -1.8906900882720947
    3. '       ' → logprob: -2.6406900882720947
    4. '_ranges' → logprob: -2.7656900882720947
    5. '_s' → logprob: -3.2656900882720947
    6. 'for' → logprob: -3.2656900882720947
    7. '_' → logprob: -3.3906900882720947
    8. ',' → logprob: -3.3906900882720947
    9. '_per' → logprob: -3.6406900882720947
    10. ' =' → logprob: -3.7656900882720947

Token 675: ' region' (ID: 7967)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2676788568496704
    2. ' range' → logprob: -1.6426788568496704
    3. 'day' → logprob: -4.142678737640381
    4. ' day' → logprob: -5.517678737640381
    5. '[j' → logprob: -5.767678737640381
    6. 'each' → logprob: -6.017678737640381
    7. 'j' → logprob: -6.142678737640381
    8. 'region' → logprob: -6.267678737640381
    9. '[i' → logprob: -6.392678737640381
    10. '[' → logprob: -6.517678737640381

Token 676: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9504328966140747
    2. ' i' → logprob: -1.2004328966140747
    3. ' _' → logprob: -2.575432777404785
    4. '_' → logprob: -2.700432777404785
    5. 'i' → logprob: -2.700432777404785
    6. ' =' → logprob: -3.950432777404785
    7. '0' → logprob: -4.450432777404785
    8. ' ' → logprob: -4.700432777404785
    9. ' in' → logprob: -4.825432777404785
    10. '   ' → logprob: -4.950432777404785

Token 677: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.018449306488037
    2. ' for' → logprob: -1.143449306488037
    3. ' in' → logprob: -2.393449306488037
    4. ':' → logprob: -2.643449306488037
    5. ',' → logprob: -3.018449306488037
    6. '       ' → logprob: -3.768449306488037
    7. ' =' → logprob: -3.893449306488037
    8. '=' → logprob: -4.393449306488037
    9. 's' → logprob: -4.393449306488037
    10. ' i' → logprob: -4.518449306488037

Token 678: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7569829225540161
    2. ' in' → logprob: -2.1319828033447266
    3. '):' → logprob: -2.2569828033447266
    4. 'for' → logprob: -2.3819828033447266
    5. ' for' → logprob: -3.0069828033447266
    6. ' )' → logprob: -3.3819828033447266
    7. 'in' → logprob: -3.6319828033447266
    8. 'i' → logprob: -3.7569828033447266
    9. 'range' → logprob: -4.506982803344727
    10. '0' → logprob: -4.506982803344727

Token 679: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.043344441801309586
    2. ' E' → logprob: -3.168344497680664
    3. 'i' → logprob: -9.168344497680664
    4. '   ' → logprob: -9.543344497680664
    5. ')' → logprob: -10.293344497680664
    6. '`' → logprob: -10.668344497680664
    7. ' ' → logprob: -10.668344497680664
    8. ' not' → logprob: -11.043344497680664
    9. ' i' → logprob: -11.418344497680664
    10. '0' → logprob: -11.918344497680664

Token 680: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007080250070430338
    2. ' [' → logprob: -8.125707626342773
    3. '[' → logprob: -8.500707626342773
    4. '[j' → logprob: -10.125707626342773
    5. ')[' → logprob: -10.125707626342773
    6. ')' → logprob: -10.375707626342773
    7. '][' → logprob: -10.375707626342773
    8. '   ' → logprob: -10.750707626342773
    9. '       ' → logprob: -11.750707626342773
    10. '```' → logprob: -12.250707626342773

Token 681: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0024204873479902744
    2. '[j' → logprob: -6.252420425415039
    3. ']' → logprob: -8.002420425415039
    4. ' ][' → logprob: -10.252420425415039
    5. '   ' → logprob: -10.377420425415039
    6. ']][' → logprob: -11.002420425415039
    7. '       ' → logprob: -11.502420425415039
    8. '[i' → logprob: -11.502420425415039
    9. '[' → logprob: -11.752420425415039
    10. ',j' → logprob: -11.877420425415039

Token 682: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007281707599759102
    2. '][' → logprob: -5.38228178024292
    3. ']' → logprob: -6.25728178024292
    4. 'i' → logprob: -8.007281303405762
    5. ' j' → logprob: -8.882281303405762
    6. '[j' → logprob: -9.382281303405762
    7. '```' → logprob: -10.007281303405762
    8. '   ' → logprob: -10.382281303405762
    9. '])' → logprob: -10.632281303405762
    10. ' ][' → logprob: -11.507281303405762

Token 683: ']>' (ID: 54651)
  Prédit: ']>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.17673522233963013
    2. ']' → logprob: -2.3017351627349854
    3. '][' → logprob: -2.8017351627349854
    4. '[i' → logprob: -7.6767354011535645
    5. ']>=' → logprob: -8.176734924316406
    6. '[j' → logprob: -8.301734924316406
    7. ']==' → logprob: -10.051734924316406
    8. ']!=' → logprob: -10.551734924316406
    9. '])' → logprob: -10.676734924316406
    10. '   ' → logprob: -10.926734924316406

Token 684: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011926100123673677
    2. ' ' → logprob: -6.876192569732666
    3. '>' → logprob: -9.001193046569824
    4. '   ' → logprob: -11.126193046569824
    5. 'j' → logprob: -12.001193046569824
    6. 'i' → logprob: -12.251193046569824
    7. ')' → logprob: -13.376193046569824
    8. ')>' → logprob: -13.501193046569824
    9. '=' → logprob: -13.751193046569824
    10. ' >' → logprob: -14.001193046569824

Token 685: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07312241196632385
    2. ')' → logprob: -3.198122501373291
    3. '):
' → logprob: -3.698122501373291
    4. '),' → logprob: -5.948122501373291
    5. '       ' → logprob: -7.573122501373291
    6. ' ):' → logprob: -7.698122501373291
    7. ':' → logprob: -7.698122501373291
    8. ',' → logprob: -8.573122024536133
    9. '):

' → logprob: -9.198122024536133
    10. '           ' → logprob: -9.323122024536133

Token 686: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6399780511856079
    2. ':' → logprob: -1.389978051185608
    3. ',' → logprob: -2.7649779319763184
    4. 'for' → logprob: -3.1399779319763184
    5. '   ' → logprob: -3.3899779319763184
    6. ' for' → logprob: -3.5149779319763184
    7. ':
' → logprob: -4.514977931976318
    8. ')' → logprob: -4.764977931976318
    9. '.' → logprob: -5.389977931976318
    10. '<|end|>' → logprob: -5.764977931976318

Token 687: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5358373522758484
    2. ':' → logprob: -1.6608374118804932
    3. ',' → logprob: -1.9108374118804932
    4. '.' → logprob: -4.160837173461914
    5. ':
' → logprob: -4.535837173461914
    6. '   ' → logprob: -4.785837173461914
    7. ')' → logprob: -4.785837173461914
    8. 'for' → logprob: -4.910837173461914
    9. ',
' → logprob: -5.285837173461914
    10. ' for' → logprob: -5.285837173461914

Token 688: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46114203333854675
    2. 'for' → logprob: -1.2111420631408691
    3. ' for' → logprob: -3.211142063140869
    4. 'possible' → logprob: -4.961142063140869
    5. '#' → logprob: -5.211142063140869
    6. ',' → logprob: -5.711142063140869
    7. 'perform' → logprob: -5.711142063140869
    8. '        ' → logprob: -6.461142063140869
    9. ' performances' → logprob: -6.711142063140869
    10. 'performance' → logprob: -6.961142063140869

Token 689: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.18233676254749298
    2. 'i' → logprob: -2.6823368072509766
    3. 'multi' → logprob: -3.1823368072509766
    4. ' interval' → logprob: -4.432336807250977
    5. 'each' → logprob: -4.932336807250977
    6. 'length' → logprob: -5.182336807250977
    7. ' intervals' → logprob: -5.307336807250977
    8. 'start' → logprob: -5.307336807250977
    9. 'l' → logprob: -5.807336807250977
    10. 'int' → logprob: -5.932336807250977

Token 690: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24707980453968048
    2. '=' → logprob: -1.997079849243164
    3. 'from' → logprob: -3.247079849243164
    4. '_start' → logprob: -3.997079849243164
    5. 'start' → logprob: -5.247079849243164
    6. 'with' → logprob: -5.872079849243164
    7. 'i' → logprob: -5.997079849243164
    8. ' i' → logprob: -6.247079849243164
    9. '       ' → logprob: -6.247079849243164
    10. ' from' → logprob: -6.497079849243164

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4597770571708679
    2. '=' → logprob: -1.3347771167755127
    3. 'n' → logprob: -3.2097771167755127
    4. 'from' → logprob: -3.4597771167755127
    5. ' =' → logprob: -4.084776878356934
    6. '2' → logprob: -5.084776878356934
    7. 'f' → logprob: -5.209776878356934
    8. '=i' → logprob: -7.334776878356934
    9. '_' → logprob: -7.709776878356934
    10. 's' → logprob: -7.834776878356934

Token 692: '<=' (ID: 16672)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4828978180885315
    2. 'from' → logprob: -1.9828977584838867
    3. ',' → logprob: -2.6078977584838867
    4. '<=' → logprob: -2.9828977584838867
    5. ' =' → logprob: -3.4828977584838867
    6. ' in' → logprob: -3.7328977584838867
    7. ' <=' → logprob: -4.232897758483887
    8. '=i' → logprob: -4.357897758483887
    9. ' from' → logprob: -4.607897758483887
    10. 'in' → logprob: -4.857897758483887

Token 693: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002677083481103182
    2. ' i' → logprob: -6.377676963806152
    3. 'C' → logprob: -7.502676963806152
    4. '0' → logprob: -7.877676963806152
    5. ' ' → logprob: -11.877676963806152
    6. '   ' → logprob: -12.252676963806152
    7. ' C' → logprob: -12.377676963806152
    8. 'j' → logprob: -12.377676963806152
    9. '=' → logprob: -12.565176963806152
    10. '=i' → logprob: -13.127676963806152

Token 694: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19240039587020874
    2. '<=' → logprob: -1.9424004554748535
    3. '=' → logprob: -4.3174004554748535
    4. ' <=' → logprob: -5.0674004554748535
    5. '_' → logprob: -5.6924004554748535
    6. 'i' → logprob: -6.4424004554748535
    7. '=i' → logprob: -6.4424004554748535
    8. '1' → logprob: -7.1924004554748535
    9. 'n' → logprob: -7.1924004554748535
    10. '   ' → logprob: -7.5674004554748535

Token 695: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5485355854034424
    2. ':' → logprob: -2.1735355854034424
    3. 'for' → logprob: -2.2985355854034424
    4. ' in' → logprob: -2.7985355854034424
    5. ',' → logprob: -3.4235355854034424
    6. 'in' → logprob: -3.5485355854034424
    7. ' for' → logprob: -3.7985355854034424
    8. '       ' → logprob: -4.048535346984863
    9. ' =' → logprob: -4.173535346984863
    10. 'from' → logprob: -5.298535346984863

Token 696: ' length' (ID: 5517)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6593441367149353
    2. 'i' → logprob: -1.78434419631958
    3. '0' → logprob: -2.03434419631958
    4. 'regions' → logprob: -2.03434419631958
    5. 'E' → logprob: -4.03434419631958
    6. 'range' → logprob: -4.78434419631958
    7. 'j' → logprob: -5.03434419631958
    8. ' C' → logprob: -5.15934419631958
    9. 'ranges' → logprob: -5.40934419631958
    10. ' regions' → logprob: -5.65934419631958

Token 697: ' >=' (ID: 5064)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04422973468899727
    2. ' ' → logprob: -3.294229745864868
    3. '=' → logprob: -5.794229507446289
    4. '2' → logprob: -6.419229507446289
    5. '>=' → logprob: -8.169229507446289
    6. ' =' → logprob: -8.294229507446289
    7. 'i' → logprob: -8.794229507446289
    8. 'from' → logprob: -9.044229507446289
    9. '   ' → logprob: -9.044229507446289
    10. '<=' → logprob: -9.169229507446289

Token 698: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004206634475849569
    2. '2' → logprob: -7.875420570373535
    3. ' ' → logprob: -10.375420570373535
    4. '   ' → logprob: -11.875420570373535
    5. '
' → logprob: -14.125420570373535
    6. '```' → logprob: -14.625420570373535
    7. '       ' → logprob: -14.875420570373535
    8. '           ' → logprob: -15.000420570373535
    9. '  ' → logprob: -16.12542152404785
    10. '0' → logprob: -16.37542152404785

Token 699: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4082251787185669
    2. ':' → logprob: -1.408225178718567
    3. ':
' → logprob: -3.4082250595092773
    4. ',' → logprob: -3.9082250595092773
    5. ' for' → logprob: -4.783225059509277
    6. '           ' → logprob: -4.908225059509277
    7. '   ' → logprob: -5.033225059509277
    8. 'for' → logprob: -5.658225059509277
    9. ' :' → logprob: -6.408225059509277
    10. '        
' → logprob: -6.658225059509277

Token 700: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.07816760987043381
    2. ' all' → logprob: -2.953167676925659
    3. 'E' → logprob: -3.828167676925659
    4. 'for' → logprob: -7.70316743850708
    5. 'i' → logprob: -8.203167915344238
    6. '   ' → logprob: -8.953167915344238
    7. ' E' → logprob: -9.078167915344238
    8. ' ' → logprob: -9.578167915344238
    9. '```' → logprob: -9.703167915344238
    10. 'j' → logprob: -10.703167915344238

Token 701: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0888022631406784
    2. ' E' → logprob: -2.5888023376464844
    3. 'i' → logprob: -4.838802337646484
    4. ' i' → logprob: -7.088802337646484
    5. '```' → logprob: -8.088802337646484
    6. '   ' → logprob: -8.338802337646484
    7. 'j' → logprob: -8.588802337646484
    8. ' ' → logprob: -8.963802337646484
    9. ' j' → logprob: -9.838802337646484
    10. '0' → logprob: -10.838802337646484

Token 702: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0018512967508286238
    2. '[' → logprob: -6.6268510818481445
    3. '[j' → logprob: -8.251851081848145
    4. ' [' → logprob: -9.251851081848145
    5. '```' → logprob: -10.126851081848145
    6. '>' → logprob: -10.501851081848145
    7. 'i' → logprob: -11.001851081848145
    8. '>[' → logprob: -11.251851081848145
    9. '   ' → logprob: -11.876851081848145
    10. '[int' → logprob: -12.001851081848145

Token 703: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02998940832912922
    2. '[j' → logprob: -4.154989242553711
    3. '1' → logprob: -5.154989242553711
    4. '[i' → logprob: -5.654989242553711
    5. ']' → logprob: -6.154989242553711
    6. '   ' → logprob: -7.404989242553711
    7. '2' → logprob: -7.404989242553711
    8. '[' → logprob: -8.279989242553711
    9. 'i' → logprob: -8.779989242553711
    10. ' ][' → logprob: -8.779989242553711

Token 704: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008193961111828685
    2. '[j' → logprob: -7.625819206237793
    3. '][' → logprob: -9.125819206237793
    4. 'i' → logprob: -9.375819206237793
    5. ']' → logprob: -10.000819206237793
    6. ' j' → logprob: -10.625819206237793
    7. '```' → logprob: -10.625819206237793
    8. '
' → logprob: -11.375819206237793
    9. '   ' → logprob: -11.750819206237793
    10. '[i' → logprob: -13.000819206237793

Token 705: ']>' (ID: 54651)
  Prédit: ']>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.02103857882320881
    2. ']' → logprob: -4.27103853225708
    3. '[j' → logprob: -6.39603853225708
    4. '][' → logprob: -6.39603853225708
    5. '[i' → logprob: -6.64603853225708
    6. ']>=' → logprob: -6.64603853225708
    7. '>' → logprob: -7.39603853225708
    8. '[' → logprob: -9.271039009094238
    9. '   ' → logprob: -9.771039009094238
    10. ']!=' → logprob: -11.146039009094238

Token 706: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10027405619621277
    2. '>' → logprob: -2.350274085998535
    3. ' ' → logprob: -10.725274085998535
    4. '1' → logprob: -11.350274085998535
    5. '   ' → logprob: -11.850274085998535
    6. 'i' → logprob: -12.225274085998535
    7. '">' → logprob: -12.475274085998535
    8. ' >' → logprob: -12.475274085998535
    9. ']>' → logprob: -12.475274085998535
    10. '[' → logprob: -13.225274085998535

Token 707: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.55070561170578
    2. ':' → logprob: -2.175705671310425
    3. '   ' → logprob: -2.800705671310425
    4. '_' → logprob: -2.925705671310425
    5. ',' → logprob: -3.425705671310425
    6. ' =' → logprob: -3.550705671310425
    7. '[j' → logprob: -3.675705671310425
    8. ':
' → logprob: -4.175705432891846
    9. 'for' → logprob: -4.300705432891846
    10. '=' → logprob: -4.425705432891846

Token 708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02348480001091957
    2. '   ' → logprob: -5.273484706878662
    3. '_' → logprob: -5.898484706878662
    4. '#' → logprob: -5.898484706878662
    5. '
' → logprob: -6.023484706878662
    6. 'possible' → logprob: -6.273484706878662
    7. ',' → logprob: -6.523484706878662
    8. 'for' → logprob: -7.023484706878662
    9. '        
' → logprob: -7.148484706878662
    10. '_possible' → logprob: -7.273484706878662

Token 709: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5194610953330994
    2. 'possible' → logprob: -1.8944611549377441
    3. 'perform' → logprob: -2.269461154937744
    4. 'interval' → logprob: -2.644461154937744
    5. '   ' → logprob: -3.394461154937744
    6. 'day' → logprob: -4.269461154937744
    7. '#' (adapté à ' #') → logprob: -5.019461154937744
    8. 'all' → logprob: -5.019461154937744
    9. 'performance' → logprob: -5.019461154937744
    10. 'perf' → logprob: -6.019461154937744

Token 710: ' To' (ID: 2514)
  Prédit: 'perform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perform' → logprob: -0.8736187815666199
    2. 'interval' → logprob: -1.2486188411712646
    3. 'possible' → logprob: -1.6236188411712646
    4. 'day' → logprob: -3.2486188411712646
    5. 'dp' → logprob: -4.4986186027526855
    6. '   ' → logprob: -4.4986186027526855
    7. '#' → logprob: -4.8736186027526855
    8. 'performance' → logprob: -5.1236186027526855
    9. 'all' → logprob: -5.2486186027526855
    10. 'for' → logprob: -5.3736186027526855

Token 711: ' simplify' (ID: 66240)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4150746762752533
    2. '#' → logprob: -2.415074586868286
    3. 'for' → logprob: -2.415074586868286
    4. ' continue' → logprob: -3.165074586868286
    5. 'compute' → logprob: -3.415074586868286
    6. '       ' → logprob: -4.790074825286865
    7. '_continue' → logprob: -4.790074825286865
    8. 'complete' → logprob: -5.040074825286865
    9. 'prepare' → logprob: -5.165074825286865
    10. '   ' → logprob: -5.165074825286865

Token 712: ':
' (ID: 734)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.7287709712982178
    2. 'for' → logprob: -1.9787709712982178
    3. 'interval' → logprob: -2.2287709712982178
    4. '       ' → logprob: -2.3537709712982178
    5. '   ' → logprob: -2.7287709712982178
    6. ' for' → logprob: -2.9787709712982178
    7. 'E' → logprob: -4.103771209716797
    8. '#' → logprob: -5.228771209716797
    9. 'dp' → logprob: -5.353771209716797
    10. 'j' → logprob: -5.478771209716797

Token 713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08443310111761093
    2. 'for' → logprob: -2.834433078765869
    3. ' for' → logprob: -4.334433078765869
    4. '   ' → logprob: -4.959433078765869
    5. '#' → logprob: -7.959433078765869
    6. 'continue' → logprob: -7.959433078765869
    7. 'from' → logprob: -8.084433555603027
    8. '
' → logprob: -8.084433555603027
    9. '        
' → logprob: -8.459433555603027
    10. '```' → logprob: -8.959433555603027

Token 714: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8449244499206543
    2. 'interval' → logprob: -1.0949244499206543
    3. 'for' → logprob: -1.9699244499206543
    4. '#' (adapté à ' #') → logprob: -3.8449244499206543
    5. 'perf' → logprob: -4.094924449920654
    6. 'prefix' → logprob: -4.094924449920654
    7. 'dp' → logprob: -4.594924449920654
    8. 'perform' → logprob: -4.719924449920654
    9. '       ' → logprob: -4.844924449920654
    10. 'all' → logprob: -6.094924449920654

Token 715: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6299324631690979
    2. 'possible' → logprob: -1.5049324035644531
    3. 'interval' → logprob: -2.129932403564453
    4. '#' → logprob: -3.004932403564453
    5. 'prefix' → logprob: -3.629932403564453
    6. 'from' → logprob: -4.004932403564453
    7. 'dp' → logprob: -5.004932403564453
    8. 'perform' → logprob: -5.254932403564453
    9. 'perf' → logprob: -5.254932403564453
    10. 'performance' → logprob: -6.129932403564453

Token 716: ' day' (ID: 2163)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08971469104290009
    2. ' j' → logprob: -2.589714765548706
    3. '_j' → logprob: -5.464714527130127
    4. ' day' → logprob: -6.089714527130127
    5. 'day' → logprob: -6.589714527130127
    6. 'i' → logprob: -6.714714527130127
    7. 'each' → logprob: -7.214714527130127
    8. ' each' → logprob: -8.089715003967285
    9. ' i' → logprob: -8.464715003967285
    10. '_' → logprob: -8.714715003967285

Token 717: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.25922125577926636
    2. 'j' → logprob: -1.7592213153839111
    3. ' =' → logprob: -3.759221315383911
    4. '_j' → logprob: -3.884221315383911
    5. '_' → logprob: -5.134221076965332
    6. ' in' → logprob: -6.009221076965332
    7. '   ' → logprob: -6.884221076965332
    8. ' _' → logprob: -7.009221076965332
    9. '=' → logprob: -7.384221076965332
    10. ' ' → logprob: -8.009221076965332

Token 718: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7542668581008911
    2. ' in' → logprob: -1.1292668581008911
    3. ':' → logprob: -2.2542667388916016
    4. 'in' → logprob: -3.0042667388916016
    5. '=' → logprob: -4.129266738891602
    6. ' =' → logprob: -4.129266738891602
    7. '   ' → logprob: -4.754266738891602
    8. ' ,' → logprob: -5.629266738891602
    9. ',j' → logprob: -5.879266738891602
    10. ' :' → logprob: -7.379266738891602

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033914719242602587
    2. '   ' → logprob: -7.003391265869141
    3. ' for' → logprob: -7.253391265869141
    4. ',' → logprob: -8.12839126586914
    5. 'for' → logprob: -8.25339126586914
    6. '        
' → logprob: -8.37839126586914
    7. '        ' → logprob: -8.87839126586914
    8. '           ' → logprob: -9.00339126586914
    9. 'possible' → logprob: -9.00339126586914
    10. ' possible' → logprob: -9.75339126586914

Token 720: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0611548088490963
    2. 'possible' → logprob: -3.686154842376709
    3. 'interval' → logprob: -3.936154842376709
    4. '   ' → logprob: -5.186154842376709
    5. ' intervals' → logprob: -5.561154842376709
    6. 'for' → logprob: -6.061154842376709
    7. 'valid' → logprob: -7.561154842376709
    8. ' possible' → logprob: -7.686154842376709
    9. 'E' → logprob: -7.811154842376709
    10. 'segments' → logprob: -8.93615436553955

Token 721: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4120779037475586
    2. '       ' → logprob: -1.4120779037475586
    3. 'possible' → logprob: -1.6620779037475586
    4. 'interval' → logprob: -1.7870779037475586
    5. 'for' → logprob: -2.6620779037475586
    6. ' intervals' → logprob: -3.7870779037475586
    7. 'valid' → logprob: -4.037077903747559
    8. '#' → logprob: -4.912077903747559
    9. 'live' → logprob: -5.787077903747559
    10. 'E' → logprob: -5.787077903747559

Token 722: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06974289566278458
    2. 'start' → logprob: -3.3197429180145264
    3. ' i' → logprob: -3.8197429180145264
    4. ' start' → logprob: -5.444742679595947
    5. 'length' → logprob: -6.319742679595947
    6. 'l' → logprob: -6.444742679595947
    7. 'interval' → logprob: -7.319742679595947
    8. ' length' → logprob: -7.694742679595947
    9. 'region' → logprob: -9.194743156433105
    10. 'left' → logprob: -9.444743156433105

Token 723: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19202680885791779
    2. 'in' → logprob: -2.6920268535614014
    3. '=' → logprob: -3.0670268535614014
    4. '1' → logprob: -3.1920268535614014
    5. ' =' → logprob: -4.067026615142822
    6. '0' → logprob: -7.192026615142822
    7. ' ' → logprob: -8.06702709197998
    8. '_' → logprob: -8.19202709197998
    9. 'n' → logprob: -8.69202709197998
    10. '_in' → logprob: -8.69202709197998

Token 724: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.70008784532547
    2. ' in' → logprob: -0.70008784532547
    3. '=' → logprob: -5.075088024139404
    4. 'from' → logprob: -8.075087547302246
    5. ' =' → logprob: -8.450087547302246
    6. ',' → logprob: -9.700087547302246
    7. '<|end|>' → logprob: -11.200087547302246
    8. ' ' → logprob: -11.700087547302246
    9. 'range' → logprob: -11.700087547302246
    10. '_in' → logprob: -11.825087547302246

Token 725: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0026338035240769386
    2. ' range' → logprob: -6.002633571624756
    3. '0' → logprob: -8.752634048461914
    4. ' ' → logprob: -16.002634048461914
    5. '   ' → logprob: -17.377634048461914
    6. '[' → logprob: -18.502634048461914
    7. '	range' → logprob: -18.502634048461914
    8. '(range' → logprob: -18.877634048461914
    9. '```' → logprob: -19.877634048461914
    10. '
' → logprob: -20.002634048461914

Token 726: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000116655595775228
    2. '0' → logprob: -9.750116348266602
    3. ' range' → logprob: -9.750116348266602
    4. '(range' → logprob: -20.2501163482666
    5. ' ' → logprob: -20.6251163482666
    6. '	range' → logprob: -20.6251163482666
    7. '   ' → logprob: -20.7501163482666
    8. '
' → logprob: -21.0001163482666
    9. '```' → logprob: -21.2501163482666
    10. '[' → logprob: -21.2501163482666

Token 727: '..' (ID: 485)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.8693680763244629
    2. ' to' → logprob: -1.244368076324463
    3. '..' → logprob: -1.369368076324463
    4. 'range' → logprob: -4.619368076324463
    5. '   ' → logprob: -4.994368076324463
    6. ',' → logprob: -5.369368076324463
    7. '
' → logprob: -5.744368076324463
    8. ':' → logprob: -6.244368076324463
    9. ' ' → logprob: -6.244368076324463
    10. ' range' → logprob: -6.369368076324463

Token 728: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0022065204102545977
    2. ' C' → logprob: -6.627206325531006
    3. '0' → logprob: -7.502206325531006
    4. 'i' → logprob: -8.377206802368164
    5. 'j' → logprob: -10.127206802368164
    6. '   ' → logprob: -10.877206802368164
    7. 'range' → logprob: -11.502206802368164
    8. ' ' → logprob: -11.627206802368164
    9. '(C' → logprob: -11.627206802368164
    10. ' i' → logprob: -12.877206802368164

Token 729: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014506877399981022
    2. ':
' → logprob: -4.514506816864014
    3. 'for' → logprob: -7.514506816864014
    4. '   ' → logprob: -7.889506816864014
    5. ',' → logprob: -8.139507293701172
    6. '<|end|>' → logprob: -8.139507293701172
    7. 'to' → logprob: -8.389507293701172
    8. ' :' → logprob: -8.389507293701172
    9. '```' → logprob: -8.514507293701172
    10. '..' → logprob: -8.639507293701172

Token 730: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.058444347232580185
    2. '-' → logprob: -2.9334442615509033
    3. '15' → logprob: -6.308444499969482
    4. '14' → logprob: -6.933444499969482
    5. '   ' → logprob: -8.183444023132324
    6. ' ' → logprob: -8.433444023132324
    7. '           ' → logprob: -9.558444023132324
    8. '       ' → logprob: -9.558444023132324
    9. ' -' → logprob: -9.558444023132324
    10. ')' → logprob: -11.058444023132324

Token 731: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3692753314971924
    2. 'for' → logprob: -1.9942753314971924
    3. '   ' → logprob: -2.7442753314971924
    4. ' for' → logprob: -2.8692753314971924
    5. ':
' → logprob: -3.3692753314971924
    6. '       ' → logprob: -4.369275093078613
    7. '<|end|>' → logprob: -6.869275093078613
    8. ',' → logprob: -7.119275093078613
    9. '```' → logprob: -7.494275093078613
    10. '    ' → logprob: -7.994275093078613

Token 732: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17089809477329254
    2. ' for' → logprob: -2.045898199081421
    3. '   ' → logprob: -4.295897960662842
    4. '           ' → logprob: -4.795897960662842
    5. 'for' → logprob: -6.045897960662842
    6. '        ' → logprob: -7.045897960662842
    7. '<|end|>' → logprob: -7.545897960662842
    8. '    ' → logprob: -7.795897960662842
    9. ':' → logprob: -8.0458984375
    10. '	   ' → logprob: -8.1708984375

Token 733: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33160892128944397
    2. 'for' → logprob: -1.3316088914871216
    3. '       ' → logprob: -4.581608772277832
    4. '   ' → logprob: -5.956608772277832
    5. ' ' → logprob: -6.456608772277832
    6. '    ' → logprob: -7.206608772277832
    7. '<|end|>' → logprob: -7.331608772277832
    8. ' i' → logprob: -7.581608772277832
    9. ' if' → logprob: -7.956608772277832
    10. 'i' → logprob: -8.081608772277832

Token 734: '  ' (ID: 256)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11234552413225174
    2. 'for' → logprob: -2.3623454570770264
    3. '   ' → logprob: -4.4873456954956055
    4. ' ' → logprob: -8.362345695495605
    5. '       ' → logprob: -8.487345695495605
    6. ' i' → logprob: -8.487345695495605
    7. '	for' → logprob: -9.737345695495605
    8. '    ' → logprob: -10.112345695495605
    9. 'i' → logprob: -10.862345695495605
    10. ' if' → logprob: -10.862345695495605

Token 735: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1196601614356041
    2. ' for' → logprob: -2.6196601390838623
    3. 'i' → logprob: -4.119660377502441
    4. 'if' → logprob: -4.119660377502441
    5. 'j' → logprob: -5.994660377502441
    6. '   ' → logprob: -6.119660377502441
    7. 'while' → logprob: -6.619660377502441
    8. ' if' → logprob: -7.369660377502441
    9. '```' → logprob: -8.369660377502441
    10. ' i' → logprob: -8.869660377502441

Token 736: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007101670489646494
    2. ' i' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.500710487365723
    4. ' ' → logprob: -18.875709533691406
    5. 'j' → logprob: -19.375709533691406
    6. '  ' → logprob: -19.500709533691406
    7. '	i' → logprob: -19.750709533691406
    8. '    ' → logprob: -19.875709533691406
    9. '```' → logprob: -20.000709533691406
    10. '`' → logprob: -20.875709533691406

Token 737: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05519503727555275
    2. '2' → logprob: -2.9301950931549072
    3. 'i' → logprob: -8.305194854736328
    4. 'n' → logprob: -10.555194854736328
    5. ' i' → logprob: -10.930194854736328
    6. ' in' → logprob: -11.930194854736328
    7. '=i' → logprob: -12.305194854736328
    8. 'range' → logprob: -12.805194854736328
    9. '=' → logprob: -13.055194854736328
    10. ' ' → logprob: -13.555194854736328

Token 738: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.201559916138649
    2. 'in' → logprob: -1.7015599012374878
    3. '=' → logprob: -9.451560020446777
    4. '=i' → logprob: -10.576560020446777
    5. 'i' → logprob: -11.326560020446777
    6. 'from' → logprob: -11.951560020446777
    7. ' ' → logprob: -13.076560020446777
    8. ' =' → logprob: -13.076560020446777
    9. '```' → logprob: -13.201560020446777
    10. 'In' → logprob: -13.201560020446777

Token 739: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.049801670014858246
    2. 'range' → logprob: -3.5498015880584717
    3. ' i' → logprob: -4.174801826477051
    4. ' range' → logprob: -5.424801826477051
    5. '   ' → logprob: -9.92480182647705
    6. ' ' → logprob: -11.17480182647705
    7. '  ' → logprob: -13.17480182647705
    8. '0' → logprob: -14.54980182647705
    9. '    ' → logprob: -14.79980182647705
    10. '(i' → logprob: -15.17480182647705

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5125862956047058
    2. 'i' → logprob: -1.1375863552093506
    3. 'range' → logprob: -2.7625863552093506
    4. ' i' → logprob: -4.5125861167907715
    5. ' range' → logprob: -6.7625861167907715
    6. '   ' → logprob: -6.8875861167907715
    7. '(i' → logprob: -7.2625861167907715
    8. '=i' → logprob: -7.5125861167907715
    9. ' in' → logprob: -7.6375861167907715
    10. 'in' → logprob: -7.6375861167907715

Token 741: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.7270492911338806
    2. ',' → logprob: -1.1020493507385254
    3. 'in' → logprob: -2.9770493507385254
    4. 'to' → logprob: -3.1020493507385254
    5. '+' → logprob: -3.2270493507385254
    6. '<=' → logprob: -3.8520493507385254
    7. ' in' → logprob: -5.102049350738525
    8. ' ' → logprob: -5.352049350738525
    9. ' to' → logprob: -5.727049350738525
    10. '...' → logprob: -5.852049350738525

Token 742: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0017873981269076467
    2. 'i' → logprob: -6.626787185668945
    3. '(C' → logprob: -7.751787185668945
    4. 'j' → logprob: -11.501787185668945
    5. ' C' → logprob: -12.126787185668945
    6. '   ' → logprob: -12.251787185668945
    7. '0' → logprob: -12.876787185668945
    8. '=C' → logprob: -13.751787185668945
    9. '	C' → logprob: -13.751787185668945
    10. '_C' → logprob: -13.751787185668945

Token 743: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015126005746424198
    2. '1' → logprob: -6.62651252746582
    3. ' -' → logprob: -9.00151252746582
    4. '       ' → logprob: -10.50151252746582
    5. '2' → logprob: -10.75151252746582
    6. '   ' → logprob: -12.12651252746582
    7. '           ' → logprob: -12.75151252746582
    8. '15' → logprob: -13.12651252746582
    9. '+' → logprob: -14.25151252746582
    10. 'i' → logprob: -14.62651252746582

Token 744: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.656383680412546e-05
    2. ' ' → logprob: -10.250046730041504
    3. '2' → logprob: -12.625046730041504
    4. '-' → logprob: -12.750046730041504
    5. '15' → logprob: -13.375046730041504
    6. 'i' → logprob: -13.500046730041504
    7. '   ' → logprob: -13.875046730041504
    8. '14' → logprob: -14.500046730041504
    9. 'C' → logprob: -15.750046730041504
    10. '
' → logprob: -16.000045776367188

Token 745: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010442820377647877
    2. ':' → logprob: -4.885442733764648
    3. ':
' → logprob: -7.010442733764648
    4. '       ' → logprob: -7.260442733764648
    5. '               ' → logprob: -7.635442733764648
    6. ' for' → logprob: -8.385442733764648
    7. ' if' → logprob: -9.135442733764648
    8. ',' → logprob: -9.385442733764648
    9. 'for' → logprob: -9.510442733764648
    10. '<|end|>' → logprob: -9.885442733764648

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5583552718162537
    2. '           ' → logprob: -1.0583553314208984
    3. '<|end|>' → logprob: -2.9333553314208984
    4. ' ' → logprob: -4.683355331420898
    5. '<|end|>' → logprob: -6.058355331420898
    6. '   ' → logprob: -6.183355331420898
    7. '               ' → logprob: -6.308355331420898
    8. '        ' → logprob: -6.308355331420898
    9. ',' → logprob: -6.558355331420898
    10. '        
' → logprob: -6.683355331420898

Token 747: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38405153155326843
    2. '       ' → logprob: -1.2590515613555908
    3. ' if' → logprob: -3.634051561355591
    4. 'if' → logprob: -6.134051322937012
    5. '               ' → logprob: -6.884051322937012
    6. '	       ' → logprob: -7.384051322937012
    7. '   ' → logprob: -7.509051322937012
    8. ':' → logprob: -7.634051322937012
    9. '        
' → logprob: -7.759051322937012
    10. ' for' → logprob: -7.759051322937012

Token 748: '    ' (ID: 257)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09773346781730652
    2. 'if' → logprob: -2.722733497619629
    3. ' if' → logprob: -4.347733497619629
    4. '       ' → logprob: -4.722733497619629
    5. '   ' → logprob: -5.472733497619629
    6. 'for' → logprob: -7.097733497619629
    7. ' for' → logprob: -8.722733497619629
    8. '               ' → logprob: -9.222733497619629
    9. ' ' → logprob: -9.597733497619629
    10. '#' → logprob: -9.847733497619629

Token 749: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.24145245552062988
    2. '           ' → logprob: -1.6164524555206299
    3. 'all' → logprob: -4.616452217102051
    4. 'for' → logprob: -6.491452217102051
    5. '       ' → logprob: -6.616452217102051
    6. ' if' → logprob: -6.741452217102051
    7. 'valid' → logprob: -7.616452217102051
    8. '#' → logprob: -7.616452217102051
    9. 'E' → logprob: -8.11645221710205
    10. '   ' → logprob: -8.36645221710205

Token 750: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.005112441722303629
    2. ' all' → logprob: -5.755112648010254
    3. 'E' → logprob: -6.630112648010254
    4. '   ' → logprob: -7.755112648010254
    5. 'i' → logprob: -9.630112648010254
    6. '       ' → logprob: -10.505112648010254
    7. ' ' → logprob: -10.755112648010254
    8. 'line' → logprob: -11.005112648010254
    9. '           ' → logprob: -11.130112648010254
    10. '     ' → logprob: -11.880112648010254

Token 751: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.1053047850728035
    2. ' E' → logprob: -2.355304718017578
    3. '(E' → logprob: -5.730304718017578
    4. '(' → logprob: -7.480304718017578
    5. '   ' → logprob: -7.855304718017578
    6. ' ' → logprob: -8.605304718017578
    7. '0' → logprob: -8.855304718017578
    8. ' (' → logprob: -9.605304718017578
    9. 'i' → logprob: -9.980304718017578
    10. '(i' → logprob: -10.230304718017578

Token 752: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007304243044927716
    2. '[' → logprob: -8.000730514526367
    3. '[j' → logprob: -8.375730514526367
    4. ' [' → logprob: -10.000730514526367
    5. 'i' → logprob: -10.125730514526367
    6. '```' → logprob: -10.625730514526367
    7. '   ' → logprob: -11.125730514526367
    8. '][' → logprob: -11.250730514526367
    9. ' ' → logprob: -12.875730514526367
    10. '\[' → logprob: -13.000730514526367

Token 753: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2412109375
    2. '[k' → logprob: -2.4912109375
    3. '[j' → logprob: -2.7412109375
    4. '[i' → logprob: -2.7412109375
    5. ']' → logprob: -7.3662109375
    6. 'k' → logprob: -7.4912109375
    7. '[' → logprob: -7.8662109375
    8. 'i' → logprob: -8.9912109375
    9. '   ' → logprob: -9.2412109375
    10. ' ][' → logprob: -9.2412109375

Token 754: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9065425992012024
    2. 'k' → logprob: -0.9065425992012024
    3. 'j' → logprob: -1.6565425395965576
    4. ']' → logprob: -7.781542778015137
    5. '   ' → logprob: -8.531542778015137
    6. ' i' → logprob: -8.656542778015137
    7. '```' → logprob: -9.031542778015137
    8. ' k' → logprob: -9.156542778015137
    9. '][' → logprob: -9.156542778015137
    10. ' j' → logprob: -9.406542778015137

Token 755: ']>' (ID: 54651)
  Prédit: ']>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.2843584418296814
    2. ']' → logprob: -1.6593585014343262
    3. '][' → logprob: -3.534358501434326
    4. '[k' → logprob: -4.034358501434326
    5. 'k' → logprob: -5.409358501434326
    6. ']>=' → logprob: -5.909358501434326
    7. '>' → logprob: -6.534358501434326
    8. '[i' → logprob: -6.909358501434326
    9. '[j' → logprob: -9.409358024597168
    10. ']]' → logprob: -9.409358024597168

Token 756: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3556666076183319
    2. 'k' → logprob: -1.6056666374206543
    3. 'i' → logprob: -2.4806666374206543
    4. '=' → logprob: -4.355666637420654
    5. ' ' → logprob: -7.355666637420654
    6. '   ' → logprob: -8.105666160583496
    7. ' k' → logprob: -8.480666160583496
    8. ']' → logprob: -9.105666160583496
    9. '
' → logprob: -9.480666160583496
    10. ' i' → logprob: -9.605666160583496

Token 757: ' for' (ID: 395)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3670993149280548
    2. 'and' → logprob: -2.1170992851257324
    3. ' for' → logprob: -2.3670992851257324
    4. '           ' → logprob: -3.2420992851257324
    5. 'for' → logprob: -3.2420992851257324
    6. ':' → logprob: -4.617099285125732
    7. '       ' → logprob: -5.867099285125732
    8. '               ' → logprob: -7.117099285125732
    9. ',' → logprob: -8.11709976196289
    10. ':
' → logprob: -8.36709976196289

Token 758: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.030066566541790962
    2. ' k' → logprob: -3.53006649017334
    3. 'range' → logprob: -8.40506649017334
    4. ' range' → logprob: -9.53006649017334
    5. '   ' → logprob: -11.15506649017334
    6. ' ' → logprob: -12.78006649017334
    7. 'i' → logprob: -14.15506649017334
    8. '```' → logprob: -14.40506649017334
    9. ' i' → logprob: -15.40506649017334
    10. '    ' → logprob: -15.53006649017334

Token 759: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1590222716331482
    2. 'in' → logprob: -2.159022331237793
    3. ' k' → logprob: -4.159022331237793
    4. 'k' → logprob: -4.284022331237793
    5. ' i' → logprob: -7.034022331237793
    6. 'i' → logprob: -7.284022331237793
    7. 'range' → logprob: -8.534022331237793
    8. '   ' → logprob: -8.659022331237793
    9. ' ' → logprob: -9.034022331237793
    10. ' range' → logprob: -10.034022331237793

Token 760: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007127894787117839
    2. ' range' → logprob: -7.250712871551514
    3. 'i' → logprob: -13.625712394714355
    4. '   ' → logprob: -13.875712394714355
    5. 'k' → logprob: -15.000712394714355
    6. '(range' → logprob: -15.500712394714355
    7. '```' → logprob: -17.000713348388672
    8. '[i' → logprob: -17.000713348388672
    9. '`' → logprob: -17.500713348388672
    10. '
' → logprob: -17.500713348388672

Token 761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0064619360491633415
    2. '2' → logprob: -5.756462097167969
    3. 'i' → logprob: -6.256462097167969
    4. 'range' → logprob: -7.131462097167969
    5. '   ' → logprob: -8.881462097167969
    6. ' i' → logprob: -9.381462097167969
    7. 'k' → logprob: -9.381462097167969
    8. '```' → logprob: -9.756462097167969
    9. ' ' → logprob: -10.631462097167969
    10. ' range' → logprob: -10.631462097167969

Token 762: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -1.1638634204864502
    2. 'and' → logprob: -1.4138634204864502
    3. ':' → logprob: -1.7888634204864502
    4. ' and' → logprob: -2.16386342048645
    5. ':
' → logprob: -3.53886342048645
    6. ':k' → logprob: -4.038863182067871
    7. 'k' → logprob: -4.163863182067871
    8. ' to' → logprob: -4.288863182067871
    9. '...' → logprob: -4.288863182067871
    10. 'to' → logprob: -4.538863182067871

Token 763: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.306760805164231e-05
    2. 'k' → logprob: -12.12501335144043
    3. ' i' → logprob: -12.25001335144043
    4. '   ' → logprob: -13.00001335144043
    5. '
' → logprob: -16.00001335144043
    6. '```' → logprob: -16.25001335144043
    7. '{i' → logprob: -16.62501335144043
    8. '_i' → logprob: -17.12501335144043
    9. '    ' → logprob: -17.50001335144043
    10. '     ' → logprob: -17.50001335144043

Token 764: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4140441635390744e-05
    2. '1' → logprob: -11.250014305114746
    3. '
' → logprob: -15.250014305114746
    4. '```' → logprob: -15.562514305114746
    5. '   ' → logprob: -15.625014305114746
    6. ' ' → logprob: -16.37501335144043
    7. 'i' → logprob: -16.68751335144043
    8. '₂' → logprob: -16.81251335144043
    9. '_' → logprob: -16.93751335144043
    10. 'k' → logprob: -16.93751335144043

Token 765: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2022483348846436
    2. '           ' → logprob: -1.2022483348846436
    3. ':' → logprob: -1.3272483348846436
    4. ':
' → logprob: -2.5772483348846436
    5. 'and' → logprob: -3.4522483348846436
    6. '       ' → logprob: -4.077248573303223
    7. '               ' → logprob: -5.327248573303223
    8. ',' → logprob: -6.577248573303223
    9. '                       ' → logprob: -7.327248573303223
    10. '=' → logprob: -7.952248573303223

Token 766: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6244017481803894
    2. '       ' → logprob: -1.3744018077850342
    3. ' and' → logprob: -2.374401807785034
    4. ':' → logprob: -2.874401807785034
    5. '               ' → logprob: -3.874401807785034
    6. ',' → logprob: -4.374401569366455
    7. ':
' → logprob: -4.749401569366455
    8. '                       ' → logprob: -5.999401569366455
    9. ' then' → logprob: -6.124401569366455
    10. ' for' → logprob: -6.124401569366455

Token 767: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2491406500339508
    2. '       ' → logprob: -2.124140739440918
    3. ' and' → logprob: -3.499140739440918
    4. ':' → logprob: -3.624140739440918
    5. '               ' → logprob: -3.624140739440918
    6. '#' (adapté à ' #') → logprob: -5.999140739440918
    7. ':
' → logprob: -6.249140739440918
    8. ' if' → logprob: -6.624140739440918
    9. ' for' → logprob: -6.874140739440918
    10. '[' → logprob: -6.874140739440918

Token 768: '      ' (ID: 1699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6307045221328735
    2. '       ' → logprob: -1.0057045221328735
    3. 'if' → logprob: -3.005704402923584
    4. '               ' → logprob: -4.505704402923584
    5. ' if' → logprob: -4.505704402923584
    6. 'for' → logprob: -4.630704402923584
    7. '#' → logprob: -5.630704402923584
    8. '         ' → logprob: -6.005704402923584
    9. '                       ' → logprob: -6.005704402923584
    10. 'continue' → logprob: -6.130704402923584

Token 769: ' sum' (ID: 4215)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.1705604791641235
    2. '           ' → logprob: -1.6705604791641235
    3. 'sum' (adapté à ' sum') → logprob: -1.7955604791641235
    4. 'cost' → logprob: -2.795560359954834
    5. '       ' → logprob: -3.045560359954834
    6. 'continue' → logprob: -3.420560359954834
    7. '#' → logprob: -3.420560359954834
    8. 'possible' → logprob: -3.420560359954834
    9. 'if' → logprob: -3.670560359954834
    10. 'profit' → logprob: -4.045560359954834

Token 770: 'E' (ID: 36)
  Prédit: '_E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_E' → logprob: -0.26293277740478516
    2. 'E' → logprob: -2.262932777404785
    3. '_' → logprob: -2.262932777404785
    4. '_val' → logprob: -4.887932777404785
    5. '_e' → logprob: -5.262932777404785
    6. '_sum' → logprob: -5.637932777404785
    7. '_of' → logprob: -5.762932777404785
    8. 'sum' → logprob: -6.887932777404785
    9. '(E' → logprob: -7.512932777404785
    10. 's' → logprob: -7.762932777404785

Token 771: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42839863896369934
    2. '=' → logprob: -1.303398609161377
    3. '_' → logprob: -3.553398609161377
    4. '[k' → logprob: -3.803398609161377
    5. '_k' → logprob: -4.678398609161377
    6. 'E' → logprob: -5.428398609161377
    7. 'k' → logprob: -6.178398609161377
    8. '=sum' → logprob: -6.428398609161377
    9. '=[' → logprob: -6.803398609161377
    10. 's' → logprob: -6.928398609161377

Token 772: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06241028010845184
    2. ' sum' → logprob: -2.812410354614258
    3. '<|end|>' → logprob: -9.312410354614258
    4. 'continue' → logprob: -9.562410354614258
    5. '_sum' → logprob: -9.937410354614258
    6. 'total' → logprob: -10.187410354614258
    7. '=sum' → logprob: -10.687410354614258
    8. '        ' → logprob: -10.812410354614258
    9. 'max' → logprob: -11.062410354614258
    10. '	sum' → logprob: -11.312410354614258

Token 773: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0010324534960091114
    2. 'E' → logprob: -7.12603235244751
    3. '_F' → logprob: -8.876032829284668
    4. 'sum' → logprob: -10.751032829284668
    5. ' F' → logprob: -11.251032829284668
    6. '```' → logprob: -11.251032829284668
    7. '   ' → logprob: -11.376032829284668
    8. '_' → logprob: -12.251032829284668
    9. ' ' → logprob: -12.876032829284668
    10. '       ' → logprob: -13.001032829284668

Token 774: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3941393494606018
    2. ' =' → logprob: -1.144139289855957
    3. '       ' → logprob: -5.269139289855957
    4. 'for' → logprob: -6.894139289855957
    5. '           ' → logprob: -8.394139289855957
    6. ',' → logprob: -9.019139289855957
    7. '               ' → logprob: -9.394139289855957
    8. ')' → logprob: -9.394139289855957
    9. '=
' → logprob: -9.394139289855957
    10. '      ' → logprob: -9.519139289855957

Token 775: ' those' (ID: 2617)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9197649955749512
    2. 'range' → logprob: -1.0447649955749512
    3. ' range' → logprob: -1.9197649955749512
    4. ' k' → logprob: -2.919764995574951
    5. 'i' → logprob: -3.544764995574951
    6. ' i' → logprob: -5.044764995574951
    7. ' day' → logprob: -5.794764995574951
    8. 'j' → logprob: -6.044764995574951
    9. 'day' → logprob: -6.169764995574951
    10. '   ' → logprob: -6.419764995574951

Token 776: ' regions' (ID: 21043)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25243452191352844
    2. 'for' → logprob: -2.627434492111206
    3. ':
' → logprob: -3.252434492111206
    4. '       ' → logprob: -3.502434492111206
    5. '           ' → logprob: -3.627434492111206
    6. '[' → logprob: -5.127434730529785
    7. '         ' → logprob: -5.502434730529785
    8. 'if' → logprob: -5.502434730529785
    9. '```' → logprob: -5.502434730529785
    10. '               ' → logprob: -5.502434730529785

Token 777: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16461549699306488
    2. ' =' → logprob: -2.4146153926849365
    3. '=' → logprob: -4.164615631103516
    4. '           ' → logprob: -4.164615631103516
    5. ':' → logprob: -4.414615631103516
    6. 'for' → logprob: -5.289615631103516
    7. ',' → logprob: -6.039615631103516
    8. '                       ' → logprob: -6.289615631103516
    9. ' for' → logprob: -6.289615631103516
    10. '               ' → logprob: -6.414615631103516

Token 778: ' day' (ID: 2163)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.32900479435920715
    2. 'j' → logprob: -1.8290047645568848
    3. ' day' → logprob: -2.3290047645568848
    4. 'days' → logprob: -4.579004764556885
    5. 'for' → logprob: -5.329004764556885
    6. 'that' → logprob: -5.829004764556885
    7. ' j' → logprob: -6.579004764556885
    8. ' that' → logprob: -7.204004764556885
    9. ' days' → logprob: -7.454004764556885
    10. ' for' → logprob: -7.954004764556885

Token 779: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1723303496837616
    2. ' =' → logprob: -3.297330379486084
    3. ':' → logprob: -3.922330379486084
    4. '           ' → logprob: -3.922330379486084
    5. 'for' → logprob: -4.422330379486084
    6. ' for' → logprob: -4.547330379486084
    7. '=' → logprob: -4.547330379486084
    8. ',' → logprob: -5.047330379486084
    9. ':
' → logprob: -5.172330379486084
    10. '               ' → logprob: -5.422330379486084

Token 780: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008939418941736221
    2. '           ' → logprob: -5.758939266204834
    3. 'for' → logprob: -6.633939266204834
    4. ':' → logprob: -6.758939266204834
    5. ' for' → logprob: -7.383939266204834
    6. ' =' → logprob: -7.633939266204834
    7. ',' → logprob: -7.883939266204834
    8. '=' → logprob: -8.383939743041992
    9. '```' → logprob: -8.508939743041992
    10. ':
' → logprob: -8.633939743041992

Token 781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002831626683473587
    2. '           ' → logprob: -6.87783145904541
    3. 'for' → logprob: -7.87783145904541
    4. '<|end|>' → logprob: -8.00283145904541
    5. ' for' → logprob: -8.50283145904541
    6. ',' → logprob: -8.50283145904541
    7. '        
' → logprob: -8.50283145904541
    8. '```' → logprob: -8.87783145904541
    9. '<|end|>' → logprob: -9.62783145904541
    10. '
' → logprob: -10.12783145904541

Token 782: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004726783838123083
    2. '           ' → logprob: -6.129726886749268
    3. 'for' → logprob: -7.754726886749268
    4. '        
' → logprob: -8.12972640991211
    5. ' for' → logprob: -8.25472640991211
    6. ',' → logprob: -8.50472640991211
    7. '               ' → logprob: -8.62972640991211
    8. '   ' → logprob: -8.62972640991211
    9. ':' → logprob: -9.12972640991211
    10. '.' → logprob: -9.37972640991211

Token 783: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0062726400792598724
    2. 'for' → logprob: -5.381272792816162
    3. '```' → logprob: -7.881272792816162
    4. '           ' → logprob: -8.006272315979004
    5. ' for' → logprob: -8.256272315979004
    6. '
' → logprob: -8.506272315979004
    7. '   ' → logprob: -9.131272315979004
    8. '        
' → logprob: -9.631272315979004
    9. 'possible' → logprob: -9.881272315979004
    10. '#' → logprob: -10.506272315979004

Token 784: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2722884714603424
    2. 'for' → logprob: -2.6472885608673096
    3. 'if' → logprob: -3.0222885608673096
    4. '           ' → logprob: -3.1472885608673096
    5. ' if' → logprob: -4.3972883224487305
    6. '         ' → logprob: -4.5222883224487305
    7. ' for' → logprob: -4.6472883224487305
    8. '               ' → logprob: -4.8972883224487305
    9. ':' → logprob: -5.1472883224487305
    10. '     ' → logprob: -5.2722883224487305

Token 785: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16290555894374847
    2. 'continue' → logprob: -2.53790545463562
    3. '       ' → logprob: -3.28790545463562
    4. ' continue' → logprob: -3.53790545463562
    5. '         ' → logprob: -5.662905693054199
    6. '               ' → logprob: -7.162905693054199
    7. '```' → logprob: -8.1629056930542
    8. '     ' → logprob: -8.7879056930542
    9. '             ' → logprob: -8.9129056930542
    10. '   ' → logprob: -11.0379056930542

Token 786: ' skip' (ID: 16677)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3441675305366516
    2. 'continue' → logprob: -1.8441674709320068
    3. '           ' → logprob: -2.344167470932007
    4. 'break' → logprob: -3.969167470932007
    5. ' continue' → logprob: -4.719167709350586
    6. '         ' → logprob: -5.844167709350586
    7. '               ' → logprob: -5.969167709350586
    8. '```' → logprob: -6.594167709350586
    9. '     ' → logprob: -6.719167709350586
    10. ' break' → logprob: -7.094167709350586

Token 787: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10561459511518478
    2. 'for' → logprob: -2.60561466217041
    3. ' for' → logprob: -4.35561466217041
    4. '           ' → logprob: -5.60561466217041
    5. '```' → logprob: -5.98061466217041
    6. 'if' → logprob: -6.10561466217041
    7. '   ' → logprob: -6.35561466217041
    8. '
' → logprob: -6.73061466217041
    9. '        
' → logprob: -8.23061466217041
    10. ' if' → logprob: -8.48061466217041

Token 788: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007801333907991648
    2. '        
' → logprob: -5.757801532745361
    3. 'for' → logprob: -6.757801532745361
    4. '
' → logprob: -6.757801532745361
    5. '           ' → logprob: -7.007801532745361
    6. '```' → logprob: -7.757801532745361
    7. ' for' → logprob: -8.132801055908203
    8. '  
' → logprob: -9.007801055908203
    9. '   ' → logprob: -9.132801055908203
    10. '        ' → logprob: -9.257801055908203

Token 789: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08012300729751587
    2. 'for' → logprob: -2.705122947692871
    3. ' for' → logprob: -5.830122947692871
    4. 'performance' → logprob: -6.205122947692871
    5. '   ' → logprob: -6.705122947692871
    6. 'perform' → logprob: -7.330122947692871
    7. 'possible' → logprob: -7.580122947692871
    8. '```' → logprob: -7.705122947692871
    9. '
' → logprob: -7.955122947692871
    10. '        
' → logprob: -7.955122947692871

Token 790: '_profit' (ID: 186239)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020591987296938896
    2. '_per' → logprob: -4.520592212677002
    3. '_perf' → logprob: -5.395592212677002
    4. '_inter' → logprob: -6.770592212677002
    5. '_sum' → logprob: -7.270592212677002
    6. '_sub' → logprob: -7.395592212677002
    7. 'E' → logprob: -7.645592212677002
    8. '_E' → logprob: -8.020591735839844
    9. '_val' → logprob: -8.270591735839844
    10. '_len' → logprob: -8.770591735839844

Token 791: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21082130074501038
    2. ' =' → logprob: -1.710821270942688
    3. '[' → logprob: -5.585821151733398
    4. '   ' → logprob: -6.335821151733398
    5. '_' → logprob: -6.460821151733398
    6. ',' → logprob: -7.460821151733398
    7. '=max' → logprob: -7.835821151733398
    8. ')' → logprob: -8.085821151733398
    9. 's' → logprob: -8.210821151733398
    10. '_max' → logprob: -8.710821151733398

Token 792: ' [[' (ID: 9237)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16792826354503632
    2. '-' → logprob: -2.2929282188415527
    3. '[' → logprob: -4.167928218841553
    4. ' ' → logprob: -4.167928218841553
    5. ' -' → logprob: -4.917928218841553
    6. '{}' → logprob: -5.167928218841553
    7. '[-' → logprob: -5.292928218841553
    8. ' [' → logprob: -6.417928218841553
    9. 'float' → logprob: -6.792928218841553
    10. '[[' → logprob: -7.542928218841553

Token 793: '[-' (ID: 17503)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3819199800491333
    2. '-' → logprob: -1.8819199800491333
    3. '-W' → logprob: -2.2569198608398438
    4. '[' → logprob: -3.5069198608398438
    5. '[-' → logprob: -3.6319198608398438
    6. '-w' → logprob: -6.006919860839844
    7. '-[' → logprob: -7.756919860839844
    8. '-(' → logprob: -8.381919860839844
    9. '[[' → logprob: -8.381919860839844
    10. ' -' → logprob: -8.381919860839844

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04958649352192879
    2. 'float' → logprob: -3.674586534500122
    3. '10' → logprob: -3.799586534500122
    4. '100' → logprob: -8.299586296081543
    5. '(' → logprob: -8.424586296081543
    6. 'int' → logprob: -8.924586296081543
    7. 'inf' → logprob: -10.924586296081543
    8. 'INF' → logprob: -11.924586296081543
    9. '(float' → logprob: -12.799586296081543
    10. '0' → logprob: -13.674586296081543

Token 795: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14116692543029785
    2. 'for' → logprob: -2.266166925430298
    3. ']' → logprob: -3.641166925430298
    4. ']*' → logprob: -6.641166687011719
    5. ']*(' → logprob: -8.641166687011719
    6. ']]' → logprob: -9.891166687011719
    7. ' ]' → logprob: -9.891166687011719
    8. '
' → logprob: -10.266166687011719
    9. ')' → logprob: -10.516166687011719
    10. '   ' → logprob: -11.016166687011719

Token 796: 'X' (ID: 55)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.7250800728797913
    2. '51' → logprob: -1.2250800132751465
    3. 'X' → logprob: -1.6000800132751465
    4. '(W' → logprob: -4.9750800132751465
    5. '(X' → logprob: -5.3500800132751465
    6. '(' → logprob: -5.8500800132751465
    7. '52' → logprob: -6.9750800132751465
    8. '50' → logprob: -7.4750800132751465
    9. ' W' → logprob: -7.4750800132751465
    10. '61' → logprob: -7.7250800132751465

Token 797: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010914575977949426
    2. ' +' → logprob: -9.12510871887207
    3. '+
' → logprob: -16.25010871887207
    4. '＋' → logprob: -17.87510871887207
    5. '
' → logprob: -18.75010871887207
    6. '﻿' → logprob: -19.37510871887207
    7. ')+' → logprob: -19.50010871887207
    8. '   ' → logprob: -19.87510871887207
    9. '```' → logprob: -20.00010871887207
    10. '1' → logprob: -20.37510871887207

Token 798: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014859484508633614
    2. '2' → logprob: -9.37514877319336
    3. '6' → logprob: -10.00014877319336
    4. ' ' → logprob: -11.00014877319336
    5. '   ' → logprob: -14.12514877319336
    6. '
' → logprob: -15.00014877319336
    7. '11' → logprob: -16.12514877319336
    8. '10' → logprob: -16.37514877319336
    9. '```' → logprob: -16.62514877319336
    10. '7' → logprob: -16.87514877319336

Token 799: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011512940982356668
    2. ' for' → logprob: -7.501151084899902
    3. 'for' → logprob: -7.501151084899902
    4. ' )' → logprob: -10.126151084899902
    5. '   ' → logprob: -13.001151084899902
    6. '       ' → logprob: -13.626151084899902
    7. ')]' → logprob: -14.251151084899902
    8. '           ' → logprob: -14.626151084899902
    9. ' ' → logprob: -14.876151084899902
    10. ']' → logprob: -16.00115203857422

Token 800: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16028231382369995
    2. 'for' → logprob: -1.9102823734283447
    3. '       ' → logprob: -11.035282135009766
    4. '   ' → logprob: -11.160282135009766
    5. '           ' → logprob: -11.535282135009766
    6. ']' → logprob: -12.285282135009766
    7. ')' → logprob: -12.410282135009766
    8. ' ' → logprob: -12.785282135009766
    9. '               ' → logprob: -13.160282135009766
    10. '	for' → logprob: -14.285282135009766

Token 801: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38321059942245483
    2. ' _' → logprob: -1.8832106590270996
    3. '_w' → logprob: -2.2582106590270996
    4. '_W' → logprob: -3.7582106590270996
    5. ' in' → logprob: -4.0082106590271
    6. '_b' → logprob: -4.2582106590271
    7. ' range' → logprob: -6.0082106590271
    8. 'W' → logprob: -7.1332106590271
    9. 'in' → logprob: -7.2582106590271
    10. ' W' → logprob: -7.2582106590271

Token 802: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05497876927256584
    2. 'in' → logprob: -2.929978847503662
    3. 'bur' → logprob: -10.554978370666504
    4. 'W' → logprob: -10.929978370666504
    5. '_' → logprob: -11.679978370666504
    6. 'b' → logprob: -11.679978370666504
    7. ' ' → logprob: -12.054978370666504
    8. 'w' → logprob: -12.179978370666504
    9. ' _' → logprob: -12.554978370666504
    10. '_b' → logprob: -12.554978370666504

Token 803: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005242771934717894
    2. ' range' → logprob: -5.255242824554443
    3. '(range' → logprob: -11.880242347717285
    4. 'W' → logprob: -13.380242347717285
    5. '   ' → logprob: -14.755242347717285
    6. '(W' → logprob: -16.1302433013916
    7. ' ' → logprob: -17.2552433013916
    8. '	range' → logprob: -17.7552433013916
    9. '```' → logprob: -18.2552433013916
    10. ' W' → logprob: -18.6302433013916

Token 804: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.04858941584825516
    2. 'W' → logprob: -3.0485894680023193
    3. ' (' → logprob: -14.548589706420898
    4. '(' → logprob: -14.548589706420898
    5. ' W' → logprob: -14.548589706420898
    6. '   ' → logprob: -14.673589706420898
    7. '	W' → logprob: -16.4235897064209
    8. '(w' → logprob: -17.7985897064209
    9. '_W' → logprob: -18.0485897064209
    10. '((' → logprob: -18.6735897064209

Token 805: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9027791495318525e-05
    2. ' +' → logprob: -10.875019073486328
    3. '+
' → logprob: -18.250019073486328
    4. '
' → logprob: -19.250019073486328
    5. '＋' → logprob: -19.625019073486328
    6. '```' → logprob: -19.750019073486328
    7. '[' → logprob: -20.000019073486328
    8. '()+' → logprob: -20.250019073486328
    9. ')+' → logprob: -21.125019073486328
    10. ']+' → logprob: -21.375019073486328

Token 806: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8312570318812504e-05
    2. '51' → logprob: -11.625018119812012
    3. ' ' → logprob: -11.875018119812012
    4. '   ' → logprob: -13.375018119812012
    5. '+' → logprob: -15.375018119812012
    6. '
' → logprob: -16.125019073486328
    7. '     ' → logprob: -16.750019073486328
    8. '    ' → logprob: -16.875019073486328
    9. '50' → logprob: -17.000019073486328
    10. '{' → logprob: -17.250019073486328

Token 807: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12050824612379074
    2. ')' → logprob: -2.8705081939697266
    3. ']' → logprob: -2.8705081939697266
    4. '       ' → logprob: -8.995508193969727
    5. '   ' → logprob: -10.620508193969727
    6. ' ]' → logprob: -11.120508193969727
    7. '           ' → logprob: -11.370508193969727
    8. ' )' → logprob: -12.120508193969727
    9. '               ' → logprob: -13.120508193969727
    10. ']]' → logprob: -13.370508193969727

Token 808: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4856013357639313
    2. 'for' → logprob: -1.1106013059616089
    3. '       ' → logprob: -3.7356014251708984
    4. ']' → logprob: -3.8606014251708984
    5. '           ' → logprob: -4.735601425170898
    6. '               ' → logprob: -7.110601425170898
    7. '   ' → logprob: -7.860601425170898
    8. ')' → logprob: -9.485601425170898
    9. '        ' → logprob: -9.610601425170898
    10. '                   ' → logprob: -9.860601425170898

Token 809: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13959483802318573
    2. 'range' → logprob: -2.139594793319702
    3. '(range' → logprob: -4.514595031738281
    4. 'D' → logprob: -7.014595031738281
    5. ' D' → logprob: -7.889595031738281
    6. '(D' → logprob: -9.014595031738281
    7. '	range' → logprob: -9.389595031738281
    8. '   ' → logprob: -9.514595031738281
    9. '    ' → logprob: -10.514595031738281
    10. '_range' → logprob: -10.889595031738281

Token 810: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023417610675096512
    2. ' range' → logprob: -3.7734177112579346
    3. '(range' → logprob: -8.898417472839355
    4. 'C' → logprob: -11.523417472839355
    5. 'day' → logprob: -12.023417472839355
    6. 'D' → logprob: -12.273417472839355
    7. '   ' → logprob: -12.398417472839355
    8. '(D' → logprob: -12.773417472839355
    9. '(' → logprob: -13.398417472839355
    10. '	range' → logprob: -13.398417472839355

Token 811: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04275628551840782
    2. ' range' → logprob: -3.4177563190460205
    3. '(range' → logprob: -4.917756080627441
    4. '(D' → logprob: -6.417756080627441
    5. '[D' → logprob: -9.792756080627441
    6. '   ' → logprob: -10.042756080627441
    7. 'D' → logprob: -11.167756080627441
    8. ' (' → logprob: -13.292756080627441
    9. '[' → logprob: -13.667756080627441
    10. ' ' → logprob: -14.167756080627441

Token 812: '(D' (ID: 9908)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3875604569911957
    2. '(D' → logprob: -1.137560486793518
    3. '   ' → logprob: -7.8875603675842285
    4. ' D' → logprob: -8.762560844421387
    5. ' (' → logprob: -10.012560844421387
    6. '(' → logprob: -10.762560844421387
    7. '       ' → logprob: -10.887560844421387
    8. 'range' → logprob: -10.887560844421387
    9. '[D' → logprob: -11.012560844421387
    10. '           ' → logprob: -11.512560844421387

Token 813: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03940070793032646
    2. ')' → logprob: -3.289400815963745
    3. ')][' → logprob: -7.164400577545166
    4. '   ' → logprob: -8.164401054382324
    5. '       ' → logprob: -8.914401054382324
    6. ')])' → logprob: -10.289401054382324
    7. '):' → logprob: -10.414401054382324
    8. '+' → logprob: -10.789401054382324
    9. ')],' → logprob: -10.914401054382324
    10. ')]
' → logprob: -11.039401054382324

Token 814: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00047714399988763034
    2. '2' → logprob: -8.500476837158203
    3. '   ' → logprob: -9.375476837158203
    4. '0' → logprob: -9.625476837158203
    5. 'C' → logprob: -9.875476837158203
    6. ' ' → logprob: -11.125476837158203
    7. ')' → logprob: -12.000476837158203
    8. '3' → logprob: -12.125476837158203
    9. '       ' → logprob: -12.125476837158203
    10. '```' → logprob: -12.125476837158203

Token 815: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008111746865324676
    2. ']' → logprob: -7.8758111000061035
    3. '       ' → logprob: -8.500811576843262
    4. ')' → logprob: -8.875811576843262
    5. '   ' → logprob: -9.750811576843262
    6. ')][' → logprob: -11.250811576843262
    7. ')]
' → logprob: -11.875811576843262
    8. '           ' → logprob: -13.000811576843262
    9. ')],' → logprob: -13.750811576843262
    10. '])]' → logprob: -13.875811576843262

Token 816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29404008388519287
    2. 'max' → logprob: -1.6690400838851929
    3. ' max' → logprob: -3.5440402030944824
    4. '   ' → logprob: -3.5440402030944824
    5. '[max' → logprob: -5.419040203094482
    6. ')' → logprob: -6.419040203094482
    7. '[' → logprob: -8.044039726257324
    8. '.' → logprob: -8.044039726257324
    9. '(max' → logprob: -8.044039726257324
    10. '           ' → logprob: -8.044039726257324

Token 817: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -3.2020991056924686e-05
    2. '       ' → logprob: -10.750032424926758
    3. ' max' → logprob: -12.375032424926758
    4. 'for' → logprob: -12.875032424926758
    5. '
' → logprob: -13.375032424926758
    6. '   ' → logprob: -13.375032424926758
    7. '[max' → logprob: -15.125032424926758
    8. '	max' → logprob: -16.375032424926758
    9. '#' → logprob: -16.750032424926758
    10. '```' → logprob: -16.750032424926758

Token 818: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.00023202638840302825
    2. '_prof' → logprob: -8.625231742858887
    3. 'profit' → logprob: -10.875231742858887
    4. '_' → logprob: -11.125231742858887
    5. '_pro' → logprob: -11.375231742858887
    6. 'Profit' → logprob: -12.250231742858887
    7. '_prob' → logprob: -14.125231742858887
    8. '\' → logprob: -15.000231742858887
    9. ' profit' → logprob: -15.125231742858887
    10. ' _' → logprob: -15.875231742858887

Token 819: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001499060745118186
    2. '][' → logprob: -10.375149726867676
    3. '[pos' → logprob: -10.375149726867676
    4. 'def' → logprob: -10.625149726867676
    5. '[max' → logprob: -11.125149726867676
    6. '[next' → logprob: -11.375149726867676
    7. ' [' → logprob: -12.125149726867676
    8. '[][' → logprob: -12.250149726867676
    9. ')' → logprob: -12.500149726867676
    10. ')[' → logprob: -12.625149726867676

Token 820: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '[' → logprob: -15.125001907348633
    4. '   ' → logprob: -16.250001907348633
    5. '][' → logprob: -16.875001907348633
    6. '
' → logprob: -17.250001907348633
    7. '       ' → logprob: -17.625001907348633
    8. '```' → logprob: -18.625001907348633
    9. 'def' → logprob: -18.750001907348633
    10. '#' → logprob: -19.125001907348633

Token 821: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00042531240615062416
    2. '[' → logprob: -8.375425338745117
    3. ']' → logprob: -8.625425338745117
    4. ' ][' → logprob: -12.125425338745117
    5. '][]' → logprob: -12.750425338745117
    6. '][-' → logprob: -13.000425338745117
    7. '0' → logprob: -13.625425338745117
    8. '[][' → logprob: -14.500425338745117
    9. '   ' → logprob: -14.625425338745117
    10. ']][' → logprob: -14.875425338745117

Token 822: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '[' → logprob: -16.125
    4. '][' → logprob: -17.375
    5. '000' → logprob: -17.375
    6. '۰' → logprob: -18.5
    7. '{' → logprob: -18.875
    8. '00' → logprob: -19.0
    9. ']' → logprob: -19.75
    10. 'W' → logprob: -20.0

Token 823: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.431207682704553e-05
    2. ']' → logprob: -10.000054359436035
    3. '[' → logprob: -12.375054359436035
    4. '0' → logprob: -12.625054359436035
    5. ' ][' → logprob: -14.500054359436035
    6. '][-' → logprob: -15.000054359436035
    7. ']==' → logprob: -15.875054359436035
    8. ']=' → logprob: -15.875054359436035
    9. ''][' → logprob: -16.62505340576172
    10. '"][' → logprob: -17.00005340576172

Token 824: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۰' → logprob: -19.75
    4. '<|end|>' → logprob: -20.5
    5. '   ' → logprob: -20.75
    6. '=' → logprob: -21.0
    7. '০' → logprob: -21.625
    8. ']' → logprob: -22.125
    9. '000' → logprob: -22.75
    10. '०' → logprob: -22.875

Token 825: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011782010551542044
    2. ']=' → logprob: -6.75117826461792
    3. '=' → logprob: -11.751177787780762
    4. ' ]' → logprob: -15.876177787780762
    5. ')' → logprob: -17.001178741455078
    6. ']+=' → logprob: -17.751178741455078
    7. ']=-' → logprob: -18.251178741455078
    8. ' =' → logprob: -18.626178741455078
    9. ')=' → logprob: -19.626178741455078
    10. ']={' → logprob: -19.626178741455078

Token 826: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000553151941858232
    2. ' =' → logprob: -7.500553131103516
    3. ']=' → logprob: -15.500553131103516
    4. ']' → logprob: -17.000553131103516
    5. '[' → logprob: -17.250553131103516
    6. '=True' → logprob: -17.625553131103516
    7. ')=' → logprob: -18.625553131103516
    8. '=
' → logprob: -18.750553131103516
    9. '＝' → logprob: -19.125553131103516
    10. '=[' → logprob: -19.375553131103516

Token 827: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '000' → logprob: -20.75
    4. '```' → logprob: -20.875
    5. '00' → logprob: -21.0
    6. '(' → logprob: -21.125
    7. '۰' → logprob: -21.375
    8. '   ' → logprob: -22.125
    9. '=' → logprob: -22.75
    10. '[' → logprob: -22.75

Token 828: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.25
    3. '000' → logprob: -21.75
    4. '00' → logprob: -22.125
    5. '۰' → logprob: -23.875
    6. '=' → logprob: -24.25
    7. '```' → logprob: -24.75
    8. '   ' → logprob: -24.875
    9. '(' → logprob: -25.0
    10. '[' → logprob: -25.25

Token 829: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3656183183193207
    2. ' for' → logprob: -2.2406182289123535
    3. 'for' → logprob: -2.4906182289123535
    4. '       ' → logprob: -2.9906182289123535
    5. '<|end|>' → logprob: -2.9906182289123535
    6. '
' → logprob: -5.7406182289123535
    7. '	for' → logprob: -5.7406182289123535
    8. '    
' → logprob: -5.9906182289123535
    9. ')' → logprob: -6.2406182289123535
    10. '<|end|>' → logprob: -6.6156182289123535

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022343924269080162
    2. 'for' → logprob: -4.77234411239624
    3. '        
' → logprob: -5.14734411239624
    4. '   ' → logprob: -5.64734411239624
    5. ' for' → logprob: -6.27234411239624
    6. '    
' → logprob: -7.64734411239624
    7. '	for' → logprob: -8.147343635559082
    8. '  
' → logprob: -8.272343635559082
    9. '```' → logprob: -8.272343635559082
    10. '	' → logprob: -8.522343635559082

Token 831: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009131867438554764
    2. '       ' → logprob: -4.759131908416748
    3. ' for' → logprob: -7.634131908416748
    4. '   ' → logprob: -10.38413143157959
    5. '```' → logprob: -13.50913143157959
    6. '
' → logprob: -14.38413143157959
    7. '	for' → logprob: -14.88413143157959
    8. 'from' → logprob: -16.009132385253906
    9. '        
' → logprob: -16.384132385253906
    10. '           ' → logprob: -17.259132385253906

Token 832: ' day' (ID: 2163)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.023602871224284172
    2. 'j' → logprob: -3.7736029624938965
    3. ' day' → logprob: -8.148602485656738
    4. '   ' → logprob: -11.023602485656738
    5. '_j' → logprob: -11.273602485656738
    6. 'day' → logprob: -11.398602485656738
    7. ' _' → logprob: -11.648602485656738
    8. '```' → logprob: -12.023602485656738
    9. 'd' → logprob: -12.773602485656738
    10. '_' → logprob: -13.023602485656738

Token 833: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017437703907489777
    2. 'in' → logprob: -4.142437934875488
    3. ' ' → logprob: -6.767437934875488
    4. ',' → logprob: -9.017437934875488
    5. ' ,' → logprob: -9.767437934875488
    6. '_' → logprob: -10.892437934875488
    7. '   ' → logprob: -11.892437934875488
    8. '    ' → logprob: -12.017437934875488
    9. '<|end|>' → logprob: -12.017437934875488
    10. '  ' → logprob: -12.142437934875488

Token 834: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029751067981123924
    2. ' range' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.02975082397461
    4. ' ' → logprob: -16.27975082397461
    5. 'in' → logprob: -16.40475082397461
    6. '(range' → logprob: -16.90475082397461
    7. ' in' → logprob: -17.15475082397461
    8. ')' → logprob: -17.27975082397461
    9. '```' → logprob: -17.90475082397461
    10. '0' → logprob: -18.27975082397461

Token 835: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.10024183988571167
    2. '(' → logprob: -2.3502418994903564
    3. '(
' → logprob: -10.600241661071777
    4. ' (' → logprob: -12.100241661071777
    5. '   ' → logprob: -13.350241661071777
    6. '       ' → logprob: -13.350241661071777
    7. 'D' → logprob: -14.725241661071777
    8. '(d' → logprob: -15.100241661071777
    9. '(`' → logprob: -15.975241661071777
    10. '((' → logprob: -15.975241661071777

Token 836: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027590671554207802
    2. '):
' → logprob: -3.652590751647949
    3. '+' → logprob: -7.777590751647949
    4. '   ' → logprob: -8.02759075164795
    5. '       ' → logprob: -8.27759075164795
    6. ':' → logprob: -9.02759075164795
    7. ')' → logprob: -9.15259075164795
    8. ']:' → logprob: -10.90259075164795
    9. '=' → logprob: -11.90259075164795
    10. ' ):' → logprob: -12.15259075164795

Token 837: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19407512247562408
    2. '       ' → logprob: -1.819075107574463
    3. ' for' → logprob: -5.194075107574463
    4. '```' → logprob: -5.694075107574463
    5. ':' → logprob: -6.319075107574463
    6. '   ' → logprob: -6.569075107574463
    7. 'for' → logprob: -7.569075107574463
    8. ',' → logprob: -8.319075584411621
    9. '        
' → logprob: -8.444075584411621
    10. '        ' → logprob: -8.694075584411621

Token 838: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2379055619239807
    2. 'for' → logprob: -1.862905502319336
    3. ' for' → logprob: -3.487905502319336
    4. '   ' → logprob: -4.237905502319336
    5. '       ' → logprob: -4.987905502319336
    6. '               ' → logprob: -5.987905502319336
    7. 'performance' → logprob: -7.612905502319336
    8. 'possible' → logprob: -8.112905502319336
    9. '#' (adapté à ' #') → logprob: -8.737905502319336
    10. 'perform' → logprob: -8.862905502319336

Token 839: ' build' (ID: 3024)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2715371251106262
    2. 'possible' → logprob: -1.8965370655059814
    3. 'perform' → logprob: -3.2715370655059814
    4. 'interval' → logprob: -3.7715370655059814
    5. '#' → logprob: -5.3965373039245605
    6. '   ' → logprob: -5.5215373039245605
    7. 'valid' → logprob: -5.6465373039245605
    8. 'perf' → logprob: -5.7715373039245605
    9. 'can' → logprob: -6.3965373039245605
    10. 'poss' → logprob: -6.5215373039245605

Token 840: ' performances' (ID: 27880)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.5920776724815369
    2. 'perform' → logprob: -1.3420777320861816
    3. '           ' → logprob: -2.5920777320861816
    4. ' possible' → logprob: -3.7170777320861816
    5. 'interval' → logprob: -3.8420777320861816
    6. 'all' → logprob: -4.217077732086182
    7. '               ' → logprob: -4.467077732086182
    8. '       ' → logprob: -4.967077732086182
    9. ' all' → logprob: -5.217077732086182
    10. ' intervals' → logprob: -5.467077732086182

Token 841: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.729434609413147
    2. '       ' → logprob: -0.854434609413147
    3. 'for' → logprob: -2.8544344902038574
    4. ' for' → logprob: -3.8544344902038574
    5. '```' → logprob: -5.229434490203857
    6. '        
' → logprob: -6.479434490203857
    7. '   ' → logprob: -6.979434490203857
    8. '
' → logprob: -7.104434490203857
    9. '            
' → logprob: -7.229434490203857
    10. 'E' → logprob: -7.854434490203857

Token 842: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03428568318486214
    2. ' for' → logprob: -4.159285545349121
    3. '       ' → logprob: -4.909285545349121
    4. 'for' → logprob: -5.034285545349121
    5. '            ' → logprob: -6.784285545349121
    6. '```' → logprob: -7.534285545349121
    7. '            
' → logprob: -7.784285545349121
    8. '               ' → logprob: -7.909285545349121
    9. '        ' → logprob: -8.034285545349121
    10. '[' → logprob: -8.659285545349121

Token 843: ' performances' (ID: 27880)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1276199072599411
    2. 'for' → logprob: -3.002619981765747
    3. ' for' → logprob: -3.752619981765747
    4. 'possible' → logprob: -4.627619743347168
    5. '       ' → logprob: -4.877619743347168
    6. 'valid' → logprob: -5.377619743347168
    7. 'interval' → logprob: -5.377619743347168
    8. '   ' → logprob: -6.127619743347168
    9. ' intervals' → logprob: -6.127619743347168
    10. 'perform' → logprob: -6.127619743347168

Token 844: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34863248467445374
    2. '=' → logprob: -1.2236324548721313
    3. '=[]' → logprob: -8.9736328125
    4. '.append' → logprob: -10.8486328125
    5. '           ' → logprob: -10.9736328125
    6. '   ' → logprob: -12.3486328125
    7. ')' → logprob: -12.4736328125
    8. '[' → logprob: -12.7236328125
    9. '=[' → logprob: -13.2236328125
    10. '=[]
' → logprob: -13.3486328125

Token 845: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.8908587662735954e-05
    2. ' []' → logprob: -11.000019073486328
    3. '[]
' → logprob: -13.250019073486328
    4. '[' → logprob: -15.250019073486328
    5. '[]}' → logprob: -16.500019073486328
    6. '[]>' → logprob: -17.625019073486328
    7. '[])' → logprob: -18.000019073486328
    8. '[],' → logprob: -18.125019073486328
    9. '   ' → logprob: -18.750019073486328
    10. '[]

' → logprob: -18.875019073486328

Token 846: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011892797192558646
    2. ' for' → logprob: -7.126189231872559
    3. 'for' → logprob: -8.501189231872559
    4. '       ' → logprob: -10.126189231872559
    5. '            ' → logprob: -10.376189231872559
    6. '               ' → logprob: -10.376189231872559
    7. '	       ' → logprob: -10.626189231872559
    8. '            
' → logprob: -11.251189231872559
    9. '```' → logprob: -11.751189231872559
    10. ',' → logprob: -12.126189231872559

Token 847: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.682456910610199
    2. '           ' → logprob: -1.1824569702148438
    3. ' for' → logprob: -1.6824569702148438
    4. '       ' → logprob: -6.557456970214844
    5. '               ' → logprob: -8.557456970214844
    6. '   ' → logprob: -8.682456970214844
    7. '```' → logprob: -8.682456970214844
    8. '            ' → logprob: -9.557456970214844
    9. ' ' → logprob: -10.807456970214844
    10. '
' → logprob: -10.807456970214844

Token 848: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3071673810482025
    2. ' start' → logprob: -2.4321672916412354
    3. ' i' → logprob: -2.4321672916412354
    4. 'start' → logprob: -2.4321672916412354
    5. 'region' → logprob: -7.8071675300598145
    6. ' region' → logprob: -8.182167053222656
    7. 'interval' → logprob: -8.932167053222656
    8. '   ' → logprob: -10.557167053222656
    9. ' interval' → logprob: -10.932167053222656
    10. '```' → logprob: -11.432167053222656

Token 849: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4775928854942322
    2. 'in' → logprob: -0.9775928854942322
    3. '=' → logprob: -5.727592945098877
    4. ')' → logprob: -9.727592468261719
    5. '```' → logprob: -10.102592468261719
    6. '	in' → logprob: -10.227592468261719
    7. '_in' → logprob: -10.352592468261719
    8. ' =' → logprob: -11.102592468261719
    9. ',' → logprob: -11.602592468261719
    10. '
' → logprob: -11.727592468261719

Token 850: ' range' (ID: 3352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005246091168373823
    2. 'range' → logprob: -5.255246162414551
    3. ' range' → logprob: -11.38024616241455
    4. ' ' → logprob: -14.75524616241455
    5. '(range' → logprob: -15.38024616241455
    6. '(' → logprob: -15.50524616241455
    7. 'C' → logprob: -18.630245208740234
    8. '
' → logprob: -19.005245208740234
    9. '```' → logprob: -19.005245208740234
    10. '   ' → logprob: -19.130245208740234

Token 851: '(C' (ID: 5559)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.005266719032078981
    2. '0' → logprob: -5.2552666664123535
    3. '(C' → logprob: -10.755267143249512
    4. ' C' → logprob: -11.630267143249512
    5. '           ' → logprob: -13.880267143249512
    6. '   ' → logprob: -14.130267143249512
    7. '               ' → logprob: -15.505267143249512
    8. '	C' → logprob: -15.630267143249512
    9. '       ' → logprob: -15.755267143249512
    10. '(' → logprob: -15.880267143249512

Token 852: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.598480224609375
    2. '):' → logprob: -0.973480224609375
    3. ',' → logprob: -3.348480224609375
    4. '           ' → logprob: -3.848480224609375
    5. '       ' → logprob: -4.598480224609375
    6. '               ' → logprob: -6.098480224609375
    7. ':' → logprob: -6.598480224609375
    8. '   ' → logprob: -7.473480224609375
    9. '```' → logprob: -7.848480224609375
    10. ':
' → logprob: -8.098480224609375

Token 853: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09762664884328842
    2. '           ' → logprob: -2.8476266860961914
    3. ' if' → logprob: -4.222626686096191
    4. ' for' → logprob: -4.347626686096191
    5. 'for' → logprob: -5.972626686096191
    6. 'if' → logprob: -6.222626686096191
    7. '   ' → logprob: -7.347626686096191
    8. '                   ' → logprob: -7.597626686096191
    9. '```' → logprob: -7.847626686096191
    10. '       ' → logprob: -8.347626686096191

Token 854: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8155118227005005
    2. 'end' → logprob: -1.3155118227005005
    3. 'for' → logprob: -1.6905118227005005
    4. '               ' → logprob: -2.815511703491211
    5. 'valid' → logprob: -4.815511703491211
    6. '   ' → logprob: -4.815511703491211
    7. '                   ' → logprob: -5.065511703491211
    8. ' if' → logprob: -5.440511703491211
    9. 'all' → logprob: -6.065511703491211
    10. '           ' → logprob: -6.190511703491211

Token 855: ' stop' (ID: 5666)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.09209565073251724
    2. 'if' → logprob: -3.3420956134796143
    3. 'for' → logprob: -3.3420956134796143
    4. 'valid' → logprob: -5.592095851898193
    5. 'ok' → logprob: -5.717095851898193
    6. '   ' → logprob: -5.842095851898193
    7. 'can' → logprob: -6.217095851898193
    8. '       ' → logprob: -6.967095851898193
    9. 'acc' → logprob: -7.217095851898193
    10. 'max' → logprob: -7.342095851898193

Token 856: ' if' (ID: 538)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9262866973876953
    2. ' in' → logprob: -1.1762866973876953
    3. 'in' → logprob: -1.5512866973876953
    4. ' =' → logprob: -2.6762866973876953
    5. 'for' → logprob: -4.926286697387695
    6. 'range' → logprob: -5.801286697387695
    7. 'from' → logprob: -7.051286697387695
    8. '   ' → logprob: -7.176286697387695
    9. '       ' → logprob: -7.426286697387695
    10. 'n' → logprob: -8.051286697387695

Token 857: ' E' (ID: 457)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5062413215637207
    2. 'E' → logprob: -1.0062413215637207
    3. 'not' → logprob: -4.506241321563721
    4. ' start' → logprob: -4.881241321563721
    5. ' E' → logprob: -5.131241321563721
    6. ' not' → logprob: -5.506241321563721
    7. 'all' → logprob: -7.006241321563721
    8. '   ' → logprob: -7.506241321563721
    9. ' ' → logprob: -7.881241321563721
    10. 'end' → logprob: -8.131240844726562

Token 858: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0012063038302585483
    2. '[' → logprob: -7.251206398010254
    3. '[i' → logprob: -8.751206398010254
    4. '```' → logprob: -9.251206398010254
    5. '][' → logprob: -9.501206398010254
    6. '[end' → logprob: -9.876206398010254
    7. 'start' → logprob: -9.876206398010254
    8. '[j' → logprob: -11.501206398010254
    9. 'for' → logprob: -11.751206398010254
    10. '[k' → logprob: -12.376206398010254

Token 859: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18065790832042694
    2. '[start' → logprob: -1.8056578636169434
    3. '[' → logprob: -7.680657863616943
    4. ']' → logprob: -8.305658340454102
    5. '[j' → logprob: -9.430658340454102
    6. '[end' → logprob: -10.055658340454102
    7. ']==' → logprob: -10.680658340454102
    8. '```' → logprob: -11.805658340454102
    9. ']][' → logprob: -11.930658340454102
    10. 'start' → logprob: -12.305658340454102

Token 860: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.008747772313654423
    2. '][' → logprob: -5.008747577667236
    3. 'start' → logprob: -7.258747577667236
    4. ']' → logprob: -7.508747577667236
    5. ' day' → logprob: -7.758747577667236
    6. 'j' → logprob: -8.383748054504395
    7. '[' → logprob: -10.508748054504395
    8. '(day' → logprob: -10.633748054504395
    9. ']==' → logprob: -11.383748054504395
    10. '   ' → logprob: -11.883748054504395

Token 861: ']==' (ID: 34128)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.028789492323994637
    2. '[start' → logprob: -3.653789520263672
    3. ']==' → logprob: -6.528789520263672
    4. ']' → logprob: -7.278789520263672
    5. '[' → logprob: -9.528789520263672
    6. ']<=' → logprob: -9.778789520263672
    7. 'start' → logprob: -9.903789520263672
    8. ']>' → logprob: -9.903789520263672
    9. ' ][' → logprob: -10.653789520263672
    10. '   ' → logprob: -10.778789520263672

Token 862: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024299313372466713
    2. '>' → logprob: -8.500243186950684
    3. ' ' → logprob: -10.750243186950684
    4. '<=' → logprob: -12.125243186950684
    5. '=' → logprob: -12.875243186950684
    6. '">' → logprob: -13.125243186950684
    7. ''>' → logprob: -13.250243186950684
    8. ''' → logprob: -13.375243186950684
    9. '               ' → logprob: -14.500243186950684
    10. '```' → logprob: -14.625243186950684

Token 863: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44570982456207275
    2. '           ' → logprob: -1.4457098245620728
    3. '                   ' → logprob: -3.570709705352783
    4. ':' → logprob: -3.695709705352783
    5. ':
' → logprob: -3.945709705352783
    6. ' and' → logprob: -4.070709705352783
    7. 'and' → logprob: -4.195709705352783
    8. 'if' → logprob: -4.695709705352783
    9. ' if' → logprob: -5.820709705352783
    10. '                       ' → logprob: -6.445709705352783

Token 864: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25118494033813477
    2. '               ' → logprob: -1.8761849403381348
    3. ' if' → logprob: -3.3761849403381348
    4. 'if' → logprob: -4.001184940338135
    5. '       ' → logprob: -4.626184940338135
    6. 'for' → logprob: -6.876184940338135
    7. '   ' → logprob: -6.876184940338135
    8. 'continue' → logprob: -7.251184940338135
    9. ' for' → logprob: -7.751184940338135
    10. ')' → logprob: -7.751184940338135

Token 865: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.02229403518140316
    2. ' next' → logprob: -4.022294044494629
    3. 'continue' → logprob: -5.522294044494629
    4. '   ' → logprob: -9.522294044494629
    5. ' continue' → logprob: -10.772294044494629
    6. '1' → logprob: -10.897294044494629
    7. ' ' → logprob: -12.022294044494629
    8. '           ' → logprob: -12.272294044494629
    9. '	next' → logprob: -12.897294044494629
    10. ')' → logprob: -13.022294044494629

Token 866: ' start' (ID: 1604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4501735270023346
    2. '           ' → logprob: -1.5751734972000122
    3. ' if' → logprob: -2.5751736164093018
    4. 'if' → logprob: -3.3251736164093018
    5. ')' → logprob: -4.575173377990723
    6. ':
' → logprob: -4.950173377990723
    7. '       ' → logprob: -5.200173377990723
    8. '
' → logprob: -5.575173377990723
    9. '   ' → logprob: -5.950173377990723
    10. ':' → logprob: -6.325173377990723

Token 867: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3592606484889984
    2. '               ' → logprob: -2.3592605590820312
    3. '       ' → logprob: -2.4842605590820312
    4. ' if' → logprob: -2.6092605590820312
    5. 'if' → logprob: -3.2342605590820312
    6. '   ' → logprob: -5.234260559082031
    7. ' ' → logprob: -7.109260559082031
    8. '<|end|>' → logprob: -7.109260559082031
    9. '	       ' → logprob: -7.734260559082031
    10. ')' → logprob: -7.859260559082031

Token 868: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7944397926330566
    2. '               ' → logprob: -0.7944397926330566
    3. ' if' → logprob: -3.4194397926330566
    4. '       ' → logprob: -3.6694397926330566
    5. '<|end|>' → logprob: -4.419439792633057
    6. '   ' → logprob: -5.294439792633057
    7. ' for' → logprob: -5.544439792633057
    8. ' ' → logprob: -5.669439792633057
    9. ')' → logprob: -5.669439792633057
    10. '<|end|>' → logprob: -6.919439792633057

Token 869: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9999510049819946
    2. '               ' → logprob: -1.1249510049819946
    3. ' if' → logprob: -1.3749510049819946
    4. 'if' (adapté à ' if') → logprob: -2.999950885772705
    5. '                   ' → logprob: -6.749950885772705
    6. ' ' → logprob: -7.499950885772705
    7. '       ' → logprob: -7.874950885772705
    8. '	       ' → logprob: -7.999950885772705
    9. '            ' → logprob: -8.374951362609863
    10. '                       ' → logprob: -8.749951362609863

Token 870: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00026419671485200524
    2. ' E' → logprob: -8.250264167785645
    3. '           ' → logprob: -13.500264167785645
    4. '   ' → logprob: -14.625264167785645
    5. '               ' → logprob: -14.625264167785645
    6. 'not' → logprob: -15.125264167785645
    7. '                   ' → logprob: -15.500264167785645
    8. '(E' → logprob: -16.12526512145996
    9. '	E' → logprob: -17.12526512145996
    10. '0' → logprob: -17.50026512145996

Token 871: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -1.1875571544806007e-05
    2. '[' → logprob: -11.875011444091797
    3. '][' → logprob: -13.125011444091797
    4. '[end' → logprob: -14.000011444091797
    5. '```' → logprob: -14.500011444091797
    6. ')[' → logprob: -14.875011444091797
    7. '[i' → logprob: -15.500011444091797
    8. ' [' → logprob: -15.625011444091797
    9. '[now' → logprob: -16.125011444091797
    10. '   ' → logprob: -16.250011444091797

Token 872: '][' (ID: 2696)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.10184666514396667
    2. '][' → logprob: -2.351846694946289
    3. '[' → logprob: -6.726846694946289
    4. '[j' → logprob: -8.476846694946289
    5. '[end' → logprob: -9.351846694946289
    6. '[row' → logprob: -10.226846694946289
    7. '           ' → logprob: -10.726846694946289
    8. '[line' → logprob: -10.976846694946289
    9. '               ' → logprob: -12.101846694946289
    10. '   ' → logprob: -12.101846694946289

Token 873: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.0025926579255610704
    2. '[' → logprob: -6.12759256362915
    3. '][' → logprob: -8.002593040466309
    4. ' day' → logprob: -9.752593040466309
    5. '(day' → logprob: -12.252593040466309
    6. 'j' → logprob: -13.127593040466309
    7. ']' → logprob: -13.127593040466309
    8. '   ' → logprob: -13.502593040466309
    9. '[j' → logprob: -13.752593040466309
    10. ' ' → logprob: -13.752593040466309

Token 874: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.8073511719703674
    2. ']' → logprob: -1.3073511123657227
    3. '==' → logprob: -1.3073511123657227
    4. ' ==' → logprob: -4.432351112365723
    5. '>' → logprob: -8.057351112365723
    6. '<=' → logprob: -8.682351112365723
    7. ']>' → logprob: -8.682351112365723
    8. ']<=' → logprob: -8.807351112365723
    9. '']==' → logprob: -9.432351112365723
    10. '[' → logprob: -9.807351112365723

Token 875: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '>' → logprob: -16.125
    4. '=' → logprob: -18.375
    5. '```' → logprob: -19.0
    6. '۰' → logprob: -19.125
    7. '   ' → logprob: -19.75
    8. ')' → logprob: -20.25
    9. '<|end|>' → logprob: -20.875
    10. '#' → logprob: -21.375

Token 876: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2952558398246765
    2. ':' → logprob: -2.0452558994293213
    3. '                   ' → logprob: -2.4202558994293213
    4. '               ' → logprob: -3.4202558994293213
    5. '           ' → logprob: -5.670255661010742
    6. 'continue' → logprob: -7.295255661010742
    7. ' continue' → logprob: -8.420255661010742
    8. '                       ' → logprob: -8.670255661010742
    9. '   ' → logprob: -9.545255661010742
    10. '	continue' → logprob: -10.420255661010742

Token 877: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000766148732509464
    2. 'continue' → logprob: -8.125765800476074
    3. '               ' → logprob: -8.375765800476074
    4. ' continue' → logprob: -9.250765800476074
    5. ':
' → logprob: -10.250765800476074
    6. '                       ' → logprob: -10.375765800476074
    7. '	continue' → logprob: -10.750765800476074
    8. '   ' → logprob: -11.000765800476074
    9. ':' → logprob: -11.500765800476074
    10. '           ' → logprob: -12.250765800476074

Token 878: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.13101255893707275
    2. '                   ' → logprob: -2.381012439727783
    3. ' continue' → logprob: -3.631012439727783
    4. '               ' → logprob: -6.131012439727783
    5. '                       ' → logprob: -6.631012439727783
    6. '   ' → logprob: -8.381012916564941
    7. '	continue' → logprob: -9.631012916564941
    8. '           ' → logprob: -10.256012916564941
    9. '       ' → logprob: -11.756012916564941
    10. '
' → logprob: -12.506012916564941

Token 879: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012075497768819332
    2. '           ' → logprob: -4.637075424194336
    3. ' for' → logprob: -6.762075424194336
    4. 'for' → logprob: -8.137075424194336
    5. '<|end|>' → logprob: -8.137075424194336
    6. ')' → logprob: -8.512075424194336
    7. '       ' → logprob: -9.637075424194336
    8. ',' → logprob: -9.762075424194336
    9. '```' → logprob: -10.262075424194336
    10. '
' → logprob: -10.262075424194336

Token 880: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19616514444351196
    2. '           ' → logprob: -2.571165084838867
    3. 'for' → logprob: -2.946165084838867
    4. ' for' → logprob: -3.071165084838867
    5. '```' → logprob: -6.446165084838867
    6. '       ' → logprob: -7.696165084838867
    7. '   ' → logprob: -8.071165084838867
    8. ')' → logprob: -9.071165084838867
    9. ',' → logprob: -10.071165084838867
    10. '                   ' → logprob: -10.196165084838867

Token 881: ' sum' (ID: 4215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6684267520904541
    2. 'for' → logprob: -1.168426752090454
    3. ' for' → logprob: -1.793426752090454
    4. '           ' → logprob: -5.168426513671875
    5. 'end' → logprob: -5.793426513671875
    6. '```' → logprob: -7.793426513671875
    7. '   ' → logprob: -8.043426513671875
    8. '
' → logprob: -8.793426513671875
    9. '       ' → logprob: -9.043426513671875
    10. '                   ' → logprob: -9.293426513671875

Token 882: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.7157794237136841
    2. '_' → logprob: -0.7157794237136841
    3. '=' → logprob: -4.8407793045043945
    4. '_E' → logprob: -4.9657793045043945
    5. '_=' → logprob: -5.4657793045043945
    6. '_e' → logprob: -6.3407793045043945
    7. ' =' → logprob: -6.8407793045043945
    8. '_val' → logprob: -8.715779304504395
    9. '_
' → logprob: -10.465779304504395
    10. 'F' → logprob: -10.840779304504395

Token 883: '_perf' (ID: 198393)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027056274935603142
    2. ' =' → logprob: -3.6520562171936035
    3. '=sum' → logprob: -7.6520562171936035
    4. '=start' → logprob: -8.527056694030762
    5. '[start' → logprob: -10.027056694030762
    6. '=[' → logprob: -12.027056694030762
    7. 'for' → logprob: -12.152056694030762
    8. '=
' → logprob: -12.527056694030762
    9. '   ' → logprob: -12.527056694030762
    10. '+=' → logprob: -13.027056694030762

Token 884: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859565943479538
    2. ' =' → logprob: -3.048595666885376
    3. '=sum' → logprob: -12.173595428466797
    4. '=start' → logprob: -13.548595428466797
    5. '   ' → logprob: -14.673595428466797
    6. '=
' → logprob: -14.923595428466797
    7. '=int' → logprob: -15.173595428466797
    8. '       ' → logprob: -16.048595428466797
    9. ',' → logprob: -16.423595428466797
    10. '           ' → logprob: -16.548595428466797

Token 885: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16281327605247498
    2. 'E' → logprob: -1.9128133058547974
    3. ' ' → logprob: -6.662813186645508
    4. ' E' → logprob: -6.662813186645508
    5. '   ' → logprob: -11.412813186645508
    6. '           ' → logprob: -12.725313186645508
    7. '=' → logprob: -12.787813186645508
    8. '       ' → logprob: -13.287813186645508
    9. 'F' → logprob: -13.725313186645508
    10. 'sum' → logprob: -13.787813186645508

Token 886: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34858131408691406
    2. 'E' → logprob: -1.223581314086914
    3. ' E' → logprob: -9.723581314086914
    4. ' ' → logprob: -9.973581314086914
    5. '           ' → logprob: -11.848581314086914
    6. '   ' → logprob: -12.098581314086914
    7. '               ' → logprob: -12.723581314086914
    8. '       ' → logprob: -12.848581314086914
    9. '1' → logprob: -12.973581314086914
    10. 'sum' → logprob: -13.348581314086914

Token 887: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4594448506832123
    2. '<|end|>' → logprob: -1.3344448804855347
    3. 'for' → logprob: -2.709444761276245
    4. ' for' → logprob: -3.459444761276245
    5. '<|end|>' → logprob: -6.459444999694824
    6. ')' → logprob: -6.709444999694824
    7. '                ' → logprob: -7.084444999694824
    8. '           ' → logprob: -7.584444999694824
    9. 'tokens' → logprob: -7.709444999694824
    10. '
' → logprob: -8.209444999694824

Token 888: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3248598873615265
    2. '<|end|>' → logprob: -2.199859857559204
    3. ' for' → logprob: -2.324859857559204
    4. '               ' → logprob: -3.699859857559204
    5. '           ' → logprob: -3.824859857559204
    6. '+' → logprob: -5.199860095977783
    7. '       ' → logprob: -5.574860095977783
    8. ')' → logprob: -5.949860095977783
    9. '                   ' → logprob: -6.324860095977783
    10. '<|end|>' → logprob: -6.824860095977783

Token 889: ' sum' (ID: 4215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018333226907998323
    2. '               ' → logprob: -6.751833438873291
    3. ' for' → logprob: -7.501833438873291
    4. 'sum' (adapté à ' sum') → logprob: -9.251832962036133
    5. 'end' → logprob: -12.001832962036133
    6. '                   ' → logprob: -12.626832962036133
    7. '
' → logprob: -13.001832962036133
    8. '                ' → logprob: -13.876832962036133
    9. '           ' → logprob: -14.251832962036133
    10. '```' → logprob: -14.501832962036133

Token 890: 'F' (ID: 37)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.007071967236697674
    2. 'F' → logprob: -5.2570719718933105
    3. '=' → logprob: -6.3820719718933105
    4. ' =' → logprob: -9.757071495056152
    5. '_' → logprob: -10.132071495056152
    6. 'for' → logprob: -11.507071495056152
    7. 'start' → logprob: -12.382071495056152
    8. '=start' → logprob: -12.632071495056152
    9. '_=' → logprob: -12.757071495056152
    10. '_E' → logprob: -12.882071495056152

Token 891: '_perf' (ID: 198393)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41076868772506714
    2. '_perf' → logprob: -1.285768747329712
    3. '+=' → logprob: -3.660768747329712
    4. ' =' → logprob: -4.410768508911133
    5. 'for' → logprob: -4.660768508911133
    6. '_' → logprob: -5.535768508911133
    7. ' +=' → logprob: -5.785768508911133
    8. '_per' → logprob: -6.160768508911133
    9. 'perf' → logprob: -6.910768508911133
    10. '[' → logprob: -7.160768508911133

Token 892: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07007159292697906
    2. ' =' → logprob: -2.6950716972351074
    3. 'for' → logprob: -9.57007122039795
    4. ' +=' → logprob: -10.69507122039795
    5. '+=' → logprob: -11.19507122039795
    6. ')' → logprob: -12.19507122039795
    7. ' for' → logprob: -12.19507122039795
    8. '               ' → logprob: -12.57007122039795
    9. '                   ' → logprob: -12.82007122039795
    10. '            ' → logprob: -13.19507122039795

Token 893: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005928678438067436
    2. ' ' → logprob: -5.1309285163879395
    3. '   ' → logprob: -18.13092803955078
    4. '۰' → logprob: -18.75592803955078
    5. ' ' → logprob: -18.88092803955078
    6. '<|end|>' → logprob: -19.00592803955078
    7. '  ' → logprob: -19.75592803955078
    8. '+' → logprob: -19.88092803955078
    9. '=' → logprob: -20.13092803955078
    10. '```' → logprob: -20.75592803955078

Token 894: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '
' → logprob: -18.2500057220459
    4. '               ' → logprob: -19.5000057220459
    5. '   ' → logprob: -19.6250057220459
    6. '=' → logprob: -20.6250057220459
    7. '                   ' → logprob: -20.7500057220459
    8. '           ' → logprob: -20.7500057220459
    9. '۰' → logprob: -20.8750057220459
    10. '```' → logprob: -20.8750057220459

Token 895: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04275456815958023
    2. ' for' → logprob: -3.792754650115967
    3. 'for' → logprob: -4.417754650115967
    4. '<|end|>' → logprob: -5.417754650115967
    5. '                ' → logprob: -8.167754173278809
    6. '
' → logprob: -8.167754173278809
    7. '                
' → logprob: -8.292754173278809
    8. ',' → logprob: -8.417754173278809
    9. '			' → logprob: -8.542754173278809
    10. '	           ' → logprob: -8.667754173278809

Token 896: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024046603590250015
    2. ' for' → logprob: -4.399046421051025
    3. 'for' → logprob: -4.524046421051025
    4. '	           ' → logprob: -8.524046897888184
    5. '			' → logprob: -9.274046897888184
    6. '                   ' → logprob: -9.649046897888184
    7. '           ' → logprob: -9.774046897888184
    8. '		       ' → logprob: -10.149046897888184
    9. '                ' → logprob: -10.649046897888184
    10. '	for' → logprob: -10.649046897888184

Token 897: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1476217806339264
    2. ' for' → logprob: -2.1476218700408936
    3. '               ' → logprob: -3.8976218700408936
    4. '
' → logprob: -9.522622108459473
    5. '                   ' → logprob: -9.897622108459473
    6. '           ' → logprob: -10.772622108459473
    7. 'if' → logprob: -10.897622108459473
    8. '```' → logprob: -11.397622108459473
    9. ' if' → logprob: -12.897622108459473
    10. '                       ' → logprob: -13.272622108459473

Token 898: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0006246338016353548
    2. ' end' → logprob: -8.125624656677246
    3. 'region' → logprob: -8.250624656677246
    4. 'pos' → logprob: -10.250624656677246
    5. 'k' → logprob: -11.000624656677246
    6. 'r' → logprob: -11.625624656677246
    7. 'idx' → logprob: -13.250624656677246
    8. 'stop' → logprob: -13.375624656677246
    9. 'length' → logprob: -13.625624656677246
    10. 'i' → logprob: -14.625624656677246

Token 899: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009756677784025669
    2. 'in' → logprob: -4.634756565093994
    3. '	in' → logprob: -15.759757041931152
    4. '```' → logprob: -16.009756088256836
    5. ' ' → logprob: -16.134756088256836
    6. 'start' → logprob: -16.259756088256836
    7. '[start' → logprob: -16.509756088256836
    8. 'In' → logprob: -17.509756088256836
    9. '               ' → logprob: -17.634756088256836
    10. '                               ' → logprob: -17.884756088256836

Token 900: ' range' (ID: 3352)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.009112855419516563
    2. ' start' → logprob: -4.75911283493042
    3. 'range' → logprob: -7.75911283493042
    4. ' range' → logprob: -10.259113311767578
    5. '(start' → logprob: -10.884113311767578
    6. '[start' → logprob: -11.009113311767578
    7. '=start' → logprob: -14.759113311767578
    8. '   ' → logprob: -15.134113311767578
    9. ',start' → logprob: -16.509113311767578
    10. ':start' → logprob: -17.009113311767578

Token 901: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.981667537620524e-06
    2. ' start' → logprob: -13.750001907348633
    3. '(start' → logprob: -14.000001907348633
    4. '[start' → logprob: -18.500001907348633
    5. '=start' → logprob: -20.250001907348633
    6. ':start' → logprob: -22.125001907348633
    7. '	start' → logprob: -22.250001907348633
    8. ',start' → logprob: -22.375001907348633
    9. '   ' → logprob: -24.000001907348633
    10. '_start' → logprob: -25.000001907348633

Token 902: ',C' (ID: 26924)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5820583701133728
    2. ',end' → logprob: -0.8320583701133728
    3. ',start' → logprob: -5.582058429718018
    4. ' ,' → logprob: -6.207058429718018
    5. ',len' → logprob: -9.58205795288086
    6. ',current' → logprob: -9.58205795288086
    7. ',int' → logprob: -9.83205795288086
    8. ',length' → logprob: -10.95705795288086
    9. ',C' → logprob: -11.08205795288086
    10. ',next' → logprob: -11.95705795288086

Token 903: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08897600322961807
    2. '):
' → logprob: -2.4639759063720703
    3. '):
' → logprob: -11.33897590637207
    4. ':' → logprob: -11.58897590637207
    5. '       ' → logprob: -12.71397590637207
    6. '):

' → logprob: -12.71397590637207
    7. '   ' → logprob: -12.96397590637207
    8. ')' → logprob: -13.46397590637207
    9. '```' → logprob: -13.58897590637207
    10. '           ' → logprob: -13.58897590637207

Token 904: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07470890879631042
    2. '           ' → logprob: -3.699708938598633
    3. '               ' → logprob: -3.949708938598633
    4. ':' → logprob: -4.824708938598633
    5. '<|end|>' → logprob: -4.949708938598633
    6. ':
' → logprob: -6.199708938598633
    7. '<|end|>' → logprob: -6.199708938598633
    8. '   ' → logprob: -6.449708938598633
    9. ' ' → logprob: -6.824708938598633
    10. '                       ' → logprob: -6.824708938598633

Token 905: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5573918223381042
    2. ' if' → logprob: -1.307391881942749
    3. '                   ' → logprob: -2.307391881942749
    4. 'if' (adapté à ' if') → logprob: -2.932391881942749
    5. '               ' → logprob: -6.80739164352417
    6. '                    ' → logprob: -7.55739164352417
    7. '                        
' → logprob: -7.93239164352417
    8. '                           ' → logprob: -8.182392120361328
    9. '                    
' → logprob: -8.182392120361328
    10. '   ' → logprob: -8.307392120361328

Token 906: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00020413640595506877
    2. ' E' → logprob: -8.625204086303711
    3. '                   ' → logprob: -10.750204086303711
    4. '                       ' → logprob: -13.250204086303711
    5. '   ' → logprob: -14.375204086303711
    6. '                           ' → logprob: -15.375204086303711
    7. '(E' → logprob: -15.625204086303711
    8. '               ' → logprob: -16.00020408630371
    9. '           ' → logprob: -16.75020408630371
    10. '                               ' → logprob: -17.50020408630371

Token 907: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -0.003672517603263259
    2. '[start' → logprob: -5.6286725997924805
    3. '[' → logprob: -10.00367259979248
    4. '][' → logprob: -11.37867259979248
    5. '```' → logprob: -11.62867259979248
    6. '                   ' → logprob: -13.12867259979248
    7. '[
' → logprob: -13.87867259979248
    8. '               ' → logprob: -14.37867259979248
    9. ')[' → logprob: -14.37867259979248
    10. '=end' → logprob: -14.75367259979248

Token 908: '][' (ID: 2696)
  Prédit: '[end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -0.46603819727897644
    2. '][' → logprob: -1.2160382270812988
    3. '[start' → logprob: -2.591038227081299
    4. '[' → logprob: -6.966038227081299
    5. '```' → logprob: -9.21603775024414
    6. ')[' → logprob: -10.09103775024414
    7. '                   ' → logprob: -11.34103775024414
    8. '               ' → logprob: -11.96603775024414
    9. '[line' → logprob: -12.09103775024414
    10. '                           ' → logprob: -12.09103775024414

Token 909: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.02673390321433544
    2. '[' → logprob: -3.651733875274658
    3. '][' → logprob: -8.026734352111816
    4. ' day' → logprob: -9.651734352111816
    5. '(day' → logprob: -10.776734352111816
    6. '[end' → logprob: -11.901734352111816
    7. '```' → logprob: -12.401734352111816
    8. ']' → logprob: -12.776734352111816
    9. ')' → logprob: -13.526734352111816
    10. 'end' → logprob: -13.526734352111816

Token 910: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.027860021218657494
    2. ']' → logprob: -3.777859926223755
    3. ']>' → logprob: -5.402860164642334
    4. '][' → logprob: -10.652859687805176
    5. ']<=' → logprob: -10.652859687805176
    6. '[' → logprob: -11.402859687805176
    7. '[end' → logprob: -11.527859687805176
    8. '==' → logprob: -12.027859687805176
    9. '[j' → logprob: -12.277859687805176
    10. '']==' → logprob: -12.277859687805176

Token 911: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12592674791812897
    2. '==' → logprob: -2.2509267330169678
    3. ']==' → logprob: -5.125926971435547
    4. '[' → logprob: -5.625926971435547
    5. '<=' → logprob: -6.750926971435547
    6. ']>' → logprob: -6.875926971435547
    7. '">' → logprob: -8.250926971435547
    8. ']' → logprob: -8.500926971435547
    9. ' ==' → logprob: -8.625926971435547
    10. '```' → logprob: -9.125926971435547

Token 912: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.250001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '>' → logprob: -20.000001907348633
    6. '=' → logprob: -20.875001907348633
    7. '  ' → logprob: -21.000001907348633
    8. '۰' → logprob: -21.125001907348633
    9. '                   ' → logprob: -21.625001907348633
    10. '
' → logprob: -21.625001907348633

Token 913: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.750001907348633
    4. '```' → logprob: -17.875001907348633
    5. '                   ' → logprob: -19.375001907348633
    6. '>' → logprob: -20.750001907348633
    7. '                       ' → logprob: -21.250001907348633
    8. '
' → logprob: -21.375001907348633
    9. '  ' → logprob: -21.375001907348633
    10. '۰' → logprob: -21.500001907348633

Token 914: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2778826057910919
    2. ':' → logprob: -1.9028825759887695
    3. ':
' → logprob: -2.4028825759887695
    4. '                   ' → logprob: -6.9028825759887695
    5. '                           ' → logprob: -7.5278825759887695
    6. ' or' → logprob: -7.9028825759887695
    7. '<|end|>' → logprob: -8.40288257598877
    8. ' and' → logprob: -8.65288257598877
    9. '                               ' → logprob: -9.02788257598877
    10. '               ' → logprob: -9.27788257598877

Token 915: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005673298146575689
    2. '                   ' → logprob: -8.125567436218262
    3. '                           ' → logprob: -9.500567436218262
    4. '```' → logprob: -10.500567436218262
    5. '                        
' → logprob: -10.625567436218262
    6. '       ' → logprob: -10.875567436218262
    7. '                        ' → logprob: -10.875567436218262
    8. ':' → logprob: -11.000567436218262
    9. '               ' → logprob: -11.125567436218262
    10. ':
' → logprob: -11.250567436218262

Token 916: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20378980040550232
    2. 'break' (adapté à ' break') → logprob: -1.7037898302078247
    3. '                           ' → logprob: -6.828789710998535
    4. ' break' → logprob: -6.828789710998535
    5. '	break' → logprob: -9.578789710998535
    6. '                   ' → logprob: -9.703789710998535
    7. '					' → logprob: -10.453789710998535
    8. '```' → logprob: -11.453789710998535
    9. '   ' → logprob: -11.578789710998535
    10. '               ' → logprob: -11.828789710998535

Token 917: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018811607733368874
    2. '                       ' → logprob: -4.2688117027282715
    3. '                    
' → logprob: -6.2688117027282715
    4. '                    ' → logprob: -6.6438117027282715
    5. '                        
' → logprob: -7.6438117027282715
    6. '				' → logprob: -8.768811225891113
    7. '
' → logprob: -8.893811225891113
    8. '```' → logprob: -9.143811225891113
    9. '               ' → logprob: -9.518811225891113
    10. '       ' → logprob: -10.018811225891113

Token 918: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015014137607067823
    2. '                    
' → logprob: -6.876501560211182
    3. '
' → logprob: -8.001501083374023
    4. '                    ' → logprob: -10.501501083374023
    5. '                        
' → logprob: -10.876501083374023
    6. '				' → logprob: -11.001501083374023
    7. '               ' → logprob: -11.126501083374023
    8. '                       ' → logprob: -11.126501083374023
    9. '```' → logprob: -11.251501083374023
    10. '                   
' → logprob: -12.626501083374023

Token 919: ' sum' (ID: 4215)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13051186501979828
    2. '                       ' → logprob: -2.63051176071167
    3. 'sum' (adapté à ' sum') → logprob: -3.00551176071167
    4. '               ' → logprob: -7.63051176071167
    5. '   ' → logprob: -9.630512237548828
    6. '                           ' → logprob: -9.755512237548828
    7. '```' → logprob: -10.255512237548828
    8. '                    ' → logprob: -10.505512237548828
    9. '           ' → logprob: -10.630512237548828
    10. ' sum' → logprob: -10.630512237548828

Token 920: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -6.153795766294934e-06
    2. '_E' → logprob: -13.125005722045898
    3. '=' → logprob: -13.250005722045898
    4. '_perf' → logprob: -13.750005722045898
    5. '_' → logprob: -15.500005722045898
    6. '_per' → logprob: -15.750005722045898
    7. ' =' → logprob: -15.875005722045898
    8. ' E' → logprob: -16.0000057220459
    9. '```' → logprob: -16.0000057220459
    10. '_sum' → logprob: -16.7500057220459

Token 921: '_perf' (ID: 198393)
  Prédit: '_perf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perf' → logprob: -9.17420256882906e-05
    2. '+=' → logprob: -9.750091552734375
    3. 'perf' → logprob: -11.250091552734375
    4. ' +=' → logprob: -11.750091552734375
    5. '_per' → logprob: -12.250091552734375
    6. '```' → logprob: -12.875091552734375
    7. '+' → logprob: -13.125091552734375
    8. '_perm' → logprob: -14.000091552734375
    9. '_' → logprob: -14.250091552734375
    10. '_sum' → logprob: -14.750091552734375

Token 922: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1763099581003189
    2. ' +=' → logprob: -1.9263099431991577
    3. '                   ' → logprob: -4.676310062408447
    4. '+' → logprob: -5.426310062408447
    5. '                    ' → logprob: -6.551310062408447
    6. '                       ' → logprob: -7.801310062408447
    7. '           ' → logprob: -9.926309585571289
    8. '                ' → logprob: -9.926309585571289
    9. '                        ' → logprob: -9.926309585571289
    10. ']+=' → logprob: -9.926309585571289

Token 923: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.01117737963795662
    2. 'F' → logprob: -4.5111775398254395
    3. ' E' → logprob: -9.136177062988281
    4. '   ' → logprob: -11.636177062988281
    5. 'sum' → logprob: -12.511177062988281
    6. ' ' → logprob: -13.386177062988281
    7. ' F' → logprob: -13.761177062988281
    8. '  ' → logprob: -13.886177062988281
    9. '	E' → logprob: -14.136177062988281
    10. '           ' → logprob: -14.511177062988281

Token 924: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -8.41866585687967e-06
    2. 'end' → logprob: -12.125008583068848
    3. '[' → logprob: -13.000008583068848
    4. '(end' → logprob: -15.375008583068848
    5. '[
' → logprob: -16.12500762939453
    6. '```' → logprob: -16.25000762939453
    7. '=end' → logprob: -16.50000762939453
    8. '	end' → logprob: -16.87500762939453
    9. '   ' → logprob: -17.00000762939453
    10. '@end' → logprob: -17.62500762939453

Token 925: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.787158191204071
    2. '[start' → logprob: -1.0371582508087158
    3. '[end' → logprob: -1.6621582508087158
    4. '[' → logprob: -8.162158012390137
    5. ']' → logprob: -8.787158012390137
    6. '```' → logprob: -10.037158012390137
    7. ' ][' → logprob: -11.037158012390137
    8. '>[' → logprob: -11.162158012390137
    9. ')[' → logprob: -11.162158012390137
    10. '[line' → logprob: -11.412158012390137

Token 926: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.00028171599842607975
    2. ' day' → logprob: -8.37528133392334
    3. '[' → logprob: -10.12528133392334
    4. '(day' → logprob: -11.62528133392334
    5. ' ' → logprob: -13.75028133392334
    6. 'j' → logprob: -14.75028133392334
    7. '
' → logprob: -14.87528133392334
    8. '][' → logprob: -16.375282287597656
    9. '```' → logprob: -16.750282287597656
    10. '
' → logprob: -17.750282287597656

Token 927: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.580919086933136
    2. '<|end|>' → logprob: -1.4559190273284912
    3. '                   ' → logprob: -2.205919027328491
    4. ')' → logprob: -2.830919027328491
    5. '
' → logprob: -4.45591926574707
    6. '                    
' → logprob: -5.08091926574707
    7. ']
' → logprob: -5.58091926574707
    8. '<|end|>' → logprob: -5.70591926574707
    9. '+' → logprob: -6.08091926574707
    10. '                        
' → logprob: -6.33091926574707

Token 928: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004593538120388985
    2. '                    
' → logprob: -5.754593372344971
    3. '                    ' → logprob: -7.879593372344971
    4. '               ' → logprob: -8.004593849182129
    5. '           ' → logprob: -8.879593849182129
    6. ' 
' → logprob: -9.129593849182129
    7. '                       ' → logprob: -9.504593849182129
    8. '<|end|>' → logprob: -9.879593849182129
    9. ' ' → logprob: -10.254593849182129
    10. '       ' → logprob: -10.379593849182129

Token 929: ' sum' (ID: 4215)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.211924433708191
    2. ' sum' → logprob: -1.461924433708191
    3. '                    ' → logprob: -1.586924433708191
    4. 'sum' (adapté à ' sum') → logprob: -1.586924433708191
    5. '                       ' → logprob: -3.2119245529174805
    6. '                           ' → logprob: -4.8369245529174805
    7. '                        ' → logprob: -5.9619245529174805
    8. ' ' → logprob: -6.0869245529174805
    9. ' ' → logprob: -6.4619245529174805
    10. '                ' → logprob: -6.7119245529174805

Token 930: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -5.512236498361744e-07
    2. '_F' → logprob: -15.375000953674316
    3. '                   ' → logprob: -16.25
    4. '=' → logprob: -17.0
    5. ' F' → logprob: -17.625
    6. '```' → logprob: -17.75
    7. '_perf' → logprob: -18.0
    8. '[' → logprob: -18.125
    9. '_' → logprob: -18.5
    10. '               ' → logprob: -18.875

Token 931: '_perf' (ID: 198393)
  Prédit: '_perf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perf' → logprob: -0.0001462107611587271
    2. '_per' → logprob: -9.75014591217041
    3. 'perf' → logprob: -9.75014591217041
    4. '[' → logprob: -11.62514591217041
    5. '_day' → logprob: -11.75014591217041
    6. '```' → logprob: -12.87514591217041
    7. '_perm' → logprob: -13.00014591217041
    8. '_' → logprob: -14.00014591217041
    9. '_prof' → logprob: -14.25014591217041
    10. '_freq' → logprob: -14.75014591217041

Token 932: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.35243508219718933
    2. '+=' → logprob: -1.2274351119995117
    3. '+' → logprob: -5.977435111999512
    4. '                   ' → logprob: -7.602435111999512
    5. '<|end|>' → logprob: -8.602435111999512
    6. ']+=' → logprob: -8.727435111999512
    7. ' +' → logprob: -8.727435111999512
    8. ')' → logprob: -9.227435111999512
    9. '=' → logprob: -9.852435111999512
    10. '                    ' → logprob: -10.352435111999512

Token 933: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -9.674858301877975e-05
    2. ' F' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.000096321105957
    4. '                   ' → logprob: -15.750096321105957
    5. '               ' → logprob: -16.500097274780273
    6. '(F' → logprob: -17.375097274780273
    7. '           ' → logprob: -17.500097274780273
    8. '
' → logprob: -18.125097274780273
    9. '       ' → logprob: -18.625097274780273
    10. '=' → logprob: -18.625097274780273

Token 934: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. 'end' → logprob: -16.25
    4. '```' → logprob: -17.5
    5. '=end' → logprob: -18.25
    6. '@end' → logprob: -18.625
    7. '(end' → logprob: -18.875
    8. ',end' → logprob: -19.625
    9. '[
' → logprob: -20.0
    10. ''end' → logprob: -20.25

Token 935: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4766300320625305
    2. '[end' → logprob: -1.2266299724578857
    3. '][' → logprob: -2.4766299724578857
    4. '[start' → logprob: -6.476630210876465
    5. ')[' → logprob: -9.601630210876465
    6. ']' → logprob: -10.601630210876465
    7. '[level' → logprob: -10.601630210876465
    8. 'end' → logprob: -10.851630210876465
    9. '```' → logprob: -10.976630210876465
    10. '[ind' → logprob: -11.101630210876465

Token 936: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -1.7120533811976202e-05
    2. ' day' → logprob: -11.625017166137695
    3. '[' → logprob: -11.875017166137695
    4. '(day' → logprob: -13.750017166137695
    5. '
' → logprob: -16.875017166137695
    6. '```' → logprob: -17.500017166137695
    7. '.day' → logprob: -18.375017166137695
    8. ' ' → logprob: -18.625017166137695
    9. '_day' → logprob: -18.625017166137695
    10. 'DAY' → logprob: -18.875017166137695

Token 937: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7248842716217041
    2. '<|end|>' → logprob: -1.224884271621704
    3. '                   ' → logprob: -2.224884271621704
    4. ')' → logprob: -2.349884271621704
    5. '<|end|>' → logprob: -4.724884033203125
    6. '               ' → logprob: -5.849884033203125
    7. '
' → logprob: -6.099884033203125
    8. '                    
' → logprob: -6.974884033203125
    9. ' ]' → logprob: -7.974884033203125
    10. ' ' → logprob: -8.099884033203125

Token 938: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004889904521405697
    2. '<|end|>' → logprob: -6.254889965057373
    3. '               ' → logprob: -6.879889965057373
    4. '                    
' → logprob: -7.254889965057373
    5. '```' → logprob: -7.504889965057373
    6. '           ' → logprob: -8.754889488220215
    7. '<|end|>' → logprob: -8.879889488220215
    8. ',' → logprob: -9.379889488220215
    9. '                       ' → logprob: -9.629889488220215
    10. '
' → logprob: -10.004889488220215

Token 939: ' length' (ID: 5517)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006289114244282246
    2. '                       ' → logprob: -5.756289005279541
    3. '               ' → logprob: -6.881289005279541
    4. '           ' → logprob: -7.631289005279541
    5. '                           ' → logprob: -8.1312894821167
    6. '
' → logprob: -8.1312894821167
    7. '                    
' → logprob: -8.6312894821167
    8. '       ' → logprob: -8.7562894821167
    9. ')' → logprob: -9.0062894821167
    10. ' for' → logprob: -9.5062894821167

Token 940: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16646602749824524
    2. ' =' → logprob: -2.166465997695923
    3. '>=' → logprob: -4.166466236114502
    4. ' >=' → logprob: -5.041466236114502
    5. '==' → logprob: -5.666466236114502
    6. '>' → logprob: -5.916466236114502
    7. ')' → logprob: -6.041466236114502
    8. '```' → logprob: -6.166466236114502
    9. ' ==' → logprob: -6.291466236114502
    10. '<|end|>' → logprob: -7.041466236114502

Token 941: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10042329877614975
    2. ' end' → logprob: -2.3504233360290527
    3. '(end' → logprob: -8.475422859191895
    4. '1' → logprob: -13.100422859191895
    5. ' (' → logprob: -13.100422859191895
    6. ' ' → logprob: -13.975422859191895
    7. '                   ' → logprob: -14.100422859191895
    8. '   ' → logprob: -14.850422859191895
    9. '=end' → logprob: -14.850422859191895
    10. '[end' → logprob: -15.100422859191895

Token 942: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.607803463935852
    2. ' -' → logprob: -0.857803463935852
    3. '-start' → logprob: -3.4828033447265625
    4. '
' → logprob: -8.482803344726562
    5. '+' → logprob: -8.732803344726562
    6. '-
' → logprob: -9.857803344726562
    7. '=' → logprob: -10.107803344726562
    8. '```' → logprob: -10.232803344726562
    9. '   ' → logprob: -10.482803344726562
    10. ')' → logprob: -11.357803344726562

Token 943: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -5.943783253314905e-05
    2. ' start' → logprob: -9.750059127807617
    3. '=start' → logprob: -13.875059127807617
    4. '[start' → logprob: -16.750059127807617
    5. '=' → logprob: -17.250059127807617
    6. '(start' → logprob: -19.500059127807617
    7. ':start' → logprob: -19.750059127807617
    8. '	start' → logprob: -19.750059127807617
    9. '                   ' → logprob: -19.875059127807617
    10. '_start' → logprob: -19.875059127807617

Token 944: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07904643565416336
    2. ' +' → logprob: -2.5790464878082275
    3. '                   ' → logprob: -9.704046249389648
    4. '                       ' → logprob: -10.454046249389648
    5. '
' → logprob: -10.954046249389648
    6. '```' → logprob: -11.454046249389648
    7. '+
' → logprob: -12.079046249389648
    8. '==' → logprob: -12.204046249389648
    9. '                           ' → logprob: -12.329046249389648
    10. '>=' → logprob: -12.329046249389648

Token 945: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '                   ' → logprob: -15.250000953674316
    4. '```' → logprob: -15.250000953674316
    5. '                       ' → logprob: -16.125001907348633
    6. '=' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '                           ' → logprob: -18.375001907348633
    9. '                               ' → logprob: -18.875001907348633
    10. '           ' → logprob: -19.250001907348633

Token 946: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -17.125
    4. '                   ' → logprob: -18.25
    5. '   ' → logprob: -18.5
    6. '                       ' → logprob: -19.125
    7. '
' → logprob: -19.375
    8. '           ' → logprob: -19.875
    9. '       ' → logprob: -20.75
    10. '               ' → logprob: -21.0

Token 947: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0030820483807474375
    2. '               ' → logprob: -7.253082275390625
    3. '                       ' → logprob: -7.378082275390625
    4. '           ' → logprob: -7.503082275390625
    5. '<|end|>' → logprob: -7.753082275390625
    6. '                    
' → logprob: -8.128082275390625
    7. '
' → logprob: -9.253082275390625
    8. ',' → logprob: -9.253082275390625
    9. '```' → logprob: -10.253082275390625
    10. 'if' → logprob: -10.253082275390625

Token 948: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -9.245724504580721e-05
    2. '                       ' → logprob: -10.250092506408691
    3. '               ' → logprob: -10.625092506408691
    4. '```' → logprob: -11.250092506408691
    5. 'for' → logprob: -12.250092506408691
    6. '           ' → logprob: -12.250092506408691
    7. '                    
' → logprob: -12.875092506408691
    8. '<|end|>' → logprob: -13.500092506408691
    9. '                           ' → logprob: -13.875092506408691
    10. '                    ' → logprob: -14.000092506408691

Token 949: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2596515715122223
    2. '                       ' → logprob: -2.2596516609191895
    3. 'if' → logprob: -2.6346516609191895
    4. 'for' → logprob: -3.5096516609191895
    5. 'performance' → logprob: -5.1346516609191895
    6. ' if' → logprob: -5.3846516609191895
    7. '
' → logprob: -5.6346516609191895
    8. '               ' → logprob: -6.0096516609191895
    9. ' for' → logprob: -6.5096516609191895
    10. '           ' → logprob: -6.8846516609191895

Token 950: ' if' (ID: 538)
  Prédit: 'perform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perform' → logprob: -0.7483699321746826
    2. 'if' → logprob: -1.2483699321746826
    3. '                       ' → logprob: -2.3733699321746826
    4. 'performance' → logprob: -2.9983699321746826
    5. '                   ' → logprob: -3.9983699321746826
    6. 'multi' → logprob: -4.248370170593262
    7. 'is' → logprob: -4.248370170593262
    8. 'for' → logprob: -4.248370170593262
    9. 'perf' → logprob: -4.623370170593262
    10. 'multiple' → logprob: -5.248370170593262

Token 951: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.03053135797381401
    2. ' length' → logprob: -3.780531406402588
    3. '(length' → logprob: -5.280531406402588
    4. 'sum' → logprob: -6.530531406402588
    5. 'E' → logprob: -8.40553092956543
    6. ' sum' → logprob: -9.40553092956543
    7. '(sum' → logprob: -9.40553092956543
    8. 'max' → logprob: -9.53053092956543
    9. 'len' → logprob: -9.78053092956543
    10. ' (' → logprob: -9.78053092956543

Token 952: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15738537907600403
    2. '>' → logprob: -2.4073853492736816
    3. '<=' → logprob: -3.9073853492736816
    4. '>=' → logprob: -3.9073853492736816
    5. ' ==' → logprob: -4.407385349273682
    6. '```' → logprob: -6.157385349273682
    7. ' <=' → logprob: -8.15738582611084
    8. ' >' → logprob: -8.40738582611084
    9. ' >=' → logprob: -8.53238582611084
    10. '<' → logprob: -8.90738582611084

Token 953: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00434977188706398
    2. ' ' → logprob: -5.504349708557129
    3. '=' → logprob: -9.004349708557129
    4. '2' → logprob: -9.879349708557129
    5. '                       ' → logprob: -10.379349708557129
    6. '                   ' → logprob: -10.504349708557129
    7. '>' → logprob: -11.629349708557129
    8. '                           ' → logprob: -11.754349708557129
    9. '==' → logprob: -11.754349708557129
    10. '   ' → logprob: -12.754349708557129

Token 954: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6196038126945496
    2. '                       ' → logprob: -1.4946038722991943
    3. ':
' → logprob: -2.2446038722991943
    4. '                           ' → logprob: -2.8696038722991943
    5. ' and' → logprob: -2.9946038722991943
    6. '                               ' → logprob: -4.869603633880615
    7. 'and' → logprob: -4.869603633880615
    8. '==' → logprob: -6.119603633880615
    9. '                   ' → logprob: -6.244603633880615
    10. ' ==' → logprob: -6.869603633880615

Token 955: ' single' (ID: 4590)
  Prédit: ' performances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' performances' → logprob: -0.36388152837753296
    2. ' multi' → logprob: -2.9888815879821777
    3. '#' → logprob: -3.2388815879821777
    4. ' continue' → logprob: -3.3638815879821777
    5. 'perform' → logprob: -3.4888815879821777
    6. '                       ' → logprob: -3.6138815879821777
    7. 'multi' → logprob: -3.7388815879821777
    8. ' #' → logprob: -4.363881587982178
    9. ' burden' → logprob: -4.488881587982178
    10. 'continue' → logprob: -4.613881587982178

Token 956: ' live' (ID: 4561)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0159741640090942
    2. 'token' → logprob: -2.6409740447998047
    3. 'performance' → logprob: -2.6409740447998047
    4. ' if' → logprob: -2.7659740447998047
    5. '                       ' → logprob: -2.8909740447998047
    6. 'if' → logprob: -2.8909740447998047
    7. '_perf' → logprob: -3.3909740447998047
    8. 'region' → logprob: -3.5159740447998047
    9. '```' → logprob: -3.6409740447998047
    10. ',' → logprob: -3.8909740447998047

Token 957: ' day' (ID: 2163)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0639452412724495
    2. '                       ' → logprob: -3.3139452934265137
    3. ':
' → logprob: -4.813945293426514
    4. '
' → logprob: -5.188945293426514
    5. ',' → logprob: -5.563945293426514
    6. ':' → logprob: -5.938945293426514
    7. '                    
' → logprob: -6.563945293426514
    8. '```' → logprob: -6.563945293426514
    9. '               ' → logprob: -7.313945293426514
    10. ',
' → logprob: -7.813945293426514

Token 958: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21410003304481506
    2. '
' → logprob: -2.9641001224517822
    3. '                       ' → logprob: -2.9641001224517822
    4. '                    
' → logprob: -2.9641001224517822
    5. '                        
' → logprob: -4.964099884033203
    6. ' if' → logprob: -5.214099884033203
    7. 'if' → logprob: -5.464099884033203
    8. '<|end|>' → logprob: -5.589099884033203
    9. '```' → logprob: -5.839099884033203
    10. ',' → logprob: -6.089099884033203

Token 959: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20719479024410248
    2. '                       ' → logprob: -1.7071948051452637
    3. '```' → logprob: -6.457194805145264
    4. '               ' → logprob: -6.707194805145264
    5. ',' → logprob: -7.457194805145264
    6. '
' → logprob: -7.582194805145264
    7. ' if' → logprob: -7.957194805145264
    8. '                           ' → logprob: -8.207194328308105
    9. 'if' → logprob: -8.582194328308105
    10. '                    
' → logprob: -8.707194328308105

Token 960: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02158239297568798
    2. '                       ' → logprob: -4.39658260345459
    3. 'if' → logprob: -5.14658260345459
    4. '
' → logprob: -6.77158260345459
    5. ' if' → logprob: -6.89658260345459
    6. '               ' → logprob: -7.77158260345459
    7. '           ' → logprob: -8.77158260345459
    8. '```' → logprob: -9.02158260345459
    9. 'for' → logprob: -9.39658260345459
    10. '                    
' → logprob: -9.89658260345459

Token 961: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1419808566570282
    2. '                   ' → logprob: -2.5169808864593506
    3. ' if' → logprob: -4.5169806480407715
    4. 'is' → logprob: -4.6419806480407715
    5. 'for' → logprob: -4.6419806480407715
    6. '#' → logprob: -5.2669806480407715
    7. 'multi' → logprob: -5.3919806480407715
    8. '                       ' → logprob: -5.5169806480407715
    9. '```' → logprob: -6.2669806480407715
    10. 'multiple' → logprob: -7.0169806480407715

Token 962: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.02324722334742546
    2. 'length' → logprob: -3.773247241973877
    3. ' ' → logprob: -14.148246765136719
    4. '(length' → logprob: -14.398246765136719
    5. '                   ' → logprob: -15.148246765136719
    6. ' ' → logprob: -16.64824676513672
    7. '	length' → logprob: -17.64824676513672
    8. '                    ' → logprob: -17.77324676513672
    9. '   ' → logprob: -17.89824676513672
    10. '  ' → logprob: -18.27324676513672

Token 963: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4641002118587494
    2. ' >' → logprob: -1.5891002416610718
    3. '==' → logprob: -2.4641001224517822
    4. ' ==' → logprob: -2.5891001224517822
    5. ' >=' → logprob: -5.714100360870361
    6. '>=' → logprob: -5.839100360870361
    7. '```' → logprob: -7.964100360870361
    8. ' !=' → logprob: -8.839099884033203
    9. ' ' → logprob: -9.214099884033203
    10. '   ' → logprob: -10.339099884033203

Token 964: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014723646454513073
    2. '=' → logprob: -6.751472473144531
    3. ' ' → logprob: -8.126472473144531
    4. '```' → logprob: -12.626472473144531
    5. '   ' → logprob: -13.001472473144531
    6. '>' → logprob: -14.126472473144531
    7. '==' → logprob: -16.25147247314453
    8. '  ' → logprob: -16.87647247314453
    9. ' =' → logprob: -17.50147247314453
    10. '
' → logprob: -18.12647247314453

Token 965: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7829712629318237
    2. ':
' → logprob: -1.2829712629318237
    3. '                       ' → logprob: -1.7829712629318237
    4. ' and' → logprob: -2.7829713821411133
    5. ' ==' → logprob: -4.157971382141113
    6. '==' → logprob: -4.907971382141113
    7. '                           ' → logprob: -5.157971382141113
    8. '                   ' → logprob: -6.032971382141113
    9. 'and' → logprob: -6.782971382141113
    10. ',' → logprob: -7.532971382141113

Token 966: ' multi' (ID: 12151)
  Prédit: ' multi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multi' → logprob: -0.021548906341195107
    2. 'multi' → logprob: -5.271548748016357
    3. ' X' → logprob: -5.521548748016357
    4. ' performances' → logprob: -5.646548748016357
    5. ' multiple' → logprob: -6.396548748016357
    6. ' True' → logprob: -6.396548748016357
    7. '                   ' → logprob: -6.771548748016357
    8. ' multip' → logprob: -6.896548748016357
    9. '                       ' → logprob: -8.021549224853516
    10. ' ' → logprob: -8.021549224853516

Token 967: ' live' (ID: 4561)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.002671376569196582
    2. 'live' → logprob: -6.877671241760254
    3. '_' → logprob: -7.877671241760254
    4. ' live' → logprob: -8.002671241760254
    5. '-' → logprob: -8.002671241760254
    6. '-live' → logprob: -8.627671241760254
    7. '_day' → logprob: -8.752671241760254
    8. '
' → logprob: -9.252671241760254
    9. 'Live' → logprob: -10.377671241760254
    10. ' _' → logprob: -10.502671241760254

Token 968: ' day' (ID: 2163)
  Prédit: '_day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_day' → logprob: -0.7527388334274292
    2. '                   ' → logprob: -0.8777388334274292
    3. 'day' → logprob: -3.7527389526367188
    4. ' day' → logprob: -4.002738952636719
    5. '
' → logprob: -4.127738952636719
    6. '               ' → logprob: -4.252738952636719
    7. '_live' → logprob: -4.627738952636719
    8. '           ' → logprob: -5.252738952636719
    9. '                       ' → logprob: -5.502738952636719
    10. '_days' → logprob: -5.502738952636719

Token 969: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019555140752345324
    2. '
' → logprob: -7.376955509185791
    3. '                    
' → logprob: -7.376955509185791
    4. '                       ' → logprob: -7.876955509185791
    5. ',' → logprob: -9.12695598602295
    6. '```' → logprob: -9.62695598602295
    7. '               ' → logprob: -10.00195598602295
    8. '           ' → logprob: -11.00195598602295
    9. 'for' → logprob: -11.37695598602295
    10. '   ' → logprob: -11.62695598602295

Token 970: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002212346764281392
    2. '                       ' → logprob: -6.8772125244140625
    3. '               ' → logprob: -7.8772125244140625
    4. '
' → logprob: -8.127212524414062
    5. '                    
' → logprob: -9.252212524414062
    6. '           ' → logprob: -9.377212524414062
    7. '```' → logprob: -9.502212524414062
    8. '                           ' → logprob: -10.127212524414062
    9. 'if' → logprob: -10.127212524414062
    10. '   ' → logprob: -10.127212524414062

Token 971: ' multi' (ID: 12151)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5357692837715149
    2. '                       ' → logprob: -1.2857692241668701
    3. ' if' → logprob: -2.91076922416687
    4. 'if' → logprob: -3.78576922416687
    5. ' for' → logprob: -3.78576922416687
    6. 'for' → logprob: -3.91076922416687
    7. '                           ' → logprob: -4.535769462585449
    8. '               ' → logprob: -6.285769462585449
    9. '
' → logprob: -6.785769462585449
    10. '           ' → logprob: -6.910769462585449

Token 972: ' =' (ID: 314)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.004639572463929653
    2. '_' → logprob: -5.379639625549316
    3. 'Live' → logprob: -12.129639625549316
    4. ' _' → logprob: -12.379639625549316
    5. '_l' → logprob: -12.504639625549316
    6. '_day' → logprob: -13.254639625549316
    7. '-live' → logprob: -14.879639625549316
    8. '_count' → logprob: -15.004639625549316
    9. 'live' → logprob: -15.379639625549316
    10. '_alive' → logprob: -15.379639625549316

Token 973: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.488442063331604
    2. ' ' → logprob: -1.113442063331604
    3. ' length' → logprob: -3.2384419441223145
    4. 'length' → logprob: -4.3634419441223145
    5. ' (' → logprob: -5.8634419441223145
    6. ' int' → logprob: -6.1134419441223145
    7. '(length' → logprob: -7.4884419441223145
    8. '0' → logprob: -8.238442420959473
    9. 'int' → logprob: -9.363442420959473
    10. '(' → logprob: -9.863442420959473

Token 974: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03871742635965347
    2. '(length' → logprob: -3.53871750831604
    3. '(' → logprob: -5.413717269897461
    4. 'length' → logprob: -5.538717269897461
    5. 'int' → logprob: -8.288717269897461
    6. '(int' → logprob: -8.788717269897461
    7. ' ' → logprob: -9.538717269897461
    8. '0' → logprob: -10.538717269897461
    9. ' (' → logprob: -10.913717269897461
    10. ' length' → logprob: -11.288717269897461

Token 975: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.019062750041484833
    2. 'if' → logprob: -4.019062519073486
    3. '<|end|>' → logprob: -7.269062519073486
    4. '	if' → logprob: -10.019062995910645
    5. '
' → logprob: -10.144062995910645
    6. '           ' → logprob: -10.769062995910645
    7. '                   ' → logprob: -11.394062995910645
    8. '+' → logprob: -11.519062995910645
    9. '-' → logprob: -11.644062995910645
    10. '<|end|>' → logprob: -11.769062995910645

Token 976: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.018150413408875465
    2. ' length' → logprob: -4.018150329589844
    3. '(length' → logprob: -14.518150329589844
    4. '	length' → logprob: -18.893150329589844
    5. ' ' → logprob: -19.518150329589844
    6. 'end' → logprob: -20.268150329589844
    7. '[length' → logprob: -20.643150329589844
    8. '  ' → logprob: -21.893150329589844
    9. 'Length' → logprob: -22.018150329589844
    10. '   ' → logprob: -22.018150329589844

Token 977: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.009766122326254845
    2. ' >' → logprob: -4.634766101837158
    3. '<|end|>' → logprob: -12.509766578674316
    4. '">' → logprob: -13.759766578674316
    5. '[' → logprob: -13.759766578674316
    6. '>
' → logprob: -14.009766578674316
    7. ' ' → logprob: -14.634766578674316
    8. '()>' → logprob: -14.884766578674316
    9. '```' → logprob: -14.884766578674316
    10. '&gt' → logprob: -15.009766578674316

Token 978: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.500059127807617
    4. '>' → logprob: -15.250059127807617
    5. '=' → logprob: -16.250059127807617
    6. '
' → logprob: -16.750059127807617
    7. '```' → logprob: -16.750059127807617
    8. '  ' → logprob: -18.875059127807617
    9. '１' → logprob: -20.250059127807617
    10. '[' → logprob: -20.250059127807617

Token 979: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12695813179016113
    2. 'else' → logprob: -2.126958131790161
    3. '<|end|>' → logprob: -10.751957893371582
    4. '	else' → logprob: -12.001957893371582
    5. '
' → logprob: -14.626957893371582
    6. ' ' → logprob: -14.751957893371582
    7. '_else' → logprob: -14.876957893371582
    8. '<|end|>' → logprob: -14.876957893371582
    9. ' ' → logprob: -15.126957893371582
    10. '        ' → logprob: -16.8769588470459

Token 980: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052392068319022655
    2. ' ' → logprob: -5.255239009857178
    3. '1' → logprob: -12.380239486694336
    4. '   ' → logprob: -13.755239486694336
    5. '  ' → logprob: -16.630239486694336
    6. '```' → logprob: -17.130239486694336
    7. ' ' → logprob: -17.880239486694336
    8. '    ' → logprob: -18.130239486694336
    9. '           ' → logprob: -18.130239486694336
    10. '       ' → logprob: -18.442739486694336

Token 981: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -18.625
    5. 'False' → logprob: -20.0
    6. '1' → logprob: -20.0
    7. '2' → logprob: -20.5
    8. '``' → logprob: -20.5
    9. '  ' → logprob: -21.3125
    10. '	' → logprob: -21.4375

Token 982: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030102422460913658
    2. '
' → logprob: -3.905102491378784
    3. '<|end|>' → logprob: -5.905102252960205
    4. '                    
' → logprob: -6.405102252960205
    5. '               ' → logprob: -6.530102252960205
    6. '           ' → logprob: -6.905102252960205
    7. '       ' → logprob: -7.405102252960205
    8. '<|end|>' → logprob: -7.530102252960205
    9. ' for' → logprob: -8.155102729797363
    10. '   ' → logprob: -8.280102729797363

Token 983: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0025845777709037066
    2. '               ' → logprob: -7.002584457397461
    3. '           ' → logprob: -7.502584457397461
    4. '                       ' → logprob: -8.377584457397461
    5. '                    
' → logprob: -8.502584457397461
    6. ' for' → logprob: -8.627584457397461
    7. 'for' → logprob: -9.127584457397461
    8. '       ' → logprob: -9.252584457397461
    9. '<|end|>' → logprob: -9.377584457397461
    10. '   ' → logprob: -10.002584457397461

Token 984: ' performances' (ID: 27880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4456503987312317
    2. ' for' → logprob: -1.070650339126587
    3. '                   ' → logprob: -4.445650577545166
    4. '                       ' → logprob: -6.070650577545166
    5. 'if' → logprob: -6.945650577545166
    6. '                           ' → logprob: -7.820650577545166
    7. ' if' → logprob: -7.820650577545166
    8. '
' → logprob: -8.445650100708008
    9. '```' → logprob: -8.945650100708008
    10. '               ' → logprob: -9.070650100708008

Token 985: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005245498847216368
    2. '.' → logprob: -5.255245685577393
    3. '.app' → logprob: -12.255245208740234
    4. 'append' → logprob: -13.505245208740234
    5. ' .' → logprob: -13.630245208740234
    6. '.setdefault' → logprob: -14.130245208740234
    7. ').' → logprob: -14.255245208740234
    8. '.Append' → logprob: -14.505245208740234
    9. '.ap' → logprob: -14.880245208740234
    10. '.push' → logprob: -14.880245208740234

Token 986: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.313364714384079
    2. '(' → logprob: -1.3133647441864014
    3. '(
' → logprob: -9.93836498260498
    4. '(('' → logprob: -11.06336498260498
    5. '(([' → logprob: -11.56336498260498
    6. '(("' → logprob: -11.68836498260498
    7. '([' → logprob: -11.68836498260498
    8. ' (' → logprob: -12.68836498260498
    9. '   ' → logprob: -12.81336498260498
    10. '(((' → logprob: -12.81336498260498

Token 987: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0003372502396814525
    2. '(sum' → logprob: -9.000337600708008
    3. ' sum' → logprob: -9.125337600708008
    4. 'length' → logprob: -9.875337600708008
    5. 'multi' → logprob: -10.125337600708008
    6. 'day' → logprob: -12.125337600708008
    7. '   ' → logprob: -12.375337600708008
    8. 'start' → logprob: -13.625337600708008
    9. ')' → logprob: -14.875337600708008
    10. '
' → logprob: -15.000337600708008

Token 988: 'F' (ID: 37)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -4.4849443838757e-06
    2. 'F' → logprob: -12.625004768371582
    3. '_E' → logprob: -14.500004768371582
    4. ' E' → logprob: -16.000003814697266
    5. '_' → logprob: -16.250003814697266
    6. ',' → logprob: -16.375003814697266
    7. ')' → logprob: -16.625003814697266
    8. ',E' → logprob: -18.000003814697266
    9. 'Е' → logprob: -18.125003814697266
    10. '```' → logprob: -18.625003814697266

Token 989: '_perf' (ID: 198393)
  Prédit: '_perf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perf' → logprob: -0.0001818489981815219
    2. 'perf' → logprob: -8.625182151794434
    3. '_per' → logprob: -13.875182151794434
    4. ',' → logprob: -14.875182151794434
    5. 'Perf' → logprob: -15.125182151794434
    6. '_perm' → logprob: -15.250182151794434
    7. '_prof' → logprob: -15.625182151794434
    8. ',_' → logprob: -16.875181198120117
    9. '_,' → logprob: -16.875181198120117
    10. ' perf' → logprob: -17.000181198120117

Token 990: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009182471549138427
    2. ' ,' → logprob: -7.625918388366699
    3. ',sum' → logprob: -7.875918388366699
    4. ',
' → logprob: -10.3759183883667
    5. ',s' → logprob: -11.7509183883667
    6. '<|end|>' → logprob: -13.8759183883667
    7. '                   ' → logprob: -14.0009183883667
    8. ',p' → logprob: -14.1259183883667
    9. '`,' → logprob: -14.5009183883667
    10. ')' → logprob: -14.5009183883667

Token 991: 'peed' (ID: 6919)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.009749475866556168
    2. 'E' → logprob: -4.884749412536621
    3. 'sum' → logprob: -6.759749412536621
    4. 'u' → logprob: -7.884749412536621
    5. 'ump' → logprob: -7.884749412536621
    6. 'uml' → logprob: -9.634749412536621
    7. 'perf' → logprob: -10.009749412536621
    8. '_perf' → logprob: -10.759749412536621
    9. 'm' → logprob: -11.259749412536621
    10. '_E' → logprob: -11.759749412536621

Token 992: ':=' (ID: 33860)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.17385871708393097
    2. ' sum' → logprob: -2.673858642578125
    3. ',' → logprob: -3.673858642578125
    4. 'multi' → logprob: -4.298858642578125
    5. 'y' → logprob: -4.548858642578125
    6. 'E' → logprob: -5.298858642578125
    7. ' multi' → logprob: -5.298858642578125
    8. 'um' → logprob: -5.423858642578125
    9. ' ' → logprob: -5.548858642578125
    10. ')' → logprob: -6.048858642578125

Token 993: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0044013941660523415
    2. ' sum' → logprob: -5.629401206970215
    3. 'speed' → logprob: -7.379401206970215
    4. '0' → logprob: -9.754401206970215
    5. '1' → logprob: -10.379401206970215
    6. '(sum' → logprob: -11.129401206970215
    7. ',sum' → logprob: -11.879401206970215
    8. 'E' → logprob: -12.129401206970215
    9. 'max' → logprob: -12.254401206970215
    10. ')' → logprob: -12.254401206970215

Token 994: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -6.988221684878226e-06
    2. 'F' → logprob: -12.000006675720215
    3. '_perf' → logprob: -15.125006675720215
    4. '_E' → logprob: -16.12500762939453
    5. '_' → logprob: -16.62500762939453
    6. ' E' → logprob: -17.00000762939453
    7. ')' → logprob: -17.12500762939453
    8. '=' → logprob: -17.25000762939453
    9. '_per' → logprob: -17.75000762939453
    10. 'Е' → logprob: -18.00000762939453

Token 995: '_perf' (ID: 198393)
  Prédit: '_perf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perf' → logprob: -7.755678961984813e-05
    2. 'perf' → logprob: -9.500077247619629
    3. '_per' → logprob: -13.625077247619629
    4. '_perm' → logprob: -15.000077247619629
    5. 'Perf' → logprob: -15.250077247619629
    6. '```' → logprob: -15.750077247619629
    7. '_prof' → logprob: -16.000078201293945
    8. '_' → logprob: -16.000078201293945
    9. '[_' → logprob: -16.250078201293945
    10. ')' → logprob: -16.625078201293945

Token 996: ',m' (ID: 26648)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41022077202796936
    2. ',' → logprob: -1.285220742225647
    3. '<|end|>' → logprob: -2.9102208614349365
    4. ',)' → logprob: -6.660220623016357
    5. '[' → logprob: -7.035220623016357
    6. ' ,' → logprob: -7.285220623016357
    7. '<|end|>' → logprob: -7.285220623016357
    8. ',
' → logprob: -7.910220623016357
    9. '),' → logprob: -8.160221099853516
    10. '```' → logprob: -8.785221099853516

Token 997: 'ulti' (ID: 10439)
  Prédit: 'ulti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulti' → logprob: -0.0002509687910787761
    2. 'ult' → logprob: -9.000250816345215
    3. 'ul' → logprob: -10.125250816345215
    4. 'u' → logprob: -10.500250816345215
    5. 'ultip' → logprob: -10.500250816345215
    6. 'ultiple' → logprob: -11.125250816345215
    7. ' ulti' → logprob: -12.875250816345215
    8. 'ultiply' → logprob: -12.875250816345215
    9. 'multi' → logprob: -13.000250816345215
    10. ')' → logprob: -13.375250816345215

Token 998: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016749000176787376
    2. ',' → logprob: -4.391748905181885
    3. '<|end|>' → logprob: -6.516748905181885
    4. '))' → logprob: -6.766748905181885
    5. ')])' → logprob: -7.641748905181885
    6. ',)' → logprob: -8.391749382019043
    7. '])' → logprob: -8.766749382019043
    8. ')]' → logprob: -8.891749382019043
    9. ')))' → logprob: -9.391749382019043
    10. '),' → logprob: -9.766749382019043

Token 999: '           ' (ID: 352)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.44690805673599243
    2. '           ' → logprob: -1.5719079971313477
    3. '       ' → logprob: -2.9469079971313477
    4. ' for' → logprob: -3.6969079971313477
    5. '
' → logprob: -3.8219079971313477
    6. 'for' → logprob: -4.071907997131348
    7. ',' → logprob: -4.571907997131348
    8. '               ' → logprob: -4.571907997131348
    9. ')' → logprob: -4.696907997131348
    10. '   ' → logprob: -6.821907997131348

Token 1000: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07574271410703659
    2. '                   ' → logprob: -2.825742721557617
    3. '       ' → logprob: -5.200742721557617
    4. ' for' → logprob: -5.450742721557617
    5. '               ' → logprob: -6.325742721557617
    6. 'for' → logprob: -7.575742721557617
    7. '                       ' → logprob: -7.825742721557617
    8. '
' → logprob: -7.825742721557617
    9. '```' → logprob: -8.575742721557617
    10. '   ' → logprob: -8.700742721557617

Token 1001: ' Also' (ID: 8820)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01716073788702488
    2. '           ' → logprob: -4.142160892486572
    3. ' for' → logprob: -7.392160892486572
    4. '       ' → logprob: -8.017160415649414
    5. '               ' → logprob: -9.767160415649414
    6. '```' → logprob: -10.142160415649414
    7. '                   ' → logprob: -10.392160415649414
    8. '   ' → logprob: -10.517160415649414
    9. 'dp' → logprob: -12.267160415649414
    10. 'next' → logprob: -12.267160415649414

Token 1002: ' consider' (ID: 3331)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35769417881965637
    2. '
' → logprob: -2.232694149017334
    3. 'perform' → logprob: -2.732694149017334
    4. 'append' → logprob: -2.857694149017334
    5. ' #' → logprob: -3.732694149017334
    6. 'consider' → logprob: -4.982694149017334
    7. '           ' → logprob: -5.107694149017334
    8. 'for' → logprob: -5.107694149017334
    9. '   ' → logprob: -5.232694149017334
    10. ' append' → logprob: -5.732694149017334

Token 1003: ' no' (ID: 860)
  Prédit: ' single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.6498544216156006
    2. ' max' → logprob: -1.3998544216156006
    3. ' (' → logprob: -1.7748544216156006
    4. 'max' → logprob: -4.77485466003418
    5. '(max' → logprob: -4.77485466003418
    6. '(' → logprob: -5.02485466003418
    7. 'single' → logprob: -5.27485466003418
    8. '
' → logprob: -5.52485466003418
    9. ' performances' → logprob: -5.52485466003418
    10. ' performing' → logprob: -6.02485466003418

Token 1004: ' live' (ID: 4561)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.6141024827957153
    2. 't' → logprob: -1.7391024827957153
    3. 'perform' → logprob: -2.614102363586426
    4. '_action' → logprob: -2.989102363586426
    5. ' action' → logprob: -3.114102363586426
    6. 'n' → logprob: -3.489102363586426
    7. '_' → logprob: -4.364102363586426
    8. '_per' → logprob: -4.489102363586426
    9. 'performance' → logprob: -4.489102363586426
    10. 'live' → logprob: -5.114102363586426

Token 1005: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4734662771224976
    2. '_' → logprob: -1.8484662771224976
    3. '               ' → logprob: -2.473466396331787
    4. 'perform' → logprob: -2.723466396331787
    5. '                   ' → logprob: -2.848466396331787
    6. 'performance' → logprob: -2.848466396331787
    7. '           ' → logprob: -2.973466396331787
    8. '_per' → logprob: -2.973466396331787
    9. ' (' → logprob: -3.223466396331787
    10. ')' → logprob: -3.348466396331787

Token 1006: ' this' (ID: 495)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.06856302917003632
    2. 'day' → logprob: -2.8185629844665527
    3. 'the' → logprob: -5.818562984466553
    4. ' the' → logprob: -5.943562984466553
    5. ' ' → logprob: -7.693562984466553
    6. ' current' → logprob: -9.443563461303711
    7. '   ' → logprob: -9.568563461303711
    8. ' a' → logprob: -9.568563461303711
    9. ' that' → logprob: -9.943563461303711
    10. '```' → logprob: -10.068563461303711

Token 1007: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.2520764172077179
    2. 'day' → logprob: -1.5020763874053955
    3. '
' → logprob: -9.877076148986816
    4. '_day' → logprob: -10.127076148986816
    5. ' ' → logprob: -11.002076148986816
    6. ' line' → logprob: -11.627076148986816
    7. 'line' → logprob: -11.877076148986816
    8. '```' → logprob: -12.002076148986816
    9. '(day' → logprob: -12.377076148986816
    10. '#' → logprob: -12.627076148986816

Token 1008: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022400659509003162
    2. '       ' → logprob: -6.627240180969238
    3. ',' → logprob: -7.502240180969238
    4. '
' → logprob: -8.502240180969238
    5. '```' → logprob: -9.502240180969238
    6. '            
' → logprob: -10.877240180969238
    7. '               ' → logprob: -11.002240180969238
    8. 'per' → logprob: -11.502240180969238
    9. '   ' → logprob: -12.002240180969238
    10. '        
' → logprob: -12.502240180969238

Token 1009: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003012880450114608
    2. '       ' → logprob: -6.878012657165527
    3. '```' → logprob: -7.253012657165527
    4. '
' → logprob: -7.378012657165527
    5. ' for' → logprob: -8.253012657165527
    6. 'for' → logprob: -8.753012657165527
    7. ',' → logprob: -9.253012657165527
    8. '            
' → logprob: -9.378012657165527
    9. '               ' → logprob: -10.878012657165527
    10. '   ' → logprob: -12.003012657165527

Token 1010: ' performances' (ID: 27880)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17310576140880585
    2. '       ' → logprob: -1.9231057167053223
    3. 'perform' → logprob: -5.548105716705322
    4. 'for' → logprob: -5.923105716705322
    5. '
' → logprob: -6.298105716705322
    6. 'per' → logprob: -6.673105716705322
    7. '```' → logprob: -7.048105716705322
    8. ' performances' → logprob: -7.298105716705322
    9. ' for' → logprob: -7.673105716705322
    10. '   ' → logprob: -7.798105716705322

Token 1011: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0032026697881519794
    2. '.' → logprob: -5.753202438354492
    3. '           ' → logprob: -11.253202438354492
    4. ' .' → logprob: -12.753202438354492
    5. 'append' → logprob: -12.753202438354492
    6. ').' → logprob: -13.003202438354492
    7. '=' → logprob: -13.878202438354492
    8. '.app' → logprob: -14.128202438354492
    9. ' =' → logprob: -14.878202438354492
    10. '.
' → logprob: -15.003202438354492

Token 1012: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.009761401452124119
    2. '(' → logprob: -4.634761333465576
    3. ' (' → logprob: -13.384761810302734
    4. '(('' → logprob: -13.759761810302734
    5. '   ' → logprob: -14.384761810302734
    6. '(
' → logprob: -14.509761810302734
    7. ' ((' → logprob: -14.759761810302734
    8. '(None' → logprob: -15.134761810302734
    9. '```' → logprob: -15.259761810302734
    10. '(("' → logprob: -15.759761810302734

Token 1013: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -12.12501049041748
    3. '(' → logprob: -12.37501049041748
    4. '   ' → logprob: -14.25001049041748
    5. '
' → logprob: -16.875011444091797
    6. '  ' → logprob: -17.750011444091797
    7. '           ' → logprob: -17.875011444091797
    8. '       ' → logprob: -17.875011444091797
    9. '     ' → logprob: -18.375011444091797
    10. '    ' → logprob: -18.500011444091797

Token 1014: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013440960901789367
    2. ' ,' → logprob: -9.375134468078613
    3. '0' → logprob: -10.000134468078613
    4. ',
' → logprob: -13.125134468078613
    5. '<|end|>' → logprob: -13.625134468078613
    6. ')' → logprob: -14.625134468078613
    7. ',None' → logprob: -15.750134468078613
    8. '```' → logprob: -17.000133514404297
    9. '
' → logprob: -17.500133514404297
    10. '),' → logprob: -17.625133514404297

Token 1015: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. ')' → logprob: -19.125001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '00' → logprob: -21.375001907348633
    6. '```' → logprob: -21.625001907348633
    7. '<|end|>' → logprob: -21.750001907348633
    8. '000' → logprob: -21.875001907348633
    9. '  ' → logprob: -21.875001907348633
    10. '+' → logprob: -22.125001907348633

Token 1016: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ',
' → logprob: -11.750027656555176
    3. ',)' → logprob: -11.750027656555176
    4. ' ,' → logprob: -12.375027656555176
    5. ')' → logprob: -12.500027656555176
    6. '0' → logprob: -13.375027656555176
    7. '),' → logprob: -14.750027656555176
    8. '))' → logprob: -14.875027656555176
    9. ',None' → logprob: -15.000027656555176
    10. ',),' → logprob: -15.125027656555176

Token 1017: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -20.25
    4. '1' → logprob: -21.25
    5. ')' → logprob: -21.25
    6. '```' → logprob: -21.75
    7. '           ' → logprob: -22.375
    8. '000' → logprob: -22.75
    9. '۰' → logprob: -22.875
    10. '00' → logprob: -22.875

Token 1018: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004271784797310829
    2. '))' → logprob: -5.629271984100342
    3. ')
' → logprob: -8.004271507263184
    4. ')]' → logprob: -8.504271507263184
    5. '       ' → logprob: -9.754271507263184
    6. '           ' → logprob: -10.004271507263184
    7. ')}' → logprob: -11.879271507263184
    8. ' )' → logprob: -11.879271507263184
    9. ')])' → logprob: -12.129271507263184
    10. ')`' → logprob: -12.629271507263184

Token 1019: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014347423799335957
    2. '       ' → logprob: -4.639347553253174
    3. ' for' → logprob: -6.139347553253174
    4. 'for' → logprob: -6.264347553253174
    5. '   ' → logprob: -8.389347076416016
    6. '```' → logprob: -8.639347076416016
    7. '               ' → logprob: -10.639347076416016
    8. '                   ' → logprob: -10.764347076416016
    9. '
' → logprob: -11.014347076416016
    10. '            
' → logprob: -11.764347076416016

Token 1020: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16139543056488037
    2. '           ' → logprob: -1.9113954305648804
    3. ' for' → logprob: -6.78639554977417
    4. '       ' → logprob: -10.536395072937012
    5. '```' → logprob: -11.911395072937012
    6. '   ' → logprob: -12.286395072937012
    7. '               ' → logprob: -13.036395072937012
    8. 'next' → logprob: -14.411395072937012
    9. '	for' → logprob: -15.661395072937012
    10. '
' → logprob: -15.911395072937012

Token 1021: ' w' (ID: 286)
  Prédit: 'bur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bur' → logprob: -0.1363600194454193
    2. 'w' → logprob: -2.386359930038452
    3. 'b' → logprob: -4.386360168457031
    4. ' burden' → logprob: -4.511360168457031
    5. 'used' → logprob: -5.511360168457031
    6. 'bw' → logprob: -6.136360168457031
    7. 'W' → logprob: -6.761360168457031
    8. 'prev' → logprob: -7.136360168457031
    9. 'bud' → logprob: -7.386360168457031
    10. 'weight' → logprob: -8.261360168457031

Token 1022: '_used' (ID: 67016)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026460761204361916
    2. 'in' → logprob: -3.651460647583008
    3. ' ' → logprob: -9.026460647583008
    4. '_in' → logprob: -11.276460647583008
    5. '_' → logprob: -11.401460647583008
    6. '[' → logprob: -13.026460647583008
    7. '  ' → logprob: -13.151460647583008
    8. 'i' → logprob: -13.276460647583008
    9. '   ' → logprob: -13.401460647583008
    10. ')' → logprob: -13.401460647583008

Token 1023: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0549142099916935
    2. 'in' → logprob: -2.9299142360687256
    3. ' ' → logprob: -11.679914474487305
    4. '           ' → logprob: -12.179914474487305
    5. '[' → logprob: -12.429914474487305
    6. '            ' → logprob: -12.429914474487305
    7. '[in' → logprob: -13.429914474487305
    8. ')' → logprob: -13.429914474487305
    9. ',' → logprob: -13.554914474487305
    10. '```' → logprob: -13.804914474487305

Token 1024: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.0000057220459
    4. '0' → logprob: -19.1250057220459
    5. '(range' → logprob: -19.6250057220459
    6. '       ' → logprob: -22.0000057220459
    7. '	range' → logprob: -23.0000057220459
    8. '           ' → logprob: -23.0000057220459
    9. ' ' → logprob: -23.1250057220459
    10. '  ' → logprob: -23.8750057220459

Token 1025: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.011034858413040638
    2. 'W' → logprob: -4.761034965515137
    3. ' W' → logprob: -6.761034965515137
    4. ' (' → logprob: -7.386034965515137
    5. '0' → logprob: -8.011034965515137
    6. '(' → logprob: -8.261034965515137
    7. '   ' → logprob: -10.636034965515137
    8. ')' → logprob: -12.261034965515137
    9. ' ' → logprob: -12.261034965515137
    10. '           ' → logprob: -12.511034965515137

Token 1026: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008358351769857109
    2. ' +' → logprob: -7.25083589553833
    3. '):
' → logprob: -9.250835418701172
    4. '):' → logprob: -10.750835418701172
    5. '           ' → logprob: -12.750835418701172
    6. '   ' → logprob: -13.250835418701172
    7. '       ' → logprob: -13.375835418701172
    8. '+
' → logprob: -14.375835418701172
    9. ')+' → logprob: -14.500835418701172
    10. '               ' → logprob: -15.500835418701172

Token 1027: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023882099776528776
    2. '):
' → logprob: -8.750238418579102
    3. '           ' → logprob: -10.375238418579102
    4. ' ' → logprob: -10.625238418579102
    5. '   ' → logprob: -12.000238418579102
    6. '               ' → logprob: -12.000238418579102
    7. '       ' → logprob: -12.500238418579102
    8. ')' → logprob: -12.875238418579102
    9. '```' → logprob: -13.375238418579102
    10. '):' → logprob: -13.500238418579102

Token 1028: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.19431042671203613
    2. '):' → logprob: -2.444310426712036
    3. ':' → logprob: -3.069310426712036
    4. '           ' → logprob: -4.319310188293457
    5. '       ' → logprob: -4.569310188293457
    6. ':
' → logprob: -4.694310188293457
    7. '               ' → logprob: -4.944310188293457
    8. ',' → logprob: -6.569310188293457
    9. '   ' → logprob: -7.569310188293457
    10. '<|end|>' → logprob: -7.819310188293457

Token 1029: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9324983358383179
    2. ' for' → logprob: -1.1824983358383179
    3. '               ' → logprob: -1.5574983358383179
    4. '       ' → logprob: -2.8074984550476074
    5. '	       ' → logprob: -4.682498455047607
    6. 'for' → logprob: -4.682498455047607
    7. '<|end|>' → logprob: -5.432498455047607
    8. '   ' → logprob: -6.182498455047607
    9. ' ' → logprob: -6.682498455047607
    10. '	for' → logprob: -7.182498455047607

Token 1030: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6009615063667297
    2. ' for' → logprob: -0.8509615063667297
    3. '               ' → logprob: -3.975961446762085
    4. '                   ' → logprob: -5.475961685180664
    5. '   ' → logprob: -7.100961685180664
    6. '       ' → logprob: -7.725961685180664
    7. '           ' → logprob: -8.475961685180664
    8. ' ' → logprob: -9.225961685180664
    9. '	for' → logprob: -9.350961685180664
    10. '                ' → logprob: -10.350961685180664

Token 1031: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0633460134267807
    2. ' x' → logprob: -2.9383459091186523
    3. 'X' → logprob: -5.438345909118652
    4. 'm' → logprob: -5.813345909118652
    5. '0' → logprob: -7.438345909118652
    6. ' m' → logprob: -8.938345909118652
    7. 'd' → logprob: -9.688345909118652
    8. 'multi' → logprob: -9.688345909118652
    9. ' X' → logprob: -9.813345909118652
    10. '   ' → logprob: -9.938345909118652

Token 1032: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.43181097507476807
    2. 'in' → logprob: -1.806810975074768
    3. ' in' → logprob: -1.806810975074768
    4. '_in' → logprob: -4.1818108558654785
    5. 'used' → logprob: -6.0568108558654785
    6. '_USED' → logprob: -7.1818108558654785
    7. ' ' → logprob: -7.3068108558654785
    8. '=' → logprob: -7.4318108558654785
    9. 'Used' → logprob: -7.8068108558654785
    10. ')' → logprob: -7.9318108558654785

Token 1033: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4741036295890808
    2. 'in' → logprob: -0.9741036295890808
    3. '[' → logprob: -11.724103927612305
    4. '_in' → logprob: -11.974103927612305
    5. '[in' → logprob: -12.849103927612305
    6. '	in' → logprob: -13.099103927612305
    7. ' ' → logprob: -13.474103927612305
    8. '```' → logprob: -13.474103927612305
    9. '<|end|>' → logprob: -13.849103927612305
    10. '0' → logprob: -13.849103927612305

Token 1034: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012815576046705246
    2. '(X' → logprob: -4.762815475463867
    3. '0' → logprob: -6.262815475463867
    4. ' range' → logprob: -6.262815475463867
    5. 'X' → logprob: -7.887815475463867
    6. '[X' → logprob: -12.887815475463867
    7. '(range' → logprob: -13.637815475463867
    8. '(' → logprob: -15.262815475463867
    9. '
' → logprob: -15.262815475463867
    10. '(W' → logprob: -16.012815475463867

Token 1035: '(X' (ID: 17061)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.06219051405787468
    2. '0' → logprob: -3.062190532684326
    3. '(X' → logprob: -4.312190532684326
    4. ' X' → logprob: -9.812190055847168
    5. '   ' → logprob: -11.062190055847168
    6. '           ' → logprob: -11.687190055847168
    7. '[X' → logprob: -11.812190055847168
    8. '(' → logprob: -11.812190055847168
    9. '               ' → logprob: -12.562190055847168
    10. '                   ' → logprob: -12.937190055847168

Token 1036: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00021390743495430797
    2. '):
' → logprob: -9.125213623046875
    3. ' +' → logprob: -9.625213623046875
    4. '):' → logprob: -11.000213623046875
    5. ')+' → logprob: -12.375213623046875
    6. ')' → logprob: -12.375213623046875
    7. '+
' → logprob: -12.500213623046875
    8. '```' → logprob: -12.625213623046875
    9. ':' → logprob: -13.750213623046875
    10. '[' → logprob: -13.875213623046875

Token 1037: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.65101717156358e-05
    2. '+' → logprob: -9.250096321105957
    3. '0' → logprob: -15.375096321105957
    4. ' ' → logprob: -15.750096321105957
    5. '{' → logprob: -17.500097274780273
    6. '   ' → logprob: -17.625097274780273
    7. ' +' → logprob: -18.125097274780273
    8. '```' → logprob: -18.125097274780273
    9. '2' → logprob: -18.250097274780273
    10. '
' → logprob: -18.500097274780273

Token 1038: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4349566400051117
    2. '):' → logprob: -1.059956669807434
    3. ':' → logprob: -5.8099565505981445
    4. '               ' → logprob: -7.0599565505981445
    5. '<|end|>' → logprob: -7.6849565505981445
    6. ':
' → logprob: -7.9349565505981445
    7. ')' → logprob: -8.184956550598145
    8. '           ' → logprob: -8.184956550598145
    9. '():
' → logprob: -8.559956550598145
    10. '                   ' → logprob: -8.684956550598145

Token 1039: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001095926738344133
    2. '           ' → logprob: -8.25109577178955
    3. '                       ' → logprob: -8.50109577178955
    4. ' for' → logprob: -8.75109577178955
    5. '               ' → logprob: -8.87609577178955
    6. '		           ' → logprob: -9.00109577178955
    7. '   ' → logprob: -9.75109577178955
    8. 'for' → logprob: -10.87609577178955
    9. '                           ' → logprob: -11.00109577178955
    10. '```' → logprob: -11.00109577178955

Token 1040: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6925402879714966
    2. '                       ' → logprob: -1.4425402879714966
    3. 'cur' → logprob: -2.192540168762207
    4. '                   ' → logprob: -3.442540168762207
    5. 'current' → logprob: -3.442540168762207
    6. 'val' → logprob: -3.567540168762207
    7. 'dp' → logprob: -3.692540168762207
    8. 'prev' → logprob: -4.442540168762207
    9. ' if' → logprob: -4.692540168762207
    10. 'curr' → logprob: -5.192540168762207

Token 1041: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004623322281986475
    2. ' max' → logprob: -5.3796234130859375
    3. '                   ' → logprob: -13.629623413085938
    4. '(max' → logprob: -13.879623413085938
    5. '[max' → logprob: -14.629623413085938
    6. 'w' → logprob: -16.504623413085938
    7. '                           ' → logprob: -16.879623413085938
    8. '
' → logprob: -16.879623413085938
    9. '	max' → logprob: -17.004623413085938
    10. '```' → logprob: -17.004623413085938

Token 1042: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.00011331788846291602
    2. '_prof' → logprob: -9.500113487243652
    3. '_pro' → logprob: -10.625113487243652
    4. 'Profit' → logprob: -12.250113487243652
    5. 'profit' → logprob: -12.375113487243652
    6. '_prob' → logprob: -13.750113487243652
    7. '\' → logprob: -14.000113487243652
    8. '```' → logprob: -14.000113487243652
    9. '[_' → logprob: -14.625113487243652
    10. '_' → logprob: -15.125113487243652

Token 1043: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.064297824399546e-05
    2. '                   ' → logprob: -10.500070571899414
    3. '][' → logprob: -10.875070571899414
    4. '```' → logprob: -12.000070571899414
    5. '[next' → logprob: -12.875070571899414
    6. '[level' → logprob: -13.125070571899414
    7. '[current' → logprob: -13.250070571899414
    8. '[max' → logprob: -13.500070571899414
    9. '[word' → logprob: -13.750070571899414
    10. '[token' → logprob: -13.750070571899414

Token 1044: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.00027349460287950933
    2. ' day' → logprob: -8.750273704528809
    3. '[' → logprob: -9.125273704528809
    4. '(day' → logprob: -12.875273704528809
    5. '```' → logprob: -13.750273704528809
    6. '][' → logprob: -14.000273704528809
    7. 'd' → logprob: -14.625273704528809
    8. '
' → logprob: -14.750273704528809
    9. '   ' → logprob: -15.750273704528809
    10. '                   ' → logprob: -15.875273704528809

Token 1045: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11212773621082306
    2. '[' → logprob: -2.4871277809143066
    3. '[w' → logprob: -4.362127780914307
    4. '[token' → logprob: -5.862127780914307
    5. '                   ' → logprob: -6.237127780914307
    6. '[word' → logprob: -6.362127780914307
    7. '                       ' → logprob: -6.612127780914307
    8. '[next' → logprob: -7.612127780914307
    9. '                           ' → logprob: -8.362127304077148
    10. '                               ' → logprob: -8.862127304077148

Token 1046: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.981667537620524e-06
    2. 'x' → logprob: -13.625001907348633
    3. ' w' → logprob: -14.500001907348633
    4. '][' → logprob: -16.500001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '                   ' → logprob: -17.500001907348633
    7. '```' → logprob: -17.500001907348633
    8. '
' → logprob: -17.875001907348633
    9. '[w' → logprob: -18.250001907348633
    10. '_w' → logprob: -18.375001907348633

Token 1047: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0004172065819147974
    2. 'used' → logprob: -8.25041675567627
    3. '][' → logprob: -9.00041675567627
    4. 'w' → logprob: -11.87541675567627
    5. '   ' → logprob: -12.00041675567627
    6. '_USED' → logprob: -12.12541675567627
    7. 'Used' → logprob: -13.25041675567627
    8. '
' → logprob: -13.25041675567627
    9. '```' → logprob: -13.25041675567627
    10. 's' → logprob: -13.50041675567627

Token 1048: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.551728367805481
    2. ']!=' → logprob: -1.551728367805481
    3. ']==' → logprob: -1.926728367805481
    4. '][' → logprob: -2.8017282485961914
    5. '[
' → logprob: -7.051728248596191
    6. '[' → logprob: -7.051728248596191
    7. '[w' → logprob: -7.176728248596191
    8. ']<' → logprob: -7.551728248596191
    9. ']!='' → logprob: -7.926728248596191
    10. ']>' → logprob: -8.301728248596191

Token 1049: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.961759259458631e-06
    2. ' x' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.8750057220459
    4. ' ' → logprob: -17.7500057220459
    5. '           ' → logprob: -18.1250057220459
    6. ']' → logprob: -18.6250057220459
    7. '	x' → logprob: -18.6250057220459
    8. '                   ' → logprob: -19.0000057220459
    9. '     ' → logprob: -19.0000057220459
    10. '       ' → logprob: -19.2500057220459

Token 1050: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0013176199281588197
    2. 'used' → logprob: -6.751317501068115
    3. ']' → logprob: -9.376317977905273
    4. 'Used' → logprob: -10.376317977905273
    5. 'x' → logprob: -11.751317977905273
    6. '```' → logprob: -11.751317977905273
    7. '_USED' → logprob: -12.001317977905273
    8. ']!=' → logprob: -13.126317977905273
    9. '-used' → logprob: -13.251317977905273
    10. '0' → logprob: -14.001317977905273

Token 1051: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.17645128071308136
    2. ']' → logprob: -2.0514512062072754
    3. '==' → logprob: -3.6764512062072754
    4. '==-' → logprob: -4.926451206207275
    5. ']!=' → logprob: -7.926451206207275
    6. ' ==' → logprob: -9.551451683044434
    7. '']==' → logprob: -9.801451683044434
    8. ']>=' → logprob: -10.176451683044434
    9. ')==' → logprob: -10.301451683044434
    10. ']<' → logprob: -10.801451683044434

Token 1052: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07051394879817963
    2. ' ==' → logprob: -2.945513963699341
    3. '!=' → logprob: -4.945513725280762
    4. '+' → logprob: -5.945513725280762
    5. '```' → logprob: -6.445513725280762
    6. ']==' → logprob: -6.820513725280762
    7. ' !=' → logprob: -7.570513725280762
    8. '{' → logprob: -7.820513725280762
    9. '==
' → logprob: -8.070513725280762
    10. '                           ' → logprob: -8.195513725280762

Token 1053: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003445216570980847
    2. ' -' → logprob: -8.750344276428223
    3. '0' → logprob: -9.125344276428223
    4. 'None' → logprob: -9.875344276428223
    5. '-value' → logprob: -12.375344276428223
    6. '-not' → logprob: -12.625344276428223
    7. '-inf' → logprob: -12.625344276428223
    8. '-none' → logprob: -12.875344276428223
    9. '-max' → logprob: -12.875344276428223
    10. ' ' → logprob: -12.875344276428223

Token 1054: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.875
    3. '                   ' → logprob: -18.25
    4. ' ' → logprob: -18.625
    5. '                       ' → logprob: -19.75
    6. ')' → logprob: -19.875
    7. '   ' → logprob: -20.25
    8. '۱' → logprob: -20.75
    9. '2' → logprob: -21.125
    10. '           ' → logprob: -21.25

Token 1055: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10604503750801086
    2. '                               ' → logprob: -3.2310450077056885
    3. '                       ' → logprob: -3.3560450077056885
    4. ':
' → logprob: -4.481045246124268
    5. '                           ' → logprob: -4.481045246124268
    6. '                   ' → logprob: -6.731045246124268
    7. ' and' → logprob: -7.356045246124268
    8. '               ' → logprob: -7.606045246124268
    9. '                                   ' → logprob: -8.23104476928711
    10. '                            ' → logprob: -8.60604476928711

Token 1056: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.022275026887655258
    2. '                               ' → logprob: -4.522274971008301
    3. '```' → logprob: -5.397274971008301
    4. '                           ' → logprob: -5.772274971008301
    5. '                        
' → logprob: -7.397274971008301
    6. ' for' → logprob: -7.647274971008301
    7. '                        ' → logprob: -7.772274971008301
    8. '                   ' → logprob: -7.897274971008301
    9. ':
' → logprob: -8.6472749710083
    10. ':' → logprob: -8.6472749710083

Token 1057: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.22324618697166443
    2. 'continue' (adapté à ' continue') → logprob: -1.9732462167739868
    3. ' continue' → logprob: -3.4732460975646973
    4. '                           ' → logprob: -3.9732460975646973
    5. '                               ' → logprob: -4.723246097564697
    6. '                   ' → logprob: -6.723246097564697
    7. '   ' → logprob: -7.723246097564697
    8. 'for' → logprob: -8.348246574401855
    9. '                                   ' → logprob: -9.348246574401855
    10. ' for' → logprob: -9.348246574401855

Token 1058: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6116945147514343
    2. '                   ' → logprob: -0.8616945147514343
    3. '```' → logprob: -3.861694574356079
    4. ' for' → logprob: -6.1116943359375
    5. '               ' → logprob: -6.3616943359375
    6. '                        
' → logprob: -6.4866943359375
    7. '       ' → logprob: -6.6116943359375
    8. '\' → logprob: -6.8616943359375
    9. '                    
' → logprob: -7.3616943359375
    10. '``' → logprob: -7.3616943359375

Token 1059: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5554009079933167
    2. '                   ' → logprob: -1.0554008483886719
    3. '
' → logprob: -3.930400848388672
    4. '```' → logprob: -3.930400848388672
    5. '                        
' → logprob: -4.805400848388672
    6. '                    
' → logprob: -5.055400848388672
    7. ' for' → logprob: -5.305400848388672
    8. '               ' → logprob: -5.680400848388672
    9. '\' → logprob: -6.305400848388672
    10. '\t' → logprob: -6.430400848388672

Token 1060: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5372111797332764
    2. '                   ' → logprob: -1.2872111797332764
    3. '                       ' → logprob: -2.6622111797332764
    4. 'profit' → logprob: -3.2872111797332764
    5. ' for' → logprob: -4.2872114181518555
    6. 'max' → logprob: -5.6622114181518555
    7. 'next' → logprob: -5.9122114181518555
    8. 'val' → logprob: -5.9122114181518555
    9. 'current' (adapté à ' current') → logprob: -5.9122114181518555
    10. 'cur' → logprob: -6.7872114181518555

Token 1061: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.04662516340613365
    2. '_val' → logprob: -3.6716251373291016
    3. '_' → logprob: -4.296625137329102
    4. '_score' → logprob: -6.296625137329102
    5. '_value' → logprob: -6.296625137329102
    6. '_prof' → logprob: -6.921625137329102
    7. 'profit' → logprob: -7.421625137329102
    8. '_pro' → logprob: -7.796625137329102
    9. '=' → logprob: -8.421625137329102
    10. '_prob' → logprob: -8.796625137329102

Token 1062: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7833074331283569
    2. ' +' → logprob: -1.408307433128357
    3. '=' → logprob: -2.4083075523376465
    4. '+' → logprob: -2.4083075523376465
    5. '                       ' → logprob: -3.4083075523376465
    6. '                   ' → logprob: -3.5333075523376465
    7. ')' → logprob: -3.5333075523376465
    8. '                           ' → logprob: -4.7833075523376465
    9. ' +=' → logprob: -5.0333075523376465
    10. ']' → logprob: -5.7833075523376465

Token 1063: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014164102263748646
    2. ' max' → logprob: -4.264163970947266
    3. '[max' → logprob: -15.389163970947266
    4. '=max' → logprob: -15.639163970947266
    5. '(max' → logprob: -16.014163970947266
    6. '                   ' → logprob: -17.014163970947266
    7. '	max' → logprob: -17.764163970947266
    8. '                           ' → logprob: -18.014163970947266
    9. '                       ' → logprob: -18.014163970947266
    10. '|max' → logprob: -18.514163970947266

Token 1064: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -1.4617256056226324e-05
    2. 'profit' → logprob: -12.000014305114746
    3. 'Profit' → logprob: -12.125014305114746
    4. '_prof' → logprob: -14.000014305114746
    5. '\' → logprob: -14.250014305114746
    6. '_pro' → logprob: -14.625014305114746
    7. '```' → logprob: -15.250014305114746
    8. '[' → logprob: -16.000015258789062
    9. '_perf' → logprob: -16.625015258789062
    10. '[
' → logprob: -17.000015258789062

Token 1065: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012916464766021818
    2. 'day' → logprob: -9.250128746032715
    3. ' day' → logprob: -11.125128746032715
    4. '(day' → logprob: -11.625128746032715
    5. '[
' → logprob: -12.125128746032715
    6. ' [' → logprob: -13.375128746032715
    7. 'Day' → logprob: -14.250128746032715
    8. '][' → logprob: -14.750128746032715
    9. '```' → logprob: -14.875128746032715
    10. '
' → logprob: -15.250128746032715

Token 1066: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -1.700132997939363e-05
    2. ' day' → logprob: -11.500017166137695
    3. '[' → logprob: -12.125017166137695
    4. '(day' → logprob: -13.625017166137695
    5. '   ' → logprob: -16.125017166137695
    6. 'd' → logprob: -17.125017166137695
    7. '
' → logprob: -17.375017166137695
    8. '```' → logprob: -17.500017166137695
    9. 'DAY' → logprob: -18.625017166137695
    10. 'Day' → logprob: -19.375017166137695

Token 1067: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019449377432465553
    2. '[w' → logprob: -6.5019450187683105
    3. ')[' → logprob: -9.001944541931152
    4. '[token' → logprob: -9.126944541931152
    5. ' ][' → logprob: -9.751944541931152
    6. '[' → logprob: -9.751944541931152
    7. ']' → logprob: -11.001944541931152
    8. 'w' → logprob: -11.501944541931152
    9. '"][' → logprob: -11.501944541931152
    10. '[word' → logprob: -11.751944541931152

Token 1068: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.5597102396423e-05
    2. ' w' → logprob: -10.625035285949707
    3. '][' → logprob: -12.000035285949707
    4. '
' → logprob: -13.375035285949707
    5. '   ' → logprob: -13.625035285949707
    6. '	w' → logprob: -14.500035285949707
    7. '[w' → logprob: -15.500035285949707
    8. ' ' → logprob: -15.625035285949707
    9. '```' → logprob: -16.000036239624023
    10. '                   ' → logprob: -16.000036239624023

Token 1069: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0014122584834694862
    2. 'used' → logprob: -6.876412391662598
    3. '][' → logprob: -8.376412391662598
    4. '_w' → logprob: -9.251412391662598
    5. 'w' → logprob: -11.251412391662598
    6. 'Used' → logprob: -11.251412391662598
    7. '_USED' → logprob: -11.376412391662598
    8. '```' → logprob: -12.501412391662598
    9. '_' → logprob: -13.001412391662598
    10. ']' → logprob: -13.376412391662598

Token 1070: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010069658746942878
    2. '[w' → logprob: -7.126007080078125
    3. ']' → logprob: -9.876007080078125
    4. 'w' → logprob: -10.126007080078125
    5. ' ][' → logprob: -10.376007080078125
    6. '[x' → logprob: -11.001007080078125
    7. ']][' → logprob: -11.626007080078125
    8. '"][' → logprob: -11.876007080078125
    9. '<|end|>' → logprob: -12.001007080078125
    10. '                   ' → logprob: -12.126007080078125

Token 1071: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.843177233240567e-05
    2. ' x' → logprob: -11.000018119812012
    3. '
' → logprob: -14.375018119812012
    4. ' ' → logprob: -15.625018119812012
    5. '   ' → logprob: -16.000019073486328
    6. '0' → logprob: -16.000019073486328
    7. '                   ' → logprob: -16.250019073486328
    8. 'w' → logprob: -16.250019073486328
    9. '<|end|>' → logprob: -16.500019073486328
    10. '][' → logprob: -17.000019073486328

Token 1072: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0008253490086644888
    2. 'used' → logprob: -7.12582540512085
    3. 'Used' → logprob: -11.750824928283691
    4. '```' → logprob: -12.500824928283691
    5. '_USED' → logprob: -12.625824928283691
    6. '   ' → logprob: -13.875824928283691
    7. '                   ' → logprob: -13.875824928283691
    8. '               ' → logprob: -14.375824928283691
    9. '_' → logprob: -14.625824928283691
    10. ']' → logprob: -14.875824928283691

Token 1073: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0248223543167114
    2. '+' → logprob: -1.1498223543167114
    3. ' +' → logprob: -1.7748223543167114
    4. '                           ' → logprob: -2.899822235107422
    5. '                       ' → logprob: -3.274822235107422
    6. ']' → logprob: -3.274822235107422
    7. '                               ' → logprob: -5.024822235107422
    8. ']
' → logprob: -5.524822235107422
    9. '               ' → logprob: -5.774822235107422
    10. '+
' → logprob: -5.899822235107422

Token 1074: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007475639577023685
    2. '```' → logprob: -8.250747680664062
    3. '                       ' → logprob: -9.000747680664062
    4. '                    
' → logprob: -9.125747680664062
    5. '               ' → logprob: -9.500747680664062
    6. '       ' → logprob: -10.125747680664062
    7. '           ' → logprob: -10.500747680664062
    8. '
' → logprob: -10.625747680664062
    9. '                    ' → logprob: -11.125747680664062
    10. '   ' → logprob: -11.500747680664062

Token 1075: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.27005788683891296
    2. ' for' → logprob: -2.1450579166412354
    3. 'for' (adapté à ' for') → logprob: -2.2700579166412354
    4. '                       ' → logprob: -4.895057678222656
    5. '```' → logprob: -5.645057678222656
    6. '                           ' → logprob: -5.895057678222656
    7. '
' → logprob: -7.270057678222656
    8. '                               ' → logprob: -8.020057678222656
    9. '                    
' → logprob: -8.270057678222656
    10. ' w' → logprob: -8.520057678222656

Token 1076: ' burden' (ID: 39183)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.8059919476509094
    2. 'F' → logprob: -2.1809918880462646
    3. 'f' → logprob: -2.1809918880462646
    4. 'sum' → logprob: -2.5559918880462646
    5. 'perf' → logprob: -2.8059918880462646
    6. 'pf' → logprob: -2.8059918880462646
    7. ' profit' → logprob: -3.5559918880462646
    8. '(f' → logprob: -3.9309918880462646
    9. 'p' → logprob: -4.430992126464844
    10. '(F' → logprob: -4.555992126464844

Token 1077: ',' (ID: 11)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0004240011621732265
    2. '_cost' → logprob: -9.2504243850708
    3. 'used' → logprob: -9.3754243850708
    4. '_usage' → logprob: -9.3754243850708
    5. ')' → logprob: -10.2504243850708
    6. '```' → logprob: -10.2504243850708
    7. '_USED' → logprob: -11.6254243850708
    8. '_required' → logprob: -11.7504243850708
    9. '   ' → logprob: -11.8754243850708
    10. '[' → logprob: -11.8754243850708

Token 1078: 'profit' (ID: 40796)
  Prédit: 'profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.004907466005533934
    2. 'speed' → logprob: -6.004907608032227
    3. ' profit' → logprob: -6.129907608032227
    4. 'prof' → logprob: -9.129907608032227
    5. '_profit' → logprob: -11.004907608032227
    6. 'cost' → logprob: -11.129907608032227
    7. 'gain' → logprob: -11.129907608032227
    8. 'perf' → logprob: -11.254907608032227
    9. 'p' → logprob: -11.504907608032227
    10. 'profits' → logprob: -11.754907608032227

Token 1079: ',m' (ID: 26648)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5228589177131653
    2. '_used' → logprob: -1.3978588581085205
    3. ' in' → logprob: -2.1478588581085205
    4. '_in' → logprob: -3.7728588581085205
    5. ',' → logprob: -4.3978590965271
    6. '_' → logprob: -5.3978590965271
    7. 'used' → logprob: -6.6478590965271
    8. ')' → logprob: -7.8978590965271
    9. ',_' → logprob: -8.397858619689941
    10. '_,' → logprob: -8.522858619689941

Token 1080: 'ulti' (ID: 10439)
  Prédit: 'ulti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulti' → logprob: -1.3425219549390022e-05
    2. 'ult' → logprob: -12.00001335144043
    3. ' ulti' → logprob: -12.62501335144043
    4. 'ul' → logprob: -13.37501335144043
    5. 'multi' → logprob: -13.62501335144043
    6. 'ultip' → logprob: -15.00001335144043
    7. 'u' → logprob: -15.37501335144043
    8. 'ultiple' → logprob: -16.00001335144043
    9. 'uti' → logprob: -16.12501335144043
    10. '_multi' → logprob: -16.37501335144043

Token 1081: ' in' (ID: 306)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.26668110489845276
    2. '=' → logprob: -1.7666810750961304
    3. '_' → logprob: -3.76668119430542
    4. ')' → logprob: -3.76668119430542
    5. ' =' → logprob: -4.64168119430542
    6. ' in' → logprob: -6.26668119430542
    7. 'used' → logprob: -6.76668119430542
    8. '_profit' → logprob: -7.26668119430542
    9. 'in' → logprob: -7.51668119430542
    10. ')_' → logprob: -8.641680717468262

Token 1082: ' performances' (ID: 27880)
  Prédit: 'perform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perform' → logprob: -0.0003920655872207135
    2. ' performances' → logprob: -7.875391960144043
    3. ' perform' → logprob: -12.000391960144043
    4. 'perf' → logprob: -13.375391960144043
    5. 'performance' → logprob: -13.625391960144043
    6. 'max' → logprob: -14.125391960144043
    7. 'performed' → logprob: -14.250391960144043
    8. '[' → logprob: -14.625391960144043
    9. 'per' → logprob: -15.125391960144043
    10. 'range' → logprob: -15.375391960144043

Token 1083: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1084: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06747560948133469
    2. '<|end|>' → logprob: -3.5674755573272705
    3. ' if' → logprob: -4.31747579574585
    4. '                               ' → logprob: -4.69247579574585
    5. '                        
' → logprob: -5.69247579574585
    6. '                           ' → logprob: -5.94247579574585
    7. '```' → logprob: -6.06747579574585
    8. '                                               ' → logprob: -6.81747579574585
    9. '                        ' → logprob: -6.81747579574585
    10. 'if' → logprob: -7.31747579574585

Token 1085: ' nw' (ID: 45462)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9682725667953491
    2. '                           ' → logprob: -1.3432725667953491
    3. '                       ' → logprob: -1.3432725667953491
    4. 'if' → logprob: -3.3432726860046387
    5. '                               ' → logprob: -4.093272686004639
    6. '
' → logprob: -4.718272686004639
    7. ' 
' → logprob: -4.968272686004639
    8. ' w' → logprob: -5.093272686004639
    9. '                        ' → logprob: -5.593272686004639
    10. ' next' → logprob: -5.718272686004639

Token 1086: ' =' (ID: 314)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.02905052714049816
    2. '_' → logprob: -4.029050350189209
    3. '_w' → logprob: -4.654050350189209
    4. ' =' → logprob: -6.904050350189209
    5. '=' → logprob: -9.279050827026367
    6. '=_' → logprob: -9.404050827026367
    7. '_weight' → logprob: -10.529050827026367
    8. 'w' → logprob: -10.779050827026367
    9. '```' → logprob: -10.904050827026367
    10. ' _' → logprob: -11.529050827026367

Token 1087: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0003360582049936056
    2. ' w' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.000335693359375
    4. '```' → logprob: -15.625335693359375
    5. '                       ' → logprob: -16.625335693359375
    6. '       ' → logprob: -17.125335693359375
    7. '	w' → logprob: -17.625335693359375
    8. '                   ' → logprob: -17.750335693359375
    9. '                               ' → logprob: -17.875335693359375
    10. '                           ' → logprob: -18.375335693359375

Token 1088: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.00012892624363303185
    2. '_' → logprob: -9.375128746032715
    3. '_w' → logprob: -10.125128746032715
    4. '```' → logprob: -13.875128746032715
    5. 'used' → logprob: -14.125128746032715
    6. '_USED' → logprob: -14.500128746032715
    7. 'w' → logprob: -15.250128746032715
    8. '_user' → logprob: -15.625128746032715
    9. '_use' → logprob: -15.750128746032715
    10. '_usage' → logprob: -15.750128746032715

Token 1089: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3870265483856201
    2. ' +' → logprob: -1.1370265483856201
    3. '+w' → logprob: -9.2620267868042
    4. '+b' → logprob: -10.5120267868042
    5. '+k' → logprob: -11.8870267868042
    6. '+
' → logprob: -11.8870267868042
    7. '+n' → logprob: -12.3870267868042
    8. '+s' → logprob: -12.6370267868042
    9. ' +
' → logprob: -13.1370267868042
    10. '+B' → logprob: -13.2620267868042

Token 1090: ' burden' (ID: 39183)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.016382833942770958
    2. 'bur' → logprob: -4.141382694244385
    3. ' speed' → logprob: -8.391383171081543
    4. ' burden' → logprob: -9.516383171081543
    5. '(speed' → logprob: -11.141383171081543
    6. 'burst' → logprob: -11.766383171081543
    7. 'profit' → logprob: -11.891383171081543
    8. '1' → logprob: -12.016383171081543
    9. 'score' → logprob: -12.766383171081543
    10. '	speed' → logprob: -13.266383171081543

Token 1091: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.255521684885025
    2. '<|end|>' → logprob: -2.255521774291992
    3. 'if' → logprob: -2.755521774291992
    4. ' if' → logprob: -3.380521774291992
    5. '<=' → logprob: -5.005521774291992
    6. ')' → logprob: -5.505521774291992
    7. '```' → logprob: -5.755521774291992
    8. '                        ' → logprob: -6.255521774291992
    9. '                           ' → logprob: -6.755521774291992
    10. ',' → logprob: -7.380521774291992

Token 1092: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0014163076411932707
    2. '<|end|>' → logprob: -7.751416206359863
    3. ' if' → logprob: -8.501416206359863
    4. '					' → logprob: -8.751416206359863
    5. '                        ' → logprob: -9.001416206359863
    6. ' <=' → logprob: -9.376416206359863
    7. '<=' → logprob: -9.626416206359863
    8. '>' → logprob: -9.751416206359863
    9. '                        
' → logprob: -10.251416206359863
    10. '```' → logprob: -10.501416206359863

Token 1093: ' nx' (ID: 50118)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10094769299030304
    2. 'if' → logprob: -2.350947618484497
    3. '                       ' → logprob: -8.475947380065918
    4. '<|end|>' → logprob: -9.100947380065918
    5. '<=' → logprob: -9.850947380065918
    6. ' <' → logprob: -10.100947380065918
    7. '<n' → logprob: -10.100947380065918
    8. '                           ' → logprob: -10.225947380065918
    9. '<' → logprob: -10.350947380065918
    10. '                        
' → logprob: -10.350947380065918

Token 1094: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6644272208213806
    2. ' =' → logprob: -1.0394272804260254
    3. '_' → logprob: -3.0394272804260254
    4. '```' → logprob: -3.0394272804260254
    5. '                       ' → logprob: -4.789427280426025
    6. '<|end|>' → logprob: -4.914427280426025
    7. ')' → logprob: -5.539427280426025
    8. '                           ' → logprob: -5.539427280426025
    9. '                        ' → logprob: -5.914427280426025
    10. '                               ' → logprob: -6.164427280426025

Token 1095: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01815333589911461
    2. ' x' → logprob: -4.018153190612793
    3. '   ' → logprob: -12.893153190612793
    4. ' ' → logprob: -15.018153190612793
    5. '	x' → logprob: -16.01815414428711
    6. '```' → logprob: -16.14315414428711
    7. '           ' → logprob: -16.39315414428711
    8. '       ' → logprob: -16.64315414428711
    9. '               ' → logprob: -16.89315414428711
    10. '(x' → logprob: -17.01815414428711

Token 1096: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -4.584861744660884e-05
    2. 'used' → logprob: -10.250045776367188
    3. '_user' → logprob: -12.750045776367188
    4. '+' → logprob: -13.000045776367188
    5. '```' → logprob: -13.125045776367188
    6. 'Used' → logprob: -14.125045776367188
    7. '_USED' → logprob: -14.625045776367188
    8. '_x' → logprob: -14.625045776367188
    9. 'x' → logprob: -14.875045776367188
    10. '_use' → logprob: -15.250045776367188

Token 1097: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47417014837265015
    2. ' +' → logprob: -0.9741701483726501
    3. '+
' → logprob: -10.349169731140137
    4. ' +
' → logprob: -10.849169731140137
    5. ' if' → logprob: -11.224169731140137
    6. 'if' → logprob: -11.599169731140137
    7. '                       ' → logprob: -11.849169731140137
    8. '+n' → logprob: -12.849169731140137
    9. '<|end|>' → logprob: -13.349169731140137
    10. '                           ' → logprob: -13.724169731140137

Token 1098: ' multi' (ID: 12151)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' → logprob: -5.848420551046729e-05
    2. ' multi' → logprob: -9.7500581741333
    3. 'mult' → logprob: -16.750059127807617
    4. 'multip' → logprob: -19.000059127807617
    5. '(m' → logprob: -20.625059127807617
    6. '   ' → logprob: -20.625059127807617
    7. ' ' → logprob: -20.750059127807617
    8. 'multiple' → logprob: -21.250059127807617
    9. '       ' → logprob: -21.750059127807617
    10. '.multi' → logprob: -21.875059127807617

Token 1099: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01571969874203205
    2. ' if' → logprob: -4.515719890594482
    3. '<|end|>' → logprob: -6.015719890594482
    4. 'if' → logprob: -7.515719890594482
    5. '```' → logprob: -7.765719890594482
    6. '                        
' → logprob: -7.890719890594482
    7. '                        ' → logprob: -8.640719413757324
    8. '                           ' → logprob: -9.515719413757324
    9. ':' → logprob: -9.765719413757324
    10. '                      ' → logprob: -9.765719413757324

Token 1100: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005504102911800146
    2. ' if' → logprob: -5.755504131317139
    3. 'if' → logprob: -7.130504131317139
    4. '                        
' → logprob: -8.00550365447998
    5. '                           ' → logprob: -8.25550365447998
    6. '                        ' → logprob: -8.50550365447998
    7. '```' → logprob: -8.75550365447998
    8. '<|end|>' → logprob: -8.75550365447998
    9. '                               ' → logprob: -9.25550365447998
    10. '					' → logprob: -9.38050365447998

Token 1101: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7262831330299377
    2. ' if' → logprob: -0.9762831330299377
    3. '                       ' → logprob: -1.976283073425293
    4. '                        ' → logprob: -8.101283073425293
    5. '                           ' → logprob: -8.351283073425293
    6. '                        
' → logprob: -8.976283073425293
    7. '                               ' → logprob: -9.351283073425293
    8. '
' → logprob: -9.601283073425293
    9. '```' → logprob: -9.851283073425293
    10. ':
' → logprob: -11.226283073425293

Token 1102: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.386959046125412
    2. ' nw' → logprob: -1.1369590759277344
    3. 'n' → logprob: -10.511959075927734
    4. 'nx' → logprob: -11.261959075927734
    5. '                   ' → logprob: -11.386959075927734
    6. '                       ' → logprob: -11.386959075927734
    7. ' nx' → logprob: -12.011959075927734
    8. '                               ' → logprob: -12.636959075927734
    9. '(n' → logprob: -12.886959075927734
    10. '                           ' → logprob: -13.386959075927734

Token 1103: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3198125660419464
    2. '<=' → logprob: -1.319812536239624
    3. ' <' → logprob: -5.319812774658203
    4. '```' → logprob: -7.069812774658203
    5. '<' → logprob: -7.444812774658203
    6. '<|end|>' → logprob: -10.444812774658203
    7. '<w' → logprob: -10.569812774658203
    8. '[' → logprob: -10.569812774658203
    9. ')<=' → logprob: -10.944812774658203
    10. '<n' → logprob: -11.444812774658203

Token 1104: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -4.36574100604048e-06
    2. ' W' → logprob: -12.375004768371582
    3. '   ' → logprob: -17.375003814697266
    4. '50' → logprob: -17.625003814697266
    5. '	W' → logprob: -18.125003814697266
    6. '```' → logprob: -19.625003814697266
    7. '
' → logprob: -20.375003814697266
    8. ' ' → logprob: -20.625003814697266
    9. '=W' → logprob: -20.625003814697266
    10. '       ' → logprob: -21.000003814697266

Token 1105: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01285253930836916
    2. 'and' → logprob: -4.387852668762207
    3. '                           ' → logprob: -8.262852668762207
    4. '```' → logprob: -10.512852668762207
    5. '                               ' → logprob: -10.887852668762207
    6. '<|end|>' → logprob: -11.387852668762207
    7. '                       ' → logprob: -11.887852668762207
    8. '	and' → logprob: -12.012852668762207
    9. '][' → logprob: -12.637852668762207
    10. '[' → logprob: -13.137852668762207

Token 1106: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.062175165861845016
    2. ' nx' → logprob: -2.8121752738952637
    3. '                   ' → logprob: -9.437174797058105
    4. '                       ' → logprob: -9.687174797058105
    5. '
' → logprob: -11.437174797058105
    6. '(nx' → logprob: -11.437174797058105
    7. '               ' → logprob: -11.687174797058105
    8. '           ' → logprob: -12.062174797058105
    9. '                           ' → logprob: -12.187174797058105
    10. '                        ' → logprob: -12.562174797058105

Token 1107: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7455596327781677
    2. '<=' → logprob: -0.8705596327781677
    3. ' <' → logprob: -2.4955596923828125
    4. '<' → logprob: -4.9955596923828125
    5. '[' → logprob: -4.9955596923828125
    6. '<|end|>' → logprob: -5.1205596923828125
    7. '```' → logprob: -6.9955596923828125
    8. '<size' → logprob: -7.1205596923828125
    9. '<n' → logprob: -7.3705596923828125
    10. '][' → logprob: -7.7455596923828125

Token 1108: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -7.493430894101039e-05
    2. ' X' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.37507438659668
    4. ' ' → logprob: -17.87507438659668
    5. '```' → logprob: -19.00007438659668
    6. '>X' → logprob: -19.50007438659668
    7. '
' → logprob: -19.75007438659668
    8. '  ' → logprob: -20.62507438659668
    9. '	X' → logprob: -20.75007438659668
    10. '       ' → logprob: -20.87507438659668

Token 1109: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.803058385848999
    2. ':
' → logprob: -1.178058385848999
    3. '                           ' → logprob: -1.678058385848999
    4. ':' → logprob: -2.928058385848999
    5. '                       ' → logprob: -6.178058624267578
    6. '                               ' → logprob: -6.803058624267578
    7. 'and' → logprob: -7.553058624267578
    8. ':

' → logprob: -10.053058624267578
    9. '                   ' → logprob: -10.428058624267578
    10. '):
' → logprob: -10.928058624267578

Token 1110: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.033613421022892
    2. ' and' → logprob: -4.283613204956055
    3. ':
' → logprob: -4.408613204956055
    4. '                               ' → logprob: -5.658613204956055
    5. ':' → logprob: -6.158613204956055
    6. '                       ' → logprob: -7.158613204956055
    7. '```' → logprob: -8.533613204956055
    8. '                            ' → logprob: -8.658613204956055
    9. '                        ' → logprob: -10.033613204956055
    10. '                            
' → logprob: -10.158613204956055

Token 1111: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7315175533294678
    2. 'if' (adapté à ' if') → logprob: -0.8565175533294678
    3. ' if' → logprob: -2.9815175533294678
    4. 'next' → logprob: -3.4815175533294678
    5. '                               ' → logprob: -5.356517791748047
    6. 'token' → logprob: -6.106517791748047
    7. ' max' → logprob: -6.481517791748047
    8. '                           ' → logprob: -7.106517791748047
    9. 'prev' → logprob: -7.481517791748047
    10. 'profit' → logprob: -7.481517791748047

Token 1112: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009293294278904796
    2. ' max' → logprob: -7.000929355621338
    3. '                           ' → logprob: -11.37592887878418
    4. '                               ' → logprob: -12.37592887878418
    5. '(max' → logprob: -13.75092887878418
    6. '                                   ' → logprob: -14.25092887878418
    7. '                       ' → logprob: -16.75092887878418
    8. '                                       ' → logprob: -17.12592887878418
    9. 'current' → logprob: -17.12592887878418
    10. '   ' → logprob: -17.37592887878418

Token 1113: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -1.5690089639974758e-05
    2. '```' → logprob: -12.125015258789062
    3. 'Profit' → logprob: -12.625015258789062
    4. '_prof' → logprob: -12.750015258789062
    5. '\' → logprob: -13.500015258789062
    6. 'profit' → logprob: -13.625015258789062
    7. '_pro' → logprob: -14.000015258789062
    8. '_prob' → logprob: -15.500015258789062
    9. '``' → logprob: -15.875015258789062
    10. '_' → logprob: -16.875015258789062

Token 1114: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.250000953674316
    3. '][' → logprob: -15.375000953674316
    4. '[
' → logprob: -15.750000953674316
    5. '(day' → logprob: -16.875
    6. 'day' → logprob: -17.0
    7. '[next' → logprob: -17.875
    8. '
' → logprob: -18.125
    9. '           ' → logprob: -18.375
    10. ' day' → logprob: -18.625

Token 1115: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -6.153795766294934e-06
    2. ' day' → logprob: -12.375005722045898
    3. '(day' → logprob: -14.000005722045898
    4. '[' → logprob: -14.750005722045898
    5. '   ' → logprob: -14.875005722045898
    6. '```' → logprob: -16.2500057220459
    7. 'd' → logprob: -16.5000057220459
    8. '
' → logprob: -17.2500057220459
    9. 'next' → logprob: -17.5000057220459
    10. 'Day' → logprob: -18.2500057220459

Token 1116: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18182821571826935
    2. '+' → logprob: -1.806828260421753
    3. ' +' → logprob: -6.556828022003174
    4. '                           ' → logprob: -8.431828498840332
    5. '                               ' → logprob: -8.931828498840332
    6. '+n' → logprob: -9.431828498840332
    7. '[n' → logprob: -10.306828498840332
    8. '[next' → logprob: -10.556828498840332
    9. '"][' → logprob: -10.681828498840332
    10. '[w' → logprob: -10.806828498840332

Token 1117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.290784560609609e-05
    2. 'w' → logprob: -10.000072479248047
    3. '][' → logprob: -10.750072479248047
    4. ' ' → logprob: -12.625072479248047
    5. '[w' → logprob: -13.625072479248047
    6. '```' → logprob: -14.625072479248047
    7. '   ' → logprob: -14.750072479248047
    8. '           ' → logprob: -15.625072479248047
    9. '
' → logprob: -15.625072479248047
    10. ' w' → logprob: -16.750072479248047

Token 1118: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.13308440148830414
    2. '[w' → logprob: -2.133084297180176
    3. '[n' → logprob: -5.258084297180176
    4. '                           ' → logprob: -7.883084297180176
    5. '                               ' → logprob: -8.133084297180176
    6. '[' → logprob: -10.258084297180176
    7. '                                       ' → logprob: -10.383084297180176
    8. '                                   ' → logprob: -10.633084297180176
    9. '                       ' → logprob: -10.758084297180176
    10. '```' → logprob: -11.008084297180176

Token 1119: 'nw' (ID: 85546)
  Prédit: 'nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -4.723352049040841e-06
    2. ' nw' → logprob: -12.750004768371582
    3. 'n' → logprob: -14.000004768371582
    4. '
' → logprob: -14.500004768371582
    5. '[n' → logprob: -15.625004768371582
    6. '```' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.875003814697266
    8. 'NW' → logprob: -18.000003814697266
    9. 'w' → logprob: -18.125003814697266
    10. 'new' → logprob: -18.375003814697266

Token 1120: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00025108797126449645
    2. '[w' → logprob: -9.000250816345215
    3. '                               ' → logprob: -10.625250816345215
    4. '                           ' → logprob: -10.875250816345215
    5. '[n' → logprob: -10.875250816345215
    6. ']][' → logprob: -11.375250816345215
    7. '<|end|>' → logprob: -11.875250816345215
    8. ']' → logprob: -12.125250816345215
    9. '[' → logprob: -12.125250816345215
    10. '                                   ' → logprob: -12.375250816345215

Token 1121: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -7.44574936106801e-05
    2. 'x' → logprob: -9.75007438659668
    3. ' nx' → logprob: -11.12507438659668
    4. '(nx' → logprob: -13.75007438659668
    5. '   ' → logprob: -15.75007438659668
    6. '
' → logprob: -16.75007438659668
    7. 'n' → logprob: -16.87507438659668
    8. '```' → logprob: -17.62507438659668
    9. 'Nx' → logprob: -18.12507438659668
    10. 'xn' → logprob: -19.00007438659668

Token 1122: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.15534774959087372
    2. ']<' → logprob: -2.5303478240966797
    3. ']' → logprob: -2.9053478240966797
    4. ' <' → logprob: -4.78034782409668
    5. '                           ' → logprob: -7.65534782409668
    6. '                               ' → logprob: -8.78034782409668
    7. '							' → logprob: -10.15534782409668
    8. '                                   ' → logprob: -10.15534782409668
    9. '                            ' → logprob: -10.15534782409668
    10. '<m' → logprob: -10.53034782409668

Token 1123: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.002666265470907092
    2. ' <' → logprob: -6.252666473388672
    3. '                           ' → logprob: -9.002666473388672
    4. '<int' → logprob: -9.502666473388672
    5. ']<' → logprob: -10.127666473388672
    6. '<len' → logprob: -10.252666473388672
    7. '<tag' → logprob: -10.252666473388672
    8. '<data' → logprob: -10.377666473388672
    9. '=' → logprob: -10.502666473388672
    10. '<th' → logprob: -10.502666473388672

Token 1124: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0031840058509260416
    2. ' current' → logprob: -5.753183841705322
    3. 'max' → logprob: -13.00318431854248
    4. '                               ' → logprob: -13.00318431854248
    5. '(current' → logprob: -13.87818431854248
    6. '                           ' → logprob: -14.62818431854248
    7. '                                   ' → logprob: -15.87818431854248
    8. '```' → logprob: -16.628183364868164
    9. '   ' → logprob: -17.128183364868164
    10. '	current' → logprob: -17.253183364868164

Token 1125: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.0006442877347581089
    2. 'profit' → logprob: -7.750644207000732
    3. 'Profit' → logprob: -9.12564468383789
    4. '_pro' → logprob: -9.62564468383789
    5. '_prof' → logprob: -11.12564468383789
    6. '+' → logprob: -11.12564468383789
    7. ' profit' → logprob: -13.12564468383789
    8. '-profit' → logprob: -13.37564468383789
    9. '_' → logprob: -13.62564468383789
    10. '```' → logprob: -14.12564468383789

Token 1126: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38815948367118835
    2. ' +' → logprob: -1.1381595134735107
    3. '                               ' → logprob: -7.138159275054932
    4. '                           ' → logprob: -7.888159275054932
    5. '                       ' → logprob: -9.88815975189209
    6. '                                   ' → logprob: -11.01315975189209
    7. '+
' → logprob: -11.01315975189209
    8. ' +
' → logprob: -12.13815975189209
    9. '                                       ' → logprob: -12.38815975189209
    10. '+p' → logprob: -12.51315975189209

Token 1127: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.0003618024929892272
    2. ' profit' → logprob: -8.000361442565918
    3. 'prof' → logprob: -10.750361442565918
    4. 'bur' → logprob: -12.750361442565918
    5. 'prob' → logprob: -14.250361442565918
    6. 'benef' → logprob: -14.750361442565918
    7. 'profits' → logprob: -15.125361442565918
    8. 'pro' → logprob: -15.250361442565918
    9. '```' → logprob: -16.250362396240234
    10. 'perf' → logprob: -16.375362396240234

Token 1128: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.9830582737922668
    2. ':' → logprob: -1.108058214187622
    3. '+' → logprob: -2.108058214187622
    4. '                           ' → logprob: -2.233058214187622
    5. ':
' → logprob: -3.608058214187622
    6. '):' → logprob: -4.358058452606201
    7. '                       ' → logprob: -4.483058452606201
    8. '):
' → logprob: -4.983058452606201
    9. ']:' → logprob: -6.608058452606201
    10. '=' → logprob: -6.983058452606201

Token 1129: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.016523899510502815
    2. '                           ' → logprob: -4.641523838043213
    3. '                                   ' → logprob: -6.016523838043213
    4. '=' → logprob: -6.766523838043213
    5. ' =' → logprob: -7.141523838043213
    6. '[' → logprob: -7.266523838043213
    7. '                       ' → logprob: -8.141524314880371
    8. '                                       ' → logprob: -8.141524314880371
    9. '                                ' → logprob: -8.391524314880371
    10. ':
' → logprob: -9.516524314880371

Token 1130: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.00012964145571459085
    2. ' max' → logprob: -9.125129699707031
    3. '                               ' → logprob: -11.125129699707031
    4. '                                   ' → logprob: -13.125129699707031
    5. '                           ' → logprob: -14.125129699707031
    6. '```' → logprob: -14.250129699707031
    7. '                                       ' → logprob: -14.500129699707031
    8. '                                           ' → logprob: -14.625129699707031
    9. '[max' → logprob: -14.875129699707031
    10. '
' → logprob: -15.625129699707031

Token 1131: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -2.2200749754119897e-06
    2. 'profit' → logprob: -13.625001907348633
    3. '_pro' → logprob: -14.625001907348633
    4. '_prof' → logprob: -15.250001907348633
    5. 'Profit' → logprob: -15.500001907348633
    6. '_prob' → logprob: -17.250001907348633
    7. '\' → logprob: -17.750001907348633
    8. '```' → logprob: -18.625001907348633
    9. '_reward' → logprob: -19.375001907348633
    10. '-profit' → logprob: -19.375001907348633

Token 1132: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.375000953674316
    3. '[next' → logprob: -16.125
    4. '<|end|>' → logprob: -16.25
    5. '[
' → logprob: -16.625
    6. 'def' → logprob: -16.625
    7. '\[' → logprob: -17.25
    8. '][' → logprob: -17.625
    9. '[data' → logprob: -17.875
    10. ')[' → logprob: -17.875

Token 1133: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -1.4021237802808173e-05
    2. '[' → logprob: -11.375014305114746
    3. ' day' → logprob: -13.375014305114746
    4. '(day' → logprob: -14.500014305114746
    5. '
' → logprob: -15.250014305114746
    6. '```' → logprob: -16.25001335144043
    7. 'd' → logprob: -18.50001335144043
    8. '][' → logprob: -18.87501335144043
    9. '                           ' → logprob: -19.37501335144043
    10. '   ' → logprob: -19.37501335144043

Token 1134: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006347587914206088
    2. '][' → logprob: -7.625634670257568
    3. '[' → logprob: -9.125635147094727
    4. ' +' → logprob: -11.125635147094727
    5. '[next' → logprob: -11.750635147094727
    6. '                           ' → logprob: -12.625635147094727
    7. '                               ' → logprob: -12.625635147094727
    8. '                                   ' → logprob: -13.375635147094727
    9. ']+' → logprob: -13.875635147094727
    10. '+
' → logprob: -14.375635147094727

Token 1135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.0
    3. ' ' → logprob: -16.75
    4. '   ' → logprob: -19.0
    5. 'w' → logprob: -19.125
    6. '+' → logprob: -19.125
    7. '```' → logprob: -19.375
    8. '１' → logprob: -19.75
    9. '[w' → logprob: -19.75
    10. '[next' → logprob: -19.875

Token 1136: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.03552989289164543
    2. '][' → logprob: -3.660529851913452
    3. '[' → logprob: -5.285530090332031
    4. '                               ' → logprob: -6.285530090332031
    5. '[w' → logprob: -6.535530090332031
    6. ')[' → logprob: -8.910530090332031
    7. '[now' → logprob: -8.910530090332031
    8. '                                   ' → logprob: -9.410530090332031
    9. '```' → logprob: -9.535530090332031
    10. '}[' → logprob: -10.035530090332031

Token 1137: 'nw' (ID: 85546)
  Prédit: 'nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -6.289473822107539e-05
    2. ' nw' → logprob: -10.250062942504883
    3. 'w' → logprob: -10.750062942504883
    4. '[n' → logprob: -13.375062942504883
    5. '   ' → logprob: -14.250062942504883
    6. '[w' → logprob: -14.500062942504883
    7. 'wn' → logprob: -14.875062942504883
    8. 'n' → logprob: -15.000062942504883
    9. '][' → logprob: -15.250062942504883
    10. '
' → logprob: -15.375062942504883

Token 1138: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16065353155136108
    2. '[n' → logprob: -1.9106535911560059
    3. '[' → logprob: -9.035653114318848
    4. ']' → logprob: -9.160653114318848
    5. '[w' → logprob: -9.410653114318848
    6. '                               ' → logprob: -10.785653114318848
    7. '```' → logprob: -10.910653114318848
    8. '<|end|>' → logprob: -11.285653114318848
    9. ''][' → logprob: -11.410653114318848
    10. ']][' → logprob: -11.535653114318848

Token 1139: 'nx' (ID: 45103)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.6328703761100769
    2. 'nx' → logprob: -0.7578703761100769
    3. 'x' → logprob: -9.3828706741333
    4. '```' → logprob: -9.8828706741333
    5. '(nx' → logprob: -10.6328706741333
    6. 'nz' → logprob: -11.2578706741333
    7. '
' → logprob: -11.5078706741333
    8. 'w' → logprob: -11.7578706741333
    9. '][' → logprob: -11.8828706741333
    10. '[n' → logprob: -11.8828706741333

Token 1140: ']' (ID: 60)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.5907692313194275
    2. '=' → logprob: -1.3407692909240723
    3. ']' → logprob: -1.7157692909240723
    4. '=
' → logprob: -6.465769290924072
    5. ']+=' → logprob: -6.965769290924072
    6. '                               ' → logprob: -7.090769290924072
    7. ' =' → logprob: -7.590769290924072
    8. '<|end|>' → logprob: -8.340768814086914
    9. '                                   ' → logprob: -9.465768814086914
    10. '                           ' → logprob: -10.090768814086914

Token 1141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002238162560388446
    2. ' =' → logprob: -6.1272382736206055
    3. ']=' → logprob: -11.627238273620605
    4. '=w' → logprob: -11.877238273620605
    5. '=max' → logprob: -12.127238273620605
    6. '=
' → logprob: -12.502238273620605
    7. '=int' → logprob: -12.752238273620605
    8. '<|end|>' → logprob: -12.877238273620605
    9. '=n' → logprob: -13.127238273620605
    10. '=s' → logprob: -13.252238273620605

Token 1142: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.048589304089546204
    2. ' current' → logprob: -3.0485892295837402
    3. '                               ' → logprob: -13.423589706420898
    4. '                                   ' → logprob: -15.298589706420898
    5. '$current' → logprob: -16.0485897064209
    6. '(current' → logprob: -16.9235897064209
    7. '```' → logprob: -16.9235897064209
    8. '[current' → logprob: -17.4235897064209
    9. 'Current' → logprob: -17.5485897064209
    10. '	current' → logprob: -18.1735897064209

Token 1143: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.0028858294244855642
    2. '_token' → logprob: -6.002885818481445
    3. '_prof' → logprob: -8.002885818481445
    4. '_pro' → logprob: -10.627885818481445
    5. 'profit' → logprob: -11.252885818481445
    6. '```' → logprob: -11.752885818481445
    7. '_code' → logprob: -11.877885818481445
    8. 'Profit' → logprob: -12.127885818481445
    9. '_prob' → logprob: -12.752885818481445
    10. '_tokens' → logprob: -13.002885818481445

Token 1144: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1428411304950714
    2. '+' → logprob: -2.017841100692749
    3. '[' → logprob: -9.392841339111328
    4. '[token' → logprob: -10.017841339111328
    5. '`' → logprob: -11.517841339111328
    6. '+t' → logprob: -12.517841339111328
    7. '<|end|>' → logprob: -12.642841339111328
    8. ' +
' → logprob: -13.142841339111328
    9. '＋' → logprob: -13.142841339111328
    10. ')' → logprob: -13.267841339111328

Token 1145: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.005234002135694027
    2. ' profit' → logprob: -5.2552337646484375
    3. 'prof' → logprob: -16.255233764648438
    4. 'max' → logprob: -16.380233764648438
    5. 'prob' → logprob: -16.505233764648438
    6. 'pro' → logprob: -17.630233764648438
    7. 'profits' → logprob: -18.755233764648438
    8. '_profit' → logprob: -18.880233764648438
    9. 'price' → logprob: -19.255233764648438
    10. 'benef' → logprob: -19.255233764648438

Token 1146: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1147: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1148: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7290177345275879
    2. '   ' → logprob: -1.604017734527588
    3. '       ' → logprob: -2.104017734527588
    4. 'return' → logprob: -2.354017734527588
    5. '
' → logprob: -2.729017734527588
    6. '```' → logprob: -3.854017734527588
    7. 'max' → logprob: -4.854017734527588
    8. 'answer' → logprob: -5.854017734527588
    9. 'res' → logprob: -7.354017734527588
    10. ' result' → logprob: -7.479017734527588

Token 1149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5250466465950012
    2. ' =' → logprob: -0.9000466465950012
    3. '       ' → logprob: -6.9000468254089355
    4. '[' → logprob: -8.275046348571777
    5. '```' → logprob: -8.275046348571777
    6. '=max' → logprob: -9.650046348571777
    7. '   ' → logprob: -9.775046348571777
    8. 'max' → logprob: -9.775046348571777
    9. '_max' → logprob: -10.525046348571777
    10. ']' → logprob: -10.525046348571777

Token 1150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07218892127275467
    2. 'max' → logprob: -2.6971888542175293
    3. ' max' → logprob: -6.322188854217529
    4. '-' → logprob: -8.322189331054688
    5. ' ' → logprob: -8.697189331054688
    6. '   ' → logprob: -10.697189331054688
    7. '```' → logprob: -12.197189331054688
    8. '
' → logprob: -12.447189331054688
    9. ' -' → logprob: -12.572189331054688
    10. '-max' → logprob: -12.697189331054688

Token 1151: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10027805715799332
    2. '0' → logprob: -2.35027813911438
    3. ' max' → logprob: -9.9752779006958
    4. '-' → logprob: -11.6002779006958
    5. '
' → logprob: -12.1002779006958
    6. '   ' → logprob: -12.1002779006958
    7. '-max' → logprob: -13.2252779006958
    8. '```' → logprob: -13.6002779006958
    9. ' ' → logprob: -14.8502779006958
    10. '(max' → logprob: -14.8502779006958

Token 1152: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31626400351524353
    2. '
' → logprob: -1.566264033317566
    3. 'for' → logprob: -3.0662639141082764
    4. ' for' → logprob: -4.5662641525268555
    5. '           ' → logprob: -6.4412641525268555
    6. '        
' → logprob: -6.9412641525268555
    7. '                       ' → logprob: -7.4412641525268555
    8. '               ' → logprob: -8.066264152526855
    9. '                   ' → logprob: -8.066264152526855
    10. '```' → logprob: -8.191264152526855

Token 1153: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7940040230751038
    2. 'for' → logprob: -1.044003963470459
    3. '       ' → logprob: -1.669003963470459
    4. ' for' → logprob: -5.669003963470459
    5. '           ' → logprob: -6.669003963470459
    6. '                   ' → logprob: -7.294003963470459
    7. '```' → logprob: -7.419003963470459
    8. '                       ' → logprob: -7.794003963470459
    9. '        
' → logprob: -8.669004440307617
    10. '   ' → logprob: -8.794004440307617

Token 1154: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.012229661457240582
    2. '       ' → logprob: -4.5122294425964355
    3. ' for' → logprob: -7.3872294425964355
    4. '
' → logprob: -7.5122294425964355
    5. '           ' → logprob: -12.262229919433594
    6. '   ' → logprob: -12.262229919433594
    7. '```' → logprob: -12.387229919433594
    8. '	for' → logprob: -13.762229919433594
    9. '                   ' → logprob: -15.012229919433594
    10. '``' → logprob: -15.262229919433594

Token 1155: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.025456242263317108
    2. ' w' → logprob: -3.775456190109253
    3. '_w' → logprob: -6.150456428527832
    4. 'W' → logprob: -10.400456428527832
    5. ' _' → logprob: -11.525456428527832
    6. '   ' → logprob: -11.650456428527832
    7. ' W' → logprob: -12.025456428527832
    8. '_' → logprob: -12.650456428527832
    9. '```' → logprob: -12.775456428527832
    10. '	w' → logprob: -13.025456428527832

Token 1156: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.4112178683280945
    2. 'in' → logprob: -1.1612179279327393
    3. ' in' → logprob: -3.7862179279327393
    4. '```' → logprob: -7.53621768951416
    5. 'used' → logprob: -7.78621768951416
    6. '_in' → logprob: -8.53621768951416
    7. '_' → logprob: -9.66121768951416
    8. 'Used' → logprob: -10.66121768951416
    9. '`' → logprob: -10.66121768951416
    10. 'range' → logprob: -10.78621768951416

Token 1157: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16023437678813934
    2. ' in' → logprob: -1.9102343320846558
    3. '[in' → logprob: -12.035234451293945
    4. '```' → logprob: -12.910234451293945
    5. '[' → logprob: -14.660234451293945
    6. 'range' → logprob: -15.035234451293945
    7. '
' → logprob: -15.285234451293945
    8. ')' → logprob: -15.410234451293945
    9. ',' → logprob: -15.785234451293945
    10. '       ' → logprob: -16.035234451293945

Token 1158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011049113236367702
    2. ' range' → logprob: -4.511049270629883
    3. 'in' → logprob: -14.261049270629883
    4. ' in' → logprob: -14.761049270629883
    5. '   ' → logprob: -16.261049270629883
    6. '0' → logprob: -16.386049270629883
    7. '
' → logprob: -16.386049270629883
    8. '```' → logprob: -17.136049270629883
    9. '(range' → logprob: -17.386049270629883
    10. ' ' → logprob: -18.386049270629883

Token 1159: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.02324908785521984
    2. 'W' → logprob: -3.7732491493225098
    3. '(' → logprob: -13.648248672485352
    4. '0' → logprob: -13.773248672485352
    5. ' W' → logprob: -15.023248672485352
    6. '   ' → logprob: -15.148248672485352
    7. 'range' → logprob: -15.273248672485352
    8. '```' → logprob: -15.523248672485352
    9. '	W' → logprob: -16.64824867248535
    10. '
' → logprob: -16.89824867248535

Token 1160: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.073596548754722e-05
    2. ' +' → logprob: -10.12505054473877
    3. '):
' → logprob: -12.12505054473877
    4. '```' → logprob: -12.62505054473877
    5. '   ' → logprob: -14.25005054473877
    6. '):' → logprob: -14.50005054473877
    7. '
' → logprob: -15.12505054473877
    8. '       ' → logprob: -15.75005054473877
    9. '+
' → logprob: -15.75005054473877
    10. ')+' → logprob: -16.375051498413086

Token 1161: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21227550506591797
    2. '1' → logprob: -1.837275505065918
    3. '51' → logprob: -3.587275505065918
    4. '50' → logprob: -5.587275505065918
    5. 'W' → logprob: -7.712275505065918
    6. '```' → logprob: -10.087275505065918
    7. ' +' → logprob: -10.212275505065918
    8. ' ' → logprob: -11.462275505065918
    9. '0' → logprob: -11.837275505065918
    10. '61' → logprob: -12.087275505065918

Token 1162: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13943693041801453
    2. '):
' → logprob: -2.389436960220337
    3. '           ' → logprob: -3.764436960220337
    4. ':' → logprob: -4.264436721801758
    5. '       ' → logprob: -7.014436721801758
    6. '               ' → logprob: -9.389436721801758
    7. '):' → logprob: -9.514436721801758
    8. '   ' → logprob: -9.764436721801758
    9. '```' → logprob: -10.389436721801758
    10. '                   ' → logprob: -10.514436721801758

Token 1163: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02895372174680233
    2. '       ' → logprob: -3.653953790664673
    3. '```' → logprob: -6.278953552246094
    4. 'for' → logprob: -7.653953552246094
    5. '   ' → logprob: -9.153953552246094
    6. ':
' → logprob: -9.653953552246094
    7. ' for' → logprob: -9.903953552246094
    8. '               ' → logprob: -10.028953552246094
    9. '{
' → logprob: -11.778953552246094
    10. '                   ' → logprob: -12.028953552246094

Token 1164: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06031053140759468
    2. '           ' → logprob: -3.4353106021881104
    3. '       ' → logprob: -3.9353106021881104
    4. ' for' → logprob: -5.185310363769531
    5. '   ' → logprob: -7.435310363769531
    6. '```' → logprob: -7.560310363769531
    7. '               ' → logprob: -10.435310363769531
    8. ' ' → logprob: -11.560310363769531
    9. '	for' → logprob: -12.060310363769531
    10. '``' → logprob: -12.435310363769531

Token 1165: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07502755522727966
    2. ' x' → logprob: -2.7000274658203125
    3. 'X' → logprob: -5.4500274658203125
    4. '   ' → logprob: -8.075027465820312
    5. ' X' → logprob: -8.075027465820312
    6. ' ' → logprob: -10.325027465820312
    7. '           ' → logprob: -10.450027465820312
    8. '       ' → logprob: -10.700027465820312
    9. '```' → logprob: -11.075027465820312
    10. 'nx' → logprob: -11.325027465820312

Token 1166: '_used' (ID: 67016)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.015226345509290695
    2. '_used' → logprob: -4.390226364135742
    3. ' in' → logprob: -6.390226364135742
    4. 'used' → logprob: -7.015226364135742
    5. 'range' → logprob: -9.390226364135742
    6. '```' → logprob: -10.390226364135742
    7. 'x' → logprob: -11.890226364135742
    8. 'Used' → logprob: -12.015226364135742
    9. '_' → logprob: -13.140226364135742
    10. '
' → logprob: -13.265226364135742

Token 1167: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.575958788394928
    2. ' in' → logprob: -0.825958788394928
    3. '[' → logprob: -11.950959205627441
    4. 'range' → logprob: -12.075959205627441
    5. '```' → logprob: -13.075959205627441
    6. '           ' → logprob: -13.325959205627441
    7. '[in' → logprob: -14.200959205627441
    8. ' ' → logprob: -14.575959205627441
    9. '   ' → logprob: -14.825959205627441
    10. '0' → logprob: -15.075959205627441

Token 1168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000810340337920934
    2. ' range' → logprob: -7.250810146331787
    3. 'X' → logprob: -9.250810623168945
    4. '(X' → logprob: -12.875810623168945
    5. '(range' → logprob: -14.000810623168945
    6. '0' → logprob: -14.125810623168945
    7. '[X' → logprob: -16.125810623168945
    8. '   ' → logprob: -16.875810623168945
    9. 'for' → logprob: -17.875810623168945
    10. 'Range' → logprob: -18.375810623168945

Token 1169: '(X' (ID: 17061)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3873043656349182
    2. '(X' → logprob: -1.1373043060302734
    3. '0' → logprob: -7.887304306030273
    4. 'range' → logprob: -10.012304306030273
    5. '   ' → logprob: -12.012304306030273
    6. '[X' → logprob: -13.512304306030273
    7. '
' → logprob: -13.637304306030273
    8. ' X' → logprob: -13.887304306030273
    9. '           ' → logprob: -14.137304306030273
    10. '       ' → logprob: -14.387304306030273

Token 1170: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.128163257315464e-07
    2. ' +' → logprob: -16.375
    3. '+
' → logprob: -16.5
    4. '＋' → logprob: -17.125
    5. '```' → logprob: -17.5
    6. '
' → logprob: -18.125
    7. '):
' → logprob: -18.125
    8. '()+' → logprob: -18.75
    9. '+x' → logprob: -19.75
    10. '{
' → logprob: -20.125

Token 1171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. '+' → logprob: -11.25001335144043
    3. ' ' → logprob: -15.12501335144043
    4. '   ' → logprob: -16.00001335144043
    5. '
' → logprob: -16.75001335144043
    6. '```' → logprob: -17.12501335144043
    7. '0' → logprob: -17.87501335144043
    8. '       ' → logprob: -18.62501335144043
    9. ' +' → logprob: -19.00001335144043
    10. '           ' → logprob: -19.12501335144043

Token 1172: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.503797709941864
    2. '):
' → logprob: -1.2537977695465088
    3. ':' → logprob: -3.503797769546509
    4. '           ' → logprob: -3.628797769546509
    5. '               ' → logprob: -3.753797769546509
    6. '                       ' → logprob: -4.12879753112793
    7. '                   ' → logprob: -5.25379753112793
    8. '```' → logprob: -5.62879753112793
    9. '():
' → logprob: -6.62879753112793
    10. '{
' → logprob: -7.25379753112793

Token 1173: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012497993186116219
    2. '               ' → logprob: -4.512497901916504
    3. '```' → logprob: -7.387497901916504
    4. '                       ' → logprob: -8.387497901916504
    5. '                           ' → logprob: -8.387497901916504
    6. '                               ' → logprob: -9.012497901916504
    7. '                   ' → logprob: -9.262497901916504
    8. 'if' → logprob: -9.637497901916504
    9. '       ' → logprob: -10.262497901916504
    10. ' if' → logprob: -10.762497901916504

Token 1174: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.37939703464508057
    2. '                   ' → logprob: -1.2543970346450806
    3. '```' → logprob: -3.629396915435791
    4. ' if' → logprob: -5.754396915435791
    5. '                       ' → logprob: -8.00439739227295
    6. '``' → logprob: -8.12939739227295
    7. '                           ' → logprob: -10.25439739227295
    8. 'for' → logprob: -10.25439739227295
    9. 'ans' → logprob: -10.50439739227295
    10. '`' → logprob: -11.25439739227295

Token 1175: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014167038723826408
    2. ' max' → logprob: -4.264166831970215
    3. '                   ' → logprob: -12.764166831970215
    4. '               ' → logprob: -15.139166831970215
    5. '(max' → logprob: -15.639166831970215
    6. '           ' → logprob: -16.38916778564453
    7. '[max' → logprob: -16.76416778564453
    8. 'ans' → logprob: -17.38916778564453
    9. '   ' → logprob: -17.38916778564453
    10. ' ans' → logprob: -17.88916778564453

Token 1176: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -3.6312321753939614e-05
    2. '_prof' → logprob: -11.375036239624023
    3. 'profit' → logprob: -11.500036239624023
    4. 'Profit' → logprob: -12.375036239624023
    5. '_pro' → logprob: -12.625036239624023
    6. '_used' → logprob: -12.750036239624023
    7. '_prob' → logprob: -13.625036239624023
    8. '```' → logprob: -13.875036239624023
    9. '\' → logprob: -14.000036239624023
    10. '
' → logprob: -15.500036239624023

Token 1177: '[D' (ID: 159299)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020681671798229218
    2. '[D' → logprob: -3.895681619644165
    3. '[len' → logprob: -9.895681381225586
    4. '[-' → logprob: -10.895681381225586
    5. '               ' → logprob: -11.020681381225586
    6. '][' → logprob: -11.270681381225586
    7. '           ' → logprob: -12.020681381225586
    8. '                   ' → logprob: -12.020681381225586
    9. '(day' → logprob: -12.020681381225586
    10. '```' → logprob: -12.270681381225586

Token 1178: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001295222609769553
    2. '[w' → logprob: -9.375129699707031
    3. '[' → logprob: -10.500129699707031
    4. '               ' → logprob: -12.250129699707031
    5. '           ' → logprob: -12.500129699707031
    6. '```' → logprob: -13.000129699707031
    7. ']' → logprob: -13.250129699707031
    8. '                   ' → logprob: -13.875129699707031
    9. '   ' → logprob: -14.375129699707031
    10. ''][' → logprob: -14.750129699707031

Token 1179: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.723352049040841e-06
    2. 'W' → logprob: -12.500004768371582
    3. '
' → logprob: -14.875004768371582
    4. ' w' → logprob: -15.125004768371582
    5. '   ' → logprob: -16.500003814697266
    6. '<w' → logprob: -16.750003814697266
    7. '[w' → logprob: -16.750003814697266
    8. '```' → logprob: -17.500003814697266
    9. '0' → logprob: -17.625003814697266
    10. '	w' → logprob: -17.750003814697266

Token 1180: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.006082733627408743
    2. '][' → logprob: -5.756082534790039
    3. 'used' → logprob: -6.131082534790039
    4. 'w' → logprob: -7.506082534790039
    5. ']' → logprob: -9.881082534790039
    6. 'Used' → logprob: -10.506082534790039
    7. '_w' → logprob: -10.506082534790039
    8. '```' → logprob: -10.506082534790039
    9. '   ' → logprob: -11.381082534790039
    10. '_USED' → logprob: -11.631082534790039

Token 1181: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014764019288122654
    2. ']' → logprob: -4.264763832092285
    3. ']<' → logprob: -7.764763832092285
    4. ']>' → logprob: -9.139763832092285
    5. ']>=' → logprob: -11.014763832092285
    6. ']==' → logprob: -11.389763832092285
    7. ']!=' → logprob: -11.514763832092285
    8. '```' → logprob: -12.264763832092285
    9. ']][' → logprob: -12.764763832092285
    10. '][-' → logprob: -12.889763832092285

Token 1182: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. ' x' → logprob: -14.75
    3. '```' → logprob: -18.875
    4. '{x' → logprob: -19.0
    5. '   ' → logprob: -19.375
    6. '][' → logprob: -19.5
    7. ']' → logprob: -19.75
    8. '(x' → logprob: -19.875
    9. '0' → logprob: -20.0
    10. '
' → logprob: -20.25

Token 1183: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.022814324125647545
    2. ']' → logprob: -4.2728142738342285
    3. 'used' → logprob: -5.0228142738342285
    4. 'Used' → logprob: -6.7728142738342285
    5. ']<' → logprob: -8.772814750671387
    6. '_USED' → logprob: -9.022814750671387
    7. 'x' → logprob: -9.147814750671387
    8. '```' → logprob: -9.397814750671387
    9. '][' → logprob: -9.522814750671387
    10. 'USED' → logprob: -9.772814750671387

Token 1184: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.337731271982193
    2. ']>' → logprob: -1.3377312421798706
    3. ']==' → logprob: -4.08773136138916
    4. ']!=' → logprob: -5.83773136138916
    5. ']>=' → logprob: -5.83773136138916
    6. ']<' → logprob: -7.21273136138916
    7. '```' → logprob: -7.96273136138916
    8. '>' → logprob: -8.21273136138916
    9. ']>
' → logprob: -9.33773136138916
    10. ']=='' → logprob: -11.08773136138916

Token 1185: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5817534923553467
    2. '>' → logprob: -1.0817534923553467
    3. '```' → logprob: -2.7067534923553467
    4. '<int' → logprob: -4.581753730773926
    5. ' <' → logprob: -5.081753730773926
    6. '==' → logprob: -5.206753730773926
    7. ' >' → logprob: -6.081753730773926
    8. ' ==' → logprob: -6.706753730773926
    9. '<|end|>' → logprob: -6.706753730773926
    10. '>=' → logprob: -7.206753730773926

Token 1186: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16460345685482025
    2. ' ans' → logprob: -1.9146034717559814
    3. '0' → logprob: -5.539603233337402
    4. '=' → logprob: -8.039603233337402
    5. '(ans' → logprob: -9.664603233337402
    6. '           ' → logprob: -11.164603233337402
    7. '	ans' → logprob: -11.164603233337402
    8. '   ' → logprob: -12.164603233337402
    9. ' ' → logprob: -12.289603233337402
    10. '       ' → logprob: -12.289603233337402

Token 1187: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3794091045856476
    2. ':
' → logprob: -2.254409074783325
    3. '                       ' → logprob: -2.879409074783325
    4. ':' → logprob: -3.254409074783325
    5. '                           ' → logprob: -3.254409074783325
    6. '=' → logprob: -3.754409074783325
    7. '                               ' → logprob: -4.254409313201904
    8. '```' → logprob: -4.254409313201904
    9. '               ' → logprob: -4.754409313201904
    10. '                                   ' → logprob: -5.004409313201904

Token 1188: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26729458570480347
    2. 'ans' → logprob: -1.7672946453094482
    3. '=' → logprob: -3.5172946453094482
    4. ' ans' → logprob: -4.517294406890869
    5. '                       ' → logprob: -4.767294406890869
    6. '```' → logprob: -5.392294406890869
    7. '               ' → logprob: -5.892294406890869
    8. '                           ' → logprob: -6.267294406890869
    9. '(ans' → logprob: -6.267294406890869
    10. '                               ' → logprob: -6.642294406890869

Token 1189: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -6.134509021649137e-05
    2. '                   ' → logprob: -10.37506103515625
    3. ' ans' → logprob: -10.62506103515625
    4. '_ans' → logprob: -13.37506103515625
    5. '	ans' → logprob: -13.75006103515625
    6. '```' → logprob: -14.12506103515625
    7. '               ' → logprob: -14.25006103515625
    8. '(ans' → logprob: -14.50006103515625
    9. '                           ' → logprob: -14.75006103515625
    10. '                       ' → logprob: -14.87506103515625

Token 1190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003022153687197715
    2. ' =' → logprob: -8.1253023147583
    3. '=
' → logprob: -12.2503023147583
    4. '+=' → logprob: -15.1253023147583
    5. '＝' → logprob: -15.1253023147583
    6. '.=' → logprob: -15.8753023147583
    7. '=

' → logprob: -15.8753023147583
    8. '=int' → logprob: -16.250301361083984
    9. '<|end|>' → logprob: -16.625301361083984
    10. '=max' → logprob: -16.625301361083984

Token 1191: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005233882926404476
    2. ' max' → logprob: -5.2552337646484375
    3. '   ' → logprob: -18.255233764648438
    4. '	max' → logprob: -18.380233764648438
    5. '```' → logprob: -18.755233764648438
    6. '(max' → logprob: -19.505233764648438
    7. '                   ' → logprob: -19.755233764648438
    8. '           ' → logprob: -20.130233764648438
    9. '[max' → logprob: -20.630233764648438
    10. '               ' → logprob: -20.755233764648438

Token 1192: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.00010640407708706334
    2. 'profit' → logprob: -9.250106811523438
    3. 'Profit' → logprob: -11.875106811523438
    4. 'max' → logprob: -13.875106811523438
    5. '_prob' → logprob: -14.125106811523438
    6. '_prof' → logprob: -14.875106811523438
    7. '_' → logprob: -15.000106811523438
    8. ' profit' → logprob: -15.375106811523438
    9. '[max' → logprob: -15.375106811523438
    10. '_pro' → logprob: -15.500106811523438

Token 1193: '[D' (ID: 159299)
  Prédit: '[D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -2.045823566731997e-05
    2. 'D' → logprob: -11.000020027160645
    3. '[' → logprob: -13.375020027160645
    4. '```' → logprob: -13.500020027160645
    5. '"D' → logprob: -15.875020027160645
    6. '           ' → logprob: -16.00002098083496
    7. '   ' → logprob: -16.37502098083496
    8. '=D' → logprob: -16.50002098083496
    9. '][' → logprob: -17.25002098083496
    10. '<D' → logprob: -17.25002098083496

Token 1194: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.264322317088954e-05
    2. '[D' → logprob: -10.375052452087402
    3. '[' → logprob: -11.375052452087402
    4. ']' → logprob: -12.750052452087402
    5. '[w' → logprob: -13.375052452087402
    6. ' ][' → logprob: -13.625052452087402
    7. '           ' → logprob: -14.000052452087402
    8. '   ' → logprob: -14.125052452087402
    9. 'w' → logprob: -14.500052452087402
    10. '[d' → logprob: -15.250052452087402

Token 1195: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0003436872211750597
    2. 'x' → logprob: -8.000343322753906
    3. '```' → logprob: -13.125343322753906
    4. 'used' → logprob: -13.375343322753906
    5. '[w' → logprob: -13.375343322753906
    6. '][' → logprob: -14.250343322753906
    7. '
' → logprob: -14.375343322753906
    8. 'W' → logprob: -14.500343322753906
    9. '   ' → logprob: -15.375343322753906
    10. '0' → logprob: -15.500343322753906

Token 1196: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.015567838214337826
    2. 'used' → logprob: -4.265567779541016
    3. 'Used' → logprob: -7.140567779541016
    4. '```' → logprob: -8.140567779541016
    5. '][' → logprob: -9.140567779541016
    6. '
' → logprob: -9.765567779541016
    7. '[' → logprob: -10.015567779541016
    8. '   ' → logprob: -10.140567779541016
    9. '_USED' → logprob: -10.390567779541016
    10. ']' → logprob: -11.515567779541016

Token 1197: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011450992315076292
    2. '[w' → logprob: -9.375114440917969
    3. ']' → logprob: -11.500114440917969
    4. 'w' → logprob: -12.625114440917969
    5. '```' → logprob: -12.625114440917969
    6. '[' → logprob: -12.875114440917969
    7. '[n' → logprob: -13.000114440917969
    8. '           ' → logprob: -13.375114440917969
    9. ' ][' → logprob: -13.875114440917969
    10. '       ' → logprob: -14.250114440917969

Token 1198: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1472419600977446e-06
    2. ' x' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '
' → logprob: -16.125001907348633
    5. '[x' → logprob: -16.875001907348633
    6. '           ' → logprob: -17.625001907348633
    7. '               ' → logprob: -17.875001907348633
    8. '                   ' → logprob: -18.000001907348633
    9. '       ' → logprob: -18.250001907348633
    10. '     ' → logprob: -18.625001907348633

Token 1199: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0006656142068095505
    2. 'used' → logprob: -7.375665664672852
    3. '][' → logprob: -11.500665664672852
    4. '```' → logprob: -12.000665664672852
    5. 'ed' → logprob: -12.125665664672852
    6. '   ' → logprob: -12.250665664672852
    7. 'Used' → logprob: -12.375665664672852
    8. ']' → logprob: -13.125665664672852
    9. ']_' → logprob: -14.125665664672852
    10. 'USED' → logprob: -14.250665664672852

Token 1200: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15902990102767944
    2. '               ' → logprob: -2.034029960632324
    3. ')' → logprob: -5.034029960632324
    4. '                   ' → logprob: -5.409029960632324
    5. '                       ' → logprob: -7.034029960632324
    6. ')]' → logprob: -7.034029960632324
    7. '           ' → logprob: -7.159029960632324
    8. ']
' → logprob: -7.284029960632324
    9. ']+' → logprob: -7.659029960632324
    10. '])' → logprob: -7.784029960632324

Token 1201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006569602992385626
    2. '   ' → logprob: -6.0065693855285645
    3. '           ' → logprob: -6.8815693855285645
    4. ')' → logprob: -7.0065693855285645
    5. '<|end|>' → logprob: -7.6315693855285645
    6. '               ' → logprob: -7.8815693855285645
    7. '
' → logprob: -8.256569862365723
    8. 'print' → logprob: -8.756569862365723
    9. '```' → logprob: -9.006569862365723
    10. '        
' → logprob: -9.381569862365723

Token 1202: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07638181746006012
    2. 'print' (adapté à ' print') → logprob: -2.8263819217681885
    3. '   ' → logprob: -4.326381683349609
    4. '```' → logprob: -7.576381683349609
    5. 'return' → logprob: -7.951381683349609
    6. '\' → logprob: -9.82638168334961
    7. '<|end|>' → logprob: -10.07638168334961
    8. ' print' → logprob: -10.07638168334961
    9. '``' → logprob: -10.45138168334961
    10. '`' → logprob: -11.32638168334961

Token 1203: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0010560338851064444
    2. 'ans' → logprob: -6.87605619430542
    3. '(' → logprob: -11.376055717468262
    4. '()' → logprob: -11.751055717468262
    5. '('' → logprob: -13.626055717468262
    6. ' ans' → logprob: -14.126055717468262
    7. '	ans' → logprob: -14.626055717468262
    8. ' (' → logprob: -15.126055717468262
    9. '_ans' → logprob: -15.626055717468262
    10. '   ' → logprob: -15.751055717468262

Token 1204: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.613945101387799e-05
    2. '())' → logprob: -10.375085830688477
    3. '()' → logprob: -10.750085830688477
    4. ')
' → logprob: -11.125085830688477
    5. '   ' → logprob: -11.625085830688477
    6. '`)' → logprob: -13.125085830688477
    7. '       ' → logprob: -13.250085830688477
    8. '```' → logprob: -13.625085830688477
    9. '<|end|>' → logprob: -13.875085830688477
    10. '')' → logprob: -14.375085830688477

Token 1205: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1206: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0015054593095555902
    2. '__' → logprob: -6.626505374908447
    3. ' main' → logprob: -8.876505851745605
    4. ' _' → logprob: -11.251505851745605
    5. ' ' → logprob: -11.876505851745605
    6. ' ' → logprob: -12.251505851745605
    7. 'main' → logprob: -12.376505851745605
    8. '_' → logprob: -13.126505851745605
    9. ''' → logprob: -13.626505851745605
    10. '_main' → logprob: -13.626505851745605

Token 1207: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011303281411528587
    2. '```' → logprob: -5.386303424835205
    3. '__.__' → logprob: -6.511303424835205
    4. '__.' → logprob: -6.636303424835205
    5. '__":
' → logprob: -7.261303424835205
    6. '__':
' → logprob: -7.511303424835205
    7. '().__' → logprob: -7.636303424835205
    8. '__
' → logprob: -8.011302947998047
    9. '.__' → logprob: -8.136302947998047
    10. '()' → logprob: -8.261302947998047

Token 1208: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029224453028291464
    2. '__.__' → logprob: -6.002922534942627
    3. '__.' → logprob: -8.377922058105469
    4. '```' → logprob: -8.627922058105469
    5. '__["' → logprob: -11.127922058105469
    6. '__
' → logprob: -12.502922058105469
    7. '=="' → logprob: -12.627922058105469
    8. '___' → logprob: -12.627922058105469
    9. '==' → logprob: -13.002922058105469
    10. '__":
' → logprob: -13.252922058105469

Token 1209: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07870381325483322
    2. '==' → logprob: -2.7037038803100586
    3. ' ==' → logprob: -5.578703880310059
    4. '=="' → logprob: -6.078703880310059
    5. '=='' → logprob: -6.453703880310059
    6. '```' → logprob: -7.703703880310059
    7. '__.__' → logprob: -8.078703880310059
    8. '_' → logprob: -9.953703880310059
    9. '__":
' → logprob: -10.453703880310059
    10. '__["' → logprob: -10.828703880310059

Token 1210: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07890807837247849
    2. ''' → logprob: -2.5789079666137695
    3. '__' → logprob: -11.20390796661377
    4. ' "__' → logprob: -13.20390796661377
    5. ''"' → logprob: -13.70390796661377
    6. '   ' → logprob: -15.57890796661377
    7. '"user' → logprob: -15.57890796661377
    8. ' '__' → logprob: -15.82890796661377
    9. ''s' → logprob: -15.82890796661377
    10. ''m' → logprob: -15.95390796661377

Token 1211: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.018362510949373245
    2. '__' → logprob: -4.143362522125244
    3. '"' → logprob: -6.643362522125244
    4. 'name' → logprob: -7.018362522125244
    5. '__":
' → logprob: -10.268362045288086
    6. ''' → logprob: -10.643362045288086
    7. '```' → logprob: -11.018362045288086
    8. 'python' → logprob: -11.143362045288086
    9. 'built' → logprob: -11.143362045288086
    10. '"name' → logprob: -12.518362045288086

Token 1212: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04031436890363693
    2. '__' → logprob: -3.4153144359588623
    3. '__':
' → logprob: -5.040314197540283
    4. '__["' → logprob: -9.540314674377441
    5. '__.' → logprob: -10.165314674377441
    6. '__.__' → logprob: -10.915314674377441
    7. '():
' → logprob: -11.415314674377441
    8. '__()
' → logprob: -11.790314674377441
    9. '__
' → logprob: -12.040314674377441
    10. '__:' → logprob: -12.290314674377441

Token 1213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31443291902542114
    2. 'main' → logprob: -1.3144328594207764
    3. '```' → logprob: -7.3144330978393555
    4. '	main' → logprob: -8.064433097839355
    5. '(main' → logprob: -9.689433097839355
    6. '    
' → logprob: -10.189433097839355
    7. '_main' → logprob: -10.314433097839355
    8. '__' → logprob: -11.189433097839355
    9. ' main' → logprob: -11.189433097839355
    10. '``' → logprob: -11.814433097839355

Token 1214: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. 'import' → logprob: -19.25
    4. '	main' → logprob: -20.25
    5. '   ' → logprob: -21.0
    6. '_main' → logprob: -23.75
    7. '(main' → logprob: -24.125
    8. '.main' → logprob: -25.0
    9. 'from' → logprob: -27.25
    10. '```' → logprob: -27.625

Token 1215: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1213
Tokens correctement prédits (1ère position, stricte): 409
Tokens correctement prédits (1ère position, avec adaptation): 434
Tokens correctement prédits (top 10): 846
Précision stricte (1ère position): 33.72%
Précision adaptée (1ère position): 35.78%
Précision (top 10): 69.74%
================================================================================
