================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
input=sys.stdin.readline

while True:
    n=int(input())
    if n==0:
        break
    stickers=[tuple(map(float,input().strip().split(','))) for _ in range(n)]
    adj=[[] for _ in range(n)]
    for i in range(n):
        x1,y1=stickers[i]
        for j in range(i+1,n):
            x2,y2=stickers[j]
            dx=x1-x2
            dy=y1-y2
            dist_sq=dx*dx+dy*dy
            # distance <=2 means overlap or touching
            if dist_sq<=4+1e-14:
                adj[i].append(j)
                adj[j].append(i)
    visited=[False]*n
    ans=0
    def dfs(u):
        stack=[u]
        count=0
        visited[u]=True
        while stack:
            cur=stack.pop()
            count+=1
            for nxt in adj[cur]:
                if not visited[nxt]:
                    visited[nxt]=True
                    stack.append(nxt)
        return count
    for i in range(n):
        if not visited[i]:
            ans=max(ans,dfs(i))
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023321842309087515
    2. 'os' → logprob: -8.37523365020752
    3. ' math' → logprob: -13.87523365020752
    4. ' re' → logprob: -14.37523365020752
    5. '"os' → logprob: -14.87523365020752
    6. ' json' → logprob: -15.12523365020752
    7. '_os' → logprob: -15.87523365020752
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -16.750232696533203
    10. ' ' → logprob: -17.000232696533203

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4571419656276703
    2. '\n' → logprob: -1.8321419954299927
    3. '\' → logprob: -2.332141876220703
    4. 'import' → logprob: -3.082141876220703
    5. '```' → logprob: -3.832141876220703
    6. '
' → logprob: -4.207141876220703
    7. '<|end|>' → logprob: -4.207141876220703
    8. ',' → logprob: -5.707141876220703
    9. '

' → logprob: -5.832141876220703
    10. '<|end|>' → logprob: -6.582141876220703

Token 6: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.458339810371399
    2. '\n' → logprob: -1.458339810371399
    3. '.' → logprob: -1.583339810371399
    4. 'import' → logprob: -2.2083396911621094
    5. '

' → logprob: -2.3333396911621094
    6. '\' → logprob: -2.9583396911621094
    7. '```' → logprob: -3.2083396911621094
    8. '<|end|>' → logprob: -5.083339691162109
    9. ',' → logprob: -5.458339691162109
    10. '' → logprob: -5.583339691162109

Token 7: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04879969358444214
    2. '.' → logprob: -3.048799753189087
    3. '()' → logprob: -9.923799514770508
    4. ' (' → logprob: -10.423799514770508
    5. '```' → logprob: -10.423799514770508
    6. ')' → logprob: -10.548799514770508
    7. '(.)' → logprob: -11.173799514770508
    8. '(
' → logprob: -11.298799514770508
    9. '[' → logprob: -11.798799514770508
    10. '('' → logprob: -12.298799514770508

Token 8: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00035751116229221225
    2. '[' → logprob: -8.000357627868652
    3. '.
' → logprob: -12.250357627868652
    4. ' .' → logprob: -12.375357627868652
    5. '.readline' → logprob: -12.750357627868652
    6. '['' → logprob: -12.875357627868652
    7. '[
' → logprob: -13.625357627868652
    8. '.[' → logprob: -14.000357627868652
    9. '.]' → logprob: -14.250357627868652
    10. '.

' → logprob: -14.375357627868652

Token 9: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2831270098686218
    2. '.readline' → logprob: -1.4081270694732666
    3. '.read' → logprob: -6.2831268310546875
    4. 'read' → logprob: -11.033126831054688
    5. '.readlines' → logprob: -11.158126831054688
    6. '.Read' → logprob: -11.158126831054688
    7. '```' → logprob: -11.783126831054688
    8. '.​' → logprob: -11.908126831054688
    9. ' readline' → logprob: -12.283126831054688
    10. '[' → logprob: -12.658126831054688

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07091513276100159
    2. '(
' → logprob: -2.9459152221679688
    3. '()' → logprob: -4.445915222167969
    4. '(

' → logprob: -6.195915222167969
    5. '
' → logprob: -7.445915222167969
    6. ' (' → logprob: -7.945915222167969
    7. '\(' → logprob: -8.820915222167969
    8. ''s' → logprob: -9.070915222167969
    9. '()
' → logprob: -9.195915222167969
    10. '.' → logprob: -9.320915222167969

Token 11: 'while' (ID: 7032)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038733139634132385
    2. '()' → logprob: -3.2887332439422607
    3. '(
' → logprob: -7.538733005523682
    4. ')' → logprob: -10.41373348236084
    5. '()
' → logprob: -10.53873348236084
    6. ',' → logprob: -11.41373348236084
    7. ' (' → logprob: -11.53873348236084
    8. '\(' → logprob: -11.53873348236084
    9. 'def' → logprob: -11.66373348236084
    10. '().' → logprob: -11.66373348236084

Token 12: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0021275414619594812
    2. '  ' → logprob: -7.002127647399902
    3. ' True' → logprob: -7.627127647399902
    4. ' (' → logprob: -8.252127647399902
    5. ' not' → logprob: -9.377127647399902
    6. '(' → logprob: -9.377127647399902
    7. ''' → logprob: -9.377127647399902
    8. '"' → logprob: -9.627127647399902
    9. ' )' → logprob: -10.002127647399902
    10. ' space' → logprob: -10.502127647399902

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0077981408685445786
    2. '():' → logprob: -4.882798194885254
    3. '(:' → logprob: -10.007798194885254
    4. ' :' → logprob: -10.007798194885254
    5. ':**' → logprob: -10.507798194885254
    6. '):' → logprob: -10.882798194885254
    7. ':
' → logprob: -11.382798194885254
    8. '   ' → logprob: -11.632798194885254
    9. '(' → logprob: -12.507798194885254
    10. ' ():' → logprob: -12.757798194885254

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04232935234904289
    2. ':' → logprob: -3.7923293113708496
    3. '    
' → logprob: -5.04232931137085
    4. ' ' → logprob: -5.66732931137085
    5. '():' → logprob: -6.41732931137085
    6. '    ' → logprob: -6.54232931137085
    7. '  
' → logprob: -6.66732931137085
    8. ' 
' → logprob: -6.91732931137085
    9. '(' → logprob: -7.29232931137085
    10. '):' → logprob: -7.54232931137085

Token 15: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4480035901069641
    2. 'line' → logprob: -1.5730035305023193
    3. ' line' → logprob: -1.9480035305023193
    4. 'data' → logprob: -5.823003768920898
    5. 'user' → logprob: -6.198003768920898
    6. 'try' → logprob: -6.448003768920898
    7. 'n' (adapté à ' n') → logprob: -7.198003768920898
    8. '    ' → logprob: -7.698003768920898
    9. 's' → logprob: -7.698003768920898
    10. ' try' → logprob: -7.823003768920898

Token 16: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25837692618370056
    2. '=' → logprob: -1.508376955986023
    3. ' ==' → logprob: -5.2583770751953125
    4. ' ' → logprob: -7.5083770751953125
    5. '=int' → logprob: -8.508377075195312
    6. ' >' → logprob: -8.883377075195312
    7. '==' → logprob: -9.258377075195312
    8. '=input' → logprob: -9.508377075195312
    9. '>' → logprob: -9.758377075195312
    10. ' =)' → logprob: -10.508377075195312

Token 17: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0011828463757410645
    2. '(' → logprob: -6.751183032989502
    3. 'input' → logprob: -11.626182556152344
    4. '(sys' → logprob: -12.751182556152344
    5. ' (' → logprob: -15.501182556152344
    6. '=input' → logprob: -16.001182556152344
    7. '()' → logprob: -16.001182556152344
    8. '(in' → logprob: -16.501182556152344
    9. '(
' → logprob: -16.626182556152344
    10. ' input' → logprob: -17.001182556152344

Token 18: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012460665311664343
    2. '()' → logprob: -6.751245975494385
    3. '()))' → logprob: -10.001246452331543
    4. '())
' → logprob: -11.626246452331543
    5. ')' → logprob: -11.876246452331543
    6. ' ())' → logprob: -12.001246452331543
    7. '().' → logprob: -12.126246452331543
    8. '(' → logprob: -13.126246452331543
    9. '())

' → logprob: -15.001246452331543
    10. '()),' → logprob: -15.501246452331543

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1455083191394806
    2. ' ' → logprob: -2.520508289337158
    3. ' if' → logprob: -3.645508289337158
    4. '    ' → logprob: -4.395508289337158
    5. '  ' → logprob: -5.520508289337158
    6. '<|end|>' → logprob: -5.770508289337158
    7. '    
' → logprob: -6.020508289337158
    8. '\n' → logprob: -6.520508289337158
    9. ')' → logprob: -6.770508289337158
    10. ' 
' → logprob: -6.895508289337158

Token 20: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.039346493780612946
    2. ' not' → logprob: -3.28934645652771
    3. 'n' → logprob: -6.664346694946289
    4. 'not' → logprob: -10.539346694946289
    5. ' ' → logprob: -13.414346694946289
    6. '	n' → logprob: -14.539346694946289
    7. ' ' → logprob: -16.03934669494629
    8. '	not' → logprob: -17.16434669494629
    9. ' н' → logprob: -17.41434669494629
    10. ' n't' → logprob: -17.66434669494629

Token 22: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34864383935928345
    2. '==' → logprob: -1.2236437797546387
    3. '<' → logprob: -9.848644256591797
    4. '()==' → logprob: -9.973644256591797
    5. ' <' → logprob: -10.848644256591797
    6. '<=' → logprob: -10.848644256591797
    7. ' <=' → logprob: -11.098644256591797
    8. '=' → logprob: -11.223644256591797
    9. ')==' → logprob: -11.223644256591797
    10. ' ' → logprob: -11.973644256591797

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25193020701408386
    2. ' ' → logprob: -1.5019302368164062
    3. '=' → logprob: -15.876930236816406
    4. '   ' → logprob: -15.876930236816406
    5. '  ' → logprob: -16.001930236816406
    6. '-' → logprob: -16.251930236816406
    7. ')' → logprob: -16.376930236816406
    8. ' ' → logprob: -16.626930236816406
    9. '    ' → logprob: -16.626930236816406
    10. '```' → logprob: -16.814430236816406

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023875413462519646
    2. '   ' → logprob: -6.627387523651123
    3. ':
' → logprob: -7.002387523651123
    4. '       ' → logprob: -9.627388000488281
    5. ' :' → logprob: -9.627388000488281
    6. '	break' → logprob: -12.127388000488281
    7. '    ' → logprob: -12.127388000488281
    8. ' break' → logprob: -12.752388000488281
    9. ':return' → logprob: -13.627388000488281
    10. ' :
' → logprob: -14.127388000488281

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004655356984585524
    2. '   ' → logprob: -5.379655361175537
    3. '	break' → logprob: -11.629654884338379
    4. ' break' → logprob: -11.754654884338379
    5. '    ' → logprob: -12.379654884338379
    6. '     ' → logprob: -13.004654884338379
    7. '	' → logprob: -13.129654884338379
    8. '      ' → logprob: -13.254654884338379
    9. 'break' → logprob: -13.254654884338379
    10. ' ' → logprob: -14.004654884338379

Token 26: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.24380113184452057
    2. '   ' → logprob: -2.4938011169433594
    3. '       ' → logprob: -2.4938011169433594
    4. 'break' (adapté à ' break') → logprob: -2.9938011169433594
    5. '	break' → logprob: -6.868801116943359
    6. '_break' → logprob: -11.99380111694336
    7. '    ' → logprob: -12.24380111694336
    8. '           ' → logprob: -12.49380111694336
    9. ' ' → logprob: -12.61880111694336
    10. '```' → logprob: -13.11880111694336

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2019454389810562
    2. '<|end|>' → logprob: -2.4519455432891846
    3. '    
' → logprob: -3.4519455432891846
    4. '
' → logprob: -3.8269455432891846
    5. ':' → logprob: -4.0769453048706055
    6. '\n' → logprob: -4.7019453048706055
    7. ')' → logprob: -4.9519453048706055
    8. '  
' → logprob: -6.2019453048706055
    9. '<|end|>' → logprob: -6.2019453048706055
    10. '```' → logprob: -6.7019453048706055

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011975264176726341
    2. '    
' → logprob: -4.511975288391113
    3. '```' → logprob: -8.261975288391113
    4. '<|end|>' → logprob: -8.386975288391113
    5. '    ' → logprob: -8.636975288391113
    6. '  
' → logprob: -10.261975288391113
    7. 'print' → logprob: -10.636975288391113
    8. '   
' → logprob: -10.886975288391113
    9. '[' → logprob: -10.886975288391113
    10. '    
    
' → logprob: -10.886975288391113

Token 29: ' stickers' (ID: 65244)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028229085728526115
    2. '    ' → logprob: -5.153229236602783
    3. 'n' → logprob: -5.528229236602783
    4. 'result' → logprob: -5.528229236602783
    5. 's' → logprob: -5.778229236602783
    6. '    
' → logprob: -5.903229236602783
    7. 'a' → logprob: -6.528229236602783
    8. 'sum' → logprob: -6.903229236602783
    9. 'data' → logprob: -7.653229236602783
    10. ')' → logprob: -7.903229236602783

Token 30: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47528114914894104
    2. '=' → logprob: -0.9752811193466187
    3. '=[]' → logprob: -7.725281238555908
    4. ' ' → logprob: -7.850281238555908
    5. ' =[' → logprob: -9.85028076171875
    6. '   ' → logprob: -9.97528076171875
    7. '_' → logprob: -9.97528076171875
    8. '_count' → logprob: -10.22528076171875
    9. '=input' → logprob: -10.35028076171875
    10. '=int' → logprob: -10.60028076171875

Token 31: 'tuple' (ID: 52834)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01914847083389759
    2. 'list' → logprob: -4.394148349761963
    3. ' int' → logprob: -5.894148349761963
    4. '*' → logprob: -6.394148349761963
    5. '0' → logprob: -6.519148349761963
    6. 'map' → logprob: -8.394148826599121
    7. 'tuple' → logprob: -9.519148826599121
    8. '(int' → logprob: -9.644148826599121
    9. '[int' → logprob: -9.644148826599121
    10. ']int' → logprob: -9.644148826599121

Token 32: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0003461905289441347
    2. 'map' → logprob: -8.625346183776855
    3. '(input' → logprob: -9.750346183776855
    4. '(int' → logprob: -9.750346183776855
    5. '(' → logprob: -10.000346183776855
    6. ' map' → logprob: -13.125346183776855
    7. '(list' → logprob: -14.000346183776855
    8. 'input' → logprob: -14.500346183776855
    9. '()' → logprob: -15.125346183776855
    10. '(sorted' → logprob: -15.250346183776855

Token 33: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000581388536375016
    2. 'int' → logprob: -9.000581741333008
    3. ',int' → logprob: -9.000581741333008
    4. '(lambda' → logprob: -9.000581741333008
    5. '<|end|>' → logprob: -9.875581741333008
    6. ')' → logprob: -10.000581741333008
    7. '(str' → logprob: -10.125581741333008
    8. '[int' → logprob: -10.875581741333008
    9. '(' → logprob: -11.125581741333008
    10. '<int' → logprob: -11.625581741333008

Token 34: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.062132932245731354
    2. ',' → logprob: -2.8121328353881836
    3. ',int' → logprob: -9.687132835388184
    4. '(input' → logprob: -9.812132835388184
    5. ' ,' → logprob: -10.687132835388184
    6. 'input' → logprob: -11.687132835388184
    7. ',float' → logprob: -12.062132835388184
    8. ',x' → logprob: -12.687132835388184
    9. ',line' → logprob: -12.812132835388184
    10. '(' → logprob: -13.187132835388184

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -13.875000953674316
    3. ' ().' → logprob: -16.875001907348633
    4. '.split' → logprob: -17.375001907348633
    5. '()))' → logprob: -17.375001907348633
    6. '.' → logprob: -17.750001907348633
    7. '.readline' → logprob: -17.875001907348633
    8. '.strip' → logprob: -18.625001907348633
    9. 'split' → logprob: -19.375001907348633
    10. '()
' → logprob: -19.875001907348633

Token 36: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10628484934568405
    2. 'strip' → logprob: -2.3562848567962646
    3. 'rstrip' → logprob: -5.1062846183776855
    4. 's' → logprob: -14.731285095214844
    5. 'read' → logprob: -15.106285095214844
    6. ' split' → logprob: -15.981285095214844
    7. ')' → logprob: -16.106285095214844
    8. '(split' → logprob: -16.356285095214844
    9. 'replace' → logprob: -16.356285095214844
    10. 'plit' → logprob: -16.731285095214844

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -15.375000953674316
    3. ' ().' → logprob: -15.500000953674316
    4. '.split' → logprob: -16.5
    5. 'split' → logprob: -18.5
    6. '()
' → logprob: -19.0
    7. '('').' → logprob: -19.125
    8. '('' → logprob: -19.75
    9. '   ' → logprob: -20.0
    10. '().'' → logprob: -20.125

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.292907877039397e-06
    2. ' split' → logprob: -13.50000286102295
    3. 'rstrip' → logprob: -13.50000286102295
    4. '(split' → logprob: -15.50000286102295
    5. 'strip' → logprob: -16.500003814697266
    6. 'spl' → logprob: -17.125003814697266
    7. '.split' → logprob: -17.500003814697266
    8. 's' → logprob: -18.125003814697266
    9. 'rs' → logprob: -18.125003814697266
    10. 'sp' → logprob: -18.250003814697266

Token 39: '(','' (ID: 170650)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.018410377204418182
    2. '))' → logprob: -4.5184102058410645
    3. '())))' → logprob: -6.1434102058410645
    4. '()' → logprob: -6.2684102058410645
    5. '())' → logprob: -7.1434102058410645
    6. '(' → logprob: -7.2684102058410645
    7. '('' → logprob: -7.3934102058410645
    8. '(','' → logprob: -7.7684102058410645
    9. ''))' → logprob: -8.018410682678223
    10. ')))' → logprob: -8.518410682678223

Token 40: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0016888661775738
    2. '))' → logprob: -6.8766889572143555
    3. ')' → logprob: -8.376688957214355
    4. '')))' → logprob: -8.376688957214355
    5. ')))
' → logprob: -8.751688957214355
    6. '))))' → logprob: -11.376688957214355
    7. ' ' → logprob: -11.751688957214355
    8. ')))

' → logprob: -12.251688957214355
    9. ')));' → logprob: -12.626688957214355
    10. ''))' → logprob: -13.251688957214355

Token 41: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9906302094459534
    2. ')]' → logprob: -1.1156301498413086
    3. ')' → logprob: -1.2406301498413086
    4. '   ' → logprob: -4.615630149841309
    5. ' for' → logprob: -7.490630149841309
    6. '])' → logprob: -8.240630149841309
    7. ' )' → logprob: -8.865630149841309
    8. ' ]' → logprob: -8.990630149841309
    9. '),' → logprob: -9.115630149841309
    10. ')])' → logprob: -9.240630149841309

Token 42: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2567156255245209
    2. '_' → logprob: -1.8817156553268433
    3. ' range' → logprob: -2.7567155361175537
    4. 'range' → logprob: -4.631715774536133
    5. '_range' → logprob: -7.631715774536133
    6. ' ' → logprob: -8.381715774536133
    7. ' in' → logprob: -9.631715774536133
    8. ' i' → logprob: -10.256715774536133
    9. '	range' → logprob: -12.006715774536133
    10. 'i' → logprob: -12.381715774536133

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017371051013469696
    2. 'in' → logprob: -4.51737117767334
    3. 'range' → logprob: -5.14237117767334
    4. ' range' → logprob: -8.14237117767334
    5. ' ' → logprob: -8.76737117767334
    6. '  ' → logprob: -12.01737117767334
    7. 'i' → logprob: -13.01737117767334
    8. 'n' → logprob: -14.26737117767334
    9. ' i' → logprob: -14.26737117767334
    10. '   ' → logprob: -14.51737117767334

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010369796073064208
    2. ' range' → logprob: -6.876037120819092
    3. '[' → logprob: -13.251036643981934
    4. 'rang' → logprob: -14.751036643981934
    5. '(range' → logprob: -14.751036643981934
    6. ' ' → logprob: -14.876036643981934
    7. 'r' → logprob: -15.126036643981934
    8. '	range' → logprob: -15.251036643981934
    9. '   ' → logprob: -15.626036643981934
    10. '  ' → logprob: -16.12603759765625

Token 45: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.537180211627856e-05
    2. '(' → logprob: -10.500045776367188
    3. 'n' → logprob: -11.000045776367188
    4. ' (' → logprob: -14.375045776367188
    5. ' n' → logprob: -14.750045776367188
    6. ')n' → logprob: -17.000045776367188
    7. ',n' → logprob: -18.625045776367188
    8. ')' → logprob: -18.625045776367188
    9. '(
' → logprob: -18.750045776367188
    10. '((' → logprob: -19.375045776367188

Token 46: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00024608144303783774
    2. ')' → logprob: -8.500246047973633
    3. ']' → logprob: -10.375246047973633
    4. ')])' → logprob: -12.750246047973633
    5. ')]
' → logprob: -13.125246047973633
    6. '))' → logprob: -13.375246047973633
    7. '])]' → logprob: -13.500246047973633
    8. ')],' → logprob: -14.125246047973633
    9. ' )' → logprob: -14.125246047973633
    10. '')]' → logprob: -14.500246047973633

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0596991702914238
    2. '    
' → logprob: -3.934699058532715
    3. '<|end|>' → logprob: -4.309699058532715
    4. 'area' → logprob: -4.684699058532715
    5. '
' → logprob: -4.809699058532715
    6. 'points' → logprob: -6.184699058532715
    7. 's' → logprob: -7.809699058532715
    8. ')' → logprob: -7.809699058532715
    9. 'areas' → logprob: -7.934699058532715
    10. 'x' → logprob: -7.934699058532715

Token 48: ' adj' (ID: 20251)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conv' → logprob: -1.9420028924942017
    2. 'area' → logprob: -2.192002773284912
    3. 'result' → logprob: -2.317002773284912
    4. '   ' → logprob: -2.317002773284912
    5. 'max' → logprob: -2.692002773284912
    6. '    
' → logprob: -3.317002773284912
    7. ' area' → logprob: -3.317002773284912
    8. 's' → logprob: -3.442002773284912
    9. 'distance' → logprob: -3.567002773284912
    10. 'dp' → logprob: -3.692002773284912

Token 49: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8127648234367371
    2. 'acency' → logprob: -0.8127648234367371
    3. '=[]' → logprob: -2.562764883041382
    4. ' =' → logprob: -3.687764883041382
    5. 'acent' → logprob: -5.062764644622803
    6. '=[' → logprob: -6.437764644622803
    7. 'ac' → logprob: -7.062764644622803
    8. '=[[' → logprob: -7.187764644622803
    9. '_matrix' → logprob: -8.187765121459961
    10. '[' → logprob: -8.312765121459961

Token 50: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07905348390340805
    2. '[' → logprob: -2.5790534019470215
    3. ' []' → logprob: -8.82905387878418
    4. ' [' → logprob: -11.82905387878418
    5. 'set' → logprob: -13.07905387878418
    6. '[n' → logprob: -13.32905387878418
    7. '[]
' → logprob: -13.57905387878418
    8. '0' → logprob: -13.70405387878418
    9. '[]}' → logprob: -13.82905387878418
    10. '[i' → logprob: -14.45405387878418

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16058854758739471
    2. 'for' → logprob: -1.9105885028839111
    3. '(n' → logprob: -8.035588264465332
    4. '(' → logprob: -11.910588264465332
    5. ' ' → logprob: -12.160588264465332
    6. '   ' → logprob: -12.285588264465332
    7. ']' → logprob: -12.410588264465332
    8. '	for' → logprob: -12.410588264465332
    9. ' (' → logprob: -12.535588264465332
    10. '()' → logprob: -12.660588264465332

Token 52: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5863774418830872
    2. '_' → logprob: -1.4613773822784424
    3. ' _' → logprob: -1.5863773822784424
    4. 'range' → logprob: -5.2113776206970215
    5. ' in' → logprob: -6.8363776206970215
    6. '_range' → logprob: -7.5863776206970215
    7. '(range' → logprob: -10.836377143859863
    8. ' i' → logprob: -11.586377143859863
    9. 'in' → logprob: -12.336377143859863
    10. ' ' → logprob: -12.961377143859863

Token 53: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.023359963670372963
    2. ' in' → logprob: -3.773360013961792
    3. 'range' → logprob: -9.148360252380371
    4. ' ' → logprob: -12.148360252380371
    5. ' range' → logprob: -14.023360252380371
    6. 'i' → logprob: -15.023360252380371
    7. '(range' → logprob: -15.023360252380371
    8. 'n' → logprob: -15.148360252380371
    9. '  ' → logprob: -15.398360252380371
    10. '	in' → logprob: -15.773360252380371

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1002117469906807
    2. ' range' → logprob: -2.3502118587493896
    3. '(range' → logprob: -12.350212097167969
    4. ' ' → logprob: -15.850212097167969
    5. '	range' → logprob: -15.975212097167969
    6. 'rang' → logprob: -16.22521209716797
    7. 'r' → logprob: -16.35021209716797
    8. ' stickers' → logprob: -16.35021209716797
    9. 'st' → logprob: -16.72521209716797
    10. '_range' → logprob: -16.85021209716797

Token 55: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.750009536743164
    3. ' (' → logprob: -13.750009536743164
    4. 'n' → logprob: -15.625009536743164
    5. '(range' → logprob: -16.375009536743164
    6. ' n' → logprob: -17.875009536743164
    7. '(N' → logprob: -18.375009536743164
    8. '(s' → logprob: -19.375009536743164
    9. '((' → logprob: -19.500009536743164
    10. '(st' → logprob: -20.250009536743164

Token 56: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.833878508885391e-05
    2. ']' → logprob: -10.750038146972656
    3. ')]
' → logprob: -11.500038146972656
    4. ')' → logprob: -12.625038146972656
    5. '])' → logprob: -14.250038146972656
    6. ')]

' → logprob: -14.250038146972656
    7. '])]' → logprob: -14.375038146972656
    8. ')]
' → logprob: -14.625038146972656
    9. ' )' → logprob: -15.125038146972656
    10. '')]' → logprob: -15.625038146972656

Token 57: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7683411240577698
    2. 'for' → logprob: -1.018341064453125
    3. '   ' → logprob: -1.768341064453125
    4. '<|end|>' → logprob: -6.143341064453125
    5. '
' → logprob: -7.143341064453125
    6. '    
' → logprob: -7.768341064453125
    7. '	for' → logprob: -8.143341064453125
    8. ' ' → logprob: -8.268341064453125
    9. '  
' → logprob: -8.518341064453125
    10. '  ' → logprob: -9.393341064453125

Token 58: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0380917489528656
    2. ' for' → logprob: -3.2880916595458984
    3. '   ' → logprob: -10.163091659545898
    4. '
' → logprob: -12.288091659545898
    5. '	for' → logprob: -12.913091659545898
    6. ' ' → logprob: -13.413091659545898
    7. ' 
' → logprob: -14.038091659545898
    8. '```' → logprob: -14.038091659545898
    9. '<|end|>' → logprob: -14.788091659545898
    10. '    
' → logprob: -15.163091659545898

Token 59: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.033852577209472656
    2. 'i' → logprob: -3.4088525772094727
    3. ' u' → logprob: -9.033852577209473
    4. ' ' → logprob: -9.783852577209473
    5. '	i' → logprob: -11.408852577209473
    6. 'u' → logprob: -11.783852577209473
    7. ' ' → logprob: -13.033852577209473
    8. '   ' → logprob: -13.033852577209473
    9. '_i' → logprob: -13.283852577209473
    10. '```' → logprob: -13.658852577209473

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11289439350366592
    2. 'in' → logprob: -2.237894296646118
    3. ' ' → logprob: -9.737894058227539
    4. 'range' → logprob: -12.362894058227539
    5. '	in' → logprob: -13.487894058227539
    6. '```' → logprob: -13.612894058227539
    7. '   ' → logprob: -13.612894058227539
    8. '  ' → logprob: -14.112894058227539
    9. ',' → logprob: -14.112894058227539
    10. 'import' → logprob: -14.737894058227539

Token 61: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023246407508850098
    2. 'range' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.523246765136719
    4. '	range' → logprob: -15.648246765136719
    5. '(range' → logprob: -16.02324676513672
    6. '  ' → logprob: -16.89824676513672
    7. '   ' → logprob: -17.52324676513672
    8. '_range' → logprob: -18.27324676513672
    9. ' xrange' → logprob: -18.27324676513672
    10. 'Range' → logprob: -18.52324676513672

Token 62: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004155377100687474
    2. '(' → logprob: -7.875415325164795
    3. ' (' → logprob: -10.250415802001953
    4. ' n' → logprob: -16.250415802001953
    5. ' ' → logprob: -17.500415802001953
    6. '(range' → logprob: -17.625415802001953
    7. 'n' → logprob: -18.000415802001953
    8. '(len' → logprob: -19.000415802001953
    9. ' range' → logprob: -19.500415802001953
    10. '(i' → logprob: -20.000415802001953

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11338932067155838
    2. '):
' → logprob: -2.238389253616333
    3. '-' → logprob: -7.988389492034912
    4. ' ):' → logprob: -9.363389015197754
    5. ')' → logprob: -9.613389015197754
    6. '   ' → logprob: -10.488389015197754
    7. '):
' → logprob: -10.488389015197754
    8. ' ):
' → logprob: -12.238389015197754
    9. '+' → logprob: -12.363389015197754
    10. ' -' → logprob: -12.613389015197754

Token 64: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3891712427139282
    2. ' for' → logprob: -1.1391712427139282
    3. 'for' → logprob: -6.889171123504639
    4. '       ' → logprob: -7.139171123504639
    5. '	for' → logprob: -8.014171600341797
    6. ' ' → logprob: -9.639171600341797
    7. '<|end|>' → logprob: -9.889171600341797
    8. '   ' → logprob: -11.639171600341797
    9. '```' → logprob: -11.889171600341797
    10. '    ' → logprob: -12.014171600341797

Token 65: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09072298556566238
    2. 'for' → logprob: -2.4657230377197266
    3. '   ' → logprob: -6.340723037719727
    4. ' j' → logprob: -11.590723037719727
    5. '	for' → logprob: -12.715723037719727
    6. ' ' → logprob: -13.090723037719727
    7. '    ' → logprob: -13.465723037719727
    8. 'j' → logprob: -13.840723037719727
    9. ' x' → logprob: -14.090723037719727
    10. 'x' (adapté à ' x') → logprob: -14.590723037719727

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5344549417495728
    2. ',' → logprob: -2.409454822540283
    3. '=' → logprob: -2.409454822540283
    4. ' in' → logprob: -2.659454822540283
    5. ',j' → logprob: -2.659454822540283
    6. ',y' → logprob: -3.284454822540283
    7. 'j' → logprob: -4.159454822540283
    8. ' =' → logprob: -4.409454822540283
    9. '0' → logprob: -4.659454822540283
    10. '_i' → logprob: -5.659454822540283

Token 67: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.29076942801475525
    2. ',' → logprob: -1.4157694578170776
    3. '1' → logprob: -4.915769577026367
    4. '=' → logprob: -7.040769577026367
    5. ',x' → logprob: -7.790769577026367
    6. ' ,' → logprob: -8.040769577026367
    7. ',j' → logprob: -8.165769577026367
    8. '_,' → logprob: -8.790769577026367
    9. ',v' → logprob: -10.040769577026367
    10. 'y' → logprob: -10.165769577026367

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010865535587072372
    2. '=' → logprob: -4.760865688323975
    3. ',' → logprob: -6.385865688323975
    4. ' =' → logprob: -8.510865211486816
    5. ',x' → logprob: -9.510865211486816
    6. '_' → logprob: -10.260865211486816
    7. ')' → logprob: -10.385865211486816
    8. '_=' → logprob: -10.760865211486816
    9. ',_' → logprob: -10.885865211486816
    10. '=_' → logprob: -11.010865211486816

Token 69: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012824878096580505
    2. ' =' → logprob: -4.512825012207031
    3. '=x' → logprob: -6.637825012207031
    4. ',x' → logprob: -8.012825012207031
    5. ',' → logprob: -9.762825012207031
    6. '=input' → logprob: -10.637825012207031
    7. '=s' → logprob: -10.762825012207031
    8. '=i' → logprob: -11.512825012207031
    9. '=data' → logprob: -12.512825012207031
    10. '=int' → logprob: -13.137825012207031

Token 70: 'stick' (ID: 46389)
  Prédit: 'stick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stick' → logprob: -0.0009215848403982818
    2. ' stickers' → logprob: -7.875921726226807
    3. 'sticks' → logprob: -8.125921249389648
    4. 'st' → logprob: -8.375921249389648
    5. ' stick' → logprob: -11.625921249389648
    6. '	st' → logprob: -13.875921249389648
    7. 'stre' → logprob: -14.000921249389648
    8. '   ' → logprob: -14.375921249389648
    9. 'sticky' → logprob: -14.375921249389648
    10. ' ' → logprob: -14.625921249389648

Token 71: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -12.625003814697266
    3. '```' → logprob: -16.375003814697266
    4. 'e' → logprob: -16.500003814697266
    5. '[i' → logprob: -16.875003814697266
    6. '[]' → logprob: -16.875003814697266
    7. '#' → logprob: -17.000003814697266
    8. '   ' → logprob: -17.125003814697266
    9. ' ers' → logprob: -17.375003814697266
    10. '{' → logprob: -17.375003814697266

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.500000953674316
    3. 'i' → logprob: -15.250000953674316
    4. '[
' → logprob: -17.625
    5. '[I' → logprob: -17.625
    6. ' [' → logprob: -18.375
    7. '```' → logprob: -18.5
    8. '
' → logprob: -18.625
    9. '[j' → logprob: -18.75
    10. '   ' → logprob: -18.75

Token 73: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04414111748337746
    2. ']' → logprob: -3.5441410541534424
    3. ')
' → logprob: -4.4191412925720215
    4. ']
' → logprob: -7.4191412925720215
    5. '   ' → logprob: -7.7941412925720215
    6. '[' → logprob: -7.9191412925720215
    7. '
' → logprob: -8.544140815734863
    8. '<|end|>' → logprob: -8.544140815734863
    9. '])' → logprob: -8.919140815734863
    10. ')x' → logprob: -9.669140815734863

Token 74: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07730909436941147
    2. ' for' → logprob: -2.8273091316223145
    3. 'for' → logprob: -4.3273091316223145
    4. '<|end|>' → logprob: -6.8273091316223145
    5. '    
' → logprob: -8.077308654785156
    6. '
' → logprob: -8.202308654785156
    7. '	for' → logprob: -8.577308654785156
    8. '       ' → logprob: -10.327308654785156
    9. '<|end|>' → logprob: -10.327308654785156
    10. ' 
' → logprob: -10.702308654785156

Token 75: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10496954619884491
    2. 'for' (adapté à ' for') → logprob: -2.3549695014953613
    3. '   ' → logprob: -5.354969501495361
    4. '	for' → logprob: -10.72996997833252
    5. ' ' → logprob: -12.97996997833252
    6. '<|end|>' → logprob: -13.85496997833252
    7. '  ' → logprob: -14.60496997833252
    8. '
' → logprob: -14.72996997833252
    9. '    ' → logprob: -14.97996997833252
    10. '```' → logprob: -15.35496997833252

Token 76: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3207455575466156
    2. ' j' → logprob: -1.320745587348938
    3. 'range' → logprob: -5.570745468139648
    4. ' ' → logprob: -5.820745468139648
    5. 'j' → logprob: -7.570745468139648
    6. '<|end|>' → logprob: -9.945745468139648
    7. '  ' → logprob: -10.695745468139648
    8. ' i' → logprob: -10.945745468139648
    9. '    ' → logprob: -11.195745468139648
    10. ' xrange' → logprob: -11.320745468139648

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016045862808823586
    2. 'in' → logprob: -4.141046047210693
    3. ' ' → logprob: -11.891045570373535
    4. '	in' → logprob: -13.141045570373535
    5. 'range' → logprob: -13.391045570373535
    6. ' range' → logprob: -15.016045570373535
    7. ' i' → logprob: -15.391045570373535
    8. '  ' → logprob: -15.516045570373535
    9. '   ' → logprob: -15.766045570373535
    10. 'In' → logprob: -16.76604652404785

Token 78: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008615988306701183
    2. 'range' → logprob: -4.758615970611572
    3. ' ' → logprob: -14.25861644744873
    4. '(range' → logprob: -14.50861644744873
    5. '	range' → logprob: -15.00861644744873
    6. '  ' → logprob: -17.883615493774414
    7. ' xrange' → logprob: -18.508615493774414
    8. '   ' → logprob: -18.758615493774414
    9. ' in' → logprob: -18.758615493774414
    10. '_range' → logprob: -18.883615493774414

Token 79: '(i' (ID: 3649)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.6750305891036987
    2. ' range' → logprob: -0.8000305891036987
    3. '(n' → logprob: -3.8000307083129883
    4. ' (' → logprob: -4.425030708312988
    5. 'range' → logprob: -5.800030708312988
    6. '(i' → logprob: -5.800030708312988
    7. '(' → logprob: -6.800030708312988
    8. ' ' → logprob: -11.800030708312988
    9. '(s' → logprob: -11.800030708312988
    10. '	range' → logprob: -11.925030708312988

Token 80: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024945642799139023
    2. ' +' → logprob: -6.0024943351745605
    3. '1' → logprob: -11.127494812011719
    4. '+
' → logprob: -13.252494812011719
    5. '+)' → logprob: -13.752494812011719
    6. '+i' → logprob: -14.252494812011719
    7. '+j' → logprob: -15.627494812011719
    8. ')' → logprob: -16.00249481201172
    9. ')+' → logprob: -16.37749481201172
    10. ' +
' → logprob: -16.75249481201172

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.5649528298527e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -15.812575340270996
    4. '   ' → logprob: -16.062576293945312
    5. ',' → logprob: -16.687576293945312
    6. 'n' → logprob: -16.812576293945312
    7. '2' → logprob: -16.937576293945312
    8. 'i' → logprob: -16.937576293945312
    9. '１' → logprob: -17.187576293945312
    10. '0' → logprob: -17.750076293945312

Token 82: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.4746576249599457
    2. ',' → logprob: -0.9746576547622681
    3. ' ,' → logprob: -7.5996575355529785
    4. ',len' → logprob: -9.849658012390137
    5. ',num' → logprob: -11.474658012390137
    6. ',j' → logprob: -12.349658012390137
    7. ',i' → logprob: -12.474658012390137
    8. '+' → logprob: -13.849658012390137
    9. ',int' → logprob: -13.974658012390137
    10. ',next' → logprob: -13.974658012390137

Token 83: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5763720273971558
    2. '):' → logprob: -0.8263720273971558
    3. '):
' → logprob: -8.326372146606445
    4. ')' → logprob: -9.076372146606445
    5. ':' → logprob: -10.701372146606445
    6. '   ' → logprob: -10.826372146606445
    7. '):

' → logprob: -11.201372146606445
    8. ' ):
' → logprob: -11.326372146606445
    9. ' ):' → logprob: -12.326372146606445
    10. '       ' → logprob: -13.951372146606445

Token 84: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32837894558906555
    2. '       ' → logprob: -1.5783789157867432
    3. '        ' → logprob: -4.328379154205322
    4. ':' → logprob: -4.453379154205322
    5. ' x' → logprob: -4.453379154205322
    6. '<|end|>' → logprob: -4.453379154205322
    7. '    ' → logprob: -4.703379154205322
    8. '   ' → logprob: -5.078379154205322
    9. ',' → logprob: -5.953379154205322
    10. '  ' → logprob: -6.328379154205322

Token 85: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.15432214736938477
    2. 'x' (adapté à ' x') → logprob: -2.1543221473693848
    3. ' ' → logprob: -3.6543221473693848
    4. '   ' → logprob: -7.654322147369385
    5. '	x' → logprob: -8.654321670532227
    6. ' 
' → logprob: -8.904321670532227
    7. '    ' → logprob: -8.904321670532227
    8. '       ' → logprob: -9.904321670532227
    9. ',x' → logprob: -10.029321670532227
    10. ' ' → logprob: -10.404321670532227

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42964673042297363
    2. '1' → logprob: -1.0546467304229736
    3. '0' → logprob: -7.5546464920043945
    4. ',' → logprob: -7.8046464920043945
    5. ',y' → logprob: -11.679646492004395
    6. ',j' → logprob: -12.679646492004395
    7. 'j' → logprob: -14.429646492004395
    8. ' ,' → logprob: -14.429646492004395
    9. '```' → logprob: -14.429646492004395
    10. '_,' → logprob: -14.929646492004395

Token 87: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.002231140388175845
    2. ',' → logprob: -6.127231121063232
    3. ' ,' → logprob: -10.00223159790039
    4. ',j' → logprob: -15.00223159790039
    5. 'y' → logprob: -16.37723159790039
    6. ',x' → logprob: -16.75223159790039
    7. ',user' → logprob: -16.87723159790039
    8. ',w' → logprob: -17.00223159790039
    9. ',z' → logprob: -17.00223159790039
    10. ',Y' → logprob: -17.12723159790039

Token 88: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010115911572938785
    2. ',' → logprob: -9.375101089477539
    3. '1' → logprob: -11.125101089477539
    4. ',j' → logprob: -14.000101089477539
    5. ' ' → logprob: -15.250101089477539
    6. '```' → logprob: -15.625101089477539
    7. '=' → logprob: -15.750101089477539
    8. '[' → logprob: -17.00010108947754
    9. ',x' → logprob: -17.00010108947754
    10. ' ,' → logprob: -17.12510108947754

Token 89: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00010986098641296849
    2. ' =' → logprob: -9.125109672546387
    3. '=s' → logprob: -15.625109672546387
    4. '=float' → logprob: -15.625109672546387
    5. '=(' → logprob: -15.750109672546387
    6. ')=' → logprob: -16.500110626220703
    7. '=

' → logprob: -16.750110626220703
    8. '=x' → logprob: -16.875110626220703
    9. ',' → logprob: -17.250110626220703
    10. '=line' → logprob: -17.750110626220703

Token 90: 'stick' (ID: 46389)
  Prédit: 'stick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stick' → logprob: -0.004025918431580067
    2. 'sticks' → logprob: -6.254025936126709
    3. ' stickers' → logprob: -6.504025936126709
    4. ' stick' → logprob: -7.629025936126709
    5. 'st' → logprob: -9.37902545928955
    6. ' sticks' → logprob: -11.25402545928955
    7. 'sticky' → logprob: -12.37902545928955
    8. '	st' → logprob: -13.12902545928955
    9. 's' → logprob: -13.50402545928955
    10. 'stake' → logprob: -14.12902545928955

Token 91: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -4.36574100604048e-06
    2. 'ickers' → logprob: -13.500004768371582
    3. 'kers' → logprob: -14.250004768371582
    4. 'acks' → logprob: -15.125004768371582
    5. 'e' → logprob: -15.125004768371582
    6. '[' → logprob: -15.500004768371582
    7. '```' → logprob: -15.500004768371582
    8. '#' → logprob: -15.625004768371582
    9. 'er' → logprob: -15.750004768371582
    10. 'ors' → logprob: -16.250003814697266

Token 92: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. 'j' → logprob: -15.5
    3. '[i' → logprob: -16.875
    4. '[' → logprob: -16.875
    5. '```' → logprob: -17.0
    6. '[js' → logprob: -17.375
    7. '[
' → logprob: -19.0
    8. '[y' → logprob: -19.875
    9. '[z' → logprob: -20.125
    10. '[user' → logprob: -20.5

Token 93: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0893324464559555
    2. ')
' → logprob: -2.464332342147827
    3. ')
' → logprob: -8.464332580566406
    4. '       ' → logprob: -9.839332580566406
    5. '           ' → logprob: -10.339332580566406
    6. ')x' → logprob: -10.839332580566406
    7. ' )' → logprob: -10.964332580566406
    8. ')

' → logprob: -11.464332580566406
    9. '```' → logprob: -11.714332580566406
    10. ')`' → logprob: -12.089332580566406

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06037360802292824
    2. ' 
' → logprob: -3.435373544692993
    3. '            
' → logprob: -4.685373783111572
    4. '<|end|>' → logprob: -5.060373783111572
    5. ' ' → logprob: -5.560373783111572
    6. ' if' → logprob: -6.810373783111572
    7. '  
' → logprob: -6.935373783111572
    8. '
' → logprob: -7.310373783111572
    9. '            ' → logprob: -7.310373783111572
    10. '\n' → logprob: -7.685373783111572

Token 95: ' dx' (ID: 29472)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8480224609375
    2. ' if' → logprob: -1.3480224609375
    3. ' dx' → logprob: -2.4730224609375
    4. '           ' → logprob: -2.5980224609375
    5. 'dx' (adapté à ' dx') → logprob: -3.5980224609375
    6. 'd' → logprob: -3.5980224609375
    7. 'if' → logprob: -3.7230224609375
    8. 'distance' → logprob: -3.8480224609375
    9. '            
' → logprob: -4.2230224609375
    10. '
' → logprob: -4.9730224609375

Token 96: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009798353537917137
    2. ' =' → logprob: -4.759798526763916
    3. '=x' → logprob: -7.384798526763916
    4. '=(' → logprob: -7.509798526763916
    5. ' =(' → logprob: -12.134798049926758
    6. ',' → logprob: -12.259798049926758
    7. '=y' → logprob: -14.009798049926758
    8. '=

' → logprob: -14.009798049926758
    9. '=d' → logprob: -14.259798049926758
    10. '=i' → logprob: -14.759798049926758

Token 97: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1269593983888626
    2. '1' → logprob: -2.1269593238830566
    3. '₂' → logprob: -11.501959800720215
    4. '_' → logprob: -12.501959800720215
    5. ' -' → logprob: -12.626959800720215
    6. '²' → logprob: -12.626959800720215
    7. ' ' → logprob: -12.751959800720215
    8. '```' → logprob: -12.876959800720215
    9. '' → logprob: -13.626959800720215
    10. '[' → logprob: -14.251959800720215

Token 98: '-x' (ID: 12651)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7063939571380615
    2. ' -' → logprob: -0.7063939571380615
    3. '-x' → logprob: -4.331394195556641
    4. '-y' → logprob: -11.95639419555664
    5. '2' → logprob: -14.33139419555664
    6. '-p' → logprob: -14.95639419555664
    7. '-m' → logprob: -14.95639419555664
    8. ' ' → logprob: -15.45639419555664
    9. '-j' → logprob: -15.45639419555664
    10. '-xl' → logprob: -15.70639419555664

Token 99: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004080062732100487
    2. 'x' → logprob: -5.504080295562744
    3. ' x' → logprob: -13.379079818725586
    4. ' ' → logprob: -16.254079818725586
    5. '```' → logprob: -17.754079818725586
    6. '<|end|>' → logprob: -18.004079818725586
    7. '₂' → logprob: -18.254079818725586
    8. 's' → logprob: -18.879079818725586
    9. '²' → logprob: -19.379079818725586
    10. 'dx' → logprob: -19.879079818725586

Token 100: '
' (ID: 198)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4707493185997009
    2. '<|end|>' → logprob: -1.5957493782043457
    3. ')' → logprob: -2.9707493782043457
    4. ' ' → logprob: -3.7207493782043457
    5. '```' → logprob: -3.8457493782043457
    6. '2' → logprob: -4.220749378204346
    7. '           ' → logprob: -4.345749378204346
    8. '
' → logprob: -4.720749378204346
    9. ')**' → logprob: -4.720749378204346
    10. '*' → logprob: -4.845749378204346

Token 101: '           ' (ID: 352)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.49206626415252686
    2. 'dy' → logprob: -1.6170662641525269
    3. 'dx' → logprob: -2.6170663833618164
    4. '<|end|>' → logprob: -2.6170663833618164
    5. ' dx' → logprob: -3.9920663833618164
    6. '2' → logprob: -3.9920663833618164
    7. ' ' → logprob: -5.367066383361816
    8. '<|end|>' → logprob: -7.742066383361816
    9. '
' → logprob: -7.992066383361816
    10. '```' → logprob: -7.992066383361816

Token 102: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.009771435521543026
    2. ' dy' → logprob: -4.634771347045898
    3. '2' → logprob: -11.884771347045898
    4. 'dx' → logprob: -12.259771347045898
    5. 'd' → logprob: -13.009771347045898
    6. 'y' → logprob: -14.009771347045898
    7. ' ' → logprob: -15.634771347045898
    8. ' ' → logprob: -15.759771347045898
    9. '<|end|>' → logprob: -15.884771347045898
    10. '.dy' → logprob: -16.0097713470459

Token 103: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39815181493759155
    2. '=y' → logprob: -1.3981518745422363
    3. '=x' → logprob: -2.5231518745422363
    4. ' =' → logprob: -6.898151874542236
    5. '=(' → logprob: -9.148151397705078
    6. '<|end|>' → logprob: -11.023151397705078
    7. '=}' → logprob: -12.148151397705078
    8. '=user' → logprob: -12.273151397705078
    9. 'y' → logprob: -12.398151397705078
    10. '=df' → logprob: -12.773151397705078

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. 'y' → logprob: -13.37500286102295
    3. '<|end|>' → logprob: -14.87500286102295
    4. '2' → logprob: -15.25000286102295
    5. ' ' → logprob: -15.37500286102295
    6. ' -' → logprob: -15.62500286102295
    7. ' y' → logprob: -15.75000286102295
    8. '-' → logprob: -16.000003814697266
    9. '```' → logprob: -17.375003814697266
    10. 'dy' → logprob: -17.625003814697266

Token 105: '-y' (ID: 18102)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3725619316101074
    2. '*' → logprob: -2.4975619316101074
    3. '<|end|>' → logprob: -2.8725619316101074
    4. '-d' → logprob: -3.1225619316101074
    5. '**' → logprob: -3.1225619316101074
    6. '-' → logprob: -3.7475619316101074
    7. '2' → logprob: -3.7475619316101074
    8. 'dx' → logprob: -4.872561931610107
    9. '*y' → logprob: -4.997561931610107
    10. '*x' → logprob: -5.372561931610107

Token 106: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020568605395965278
    2. 'dy' → logprob: -8.875205993652344
    3. '1' → logprob: -9.750205993652344
    4. 'y' → logprob: -12.000205993652344
    5. ' ' → logprob: -14.000205993652344
    6. '```' → logprob: -15.500205993652344
    7. '<|end|>' → logprob: -16.250205993652344
    8. ' dy' → logprob: -16.625205993652344
    9. ' y' → logprob: -17.250205993652344
    10. '**' → logprob: -18.250205993652344

Token 107: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08407445251941681
    2. '<|end|>' → logprob: -3.9590744972229004
    3. ' ' → logprob: -4.0840744972229
    4. '
' → logprob: -4.4590744972229
    5. 'import' → logprob: -5.2090744972229
    6. ' 
' → logprob: -5.4590744972229
    7. '            
' → logprob: -5.4590744972229
    8. '**' → logprob: -5.9590744972229
    9. '            ' → logprob: -6.0840744972229
    10. '  
' → logprob: -6.3340744972229

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021903522312641144
    2. ' if' → logprob: -4.5219035148620605
    3. '            
' → logprob: -5.8969035148620605
    4. ' ' → logprob: -6.6469035148620605
    5. ' 
' → logprob: -6.6469035148620605
    6. '
' → logprob: -7.0219035148620605
    7. '            ' → logprob: -7.0219035148620605
    8. 'if' → logprob: -7.3969035148620605
    9. '  
' → logprob: -7.5219035148620605
    10. '          ' → logprob: -7.6469035148620605

Token 109: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.6514602899551392
    2. 'if' → logprob: -2.1514601707458496
    3. ' dist' → logprob: -2.2764601707458496
    4. ' if' → logprob: -2.2764601707458496
    5. 'distance' → logprob: -2.5264601707458496
    6. 'd' → logprob: -3.1514601707458496
    7. 'import' → logprob: -4.27646017074585
    8. '           ' → logprob: -5.15146017074585
    9. ' distance' → logprob: -5.52646017074585
    10. ' d' → logprob: -6.15146017074585

Token 110: '_sq' (ID: 125541)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1005813479423523
    2. ' =' → logprob: -2.350581407546997
    3. '=Math' → logprob: -8.475581169128418
    4. '=s' → logprob: -10.100581169128418
    5. '=int' → logprob: -10.100581169128418
    6. '=float' → logprob: -10.100581169128418
    7. '=(' → logprob: -12.100581169128418
    8. ' math' → logprob: -12.100581169128418
    9. ' ' → logprob: -12.850581169128418
    10. ' squared' → logprob: -12.975581169128418

Token 111: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20145513117313385
    2. ' =' → logprob: -1.7014551162719727
    3. '=int' → logprob: -11.201455116271973
    4. '=d' → logprob: -11.576455116271973
    5. '=x' → logprob: -11.701455116271973
    6. ' =(' → logprob: -12.701455116271973
    7. '=i' → logprob: -14.201455116271973
    8. '=(' → logprob: -14.451455116271973
    9. '=df' → logprob: -14.576455116271973
    10. '=ax' → logprob: -14.826455116271973

Token 112: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -3.392824874026701e-05
    2. ' dx' → logprob: -10.87503433227539
    3. '(dx' → logprob: -11.12503433227539
    4. '   ' → logprob: -16.12503433227539
    5. '```' → logprob: -17.50003433227539
    6. '(' → logprob: -17.75003433227539
    7. 'd' → logprob: -18.00003433227539
    8. '_dx' → logprob: -18.12503433227539
    9. ' ' → logprob: -19.00003433227539
    10. '.dx' → logprob: -19.25003433227539

Token 113: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10022371262311935
    2. '**' → logprob: -2.3502237796783447
    3. ' *' → logprob: -11.225223541259766
    4. '***' → logprob: -13.350223541259766
    5. ' **' → logprob: -13.725223541259766
    6. 'dx' → logprob: -14.725223541259766
    7. '2' → logprob: -15.100223541259766
    8. '```' → logprob: -15.600223541259766
    9. '*x' → logprob: -16.475223541259766
    10. '*object' → logprob: -16.725223541259766

Token 114: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.0280383548888494e-06
    2. ' dx' → logprob: -14.250000953674316
    3. '_dx' → logprob: -15.875000953674316
    4. 'd' → logprob: -16.875001907348633
    5. 'dy' → logprob: -17.250001907348633
    6. '2' → logprob: -18.875001907348633
    7. '.dx' → logprob: -19.750001907348633
    8. '(dx' → logprob: -19.875001907348633
    9. 'Dx' → logprob: -20.375001907348633
    10. 'DX' → logprob: -20.875001907348633

Token 115: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06197866424918175
    2. ' +' → logprob: -2.811978578567505
    3. '<|end|>' → logprob: -11.561978340148926
    4. '+
' → logprob: -15.311978340148926
    5. '+y' → logprob: -15.311978340148926
    6. ' +
' → logprob: -15.311978340148926
    7. '<|end|>' → logprob: -15.561978340148926
    8. '+xml' → logprob: -16.186979293823242
    9. '＋' → logprob: -16.311979293823242
    10. '()+' → logprob: -16.686979293823242

Token 116: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -5.836499985889532e-05
    2. ' dy' → logprob: -9.7500581741333
    3. '.dy' → logprob: -17.625059127807617
    4. 'd' → logprob: -20.000059127807617
    5. 'dym' → logprob: -20.000059127807617
    6. '```' → logprob: -20.250059127807617
    7. ' ' → logprob: -20.500059127807617
    8. 'ddy' → logprob: -20.750059127807617
    9. '<|end|>' → logprob: -20.750059127807617
    10. '
' → logprob: -21.250059127807617

Token 117: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0020618767011910677
    2. 'dy' → logprob: -6.75206184387207
    3. '<|end|>' → logprob: -7.12706184387207
    4. '2' → logprob: -9.87706184387207
    5. '**' → logprob: -11.12706184387207
    6. ' dy' → logprob: -12.00206184387207
    7. ' *' → logprob: -12.12706184387207
    8. '<|end|>' → logprob: -13.00206184387207
    9. '```' → logprob: -13.12706184387207
    10. ')' → logprob: -13.87706184387207

Token 118: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0015110508538782597
    2. '2' → logprob: -6.501511096954346
    3. ' dy' → logprob: -11.751510620117188
    4. 'dym' → logprob: -15.501510620117188
    5. 'dx' → logprob: -15.751510620117188
    6. 'ddy' → logprob: -16.126510620117188
    7. 'dp' → logprob: -16.376510620117188
    8. 'd' → logprob: -16.501510620117188
    9. 'dq' → logprob: -16.626510620117188
    10. ' ' → logprob: -17.001510620117188

Token 119: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29938212037086487
    2. '<|end|>' → logprob: -2.299382209777832
    3. '
' → logprob: -3.174382209777832
    4. ' if' → logprob: -3.299382209777832
    5. 'if' → logprob: -4.049382209777832
    6. '   ' → logprob: -4.674382209777832
    7. '<|end|>' → logprob: -5.049382209777832
    8. '            
' → logprob: -5.174382209777832
    9. '  
' → logprob: -5.174382209777832
    10. ' <=' → logprob: -5.299382209777832

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03656525909900665
    2. ' if' → logprob: -3.7865653038024902
    3. '   ' → logprob: -5.16156530380249
    4. 'if' → logprob: -6.03656530380249
    5. '<|end|>' → logprob: -6.78656530380249
    6. '
' → logprob: -7.03656530380249
    7. ' ' → logprob: -7.16156530380249
    8. '            
' → logprob: -7.28656530380249
    9. '       ' → logprob: -7.91156530380249
    10. '    ' → logprob: -8.286564826965332

Token 121: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.049051932990550995
    2. '1' → logprob: -4.174051761627197
    3. '4' → logprob: -4.424051761627197
    4. 'r' → logprob: -5.049051761627197
    5. ' if' → logprob: -5.299051761627197
    6. '16' → logprob: -6.049051761627197
    7. '           ' → logprob: -6.174051761627197
    8. '(' → logprob: -6.674051761627197
    9. 'max' → logprob: -7.424051761627197
    10. 'math' → logprob: -7.799051761627197

Token 122: ' distance' (ID: 9324)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.059437479823827744
    2. ' if' → logprob: -2.9344375133514404
    3. 'r' → logprob: -6.809437274932861
    4. 'import' → logprob: -7.059437274932861
    5. 'radius' → logprob: -7.184437274932861
    6. 'dist' → logprob: -7.559437274932861
    7. 'distance' → logprob: -7.934437274932861
    8. 'threshold' → logprob: -8.05943775177002
    9. 'math' → logprob: -9.18443775177002
    10. '```' → logprob: -9.55943775177002

Token 123: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22832486033439636
    2. ' =' → logprob: -1.9783248901367188
    3. '<=' → logprob: -3.8533248901367188
    4. '<|end|>' → logprob: -3.9783248901367188
    5. ' <=' → logprob: -4.103324890136719
    6. ')' → logprob: -6.228324890136719
    7. ')<=' → logprob: -6.478324890136719
    8. 'if' → logprob: -6.603324890136719
    9. ' ' → logprob: -6.603324890136719
    10. '<|end|>' → logprob: -7.853324890136719

Token 124: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28545528650283813
    2. '4' → logprob: -2.1604552268981934
    3. '2' → logprob: -3.0354552268981934
    4. '(' → logprob: -3.0354552268981934
    5. ' ' → logprob: -4.035455226898193
    6. '0' → logprob: -4.910455226898193
    7. ' (' → logprob: -5.535455226898193
    8. '25' → logprob: -6.785455226898193
    9. '(x' → logprob: -6.910455226898193
    10. '10' → logprob: -7.035455226898193

Token 125: ' means' (ID: 4748)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20882205665111542
    2. 'if' → logprob: -2.458822011947632
    3. '<|end|>' → logprob: -3.583822011947632
    4. ' ' → logprob: -4.083822250366211
    5. '           ' → logprob: -4.083822250366211
    6. '            ' → logprob: -4.833822250366211
    7. '   ' → logprob: -5.208822250366211
    8. ':' → logprob: -5.208822250366211
    9. '    ' → logprob: -5.208822250366211
    10. ' and' → logprob: -5.208822250366211

Token 126: ' overlap' (ID: 56631)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37004151940345764
    2. 'if' → logprob: -1.4950414896011353
    3. 'adj' → logprob: -3.495041608810425
    4. 'dist' → logprob: -3.620041608810425
    5. ' math' → logprob: -4.745041370391846
    6. ' dist' → logprob: -4.995041370391846
    7. '           ' → logprob: -5.120041370391846
    8. ' adj' → logprob: -6.120041370391846
    9. 'math' → logprob: -6.370041370391846
    10. ' (' → logprob: -7.495041370391846

Token 127: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09199006855487823
    2. ' if' → logprob: -3.2169899940490723
    3. '   ' → logprob: -4.341989994049072
    4. '<|end|>' → logprob: -4.591989994049072
    5. 'if' → logprob: -5.216989994049072
    6. '       ' → logprob: -5.216989994049072
    7. ' ' → logprob: -5.716989994049072
    8. ' 
' → logprob: -6.466989994049072
    9. ':' → logprob: -6.466989994049072
    10. '    ' → logprob: -6.591989994049072

Token 128: ' touching' (ID: 52058)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.007332110311836004
    2. ' touch' → logprob: -6.3823323249816895
    3. 'contact' → logprob: -6.3823323249816895
    4. 'equal' → logprob: -6.7573323249816895
    5. ' touching' → logprob: -6.7573323249816895
    6. 'inter' → logprob: -7.2573323249816895
    7. 'intersection' → logprob: -8.132331848144531
    8. 'adj' → logprob: -8.382331848144531
    9. ' contact' → logprob: -9.257331848144531
    10. ' equal' → logprob: -9.757331848144531

Token 129: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10225214809179306
    2. ' if' → logprob: -3.227252244949341
    3. '   ' → logprob: -3.602252244949341
    4. '       ' → logprob: -4.727252006530762
    5. '<|end|>' → logprob: -4.977252006530762
    6. 'if' → logprob: -5.352252006530762
    7. ' 
' → logprob: -6.227252006530762
    8. ' ' → logprob: -6.352252006530762
    9. '            
' → logprob: -6.602252006530762
    10. '    ' → logprob: -6.977252006530762

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017525682225823402
    2. '   ' → logprob: -4.892525672912598
    3. ' if' → logprob: -4.892525672912598
    4. '       ' → logprob: -6.392525672912598
    5. 'if' → logprob: -8.142525672912598
    6. '<|end|>' → logprob: -9.517525672912598
    7. '            
' → logprob: -9.767525672912598
    8. '               ' → logprob: -10.142525672912598
    9. '            ' → logprob: -10.267525672912598
    10. ' ' → logprob: -10.267525672912598

Token 131: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12552990019321442
    2. 'if' (adapté à ' if') → logprob: -2.3755300045013428
    3. '           ' → logprob: -3.7505300045013428
    4. '   ' → logprob: -7.125529766082764
    5. '       ' → logprob: -8.875530242919922
    6. ' 
' → logprob: -9.125530242919922
    7. ' ' → logprob: -9.125530242919922
    8. '<|end|>' → logprob: -9.375530242919922
    9. '    ' → logprob: -9.625530242919922
    10. '            
' → logprob: -10.125530242919922

Token 132: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6940559148788452
    2. 'dist' → logprob: -0.6940559148788452
    3. ' math' → logprob: -7.194056034088135
    4. 'math' → logprob: -8.819055557250977
    5. '(dist' → logprob: -12.319055557250977
    6. '   ' → logprob: -12.944055557250977
    7. '	dist' → logprob: -13.319055557250977
    8. ' ' → logprob: -14.944055557250977
    9. '_dist' → logprob: -15.819055557250977
    10. ' ' → logprob: -16.194055557250977

Token 133: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -1.0921942703134846e-05
    2. '_' → logprob: -12.00001049041748
    3. '<=' → logprob: -13.12501049041748
    4. '_squared' → logprob: -14.00001049041748
    5. 'sq' → logprob: -14.25001049041748
    6. '_s' → logprob: -15.62501049041748
    7. '```' → logprob: -15.75001049041748
    8. '<_' → logprob: -16.000011444091797
    9. '[_' → logprob: -16.000011444091797
    10. ' _' → logprob: -16.125011444091797

Token 134: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10027988255023956
    2. '<=' → logprob: -2.3502798080444336
    3. ' ' → logprob: -9.850279808044434
    4. ')<=' → logprob: -11.600279808044434
    5. ']<=' → logprob: -13.225279808044434
    6. ')' → logprob: -13.350279808044434
    7. '<' → logprob: -13.350279808044434
    8. ' <=",' → logprob: -13.475279808044434
    9. ' <' → logprob: -14.350279808044434
    10. ' ≤' → logprob: -14.475279808044434

Token 135: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.3822154111694545e-05
    2. ' ' → logprob: -10.125043869018555
    3. '(' → logprob: -13.375043869018555
    4. '   ' → logprob: -13.625043869018555
    5. '16' → logprob: -14.250043869018555
    6. '```' → logprob: -15.500043869018555
    7. '2' → logprob: -16.625043869018555
    8. '  ' → logprob: -16.875043869018555
    9. '8' → logprob: -17.750043869018555
    10. '``' → logprob: -17.875043869018555

Token 136: '+' (ID: 10)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021123127080500126
    2. ':
' → logprob: -6.75211238861084
    3. '.' → logprob: -7.25211238861084
    4. '):' → logprob: -8.62711238861084
    5. ' :' → logprob: -10.87711238861084
    6. '   ' → logprob: -11.25211238861084
    7. ' and' → logprob: -11.87711238861084
    8. '0' → logprob: -12.50211238861084
    9. ')' → logprob: -13.37711238861084
    10. '       ' → logprob: -13.62711238861084

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01822790503501892
    2. ' ' → logprob: -4.018228054046631
    3. '-' → logprob: -10.018227577209473
    4. '   ' → logprob: -11.018227577209473
    5. '0' → logprob: -12.268227577209473
    6. '  ' → logprob: -13.143227577209473
    7. ' ' → logprob: -13.393227577209473
    8. '+' → logprob: -13.518227577209473
    9. '10' → logprob: -13.768227577209473
    10. '(' → logprob: -13.893227577209473

Token 138: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0005675682332366705
    2. '-' → logprob: -7.500567436218262
    3. '0' → logprob: -11.250567436218262
    4. '-e' → logprob: -14.000567436218262
    5. 'E' → logprob: -14.250567436218262
    6. '.' → logprob: -15.500567436218262
    7. '.e' → logprob: -17.250568389892578
    8. '1' → logprob: -17.375568389892578
    9. ' -' → logprob: -17.750568389892578
    10. '   ' → logprob: -17.875568389892578

Token 139: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -18.0
    3. '```' → logprob: -18.875
    4. '^-' → logprob: -19.875
    5. '9' → logprob: -20.125
    6. '−' → logprob: -20.375
    7. '7' → logprob: -20.625
    8. '-
' → logprob: -20.875
    9. '{-' → logprob: -21.0
    10. '6' → logprob: -21.0

Token 140: '14' (ID: 1265)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4249385893344879
    2. '8' → logprob: -1.6749385595321655
    3. '10' → logprob: -2.299938678741455
    4. '7' → logprob: -3.424938678741455
    5. '12' → logprob: -3.924938678741455
    6. '6' → logprob: -5.549938678741455
    7. '15' → logprob: -6.799938678741455
    8. '14' → logprob: -7.799938678741455
    9. '11' → logprob: -8.424938201904297
    10. '13' → logprob: -8.424938201904297

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004327214322984219
    2. ':
' → logprob: -5.504327297210693
    3. '       ' → logprob: -8.879326820373535
    4. '):' → logprob: -10.254326820373535
    5. '           ' → logprob: -10.379326820373535
    6. '   ' → logprob: -11.004326820373535
    7. ' and' → logprob: -11.254326820373535
    8. ' :' → logprob: -12.004326820373535
    9. ':
' → logprob: -13.129326820373535
    10. '):
' → logprob: -13.379326820373535

Token 142: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009475925005972385
    2. '           ' → logprob: -4.7594757080078125
    3. '
' → logprob: -8.134475708007812
    4. ',' → logprob: -8.509475708007812
    5. '                
' → logprob: -9.759475708007812
    6. ':' → logprob: -9.884475708007812
    7. '       ' → logprob: -10.259475708007812
    8. '            
' → logprob: -10.509475708007812
    9. '<|end|>' → logprob: -10.759475708007812
    10. ' ' → logprob: -10.759475708007812

Token 143: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.3899684548377991
    2. ' adj' → logprob: -1.1399683952331543
    3. '               ' → logprob: -5.889968395233154
    4. '           ' → logprob: -8.389968872070312
    5. '   ' → logprob: -9.889968872070312
    6. '
' → logprob: -10.514968872070312
    7. '                   ' → logprob: -11.889968872070312
    8. '```' → logprob: -12.389968872070312
    9. 'ad' → logprob: -13.264968872070312
    10. '(adj' → logprob: -13.389968872070312

Token 144: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -16.25
    3. '[x' → logprob: -16.375
    4. ' [' → logprob: -16.75
    5. '[s' → logprob: -16.75
    6. '[I' → logprob: -16.75
    7. '[j' → logprob: -17.5
    8. '[u' → logprob: -18.25
    9. '```' → logprob: -18.375
    10. '[a' → logprob: -18.75

Token 145: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -5.955703818472102e-05
    2. '.append' → logprob: -10.250059127807617
    3. ']' → logprob: -11.125059127807617
    4. '.' → logprob: -11.875059127807617
    5. ' ].' → logprob: -13.750059127807617
    6. '[' → logprob: -14.125059127807617
    7. '   ' → logprob: -14.750059127807617
    8. '[i' → logprob: -16.875059127807617
    9. '[j' → logprob: -17.000059127807617
    10. ''].' → logprob: -17.375059127807617

Token 146: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.25
    3. ' append' → logprob: -16.5
    4. 'appen' → logprob: -20.375
    5. '_append' → logprob: -21.5
    6. '	append' → logprob: -21.875
    7. 'Append' → logprob: -22.0
    8. 'app' → logprob: -22.125
    9. 'add' → logprob: -23.875
    10. ' ' → logprob: -24.5

Token 147: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -4.56102097814437e-05
    2. 'j' → logprob: -10.000045776367188
    3. '(' → logprob: -16.250045776367188
    4. '	j' → logprob: -19.500045776367188
    5. '(i' → logprob: -19.875045776367188
    6. '((' → logprob: -20.375045776367188
    7. ',j' → logprob: -20.625045776367188
    8. '[j' → logprob: -20.625045776367188
    9. '(
' → logprob: -20.750045776367188
    10. ' (' → logprob: -20.875045776367188

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2028297483921051
    2. ')
' → logprob: -1.7028297185897827
    3. '               ' → logprob: -6.577829837799072
    4. '           ' → logprob: -11.202829360961914
    5. ')
' → logprob: -12.077829360961914
    6. '                   ' → logprob: -13.952829360961914
    7. ')

' → logprob: -13.952829360961914
    8. '),' → logprob: -14.202829360961914
    9. '<|end|>' → logprob: -14.577829360961914
    10. ')add' → logprob: -14.702829360961914

Token 149: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024399524554610252
    2. 'adj' → logprob: -3.899399518966675
    3. ' adj' → logprob: -5.774399757385254
    4. '           ' → logprob: -7.524399757385254
    5. '   ' → logprob: -9.399399757385254
    6. '       ' → logprob: -9.649399757385254
    7. '```' → logprob: -11.024399757385254
    8. '
' → logprob: -11.274399757385254
    9. '<|end|>' → logprob: -12.024399757385254
    10. '                   ' → logprob: -12.149399757385254

Token 150: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.011048528365790844
    2. ' adj' → logprob: -4.511048316955566
    3. '           ' → logprob: -15.511048316955566
    4. 'ad' → logprob: -15.636048316955566
    5. '               ' → logprob: -15.761048316955566
    6. '   ' → logprob: -17.011049270629883
    7. '(adj' → logprob: -17.011049270629883
    8. '                   ' → logprob: -17.886049270629883
    9. '       ' → logprob: -18.136049270629883
    10. 'Adj' → logprob: -19.511049270629883

Token 151: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20158368349075317
    2. '[j' → logprob: -1.7015836238861084
    3. '[' → logprob: -8.701583862304688
    4. '```' → logprob: -13.076583862304688
    5. ' [' → logprob: -14.576583862304688
    6. '[s' → logprob: -14.701583862304688
    7. 'i' → logprob: -15.576583862304688
    8. 'j' → logprob: -15.701583862304688
    9. '   ' → logprob: -15.826583862304688
    10. '[u' → logprob: -16.201583862304688

Token 152: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00019388488726690412
    2. '[i' → logprob: -8.87519359588623
    3. '.' → logprob: -10.00019359588623
    4. '.append' → logprob: -12.62519359588623
    5. ']' → logprob: -12.75019359588623
    6. ' ].' → logprob: -14.12519359588623
    7. ').' → logprob: -14.25019359588623
    8. '[' → logprob: -14.87519359588623
    9. '.i' → logprob: -15.50019359588623
    10. ' .' → logprob: -16.000194549560547

Token 153: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. '.append' → logprob: -14.375000953674316
    3. 'appen' → logprob: -14.500000953674316
    4. ' append' → logprob: -16.625001907348633
    5. 'adj' → logprob: -16.625001907348633
    6. '	append' → logprob: -17.125001907348633
    7. 'app' → logprob: -17.500001907348633
    8. 'add' → logprob: -18.250001907348633
    9. '```' → logprob: -19.500001907348633
    10. '_append' → logprob: -19.625001907348633

Token 154: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.696889623621246e-06
    2. 'i' → logprob: -12.87500286102295
    3. '(' → logprob: -18.625001907348633
    4. ' (' → logprob: -20.375001907348633
    5. '[i' → logprob: -21.375001907348633
    6. ',i' → logprob: -21.625001907348633
    7. ' i' → logprob: -21.625001907348633
    8. '(
' → logprob: -21.750001907348633
    9. ')i' → logprob: -21.750001907348633
    10. '	i' → logprob: -21.875001907348633

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.111979357432574e-05
    2. ')
' → logprob: -10.12507152557373
    3. '<|end|>' → logprob: -10.50007152557373
    4. ' )' → logprob: -13.87507152557373
    5. '```' → logprob: -14.87507152557373
    6. '<|end|>' → logprob: -15.12507152557373
    7. '   ' → logprob: -15.12507152557373
    8. '`)' → logprob: -15.50007152557373
    9. '
' → logprob: -15.50007152557373
    10. ']' → logprob: -15.62507152557373

Token 156: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.048414863646030426
    2. '   ' → logprob: -3.673414945602417
    3. ' visited' → logprob: -4.423414707183838
    4. 'from' → logprob: -5.423414707183838
    5. '
' → logprob: -5.798414707183838
    6. 'def' → logprob: -6.923414707183838
    7. '```' → logprob: -7.548414707183838
    8. 'import' → logprob: -7.923414707183838
    9. '    
' → logprob: -8.548415184020996
    10. 'while' → logprob: -9.048415184020996

Token 157: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.28894928097724915
    2. 'color' → logprob: -1.5389492511749268
    3. 'colors' → logprob: -3.7889492511749268
    4. 'from' → logprob: -5.163949489593506
    5. 'dist' → logprob: -5.788949489593506
    6. 'def' → logprob: -6.538949489593506
    7. '   ' → logprob: -7.413949489593506
    8. ' visited' → logprob: -7.663949489593506
    9. 'seen' → logprob: -8.163949012756348
    10. 'distance' → logprob: -8.413949012756348

Token 158: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.588028609752655
    2. '=[' → logprob: -1.3380286693572998
    3. ' =' → logprob: -1.7130286693572998
    4. '=[]' → logprob: -6.963028430938721
    5. ' =[' → logprob: -7.713028430938721
    6. '=set' → logprob: -7.838028430938721
    7. '={}' → logprob: -9.838028907775879
    8. '[' → logprob: -10.838028907775879
    9. '=[[' → logprob: -11.463028907775879
    10. '＝' → logprob: -11.838028907775879

Token 159: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.848420551046729e-05
    2. ' False' → logprob: -10.0000581741333
    3. '0' → logprob: -11.2500581741333
    4. '(False' → logprob: -18.000059127807617
    5. '   ' → logprob: -19.625059127807617
    6. '[' → logprob: -21.125059127807617
    7. ' ' → logprob: -21.375059127807617
    8. '=False' → logprob: -21.500059127807617
    9. '.False' → logprob: -22.250059127807617
    10. 'True' → logprob: -22.875059127807617

Token 160: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.3128626346588135
    2. ' for' → logprob: -1.8128626346588135
    3. ']' → logprob: -2.3128626346588135
    4. 'for' → logprob: -5.312862396240234
    5. ' ]' → logprob: -7.062862396240234
    6. ']*(' → logprob: -7.437862396240234
    7. ']+' → logprob: -9.812862396240234
    8. '   ' → logprob: -10.437862396240234
    9. '*' → logprob: -11.562862396240234
    10. '	for' → logprob: -12.437862396240234

Token 161: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.7697225252486533e-06
    2. ' n' → logprob: -12.625003814697266
    3. '(n' → logprob: -14.875003814697266
    4. '   ' → logprob: -18.625003814697266
    5. '	n' → logprob: -19.750003814697266
    6. '(' → logprob: -20.625003814697266
    7. '```' → logprob: -22.000003814697266
    8. ')n' → logprob: -22.125003814697266
    9. '
' → logprob: -22.500003814697266
    10. '[n' → logprob: -23.000003814697266

Token 162: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0016663733404129744
    2. '
' → logprob: -7.62666654586792
    3. '    
' → logprob: -8.001666069030762
    4. 'def' → logprob: -8.126666069030762
    5. 'for' → logprob: -8.876666069030762
    6. 'stack' → logprob: -9.251666069030762
    7. 'from' → logprob: -9.376666069030762
    8. '   ' → logprob: -9.876666069030762
    9. 'queue' → logprob: -10.126666069030762
    10. ' for' → logprob: -10.376666069030762

Token 163: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6129140853881836
    2. 'from' → logprob: -1.4879140853881836
    3. '   ' → logprob: -2.8629140853881836
    4. ' from' → logprob: -3.4879140853881836
    5. '
' → logprob: -3.4879140853881836
    6. 'stack' → logprob: -3.8629140853881836
    7. 'queue' → logprob: -3.9879140853881836
    8. 'for' → logprob: -4.237914085388184
    9. ' def' → logprob: -4.487914085388184
    10. 'components' → logprob: -4.737914085388184

Token 164: ' ans' (ID: 3345)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6275867819786072
    2. 'from' → logprob: -1.627586841583252
    3. 'max' → logprob: -2.002586841583252
    4. 'components' → logprob: -2.877586841583252
    5. 'component' → logprob: -4.377586841583252
    6. 'answer' → logprob: -4.502586841583252
    7. 'ans' (adapté à ' ans') → logprob: -4.627586841583252
    8. 'result' → logprob: -4.752586841583252
    9. 'stack' → logprob: -4.752586841583252
    10. 'res' → logprob: -5.252586841583252

Token 165: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07065393030643463
    2. ' =' → logprob: -2.6956539154052734
    3. '=[]' → logprob: -8.070653915405273
    4. '=[' → logprob: -8.695653915405273
    5. '=int' → logprob: -9.570653915405273
    6. ' =[' → logprob: -9.820653915405273
    7. '=max' → logprob: -9.945653915405273
    8. '={}' → logprob: -10.445653915405273
    9. ',' → logprob: -12.195653915405273
    10. '=None' → logprob: -12.320653915405273

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004532061982899904
    2. '[]' → logprob: -6.1295318603515625
    3. '1' → logprob: -6.7545318603515625
    4. '-' → logprob: -7.0045318603515625
    5. '[' → logprob: -9.254531860351562
    6. ' ' → logprob: -10.379531860351562
    7. 'n' → logprob: -10.754531860351562
    8. '"' → logprob: -11.254531860351562
    9. 'max' → logprob: -11.379531860351562
    10. '[]
' → logprob: -11.379531860351562

Token 167: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015835627913475037
    2. ' for' → logprob: -5.015835762023926
    3. 'for' → logprob: -5.390835762023926
    4. ' 
' → logprob: -6.140835762023926
    5. '    
' → logprob: -6.890835762023926
    6. '   ' → logprob: -7.640835762023926
    7. '  
' → logprob: -7.890835762023926
    8. '   
' → logprob: -8.640835762023926
    9. '
' → logprob: -8.765835762023926
    10. '' → logprob: -10.015835762023926

Token 168: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009739558212459087
    2. ' for' → logprob: -5.884739398956299
    3. ' 
' → logprob: -6.134739398956299
    4. '   ' → logprob: -6.384739398956299
    5. '    
' → logprob: -6.634739398956299
    6. 'for' → logprob: -6.884739398956299
    7. '  
' → logprob: -8.009739875793457
    8. '
' → logprob: -8.759739875793457
    9. '	
' → logprob: -9.509739875793457
    10. '   
' → logprob: -10.009739875793457

Token 169: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008958445861935616
    2. 'def' (adapté à ' def') → logprob: -4.758958339691162
    3. 'from' → logprob: -8.25895881652832
    4. ' for' → logprob: -9.50895881652832
    5. 'import' → logprob: -12.13395881652832
    6. '   ' → logprob: -12.25895881652832
    7. 'stack' → logprob: -14.88395881652832
    8. ' def' → logprob: -16.38395881652832
    9. '
' → logprob: -16.38395881652832
    10. '    
' → logprob: -17.13395881652832

Token 170: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6962075233459473
    2. 'dfs' → logprob: -0.6962075233459473
    3. ' bfs' → logprob: -5.821207523345947
    4. 'b' → logprob: -9.321207046508789
    5. 'def' → logprob: -13.821207046508789
    6. 'df' → logprob: -14.446207046508789
    7. 's' → logprob: -15.821207046508789
    8. ' DFS' → logprob: -16.19620704650879
    9. ' def' → logprob: -16.32120704650879
    10. 'DFS' → logprob: -16.32120704650879

Token 171: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0995836853981018
    2. '(v' → logprob: -2.849583625793457
    3. '(node' → logprob: -3.599583625793457
    4. '(i' → logprob: -4.724583625793457
    5. '(' → logprob: -7.849583625793457
    6. ' (' → logprob: -8.974583625793457
    7. '(x' → logprob: -9.349583625793457
    8. '(s' → logprob: -9.724583625793457
    9. '(a' → logprob: -11.724583625793457
    10. '(n' → logprob: -11.849583625793457

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09201660007238388
    2. '):
' → logprob: -2.9670166969299316
    3. ',' → logprob: -3.3420166969299316
    4. ',u' → logprob: -7.467016696929932
    5. ':' → logprob: -8.467016220092773
    6. ',v' → logprob: -9.092016220092773
    7. ')' → logprob: -10.092016220092773
    8. '(u' → logprob: -10.592016220092773
    9. '):
' → logprob: -10.592016220092773
    10. 'u' → logprob: -10.592016220092773

Token 173: '       ' (ID: 309)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.31680551171302795
    2. ' visited' → logprob: -2.191805601119995
    3. '   ' → logprob: -2.316805601119995
    4. '
' → logprob: -3.441805601119995
    5. '<|end|>' → logprob: -4.316805362701416
    6. '```' → logprob: -4.816805362701416
    7. '    
' → logprob: -5.941805362701416
    8. '       ' → logprob: -6.316805362701416
    9. '	stack' → logprob: -6.566805362701416
    10. 'Visited' → logprob: -7.441805362701416

Token 174: ' stack' (ID: 10825)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00855323113501072
    2. '   ' → logprob: -5.0085530281066895
    3. 'stack' (adapté à ' stack') → logprob: -6.5085530281066895
    4. ' visited' → logprob: -8.133553504943848
    5. 'global' → logprob: -11.258553504943848
    6. '```' → logprob: -11.383553504943848
    7. '
' → logprob: -11.758553504943848
    8. 'vis' → logprob: -11.883553504943848
    9. '    
' → logprob: -12.633553504943848
    10. '       ' → logprob: -12.883553504943848

Token 175: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2793874740600586
    2. ' =' → logprob: -1.9043874740600586
    3. '=[]' → logprob: -2.9043874740600586
    4. '=[' → logprob: -3.2793874740600586
    5. '.append' → logprob: -6.654387474060059
    6. ' =[' → logprob: -7.529387474060059
    7. '=[
' → logprob: -8.404387474060059
    8. '=['' → logprob: -9.029387474060059
    9. '=[]
' → logprob: -9.404387474060059
    10. '.pop' → logprob: -9.529387474060059

Token 176: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.320199877838604e-07
    2. ' u' → logprob: -14.75
    3. '   ' → logprob: -19.0
    4. '[u' → logprob: -19.25
    5. '(u' → logprob: -20.125
    6. '	u' → logprob: -20.5
    7. '
' → logprob: -21.0
    8. '```' → logprob: -22.125
    9. ''u' → logprob: -23.125
    10. '    
' → logprob: -23.625

Token 177: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4741547703742981
    2. ']' → logprob: -0.9741547703742981
    3. ']
' → logprob: -10.724154472351074
    4. ')' → logprob: -10.849154472351074
    5. ' ]
' → logprob: -11.349154472351074
    6. ')
' → logprob: -11.349154472351074
    7. ' ]' → logprob: -11.724154472351074
    8. '
' → logprob: -13.224154472351074
    9. ']

' → logprob: -13.974154472351074
    10. ']()
' → logprob: -15.099154472351074

Token 178: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010654398938640952
    2. '   ' → logprob: -7.626065254211426
    3. ' while' → logprob: -8.251065254211426
    4. '       ' → logprob: -9.376065254211426
    5. '    
' → logprob: -10.001065254211426
    6. '  
' → logprob: -10.001065254211426
    7. 'while' → logprob: -10.126065254211426
    8. ' 
' → logprob: -10.251065254211426
    9. '
' → logprob: -11.251065254211426
    10. '```' → logprob: -11.251065254211426

Token 179: ' count' (ID: 3605)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6579363942146301
    2. 'count' (adapté à ' count') → logprob: -1.5329363346099854
    3. 'size' → logprob: -1.6579363346099854
    4. 'while' → logprob: -3.1579363346099854
    5. '   ' → logprob: -4.5329365730285645
    6. 'component' → logprob: -4.6579365730285645
    7. 'cnt' → logprob: -5.2829365730285645
    8. 'res' → logprob: -6.0329365730285645
    9. '       ' → logprob: -6.1579365730285645
    10. 'result' → logprob: -7.6579365730285645

Token 180: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693892419338226
    2. ' =' → logprob: -2.126938819885254
    3. ' ' → logprob: -11.626938819885254
    4. '=int' → logprob: -14.001938819885254
    5. '=len' → logprob: -15.126938819885254
    6. '=None' → logprob: -15.876938819885254
    7. ' +=' → logprob: -16.37693977355957
    8. '=count' → logprob: -16.50193977355957
    9. '   ' → logprob: -16.75193977355957
    10. '+=' → logprob: -17.00193977355957

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020560692995786667
    2. '1' → logprob: -3.8955607414245605
    3. ' ' → logprob: -10.895560264587402
    4. '   ' → logprob: -16.02056121826172
    5. '```' → logprob: -17.14556121826172
    6. '-' → logprob: -17.70806121826172
    7. '۰' → logprob: -17.89556121826172
    8. 'len' → logprob: -18.14556121826172
    9. '01' → logprob: -18.70806121826172
    10. '  ' → logprob: -18.77056121826172

Token 182: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06759248673915863
    2. ' 
' → logprob: -3.0675923824310303
    3. '<|end|>' → logprob: -4.067592620849609
    4. '  
' → logprob: -7.442592620849609
    5. ' ' → logprob: -7.817592620849609
    6. ' while' → logprob: -8.81759262084961
    7. '    
' → logprob: -8.94259262084961
    8. '<|end|>' → logprob: -9.44259262084961
    9. '   ' → logprob: -9.56759262084961
    10. '
' → logprob: -9.56759262084961

Token 183: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3258246183395386
    2. ' 
' → logprob: -1.5758246183395386
    3. '<|end|>' → logprob: -2.950824737548828
    4. '   ' → logprob: -4.950824737548828
    5. '  
' → logprob: -5.825824737548828
    6. ' while' → logprob: -5.950824737548828
    7. '    
' → logprob: -6.200824737548828
    8. ' ' → logprob: -6.325824737548828
    9. '```' → logprob: -7.575824737548828
    10. '<|end|>' → logprob: -7.575824737548828

Token 184: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2534044682979584
    2. ' while' → logprob: -1.5034044981002808
    3. 'visited' (adapté à ' visited') → logprob: -6.75340461730957
    4. '   ' → logprob: -8.62840461730957
    5. '
' → logprob: -10.00340461730957
    6. ' visited' → logprob: -10.50340461730957
    7. '       ' → logprob: -10.75340461730957
    8. '	while' → logprob: -10.87840461730957
    9. ' 
' → logprob: -12.25340461730957
    10. 'While' → logprob: -13.00340461730957

Token 185: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -8.625866030342877e-05
    2. '[' → logprob: -9.375085830688477
    3. '[user' → logprob: -14.750085830688477
    4. '```' → logprob: -15.000085830688477
    5. ' [' → logprob: -15.875085830688477
    6. '[v' → logprob: -16.000085830688477
    7. '[s' → logprob: -16.250085830688477
    8. '[current' → logprob: -17.250085830688477
    9. 'u' → logprob: -17.375085830688477
    10. '[node' → logprob: -17.375085830688477

Token 186: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.20145826041698456
    2. ']' → logprob: -1.701458215713501
    3. '=' → logprob: -10.826457977294922
    4. '=True' → logprob: -11.076457977294922
    5. ' ]' → logprob: -11.826457977294922
    6. '']=' → logprob: -13.576457977294922
    7. '"]=' → logprob: -15.201457977294922
    8. 'True' → logprob: -15.576457977294922
    9. ']+=' → logprob: -15.576457977294922
    10. ')=' → logprob: -15.701457977294922

Token 187: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.2729995988775045e-06
    2. ' True' → logprob: -12.000006675720215
    3. '(True' → logprob: -21.5000057220459
    4. '=True' → logprob: -22.3750057220459
    5. '1' → logprob: -23.1250057220459
    6. 'False' → logprob: -24.3750057220459
    7. 'true' → logprob: -24.3750057220459
    8. '   ' → logprob: -24.7500057220459
    9. 'Tr' → logprob: -26.7500057220459
    10. ' ' → logprob: -26.7500057220459

Token 188: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013644123449921608
    2. '<|end|>' → logprob: -5.388644218444824
    3. ' 
' → logprob: -5.513644218444824
    4. '  
' → logprob: -5.638644218444824
    5. '    
' → logprob: -7.388644218444824
    6. '
' → logprob: -8.763644218444824
    7. '   
' → logprob: -9.263644218444824
    8. '\n' → logprob: -9.263644218444824
    9. '	
' → logprob: -9.263644218444824
    10. '   ' → logprob: -9.263644218444824

Token 189: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08007922023534775
    2. ' 
' → logprob: -2.7050793170928955
    3. '    
' → logprob: -5.830079078674316
    4. '  
' → logprob: -5.955079078674316
    5. '<|end|>' → logprob: -6.080079078674316
    6. '   ' → logprob: -7.330079078674316
    7. '\n' → logprob: -7.580079078674316
    8. ' while' → logprob: -8.455079078674316
    9. '```' → logprob: -8.455079078674316
    10. '	
' → logprob: -9.080079078674316

Token 190: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0041463072411715984
    2. ' while' → logprob: -5.504146099090576
    3. 'count' → logprob: -9.629146575927734
    4. '   ' → logprob: -13.879146575927734
    5. '	while' → logprob: -14.129146575927734
    6. 'While' → logprob: -15.379146575927734
    7. '       ' → logprob: -17.004146575927734
    8. '<|end|>' → logprob: -17.129146575927734
    9. ' ' → logprob: -17.379146575927734
    10. '
' → logprob: -17.754146575927734

Token 191: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07889077812433243
    2. ' stack' → logprob: -2.578890800476074
    3. '(stack' → logprob: -14.453890800476074
    4. '	stack' → logprob: -14.703890800476074
    5. ' ' → logprob: -18.453889846801758
    6. '   ' → logprob: -18.453889846801758
    7. 'len' → logprob: -18.703889846801758
    8. 'st' → logprob: -19.203889846801758
    9. 'Stack' → logprob: -20.203889846801758
    10. '
' → logprob: -20.578889846801758

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019803799223154783
    2. '):' → logprob: -6.501980304718018
    3. ':
' → logprob: -7.751980304718018
    4. '>:' → logprob: -10.876980781555176
    5. '):
' → logprob: -11.376980781555176
    6. '```' → logprob: -12.376980781555176
    7. ':**' → logprob: -12.626980781555176
    8. ')' → logprob: -13.251980781555176
    9. ']:' → logprob: -13.876980781555176
    10. '.pop' → logprob: -13.876980781555176

Token 193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9821990728378296
    2. 'u' → logprob: -1.1071990728378296
    3. ' u' → logprob: -1.2321990728378296
    4. 'v' → logprob: -6.482199192047119
    5. ' v' → logprob: -6.607199192047119
    6. '	       ' → logprob: -8.982198715209961
    7. ' node' → logprob: -8.982198715209961
    8. 'node' → logprob: -9.607198715209961
    9. '```' → logprob: -10.232198715209961
    10. '	u' → logprob: -10.357198715209961

Token 194: ' cur' (ID: 4396)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04131573811173439
    2. 'u' → logprob: -4.29131555557251
    3. ' v' → logprob: -4.29131555557251
    4. 'node' → logprob: -4.66631555557251
    5. ' node' → logprob: -6.04131555557251
    6. 'cur' (adapté à ' cur') → logprob: -7.41631555557251
    7. ' u' → logprob: -7.79131555557251
    8. 'curr' → logprob: -8.666316032409668
    9. ' cur' → logprob: -10.291316032409668
    10. 'w' → logprob: -10.541316032409668

Token 195: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.130576806142926e-05
    2. ' =' → logprob: -10.375031471252441
    3. '=
' → logprob: -16.500030517578125
    4. '=s' → logprob: -18.500030517578125
    5. '(stack' → logprob: -19.250030517578125
    6. ' stack' → logprob: -19.375030517578125
    7. '=

' → logprob: -19.625030517578125
    8. 'stack' → logprob: -20.125030517578125
    9. ']=' → logprob: -20.750030517578125
    10. ')=' → logprob: -20.750030517578125

Token 196: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -9.615255839889869e-05
    2. ' stack' → logprob: -9.250096321105957
    3. '	stack' → logprob: -20.00009536743164
    4. '(stack' → logprob: -20.00009536743164
    5. '.stack' → logprob: -22.12509536743164
    6. 'stick' → logprob: -22.87509536743164
    7. 'stackoverflow' → logprob: -23.50009536743164
    8. ' ' → logprob: -24.12509536743164
    9. '_stack' → logprob: -24.25009536743164
    10. 'stock' → logprob: -24.62509536743164

Token 197: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.7729658540920354e-05
    2. 'pop' → logprob: -10.500027656555176
    3. '.' → logprob: -15.875027656555176
    4. '   ' → logprob: -18.250028610229492
    5. '[-' → logprob: -18.375028610229492
    6. 'Pop' → logprob: -19.000028610229492
    7. '	pop' → logprob: -19.750028610229492
    8. '.Pop' → logprob: -20.375028610229492
    9. '-pop' → logprob: -20.500028610229492
    10. ' pop' → logprob: -20.500028610229492

Token 198: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03804366663098335
    2. '()
' → logprob: -3.288043737411499
    3. '()

' → logprob: -14.163043975830078
    4. '()
' → logprob: -14.163043975830078
    5. '())' → logprob: -15.288043975830078
    6. '()]' → logprob: -15.663043975830078
    7. '(' → logprob: -15.663043975830078
    8. '()`' → logprob: -16.663043975830078
    9. '())
' → logprob: -16.913043975830078
    10. ')' → logprob: -17.038043975830078

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07655762881040573
    2. 'count' → logprob: -3.4515576362609863
    3. ' count' → logprob: -3.7015576362609863
    4. '
' → logprob: -4.201557636260986
    5. '               ' → logprob: -6.451557636260986
    6. ' 
' → logprob: -8.076557159423828
    7. '            
' → logprob: -8.701557159423828
    8. '```' → logprob: -9.451557159423828
    9. '   ' → logprob: -9.576557159423828
    10. '       ' → logprob: -10.326557159423828

Token 200: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0002736138121690601
    2. ' count' → logprob: -8.375273704528809
    3. '           ' → logprob: -10.375273704528809
    4. '
' → logprob: -12.000273704528809
    5. '   ' → logprob: -12.250273704528809
    6. '       ' → logprob: -15.125273704528809
    7. '               ' → logprob: -15.875273704528809
    8. '```' → logprob: -16.125272750854492
    9. '	count' → logprob: -16.125272750854492
    10. ' ' → logprob: -16.500272750854492

Token 201: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048655036836862564
    2. ' +=' → logprob: -3.0486550331115723
    3. '+' → logprob: -9.79865550994873
    4. ']+=' → logprob: -12.17365550994873
    5. '=' → logprob: -12.79865550994873
    6. '+=(' → logprob: -12.79865550994873
    7. '   ' → logprob: -14.67365550994873
    8. '+="' → logprob: -14.79865550994873
    9. '+='' → logprob: -15.29865550994873
    10. '```' → logprob: -16.423654556274414

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. 'len' → logprob: -18.625
    4. '   ' → logprob: -19.75
    5. '۱' → logprob: -21.0625
    6. '+' → logprob: -21.1875
    7. '
' → logprob: -21.1875
    8. '```' → logprob: -21.3125
    9. '１' → logprob: -21.8125
    10. '  ' → logprob: -22.4375

Token 203: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15868647396564484
    2. 'for' → logprob: -2.158686399459839
    3. '
' → logprob: -4.158686637878418
    4. '           ' → logprob: -4.908686637878418
    5. '   ' → logprob: -5.283686637878418
    6. '    
' → logprob: -6.783686637878418
    7. '            
' → logprob: -6.783686637878418
    8. ' 
' → logprob: -7.658686637878418
    9. '       ' → logprob: -9.158686637878418
    10. '	for' → logprob: -9.283686637878418

Token 204: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5827221274375916
    2. 'for' → logprob: -0.8327221274375916
    3. '           ' → logprob: -6.207722187042236
    4. '
' → logprob: -6.457722187042236
    5. '   ' → logprob: -7.207722187042236
    6. '            
' → logprob: -7.332722187042236
    7. '    
' → logprob: -7.457722187042236
    8. '	for' → logprob: -7.582722187042236
    9. ' 
' → logprob: -7.707722187042236
    10. '       ' → logprob: -9.207721710205078

Token 205: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00015908108616713434
    2. ' for' → logprob: -8.75015926361084
    3. '           ' → logprob: -15.12515926361084
    4. '	for' → logprob: -16.625158309936523
    5. '            
' → logprob: -16.625158309936523
    6. '   ' → logprob: -17.000158309936523
    7. '
' → logprob: -17.250158309936523
    8. '```' → logprob: -17.750158309936523
    9. '    
' → logprob: -19.875158309936523
    10. '       ' → logprob: -20.250158309936523

Token 206: ' nxt' (ID: 160200)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.021076751872897148
    2. 'w' → logprob: -4.021076679229736
    3. 'nx' → logprob: -7.021076679229736
    4. 'nei' → logprob: -7.021076679229736
    5. 'nv' → logprob: -7.271076679229736
    6. ' nxt' → logprob: -8.896077156066895
    7. 'neighbor' → logprob: -9.271077156066895
    8. 'nbr' → logprob: -9.271077156066895
    9. 'n' → logprob: -10.021077156066895
    10. 'ne' → logprob: -10.521077156066895

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759539604187012
    2. 'in' → logprob: -0.8259539604187012
    3. '	in' → logprob: -11.95095443725586
    4. ' ' → logprob: -12.57595443725586
    5. 'n' → logprob: -12.82595443725586
    6. '_in' → logprob: -14.82595443725586
    7. 'In' → logprob: -14.82595443725586
    8. '"in' → logprob: -15.45095443725586
    9. '```' → logprob: -15.57595443725586
    10. ' ' → logprob: -16.32595443725586

Token 208: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0011706985533237457
    2. ' adj' → logprob: -6.751170635223389
    3. 'ad' → logprob: -15.001171112060547
    4. '(adj' → logprob: -16.626171112060547
    5. '   ' → logprob: -21.376171112060547
    6. ' ' → logprob: -21.376171112060547
    7. 'adm' → logprob: -21.501171112060547
    8. 'aj' → logprob: -23.251171112060547
    9. '  ' → logprob: -23.501171112060547
    10. '_adj' → logprob: -23.626171112060547

Token 209: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -3.128163257315464e-07
    2. 'cur' → logprob: -15.375
    3. '[' → logprob: -19.5
    4. '(cur' → logprob: -19.625
    5. '	cur' → logprob: -20.125
    6. ' [' → logprob: -20.875
    7. '   ' → logprob: -20.875
    8. '[current' → logprob: -21.0
    9. '[curr' → logprob: -21.0
    10. '[u' → logprob: -21.125

Token 210: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3156943917274475
    2. ']:
' → logprob: -1.3156943321228027
    3. ':' → logprob: -6.690694332122803
    4. ']' → logprob: -6.940694332122803
    5. ']:
' → logprob: -9.565694808959961
    6. ':
' → logprob: -9.815694808959961
    7. '):
' → logprob: -10.440694808959961
    8. ']>' → logprob: -11.315694808959961
    9. ']:

' → logprob: -11.315694808959961
    10. '>:' → logprob: -11.690694808959961

Token 211: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012421702966094017
    2. ' if' → logprob: -4.637421607971191
    3. 'if' → logprob: -6.137421607971191
    4. '<|end|>' → logprob: -8.762421607971191
    5. '           ' → logprob: -9.262421607971191
    6. '	           ' → logprob: -9.887421607971191
    7. '```' → logprob: -10.012421607971191
    8. '                
' → logprob: -10.137421607971191
    9. '       ' → logprob: -10.887421607971191
    10. '		       ' → logprob: -11.012421607971191

Token 212: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5750108957290649
    2. ' if' → logprob: -0.9500108957290649
    3. 'if' (adapté à ' if') → logprob: -3.0750107765197754
    4. '               ' → logprob: -6.075010776519775
    5. '           ' → logprob: -7.825010776519775
    6. '       ' → logprob: -7.825010776519775
    7. '   ' → logprob: -8.325011253356934
    8. '                       ' → logprob: -8.575011253356934
    9. '                ' → logprob: -9.075011253356934
    10. '                    
' → logprob: -9.325011253356934

Token 213: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5759469866752625
    2. ' not' → logprob: -0.8259469866752625
    3. '(not' → logprob: -12.700946807861328
    4. '	not' → logprob: -13.200946807861328
    5. 'visited' → logprob: -13.700946807861328
    6. '!' → logprob: -14.325946807861328
    7. 'n' → logprob: -14.950946807861328
    8. ' ' → logprob: -15.700946807861328
    9. ' visited' → logprob: -16.325946807861328
    10. ':not' → logprob: -16.450946807861328

Token 214: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.12692810595035553
    2. ' visited' → logprob: -2.1269280910491943
    3. 'visit' → logprob: -18.376928329467773
    4. 'Visited' → logprob: -19.001928329467773
    5. 'vis' → logprob: -19.376928329467773
    6. ' ' → logprob: -20.376928329467773
    7. ' ' → logprob: -20.376928329467773
    8. '
' → logprob: -20.626928329467773
    9. '   ' → logprob: -21.001928329467773
    10. ' visit' → logprob: -21.876928329467773

Token 215: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.320199877838604e-07
    2. 'n' → logprob: -15.25
    3. '[' → logprob: -15.875
    4. '[next' → logprob: -17.5
    5. '[
' → logprob: -18.0
    6. '	n' → logprob: -18.5
    7. '
' → logprob: -18.625
    8. '```' → logprob: -18.75
    9. '

' → logprob: -19.0
    10. ' [' → logprob: -19.0

Token 216: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.8624639324116288e-06
    2. 'x' → logprob: -13.750001907348633
    3. 'st' → logprob: -15.000001907348633
    4. '[' → logprob: -15.500001907348633
    5. ']' → logprob: -16.125001907348633
    6. '[n' → logprob: -17.125001907348633
    7. 't' → logprob: -19.125001907348633
    8. '][' → logprob: -19.125001907348633
    9. '[t' → logprob: -19.125001907348633
    10. '```' → logprob: -19.500001907348633

Token 217: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.019340146332979202
    2. ']:
' → logprob: -4.0193400382995605
    3. ']' → logprob: -6.7693400382995605
    4. ']:

' → logprob: -10.644340515136719
    5. ']:
' → logprob: -11.144340515136719
    6. ':' → logprob: -13.644340515136719
    7. ' ]' → logprob: -14.144340515136719
    8. ']:


' → logprob: -14.769340515136719
    9. '']:' → logprob: -15.894340515136719
    10. '"]:' → logprob: -16.01934051513672

Token 218: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0026323767378926277
    2. ' visited' → logprob: -7.002632141113281
    3. '                    
' → logprob: -7.502632141113281
    4. 'visited' → logprob: -7.752632141113281
    5. '                       ' → logprob: -8.502632141113281
    6. '               ' → logprob: -8.877632141113281
    7. '```' → logprob: -9.127632141113281
    8. '                  ' → logprob: -9.877632141113281
    9. '                    ' → logprob: -10.252632141113281
    10. '   ' → logprob: -10.627632141113281

Token 219: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.17082062363624573
    2. 'visited' (adapté à ' visited') → logprob: -2.295820713043213
    3. '                       ' → logprob: -2.920820713043213
    4. '                   ' → logprob: -6.170820713043213
    5. '       ' → logprob: -9.295820236206055
    6. '
' → logprob: -9.545820236206055
    7. ' visits' → logprob: -10.045820236206055
    8. '                    ' → logprob: -10.295820236206055
    9. '   ' → logprob: -10.420820236206055
    10. ' 
' → logprob: -10.920820236206055

Token 220: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00018399098189547658
    2. '[' → logprob: -8.625184059143066
    3. 'n' → logprob: -13.750184059143066
    4. '[next' → logprob: -14.000184059143066
    5. '[
' → logprob: -14.250184059143066
    6. '```' → logprob: -14.500184059143066
    7. '

' → logprob: -14.875184059143066
    8. ' [' → logprob: -15.125184059143066
    9. '\[' → logprob: -15.625184059143066
    10. '[N' → logprob: -16.12518310546875

Token 221: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -3.273621405242011e-05
    2. 'st' → logprob: -10.750032424926758
    3. '[n' → logprob: -12.250032424926758
    4. 'x' → logprob: -12.625032424926758
    5. 't' → logprob: -13.750032424926758
    6. '```' → logprob: -14.000032424926758
    7. ' nxt' → logprob: -14.875032424926758
    8. 'ext' → logprob: -15.000032424926758
    9. '[next' → logprob: -15.500032424926758
    10. '   ' → logprob: -16.625032424926758

Token 222: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.24690289795398712
    2. ']' → logprob: -1.7469029426574707
    3. '[n' → logprob: -3.1219029426574707
    4. ']==' → logprob: -8.871902465820312
    5. ']:
' → logprob: -9.746902465820312
    6. ' ]' → logprob: -9.871902465820312
    7. '[next' → logprob: -10.121902465820312
    8. ']
' → logprob: -11.121902465820312
    9. 'n' → logprob: -11.121902465820312
    10. ']+=' → logprob: -11.121902465820312

Token 223: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: 0.0
    2. ' True' → logprob: -16.75
    3. '(True' → logprob: -21.25
    4. '=True' → logprob: -23.5
    5. 'Tr' → logprob: -24.125
    6. 'true' → logprob: -24.5
    7. 'False' → logprob: -24.625
    8. '[' → logprob: -25.5
    9. '
' → logprob: -25.625
    10. 'T' → logprob: -25.875

Token 224: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.048482101410627365
    2. '
' → logprob: -3.1734821796417236
    3. '                    
' → logprob: -6.0484819412231445
    4. '    
' → logprob: -7.1734819412231445
    5. '               ' → logprob: -7.6734819412231445
    6. '  
' → logprob: -7.6734819412231445
    7. '           ' → logprob: -8.548481941223145
    8. '                    ' → logprob: -8.548481941223145
    9. '                       ' → logprob: -8.923481941223145
    10. ' 
' → logprob: -9.048481941223145

Token 225: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03703613206744194
    2. '
' → logprob: -3.787036180496216
    3. '                    
' → logprob: -5.287035942077637
    4. ' 
' → logprob: -6.287035942077637
    5. '```' → logprob: -6.287035942077637
    6. '    
' → logprob: -6.787035942077637
    7. '               ' → logprob: -6.787035942077637
    8. '                    ' → logprob: -7.287035942077637
    9. '                       ' → logprob: -8.287035942077637
    10. '  
' → logprob: -8.412035942077637

Token 226: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.00033546582562848926
    2. ' stack' → logprob: -8.000335693359375
    3. '	stack' → logprob: -20.125335693359375
    4. '                   ' → logprob: -20.750335693359375
    5. 'Stack' → logprob: -21.750335693359375
    6. 'stackoverflow' → logprob: -22.375335693359375
    7. '_stack' → logprob: -22.500335693359375
    8. '.stack' → logprob: -22.875335693359375
    9. '   ' → logprob: -23.000335693359375
    10. '(stack' → logprob: -23.375335693359375

Token 227: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.088346359931165e-07
    2. '.extend' → logprob: -14.500000953674316
    3. '.' → logprob: -15.125000953674316
    4. 'append' → logprob: -16.375
    5. '.push' → logprob: -17.75
    6. '.app' → logprob: -18.75
    7. '.Append' → logprob: -18.875
    8. ' .' → logprob: -19.125
    9. ' append' → logprob: -19.875
    10. '.pop' → logprob: -20.0

Token 228: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018150296062231064
    2. '(' → logprob: -4.018150329589844
    3. '(
' → logprob: -15.643150329589844
    4. '((' → logprob: -15.768150329589844
    5. '(

' → logprob: -17.268150329589844
    6. '(nx' → logprob: -18.268150329589844
    7. ' (' → logprob: -18.393150329589844
    8. 'n' → logprob: -18.643150329589844
    9. '(next' → logprob: -18.893150329589844
    10. '(s' → logprob: -19.018150329589844

Token 229: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: 0.0
    2. 'x' → logprob: -19.625
    3. '```' → logprob: -19.75
    4. 't' → logprob: -20.125
    5. '_xt' → logprob: -20.125
    6. '[' → logprob: -21.0
    7. '.xt' → logprob: -21.375
    8. ']' → logprob: -21.5
    9. '   ' → logprob: -21.5
    10. '>' → logprob: -21.625

Token 230: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.901345038088039e-05
    2. ')
' → logprob: -9.250099182128906
    3. ' )' → logprob: -13.125099182128906
    4. '<|end|>' → logprob: -15.750099182128906
    5. ')return' → logprob: -16.375099182128906
    6. ')n' → logprob: -16.375099182128906
    7. '))' → logprob: -16.625099182128906
    8. ')}}' → logprob: -17.000099182128906
    9. '）' → logprob: -17.125099182128906
    10. ')

' → logprob: -17.250099182128906

Token 231: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24435895681381226
    2. '       ' → logprob: -1.869359016418457
    3. ')' → logprob: -3.244359016418457
    4. 'return' → logprob: -4.994359016418457
    5. '
' → logprob: -5.119359016418457
    6. '    
' → logprob: -5.869359016418457
    7. ')
' → logprob: -6.119359016418457
    8. ' return' → logprob: -6.619359016418457
    9. '           ' → logprob: -6.744359016418457
    10. '\n' → logprob: -7.244359016418457

Token 232: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3253448009490967
    2. '   ' → logprob: -1.4503448009490967
    3. ' return' → logprob: -3.2003448009490967
    4. '
' → logprob: -6.325345039367676
    5. ')' → logprob: -8.325345039367676
    6. ' ' → logprob: -8.700345039367676
    7. '```' → logprob: -9.575345039367676
    8. '    
' → logprob: -9.825345039367676
    9. '       ' → logprob: -9.950345039367676
    10. '	return' → logprob: -10.075345039367676

Token 233: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.493430894101039e-05
    2. ' count' → logprob: -9.500075340270996
    3. '(count' → logprob: -18.25007438659668
    4. '[count' → logprob: -21.75007438659668
    5. '	count' → logprob: -23.25007438659668
    6. '<count' → logprob: -23.37507438659668
    7. ' ' → logprob: -23.50007438659668
    8. '
' → logprob: -23.75007438659668
    9. '$count' → logprob: -24.00007438659668
    10. 'counts' → logprob: -24.62507438659668

Token 234: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005394661333411932
    2. '   ' → logprob: -5.755394458770752
    3. '    
' → logprob: -7.130394458770752
    4. ' for' → logprob: -7.880394458770752
    5. 'for' → logprob: -7.880394458770752
    6. '
' → logprob: -8.63039493560791
    7. '
    
' → logprob: -8.75539493560791
    8. '

' → logprob: -9.25539493560791
    9. 'max' → logprob: -9.88039493560791
    10. 'size' → logprob: -10.38039493560791

Token 235: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.001978714717552066
    2. '   ' → logprob: -6.751978874206543
    3. 'for' → logprob: -8.251978874206543
    4. ' for' → logprob: -8.626978874206543
    5. 'n' → logprob: -9.251978874206543
    6. '    
' → logprob: -9.251978874206543
    7. ' 
' → logprob: -9.376978874206543
    8. '  
' → logprob: -10.251978874206543
    9. '
' → logprob: -11.126978874206543
    10. '\n' → logprob: -11.251978874206543

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01350935734808445
    2. ' for' → logprob: -4.763509273529053
    3. '   ' → logprob: -6.388509273529053
    4. '
' → logprob: -6.888509273529053
    5. 'ans' → logprob: -7.263509273529053
    6. 'max' → logprob: -7.388509273529053
    7. 'components' → logprob: -8.513509750366211
    8. 'size' → logprob: -9.013509750366211
    9. 'component' → logprob: -9.263509750366211
    10. 'sizes' → logprob: -9.263509750366211

Token 237: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6937696933746338
    2. ' i' → logprob: -0.6937696933746338
    3. 'u' → logprob: -7.818769454956055
    4. ' u' → logprob: -8.443769454956055
    5. 'v' → logprob: -13.068769454956055
    6. ' v' → logprob: -13.443769454956055
    7. ' node' → logprob: -14.443769454956055
    8. ' ' → logprob: -15.193769454956055
    9. 'node' → logprob: -15.318769454956055
    10. '```' → logprob: -16.068769454956055

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06198449432849884
    2. 'in' → logprob: -2.8119845390319824
    3. ' ' → logprob: -11.061984062194824
    4. '	in' → logprob: -15.061984062194824
    5. 'range' → logprob: -15.311984062194824
    6. 'n' → logprob: -15.311984062194824
    7. '  ' → logprob: -15.936984062194824
    8. 'In' → logprob: -16.68698501586914
    9. '   ' → logprob: -17.06198501586914
    10. ' ' → logprob: -17.18698501586914

Token 239: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '(range' → logprob: -18.62520408630371
    4. '
' → logprob: -22.87520408630371
    5. ' ' → logprob: -23.25020408630371
    6. '	range' → logprob: -23.37520408630371
    7. '```' → logprob: -23.37520408630371
    8. 'Range' → logprob: -23.75020408630371
    9. '   ' → logprob: -23.75020408630371
    10. 'ange' → logprob: -23.87520408630371

Token 240: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.5822400857578032e-05
    2. '(' → logprob: -10.750025749206543
    3. 'n' → logprob: -12.375025749206543
    4. '(len' → logprob: -17.25002670288086
    5. ' (' → logprob: -18.62502670288086
    6. '(
' → logprob: -18.62502670288086
    7. ' n' → logprob: -20.00002670288086
    8. '(N' → logprob: -20.25002670288086
    9. '(num' → logprob: -20.62502670288086
    10. ',n' → logprob: -22.25002670288086

Token 241: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001342903997283429
    2. '):
' → logprob: -9.250134468078613
    3. ' ):' → logprob: -10.875134468078613
    4. ':' → logprob: -11.000134468078613
    5. '}:' → logprob: -14.000134468078613
    6. ')' → logprob: -14.500134468078613
    7. '():' → logprob: -14.750134468078613
    8. '):
' → logprob: -15.875134468078613
    9. ']:' → logprob: -15.875134468078613
    10. '   ' → logprob: -16.000133514404297

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01628655195236206
    2. ' if' → logprob: -4.766286373138428
    3. '   ' → logprob: -5.266286373138428
    4. 'if' → logprob: -6.766286373138428
    5. '<|end|>' → logprob: -6.891286373138428
    6. '    
' → logprob: -9.641286849975586
    7. '	   ' → logprob: -10.141286849975586
    8. '    ' → logprob: -10.391286849975586
    9. '        
' → logprob: -10.516286849975586
    10. '	if' → logprob: -10.516286849975586

Token 243: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011052182875573635
    2. ' if' → logprob: -4.511052131652832
    3. '       ' → logprob: -12.511052131652832
    4. '   ' → logprob: -14.636052131652832
    5. 'not' → logprob: -16.26105308532715
    6. '	if' → logprob: -17.26105308532715
    7. '    ' → logprob: -18.26105308532715
    8. 'i' → logprob: -18.38605308532715
    9. '
' → logprob: -18.63605308532715
    10. 'If' → logprob: -18.63605308532715

Token 244: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00861456897109747
    2. 'not' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.883615493774414
    4. '	not' → logprob: -17.883615493774414
    5. ' ' → logprob: -18.633615493774414
    6. '   ' → logprob: -19.508615493774414
    7. '!' → logprob: -19.633615493774414
    8. ' visited' → logprob: -20.383615493774414
    9. '(not' → logprob: -20.508615493774414
    10. ' no' → logprob: -20.883615493774414

Token 245: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.47407710552215576
    2. 'visited' → logprob: -0.9740771055221558
    3. ' ' → logprob: -17.349077224731445
    4. 'visit' → logprob: -17.849077224731445
    5. 'Visited' → logprob: -17.849077224731445
    6. 'vis' → logprob: -18.099077224731445
    7. ' visit' → logprob: -18.349077224731445
    8. ' ' → logprob: -19.849077224731445
    9. 'visible' → logprob: -19.849077224731445
    10. '   ' → logprob: -19.849077224731445

Token 246: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. '[u' → logprob: -19.5
    4. '[I' → logprob: -19.5
    5. '[n' → logprob: -19.875
    6. '[
' → logprob: -20.0
    7. '```' → logprob: -20.0
    8. ' [' → logprob: -20.25
    9. '[j' → logprob: -20.5
    10. '[s' → logprob: -20.625

Token 247: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008755081333220005
    2. '):
' → logprob: -4.883755207061768
    3. ':' → logprob: -7.258755207061768
    4. ']:' → logprob: -7.758755207061768
    5. ' ):' → logprob: -11.63375473022461
    6. ']):' → logprob: -13.38375473022461
    7. ')' → logprob: -13.38375473022461
    8. '}:' → logprob: -13.63375473022461
    9. ':
' → logprob: -14.13375473022461
    10. ']:
' → logprob: -14.25875473022461

Token 248: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0061432123184204
    2. ':' → logprob: -1.1311432123184204
    3. '       ' → logprob: -1.7561432123184204
    4. ':
' → logprob: -2.381143093109131
    5. 'count' → logprob: -3.881143093109131
    6. ' ans' → logprob: -5.131143093109131
    7. '```' → logprob: -5.381143093109131
    8. '   ' → logprob: -5.506143093109131
    9. '
' → logprob: -5.881143093109131
    10. '(ans' → logprob: -6.256143093109131

Token 249: ' ans' (ID: 3345)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.13682620227336884
    2. ' size' → logprob: -2.886826276779175
    3. 'ans' (adapté à ' ans') → logprob: -3.386826276779175
    4. 'count' → logprob: -4.011826038360596
    5. 'cnt' → logprob: -4.761826038360596
    6. ' ans' → logprob: -6.136826038360596
    7. 'component' → logprob: -6.136826038360596
    8. 'comp' → logprob: -6.511826038360596
    9. 'cluster' → logprob: -6.511826038360596
    10. 'group' → logprob: -7.636826038360596

Token 250: '=max' (ID: 102952)
  Prédit: '=max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=max' → logprob: -0.033295925706624985
    2. '=' → logprob: -3.5332958698272705
    3. ' =' → logprob: -5.90829610824585
    4. '+=' → logprob: -7.15829610824585
    5. 'max' → logprob: -10.408295631408691
    6. '=Math' → logprob: -11.408295631408691
    7. ' +=' → logprob: -13.783295631408691
    8. ',max' → logprob: -14.658295631408691
    9. '_=' → logprob: -15.283295631408691
    10. ' max' → logprob: -15.533295631408691

Token 251: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. 'ans' → logprob: -16.25
    4. '(answer' → logprob: -18.625
    5. '(
' → logprob: -19.75
    6. '	ans' → logprob: -19.75
    7. '(err' → logprob: -20.25
    8. '(args' → logprob: -20.875
    9. ' ans' → logprob: -21.5
    10. '```' → logprob: -21.75

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003980184264946729
    2. ' ,' → logprob: -8.375397682189941
    3. 'dfs' → logprob: -8.875397682189941
    4. ' dfs' → logprob: -10.750397682189941
    5. ',
' → logprob: -12.875397682189941
    6. '),' → logprob: -14.250397682189941
    7. ',d' → logprob: -14.500397682189941
    8. ',len' → logprob: -14.625397682189941
    9. ')' → logprob: -15.250397682189941
    10. ',int' → logprob: -15.250397682189941

Token 253: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0005532711511477828
    2. ' dfs' → logprob: -7.500553131103516
    3. 'df' → logprob: -15.625553131103516
    4. '   ' → logprob: -16.500553131103516
    5. ')' → logprob: -17.375553131103516
    6. ' ' → logprob: -19.625553131103516
    7. '  ' → logprob: -19.875553131103516
    8. '
' → logprob: -20.250553131103516
    9. 'dfa' → logprob: -21.125553131103516
    10. '```' → logprob: -21.375553131103516

Token 254: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.625
    3. ' (' → logprob: -17.375
    4. ')' → logprob: -18.5
    5. 'i' → logprob: -19.75
    6. ')i' → logprob: -19.75
    7. '(
' → logprob: -19.875
    8. '[i' → logprob: -21.5
    9. ')(' → logprob: -21.625
    10. ',i' → logprob: -21.75

Token 255: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001673061487963423
    2. ')' → logprob: -9.500166893005371
    3. '))
' → logprob: -9.750166893005371
    4. ' ))' → logprob: -11.000166893005371
    5. ')))' → logprob: -11.125166893005371
    6. ')+' → logprob: -14.250166893005371
    7. '()))' → logprob: -15.000166893005371
    8. '))

' → logprob: -15.125166893005371
    9. ')i' → logprob: -15.125166893005371
    10. ')
' → logprob: -15.375166893005371

Token 256: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19747516512870789
    2. '
' → logprob: -1.8224751949310303
    3. '   ' → logprob: -4.447474956512451
    4. '    
' → logprob: -6.572474956512451
    5. ' print' → logprob: -6.947474956512451
    6. '\n' → logprob: -6.947474956512451
    7. '(print' → logprob: -7.572474956512451
    8. '```' → logprob: -7.697474956512451
    9. '  
' → logprob: -7.947474956512451
    10. ' 
' → logprob: -8.44747543334961

Token 257: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.584861744660884e-05
    2. ' print' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.125045776367188
    4. '```' → logprob: -16.750045776367188
    5. '
' → logprob: -18.125045776367188
    6. '(print' → logprob: -19.375045776367188
    7. '#print' → logprob: -19.625045776367188
    8. '    
' → logprob: -20.375045776367188
    9. '.print' → logprob: -20.875045776367188
    10. ' 
' → logprob: -21.000045776367188

Token 258: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. 'ans' → logprob: -16.75000762939453
    4. ' (' → logprob: -16.87500762939453
    5. '(answer' → logprob: -17.50000762939453
    6. '(
' → logprob: -17.75000762939453
    7. '()' → logprob: -19.12500762939453
    8. '(max' → logprob: -19.12500762939453
    9. '(abs' → logprob: -19.87500762939453
    10. '(`' → logprob: -20.00000762939453

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -15.000000953674316
    3. '())' → logprob: -15.250000953674316
    4. ')`' → logprob: -15.875000953674316
    5. '))' → logprob: -16.500001907348633
    6. '()' → logprob: -16.625001907348633
    7. ')
' → logprob: -16.750001907348633
    8. ')}' → logprob: -17.750001907348633
    9. ')#' → logprob: -18.500001907348633
    10. '`)' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 257
Tokens correctement prédits (1ère position, stricte): 133
Tokens correctement prédits (1ère position, avec adaptation): 147
Tokens correctement prédits (top 10): 233
Précision stricte (1ère position): 51.75%
Précision adaptée (1ère position): 57.20%
Précision (top 10): 90.66%
================================================================================
