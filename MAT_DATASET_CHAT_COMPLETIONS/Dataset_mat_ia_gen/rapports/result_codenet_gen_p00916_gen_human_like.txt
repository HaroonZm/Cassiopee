================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def main():
    input = sys.stdin.readline
    while True:
        n = int(input())
        if n == 0:
            break
        
        rects = []
        xs = set()
        ys = set()
        for _ in range(n):
            l,t,r,b = map(int, input().split())
            # note: input gives top-left (l,t), bottom-right (r,b) with b < t
            rects.append((l,t,r,b))
            xs.add(l)
            xs.add(r)
            ys.add(t)
            ys.add(b)
        
        xs = sorted(xs)
        ys = sorted(ys)

        # coordinate compression mapping coordinate to index
        x_id = {x:i for i,x in enumerate(xs)}
        y_id = {y:i for i,y in enumerate(ys)}

        w = len(xs)
        h = len(ys)

        # mark grid cells covered by any rectangle
        # cells correspond to intervals between coordinates
        covered = [[False]*(h-1) for _ in range(w-1)]
        for (l,t,r,b) in rects:
            x_start = x_id[l]
            x_end = x_id[r]
            y_start = y_id[b]
            y_end = y_id[t]
            for i in range(x_start, x_end):
                for j in range(y_start, y_end):
                    covered[i][j] = True

        # use flood fill to find number of regions not enclosed by rectangles
        visited = [[False]*(h-1) for _ in range(w-1)]

        def neighbors(x,y):
            for dx,dy in [(-1,0),(1,0),(0,-1),(0,1)]:
                nx, ny = x+dx, y+dy
                if 0 <= nx < w-1 and 0 <= ny < h-1:
                    yield nx, ny

        def dfs(sx, sy):
            stack = [(sx,sy)]
            visited[sx][sy] = True
            while stack:
                x,y = stack.pop()
                for nx,ny in neighbors(x,y):
                    if not visited[nx][ny] and covered[nx][ny] == covered[x][y]:
                        visited[nx][ny] = True
                        stack.append((nx,ny))

        regions = 0
        for i in range(w-1):
            for j in range(h-1):
                if not visited[i][j]:
                    dfs(i,j)
                    regions += 1

        print(regions)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.8087270038668066e-05
    2. ' .' → logprob: -11.625027656555176
    3. '.import' → logprob: -12.500027656555176
    4. '.readline' → logprob: -13.125027656555176
    5. '.user' → logprob: -13.375027656555176
    6. '.`' → logprob: -13.875027656555176
    7. '.stdout' → logprob: -14.000027656555176
    8. '[' → logprob: -14.000027656555176
    9. '."""' → logprob: -14.125027656555176
    10. '.exit' → logprob: -14.250027656555176

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037507908418774605
    2. 'ursive' → logprob: -6.378750801086426
    3. 'limit' → logprob: -7.003750801086426
    4. 'ur' → logprob: -7.503750801086426
    5. 'urse' → logprob: -9.253750801086426
    6. 'urs' → logprob: -9.503750801086426
    7. '_limit' → logprob: -9.628750801086426
    8. 'ut' → logprob: -9.753750801086426
    9. 'u' → logprob: -10.003750801086426
    10. 't' → logprob: -10.128750801086426

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.48526206612586975
    2. 'limit' → logprob: -0.9852620363235474
    3. '_depth' → logprob: -4.610261917114258
    4. 'depth' → logprob: -7.485261917114258
    5. '_' → logprob: -8.485261917114258
    6. '_rate' → logprob: -10.110261917114258
    7. 'lim' → logprob: -10.235261917114258
    8. '(' → logprob: -10.485261917114258
    9. '_factor' → logprob: -10.485261917114258
    10. '_stack' → logprob: -10.735261917114258

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.778209353797138e-05
    2. '(
' → logprob: -10.500067710876465
    3. ' (' → logprob: -11.375067710876465
    4. '40' → logprob: -11.875067710876465
    5. '(

' → logprob: -12.375067710876465
    6. '((' → logprob: -12.750067710876465
    7. '```' → logprob: -12.750067710876465
    8. '(.' → logprob: -13.000067710876465
    9. '('' → logprob: -13.000067710876465
    10. '("("' → logprob: -13.250067710876465

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16029003262519836
    2. '100' → logprob: -1.910290002822876
    3. '300' → logprob: -10.910289764404297
    4. ' ' → logprob: -11.035289764404297
    5. '500' → logprob: -11.285289764404297
    6. '150' → logprob: -12.160289764404297
    7. '999' → logprob: -12.660289764404297
    8. '1' → logprob: -12.785289764404297
    9. '200' → logprob: -12.785289764404297
    10. '   ' → logprob: -13.285289764404297

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.87501335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04651079699397087
    2. '
' → logprob: -3.546510696411133
    3. '

' → logprob: -4.921510696411133
    4. '```' → logprob: -5.296510696411133
    5. '\' → logprob: -6.421510696411133
    6. '
' → logprob: -7.046510696411133
    7. 'class' → logprob: -7.546510696411133
    8. '\n' → logprob: -7.671510696411133
    9. 'import' → logprob: -8.046510696411133
    10. ')' → logprob: -8.921510696411133

Token 14: ' main' (ID: 2758)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.0553218349814415
    2. ' dfs' → logprob: -3.1803219318389893
    3. ' ' → logprob: -5.18032169342041
    4. ' factor' → logprob: -5.80532169342041
    5. ' fibonacci' → logprob: -6.05532169342041
    6. ' f' → logprob: -7.55532169342041
    7. ' space' → logprob: -9.05532169342041
    8. ' solve' → logprob: -9.18032169342041
    9. ' fib' → logprob: -9.68032169342041
    10. ' main' → logprob: -9.68032169342041

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009605350787751377
    2. '():' → logprob: -8.125960350036621
    3. '(:' → logprob: -8.750960350036621
    4. ':' → logprob: -8.750960350036621
    5. '_' → logprob: -9.000960350036621
    6. ' (' → logprob: -9.250960350036621
    7. ')' → logprob: -10.500960350036621
    8. '):' → logprob: -10.500960350036621
    9. '(
' → logprob: -11.625960350036621
    10. '('' → logprob: -11.875960350036621

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011883151717483997
    2. '    ' → logprob: -5.13688325881958
    3. '    
' → logprob: -5.38688325881958
    4. '\' → logprob: -8.261882781982422
    5. '\n' → logprob: -8.386882781982422
    6. 'n' → logprob: -8.761882781982422
    7. ' 
' → logprob: -9.011882781982422
    8. '<|end|>' → logprob: -9.261882781982422
    9. '
' → logprob: -9.761882781982422
    10. '(' → logprob: -9.761882781982422

Token 17: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5034578442573547
    2. ' n' → logprob: -1.87845778465271
    3. 'n' → logprob: -2.00345778465271
    4. '    ' → logprob: -3.00345778465271
    5. ' pass' → logprob: -4.878458023071289
    6. ' ' → logprob: -4.878458023071289
    7. ' while' → logprob: -5.003458023071289
    8. 'i' → logprob: -5.378458023071289
    9. ' print' → logprob: -5.503458023071289
    10. 'print' → logprob: -5.628458023071289

Token 18: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7687073349952698
    2. '_data' → logprob: -0.7687073349952698
    3. '_str' → logprob: -3.393707275390625
    4. '_line' → logprob: -3.893707275390625
    5. 'data' → logprob: -5.143707275390625
    6. '_' → logprob: -5.643707275390625
    7. '_text' → logprob: -6.018707275390625
    8. '().' → logprob: -6.518707275390625
    9. '(' → logprob: -6.643707275390625
    10. '_string' → logprob: -6.768707275390625

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16434071958065033
    2. ' input' → logprob: -2.0393407344818115
    3. 'input' → logprob: -4.289340496063232
    4. 'sys' → logprob: -4.914340496063232
    5. ' ' → logprob: -8.03934097290039
    6. ' lambda' → logprob: -10.91434097290039
    7. ' raw' → logprob: -11.28934097290039
    8. ' open' → logprob: -11.66434097290039
    9. '	sys' → logprob: -12.78934097290039
    10. ' iter' → logprob: -13.16434097290039

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00504779489710927
    2. '.' → logprob: -5.630047798156738
    3. '.readline' → logprob: -6.880047798156738
    4. ' .' → logprob: -8.505047798156738
    5. '.stdout' → logprob: -9.005047798156738
    6. '.std' → logprob: -10.255047798156738
    7. '.argv' → logprob: -10.755047798156738
    8. '.read' → logprob: -11.255047798156738
    9. '.input' → logprob: -12.255047798156738
    10. 'stdin' → logprob: -12.505047798156738

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008647545240819454
    2. '.read' → logprob: -4.758647441864014
    3. '.' → logprob: -10.508647918701172
    4. '.readlines' → logprob: -12.758647918701172
    5. '.buffer' → logprob: -13.008647918701172
    6. 'read' → logprob: -14.383647918701172
    7. '.Read' → logprob: -17.508647918701172
    8. '.write' → logprob: -18.008647918701172
    9. ' readline' → logprob: -18.008647918701172
    10. ' .' → logprob: -18.258647918701172

Token 22: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002034988021478057
    2. '()
' → logprob: -6.377035140991211
    3. '()\' → logprob: -8.877035140991211
    4. '(' → logprob: -9.377035140991211
    5. '
' → logprob: -10.252035140991211
    6. '().' → logprob: -10.752035140991211
    7. '   ' → logprob: -11.002035140991211
    8. ')' → logprob: -12.002035140991211
    9. '(
' → logprob: -12.252035140991211
    10. '())' → logprob: -12.252035140991211

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11306358873844147
    2. '    
' → logprob: -2.9880635738372803
    3. '()' → logprob: -3.1130635738372803
    4. '(' → logprob: -4.863063812255859
    5. '()
' → logprob: -7.113063812255859
    6. ')' → logprob: -7.363063812255859
    7. '
' → logprob: -7.363063812255859
    8. 'def' → logprob: -8.11306381225586
    9. '(n' → logprob: -8.23806381225586
    10. '(
' → logprob: -8.48806381225586

Token 24: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039387866854667664
    2. '(' → logprob: -5.1643877029418945
    3. '()' → logprob: -5.1643877029418945
    4. 'data' → logprob: -5.1643877029418945
    5. 'x' → logprob: -5.5393877029418945
    6. '    
' → logprob: -5.6643877029418945
    7. 'user' → logprob: -5.7893877029418945
    8. '```' → logprob: -6.0393877029418945
    9. 'n' → logprob: -6.2893877029418945
    10. '(n' → logprob: -6.4143877029418945

Token 25: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.008314560167491436
    2. 'True' → logprob: -4.883314609527588
    3. '(True' → logprob: -7.258314609527588
    4. ' ' → logprob: -13.13331413269043
    5. '()' → logprob: -14.00831413269043
    6. '  ' → logprob: -15.50831413269043
    7. ':' → logprob: -16.00831413269043
    8. ' not' → logprob: -16.00831413269043
    9. ' Tru' → logprob: -16.13331413269043
    10. '=True' → logprob: -16.13331413269043

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035206025931984186
    2. '():' → logprob: -5.753520488739014
    3. '):' → logprob: -9.253520965576172
    4. ' :' → logprob: -9.753520965576172
    5. '       ' → logprob: -9.753520965576172
    6. ':**' → logprob: -10.128520965576172
    7. ':
' → logprob: -10.128520965576172
    8. '   ' → logprob: -10.878520965576172
    9. '    ' → logprob: -12.128520965576172
    10. ',' → logprob: -12.128520965576172

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011087081395089626
    2. '    ' → logprob: -5.511086940765381
    3. '        
' → logprob: -5.511086940765381
    4. ' ' → logprob: -6.261086940765381
    5. '   ' → logprob: -7.886086940765381
    6. '        ' → logprob: -8.761087417602539
    7. '      ' → logprob: -9.386087417602539
    8. '        
        
' → logprob: -9.886087417602539
    9. '<|end|>' → logprob: -10.136087417602539
    10. '    
' → logprob: -10.261087417602539

Token 28: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.13068698346614838
    2. 'line' → logprob: -2.7556869983673096
    3. ' s' → logprob: -4.1306867599487305
    4. '   ' → logprob: -4.1306867599487305
    5. 'data' → logprob: -4.7556867599487305
    6. ' data' → logprob: -4.8806867599487305
    7. 's' → logprob: -5.2556867599487305
    8. '       ' → logprob: -6.6306867599487305
    9. 'n' (adapté à ' n') → logprob: -6.8806867599487305
    10. ' n' → logprob: -7.1306867599487305

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00377573911100626
    2. '=' → logprob: -5.753775596618652
    3. ' ' → logprob: -7.753775596618652
    4. ' >' → logprob: -9.378775596618652
    5. ' ==' → logprob: -9.753775596618652
    6. ' :=' → logprob: -11.378775596618652
    7. '>' → logprob: -12.253775596618652
    8. '=int' → logprob: -13.003775596618652
    9. ',' → logprob: -13.503775596618652
    10. ' <' → logprob: -13.628775596618652

Token 30: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7828919291496277
    2. ' int' → logprob: -0.7828919291496277
    3. ' input' → logprob: -3.0328919887542725
    4. 'input' → logprob: -3.2828919887542725
    5. ' ' → logprob: -9.032892227172852
    6. '  ' → logprob: -12.657892227172852
    7. '   ' → logprob: -12.782892227172852
    8. ' in' → logprob: -13.157892227172852
    9. '=int' → logprob: -13.407892227172852
    10. 'in' → logprob: -13.470392227172852

Token 31: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0010412635747343302
    2. '(' → logprob: -6.876041412353516
    3. 'input' → logprob: -11.876041412353516
    4. '(in' → logprob: -14.376041412353516
    5. ' (' → logprob: -14.626041412353516
    6. '(
' → logprob: -16.251041412353516
    7. ',input' → logprob: -16.376041412353516
    8. '((' → logprob: -16.751041412353516
    9. '(i' → logprob: -16.751041412353516
    10. '=input' → logprob: -16.876041412353516

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012345408089458942
    2. '().' → logprob: -4.512345314025879
    3. '()))' → logprob: -7.137345314025879
    4. '()' → logprob: -7.637345314025879
    5. ' ())' → logprob: -11.637345314025879
    6. '())
' → logprob: -11.762345314025879
    7. '()),' → logprob: -14.012345314025879
    8. '();)' → logprob: -14.637345314025879
    9. ')' → logprob: -15.262345314025879
    10. '(' → logprob: -15.262345314025879

Token 33: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23340070247650146
    2. ' if' → logprob: -1.8584007024765015
    3. '<|end|>' → logprob: -3.358400821685791
    4. ' ' → logprob: -5.108400821685791
    5. '        ' → logprob: -5.233400821685791
    6. 'if' (adapté à ' if') → logprob: -5.483400821685791
    7. '<|end|>' → logprob: -7.233400821685791
    8. '    ' → logprob: -7.858400821685791
    9. '   ' → logprob: -7.858400821685791
    10. '      ' → logprob: -9.233400344848633

Token 35: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006799917668104172
    2. ' not' → logprob: -5.381799697875977
    3. 'n' → logprob: -6.131799697875977
    4. 'not' → logprob: -12.631799697875977
    5. '	n' → logprob: -14.131799697875977
    6. ' ' → logprob: -15.506799697875977
    7. ' ' → logprob: -15.631799697875977
    8. 'n't' → logprob: -15.756799697875977
    9. ' н' → logprob: -17.131799697875977
    10. ')n' → logprob: -17.631799697875977

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10062111914157867
    2. '==' → logprob: -2.350621223449707
    3. ' <=' → logprob: -8.100621223449707
    4. '<=' → logprob: -9.850621223449707
    5. ' <' → logprob: -10.725621223449707
    6. ' ' → logprob: -10.975621223449707
    7. ')' → logprob: -11.725621223449707
    8. '=' → logprob: -12.850621223449707
    9. '<' → logprob: -12.850621223449707
    10. ')==' → logprob: -13.225621223449707

Token 37: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018151935189962387
    2. '0' → logprob: -4.018151760101318
    3. '  ' → logprob: -14.018152236938477
    4. ' ' → logprob: -14.518152236938477
    5. ' -' → logprob: -16.018152236938477
    6. '=' → logprob: -16.205652236938477
    7. '    ' → logprob: -16.268152236938477
    8. '   ' → logprob: -16.518152236938477
    9. '-' → logprob: -16.893152236938477
    10. '_' → logprob: -16.893152236938477

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014141082763672
    2. ' ' → logprob: -1.7014141082763672
    3. '  ' → logprob: -15.201414108276367
    4. '-' → logprob: -15.701414108276367
    5. ' ' → logprob: -15.951414108276367
    6. '    ' → logprob: -16.076414108276367
    7. '=' → logprob: -17.076414108276367
    8. ' -' → logprob: -17.201414108276367
    9. '   ' → logprob: -17.576414108276367
    10. '０' → logprob: -17.701414108276367

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037392680533230305
    2. ':
' → logprob: -5.628739356994629
    3. '       ' → logprob: -9.503739356994629
    4. ':return' → logprob: -10.003739356994629
    5. '   ' → logprob: -11.878739356994629
    6. ' :' → logprob: -12.628739356994629
    7. '           ' → logprob: -12.878739356994629
    8. '	break' → logprob: -13.753739356994629
    9. '	' → logprob: -14.003739356994629
    10. ' break' → logprob: -14.253739356994629

Token 40: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20285466313362122
    2. '           ' → logprob: -1.7028546333312988
    3. '   ' → logprob: -7.702854633331299
    4. ' break' → logprob: -8.327855110168457
    5. '<|end|>' → logprob: -8.827855110168457
    6. '        ' → logprob: -9.077855110168457
    7. '      ' → logprob: -9.702855110168457
    8. ':' → logprob: -9.702855110168457
    9. '	break' → logprob: -9.952855110168457
    10. '	       ' → logprob: -10.077855110168457

Token 41: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2777005732059479
    2. '       ' → logprob: -2.152700662612915
    3. 'break' (adapté à ' break') → logprob: -2.652700662612915
    4. '           ' → logprob: -2.902700662612915
    5. '	break' → logprob: -7.902700424194336
    6. '   ' → logprob: -8.902700424194336
    7. ' return' → logprob: -9.277700424194336
    8. '```' → logprob: -9.527700424194336
    9. 'return' → logprob: -9.652700424194336
    10. '        
' → logprob: -9.777700424194336

Token 42: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12161921709775925
    2. '   ' → logprob: -2.62161922454834
    3. '    ' → logprob: -3.37161922454834
    4. '        ' → logprob: -6.24661922454834
    5. 's' → logprob: -6.37161922454834
    6. '      ' → logprob: -7.49661922454834
    7. ' s' → logprob: -7.62161922454834
    8. '     ' → logprob: -7.99661922454834
    9. ' ' → logprob: -8.24661922454834
    10. ' numbers' → logprob: -8.80911922454834

Token 44: ' rect' (ID: 13107)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -2.026843309402466
    2. 'numbers' → logprob: -2.151843309402466
    3. 'stack' → logprob: -2.151843309402466
    4. ' numbers' → logprob: -2.526843309402466
    5. 'h' → logprob: -2.901843309402466
    6. 'cards' → logprob: -3.026843309402466
    7. 'arr' → logprob: -3.026843309402466
    8. 'a' → logprob: -3.276843309402466
    9. 'nums' → logprob: -3.401843309402466
    10. 'graph' → logprob: -3.526843309402466

Token 45: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06524927169084549
    2. 'angles' → logprob: -2.81524920463562
    3. ' =' → logprob: -6.065249443054199
    4. '=' → logprob: -7.815249443054199
    5. 'angle' → logprob: -9.0652494430542
    6. ',' → logprob: -9.4402494430542
    7. '_s' → logprob: -9.5652494430542
    8. 'sizes' → logprob: -10.1902494430542
    9. '_sizes' → logprob: -10.3152494430542
    10. ')' → logprob: -10.5652494430542

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00586397061124444
    2. '=' → logprob: -5.255864143371582
    3. '[' → logprob: -7.755864143371582
    4. '[]' → logprob: -9.755864143371582
    5. '=[]' → logprob: -9.755864143371582
    6. ' =[' → logprob: -11.005864143371582
    7. ')' → logprob: -11.380864143371582
    8. '   ' → logprob: -11.505864143371582
    9. '.append' → logprob: -11.505864143371582
    10. '[:]' → logprob: -11.880864143371582

Token 47: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10864528268575668
    2. '[' → logprob: -2.35864520072937
    3. ' []' → logprob: -4.858645439147949
    4. '[list' → logprob: -8.10864543914795
    5. ' [' → logprob: -9.10864543914795
    6. '[int' → logprob: -9.48364543914795
    7. '[n' → logprob: -10.10864543914795
    8. '[len' → logprob: -11.10864543914795
    9. 'list' → logprob: -11.60864543914795
    10. '[]
' → logprob: -11.73364543914795

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019691908732056618
    2. '<|end|>' → logprob: -4.0196919441223145
    3. '   ' → logprob: -8.144691467285156
    4. ' for' → logprob: -8.269691467285156
    5. '<|end|>' → logprob: -8.394691467285156
    6. '        ' → logprob: -9.019691467285156
    7. '    ' → logprob: -9.019691467285156
    8. '	' → logprob: -9.019691467285156
    9. ' ' → logprob: -9.144691467285156
    10. '        
' → logprob: -9.644691467285156

Token 49: ' xs' (ID: 26642)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2957476079463959
    2. 'for' → logprob: -1.5457476377487183
    3. '	for' → logprob: -3.2957475185394287
    4. '   ' → logprob: -5.420747756958008
    5. '\t' → logprob: -7.670747756958008
    6. '       ' → logprob: -8.170747756958008
    7. ' ' → logprob: -8.795747756958008
    8. '	' → logprob: -8.795747756958008
    9. '    ' → logprob: -9.170747756958008
    10. '[' → logprob: -9.420747756958008

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058871299028396606
    2. '=' → logprob: -2.933871269226074
    3. ',' → logprob: -5.808871269226074
    4. '.append' → logprob: -7.808871269226074
    5. '=[]' → logprob: -8.308871269226074
    6. ')' → logprob: -9.058871269226074
    7. '.' → logprob: -9.183871269226074
    8. ' ,' → logprob: -10.308871269226074
    9. '<|end|>' → logprob: -10.808871269226074
    10. '[:]' → logprob: -11.558871269226074

Token 51: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.012910663150250912
    2. 'set' → logprob: -4.512910842895508
    3. ' []' → logprob: -6.387910842895508
    4. ' set' → logprob: -9.387910842895508
    5. '[' → logprob: -10.512910842895508
    6. '[]
' → logprob: -10.512910842895508
    7. '{}' → logprob: -10.637910842895508
    8. '[]}' → logprob: -11.262910842895508
    9. '[]

' → logprob: -13.387910842895508
    10. '[])' → logprob: -14.012910842895508

Token 52: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001527717337012291
    2. '(' → logprob: -6.501527786254883
    3. '()
' → logprob: -11.376527786254883
    4. '()]' → logprob: -12.751527786254883
    5. '(range' → logprob: -13.001527786254883
    6. '()

' → logprob: -13.001527786254883
    7. ' ()' → logprob: -13.626527786254883
    8. '([]' → logprob: -13.751527786254883
    9. '())' → logprob: -14.376527786254883
    10. '([' → logprob: -14.376527786254883

Token 53: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' ys' (ID: 67301)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4670508801937103
    2. '       ' → logprob: -1.4670509099960327
    3. ' for' → logprob: -2.217050790786743
    4. '   ' → logprob: -4.217051029205322
    5. '	for' → logprob: -5.217051029205322
    6. ' ' → logprob: -5.967051029205322
    7. '\t' → logprob: -5.967051029205322
    8. 'y' → logprob: -6.467051029205322
    9. '	' → logprob: -6.592051029205322
    10. '        ' → logprob: -7.092051029205322

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02630273625254631
    2. '=' → logprob: -3.6513028144836426
    3. ' ' → logprob: -13.651302337646484
    4. '<|end|>' → logprob: -14.651302337646484
    5. '.' → logprob: -15.776302337646484
    6. '＝' → logprob: -16.151302337646484
    7. '.=' → logprob: -16.151302337646484
    8. 's' → logprob: -16.276302337646484
    9. ' =)' → logprob: -16.276302337646484
    10. ' =
' → logprob: -16.276302337646484

Token 56: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.4740924537181854
    2. ' set' → logprob: -0.9740924835205078
    3. '=set' → logprob: -12.349092483520508
    4. '	set' → logprob: -12.474092483520508
    5. '[]' → logprob: -13.099092483520508
    6. ' []' → logprob: -13.224092483520508
    7. '{}' → logprob: -13.849092483520508
    8. ' ' → logprob: -14.224092483520508
    9. '(set' → logprob: -14.474092483520508
    10. ')set' → logprob: -14.974092483520508

Token 57: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0030876360833644867
    2. '()
' → logprob: -6.253087520599365
    3. '(' → logprob: -7.003087520599365
    4. '       ' → logprob: -9.003087997436523
    5. '()\' → logprob: -9.253087997436523
    6. '<|end|>' → logprob: -11.753087997436523
    7. '()

' → logprob: -12.378087997436523
    8. '();' → logprob: -12.628087997436523
    9. ')' → logprob: -13.003087997436523
    10. '   ' → logprob: -13.128087997436523

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0143885612487793
    2. '<|end|>' → logprob: -1.0143885612487793
    3. '   ' → logprob: -1.6393885612487793
    4. '    
' → logprob: -4.139388561248779
    5. '        
' → logprob: -4.514388561248779
    6. ' ' → logprob: -4.889388561248779
    7. '<|end|>' → logprob: -4.889388561248779
    8. '\' → logprob: -4.889388561248779
    9. '\n' → logprob: -5.264388561248779
    10. '
' → logprob: -5.389388561248779

Token 59: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17219278216362
    2. ' for' → logprob: -2.7971928119659424
    3. 'for' (adapté à ' for') → logprob: -3.4221928119659424
    4. ' ' → logprob: -3.9221928119659424
    5. '   ' → logprob: -4.422192573547363
    6. '\t' → logprob: -4.672192573547363
    7. '	for' → logprob: -4.922192573547363
    8. '	' → logprob: -5.297192573547363
    9. '<|end|>' → logprob: -5.297192573547363
    10. '    ' → logprob: -7.047192573547363

Token 60: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0014978413237258792
    2. '_' → logprob: -6.876497745513916
    3. ' ' → logprob: -8.251498222351074
    4. ' i' → logprob: -8.501498222351074
    5. 'i' → logprob: -14.376498222351074
    6. '_i' → logprob: -16.001497268676758
    7. ' ' → logprob: -16.126497268676758
    8. ' ‌' → logprob: -16.876497268676758
    9. ' in' → logprob: -17.376497268676758
    10. '  ' → logprob: -17.876497268676758

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0042719002813100815
    2. 'in' → logprob: -5.504271984100342
    3. ' ' → logprob: -8.879271507263184
    4. 'range' → logprob: -11.004271507263184
    5. ' i' → logprob: -11.254271507263184
    6. 'i' → logprob: -11.379271507263184
    7. 'n' → logprob: -12.629271507263184
    8. ' _' → logprob: -13.129271507263184
    9. 's' → logprob: -13.379271507263184
    10. '_' → logprob: -14.004271507263184

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012642296496778727
    2. ' range' → logprob: -9.000126838684082
    3. '(range' → logprob: -13.750126838684082
    4. 'in' → logprob: -14.500126838684082
    5. 'rect' → logprob: -14.625126838684082
    6. '```' → logprob: -15.500126838684082
    7. '	range' → logprob: -15.625126838684082
    8. 'input' → logprob: -16.125125885009766
    9. 'r' → logprob: -16.250125885009766
    10. 'ran' → logprob: -16.500125885009766

Token 63: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.033910661935806274
    2. ' (' → logprob: -3.6589107513427734
    3. '(' → logprob: -4.908910751342773
    4. ' n' → logprob: -8.533910751342773
    5. 'n' → logprob: -12.908910751342773
    6. '(
' → logprob: -14.658910751342773
    7. '(range' → logprob: -14.658910751342773
    8. ' ' → logprob: -15.033910751342773
    9. '(int' → logprob: -15.408910751342773
    10. ' (
' → logprob: -15.658910751342773

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023668760433793068
    2. '):
' → logprob: -3.7736687660217285
    3. ' ):' → logprob: -8.14866828918457
    4. ':' → logprob: -9.64866828918457
    5. '):
' → logprob: -10.77366828918457
    6. '   ' → logprob: -10.89866828918457
    7. '       ' → logprob: -11.52366828918457
    8. ')' → logprob: -12.14866828918457
    9. ' ' → logprob: -12.64866828918457
    10. ' ):
' → logprob: -12.77366828918457

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026957307010889053
    2. '       ' → logprob: -4.0269575119018555
    3. '   ' → logprob: -5.2769575119018555
    4. '<|end|>' → logprob: -6.9019575119018555
    5. '    ' → logprob: -8.026957511901855
    6. '    	   ' → logprob: -8.401957511901855
    7. '```' → logprob: -8.401957511901855
    8. '	   ' → logprob: -8.526957511901855
    9. ',' → logprob: -8.651957511901855
    10. '<|end|>' → logprob: -8.651957511901855

Token 66: ' l' (ID: 305)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31374362111091614
    2. 'x' → logprob: -1.3137435913085938
    3. '           ' → logprob: -8.563743591308594
    4. '   ' → logprob: -9.688743591308594
    5. '	x' → logprob: -10.438743591308594
    6. ' line' → logprob: -10.438743591308594
    7. ' l' → logprob: -10.938743591308594
    8. 's' → logprob: -10.938743591308594
    9. ' ' → logprob: -11.063743591308594
    10. 'line' → logprob: -11.313743591308594

Token 67: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7135840654373169
    2. 'x' → logprob: -0.7135840654373169
    3. 'ine' → logprob: -4.338583946228027
    4. '=' → logprob: -5.963583946228027
    5. ' ,' → logprob: -5.963583946228027
    6. 'e' → logprob: -7.338583946228027
    7. ',x' → logprob: -8.213583946228027
    8. 'eft' → logprob: -8.213583946228027
    9. ' =' → logprob: -8.463583946228027
    10. 'et' → logprob: -9.713583946228027

Token 68: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2316257357597351
    2. ',r' → logprob: -1.9816257953643799
    3. ',x' → logprob: -2.98162579536438
    4. ' ,' → logprob: -4.606625556945801
    5. ',b' → logprob: -5.856625556945801
    6. ',u' → logprob: -6.231625556945801
    7. ',w' → logprob: -6.856625556945801
    8. ',y' → logprob: -7.356625556945801
    9. ',h' → logprob: -7.856625556945801
    10. ',d' → logprob: -7.981625556945801

Token 69: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023394206538796425
    2. ',b' → logprob: -4.6483941078186035
    3. ',y' → logprob: -5.3983941078186035
    4. ',x' → logprob: -6.3983941078186035
    5. ',u' → logprob: -6.3983941078186035
    6. ',d' → logprob: -7.1483941078186035
    7. ',t' → logprob: -7.2733941078186035
    8. ',s' → logprob: -7.2733941078186035
    9. ',v' → logprob: -7.5233941078186035
    10. ',r' → logprob: -7.8983941078186035

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03385869041085243
    2. '=' → logprob: -3.4088587760925293
    3. ',' → logprob: -9.158858299255371
    4. ' ' → logprob: -9.533858299255371
    5. ')' → logprob: -11.283858299255371
    6. '=line' → logprob: -11.908858299255371
    7. '=input' → logprob: -12.533858299255371
    8. '=int' → logprob: -13.158858299255371
    9. '<|end|>' → logprob: -13.158858299255371
    10. '<|end|>' → logprob: -13.658858299255371

Token 71: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.001513312105089426
    2. 'map' → logprob: -6.501513481140137
    3. ' list' → logprob: -11.626513481140137
    4. ' input' → logprob: -14.501513481140137
    5. '	map' → logprob: -14.501513481140137
    6. ' ' → logprob: -15.001513481140137
    7. '    ' → logprob: -15.501513481140137
    8. ' ' → logprob: -15.876513481140137
    9. ' [' → logprob: -16.12651252746582
    10. '(map' → logprob: -16.62651252746582

Token 72: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0043278103694319725
    2. '(' → logprob: -5.504327774047852
    3. '(lambda' → logprob: -9.379327774047852
    4. '<|end|>' → logprob: -9.629327774047852
    5. '<int' → logprob: -10.129327774047852
    6. '(input' → logprob: -11.004327774047852
    7. '[int' → logprob: -11.254327774047852
    8. '(str' → logprob: -11.379327774047852
    9. '(
' → logprob: -12.254327774047852
    10. 'int' → logprob: -12.629327774047852

Token 73: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2557973563671112
    2. ',' → logprob: -1.5057973861694336
    3. '(input' → logprob: -5.755797386169434
    4. 'input' → logprob: -7.630797386169434
    5. ' input' → logprob: -9.880797386169434
    6. '(' → logprob: -9.880797386169434
    7. ')' → logprob: -10.255797386169434
    8. ' ,' → logprob: -10.380797386169434
    9. '=input' → logprob: -11.255797386169434
    10. '[input' → logprob: -11.880797386169434

Token 74: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693314254283905
    2. ' input' → logprob: -2.1269330978393555
    3. ')' → logprob: -13.126933097839355
    4. ',input' → logprob: -14.126933097839355
    5. '=input' → logprob: -14.376933097839355
    6. '(input' → logprob: -14.501933097839355
    7. '[input' → logprob: -14.751933097839355
    8. '	input' → logprob: -15.126933097839355
    9. ' ' → logprob: -15.626933097839355
    10. '<input' → logprob: -16.501934051513672

Token 75: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5941604690160602e-05
    2. '()' → logprob: -10.625025749206543
    3. ')' → logprob: -14.250025749206543
    4. '())' → logprob: -14.625025749206543
    5. ' ().' → logprob: -15.375025749206543
    6. '(' → logprob: -15.750025749206543
    7. '()
' → logprob: -17.62502670288086
    8. '   ' → logprob: -17.87502670288086
    9. '.' → logprob: -18.12502670288086
    10. '.readline' → logprob: -18.37502670288086

Token 76: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00157771329395473
    2. 'strip' → logprob: -6.501577854156494
    3. 'rstrip' → logprob: -9.501577377319336
    4. ' split' → logprob: -14.501577377319336
    5. '(split' → logprob: -16.001577377319336
    6. 'spl' → logprob: -17.376577377319336
    7. ')' → logprob: -17.626577377319336
    8. '.split' → logprob: -18.751577377319336
    9. ' ' → logprob: -19.501577377319336
    10. 's' → logprob: -19.626577377319336

Token 77: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5826581716537476
    2. ')' → logprob: -0.8326581716537476
    3. '()' → logprob: -5.082658290863037
    4. '))' → logprob: -8.332657814025879
    5. '())
' → logprob: -9.207657814025879
    6. '()))' → logprob: -9.707657814025879
    7. '(' → logprob: -9.707657814025879
    8. ')
' → logprob: -11.457657814025879
    9. ' )' → logprob: -11.957657814025879
    10. ')`' → logprob: -12.832657814025879

Token 78: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4142428934574127
    2. '<|end|>' → logprob: -1.6642428636550903
    3. '       ' → logprob: -2.16424298286438
    4. '           ' → logprob: -3.78924298286438
    5. '<|end|>' → logprob: -5.914242744445801
    6. ' ' → logprob: -5.914242744445801
    7. '
' → logprob: -6.539242744445801
    8. '        
' → logprob: -6.914242744445801
    9. '        ' → logprob: -7.164242744445801
    10. '   ' → logprob: -7.414242744445801

Token 79: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6635341644287109
    2. ' rect' → logprob: -1.163534164428711
    3. 'rect' → logprob: -2.413534164428711
    4. '       ' → logprob: -2.663534164428711
    5. ' xs' → logprob: -5.288534164428711
    6. '<|end|>' → logprob: -6.038534164428711
    7. '   ' → logprob: -6.413534164428711
    8. '	rect' → logprob: -7.163534164428711
    9. ' ' → logprob: -7.288534164428711
    10. '        ' → logprob: -7.663534164428711

Token 80: ' note' (ID: 7477)
  Prédit: ' rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rect' → logprob: -0.18923050165176392
    2. ' xs' → logprob: -2.439230442047119
    3. 'rect' → logprob: -2.814230442047119
    4. 'xs' → logprob: -3.814230442047119
    5. '       ' → logprob: -6.689230442047119
    6. '   ' → logprob: -7.564230442047119
    7. '           ' → logprob: -8.314230918884277
    8. '```' → logprob: -8.439230918884277
    9. '	rect' → logprob: -9.064230918884277
    10. 'x' → logprob: -9.189230918884277

Token 81: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0224955081939697
    2. '       ' → logprob: -1.2724955081939697
    3. ' ' → logprob: -2.1474955081939697
    4. ')' → logprob: -2.6474955081939697
    5. '<|end|>' → logprob: -3.0224955081939697
    6. 'rect' → logprob: -3.7724955081939697
    7. 's' → logprob: -4.147495269775391
    8. ' rect' → logprob: -4.147495269775391
    9. '        ' → logprob: -4.647495269775391
    10. '<|end|>' → logprob: -4.897495269775391

Token 82: ' input' (ID: 3422)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.6426523327827454
    2. ' xs' → logprob: -0.8926523327827454
    3. '           ' → logprob: -3.3926522731781006
    4. ' rect' → logprob: -4.64265251159668
    5. 'rect' → logprob: -5.01765251159668
    6. '       ' → logprob: -5.14265251159668
    7. '#' → logprob: -5.76765251159668
    8. 'x' → logprob: -6.51765251159668
    9. ' l' → logprob: -6.76765251159668
    10. ' #' → logprob: -7.14265251159668

Token 83: ' gives' (ID: 8967)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.7262542247772217
    2. '<|end|>' → logprob: -1.8512542247772217
    3. '.append' → logprob: -2.1012542247772217
    4. '.' → logprob: -2.1012542247772217
    5. ')' → logprob: -2.4762542247772217
    6. 's' → logprob: -2.7262542247772217
    7. '().' → logprob: -3.1012542247772217
    8. '<|end|>' → logprob: -3.4762542247772217
    9. '()' → logprob: -3.6012542247772217
    10. '_rect' → logprob: -3.8512542247772217

Token 84: ' top' (ID: 2344)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9593868851661682
    2. 'l' → logprob: -1.4593868255615234
    3. 'coordinates' → logprob: -2.7093868255615234
    4. ' top' → logprob: -2.8343868255615234
    5. ' coordinates' → logprob: -2.8343868255615234
    6. 'top' → logprob: -2.8343868255615234
    7. 'left' → logprob: -3.5843868255615234
    8. ' the' → logprob: -3.5843868255615234
    9. '(l' → logprob: -3.9593868255615234
    10. ' rectangles' → logprob: -4.209386825561523

Token 85: '-left' (ID: 17007)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3804108202457428
    2. ' ,' → logprob: -1.5054107904434204
    3. ',left' → logprob: -3.25541090965271
    4. '<|end|>' → logprob: -3.75541090965271
    5. ' ' → logprob: -4.880410671234131
    6. ',b' → logprob: -5.505410671234131
    7. ' left' → logprob: -5.630410671234131
    8. '-left' → logprob: -5.755410671234131
    9. ',right' → logprob: -6.005410671234131
    10. '+' → logprob: -6.380410671234131

Token 86: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0965583324432373
    2. ' and' → logprob: -1.4715583324432373
    3. '<|end|>' → logprob: -1.7215583324432373
    4. ' ,' → logprob: -2.0965583324432373
    5. ')' → logprob: -2.7215583324432373
    6. ' )' → logprob: -3.3465583324432373
    7. ' ' → logprob: -4.471558570861816
    8. ' corner' → logprob: -4.971558570861816
    9. ' ),' → logprob: -5.846558570861816
    10. ' coordinates' → logprob: -5.971558570861816

Token 87: 'l' (ID: 75)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9146642088890076
    2. ')' → logprob: -1.4146642684936523
    3. 'x' → logprob: -2.4146642684936523
    4. ' x' → logprob: -2.9146642684936523
    5. ' )' → logprob: -3.0396642684936523
    6. ')x' → logprob: -3.2896642684936523
    7. ',' → logprob: -3.4146642684936523
    8. ' corner' → logprob: -3.6646642684936523
    9. '),' → logprob: -3.9146642684936523
    10. 'and' → logprob: -3.9146642684936523

Token 88: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06999435275793076
    2. '),' → logprob: -3.5699944496154785
    3. ')' → logprob: -3.9449944496154785
    4. ' ,' → logprob: -4.4449944496154785
    5. ',y' → logprob: -5.6949944496154785
    6. ',t' → logprob: -7.1949944496154785
    7. ' and' → logprob: -7.3199944496154785
    8. ' ),' → logprob: -7.4449944496154785
    9. 'and' → logprob: -7.5699944496154785
    10. ',x' → logprob: -7.6949944496154785

Token 89: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04130887985229492
    2. '),' → logprob: -3.291308879852295
    3. ' )' → logprob: -6.791308879852295
    4. ' and' → logprob: -7.041308879852295
    5. ',' → logprob: -7.666308879852295
    6. 'and' → logprob: -8.041309356689453
    7. ' ),' → logprob: -8.541309356689453
    8. '           ' → logprob: -9.666309356689453
    9. ')
' → logprob: -10.291309356689453
    10. 'r' → logprob: -10.416309356689453

Token 90: ' bottom' (ID: 8725)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2532731592655182
    2. ' r' → logprob: -2.1282732486724854
    3. ' and' → logprob: -3.3782732486724854
    4. ' ' → logprob: -4.003273010253906
    5. 'and' → logprob: -4.503273010253906
    6. '<|end|>' → logprob: -4.628273010253906
    7. '           ' → logprob: -4.753273010253906
    8. 'bottom' → logprob: -5.003273010253906
    9. ')' → logprob: -5.628273010253906
    10. ' bottom' → logprob: -6.003273010253906

Token 91: '-right' (ID: 14810)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7313188910484314
    2. '-right' → logprob: -0.7313188910484314
    3. '-left' → logprob: -3.981318950653076
    4. 'right' → logprob: -4.981318950653076
    5. '<|end|>' → logprob: -5.481318950653076
    6. ',right' → logprob: -5.731318950653076
    7. ' -' → logprob: -6.606318950653076
    8. '	right' → logprob: -7.106318950653076
    9. ',' → logprob: -7.106318950653076
    10. 'left' → logprob: -7.606318950653076

Token 92: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07882831990718842
    2. ')' → logprob: -3.3288283348083496
    3. '(r' → logprob: -3.4538283348083496
    4. ' )' → logprob: -5.45382833480835
    5. ' ' → logprob: -6.07882833480835
    6. '<|end|>' → logprob: -7.70382833480835
    7. '(l' → logprob: -7.82882833480835
    8. '(' → logprob: -7.95382833480835
    9. ' coordinates' → logprob: -8.578827857971191
    10. '   ' → logprob: -9.828827857971191

Token 93: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.030235785990953445
    2. ' r' → logprob: -3.530235767364502
    3. ' (' → logprob: -8.15523624420166
    4. '(r' → logprob: -9.28023624420166
    5. ')' → logprob: -9.90523624420166
    6. ',r' → logprob: -10.78023624420166
    7. ',' → logprob: -11.40523624420166
    8. ' )' → logprob: -12.15523624420166
    9. '	r' → logprob: -12.15523624420166
    10. '(' → logprob: -12.78023624420166

Token 94: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.017418736591935158
    2. ')' → logprob: -4.76741886138916
    3. ',' → logprob: -4.76741886138916
    4. '),' → logprob: -9.26741886138916
    5. ',y' → logprob: -10.14241886138916
    6. ' ,' → logprob: -10.64241886138916
    7. ' )' → logprob: -10.76741886138916
    8. ')b' → logprob: -10.89241886138916
    9. ',)' → logprob: -11.01741886138916
    10. ',r' → logprob: -11.39241886138916

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055319689214229584
    2. ')
' → logprob: -2.9303197860717773
    3. '           ' → logprob: -8.305319786071777
    4. ')

' → logprob: -9.680319786071777
    5. '       ' → logprob: -10.055319786071777
    6. ')
' → logprob: -10.305319786071777
    7. '),' → logprob: -11.055319786071777
    8. ' )' → logprob: -11.555319786071777
    9. '):
' → logprob: -12.430319786071777
    10. ' )
' → logprob: -12.555319786071777

Token 96: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7774477601051331
    2. '<|end|>' → logprob: -0.9024477601051331
    3. '       ' → logprob: -3.0274477005004883
    4. '           ' → logprob: -3.5274477005004883
    5. '\n' → logprob: -4.152447700500488
    6. '        
' → logprob: -4.402447700500488
    7. ')' → logprob: -4.777447700500488
    8. '<|end|>' → logprob: -5.277447700500488
    9. '  
' → logprob: -5.652447700500488
    10. '    
' → logprob: -5.902447700500488

Token 97: ' b' (ID: 287)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9843153953552246
    2. ' t' → logprob: -0.9843153953552246
    3. ' l' → logprob: -2.1093153953552246
    4. '<|end|>' → logprob: -2.6093153953552246
    5. 'l' → logprob: -4.109315395355225
    6. ')' → logprob: -4.734315395355225
    7. ' ' → logprob: -4.984315395355225
    8. ' the' → logprob: -5.109315395355225
    9. 'r' → logprob: -5.609315395355225
    10. ' a' → logprob: -5.859315395355225

Token 98: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.46240895986557007
    2. ' <' → logprob: -1.8374090194702148
    3. ' >=' → logprob: -2.212409019470215
    4. '<|end|>' → logprob: -3.337409019470215
    5. '>' → logprob: -3.712409019470215
    6. '>=' → logprob: -4.462409019470215
    7. ' <=' → logprob: -4.462409019470215
    8. '=' → logprob: -5.337409019470215
    9. ')' → logprob: -5.337409019470215
    10. '<' → logprob: -6.212409019470215

Token 99: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4742608070373535
    2. ' t' → logprob: -0.9742608070373535
    3. ' ' → logprob: -8.849260330200195
    4. '	t' → logprob: -11.099260330200195
    5. '<|end|>' → logprob: -11.474260330200195
    6. '0' → logprob: -11.599260330200195
    7. '=' → logprob: -12.724260330200195
    8. '   ' → logprob: -14.724260330200195
    9. '_t' → logprob: -14.974260330200195
    10. '  ' → logprob: -15.099260330200195

Token 100: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.515255868434906
    2. '<|end|>' → logprob: -1.2652559280395508
    3. ' 
' → logprob: -3.390255928039551
    4. '       ' → logprob: -3.390255928039551
    5. '\n' → logprob: -4.015255928039551
    6. '        
' → logprob: -4.390255928039551
    7. '    
' → logprob: -5.265255928039551
    8. '  
' → logprob: -5.640255928039551
    9. '           ' → logprob: -5.890255928039551
    10. ' ' → logprob: -6.140255928039551

Token 101: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' rect' (ID: 13107)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13791382312774658
    2. '           ' → logprob: -2.512913703918457
    3. 'rect' (adapté à ' rect') → logprob: -4.137913703918457
    4. ' rect' → logprob: -4.387913703918457
    5. '   ' → logprob: -4.637913703918457
    6. ' xs' → logprob: -5.762913703918457
    7. 'xs' → logprob: -6.387913703918457
    8. '<|end|>' → logprob: -6.887913703918457
    9. ' ' → logprob: -7.137913703918457
    10. '        ' → logprob: -7.887913703918457

Token 103: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.8206473871250637e-05
    2. 'a' → logprob: -12.125028610229492
    3. 'angles' → logprob: -12.250028610229492
    4. ')' → logprob: -12.875028610229492
    5. ',' → logprob: -12.875028610229492
    6. ''s' → logprob: -13.000028610229492
    7. 'angle' → logprob: -13.250028610229492
    8. '   ' → logprob: -13.875028610229492
    9. '<|end|>' → logprob: -14.500028610229492
    10. ' s' → logprob: -14.562528610229492

Token 104: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004639572463929653
    2. '.' → logprob: -5.379639625549316
    3. '.extend' → logprob: -11.379639625549316
    4. '.push' → logprob: -13.129639625549316
    5. ' .' → logprob: -13.129639625549316
    6. '.setdefault' → logprob: -13.754639625549316
    7. '.ap' → logprob: -14.004639625549316
    8. '.app' → logprob: -14.004639625549316
    9. '.Append' → logprob: -15.504639625549316
    10. 'append' → logprob: -15.629639625549316

Token 105: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0006118826568126678
    2. '(' → logprob: -7.625611782073975
    3. '([' → logprob: -9.250612258911133
    4. '(l' → logprob: -10.625612258911133
    5. '(((' → logprob: -13.125612258911133
    6. '(([' → logprob: -14.500612258911133
    7. ' ((' → logprob: -14.625612258911133
    8. '(
' → logprob: -15.125612258911133
    9. ' (' → logprob: -16.500612258911133
    10. '([(' → logprob: -16.875612258911133

Token 106: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.023265745490789413
    2. ' l' → logprob: -3.773265838623047
    3. '   ' → logprob: -11.023265838623047
    4. '	l' → logprob: -13.273265838623047
    5. '    ' → logprob: -14.148265838623047
    6. ' ' → logprob: -14.273265838623047
    7. ')' → logprob: -15.898265838623047
    8. ',l' → logprob: -16.023265838623047
    9. ',' → logprob: -16.148265838623047
    10. '           ' → logprob: -16.398265838623047

Token 107: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04312467202544212
    2. ',t' → logprob: -3.1681246757507324
    3. ' ,' → logprob: -9.168124198913574
    4. ',
' → logprob: -10.918124198913574
    5. ',

' → logprob: -14.918124198913574
    6. ',b' → logprob: -15.168124198913574
    7. ',tp' → logprob: -15.293124198913574
    8. ' ' → logprob: -15.543124198913574
    9. ',T' → logprob: -15.543124198913574
    10. ',l' → logprob: -15.668124198913574

Token 108: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07010549306869507
    2. ',r' → logprob: -2.69510555267334
    3. ',b' → logprob: -9.69510555267334
    4. ' ,' → logprob: -9.82010555267334
    5. ',
' → logprob: -9.94510555267334
    6. ',l' → logprob: -13.57010555267334
    7. 'r' → logprob: -14.19510555267334
    8. ',t' → logprob: -15.19510555267334
    9. ',p' → logprob: -15.32010555267334
    10. ',c' → logprob: -15.32010555267334

Token 109: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.16032810509204865
    2. ',' → logprob: -1.9103281497955322
    3. ' ,' → logprob: -9.410327911376953
    4. 'b' → logprob: -11.535327911376953
    5. ',
' → logprob: -11.660327911376953
    6. ' b' → logprob: -14.410327911376953
    7. ',y' → logprob: -14.535327911376953
    8. ' ' → logprob: -15.035327911376953
    9. ',\
' → logprob: -15.285327911376953
    10. ',

' → logprob: -15.410327911376953

Token 110: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25217506289482117
    2. '))' → logprob: -1.5021750926971436
    3. '))
' → logprob: -9.127175331115723
    4. ')
' → logprob: -10.002175331115723
    5. ' )' → logprob: -10.002175331115723
    6. ',' → logprob: -11.002175331115723
    7. ' ))' → logprob: -11.502175331115723
    8. ')))' → logprob: -11.752175331115723
    9. '       ' → logprob: -12.127175331115723
    10. ',)' → logprob: -14.002175331115723

Token 111: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06878284364938736
    2. '<|end|>' → logprob: -3.4437828063964844
    3. '       ' → logprob: -3.6937828063964844
    4. '        
' → logprob: -5.318782806396484
    5. '  
' → logprob: -6.818782806396484
    6. '\n' → logprob: -7.068782806396484
    7. '    
' → logprob: -7.068782806396484
    8. '<|end|>' → logprob: -7.568782806396484
    9. ' 
' → logprob: -7.693782806396484
    10. '
' → logprob: -8.568782806396484

Token 112: ' xs' (ID: 26642)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21073904633522034
    2. '       ' → logprob: -2.4607391357421875
    3. '   ' → logprob: -3.2107391357421875
    4. '
' → logprob: -3.5857391357421875
    5. ' xs' → logprob: -3.8357391357421875
    6. 'xs' (adapté à ' xs') → logprob: -5.2107391357421875
    7. ' ' → logprob: -6.2107391357421875
    8. '        
' → logprob: -6.2107391357421875
    9. '            
' → logprob: -6.7107391357421875
    10. '```' → logprob: -6.9607391357421875

Token 113: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.029957246035337448
    2. '.' → logprob: -3.5299572944641113
    3. '.update' → logprob: -8.529956817626953
    4. ' .' → logprob: -12.154956817626953
    5. '.append' → logprob: -13.779956817626953
    6. '.setdefault' → logprob: -14.029956817626953
    7. ').' → logprob: -14.779956817626953
    8. '.insert' → logprob: -14.904956817626953
    9. '.Add' → logprob: -15.029956817626953
    10. '​.' → logprob: -15.904956817626953

Token 114: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0005541055579669774
    2. '(' → logprob: -7.500554084777832
    3. ' (' → logprob: -14.375554084777832
    4. 'l' → logprob: -15.625554084777832
    5. ' l' → logprob: -16.25055503845215
    6. '(x' → logprob: -16.50055503845215
    7. '(r' → logprob: -16.75055503845215
    8. '(s' → logprob: -17.25055503845215
    9. '(L' → logprob: -17.25055503845215
    10. '((' → logprob: -17.50055503845215

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03814603388309479
    2. ')
' → logprob: -3.2881460189819336
    3. ' )' → logprob: -9.663146018981934
    4. ' )
' → logprob: -11.163146018981934
    5. 'r' → logprob: -11.413146018981934
    6. ')
' → logprob: -12.163146018981934
    7. '   ' → logprob: -13.288146018981934
    8. ',' → logprob: -13.288146018981934
    9. ',r' → logprob: -13.538146018981934
    10. ' ' → logprob: -13.788146018981934

Token 116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3180197477340698
    2. '       ' → logprob: -1.5680197477340698
    3. '<|end|>' → logprob: -1.5680197477340698
    4. ' ' → logprob: -2.4430198669433594
    5. 'xs' → logprob: -2.5680198669433594
    6. ' xs' → logprob: -3.0680198669433594
    7. '(xs' → logprob: -3.6930198669433594
    8. ')' → logprob: -3.8180198669433594
    9. 's' → logprob: -4.193019866943359
    10. '   ' → logprob: -4.318019866943359

Token 117: ' xs' (ID: 26642)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00150212156586349
    2. ' r' → logprob: -6.75150203704834
    3. 'x' → logprob: -8.75150203704834
    4. 's' → logprob: -8.87650203704834
    5. 'b' → logprob: -11.75150203704834
    6. 't' → logprob: -11.75150203704834
    7. 'xs' (adapté à ' xs') → logprob: -11.87650203704834
    8. '	r' → logprob: -12.37650203704834
    9. ' ' → logprob: -12.87650203704834
    10. '   ' → logprob: -13.75150203704834

Token 118: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3869715929031372
    2. '.add' → logprob: -1.1369715929031372
    3. '<|end|>' → logprob: -9.761971473693848
    4. '.
' → logprob: -11.136971473693848
    5. ' .' → logprob: -11.761971473693848
    6. 'add' → logprob: -12.011971473693848
    7. '.Add' → logprob: -12.511971473693848
    8. '<|end|>' → logprob: -13.136971473693848
    9. '.setdefault' → logprob: -13.386971473693848
    10. '```' → logprob: -13.511971473693848

Token 119: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00704865250736475
    2. '(' → logprob: -5.507048606872559
    3. 'r' → logprob: -6.257048606872559
    4. ' r' → logprob: -7.007048606872559
    5. ' (' → logprob: -8.882048606872559
    6. '	r' → logprob: -12.757048606872559
    7. '(
' → logprob: -13.632048606872559
    8. '   ' → logprob: -16.132049560546875
    9. ')' → logprob: -16.632049560546875
    10. '<|end|>' → logprob: -16.757049560546875

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006478638388216496
    2. ')
' → logprob: -7.375648021697998
    3. ' )' → logprob: -11.75064754486084
    4. '       ' → logprob: -11.87564754486084
    5. '           ' → logprob: -12.25064754486084
    6. '   ' → logprob: -14.87564754486084
    7. '<|end|>' → logprob: -15.12564754486084
    8. ')

' → logprob: -16.125648498535156
    9. ')
' → logprob: -16.375648498535156
    10. '),' → logprob: -16.750648498535156

Token 121: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13919061422348022
    2. '           ' → logprob: -2.389190673828125
    3. '        
' → logprob: -4.014190673828125
    4. ' 
' → logprob: -5.889190673828125
    5. '```' → logprob: -5.889190673828125
    6. ' ' → logprob: -6.014190673828125
    7. ' ys' → logprob: -6.014190673828125
    8. '  
' → logprob: -6.389190673828125
    9. '
' → logprob: -6.389190673828125
    10. '   ' → logprob: -6.639190673828125

Token 122: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -0.00011808603449026123
    2. ' ys' → logprob: -9.125118255615234
    3. '   ' → logprob: -12.250118255615234
    4. 'y' → logprob: -13.375118255615234
    5. '       ' → logprob: -13.750118255615234
    6. ' ' → logprob: -14.125118255615234
    7. 'yl' → logprob: -15.250118255615234
    8. 'yt' → logprob: -15.250118255615234
    9. 't' → logprob: -15.875118255615234
    10. 'tys' → logprob: -16.375118255615234

Token 123: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.2015184909105301
    2. '.' → logprob: -1.7015185356140137
    3. ' .' → logprob: -9.201518058776855
    4. '<|end|>' → logprob: -13.451518058776855
    5. '.
' → logprob: -14.201518058776855
    6. '.setdefault' → logprob: -14.826518058776855
    7. '.Add' → logprob: -15.076518058776855
    8. 'add' → logprob: -15.326518058776855
    9. ').' → logprob: -15.451518058776855
    10. '​.' → logprob: -15.576518058776855

Token 124: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.48287534713745117
    2. '(t' → logprob: -1.1078753471374512
    3. 'b' → logprob: -2.982875347137451
    4. '(b' → logprob: -6.607875347137451
    5. ' t' → logprob: -7.482875347137451
    6. '(' → logprob: -9.48287582397461
    7. '	t' → logprob: -9.73287582397461
    8. ' b' → logprob: -11.23287582397461
    9. ' (' → logprob: -11.35787582397461
    10. ')t' → logprob: -12.60787582397461

Token 125: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25196540355682373
    2. ')' → logprob: -1.5019654035568237
    3. ')
' → logprob: -10.376965522766113
    4. ' )
' → logprob: -12.626965522766113
    5. ')b' → logprob: -14.376965522766113
    6. ' )' → logprob: -14.626965522766113
    7. ')

' → logprob: -15.001965522766113
    8. '       ' → logprob: -16.126964569091797
    9. '   ' → logprob: -16.251964569091797
    10. '),' → logprob: -16.501964569091797

Token 126: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6121124625205994
    2. '           ' → logprob: -0.9871124625205994
    3. '   ' → logprob: -3.362112522125244
    4. '<|end|>' → logprob: -3.862112522125244
    5. ' ' → logprob: -4.737112522125244
    6. ')' → logprob: -4.987112522125244
    7. '```' → logprob: -5.237112522125244
    8. ' ys' → logprob: -5.987112522125244
    9. '``' → logprob: -6.862112522125244
    10. ' ' → logprob: -7.487112522125244

Token 127: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -0.25098663568496704
    2. 'y' → logprob: -2.1259865760803223
    3. ' ys' → logprob: -2.3759865760803223
    4. 'b' → logprob: -5.000986576080322
    5. '```' → logprob: -6.875986576080322
    6. '           ' → logprob: -7.625986576080322
    7. ' ' → logprob: -7.875986576080322
    8. 'yb' → logprob: -8.00098705291748
    9. '``' → logprob: -8.50098705291748
    10. '       ' → logprob: -8.62598705291748

Token 128: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.03805044665932655
    2. '.' → logprob: -3.288050413131714
    3. '```' → logprob: -12.163050651550293
    4. ' .' → logprob: -13.538050651550293
    5. '.
' → logprob: -14.288050651550293
    6. 'add' → logprob: -14.413050651550293
    7. '`.' → logprob: -14.913050651550293
    8. '>.' → logprob: -15.163050651550293
    9. '.Add' → logprob: -15.163050651550293
    10. ').' → logprob: -15.788050651550293

Token 129: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10350608080625534
    2. '(b' → logprob: -2.353506088256836
    3. ' b' → logprob: -5.728506088256836
    4. '(' → logprob: -10.853506088256836
    5. '	b' → logprob: -11.603506088256836
    6. ')b' → logprob: -11.978506088256836
    7. ' (' → logprob: -12.103506088256836
    8. ')' → logprob: -13.978506088256836
    9. '(
' → logprob: -14.978506088256836
    10. '   ' → logprob: -15.478506088256836

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.23917081207037e-05
    2. ')
' → logprob: -10.125041961669922
    3. ' )' → logprob: -13.500041961669922
    4. '())' → logprob: -15.500041961669922
    5. '       ' → logprob: -16.000041961669922
    6. '()' → logprob: -16.375041961669922
    7. '}' → logprob: -16.500041961669922
    8. ')}' → logprob: -17.000041961669922
    9. '<|end|>' → logprob: -17.125041961669922
    10. '   ' → logprob: -17.375041961669922

Token 131: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13558116555213928
    2. '    
' → logprob: -3.2605812549591064
    3. '        
' → logprob: -3.6355812549591064
    4. '<|end|>' → logprob: -3.6355812549591064
    5. '       ' → logprob: -4.135581016540527
    6. '  
' → logprob: -4.885581016540527
    7. '   ' → logprob: -5.010581016540527
    8. ' 
' → logprob: -6.010581016540527
    9. '```' → logprob: -7.760581016540527
    10. '   
' → logprob: -7.760581016540527

Token 132: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.722362756729126
    2. '       ' → logprob: -0.847362756729126
    3. '   ' → logprob: -3.347362756729126
    4. '        
' → logprob: -3.847362756729126
    5. 'xs' → logprob: -4.597362518310547
    6. ' ' → logprob: -5.347362518310547
    7. ' xs' → logprob: -5.472362518310547
    8. '    
' → logprob: -5.722362518310547
    9. ' 
' → logprob: -6.347362518310547
    10. '<|end|>' → logprob: -6.847362518310547

Token 133: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' (adapté à ' xs') → logprob: -0.0054968721233308315
    2. 'x' → logprob: -5.380496978759766
    3. ' xs' → logprob: -7.880496978759766
    4. '#' → logprob: -7.880496978759766
    5. 'sorted' → logprob: -9.630496978759766
    6. 'ys' → logprob: -11.005496978759766
    7. '   ' → logprob: -12.005496978759766
    8. 'import' → logprob: -12.005496978759766
    9. 'xc' → logprob: -12.505496978759766
    10. '
' → logprob: -13.005496978759766

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408220171928406
    2. ' =' → logprob: -0.9740822315216064
    3. '=list' → logprob: -13.099081993103027
    4. 'sorted' → logprob: -13.849081993103027
    5. '_sorted' → logprob: -13.849081993103027
    6. ' =
' → logprob: -15.349081993103027
    7. '＝' → logprob: -15.599081993103027
    8. '=
' → logprob: -15.599081993103027
    9. ')' → logprob: -15.599081993103027
    10. '.add' → logprob: -15.974081993103027

Token 135: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0031794982496649027
    2. ' sorted' → logprob: -5.753179550170898
    3. 'list' → logprob: -13.378179550170898
    4. '   ' → logprob: -15.628179550170898
    5. '(sorted' → logprob: -16.1281795501709
    6. ' list' → logprob: -18.2531795501709
    7. '.sorted' → logprob: -19.1281795501709
    8. ' ' → logprob: -19.2531795501709
    9. 'Sorted' → logprob: -20.8781795501709
    10. '```' → logprob: -21.5031795501709

Token 136: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -7.862962229410186e-05
    2. '(list' → logprob: -9.750078201293945
    3. '(' → logprob: -10.875078201293945
    4. '(x' → logprob: -14.125078201293945
    5. 'xs' → logprob: -14.625078201293945
    6. ' (' → logprob: -17.375078201293945
    7. '(set' → logprob: -17.750078201293945
    8. ' xs' → logprob: -18.125078201293945
    9. '(ls' → logprob: -18.125078201293945
    10. '([' → logprob: -18.500078201293945

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.318681188422488e-05
    2. ')
' → logprob: -11.37501335144043
    3. ' )' → logprob: -13.50001335144043
    4. ')

' → logprob: -16.87501335144043
    5. ')#' → logprob: -16.87501335144043
    6. '))' → logprob: -17.37501335144043
    7. '<|end|>' → logprob: -17.50001335144043
    8. '())' → logprob: -17.50001335144043
    9. '   ' → logprob: -18.75001335144043
    10. ' ' → logprob: -19.00001335144043

Token 138: '       ' (ID: 309)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.735248863697052
    2. ' ys' → logprob: -1.1102488040924072
    3. '```' → logprob: -2.1102488040924072
    4. '       ' → logprob: -3.8602488040924072
    5. ')' → logprob: -4.235249042510986
    6. '``' → logprob: -4.360249042510986
    7. ',' → logprob: -5.235249042510986
    8. '<|end|>' → logprob: -5.610249042510986
    9. '[' → logprob: -5.735249042510986
    10. '        
' → logprob: -6.110249042510986

Token 139: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -0.201504185795784
    2. ' ys' → logprob: -1.7015042304992676
    3. '```' → logprob: -9.95150375366211
    4. '       ' → logprob: -10.70150375366211
    5. '   ' → logprob: -12.95150375366211
    6. 'Ys' → logprob: -13.07650375366211
    7. '[' → logprob: -13.20150375366211
    8. 'yscr' → logprob: -13.45150375366211
    9. '``' → logprob: -13.70150375366211
    10. ',' → logprob: -13.82650375366211

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00462284917011857
    2. ' =' → logprob: -5.379622936248779
    3. ')' → logprob: -13.504622459411621
    4. 'sorted' → logprob: -15.379622459411621
    5. '(sorted' → logprob: -15.754622459411621
    6. '.sort' → logprob: -15.754622459411621
    7. '=}' → logprob: -15.754622459411621
    8. '_sorted' → logprob: -15.879622459411621
    9. '=
' → logprob: -15.879622459411621
    10. ')=' → logprob: -15.879622459411621

Token 141: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.20144258439540863
    2. ' sorted' → logprob: -1.7014425992965698
    3. '(sorted' → logprob: -10.45144271850586
    4. '.sorted' → logprob: -15.32644271850586
    5. '_sorted' → logprob: -16.57644271850586
    6. ' ' → logprob: -17.32644271850586
    7. '   ' → logprob: -18.32644271850586
    8. 's' → logprob: -18.57644271850586
    9. 'sort' → logprob: -19.07644271850586
    10. 'Sorted' → logprob: -19.07644271850586

Token 142: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. ' (' → logprob: -15.000000953674316
    3. '(list' → logprob: -15.250000953674316
    4. '(
' → logprob: -16.875
    5. '()' → logprob: -17.0
    6. ')' → logprob: -17.125
    7. '((' → logprob: -17.375
    8. '```' → logprob: -17.5
    9. '(xs' → logprob: -17.5
    10. '([' → logprob: -18.75

Token 143: 'ys' (ID: 1371)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932260990142822
    2. 'ys' → logprob: -0.6932260990142822
    3. ' ys' → logprob: -9.568225860595703
    4. ')' → logprob: -12.318225860595703
    5. '[' → logprob: -13.068225860595703
    6. 'list' → logprob: -14.443225860595703
    7. '```' → logprob: -14.818225860595703
    8. 'Ys' → logprob: -15.443225860595703
    9. '{' → logprob: -15.693225860595703
    10. '   ' → logprob: -15.818225860595703

Token 144: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010413920972496271
    2. '())' → logprob: -9.375103950500488
    3. ')
' → logprob: -12.125103950500488
    4. ' )' → logprob: -12.125103950500488
    5. '()' → logprob: -12.375103950500488
    6. '))' → logprob: -13.875103950500488
    7. ',' → logprob: -14.000103950500488
    8. ')#' → logprob: -14.250103950500488
    9. ')}' → logprob: -15.000103950500488
    10. '#' → logprob: -15.625103950500488

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3362484574317932
    2. '   ' → logprob: -1.9612483978271484
    3. '```' → logprob: -3.0862483978271484
    4. '#' → logprob: -3.5862483978271484
    5. 'x' → logprob: -4.336248397827148
    6. 'grid' → logprob: -4.461248397827148
    7. 'index' → logprob: -4.711248397827148
    8. ',' → logprob: -5.336248397827148
    9. '<|end|>' → logprob: -5.336248397827148
    10. '        
' → logprob: -5.336248397827148

Token 146: ' #' (ID: 1069)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -1.0459774732589722
    2. 'w' → logprob: -1.5459774732589722
    3. 'x' → logprob: -1.5459774732589722
    4. 'width' → logprob: -2.9209775924682617
    5. 'index' → logprob: -3.1709775924682617
    6. 'idx' → logprob: -3.4209775924682617
    7. 'grid' → logprob: -3.6709775924682617
    8. 'compressed' → logprob: -3.9209775924682617
    9. 'comp' → logprob: -4.920977592468262
    10. 'dx' → logprob: -5.170977592468262

Token 147: ' coordinate' (ID: 30380)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.8033674359321594
    2. 'width' → logprob: -1.9283673763275146
    3. 'w' → logprob: -2.5533673763275146
    4. 'compressed' → logprob: -3.0533673763275146
    5. 'x' → logprob: -3.1783673763275146
    6. 'grid' → logprob: -3.3033673763275146
    7. ' area' → logprob: -3.8033673763275146
    8. '#' → logprob: -3.8033673763275146
    9. 'h' → logprob: -4.178367614746094
    10. 'compress' → logprob: -4.428367614746094

Token 148: ' compression' (ID: 41811)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.8274285197257996
    2. 'compression' → logprob: -0.8274285197257996
    3. 'compress' → logprob: -2.9524285793304443
    4. ' compression' → logprob: -3.0774285793304443
    5. 'com' → logprob: -4.577428340911865
    6. 's' → logprob: -4.827428340911865
    7. 'compressed' → logprob: -5.702428340911865
    8. '_' → logprob: -6.327428340911865
    9. '_mapping' → logprob: -7.077428340911865
    10. ' compress' → logprob: -7.327428340911865

Token 149: ' mapping' (ID: 22573)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3933139741420746
    2. ',' → logprob: -2.0183138847351074
    3. 'x' → logprob: -3.2683138847351074
    4. ':' → logprob: -3.7683138847351074
    5. '        
' → logprob: -3.7683138847351074
    6. '<|end|>' → logprob: -3.7683138847351074
    7. '
' → logprob: -4.018313884735107
    8. '#' → logprob: -4.018313884735107
    9. ')' → logprob: -4.518313884735107
    10. 'compressed' → logprob: -5.143313884735107

Token 150: ' coordinate' (ID: 30380)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9869090914726257
    2. ' x' → logprob: -1.3619091510772705
    3. ' =' → logprob: -2.1119091510772705
    4. ':' → logprob: -2.4869091510772705
    5. ' xs' → logprob: -3.1119091510772705
    6. ',' → logprob: -3.3619091510772705
    7. '   ' → logprob: -3.6119091510772705
    8. 'xs' → logprob: -4.361908912658691
    9. 'dict' → logprob: -5.111908912658691
    10. '       ' → logprob: -5.111908912658691

Token 151: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12051226198673248
    2. 's' → logprob: -2.7455122470855713
    3. '=' → logprob: -3.2455122470855713
    4. '_x' → logprob: -4.99551248550415
    5. '_to' → logprob: -6.37051248550415
    6. 'to' → logprob: -7.87051248550415
    7. '_' → logprob: -7.99551248550415
    8. ' to' → logprob: -8.370512008666992
    9. ':' → logprob: -8.620512008666992
    10. 'x' → logprob: -8.745512008666992

Token 152: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.3869061768054962
    2. ' index' → logprob: -1.1369061470031738
    3. 'idx' → logprob: -10.886906623840332
    4. ' indices' → logprob: -12.011906623840332
    5. 'indices' → logprob: -12.136906623840332
    6. ' its' → logprob: -13.136906623840332
    7. ' idx' → logprob: -13.511906623840332
    8. 'id' → logprob: -14.636906623840332
    9. ' their' → logprob: -15.386906623840332
    10. ' compressed' → logprob: -15.761906623840332

Token 153: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06563170999288559
    2. ' x' → logprob: -3.065631628036499
    3. '   ' → logprob: -5.440631866455078
    4. 'xs' → logprob: -5.565631866455078
    5. '       ' → logprob: -5.815631866455078
    6. 'mapping' → logprob: -7.065631866455078
    7. ',' → logprob: -7.190631866455078
    8. 'dict' → logprob: -7.190631866455078
    9. ' xs' → logprob: -7.440631866455078
    10. 'map' → logprob: -8.315631866455078

Token 154: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3367921113967896
    2. '       ' → logprob: -1.4617921113967896
    3. ')' → logprob: -1.7117921113967896
    4. 'x' → logprob: -1.7117921113967896
    5. ',' → logprob: -3.5867919921875
    6. ':' → logprob: -3.9617919921875
    7. 'mapping' → logprob: -3.9617919921875
    8. ' x' → logprob: -4.3367919921875
    9. '{' → logprob: -4.5867919921875
    10. 'xs' → logprob: -5.2117919921875

Token 155: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.023699849843978882
    2. ' x' → logprob: -3.8986997604370117
    3. '   ' → logprob: -6.398699760437012
    4. 'xs' → logprob: -6.898699760437012
    5. 'xc' → logprob: -9.023699760437012
    6. 'cx' → logprob: -9.023699760437012
    7. '```' → logprob: -10.273699760437012
    8. '       ' → logprob: -10.648699760437012
    9. ' xs' → logprob: -10.898699760437012
    10. 'compress' → logprob: -11.273699760437012

Token 156: '_id' (ID: 1537)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.7316154837608337
    2. '_to' → logprob: -0.9816154837608337
    3. '_idx' → logprob: -2.2316155433654785
    4. '_' → logprob: -3.9816155433654785
    5. '_index' → logprob: -5.3566155433654785
    6. '_coord' → logprob: -5.4816155433654785
    7. '_mapping' → logprob: -5.7316155433654785
    8. '_comp' → logprob: -6.9816155433654785
    9. '_coords' → logprob: -6.9816155433654785
    10. '_pos' → logprob: -6.9816155433654785

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11303441226482391
    2. ' =' → logprob: -2.23803448677063
    3. 's' → logprob: -8.48803424835205
    4. ')' → logprob: -13.61303424835205
    5. '={}' → logprob: -13.61303424835205
    6. 'x' → logprob: -14.23803424835205
    7. ',' → logprob: -14.61303424835205
    8. '_' → logprob: -14.73803424835205
    9. '＝' → logprob: -14.73803424835205
    10. '_map' → logprob: -15.11303424835205

Token 158: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.004950174130499363
    2. ' {' → logprob: -5.754950046539307
    3. '{}' → logprob: -6.504950046539307
    4. '{x' → logprob: -8.254950523376465
    5. '{i' → logprob: -12.004950523376465
    6. '{id' → logprob: -12.879950523376465
    7. ' {}' → logprob: -12.879950523376465
    8. '{k' → logprob: -13.379950523376465
    9. '{name' → logprob: -14.379950523376465
    10. 'dict' → logprob: -14.379950523376465

Token 159: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00025788258062675595
    2. 'v' → logprob: -8.62525749206543
    3. ' x' → logprob: -9.50025749206543
    4. 'xi' → logprob: -13.62525749206543
    5. 'xs' → logprob: -13.75025749206543
    6. '
' → logprob: -14.87525749206543
    7. '   ' → logprob: -15.62525749206543
    8. '```' → logprob: -15.62525749206543
    9. 'xc' → logprob: -16.50025749206543
    10. '	x' → logprob: -16.50025749206543

Token 160: ':i' (ID: 34041)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4746845066547394
    2. ':x' → logprob: -0.974684476852417
    3. ' :' → logprob: -7.849684715270996
    4. ':i' → logprob: -8.474684715270996
    5. ':k' → logprob: -11.849684715270996
    6. '   ' → logprob: -14.849684715270996
    7. ':y' → logprob: -15.224684715270996
    8. 'x' → logprob: -15.474684715270996
    9. ':index' → logprob: -15.724684715270996
    10. ':l' → logprob: -15.974684715270996

Token 161: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25193658471107483
    2. 'for' → logprob: -1.5019365549087524
    3. ' ' → logprob: -12.501936912536621
    4. 'x' → logprob: -13.376936912536621
    5. '	for' → logprob: -14.626936912536621
    6. ':' → logprob: -14.876936912536621
    7. '   ' → logprob: -15.126936912536621
    8. ',' → logprob: -15.251936912536621
    9. '}' → logprob: -15.251936912536621
    10. ' x' → logprob: -15.626936912536621

Token 162: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.050394456833601
    2. ' x' → logprob: -3.0503945350646973
    3. 'i' → logprob: -6.675394535064697
    4. ' i' → logprob: -7.550394535064697
    5. '(x' → logprob: -12.050394058227539
    6. ',' → logprob: -13.175394058227539
    7. ',x' → logprob: -13.175394058227539
    8. ' range' → logprob: -13.300394058227539
    9. ' (' → logprob: -13.675394058227539
    10. '	x' → logprob: -14.050394058227539

Token 163: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.3563680052757263
    2. ',' → logprob: -1.731368064880371
    3. 'x' → logprob: -2.106368064880371
    4. 'enumer' → logprob: -7.856368064880371
    5. ' x' → logprob: -8.356368064880371
    6. 'in' → logprob: -8.481368064880371
    7. '(x' → logprob: -9.481368064880371
    8. ' in' → logprob: -9.731368064880371
    9. 'range' → logprob: -9.856368064880371
    10. ' ,' → logprob: -10.481368064880371

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3916015923023224
    2. 'in' → logprob: -1.1416015625
    3. 'n' → logprob: -5.3916015625
    4. 's' → logprob: -9.3916015625
    5. 'enumer' → logprob: -10.6416015625
    6. ' ' → logprob: -11.0166015625
    7. ',' → logprob: -11.3916015625
    8. 'x' → logprob: -12.0166015625
    9. '
' → logprob: -12.5166015625
    10. ')' → logprob: -12.8916015625

Token 165: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.001506409258581698
    2. ' enumerate' → logprob: -6.501506328582764
    3. '```' → logprob: -13.251506805419922
    4. '
' → logprob: -13.626506805419922
    5. 'en' → logprob: -14.001506805419922
    6. 'enum' → logprob: -15.751506805419922
    7. ' ' → logprob: -17.251506805419922
    8. ')' → logprob: -17.626506805419922
    9. ',' → logprob: -18.001506805419922
    10. '.enumer' → logprob: -18.126506805419922

Token 166: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.0009194392478093505
    2. 'xs' → logprob: -7.000919342041016
    3. ' xs' → logprob: -11.750919342041016
    4. '(' → logprob: -16.500919342041016
    5. '(x' → logprob: -17.000919342041016
    6. ' (' → logprob: -18.250919342041016
    7. 'Xs' → logprob: -19.875919342041016
    8. '}' → logprob: -20.125919342041016
    9. '
' → logprob: -20.125919342041016
    10. '   ' → logprob: -20.500919342041016

Token 167: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -8.137130498653278e-05
    2. '}' → logprob: -10.000081062316895
    3. ' )' → logprob: -10.625081062316895
    4. ')' → logprob: -11.750081062316895
    5. ')}
' → logprob: -12.875081062316895
    6. '})' → logprob: -15.250081062316895
    7. ')}
' → logprob: -16.00008201599121
    8. ' }' → logprob: -16.12508201599121
    9. ')}

' → logprob: -16.12508201599121
    10. ');}' → logprob: -16.37508201599121

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5854300260543823
    2. ' y' → logprob: -1.4604300260543823
    3. 'y' → logprob: -1.5854300260543823
    4. '   ' → logprob: -5.835430145263672
    5. ',' → logprob: -7.335430145263672
    6. ')' → logprob: -7.335430145263672
    7. '
' → logprob: -7.835430145263672
    8. ',
' → logprob: -8.210430145263672
    9. '        
' → logprob: -8.335430145263672
    10. '```' → logprob: -8.335430145263672

Token 169: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0022971592843532562
    2. ' y' → logprob: -6.1272969245910645
    3. '       ' → logprob: -9.252297401428223
    4. '   ' → logprob: -11.377297401428223
    5. '```' → logprob: -12.502297401428223
    6. 'x' → logprob: -14.502297401428223
    7. '
' → logprob: -16.252296447753906
    8. '	y' → logprob: -16.627296447753906
    9. '        
' → logprob: -16.752296447753906
    10. 'ys' → logprob: -17.502296447753906

Token 170: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0014648657524958253
    2. '_' → logprob: -6.62646484375
    3. '_ids' → logprob: -10.12646484375
    4. '_i' → logprob: -10.12646484375
    5. ' _' → logprob: -11.37646484375
    6. 's' → logprob: -11.50146484375
    7. '_s' → logprob: -12.25146484375
    8. '_d' → logprob: -12.62646484375
    9. '_y' → logprob: -12.62646484375
    10. '```' → logprob: -13.00146484375

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868737816810608
    2. '=' → logprob: -1.136873722076416
    3. '={' → logprob: -13.761874198913574
    4. '{' → logprob: -14.261874198913574
    5. ' ={' → logprob: -14.386874198913574
    6. ' ' → logprob: -15.761874198913574
    7. '[' → logprob: -16.761873245239258
    8. '＝' → logprob: -17.261873245239258
    9. ')' → logprob: -17.636873245239258
    10. '={}' → logprob: -17.761873245239258

Token 172: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0038229916244745255
    2. ' {' → logprob: -6.0038228034973145
    3. '{i' → logprob: -6.7538228034973145
    4. '{x' → logprob: -8.628823280334473
    5. '{id' → logprob: -15.003823280334473
    6. '{s' → logprob: -15.128823280334473
    7. '{k' → logprob: -15.128823280334473
    8. '{return' → logprob: -16.003822326660156
    9. '{o' → logprob: -16.503822326660156
    10. '{name' → logprob: -16.878822326660156

Token 173: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.842555426876061e-06
    2. ' y' → logprob: -12.375004768371582
    3. 'x' → logprob: -15.125004768371582
    4. '(y' → logprob: -16.2500057220459
    5. 'ys' → logprob: -16.8750057220459
    6. '   ' → logprob: -17.0000057220459
    7. '
' → logprob: -17.2500057220459
    8. '```' → logprob: -17.7500057220459
    9. '	y' → logprob: -18.0000057220459
    10. 'v' → logprob: -18.6250057220459

Token 174: ':i' (ID: 34041)
  Prédit: ':y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':y' → logprob: -0.0402352511882782
    2. '{' → logprob: -4.1652350425720215
    3. ':i' → logprob: -4.4152350425720215
    4. '{i' → logprob: -4.5402350425720215
    5. 'y' → logprob: -7.7902350425720215
    6. ':' → logprob: -8.41523551940918
    7. '(y' → logprob: -8.66523551940918
    8. ' :' → logprob: -9.04023551940918
    9. ':{' → logprob: -9.66523551940918
    10. ' {' → logprob: -10.04023551940918

Token 175: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14477886259555817
    2. 'for' → logprob: -2.0197789669036865
    3. '{' → logprob: -6.769778728485107
    4. '{i' → logprob: -7.269778728485107
    5. ':i' → logprob: -9.769779205322266
    6. '{x' → logprob: -10.019779205322266
    7. ':' → logprob: -10.144779205322266
    8. ' ' → logprob: -10.269779205322266
    9. '	for' → logprob: -10.519779205322266
    10. ' {' → logprob: -11.144779205322266

Token 176: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0324217788875103
    2. 'enumer' → logprob: -3.907421827316284
    3. ' i' → logprob: -4.782421588897705
    4. 'y' → logprob: -6.407421588897705
    5. ',' → logprob: -6.657421588897705
    6. ',i' → logprob: -8.282422065734863
    7. ' enumerate' → logprob: -9.032422065734863
    8. 'range' → logprob: -10.032422065734863
    9. ' y' → logprob: -10.657422065734863
    10. ' range' → logprob: -10.657422065734863

Token 177: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050126224756240845
    2. ',y' → logprob: -3.050126314163208
    3. 'y' → logprob: -7.550126075744629
    4. 'enumer' → logprob: -7.550126075744629
    5. 'ys' → logprob: -8.300126075744629
    6. ' ys' → logprob: -9.425126075744629
    7. ',x' → logprob: -9.800126075744629
    8. ' ,' → logprob: -10.175126075744629
    9. ' in' → logprob: -10.800126075744629
    10. ',s' → logprob: -11.050126075744629

Token 178: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6936166882514954
    2. ' in' → logprob: -0.6936166882514954
    3. 'enumer' → logprob: -8.19361686706543
    4. ',' → logprob: -9.19361686706543
    5. 'n' → logprob: -10.31861686706543
    6. ')' → logprob: -10.94361686706543
    7. ' enumerate' → logprob: -11.19361686706543
    8. ' ' → logprob: -11.56861686706543
    9. 'y' → logprob: -12.44361686706543
    10. '   ' → logprob: -13.19361686706543

Token 179: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00044056313345208764
    2. ' enumerate' → logprob: -7.75044059753418
    3. 'ys' → logprob: -12.25044059753418
    4. '(' → logprob: -12.75044059753418
    5. '(en' → logprob: -13.75044059753418
    6. 'enum' → logprob: -14.62544059753418
    7. '{' → logprob: -15.37544059753418
    8. ' ys' → logprob: -16.00044059753418
    9. 'en' → logprob: -16.12544059753418
    10. '.enumer' → logprob: -16.12544059753418

Token 180: '(' (ID: 7)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.3347565233707428
    2. '(' → logprob: -1.8347564935684204
    3. 'enumer' → logprob: -2.08475661277771
    4. ' ys' → logprob: -8.459756851196289
    5. ' enumerate' → logprob: -8.584756851196289
    6. ')' → logprob: -10.209756851196289
    7. 'range' → logprob: -12.084756851196289
    8. '{' → logprob: -12.084756851196289
    9. 'xs' → logprob: -12.209756851196289
    10. '(xs' → logprob: -12.459756851196289

Token 181: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -2.4272752852994017e-05
    2. 'enumer' → logprob: -11.37502384185791
    3. ' ys' → logprob: -11.37502384185791
    4. ')' → logprob: -14.50002384185791
    5. '
' → logprob: -15.12502384185791
    6. '   ' → logprob: -16.000024795532227
    7. 'xs' → logprob: -16.375024795532227
    8. '(' → logprob: -16.375024795532227
    9. ' enumerate' → logprob: -17.125024795532227
    10. ' ' → logprob: -17.875024795532227

Token 182: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.12743324041366577
    2. '}' → logprob: -2.3774333000183105
    3. ')' → logprob: -3.6274333000183105
    4. '})' → logprob: -8.252432823181152
    5. ' }' → logprob: -13.002432823181152
    6. ' )' → logprob: -13.002432823181152
    7. ');}' → logprob: -13.252432823181152
    8. ')}
' → logprob: -13.502432823181152
    9. ')}}' → logprob: -13.627432823181152
    10. '}}' → logprob: -13.877432823181152

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37503668665885925
    2. '        
' → logprob: -2.1250367164611816
    3. '
' → logprob: -2.7500367164611816
    4. '```' → logprob: -3.5000367164611816
    5. '<|end|>' → logprob: -4.000036716461182
    6. '   ' → logprob: -4.375036716461182
    7. ' grid' → logprob: -4.500036716461182
    8. 'grid' → logprob: -4.500036716461182
    9. '    
' → logprob: -5.250036716461182
    10. ' 
' → logprob: -5.250036716461182

Token 184: ' w' (ID: 286)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.35900020599365234
    2. 'h' → logprob: -1.6090002059936523
    3. 'area' → logprob: -3.8590002059936523
    4. 'height' → logprob: -4.234000205993652
    5. 'covered' → logprob: -4.234000205993652
    6. 'visited' → logprob: -4.234000205993652
    7. 'H' → logprob: -4.984000205993652
    8. '       ' → logprob: -4.984000205993652
    9. 'w' (adapté à ' w') → logprob: -5.234000205993652
    10. '#' → logprob: -5.859000205993652

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9000967741012573
    2. 'idth' → logprob: -1.1500967741012573
    3. ' =' → logprob: -1.5250967741012573
    4. ',' → logprob: -4.150096893310547
    5. 'h' → logprob: -4.275096893310547
    6. 's' → logprob: -4.900096893310547
    7. '_' → logprob: -5.150096893310547
    8. 'ith' → logprob: -5.400096893310547
    9. 'e' → logprob: -5.525096893310547
    10. 'hile' → logprob: -6.275096893310547

Token 186: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012678056373260915
    2. ' len' → logprob: -9.000126838684082
    3. '[len' → logprob: -12.750126838684082
    4. '(len' → logprob: -14.750126838684082
    5. '   ' → logprob: -19.000125885009766
    6. '=len' → logprob: -19.000125885009766
    7. '	len' → logprob: -19.125125885009766
    8. ' ' → logprob: -19.750125885009766
    9. '[' → logprob: -19.875125885009766
    10. 'xs' → logprob: -19.875125885009766

Token 187: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.00027349460287950933
    2. '(x' → logprob: -8.250273704528809
    3. '(' → logprob: -11.375273704528809
    4. 'xs' → logprob: -14.875273704528809
    5. '(ws' → logprob: -16.000272750854492
    6. ' (' → logprob: -16.500272750854492
    7. '(wx' → logprob: -16.500272750854492
    8. '(
' → logprob: -17.000272750854492
    9. '(w' → logprob: -17.750272750854492
    10. '(sys' → logprob: -18.000272750854492

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5822400857578032e-05
    2. ')
' → logprob: -11.250025749206543
    3. ')-' → logprob: -11.875025749206543
    4. ' )' → logprob: -12.375025749206543
    5. '-' → logprob: -14.750025749206543
    6. '<|end|>' → logprob: -14.875025749206543
    7. ')#' → logprob: -15.625025749206543
    8. 'w' → logprob: -15.875025749206543
    9. '[' → logprob: -16.25002670288086
    10. '#' → logprob: -16.87502670288086

Token 189: '       ' (ID: 309)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7566343545913696
    2. ' h' → logprob: -0.8816343545913696
    3. '       ' → logprob: -2.75663423538208
    4. '
' → logprob: -4.13163423538208
    5. ',h' → logprob: -4.88163423538208
    6. '+' → logprob: -5.13163423538208
    7. ',' → logprob: -5.25663423538208
    8. '*h' → logprob: -5.50663423538208
    9. '*' → logprob: -6.00663423538208
    10. '   ' → logprob: -6.00663423538208

Token 190: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.004641118925064802
    2. ' h' → logprob: -5.379641056060791
    3. '       ' → logprob: -11.50464153289795
    4. '   ' → logprob: -12.00464153289795
    5. '```' → logprob: -13.62964153289795
    6. '	h' → logprob: -14.00464153289795
    7. 'def' → logprob: -15.12964153289795
    8. '           ' → logprob: -15.12964153289795
    9. ' ' → logprob: -15.25464153289795
    10. '<h' → logprob: -15.37964153289795

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759400725364685
    2. ' =' → logprob: -0.8259400725364685
    3. '=len' → logprob: -15.200940132141113
    4. ' ' → logprob: -15.575940132141113
    5. '<|end|>' → logprob: -17.200939178466797
    6. '=int' → logprob: -17.575939178466797
    7. '＝' → logprob: -17.700939178466797
    8. ')' → logprob: -17.950939178466797
    9. ' =)' → logprob: -18.575939178466797
    10. '=}' → logprob: -19.325939178466797

Token 192: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0006282062386162579
    2. ' len' → logprob: -7.5006279945373535
    3. '(len' → logprob: -9.500628471374512
    4. '[len' → logprob: -15.000628471374512
    5. '=len' → logprob: -17.000627517700195
    6. '	len' → logprob: -18.250627517700195
    7. ',len' → logprob: -19.875627517700195
    8. '   ' → logprob: -20.000627517700195
    9. '<len' → logprob: -20.000627517700195
    10. '       ' → logprob: -21.250627517700195

Token 193: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. 'ys' → logprob: -17.125
    3. ' (' → logprob: -18.625
    4. ' ys' → logprob: -19.375
    5. '(xs' → logprob: -20.375
    6. '(y' → logprob: -21.125
    7. '(
' → logprob: -21.25
    8. 'Ys' → logprob: -21.5
    9. '```' → logprob: -22.75
    10. ')' → logprob: -23.0

Token 194: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.3869765102863312
    2. '(' → logprob: -1.1369764804840088
    3. ' ys' → logprob: -9.26197624206543
    4. ')' → logprob: -11.51197624206543
    5. ' (' → logprob: -16.51197624206543
    6. '[' → logprob: -16.63697624206543
    7. 'hs' → logprob: -17.01197624206543
    8. '=' → logprob: -17.38697624206543
    9. '{' → logprob: -17.38697624206543
    10. 'ysi' → logprob: -17.63697624206543

Token 195: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.000004768371582
    4. '<|end|>' → logprob: -16.5000057220459
    5. ')`' → logprob: -17.1250057220459
    6. '`)' → logprob: -17.1250057220459
    7. '   ' → logprob: -17.2500057220459
    8. '),' → logprob: -17.3750057220459
    9. '       ' → logprob: -17.3750057220459
    10. '))' → logprob: -17.6250057220459

Token 196: '       ' (ID: 309)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.8906352519989014
    2. '       ' → logprob: -1.8906352519989014
    3. ' grid' → logprob: -1.8906352519989014
    4. '        
' → logprob: -2.7656352519989014
    5. '
' → logprob: -2.8906352519989014
    6. '```' → logprob: -2.8906352519989014
    7. 'visited' → logprob: -3.8906352519989014
    8. '   ' → logprob: -4.0156354904174805
    9. ' 
' → logprob: -4.3906354904174805
    10. '    
' → logprob: -4.3906354904174805

Token 197: ' #' (ID: 1069)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.07560092210769653
    2. 'field' → logprob: -3.8256008625030518
    3. 'covered' → logprob: -4.575601100921631
    4. ' grid' → logprob: -4.575601100921631
    5. 'visited' → logprob: -4.700601100921631
    6. '       ' → logprob: -5.075601100921631
    7. 'area' → logprob: -5.825601100921631
    8. 'board' → logprob: -5.950601100921631
    9. 'canvas' → logprob: -5.950601100921631
    10. '   ' → logprob: -6.575601100921631

Token 198: ' mark' (ID: 1983)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.1510925441980362
    2. 'covered' → logprob: -3.026092529296875
    3. ' grid' → logprob: -3.526092529296875
    4. 'field' → logprob: -4.526092529296875
    5. 'visited' → logprob: -4.526092529296875
    6. 'area' → logprob: -4.776092529296875
    7. ' covered' → logprob: -5.151092529296875
    8. 'board' → logprob: -5.151092529296875
    9. 'filled' → logprob: -5.651092529296875
    10. '   ' → logprob: -5.901092529296875

Token 199: ' grid' (ID: 10586)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9869633316993713
    2. 'visited' → logprob: -1.3619632720947266
    3. ' visited' → logprob: -2.1119632720947266
    4. ' grid' → logprob: -2.2369632720947266
    5. 'covered' → logprob: -3.4869632720947266
    6. 'grid' → logprob: -3.4869632720947266
    7. '=' → logprob: -4.611963272094727
    8. ' covered' → logprob: -4.611963272094727
    9. 'cells' → logprob: -4.861963272094727
    10. 'occupied' → logprob: -4.986963272094727

Token 200: ' cells' (ID: 11242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006777303759008646
    2. '=' → logprob: -5.381777286529541
    3. ' =
' → logprob: -7.381777286529541
    4. ':' → logprob: -7.631777286529541
    5. '[' → logprob: -7.756777286529541
    6. '   ' → logprob: -9.0067777633667
    7. '       ' → logprob: -9.2567777633667
    8. ',' → logprob: -9.6317777633667
    9. ' ' → logprob: -9.8817777633667
    10. '_' → logprob: -10.2567777633667

Token 201: ' covered' (ID: 13083)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3436664342880249
    2. '[' → logprob: -2.8436665534973145
    3. ' grid' → logprob: -3.3436665534973145
    4. '=' → logprob: -3.5936665534973145
    5. ':' → logprob: -3.9686665534973145
    6. '   ' → logprob: -4.2186665534973145
    7. '       ' → logprob: -4.3436665534973145
    8. ' visited' → logprob: -4.4686665534973145
    9. ' with' → logprob: -4.4686665534973145
    10. '[]' → logprob: -4.4686665534973145

Token 202: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3179752230644226
    2. '=' → logprob: -2.0679752826690674
    3. '   ' → logprob: -2.9429752826690674
    4. ' by' → logprob: -3.9429752826690674
    5. '[' → logprob: -4.067975044250488
    6. 'grid' → logprob: -4.442975044250488
    7. 'with' → logprob: -5.067975044250488
    8. ' with' → logprob: -5.067975044250488
    9. '=[[' → logprob: -5.567975044250488
    10. 'by' → logprob: -5.692975044250488

Token 203: ' any' (ID: 1062)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.18867093324661255
    2. ' rectangles' → logprob: -1.9386708736419678
    3. ' any' → logprob: -4.188671112060547
    4. ' rect' → logprob: -4.563671112060547
    5. ' at' → logprob: -6.688671112060547
    6. 'any' → logprob: -7.313671112060547
    7. ' each' → logprob: -8.438671112060547
    8. ' a' → logprob: -9.438671112060547
    9. 'each' → logprob: -10.063671112060547
    10. ' some' → logprob: -10.063671112060547

Token 204: ' rectangle' (ID: 45808)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.5673584938049316
    2. ' rect' → logprob: -0.9423584938049316
    3. ' rectangle' → logprob: -3.1923584938049316
    4. 'rectangle' → logprob: -6.192358493804932
    5. '	rect' → logprob: -9.942358016967773
    6. ' ' → logprob: -10.567358016967773
    7. '(rect' → logprob: -11.067358016967773
    8. ' rectangles' → logprob: -11.442358016967773
    9. 'rec' → logprob: -11.567358016967773
    10. '```' → logprob: -12.067358016967773

Token 205: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9321183562278748
    2. '       ' → logprob: -0.9321183562278748
    3. '        
' → logprob: -3.1821184158325195
    4. '   ' → logprob: -3.3071184158325195
    5. ' grid' → logprob: -3.4321184158325195
    6. 'grid' → logprob: -3.4321184158325195
    7. ' 
' → logprob: -4.3071184158325195
    8. '  
' → logprob: -4.5571184158325195
    9. '    
' → logprob: -4.6821184158325195
    10. '\n' → logprob: -5.0571184158325195

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09610184282064438
    2. '        
' → logprob: -4.096101760864258
    3. 'grid' → logprob: -4.221101760864258
    4. '   ' → logprob: -4.221101760864258
    5. ' grid' → logprob: -4.346101760864258
    6. '
' → logprob: -4.596101760864258
    7. ' covered' → logprob: -5.721101760864258
    8. '```' → logprob: -5.971101760864258
    9. 'covered' → logprob: -6.221101760864258
    10. '[' → logprob: -6.346101760864258

Token 207: ' #' (ID: 1069)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.7678844928741455
    2. ' grid' → logprob: -0.8928844928741455
    3. 'covered' → logprob: -2.3928844928741455
    4. ' covered' → logprob: -3.6428844928741455
    5. '   ' → logprob: -5.767884254455566
    6. ' coverage' → logprob: -6.767884254455566
    7. '       ' → logprob: -6.892884254455566
    8. 'coverage' → logprob: -7.142884254455566
    9. 'cover' → logprob: -7.267884254455566
    10. 'visited' → logprob: -7.392884254455566

Token 208: ' cells' (ID: 11242)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.44353681802749634
    2. 'covered' → logprob: -1.5685367584228516
    3. ' grid' → logprob: -2.1935367584228516
    4. ' covered' → logprob: -3.5685367584228516
    5. '       ' → logprob: -5.568536758422852
    6. 'coverage' → logprob: -6.193536758422852
    7. 'cover' → logprob: -6.943536758422852
    8. 'visited' → logprob: -7.068536758422852
    9. '   ' → logprob: -7.193536758422852
    10. 'cells' → logprob: -7.693536758422852

Token 209: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6705307364463806
    2. '_' → logprob: -0.7955307364463806
    3. '=' → logprob: -3.2955307960510254
    4. 'covered' → logprob: -10.170530319213867
    5. '_cover' → logprob: -10.170530319213867
    6. ' =
' → logprob: -11.170530319213867
    7. '_=' → logprob: -11.295530319213867
    8. ' ' → logprob: -11.295530319213867
    9. '=
' → logprob: -11.670530319213867
    10. '_are' → logprob: -12.170530319213867

Token 210: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4293859004974365
    2. 'to' → logprob: -1.0543859004974365
    3. '[]' → logprob: -8.554386138916016
    4. '_to' → logprob: -8.929386138916016
    5. '<|end|>' → logprob: -8.929386138916016
    6. '=' → logprob: -9.679386138916016
    7. '   ' → logprob: -10.054386138916016
    8. ' =' → logprob: -10.804386138916016
    9. '<|end|>' → logprob: -11.054386138916016
    10. '    ' → logprob: -11.304386138916016

Token 211: ' intervals' (ID: 49900)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.9083799719810486
    2. 'the' → logprob: -1.9083800315856934
    3. 'w' → logprob: -2.1583800315856934
    4. '(w' → logprob: -2.4083800315856934
    5. ' the' → logprob: -3.1583800315856934
    6. ' rectangles' → logprob: -3.4083800315856934
    7. '(' → logprob: -3.6583800315856934
    8. 'h' → logprob: -3.7833800315856934
    9. '[h' → logprob: -4.158380031585693
    10. ' intervals' → logprob: -4.158380031585693

Token 212: ' between' (ID: 2870)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.2919420003890991
    2. '<|end|>' → logprob: -1.2919420003890991
    3. '[' → logprob: -2.1669421195983887
    4. ' in' → logprob: -2.4169421195983887
    5. ' between' → logprob: -2.9169421195983887
    6. ',' → logprob: -3.4169421195983887
    7. ' ' → logprob: -3.5419421195983887
    8. '   ' → logprob: -3.6669421195983887
    9. ' for' → logprob: -4.041942119598389
    10. '[]' → logprob: -4.166942119598389

Token 213: ' coordinates' (ID: 27933)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.3093130886554718
    2. 'x' → logprob: -2.5593130588531494
    3. ' xs' → logprob: -2.8093130588531494
    4. 'adj' → logprob: -3.1843130588531494
    5. ' adjacent' → logprob: -3.5593130588531494
    6. 'compressed' → logprob: -4.0593132972717285
    7. 'coordinates' → logprob: -4.0593132972717285
    8. ' consecutive' → logprob: -4.6843132972717285
    9. ' coordinates' → logprob: -5.5593132972717285
    10. ' x' → logprob: -5.5593132972717285

Token 214: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26514673233032227
    2. '
' → logprob: -2.7651467323303223
    3. 'grid' → logprob: -3.1401467323303223
    4. ' grid' → logprob: -3.1401467323303223
    5. '        
' → logprob: -3.7651467323303223
    6. ' covered' → logprob: -4.640146732330322
    7. '   ' → logprob: -4.640146732330322
    8. ' coverage' → logprob: -4.640146732330322
    9. ' 
' → logprob: -5.140146732330322
    10. 'covered' → logprob: -5.265146732330322

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1583525836467743
    2. '   ' → logprob: -2.5333526134490967
    3. 'grid' → logprob: -3.7833526134490967
    4. ' grid' → logprob: -4.783352375030518
    5. '```' → logprob: -4.783352375030518
    6. '[' → logprob: -4.908352375030518
    7. '        
' → logprob: -5.408352375030518
    8. ' covered' → logprob: -6.033352375030518
    9. '\n' → logprob: -6.533352375030518
    10. '[
' → logprob: -6.783352375030518

Token 216: ' covered' (ID: 13083)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.6056283116340637
    2. 'grid' → logprob: -1.105628252029419
    3. '       ' → logprob: -2.730628252029419
    4. ' covered' → logprob: -3.980628252029419
    5. 'covered' (adapté à ' covered') → logprob: -4.105628490447998
    6. ' coverage' → logprob: -5.105628490447998
    7. 'visited' → logprob: -5.105628490447998
    8. ' visited' → logprob: -5.730628490447998
    9. 'coverage' → logprob: -6.230628490447998
    10. ' cells' → logprob: -6.730628490447998

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197115540504456
    2. '=' → logprob: -1.5019711256027222
    3. '[' → logprob: -10.376971244812012
    4. ' ' → logprob: -12.126971244812012
    5. '=[' → logprob: -12.626971244812012
    6. ' =[' → logprob: -13.751971244812012
    7. '=[[' → logprob: -15.001971244812012
    8. '[][]' → logprob: -15.626971244812012
    9. '   ' → logprob: -16.126970291137695
    10. '＝' → logprob: -16.501970291137695

Token 218: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.10059698671102524
    2. ' [[' → logprob: -2.3505969047546387
    3. '[' → logprob: -8.100597381591797
    4. ' [' → logprob: -9.350597381591797
    5. '[
' → logprob: -17.350597381591797
    6. 'set' → logprob: -17.725597381591797
    7. '   ' → logprob: -18.475597381591797
    8. '[['' → logprob: -18.600597381591797
    9. ' ' → logprob: -18.850597381591797
    10. '([[' → logprob: -19.475597381591797

Token 219: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.167648876318708e-05
    2. ' False' → logprob: -10.250041961669922
    3. '0' → logprob: -12.000041961669922
    4. '(False' → logprob: -18.375041961669922
    5. '   ' → logprob: -18.625041961669922
    6. '=False' → logprob: -21.375041961669922
    7. 'false' → logprob: -22.250041961669922
    8. 'F' → logprob: -23.250041961669922
    9. '       ' → logprob: -23.375041961669922
    10. '.False' → logprob: -23.375041961669922

Token 220: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4064405858516693
    2. 'for' → logprob: -1.2814406156539917
    3. ']' → logprob: -2.906440496444702
    4. '][' → logprob: -7.281440734863281
    5. ')' → logprob: -7.656440734863281
    6. ' ' → logprob: -9.156440734863281
    7. '[' → logprob: -9.281440734863281
    8. ' ]' → logprob: -9.406440734863281
    9. '   ' → logprob: -9.531440734863281
    10. ']*' → logprob: -9.531440734863281

Token 221: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.016213959082961082
    2. 'w' → logprob: -4.141213893890381
    3. '(h' → logprob: -8.891214370727539
    4. '(w' → logprob: -10.266214370727539
    5. ' h' → logprob: -12.641214370727539
    6. '   ' → logprob: -13.641214370727539
    7. '(' → logprob: -14.141214370727539
    8. '[h' → logprob: -14.516214370727539
    9. ' (' → logprob: -14.641214370727539
    10. '
' → logprob: -15.266214370727539

Token 222: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005236479919403791
    2. ' -' → logprob: -5.255236625671387
    3. ')' → logprob: -13.005236625671387
    4. '1' → logprob: -15.880236625671387
    5. '[' → logprob: -16.50523567199707
    6. ' ' → logprob: -16.63023567199707
    7. '   ' → logprob: -16.88023567199707
    8. '0' → logprob: -17.63023567199707
    9. ')-' → logprob: -18.75523567199707
    10. '–' → logprob: -19.00523567199707

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -21.125
    5. '
' → logprob: -21.25
    6. '2' → logprob: -21.625
    7. '<|end|>' → logprob: -22.0
    8. ')' → logprob: -22.125
    9. '  ' → logprob: -22.8125
    10. '۱' → logprob: -22.875

Token 224: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004396095173433423
    2. ' )' → logprob: -7.750439643859863
    3. ')]' → logprob: -12.750439643859863
    4. ')
' → logprob: -13.000439643859863
    5. ' for' → logprob: -13.500439643859863
    6. 'for' → logprob: -14.000439643859863
    7. ']' → logprob: -15.000439643859863
    8. '   ' → logprob: -15.000439643859863
    9. '))' → logprob: -15.375439643859863
    10. '       ' → logprob: -15.750439643859863

Token 225: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03617442399263382
    2. ' for' → logprob: -3.5361745357513428
    3. 'for' → logprob: -5.661174297332764
    4. ' )' → logprob: -6.036174297332764
    5. '   ' → logprob: -8.161174774169922
    6. '       ' → logprob: -8.911174774169922
    7. ']' → logprob: -9.786174774169922
    8. '           ' → logprob: -10.911174774169922
    9. ')]' → logprob: -11.286174774169922
    10. ' ' → logprob: -11.911174774169922

Token 226: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.13455772399902344
    2. '_' → logprob: -2.8845577239990234
    3. ' range' → logprob: -3.1345577239990234
    4. ' i' → logprob: -4.134557723999023
    5. ' in' → logprob: -4.634557723999023
    6. ' ' → logprob: -8.134557723999023
    7. '_range' → logprob: -8.384557723999023
    8. 'range' → logprob: -9.384557723999023
    9. 'i' → logprob: -10.009557723999023
    10. '_i' → logprob: -10.259557723999023

Token 227: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6918671727180481
    2. 'range' → logprob: -1.1918671131134033
    3. ' in' → logprob: -1.6918671131134033
    4. ' range' → logprob: -4.566867351531982
    5. '(range' → logprob: -6.816867351531982
    6. ' ' → logprob: -10.816866874694824
    7. 'i' → logprob: -11.816866874694824
    8. '[' → logprob: -12.691866874694824
    9. 'x' → logprob: -13.066866874694824
    10. ' xrange' → logprob: -13.066866874694824

Token 228: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015030752401798964
    2. ' range' → logprob: -6.501502990722656
    3. '(range' → logprob: -14.126502990722656
    4. ' ' → logprob: -18.376502990722656
    5. '	range' → logprob: -18.626502990722656
    6. 'x' → logprob: -19.001502990722656
    7. '   ' → logprob: -19.251502990722656
    8. 'ran' → logprob: -19.251502990722656
    9. '[' → logprob: -19.626502990722656
    10. '
' → logprob: -20.126502990722656

Token 229: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -14.000001907348633
    3. 'w' → logprob: -14.250001907348633
    4. ' (' → logprob: -15.625001907348633
    5. '((' → logprob: -17.250001907348633
    6. '(x' → logprob: -17.625001907348633
    7. '(wx' → logprob: -18.125001907348633
    8. ')(' → logprob: -19.375001907348633
    9. ')' → logprob: -19.875001907348633
    10. '[w' → logprob: -20.250001907348633

Token 230: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009442188893444836
    2. ' -' → logprob: -7.250944137573242
    3. ')]' → logprob: -8.500944137573242
    4. ')' → logprob: -10.625944137573242
    5. ')][' → logprob: -12.875944137573242
    6. '1' → logprob: -13.125944137573242
    7. '   ' → logprob: -14.125944137573242
    8. '[' → logprob: -15.000944137573242
    9. ')],' → logprob: -15.250944137573242
    10. ')-' → logprob: -15.250944137573242

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '2' → logprob: -16.750001907348633
    5. '```' → logprob: -16.875001907348633
    6. ')' → logprob: -17.125001907348633
    7. '１' → logprob: -18.875001907348633
    8. '
' → logprob: -18.937501907348633
    9. '۱' → logprob: -19.000001907348633
    10. '0' → logprob: -19.937501907348633

Token 232: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04860587790608406
    2. ')' → logprob: -3.0486059188842773
    3. ']' → logprob: -11.048605918884277
    4. ' )' → logprob: -14.173605918884277
    5. ')],' → logprob: -14.548605918884277
    6. ')])' → logprob: -14.673605918884277
    7. '))' → logprob: -15.048605918884277
    8. ')
' → logprob: -15.548605918884277
    9. ')}' → logprob: -15.673605918884277
    10. '),' → logprob: -16.29860496520996

Token 233: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03323747217655182
    2. '       ' → logprob: -3.7832374572753906
    3. ' for' → logprob: -4.658237457275391
    4. '   ' → logprob: -7.783237457275391
    5. '	for' → logprob: -11.15823745727539
    6. ')' → logprob: -11.65823745727539
    7. 'i' → logprob: -11.90823745727539
    8. '        
' → logprob: -13.03323745727539
    9. 'def' → logprob: -13.40823745727539
    10. '           ' → logprob: -13.65823745727539

Token 235: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.588193953037262
    2. ' l' → logprob: -0.838193953037262
    3. '(l' → logprob: -4.963193893432617
    4. ' (' → logprob: -5.588193893432617
    5. 'rect' → logprob: -6.963193893432617
    6. ' rect' → logprob: -8.338193893432617
    7. 'x' → logprob: -9.463193893432617
    8. ' ' → logprob: -9.588193893432617
    9. ' x' → logprob: -10.463193893432617
    10. '(' → logprob: -10.713193893432617

Token 236: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.2007883671903983e-05
    2. ' l' → logprob: -11.125021934509277
    3. 'x' → logprob: -13.250021934509277
    4. 'i' → logprob: -13.875021934509277
    5. 'lx' → logprob: -13.875021934509277
    6. ')' → logprob: -14.125021934509277
    7. '(l' → logprob: -14.250021934509277
    8. '   ' → logprob: -14.375021934509277
    9. 'rect' → logprob: -14.875021934509277
    10. ',l' → logprob: -15.375021934509277

Token 237: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.04936083033680916
    2. ',' → logprob: -3.049360752105713
    3. ',r' → logprob: -7.424360752105713
    4. ' ,' → logprob: -10.049361228942871
    5. ',i' → logprob: -10.299361228942871
    6. ',l' → logprob: -10.549361228942871
    7. ',x' → logprob: -10.924361228942871
    8. ',s' → logprob: -11.549361228942871
    9. ',y' → logprob: -12.174361228942871
    10. ',n' → logprob: -12.299361228942871

Token 238: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3568771183490753
    2. ',x' → logprob: -1.481877088546753
    3. ',r' → logprob: -3.481877088546753
    4. ' ,' → logprob: -3.981877088546753
    5. ',l' → logprob: -4.981877326965332
    6. '),' → logprob: -5.106877326965332
    7. ',i' → logprob: -5.981877326965332
    8. ',w' → logprob: -6.606877326965332
    9. ',y' → logprob: -6.731877326965332
    10. ',n' → logprob: -7.106877326965332

Token 239: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.5728166699409485
    2. ',' → logprob: -1.0728166103363037
    3. ',t' → logprob: -2.6978166103363037
    4. ',y' → logprob: -4.572816848754883
    5. ',i' → logprob: -4.947816848754883
    6. ',w' → logprob: -5.947816848754883
    7. ',k' → logprob: -6.947816848754883
    8. ',n' → logprob: -7.197816848754883
    9. ' ,' → logprob: -7.322816848754883
    10. ',x' → logprob: -7.322816848754883

Token 240: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005218160222284496
    2. ' )' → logprob: -8.250521659851074
    3. ' in' → logprob: -9.500521659851074
    4. 'in' → logprob: -9.625521659851074
    5. ',' → logprob: -10.250521659851074
    6. '),' → logprob: -10.375521659851074
    7. '):' → logprob: -10.875521659851074
    8. '   ' → logprob: -11.375521659851074
    9. '       ' → logprob: -11.625521659851074
    10. ',)' → logprob: -12.375521659851074

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16022931039333344
    2. 'in' → logprob: -1.9102293252944946
    3. ',' → logprob: -12.535229682922363
    4. '   ' → logprob: -15.410229682922363
    5. '	in' → logprob: -15.410229682922363
    6. 'In' → logprob: -15.535229682922363
    7. 'n' → logprob: -15.660229682922363
    8. ' ' → logprob: -15.660229682922363
    9. ',in' → logprob: -16.035228729248047
    10. ')' → logprob: -16.035228729248047

Token 242: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.0003370118502061814
    2. ' rect' → logprob: -8.000336647033691
    3. '(rect' → logprob: -13.875336647033691
    4. ' ' → logprob: -15.250336647033691
    5. '	rect' → logprob: -15.625336647033691
    6. '   ' → logprob: -16.500337600708008
    7. '
' → logprob: -17.375337600708008
    8. '.rect' → logprob: -17.375337600708008
    9. 'rec' → logprob: -18.000337600708008
    10. '  ' → logprob: -18.375337600708008

Token 243: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00016635251813568175
    2. 'rect' → logprob: -9.375165939331055
    3. '(rect' → logprob: -9.750165939331055
    4. '       ' → logprob: -11.125165939331055
    5. '[' → logprob: -13.375165939331055
    6. 'ects' → logprob: -13.375165939331055
    7. '[(' → logprob: -13.500165939331055
    8. '   ' → logprob: -14.000165939331055
    9. ')' → logprob: -14.125165939331055
    10. '(' → logprob: -14.750165939331055

Token 244: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2520250976085663
    2. ':
' → logprob: -1.5020251274108887
    3. '           ' → logprob: -9.75202465057373
    4. '):
' → logprob: -11.37702465057373
    5. '   ' → logprob: -11.75202465057373
    6. '       ' → logprob: -11.87702465057373
    7. ':
' → logprob: -12.37702465057373
    8. ',' → logprob: -12.62702465057373
    9. ' :
' → logprob: -13.50202465057373
    10. '):' → logprob: -14.12702465057373

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017601581290364265
    2. ' 
' → logprob: -5.517601490020752
    3. ' for' → logprob: -5.892601490020752
    4. '            
' → logprob: -6.142601490020752
    5. '<|end|>' → logprob: -6.142601490020752
    6. ',' → logprob: -6.892601490020752
    7. '        ' → logprob: -6.892601490020752
    8. '        
' → logprob: -6.892601490020752
    9. '  
' → logprob: -7.642601490020752
    10. ' ' → logprob: -7.642601490020752

Token 246: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09798935055732727
    2. 'for' → logprob: -2.597989320755005
    3. ' x' → logprob: -4.847989559173584
    4. '           ' → logprob: -5.222989559173584
    5. '   ' → logprob: -6.097989559173584
    6. 'x' (adapté à ' x') → logprob: -6.347989559173584
    7. ' i' → logprob: -7.722989559173584
    8. '    ' → logprob: -7.972989559173584
    9. ' xl' → logprob: -8.472989082336426
    10. ' l' → logprob: -8.597989082336426

Token 247: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.5108426213264465
    2. 'l' → logprob: -2.0108425617218018
    3. '_l' → logprob: -2.3858425617218018
    4. 'start' → logprob: -3.0108425617218018
    5. 's' → logprob: -4.135842800140381
    6. '_id' → logprob: -4.260842800140381
    7. 'i' → logprob: -4.385842800140381
    8. '=' → logprob: -4.635842800140381
    9. 'for' → logprob: -4.635842800140381
    10. '1' → logprob: -4.635842800140381

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20353004336357117
    2. ' =' → logprob: -1.7035300731658936
    3. '=x' → logprob: -7.0785298347473145
    4. '[x' → logprob: -7.8285298347473145
    5. 'x' → logprob: -8.328530311584473
    6. '=
' → logprob: -8.578530311584473
    7. ',' → logprob: -8.953530311584473
    8. '[' → logprob: -9.203530311584473
    9. ' =
' → logprob: -9.578530311584473
    10. ']' → logprob: -10.203530311584473

Token 249: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2014133334159851
    2. ' x' → logprob: -1.7014133930206299
    3. '(x' → logprob: -18.201414108276367
    4. '	x' → logprob: -18.576414108276367
    5. ')x' → logprob: -18.826414108276367
    6. '   ' → logprob: -19.951414108276367
    7. '[x' → logprob: -20.576414108276367
    8. '=x' → logprob: -20.701414108276367
    9. '{x' → logprob: -20.826414108276367
    10. ' ' → logprob: -21.076414108276367

Token 250: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.546478935983032e-05
    2. '[l' → logprob: -11.875025749206543
    3. 'id' → logprob: -12.125025749206543
    4. '[x' → logprob: -12.250025749206543
    5. '[' → logprob: -13.375025749206543
    6. '```' → logprob: -13.625025749206543
    7. '[_' → logprob: -14.000025749206543
    8. '{' → logprob: -14.250025749206543
    9. '_i' → logprob: -14.375025749206543
    10. '   ' → logprob: -14.750025749206543

Token 251: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.1007412001490593
    2. '(l' → logprob: -2.350741147994995
    3. '[' → logprob: -7.725741386413574
    4. 'l' → logprob: -9.350741386413574
    5. '[
' → logprob: -12.725741386413574
    6. '(' → logprob: -13.600741386413574
    7. ' (' → logprob: -14.475741386413574
    8. ' l' → logprob: -15.100741386413574
    9. '[(' → logprob: -15.100741386413574
    10. ' [' → logprob: -15.350741386413574

Token 252: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2819616496562958
    2. ']
' → logprob: -1.4069616794586182
    3. '+' → logprob: -8.531961441040039
    4. ']+' → logprob: -8.781961441040039
    5. ')' → logprob: -9.031961441040039
    6. 'x' → logprob: -9.281961441040039
    7. ' ]' → logprob: -9.531961441040039
    8. ')
' → logprob: -10.406961441040039
    9. ' ]
' → logprob: -10.781961441040039
    10. ']
' → logprob: -10.781961441040039

Token 253: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.33528652787208557
    2. ' x' → logprob: -1.4602864980697632
    3. ' ' → logprob: -3.0852866172790527
    4. ' y' → logprob: -6.085286617279053
    5. 'y' → logprob: -6.335286617279053
    6. '<|end|>' → logprob: -6.585286617279053
    7. ' 
' → logprob: -7.210286617279053
    8. ')' → logprob: -8.710286140441895
    9. '`' → logprob: -9.710286140441895
    10. 's' → logprob: -9.710286140441895

Token 255: '_end' (ID: 13707)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0010469816625118256
    2. '_' → logprob: -8.126047134399414
    3. '_end' → logprob: -8.501047134399414
    4. '_stop' → logprob: -8.626047134399414
    5. '_finish' → logprob: -9.001047134399414
    6. ' _' → logprob: -9.876047134399414
    7. '_next' → logprob: -10.126047134399414
    8. '_skip' → logprob: -10.251047134399414
    9. '_continue' → logprob: -11.126047134399414
    10. '[' → logprob: -11.376047134399414

Token 256: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16201047599315643
    2. ' +' → logprob: -1.9120104312896729
    3. '=' → logprob: -6.912010669708252
    4. '<|end|>' → logprob: -8.037010192871094
    5. ' =' → logprob: -8.287010192871094
    6. '[' → logprob: -9.162010192871094
    7. '[x' → logprob: -10.662010192871094
    8. ')' → logprob: -11.037010192871094
    9. '+x' → logprob: -11.662010192871094
    10. ' +=' → logprob: -11.662010192871094

Token 257: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47407716512680054
    2. ' x' → logprob: -0.9740771651268005
    3. '(x' → logprob: -15.849077224731445
    4. '{x' → logprob: -17.224077224731445
    5. '	x' → logprob: -17.474077224731445
    6. ')x' → logprob: -18.724077224731445
    7. '   ' → logprob: -19.224077224731445
    8. '[x' → logprob: -19.474077224731445
    9. '```' → logprob: -20.224077224731445
    10. ' ' → logprob: -20.349077224731445

Token 258: '_id' (ID: 1537)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.4318463206291199
    2. '_id' → logprob: -1.0568463802337646
    3. '{' → logprob: -6.3068461418151855
    4. 'r' → logprob: -7.8068461418151855
    5. '[' → logprob: -8.306846618652344
    6. '{x' → logprob: -8.806846618652344
    7. '[
' → logprob: -8.931846618652344
    8. '[x' → logprob: -9.181846618652344
    9. ':r' → logprob: -9.806846618652344
    10. ' r' → logprob: -9.931846618652344

Token 259: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0021896373946219683
    2. 'r' → logprob: -6.127189636230469
    3. '[' → logprob: -13.627189636230469
    4. '[
' → logprob: -13.877189636230469
    5. ' r' → logprob: -14.252189636230469
    6. '(r' → logprob: -14.502189636230469
    7. '	r' → logprob: -15.127189636230469
    8. '   ' → logprob: -15.377189636230469
    9. ' [' → logprob: -15.627189636230469
    10. '{' → logprob: -16.12718963623047

Token 260: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11812130361795425
    2. ' +' → logprob: -2.618121385574341
    3. ']' → logprob: -3.618121385574341
    4. ']+' → logprob: -4.743121147155762
    5. ')' → logprob: -6.243121147155762
    6. ')+' → logprob: -7.868121147155762
    7. '<|end|>' → logprob: -8.368121147155762
    8. '+
' → logprob: -9.493121147155762
    9. '           ' → logprob: -9.868121147155762
    10. ' ]' → logprob: -9.993121147155762

Token 261: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' y' (ID: 342)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19866757094860077
    2. 'for' → logprob: -2.198667526245117
    3. 'y' (adapté à ' y') → logprob: -3.573667526245117
    4. '       ' → logprob: -3.573667526245117
    5. ' y' → logprob: -4.698667526245117
    6. '           ' → logprob: -5.823667526245117
    7. '   ' → logprob: -7.073667526245117
    8. '```' → logprob: -8.948667526245117
    9. '	for' → logprob: -10.823667526245117
    10. '
' → logprob: -11.698667526245117

Token 263: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0002354832977289334
    2. 'start' → logprob: -9.375235557556152
    3. '_end' → logprob: -9.625235557556152
    4. '_' → logprob: -10.125235557556152
    5. '_id' → logprob: -11.375235557556152
    6. ' =' → logprob: -11.750235557556152
    7. 'Start' → logprob: -12.125235557556152
    8. '_START' → logprob: -12.250235557556152
    9. '_s' → logprob: -12.875235557556152
    10. '=' → logprob: -12.875235557556152

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197138875722885
    2. ' =' → logprob: -2.811971426010132
    3. '=
' → logprob: -12.686971664428711
    4. ' =
' → logprob: -14.936971664428711
    5. '=y' → logprob: -15.436971664428711
    6. 'y' → logprob: -16.68697166442871
    7. '=

' → logprob: -16.93697166442871
    8. 's' → logprob: -17.56197166442871
    9. '=s' → logprob: -17.93697166442871
    10. ' y' → logprob: -18.68697166442871

Token 265: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019288709154352546
    2. ' y' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.62692928314209
    4. 'ys' → logprob: -16.876928329467773
    5. '[y' → logprob: -17.501928329467773
    6. '	y' → logprob: -17.626928329467773
    7. 'x' → logprob: -18.876928329467773
    8. ' ' → logprob: -19.001928329467773
    9. 'min' → logprob: -19.126928329467773
    10. '       ' → logprob: -19.751928329467773

Token 266: '_id' (ID: 1537)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.05800213664770126
    2. 'y' → logprob: -3.808002233505249
    3. 'b' → logprob: -4.55800199508667
    4. '[b' → logprob: -4.68300199508667
    5. '_id' → logprob: -4.93300199508667
    6. '[' → logprob: -5.80800199508667
    7. 's' → logprob: -6.05800199508667
    8. '[t' → logprob: -7.55800199508667
    9. '```' → logprob: -7.55800199508667
    10. 't' → logprob: -8.558002471923828

Token 267: '[b' (ID: 40800)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0010872321436181664
    2. '[b' → logprob: -7.126087188720703
    3. 't' → logprob: -8.251087188720703
    4. 'b' → logprob: -11.626087188720703
    5. '[' → logprob: -12.626087188720703
    6. '   ' → logprob: -13.001087188720703
    7. ' [' → logprob: -13.126087188720703
    8. '(t' → logprob: -13.251087188720703
    9. '[y' → logprob: -13.751087188720703
    10. '	t' → logprob: -14.001087188720703

Token 268: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03706175088882446
    2. '+' → logprob: -4.03706169128418
    3. ']
' → logprob: -4.53706169128418
    4. ']+' → logprob: -5.16206169128418
    5. ' +' → logprob: -6.66206169128418
    6. '<|end|>' → logprob: -7.66206169128418
    7. ')' → logprob: -8.78706169128418
    8. ' ]' → logprob: -8.91206169128418
    9. '   ' → logprob: -9.41206169128418
    10. ')]' → logprob: -10.16206169128418

Token 269: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.43110576272010803
    2. '           ' → logprob: -1.5561057329177856
    3. 'y' → logprob: -2.181105852127075
    4. '	y' → logprob: -4.431105613708496
    5. '       ' → logprob: -4.556105613708496
    6. '<|end|>' → logprob: -7.181105613708496
    7. '+' → logprob: -7.431105613708496
    8. '   ' → logprob: -7.806105613708496
    9. ',y' → logprob: -8.181105613708496
    10. '<|end|>' → logprob: -8.556105613708496

Token 270: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.1269489973783493
    2. ' y' → logprob: -2.1269490718841553
    3. '       ' → logprob: -11.376949310302734
    4. '           ' → logprob: -12.501949310302734
    5. '	y' → logprob: -12.626949310302734
    6. '   ' → logprob: -14.376949310302734
    7. '+' → logprob: -14.876949310302734
    8. ''y' → logprob: -15.376949310302734
    9. '(y' → logprob: -15.376949310302734
    10. ')y' → logprob: -15.626949310302734

Token 271: '_end' (ID: 13707)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.23006100952625275
    2. '_id' → logprob: -2.2300610542297363
    3. '_end' → logprob: -2.3550610542297363
    4. '+' → logprob: -7.105061054229736
    5. '=' → logprob: -7.355061054229736
    6. '_' → logprob: -7.605061054229736
    7. '+=' → logprob: -8.230060577392578
    8. ' =' → logprob: -8.480060577392578
    9. '_finish' → logprob: -9.230060577392578
    10. '=_' → logprob: -9.355060577392578

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016036950051784515
    2. '=' → logprob: -4.1410369873046875
    3. ' =
' → logprob: -14.016036987304688
    4. ' ' → logprob: -14.266036987304688
    5. '[' → logprob: -14.766036987304688
    6. '=y' → logprob: -15.266036987304688
    7. '<|end|>' → logprob: -16.016036987304688
    8. '[y' → logprob: -16.391036987304688
    9. ' +=' → logprob: -16.516036987304688
    10. ' =
' → logprob: -16.766036987304688

Token 273: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759406089782715
    2. 'y' → logprob: -0.8259406089782715
    3. '[y' → logprob: -14.95094108581543
    4. '	y' → logprob: -15.07594108581543
    5. '   ' → logprob: -15.57594108581543
    6. '{' → logprob: -16.20094108581543
    7. '           ' → logprob: -16.82594108581543
    8. '(y' → logprob: -16.95094108581543
    9. 'ys' → logprob: -17.07594108581543
    10. '       ' → logprob: -17.20094108581543

Token 274: '_id' (ID: 1537)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0498054139316082
    2. '[y' → logprob: -3.2998054027557373
    3. 't' → logprob: -4.799805641174316
    4. 'y' → logprob: -5.924805641174316
    5. '[' → logprob: -8.674805641174316
    6. '_id' → logprob: -8.799805641174316
    7. '[s' → logprob: -9.549805641174316
    8. '[b' → logprob: -9.549805641174316
    9. '```' → logprob: -9.674805641174316
    10. ' t' → logprob: -9.799805641174316

Token 275: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.004960850812494755
    2. '[y' → logprob: -5.379961013793945
    3. 't' → logprob: -8.129961013793945
    4. '[' → logprob: -10.629961013793945
    5. '   ' → logprob: -12.754961013793945
    6. 'y' → logprob: -12.879961013793945
    7. '=t' → logprob: -13.004961013793945
    8. '
' → logprob: -13.129961013793945
    9. '	t' → logprob: -13.504961013793945
    10. ' [' → logprob: -13.754961013793945

Token 276: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2988753020763397
    2. '+' → logprob: -1.548875331878662
    3. ' +' → logprob: -4.423875331878662
    4. ']+' → logprob: -4.548875331878662
    5. '           ' → logprob: -4.673875331878662
    6. ')' → logprob: -5.423875331878662
    7. '<|end|>' → logprob: -5.923875331878662
    8. '       ' → logprob: -6.423875331878662
    9. ')]' → logprob: -6.423875331878662
    10. ' ]' → logprob: -7.548875331878662

Token 277: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38911837339401245
    2. ' for' → logprob: -1.8891184329986572
    3. '<|end|>' → logprob: -2.2641184329986572
    4. '           ' → logprob: -3.8891184329986572
    5. '
' → logprob: -4.014118194580078
    6. '```' → logprob: -5.264118194580078
    7. 'for' → logprob: -5.389118194580078
    8. '   ' → logprob: -5.639118194580078
    9. '        
' → logprob: -5.639118194580078
    10. '	for' → logprob: -5.889118194580078

Token 278: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19607175886631012
    2. ' for' → logprob: -1.821071743965149
    3. 'for' (adapté à ' for') → logprob: -4.196071624755859
    4. '       ' → logprob: -6.946071624755859
    5. '   ' → logprob: -9.19607162475586
    6. '	for' → logprob: -10.69607162475586
    7. '	       ' → logprob: -10.94607162475586
    8. '```' → logprob: -11.07107162475586
    9. '	   ' → logprob: -12.69607162475586
    10. '
' → logprob: -12.82107162475586

Token 279: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00027730545843951404
    2. ' x' → logprob: -8.250277519226074
    3. 'xi' → logprob: -11.375277519226074
    4. 'i' → logprob: -12.625277519226074
    5. '_x' → logprob: -14.375277519226074
    6. '	x' → logprob: -15.250277519226074
    7. 'xx' → logprob: -15.625277519226074
    8. ' xi' → logprob: -17.250276565551758
    9. '   ' → logprob: -17.625276565551758
    10. '```' → logprob: -17.625276565551758

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011072585359215736
    2. 'in' → logprob: -4.511072635650635
    3. ' ' → logprob: -11.136072158813477
    4. 'x' → logprob: -12.386072158813477
    5. '=' → logprob: -13.386072158813477
    6. ' x' → logprob: -14.136072158813477
    7. '	in' → logprob: -14.511072158813477
    8. '```' → logprob: -14.636072158813477
    9. ' =' → logprob: -14.886072158813477
    10. '_' → logprob: -14.886072158813477

Token 281: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023285197094082832
    2. ' range' → logprob: -3.773285150527954
    3. 'x' → logprob: -10.148284912109375
    4. '(range' → logprob: -15.523284912109375
    5. ' xrange' → logprob: -15.773284912109375
    6. ' x' → logprob: -16.273284912109375
    7. ' ' → logprob: -17.023284912109375
    8. '	range' → logprob: -17.273284912109375
    9. '   ' → logprob: -18.398284912109375
    10. ' in' → logprob: -19.273284912109375

Token 282: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04075178876519203
    2. ' x' → logprob: -3.2907516956329346
    3. '(x' → logprob: -5.915751934051514
    4. '	x' → logprob: -11.790751457214355
    5. ')x' → logprob: -14.290751457214355
    6. '=x' → logprob: -14.665751457214355
    7. '[x' → logprob: -14.790751457214355
    8. ' (' → logprob: -15.040751457214355
    9. ',x' → logprob: -15.290751457214355
    10. '"x' → logprob: -16.165752410888672

Token 283: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.7432603272027336e-06
    2. 'start' → logprob: -14.375001907348633
    3. 'Start' → logprob: -14.625001907348633
    4. '_START' → logprob: -14.875001907348633
    5. '[start' → logprob: -15.750001907348633
    6. '_end' → logprob: -16.625001907348633
    7. '_Start' → logprob: -17.250001907348633
    8. ')' → logprob: -17.750001907348633
    9. ')_' → logprob: -18.125001907348633
    10. '_' → logprob: -18.125001907348633

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10277803987264633
    2. ' ,' → logprob: -2.3527779579162598
    3. ',i' → logprob: -6.72777795791626
    4. ',x' → logprob: -6.97777795791626
    5. '+' → logprob: -7.97777795791626
    6. ',
' → logprob: -10.602778434753418
    7. ' +' → logprob: -11.102778434753418
    8. ',y' → logprob: -11.352778434753418
    9. ',len' → logprob: -11.477778434753418
    10. ' ,
' → logprob: -12.227778434753418

Token 285: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024756586644798517
    2. ' x' → logprob: -6.002475738525391
    3. '	x' → logprob: -18.00247573852539
    4. '(x' → logprob: -18.62747573852539
    5. ')x' → logprob: -19.12747573852539
    6. '   ' → logprob: -19.12747573852539
    7. '{x' → logprob: -19.87747573852539
    8. ' ' → logprob: -20.25247573852539
    9. '<x' → logprob: -20.37747573852539
    10. '
' → logprob: -20.37747573852539

Token 286: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00017863049288280308
    2. 'end' → logprob: -8.750178337097168
    3. '+' → logprob: -11.875178337097168
    4. 'End' → logprob: -12.250178337097168
    5. '_start' → logprob: -12.250178337097168
    6. '_END' → logprob: -13.500178337097168
    7. 'END' → logprob: -14.500178337097168
    8. '_x' → logprob: -14.875178337097168
    9. 'x' → logprob: -15.000178337097168
    10. ':end' → logprob: -15.250178337097168

Token 287: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14107385277748108
    2. '):
' → logprob: -2.3910739421844482
    3. '+' → logprob: -3.2660739421844482
    4. ')' → logprob: -7.641073703765869
    5. ' +' → logprob: -7.641073703765869
    6. ':' → logprob: -8.016074180603027
    7. '<|end|>' → logprob: -8.391074180603027
    8. ' ):' → logprob: -9.016074180603027
    9. '       ' → logprob: -9.641074180603027
    10. '   ' → logprob: -10.266074180603027

Token 288: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20368750393390656
    2. ' for' → logprob: -2.3286874294281006
    3. '           ' → logprob: -2.9536874294281006
    4. ' covered' → logprob: -3.8286874294281006
    5. '            ' → logprob: -5.07868766784668
    6. '<|end|>' → logprob: -5.57868766784668
    7. 'covered' → logprob: -7.32868766784668
    8. '                ' → logprob: -7.45368766784668
    9. 'for' → logprob: -7.95368766784668
    10. ' ' → logprob: -8.32868766784668

Token 289: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.024090254679322243
    2. 'for' (adapté à ' for') → logprob: -3.77409029006958
    3. '           ' → logprob: -8.149089813232422
    4. '               ' → logprob: -8.649089813232422
    5. '	for' → logprob: -8.774089813232422
    6. '       ' → logprob: -9.149089813232422
    7. '```' → logprob: -10.149089813232422
    8. '                   ' → logprob: -10.649089813232422
    9. ' ' → logprob: -11.149089813232422
    10. '                ' → logprob: -11.274089813232422

Token 290: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12692958116531372
    2. ' j' → logprob: -2.126929521560669
    3. '	j' → logprob: -13.87692928314209
    4. '    ' → logprob: -15.37692928314209
    5. '   ' → logprob: -15.62692928314209
    6. '_j' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.126930236816406
    8. '           ' → logprob: -17.251930236816406
    9. '```' → logprob: -17.251930236816406
    10. '$j' → logprob: -17.376930236816406

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018653334118425846
    2. 'in' → logprob: -6.376865386962891
    3. '<|end|>' → logprob: -9.00186538696289
    4. '                ' → logprob: -11.25186538696289
    5. ' ' → logprob: -11.37686538696289
    6. '<|end|>' → logprob: -12.50186538696289
    7. '=' → logprob: -12.75186538696289
    8. '               ' → logprob: -13.37686538696289
    9. ' =' → logprob: -13.75186538696289
    10. '                        ' → logprob: -14.12686538696289

Token 292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07892262190580368
    2. ' range' → logprob: -2.5789225101470947
    3. '(range' → logprob: -10.328922271728516
    4. 'y' → logprob: -16.828922271728516
    5. '(y' → logprob: -17.953922271728516
    6. '	range' → logprob: -18.078922271728516
    7. 'Range' → logprob: -18.953922271728516
    8. ' y' → logprob: -18.953922271728516
    9. '_range' → logprob: -18.953922271728516
    10. '.range' → logprob: -19.828922271728516

Token 293: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0003045994380954653
    2. 'y' → logprob: -8.250304222106934
    3. ' y' → logprob: -10.500304222106934
    4. '(' → logprob: -11.125304222106934
    5. ' (' → logprob: -14.375304222106934
    6. 'range' → logprob: -15.750304222106934
    7. '           ' → logprob: -16.87530517578125
    8. '(j' → logprob: -16.87530517578125
    9. '	y' → logprob: -17.37530517578125
    10. 'Y' → logprob: -17.62530517578125

Token 294: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -7.374227425316349e-05
    2. 'start' → logprob: -10.000073432922363
    3. '_end' → logprob: -10.625073432922363
    4. 'Start' → logprob: -12.625073432922363
    5. '_START' → logprob: -14.750073432922363
    6. '[start' → logprob: -15.875073432922363
    7. '+' → logprob: -16.75007438659668
    8. '-start' → logprob: -17.00007438659668
    9. 's' → logprob: -17.62507438659668
    10. ' start' → logprob: -17.87507438659668

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03761724382638931
    2. '+' → logprob: -3.4126172065734863
    3. ' ,' → logprob: -6.037617206573486
    4. ' +' → logprob: -6.662617206573486
    5. ',j' → logprob: -8.912617683410645
    6. '+,' → logprob: -9.287617683410645
    7. '               ' → logprob: -11.162617683410645
    8. '           ' → logprob: -11.162617683410645
    9. '<|end|>' → logprob: -11.662617683410645
    10. '                   ' → logprob: -12.537617683410645

Token 296: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014164102263748646
    2. ' y' → logprob: -4.264163970947266
    3. '	y' → logprob: -15.139163970947266
    4. '   ' → logprob: -15.764163970947266
    5. '           ' → logprob: -16.014163970947266
    6. ' ' → logprob: -17.264163970947266
    7. '       ' → logprob: -17.389163970947266
    8. ' ' → logprob: -17.764163970947266
    9. 'yj' → logprob: -17.889163970947266
    10. '    ' → logprob: -18.014163970947266

Token 297: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.005769992247223854
    2. 'end' → logprob: -5.255770206451416
    3. '+' → logprob: -8.380769729614258
    4. '_start' → logprob: -8.880769729614258
    5. 'End' → logprob: -9.255769729614258
    6. 'END' → logprob: -10.630769729614258
    7. 'j' → logprob: -11.505769729614258
    8. '_END' → logprob: -11.880769729614258
    9. 's' → logprob: -12.130769729614258
    10. '```' → logprob: -12.380769729614258

Token 298: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3015841245651245
    2. '):
' → logprob: -1.4265841245651245
    3. '+' → logprob: -4.051584243774414
    4. ':' → logprob: -6.676584243774414
    5. '                   ' → logprob: -7.301584243774414
    6. '               ' → logprob: -8.051584243774414
    7. ' ):' → logprob: -9.176584243774414
    8. ':
' → logprob: -9.301584243774414
    9. '           ' → logprob: -9.301584243774414
    10. ' +' → logprob: -10.301584243774414

Token 299: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03574616089463234
    2. ' covered' → logprob: -3.4107460975646973
    3. 'covered' → logprob: -6.660746097564697
    4. '                       ' → logprob: -7.660746097564697
    5. '               ' → logprob: -8.285746574401855
    6. '                    
' → logprob: -10.785746574401855
    7. '           ' → logprob: -11.160746574401855
    8. '                           ' → logprob: -11.410746574401855
    9. '```' → logprob: -11.535746574401855
    10. 'Covered' → logprob: -11.660746574401855

Token 300: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' (adapté à ' covered') → logprob: -0.31500890851020813
    2. ' covered' → logprob: -1.3150088787078857
    3. '                   ' → logprob: -7.065009117126465
    4. '                       ' → logprob: -7.065009117126465
    5. '               ' → logprob: -10.815009117126465
    6. '   ' → logprob: -12.940009117126465
    7. 'coverage' → logprob: -12.940009117126465
    8. '```' → logprob: -12.940009117126465
    9. '-covered' → logprob: -13.190009117126465
    10. 'cover' → logprob: -13.440009117126465

Token 301: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -12.625008583068848
    3. '][' → logprob: -13.000008583068848
    4. ' [' → logprob: -13.500008583068848
    5. '                   ' → logprob: -14.875008583068848
    6. '```' → logprob: -15.125008583068848
    7. '[j' → logprob: -15.250008583068848
    8. '[x' → logprob: -15.625008583068848
    9. '[I' → logprob: -15.750008583068848
    10. '\[' → logprob: -16.62500762939453

Token 302: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07142016291618347
    2. '[i' → logprob: -2.696420192718506
    3. '[j' → logprob: -6.696420192718506
    4. ']' → logprob: -8.946419715881348
    5. ' ][' → logprob: -9.446419715881348
    6. '[' → logprob: -11.071419715881348
    7. '"][' → logprob: -12.321419715881348
    8. ']=' → logprob: -12.446419715881348
    9. 'True' → logprob: -13.196419715881348
    10. ']][' → logprob: -13.196419715881348

Token 303: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.696889623621246e-06
    2. ' j' → logprob: -12.87500286102295
    3. '	j' → logprob: -18.500001907348633
    4. '[j' → logprob: -19.375001907348633
    5. '<|end|>' → logprob: -19.625001907348633
    6. '```' → logprob: -19.750001907348633
    7. ':j' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.250001907348633
    9. '
' → logprob: -20.250001907348633
    10. '$j' → logprob: -20.875001907348633

Token 304: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0687551274895668
    2. '=' → logprob: -2.8187551498413086
    3. ' =' → logprob: -5.693755149841309
    4. ']=' → logprob: -5.693755149841309
    5. ' ]' → logprob: -11.443755149841309
    6. ')' → logprob: -11.443755149841309
    7. '=True' → logprob: -11.693755149841309
    8. '[' → logprob: -15.193755149841309
    9. ')=' → logprob: -16.068754196166992
    10. '                   ' → logprob: -16.193754196166992

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615042082965374
    2. ' =' → logprob: -4.758615016937256
    3. '=True' → logprob: -14.633615493774414
    4. ']' → logprob: -16.758615493774414
    5. ']=' → logprob: -17.133615493774414
    6. ')' → logprob: -18.133615493774414
    7. ' |=' → logprob: -18.258615493774414
    8. '[' → logprob: -18.508615493774414
    9. ')=' → logprob: -19.633615493774414
    10. '=False' → logprob: -20.383615493774414

Token 306: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.836499985889532e-05
    2. ' True' → logprob: -9.7500581741333
    3. '(True' → logprob: -20.000059127807617
    4. '=True' → logprob: -21.000059127807617
    5. 'true' → logprob: -22.250059127807617
    6. '   ' → logprob: -22.750059127807617
    7. 'False' → logprob: -24.125059127807617
    8. '1' → logprob: -24.750059127807617
    9. 'TRUE' → logprob: -24.875059127807617
    10. '.True' → logprob: -25.000059127807617

Token 307: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42984622716903687
    2. '<|end|>' → logprob: -1.0548462867736816
    3. '<|end|>' → logprob: -7.304846286773682
    4. '

' → logprob: -8.429845809936523
    5. '\n' → logprob: -9.554845809936523
    6. '       ' → logprob: -9.804845809936523
    7. '    
' → logprob: -10.304845809936523
    8. '  
' → logprob: -10.679845809936523
    9. '
' → logprob: -11.179845809936523
    10. '        
' → logprob: -11.304845809936523

Token 308: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0098042488098145
    2. 'from' → logprob: -1.7598042488098145
    3. 'import' → logprob: -2.5098042488098145
    4. 'def' → logprob: -2.7598042488098145
    5. 'dp' → logprob: -3.0098042488098145
    6. '       ' → logprob: -3.1348042488098145
    7. 'total' → logprob: -3.1348042488098145
    8. 'area' → logprob: -3.2598042488098145
    9. 'areas' → logprob: -3.7598042488098145
    10. 'per' → logprob: -4.1348042488098145

Token 310: ' use' (ID: 1199)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5848390460014343
    2. 'from' → logprob: -1.334839105606079
    3. 'import' → logprob: -2.584839105606079
    4. 'def' → logprob: -3.584839105606079
    5. 'dx' → logprob: -3.709839105606079
    6. 'dp' → logprob: -4.7098388671875
    7. 'area' → logprob: -4.7098388671875
    8. 'ans' → logprob: -4.9598388671875
    9. 'dire' → logprob: -4.9598388671875
    10. 'areas' → logprob: -5.7098388671875

Token 311: ' flood' (ID: 23390)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2163947969675064
    2. 'visited' → logprob: -2.0913949012756348
    3. ' from' → logprob: -3.5913949012756348
    4. 'dfs' → logprob: -4.091394901275635
    5. 'stack' → logprob: -4.966394901275635
    6. ' visited' → logprob: -5.091394901275635
    7. 'def' → logprob: -5.466394901275635
    8. 'import' → logprob: -5.591394901275635
    9. 'dx' → logprob: -6.716394901275635
    10. 'd' → logprob: -7.091394901275635

Token 312: ' fill' (ID: 6954)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -5.7292167184641585e-05
    2. ' fill' → logprob: -10.250057220458984
    3. '-fill' → logprob: -11.250057220458984
    4. '_fill' → logprob: -11.750057220458984
    5. 'Fill' → logprob: -14.500057220458984
    6. 'fills' → logprob: -15.375057220458984
    7. 'f' → logprob: -15.875057220458984
    8. '	fill' → logprob: -16.750057220458984
    9. '.fill' → logprob: -16.875057220458984
    10. '```' → logprob: -17.125057220458984

Token 313: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23587407171726227
    2. 'visited' → logprob: -1.735874056816101
    3. ' visited' → logprob: -3.6108741760253906
    4. '
' → logprob: -6.110874176025391
    5. 'from' → logprob: -6.360874176025391
    6. '        
' → logprob: -7.110874176025391
    7. 'import' → logprob: -7.235874176025391
    8. ' from' → logprob: -7.735874176025391
    9. ' to' → logprob: -8.23587417602539
    10. 'def' → logprob: -8.48587417602539

Token 314: ' find' (ID: 1646)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6963477730751038
    2. 'from' → logprob: -1.446347713470459
    3. 'find' → logprob: -2.446347713470459
    4. 'import' → logprob: -2.696347713470459
    5. ' find' → logprob: -3.321347713470459
    6. 'def' → logprob: -3.821347713470459
    7. 'visited' → logprob: -4.321347713470459
    8. 'count' → logprob: -4.446347713470459
    9. '        
' → logprob: -5.196347713470459
    10. '       ' → logprob: -5.446347713470459

Token 315: ' number' (ID: 2086)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connected' → logprob: -1.502675175666809
    2. 'areas' → logprob: -2.1276750564575195
    3. 'def' → logprob: -2.2526750564575195
    4. ' connected' → logprob: -2.5026750564575195
    5. 'regions' → logprob: -2.7526750564575195
    6. 'the' → logprob: -2.7526750564575195
    7. 'number' → logprob: -3.0026750564575195
    8. 'components' → logprob: -3.0026750564575195
    9. ' the' → logprob: -3.0026750564575195
    10. ' areas' → logprob: -3.6276750564575195

Token 316: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5086511969566345
    2. 'of' → logprob: -1.2586512565612793
    3. '       ' → logprob: -2.6336512565612793
    4. '_of' → logprob: -3.8836512565612793
    5. '_' → logprob: -4.758651256561279
    6. '   ' → logprob: -5.508651256561279
    7. '<|end|>' → logprob: -5.633651256561279
    8. '(' → logprob: -6.883651256561279
    9. '        ' → logprob: -7.133651256561279
    10. '    ' → logprob: -7.508651256561279

Token 317: ' regions' (ID: 21043)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.8341979384422302
    2. 'connected' → logprob: -1.209197998046875
    3. 'regions' → logprob: -2.209197998046875
    4. ' islands' → logprob: -2.709197998046875
    5. ' regions' → logprob: -2.834197998046875
    6. 'components' → logprob: -5.084197998046875
    7. ' separate' → logprob: -5.459197998046875
    8. 'un' → logprob: -5.709197998046875
    9. 'distinct' → logprob: -5.834197998046875
    10. ' distinct' → logprob: -6.459197998046875

Token 318: ' not' (ID: 625)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07134657353162766
    2. 'visited' → logprob: -3.1963465213775635
    3. '
' → logprob: -3.9463465213775635
    4. '        
' → logprob: -5.571346759796143
    5. ' visited' → logprob: -5.571346759796143
    6. '   ' → logprob: -7.946346759796143
    7. 'from' → logprob: -8.696346282958984
    8. 'def' → logprob: -8.821346282958984
    9. 'import' → logprob: -8.946346282958984
    10. ',' → logprob: -10.571346282958984

Token 319: ' enclosed' (ID: 67364)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.31366807222366333
    2. ' covered' → logprob: -1.3136680126190186
    3. 'visited' → logprob: -8.063668251037598
    4. 'Covered' → logprob: -10.438668251037598
    5. ' visited' → logprob: -11.188668251037598
    6. '
' → logprob: -11.563668251037598
    7. 'occupied' → logprob: -12.188668251037598
    8. 'filled' → logprob: -12.438668251037598
    9. '   ' → logprob: -12.688668251037598
    10. 'connected' → logprob: -12.813668251037598

Token 320: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5192871689796448
    2. 'visited' → logprob: -1.144287109375
    3. 'def' → logprob: -3.019287109375
    4. '   ' → logprob: -4.394287109375
    5. 'from' → logprob: -5.019287109375
    6. ' visited' → logprob: -5.019287109375
    7. 'import' → logprob: -6.019287109375
    8. ',' → logprob: -6.519287109375
    9. '        
' → logprob: -6.519287109375
    10. ' and' → logprob: -6.769287109375

Token 321: ' rectangles' (ID: 164265)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.5301793813705444
    2. 'covered' → logprob: -1.5301793813705444
    3. 'any' → logprob: -2.405179500579834
    4. 'the' → logprob: -2.405179500579834
    5. 'True' → logprob: -2.530179500579834
    6. ' the' → logprob: -3.030179500579834
    7. ' covered' → logprob: -3.030179500579834
    8. ' True' → logprob: -3.155179500579834
    9. ' walls' → logprob: -3.405179500579834
    10. 'walls' → logprob: -3.530179500579834

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04634886607527733
    2. '
' → logprob: -3.296348810195923
    3. 'visited' → logprob: -5.546349048614502
    4. '        
' → logprob: -5.671349048614502
    5. ' visited' → logprob: -7.921349048614502
    6. 'from' → logprob: -8.421348571777344
    7. 'import' → logprob: -9.421348571777344
    8. ',' → logprob: -9.671348571777344
    9. '<|end|>' → logprob: -9.796348571777344
    10. '   ' → logprob: -10.421348571777344

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03399592638015747
    2. 'visited' → logprob: -4.033996105194092
    3. ' visited' → logprob: -4.908996105194092
    4. 'from' → logprob: -5.158996105194092
    5. ' from' → logprob: -7.033996105194092
    6. '
' → logprob: -7.408996105194092
    7. 'import' → logprob: -7.533996105194092
    8. '   ' → logprob: -8.408995628356934
    9. '        
' → logprob: -8.908995628356934
    10. ',' → logprob: -10.033995628356934

Token 324: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.06726609915494919
    2. 'from' → logprob: -2.8172659873962402
    3. 'import' → logprob: -6.06726598739624
    4. ' visited' → logprob: -6.19226598739624
    5. ' from' → logprob: -8.317266464233398
    6. 'seen' → logprob: -8.817266464233398
    7. '       ' → logprob: -8.817266464233398
    8. 'def' → logprob: -9.317266464233398
    9. '   ' → logprob: -9.442266464233398
    10. 'vis' → logprob: -9.817266464233398

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858884960412979
    2. '=' → logprob: -3.048588752746582
    3. '=[[' → logprob: -13.798588752746582
    4. ' ' → logprob: -15.548588752746582
    5. '=[' → logprob: -16.6735897064209
    6. '[' → logprob: -16.7985897064209
    7. ' =[' → logprob: -16.7985897064209
    8. '＝' → logprob: -17.9235897064209
    9. '   ' → logprob: -17.9235897064209
    10. ',' → logprob: -17.9235897064209

Token 326: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.06196948140859604
    2. ' [[' → logprob: -2.811969518661499
    3. '[' → logprob: -13.311969757080078
    4. ' [' → logprob: -16.061969757080078
    5. '   ' → logprob: -17.686969757080078
    6. '=[[' → logprob: -17.936969757080078
    7. '([[' → logprob: -18.686969757080078
    8. ' ' → logprob: -19.186969757080078
    9. '       ' → logprob: -20.561969757080078
    10. '[
' → logprob: -20.936969757080078

Token 327: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.128163257315464e-07
    2. ' False' → logprob: -15.5
    3. '(False' → logprob: -21.625
    4. 'True' → logprob: -22.125
    5. '=False' → logprob: -23.125
    6. 'false' → logprob: -23.75
    7. '0' → logprob: -24.375
    8. 'len' → logprob: -25.375
    9. '.False' → logprob: -25.375
    10. '_false' → logprob: -25.625

Token 328: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.006057132501155138
    2. ']*' → logprob: -5.256057262420654
    3. ']' → logprob: -8.006056785583496
    4. '*(' → logprob: -8.256056785583496
    5. '](' → logprob: -9.131056785583496
    6. ' for' → logprob: -9.631056785583496
    7. 'for' → logprob: -10.631056785583496
    8. '   ' → logprob: -11.631056785583496
    9. '][' → logprob: -11.756056785583496
    10. '(w' → logprob: -12.006056785583496

Token 329: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.45848218582978e-06
    2. ' h' → logprob: -13.12500286102295
    3. 'len' → logprob: -15.50000286102295
    4. '(h' → logprob: -16.500001907348633
    5. '       ' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '           ' → logprob: -18.375001907348633
    8. 'w' → logprob: -18.500001907348633
    9. '[h' → logprob: -19.375001907348633
    10. ')' → logprob: -20.625001907348633

Token 330: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.180258191714529e-06
    2. ' -' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.12500762939453
    4. '<|end|>' → logprob: -16.62500762939453
    5. '[' → logprob: -16.87500762939453
    6. ')' → logprob: -17.25000762939453
    7. '<|end|>' → logprob: -18.00000762939453
    8. '       ' → logprob: -18.62500762939453
    9. '1' → logprob: -18.75000762939453
    10. ' ' → logprob: -19.12500762939453

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.000000953674316
    4. ')' → logprob: -15.125000953674316
    5. '-' → logprob: -16.750001907348633
    6. '```' → logprob: -17.875001907348633
    7. '2' → logprob: -18.000001907348633
    8. '       ' → logprob: -18.750001907348633
    9. '           ' → logprob: -18.875001907348633
    10. '...' → logprob: -19.375001907348633

Token 332: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.248469718324486e-05
    2. ' )' → logprob: -11.000022888183594
    3. 'for' → logprob: -13.000022888183594
    4. '   ' → logprob: -13.500022888183594
    5. '       ' → logprob: -14.375022888183594
    6. ' for' → logprob: -14.500022888183594
    7. ']' → logprob: -15.500022888183594
    8. ')
' → logprob: -15.500022888183594
    9. '           ' → logprob: -15.625022888183594
    10. ')]' → logprob: -15.750022888183594

Token 333: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07891678065061569
    2. 'for' → logprob: -2.5789167881011963
    3. '       ' → logprob: -11.453916549682617
    4. ')' → logprob: -11.953916549682617
    5. '   ' → logprob: -12.328916549682617
    6. '           ' → logprob: -12.953916549682617
    7. ' ' → logprob: -13.828916549682617
    8. '	for' → logprob: -14.078916549682617
    9. '               ' → logprob: -14.203916549682617
    10. '        ' → logprob: -15.203916549682617

Token 334: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0004540294758044183
    2. ' _' → logprob: -8.00045394897461
    3. ' in' → logprob: -9.87545394897461
    4. '_range' → logprob: -10.12545394897461
    5. 'in' → logprob: -11.75045394897461
    6. '_in' → logprob: -12.00045394897461
    7. ' range' → logprob: -12.00045394897461
    8. '(i' → logprob: -13.12545394897461
    9. ' i' → logprob: -13.25045394897461
    10. ' (' → logprob: -14.37545394897461

Token 335: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12880423665046692
    2. ' range' → logprob: -2.1288042068481445
    3. '(range' → logprob: -6.3788042068481445
    4. 'in' → logprob: -9.503804206848145
    5. '_range' → logprob: -9.628804206848145
    6. ' in' → logprob: -10.503804206848145
    7. '_' → logprob: -12.253804206848145
    8. '	range' → logprob: -13.253804206848145
    9. '(' → logprob: -14.378804206848145
    10. '(w' → logprob: -14.753804206848145

Token 336: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029782429337501526
    2. ' range' → logprob: -3.52978253364563
    3. '(range' → logprob: -10.40478229522705
    4. '(w' → logprob: -13.65478229522705
    5. '[w' → logprob: -14.90478229522705
    6. 'w' → logprob: -17.279783248901367
    7. '	range' → logprob: -17.279783248901367
    8. '   ' → logprob: -17.779783248901367
    9. '_range' → logprob: -18.279783248901367
    10. ' in' → logprob: -18.529783248901367

Token 337: '(w' (ID: 7420)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1943126767873764
    2. ' range' → logprob: -1.8193126916885376
    3. '(w' → logprob: -4.819312572479248
    4. '(range' → logprob: -5.069312572479248
    5. ' (' → logprob: -10.444313049316406
    6. '   ' → logprob: -10.569313049316406
    7. '_range' → logprob: -12.069313049316406
    8. '[w' → logprob: -12.069313049316406
    9. '	range' → logprob: -12.194313049316406
    10. ' in' → logprob: -12.194313049316406

Token 338: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.500108141452074e-05
    2. ' -' → logprob: -10.500035285949707
    3. '1' → logprob: -12.375035285949707
    4. '[' → logprob: -13.625035285949707
    5. '   ' → logprob: -13.750035285949707
    6. '       ' → logprob: -15.000035285949707
    7. ')' → logprob: -15.750035285949707
    8. ')-' → logprob: -16.25003433227539
    9. '           ' → logprob: -16.25003433227539
    10. '-
' → logprob: -16.37503433227539

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '2' → logprob: -14.12500286102295
    3. '-' → logprob: -14.25000286102295
    4. ' ' → logprob: -14.37500286102295
    5. ')' → logprob: -15.25000286102295
    6. '```' → logprob: -15.75000286102295
    7. '   ' → logprob: -16.250001907348633
    8. '１' → logprob: -18.437501907348633
    9. '))' → logprob: -19.062501907348633
    10. '])' → logprob: -19.125001907348633

Token 340: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004842696245759726
    2. ']' → logprob: -5.379842758178711
    3. ')' → logprob: -8.879842758178711
    4. ')]
' → logprob: -9.504842758178711
    5. '       ' → logprob: -12.879842758178711
    6. ']
' → logprob: -13.504842758178711
    7. ' ]' → logprob: -14.004842758178711
    8. '   ' → logprob: -14.254842758178711
    9. ')]

' → logprob: -14.254842758178711
    10. ')]
' → logprob: -14.629842758178711

Token 341: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17607566714286804
    2. '       ' → logprob: -2.0510756969451904
    3. '
' → logprob: -4.176075458526611
    4. 'def' → logprob: -4.551075458526611
    5. '    
' → logprob: -6.551075458526611
    6. '        
' → logprob: -7.051075458526611
    7. '<|end|>' → logprob: -7.301075458526611
    8. ',' → logprob: -7.676075458526611
    9. '```' → logprob: -7.801075458526611
    10. ' for' → logprob: -7.926075458526611

Token 342: ' def' (ID: 1056)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0015422382857650518
    2. 'def' (adapté à ' def') → logprob: -7.376542091369629
    3. 'dire' → logprob: -7.501542091369629
    4. 'import' → logprob: -8.376542091369629
    5. 'dx' → logprob: -10.001542091369629
    6. 'stack' → logprob: -10.251542091369629
    7. ' from' → logprob: -11.126542091369629
    8. 'dirs' → logprob: -11.501542091369629
    9. 'queue' → logprob: -11.626542091369629
    10. '   ' → logprob: -11.626542091369629

Token 343: ' neighbors' (ID: 31655)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.3138546645641327
    2. 'f' → logprob: -1.313854694366455
    3. ' dfs' → logprob: -7.938854694366455
    4. ' flood' → logprob: -9.813854217529297
    5. 'inside' → logprob: -9.813854217529297
    6. 'in' → logprob: -10.188854217529297
    7. 'fill' → logprob: -10.438854217529297
    8. 'ff' → logprob: -10.688854217529297
    9. 'b' → logprob: -11.063854217529297
    10. 'valid' → logprob: -11.563854217529297

Token 344: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.47528982162475586
    2. '(i' → logprob: -0.9752898216247559
    3. '(' → logprob: -6.725289821624756
    4. '(
' → logprob: -12.225290298461914
    5. ' (' → logprob: -13.350290298461914
    6. '(a' → logprob: -13.475290298461914
    7. '(u' → logprob: -13.975290298461914
    8. '(pos' → logprob: -14.600290298461914
    9. '(node' → logprob: -14.725290298461914
    10. '(cell' → logprob: -15.100290298461914

Token 345: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4021669924259186
    2. '):' → logprob: -1.6521669626235962
    3. ',y' → logprob: -2.2771670818328857
    4. '):
' → logprob: -3.6521670818328857
    5. ',x' → logprob: -5.277166843414307
    6. '   ' → logprob: -6.527166843414307
    7. ',j' → logprob: -6.902166843414307
    8. ',i' → logprob: -7.027166843414307
    9. '       ' → logprob: -7.527166843414307
    10. ',n' → logprob: -7.652166843414307

Token 346: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009762698784470558
    2. '):
' → logprob: -4.634762763977051
    3. ' ):' → logprob: -13.00976276397705
    4. ')' → logprob: -13.25976276397705
    5. '   ' → logprob: -14.13476276397705
    6. ':' → logprob: -14.25976276397705
    7. '):
' → logprob: -14.50976276397705
    8. '):

' → logprob: -15.50976276397705
    9. ',' → logprob: -15.63476276397705
    10. '):(' → logprob: -15.75976276397705

Token 347: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1415185034275055
    2. '):' → logprob: -2.5165185928344727
    3. '():' → logprob: -4.141518592834473
    4. '   ' → logprob: -4.391518592834473
    5. ':
' → logprob: -4.891518592834473
    6. '):
' → logprob: -5.391518592834473
    7. '<|end|>' → logprob: -6.141518592834473
    8. '(' → logprob: -6.141518592834473
    9. '():
' → logprob: -6.391518592834473
    10. '       ' → logprob: -6.641518592834473

Token 348: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09762828052043915
    2. '       ' → logprob: -3.222628355026245
    3. ' for' → logprob: -4.347628116607666
    4. 'yield' → logprob: -4.722628116607666
    5. '   ' → logprob: -4.847628116607666
    6. ' if' → logprob: -5.097628116607666
    7. '
' → logprob: -5.347628116607666
    8. ' neighbors' → logprob: -5.972628116607666
    9. 'neighbors' → logprob: -6.472628116607666
    10. ' yield' → logprob: -6.472628116607666

Token 349: ' dx' (ID: 29472)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.3464045524597168
    2. 'dx' → logprob: -1.3464045524597168
    3. ' nx' → logprob: -3.971404552459717
    4. '(nx' → logprob: -4.846404552459717
    5. ' dx' → logprob: -5.221404552459717
    6. 'xn' → logprob: -8.971405029296875
    7. '(dx' → logprob: -9.096405029296875
    8. '   ' → logprob: -9.471405029296875
    9. ' (' → logprob: -9.721405029296875
    10. 'xx' → logprob: -10.346405029296875

Token 350: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.26862630248069763
    2. 'in' → logprob: -1.51862633228302
    3. ',' → logprob: -4.1436262130737305
    4. ' ,' → logprob: -7.8936262130737305
    5. ',in' → logprob: -9.39362621307373
    6. '	in' → logprob: -9.89362621307373
    7. '   ' → logprob: -10.39362621307373
    8. ',y' → logprob: -10.39362621307373
    9. ' ' → logprob: -10.51862621307373
    10. '    ' → logprob: -10.64362621307373

Token 351: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.03008970245718956
    2. '0' → logprob: -3.7800896167755127
    3. ' dy' → logprob: -5.155089855194092
    4. '(' → logprob: -7.030089855194092
    5. ' ' → logprob: -9.405089378356934
    6. ' (' → logprob: -9.530089378356934
    7. '   ' → logprob: -12.405089378356934
    8. '[' → logprob: -12.780089378356934
    9. '```' → logprob: -14.030089378356934
    10. ',' → logprob: -14.155089378356934

Token 352: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04862041026353836
    2. 'in' → logprob: -3.0486204624176025
    3. '   ' → logprob: -11.298620223999023
    4. ' ' → logprob: -11.548620223999023
    5. '	in' → logprob: -12.673620223999023
    6. '    ' → logprob: -13.423620223999023
    7. '
' → logprob: -13.798620223999023
    8. '  ' → logprob: -13.923620223999023
    9. '```' → logprob: -14.173620223999023
    10. ')' → logprob: -14.173620223999023

Token 353: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.02356456220149994
    2. '[' → logprob: -3.773564577102661
    3. '((' → logprob: -8.523564338684082
    4. ' [(' → logprob: -9.273564338684082
    5. '[((' → logprob: -10.898564338684082
    6. '(' → logprob: -12.523564338684082
    7. ' [' → logprob: -12.898564338684082
    8. '[
' → logprob: -14.648564338684082
    9. ' ((' → logprob: -15.023564338684082
    10. '[[' → logprob: -15.148564338684082

Token 354: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024762547109276056
    2. '(-' → logprob: -6.002476215362549
    3. ' (' → logprob: -14.377476692199707
    4. '   ' → logprob: -18.12747573852539
    5. '1' → logprob: -19.12747573852539
    6. '0' → logprob: -20.12747573852539
    7. '-' → logprob: -20.12747573852539
    8. '(+' → logprob: -20.50247573852539
    9. '[' → logprob: -20.62747573852539
    10. ' (-' → logprob: -21.12747573852539

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.375
    3. ' ' → logprob: -17.125
    4. ',' → logprob: -17.5
    5. ')' → logprob: -18.0
    6. '
' → logprob: -19.875
    7. '<|end|>' → logprob: -20.375
    8. '```' → logprob: -20.9375
    9. '=' → logprob: -21.0
    10. 'x' → logprob: -21.125

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012558852904476225
    2. ' ,' → logprob: -9.000125885009766
    3. '0' → logprob: -13.250125885009766
    4. '),' → logprob: -15.375125885009766
    5. '),(' → logprob: -16.250125885009766
    6. ',
' → logprob: -18.875125885009766
    7. ',),' → logprob: -19.375125885009766
    8. '```' → logprob: -19.625125885009766
    9. '‌,' → logprob: -19.875125885009766
    10. ',(' → logprob: -20.125125885009766

Token 357: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -18.500804901123047
    4. ' ' → logprob: -18.625804901123047
    5. '۰' → logprob: -18.875804901123047
    6. '
' → logprob: -19.375804901123047
    7. '  ' → logprob: -19.750804901123047
    8. ')' → logprob: -19.750804901123047
    9. '),' → logprob: -20.250804901123047
    10. ',' → logprob: -20.375804901123047

Token 358: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06224775314331055
    2. '),(' → logprob: -2.8122477531433105
    3. ' ),' → logprob: -8.187248229980469
    4. '),
' → logprob: -13.562248229980469
    5. ',),' → logprob: -15.312248229980469
    6. '           ' → logprob: -16.43724822998047
    7. ')' → logprob: -16.93724822998047
    8. '],' → logprob: -17.18724822998047
    9. ' ' → logprob: -17.31224822998047
    10. '   ' → logprob: -17.56224822998047

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006731949746608734
    2. '0' → logprob: -5.006731986999512
    3. ' ' → logprob: -11.006731986999512
    4. '+' → logprob: -17.506731033325195
    5. '   ' → logprob: -17.756731033325195
    6. '
' → logprob: -18.131731033325195
    7. '```' → logprob: -18.506731033325195
    8. ',' → logprob: -18.756731033325195
    9. ')' → logprob: -19.631731033325195
    10. '01' → logprob: -19.756731033325195

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001980260480195284
    2. '0' → logprob: -6.251980304718018
    3. ' ,' → logprob: -9.87697982788086
    4. ' ' → logprob: -16.25197982788086
    5. ',
' → logprob: -17.12697982788086
    6. '   ' → logprob: -17.50197982788086
    7. '```' → logprob: -17.50197982788086
    8. ')' → logprob: -17.50197982788086
    9. '),' → logprob: -17.62697982788086
    10. '<|end|>' → logprob: -17.75197982788086

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. ',' → logprob: -18.1250057220459
    4. '<|end|>' → logprob: -19.1250057220459
    5. '۰' → logprob: -19.2500057220459
    6. '   ' → logprob: -19.7500057220459
    7. '```' → logprob: -20.3750057220459
    8. ')' → logprob: -20.9375057220459
    9. '  ' → logprob: -21.2500057220459
    10. '
' → logprob: -21.4375057220459

Token 362: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0007236333331093192
    2. '),' → logprob: -7.250723838806152
    3. ' ),' → logprob: -11.250723838806152
    4. '),
' → logprob: -14.750723838806152
    5. ',' → logprob: -16.375722885131836
    6. '],[' → logprob: -16.875722885131836
    7. '(' → logprob: -17.000722885131836
    8. ')]' → logprob: -17.500722885131836
    9. ')],' → logprob: -17.750722885131836
    10. ')' → logprob: -18.000722885131836

Token 363: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.625015258789062
    4. '۰' → logprob: -17.375015258789062
    5. '
' → logprob: -17.625015258789062
    6. '```' → logprob: -18.062515258789062
    7. '00' → logprob: -18.187515258789062
    8. '(' → logprob: -18.437515258789062
    9. ',' → logprob: -18.562515258789062
    10. '  ' → logprob: -18.812515258789062

Token 364: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0009196776081807911
    2. ',' → logprob: -7.000919818878174
    3. '-' → logprob: -11.750919342041016
    4. ',-
' → logprob: -15.750919342041016
    5. ',
' → logprob: -16.250919342041016
    6. '1' → logprob: -16.750919342041016
    7. ' ,-' → logprob: -16.875919342041016
    8. ',-

' → logprob: -17.125919342041016
    9. '",-' → logprob: -19.250919342041016
    10. '-,' → logprob: -19.250919342041016

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ',' → logprob: -13.250001907348633
    3. ' ' → logprob: -15.375001907348633
    4. '-' → logprob: -15.625001907348633
    5. '```' → logprob: -16.500001907348633
    6. ')' → logprob: -16.750001907348633
    7. '
' → logprob: -17.625001907348633
    8. '),' → logprob: -18.500001907348633
    9. '0' → logprob: -19.250001907348633
    10. '+' → logprob: -19.437501907348633

Token 366: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00016790216614026576
    2. ',' → logprob: -9.500167846679688
    3. '),' → logprob: -9.500167846679688
    4. ')]' → logprob: -11.875167846679688
    5. ',(' → logprob: -12.625167846679688
    6. '(' → logprob: -12.750167846679688
    7. '0' → logprob: -13.125167846679688
    8. '),
' → logprob: -14.000167846679688
    9. '1' → logprob: -14.500167846679688
    10. ')' → logprob: -14.625167846679688

Token 367: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004894073354080319
    2. '0' → logprob: -7.625489234924316
    3. ' ' → logprob: -13.750489234924316
    4. '+' → logprob: -15.750489234924316
    5. '```' → logprob: -16.500490188598633
    6. ')' → logprob: -17.375490188598633
    7. '01' → logprob: -18.125490188598633
    8. '
' → logprob: -18.125490188598633
    9. '``' → logprob: -19.000490188598633
    10. '   ' → logprob: -19.250490188598633

Token 368: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4740995764732361
    2. ',' → logprob: -0.9740995764732361
    3. ' ' → logprob: -12.224099159240723
    4. '```' → logprob: -12.224099159240723
    5. '0' → logprob: -12.849099159240723
    6. ')' → logprob: -12.974099159240723
    7. ')]' → logprob: -13.099099159240723
    8. ' ,' → logprob: -13.224099159240723
    9. '(' → logprob: -13.474099159240723
    10. ',
' → logprob: -14.474099159240723

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '+' → logprob: -15.125001907348633
    4. '0' → logprob: -16.750001907348633
    5. '-' → logprob: -17.250001907348633
    6. ')' → logprob: -17.250001907348633
    7. '```' → logprob: -17.250001907348633
    8. ')]' → logprob: -19.500001907348633
    9. '
' → logprob: -19.625001907348633
    10. '(' → logprob: -20.500001907348633

Token 370: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011151574552059174
    2. ')' → logprob: -4.7611517906188965
    3. '):
' → logprob: -6.1361517906188965
    4. '           ' → logprob: -8.636151313781738
    5. '):' → logprob: -9.511151313781738
    6. ' )' → logprob: -10.136151313781738
    7. '       ' → logprob: -10.636151313781738
    8. ']):
' → logprob: -10.886151313781738
    9. ']]:
' → logprob: -11.261151313781738
    10. '   ' → logprob: -12.511151313781738

Token 371: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11984862387180328
    2. ':' → logprob: -2.2448487281799316
    3. '       ' → logprob: -5.744848728179932
    4. '):
' → logprob: -5.994848728179932
    5. '           ' → logprob: -7.119848728179932
    6. '               ' → logprob: -8.869848251342773
    7. ']:
' → logprob: -8.869848251342773
    8. ',' → logprob: -9.244848251342773
    9. '):' → logprob: -10.494848251342773
    10. '   ' → logprob: -11.119848251342773

Token 372: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29361146688461304
    2. '               ' → logprob: -1.4186115264892578
    3. '<|end|>' → logprob: -5.293611526489258
    4. ' yield' → logprob: -5.918611526489258
    5. ' if' → logprob: -6.668611526489258
    6. '       ' → logprob: -7.043611526489258
    7. 'yield' → logprob: -7.168611526489258
    8. '	       ' → logprob: -7.293611526489258
    9. ',' → logprob: -8.418611526489258
    10. '```' → logprob: -8.668611526489258

Token 373: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.006984368897974491
    2. 'nx' (adapté à ' nx') → logprob: -5.006984233856201
    3. ' new' → logprob: -8.75698471069336
    4. '               ' → logprob: -10.13198471069336
    5. ' x' → logprob: -10.50698471069336
    6. '                ' → logprob: -11.00698471069336
    7. '(nx' → logprob: -11.25698471069336
    8. '                   ' → logprob: -12.25698471069336
    9. '   ' → logprob: -13.13198471069336
    10. '```' → logprob: -13.25698471069336

Token 374: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08205494284629822
    2. ' =' → logprob: -2.582054853439331
    3. '=x' → logprob: -5.83205509185791
    4. ',' → logprob: -8.45705509185791
    5. '=n' → logprob: -11.83205509185791
    6. ',x' → logprob: -12.95705509185791
    7. '=
' → logprob: -13.45705509185791
    8. 'x' → logprob: -13.58205509185791
    9. '=i' → logprob: -14.70705509185791
    10. ')' → logprob: -14.83205509185791

Token 375: ' ny' (ID: 4423)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005249887239187956
    2. ' x' → logprob: -5.255249977111816
    3. 'y' → logprob: -11.630249977111816
    4. '=' → logprob: -12.255249977111816
    5. ' =' → logprob: -13.505249977111816
    6. '=x' → logprob: -14.880249977111816
    7. ' y' → logprob: -15.255249977111816
    8. ' ' → logprob: -15.380249977111816
    9. 'n' → logprob: -16.8802490234375
    10. '   ' → logprob: -16.8802490234375

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004095143172889948
    2. ' =' → logprob: -5.504095077514648
    3. '=x' → logprob: -11.004095077514648
    4. '=n' → logprob: -18.00409507751465
    5. '=
' → logprob: -18.12909507751465
    6. '=y' → logprob: -19.12909507751465
    7. '=i' → logprob: -19.25409507751465
    8. ')' → logprob: -19.37909507751465
    9. '＝' → logprob: -19.87909507751465
    10. ' ' → logprob: -19.87909507751465

Token 377: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024756586644798517
    2. ' x' → logprob: -6.002475738525391
    3. '	x' → logprob: -18.12747573852539
    4. '   ' → logprob: -20.25247573852539
    5. '(x' → logprob: -20.25247573852539
    6. ' ' → logprob: -21.50247573852539
    7. ')x' → logprob: -21.75247573852539
    8. '"x' → logprob: -22.00247573852539
    9. ',x' → logprob: -23.37747573852539
    10. '=x' → logprob: -23.62747573852539

Token 378: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519832253456116
    2. ' +' → logprob: -1.5019831657409668
    3. '+x' → logprob: -10.501983642578125
    4. '+y' → logprob: -11.001983642578125
    5. '+d' → logprob: -12.126983642578125
    6. ',' → logprob: -13.376983642578125
    7. 'dx' → logprob: -14.126983642578125
    8. ',y' → logprob: -15.001983642578125
    9. ' ' → logprob: -15.251983642578125
    10. ' dx' → logprob: -15.376983642578125

Token 379: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -2.935296834039036e-06
    2. ' dx' → logprob: -12.87500286102295
    3. '
' → logprob: -16.250003814697266
    4. '(dx' → logprob: -17.000003814697266
    5. 'd' → logprob: -17.125003814697266
    6. '```' → logprob: -17.500003814697266
    7. '0' → logprob: -17.625003814697266
    8. '   ' → logprob: -17.750003814697266
    9. '1' → logprob: -17.750003814697266
    10. ' ' → logprob: -18.000003814697266

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02008923888206482
    2. ',y' → logprob: -4.020089149475098
    3. ' ,' → logprob: -6.270089149475098
    4. ',n' → logprob: -10.270089149475098
    5. ',
' → logprob: -11.520089149475098
    6. ',w' → logprob: -16.145090103149414
    7. ',j' → logprob: -16.395090103149414
    8. ',b' → logprob: -16.520090103149414
    9. 'y' → logprob: -16.645090103149414
    10. '‌,' → logprob: -16.645090103149414

Token 381: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06196768581867218
    2. ' y' → logprob: -2.811967611312866
    3. '	y' → logprob: -18.561967849731445
    4. '   ' → logprob: -18.936967849731445
    5. ' ' → logprob: -19.311967849731445
    6. '    ' → logprob: -20.936967849731445
    7. '  ' → logprob: -20.936967849731445
    8. '           ' → logprob: -21.186967849731445
    9. '       ' → logprob: -21.436967849731445
    10. '               ' → logprob: -21.811967849731445

Token 382: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6174027323722839
    2. ',y' → logprob: -1.1174027919769287
    3. '+y' → logprob: -2.1174027919769287
    4. ',' → logprob: -5.11740255355835
    5. 'y' → logprob: -5.11740255355835
    6. ' +' → logprob: -7.24240255355835
    7. 'dy' → logprob: -7.86740255355835
    8. ' y' → logprob: -10.492403030395508
    9. ',d' → logprob: -10.867403030395508
    10. '<|end|>' → logprob: -11.367403030395508

Token 383: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0003023345780093223
    2. ' dy' → logprob: -8.1253023147583
    3. 'y' → logprob: -12.6253023147583
    4. '1' → logprob: -12.8753023147583
    5. '.dy' → logprob: -15.3753023147583
    6. '0' → logprob: -15.6253023147583
    7. 'd' → logprob: -17.375303268432617
    8. ' ' → logprob: -17.875303268432617
    9. 'dym' → logprob: -18.000303268432617
    10. 'Dy' → logprob: -18.250303268432617

Token 384: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05015785992145538
    2. '<|end|>' → logprob: -3.1751577854156494
    3. '           ' → logprob: -5.8001580238342285
    4. '
' → logprob: -6.0501580238342285
    5. '<|end|>' → logprob: -7.9251580238342285
    6. '		       ' → logprob: -8.55015754699707
    7. 'if' → logprob: -8.67515754699707
    8. '	       ' → logprob: -8.80015754699707
    9. '	           ' → logprob: -8.80015754699707
    10. ' if' → logprob: -8.92515754699707

Token 385: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00042221311014145613
    2. '                
' → logprob: -9.375422477722168
    3. '<|end|>' → logprob: -9.500422477722168
    4. '	           ' → logprob: -9.750422477722168
    5. '		       ' → logprob: -9.875422477722168
    6. 'if' → logprob: -10.250422477722168
    7. '```' → logprob: -10.375422477722168
    8. ' if' → logprob: -10.375422477722168
    9. '
' → logprob: -11.125422477722168
    10. '	       ' → logprob: -11.375422477722168

Token 386: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10917212814092636
    2. ' if' → logprob: -2.3591721057891846
    3. '               ' → logprob: -4.734172344207764
    4. '           ' → logprob: -9.734171867370605
    5. '```' → logprob: -9.859171867370605
    6. '                
' → logprob: -11.984171867370605
    7. '	if' → logprob: -12.234171867370605
    8. '
' → logprob: -12.734171867370605
    9. '                   ' → logprob: -12.734171867370605
    10. ' ' → logprob: -13.359171867370605

Token 387: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715967319905758
    2. ' ' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.381715774536133
    4. 'nx' → logprob: -16.381715774536133
    5. ' ' → logprob: -16.756715774536133
    6. '(' → logprob: -16.756715774536133
    7. '(nx' → logprob: -16.881715774536133
    8. '
' → logprob: -17.506715774536133
    9. '  ' → logprob: -17.631715774536133
    10. ' (' → logprob: -17.756715774536133

Token 388: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'nx' → logprob: -17.375003814697266
    4. '(nx' → logprob: -18.500003814697266
    5. '(' → logprob: -19.125003814697266
    6. '
' → logprob: -20.000003814697266
    7. '   ' → logprob: -20.125003814697266
    8. '۰' → logprob: -20.250003814697266
    9. '00' → logprob: -20.875003814697266
    10. '-' → logprob: -21.000003814697266

Token 389: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25192946195602417
    2. '<=' → logprob: -1.501929521560669
    3. '<' → logprob: -16.376930236816406
    4. ' ' → logprob: -16.876930236816406
    5. ')<=' → logprob: -17.001930236816406
    6. ' <' → logprob: -17.501930236816406
    7. '<n' → logprob: -17.626930236816406
    8. 'x' → logprob: -17.626930236816406
    9. '
' → logprob: -17.876930236816406
    10. '   ' → logprob: -18.001930236816406

Token 390: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.005241937469691038
    2. ' nx' → logprob: -5.255241870880127
    3. '(nx' → logprob: -11.755242347717285
    4. 'n' → logprob: -15.880242347717285
    5. '
' → logprob: -16.00524139404297
    6. 'ny' → logprob: -17.38024139404297
    7. 'xn' → logprob: -18.25524139404297
    8. 'nk' → logprob: -18.38024139404297
    9. 'Nx' → logprob: -18.38024139404297
    10. 'nz' → logprob: -18.63024139404297

Token 391: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.005259372293949127
    2. ' <' → logprob: -5.3802595138549805
    3. '<w' → logprob: -7.3802595138549805
    4. '<n' → logprob: -11.38025951385498
    5. '<len' → logprob: -13.13025951385498
    6. ' and' → logprob: -14.50525951385498
    7. 'and' → logprob: -14.50525951385498
    8. 'w' → logprob: -14.50525951385498
    9. '<size' → logprob: -15.75525951385498
    10. '<W' → logprob: -15.88025951385498

Token 392: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0006932547548785806
    2. '(w' → logprob: -7.500693321228027
    3. ' w' → logprob: -8.875693321228027
    4. ' (' → logprob: -15.375693321228027
    5. '   ' → logprob: -15.625693321228027
    6. 'len' → logprob: -15.875693321228027
    7. '[w' → logprob: -17.37569236755371
    8. '	w' → logprob: -17.50069236755371
    9. '(' → logprob: -18.62569236755371
    10. '       ' → logprob: -18.75069236755371

Token 393: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013278567930683494
    2. ' -' → logprob: -6.626327991485596
    3. '1' → logprob: -14.376327514648438
    4. 'and' → logprob: -14.876327514648438
    5. '               ' → logprob: -15.251327514648438
    6. '           ' → logprob: -15.251327514648438
    7. '   ' → logprob: -15.751327514648438
    8. ' and' → logprob: -15.876327514648438
    9. '−' → logprob: -16.376327514648438
    10. '       ' → logprob: -17.001327514648438

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '-' → logprob: -18.5
    4. '```' → logprob: -18.625
    5. '   ' → logprob: -19.25
    6. '
' → logprob: -20.375
    7. '2' → logprob: -21.25
    8. '[' → logprob: -21.375
    9. 'len' → logprob: -21.5
    10. ' -' → logprob: -22.5

Token 395: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02981541119515896
    2. 'and' → logprob: -3.529815435409546
    3. '               ' → logprob: -9.654815673828125
    4. '           ' → logprob: -14.779815673828125
    5. '                ' → logprob: -15.654815673828125
    6. ' ' → logprob: -16.154815673828125
    7. '                   ' → logprob: -16.529815673828125
    8. '       ' → logprob: -17.154815673828125
    9. '	and' → logprob: -17.779815673828125
    10. ',' → logprob: -17.904815673828125

Token 396: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00975833274424076
    2. ' ' → logprob: -4.634758472442627
    3. '               ' → logprob: -14.759757995605469
    4. '   ' → logprob: -15.259757995605469
    5. '                ' → logprob: -15.509757995605469
    6. '    ' → logprob: -15.634757995605469
    7. '           ' → logprob: -15.759757995605469
    8. '  ' → logprob: -15.759757995605469
    9. '                   ' → logprob: -15.759757995605469
    10. '                 ' → logprob: -15.884757995605469

Token 397: '0' (ID: 15)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.11715927720069885
    2. '0' → logprob: -2.242159366607666
    3. ' h' → logprob: -5.492159366607666
    4. ' ' → logprob: -8.492158889770508
    5. '   ' → logprob: -13.492158889770508
    6. '  ' → logprob: -14.617158889770508
    7. '(h' → logprob: -15.117158889770508
    8. '    ' → logprob: -15.367158889770508
    9. 'y' → logprob: -15.492158889770508
    10. '<h' → logprob: -15.617158889770508

Token 398: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3989739716053009
    2. '<' → logprob: -1.1489739418029785
    3. 'ny' → logprob: -5.5239739418029785
    4. ' ' → logprob: -6.0239739418029785
    5. ' ny' → logprob: -6.1489739418029785
    6. 'h' → logprob: -7.2739739418029785
    7. '1' → logprob: -7.5239739418029785
    8. 'y' → logprob: -7.8989739418029785
    9. '        ' → logprob: -8.273974418640137
    10. '<h' → logprob: -8.648974418640137

Token 399: ' ny' (ID: 4423)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.018155328929424286
    2. ' h' → logprob: -4.018155097961426
    3. '(h' → logprob: -12.393155097961426
    4. 'y' → logprob: -14.393155097961426
    5. ' ' → logprob: -15.268155097961426
    6. '   ' → logprob: -16.268156051635742
    7. '	h' → logprob: -16.768156051635742
    8. ' y' → logprob: -16.893156051635742
    9. ' (' → logprob: -17.018156051635742
    10. '       ' → logprob: -17.768156051635742

Token 400: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.42958930134773254
    2. '<' → logprob: -1.0545892715454102
    3. '<h' → logprob: -7.05458927154541
    4. '<w' → logprob: -11.42958927154541
    5. 'h' → logprob: -12.05458927154541
    6. ' h' → logprob: -12.92958927154541
    7. '<(' → logprob: -13.17958927154541
    8. '<n' → logprob: -13.92958927154541
    9. ' ' → logprob: -14.30458927154541
    10. '<p' → logprob: -15.30458927154541

Token 401: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00193149340339005
    2. ' h' → logprob: -6.251931667327881
    3. '(h' → logprob: -13.126931190490723
    4. ' (' → logprob: -15.126931190490723
    5. 'w' → logprob: -15.251931190490723
    6. '   ' → logprob: -15.626931190490723
    7. ' ' → logprob: -16.62693214416504
    8. '       ' → logprob: -16.75193214416504
    9. '[h' → logprob: -17.25193214416504
    10. '
' → logprob: -17.62693214416504

Token 402: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9146995327901095e-05
    2. '1' → logprob: -11.500019073486328
    3. ' -' → logprob: -11.625019073486328
    4. ' ' → logprob: -18.625019073486328
    5. '```' → logprob: -18.625019073486328
    6. '   ' → logprob: -19.000019073486328
    7. '2' → logprob: -19.000019073486328
    8. '[' → logprob: -20.125019073486328
    9. '-
' → logprob: -20.375019073486328
    10. '()-' → logprob: -20.625019073486328

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '-' → logprob: -13.625001907348633
    3. ' ' → logprob: -16.250001907348633
    4. '```' → logprob: -16.375001907348633
    5. '2' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '
' → logprob: -19.750001907348633
    8. '...' → logprob: -20.687501907348633
    9. '１' → logprob: -20.687501907348633
    10. '۱' → logprob: -21.000001907348633

Token 404: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029912130907177925
    2. '                   ' → logprob: -4.154911994934082
    3. 'and' → logprob: -4.404911994934082
    4. '               ' → logprob: -6.904911994934082
    5. ':
' → logprob: -8.279911994934082
    6. ':' → logprob: -8.904911994934082
    7. '                       ' → logprob: -8.904911994934082
    8. '           ' → logprob: -10.779911994934082
    9. '):
' → logprob: -12.779911994934082
    10. '                  ' → logprob: -13.279911994934082

Token 405: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005685122683644295
    2. ' and' → logprob: -5.255685329437256
    3. '               ' → logprob: -9.130684852600098
    4. 'and' → logprob: -9.255684852600098
    5. '                       ' → logprob: -9.380684852600098
    6. '```' → logprob: -9.630684852600098
    7. ' if' → logprob: -10.130684852600098
    8. 'if' → logprob: -11.380684852600098
    9. '                    
' → logprob: -11.630684852600098
    10. '                  ' → logprob: -11.755684852600098

Token 406: ' yield' (ID: 14376)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18403179943561554
    2. 'yield' (adapté à ' yield') → logprob: -2.1840317249298096
    3. '                   ' → logprob: -2.9340317249298096
    4. '                       ' → logprob: -6.809031963348389
    5. ' if' → logprob: -7.309031963348389
    6. ' yield' → logprob: -7.809031963348389
    7. '               ' → logprob: -9.68403148651123
    8. '```' → logprob: -9.68403148651123
    9. '	yield' → logprob: -11.55903148651123
    10. '       ' → logprob: -13.18403148651123

Token 407: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.02472265437245369
    2. '(nx' → logprob: -3.7747225761413574
    3. ' nx' → logprob: -6.524722576141357
    4. '(n' → logprob: -12.274723052978516
    5. ' (' → logprob: -13.024723052978516
    6. '(' → logprob: -13.649723052978516
    7. '   ' → logprob: -14.524723052978516
    8. 'nv' → logprob: -15.274723052978516
    9. 'n' → logprob: -15.399723052978516
    10. 'ny' → logprob: -16.024723052978516

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009119403548538685
    2. ',y' → logprob: -7.500911712646484
    3. ' ,' → logprob: -8.125911712646484
    4. ',n' → logprob: -9.750911712646484
    5. ',
' → logprob: -12.375911712646484
    6. ',\
' → logprob: -15.500911712646484
    7. ',next' → logprob: -16.375911712646484
    8. '‌,' → logprob: -16.375911712646484
    9. ',new' → logprob: -17.000911712646484
    10. ',None' → logprob: -17.875911712646484

Token 409: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.001502717612311244
    2. ' ny' → logprob: -6.501502513885498
    3. 'nyi' → logprob: -15.626502990722656
    4. '
' → logprob: -16.501502990722656
    5. ' ' → logprob: -17.251502990722656
    6. 'iny' → logprob: -17.376502990722656
    7. 'nyt' → logprob: -17.876502990722656
    8. '    ' → logprob: -18.501502990722656
    9. '   ' → logprob: -18.501502990722656
    10. 'n' → logprob: -19.001502990722656

Token 410: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07150562852621078
    2. '<|end|>' → logprob: -3.696505546569824
    3. '
' → logprob: -3.821505546569824
    4. '        
' → logprob: -4.696505546569824
    5. '    
' → logprob: -5.321505546569824
    6. '   ' → logprob: -6.321505546569824
    7. 'def' → logprob: -6.696505546569824
    8. '  
' → logprob: -6.696505546569824
    9. '                    
' → logprob: -7.196505546569824
    10. '```' → logprob: -7.321505546569824

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08464977890253067
    2. 'def' → logprob: -3.5846498012542725
    3. '   ' → logprob: -3.7096498012542725
    4. '```' → logprob: -4.584649562835693
    5. 'from' → logprob: -4.709649562835693
    6. '<|end|>' → logprob: -5.084649562835693
    7. 'queue' → logprob: -6.334649562835693
    8. 'import' → logprob: -7.709649562835693
    9. '        
' → logprob: -8.584650039672852
    10. ')' → logprob: -8.834650039672852

Token 412: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.46260517835617065
    2. 'from' → logprob: -1.0876052379608154
    3. '   ' → logprob: -3.8376052379608154
    4. '       ' → logprob: -5.837604999542236
    5. 'visited' → logprob: -5.962604999542236
    6. 'stack' → logprob: -6.212604999542236
    7. 'import' → logprob: -6.587604999542236
    8. '
' → logprob: -6.837604999542236
    9. 'queue' → logprob: -7.087604999542236
    10. ' from' → logprob: -7.837604999542236

Token 413: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.3237553536891937
    2. 'dfs' → logprob: -1.3237553834915161
    3. ' flood' → logprob: -4.573755264282227
    4. 'f' → logprob: -9.448755264282227
    5. ' bfs' → logprob: -10.198755264282227
    6. 'Flood' → logprob: -13.198755264282227
    7. ' fill' → logprob: -14.323755264282227
    8. 'DFS' → logprob: -14.948755264282227
    9. 'b' → logprob: -15.448755264282227
    10. '
' → logprob: -15.823755264282227

Token 414: '(s' (ID: 1858)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0001601539261173457
    2. '(' → logprob: -8.750160217285156
    3. ' (' → logprob: -13.375160217285156
    4. '(
' → logprob: -16.625160217285156
    5. '(i' → logprob: -17.375160217285156
    6. '(u' → logprob: -18.250160217285156
    7. '(nx' → logprob: -18.375160217285156
    8. '(node' → logprob: -19.000160217285156
    9. '(dx' → logprob: -19.000160217285156
    10. '(s' → logprob: -19.500160217285156

Token 415: 'x' (ID: 87)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005384349264204502
    2. '):' → logprob: -5.88038444519043
    3. ')' → logprob: -6.88038444519043
    4. '):
' → logprob: -7.50538444519043
    5. '(t' → logprob: -8.50538444519043
    6. 'x' → logprob: -8.63038444519043
    7. ')t' → logprob: -8.63038444519043
    8. ':' → logprob: -8.88038444519043
    9. 'tar' → logprob: -10.13038444519043
    10. '(x' → logprob: -10.38038444519043

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03370217978954315
    2. ',x' → logprob: -3.6587021350860596
    3. ',y' → logprob: -5.408702373504639
    4. ',s' → logprob: -6.533702373504639
    5. ' ,' → logprob: -6.658702373504639
    6. '):' → logprob: -10.03370189666748
    7. ',n' → logprob: -11.15870189666748
    8. ',q' → logprob: -11.40870189666748
    9. ',t' → logprob: -11.53370189666748
    10. '):
' → logprob: -11.53370189666748

Token 417: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.0011709370883181691
    2. ' sy' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.376171112060547
    4. 'y' → logprob: -17.251171112060547
    5. '_sy' → logprob: -17.376171112060547
    6. 'sx' → logprob: -17.501171112060547
    7. ')' → logprob: -17.626171112060547
    8. 'sys' → logprob: -17.751171112060547
    9. '
' → logprob: -18.001171112060547
    10. ' ' → logprob: -18.251171112060547

Token 418: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869049549102783
    2. '):
' → logprob: -1.1369049549102783
    3. '):
' → logprob: -10.5119047164917
    4. '   ' → logprob: -12.6369047164917
    5. ')' → logprob: -13.6369047164917
    6. ':' → logprob: -13.8869047164917
    7. '):

' → logprob: -14.2619047164917
    8. ' ):' → logprob: -14.6369047164917
    9. '       ' → logprob: -16.136905670166016
    10. ' ):
' → logprob: -16.261905670166016

Token 419: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8435555100440979
    2. '       ' → logprob: -0.8435555100440979
    3. ' stack' → logprob: -2.218555450439453
    4. '	stack' → logprob: -3.843555450439453
    5. ' Stack' → logprob: -5.843555450439453
    6. '	   ' → logprob: -6.718555450439453
    7. '_stack' → logprob: -6.968555450439453
    8. 'stack' → logprob: -7.343555450439453
    9. '           ' → logprob: -7.343555450439453
    10. '(stack' → logprob: -7.468555450439453

Token 420: ' stack' (ID: 10825)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9926060438156128
    2. '   ' → logprob: -1.2426060438156128
    3. 'stack' (adapté à ' stack') → logprob: -1.4926060438156128
    4. ' stack' → logprob: -2.8676061630249023
    5. '       ' → logprob: -3.2426061630249023
    6. '	stack' → logprob: -4.117606163024902
    7. 'visited' → logprob: -5.742606163024902
    8. '	       ' → logprob: -8.742606163024902
    9. ' visited' → logprob: -8.742606163024902
    10. '               ' → logprob: -9.617606163024902

Token 421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6696255803108215
    2. '.append' → logprob: -0.9196255803108215
    3. '=' → logprob: -2.4196255207061768
    4. '=[]' → logprob: -7.794625759124756
    5. '=[' → logprob: -10.544625282287598
    6. '.pop' → logprob: -11.044625282287598
    7. '=[]
' → logprob: -12.044625282287598
    8. '.' → logprob: -12.919625282287598
    9. '[-' → logprob: -13.169625282287598
    10. ')' → logprob: -13.294625282287598

Token 422: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0001234428636962548
    2. ' [(' → logprob: -9.000123023986816
    3. '[((' → logprob: -19.500123977661133
    4. '[s' → logprob: -19.875123977661133
    5. ' ' → logprob: -21.375123977661133
    6. '   ' → logprob: -22.000123977661133
    7. '([(' → logprob: -22.125123977661133
    8. '[' → logprob: -22.250123977661133
    9. '[]' → logprob: -23.125123977661133
    10. '[[' → logprob: -23.500123977661133

Token 423: 'sx' (ID: 102754)
  Prédit: 'sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -5.319370302458992e-06
    2. ' sx' → logprob: -12.250005722045898
    3. 's' → logprob: -14.625005722045898
    4. ')' → logprob: -17.0000057220459
    5. ')s' → logprob: -17.8750057220459
    6. 'sz' → logprob: -18.0000057220459
    7. '(s' → logprob: -19.0000057220459
    8. 'sq' → logprob: -19.3750057220459
    9. '           ' → logprob: -19.5000057220459
    10. 'SX' → logprob: -19.5000057220459

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6405310816480778e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ',s' → logprob: -13.500016212463379
    4. ',
' → logprob: -15.375016212463379
    5. '   ' → logprob: -18.125017166137695
    6. '```' → logprob: -18.750017166137695
    7. '       ' → logprob: -19.125017166137695
    8. '           ' → logprob: -19.500017166137695
    9. '_sy' → logprob: -19.500017166137695
    10. ',y' → logprob: -19.625017166137695

Token 425: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.0007101670489646494
    2. ' sy' → logprob: -7.2507100105285645
    3. 'syz' → logprob: -16.500709533691406
    4. '_sy' → logprob: -17.250709533691406
    5. ' ' → logprob: -17.625709533691406
    6. 'Sy' → logprob: -17.750709533691406
    7. 's' → logprob: -18.125709533691406
    8. '.sy' → logprob: -18.375709533691406
    9. 'sym' → logprob: -18.625709533691406
    10. 'syn' → logprob: -19.000709533691406

Token 426: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07642102986574173
    2. ')]
' → logprob: -2.701421022415161
    3. ')' → logprob: -5.20142126083374
    4. ')
' → logprob: -7.20142126083374
    5. ']' → logprob: -8.951420783996582
    6. ']
' → logprob: -9.951420783996582
    7. ' )' → logprob: -11.576420783996582
    8. ')]

' → logprob: -12.076420783996582
    9. ',' → logprob: -12.201420783996582
    10. ')])' → logprob: -12.826420783996582

Token 427: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004466554615646601
    2. '       ' → logprob: -6.379466533660889
    3. ' while' → logprob: -6.629466533660889
    4. ' ' → logprob: -7.879466533660889
    5. '   ' → logprob: -8.254467010498047
    6. '               ' → logprob: -8.379467010498047
    7. ')' → logprob: -9.004467010498047
    8. 'while' → logprob: -9.004467010498047
    9. '            ' → logprob: -9.754467010498047
    10. '
' → logprob: -10.129467010498047

Token 428: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2641534209251404
    2. '           ' → logprob: -1.7641534805297852
    3. 'visited' (adapté à ' visited') → logprob: -3.139153480529785
    4. ' while' → logprob: -4.139153480529785
    5. '       ' → logprob: -6.764153480529785
    6. '   ' → logprob: -8.514153480529785
    7. ' visited' → logprob: -8.764153480529785
    8. '
' → logprob: -11.139153480529785
    9. 'covered' → logprob: -11.639153480529785
    10. '               ' → logprob: -11.889153480529785

Token 429: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.03440363332629204
    2. '[' → logprob: -3.4094035625457764
    3. '[n' → logprob: -8.034403800964355
    4. '[-' → logprob: -8.784403800964355
    5. '[x' → logprob: -9.034403800964355
    6. '[len' → logprob: -10.409403800964355
    7. ' [' → logprob: -10.659403800964355
    8. '[S' → logprob: -11.284403800964355
    9. '[(' → logprob: -11.284403800964355
    10. '.append' → logprob: -11.534403800964355

Token 430: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002441741817165166
    2. 'len' → logprob: -9.625244140625
    3. 'z' → logprob: -10.000244140625
    4. '[-' → logprob: -10.250244140625
    5. 'sx' → logprob: -10.625244140625
    6. 'stack' → logprob: -11.500244140625
    7. '```' → logprob: -11.500244140625
    8. '.append' → logprob: -11.625244140625
    9. 's' → logprob: -11.750244140625
    10. 'ize' → logprob: -12.000244140625

Token 431: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.780830830801278e-05
    2. '[' → logprob: -10.00008773803711
    3. ' ][' → logprob: -10.75008773803711
    4. ',' → logprob: -11.75008773803711
    5. '[s' → logprob: -12.25008773803711
    6. ')][' → logprob: -13.37508773803711
    7. '           ' → logprob: -13.37508773803711
    8. ']][' → logprob: -13.62508773803711
    9. ',s' → logprob: -14.00008773803711
    10. ']' → logprob: -14.12508773803711

Token 432: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -2.935296834039036e-06
    2. ' sy' → logprob: -12.75000286102295
    3. '_sy' → logprob: -19.375003814697266
    4. 'syz' → logprob: -19.750003814697266
    5. 'sx' → logprob: -20.125003814697266
    6. '.sy' → logprob: -21.125003814697266
    7. 'syn' → logprob: -21.500003814697266
    8. 's' → logprob: -22.500003814697266
    9. '   ' → logprob: -22.500003814697266
    10. ' ' → logprob: -22.750003814697266

Token 433: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.5649528298527e-05
    2. ']=' → logprob: -9.500075340270996
    3. ' ]' → logprob: -14.625075340270996
    4. '=' → logprob: -15.375075340270996
    5. ']
' → logprob: -18.250076293945312
    6. ' =' → logprob: -18.750076293945312
    7. '   ' → logprob: -19.375076293945312
    8. ')' → logprob: -19.875076293945312
    9. 'True' → logprob: -20.125076293945312
    10. '']' → logprob: -20.500076293945312

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740804135799408
    2. '=' → logprob: -0.9740804433822632
    3. '=True' → logprob: -13.224080085754395
    4. ']' → logprob: -14.099080085754395
    5. '=False' → logprob: -14.474080085754395
    6. ']=' → logprob: -16.34908103942871
    7. ' ' → logprob: -16.34908103942871
    8. '   ' → logprob: -16.47408103942871
    9. '[' → logprob: -17.59908103942871
    10. ')' → logprob: -17.72408103942871

Token 435: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001234428636962548
    2. ' True' → logprob: -9.000123023986816
    3. '(True' → logprob: -20.750123977661133
    4. 'False' → logprob: -21.750123977661133
    5. '1' → logprob: -22.125123977661133
    6. '=True' → logprob: -23.500123977661133
    7. '
' → logprob: -24.875123977661133
    8. '   ' → logprob: -25.500123977661133
    9. 'true' → logprob: -25.625123977661133
    10. ' ' → logprob: -25.875123977661133

Token 436: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3019550144672394
    2. '
' → logprob: -2.051954984664917
    3. ')' → logprob: -3.176954984664917
    4. ' while' → logprob: -3.676954984664917
    5. '       ' → logprob: -3.801954984664917
    6. '   ' → logprob: -3.926954984664917
    7. 'while' → logprob: -4.801955223083496
    8. '<|end|>' → logprob: -5.176955223083496
    9. ',' → logprob: -6.426955223083496
    10. '            
' → logprob: -6.926955223083496

Token 437: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6500040292739868
    2. ')' → logprob: -1.7750040292739868
    3. '<|end|>' → logprob: -2.2750039100646973
    4. '           ' → logprob: -2.6500039100646973
    5. '```' → logprob: -3.0250039100646973
    6. '   ' → logprob: -3.6500039100646973
    7. '       ' → logprob: -3.6500039100646973
    8. ' while' → logprob: -4.900003910064697
    9. ' 
' → logprob: -5.400003910064697
    10. '\n' → logprob: -5.400003910064697

Token 438: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3163880705833435
    2. ' while' → logprob: -1.3163881301879883
    3. '   ' → logprob: -5.816388130187988
    4. '           ' → logprob: -9.691388130187988
    5. '       ' → logprob: -10.316388130187988
    6. '	while' → logprob: -10.441388130187988
    7. '
' → logprob: -11.691388130187988
    8. '```' → logprob: -12.066388130187988
    9. 'While' → logprob: -13.191388130187988
    10. ' ' → logprob: -14.191388130187988

Token 439: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.011048289015889168
    2. ' stack' → logprob: -4.511048316955566
    3. '	stack' → logprob: -15.261048316955566
    4. '(stack' → logprob: -15.386048316955566
    5. 'len' → logprob: -17.51104736328125
    6. ' ' → logprob: -18.51104736328125
    7. '   ' → logprob: -19.26104736328125
    8. '
' → logprob: -20.26104736328125
    9. 'Stack' → logprob: -20.51104736328125
    10. 'st' → logprob: -21.26104736328125

Token 440: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5823246836662292
    2. ':
' → logprob: -0.8323246836662292
    3. '.pop' → logprob: -5.207324504852295
    4. '[-' → logprob: -7.207324504852295
    5. '.append' → logprob: -9.332324981689453
    6. '):
' → logprob: -10.707324981689453
    7. '```' → logprob: -11.457324981689453
    8. 'pop' → logprob: -12.207324981689453
    9. '):' → logprob: -13.082324981689453
    10. '   ' → logprob: -13.082324981689453

Token 441: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07349219173192978
    2. 'x' → logprob: -2.9484922885894775
    3. ' x' → logprob: -4.198492050170898
    4. '   ' → logprob: -7.198492050170898
    5. '                   ' → logprob: -7.573492050170898
    6. '           ' → logprob: -7.698492050170898
    7. ',' → logprob: -7.948492050170898
    8. '(x' → logprob: -8.198492050170898
    9. ' (' → logprob: -8.698492050170898
    10. '       ' → logprob: -8.823492050170898

Token 442: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.008621904999017715
    2. ' x' → logprob: -4.758621692657471
    3. '                   ' → logprob: -11.883622169494629
    4. '	x' → logprob: -14.758622169494629
    5. '               ' → logprob: -17.758621215820312
    6. '   ' → logprob: -18.508621215820312
    7. '"x' → logprob: -18.633621215820312
    8. 'cx' → logprob: -18.633621215820312
    9. ''x' → logprob: -18.633621215820312
    10. '(x' → logprob: -18.758621215820312

Token 443: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017863049288280308
    2. ',y' → logprob: -9.125178337097168
    3. ',s' → logprob: -10.375178337097168
    4. ' ,' → logprob: -11.500178337097168
    5. 'stack' → logprob: -11.625178337097168
    6. ',x' → logprob: -12.125178337097168
    7. '_,' → logprob: -12.250178337097168
    8. ',
' → logprob: -13.375178337097168
    9. '(stack' → logprob: -13.500178337097168
    10. '_stack' → logprob: -13.875178337097168

Token 444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759867429733276
    2. ' =' → logprob: -0.8259867429733276
    3. ')' → logprob: -10.075986862182617
    4. '(stack' → logprob: -13.325986862182617
    5. ')=' → logprob: -13.700986862182617
    6. ',' → logprob: -14.825986862182617
    7. 'stack' → logprob: -15.075986862182617
    8. ' stack' → logprob: -15.325986862182617
    9. '   ' → logprob: -15.450986862182617
    10. '=
' → logprob: -15.450986862182617

Token 445: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3868727385997772
    2. ' stack' → logprob: -1.1368727684020996
    3. '	stack' → logprob: -13.761872291564941
    4. '(stack' → logprob: -14.511872291564941
    5. ' ' → logprob: -16.761873245239258
    6. '.stack' → logprob: -17.511873245239258
    7. 'Stack' → logprob: -17.511873245239258
    8. '   ' → logprob: -17.886873245239258
    9. '_stack' → logprob: -17.886873245239258
    10. 'st' → logprob: -18.136873245239258

Token 446: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0001544321421533823
    2. '[-' → logprob: -9.500154495239258
    3. 'pop' → logprob: -9.625154495239258
    4. ',' → logprob: -11.500154495239258
    5. ' =' → logprob: -14.000154495239258
    6. '.append' → logprob: -14.500154495239258
    7. '=' → logprob: -14.750154495239258
    8. 'Pop' → logprob: -15.000154495239258
    9. '   ' → logprob: -15.000154495239258
    10. ' pop' → logprob: -15.875154495239258

Token 447: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3655141592025757
    2. '                   ' → logprob: -1.4905141592025757
    3. '
' → logprob: -2.9905142784118652
    4. ')' → logprob: -4.865514278411865
    5. '           ' → logprob: -5.115514278411865
    6. ')
' → logprob: -5.365514278411865
    7. '                
' → logprob: -6.115514278411865
    8. '                    
' → logprob: -6.115514278411865
    9. '                       ' → logprob: -6.240514278411865
    10. '                ' → logprob: -6.740514278411865

Token 448: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005668530357070267
    2. '                   ' → logprob: -8.250566482543945
    3. '           ' → logprob: -9.000566482543945
    4. ' for' → logprob: -9.125566482543945
    5. '                
' → logprob: -10.375566482543945
    6. '
' → logprob: -11.625566482543945
    7. 'for' → logprob: -11.875566482543945
    8. '                ' → logprob: -12.000566482543945
    9. '<|end|>' → logprob: -12.125566482543945
    10. '       ' → logprob: -12.625566482543945

Token 449: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13238133490085602
    2. ' for' → logprob: -2.1323814392089844
    3. '               ' → logprob: -5.257381439208984
    4. '                   ' → logprob: -8.632381439208984
    5. '```' → logprob: -10.382381439208984
    6. '           ' → logprob: -11.882381439208984
    7. '                ' → logprob: -12.132381439208984
    8. 'if' → logprob: -12.632381439208984
    9. '	for' → logprob: -13.382381439208984
    10. '
' → logprob: -13.882381439208984

Token 450: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00040695868665352464
    2. '(nx' → logprob: -8.500407218933105
    3. ' nx' → logprob: -8.500407218933105
    4. 'n' → logprob: -19.00040626525879
    5. '```' → logprob: -19.37540626525879
    6. '(n' → logprob: -19.50040626525879
    7. '   ' → logprob: -20.25040626525879
    8. '`' → logprob: -20.75040626525879
    9. 'xn' → logprob: -21.00040626525879
    10. '
' → logprob: -21.37540626525879

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ',n' → logprob: -13.000003814697266
    3. ' ,' → logprob: -13.375003814697266
    4. ',y' → logprob: -16.500003814697266
    5. ',
' → logprob: -17.250003814697266
    6. '_,' → logprob: -18.000003814697266
    7. 'ny' → logprob: -18.500003814697266
    8. '```' → logprob: -19.875003814697266
    9. ',new' → logprob: -20.125003814697266
    10. ',int' → logprob: -20.375003814697266

Token 452: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00016194197814911604
    2. ' ny' → logprob: -8.750162124633789
    3. ',' → logprob: -12.625162124633789
    4. 'n' → logprob: -15.500162124633789
    5. 'Ny' → logprob: -17.75016212463379
    6. 'nyi' → logprob: -17.87516212463379
    7. 'dy' → logprob: -18.12516212463379
    8. 'y' → logprob: -18.25016212463379
    9. ',y' → logprob: -19.37516212463379
    10. '
' → logprob: -19.37516212463379

Token 453: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06993832439184189
    2. 'in' → logprob: -2.6949384212493896
    3. '	in' → logprob: -13.444938659667969
    4. ',' → logprob: -15.944938659667969
    5. ' ' → logprob: -16.06993865966797
    6. 'In' → logprob: -16.31993865966797
    7. ')' → logprob: -16.69493865966797
    8. '```' → logprob: -17.19493865966797
    9. ',in' → logprob: -17.44493865966797
    10. '                   ' → logprob: -17.56993865966797

Token 454: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0024758970830589533
    2. ' neighbors' → logprob: -6.002475738525391
    3. 'neighbor' → logprob: -15.75247573852539
    4. '_neighbors' → logprob: -16.25247573852539
    5. 'ne' → logprob: -17.50247573852539
    6. '```' → logprob: -17.62747573852539
    7. 'Neighbors' → logprob: -18.12747573852539
    8. '
' → logprob: -19.12747573852539
    9. ' ' → logprob: -19.25247573852539
    10. ' neighbours' → logprob: -19.75247573852539

Token 455: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.925185440806672e-05
    2. '(' → logprob: -9.250099182128906
    3. ' (' → logprob: -12.875099182128906
    4. '(
' → logprob: -15.500099182128906
    5. 'x' → logprob: -15.625099182128906
    6. ')(' → logprob: -17.500099182128906
    7. '
' → logprob: -17.750099182128906
    8. ',x' → logprob: -18.125099182128906
    9. '(s' → logprob: -18.250099182128906
    10. '(n' → logprob: -18.375099182128906

Token 456: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0031947086099535227
    2. ',' → logprob: -5.753194808959961
    3. ' ,' → logprob: -11.003194808959961
    4. ',
' → logprob: -16.00319480895996
    5. 'y' → logprob: -16.12819480895996
    6. ',n' → logprob: -16.37819480895996
    7. ',x' → logprob: -18.12819480895996
    8. '
' → logprob: -19.00319480895996
    9. ';y' → logprob: -19.37819480895996
    10. '```' → logprob: -19.50319480895996

Token 457: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002353287534788251
    2. '                   ' → logprob: -6.252353191375732
    3. '):' → logprob: -8.37735366821289
    4. '               ' → logprob: -9.25235366821289
    5. '):
' → logprob: -10.12735366821289
    6. ':
' → logprob: -10.37735366821289
    7. '                       ' → logprob: -10.75235366821289
    8. '):

' → logprob: -13.50235366821289
    9. ':' → logprob: -13.75235366821289
    10. '():
' → logprob: -13.87735366821289

Token 458: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005170515505596995
    2. '               ' → logprob: -8.125516891479492
    3. 'if' → logprob: -8.875516891479492
    4. ' if' → logprob: -10.625516891479492
    5. '                       ' → logprob: -10.750516891479492
    6. '                    
' → logprob: -12.125516891479492
    7. '           ' → logprob: -12.125516891479492
    8. '                  ' → logprob: -12.500516891479492
    9. '                ' → logprob: -12.625516891479492
    10. '                 ' → logprob: -12.875516891479492

Token 459: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.41416335105895996
    2. '                       ' → logprob: -1.16416335105896
    3. ' if' → logprob: -3.66416335105896
    4. '                   ' → logprob: -6.789163589477539
    5. '       ' → logprob: -9.789163589477539
    6. '```' → logprob: -10.539163589477539
    7. '               ' → logprob: -10.789163589477539
    8. '	if' → logprob: -11.289163589477539
    9. '   ' → logprob: -11.664163589477539
    10. '                     ' → logprob: -11.789163589477539

Token 460: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12702752649784088
    2. ' not' → logprob: -2.1270275115966797
    3. '(not' → logprob: -10.50202751159668
    4. 'covered' → logprob: -10.62702751159668
    5. '0' → logprob: -10.75202751159668
    6. '   ' → logprob: -11.25202751159668
    7. '	not' → logprob: -12.00202751159668
    8. ' ' → logprob: -13.50202751159668
    9. '!' → logprob: -13.50202751159668
    10. ' covered' → logprob: -13.62702751159668

Token 461: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.16535033285617828
    2. 'covered' → logprob: -1.915350317955017
    3. ' visited' → logprob: -5.665350437164307
    4. ' covered' → logprob: -6.415350437164307
    5. 'occupied' → logprob: -12.915349960327148
    6. '   ' → logprob: -13.040349960327148
    7. '-covered' → logprob: -13.165349960327148
    8. 'cover' → logprob: -13.665349960327148
    9. 'visible' → logprob: -13.665349960327148
    10. 'blocked' → logprob: -14.040349960327148

Token 462: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.991464786347933e-05
    2. '(nx' → logprob: -10.250060081481934
    3. ' [' → logprob: -11.375060081481934
    4. '```' → logprob: -12.375060081481934
    5. '
' → logprob: -13.250060081481934
    6. '[' → logprob: -13.500060081481934
    7. 'nx' → logprob: -13.750060081481934
    8. '   ' → logprob: -14.125060081481934
    9. '][' → logprob: -14.125060081481934
    10. ')[' → logprob: -14.500060081481934

Token 463: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.27099974633893e-05
    2. '[' → logprob: -12.250012397766113
    3. '[n' → logprob: -12.250012397766113
    4. '[x' → logprob: -13.000012397766113
    5. 'nx' → logprob: -14.875012397766113
    6. '][' → logprob: -15.875012397766113
    7. '(nx' → logprob: -15.875012397766113
    8. '```' → logprob: -16.50001335144043
    9. ' nx' → logprob: -16.87501335144043
    10. '           ' → logprob: -17.25001335144043

Token 464: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3487730324268341
    2. '[n' → logprob: -1.2237730026245117
    3. ' ][' → logprob: -8.598773002624512
    4. '
' → logprob: -10.473773002624512
    5. '"][' → logprob: -10.473773002624512
    6. '   ' → logprob: -10.723773002624512
    7. '[' → logprob: -11.098773002624512
    8. ''][' → logprob: -11.848773002624512
    9. '(nx' → logprob: -11.848773002624512
    10. ']' → logprob: -11.973773002624512

Token 465: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.700132997939363e-05
    2. ' ny' → logprob: -11.250017166137695
    3. 'y' → logprob: -12.875017166137695
    4. 'nx' → logprob: -13.625017166137695
    5. '
' → logprob: -17.125017166137695
    6. 'yn' → logprob: -17.250017166137695
    7. 'nyi' → logprob: -17.375017166137695
    8. '[' → logprob: -18.375017166137695
    9. '```' → logprob: -18.500017166137695
    10. 'n' → logprob: -18.500017166137695

Token 466: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030319396406412125
    2. 'and' → logprob: -3.5303194522857666
    3. ')' → logprob: -7.9053192138671875
    4. ']' → logprob: -8.530319213867188
    5. ' ' → logprob: -13.905319213867188
    6. ' )' → logprob: -14.030319213867188
    7. ' ]' → logprob: -15.530319213867188
    8. '	and' → logprob: -15.780319213867188
    9. '）' → logprob: -16.030319213867188
    10. '                   ' → logprob: -16.030319213867188

Token 467: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692831456661224
    2. 'and' → logprob: -2.1269283294677734
    3. '	and' → logprob: -16.126928329467773
    4. ' ' → logprob: -17.001928329467773
    5. '               ' → logprob: -17.876928329467773
    6. '                   ' → logprob: -18.251928329467773
    7. '   ' → logprob: -18.251928329467773
    8. '           ' → logprob: -18.376928329467773
    9. ')' → logprob: -19.501928329467773
    10. '    ' → logprob: -19.501928329467773

Token 468: ' covered' (ID: 13083)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.018168438225984573
    2. ' not' → logprob: -4.0181684494018555
    3. '(not' → logprob: -12.018168449401855
    4. 'covered' → logprob: -12.143168449401855
    5. '   ' → logprob: -12.268168449401855
    6. '               ' → logprob: -14.143168449401855
    7. '!' → logprob: -14.268168449401855
    8. '                   ' → logprob: -15.018168449401855
    9. '
' → logprob: -15.393168449401855
    10. ' covered' → logprob: -15.643168449401855

Token 469: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.62500286102295
    3. ')[' → logprob: -14.87500286102295
    4. '```' → logprob: -15.62500286102295
    5. '[
' → logprob: -16.125001907348633
    6. '[x' → logprob: -16.375001907348633
    7. ' [' → logprob: -16.375001907348633
    8. '][' → logprob: -16.375001907348633
    9. 'nx' → logprob: -16.500001907348633
    10. 'n' → logprob: -17.000001907348633

Token 470: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8624639324116288e-06
    2. '[x' → logprob: -13.625001907348633
    3. '][' → logprob: -14.500001907348633
    4. '[n' → logprob: -16.000001907348633
    5. '```' → logprob: -17.625001907348633
    6. 'nx' → logprob: -18.000001907348633
    7. '[' → logprob: -18.500001907348633
    8. ']' → logprob: -19.000001907348633
    9. ''x' → logprob: -19.375001907348633
    10. '	x' → logprob: -20.125001907348633

Token 471: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01888834498822689
    2. '[n' → logprob: -4.018888473510742
    3. ']' → logprob: -8.143888473510742
    4. ']==' → logprob: -8.268888473510742
    5. ' ][' → logprob: -9.143888473510742
    6. '(nx' → logprob: -10.768888473510742
    7. 'nx' → logprob: -11.393888473510742
    8. '"][' → logprob: -11.643888473510742
    9. '==' → logprob: -11.643888473510742
    10. ''][' → logprob: -12.143888473510742

Token 472: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -6.32523515378125e-05
    2. '[' → logprob: -10.125062942504883
    3. 'False' → logprob: -11.125062942504883
    4. ' ny' → logprob: -12.625062942504883
    5. 'nj' → logprob: -13.625062942504883
    6. 'not' → logprob: -13.750062942504883
    7. ']' → logprob: -14.125062942504883
    8. '```' → logprob: -14.500062942504883
    9. 'nx' → logprob: -14.500062942504883
    10. 'y' → logprob: -15.500062942504883

Token 473: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.16123300790786743
    2. ']' → logprob: -1.9112329483032227
    3. ']:' → logprob: -7.661232948303223
    4. '==' → logprob: -8.411232948303223
    5. ']:
' → logprob: -8.411232948303223
    6. ' ]' → logprob: -9.786232948303223
    7. '']==' → logprob: -10.661232948303223
    8. ']!=' → logprob: -12.411232948303223
    9. ']<' → logprob: -13.286232948303223
    10. ']:

' → logprob: -13.786232948303223

Token 474: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.030774295330047607
    2. ' ==' → logprob: -3.5307743549346924
    3. ']==' → logprob: -7.655774116516113
    4. ':' → logprob: -8.530774116516113
    5. ')==' → logprob: -8.905774116516113
    6. ' is' → logprob: -9.405774116516113
    7. '=False' → logprob: -9.655774116516113
    8. ':
' → logprob: -10.530774116516113
    9. ')' → logprob: -10.655774116516113
    10. '):
' → logprob: -12.655774116516113

Token 475: ' covered' (ID: 13083)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.5491004129871726e-05
    2. ' False' → logprob: -10.000045776367188
    3. '=False' → logprob: -18.125045776367188
    4. '(False' → logprob: -18.125045776367188
    5. '0' → logprob: -20.500045776367188
    6. '_false' → logprob: -21.125045776367188
    7. '.False' → logprob: -21.250045776367188
    8. 'True' → logprob: -21.375045776367188
    9. '   ' → logprob: -22.375045776367188
    10. 'FALSE' → logprob: -22.625045776367188

Token 476: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.030227797105908394
    2. 'x' → logprob: -3.9052278995513916
    3. '[s' → logprob: -4.6552276611328125
    4. '[n' → logprob: -9.655227661132812
    5. '[' → logprob: -10.905227661132812
    6. '```' → logprob: -10.905227661132812
    7. 'nx' → logprob: -12.030227661132812
    8. '0' → logprob: -12.155227661132812
    9. '(x' → logprob: -12.405227661132812
    10. '   ' → logprob: -13.155227661132812

Token 477: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.15310683415737e-05
    2. ' ][' → logprob: -11.875021934509277
    3. '[n' → logprob: -12.250021934509277
    4. ']' → logprob: -12.500021934509277
    5. '[x' → logprob: -12.500021934509277
    6. '[' → logprob: -14.750021934509277
    7. '"][' → logprob: -14.875021934509277
    8. '   ' → logprob: -14.875021934509277
    9. ']][' → logprob: -15.000021934509277
    10. '[y' → logprob: -15.500021934509277

Token 478: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.694766489090398e-05
    2. ' y' → logprob: -9.625066757202148
    3. 'x' → logprob: -15.250066757202148
    4. ',y' → logprob: -16.00006675720215
    5. '   ' → logprob: -16.00006675720215
    6. '	y' → logprob: -16.12506675720215
    7. ' ' → logprob: -16.12506675720215
    8. '[y' → logprob: -17.50006675720215
    9. '    ' → logprob: -17.87506675720215
    10. '```' → logprob: -18.12506675720215

Token 479: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.007199801038950682
    2. ']:' → logprob: -5.257199764251709
    3. ']' → logprob: -7.132199764251709
    4. ']==' → logprob: -7.257199764251709
    5. ']:
' → logprob: -9.007200241088867
    6. ':
' → logprob: -9.132200241088867
    7. ']:

' → logprob: -9.757200241088867
    8. '):
' → logprob: -10.007200241088867
    9. ':' → logprob: -10.632200241088867
    10. ']]:
' → logprob: -10.757200241088867

Token 480: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000938854762353003
    2. '                   ' → logprob: -8.375938415527344
    3. '                           ' → logprob: -8.375938415527344
    4. ' and' → logprob: -8.750938415527344
    5. ':' → logprob: -8.875938415527344
    6. ':
' → logprob: -10.125938415527344
    7. '                               ' → logprob: -10.625938415527344
    8. '                        
' → logprob: -10.625938415527344
    9. '                        ' → logprob: -10.875938415527344
    10. '```' → logprob: -11.125938415527344

Token 481: ' visited' (ID: 18416)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0966646745800972
    2. 'visited' (adapté à ' visited') → logprob: -2.8466646671295166
    3. 'stack' → logprob: -4.096664905548096
    4. ' visited' → logprob: -4.971664905548096
    5. '                               ' → logprob: -5.346664905548096
    6. ' stack' → logprob: -5.346664905548096
    7. '                       ' → logprob: -7.471664905548096
    8. '   ' → logprob: -8.471664428710938
    9. '                   ' → logprob: -9.096664428710938
    10. '           ' → logprob: -10.221664428710938

Token 482: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.125006675720215
    3. '```' → logprob: -14.500006675720215
    4. ' [' → logprob: -14.750006675720215
    5. '(nx' → logprob: -16.87500762939453
    6. '   ' → logprob: -16.87500762939453
    7. '
' → logprob: -17.37500762939453
    8. '[
' → logprob: -17.37500762939453
    9. '       ' → logprob: -17.50000762939453
    10. '[[' → logprob: -17.62500762939453

Token 483: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.4153549020411447e-05
    2. '[n' → logprob: -10.75002384185791
    3. '[x' → logprob: -13.12502384185791
    4. 'nx' → logprob: -14.75002384185791
    5. '[' → logprob: -15.62502384185791
    6. '(nx' → logprob: -16.375024795532227
    7. 'w' → logprob: -17.500024795532227
    8. 'xn' → logprob: -17.875024795532227
    9. ' nx' → logprob: -17.875024795532227
    10. 'xs' → logprob: -18.125024795532227

Token 484: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.023654093965888023
    2. '[n' → logprob: -3.773653984069824
    3. '[' → logprob: -8.523653984069824
    4. ' ][' → logprob: -9.648653984069824
    5. '"][' → logprob: -10.148653984069824
    6. ''][' → logprob: -11.023653984069824
    7. '                   ' → logprob: -11.148653984069824
    8. '       ' → logprob: -11.648653984069824
    9. '                       ' → logprob: -11.648653984069824
    10. ']' → logprob: -11.648653984069824

Token 485: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.06327607482671738
    2. 'nx' → logprob: -2.9382760524749756
    3. '[' → logprob: -5.438276290893555
    4. '[n' → logprob: -5.563276290893555
    5. '
' → logprob: -9.563276290893555
    6. '(nx' → logprob: -9.938276290893555
    7. ' ny' → logprob: -11.438276290893555
    8. 'y' → logprob: -11.688276290893555
    9. 'n' → logprob: -12.063276290893555
    10. '   ' → logprob: -12.563276290893555

Token 486: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.056105658411979675
    2. ' =' → logprob: -3.306105613708496
    3. ']' → logprob: -4.056105613708496
    4. ']=' → logprob: -7.556105613708496
    5. '=True' → logprob: -9.931105613708496
    6. ')' → logprob: -11.306105613708496
    7. ' ]' → logprob: -14.306105613708496
    8. ')=' → logprob: -14.556105613708496
    9. 'True' → logprob: -15.556105613708496
    10. '=False' → logprob: -15.806105613708496

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805159032344818
    2. ' =' → logprob: -3.2880516052246094
    3. '=True' → logprob: -11.53805160522461
    4. ']=' → logprob: -15.53805160522461
    5. ']' → logprob: -15.66305160522461
    6. '=False' → logprob: -17.16305160522461
    7. '           ' → logprob: -17.28805160522461
    8. '=
' → logprob: -17.28805160522461
    9. ',' → logprob: -17.66305160522461
    10. '[' → logprob: -18.03805160522461

Token 488: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.842555426876061e-06
    2. ' True' → logprob: -12.250004768371582
    3. '(True' → logprob: -19.1250057220459
    4. '=True' → logprob: -22.3750057220459
    5. 'true' → logprob: -24.2500057220459
    6. 'False' → logprob: -24.5000057220459
    7. '[' → logprob: -24.6250057220459
    8. '1' → logprob: -25.1250057220459
    9. 'Tr' → logprob: -25.2500057220459
    10. '
' → logprob: -25.2500057220459

Token 489: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005669949110597372
    2. '                           ' → logprob: -5.380670070648193
    3. '                   ' → logprob: -7.755670070648193
    4. ' stack' → logprob: -8.505669593811035
    5. '                               ' → logprob: -8.755669593811035
    6. 'stack' → logprob: -9.880669593811035
    7. '               ' → logprob: -10.005669593811035
    8. ',' → logprob: -10.005669593811035
    9. '           ' → logprob: -11.005669593811035
    10. '(stack' → logprob: -11.005669593811035

Token 490: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5331659317016602
    2. '                       ' → logprob: -0.9081659317016602
    3. '                           ' → logprob: -5.15816593170166
    4. ' stack' → logprob: -7.40816593170166
    5. '```' → logprob: -7.40816593170166
    6. '               ' → logprob: -7.53316593170166
    7. 'stack' → logprob: -7.78316593170166
    8. '					' → logprob: -7.90816593170166
    9. '				' → logprob: -8.03316593170166
    10. '                    ' → logprob: -8.78316593170166

Token 491: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -1.306760805164231e-05
    2. ' stack' → logprob: -11.25001335144043
    3. '	stack' → logprob: -20.75001335144043
    4. '                       ' → logprob: -20.87501335144043
    5. '(stack' → logprob: -21.25001335144043
    6. '                           ' → logprob: -21.50001335144043
    7. 'stackoverflow' → logprob: -21.62501335144043
    8. '```' → logprob: -22.00001335144043
    9. '.stack' → logprob: -22.12501335144043
    10. '_stack' → logprob: -22.87501335144043

Token 492: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -13.750001907348633
    3. '.extend' → logprob: -15.125001907348633
    4. '.push' → logprob: -17.375001907348633
    5. 'append' → logprob: -17.500001907348633
    6. '.app' → logprob: -17.875001907348633
    7. '.Append' → logprob: -18.875001907348633
    8. '.add' → logprob: -20.375001907348633
    9. '.pop' → logprob: -20.375001907348633
    10. 'Append' → logprob: -20.625001907348633

Token 493: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00015860427811276168
    2. '(' → logprob: -8.750158309936523
    3. '(nx' → logprob: -16.750158309936523
    4. '(n' → logprob: -17.875158309936523
    5. '(((' → logprob: -18.250158309936523
    6. '(
' → logprob: -19.375158309936523
    7. ' ((' → logprob: -19.500158309936523
    8. '([' → logprob: -21.250158309936523
    9. '[(' → logprob: -21.625158309936523
    10. '(('' → logprob: -22.500158309936523

Token 494: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -1.1398757123970427e-05
    2. '(nx' → logprob: -11.500011444091797
    3. ' nx' → logprob: -13.625011444091797
    4. '   ' → logprob: -18.125011444091797
    5. 'n' → logprob: -18.250011444091797
    6. '
' → logprob: -18.625011444091797
    7. '```' → logprob: -19.375011444091797
    8. 'ny' → logprob: -19.625011444091797
    9. '                   ' → logprob: -20.000011444091797
    10. 'nv' → logprob: -20.875011444091797

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002997120900545269
    2. '[' → logprob: -8.375299453735352
    3. '+' → logprob: -10.250299453735352
    4. ',n' → logprob: -11.500299453735352
    5. '[n' → logprob: -12.375299453735352
    6. ',y' → logprob: -12.750299453735352
    7. 'n' → logprob: -13.000299453735352
    8. ' ,' → logprob: -13.125299453735352
    9. '```' → logprob: -13.625299453735352
    10. 'x' → logprob: -13.750299453735352

Token 496: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -2.339278580620885e-06
    2. ' ny' → logprob: -13.000001907348633
    3. 'nyi' → logprob: -17.125001907348633
    4. 'nyt' → logprob: -19.750001907348633
    5. ''ny' → logprob: -20.000001907348633
    6. 'n' → logprob: -20.125001907348633
    7. 'nye' → logprob: -20.125001907348633
    8. '
' → logprob: -20.125001907348633
    9. ')' → logprob: -20.250001907348633
    10. 'y' → logprob: -20.375001907348633

Token 497: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -8.077528764260933e-05
    2. '))
' → logprob: -9.625081062316895
    3. ')' → logprob: -11.375081062316895
    4. '                   ' → logprob: -13.750081062316895
    5. ')))' → logprob: -13.750081062316895
    6. '                       ' → logprob: -14.250081062316895
    7. ' ))' → logprob: -15.625081062316895
    8. '               ' → logprob: -16.250080108642578
    9. '           ' → logprob: -17.125080108642578
    10. '()))' → logprob: -17.250080108642578

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001741104875691235
    2. 'count' → logprob: -7.1267409324646
    3. '
' → logprob: -7.8767409324646
    4. '   ' → logprob: -8.751741409301758
    5. '        
' → logprob: -8.751741409301758
    6. '```' → logprob: -9.501741409301758
    7. 'coverage' → logprob: -10.501741409301758
    8. 'result' → logprob: -10.501741409301758
    9. '<|end|>' → logprob: -11.251741409301758
    10. 'counter' → logprob: -11.376741409301758

Token 499: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' (adapté à ' regions') → logprob: -0.4620465040206909
    2. 'outside' → logprob: -1.962046504020691
    3. 'count' → logprob: -2.4620466232299805
    4. 'region' → logprob: -3.3370466232299805
    5. 'components' → logprob: -3.5870466232299805
    6. 'ans' → logprob: -4.0870466232299805
    7. 'result' → logprob: -4.2120466232299805
    8. 'answer' → logprob: -4.4620466232299805
    9. 'cnt' → logprob: -4.4620466232299805
    10. 'res' → logprob: -4.8370466232299805

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02333422750234604
    2. '=' → logprob: -3.773334264755249
    3. '_count' → logprob: -9.648334503173828
    4. '_' → logprob: -11.398334503173828
    5. 'count' → logprob: -12.023334503173828
    6. ' ' → logprob: -13.523334503173828
    7. ' +=' → logprob: -13.648334503173828
    8. ',' → logprob: -14.273334503173828
    9. '(' → logprob: -14.898334503173828
    10. '_num' → logprob: -15.023334503173828

Token 501: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5269004702568054
    2. '1' → logprob: -0.9019004702568054
    3. '2' → logprob: -5.651900291442871
    4. ' ' → logprob: -8.276900291442871
    5. '   ' → logprob: -13.651900291442871
    6. '-' → logprob: -13.901900291442871
    7. '(' → logprob: -14.026900291442871
    8. '[' → logprob: -14.151900291442871
    9. '  ' → logprob: -15.464400291442871
    10. 'int' → logprob: -15.589400291442871

Token 502: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10072147846221924
    2. '1' → logprob: -2.3507213592529297
    3. '2' → logprob: -7.60072135925293
    4. ' ' → logprob: -11.35072135925293
    5. '-' → logprob: -14.10072135925293
    6. '[' → logprob: -14.60072135925293
    7. '   ' → logprob: -15.03822135925293
    8. '[]' → logprob: -15.22572135925293
    9. '(' → logprob: -15.85072135925293
    10. 'int' → logprob: -15.85072135925293

Token 503: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12474898248910904
    2. ' for' → logprob: -2.624748945236206
    3. 'for' → logprob: -3.124748945236206
    4. '
' → logprob: -7.124749183654785
    5. '        
' → logprob: -10.249749183654785
    6. '<|end|>' → logprob: -10.874749183654785
    7. '```' → logprob: -12.249749183654785
    8. '	for' → logprob: -12.499749183654785
    9. '  
' → logprob: -13.249749183654785
    10. '   ' → logprob: -13.624749183654785

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028458409011363983
    2. 'for' → logprob: -3.6534583568573
    3. ' for' → logprob: -6.153458595275879
    4. '        
' → logprob: -11.278458595275879
    5. '```' → logprob: -11.903458595275879
    6. '
' → logprob: -12.153458595275879
    7. '   ' → logprob: -13.403458595275879
    8. '	for' → logprob: -13.403458595275879
    9. '<|end|>' → logprob: -13.528458595275879
    10. '``' → logprob: -16.153457641601562

Token 505: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.176947600673884e-05
    2. ' for' → logprob: -10.750021934509277
    3. '       ' → logprob: -15.375021934509277
    4. '	for' → logprob: -19.12502098083496
    5. '        
' → logprob: -20.62502098083496
    6. '```' → logprob: -21.37502098083496
    7. '   ' → logprob: -21.62502098083496
    8. '
' → logprob: -21.87502098083496
    9. 'from' → logprob: -23.25002098083496
    10. '#' → logprob: -23.25002098083496

Token 506: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.034084875136613846
    2. ' i' → logprob: -3.7840847969055176
    3. 'x' → logprob: -4.534084796905518
    4. ' x' → logprob: -10.034085273742676
    5. '   ' → logprob: -15.659085273742676
    6. '	i' → logprob: -16.15908432006836
    7. ' ' → logprob: -17.53408432006836
    8. '```' → logprob: -18.03408432006836
    9. '_i' → logprob: -19.40908432006836
    10. 'j' → logprob: -19.53408432006836

Token 507: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805365785956383
    2. 'in' → logprob: -3.2880537509918213
    3. ' ' → logprob: -12.413053512573242
    4. ',' → logprob: -13.288053512573242
    5. '	in' → logprob: -13.538053512573242
    6. 'In' → logprob: -14.163053512573242
    7. ')' → logprob: -14.288053512573242
    8. 'range' → logprob: -14.288053512573242
    9. '   ' → logprob: -14.288053512573242
    10. 'n' → logprob: -14.913053512573242

Token 508: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -19.125059127807617
    4. '   ' → logprob: -20.625059127807617
    5. ' ' → logprob: -20.875059127807617
    6. '	range' → logprob: -22.750059127807617
    7. '  ' → logprob: -23.125059127807617
    8. ')' → logprob: -23.125059127807617
    9. 'rang' → logprob: -24.500059127807617
    10. '.range' → logprob: -24.625059127807617

Token 509: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0001242772996192798
    2. 'w' → logprob: -9.000123977661133
    3. '(' → logprob: -14.750123977661133
    4. '	w' → logprob: -15.625123977661133
    5. '(len' → logprob: -16.250123977661133
    6. ' (' → logprob: -16.875123977661133
    7. ' w' → logprob: -17.125123977661133
    8. ',w' → logprob: -17.250123977661133
    9. '=w' → logprob: -18.125123977661133
    10. '   ' → logprob: -18.125123977661133

Token 510: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.47495681833243e-05
    2. ' -' → logprob: -10.625024795532227
    3. '1' → logprob: -14.875024795532227
    4. ')' → logprob: -17.125024795532227
    5. '   ' → logprob: -17.500024795532227
    6. '):
' → logprob: -17.625024795532227
    7. '       ' → logprob: -19.500024795532227
    8. '−' → logprob: -19.500024795532227
    9. '```' → logprob: -19.875024795532227
    10. ')-' → logprob: -19.875024795532227

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -16.25
    4. '   ' → logprob: -16.875
    5. '-' → logprob: -17.5
    6. ')' → logprob: -18.625
    7. '
' → logprob: -19.125
    8. '       ' → logprob: -19.75
    9. '' → logprob: -20.25
    10. '१' → logprob: -20.4375

Token 512: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003656722605228424
    2. '):' → logprob: -5.62865686416626
    3. '):
' → logprob: -10.753656387329102
    4. '   ' → logprob: -11.253656387329102
    5. '       ' → logprob: -11.378656387329102
    6. ':' → logprob: -12.378656387329102
    7. ':
' → logprob: -12.503656387329102
    8. ')' → logprob: -14.003656387329102
    9. ',' → logprob: -14.878656387329102
    10. '           ' → logprob: -14.878656387329102

Token 513: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5991202592849731
    2. '       ' → logprob: -1.2241202592849731
    3. '           ' → logprob: -1.9741202592849731
    4. '   ' → logprob: -4.849120140075684
    5. 'for' → logprob: -4.849120140075684
    6. '```' → logprob: -6.974120140075684
    7. '<|end|>' → logprob: -7.474120140075684
    8. ' ' → logprob: -7.974120140075684
    9. '	for' → logprob: -9.349120140075684
    10. '	       ' → logprob: -9.974120140075684

Token 514: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10024948418140411
    2. ' for' → logprob: -2.3502495288848877
    3. '   ' → logprob: -10.225249290466309
    4. '       ' → logprob: -12.100249290466309
    5. '	for' → logprob: -14.225249290466309
    6. '           ' → logprob: -15.475249290466309
    7. ' ' → logprob: -16.225250244140625
    8. '```' → logprob: -17.225250244140625
    9. '    ' → logprob: -18.850250244140625
    10. '  ' → logprob: -18.850250244140625

Token 515: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002613358374219388
    2. ' j' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.250261306762695
    4. '	j' → logprob: -20.500261306762695
    5. '$j' → logprob: -20.625261306762695
    6. '       ' → logprob: -21.625261306762695
    7. '[j' → logprob: -22.375261306762695
    8. '           ' → logprob: -22.375261306762695
    9. '    ' → logprob: -23.000261306762695
    10. 'y' → logprob: -23.375261306762695

Token 516: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038046084344387054
    2. 'in' → logprob: -3.28804612159729
    3. '(' → logprob: -12.913045883178711
    4. ' ' → logprob: -14.538045883178711
    5. '=' → logprob: -15.163045883178711
    6. '	in' → logprob: -15.413045883178711
    7. ' (' → logprob: -15.538045883178711
    8. ')' → logprob: -15.913045883178711
    9. '(in' → logprob: -16.16304588317871
    10. '           ' → logprob: -16.41304588317871

Token 517: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889717072248459
    2. ' range' → logprob: -2.57889723777771
    3. '(range' → logprob: -12.203897476196289
    4. '(h' → logprob: -13.203897476196289
    5. 'h' → logprob: -15.078897476196289
    6. ' h' → logprob: -15.953897476196289
    7. '   ' → logprob: -17.70389747619629
    8. '(' → logprob: -17.70389747619629
    9. '[h' → logprob: -18.07889747619629
    10. ' in' → logprob: -18.07889747619629

Token 518: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0004529566504061222
    2. 'h' → logprob: -7.875452995300293
    3. ' (' → logprob: -9.750452995300293
    4. ' h' → logprob: -12.750452995300293
    5. '           ' → logprob: -12.750452995300293
    6. '       ' → logprob: -13.000452995300293
    7. '0' → logprob: -13.125452995300293
    8. '(' → logprob: -13.500452995300293
    9. '(w' → logprob: -13.750452995300293
    10. '   ' → logprob: -13.875452995300293

Token 519: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.507972572464496e-05
    2. ' -' → logprob: -9.50009536743164
    3. '           ' → logprob: -11.25009536743164
    4. '(' → logprob: -12.75009536743164
    5. '1' → logprob: -13.37509536743164
    6. '       ' → logprob: -13.37509536743164
    7. '               ' → logprob: -15.00009536743164
    8. '   ' → logprob: -15.37509536743164
    9. ')-' → logprob: -15.87509536743164
    10. ' ' → logprob: -16.00009536743164

Token 520: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '-' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '```' → logprob: -15.875000953674316
    5. '   ' → logprob: -17.125001907348633
    6. ')' → logprob: -19.187501907348633
    7. '           ' → logprob: -19.500001907348633
    8. '...' → logprob: -19.687501907348633
    9. '2' → logprob: -19.750001907348633
    10. '       ' → logprob: -19.812501907348633

Token 521: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3822348117828369
    2. ':
' → logprob: -1.507234811782837
    3. ':' → logprob: -2.882234811782837
    4. '):' → logprob: -3.882234811782837
    5. '               ' → logprob: -4.882234573364258
    6. '           ' → logprob: -4.882234573364258
    7. '       ' → logprob: -6.382234573364258
    8. 'if' → logprob: -7.257234573364258
    9. ' if' → logprob: -7.632234573364258
    10. ' in' → logprob: -7.632234573364258

Token 522: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07013583183288574
    2. '               ' → logprob: -2.6951358318328857
    3. ' if' → logprob: -8.945136070251465
    4. 'if' → logprob: -9.695136070251465
    5. '       ' → logprob: -13.070136070251465
    6. '                   ' → logprob: -13.570136070251465
    7. '	       ' → logprob: -13.695136070251465
    8. '   ' → logprob: -13.945136070251465
    9. '```' → logprob: -13.945136070251465
    10. '                       ' → logprob: -14.945136070251465

Token 523: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3980151414871216
    2. ' if' → logprob: -1.3980151414871216
    3. '           ' → logprob: -2.898015022277832
    4. '                   ' → logprob: -3.898015022277832
    5. '               ' → logprob: -5.148015022277832
    6. '```' → logprob: -10.898015022277832
    7. '   ' → logprob: -11.898015022277832
    8. '            ' → logprob: -12.773015022277832
    9. '                ' → logprob: -13.523015022277832
    10. '       ' → logprob: -14.148015022277832

Token 524: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.25198227167129517
    2. ' not' → logprob: -1.5019822120666504
    3. 'visited' → logprob: -10.126982688903809
    4. '(not' → logprob: -12.251982688903809
    5. 'covered' → logprob: -12.876982688903809
    6. '               ' → logprob: -12.876982688903809
    7. '           ' → logprob: -14.251982688903809
    8. '!' → logprob: -14.251982688903809
    9. ' visited' → logprob: -14.626982688903809
    10. '   ' → logprob: -14.626982688903809

Token 525: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0022247217129915953
    2. ' visited' → logprob: -6.252224922180176
    3. 'covered' → logprob: -8.127224922180176
    4. ' covered' → logprob: -14.127224922180176
    5. 'visible' → logprob: -17.25222396850586
    6. 'occupied' → logprob: -18.25222396850586
    7. 'visit' → logprob: -18.75222396850586
    8. 'blocked' → logprob: -19.12722396850586
    9. 'Visited' → logprob: -20.50222396850586
    10. '   ' → logprob: -20.50222396850586

Token 526: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '(i' → logprob: -12.750003814697266
    3. ' [' → logprob: -15.250003814697266
    4. '```' → logprob: -15.500003814697266
    5. '[' → logprob: -15.750003814697266
    6. '[j' → logprob: -16.625003814697266
    7. '
' → logprob: -17.000003814697266
    8. '[I' → logprob: -17.125003814697266
    9. '   ' → logprob: -17.375003814697266
    10. '[(' → logprob: -17.375003814697266

Token 527: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2519815266132355
    2. '[i' → logprob: -1.501981496810913
    3. ' ][' → logprob: -11.251981735229492
    4. ']][' → logprob: -12.001981735229492
    5. '[' → logprob: -12.376981735229492
    6. '               ' → logprob: -12.501981735229492
    7. '(i' → logprob: -12.501981735229492
    8. ')[' → logprob: -12.626981735229492
    9. '[j' → logprob: -12.751981735229492
    10. ']' → logprob: -13.001981735229492

Token 528: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1472419600977446e-06
    2. ' j' → logprob: -14.375000953674316
    3. '[j' → logprob: -14.750000953674316
    4. ']' → logprob: -15.750000953674316
    5. 'i' → logprob: -17.250001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '```' → logprob: -17.625001907348633
    8. ',j' → logprob: -18.125001907348633
    9. '           ' → logprob: -18.250001907348633
    10. '][' → logprob: -18.500001907348633

Token 529: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07920459657907486
    2. 'and' → logprob: -2.579204559326172
    3. ']' → logprob: -8.079204559326172
    4. ')' → logprob: -13.079204559326172
    5. '               ' → logprob: -13.829204559326172
    6. '           ' → logprob: -14.579204559326172
    7. '```' → logprob: -15.454204559326172
    8. '                   ' → logprob: -15.829204559326172
    9. ' ' → logprob: -16.204204559326172
    10. '	and' → logprob: -16.329204559326172

Token 530: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0038152725901454687
    2. '           ' → logprob: -6.503815174102783
    3. '                       ' → logprob: -7.253815174102783
    4. '               ' → logprob: -7.378815174102783
    5. '                    
' → logprob: -8.128815650939941
    6. ' and' → logprob: -8.503815650939941
    7. '```' → logprob: -8.878815650939941
    8. ' regions' → logprob: -10.003815650939941
    9. '
' → logprob: -10.128815650939941
    10. ' if' → logprob: -10.253815650939941

Token 531: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.6166547536849976
    2. 'regions' → logprob: -1.3666547536849976
    3. '                   ' → logprob: -1.9916547536849976
    4. '                       ' → logprob: -3.491654872894287
    5. ' dfs' → logprob: -3.741654872894287
    6. ' regions' → logprob: -4.491654872894287
    7. '               ' → logprob: -6.616654872894287
    8. '   ' → logprob: -7.366654872894287
    9. '           ' → logprob: -7.741654872894287
    10. '       ' → logprob: -8.241654396057129

Token 532: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.625004768371582
    3. ' (' → logprob: -14.000004768371582
    4. '(
' → logprob: -14.750004768371582
    5. '[i' → logprob: -18.250003814697266
    6. '   ' → logprob: -18.375003814697266
    7. ')' → logprob: -18.500003814697266
    8. '(I' → logprob: -18.625003814697266
    9. '(ii' → logprob: -18.625003814697266
    10. '((' → logprob: -18.750003814697266

Token 533: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.47416213154792786
    2. ',' → logprob: -0.9741621017456055
    3. ' ,' → logprob: -9.474162101745605
    4. 'j' → logprob: -12.724162101745605
    5. ',
' → logprob: -13.099162101745605
    6. '                   ' → logprob: -13.599162101745605
    7. '   ' → logprob: -14.099162101745605
    8. '```' → logprob: -15.474162101745605
    9. ' ' → logprob: -15.724162101745605
    10. '                           ' → logprob: -15.849162101745605

Token 534: ')
' (ID: 446)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.3137465715408325
    2. ',' → logprob: -1.3137465715408325
    3. ')' → logprob: -7.688746452331543
    4. ' ,' → logprob: -10.813746452331543
    5. ',i' → logprob: -13.063746452331543
    6. ')
' → logprob: -13.188746452331543
    7. '                   ' → logprob: -14.063746452331543
    8. '   ' → logprob: -14.438746452331543
    9. ',
' → logprob: -14.938746452331543
    10. 'j' → logprob: -15.563746452331543

Token 535: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.022378429770469666
    2. '```' → logprob: -4.272378444671631
    3. ' regions' → logprob: -6.022378444671631
    4. '               ' → logprob: -6.522378444671631
    5. '``' → logprob: -7.147378444671631
    6. '                       ' → logprob: -7.397378444671631
    7. '           ' → logprob: -7.397378444671631
    8. 'regions' → logprob: -7.522378444671631
    9. '                    
' → logprob: -7.647378444671631
    10. '       ' → logprob: -7.772378444671631

Token 536: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' (adapté à ' regions') → logprob: -0.021399088203907013
    2. '                   ' → logprob: -4.396399021148682
    3. ' regions' → logprob: -4.896399021148682
    4. 'if' → logprob: -6.896399021148682
    5. ' if' → logprob: -8.89639949798584
    6. '               ' → logprob: -9.14639949798584
    7. '   ' → logprob: -9.52139949798584
    8. '           ' → logprob: -11.27139949798584
    9. '```' → logprob: -11.52139949798584
    10. '                       ' → logprob: -11.52139949798584

Token 537: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47411975264549255
    2. ' +=' → logprob: -0.9741197824478149
    3. '=' → logprob: -10.724120140075684
    4. '+' → logprob: -11.349120140075684
    5. '   ' → logprob: -12.349120140075684
    6. '```' → logprob: -13.099120140075684
    7. ']+=' → logprob: -13.849120140075684
    8. '    ' → logprob: -14.724120140075684
    9. ' =' → logprob: -15.099120140075684
    10. ' ' → logprob: -15.349120140075684

Token 538: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '2' → logprob: -16.625001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '```' → logprob: -19.250001907348633
    6. '
' → logprob: -20.500001907348633
    7. '  ' → logprob: -20.750001907348633
    8. '１' → logprob: -20.812501907348633
    9. '       ' → logprob: -21.062501907348633
    10. '+' → logprob: -21.250001907348633

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -14.750000953674316
    3. ' ' → logprob: -16.125
    4. '   ' → logprob: -18.5
    5. '```' → logprob: -19.625
    6. '
' → logprob: -19.875
    7. '１' → logprob: -20.125
    8. 'int' → logprob: -20.1875
    9. '۱' → logprob: -20.875
    10. '!' → logprob: -21.125

Token 540: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31404349207878113
    2. '       ' → logprob: -1.8140435218811035
    3. '
' → logprob: -2.3140435218811035
    4. 'print' → logprob: -4.9390435218811035
    5. '    
' → logprob: -8.439043045043945
    6. '        
' → logprob: -8.814043045043945
    7. '```' → logprob: -9.564043045043945
    8. ' print' → logprob: -10.064043045043945
    9. '
' → logprob: -11.439043045043945
    10. '  
' → logprob: -12.814043045043945

Token 541: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031002575531601906
    2. 'print' → logprob: -3.9060025215148926
    3. '       ' → logprob: -4.781002521514893
    4. '
' → logprob: -6.531002521514893
    5. '```' → logprob: -7.781002521514893
    6. '    
' → logprob: -9.15600299835205
    7. '        
' → logprob: -10.65600299835205
    8. ' print' → logprob: -12.28100299835205
    9. '<|end|>' → logprob: -12.53100299835205
    10. '``' → logprob: -13.03100299835205

Token 542: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.244413766078651e-05
    2. '       ' → logprob: -9.750082015991211
    3. ' print' → logprob: -10.750082015991211
    4. '   ' → logprob: -13.125082015991211
    5. '```' → logprob: -14.250082015991211
    6. '
' → logprob: -17.87508201599121
    7. '``' → logprob: -19.12508201599121
    8. '        
' → logprob: -19.12508201599121
    9. '	print' → logprob: -19.87508201599121
    10. 'import' → logprob: -20.62508201599121

Token 543: '(reg' (ID: 36833)
  Prédit: '(reg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reg' → logprob: -7.469590491382405e-05
    2. '(' → logprob: -10.25007438659668
    3. 'regions' → logprob: -10.50007438659668
    4. '(region' → logprob: -11.87507438659668
    5. '('' → logprob: -13.37507438659668
    6. ' (' → logprob: -14.00007438659668
    7. '(len' → logprob: -14.25007438659668
    8. '((' → logprob: -14.50007438659668
    9. '("' → logprob: -15.12507438659668
    10. '()' → logprob: -15.75007438659668

Token 544: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -2.2200749754119897e-06
    2. 'ons' → logprob: -14.250001907348633
    3. '(' → logprob: -14.750001907348633
    4. '[' → logprob: -15.125001907348633
    5. 'ion' → logprob: -15.625001907348633
    6. ')' → logprob: -15.875001907348633
    7. '(reg' → logprob: -15.875001907348633
    8. '```' → logprob: -16.125001907348633
    9. 'IONS' → logprob: -16.750001907348633
    10. '=' → logprob: -16.875001907348633

Token 545: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.47495681833243e-05
    2. '()' → logprob: -11.250024795532227
    3. '())' → logprob: -11.875024795532227
    4. ')
' → logprob: -12.875024795532227
    5. ' )' → logprob: -13.375024795532227
    6. ')`' → logprob: -15.625024795532227
    7. '))' → logprob: -16.000024795532227
    8. '   ' → logprob: -16.750024795532227
    9. '+' → logprob: -17.250024795532227
    10. '(' → logprob: -17.375024795532227

Token 546: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27957218885421753
    2. 'main' → logprob: -1.5295722484588623
    3. '<|end|>' → logprob: -3.7795722484588623
    4. '
' → logprob: -5.779572010040283
    5. ' if' → logprob: -8.029572486877441
    6. ' main' → logprob: -8.279572486877441
    7. '```' → logprob: -8.279572486877441
    8. '    
' → logprob: -8.404572486877441
    9. '\n' → logprob: -9.654572486877441
    10. '  
' → logprob: -9.779572486877441

Token 547: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.003178306156769395
    2. '__' → logprob: -5.753178119659424
    3. '_' → logprob: -15.503178596496582
    4. '_name' → logprob: -16.253177642822266
    5. '___' → logprob: -16.503177642822266
    6. ' ___' → logprob: -16.753177642822266
    7. '/__' → logprob: -17.128177642822266
    8. ' _' → logprob: -17.628177642822266
    9. ' ' → logprob: -17.878177642822266
    10. ' ' → logprob: -18.128177642822266

Token 548: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16635914146900177
    2. ' ==' → logprob: -2.2913591861724854
    3. '.__' → logprob: -3.5413591861724854
    4. '==' → logprob: -4.166358947753906
    5. ' __' → logprob: -5.541358947753906
    6. 'name' → logprob: -6.041358947753906
    7. '__.__' → logprob: -7.666358947753906
    8. 'if' → logprob: -8.166358947753906
    9. '__.' → logprob: -8.416358947753906
    10. '.' → logprob: -9.041358947753906

Token 549: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003924231859855354
    2. '__.__' → logprob: -8.000391960144043
    3. '==' → logprob: -10.125391960144043
    4. '__.' → logprob: -12.125391960144043
    5. '__["' → logprob: -12.750391960144043
    6. '__('' → logprob: -12.750391960144043
    7. '=="' → logprob: -13.125391960144043
    8. '__("' → logprob: -13.875391960144043
    9. '```' → logprob: -14.125391960144043
    10. '__":
' → logprob: -15.000391960144043

Token 550: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.036659158766269684
    2. '==' → logprob: -3.9116592407226562
    3. ' ==' → logprob: -4.161659240722656
    4. '=="' → logprob: -8.161659240722656
    5. '=='' → logprob: -9.661659240722656
    6. '__.__' → logprob: -10.536659240722656
    7. '.__' → logprob: -12.286659240722656
    8. '__["' → logprob: -12.536659240722656
    9. '___' → logprob: -13.036659240722656
    10. '__.' → logprob: -13.161659240722656

Token 551: '__' (ID: 771)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47480735182762146
    2. ''' → logprob: -1.2248073816299438
    3. '__' → logprob: -2.4748072624206543
    4. 'main' → logprob: -13.724807739257812
    5. ' "__' → logprob: -15.849807739257812
    6. '   ' → logprob: -16.224807739257812
    7. ' __' → logprob: -16.849807739257812
    8. '/__' → logprob: -17.349807739257812
    9. '___' → logprob: -17.599807739257812
    10. ' '__' → logprob: -17.849807739257812

Token 552: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.286852345103398e-05
    2. 'name' → logprob: -10.625042915344238
    3. '"' → logprob: -11.125042915344238
    4. '__' → logprob: -13.125042915344238
    5. '_main' → logprob: -13.750042915344238
    6. '==' → logprob: -15.500042915344238
    7. '=="' → logprob: -15.750042915344238
    8. ''' → logprob: -16.000041961669922
    9. ' main' → logprob: -16.375041961669922
    10. ' "__' → logprob: -17.250041961669922

Token 553: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06233927607536316
    2. '__' → logprob: -2.8123393058776855
    3. '__':
' → logprob: -7.9373393058776855
    4. '__:' → logprob: -12.187338829040527
    5. '__["' → logprob: -12.437338829040527
    6. '```' → logprob: -13.562338829040527
    7. '__
' → logprob: -13.812338829040527
    8. '__.' → logprob: -14.437338829040527
    9. '__.__' → logprob: -14.562338829040527
    10. '__
' → logprob: -15.062338829040527

Token 554: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8727864623069763
    2. '   ' → logprob: -1.247786521911621
    3. '	main' → logprob: -1.247786521911621
    4. ' main' → logprob: -4.872786521911621
    5. '_main' → logprob: -9.747786521911621
    6. '<|end|>' → logprob: -9.747786521911621
    7. '	Main' → logprob: -9.872786521911621
    8. '   ' → logprob: -10.622786521911621
    9. ' ' → logprob: -11.122786521911621
    10. '(main' → logprob: -11.247786521911621

Token 555: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.676292231422849e-05
    2. ' main' → logprob: -11.250017166137695
    3. '   ' → logprob: -12.750017166137695
    4. '	main' → logprob: -14.000017166137695
    5. '_main' → logprob: -20.250017166137695
    6. '.main' → logprob: -21.250017166137695
    7. '(main' → logprob: -21.250017166137695
    8. ' ' → logprob: -21.500017166137695
    9. 'import' → logprob: -22.625017166137695
    10. '  ' → logprob: -22.625017166137695

Token 556: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11648758500814438
    2. '(' → logprob: -2.866487503051758
    3. '<|end|>' → logprob: -3.241487503051758
    4. '
' → logprob: -5.616487503051758
    5. ':' → logprob: -5.616487503051758
    6. '```' → logprob: -6.241487503051758
    7. '(
' → logprob: -6.616487503051758
    8. '()
' → logprob: -6.866487503051758
    9. ')' → logprob: -7.491487503051758
    10. '():' → logprob: -7.741487503051758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 554
Tokens correctement prédits (1ère position, stricte): 238
Tokens correctement prédits (1ère position, avec adaptation): 265
Tokens correctement prédits (top 10): 481
Précision stricte (1ère position): 42.96%
Précision adaptée (1ère position): 47.83%
Précision (top 10): 86.82%
================================================================================
