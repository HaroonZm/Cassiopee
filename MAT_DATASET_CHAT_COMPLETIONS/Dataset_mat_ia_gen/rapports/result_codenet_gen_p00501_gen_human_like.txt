================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:24:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
shop_name = input()
old_signs = [input() for _ in range(N)]

count = 0
len_shop = len(shop_name)

for sign in old_signs:
    len_sign = len(sign)
    can_make = False
    for d in range(1, len_sign):
        for start in range(len_sign):
            if start + d * (len_shop - 1) >= len_sign:
                break
            formed = ''.join(sign[start + i * d] for i in range(len_shop))
            if formed == shop_name:
                can_make = True
                break
        if can_make:
            break
    if can_make:
        count += 1

print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001940040965564549
    2. '```' → logprob: -9.50019359588623
    3. '(N' → logprob: -10.50019359588623
    4. '`' → logprob: -10.87519359588623
    5. '(
' → logprob: -11.00019359588623
    6. ')' → logprob: -11.62519359588623
    7. '("("' → logprob: -11.62519359588623
    8. ''' → logprob: -11.62519359588623
    9. '()' → logprob: -11.75019359588623
    10. '('' → logprob: -12.25019359588623

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43778178095817566
    2. ')' → logprob: -1.062781810760498
    3. '()' → logprob: -5.062781810760498
    4. '())' → logprob: -6.687781810760498
    5. '(
' → logprob: -7.562781810760498
    6. '```' → logprob: -8.68778133392334
    7. '))' → logprob: -9.18778133392334
    8. '")' → logprob: -9.43778133392334
    9. '')' → logprob: -9.56278133392334
    10. '(

' → logprob: -9.93778133392334

Token 5: 'shop' (ID: 10595)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8439445495605469
    2. 'for' → logprob: -1.8439445495605469
    3. 'a' → logprob: -2.093944549560547
    4. 's' → logprob: -2.218944549560547
    5. '*' → logprob: -2.593944549560547
    6. ''' → logprob: -2.843944549560547
    7. ')' → logprob: -3.218944549560547
    8. 'x' → logprob: -3.218944549560547
    9. 'i' → logprob: -3.218944549560547
    10. '#' → logprob: -3.218944549560547

Token 6: '_name' (ID: 2483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03311799839138985
    2. '_' → logprob: -4.283117771148682
    3. '['' → logprob: -5.033117771148682
    4. 's' → logprob: -5.158117771148682
    5. '[]' → logprob: -5.908117771148682
    6. '["' → logprob: -6.658117771148682
    7. '\[' → logprob: -7.033117771148682
    8. '[s' → logprob: -7.908117771148682
    9. '.' → logprob: -8.03311824798584
    10. '[
' → logprob: -8.53311824798584

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14651958644390106
    2. ')' → logprob: -2.896519660949707
    3. '_' → logprob: -3.396519660949707
    4. 's' → logprob: -4.271519660949707
    5. '=' → logprob: -4.521519660949707
    6. '.' → logprob: -4.771519660949707
    7. '[]' → logprob: -5.771519660949707
    8. '[:]' → logprob: -6.146519660949707
    9. ']' → logprob: -6.396519660949707
    10. '```' → logprob: -7.021519660949707

Token 8: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3915156126022339
    2. '""' → logprob: -2.0165157318115234
    3. ''' → logprob: -2.1415157318115234
    4. 'input' → logprob: -3.0165157318115234
    5. ' input' → logprob: -4.516515731811523
    6. '''' → logprob: -4.891515731811523
    7. ' ""' → logprob: -6.266515731811523
    8. ' "' → logprob: -6.391515731811523
    9. ' ' → logprob: -7.141515731811523
    10. ''s' → logprob: -7.891515731811523

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027246330864727497
    2. ''' → logprob: -7.127724647521973
    3. '('' → logprob: -7.502724647521973
    4. '()' → logprob: -7.627724647521973
    5. '"' → logprob: -8.127724647521973
    6. '(
' → logprob: -8.377724647521973
    7. '`' → logprob: -9.502724647521973
    8. ')' → logprob: -9.627724647521973
    9. '(

' → logprob: -9.627724647521973
    10. '```' → logprob: -10.002724647521973

Token 10: 'old' (ID: 1280)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45776984095573425
    2. 'print' → logprob: -2.4577698707580566
    3. 'total' → logprob: -2.5827698707580566
    4. 'items' → logprob: -2.9577698707580566
    5. 'count' → logprob: -3.4577698707580566
    6. 'for' → logprob: -3.5827698707580566
    7. 'price' → logprob: -3.9577698707580566
    8. 'i' → logprob: -4.207769870758057
    9. 's' → logprob: -4.457769870758057
    10. 'discount' → logprob: -4.832769870758057

Token 11: '_sign' (ID: 24730)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3217400312423706
    2. '_price' → logprob: -1.6967400312423706
    3. '_name' → logprob: -2.57174015045166
    4. '_stock' → logprob: -6.19674015045166
    5. '_count' → logprob: -6.32174015045166
    6. '_value' → logprob: -6.57174015045166
    7. '_shop' → logprob: -6.69674015045166
    8. '_s' → logprob: -6.82174015045166
    9. ' _' → logprob: -6.94674015045166
    10. '_prices' → logprob: -6.94674015045166

Token 12: 's' (ID: 82)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7793315052986145
    2. '=' → logprob: -1.1543314456939697
    3. 'al' → logprob: -2.0293314456939697
    4. ' =' → logprob: -2.4043314456939697
    5. '_=' → logprob: -6.529331684112549
    6. 'a' → logprob: -6.904331684112549
    7. 's' → logprob: -8.02933120727539
    8. '_name' → logprob: -8.40433120727539
    9. 'at' → logprob: -9.02933120727539
    10. 'ature' → logprob: -9.15433120727539

Token 13: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6432570219039917
    2. '=' → logprob: -1.3932570219039917
    3. ' =' → logprob: -1.6432570219039917
    4. '[' → logprob: -3.6432571411132812
    5. '_count' → logprob: -5.768257141113281
    6. '_counts' → logprob: -7.018257141113281
    7. 's' → logprob: -7.643257141113281
    8. ')' → logprob: -7.643257141113281
    9. '[]' → logprob: -8.143257141113281
    10. '.' → logprob: -8.143257141113281

Token 14: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.12549814581871033
    2. '[]' → logprob: -2.625498056411743
    3. ' {}' → logprob: -4.000498294830322
    4. '{}' → logprob: -4.125498294830322
    5. 'set' → logprob: -5.125498294830322
    6. ' set' → logprob: -5.500498294830322
    7. 'input' → logprob: -8.000497817993164
    8. ' input' → logprob: -8.750497817993164
    9. ' ' → logprob: -9.000497817993164
    10. 'list' → logprob: -9.250497817993164

Token 15: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.32954350113868713
    2. ']' → logprob: -1.5795434713363647
    3. 'int' → logprob: -2.7045435905456543
    4. ' input' → logprob: -5.579543590545654
    5. ']int' → logprob: -6.829543590545654
    6. 'str' → logprob: -7.454543590545654
    7. '0' → logprob: -7.454543590545654
    8. '[]' → logprob: -7.704543590545654
    9. ' ]' → logprob: -8.204543113708496
    10. 'list' → logprob: -8.329543113708496

Token 16: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.3134967088699341
    2. '()' → logprob: -1.313496708869934
    3. '())' → logprob: -8.688496589660645
    4. ']()' → logprob: -11.063496589660645
    5. '()`' → logprob: -11.563496589660645
    6. '().' → logprob: -11.688496589660645
    7. '`()' → logprob: -12.563496589660645
    8. '()],' → logprob: -12.563496589660645
    9. '(' → logprob: -12.688496589660645
    10. '(),' → logprob: -12.688496589660645

Token 17: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09258737415075302
    2. '()]' → logprob: -2.967587471008301
    3. ')' → logprob: -4.217587471008301
    4. ']' → logprob: -4.967587471008301
    5. 'for' → logprob: -4.967587471008301
    6. ' for' → logprob: -5.342587471008301
    7. ')]' → logprob: -6.467587471008301
    8. '())' → logprob: -6.842587471008301
    9. '()]
' → logprob: -8.7175874710083
    10. '")' → logprob: -9.2175874710083

Token 18: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.16006222367286682
    2. ' range' → logprob: -2.410062313079834
    3. '_' → logprob: -2.910062313079834
    4. ' ' → logprob: -5.910062313079834
    5. ' i' → logprob: -8.035061836242676
    6. '_range' → logprob: -8.285061836242676
    7. 'range' → logprob: -8.660061836242676
    8. ' in' → logprob: -8.910061836242676
    9. '	range' → logprob: -12.160061836242676
    10. ' ▁' → logprob: -12.410061836242676

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009519561426714063
    2. 'in' → logprob: -7.000951766967773
    3. 'range' → logprob: -11.125951766967773
    4. ' ' → logprob: -11.375951766967773
    5. '<|end|>' → logprob: -11.750951766967773
    6. ' range' → logprob: -13.625951766967773
    7. 'i' → logprob: -14.375951766967773
    8. '  ' → logprob: -14.500951766967773
    9. 'import' → logprob: -14.500951766967773
    10. '<|end|>' → logprob: -14.750951766967773

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615515194833279
    2. ' range' → logprob: -4.758615493774414
    3. '	range' → logprob: -14.133615493774414
    4. 'rang' → logprob: -16.633615493774414
    5. '(range' → logprob: -16.633615493774414
    6. '_range' → logprob: -17.008615493774414
    7. '.range' → logprob: -17.258615493774414
    8. 'ran' → logprob: -17.633615493774414
    9. '[' → logprob: -19.383615493774414
    10. 'rage' → logprob: -19.508615493774414

Token 21: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.012532375752925873
    2. '(' → logprob: -4.3875322341918945
    3. '(n' → logprob: -11.137532234191895
    4. ' (' → logprob: -12.512532234191895
    5. 'N' → logprob: -13.137532234191895
    6. '(
' → logprob: -13.512532234191895
    7. ' N' → logprob: -15.137532234191895
    8. '(len' → logprob: -15.387532234191895
    9. '()' → logprob: -15.637532234191895
    10. ')' → logprob: -16.01253318786621

Token 22: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012833021173719317
    2. ')' → logprob: -9.625128746032715
    3. ']' → logprob: -9.750128746032715
    4. '')]' → logprob: -14.000128746032715
    5. ')])' → logprob: -14.000128746032715
    6. '])]' → logprob: -14.375128746032715
    7. ')]
' → logprob: -14.500128746032715
    8. '])' → logprob: -14.875128746032715
    9. ' )' → logprob: -14.875128746032715
    10. '")]' → logprob: -16.3751277923584

Token 23: 'count' (ID: 5420)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.034000884741544724
    2. 'for' → logprob: -4.784000873565674
    3. 'n' → logprob: -5.284000873565674
    4. 'count' → logprob: -5.784000873565674
    5. 'result' → logprob: -5.909000873565674
    6. 'valid' → logprob: -5.909000873565674
    7. 's' → logprob: -6.409000873565674
    8. 'current' → logprob: -7.034000873565674
    9. 'sign' → logprob: -7.284000873565674
    10. '```' → logprob: -7.409000873565674

Token 24: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.78267502784729
    2. '_' → logprob: -0.90767502784729
    3. 's' → logprob: -2.03267502784729
    4. '=' → logprob: -5.032674789428711
    5. ' =' → logprob: -7.157674789428711
    6. 'ed' → logprob: -8.282674789428711
    7. '[' → logprob: -8.657674789428711
    8. ')' → logprob: -9.282674789428711
    9. '(s' → logprob: -9.657674789428711
    10. '()' → logprob: -10.157674789428711

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07588151097297668
    2. '0' → logprob: -2.7008814811706543
    3. ' {}' → logprob: -5.200881481170654
    4. '{}' → logprob: -8.200881958007812
    5. ' defaultdict' → logprob: -9.825881958007812
    6. ' {' → logprob: -9.950881958007812
    7. '{' → logprob: -11.325881958007812
    8. '  ' → logprob: -12.700881958007812
    9. ' {})' → logprob: -12.825881958007812
    10. ' ' → logprob: -12.950881958007812

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08449006080627441
    2. '{}' → logprob: -2.5844900608062744
    3. '{' → logprob: -5.334489822387695
    4. 'sum' → logprob: -7.709489822387695
    5. 'len' → logprob: -9.084489822387695
    6. 'dict' → logprob: -9.959489822387695
    7. 'old' → logprob: -10.584489822387695
    8. '1' → logprob: -10.584489822387695
    9. ' ' → logprob: -10.834489822387695
    10. 'shop' → logprob: -10.959489822387695

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.937744140625
    2. 'for' → logprob: -0.937744140625
    3. '<|end|>' → logprob: -2.187744140625
    4. ' for' → logprob: -2.312744140625
    5. ' 
' → logprob: -6.437744140625
    6. '\n' → logprob: -6.437744140625
    7. '<|end|>' → logprob: -7.062744140625
    8. '' → logprob: -7.187744140625
    9. ' ' → logprob: -8.187744140625
    10. '```' → logprob: -8.312744140625

Token 28: 'len' (ID: 3303)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004908296745270491
    2. ' for' → logprob: -5.379908084869385
    3. '
' → logprob: -8.504908561706543
    4. '```' → logprob: -10.004908561706543
    5. '' → logprob: -11.879908561706543
    6. '\n' → logprob: -11.879908561706543
    7. '<|end|>' → logprob: -11.879908561706543
    8. '\' → logprob: -11.879908561706543
    9. '	for' → logprob: -12.504908561706543
    10. 'For' → logprob: -13.254908561706543

Token 29: '_shop' (ID: 89558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011382488533854485
    2. '(old' → logprob: -4.636382579803467
    3. '(count' → logprob: -7.886382579803467
    4. '(len' → logprob: -7.886382579803467
    5. '_' → logprob: -8.261382102966309
    6. '(shop' → logprob: -8.386382102966309
    7. '(s' → logprob: -8.886382102966309
    8. 's' → logprob: -9.136382102966309
    9. '(_' → logprob: -10.386382102966309
    10. '(_)' → logprob: -10.761382102966309

Token 30: ' =' (ID: 314)
  Prédit: '_name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.28216755390167236
    2. '_' → logprob: -1.4071675539016724
    3. 'name' → logprob: -7.407167434692383
    4. '_n' → logprob: -8.282167434692383
    5. '_len' → logprob: -9.657167434692383
    6. '_=' → logprob: -11.157167434692383
    7. 'Name' → logprob: -11.532167434692383
    8. '()' → logprob: -11.657167434692383
    9. '_na' → logprob: -11.657167434692383
    10. '_length' → logprob: -11.907167434692383

Token 31: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.03804917633533478
    2. 'len' → logprob: -3.2880492210388184
    3. '(len' → logprob: -12.28804874420166
    4. ' ' → logprob: -12.78804874420166
    5. '=len' → logprob: -15.16304874420166
    6. '[len' → logprob: -16.913049697875977
    7. '	len' → logprob: -17.788049697875977
    8. ' ' → logprob: -18.538049697875977
    9. ',len' → logprob: -18.788049697875977
    10. '```' → logprob: -20.038049697875977

Token 32: '(shop' (ID: 170425)
  Prédit: '(shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shop' → logprob: -0.062353383749723434
    2. '(' → logprob: -2.8123533725738525
    3. '(_' → logprob: -7.937353610992432
    4. '_shop' → logprob: -11.312353134155273
    5. '(ship' → logprob: -12.437353134155273
    6. '(s' → logprob: -12.562353134155273
    7. '(sh' → logprob: -12.562353134155273
    8. '(len' → logprob: -13.187353134155273
    9. 'shop' → logprob: -13.437353134155273
    10. '(store' → logprob: -15.062353134155273

Token 33: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -5.7888184528565034e-05
    2. '_n' → logprob: -10.2500581741333
    3. '_' → logprob: -11.6250581741333
    4. ')_' → logprob: -12.1250581741333
    5. ' _' → logprob: -12.6250581741333
    6. ')' → logprob: -12.7500581741333
    7. '_)' → logprob: -13.6250581741333
    8. '_na' → logprob: -15.1250581741333
    9. '_names' → logprob: -16.500057220458984
    10. '_NAME' → logprob: -16.500057220458984

Token 34: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3080716346157715e-05
    2. ' )' → logprob: -11.125022888183594
    3. ')
' → logprob: -13.000022888183594
    4. '[' → logprob: -13.375022888183594
    5. '))' → logprob: -13.875022888183594
    6. ')))' → logprob: -14.625022888183594
    7. '[len' → logprob: -14.875022888183594
    8. '#' → logprob: -15.000022888183594
    9. '`)' → logprob: -15.000022888183594
    10. '')' → logprob: -15.125022888183594

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004528374411165714
    2. ' for' → logprob: -7.750452995300293
    3. '<|end|>' → logprob: -11.375452995300293
    4. '
' → logprob: -11.875452995300293
    5. '\n' → logprob: -13.625452995300293
    6. '```' → logprob: -13.875452995300293
    7. ')' → logprob: -14.875452995300293
    8. '	for' → logprob: -15.500452995300293
    9. '\' → logprob: -15.875452995300293
    10. ' 
' → logprob: -16.250452041625977

Token 36: ' sign' (ID: 2232)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06482625752687454
    2. ' i' → logprob: -2.814826250076294
    3. ' _' → logprob: -6.189826488494873
    4. '  ' → logprob: -7.939826488494873
    5. '_' → logprob: -8.064826011657715
    6. ' item' → logprob: -10.064826011657715
    7. ' )' → logprob: -11.064826011657715
    8. ' s' → logprob: -11.064826011657715
    9. ' ‌' → logprob: -11.689826011657715
    10. 'i' → logprob: -12.064826011657715

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0209927037358284
    2. ' ' → logprob: -4.770992755889893
    3. 'in' → logprob: -5.145992755889893
    4. '_' → logprob: -5.645992755889893
    5. '[' → logprob: -6.145992755889893
    6. '  ' → logprob: -8.520992279052734
    7. ',' → logprob: -9.270992279052734
    8. '[i' → logprob: -9.520992279052734
    9. 's' → logprob: -9.645992279052734
    10. ' ,' → logprob: -9.770992279052734

Token 38: ' old' (ID: 2890)
  Prédit: ' old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' old' → logprob: -0.03813788667321205
    2. 'old' → logprob: -3.288137912750244
    3. ' ' → logprob: -10.413137435913086
    4. '	old' → logprob: -10.788137435913086
    5. ' signs' → logprob: -11.538137435913086
    6. '(old' → logprob: -11.663137435913086
    7. '_old' → logprob: -12.038137435913086
    8. ' shop' → logprob: -12.163137435913086
    9. 'shop' → logprob: -12.538137435913086
    10. ' range' → logprob: -12.663137435913086

Token 39: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.3626282811164856
    2. '_' → logprob: -1.2376282215118408
    3. '_s' → logprob: -4.98762845993042
    4. 's' → logprob: -5.23762845993042
    5. '_name' → logprob: -6.73762845993042
    6. ' _' → logprob: -9.112627983093262
    7. 'sign' → logprob: -9.112627983093262
    8. '_sig' → logprob: -9.737627983093262
    9. '_si' → logprob: -9.737627983093262
    10. ')' → logprob: -9.862627983093262

Token 40: 's' (ID: 82)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16078031063079834
    2. 's' → logprob: -1.9107803106307983
    3. '[:' → logprob: -8.78577995300293
    4. '>:' → logprob: -9.28577995300293
    5. '>' → logprob: -9.66077995300293
    6. '):' → logprob: -10.28577995300293
    7. ':
' → logprob: -10.53577995300293
    8. '.startswith' → logprob: -10.66077995300293
    9. '<|end|>' → logprob: -10.66077995300293
    10. '_:' → logprob: -10.78577995300293

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002978048287332058
    2. ':
' → logprob: -8.375297546386719
    3. ' :' → logprob: -10.000297546386719
    4. '   ' → logprob: -12.000297546386719
    5. ' if' → logprob: -12.500297546386719
    6. '[' → logprob: -13.000297546386719
    7. ':**' → logprob: -13.750297546386719
    8. ',' → logprob: -13.875297546386719
    9. ''s' → logprob: -14.000297546386719
    10. '>' → logprob: -14.125297546386719

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31028249859809875
    2. ' 
' → logprob: -2.1852824687957764
    3. ' ' → logprob: -2.8102824687957764
    4. '    
' → logprob: -3.1852824687957764
    5. '    ' → logprob: -3.6852824687957764
    6. '     
' → logprob: -4.4352827072143555
    7. ' if' → logprob: -5.3102827072143555
    8. '<|end|>' → logprob: -6.3102827072143555
    9. '```' → logprob: -6.3102827072143555
    10. '[' → logprob: -6.5602827072143555

Token 43: ' len' (ID: 4631)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18228857219219208
    2. ' i' → logprob: -2.432288646697998
    3. 'if' → logprob: -3.557288646697998
    4. ' count' → logprob: -4.057288646697998
    5. '   ' → logprob: -4.432288646697998
    6. ' for' → logprob: -4.557288646697998
    7. 'i' → logprob: -5.557288646697998
    8. 'count' → logprob: -5.682288646697998
    9. 'for' → logprob: -7.307288646697998
    10. ' match' → logprob: -7.432288646697998

Token 44: '_sign' (ID: 24730)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48876863718032837
    2. '(sign' → logprob: -1.4887685775756836
    3. '_sign' → logprob: -2.3637685775756836
    4. '_shop' → logprob: -3.1137685775756836
    5. '(' → logprob: -4.113768577575684
    6. '(shop' → logprob: -5.613768577575684
    7. 'sign' → logprob: -7.238768577575684
    8. '(s' → logprob: -7.488768577575684
    9. '_(' → logprob: -7.863768577575684
    10. ' (' → logprob: -8.738768577575684

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46545764803886414
    2. '=' → logprob: -1.8404576778411865
    3. ' ==' → logprob: -1.9654576778411865
    4. '==' → logprob: -3.7154576778411865
    5. ' ' → logprob: -4.215457439422607
    6. '<|end|>' → logprob: -4.340457439422607
    7. ' <=' → logprob: -4.590457439422607
    8. ' >=' → logprob: -5.715457439422607
    9. '   ' → logprob: -6.090457439422607
    10. ')' → logprob: -7.215457439422607

Token 46: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.07889991998672485
    2. 'len' → logprob: -2.57889986038208
    3. '(len' → logprob: -11.953900337219238
    4. '=len' → logprob: -13.328900337219238
    5. '   ' → logprob: -13.703900337219238
    6. '	len' → logprob: -14.328900337219238
    7. '[len' → logprob: -15.078900337219238
    8. ',len' → logprob: -16.078899383544922
    9. ' ' → logprob: -16.953899383544922
    10. '<len' → logprob: -17.453899383544922

Token 47: '(sign' (ID: 74775)
  Prédit: '(sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sign' → logprob: -0.011077405884861946
    2. '(' → logprob: -4.511077404022217
    3. '(shop' → logprob: -10.636077880859375
    4. 'sign' → logprob: -13.136077880859375
    5. '(signature' → logprob: -13.636077880859375
    6. '(s' → logprob: -14.011077880859375
    7. '_sign' → logprob: -14.261077880859375
    8. ' (' → logprob: -15.011077880859375
    9. '(Sign' → logprob: -15.761077880859375
    10. '(sig' → logprob: -16.636077880859375

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006054640281945467
    2. ' )' → logprob: -5.631054878234863
    3. ')
' → logprob: -6.131054878234863
    4. 'if' → logprob: -9.131054878234863
    5. '   ' → logprob: -9.381054878234863
    6. ' )
' → logprob: -10.006054878234863
    7. ' if' → logprob: -10.631054878234863
    8. ' ' → logprob: -12.131054878234863
    9. ')
' → logprob: -13.131054878234863
    10. ')

' → logprob: -13.506054878234863

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06810165196657181
    2. ' if' → logprob: -3.318101644515991
    3. ' for' → logprob: -4.44310188293457
    4. 'if' → logprob: -5.69310188293457
    5. ' ' → logprob: -5.94310188293457
    6. 'for' → logprob: -5.94310188293457
    7. '    
' → logprob: -6.31810188293457
    8. ' 
' → logprob: -6.44310188293457
    9. '```' → logprob: -6.69310188293457
    10. '    ' → logprob: -6.94310188293457

Token 50: ' can' (ID: 665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8548027276992798
    2. ' for' → logprob: -1.2298027276992798
    3. 'if' → logprob: -1.8548027276992798
    4. ' if' → logprob: -2.2298026084899902
    5. 'i' → logprob: -5.22980260848999
    6. ' ' → logprob: -5.22980260848999
    7. ' i' → logprob: -5.35480260848999
    8. '   ' → logprob: -6.22980260848999
    9. '    ' → logprob: -8.229803085327148
    10. ' 
' → logprob: -9.104803085327148

Token 51: '_make' (ID: 70070)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2041774988174438
    2. '_replace' → logprob: -1.4541774988174438
    3. '_' → logprob: -2.4541773796081543
    4. '_match' → logprob: -2.5791773796081543
    5. '_use' → logprob: -2.7041773796081543
    6. '_find' → logprob: -2.8291773796081543
    7. '_change' → logprob: -3.2041773796081543
    8. '_continue' → logprob: -3.5791773796081543
    9. ' =' → logprob: -3.9541773796081543
    10. '_apply' → logprob: -4.579177379608154

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0907168909907341
    2. '_' → logprob: -3.09071683883667
    3. '=' → logprob: -3.21571683883667
    4. '_sign' → logprob: -8.090717315673828
    5. '_make' → logprob: -8.465717315673828
    6. '_from' → logprob: -8.590717315673828
    7. ' ' → logprob: -9.340717315673828
    8. 'd' → logprob: -9.840717315673828
    9. '_it' → logprob: -10.090717315673828
    10. '_up' → logprob: -10.215717315673828

Token 53: ' False' (ID: 7983)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16538439691066742
    2. ' False' → logprob: -1.9153844118118286
    3. 'True' → logprob: -5.665384292602539
    4. 'False' → logprob: -6.415384292602539
    5. ' ' → logprob: -10.665384292602539
    6. '   ' → logprob: -11.790384292602539
    7. '0' → logprob: -11.915384292602539
    8. '(True' → logprob: -12.540384292602539
    9. ' any' → logprob: -13.665384292602539
    10. ' all' → logprob: -14.165384292602539

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0507018566131592
    2. '   ' → logprob: -1.3007018566131592
    3. ' 
' → logprob: -1.8007018566131592
    4. '<|end|>' → logprob: -2.550701856613159
    5. '    
' → logprob: -3.550701856613159
    6. ' for' → logprob: -3.675701856613159
    7. '    ' → logprob: -3.800701856613159
    8. '\n' → logprob: -4.425702095031738
    9. 'for' → logprob: -4.675702095031738
    10. '     
' → logprob: -5.050702095031738

Token 56: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.084910273551941
    2. ' ' → logprob: -1.709910273551941
    3. ' 
' → logprob: -1.834910273551941
    4. '\n' → logprob: -2.0849103927612305
    5. 'for' (adapté à ' for') → logprob: -2.2099103927612305
    6. '   ' → logprob: -3.4599103927612305
    7. '\' → logprob: -4.4599103927612305
    8. '<|end|>' → logprob: -4.7099103927612305
    9. '
' → logprob: -4.8349103927612305
    10. '\t' → logprob: -5.5849103927612305

Token 57: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05826015770435333
    2. ' j' → logprob: -3.308260202407837
    3. ' ' → logprob: -4.933259963989258
    4. ' range' → logprob: -5.183259963989258
    5. ' _' → logprob: -5.183259963989258
    6. ' idx' → logprob: -7.433259963989258
    7. '_' → logprob: -8.308259963989258
    8. ' r' → logprob: -8.808259963989258
    9. ' index' → logprob: -9.433259963989258
    10. ' in' → logprob: -9.433259963989258

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017331328708678484
    2. 'ef' → logprob: -7.751733303070068
    3. 'istance' → logprob: -8.12673282623291
    4. 'ist' → logprob: -8.12673282623291
    5. 'iff' → logprob: -8.50173282623291
    6. 'x' → logprob: -8.87673282623291
    7. ' i' → logprob: -8.87673282623291
    8. 'e' → logprob: -9.62673282623291
    9. 'o' → logprob: -10.12673282623291
    10. 'i' → logprob: -10.37673282623291

Token 59: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0007585270795971155
    2. 'range' → logprob: -7.250758647918701
    3. ' ' → logprob: -11.000758171081543
    4. ' xrange' → logprob: -11.500758171081543
    5. '	range' → logprob: -11.625758171081543
    6. '(range' → logprob: -11.750758171081543
    7. '  ' → logprob: -13.625758171081543
    8. ' rang' → logprob: -14.250758171081543
    9. '   ' → logprob: -14.250758171081543
    10. '_range' → logprob: -14.500758171081543

Token 60: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.061315927654504776
    2. '(-' → logprob: -3.0613160133361816
    3. '(' → logprob: -4.936316013336182
    4. ' (' → logprob: -5.811316013336182
    5. ' len' → logprob: -6.811316013336182
    6. '(-(' → logprob: -7.436316013336182
    7. ' (-' → logprob: -7.936316013336182
    8. 'len' → logprob: -9.311315536499023
    9. '   ' → logprob: -9.311315536499023
    10. '(abs' → logprob: -9.936315536499023

Token 61: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9778896570205688
    2. ' -' → logprob: -1.2278896570205688
    3. '-l' → logprob: -1.7278896570205688
    4. ' len' → logprob: -1.9778896570205688
    5. '-' → logprob: -4.852889537811279
    6. '-(' → logprob: -6.102889537811279
    7. '1' → logprob: -7.102889537811279
    8. '(len' → logprob: -7.102889537811279
    9. ' ' → logprob: -7.727889537811279
    10. '0' → logprob: -7.977889537811279

Token 62: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.6158635020256042
    2. ',' → logprob: -0.8658635020256042
    3. ',len' → logprob: -3.240863561630249
    4. ' ' → logprob: -14.115863800048828
    5. ',l' → logprob: -14.115863800048828
    6. ',int' → logprob: -14.115863800048828
    7. '+' → logprob: -14.240863800048828
    8. ',length' → logprob: -14.240863800048828
    9. '   ' → logprob: -14.740863800048828
    10. ' +' → logprob: -14.990863800048828

Token 63: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.037925343960523605
    2. 'min' → logprob: -4.0379252433776855
    3. ' len' → logprob: -4.1629252433776855
    4. ' min' → logprob: -5.5379252433776855
    5. '(len' → logprob: -10.787925720214844
    6. '[len' → logprob: -11.412925720214844
    7. 'max' → logprob: -11.412925720214844
    8. '	len' → logprob: -11.787925720214844
    9. '=len' → logprob: -12.037925720214844
    10. '<len' → logprob: -12.287925720214844

Token 64: '_sign' (ID: 24730)
  Prédit: '_shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shop' → logprob: -0.633281946182251
    2. '_sign' → logprob: -0.758281946182251
    3. '(sign' → logprob: -8.008281707763672
    4. '(shop' → logprob: -8.508281707763672
    5. 'sign' → logprob: -10.258281707763672
    6. 'shop' → logprob: -11.133281707763672
    7. '_ship' → logprob: -11.383281707763672
    8. '_sh' → logprob: -11.508281707763672
    9. 'Shop' → logprob: -11.633281707763672
    10. '_signature' → logprob: -12.008281707763672

Token 65: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.623131513595581
    2. '+' → logprob: -1.748131513595581
    3. '):' → logprob: -1.748131513595581
    4. '-' → logprob: -3.123131513595581
    5. ' +' → logprob: -3.248131513595581
    6. ' //' → logprob: -4.12313175201416
    7. '//' → logprob: -4.74813175201416
    8. ' ):' → logprob: -5.37313175201416
    9. '-l' → logprob: -6.74813175201416
    10. '):
' → logprob: -7.37313175201416

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06789516657590866
    2. '<|end|>' → logprob: -2.9428951740264893
    3. ':' → logprob: -5.19289493560791
    4. ' ' → logprob: -5.81789493560791
    5. '        
' → logprob: -7.19289493560791
    6. ' if' → logprob: -7.31789493560791
    7. ' 
' → logprob: -7.44289493560791
    8. '<|end|>' → logprob: -7.56789493560791
    9. '   ' → logprob: -8.06789493560791
    10. ',' → logprob: -8.19289493560791

Token 67: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35488060116767883
    2. '       ' → logprob: -1.9798805713653564
    3. ' if' → logprob: -2.3548805713653564
    4. '<|end|>' → logprob: -3.2298805713653564
    5. '   ' → logprob: -4.4798808097839355
    6. '    ' → logprob: -4.9798808097839355
    7. 'if' → logprob: -6.2298808097839355
    8. '           ' → logprob: -6.4798808097839355
    9. '        ' → logprob: -6.6048808097839355
    10. ' 
' → logprob: -6.8548808097839355

Token 68: ' start' (ID: 1604)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.1832046508789062
    2. ' d' → logprob: -2.1832046508789062
    3. ' _' → logprob: -2.5582046508789062
    4. '_' → logprob: -2.6832046508789062
    5. ' j' → logprob: -2.8082046508789062
    6. ' l' → logprob: -2.9332046508789062
    7. ' split' → logprob: -2.9332046508789062
    8. ' i' → logprob: -3.1832046508789062
    9. ' len' → logprob: -3.3082046508789062
    10. ' sign' → logprob: -3.5582046508789062

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004639572463929653
    2. 'in' → logprob: -5.379639625549316
    3. ' ' → logprob: -11.629639625549316
    4. '<|end|>' → logprob: -12.879639625549316
    5. '<|end|>' → logprob: -13.879639625549316
    6. '_in' → logprob: -13.879639625549316
    7. ')' → logprob: -14.129639625549316
    8. '=' → logprob: -14.254639625549316
    9. '_' → logprob: -14.254639625549316
    10. '	in' → logprob: -14.379639625549316

Token 70: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04858884960412979
    2. 'range' → logprob: -3.048588752746582
    3. '(range' → logprob: -13.673588752746582
    4. '	range' → logprob: -15.923588752746582
    5. ' ' → logprob: -16.1735897064209
    6. '[' → logprob: -16.6735897064209
    7. '0' → logprob: -17.6735897064209
    8. '   ' → logprob: -18.0485897064209
    9. ' xrange' → logprob: -18.0485897064209
    10. '.range' → logprob: -18.6735897064209

Token 71: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0009145628428086638
    2. '(' → logprob: -7.000914573669434
    3. ' (' → logprob: -13.750914573669434
    4. 'len' → logprob: -14.625914573669434
    5. '   ' → logprob: -14.750914573669434
    6. ' len' → logprob: -15.250914573669434
    7. '0' → logprob: -15.500914573669434
    8. '((' → logprob: -15.750914573669434
    9. '[len' → logprob: -16.000913619995117
    10. '(l' → logprob: -16.000913619995117

Token 72: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.443014919757843
    2. '_shop' → logprob: -1.0680148601531982
    3. '(sign' → logprob: -4.568015098571777
    4. '(shop' → logprob: -5.693015098571777
    5. 'sign' → logprob: -8.818015098571777
    6. '(' → logprob: -9.318015098571777
    7. '_old' → logprob: -10.193015098571777
    8. 'shop' → logprob: -10.568015098571777
    9. 'Shop' → logprob: -10.693015098571777
    10. '(old' → logprob: -11.443015098571777

Token 73: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.021068112924695015
    2. '-' → logprob: -3.8960680961608887
    3. '-d' → logprob: -8.396068572998047
    4. '   ' → logprob: -8.521068572998047
    5. ' ' → logprob: -10.146068572998047
    6. ')' → logprob: -10.646068572998047
    7. '-l' → logprob: -11.396068572998047
    8. '-sign' → logprob: -12.021068572998047
    9. '-length' → logprob: -12.271068572998047
    10. '  ' → logprob: -12.771068572998047

Token 74: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21012577414512634
    2. ' if' → logprob: -2.460125684738159
    3. ':' → logprob: -2.585125684738159
    4. '       ' → logprob: -5.085125923156738
    5. 'if' → logprob: -5.460125923156738
    6. '<|end|>' → logprob: -5.460125923156738
    7. ' :' → logprob: -5.585125923156738
    8. '        ' → logprob: -6.210125923156738
    9. ' ' → logprob: -6.335125923156738
    10. '            ' → logprob: -6.335125923156738

Token 75: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3940545618534088
    2. '               ' → logprob: -1.8940545320510864
    3. '           ' → logprob: -2.394054651260376
    4. '            ' → logprob: -3.144054651260376
    5. 'if' (adapté à ' if') → logprob: -3.894054651260376
    6. ' ' → logprob: -4.519054412841797
    7. '                ' → logprob: -5.769054412841797
    8. ':' → logprob: -6.644054412841797
    9. '<|end|>' → logprob: -7.019054412841797
    10. '+' → logprob: -7.144054412841797

Token 76: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.12466911971569061
    2. 'start' → logprob: -2.374669075012207
    3. ' sign' → logprob: -4.499669075012207
    4. ' (' → logprob: -4.749669075012207
    5. 'sign' → logprob: -6.749669075012207
    6. '(start' → logprob: -6.999669075012207
    7. ' d' → logprob: -7.249669075012207
    8. ' not' → logprob: -7.999669075012207
    9. '(sign' → logprob: -7.999669075012207
    10. ' len' → logprob: -8.624669075012207

Token 77: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.523228645324707
    2. '+' → logprob: -0.898228645324707
    3. ' <=' → logprob: -9.773228645324707
    4. '<=' → logprob: -11.273228645324707
    5. '+d' → logprob: -11.773228645324707
    6. ' ' → logprob: -12.273228645324707
    7. ' >' → logprob: -12.398228645324707
    8. '>' → logprob: -12.898228645324707
    9. ' +
' → logprob: -12.898228645324707
    10. ' ==' → logprob: -12.898228645324707

Token 78: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.22560270130634308
    2. 'd' → logprob: -1.6006027460098267
    3. ' ' → logprob: -9.600603103637695
    4. ' len' → logprob: -9.850603103637695
    5. 'len' → logprob: -9.850603103637695
    6. '2' → logprob: -11.850603103637695
    7. '	d' → logprob: -13.600603103637695
    8. '    ' → logprob: -13.600603103637695
    9. '>d' → logprob: -13.725603103637695
    10. ')d' → logprob: -14.100603103637695

Token 79: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1539895385503769
    2. '<=' → logprob: -2.403989553451538
    3. ' >' → logprob: -3.028989553451538
    4. '>' → logprob: -5.528989315032959
    5. ' ' → logprob: -11.153989791870117
    6. ' <' → logprob: -13.028989791870117
    7. '<|end|>' → logprob: -13.153989791870117
    8. '<' → logprob: -13.528989791870117
    9. '```' → logprob: -13.903989791870117
    10. ' ' → logprob: -13.903989791870117

Token 80: ' (' (ID: 350)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5147900581359863
    2. '2' → logprob: -1.3897900581359863
    3. ' len' → logprob: -2.7647900581359863
    4. '(len' → logprob: -3.2647900581359863
    5. ' (' → logprob: -3.7647900581359863
    6. ' ' → logprob: -4.514790058135986
    7. '(' → logprob: -4.889790058135986
    8. '3' → logprob: -5.889790058135986
    9. '1' → logprob: -6.264790058135986
    10. '4' → logprob: -7.514790058135986

Token 81: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.013847064226865768
    2. '(len' → logprob: -4.5138468742370605
    3. ' len' → logprob: -6.3888468742370605
    4. '2' → logprob: -7.6388468742370605
    5. ' (' → logprob: -9.138847351074219
    6. 'count' → logprob: -9.263847351074219
    7. '(' → logprob: -9.388847351074219
    8. '[len' → logprob: -9.888847351074219
    9. '<len' → logprob: -10.263847351074219
    10. 'd' → logprob: -10.513847351074219

Token 82: '_shop' (ID: 89558)
  Prédit: '_shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shop' → logprob: -0.00021569548698607832
    2. '(shop' → logprob: -9.000215530395508
    3. 'shop' → logprob: -9.875215530395508
    4. '_sign' → logprob: -11.000215530395508
    5. 'Shop' → logprob: -11.250215530395508
    6. ' shop' → logprob: -12.375215530395508
    7. '-shop' → logprob: -13.250215530395508
    8. ')' → logprob: -14.250215530395508
    9. '_sh' → logprob: -14.375215530395508
    10. '-' → logprob: -14.875215530395508

Token 83: ' -' (ID: 533)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5940839648246765
    2. ')' → logprob: -1.5940840244293213
    3. '<=' → logprob: -1.9690840244293213
    4. ' >' → logprob: -2.9690840244293213
    5. '-' → logprob: -3.5940840244293213
    6. '>' → logprob: -3.8440840244293213
    7. ' -' → logprob: -6.094083786010742
    8. ')<=' → logprob: -7.219083786010742
    9. '==' → logprob: -8.094083786010742
    10. ' )' → logprob: -8.344083786010742

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034261439577676356
    2. ' ' → logprob: -8.12534236907959
    3. '<|end|>' → logprob: -11.25034236907959
    4. '+' → logprob: -11.37534236907959
    5. ')' → logprob: -11.50034236907959
    6. 'count' → logprob: -12.75034236907959
    7. '   ' → logprob: -13.62534236907959
    8. ' +' → logprob: -13.87534236907959
    9. '...' → logprob: -14.12534236907959
    10. '<|end|>' → logprob: -14.62534236907959

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024192029377445579
    2. ' ' → logprob: -8.375242233276367
    3. '<|end|>' → logprob: -12.125242233276367
    4. 'count' → logprob: -13.250242233276367
    5. '+' → logprob: -13.375242233276367
    6. ')' → logprob: -14.250242233276367
    7. '2' → logprob: -14.750242233276367
    8. 'len' → logprob: -14.875242233276367
    9. '...' → logprob: -15.937742233276367
    10. 'd' → logprob: -15.937742233276367

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08218056708574295
    2. ' <' → logprob: -3.0821805000305176
    3. ' <=' → logprob: -4.332180500030518
    4. ' >' → logprob: -4.832180500030518
    5. ' >=' → logprob: -5.207180500030518
    6. ' )' → logprob: -5.832180500030518
    7. '<|end|>' → logprob: -6.957180500030518
    8. ' ' → logprob: -7.082180500030518
    9. '>' → logprob: -7.707180500030518
    10. ')>=' → logprob: -7.957180500030518

Token 87: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0408795028924942
    2. ' <=' → logprob: -3.665879487991333
    3. ' >=' → logprob: -5.415879726409912
    4. '<' → logprob: -5.540879726409912
    5. ' >' → logprob: -5.915879726409912
    6. '<|end|>' → logprob: -6.415879726409912
    7. ' ' → logprob: -7.040879726409912
    8. '<=' → logprob: -7.915879726409912
    9. '>' → logprob: -8.040879249572754
    10. '>=' → logprob: -9.165879249572754

Token 88: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.04308152198791504
    2. 'len' → logprob: -3.168081521987915
    3. '	len' → logprob: -10.418081283569336
    4. '(len' → logprob: -10.668081283569336
    5. '=len' → logprob: -11.543081283569336
    6. '<len' → logprob: -11.918081283569336
    7. '[len' → logprob: -12.043081283569336
    8. ',len' → logprob: -13.043081283569336
    9. ' ' → logprob: -13.668081283569336
    10. '_len' → logprob: -13.918081283569336

Token 89: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.0421774797141552
    2. '(sign' → logprob: -3.417177438735962
    3. 'sign' → logprob: -4.792177677154541
    4. ' sign' → logprob: -9.042177200317383
    5. '	sign' → logprob: -10.167177200317383
    6. 'Sign' → logprob: -11.167177200317383
    7. '_shop' → logprob: -11.417177200317383
    8. '(' → logprob: -12.417177200317383
    9. '.sign' → logprob: -12.667177200317383
    10. '-sign' → logprob: -12.792177200317383

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0702265128493309
    2. ':
' → logprob: -2.6952264308929443
    3. ' or' → logprob: -9.195226669311523
    4. ' :' → logprob: -9.820226669311523
    5. '           ' → logprob: -10.570226669311523
    6. ' :
' → logprob: -10.570226669311523
    7. ':
' → logprob: -10.695226669311523
    8. ':return' → logprob: -10.695226669311523
    9. '               ' → logprob: -11.570226669311523
    10. '       ' → logprob: -12.070226669311523

Token 91: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001128902193158865
    2. ' continue' → logprob: -7.626128673553467
    3. '\n' → logprob: -8.876129150390625
    4. '                               ' → logprob: -9.376129150390625
    5. '           ' → logprob: -9.376129150390625
    6. '                
' → logprob: -9.626129150390625
    7. 'continue' → logprob: -9.876129150390625
    8. '                   ' → logprob: -10.001129150390625
    9. '                ' → logprob: -10.501129150390625
    10. ' 
' → logprob: -10.626129150390625

Token 92: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4492313861846924
    2. ' break' → logprob: -1.4492313861846924
    3. '               ' → logprob: -2.3242313861846924
    4. 'break' (adapté à ' break') → logprob: -4.074231147766113
    5. ' continue' → logprob: -4.699231147766113
    6. '                ' → logprob: -7.199231147766113
    7. 'continue' → logprob: -7.199231147766113
    8. '                       ' → logprob: -7.824231147766113
    9. '           ' → logprob: -8.074231147766113
    10. '	break' → logprob: -8.574231147766113

Token 93: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4021161198616028
    2. '
' → logprob: -2.027116060256958
    3. '               ' → logprob: -2.277116060256958
    4. '<|end|>' → logprob: -2.902116060256958
    5. '\n' → logprob: -3.777116060256958
    6. '            
' → logprob: -5.777116298675537
    7. '<|end|>' → logprob: -6.152116298675537
    8. '                   ' → logprob: -6.277116298675537
    9. '  
' → logprob: -6.527116298675537
    10. '                
' → logprob: -6.652116298675537

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03153865784406662
    2. '               ' → logprob: -4.031538486480713
    3. '
' → logprob: -5.281538486480713
    4. '\n' → logprob: -6.031538486480713
    5. '            
' → logprob: -6.281538486480713
    6. '<|end|>' → logprob: -6.906538486480713
    7. ' 
' → logprob: -7.781538486480713
    8. '            ' → logprob: -7.781538486480713
    9. '       ' → logprob: -8.031538963317871
    10. '                
' → logprob: -8.281538963317871

Token 95: ' formed' (ID: 20680)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09377148002386093
    2. '
' → logprob: -2.843771457672119
    3. ' if' → logprob: -4.593771457672119
    4. 'if' → logprob: -4.968771457672119
    5. '            
' → logprob: -5.343771457672119
    6. '   ' → logprob: -5.593771457672119
    7. '       ' → logprob: -6.218771457672119
    8. '    
' → logprob: -7.343771457672119
    9. 's' → logprob: -7.593771457672119
    10. ' 
' → logprob: -7.968771457672119

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030685583129525185
    2. '=' → logprob: -3.9056856632232666
    3. '_word' → logprob: -5.4056854248046875
    4. '_string' → logprob: -6.1556854248046875
    5. '_sign' → logprob: -6.4056854248046875
    6. '_str' → logprob: -7.1556854248046875
    7. '_name' → logprob: -7.9056854248046875
    8. '_sub' → logprob: -8.530685424804688
    9. 'ed' → logprob: -8.780685424804688
    10. 'sign' → logprob: -9.655685424804688

Token 97: ' ''.' (ID: 105941)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.701357901096344
    2. '"' → logprob: -1.5763578414916992
    3. '''.' → logprob: -1.9513578414916992
    4. '''' → logprob: -2.826357841491699
    5. ' ''.' → logprob: -3.201357841491699
    6. ' "".' → logprob: -3.451357841491699
    7. ' ""' → logprob: -5.076357841491699
    8. 'sign' → logprob: -5.576357841491699
    9. 'shop' → logprob: -6.076357841491699
    10. ''s' → logprob: -6.076357841491699

Token 98: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.696889623621246e-06
    2. '```' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.75000286102295
    4. ' join' → logprob: -15.12500286102295
    5. 'jo' → logprob: -15.75000286102295
    6. '''.' → logprob: -16.250001907348633
    7. '   ' → logprob: -16.375001907348633
    8. 'concat' → logprob: -17.000001907348633
    9. '``' → logprob: -17.250001907348633
    10. 'j' → logprob: -17.250001907348633

Token 99: '(sign' (ID: 74775)
  Prédit: '(sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sign' → logprob: -0.013468424789607525
    2. '([' → logprob: -4.638468265533447
    3. 'sign' → logprob: -5.763468265533447
    4. '[' → logprob: -8.138468742370605
    5. '(' → logprob: -8.388468742370605
    6. '(shop' → logprob: -10.638468742370605
    7. '(
' → logprob: -11.638468742370605
    8. '((' → logprob: -12.388468742370605
    9. '	sign' → logprob: -13.013468742370605
    10. '(signature' → logprob: -13.763468742370605

Token 100: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00025192240718752146
    2. '[(' → logprob: -8.750251770019531
    3. '[' → logprob: -10.250251770019531
    4. 'start' → logprob: -11.000251770019531
    5. '[
' → logprob: -11.250251770019531
    6. '[i' → logprob: -11.500251770019531
    7. '[j' → logprob: -12.000251770019531
    8. '           ' → logprob: -12.375251770019531
    9. ' [' → logprob: -13.625251770019531
    10. '               ' → logprob: -13.750251770019531

Token 101: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.39245089888572693
    2. '+' → logprob: -1.1424509286880493
    3. '+d' → logprob: -5.39245080947876
    4. ' ' → logprob: -7.64245080947876
    5. '   ' → logprob: -8.642451286315918
    6. ':start' → logprob: -8.892451286315918
    7. '+i' → logprob: -9.642451286315918
    8. '+k' → logprob: -9.767451286315918
    9. 'start' → logprob: -11.142451286315918
    10. '           ' → logprob: -11.392451286315918

Token 102: ' i' (ID: 575)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17584413290023804
    2. 'i' → logprob: -2.050844192504883
    3. ' d' → logprob: -3.925844192504883
    4. 'k' → logprob: -5.175844192504883
    5. ' i' → logprob: -5.300844192504883
    6. 'step' → logprob: -6.925844192504883
    7. '(i' → logprob: -8.675844192504883
    8. 'j' → logprob: -8.800844192504883
    9. ' ' → logprob: -9.050844192504883
    10. '(d' → logprob: -9.175844192504883

Token 103: ' *' (ID: 425)
  Prédit: '*d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.0691346675157547
    2. ' *' → logprob: -2.8191347122192383
    3. '*' → logprob: -4.944134712219238
    4. 'd' → logprob: -11.319134712219238
    5. ' ' → logprob: -13.069134712219238
    6. '   ' → logprob: -14.319134712219238
    7. '*s' → logprob: -15.319134712219238
    8. '```' → logprob: -15.944134712219238
    9. ' d' → logprob: -16.194133758544922
    10. ']' → logprob: -16.444133758544922

Token 104: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17976005375385284
    2. ' d' → logprob: -1.8047600984573364
    3. '(d' → logprob: -12.554759979248047
    4. ' ' → logprob: -12.554759979248047
    5. ')d' → logprob: -12.929759979248047
    6. ' (' → logprob: -13.054759979248047
    7. '_d' → logprob: -14.304759979248047
    8. '	d' → logprob: -14.304759979248047
    9. 's' → logprob: -14.429759979248047
    10. ')' → logprob: -15.179759979248047

Token 105: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6818939447402954
    2. 'for' → logprob: -0.9318939447402954
    3. ']' → logprob: -2.806893825531006
    4. 'nt' → logprob: -4.056893825531006
    5. 'r' → logprob: -4.431893825531006
    6. 'or' → logprob: -6.431893825531006
    7. 'x' → logprob: -6.556893825531006
    8. 'nd' → logprob: -6.556893825531006
    9. ' ' → logprob: -6.681893825531006
    10. 'n' → logprob: -6.681893825531006

Token 106: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4741596281528473
    2. 'for' → logprob: -0.9741595983505249
    3. '	for' → logprob: -9.849159240722656
    4. ' ' → logprob: -11.349159240722656
    5. '   ' → logprob: -11.599159240722656
    6. '           ' → logprob: -12.599159240722656
    7. ')' → logprob: -13.849159240722656
    8. '       ' → logprob: -13.974159240722656
    9. '  ' → logprob: -14.349159240722656
    10. '    ' → logprob: -14.474159240722656

Token 107: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0227190256118774
    2. 'range' → logprob: -1.2727190256118774
    3. ' range' → logprob: -1.2727190256118774
    4. ' i' → logprob: -2.522718906402588
    5. ' ' → logprob: -13.022719383239746
    6. ' in' → logprob: -14.272719383239746
    7. '	range' → logprob: -14.397719383239746
    8. 'r' → logprob: -14.772719383239746
    9. ' xrange' → logprob: -15.272719383239746
    10. '(range' → logprob: -15.272719383239746

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008863262482918799
    2. 'in' → logprob: -7.1258864402771
    3. 'range' → logprob: -10.250885963439941
    4. ' range' → logprob: -10.625885963439941
    5. '<|end|>' → logprob: -10.875885963439941
    6. ' ' → logprob: -12.875885963439941
    7. ')' → logprob: -15.125885963439941
    8. '<|end|>' → logprob: -15.750885963439941
    9. 's' → logprob: -16.500886917114258
    10. ',' → logprob: -16.625886917114258

Token 109: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020915418863297
    2. ' range' → logprob: -2.3502092361450195
    3. '	range' → logprob: -13.47520923614502
    4. '(range' → logprob: -13.72520923614502
    5. '.range' → logprob: -17.975208282470703
    6. ' xrange' → logprob: -18.225208282470703
    7. '_range' → logprob: -19.100208282470703
    8. ' ' → logprob: -19.475208282470703
    9. '[' → logprob: -20.850208282470703
    10. '```' → logprob: -21.350208282470703

Token 110: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0015328321605920792
    2. 'len' → logprob: -6.501533031463623
    3. ' len' → logprob: -10.501532554626465
    4. '[len' → logprob: -13.626532554626465
    5. '(' → logprob: -14.126532554626465
    6. '	len' → logprob: -14.876532554626465
    7. '<len' → logprob: -15.251532554626465
    8. ' (' → logprob: -15.501532554626465
    9. '=len' → logprob: -15.626532554626465
    10. ',len' → logprob: -16.62653350830078

Token 111: '_shop' (ID: 89558)
  Prédit: '_shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shop' → logprob: -2.45848218582978e-06
    2. '(shop' → logprob: -13.00000286102295
    3. 'shop' → logprob: -16.375001907348633
    4. 'Shop' → logprob: -17.500001907348633
    5. '_ship' → logprob: -17.625001907348633
    6. '_sh' → logprob: -18.000001907348633
    7. '(' → logprob: -19.125001907348633
    8. ' shop' → logprob: -19.375001907348633
    9. ')' → logprob: -20.000001907348633
    10. '_store' → logprob: -21.000001907348633

Token 112: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.024259204044938087
    2. ')' → logprob: -3.774259090423584
    3. '))
' → logprob: -7.024259090423584
    4. ')))' → logprob: -9.649259567260742
    5. ')
' → logprob: -9.899259567260742
    6. '])' → logprob: -12.774259567260742
    7. '       ' → logprob: -14.149259567260742
    8. '           ' → logprob: -14.524259567260742
    9. '):
' → logprob: -14.649259567260742
    10. '))

' → logprob: -14.774259567260742

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018339496455155313
    2. ')' → logprob: -8.87518310546875
    3. '<|end|>' → logprob: -11.37518310546875
    4. '               ' → logprob: -11.50018310546875
    5. '          ' → logprob: -11.87518310546875
    6. '       ' → logprob: -12.62518310546875
    7. '            
' → logprob: -12.75018310546875
    8. ' if' → logprob: -12.75018310546875
    9. '<|end|>' → logprob: -13.00018310546875
    10. '            ' → logprob: -14.25018310546875

Token 114: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001444045570679009
    2. ' if' → logprob: -7.126443862915039
    3. '   ' → logprob: -8.251443862915039
    4. '
' → logprob: -9.001443862915039
    5. '       ' → logprob: -9.001443862915039
    6. '            
' → logprob: -10.626443862915039
    7. '               ' → logprob: -10.876443862915039
    8. ' ' → logprob: -11.001443862915039
    9. '<|end|>' → logprob: -11.001443862915039
    10. 'if' (adapté à ' if') → logprob: -11.376443862915039

Token 115: ' formed' (ID: 20680)
  Prédit: ' formed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formed' → logprob: -0.0008054602658376098
    2. 'formed' → logprob: -7.125805377960205
    3. ' ' → logprob: -14.750805854797363
    4. ' ' → logprob: -15.000805854797363
    5. 'form' → logprob: -15.625805854797363
    6. ' form' → logprob: -16.625804901123047
    7. ' formada' → logprob: -17.750804901123047
    8. ' formatted' → logprob: -17.875804901123047
    9. ' can' → logprob: -18.750804901123047
    10. ' formado' → logprob: -19.250804901123047

Token 116: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0008049834286794066
    2. '==' → logprob: -7.125804901123047
    3. '.startswith' → logprob: -15.375804901123047
    4. ' ' → logprob: -16.875804901123047
    5. ' =' → logprob: -17.250804901123047
    6. '=' → logprob: -17.750804901123047
    7. ')' → logprob: -17.750804901123047
    8. ')==' → logprob: -17.875804901123047
    9. ' ' → logprob: -17.875804901123047
    10. ' ==
' → logprob: -18.125804901123047

Token 117: ' shop' (ID: 9100)
  Prédit: ' shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shop' → logprob: -0.1603516787290573
    2. 'shop' → logprob: -1.9103516340255737
    3. ' ' → logprob: -9.285351753234863
    4. '(shop' → logprob: -11.535351753234863
    5. ''' → logprob: -11.660351753234863
    6. '"' → logprob: -12.035351753234863
    7. ' '' → logprob: -12.410351753234863
    8. ' ' → logprob: -13.410351753234863
    9. '_shop' → logprob: -13.660351753234863
    10. '/shop' → logprob: -14.035351753234863

Token 118: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.625
    3. 'name' → logprob: -16.5
    4. ' _' → logprob: -16.875
    5. '_shop' → logprob: -17.375
    6. '_NAME' → logprob: -17.875
    7. ''_' → logprob: -18.75
    8. '_sign' → logprob: -19.0
    9. 'Name' → logprob: -20.375
    10. '_n' → logprob: -20.625

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03366967290639877
    2. ':
' → logprob: -3.4086697101593018
    3. ':
' → logprob: -11.908669471740723
    4. '):' → logprob: -11.908669471740723
    5. '):
' → logprob: -12.033669471740723
    6. '       ' → logprob: -14.033669471740723
    7. ':return' → logprob: -14.158669471740723
    8. ':

' → logprob: -14.533669471740723
    9. '           ' → logprob: -14.658669471740723
    10. ' and' → logprob: -14.658669471740723

Token 120: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010413920972496271
    2. '                   ' → logprob: -10.000103950500488
    3. '           ' → logprob: -10.875103950500488
    4. '                
' → logprob: -11.500103950500488
    5. '                       ' → logprob: -12.125103950500488
    6. '                               ' → logprob: -12.250103950500488
    7. '              ' → logprob: -12.625103950500488
    8. ':
' → logprob: -12.750103950500488
    9. '       ' → logprob: -13.250103950500488
    10. '                ' → logprob: -13.250103950500488

Token 121: ' can' (ID: 665)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.36175376176834106
    2. '               ' → logprob: -1.2367537021636963
    3. 'count' → logprob: -4.986753940582275
    4. ' can' → logprob: -5.986753940582275
    5. ' count' → logprob: -6.361753940582275
    6. '
' → logprob: -6.861753940582275
    7. '                       ' → logprob: -7.361753940582275
    8. 'can' (adapté à ' can') → logprob: -8.736753463745117
    9. '           ' → logprob: -8.986753463745117
    10. '   ' → logprob: -10.111753463745117

Token 122: '_make' (ID: 70070)
  Prédit: '_make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.625000953674316
    3. '_m' → logprob: -17.125
    4. ' _' → logprob: -17.25
    5. 'make' → logprob: -17.25
    6. 'Make' → logprob: -17.875
    7. '_find' → logprob: -18.625
    8. '_use' → logprob: -18.625
    9. '_continue' → logprob: -18.75
    10. '_have' → logprob: -19.0

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160289004445076
    2. '=' → logprob: -1.9102890491485596
    3. '=True' → logprob: -9.66028881072998
    4. ' ' → logprob: -15.28528881072998
    5. '=False' → logprob: -15.53528881072998
    6. '               ' → logprob: -15.91028881072998
    7. 's' → logprob: -16.035289764404297
    8. ' =
' → logprob: -16.160289764404297
    9. ' |=' → logprob: -16.160289764404297
    10. '                   ' → logprob: -16.285289764404297

Token 124: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.1269282102584839
    2. 'True' → logprob: -2.1269283294677734
    3. '(True' → logprob: -15.751928329467773
    4. '=True' → logprob: -18.001928329467773
    5. ' ' → logprob: -19.376928329467773
    6. ' Tru' → logprob: -20.876928329467773
    7. '.True' → logprob: -21.126928329467773
    8. ' ' → logprob: -22.251928329467773
    9. '_true' → logprob: -22.501928329467773
    10. ' true' → logprob: -22.751928329467773

Token 125: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003428528143558651
    2. '       ' → logprob: -9.625343322753906
    3. '           ' → logprob: -9.625343322753906
    4. '                
' → logprob: -9.625343322753906
    5. '<|end|>' → logprob: -10.125343322753906
    6. '                   ' → logprob: -10.250343322753906
    7. '                ' → logprob: -10.500343322753906
    8. '              ' → logprob: -11.625343322753906
    9. '
' → logprob: -11.750343322753906
    10. '   ' → logprob: -11.875343322753906

Token 126: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003273600013926625
    2. '       ' → logprob: -9.625327110290527
    3. '           ' → logprob: -9.625327110290527
    4. '                
' → logprob: -9.750327110290527
    5. '                ' → logprob: -10.375327110290527
    6. '<|end|>' → logprob: -10.375327110290527
    7. '                   ' → logprob: -10.500327110290527
    8. '              ' → logprob: -10.875327110290527
    9. '   ' → logprob: -12.000327110290527
    10. '
' → logprob: -13.000327110290527

Token 127: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007172697689384222
    2. 'break' (adapté à ' break') → logprob: -5.257172584533691
    3. ' break' → logprob: -6.257172584533691
    4. '                   ' → logprob: -11.132172584533691
    5. '           ' → logprob: -13.132172584533691
    6. '                ' → logprob: -13.507172584533691
    7. '       ' → logprob: -13.632172584533691
    8. '              ' → logprob: -14.882172584533691
    9. '	break' → logprob: -15.507172584533691
    10. '			' → logprob: -15.507172584533691

Token 128: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026916230097413063
    2. '    
' → logprob: -4.151916027069092
    3. '
' → logprob: -5.151916027069092
    4. '   ' → logprob: -5.401916027069092
    5. '        
' → logprob: -8.15191650390625
    6. '  
' → logprob: -9.27691650390625
    7. ' 
' → logprob: -10.15191650390625
    8. '           ' → logprob: -10.77691650390625
    9. '   
' → logprob: -10.90191650390625
    10. '\n' → logprob: -11.15191650390625

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1857319325208664
    2. '   ' → logprob: -1.8107318878173828
    3. '    
' → logprob: -5.310731887817383
    4. '
' → logprob: -7.685731887817383
    5. '           ' → logprob: -8.435731887817383
    6. '  
' → logprob: -9.185731887817383
    7. '        
' → logprob: -9.185731887817383
    8. ' 
' → logprob: -9.935731887817383
    9. '\n' → logprob: -10.310731887817383
    10. '               ' → logprob: -11.810731887817383

Token 130: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006807737518101931
    2. '       ' → logprob: -5.006807804107666
    3. '           ' → logprob: -10.006807327270508
    4. '    
' → logprob: -10.881807327270508
    5. 'if' (adapté à ' if') → logprob: -11.006807327270508
    6. '               ' → logprob: -13.131807327270508
    7. '```' → logprob: -13.256807327270508
    8. '    ' → logprob: -13.506807327270508
    9. '
' → logprob: -13.756807327270508
    10. ' ' → logprob: -14.006807327270508

Token 131: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.029750952497124672
    2. 'can' → logprob: -3.5297510623931885
    3. '	can' → logprob: -14.77975082397461
    4. ' not' → logprob: -17.40475082397461
    5. ' ' → logprob: -17.40475082397461
    6. '(can' → logprob: -17.90475082397461
    7. ' ' → logprob: -18.90475082397461
    8. '_can' → logprob: -19.27975082397461
    9. ' kan' → logprob: -21.02975082397461
    10. '.can' → logprob: -21.02975082397461

Token 132: '_make' (ID: 70070)
  Prédit: '_make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -0.009326283819973469
    2. 'ake' → logprob: -4.759326457977295
    3. 'make' → logprob: -7.884326457977295
    4. '_break' → logprob: -8.384325981140137
    5. 'ak' → logprob: -9.884325981140137
    6. 'break' → logprob: -11.259325981140137
    7. 'Make' → logprob: -11.384325981140137
    8. 'reak' → logprob: -11.384325981140137
    9. '_take' → logprob: -12.009325981140137
    10. 'e' → logprob: -12.509325981140137

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15380975604057312
    2. ':
' → logprob: -2.5288097858428955
    3. '           ' → logprob: -2.7788097858428955
    4. '       ' → logprob: -7.903809547424316
    5. '==' → logprob: -8.403809547424316
    6. '               ' → logprob: -10.403809547424316
    7. '=' → logprob: -11.028809547424316
    8. '=True' → logprob: -11.153809547424316
    9. ' ==' → logprob: -11.278809547424316
    10. '   ' → logprob: -12.028809547424316

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005981888971291482
    2. ' break' → logprob: -7.750597953796387
    3. '               ' → logprob: -9.000597953796387
    4. 'break' → logprob: -10.375597953796387
    5. '       ' → logprob: -12.000597953796387
    6. '```' → logprob: -12.125597953796387
    7. 'count' → logprob: -14.750597953796387
    8. '          ' → logprob: -15.750597953796387
    9. '		' → logprob: -15.875597953796387
    10. '   ' → logprob: -16.125598907470703

Token 135: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2547594904899597
    2. ' break' → logprob: -2.0047595500946045
    3. '           ' → logprob: -2.5047595500946045
    4. '       ' → logprob: -5.254759311676025
    5. 'count' → logprob: -6.379759311676025
    6. '   ' → logprob: -6.504759311676025
    7. ' count' → logprob: -10.379759788513184
    8. '```' → logprob: -10.629759788513184
    9. '               ' → logprob: -11.004759788513184
    10. '	break' → logprob: -11.379759788513184

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040195759385824203
    2. '```' → logprob: -3.9151957035064697
    3. '
' → logprob: -4.165195941925049
    4. '<|end|>' → logprob: -6.290195941925049
    5. '    
' → logprob: -7.040195941925049
    6. ' if' → logprob: -8.04019546508789
    7. 'if' → logprob: -8.66519546508789
    8. '  
' → logprob: -8.66519546508789
    9. ')' → logprob: -9.29019546508789
    10. '  ' → logprob: -9.54019546508789

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011242223903536797
    2. '```' → logprob: -4.636242389678955
    3. '
' → logprob: -7.136242389678955
    4. 'count' → logprob: -8.386241912841797
    5. '    
' → logprob: -8.636241912841797
    6. 'if' → logprob: -8.636241912841797
    7. ' if' → logprob: -10.011241912841797
    8. '``' → logprob: -10.636241912841797
    9. ' count' → logprob: -11.636241912841797
    10. '        
' → logprob: -12.136241912841797

Token 138: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7061193585395813
    2. 'if' (adapté à ' if') → logprob: -0.7061193585395813
    3. ' if' → logprob: -4.831119537353516
    4. '```' → logprob: -5.581119537353516
    5. '
' → logprob: -6.956119537353516
    6. 'count' → logprob: -9.331119537353516
    7. '    
' → logprob: -10.081119537353516
    8. '``' → logprob: -10.581119537353516
    9. ' ' → logprob: -10.956119537353516
    10. '+' → logprob: -12.706119537353516

Token 139: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.000206401280593127
    2. 'can' → logprob: -8.500205993652344
    3. '	can' → logprob: -13.250205993652344
    4. '_can' → logprob: -14.000205993652344
    5. '(can' → logprob: -15.500205993652344
    6. ' not' → logprob: -16.250205993652344
    7. ' ' → logprob: -17.250205993652344
    8. 'Can' → logprob: -18.625205993652344
    9. ' cans' → logprob: -18.875205993652344
    10. ' ' → logprob: -18.875205993652344

Token 140: '_make' (ID: 70070)
  Prédit: '_make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -4.961759259458631e-06
    2. 'make' → logprob: -12.500004768371582
    3. 'Make' → logprob: -14.500004768371582
    4. '_m' → logprob: -15.125004768371582
    5. '_' → logprob: -15.750004768371582
    6. 'ake' → logprob: -17.0000057220459
    7. '_add' → logprob: -17.1250057220459
    8. '_take' → logprob: -17.3750057220459
    9. '   ' → logprob: -17.8750057220459
    10. ' _' → logprob: -18.2500057220459

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40794187784194946
    2. ':
' → logprob: -1.4079418182373047
    3. '       ' → logprob: -2.4079418182373047
    4. '   ' → logprob: -8.407941818237305
    5. '):
' → logprob: -9.657941818237305
    6. '=' → logprob: -11.032941818237305
    7. '==' → logprob: -11.907941818237305
    8. '):' → logprob: -12.532941818237305
    9. '():
' → logprob: -13.032941818237305
    10. '```' → logprob: -13.032941818237305

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000627014203928411
    2. '   ' → logprob: -8.250626564025879
    3. 'count' → logprob: -8.625626564025879
    4. ' count' → logprob: -9.625626564025879
    5. '```' → logprob: -9.750626564025879
    6. '
' → logprob: -9.875626564025879
    7. '	count' → logprob: -12.000626564025879
    8. '``' → logprob: -13.875626564025879
    9. '[count' → logprob: -14.750626564025879
    10. '    
' → logprob: -14.750626564025879

Token 143: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.3567008376121521
    2. ' count' → logprob: -1.3567008972167969
    3. '   ' → logprob: -3.856700897216797
    4. '       ' → logprob: -3.856700897216797
    5. '	count' → logprob: -8.856700897216797
    6. '
' → logprob: -9.606700897216797
    7. '```' → logprob: -11.356700897216797
    8. '_count' → logprob: -11.981700897216797
    9. ',count' → logprob: -13.731700897216797
    10. ' ' → logprob: -13.981700897216797

Token 144: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027324963361024857
    2. ' +=' → logprob: -3.652324914932251
    3. '+' → logprob: -6.90232515335083
    4. ']+=' → logprob: -11.277324676513672
    5. '+="' → logprob: -13.152324676513672
    6. '+='' → logprob: -13.777324676513672
    7. '   ' → logprob: -13.902324676513672
    8. '```' → logprob: -14.527324676513672
    9. '<|end|>' → logprob: -14.777324676513672
    10. '=' → logprob: -14.902324676513672

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -21.7500057220459
    4. '   ' → logprob: -22.7500057220459
    5. '```' → logprob: -23.1250057220459
    6. '１' → logprob: -23.8750057220459
    7. '۱' → logprob: -24.1250057220459
    8. '  ' → logprob: -25.6250057220459
    9. ' ' → logprob: -26.1250057220459
    10. '+' → logprob: -26.2500057220459

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -23.375
    4. '
' → logprob: -24.5
    5. '１' → logprob: -24.75
    6. '۱' → logprob: -24.75
    7. '   ' → logprob: -24.75
    8. '<|end|>' → logprob: -25.25
    9. 'count' → logprob: -26.25
    10. '१' → logprob: -26.625

Token 147: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004510493890848011
    2. '
' → logprob: -7.75045108795166
    3. ' print' → logprob: -10.87545108795166
    4. '  
' → logprob: -14.62545108795166
    5. '```' → logprob: -14.62545108795166
    6. ' 
' → logprob: -16.125450134277344
    7. '
' → logprob: -16.250450134277344
    8. '    
' → logprob: -16.375450134277344
    9. '

' → logprob: -16.500450134277344
    10. ')
' → logprob: -16.625450134277344

Token 148: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ' print' → logprob: -18.125
    4. '
' → logprob: -19.125
    5. '#print' → logprob: -20.5
    6. '``' → logprob: -20.75
    7. '(print' → logprob: -23.875
    8. '  
' → logprob: -23.875
    9. '	print' → logprob: -24.5
    10. '-print' → logprob: -24.75

Token 149: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.06198213994503021
    2. '(' → logprob: -2.8119821548461914
    3. '(len' → logprob: -12.436982154846191
    4. '('' → logprob: -12.686982154846191
    5. '((' → logprob: -12.936982154846191
    6. '(f' → logprob: -13.686982154846191
    7. ' (' → logprob: -13.936982154846191
    8. '("("' → logprob: -13.936982154846191
    9. '()' → logprob: -14.436982154846191
    10. '(sum' → logprob: -15.061982154846191

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -15.500000953674316
    3. ')`' → logprob: -15.500000953674316
    4. '+' → logprob: -16.125
    5. '()' → logprob: -16.625
    6. '())' → logprob: -17.125
    7. '))' → logprob: -17.125
    8. ')
' → logprob: -17.5
    9. '(' → logprob: -17.875
    10. ')}' → logprob: -18.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 148
Tokens correctement prédits (1ère position, stricte): 72
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 123
Précision stricte (1ère position): 48.65%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 83.11%
================================================================================
