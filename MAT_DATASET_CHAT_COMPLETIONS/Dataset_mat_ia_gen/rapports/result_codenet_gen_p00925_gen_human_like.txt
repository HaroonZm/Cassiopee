================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
expression = input().strip()
bob_answer = int(input().strip())

# Parse numbers and operators
numbers = [int(expression[i]) for i in range(0, len(expression), 2)]
operators = [expression[i] for i in range(1, len(expression), 2)]

def calc_mul_first(nums, ops):
    # First perform all multiplications
    new_nums = []
    new_ops = []
    acc = nums[0]
    for i, op in enumerate(ops):
        if op == '*':
            acc *= nums[i+1]
        else:
            new_nums.append(acc)
            new_ops.append(op)
            acc = nums[i+1]
    new_nums.append(acc)
    # Then perform all additions
    result = new_nums[0]
    for i, op in enumerate(new_ops):
        if op == '+':
            result += new_nums[i+1]
    return result

def calc_left_to_right(nums, ops):
    result = nums[0]
    for i, op in enumerate(ops):
        if op == '+':
            result += nums[i+1]
        else:
            result *= nums[i+1]
    return result

mul_first_result = calc_mul_first(numbers, operators)
left_to_right_result = calc_left_to_right(numbers, operators)

mul_match = (mul_first_result == bob_answer)
left_match = (left_to_right_result == bob_answer)

if mul_match and left_match:
    print('U')
elif mul_match:
    print('M')
elif left_match:
    print('L')
else:
    print('I')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'expression' (ID: 61248)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0075234584510326385
    2. ''' → logprob: -5.257523536682129
    3. '('' → logprob: -7.382523536682129
    4. '"' → logprob: -7.507523536682129
    5. '`' → logprob: -7.757523536682129
    6. '```' → logprob: -8.757523536682129
    7. '(
' → logprob: -8.882523536682129
    8. '[' → logprob: -9.257523536682129
    9. '("("' → logprob: -9.632523536682129
    10. '.' → logprob: -9.882523536682129

Token 4: 'strip' (ID: 23905)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6963337659835815
    2. '.strip' → logprob: -1.4463337659835815
    3. '.' → logprob: -2.196333885192871
    4. ' ' → logprob: -3.446333885192871
    5. '.split' → logprob: -4.071333885192871
    6. '=' → logprob: -4.196333885192871
    7. ')' → logprob: -4.321333885192871
    8. '(' → logprob: -4.321333885192871
    9. '```' → logprob: -4.696333885192871
    10. '[' → logprob: -4.696333885192871

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22621765732765198
    2. '()' → logprob: -1.6012176275253296
    3. '(
' → logprob: -8.226217269897461
    4. '"' → logprob: -9.476217269897461
    5. '('' → logprob: -9.476217269897461
    6. '`()' → logprob: -9.976217269897461
    7. ')' → logprob: -9.976217269897461
    8. '```' → logprob: -9.976217269897461
    9. '(`' → logprob: -10.476217269897461
    10. '(

' → logprob: -10.476217269897461

Token 6: 'bob' (ID: 109200)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15217870473861694
    2. '+' → logprob: -2.2771787643432617
    3. '.' → logprob: -4.027178764343262
    4. ' if' → logprob: -4.777178764343262
    5. '[' → logprob: -6.152178764343262
    6. '*' → logprob: -6.277178764343262
    7. '==' → logprob: -6.402178764343262
    8. '(' → logprob: -6.402178764343262
    9. '=' → logprob: -6.902178764343262
    10. ')' → logprob: -7.152178764343262

Token 7: '_answer' (ID: 65702)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.813483476638794
    2. '.' → logprob: -1.063483476638794
    3. ' =' → logprob: -2.938483476638794
    4. '()' → logprob: -3.563483476638794
    5. '"' → logprob: -3.813483476638794
    6. ''' → logprob: -3.813483476638794
    7. '```' → logprob: -4.188483238220215
    8. '_' → logprob: -4.438483238220215
    9. '[:]' → logprob: -4.688483238220215
    10. '=' → logprob: -4.688483238220215

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27324217557907104
    2. '=' → logprob: -1.5232422351837158
    3. '_' → logprob: -4.273241996765137
    4. '(' → logprob: -6.148241996765137
    5. ' ' → logprob: -6.398241996765137
    6. ' ==' → logprob: -6.523241996765137
    7. '[' → logprob: -7.523241996765137
    8. '()' → logprob: -8.023241996765137
    9. ')' → logprob: -8.273241996765137
    10. '```' → logprob: -9.273241996765137

Token 9: ' int' (ID: 677)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.7923826575279236
    2. 'input' → logprob: -1.4173827171325684
    3. 'int' → logprob: -2.1673827171325684
    4. ' expression' → logprob: -2.4173827171325684
    5. ' input' → logprob: -3.1673827171325684
    6. ' int' → logprob: -3.9173827171325684
    7. '"' → logprob: -4.292382717132568
    8. ' ' → logprob: -5.542382717132568
    9. 'eval' → logprob: -5.542382717132568
    10. ''' → logprob: -5.667382717132568

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006409820169210434
    2. '('' → logprob: -5.131409645080566
    3. '("("' → logprob: -8.506409645080566
    4. ''' → logprob: -8.756409645080566
    5. '[' → logprob: -10.506409645080566
    6. '(expression' → logprob: -10.631409645080566
    7. '(
' → logprob: -11.256409645080566
    8. '40' → logprob: -11.756409645080566
    9. '(open' → logprob: -11.881409645080566
    10. '"' → logprob: -12.006409645080566

Token 11: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11936239898204803
    2. ')' → logprob: -2.6193623542785645
    3. '()' → logprob: -3.2443623542785645
    4. ' ())' → logprob: -8.369362831115723
    5. '(' → logprob: -8.619362831115723
    6. '().' → logprob: -8.744362831115723
    7. ' )' → logprob: -10.744362831115723
    8. '()))' → logprob: -10.744362831115723
    9. '`)' → logprob: -11.119362831115723
    10. '('' → logprob: -11.994362831115723

Token 12: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0002371521550230682
    2. ')' → logprob: -8.500237464904785
    3. 'split' → logprob: -11.125237464904785
    4. ' strip' → logprob: -11.500237464904785
    5. 'rstrip' → logprob: -11.750237464904785
    6. '_strip' → logprob: -16.00023651123047
    7. 'replace' → logprob: -16.12523651123047
    8. '(strip' → logprob: -16.25023651123047
    9. '())' → logprob: -16.37523651123047
    10. ' ' → logprob: -16.37523651123047

Token 13: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.044740889221429825
    2. ')' → logprob: -3.419740915298462
    3. '()' → logprob: -4.544740676879883
    4. '(' → logprob: -8.794740676879883
    5. ' ())' → logprob: -9.544740676879883
    6. '())
' → logprob: -9.794740676879883
    7. '()))' → logprob: -9.794740676879883
    8. '))' → logprob: -10.919740676879883
    9. '`)' → logprob: -11.169740676879883
    10. '()>' → logprob: -11.544740676879883

Token 14: '#' (ID: 2)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.07794764637947083
    2. 'result' → logprob: -3.2029476165771484
    3. 'eval' → logprob: -3.4529476165771484
    4. 'if' → logprob: -6.327947616577148
    5. 'correct' → logprob: -7.827947616577148
    6. 'calc' → logprob: -8.452947616577148
    7. 'answer' → logprob: -10.202947616577148
    8. 'expr' → logprob: -10.202947616577148
    9. 'tokens' → logprob: -10.202947616577148
    10. 'user' → logprob: -10.452947616577148

Token 15: ' Parse' (ID: 26701)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.017863096669316292
    2. 'result' → logprob: -4.3928632736206055
    3. ' try' → logprob: -6.2678632736206055
    4. 'tokens' → logprob: -6.6428632736206055
    5. 'correct' → logprob: -6.7678632736206055
    6. '#' → logprob: -8.267863273620605
    7. '```' → logprob: -9.142863273620605
    8. 'parts' → logprob: -9.142863273620605
    9. 'def' → logprob: -9.642863273620605
    10. 'eval' → logprob: -9.767863273620605

Token 16: ' numbers' (ID: 8663)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.539962112903595
    2. 'tokens' → logprob: -1.1649620532989502
    3. 'try' → logprob: -3.03996205329895
    4. 'eval' → logprob: -3.41496205329895
    5. 'expression' → logprob: -4.789962291717529
    6. ' result' → logprob: -5.539962291717529
    7. 'expr' → logprob: -5.789962291717529
    8. ' tokens' → logprob: -6.414962291717529
    9. 'parts' → logprob: -6.414962291717529
    10. 'answer' → logprob: -7.039962291717529

Token 17: ' and' (ID: 326)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.1637219190597534
    2. 'nums' → logprob: -1.2887219190597534
    3. 'num' → logprob: -1.9137219190597534
    4. 'numbers' → logprob: -2.038722038269043
    5. 'a' → logprob: -3.163722038269043
    6. ' numbers' → logprob: -3.788722038269043
    7. 'result' → logprob: -3.913722038269043
    8. '=' → logprob: -5.038722038269043
    9. ' tokens' → logprob: -5.163722038269043
    10. 'n' → logprob: -5.288722038269043

Token 18: ' operators' (ID: 29893)
  Prédit: ' operators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operators' → logprob: -0.18861952424049377
    2. 'operators' → logprob: -1.8136194944381714
    3. ' operator' → logprob: -5.688619613647461
    4. 'operator' → logprob: -6.188619613647461
    5. 'operations' → logprob: -7.188619613647461
    6. ' operations' → logprob: -7.188619613647461
    7. 'tokens' → logprob: -7.563619613647461
    8. ' ops' → logprob: -8.313619613647461
    9. 'ops' → logprob: -8.438619613647461
    10. ' tokens' → logprob: -8.938619613647461

Token 19: '
' (ID: 198)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.06341402977705002
    2. ' tokens' → logprob: -3.1884140968322754
    3. 'numbers' → logprob: -5.563414096832275
    4. 'result' → logprob: -5.938414096832275
    5. ' numbers' → logprob: -6.188414096832275
    6. 'import' → logprob: -6.313414096832275
    7. ' parts' → logprob: -6.438414096832275
    8. ' expression' → logprob: -6.813414096832275
    9. 'expression' → logprob: -6.938414096832275
    10. 'parts' → logprob: -7.063414096832275

Token 20: 'numbers' (ID: 85055)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.09347404539585114
    2. 'numbers' → logprob: -3.0934741497039795
    3. 'import' → logprob: -3.5934741497039795
    4. 'nums' → logprob: -5.3434739112854
    5. 'num' → logprob: -5.5934739112854
    6. ' tokens' → logprob: -5.8434739112854
    7. 'parts' → logprob: -6.3434739112854
    8. 'expr' → logprob: -6.9684739112854
    9. 'expression' → logprob: -7.2184739112854
    10. 'result' → logprob: -7.8434739112854

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006684751133434474
    2. '=' → logprob: -7.500668525695801
    3. ',' → logprob: -9.2506685256958
    4. 's' → logprob: -12.0006685256958
    5. '=[]' → logprob: -12.7506685256958
    6. '_' → logprob: -12.7506685256958
    7. ' ' → logprob: -13.2506685256958
    8. '_tokens' → logprob: -13.6256685256958
    9. ' =[' → logprob: -14.3756685256958
    10. ')' → logprob: -14.3756685256958

Token 22: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.7021915912628174
    2. '[' → logprob: -1.2021915912628174
    3. '[]' → logprob: -2.0771915912628174
    4. ' [' → logprob: -2.8271915912628174
    5. 'list' → logprob: -4.702191352844238
    6. ' list' → logprob: -5.952191352844238
    7. '[int' → logprob: -6.077191352844238
    8. ' []' → logprob: -6.327191352844238
    9. '[len' → logprob: -7.202191352844238
    10. '[i' → logprob: -8.077191352844238

Token 23: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00019507692195475101
    2. '0' → logprob: -9.375195503234863
    3. 'float' → logprob: -10.250195503234863
    4. ' int' → logprob: -10.375195503234863
    5. '*' → logprob: -11.375195503234863
    6. '(int' → logprob: -11.500195503234863
    7. '''' → logprob: -11.750195503234863
    8. '   ' → logprob: -13.000195503234863
    9. '""' → logprob: -13.125195503234863
    10. '-' → logprob: -13.250195503234863

Token 24: '(expression' (ID: 105635)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2810443341732025
    2. '(i' → logprob: -1.906044363975525
    3. '(n' → logprob: -2.7810442447662354
    4. '(expression' → logprob: -4.0310444831848145
    5. '(' → logprob: -5.1560444831848145
    6. '(num' → logprob: -5.6560444831848145
    7. '(s' → logprob: -5.7810444831848145
    8. '(token' → logprob: -6.1560444831848145
    9. '(part' → logprob: -7.6560444831848145
    10. '('' → logprob: -7.7810444831848145

Token 25: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.035555433481931686
    2. '[i' → logprob: -3.410555362701416
    3. '[:' → logprob: -6.910555362701416
    4. '[n' → logprob: -8.160555839538574
    5. ')' → logprob: -8.785555839538574
    6. '.split' → logprob: -9.035555839538574
    7. 'split' → logprob: -9.535555839538574
    8. ')]' → logprob: -10.285555839538574
    9. '[pos' → logprob: -10.285555839538574
    10. '0' → logprob: -10.410555839538574

Token 26: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.006097654812037945
    2. '])]' → logprob: -5.631097793579102
    3. '::' → logprob: -6.131097793579102
    4. '])]
' → logprob: -9.756097793579102
    5. ']' → logprob: -9.881097793579102
    6. ' ])' → logprob: -9.881097793579102
    7. ')' → logprob: -10.006097793579102
    8. ':i' → logprob: -10.381097793579102
    9. ')]' → logprob: -10.631097793579102
    10. ':' → logprob: -11.756097793579102

Token 27: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6310225129127502
    2. ')' → logprob: -1.1310224533081055
    3. ' for' → logprob: -2.8810224533081055
    4. '::' → logprob: -3.5060224533081055
    5. 'for' → logprob: -3.7560224533081055
    6. ' ' → logprob: -4.6310224533081055
    7. '])' → logprob: -4.7560224533081055
    8. ')]' → logprob: -5.0060224533081055
    9. ' ]' → logprob: -5.6310224533081055
    10. ' )' → logprob: -6.0060224533081055

Token 28: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02412911131978035
    2. ' i' → logprob: -4.1491289138793945
    3. 'range' → logprob: -4.8991289138793945
    4. ' ' → logprob: -7.5241289138793945
    5. 'i' → logprob: -9.649128913879395
    6. '	range' → logprob: -12.649128913879395
    7. '  ' → logprob: -14.399128913879395
    8. 'Range' → logprob: -15.024128913879395
    9. ' xrange' → logprob: -15.399128913879395
    10. '_range' → logprob: -16.02412986755371

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0905291810631752
    2. 'in' → logprob: -2.465529203414917
    3. ' ' → logprob: -6.465528964996338
    4. 'range' → logprob: -11.340529441833496
    5. '  ' → logprob: -12.215529441833496
    6. 'import' → logprob: -12.340529441833496
    7. ' i' → logprob: -13.340529441833496
    8. ',' → logprob: -13.590529441833496
    9. '+' → logprob: -13.840529441833496
    10. '0' → logprob: -14.153029441833496

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815205067396164
    2. ' range' → logprob: -4.018152236938477
    3. '	range' → logprob: -14.018152236938477
    4. ' ' → logprob: -14.143152236938477
    5. '(range' → logprob: -15.018152236938477
    6. ' xrange' → logprob: -16.018152236938477
    7. '[' → logprob: -16.393152236938477
    8. '  ' → logprob: -18.393152236938477
    9. '0' → logprob: -18.518152236938477
    10. '.range' → logprob: -18.518152236938477

Token 31: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005339420400559902
    2. '(len' → logprob: -5.255339622497559
    3. 'len' → logprob: -9.380339622497559
    4. '1' → logprob: -11.005339622497559
    5. '0' → logprob: -13.130339622497559
    6. ' (' → logprob: -13.880339622497559
    7. '(
' → logprob: -14.630339622497559
    8. '(-' → logprob: -15.130339622497559
    9. '2' → logprob: -15.255339622497559
    10. ' len' → logprob: -15.255339622497559

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.897412822581828e-05
    2. 'len' → logprob: -9.625068664550781
    3. '1' → logprob: -12.875068664550781
    4. '```' → logprob: -16.12506866455078
    5. '2' → logprob: -16.75006866455078
    6. ' ' → logprob: -17.00006866455078
    7. '(' → logprob: -17.37506866455078
    8. '(len' → logprob: -17.62506866455078
    9. ' len' → logprob: -18.00006866455078
    10. '::' → logprob: -18.62506866455078

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006200384348630905
    2. ',len' → logprob: -5.381200313568115
    3. ' ,' → logprob: -6.506200313568115
    4. '+' → logprob: -10.006200790405273
    5. ' ' → logprob: -10.756200790405273
    6. ',+' → logprob: -11.881200790405273
    7. ',length' → logprob: -12.506200790405273
    8. 'len' → logprob: -13.006200790405273
    9. ')' → logprob: -13.631200790405273
    10. ' +' → logprob: -13.881200790405273

Token 34: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0031777136027812958
    2. ' len' → logprob: -5.753177642822266
    3. '	len' → logprob: -17.128177642822266
    4. ',len' → logprob: -17.378177642822266
    5. 'le' → logprob: -17.503177642822266
    6. '(len' → logprob: -18.878177642822266
    7. ' ' → logprob: -19.503177642822266
    8. 'leni' → logprob: -20.128177642822266
    9. '=len' → logprob: -20.253177642822266
    10. '<len' → logprob: -20.503177642822266

Token 35: '(expression' (ID: 105635)
  Prédit: '(expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expression' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -9.750059127807617
    3. 'expression' → logprob: -15.000059127807617
    4. '(express' → logprob: -15.750059127807617
    5. '(ex' → logprob: -16.125059127807617
    6. '(numbers' → logprob: -17.750059127807617
    7. '(Expression' → logprob: -18.000059127807617
    8. ' (' → logprob: -18.375059127807617
    9. '(expr' → logprob: -18.625059127807617
    10. '(
' → logprob: -18.625059127807617

Token 36: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004777568392455578
    2. '),' → logprob: -5.504777431488037
    3. ' ,' → logprob: -7.629777431488037
    4. ')' → logprob: -8.754777908325195
    5. '(),' → logprob: -10.254777908325195
    6. 'expression' → logprob: -12.004777908325195
    7. ' ' → logprob: -12.129777908325195
    8. ' ),' → logprob: -13.004777908325195
    9. ',),' → logprob: -13.629777908325195
    10. ',i' → logprob: -14.379777908325195

Token 37: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.0339031834737398e-05
    2. ' ' → logprob: -10.875020027160645
    3. '
' → logprob: -14.125020027160645
    4. '```' → logprob: -14.625020027160645
    5. '1' → logprob: -16.87502098083496
    6. ')' → logprob: -17.75002098083496
    7. '3' → logprob: -17.87502098083496
    8. '``' → logprob: -17.93752098083496
    9. '4' → logprob: -18.31252098083496
    10. '۲' → logprob: -18.31252098083496

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -12.125012397766113
    3. '
' → logprob: -12.625012397766113
    4. '```' → logprob: -13.500012397766113
    5. '

' → logprob: -15.062512397766113
    6. '1' → logprob: -15.062512397766113
    7. '``' → logprob: -15.312512397766113
    8. '	' → logprob: -15.750012397766113
    9. '۲' → logprob: -15.937512397766113
    10. '' → logprob: -16.00001335144043

Token 39: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008300965651869774
    2. ')' → logprob: -4.88330078125
    3. ']' → logprob: -7.38330078125
    4. ' )' → logprob: -10.00830078125
    5. '+' → logprob: -11.38330078125
    6. '),' → logprob: -11.88330078125
    7. ' ]' → logprob: -12.88330078125
    8. ')])' → logprob: -13.38330078125
    9. ')][' → logprob: -13.50830078125
    10. ',' → logprob: -14.25830078125

Token 40: 'operators' (ID: 68510)
  Prédit: 'operators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.005852116271853447
    2. ' operators' → logprob: -6.130852222442627
    3. 'operator' → logprob: -7.005852222442627
    4. 'ops' → logprob: -7.130852222442627
    5. 'operations' → logprob: -7.505852222442627
    6. 'op' → logprob: -7.630852222442627
    7. 'oper' → logprob: -7.880852222442627
    8. ' ' → logprob: -8.505851745605469
    9. 'tokens' → logprob: -8.880851745605469
    10. 'opers' → logprob: -9.630851745605469

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004633638076484203
    2. '=' → logprob: -5.37963342666626
    3. ' =[' → logprob: -12.504633903503418
    4. '[' → logprob: -12.629633903503418
    5. ')' → logprob: -13.004633903503418
    6. ']' → logprob: -13.629633903503418
    7. ' ' → logprob: -14.504633903503418
    8. '=[]' → logprob: -15.004633903503418
    9. '=['' → logprob: -15.254633903503418
    10. 's' → logprob: -15.254633903503418

Token 42: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03808474913239479
    2. ' [' → logprob: -3.2880847454071045
    3. 'expression' → logprob: -11.163084983825684
    4. '(expression' → logprob: -11.663084983825684
    5. '[i' → logprob: -12.163084983825684
    6. '[int' → logprob: -12.288084983825684
    7. '[e' → logprob: -13.038084983825684
    8. ' expression' → logprob: -13.413084983825684
    9. ' ' → logprob: -13.663084983825684
    10. '[
' → logprob: -14.288084983825684

Token 43: 'expression' (ID: 61248)
  Prédit: 'expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.00012987985974177718
    2. 'c' → logprob: -9.750129699707031
    3. ' expression' → logprob: -9.750129699707031
    4. 'operator' → logprob: -12.125129699707031
    5. 'char' → logprob: -12.500129699707031
    6. 'op' → logprob: -13.375129699707031
    7. '(expression' → logprob: -14.250129699707031
    8. 'x' → logprob: -14.250129699707031
    9. 'ch' → logprob: -14.500129699707031
    10. ' c' → logprob: -15.625129699707031

Token 44: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.2020991056924686e-05
    2. 'i' → logprob: -10.875032424926758
    3. '[' → logprob: -11.375032424926758
    4. '```' → logprob: -13.500032424926758
    5. '(i' → logprob: -15.875032424926758
    6. '   ' → logprob: -16.875032424926758
    7. '	i' → logprob: -17.375032424926758
    8. ' [' → logprob: -18.375032424926758
    9. '[
' → logprob: -18.375032424926758
    10. ' i' → logprob: -18.625032424926758

Token 45: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16952304542064667
    2. '+' → logprob: -2.294523000717163
    3. 'for' → logprob: -2.919523000717163
    4. ']' → logprob: -7.794523239135742
    5. ' ' → logprob: -8.169523239135742
    6. '	for' → logprob: -8.794523239135742
    7. ' in' → logprob: -9.544523239135742
    8. ' i' → logprob: -9.669523239135742
    9. '   ' → logprob: -9.669523239135742
    10. '1' → logprob: -10.544523239135742

Token 46: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07997279614210129
    2. 'for' → logprob: -2.579972743988037
    3. ' ' → logprob: -7.079972743988037
    4. '+' → logprob: -9.704973220825195
    5. '	for' → logprob: -9.829973220825195
    6. '1' → logprob: -10.079973220825195
    7. '2' → logprob: -10.579973220825195
    8. '  ' → logprob: -10.704973220825195
    9. ' i' → logprob: -11.329973220825195
    10. ' in' → logprob: -11.829973220825195

Token 47: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3135435879230499
    2. 'i' → logprob: -1.3135435581207275
    3. ' range' → logprob: -9.063543319702148
    4. ' in' → logprob: -9.313543319702148
    5. 'range' → logprob: -10.188543319702148
    6. ' ' → logprob: -10.563543319702148
    7. '	i' → logprob: -11.563543319702148
    8. ' ' → logprob: -13.438543319702148
    9. '   ' → logprob: -14.938543319702148
    10. 'in' → logprob: -15.188543319702148

Token 48: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.28232917189598083
    2. 'range' → logprob: -1.5323292016983032
    3. ' in' → logprob: -3.5323290824890137
    4. 'in' → logprob: -7.407329082489014
    5. ' ' → logprob: -9.282329559326172
    6. '	range' → logprob: -12.782329559326172
    7. '(' → logprob: -13.657329559326172
    8. '(range' → logprob: -13.907329559326172
    9. '_range' → logprob: -15.157329559326172
    10. 'Range' → logprob: -15.407329559326172

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975071594119072
    2. ' range' → logprob: -3.5297508239746094
    3. '(range' → logprob: -16.40475082397461
    4. ' ' → logprob: -16.77975082397461
    5. '	range' → logprob: -17.77975082397461
    6. '[' → logprob: -18.15475082397461
    7. '(' → logprob: -18.40475082397461
    8. '1' → logprob: -19.27975082397461
    9. '   ' → logprob: -21.77975082397461
    10. '.range' → logprob: -22.02975082397461

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. ' (' → logprob: -14.000000953674316
    3. '(
' → logprob: -16.250001907348633
    4. '((' → logprob: -18.625001907348633
    5. '(

' → logprob: -19.250001907348633
    6. '```' → logprob: -20.750001907348633
    7. '\(' → logprob: -21.000001907348633
    8. '(i' → logprob: -21.250001907348633
    9. '(len' → logprob: -21.500001907348633
    10. ' ' → logprob: -21.625001907348633

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -13.125003814697266
    3. '(' → logprob: -13.500003814697266
    4. '0' → logprob: -15.500003814697266
    5. '```' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.437503814697266
    7. 'len' → logprob: -16.500003814697266
    8. '
' → logprob: -17.125003814697266
    9. '  ' → logprob: -17.437503814697266
    10. '    ' → logprob: -17.937503814697266

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06253121793270111
    2. ',len' → logprob: -2.8125312328338623
    3. ' ,' → logprob: -7.562530994415283
    4. 'len' → logprob: -11.312531471252441
    5. ' len' → logprob: -11.312531471252441
    6. '(len' → logprob: -11.937531471252441
    7. '<len' → logprob: -11.937531471252441
    8. ' ' → logprob: -13.187531471252441
    9. '=len' → logprob: -13.312531471252441
    10. '	len' → logprob: -14.187531471252441

Token 53: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011048289015889168
    2. ' len' → logprob: -4.511048316955566
    3. '(len' → logprob: -15.386048316955566
    4. '	len' → logprob: -15.761048316955566
    5. ',len' → logprob: -16.63604736328125
    6. ' ' → logprob: -17.76104736328125
    7. '```' → logprob: -18.01104736328125
    8. '<len' → logprob: -18.13604736328125
    9. '[len' → logprob: -18.38604736328125
    10. '=len' → logprob: -19.26104736328125

Token 54: '(expression' (ID: 105635)
  Prédit: '(expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expression' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.875024795532227
    3. 'expression' → logprob: -12.125024795532227
    4. '(express' → logprob: -17.625024795532227
    5. ' expression' → logprob: -18.500024795532227
    6. '(
' → logprob: -19.750024795532227
    7. '(expr' → logprob: -20.375024795532227
    8. '.expression' → logprob: -20.500024795532227
    9. ' (' → logprob: -20.625024795532227
    10. '(Expression' → logprob: -21.000024795532227

Token 55: '),' (ID: 936)
  Prédit: '(expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expression' → logprob: -0.18794424831867218
    2. 'expression' → logprob: -1.9379442930221558
    3. '.expression' → logprob: -3.687944173812866
    4. ')' → logprob: -7.312944412231445
    5. ',' → logprob: -7.312944412231445
    6. ' expression' → logprob: -8.437944412231445
    7. '-expression' → logprob: -8.437944412231445
    8. '),' → logprob: -8.562944412231445
    9. '(' → logprob: -9.062944412231445
    10. '_expression' → logprob: -9.062944412231445

Token 56: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002829723060131073
    2. ' ' → logprob: -5.877829551696777
    3. '1' → logprob: -10.627829551696777
    4. ')' → logprob: -15.502829551696777
    5. '+' → logprob: -16.002830505371094
    6. '   ' → logprob: -16.377830505371094
    7. '```' → logprob: -16.877830505371094
    8. '  ' → logprob: -17.002830505371094
    9. ' ' → logprob: -18.127830505371094
    10. '0' → logprob: -18.127830505371094

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.0868278524139896e-05
    2. ' ' → logprob: -9.75006103515625
    3. '1' → logprob: -12.87506103515625
    4. '+' → logprob: -18.50006103515625
    5. '   ' → logprob: -18.75006103515625
    6. ')' → logprob: -18.75006103515625
    7. '0' → logprob: -19.87506103515625
    8. '

' → logprob: -19.87506103515625
    9. '```' → logprob: -20.00006103515625
    10. '۲' → logprob: -20.12506103515625

Token 58: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013619766104966402
    2. ']' → logprob: -9.000136375427246
    3. ')' → logprob: -11.375136375427246
    4. ' )' → logprob: -14.625136375427246
    5. '')]' → logprob: -15.375136375427246
    6. ' ]' → logprob: -15.750136375427246
    7. '])]' → logprob: -15.875136375427246
    8. '}]' → logprob: -16.62513542175293
    9. ')]
' → logprob: -16.87513542175293
    10. '])' → logprob: -16.87513542175293

Token 59: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7803322076797485
    2. 'def' → logprob: -1.7803322076797485
    3. ')' → logprob: -2.155332088470459
    4. '#' → logprob: -2.655332088470459
    5. '*' → logprob: -2.655332088470459
    6. '+' → logprob: -3.280332088470459
    7. '<|end|>' → logprob: -3.780332088470459
    8. '(' → logprob: -4.655332088470459
    9. 'correct' → logprob: -4.655332088470459
    10. '=' → logprob: -5.530332088470459

Token 60: ' calc' (ID: 25691)
  Prédit: ' evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.6685814261436462
    2. ' calculate' → logprob: -0.7935814261436462
    3. ' max' → logprob: -4.293581485748291
    4. ' compute' → logprob: -4.793581485748291
    5. ' calc' → logprob: -5.168581485748291
    6. ' maximize' → logprob: -5.793581485748291
    7. ' solve' → logprob: -6.918581485748291
    8. ' eval' → logprob: -7.043581485748291
    9. ' apply' → logprob: -7.418581485748291
    10. ' ' → logprob: -7.418581485748291

Token 61: '_mul' (ID: 75111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09834281355142593
    2. '_' → logprob: -2.7233428955078125
    3. '(a' → logprob: -3.8483428955078125
    4. ')' → logprob: -7.2233428955078125
    5. ' (' → logprob: -7.3483428955078125
    6. 'ulate' → logprob: -7.8483428955078125
    7. '_expression' → logprob: -7.9733428955078125
    8. '_val' → logprob: -7.9733428955078125
    9. '(x' → logprob: -8.098342895507812
    10. '(expression' → logprob: -8.098342895507812

Token 62: '_first' (ID: 29347)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.37700486183166504
    2. 'ip' → logprob: -1.502004861831665
    3. '*' → logprob: -3.377004861831665
    4. '(' → logprob: -4.377004623413086
    5. '*)' → logprob: -4.502004623413086
    6. '(x' → logprob: -4.752004623413086
    7. 'ay' → logprob: -5.752004623413086
    8. ')' → logprob: -6.002004623413086
    9. 'y' → logprob: -6.252004623413086
    10. 'tip' → logprob: -6.252004623413086

Token 63: '(nums' (ID: 40372)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.057191766798496246
    2. '(expression' → logprob: -2.932191848754883
    3. '(expr' → logprob: -6.932191848754883
    4. '():' → logprob: -7.807191848754883
    5. '(parent' → logprob: -8.807191848754883
    6. ' (' → logprob: -9.057191848754883
    7. '()' → logprob: -9.557191848754883
    8. '_parent' → logprob: -9.557191848754883
    9. '('' → logprob: -9.807191848754883
    10. '(a' → logprob: -10.182191848754883

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008201113669201732
    2. ' ,' → logprob: -7.250820159912109
    3. '):' → logprob: -9.37582015991211
    4. ',n' → logprob: -12.37582015991211
    5. ',u' → logprob: -12.87582015991211
    6. ')' → logprob: -13.00082015991211
    7. ':' → logprob: -13.62582015991211
    8. 's' → logprob: -13.87582015991211
    9. ',p' → logprob: -13.87582015991211
    10. '):
' → logprob: -14.00082015991211

Token 65: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.06245194002985954
    2. ' ops' → logprob: -2.8124518394470215
    3. '_ops' → logprob: -9.06245231628418
    4. 'op' → logprob: -9.06245231628418
    5. 'opers' → logprob: -9.43745231628418
    6. '.ops' → logprob: -10.06245231628418
    7. ' op' → logprob: -10.43745231628418
    8. 'opts' → logprob: -10.68745231628418
    9. 'oper' → logprob: -11.43745231628418
    10. 'operators' → logprob: -11.68745231628418

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021296629682183266
    2. ')' → logprob: -3.896296739578247
    3. ',' → logprob: -7.396296501159668
    4. ' ):' → logprob: -9.271296501159668
    5. '):
' → logprob: -10.521296501159668
    6. ' )' → logprob: -12.396296501159668
    7. '):
' → logprob: -13.021296501159668
    8. ')):' → logprob: -13.146296501159668
    9. ':' → logprob: -13.396296501159668
    10. '):

' → logprob: -13.521296501159668

Token 67: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5662648677825928
    2. '():' → logprob: -1.3162648677825928
    3. '   ' → logprob: -2.0662648677825928
    4. '):' → logprob: -3.5662648677825928
    5. '(' → logprob: -5.316265106201172
    6. ')' → logprob: -7.316265106201172
    7. ' :' → logprob: -7.441265106201172
    8. '<|end|>' → logprob: -7.566265106201172
    9. '()' → logprob: -7.941265106201172
    10. '[:]' → logprob: -8.316265106201172

Token 68: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9696331024169922
    2. ' nums' → logprob: -1.3446331024169922
    3. 'nums' → logprob: -1.5946331024169922
    4. 'result' → logprob: -2.844633102416992
    5. ' result' → logprob: -2.969633102416992
    6. ' stack' → logprob: -4.094633102416992
    7. ' res' → logprob: -5.094633102416992
    8. 'stack' → logprob: -5.594633102416992
    9. 'res' → logprob: -5.719633102416992
    10. '    ' → logprob: -5.844633102416992

Token 69: ' First' (ID: 8338)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8753211498260498
    2. 'res' → logprob: -1.5003211498260498
    3. 'stack' → logprob: -2.37532114982605
    4. 'nums' → logprob: -2.50032114982605
    5. 'i' → logprob: -3.12532114982605
    6. ' result' → logprob: -3.50032114982605
    7. ' res' → logprob: -3.62532114982605
    8. ' stack' → logprob: -3.87532114982605
    9. '   ' → logprob: -4.750321388244629
    10. 'n' → logprob: -4.750321388244629

Token 70: ' perform' (ID: 3347)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1814751625061035
    2. ' for' → logprob: -2.0564751625061035
    3. ' ' → logprob: -2.1814751625061035
    4. 'token' → logprob: -2.5564751625061035
    5. '   ' → logprob: -2.9314751625061035
    6. 'for' → logprob: -3.3064751625061035
    7. ' #' → logprob: -3.6814751625061035
    8. ')' → logprob: -3.6814751625061035
    9. 'tokens' → logprob: -3.8064751625061035
    10. 'result' → logprob: -3.9314751625061035

Token 71: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5784761905670166
    2. 'multip' → logprob: -1.4534761905670166
    3. ' multip' → logprob: -2.8284761905670166
    4. 'all' → logprob: -3.2034761905670166
    5. '   ' → logprob: -3.5784761905670166
    6. ' ' → logprob: -3.8284761905670166
    7. ' multiplication' → logprob: -4.0784759521484375
    8. ' the' → logprob: -4.4534759521484375
    9. '*' → logprob: -5.0784759521484375
    10. ' for' → logprob: -5.3284759521484375

Token 72: ' multip' (ID: 17524)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.2208768129348755
    2. ' multip' → logprob: -1.8458768129348755
    3. ' '*'' → logprob: -4.470876693725586
    4. '*' → logprob: -4.595876693725586
    5. ''*' → logprob: -5.345876693725586
    6. ' *' → logprob: -5.470876693725586
    7. 'mul' → logprob: -6.095876693725586
    8. ' ' → logprob: -6.220876693725586
    9. ' multiplication' → logprob: -6.595876693725586
    10. ' the' → logprob: -6.845876693725586

Token 73: 'lications' (ID: 17986)
  Prédit: 'lications'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lications' → logprob: -0.5864200592041016
    2. 'lication' → logprob: -0.8364200592041016
    3. 'ly' → logprob: -4.836420059204102
    4. 'li' → logprob: -6.586420059204102
    5. 'l' → logprob: -7.836420059204102
    6. 'y' → logprob: -8.461420059204102
    7. 'lation' → logprob: -8.836420059204102
    8. '*' → logprob: -8.836420059204102
    9. 'lic' → logprob: -9.711420059204102
    10. '```' → logprob: -10.336420059204102

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02114654891192913
    2. '<|end|>' → logprob: -4.646146774291992
    3. ',' → logprob: -5.896146774291992
    4. ':' → logprob: -6.021146774291992
    5. ' while' → logprob: -6.146146774291992
    6. ' for' → logprob: -6.896146774291992
    7. '<|end|>' → logprob: -7.021146774291992
    8. ' ' → logprob: -7.646146774291992
    9. '       ' → logprob: -7.896146774291992
    10. ' and' → logprob: -8.021146774291992

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00947627890855074
    2. ' for' → logprob: -5.884476184844971
    3. '<|end|>' → logprob: -6.384476184844971
    4. ',' → logprob: -6.509476184844971
    5. ' while' → logprob: -6.634476184844971
    6. ' ' → logprob: -7.259476184844971
    7. ' and' → logprob: -7.759476184844971
    8. '  ' → logprob: -8.634476661682129
    9. '<|end|>' → logprob: -8.759476661682129
    10. ')' → logprob: -8.759476661682129

Token 76: ' new' (ID: 620)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2920935153961182
    2. '   ' → logprob: -1.4170935153961182
    3. 'i' → logprob: -1.9170935153961182
    4. ' i' → logprob: -2.542093515396118
    5. 'nums' → logprob: -2.792093515396118
    6. 'res' → logprob: -3.167093515396118
    7. ' new' → logprob: -3.167093515396118
    8. 'new' (adapté à ' new') → logprob: -3.417093515396118
    9. 'stack' → logprob: -3.792093515396118
    10. ' result' → logprob: -4.042093276977539

Token 77: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.01677408628165722
    2. '_numbers' → logprob: -4.1417741775512695
    3. '_num' → logprob: -8.01677417755127
    4. '_' → logprob: -8.39177417755127
    5. 'nums' → logprob: -9.39177417755127
    6. '_n' → logprob: -9.76677417755127
    7. '_vals' → logprob: -11.14177417755127
    8. '_values' → logprob: -12.14177417755127
    9. 'Nums' → logprob: -12.76677417755127
    10. '_results' → logprob: -12.89177417755127

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025430899113416672
    2. '=' → logprob: -3.775430917739868
    3. '=[]' → logprob: -6.775430679321289
    4. ',' → logprob: -6.900430679321289
    5. ' ' → logprob: -11.900430679321289
    6. '=[]
' → logprob: -12.650430679321289
    7. ')' → logprob: -12.775430679321289
    8. '[:]' → logprob: -12.775430679321289
    9. ' ,' → logprob: -13.025430679321289
    10. '[]' → logprob: -13.025430679321289

Token 79: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.18452611565589905
    2. '[n' → logprob: -2.434526205062866
    3. '[num' → logprob: -2.934526205062866
    4. '[' → logprob: -3.684526205062866
    5. ' []' → logprob: -6.559525966644287
    6. ' [' → logprob: -7.434525966644287
    7. 'nums' → logprob: -8.059526443481445
    8. '[number' → logprob: -9.184526443481445
    9. '[]
' → logprob: -9.684526443481445
    10. '[len' → logprob: -10.809526443481445

Token 80: '   ' (ID: 271)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.08456289768219
    2. 'current' → logprob: -1.08456289768219
    3. '   ' → logprob: -2.7095627784729004
    4. 'i' → logprob: -2.7095627784729004
    5. 'temp' → logprob: -2.7095627784729004
    6. ' i' → logprob: -3.5845627784729004
    7. ' curr' → logprob: -3.8345627784729004
    8. 'curr' → logprob: -3.8345627784729004
    9. 'tmp' → logprob: -3.8345627784729004
    10. ' temp' → logprob: -4.3345627784729

Token 81: ' new' (ID: 620)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.531123161315918
    2. 'current' → logprob: -1.281123161315918
    3. 'temp' → logprob: -3.156123161315918
    4. 'tmp' → logprob: -3.656123161315918
    5. ' temp' → logprob: -4.156123161315918
    6. 'curr' → logprob: -4.281123161315918
    7. 'cur' → logprob: -4.531123161315918
    8. ' cur' → logprob: -4.906123161315918
    9. ' curr' → logprob: -5.156123161315918
    10. ' tmp' → logprob: -5.281123161315918

Token 82: '_ops' (ID: 53418)
  Prédit: '_nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.05977876856923103
    2. '_ops' → logprob: -3.9347786903381348
    3. '_' → logprob: -4.309778690338135
    4. '_numbers' → logprob: -4.434778690338135
    5. '_num' → logprob: -4.809778690338135
    6. 'nums' → logprob: -6.059778690338135
    7. '_n' → logprob: -7.934778690338135
    8. '_tokens' → logprob: -7.934778690338135
    9. '_op' → logprob: -7.934778690338135
    10. ' =' → logprob: -8.184779167175293

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02330743707716465
    2. '=' → logprob: -3.7733073234558105
    3. '=[]' → logprob: -10.398307800292969
    4. '.append' → logprob: -10.523307800292969
    5. ',' → logprob: -13.773307800292969
    6. '[' → logprob: -14.148307800292969
    7. '[]' → logprob: -14.648307800292969
    8. '[:]' → logprob: -14.648307800292969
    9. ' ' → logprob: -15.023307800292969
    10. '.' → logprob: -15.023307800292969

Token 84: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0009280181839130819
    2. ' []' → logprob: -7.000927925109863
    3. '[]
' → logprob: -11.875927925109863
    4. '[' → logprob: -12.250927925109863
    5. '[]>' → logprob: -13.500927925109863
    6. ' ' → logprob: -13.500927925109863
    7. '=[]' → logprob: -14.875927925109863
    8. '[],' → logprob: -15.125927925109863
    9. '[])' → logprob: -15.250927925109863
    10. '[:]' → logprob: -15.375927925109863

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6903719305992126
    2. ' current' → logprob: -1.4403719902038574
    3. ' i' → logprob: -2.1903719902038574
    4. 'i' → logprob: -3.1903719902038574
    5. 'current' → logprob: -3.1903719902038574
    6. ' temp' → logprob: -4.440371990203857
    7. ' curr' → logprob: -4.565371990203857
    8. 'temp' → logprob: -4.940371990203857
    9. ' cur' → logprob: -5.315371990203857
    10. ' prev' → logprob: -5.565371990203857

Token 86: ' acc' (ID: 1259)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07403997331857681
    2. 'current' → logprob: -3.699039936065674
    3. 'acc' (adapté à ' acc') → logprob: -3.949039936065674
    4. ' i' → logprob: -4.574039936065674
    5. ' current' → logprob: -5.199039936065674
    6. 'temp' → logprob: -5.199039936065674
    7. '   ' → logprob: -5.949039936065674
    8. 'curr' → logprob: -6.949039936065674
    9. 'tmp' → logprob: -7.574039936065674
    10. 'prev' → logprob: -7.699039936065674

Token 87: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7204692959785461
    2. ' =' → logprob: -0.7204692959785461
    3. 'umulator' → logprob: -4.0954694747924805
    4. 'umul' → logprob: -5.2204694747924805
    5. 'um' → logprob: -5.5954694747924805
    6. 'umulate' → logprob: -6.8454694747924805
    7. 'u' → logprob: -10.84546947479248
    8. 'ulum' → logprob: -10.97046947479248
    9. 'ulator' → logprob: -11.09546947479248
    10. ' ' → logprob: -11.22046947479248

Token 88: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.05603961646556854
    2. '1' → logprob: -3.556039571762085
    3. 'numbers' → logprob: -4.056039810180664
    4. ' nums' → logprob: -4.931039810180664
    5. ' numbers' → logprob: -6.931039810180664
    6. ' ' → logprob: -8.556039810180664
    7. 'None' → logprob: -9.056039810180664
    8. 'num' → logprob: -9.556039810180664
    9. ' None' → logprob: -10.056039810180664
    10. '(nums' → logprob: -12.806039810180664

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019310165662318468
    2. '0' → logprob: -6.251931190490723
    3. ' [' → logprob: -13.626931190490723
    4. ' ' → logprob: -14.626931190490723
    5. '<|end|>' → logprob: -15.001931190490723
    6. '   ' → logprob: -15.876931190490723
    7. '[
' → logprob: -16.876930236816406
    8. '\[' → logprob: -17.126930236816406
    9. '[token' → logprob: -17.251930236816406
    10. '1' → logprob: -17.376930236816406

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '[' → logprob: -15.000004768371582
    4. '<|end|>' → logprob: -18.000003814697266
    5. '۰' → logprob: -18.375003814697266
    6. '<|end|>' → logprob: -19.500003814697266
    7. '   ' → logprob: -19.750003814697266
    8. '00' → logprob: -20.000003814697266
    9. '０' → logprob: -20.125003814697266
    10. '1' → logprob: -20.250003814697266

Token 91: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01565503515303135
    2. '<|end|>' → logprob: -4.390655040740967
    3. ']' → logprob: -6.265655040740967
    4. '<|end|>' → logprob: -7.765655040740967
    5. ' )' → logprob: -7.890655040740967
    6. ')
' → logprob: -8.015654563903809
    7. '*' → logprob: -10.515654563903809
    8. ')*' → logprob: -11.015654563903809
    9. ' ' → logprob: -11.265654563903809
    10. '*)' → logprob: -11.765654563903809

Token 92: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10188886523246765
    2. 'for' → logprob: -2.97688889503479
    3. '   ' → logprob: -3.60188889503479
    4. '	for' → logprob: -4.351888656616211
    5. '<|end|>' → logprob: -6.601888656616211
    6. ' ' → logprob: -6.726888656616211
    7. ' 
' → logprob: -6.976888656616211
    8. '    
' → logprob: -7.226888656616211
    9. '<|end|>' → logprob: -8.351888656616211
    10. '
' → logprob: -8.351888656616211

Token 93: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0723516047000885
    2. 'for' (adapté à ' for') → logprob: -2.8223516941070557
    3. ' 
' → logprob: -5.322351455688477
    4. ' ' → logprob: -6.572351455688477
    5. '	for' → logprob: -6.697351455688477
    6. '
' → logprob: -6.947351455688477
    7. ' i' → logprob: -7.197351455688477
    8. '<|end|>' → logprob: -8.572351455688477
    9. '<|end|>' → logprob: -8.572351455688477
    10. '   ' → logprob: -8.697351455688477

Token 94: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132888972759247
    2. ' i' → logprob: -1.313288927078247
    3. ' range' → logprob: -11.313288688659668
    4. 'range' → logprob: -12.188288688659668
    5. 'idx' → logprob: -12.313288688659668
    6. ' idx' → logprob: -12.938288688659668
    7. ' ' → logprob: -13.688288688659668
    8. '1' → logprob: -14.563288688659668
    9. '	i' → logprob: -14.688288688659668
    10. '0' → logprob: -15.063288688659668

Token 95: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006055590230971575
    2. 'in' → logprob: -5.1310553550720215
    3. ' ' → logprob: -9.13105583190918
    4. ',' → logprob: -11.50605583190918
    5. '+' → logprob: -13.00605583190918
    6. '	in' → logprob: -13.13105583190918
    7. '  ' → logprob: -14.00605583190918
    8. '1' → logprob: -14.13105583190918
    9. ' ,' → logprob: -14.38105583190918
    10. '0' → logprob: -14.50605583190918

Token 96: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.10047785192728043
    2. 'op' → logprob: -2.350477933883667
    3. '(op' → logprob: -8.725478172302246
    4. ' o' → logprob: -10.100478172302246
    5. ' (' → logprob: -10.475478172302246
    6. '	op' → logprob: -11.350478172302246
    7. ' ' → logprob: -12.225478172302246
    8. 'operator' → logprob: -12.350478172302246
    9. ' operator' → logprob: -12.475478172302246
    10. 'o' → logprob: -12.600478172302246

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00730335246771574
    2. 'in' → logprob: -5.507303237915039
    3. ',' → logprob: -5.882303237915039
    4. ' ' → logprob: -8.132303237915039
    5. ' ,' → logprob: -9.132303237915039
    6. '	in' → logprob: -11.382303237915039
    7. '<|end|>' → logprob: -12.132303237915039
    8. 's' → logprob: -12.632303237915039
    9. '  ' → logprob: -13.007303237915039
    10. ')' → logprob: -13.257303237915039

Token 98: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.061969030648469925
    2. 'enumer' → logprob: -2.811969041824341
    3. ' range' → logprob: -15.436968803405762
    4. ' ' → logprob: -15.436968803405762
    5. '```' → logprob: -15.436968803405762
    6. ' zip' → logprob: -15.686968803405762
    7. 'range' → logprob: -15.811968803405762
    8. 'en' → logprob: -16.061969757080078
    9. '<|end|>' → logprob: -16.561969757080078
    10. 'Enumer' → logprob: -17.061969757080078

Token 99: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.7848862373502925e-05
    2. ' (' → logprob: -10.500027656555176
    3. 'operators' → logprob: -16.375028610229492
    4. ')' → logprob: -16.500028610229492
    5. '(op' → logprob: -16.875028610229492
    6. '(
' → logprob: -17.375028610229492
    7. 'ops' → logprob: -17.500028610229492
    8. ' operators' → logprob: -18.250028610229492
    9. ' ' → logprob: -18.375028610229492
    10. '(os' → logprob: -19.625028610229492

Token 100: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.015351141802966595
    2. 'operators' → logprob: -4.265351295471191
    3. ' ops' → logprob: -6.890351295471191
    4. ' operators' → logprob: -8.890351295471191
    5. ')' → logprob: -11.265351295471191
    6. 'operations' → logprob: -12.015351295471191
    7. 'opers' → logprob: -12.515351295471191
    8. ' ' → logprob: -13.015351295471191
    9. 'op' → logprob: -13.515351295471191
    10. '.ops' → logprob: -13.515351295471191

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13151633739471436
    2. ' ):' → logprob: -2.256516456604004
    3. '):
' → logprob: -4.131516456604004
    4. ' ):
' → logprob: -6.256516456604004
    5. ')' → logprob: -8.381516456604004
    6. '):
' → logprob: -8.881516456604004
    7. ':' → logprob: -9.256516456604004
    8. ' :' → logprob: -10.006516456604004
    9. ' )' → logprob: -10.631516456604004
    10. '):

' → logprob: -12.381516456604004

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1390775442123413
    2. '<|end|>' → logprob: -1.2640775442123413
    3. ' ' → logprob: -1.5140775442123413
    4. '    ' → logprob: -2.764077663421631
    5. '   ' → logprob: -2.889077663421631
    6. ' if' → logprob: -3.014077663421631
    7. '<|end|>' → logprob: -6.139077663421631
    8. ':' → logprob: -6.389077663421631
    9. ' 
' → logprob: -6.514077663421631
    10. '  ' → logprob: -6.764077663421631

Token 103: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09946940094232559
    2. '<|end|>' → logprob: -3.0994694232940674
    3. '       ' → logprob: -3.8494694232940674
    4. '    ' → logprob: -4.224469184875488
    5. ' ' → logprob: -4.849469184875488
    6. '<|end|>' → logprob: -6.224469184875488
    7. '   ' → logprob: -6.599469184875488
    8. 'if' (adapté à ' if') → logprob: -6.974469184875488
    9. '        ' → logprob: -7.099469184875488
    10. '```' → logprob: -8.599469184875488

Token 104: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.011053125374019146
    2. 'op' → logprob: -4.511053085327148
    3. '(op' → logprob: -13.011053085327148
    4. '	op' → logprob: -13.011053085327148
    5. ' ' → logprob: -15.136053085327148
    6. ' ' → logprob: -15.386053085327148
    7. '.op' → logprob: -16.13605308532715
    8. '_op' → logprob: -16.51105308532715
    9. ''op' → logprob: -17.38605308532715
    10. '```' → logprob: -18.13605308532715

Token 105: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15855057537555695
    2. '==' → logprob: -2.033550500869751
    3. '=='' → logprob: -4.15855073928833
    4. '=="' → logprob: -10.158550262451172
    5. ' =='' → logprob: -10.533550262451172
    6. '=' → logprob: -11.533550262451172
    7. ' ' → logprob: -12.033550262451172
    8. ''' → logprob: -12.283550262451172
    9. ' '' → logprob: -12.408550262451172
    10. ')' → logprob: -12.533550262451172

Token 106: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.01682039350271225
    2. ''' → logprob: -4.266820430755615
    3. ' '*'' → logprob: -6.266820430755615
    4. '"' → logprob: -7.891820430755615
    5. '"*' → logprob: -8.891819953918457
    6. ' '' → logprob: -8.891819953918457
    7. ' '*' → logprob: -9.766819953918457
    8. '*' → logprob: -10.141819953918457
    9. ' ' → logprob: -12.766819953918457
    10. ''s' → logprob: -13.516819953918457

Token 107: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.7211544513702393
    2. '':
' → logprob: -0.7211544513702393
    3. ''' → logprob: -3.7211544513702393
    4. '':
' → logprob: -6.47115421295166
    5. ' '' → logprob: -6.97115421295166
    6. ''):
' → logprob: -7.84615421295166
    7. ':' → logprob: -8.34615421295166
    8. '*' → logprob: -8.97115421295166
    9. '':

' → logprob: -10.22115421295166
    10. '):
' → logprob: -10.47115421295166

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7546672224998474
    2. ' acc' → logprob: -0.8796672224998474
    3. 'acc' → logprob: -2.379667282104492
    4. '       ' → logprob: -3.879667282104492
    5. '	acc' → logprob: -7.254667282104492
    6. '
' → logprob: -8.254667282104492
    7. '   ' → logprob: -8.629667282104492
    8. '        ' → logprob: -8.879667282104492
    9. '(acc' → logprob: -9.629667282104492
    10. '            
' → logprob: -10.254667282104492

Token 109: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.31363463401794434
    2. ' acc' → logprob: -1.3136346340179443
    3. '           ' → logprob: -8.313634872436523
    4. '       ' → logprob: -9.313634872436523
    5. '	acc' → logprob: -11.313634872436523
    6. '   ' → logprob: -11.688634872436523
    7. 'ac' → logprob: -11.813634872436523
    8. '               ' → logprob: -12.438634872436523
    9. '
' → logprob: -13.438634872436523
    10. '(acc' → logprob: -13.688634872436523

Token 110: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.5785216093063354
    2. ' *=' → logprob: -0.8285216093063354
    3. '=' → logprob: -6.078521728515625
    4. ' =' → logprob: -8.203521728515625
    5. '*' → logprob: -11.453521728515625
    6. ' ' → logprob: -13.703521728515625
    7. '   ' → logprob: -13.953521728515625
    8. ' ' → logprob: -14.703521728515625
    9. '	' → logprob: -15.828521728515625
    10. '```' → logprob: -16.203521728515625

Token 111: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.020946940407156944
    2. ' nums' → logprob: -4.020946979522705
    3. 'numbers' → logprob: -5.895946979522705
    4. ' numbers' → logprob: -10.145946502685547
    5. 'num' → logprob: -12.770946502685547
    6. '(nums' → logprob: -15.520946502685547
    7. ' ' → logprob: -15.645946502685547
    8. '   ' → logprob: -16.895946502685547
    9. '_nums' → logprob: -17.770946502685547
    10. 'new' → logprob: -18.145946502685547

Token 112: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006768064573407173
    2. 'i' → logprob: -5.006768226623535
    3. '[' → logprob: -10.381768226623535
    4. '(i' → logprob: -11.256768226623535
    5. ' i' → logprob: -11.881768226623535
    6. '{i' → logprob: -14.131768226623535
    7. '[
' → logprob: -14.756768226623535
    8. '	i' → logprob: -15.506768226623535
    9. ' [' → logprob: -15.631768226623535
    10. '[(' → logprob: -16.25676727294922

Token 113: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804183006286621
    2. ' +' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.538042068481445
    4. '＋' → logprob: -16.538042068481445
    5. '1' → logprob: -16.663042068481445
    6. '2' → logprob: -17.913042068481445
    7. '+
' → logprob: -18.038042068481445
    8. ' plus' → logprob: -18.663042068481445
    9. '+i' → logprob: -18.788042068481445
    10. ' ' → logprob: -18.788042068481445

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -17.06250762939453
    4. '   ' → logprob: -17.43750762939453
    5. '0' → logprob: -17.68750762939453
    6. ']' → logprob: -18.43750762939453
    7. '+' → logprob: -18.50000762939453
    8. '１' → logprob: -19.12500762939453
    9. '۱' → logprob: -19.18750762939453
    10. '  ' → logprob: -19.43750762939453

Token 115: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03620443120598793
    2. ']
' → logprob: -4.0362043380737305
    3. ')' → logprob: -4.1612043380737305
    4. '<|end|>' → logprob: -6.4112043380737305
    5. ')
' → logprob: -8.53620433807373
    6. 'else' → logprob: -8.78620433807373
    7. ' ]' → logprob: -9.16120433807373
    8. '       ' → logprob: -10.28620433807373
    9. '']' → logprob: -10.41120433807373
    10. '<|end|>' → logprob: -10.53620433807373

Token 116: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5198001265525818
    2. '       ' → logprob: -1.0198001861572266
    3. ' else' → logprob: -3.1448001861572266
    4. '   ' → logprob: -6.644800186157227
    5. 'elif' → logprob: -8.144800186157227
    6. '```' → logprob: -11.269800186157227
    7. '	else' → logprob: -12.144800186157227
    8. ' elif' → logprob: -12.644800186157227
    9. '}else' → logprob: -14.394800186157227
    10. '#else' → logprob: -14.394800186157227

Token 117: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07123889774084091
    2. ' else' → logprob: -2.8212389945983887
    3. '       ' → logprob: -4.696238994598389
    4. 'elif' → logprob: -9.44623851776123
    5. '   ' → logprob: -11.19623851776123
    6. '	else' → logprob: -12.57123851776123
    7. '```' → logprob: -13.57123851776123
    8. ' elif' → logprob: -13.82123851776123
    9. ')' → logprob: -16.321239471435547
    10. '}else' → logprob: -16.446239471435547

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004086355213075876
    2. ':
' → logprob: -5.504086494445801
    3. ':
' → logprob: -13.1290864944458
    4. ':

' → logprob: -13.5040864944458
    5. ' :' → logprob: -13.8790864944458
    6. ':new' → logprob: -13.8790864944458
    7. ',' → logprob: -14.2540864944458
    8. '<|end|>' → logprob: -15.0040864944458
    9. '):' → logprob: -15.5040864944458
    10. 'new' → logprob: -15.5040864944458

Token 119: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.13175596296787262
    2. 'new' → logprob: -2.256756067276001
    3. '       ' → logprob: -4.006755828857422
    4. '   ' → logprob: -8.631755828857422
    5. ':
' → logprob: -8.881755828857422
    6. ':' → logprob: -9.881755828857422
    7. '           ' → logprob: -10.756755828857422
    8. ')new' → logprob: -11.006755828857422
    9. ':new' → logprob: -11.006755828857422
    10. '#' → logprob: -11.131755828857422

Token 120: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.577201783657074
    2. 'new' (adapté à ' new') → logprob: -0.827201783657074
    3. '           ' → logprob: -7.327201843261719
    4. '
' → logprob: -8.452201843261719
    5. '   ' → logprob: -9.452201843261719
    6. '               ' → logprob: -9.452201843261719
    7. '       ' → logprob: -9.452201843261719
    8. ':
' → logprob: -10.577201843261719
    9. 'else' → logprob: -10.827201843261719
    10. '#' → logprob: -11.327201843261719

Token 121: '_nums' (ID: 128266)
  Prédit: '_ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ops' → logprob: -0.34944161772727966
    2. '_nums' → logprob: -1.224441647529602
    3. '_' → logprob: -7.2244415283203125
    4. '_numbers' → logprob: -9.349441528320312
    5. '_num' → logprob: -9.849441528320312
    6. '_op' → logprob: -10.224441528320312
    7. 'nums' → logprob: -10.599441528320312
    8. '_chars' → logprob: -11.724441528320312
    9. 'ops' → logprob: -11.724441528320312
    10. '_tokens' → logprob: -11.974441528320312

Token 122: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.5822400857578032e-05
    2. '.' → logprob: -10.875025749206543
    3. 'append' → logprob: -12.375025749206543
    4. ' .' → logprob: -13.250025749206543
    5. '.app' → logprob: -14.625025749206543
    6. '.extend' → logprob: -15.250025749206543
    7. ' append' → logprob: -16.50002670288086
    8. '_append' → logprob: -17.00002670288086
    9. '.ap' → logprob: -17.50002670288086
    10. '.Append' → logprob: -17.87502670288086

Token 123: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.001503313542343676
    2. 'acc' → logprob: -6.5015034675598145
    3. '(' → logprob: -14.001502990722656
    4. ' acc' → logprob: -16.001502990722656
    5. '(ac' → logprob: -18.376502990722656
    6. '	acc' → logprob: -18.501502990722656
    7. '(
' → logprob: -19.376502990722656
    8. '_acc' → logprob: -21.376502990722656
    9. '(ans' → logprob: -21.501502990722656
    10. ' (' → logprob: -22.001502990722656

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5569785237312317
    2. '
' → logprob: -1.556978464126587
    3. ')
' → logprob: -2.056978464126587
    4. '<|end|>' → logprob: -2.681978464126587
    5. ' )' → logprob: -5.181978702545166
    6. ' )
' → logprob: -5.431978702545166
    7. ' 
' → logprob: -5.431978702545166
    8. '<|end|>' → logprob: -5.806978702545166
    9. '  
' → logprob: -7.181978702545166
    10. ' ' → logprob: -7.306978702545166

Token 125: '           ' (ID: 352)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.393229216337204
    2. ' new' → logprob: -1.1432292461395264
    3. '           ' → logprob: -5.393229007720947
    4. '       ' → logprob: -7.018229007720947
    5. '   ' → logprob: -8.143229484558105
    6. '[new' → logprob: -8.518229484558105
    7. '	new' → logprob: -9.768229484558105
    8. ' 
' → logprob: -9.893229484558105
    9. '```' → logprob: -10.143229484558105
    10. '
' → logprob: -10.268229484558105

Token 126: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0002669384120963514
    2. ' new' → logprob: -8.875267028808594
    3. '           ' → logprob: -9.875267028808594
    4. 'acc' → logprob: -10.000267028808594
    5. 'op' → logprob: -11.000267028808594
    6. '   ' → logprob: -12.375267028808594
    7. 'ops' → logprob: -13.000267028808594
    8. 'if' → logprob: -13.125267028808594
    9. '	new' → logprob: -13.375267028808594
    10. '       ' → logprob: -13.500267028808594

Token 127: '_ops' (ID: 53418)
  Prédit: '_ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ops' → logprob: -3.5597102396423e-05
    2. '_nums' → logprob: -10.500035285949707
    3. '_op' → logprob: -13.250035285949707
    4. 'ops' → logprob: -13.500035285949707
    5. '_opts' → logprob: -13.875035285949707
    6. '_' → logprob: -14.000035285949707
    7. '_chars' → logprob: -14.625035285949707
    8. 'Ops' → logprob: -14.875035285949707
    9. 's' → logprob: -15.250035285949707
    10. '```' → logprob: -15.250035285949707

Token 128: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012439649435691535
    2. '.' → logprob: -9.000123977661133
    3. '.extend' → logprob: -15.500123977661133
    4. 'append' → logprob: -15.875123977661133
    5. '.push' → logprob: -16.000123977661133
    6. ' .' → logprob: -16.250123977661133
    7. '.add' → logprob: -16.375123977661133
    8. '.Append' → logprob: -16.500123977661133
    9. ').' → logprob: -16.750123977661133
    10. '.setdefault' → logprob: -17.375123977661133

Token 129: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -12.125009536743164
    3. 'op' → logprob: -12.375009536743164
    4. '('' → logprob: -16.500009536743164
    5. ' op' → logprob: -17.750009536743164
    6. '(opt' → logprob: -18.125009536743164
    7. '(operator' → logprob: -18.125009536743164
    8. '	op' → logprob: -19.125009536743164
    9. '(
' → logprob: -19.750009536743164
    10. ' (' → logprob: -19.750009536743164

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01676974818110466
    2. '<|end|>' → logprob: -4.766769886016846
    3. '
' → logprob: -6.141769886016846
    4. '           ' → logprob: -6.766769886016846
    5. ')
' → logprob: -6.891769886016846
    6. '   ' → logprob: -7.141769886016846
    7. '<|end|>' → logprob: -7.516769886016846
    8. ' )' → logprob: -7.516769886016846
    9. 'acc' → logprob: -7.641769886016846
    10. '[' → logprob: -8.141769409179688

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6245079636573792
    2. 'acc' → logprob: -1.2495079040527344
    3. '   ' → logprob: -2.3745079040527344
    4. '       ' → logprob: -2.8745079040527344
    5. ' acc' → logprob: -3.6245079040527344
    6. '(acc' → logprob: -7.374507904052734
    7. '	acc' → logprob: -8.499507904052734
    8. ' ' → logprob: -8.499507904052734
    9. '
' → logprob: -8.624507904052734
    10. '```' → logprob: -9.374507904052734

Token 132: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -2.1008713702030946e-06
    2. ' acc' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.375001907348633
    4. '           ' → logprob: -16.750001907348633
    5. '
' → logprob: -18.250001907348633
    6. ' ' → logprob: -18.750001907348633
    7. '	acc' → logprob: -19.125001907348633
    8. '       ' → logprob: -19.250001907348633
    9. '(acc' → logprob: -19.375001907348633
    10. 'ac' → logprob: -19.375001907348633

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132627606391907
    2. ' =' → logprob: -1.313262701034546
    3. '<|end|>' → logprob: -14.938262939453125
    4. ')' → logprob: -16.188262939453125
    5. '=

' → logprob: -16.313262939453125
    6. ' ' → logprob: -16.563262939453125
    7. '=int' → logprob: -16.813262939453125
    8. '=num' → logprob: -16.813262939453125
    9. 's' → logprob: -17.063262939453125
    10. ' =)' → logprob: -17.563262939453125

Token 134: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.004131237976253033
    2. ' nums' → logprob: -5.504131317138672
    3. 'numbers' → logprob: -9.879131317138672
    4. 'num' → logprob: -14.129131317138672
    5. ' numbers' → logprob: -14.504131317138672
    6. '(nums' → logprob: -15.004131317138672
    7. ' ' → logprob: -19.129131317138672
    8. 'Nums' → logprob: -19.629131317138672
    9. '_nums' → logprob: -20.254131317138672
    10. 'nu' → logprob: -20.504131317138672

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. 'i' → logprob: -15.500000953674316
    4. '{i' → logprob: -17.000001907348633
    5. '(i' → logprob: -17.250001907348633
    6. '[I' → logprob: -17.375001907348633
    7. '[
' → logprob: -19.250001907348633
    8. ' [' → logprob: -19.500001907348633
    9. '[j' → logprob: -20.000001907348633
    10. '[++' → logprob: -20.250001907348633

Token 136: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.796184723294573e-06
    2. ' +' → logprob: -12.500005722045898
    3. '1' → logprob: -13.125005722045898
    4. '+
' → logprob: -20.7500057220459
    5. ']+' → logprob: -20.7500057220459
    6. ']' → logprob: -21.0000057220459
    7. '+]' → logprob: -21.3750057220459
    8. '+i' → logprob: -22.2500057220459
    9. '+)' → logprob: -22.5000057220459
    10. '+</' → logprob: -22.5000057220459

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -17.500001907348633
    4. '0' → logprob: -17.812501907348633
    5. '   ' → logprob: -17.875001907348633
    6. '<|end|>' → logprob: -18.562501907348633
    7. '+' → logprob: -18.625001907348633
    8. '2' → logprob: -18.875001907348633
    9. '۱' → logprob: -19.687501907348633
    10. '１' → logprob: -19.937501907348633

Token 138: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007618647650815547
    2. '   ' → logprob: -8.000761985778809
    3. ')
' → logprob: -8.625761985778809
    4. ']' → logprob: -9.125761985778809
    5. '<|end|>' → logprob: -9.750761985778809
    6. ')return' → logprob: -10.250761985778809
    7. '')' → logprob: -11.750761985778809
    8. '```' → logprob: -12.125761985778809
    9. '<|end|>' → logprob: -12.250761985778809
    10. 'return' → logprob: -12.375761985778809

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5550804734230042
    2. 'new' → logprob: -1.0550804138183594
    3. ' new' → logprob: -2.5550804138183594
    4. ')new' → logprob: -10.55508041381836
    5. 'else' → logprob: -10.80508041381836
    6. '[new' → logprob: -10.93008041381836
    7. ')' → logprob: -11.55508041381836
    8. '	new' → logprob: -11.68008041381836
    9. 'return' → logprob: -11.93008041381836
    10. '```' → logprob: -12.55508041381836

Token 140: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.5891850590705872
    2. ' new' → logprob: -0.8391850590705872
    3. '   ' → logprob: -4.3391852378845215
    4. 'return' → logprob: -10.339184761047363
    5. '[new' → logprob: -11.089184761047363
    6. ')' → logprob: -11.214184761047363
    7. 'def' → logprob: -11.589184761047363
    8. ')new' → logprob: -11.714184761047363
    9. '
' → logprob: -11.839184761047363
    10. ' return' → logprob: -11.964184761047363

Token 141: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.00013166792632546276
    2. '_num' → logprob: -9.250131607055664
    3. '_numbers' → logprob: -10.500131607055664
    4. 'nums' → logprob: -12.375131607055664
    5. '_ops' → logprob: -13.875131607055664
    6. '_n' → logprob: -14.625131607055664
    7. '_names' → logprob: -14.875131607055664
    8. '_' → logprob: -15.125131607055664
    9. '_chars' → logprob: -15.125131607055664
    10. 'Nums' → logprob: -15.375131607055664

Token 142: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.2603901015827432e-05
    2. '.' → logprob: -10.875022888183594
    3. 'append' → logprob: -13.125022888183594
    4. '.app' → logprob: -13.500022888183594
    5. ' .' → logprob: -16.250022888183594
    6. '.Append' → logprob: -17.500022888183594
    7. 'Append' → logprob: -17.750022888183594
    8. '.ap' → logprob: -18.375022888183594
    9. ' append' → logprob: -18.375022888183594
    10. 'app' → logprob: -18.500022888183594

Token 143: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.750001907348633
    3. '(ac' → logprob: -14.625001907348633
    4. 'acc' → logprob: -18.000001907348633
    5. ' (' → logprob: -20.000001907348633
    6. '(
' → logprob: -20.500001907348633
    7. ' acc' → logprob: -21.250001907348633
    8. '(ans' → logprob: -21.750001907348633
    9. '	acc' → logprob: -21.875001907348633
    10. '(abs' → logprob: -22.125001907348633

Token 144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000657750410027802
    2. ')
' → logprob: -7.375657558441162
    3. '   ' → logprob: -11.25065803527832
    4. ')return' → logprob: -11.87565803527832
    5. 'return' → logprob: -12.37565803527832
    6. '<|end|>' → logprob: -13.62565803527832
    7. ' )' → logprob: -13.75065803527832
    8. 'def' → logprob: -14.12565803527832
    9. 'new' → logprob: -14.25065803527832
    10. ']' → logprob: -14.37565803527832

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004094547126442194
    2. 'return' → logprob: -6.00409460067749
    3. ' return' → logprob: -6.50409460067749
    4. '
' → logprob: -10.004094123840332
    5. '    
' → logprob: -10.004094123840332
    6. '	return' → logprob: -10.879094123840332
    7. 'def' → logprob: -12.004094123840332
    8. '<|end|>' → logprob: -14.129094123840332
    9. '  
' → logprob: -14.504094123840332
    10. ')' → logprob: -14.754094123840332

Token 146: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26756665110588074
    2. '   ' → logprob: -2.142566680908203
    3. ' return' → logprob: -2.142566680908203
    4. ' ' → logprob: -10.892566680908203
    5. '	return' → logprob: -10.892566680908203
    6. 'def' → logprob: -12.017566680908203
    7. '
' → logprob: -12.767566680908203
    8. '    
' → logprob: -13.392566680908203
    9. '```' → logprob: -13.642566680908203
    10. '#' (adapté à ' #') → logprob: -13.767566680908203

Token 147: ' Then' (ID: 7801)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024615304544568062
    2. ' return' → logprob: -3.7746152877807617
    3. '   ' → logprob: -6.649615287780762
    4. 'def' → logprob: -10.399615287780762
    5. 'for' → logprob: -11.399615287780762
    6. ' ' → logprob: -11.649615287780762
    7. 'Return' → logprob: -12.149615287780762
    8. '#' → logprob: -12.274615287780762
    9. 'result' → logprob: -12.524615287780762
    10. '	return' → logprob: -12.899615287780762

Token 148: ' perform' (ID: 3347)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7024329900741577
    2. ' return' → logprob: -1.3274329900741577
    3. 'for' → logprob: -2.3274331092834473
    4. ' for' → logprob: -2.7024331092834473
    5. '   ' → logprob: -3.2024331092834473
    6. '#' → logprob: -3.8274331092834473
    7. 'result' → logprob: -5.327433109283447
    8. ' #' → logprob: -5.827433109283447
    9. ' result' → logprob: -6.827433109283447
    10. ' new' → logprob: -7.577433109283447

Token 149: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8752297163009644
    2. 'add' → logprob: -1.3752297163009644
    3. 'the' → logprob: -1.8752297163009644
    4. 'addition' → logprob: -1.8752297163009644
    5. ' all' → logprob: -4.625229835510254
    6. ' the' → logprob: -5.500229835510254
    7. 'new' → logprob: -5.750229835510254
    8. ' addition' → logprob: -6.000229835510254
    9. 'sum' → logprob: -6.375229835510254
    10. ' additions' → logprob: -7.000229835510254

Token 150: ' additions' (ID: 62858)
  Prédit: ' additions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' additions' → logprob: -0.30546364188194275
    2. 'add' → logprob: -1.4304636716842651
    3. 'new' → logprob: -3.9304635524749756
    4. ' new' → logprob: -6.430463790893555
    5. 'addition' → logprob: -6.555463790893555
    6. 'def' → logprob: -7.555463790893555
    7. ' addition' → logprob: -8.055463790893555
    8. ' the' → logprob: -9.430463790893555
    9. 'the' → logprob: -9.680463790893555
    10. '#' → logprob: -9.680463790893555

Token 151: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26945823431015015
    2. 'for' → logprob: -1.769458293914795
    3. ' for' → logprob: -3.019458293914795
    4. ' and' → logprob: -4.644458293914795
    5. 'and' → logprob: -5.769458293914795
    6. 'new' → logprob: -5.894458293914795
    7. ' new' → logprob: -7.769458293914795
    8. 'return' → logprob: -8.019457817077637
    9. 'result' → logprob: -8.519457817077637
    10. '+' → logprob: -8.894457817077637

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08092019706964493
    2. 'for' → logprob: -2.9559202194213867
    3. ' for' → logprob: -3.9559202194213867
    4. 'return' → logprob: -5.830920219421387
    5. ' and' → logprob: -6.830920219421387
    6. 'new' → logprob: -6.830920219421387
    7. '+' → logprob: -7.330920219421387
    8. 'and' → logprob: -8.580920219421387
    9. 'result' → logprob: -8.705920219421387
    10. ' new' → logprob: -9.330920219421387

Token 153: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.07700110226869583
    2. 'res' → logprob: -2.7020010948181152
    3. 'acc' → logprob: -5.452001094818115
    4. ' result' → logprob: -6.702001094818115
    5. '   ' → logprob: -6.952001094818115
    6. 'total' → logprob: -7.952001094818115
    7. 'answer' → logprob: -9.702001571655273
    8. ' res' → logprob: -9.827001571655273
    9. 'ans' → logprob: -10.077001571655273
    10. ' acc' → logprob: -10.952001571655273

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004620472434908152
    2. '=' → logprob: -5.379620552062988
    3. ' ' → logprob: -16.379619598388672
    4. ',' → logprob: -17.004619598388672
    5. 's' → logprob: -17.504619598388672
    6. '_' → logprob: -17.754619598388672
    7. ' =)' → logprob: -17.754619598388672
    8. ')' → logprob: -18.129619598388672
    9. '=sum' → logprob: -18.379619598388672
    10. ' ' → logprob: -18.379619598388672

Token 155: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0002703953068703413
    2. ' new' → logprob: -8.25027084350586
    3. '0' → logprob: -11.62527084350586
    4. ' ' → logprob: -16.25027084350586
    5. '   ' → logprob: -17.62527084350586
    6. '[new' → logprob: -18.25027084350586
    7. '1' → logprob: -18.50027084350586
    8. '	new' → logprob: -19.25027084350586
    9. '(new' → logprob: -19.37527084350586
    10. 'sum' → logprob: -19.75027084350586

Token 156: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -7.684157026233152e-05
    2. 'nums' → logprob: -10.000077247619629
    3. '_ops' → logprob: -10.750077247619629
    4. '_num' → logprob: -11.875077247619629
    5. 'Nums' → logprob: -13.875077247619629
    6. '_mul' → logprob: -14.250077247619629
    7. 'new' → logprob: -14.500077247619629
    8. '(nums' → logprob: -16.125076293945312
    9. '_new' → logprob: -16.250076293945312
    10. '_' → logprob: -16.375076293945312

Token 157: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '0' → logprob: -12.875003814697266
    3. 'def' → logprob: -14.000003814697266
    4. '[-' → logprob: -16.875003814697266
    5. 'from' → logprob: -17.375003814697266
    6. '#' → logprob: -17.875003814697266
    7. '1' → logprob: -18.250003814697266
    8. 's' → logprob: -18.625003814697266
    9. '```' → logprob: -18.750003814697266
    10. '.pop' → logprob: -18.875003814697266

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '[' → logprob: -15.750000953674316
    4. '   ' → logprob: -18.625
    5. '1' → logprob: -18.75
    6. '-' → logprob: -19.125
    7. '۰' → logprob: -19.375
    8. '
' → logprob: -19.4375
    9. 'def' → logprob: -20.0625
    10. '０' → logprob: -20.25

Token 159: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5961401462554932
    2. '<|end|>' → logprob: -1.5961401462554932
    3. 'for' → logprob: -2.721140146255493
    4. ')' → logprob: -2.721140146255493
    5. ')
' → logprob: -3.221140146255493
    6. 'def' → logprob: -3.596140146255493
    7. '+' → logprob: -4.221139907836914
    8. ' +' → logprob: -4.221139907836914
    9. 'while' → logprob: -4.721139907836914
    10. '[' → logprob: -5.971139907836914

Token 160: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2582146227359772
    2. 'for' → logprob: -2.1332147121429443
    3. '   ' → logprob: -2.2582147121429443
    4. '
' → logprob: -5.758214473724365
    5. '	for' → logprob: -6.758214473724365
    6. '+' → logprob: -9.508214950561523
    7. '+
' → logprob: -10.008214950561523
    8. ' ' → logprob: -10.133214950561523
    9. '    
' → logprob: -10.883214950561523
    10. ' 
' → logprob: -10.883214950561523

Token 161: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10034814476966858
    2. 'for' (adapté à ' for') → logprob: -2.3503482341766357
    3. '   ' → logprob: -9.350348472595215
    4. '	for' → logprob: -9.850348472595215
    5. ' ' → logprob: -14.100348472595215
    6. '
' → logprob: -14.225348472595215
    7. '+' → logprob: -15.725348472595215
    8. ' 
' → logprob: -16.3503475189209
    9. ' ' → logprob: -16.4753475189209
    10. '```' → logprob: -17.3503475189209

Token 162: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2014956921339035
    2. ' i' → logprob: -1.70149564743042
    3. ' op' → logprob: -9.826496124267578
    4. 'op' → logprob: -10.826496124267578
    5. ' ' → logprob: -12.826496124267578
    6. 'j' → logprob: -13.326496124267578
    7. '   ' → logprob: -13.826496124267578
    8. ' j' → logprob: -13.826496124267578
    9. '	i' → logprob: -14.326496124267578
    10. '  ' → logprob: -14.701496124267578

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13577008247375488
    2. ' in' → logprob: -2.760770082473755
    3. 'in' → logprob: -2.760770082473755
    4. ' ,' → logprob: -8.010769844055176
    5. '1' → logprob: -9.385769844055176
    6. '+' → logprob: -10.635769844055176
    7. '_,' → logprob: -11.760769844055176
    8. ',in' → logprob: -12.385769844055176
    9. ' ' → logprob: -12.510769844055176
    10. '=' → logprob: -12.635769844055176

Token 164: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.023245826363563538
    2. ' op' → logprob: -3.7732458114624023
    3. '(op' → logprob: -16.14824676513672
    4. '	op' → logprob: -16.14824676513672
    5. '_op' → logprob: -17.02324676513672
    6. 'opt' → logprob: -17.02324676513672
    7. ' ' → logprob: -17.27324676513672
    8. 'ops' → logprob: -18.52324676513672
    9. 'ope' → logprob: -18.64824676513672
    10. 'opp' → logprob: -18.77324676513672

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001953371800482273
    2. 'in' → logprob: -6.251953601837158
    3. ',' → logprob: -10.876953125
    4. ' ' → logprob: -12.376953125
    5. 'new' → logprob: -14.626953125
    6. ' ,' → logprob: -15.376953125
    7. '   ' → logprob: -16.001953125
    8. '_new' → logprob: -16.126953125
    9. '```' → logprob: -16.126953125
    10. ',new' → logprob: -16.251953125

Token 166: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0031781906727701426
    2. ' enumerate' → logprob: -5.753178119659424
    3. 'range' → logprob: -15.253178596496582
    4. ' ' → logprob: -16.503177642822266
    5. '(' → logprob: -17.003177642822266
    6. 'enum' → logprob: -17.128177642822266
    7. 'en' → logprob: -17.878177642822266
    8. '(en' → logprob: -18.503177642822266
    9. '   ' → logprob: -18.753177642822266
    10. '.enumer' → logprob: -19.003177642822266

Token 167: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -9.85366350505501e-05
    2. 'new' → logprob: -9.25009822845459
    3. '(' → logprob: -13.12509822845459
    4. ' new' → logprob: -14.75009822845459
    5. ' (' → logprob: -18.875099182128906
    6. ')new' → logprob: -19.125099182128906
    7. '[new' → logprob: -19.875099182128906
    8. '	new' → logprob: -20.125099182128906
    9. '_new' → logprob: -20.500099182128906
    10. '(range' → logprob: -20.875099182128906

Token 168: '_ops' (ID: 53418)
  Prédit: '_ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ops' → logprob: -1.306760805164231e-05
    2. '_nums' → logprob: -12.25001335144043
    3. 'ops' → logprob: -12.50001335144043
    4. '_opts' → logprob: -12.75001335144043
    5. '_op' → logprob: -13.75001335144043
    6. 's' → logprob: -15.75001335144043
    7. '_' → logprob: -16.37501335144043
    8. '.ops' → logprob: -17.25001335144043
    9. ' ops' → logprob: -17.62501335144043
    10. '_objs' → logprob: -17.62501335144043

Token 169: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04282046854496002
    2. '):
' → logprob: -3.292820453643799
    3. ':' → logprob: -5.542820453643799
    4. ' ):' → logprob: -7.417820453643799
    5. ')' → logprob: -9.792820930480957
    6. '<|end|>' → logprob: -10.292820930480957
    7. ' :' → logprob: -10.417820930480957
    8. '):
' → logprob: -10.542820930480957
    9. ',' → logprob: -11.042820930480957
    10. '):

' → logprob: -11.167820930480957

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1258445531129837
    2. ':' → logprob: -2.3758444786071777
    3. '   ' → logprob: -4.750844478607178
    4. ':
' → logprob: -4.875844478607178
    5. ' if' → logprob: -6.500844478607178
    6. '+' → logprob: -6.750844478607178
    7. ' +=' → logprob: -6.875844478607178
    8. ' in' → logprob: -6.875844478607178
    9. '=' → logprob: -7.000844478607178
    10. ' =' → logprob: -7.250844478607178

Token 171: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09414935857057571
    2. '       ' → logprob: -3.469149351119995
    3. 'if' (adapté à ' if') → logprob: -3.844149351119995
    4. ' result' → logprob: -4.844149589538574
    5. ' +=' → logprob: -4.969149589538574
    6. '    ' → logprob: -4.969149589538574
    7. '        ' → logprob: -4.969149589538574
    8. ' ' → logprob: -5.594149589538574
    9. 'result' → logprob: -5.844149589538574
    10. '   ' → logprob: -7.469149589538574

Token 172: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.07889342308044434
    2. 'op' → logprob: -2.5788934230804443
    3. '	op' → logprob: -13.328893661499023
    4. '(op' → logprob: -13.828893661499023
    5. ' ' → logprob: -14.328893661499023
    6. ' ' → logprob: -15.828893661499023
    7. '.op' → logprob: -16.203893661499023
    8. '_op' → logprob: -16.578893661499023
    9. ''op' → logprob: -16.953893661499023
    10. '  ' → logprob: -17.953893661499023

Token 173: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10047148913145065
    2. ' ==' → logprob: -2.3504714965820312
    3. '=='' → logprob: -9.225471496582031
    4. '+' → logprob: -9.600471496582031
    5. ''' → logprob: -9.975471496582031
    6. '=' → logprob: -10.725471496582031
    7. '[' → logprob: -11.725471496582031
    8. '===' → logprob: -12.225471496582031
    9. 'import' → logprob: -13.225471496582031
    10. ']==' → logprob: -13.225471496582031

Token 174: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.5761326551437378
    2. ''' → logprob: -0.8261326551437378
    3. ' '+'' → logprob: -9.451132774353027
    4. '+' → logprob: -9.701132774353027
    5. ' '+' → logprob: -10.701132774353027
    6. '"+"' → logprob: -11.451132774353027
    7. '('+' → logprob: -12.576132774353027
    8. '"+' → logprob: -12.701132774353027
    9. ''*' → logprob: -12.951132774353027
    10. ''.' → logprob: -13.326132774353027

Token 175: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.1188536211848259
    2. '':
' → logprob: -2.4938535690307617
    3. ''):
' → logprob: -4.118853569030762
    4. ''):' → logprob: -5.493853569030762
    5. ':' → logprob: -5.743853569030762
    6. ''' → logprob: -6.368853569030762
    7. '<|end|>' → logprob: -6.493853569030762
    8. '):' → logprob: -7.493853569030762
    9. ' '' → logprob: -7.493853569030762
    10. '):
' → logprob: -7.618853569030762

Token 176: '           ' (ID: 352)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7061843872070312
    2. '+=' → logprob: -0.7061843872070312
    3. ' result' → logprob: -5.456184387207031
    4. '+' → logprob: -5.581184387207031
    5. 'result' → logprob: -5.706184387207031
    6. '           ' → logprob: -7.331184387207031
    7. ' new' → logprob: -8.206184387207031
    8. ' +' → logprob: -8.706184387207031
    9. ':' → logprob: -9.206184387207031
    10. '       ' → logprob: -9.581184387207031

Token 177: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.018161412328481674
    2. 'result' (adapté à ' result') → logprob: -4.018161296844482
    3. ' +=' → logprob: -12.26816177368164
    4. '+=' → logprob: -12.26816177368164
    5. ' new' → logprob: -13.51816177368164
    6. '(result' → logprob: -15.01816177368164
    7. '=result' → logprob: -15.26816177368164
    8. ' ' → logprob: -16.51816177368164
    9. '	result' → logprob: -16.89316177368164
    10. ' ' → logprob: -17.14316177368164

Token 178: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16023722290992737
    2. ' +=' → logprob: -1.910237193107605
    3. '+' → logprob: -11.535237312316895
    4. '=' → logprob: -12.910237312316895
    5. '+=(' → logprob: -14.535237312316895
    6. '+='' → logprob: -16.160236358642578
    7. '+="' → logprob: -16.660236358642578
    8. ' +' → logprob: -17.035236358642578
    9. ' =' → logprob: -17.035236358642578
    10. ']+=' → logprob: -17.035236358642578

Token 179: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.01814994215965271
    2. ' new' → logprob: -4.0181498527526855
    3. '	new' → logprob: -19.393150329589844
    4. '_new' → logprob: -19.518150329589844
    5. '(new' → logprob: -20.268150329589844
    6. 'New' → logprob: -20.268150329589844
    7. ')new' → logprob: -20.518150329589844
    8. ' ' → logprob: -21.393150329589844
    9. '   ' → logprob: -21.518150329589844
    10. '$new' → logprob: -22.268150329589844

Token 180: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.01612093672156334
    2. 'new' → logprob: -4.641120910644531
    3. '_num' → logprob: -6.016120910644531
    4. '_new' → logprob: -6.016120910644531
    5. 'nums' → logprob: -7.016120910644531
    6. '_ops' → logprob: -7.891120910644531
    7. '_tokens' → logprob: -8.891120910644531
    8. '_n' → logprob: -10.516120910644531
    9. ' new' → logprob: -11.766120910644531
    10. 'Nums' → logprob: -12.266120910644531

Token 181: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. 'i' → logprob: -13.625001907348633
    3. '[' → logprob: -15.625001907348633
    4. ' [' → logprob: -15.750001907348633
    5. '{i' → logprob: -17.250001907348633
    6. '(i' → logprob: -18.750001907348633
    7. ' i' → logprob: -19.625001907348633
    8. '[I' → logprob: -20.000001907348633
    9. ' ' → logprob: -20.375001907348633
    10. '[
' → logprob: -20.500001907348633

Token 182: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.841743303695694e-05
    2. '1' → logprob: -9.87509822845459
    3. ' +' → logprob: -10.00009822845459
    4. ']' → logprob: -13.50009822845459
    5. '+]' → logprob: -16.250099182128906
    6. ']+' → logprob: -16.625099182128906
    7. '+i' → logprob: -17.750099182128906
    8. ' ' → logprob: -18.375099182128906
    9. '   ' → logprob: -18.500099182128906
    10. '+
' → logprob: -19.500099182128906

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.875015258789062
    4. '  ' → logprob: -17.625015258789062
    5. '0' → logprob: -17.687515258789062
    6. 'i' → logprob: -18.000015258789062
    7. '```' → logprob: -18.000015258789062
    8. ']' → logprob: -18.562515258789062
    9. '2' → logprob: -18.687515258789062
    10. '    ' → logprob: -18.750015258789062

Token 184: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016936269821599126
    2. ')' → logprob: -6.7516937255859375
    3. '<|end|>' → logprob: -8.376693725585938
    4. ' ]' → logprob: -8.751693725585938
    5. '])' → logprob: -9.876693725585938
    6. ']
' → logprob: -10.126693725585938
    7. ')]' → logprob: -10.501693725585938
    8. '```' → logprob: -12.251693725585938
    9. ']

' → logprob: -13.126693725585938
    10. ']>' → logprob: -13.626693725585938

Token 185: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37295040488243103
    2. 'return' → logprob: -1.2479504346847534
    3. ' return' → logprob: -3.872950315475464
    4. '   ' → logprob: -5.872950553894043
    5. 'else' → logprob: -7.872950553894043
    6. ' else' → logprob: -9.122950553894043
    7. '	return' → logprob: -10.372950553894043
    8. ' ' → logprob: -10.997950553894043
    9. 'elif' → logprob: -10.997950553894043
    10. ':return' → logprob: -11.997950553894043

Token 186: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0036710910499095917
    2. ' return' → logprob: -5.878671169281006
    3. '   ' → logprob: -7.253671169281006
    4. 'else' → logprob: -9.128670692443848
    5. '       ' → logprob: -10.628670692443848
    6. 'elif' → logprob: -11.628670692443848
    7. '
' → logprob: -11.753670692443848
    8. ' ' → logprob: -13.128670692443848
    9. ' else' → logprob: -13.128670692443848
    10. '	return' → logprob: -13.253670692443848

Token 187: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.004078401252627373
    2. ' result' → logprob: -5.504078388214111
    3. '(result' → logprob: -17.629077911376953
    4. ' ' → logprob: -20.629077911376953
    5. '	result' → logprob: -21.629077911376953
    6. '   ' → logprob: -22.254077911376953
    7. '[result' → logprob: -22.379077911376953
    8. ' ' → logprob: -22.754077911376953
    9. '=result' → logprob: -23.004077911376953
    10. '$result' → logprob: -23.004077911376953

Token 188: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: 'def' (ID: 1314)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -1.4421440362930298
    2. 'alice' → logprob: -1.6921440362930298
    3. 'bob' → logprob: -2.1921439170837402
    4. 'if' → logprob: -2.3171439170837402
    5. 'print' → logprob: -2.3171439170837402
    6. '#' → logprob: -2.8171439170837402
    7. 'result' → logprob: -3.0671439170837402
    8. 'user' → logprob: -3.1921439170837402
    9. 'actual' → logprob: -3.8171439170837402
    10. 'expression' → logprob: -4.06714391708374

Token 190: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.04511594772338867
    2. ' calc' → logprob: -3.2951159477233887
    3. 'max' → logprob: -5.920115947723389
    4. 'add' → logprob: -7.295115947723389
    5. 'br' → logprob: -7.295115947723389
    6. 'eval' → logprob: -8.045116424560547
    7. 'correct' → logprob: -8.295116424560547
    8. 'min' → logprob: -8.295116424560547
    9. ' max' → logprob: -8.670116424560547
    10. 'simple' → logprob: -8.670116424560547

Token 191: '_left' (ID: 22189)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.10253395140171051
    2. '_mul' → logprob: -3.477534055709839
    3. '_no' → logprob: -4.10253381729126
    4. '_all' → logprob: -4.72753381729126
    5. '_simple' → logprob: -5.22753381729126
    6. '_sum' → logprob: -5.22753381729126
    7. '_expr' → logprob: -5.60253381729126
    8. '_left' → logprob: -5.60253381729126
    9. '_basic' → logprob: -5.97753381729126
    10. '(expression' → logprob: -6.10253381729126

Token 192: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.003942448645830154
    2. '_ass' → logprob: -6.503942489624023
    3. '_assoc' → logprob: -7.253942489624023
    4. 'to' → logprob: -7.378942489624023
    5. '_right' → logprob: -8.628942489624023
    6. '_over' → logprob: -8.878942489624023
    7. '_' → logprob: -9.003942489624023
    8. '_val' → logprob: -9.253942489624023
    9. '```' → logprob: -9.503942489624023
    10. '_first' → logprob: -9.628942489624023

Token 193: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.1299736499786377
    2. 'right' → logprob: -2.1299736499786377
    3. 'ight' → logprob: -6.004973411560059
    4. '_left' → logprob: -9.004973411560059
    5. 'left' → logprob: -9.504973411560059
    6. '_end' → logprob: -9.754973411560059
    7. 'Right' → logprob: -10.004973411560059
    8. 'end' → logprob: -10.004973411560059
    9. 'r' → logprob: -10.129973411560059
    10. 'e' → logprob: -10.129973411560059

Token 194: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.006823712959885597
    2. '(' → logprob: -5.506823539733887
    3. ' (' → logprob: -6.756823539733887
    4. '(expression' → logprob: -7.131823539733887
    5. '(expr' → logprob: -7.756823539733887
    6. '(numbers' → logprob: -8.131823539733887
    7. '(tokens' → logprob: -10.756823539733887
    8. '(nodes' → logprob: -12.131823539733887
    9. '(num' → logprob: -12.256823539733887
    10. '(express' → logprob: -12.381823539733887

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014025058771949261
    2. ' ,' → logprob: -8.875140190124512
    3. ',
' → logprob: -15.250140190124512
    4. '‌,' → logprob: -17.875141143798828
    5. ',

' → logprob: -18.250141143798828
    6. '‍,' → logprob: -18.375141143798828
    7. '،' → logprob: -18.500141143798828
    8. '),' → logprob: -18.875141143798828
    9. 'def' → logprob: -18.875141143798828
    10. ',
' → logprob: -18.875141143798828

Token 196: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.043028995394706726
    2. ' ops' → logprob: -3.1680290699005127
    3. '.ops' → logprob: -11.043028831481934
    4. ' ' → logprob: -12.793028831481934
    5. ')' → logprob: -12.918028831481934
    6. '_ops' → logprob: -13.168028831481934
    7. 'op' → logprob: -13.668028831481934
    8. '   ' → logprob: -13.918028831481934
    9. '```' → logprob: -14.168028831481934
    10. 'opts' → logprob: -14.293028831481934

Token 197: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011131061241030693
    2. '):
' → logprob: -4.511131286621094
    3. ')' → logprob: -10.011131286621094
    4. '):
' → logprob: -10.636131286621094
    5. ' ):' → logprob: -11.761131286621094
    6. '):

' → logprob: -12.636131286621094
    7. ',' → logprob: -13.136131286621094
    8. ':' → logprob: -14.011131286621094
    9. '   ' → logprob: -16.136131286621094
    10. ' ):
' → logprob: -16.636131286621094

Token 198: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3168688118457794
    2. '   ' → logprob: -1.566868782043457
    3. ' result' → logprob: -2.816868782043457
    4. 'res' → logprob: -6.066868782043457
    5. ' res' → logprob: -7.441868782043457
    6. 'acc' → logprob: -9.066868782043457
    7. ' acc' → logprob: -10.441868782043457
    8. 'total' → logprob: -11.566868782043457
    9. '	result' → logprob: -11.816868782043457
    10. ' total' → logprob: -12.191868782043457

Token 199: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.004644672852009535
    2. ' result' → logprob: -6.004644870758057
    3. 'res' → logprob: -6.254644870758057
    4. 'acc' → logprob: -8.504644393920898
    5. ' res' → logprob: -10.879644393920898
    6. '   ' → logprob: -11.379644393920898
    7. ' acc' → logprob: -11.504644393920898
    8. 'total' → logprob: -13.379644393920898
    9. 'value' → logprob: -14.754644393920898
    10. '	result' → logprob: -15.754644393920898

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022422909736633
    2. '=' → logprob: -1.910224199295044
    3. ' ' → logprob: -17.03522491455078
    4. '=num' → logprob: -17.41022491455078
    5. '=

' → logprob: -18.53522491455078
    6. ',' → logprob: -18.91022491455078
    7. ' =
' → logprob: -18.91022491455078
    8. '=n' → logprob: -19.16022491455078
    9. ' =
' → logprob: -19.28522491455078
    10. '=int' → logprob: -19.41022491455078

Token 201: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.012615831568837166
    2. ' nums' → logprob: -4.51261568069458
    3. 'numbers' → logprob: -6.51261568069458
    4. ' numbers' → logprob: -9.512616157531738
    5. 'num' → logprob: -11.887616157531738
    6. '(nums' → logprob: -14.137616157531738
    7. '   ' → logprob: -14.637616157531738
    8. '_nums' → logprob: -16.387615203857422
    9. ' ' → logprob: -16.762615203857422
    10. 'n' → logprob: -16.887615203857422

Token 202: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019286326132714748
    2. '0' → logprob: -6.251928806304932
    3. ' [' → logprob: -17.876928329467773
    4. ' ' → logprob: -18.501928329467773
    5. '```' → logprob: -19.251928329467773
    6. '\[' → logprob: -19.376928329467773
    7. 's' → logprob: -19.751928329467773
    8. '[
' → logprob: -19.751928329467773
    9. '1' → logprob: -20.376928329467773
    10. '(' → logprob: -20.376928329467773

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.375001907348633
    3. ' ' → logprob: -15.000001907348633
    4. '۰' → logprob: -16.500001907348633
    5. '０' → logprob: -17.875001907348633
    6. '1' → logprob: -18.000001907348633
    7. '```' → logprob: -18.187501907348633
    8. '012' → logprob: -18.812501907348633
    9. '   ' → logprob: -18.875001907348633
    10. '٠' → logprob: -19.000001907348633

Token 204: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13552725315093994
    2. ')
' → logprob: -2.1355271339416504
    3. ' )' → logprob: -5.26052713394165
    4. ' )
' → logprob: -5.76052713394165
    5. '<|end|>' → logprob: -9.260527610778809
    6. '
' → logprob: -10.385527610778809
    7. ' 
' → logprob: -10.885527610778809
    8. ' ' → logprob: -10.885527610778809
    9. 'for' → logprob: -11.010527610778809
    10. '  
' → logprob: -11.635527610778809

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6947431564331055
    2. ' for' → logprob: -0.9447431564331055
    3. 'for' → logprob: -2.1947431564331055
    4. '	for' → logprob: -7.4447431564331055
    5. '
' → logprob: -10.069743156433105
    6. ' ' → logprob: -13.569743156433105
    7. '    
' → logprob: -13.819743156433105
    8. '  ' → logprob: -14.694743156433105
    9. '<|end|>' → logprob: -14.944743156433105
    10. '```' → logprob: -15.569743156433105

Token 206: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1004488468170166
    2. ' for' → logprob: -2.3504488468170166
    3. '   ' → logprob: -8.350448608398438
    4. '
' → logprob: -12.350448608398438
    5. '	for' → logprob: -13.725448608398438
    6. ' ' → logprob: -15.100448608398438
    7. '```' → logprob: -15.850448608398438
    8. ' 
' → logprob: -17.100448608398438
    9. '    
' → logprob: -17.475448608398438
    10. '  ' → logprob: -18.725448608398438

Token 207: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2014336884021759
    2. 'i' → logprob: -1.7014336585998535
    3. ' ' → logprob: -11.576434135437012
    4. '	i' → logprob: -11.826434135437012
    5. ',' → logprob: -13.451434135437012
    6. ',i' → logprob: -14.201434135437012
    7. ' ' → logprob: -14.951434135437012
    8. '   ' → logprob: -14.951434135437012
    9. '  ' → logprob: -15.076434135437012
    10. '(i' → logprob: -15.451434135437012

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017053397372364998
    2. ' in' → logprob: -4.142053604125977
    3. ' ,' → logprob: -7.142053604125977
    4. 'in' → logprob: -8.642053604125977
    5. '+' → logprob: -10.517053604125977
    6. '=' → logprob: -11.892053604125977
    7. '1' → logprob: -12.142053604125977
    8. ' ' → logprob: -12.267053604125977
    9. '_,' → logprob: -13.642053604125977
    10. '+,' → logprob: -14.767053604125977

Token 209: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.10021863132715225
    2. ' op' → logprob: -2.3502185344696045
    3. '_op' → logprob: -11.975218772888184
    4. '(op' → logprob: -12.850218772888184
    5. ' ' → logprob: -13.850218772888184
    6. '	op' → logprob: -13.850218772888184
    7. ' in' → logprob: -14.600218772888184
    8. '_' → logprob: -15.850218772888184
    9. 'ops' → logprob: -16.100217819213867
    10. '   ' → logprob: -16.350217819213867

Token 210: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001177012687548995
    2. 'in' → logprob: -6.751176834106445
    3. ',' → logprob: -12.376176834106445
    4. ' ' → logprob: -13.876176834106445
    5. ')' → logprob: -14.626176834106445
    6. '   ' → logprob: -15.001176834106445
    7. '	in' → logprob: -15.001176834106445
    8. '[' → logprob: -16.501176834106445
    9. '```' → logprob: -16.751176834106445
    10. '  ' → logprob: -16.751176834106445

Token 211: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.6330758929252625
    2. 'enumer' → logprob: -0.7580758929252625
    3. 'range' → logprob: -8.008075714111328
    4. ' range' → logprob: -9.008075714111328
    5. ' ' → logprob: -11.883075714111328
    6. 'operators' → logprob: -12.633075714111328
    7. '(' → logprob: -13.258075714111328
    8. 'ops' → logprob: -13.508075714111328
    9. '```' → logprob: -13.633075714111328
    10. ')' → logprob: -14.133075714111328

Token 212: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.313314952421933e-05
    2. ' (' → logprob: -10.000062942504883
    3. 'ops' → logprob: -11.000062942504883
    4. ' ops' → logprob: -15.000062942504883
    5. 'operators' → logprob: -15.500062942504883
    6. ' ' → logprob: -15.875062942504883
    7. ')' → logprob: -15.875062942504883
    8. '(nums' → logprob: -16.625062942504883
    9. '.ops' → logprob: -17.125062942504883
    10. ',' → logprob: -17.250062942504883

Token 213: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0002851729223039001
    2. 'operators' → logprob: -8.375285148620605
    3. ' ops' → logprob: -9.875285148620605
    4. '.ops' → logprob: -14.000285148620605
    5. ' operators' → logprob: -14.500285148620605
    6. 'op' → logprob: -14.875285148620605
    7. 'nums' → logprob: -15.250285148620605
    8. ' ' → logprob: -15.375285148620605
    9. ')' → logprob: -15.500285148620605
    10. '_ops' → logprob: -15.500285148620605

Token 214: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47421354055404663
    2. '):' → logprob: -0.9742135405540466
    3. '):
' → logprob: -9.599213600158691
    4. ':' → logprob: -10.224213600158691
    5. ')' → logprob: -11.849213600158691
    6. ' ):
' → logprob: -11.849213600158691
    7. ' ):' → logprob: -12.099213600158691
    8. '):

' → logprob: -12.099213600158691
    9. '   ' → logprob: -12.349213600158691
    10. ':
' → logprob: -13.224213600158691

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.535875141620636
    2. ' if' → logprob: -0.910875141620636
    3. 'if' → logprob: -4.53587532043457
    4. '    ' → logprob: -7.16087532043457
    5. '   ' → logprob: -7.53587532043457
    6. ':' → logprob: -7.66087532043457
    7. ':
' → logprob: -10.28587532043457
    8. '):
' → logprob: -10.53587532043457
    9. '	if' → logprob: -11.16087532043457
    10. ' ' → logprob: -11.53587532043457

Token 216: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08447757363319397
    2. 'if' (adapté à ' if') → logprob: -2.584477663040161
    3. '       ' → logprob: -5.209477424621582
    4. ' next' → logprob: -10.334477424621582
    5. '   ' → logprob: -10.709477424621582
    6. '	if' → logprob: -10.959477424621582
    7. '    ' → logprob: -11.084477424621582
    8. ' op' → logprob: -12.209477424621582
    9. '+' → logprob: -12.584477424621582
    10. 'next' → logprob: -12.584477424621582

Token 217: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.2521294951438904
    2. ' op' → logprob: -1.5021295547485352
    3. ''' → logprob: -10.252129554748535
    4. '+' → logprob: -10.252129554748535
    5. ' ' → logprob: -10.502129554748535
    6. '	op' → logprob: -10.752129554748535
    7. ''op' → logprob: -10.877129554748535
    8. '  ' → logprob: -11.627129554748535
    9. '   ' → logprob: -11.752129554748535
    10. ' '' → logprob: -11.877129554748535

Token 218: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25257787108421326
    2. '==' → logprob: -1.5025779008865356
    3. ' in' → logprob: -8.002577781677246
    4. '=='' → logprob: -9.627577781677246
    5. '=' → logprob: -9.752577781677246
    6. '+' → logprob: -10.127577781677246
    7. ' ' → logprob: -10.252577781677246
    8. ' =' → logprob: -11.252577781677246
    9. '  ' → logprob: -11.377577781677246
    10. ' '' → logprob: -11.752577781677246

Token 219: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.0037301299162209034
    2. ' '+' → logprob: -6.128730297088623
    3. ''*' → logprob: -6.753730297088623
    4. ''' → logprob: -8.128729820251465
    5. '+' → logprob: -10.253729820251465
    6. ''>' → logprob: -10.878729820251465
    7. '('+' → logprob: -11.378729820251465
    8. '"+' → logprob: -12.378729820251465
    9. ' '+'' → logprob: -12.503729820251465
    10. ' ' → logprob: -13.503729820251465

Token 220: '':
' (ID: 7669)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.11024581640958786
    2. '':
' → logprob: -2.610245704650879
    3. '):
' → logprob: -4.110245704650879
    4. '':' → logprob: -4.735245704650879
    5. ''):' → logprob: -5.860245704650879
    6. ''' → logprob: -6.735245704650879
    7. ' '' → logprob: -7.485245704650879
    8. '):' → logprob: -7.735245704650879
    9. ':' → logprob: -8.610245704650879
    10. '       ' → logprob: -8.735245704650879

Token 221: '           ' (ID: 352)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.42757678031921387
    2. 'result' → logprob: -1.3025767803192139
    3. '           ' → logprob: -2.677576780319214
    4. ':' → logprob: -5.677577018737793
    5. ':
' → logprob: -6.802577018737793
    6. '       ' → logprob: -7.177577018737793
    7. ',result' → logprob: -7.802577018737793
    8. '   ' → logprob: -7.927577018737793
    9. '=result' → logprob: -7.927577018737793
    10. '```' → logprob: -8.802577018737793

Token 222: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.38687217235565186
    2. ' result' → logprob: -1.1368721723556519
    3. '	result' → logprob: -15.136872291564941
    4. '(result' → logprob: -15.511872291564941
    5. '_result' → logprob: -15.761872291564941
    6. '+' → logprob: -16.136871337890625
    7. '=result' → logprob: -16.136871337890625
    8. ',result' → logprob: -16.386871337890625
    9. ' ' → logprob: -16.511871337890625
    10. '   ' → logprob: -17.261871337890625

Token 223: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03804493322968483
    2. '+=' → logprob: -3.2880449295043945
    3. '+' → logprob: -12.788044929504395
    4. '=' → logprob: -15.163044929504395
    5. ' ' → logprob: -16.16304588317871
    6. ' ' → logprob: -16.66304588317871
    7. ' +' → logprob: -16.78804588317871
    8. '+=(' → logprob: -16.78804588317871
    9. ' =' → logprob: -17.41304588317871
    10. '+='' → logprob: -17.53804588317871

Token 224: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.5760266184806824
    2. 'nums' → logprob: -0.8260266184806824
    3. ' numbers' → logprob: -9.826026916503906
    4. 'numbers' → logprob: -10.326026916503906
    5. '(nums' → logprob: -15.076026916503906
    6. 'num' → logprob: -15.826026916503906
    7. '_nums' → logprob: -18.076026916503906
    8. ' ' → logprob: -18.576026916503906
    9. ' num' → logprob: -18.951026916503906
    10. 'Nums' → logprob: -18.951026916503906

Token 225: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -14.875
    3. '[' → logprob: -17.5
    4. ' [' → logprob: -17.875
    5. '{i' → logprob: -19.0
    6. '(i' → logprob: -19.5
    7. '[++' → logprob: -20.625
    8. '   ' → logprob: -20.75
    9. '[
' → logprob: -20.875
    10. '```' → logprob: -21.125

Token 226: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.4391956685576588e-05
    2. ' +' → logprob: -10.625024795532227
    3. '1' → logprob: -17.125024795532227
    4. '+
' → logprob: -17.625024795532227
    5. ']+' → logprob: -19.500024795532227
    6. ' ' → logprob: -19.500024795532227
    7. '+]' → logprob: -19.500024795532227
    8. '   ' → logprob: -19.750024795532227
    9. '＋' → logprob: -19.750024795532227
    10. ']' → logprob: -20.125024795532227

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '+' → logprob: -16.2500057220459
    4. '
' → logprob: -17.0000057220459
    5. '   ' → logprob: -17.0000057220459
    6. '```' → logprob: -18.5000057220459
    7. '

' → logprob: -19.8125057220459
    8. '0' → logprob: -20.2500057220459
    9. '  ' → logprob: -20.3750057220459
    10. '[' → logprob: -20.4375057220459

Token 228: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9019692540168762
    2. ']
' → logprob: -1.5269691944122314
    3. '       ' → logprob: -1.6519691944122314
    4. ')
' → logprob: -2.4019691944122314
    5. ')' → logprob: -2.4019691944122314
    6. '<|end|>' → logprob: -6.4019694328308105
    7. 'elif' → logprob: -6.5269694328308105
    8. 'else' → logprob: -8.151968955993652
    9. '])
' → logprob: -8.401968955993652
    10. '])' → logprob: -8.776968955993652

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001280714524909854
    2. 'elif' → logprob: -7.126280784606934
    3. ' elif' → logprob: -8.626280784606934
    4. ' else' → logprob: -8.626280784606934
    5. 'else' → logprob: -9.126280784606934
    6. '<|end|>' → logprob: -12.626280784606934
    7. '	elif' → logprob: -13.126280784606934
    8. '```' → logprob: -13.626280784606934
    9. ' or' → logprob: -14.751280784606934
    10. '   ' → logprob: -14.876280784606934

Token 230: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8722867965698242
    2. 'else' (adapté à ' else') → logprob: -0.8722867965698242
    3. 'elif' → logprob: -2.122286796569824
    4. ' elif' → logprob: -3.122286796569824
    5. ' if' → logprob: -9.247286796569824
    6. 'if' → logprob: -9.372286796569824
    7. '       ' → logprob: -11.622286796569824
    8. '   ' → logprob: -12.622286796569824
    9. '
' → logprob: -13.747286796569824
    10. '	elif' → logprob: -14.247286796569824

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005073997308500111
    2. ':
' → logprob: -8.125507354736328
    3. ' :' → logprob: -9.000507354736328
    4. '           ' → logprob: -9.625507354736328
    5. 'if' → logprob: -12.500507354736328
    6. ':

' → logprob: -12.625507354736328
    7. '          ' → logprob: -12.625507354736328
    8. '*' → logprob: -12.875507354736328
    9. '       ' → logprob: -13.500507354736328
    10. '        ' → logprob: -13.625507354736328

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27796000242233276
    2. 'result' → logprob: -1.5279600620269775
    3. ':' → logprob: -4.277959823608398
    4. ' result' → logprob: -4.652959823608398
    5. '       ' → logprob: -6.777959823608398
    6. '```' → logprob: -8.152959823608398
    7. '          ' → logprob: -8.777959823608398
    8. 'if' → logprob: -8.902959823608398
    9. '            ' → logprob: -9.027959823608398
    10. '   ' → logprob: -9.277959823608398

Token 233: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0031822288874536753
    2. ' result' → logprob: -5.753182411193848
    3. '           ' → logprob: -12.878182411193848
    4. '	result' → logprob: -14.003182411193848
    5. '       ' → logprob: -15.003182411193848
    6. '_result' → logprob: -15.753182411193848
    7. '$result' → logprob: -15.753182411193848
    8. '[result' → logprob: -16.00318145751953
    9. '
' → logprob: -16.12818145751953
    10. '```' → logprob: -16.87818145751953

Token 234: ' *=' (ID: 25253)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.700702428817749
    2. '*=' → logprob: -0.700702428817749
    3. ' *=' → logprob: -5.325702667236328
    4. ' -=' → logprob: -5.950702667236328
    5. '=' → logprob: -10.700702667236328
    6. '-' → logprob: -10.700702667236328
    7. '+=' → logprob: -12.075702667236328
    8. '*' → logprob: -12.200702667236328
    9. ' ' → logprob: -14.200702667236328
    10. '```' → logprob: -14.575702667236328

Token 235: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.47408294677734375
    2. 'nums' → logprob: -0.9740829467773438
    3. 'numbers' → logprob: -12.724082946777344
    4. ' numbers' → logprob: -13.224082946777344
    5. '(nums' → logprob: -13.849082946777344
    6. 'num' → logprob: -16.224082946777344
    7. '_nums' → logprob: -16.474082946777344
    8. ' ' → logprob: -16.849082946777344
    9. ' ' → logprob: -18.224082946777344
    10. 'Nums' → logprob: -18.849082946777344

Token 236: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.026793092489242554
    2. '+' → logprob: -3.6517930030822754
    3. 'i' → logprob: -7.776793003082275
    4. '+i' → logprob: -10.151793479919434
    5. '[' → logprob: -10.776793479919434
    6. '{i' → logprob: -12.776793479919434
    7. '(i' → logprob: -13.276793479919434
    8. '```' → logprob: -13.401793479919434
    9. '+[' → logprob: -13.526793479919434
    10. ' +' → logprob: -13.651793479919434

Token 237: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.4060561776859686e-05
    2. '1' → logprob: -10.125043869018555
    3. ' +' → logprob: -12.625043869018555
    4. '+
' → logprob: -15.625043869018555
    5. '+i' → logprob: -16.000043869018555
    6. '+]' → logprob: -16.500043869018555
    7. '+)' → logprob: -16.875043869018555
    8. ']' → logprob: -17.375043869018555
    9. '+')' → logprob: -17.625043869018555
    10. ']+' → logprob: -17.750043869018555

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. '+' → logprob: -12.125009536743164
    3. ' ' → logprob: -12.500009536743164
    4. '<|end|>' → logprob: -16.250009536743164
    5. '```' → logprob: -16.375009536743164
    6. '   ' → logprob: -16.937509536743164
    7. 'i' → logprob: -17.625009536743164
    8. '-' → logprob: -17.812509536743164
    9. '...' → logprob: -17.937509536743164
    10. '
' → logprob: -18.312509536743164

Token 239: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018101456225849688
    2. ')
' → logprob: -9.250181198120117
    3. '<|end|>' → logprob: -10.250181198120117
    4. ' )' → logprob: -10.750181198120117
    5. ')return' → logprob: -11.750181198120117
    6. ']' → logprob: -12.000181198120117
    7. '   ' → logprob: -12.875181198120117
    8. '}' → logprob: -13.000181198120117
    9. ')}' → logprob: -13.375181198120117
    10. '）' → logprob: -13.500181198120117

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04930659756064415
    2. ' return' → logprob: -3.299306631088257
    3. 'return' → logprob: -4.549306392669678
    4. '
' → logprob: -7.549306392669678
    5. '	return' → logprob: -9.799306869506836
    6. '    
' → logprob: -10.799306869506836
    7. '       ' → logprob: -12.174306869506836
    8. ' 
' → logprob: -12.299306869506836
    9. ':return' → logprob: -12.674306869506836
    10. ' ' → logprob: -12.799306869506836

Token 241: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030567428097128868
    2. ' return' → logprob: -3.5305674076080322
    3. '   ' → logprob: -7.155567646026611
    4. '
' → logprob: -10.530567169189453
    5. '	return' → logprob: -12.030567169189453
    6. ' ' → logprob: -13.155567169189453
    7. '    
' → logprob: -14.655567169189453
    8. ':return' → logprob: -15.280567169189453
    9. '```' → logprob: -15.280567169189453
    10. '       ' → logprob: -15.530567169189453

Token 242: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0007099286303855479
    2. ' result' → logprob: -7.2507100105285645
    3. '(result' → logprob: -19.875709533691406
    4. '	result' → logprob: -21.125709533691406
    5. '[result' → logprob: -21.875709533691406
    6. '$result' → logprob: -22.000709533691406
    7. '=result' → logprob: -22.000709533691406
    8. ' ' → logprob: -22.875709533691406
    9. '```' → logprob: -23.375709533691406
    10. ' ' → logprob: -23.625709533691406

Token 243: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49896469712257385
    2. '
' → logprob: -1.7489646673202515
    3. 'correct' → logprob: -2.373964786529541
    4. '#' → logprob: -3.373964786529541
    5. 'print' → logprob: -3.623964786529541
    6. 'result' → logprob: -3.998964786529541
    7. 'bob' → logprob: -4.248964786529541
    8. '

' → logprob: -5.498964786529541
    9. 'answer' → logprob: -5.623964786529541
    10. 'user' → logprob: -5.873964786529541

Token 244: 'mul' (ID: 44857)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16059879958629608
    2. 'correct' → logprob: -3.1605987548828125
    3. '#' → logprob: -3.6605987548828125
    4. 'print' → logprob: -4.1605987548828125
    5. 'result' → logprob: -4.1605987548828125
    6. 'bob' → logprob: -4.2855987548828125
    7. 'answer' → logprob: -4.6605987548828125
    8. 'for' → logprob: -5.2855987548828125
    9. 'expression' → logprob: -6.1605987548828125
    10. 'my' → logprob: -6.1605987548828125

Token 245: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.22780150175094604
    2. 't' → logprob: -2.227801561355591
    3. '_result' → logprob: -3.352801561355591
    4. '_left' → logprob: -3.977801561355591
    5. '_tip' → logprob: -4.477801322937012
    6. '_t' → logprob: -5.102801322937012
    7. 'ti' → logprob: -5.727801322937012
    8. '_' → logprob: -5.727801322937012
    9. '_f' → logprob: -6.602801322937012
    10. 'tip' → logprob: -6.727801322937012

Token 246: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05174220725893974
    2. '_result' → logprob: -3.9267423152923584
    3. '_' → logprob: -4.426742076873779
    4. ' =' → logprob: -6.051742076873779
    5. '(_' → logprob: -6.551742076873779
    6. '=' → logprob: -6.551742076873779
    7. '_calc' → logprob: -6.551742076873779
    8. '(_)' → logprob: -6.551742076873779
    9. '('_' → logprob: -6.801742076873779
    10. '_left' → logprob: -6.926742076873779

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014981210231781
    2. '=' → logprob: -1.7014981508255005
    3. ' ==' → logprob: -9.826498031616211
    4. '_' → logprob: -10.826498031616211
    5. ')' → logprob: -12.576498031616211
    6. '==' → logprob: -13.451498031616211
    7. ' ' → logprob: -13.576498031616211
    8. ' ' → logprob: -13.826498031616211
    9. 's' → logprob: -14.076498031616211
    10. ' =)' → logprob: -14.326498031616211

Token 248: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0004309076175559312
    2. ' calc' → logprob: -7.750431060791016
    3. 'cal' → logprob: -15.500431060791016
    4. '(calc' → logprob: -17.000431060791016
    5. '.calc' → logprob: -19.375431060791016
    6. 'calculate' → logprob: -19.625431060791016
    7. '_calc' → logprob: -20.125431060791016
    8. '   ' → logprob: -20.250431060791016
    9. '```' → logprob: -20.250431060791016
    10. ' ' → logprob: -20.500431060791016

Token 249: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: 0.0
    2. 'mul' → logprob: -19.0
    3. '_' → logprob: -19.375
    4. '_mult' → logprob: -19.875
    5. '_mux' → logprob: -20.75
    6. '*_' → logprob: -21.375
    7. '_mix' → logprob: -22.75
    8. '_mu' → logprob: -23.125
    9. '_left' → logprob: -23.125
    10. '_multi' → logprob: -23.75

Token 250: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.07898309081792831
    2. '_mul' → logprob: -2.5789830684661865
    3. '_left' → logprob: -9.828983306884766
    4. '*_' → logprob: -10.578983306884766
    5. '```' → logprob: -13.328983306884766
    6. '_mult' → logprob: -13.828983306884766
    7. '_second' → logprob: -13.828983306884766
    8. '_' → logprob: -13.953983306884766
    9. '_before' → logprob: -13.953983306884766
    10. '\' → logprob: -14.328983306884766

Token 251: '(numbers' (ID: 98592)
  Prédit: '(nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.003436015686020255
    2. '(numbers' → logprob: -5.753436088562012
    3. '_nums' → logprob: -9.378436088562012
    4. '(' → logprob: -9.378436088562012
    5. '(num' → logprob: -10.378436088562012
    6. '_left' → logprob: -10.628436088562012
    7. '(_' → logprob: -11.003436088562012
    8. '_' → logprob: -12.253436088562012
    9. '_first' → logprob: -12.878436088562012
    10. ' (' → logprob: -12.878436088562012

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.176947600673884e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',
' → logprob: -16.12502098083496
    4. ')' → logprob: -16.12502098083496
    5. '[' → logprob: -18.12502098083496
    6. '‌,' → logprob: -18.12502098083496
    7. ',

' → logprob: -18.75002098083496
    8. 'operators' → logprob: -18.87502098083496
    9. '_,' → logprob: -19.00002098083496
    10. '```' → logprob: -19.00002098083496

Token 253: ' operators' (ID: 29893)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.0008077251841314137
    2. ' operators' → logprob: -7.125807762145996
    3. 'operations' → logprob: -13.125807762145996
    4. 'oper' → logprob: -14.625807762145996
    5. 'operator' → logprob: -14.750807762145996
    6. 'ops' → logprob: -15.250807762145996
    7. ')' → logprob: -16.87580680847168
    8. 'Operators' → logprob: -17.37580680847168
    9. 'opers' → logprob: -17.50080680847168
    10. '```' → logprob: -18.12580680847168

Token 254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7848862373502925e-05
    2. ')
' → logprob: -10.500027656555176
    3. ')

' → logprob: -16.125028610229492
    4. ' )' → logprob: -16.250028610229492
    5. ')#' → logprob: -17.625028610229492
    6. '),' → logprob: -18.250028610229492
    7. '))' → logprob: -19.500028610229492
    8. ')
' → logprob: -19.625028610229492
    9. ').' → logprob: -19.875028610229492
    10. ')**' → logprob: -20.125028610229492

Token 255: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1029917523264885
    2. 'ltr' → logprob: -2.477991819381714
    3. 'l' → logprob: -5.102991580963135
    4. 'lt' → logprob: -5.602991580963135
    5. 'lr' → logprob: -5.727991580963135
    6. 'lrt' → logprob: -7.352991580963135
    7. 'if' → logprob: -8.602992057800293
    8. 'mul' → logprob: -10.352992057800293
    9. 'lef' → logprob: -10.477992057800293
    10. 'print' → logprob: -11.352992057800293

Token 256: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.625001907348633
    3. 'to' → logprob: -14.625001907348633
    4. '_from' → logprob: -16.625001907348633
    5. '_mul' → logprob: -16.625001907348633
    6. '_for' → logprob: -17.500001907348633
    7. 'To' → logprob: -17.875001907348633
    8. '_left' → logprob: -17.875001907348633
    9. '_of' → logprob: -18.250001907348633
    10. '_TO' → logprob: -18.500001907348633

Token 257: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.018165279179811478
    2. 'right' → logprob: -4.018165111541748
    3. '_left' → logprob: -11.643165588378906
    4. '_rhs' → logprob: -13.393165588378906
    5. '_RIGHT' → logprob: -13.768165588378906
    6. 'Right' → logprob: -13.768165588378906
    7. '_' → logprob: -14.018165588378906
    8. 'rightness' → logprob: -14.393165588378906
    9. ' right' → logprob: -14.518165588378906
    10. '_r' → logprob: -14.768165588378906

Token 258: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.27099974633893e-05
    2. '_results' → logprob: -12.125012397766113
    3. '=_' → logprob: -13.000012397766113
    4. ' =' → logprob: -13.500012397766113
    5. '=' → logprob: -13.625012397766113
    6. 'result' → logprob: -13.750012397766113
    7. '_answer' → logprob: -14.500012397766113
    8. '_' → logprob: -15.000012397766113
    9. '_Result' → logprob: -16.12501335144043
    10. '_res' → logprob: -17.00001335144043

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967913061380386
    2. '=' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.436967849731445
    4. '_' → logprob: -16.936967849731445
    5. ' ' → logprob: -18.311967849731445
    6. ')' → logprob: -18.561967849731445
    7. '＝' → logprob: -19.061967849731445
    8. ' =
' → logprob: -19.436967849731445
    9. ' ==' → logprob: -19.436967849731445
    10. '  ' → logprob: -19.686967849731445

Token 260: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.38687199354171753
    2. ' calc' → logprob: -1.1368720531463623
    3. '(calc' → logprob: -14.261872291564941
    4. 'cal' → logprob: -15.636872291564941
    5. '.calc' → logprob: -16.136871337890625
    6. '_calc' → logprob: -17.636871337890625
    7. ' ' → logprob: -18.386871337890625
    8. ' ' → logprob: -19.011871337890625
    9. ' cal' → logprob: -19.886871337890625
    10. '
' → logprob: -20.011871337890625

Token 261: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.8889261304575484e-06
    2. '_mul' → logprob: -12.500003814697266
    3. '_le' → logprob: -17.250003814697266
    4. 'left' → logprob: -17.875003814697266
    5. '_right' → logprob: -19.375003814697266
    6. '_Left' → logprob: -19.750003814697266
    7. '__' → logprob: -20.125003814697266
    8. '_' → logprob: -20.125003814697266
    9. '_LEFT' → logprob: -20.875003814697266
    10. 'mul' → logprob: -21.125003814697266

Token 262: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0001366744691040367
    2. '_right' → logprob: -9.000136375427246
    3. 'to' → logprob: -11.375136375427246
    4. '_first' → logprob: -14.375136375427246
    5. '_left' → logprob: -14.875136375427246
    6. '_mul' → logprob: -15.750136375427246
    7. 'right' → logprob: -16.125137329101562
    8. '_from' → logprob: -16.125137329101562
    9. 'To' → logprob: -16.375137329101562
    10. '_for' → logprob: -17.000137329101562

Token 263: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.1002393513917923
    2. 'right' → logprob: -2.3502392768859863
    3. '_left' → logprob: -10.975239753723145
    4. 'left' → logprob: -11.850239753723145
    5. 'Right' → logprob: -11.975239753723145
    6. '_RIGHT' → logprob: -14.100239753723145
    7. 'r' → logprob: -15.350239753723145
    8. 'rightness' → logprob: -15.475239753723145
    9. 'RIGHT' → logprob: -15.475239753723145
    10. '_rhs' → logprob: -15.725239753723145

Token 264: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -1.3782830137643032e-05
    2. ' (' → logprob: -11.75001335144043
    3. '(' → logprob: -12.62501335144043
    4. '(nums' → logprob: -13.25001335144043
    5. '(n' → logprob: -15.50001335144043
    6. '_numbers' → logprob: -15.75001335144043
    7. '_' → logprob: -16.25001335144043
    8. '(names' → logprob: -17.00001335144043
    9. '(left' → logprob: -17.12501335144043
    10. 'numbers' → logprob: -17.87501335144043

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006847388111054897
    2. ' ,' → logprob: -5.381847381591797
    3. '(numbers' → logprob: -6.131847381591797
    4. '(' → logprob: -10.131847381591797
    5. ',n' → logprob: -12.506847381591797
    6. 'operators' → logprob: -12.881847381591797
    7. ' (' → logprob: -13.006847381591797
    8. 'numbers' → logprob: -13.631847381591797
    9. '(n' → logprob: -14.256847381591797
    10. ')' → logprob: -14.631847381591797

Token 266: ' operators' (ID: 29893)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.0013270224444568157
    2. ' operators' → logprob: -6.626327037811279
    3. 'operations' → logprob: -14.751326560974121
    4. 'operator' → logprob: -14.876326560974121
    5. 'numbers' → logprob: -15.876326560974121
    6. 'oper' → logprob: -16.126327514648438
    7. ' ' → logprob: -16.876327514648438
    8. '   ' → logprob: -17.626327514648438
    9. ' operadores' → logprob: -17.876327514648438
    10. 'Operators' → logprob: -18.001327514648438

Token 267: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.424530435353518e-05
    2. ')
' → logprob: -10.000094413757324
    3. '(numbers' → logprob: -10.375094413757324
    4. '()' → logprob: -12.625094413757324
    5. '(expression' → logprob: -12.750094413757324
    6. '(' → logprob: -12.875094413757324
    7. ')

' → logprob: -13.125094413757324
    8. '())' → logprob: -13.250094413757324
    9. ' )' → logprob: -13.375094413757324
    10. '))' → logprob: -13.750094413757324

Token 268: 'mul' (ID: 44857)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023786230012774467
    2. 'print' → logprob: -4.5237860679626465
    3. 'correct' → logprob: -4.5237860679626465
    4. 'answers' → logprob: -7.1487860679626465
    5. 'results' → logprob: -7.6487860679626465
    6. 'possible' → logprob: -7.8987860679626465
    7. 'answer' → logprob: -10.523786544799805
    8. 'outputs' → logprob: -10.773786544799805
    9. 'matches' → logprob: -10.898786544799805
    10. 'result' → logprob: -10.898786544799805

Token 269: '_match' (ID: 26039)
  Prédit: '_first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.00037621514638885856
    2. '_result' → logprob: -8.250375747680664
    3. '_if' → logprob: -10.625375747680664
    4. '_mul' → logprob: -10.875375747680664
    5. '_' → logprob: -11.250375747680664
    6. '_answer' → logprob: -11.750375747680664
    7. 'first' → logprob: -12.000375747680664
    8. '_results' → logprob: -12.125375747680664
    9. '_m' → logprob: -12.125375747680664
    10. '_correct' → logprob: -12.625375747680664

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3135468065738678
    2. '=' → logprob: -1.3135467767715454
    3. 's' → logprob: -8.313547134399414
    4. '_' → logprob: -10.813547134399414
    5. 'ed' → logprob: -11.938547134399414
    6. '=True' → logprob: -12.688547134399414
    7. ' ' → logprob: -12.938547134399414
    8. 'es' → logprob: -13.188547134399414
    9. 'd' → logprob: -13.563547134399414
    10. '_match' → logprob: -14.063547134399414

Token 271: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0486401692032814
    2. 'mul' → logprob: -3.298640251159668
    3. ' (' → logprob: -5.298640251159668
    4. '(b' → logprob: -5.673640251159668
    5. ' mul' → logprob: -6.673640251159668
    6. 'bob' → logprob: -8.298640251159668
    7. 'int' → logprob: -9.048640251159668
    8. '(int' → logprob: -9.173640251159668
    9. 'm' → logprob: -9.298640251159668
    10. ' bob' → logprob: -9.548640251159668

Token 272: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.00473497249186039
    2. 'bob' → logprob: -5.379734992980957
    3. ' mul' → logprob: -9.379734992980957
    4. 'multip' → logprob: -11.004734992980957
    5. ' bob' → logprob: -12.879734992980957
    6. 'mult' → logprob: -13.004734992980957
    7. 'mol' → logprob: -13.629734992980957
    8. 'mut' → logprob: -13.629734992980957
    9. 'Bob' → logprob: -14.129734992980957
    10. ' ' → logprob: -14.379734992980957

Token 273: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: 0.0
    2. '_FIRST' → logprob: -18.375
    3. 'first' → logprob: -18.875
    4. '_left' → logprob: -19.75
    5. '_second' → logprob: -19.75
    6. '_before' → logprob: -20.125
    7. ')_' → logprob: -20.75
    8. '_f' → logprob: -20.875
    9. 'First' → logprob: -21.25
    10. '_First' → logprob: -21.25

Token 274: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.6240566083070007e-06
    2. 'result' → logprob: -14.250001907348633
    3. '_match' → logprob: -15.375001907348633
    4. '_answer' → logprob: -15.750001907348633
    5. '_' → logprob: -16.000001907348633
    6. ' ==' → logprob: -16.375001907348633
    7. '==' → logprob: -16.500001907348633
    8. ' _' → logprob: -16.500001907348633
    9. ')' → logprob: -17.125001907348633
    10. '_results' → logprob: -18.125001907348633

Token 275: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31327635049819946
    2. '==' → logprob: -1.3132762908935547
    3. '=' → logprob: -11.438276290893555
    4. ')' → logprob: -13.188276290893555
    5. ' ' → logprob: -14.563276290893555
    6. ' =' → logprob: -14.688276290893555
    7. ')==' → logprob: -14.688276290893555
    8. '==
' → logprob: -14.813276290893555
    9. ',' → logprob: -16.188276290893555
    10. ' ' → logprob: -16.313276290893555

Token 276: ' bob' (ID: 27821)
  Prédit: 'bob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bob' → logprob: -0.2519300878047943
    2. ' bob' → logprob: -1.5019301176071167
    3. 'b' → logprob: -14.751930236816406
    4. ' ' → logprob: -15.001930236816406
    5. 'Bob' → logprob: -15.751930236816406
    6. ' Bob' → logprob: -16.626930236816406
    7. '
' → logprob: -17.251930236816406
    8. '   ' → logprob: -17.751930236816406
    9. '	b' → logprob: -18.751930236816406
    10. ' ' → logprob: -19.001930236816406

Token 277: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.000000953674316
    3. '_ans' → logprob: -15.250000953674316
    4. '_match' → logprob: -16.0
    5. ' _' → logprob: -16.875
    6. '_answers' → logprob: -18.25
    7. 'answer' → logprob: -18.25
    8. ')' → logprob: -18.5
    9. '*_' → logprob: -18.875
    10. 'Answer' → logprob: -18.875

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6970818638801575
    2. ')
' → logprob: -0.6970818638801575
    3. ' or' → logprob: -5.947082042694092
    4. ' and' → logprob: -7.447082042694092
    5. ' )
' → logprob: -7.447082042694092
    6. ' )' → logprob: -9.447081565856934
    7. 'or' → logprob: -10.572081565856934
    8. 'and' → logprob: -10.697081565856934
    9. ',' → logprob: -11.822081565856934
    10. ')
' → logprob: -12.072081565856934

Token 279: 'left' (ID: 4530)
  Prédit: 'ltr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ltr' → logprob: -0.11968692392110825
    2. 'left' → logprob: -2.4946868419647217
    3. 'lt' → logprob: -4.369687080383301
    4. 'l' → logprob: -4.494687080383301
    5. 'lr' → logprob: -5.369687080383301
    6. 'lrt' → logprob: -6.369687080383301
    7. 'lef' → logprob: -10.6196870803833
    8. ' left' → logprob: -10.9946870803833
    9. ' l' → logprob: -11.7446870803833
    10. 'LTR' → logprob: -11.8696870803833

Token 280: '_match' (ID: 26039)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.018166448920965195
    2. '_match' → logprob: -4.018166542053223
    3. 'to' → logprob: -11.518166542053223
    4. '_right' → logprob: -13.143166542053223
    5. '_matching' → logprob: -13.893166542053223
    6. '_' → logprob: -14.018166542053223
    7. '_matches' → logprob: -14.143166542053223
    8. '=_' → logprob: -14.768166542053223
    9. 'match' → logprob: -15.018166542053223
    10. '=' → logprob: -15.268166542053223

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692999839782715
    2. ' =' → logprob: -2.126929998397827
    3. '=(' → logprob: -13.501930236816406
    4. '_' → logprob: -15.251930236816406
    5. ' =(' → logprob: -15.376930236816406
    6. '＝' → logprob: -16.126930236816406
    7. '_=' → logprob: -17.501930236816406
    8. ' ' → logprob: -17.751930236816406
    9. '==' → logprob: -18.001930236816406
    10. '=_' → logprob: -18.376930236816406

Token 282: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47408318519592285
    2. '(left' → logprob: -0.9740831851959229
    3. 'left' → logprob: -13.224082946777344
    4. ' left' → logprob: -13.599082946777344
    5. '(' → logprob: -13.724082946777344
    6. '[left' → logprob: -14.224082946777344
    7. '(lhs' → logprob: -14.724082946777344
    8. '(right' → logprob: -15.224082946777344
    9. ' ' → logprob: -15.849082946777344
    10. '   ' → logprob: -16.349082946777344

Token 283: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00012582694762386382
    2. ' left' → logprob: -9.000125885009766
    3. '(left' → logprob: -13.250125885009766
    4. '[left' → logprob: -14.625125885009766
    5. '	left' → logprob: -15.875125885009766
    6. '.left' → logprob: -17.750125885009766
    7. ':left' → logprob: -17.750125885009766
    8. ')' → logprob: -17.875125885009766
    9. '   ' → logprob: -17.875125885009766
    10. 'lef' → logprob: -17.875125885009766

Token 284: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.088346359931165e-07
    2. 'to' → logprob: -14.625000953674316
    3. '_match' → logprob: -15.375000953674316
    4. '=_' → logprob: -17.0
    5. '=' → logprob: -17.875
    6. '_' → logprob: -18.0
    7. 't' → logprob: -18.875
    8. 'To' → logprob: -19.0
    9. '_t' → logprob: -19.25
    10. '*_' → logprob: -19.375

Token 285: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.3485282361507416
    2. 'right' → logprob: -1.223528265953064
    3. '_to' → logprob: -10.848527908325195
    4. ' right' → logprob: -10.973527908325195
    5. '_' → logprob: -11.848527908325195
    6. 'to' → logprob: -12.223527908325195
    7. '_r' → logprob: -12.348527908325195
    8. 'r' → logprob: -12.473527908325195
    9. 'rightness' → logprob: -12.473527908325195
    10. '```' → logprob: -12.473527908325195

Token 286: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.008129963040119e-06
    2. 'result' → logprob: -12.500003814697266
    3. 'Result' → logprob: -16.875003814697266
    4. '_answer' → logprob: -17.000003814697266
    5. '_match' → logprob: -17.375003814697266
    6. ')' → logprob: -17.875003814697266
    7. '_results' → logprob: -17.875003814697266
    8. '==' → logprob: -18.125003814697266
    9. '_RESULT' → logprob: -18.125003814697266
    10. '_' → logprob: -19.000003814697266

Token 287: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20141665637493134
    2. '==' → logprob: -1.7014166116714478
    3. ')' → logprob: -13.701416969299316
    4. ')==' → logprob: -13.701416969299316
    5. '=' → logprob: -14.826416969299316
    6. ' ' → logprob: -15.076416969299316
    7. '==
' → logprob: -15.076416969299316
    8. '==(' → logprob: -17.201416015625
    9. ' ==
' → logprob: -17.326416015625
    10. ' =' → logprob: -17.701416015625

Token 288: ' bob' (ID: 27821)
  Prédit: 'bob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bob' → logprob: -0.018153218552470207
    2. ' bob' → logprob: -4.018153190612793
    3. 'b' → logprob: -12.643153190612793
    4. ' ' → logprob: -17.01815414428711
    5. 'Bob' → logprob: -17.14315414428711
    6. '
' → logprob: -18.26815414428711
    7. '	b' → logprob: -18.39315414428711
    8. '   ' → logprob: -18.89315414428711
    9. '
' → logprob: -19.51815414428711
    10. '```' → logprob: -19.89315414428711

Token 289: '_answer' (ID: 65702)
  Prédit: '_match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.09016063064336777
    2. '_answer' → logprob: -2.465160608291626
    3. '_to' → logprob: -6.840160846710205
    4. 'match' → logprob: -10.090160369873047
    5. '_' → logprob: -10.215160369873047
    6. '_right' → logprob: -10.715160369873047
    7. '_first' → logprob: -11.715160369873047
    8. 'answer' → logprob: -11.715160369873047
    9. '_left' → logprob: -12.215160369873047
    10. 'Answer' → logprob: -12.340160369873047

Token 290: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -15.50000286102295
    4. '))' → logprob: -16.625001907348633
    5. ')#' → logprob: -17.125001907348633
    6. ')

' → logprob: -17.500001907348633
    7. '),' → logprob: -19.125001907348633
    8. '())' → logprob: -19.250001907348633
    9. '#' → logprob: -19.375001907348633
    10. ').' → logprob: -19.375001907348633

Token 291: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4498052223643754e-05
    2. 'print' → logprob: -11.250014305114746
    3. 'matches' → logprob: -14.375014305114746
    4. '
' → logprob: -15.000014305114746
    5. 'correct' → logprob: -15.250014305114746
    6. '```' → logprob: -15.625014305114746
    7. ' if' → logprob: -16.250015258789062
    8. 'match' → logprob: -16.750015258789062
    9. 'result' → logprob: -17.000015258789062
    10. 'possible' → logprob: -17.625015258789062

Token 292: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.023268774151802063
    2. 'mul' → logprob: -3.773268699645996
    3. ' ' → logprob: -12.023268699645996
    4. ' not' → logprob: -12.023268699645996
    5. '(' → logprob: -12.398268699645996
    6. ' (' → logprob: -12.648268699645996
    7. '(m' → logprob: -13.773268699645996
    8. '_mul' → logprob: -14.523268699645996
    9. ' mull' → logprob: -14.773268699645996
    10. ' multip' → logprob: -15.023268699645996

Token 293: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.0019294669618830085
    2. '_first' → logprob: -6.25192928314209
    3. '_' → logprob: -14.75192928314209
    4. '_matching' → logprob: -15.37692928314209
    5. 'match' → logprob: -16.626930236816406
    6. '_matches' → logprob: -16.751930236816406
    7. '```' → logprob: -17.376930236816406
    8. 'first' → logprob: -17.876930236816406
    9. '_mul' → logprob: -17.876930236816406
    10. '_merge' → logprob: -18.001930236816406

Token 294: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6722100973129272
    2. 'and' → logprob: -0.7972100973129272
    3. ':' → logprob: -3.297210216522217
    4. ' or' → logprob: -6.547210216522217
    5. 'or' → logprob: -8.297209739685059
    6. ':
' → logprob: -9.047209739685059
    7. ' ' → logprob: -10.672209739685059
    8. '==' → logprob: -11.547209739685059
    9. ' :' → logprob: -12.547209739685059
    10. '   ' → logprob: -12.672209739685059

Token 295: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.12706680595874786
    2. ' left' → logprob: -2.1270668506622314
    3. 'not' → logprob: -9.377066612243652
    4. ' not' → logprob: -9.877066612243652
    5. ' ' → logprob: -13.752066612243652
    6. '	left' → logprob: -14.377066612243652
    7. '   ' → logprob: -15.252066612243652
    8. ' lef' → logprob: -15.627066612243652
    9. '[left' → logprob: -15.627066612243652
    10. 'lef' → logprob: -15.752066612243652

Token 296: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.001723488443531096
    2. '_to' → logprob: -6.376723289489746
    3. '_' → logprob: -11.376723289489746
    4. '```' → logprob: -12.376723289489746
    5. ' _' → logprob: -13.126723289489746
    6. '_right' → logprob: -15.251723289489746
    7. '\' → logprob: -15.376723289489746
    8. 'match' → logprob: -15.376723289489746
    9. '_matches' → logprob: -15.626723289489746
    10. '._' → logprob: -15.626723289489746

Token 297: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008929374627768993
    2. ':
' → logprob: -4.758929252624512
    3. ' ==' → logprob: -8.258929252624512
    4. '==' → logprob: -10.258929252624512
    5. ' :' → logprob: -10.883929252624512
    6. ':

' → logprob: -13.883929252624512
    7. ' :
' → logprob: -14.758929252624512
    8. ' and' → logprob: -15.508929252624512
    9. '):' → logprob: -15.883929252624512
    10. ':
' → logprob: -16.133930206298828

Token 298: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00787254050374031
    2. '   ' → logprob: -4.882872581481934
    3. '
' → logprob: -8.882872581481934
    4. ' print' → logprob: -9.132872581481934
    5. '```' → logprob: -12.507872581481934
    6. '\n' → logprob: -12.632872581481934
    7. '	print' → logprob: -12.757872581481934
    8. '``' → logprob: -13.007872581481934
    9. ' ' → logprob: -13.507872581481934
    10. ':
' → logprob: -13.632872581481934

Token 299: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00042567000491544604
    2. ' print' → logprob: -8.125425338745117
    3. '   ' → logprob: -9.000425338745117
    4. '
' → logprob: -13.250425338745117
    5. 'answer' → logprob: -14.125425338745117
    6. 'result' → logprob: -14.250425338745117
    7. '	print' → logprob: -14.500425338745117
    8. ' ' → logprob: -14.875425338745117
    9. 'if' → logprob: -15.250425338745117
    10. 'pr' → logprob: -15.500425338745117

Token 300: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.008692334406077862
    2. '('' → logprob: -5.008692264556885
    3. '"' → logprob: -6.508692264556885
    4. '(' → logprob: -8.258692741394043
    5. '("?' → logprob: -9.258692741394043
    6. '(":' → logprob: -10.758692741394043
    7. '(B' → logprob: -11.633692741394043
    8. '("'' → logprob: -11.883692741394043
    9. '"B' → logprob: -11.883692741394043
    10. ' ("' → logprob: -12.008692741394043

Token 301: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.002902824431657791
    2. ''U' → logprob: -6.377902984619141
    3. 'true' → logprob: -8.00290298461914
    4. '{' → logprob: -9.00290298461914
    5. 'True' → logprob: -9.50290298461914
    6. 'ambi' → logprob: -9.75290298461914
    7. '{"' → logprob: -9.87790298461914
    8. 'undefined' → logprob: -9.87790298461914
    9. 'amb' → logprob: -9.87790298461914
    10. ' U' → logprob: -10.12790298461914

Token 302: '')
' (ID: 2515)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0551159530878067
    2. 'N' → logprob: -4.430116176605225
    3. 'nd' → logprob: -4.680116176605225
    4. 'U' → logprob: -5.430116176605225
    5. 'a' → logprob: -5.680116176605225
    6. '')' → logprob: -5.680116176605225
    7. ''' → logprob: -6.680116176605225
    8. '```' → logprob: -6.680116176605225
    9. 'm' → logprob: -6.805116176605225
    10. 'F' → logprob: -6.930116176605225

Token 303: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.11833386868238449
    2. 'lse' → logprob: -2.3683338165283203
    3. 'else' → logprob: -4.24333381652832
    4. 'n' → logprob: -6.86833381652832
    5. 'ls' → logprob: -7.24333381652832
    6. 'se' → logprob: -7.61833381652832
    7. 's' → logprob: -8.49333381652832
    8. 'ser' → logprob: -8.61833381652832
    9. 'ns' → logprob: -8.61833381652832
    10. 'l' → logprob: -8.74333381652832

Token 304: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.06200678274035454
    2. 'mul' → logprob: -2.812006711959839
    3. ' left' → logprob: -10.312006950378418
    4. 'left' → logprob: -13.062006950378418
    5. 'multip' → logprob: -13.687006950378418
    6. ' multip' → logprob: -14.187006950378418
    7. ' ' → logprob: -14.437006950378418
    8. ' not' → logprob: -15.312006950378418
    9. ' mull' → logprob: -15.312006950378418
    10. '.mul' → logprob: -15.437006950378418

Token 305: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -5.550411151489243e-05
    2. 'atch' → logprob: -10.000055313110352
    3. 'if' → logprob: -12.625055313110352
    4. 'elif' → logprob: -12.750055313110352
    5. 'match' → logprob: -13.375055313110352
    6. '_left' → logprob: -14.250055313110352
    7. 'left' → logprob: -14.875055313110352
    8. '_' → logprob: -15.500055313110352
    9. '_right' → logprob: -15.750055313110352
    10. 'Match' → logprob: -16.25005531311035

Token 306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004179217794444412
    2. ' :' → logprob: -8.125417709350586
    3. '==' → logprob: -9.625417709350586
    4. ':
' → logprob: -10.125417709350586
    5. ' ==' → logprob: -11.625417709350586
    6. 'elif' → logprob: -13.250417709350586
    7. ' and' → logprob: -13.500417709350586
    8. 'and' → logprob: -13.625417709350586
    9. 'else' → logprob: -14.875417709350586
    10. '>' → logprob: -14.875417709350586

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005437708459794521
    2. 'print' → logprob: -5.255437850952148
    3. ' print' → logprob: -8.505437850952148
    4. '	print' → logprob: -14.505437850952148
    5. '       ' → logprob: -14.755437850952148
    6. '```' → logprob: -14.880437850952148
    7. ' ' → logprob: -16.75543785095215
    8. '   ' → logprob: -16.88043785095215
    9. '  ' → logprob: -17.13043785095215
    10. '    ' → logprob: -17.50543785095215

Token 308: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.020681554451584816
    2. ' print' → logprob: -3.895681619644165
    3. '   ' → logprob: -8.895681381225586
    4. '	print' → logprob: -13.395681381225586
    5. '```' → logprob: -14.395681381225586
    6. ' ' → logprob: -15.645681381225586
    7. '.print' → logprob: -16.395681381225586
    8. 'python' → logprob: -16.645681381225586
    9. '  ' → logprob: -16.770681381225586
    10. 'Print' → logprob: -16.895681381225586

Token 309: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0019380348967388272
    2. '(' → logprob: -6.2519378662109375
    3. '("' → logprob: -12.126937866210938
    4. ' ('' → logprob: -13.126937866210938
    5. '('(' → logprob: -14.251937866210938
    6. ''' → logprob: -14.376937866210938
    7. '(('' → logprob: -14.876937866210938
    8. '   ' → logprob: -16.626937866210938
    9. '(U' → logprob: -16.751937866210938
    10. '(`' → logprob: -16.751937866210938

Token 310: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.32032620906829834
    2. ''M' → logprob: -1.3203262090682983
    3. ''' → logprob: -6.195326328277588
    4. ''*' → logprob: -6.820326328277588
    5. ''A' → logprob: -6.820326328277588
    6. 'A' → logprob: -7.320326328277588
    7. '*M' → logprob: -7.945326328277588
    8. '"M' → logprob: -8.19532585144043
    9. ''U' → logprob: -8.19532585144043
    10. 'U' → logprob: -8.32032585144043

Token 311: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.2015068084001541
    2. '')' → logprob: -1.7015068531036377
    3. '')
' → logprob: -9.326506614685059
    4. ''' → logprob: -13.326506614685059
    5. '")
' → logprob: -13.951506614685059
    6. '')

' → logprob: -14.576506614685059
    7. ')' → logprob: -14.951506614685059
    8. ' ')
' → logprob: -15.076506614685059
    9. ')
' → logprob: -15.451506614685059
    10. '")' → logprob: -15.576506614685059

Token 312: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -2.2200749754119897e-06
    2. '#elif' → logprob: -14.500001907348633
    3. ' elif' → logprob: -14.500001907348633
    4. 'el' → logprob: -15.000001907348633
    5. 'elseif' → logprob: -15.000001907348633
    6. 'else' → logprob: -15.250001907348633
    7. 'elsif' → logprob: -16.000001907348633
    8. 'eli' → logprob: -17.000001907348633
    9. 'e' → logprob: -17.500001907348633
    10. '	elif' → logprob: -17.625001907348633

Token 313: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3132629096508026
    2. 'left' → logprob: -1.313262939453125
    3. ' lef' → logprob: -15.063262939453125
    4. '(left' → logprob: -15.313262939453125
    5. '	left' → logprob: -15.438262939453125
    6. ' ' → logprob: -15.813262939453125
    7. '[left' → logprob: -16.063262939453125
    8. '   ' → logprob: -16.438262939453125
    9. '_left' → logprob: -17.313262939453125
    10. ' ' → logprob: -17.938262939453125

Token 314: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -6.957014556974173e-05
    2. '_to' → logprob: -9.625069618225098
    3. '_' → logprob: -13.000069618225098
    4. '```' → logprob: -14.875069618225098
    5. 'match' → logprob: -15.000069618225098
    6. '\' → logprob: -16.00006866455078
    7. '_matching' → logprob: -16.00006866455078
    8. '_matches' → logprob: -17.25006866455078
    9. '_left' → logprob: -17.37506866455078
    10. '_right' → logprob: -17.37506866455078

Token 315: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011065036058425903
    2. ':
' → logprob: -4.5110650062561035
    3. '   ' → logprob: -11.761065483093262
    4. '==' → logprob: -11.761065483093262
    5. ':
' → logprob: -14.761065483093262
    6. ' :' → logprob: -14.886065483093262
    7. 'print' → logprob: -15.636065483093262
    8. '>' → logprob: -15.761065483093262
    9. ':

' → logprob: -15.761065483093262
    10. ' ==' → logprob: -16.136064529418945

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025213228072971106
    2. 'print' → logprob: -6.002521514892578
    3. ' print' → logprob: -10.127521514892578
    4. ' ' → logprob: -13.627521514892578
    5. '       ' → logprob: -13.627521514892578
    6. '	print' → logprob: -14.252521514892578
    7. '  ' → logprob: -14.502521514892578
    8. '```' → logprob: -14.502521514892578
    9. '   ' → logprob: -15.002521514892578
    10. '    ' → logprob: -15.252521514892578

Token 317: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009003812447190285
    2. ' print' → logprob: -7.2509002685546875
    3. '   ' → logprob: -9.125900268554688
    4. 'L' → logprob: -9.500900268554688
    5. 'P' → logprob: -12.750900268554688
    6. ' L' → logprob: -13.875900268554688
    7. '
' → logprob: -14.000900268554688
    8. ' ' → logprob: -14.125900268554688
    9. '```' → logprob: -14.625900268554688
    10. 'R' → logprob: -15.000900268554688

Token 318: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.632542913896032e-05
    2. '(' → logprob: -10.000046730041504
    3. ''' → logprob: -14.750046730041504
    4. '("' → logprob: -14.875046730041504
    5. '(('' → logprob: -16.500045776367188
    6. ''S' → logprob: -17.375045776367188
    7. ''s' → logprob: -17.625045776367188
    8. '(
' → logprob: -17.625045776367188
    9. ' ('' → logprob: -17.750045776367188
    10. ''L' → logprob: -18.125045776367188

Token 319: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.008637851104140282
    2. ''L' → logprob: -4.75863790512085
    3. ''' → logprob: -10.883637428283691
    4. ' L' → logprob: -13.133637428283691
    5. '"L' → logprob: -13.508637428283691
    6. ''S' → logprob: -14.883637428283691
    7. '\'' → logprob: -15.508637428283691
    8. '{'' → logprob: -15.633637428283691
    9. '`' → logprob: -15.883637428283691
    10. ''+' → logprob: -16.508638381958008

Token 320: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.08216310292482376
    2. '')' → logprob: -2.582163095474243
    3. 'else' → logprob: -5.957163333892822
    4. ')
' → logprob: -8.207162857055664
    5. ')' → logprob: -8.332162857055664
    6. ':')
' → logprob: -9.957162857055664
    7. '')
' → logprob: -10.082162857055664
    8. ')')
' → logprob: -10.832162857055664
    9. ' else' → logprob: -11.207162857055664
    10. 'elif' → logprob: -11.457162857055664

Token 321: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.6240566083070007e-06
    2. ' else' → logprob: -13.375001907348633
    3. 'elif' → logprob: -17.125001907348633
    4. 'elser' → logprob: -19.000001907348633
    5. '```' → logprob: -19.250001907348633
    6. '_else' → logprob: -19.750001907348633
    7. '#else' → logprob: -19.875001907348633
    8. 'elses' → logprob: -20.125001907348633
    9. '<|end|>' → logprob: -22.250001907348633
    10. '}else' → logprob: -22.375001907348633

Token 322: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026346050202846527
    2. ':
' → logprob: -3.65134596824646
    3. '   ' → logprob: -10.026346206665039
    4. ':
' → logprob: -14.526346206665039
    5. ':

' → logprob: -15.526346206665039
    6. ' :' → logprob: -15.651346206665039
    7. 'print' → logprob: -16.02634620666504
    8. '():
' → logprob: -16.15134620666504
    9. ' :
' → logprob: -16.15134620666504
    10. '():' → logprob: -16.65134620666504

Token 323: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5257440805435181
    2. '   ' → logprob: -0.9007440805435181
    3. ' print' → logprob: -6.0257439613342285
    4. '	print' → logprob: -9.525744438171387
    5. ' ' → logprob: -10.150744438171387
    6. '```' → logprob: -10.650744438171387
    7. 'C' → logprob: -11.025744438171387
    8. '       ' → logprob: -11.775744438171387
    9. 'D' → logprob: -11.775744438171387
    10. 'A' → logprob: -12.025744438171387

Token 324: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001334559783572331
    2. '   ' → logprob: -9.500133514404297
    3. ' print' → logprob: -9.750133514404297
    4. '	print' → logprob: -15.625133514404297
    5. ' ' → logprob: -17.500133514404297
    6. '```' → logprob: -17.500133514404297
    7. '  ' → logprob: -17.750133514404297
    8. '    ' → logprob: -19.125133514404297
    9. 'printf' → logprob: -19.125133514404297
    10. 'pass' → logprob: -19.500133514404297

Token 325: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0035152568016201258
    2. '(' → logprob: -5.753515243530273
    3. '("' → logprob: -8.128515243530273
    4. '('(' → logprob: -10.128515243530273
    5. '()' → logprob: -14.628515243530273
    6. '('?' → logprob: -14.628515243530273
    7. ' ('' → logprob: -15.003515243530273
    8. '("("' → logprob: -15.628515243530273
    9. '('_' → logprob: -15.753515243530273
    10. '(('' → logprob: -15.753515243530273

Token 326: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00178429891820997
    2. ''I' → logprob: -6.501784324645996
    3. ''' → logprob: -8.626784324645996
    4. '"I' → logprob: -10.751784324645996
    5. '0' → logprob: -11.251784324645996
    6. ' I' → logprob: -11.501784324645996
    7. ''N' → logprob: -11.501784324645996
    8. '')' → logprob: -11.501784324645996
    9. 'U' → logprob: -12.251784324645996
    10. 'W' → logprob: -12.626784324645996

Token 327: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.001936485292389989
    2. ')' → logprob: -6.251936435699463
    3. '")' → logprob: -11.876936912536621
    4. '')
' → logprob: -14.376936912536621
    5. 'I' → logprob: -16.126935958862305
    6. ''' → logprob: -16.626935958862305
    7. ' ')' → logprob: -17.251935958862305
    8. '}')' → logprob: -17.251935958862305
    9. '’)' → logprob: -17.876935958862305
    10. ''))' → logprob: -18.001935958862305


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 325
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 179
Tokens correctement prédits (top 10): 287
Précision stricte (1ère position): 50.15%
Précision adaptée (1ère position): 55.08%
Précision (top 10): 88.31%
================================================================================
