================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
blocks=[tuple(sorted(map(int,input().split()))) for _ in range(n)]
blocks.sort(key=lambda x:(x[0],x[1]))
dp=[0]*n
for i in range(n):
    dp[i]=blocks[i][1]
    for j in range(i):
        if blocks[j][0]<blocks[i][0] and blocks[j][1]<blocks[i][1]:
            dp[i]=max(dp[i],dp[j]+blocks[i][1])
print(max(dp))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3987312316894531
    2. '(' → logprob: -1.1487312316894531
    3. '()' → logprob: -5.398731231689453
    4. '())' → logprob: -5.648731231689453
    5. '```' → logprob: -6.523731231689453
    6. '(
' → logprob: -7.648731231689453
    7. '<|end|>' → logprob: -7.898731231689453
    8. '")' → logprob: -8.273731231689453
    9. '`)' → logprob: -8.898731231689453
    10. '[' → logprob: -9.148731231689453

Token 4: 'blocks' (ID: 44754)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5291787385940552
    2. '+' → logprob: -1.5291787385940552
    3. '#' → logprob: -2.0291786193847656
    4. ')' → logprob: -2.1541786193847656
    5. ' ' → logprob: -2.4041786193847656
    6. ''' → logprob: -2.7791786193847656
    7. 'i' → logprob: -2.9041786193847656
    8. 's' → logprob: -3.9041786193847656
    9. 'a' → logprob: -4.404178619384766
    10. '\n' → logprob: -4.529178619384766

Token 5: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03575386852025986
    2. '=' → logprob: -3.7857539653778076
    3. '_' → logprob: -5.6607537269592285
    4. ''' → logprob: -5.9107537269592285
    5. '.' → logprob: -5.9107537269592285
    6. ' =' → logprob: -6.2857537269592285
    7. '[:]' → logprob: -7.4107537269592285
    8. '[]' → logprob: -8.285754203796387
    9. '[
' → logprob: -8.910754203796387
    10. '"' → logprob: -8.910754203796387

Token 6: 'tuple' (ID: 52834)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0790308713912964
    2. '0' → logprob: -1.2040308713912964
    3. '[]' → logprob: -1.2040308713912964
    4. 'int' → logprob: -4.579030990600586
    5. '{' → logprob: -4.704030990600586
    6. '(' → logprob: -4.704030990600586
    7. '[' → logprob: -4.704030990600586
    8. 'list' → logprob: -4.829030990600586
    9. '(int' → logprob: -5.579030990600586
    10. '()]' → logprob: -5.704030990600586

Token 7: '(sorted' (ID: 92488)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6841589212417603
    2. '(' → logprob: -0.8091589212417603
    3. '(int' → logprob: -3.6841588020324707
    4. '((' → logprob: -4.434158802032471
    5. '([' → logprob: -5.184158802032471
    6. '(list' → logprob: -5.809158802032471
    7. '(range' → logprob: -6.059158802032471
    8. '(user' → logprob: -7.809158802032471
    9. '(
' → logprob: -8.434159278869629
    10. '(x' → logprob: -8.559159278869629

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019111462170258164
    2. '(' → logprob: -6.626911163330078
    3. '(str' → logprob: -7.626911163330078
    4. '(input' → logprob: -10.501911163330078
    5. '<int' → logprob: -10.876911163330078
    6. '(list' → logprob: -11.376911163330078
    7. '(lambda' → logprob: -11.501911163330078
    8. '[int' → logprob: -11.751911163330078
    9. '(eval' → logprob: -12.251911163330078
    10. '=int' → logprob: -12.251911163330078

Token 10: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003138497471809387
    2. '(' → logprob: -6.003138542175293
    3. ',input' → logprob: -8.003138542175293
    4. 'input' → logprob: -8.753138542175293
    5. '=input' → logprob: -10.503138542175293
    6. '(user' → logprob: -10.753138542175293
    7. ')' → logprob: -11.003138542175293
    8. '(range' → logprob: -11.378138542175293
    9. '))' → logprob: -11.503138542175293
    10. '[input' → logprob: -11.878138542175293

Token 11: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.465036105713807e-06
    2. '()' → logprob: -12.250007629394531
    3. '()))' → logprob: -13.625007629394531
    4. '())))' → logprob: -14.000007629394531
    5. ' ().' → logprob: -14.875007629394531
    6. '(' → logprob: -16.50000762939453
    7. '.split' → logprob: -16.75000762939453
    8. '()));' → logprob: -17.87500762939453
    9. ')))' → logprob: -18.12500762939453
    10. '()
' → logprob: -18.12500762939453

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.5491004129871726e-05
    2. 'strip' → logprob: -10.250045776367188
    3. 'rstrip' → logprob: -11.875045776367188
    4. ' split' → logprob: -13.500045776367188
    5. '(split' → logprob: -13.625045776367188
    6. 'read' → logprob: -14.750045776367188
    7. 's' → logprob: -17.500045776367188
    8. 'spl' → logprob: -17.750045776367188
    9. 'plit' → logprob: -18.125045776367188
    10. '.split' → logprob: -18.500045776367188

Token 13: '())))' (ID: 168342)
  Prédit: '())))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.459492951631546
    2. '()))' → logprob: -1.0844929218292236
    3. '()' → logprob: -4.209493160247803
    4. '())' → logprob: -4.459493160247803
    5. '(' → logprob: -6.209493160247803
    6. ')))' → logprob: -6.834493160247803
    7. '())))
' → logprob: -7.584493160247803
    8. '('' → logprob: -8.834492683410645
    9. '()),' → logprob: -10.209492683410645
    10. '))' → logprob: -10.709492683410645

Token 14: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04361962527036667
    2. ')]' → logprob: -3.2936196327209473
    3. ']' → logprob: -6.168619632720947
    4. '])' → logprob: -6.293619632720947
    5. ')])' → logprob: -6.793619632720947
    6. '`)' → logprob: -8.418619155883789
    7. '])]' → logprob: -9.668619155883789
    8. ')
' → logprob: -9.793619155883789
    9. '))' → logprob: -9.793619155883789
    10. '`]' → logprob: -11.043619155883789

Token 15: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.18765318393707275
    2. '_' → logprob: -1.9376531839370728
    3. ' _' → logprob: -3.687653064727783
    4. '_range' → logprob: -6.812653064727783
    5. ' ' → logprob: -7.312653064727783
    6. 'range' → logprob: -9.312653541564941
    7. ' in' → logprob: -9.562653541564941
    8. ' i' → logprob: -9.812653541564941
    9. ' xrange' → logprob: -11.062653541564941
    10. '	range' → logprob: -11.937653541564941

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07138442248106003
    2. 'in' → logprob: -2.6963844299316406
    3. ' ' → logprob: -7.446384429931641
    4. 'n' → logprob: -8.07138442993164
    5. 'import' → logprob: -8.69638442993164
    6. '<|end|>' → logprob: -9.19638442993164
    7. '	in' → logprob: -9.57138442993164
    8. 'i' → logprob: -9.57138442993164
    9. 'I' → logprob: -10.82138442993164
    10. 's' → logprob: -11.19638442993164

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033760786755010486
    2. ' range' → logprob: -8.000337600708008
    3. '[' → logprob: -13.750337600708008
    4. '(range' → logprob: -15.125337600708008
    5. 'rang' → logprob: -15.125337600708008
    6. 'ran' → logprob: -15.875337600708008
    7. 'r' → logprob: -15.875337600708008
    8. '	range' → logprob: -16.000337600708008
    9. 'ra' → logprob: -17.000337600708008
    10. 'n' → logprob: -17.250337600708008

Token 18: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1602991670370102
    2. '(' → logprob: -1.9102991819381714
    3. '(len' → logprob: -9.535299301147461
    4. 'n' → logprob: -14.035299301147461
    5. ' (' → logprob: -14.035299301147461
    6. '(N' → logprob: -15.410299301147461
    7. '(
' → logprob: -15.410299301147461
    8. '(num' → logprob: -16.03529930114746
    9. '((' → logprob: -16.16029930114746
    10. ')' → logprob: -16.53529930114746

Token 19: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004666577442549169
    2. ')' → logprob: -8.125466346740723
    3. ')])' → logprob: -8.875466346740723
    4. '])]' → logprob: -11.250466346740723
    5. '))' → logprob: -12.125466346740723
    6. '')]' → logprob: -12.625466346740723
    7. ']' → logprob: -12.750466346740723
    8. '])' → logprob: -13.125466346740723
    9. ' )' → logprob: -13.750466346740723
    10. ')],' → logprob: -14.500466346740723

Token 20: 'blocks' (ID: 44754)
  Prédit: 'blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.2495475560426712
    2. '
' → logprob: -1.8745476007461548
    3. ')' → logprob: -4.499547481536865
    4. 'counts' → logprob: -4.624547481536865
    5. '```' → logprob: -4.999547481536865
    6. '\n' → logprob: -5.124547481536865
    7. '#' → logprob: -5.374547481536865
    8. 'b' → logprob: -5.624547481536865
    9. 'sorted' → logprob: -5.874547481536865
    10. 's' → logprob: -5.999547481536865

Token 21: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: '(key' (ID: 8932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07307520508766174
    2. '()' → logprob: -2.698075294494629
    3. '((' → logprob: -5.948075294494629
    4. '(()' → logprob: -8.073075294494629
    5. '(
' → logprob: -9.448075294494629
    6. '("("' → logprob: -11.198075294494629
    7. '.' → logprob: -11.448075294494629
    8. '([' → logprob: -11.448075294494629
    9. '(`' → logprob: -11.573075294494629
    10. '().' → logprob: -11.698075294494629

Token 23: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0012158327735960484
    2. '=' → logprob: -6.751215934753418
    3. '=len' → logprob: -10.001215934753418
    4. '=int' → logprob: -16.2512149810791
    5. '=str' → logprob: -17.1262149810791
    6. '=sum' → logprob: -17.2512149810791
    7. '=l' → logprob: -17.8762149810791
    8. '=item' → logprob: -18.1262149810791
    9. '=_' → logprob: -18.2512149810791
    10. '=

' → logprob: -18.7512149810791

Token 24: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1009606271982193
    2. 'x' → logprob: -2.4759607315063477
    3. ' b' → logprob: -4.600960731506348
    4. 'b' → logprob: -6.975960731506348
    5. ' block' → logprob: -7.600960731506348
    6. ' t' → logprob: -8.725960731506348
    7. ' a' → logprob: -9.100960731506348
    8. ' s' → logprob: -9.850960731506348
    9. 'block' → logprob: -10.475960731506348
    10. 't' → logprob: -10.850960731506348

Token 25: ':(' (ID: 7990)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005355312954634428
    2. ':x' → logprob: -5.255355358123779
    3. ' :' → logprob: -9.380354881286621
    4. ':(' → logprob: -10.380354881286621
    5. ':i' → logprob: -13.755354881286621
    6. ':[' → logprob: -13.880354881286621
    7. ':index' → logprob: -14.505354881286621
    8. ':
' → logprob: -14.505354881286621
    9. ':`' → logprob: -14.630354881286621
    10. 'x' → logprob: -15.255354881286621

Token 26: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06098703667521477
    2. '-x' → logprob: -3.3109869956970215
    3. ' x' → logprob: -4.0609869956970215
    4. ' -' → logprob: -5.8109869956970215
    5. '-' → logprob: -6.6859869956970215
    6. 'min' → logprob: -7.6859869956970215
    7. '-min' → logprob: -8.18598747253418
    8. '(x' → logprob: -8.68598747253418
    9. ' min' → logprob: -9.31098747253418
    10. 'max' → logprob: -9.68598747253418

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001617035741219297
    2. '))' → logprob: -8.875162124633789
    3. ',' → logprob: -11.875162124633789
    4. '[::-' → logprob: -11.875162124633789
    5. '[]' → logprob: -13.625162124633789
    6. '[:' → logprob: -13.750162124633789
    7. ' ))' → logprob: -14.000162124633789
    8. ',[' → logprob: -14.000162124633789
    9. '[
' → logprob: -14.125162124633789
    10. '[-' → logprob: -14.250162124633789

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011173609644174576
    2. '1' → logprob: -4.511173725128174
    3. ' ' → logprob: -9.136173248291016
    4. '-' → logprob: -11.386173248291016
    5. '::-' → logprob: -12.886173248291016
    6. '
' → logprob: -14.073673248291016
    7. '   ' → logprob: -14.448673248291016
    8. '])' → logprob: -14.511173248291016
    9. ' -' → logprob: -15.323673248291016
    10. ']' → logprob: -15.386173248291016

Token 29: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004193913657218218
    2. ',x' → logprob: -5.5041937828063965
    3. ' ,' → logprob: -9.504194259643555
    4. ',
' → logprob: -11.379194259643555
    5. ',len' → logprob: -12.004194259643555
    6. ',n' → logprob: -12.129194259643555
    7. '))' → logprob: -13.129194259643555
    8. ' ' → logprob: -13.254194259643555
    9. ',size' → logprob: -13.254194259643555
    10. ',length' → logprob: -13.754194259643555

Token 30: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009798115119338036
    2. ' x' → logprob: -4.634798049926758
    3. '-x' → logprob: -10.384798049926758
    4. '-' → logprob: -12.009798049926758
    5. ' -' → logprob: -12.634798049926758
    6. ' ' → logprob: -14.634798049926758
    7. ')x' → logprob: -14.884798049926758
    8. '   ' → logprob: -15.009798049926758
    9. '	x' → logprob: -15.634798049926758
    10. '+x' → logprob: -16.009798049926758

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.165027217415627e-05
    2. '1' → logprob: -11.000021934509277
    3. '[
' → logprob: -12.750021934509277
    4. ',' → logprob: -14.000021934509277
    5. '])' → logprob: -15.375021934509277
    6. ' [' → logprob: -15.625021934509277
    7. '-' → logprob: -15.875021934509277
    8. '][' → logprob: -16.12502098083496
    9. ' ' → logprob: -16.25002098083496
    10. ')' → logprob: -16.25002098083496

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. '0' → logprob: -11.875011444091797
    3. '-' → logprob: -13.625011444091797
    4. ' ' → logprob: -14.000011444091797
    5. '```' → logprob: -14.625011444091797
    6. '   ' → logprob: -14.750011444091797
    7. ']' → logprob: -15.062511444091797
    8. '[' → logprob: -15.125011444091797
    9. '])' → logprob: -15.250011444091797
    10. '
' → logprob: -15.437511444091797

Token 33: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009261795319616795
    2. ')' → logprob: -5.009261608123779
    3. ')))' → logprob: -6.009261608123779
    4. ']))' → logprob: -10.259262084960938
    5. ' ))' → logprob: -11.384262084960938
    6. '),' → logprob: -11.509262084960938
    7. ')])' → logprob: -11.509262084960938
    8. ')]' → logprob: -12.009262084960938
    9. '[' → logprob: -12.384262084960938
    10. '}))' → logprob: -12.759262084960938

Token 34: 'dp' (ID: 19037)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36181652545928955
    2. '
' → logprob: -2.73681640625
    3. 'for' → logprob: -2.98681640625
    4. 'd' → logprob: -3.48681640625
    5. 'b' → logprob: -3.61181640625
    6. '#' → logprob: -4.11181640625
    7. 'r' → logprob: -4.23681640625
    8. 'm' → logprob: -4.23681640625
    9. 'n' → logprob: -4.73681640625
    10. 'a' → logprob: -4.86181640625

Token 35: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3499162495136261
    2. ' =' → logprob: -1.4749162197113037
    3. '[' → logprob: -2.8499162197113037
    4. '=[' → logprob: -5.224916458129883
    5. '=[]' → logprob: -5.974916458129883
    6. ' =[' → logprob: -8.724916458129883
    7. ' ' → logprob: -8.849916458129883
    8. '_' → logprob: -9.599916458129883
    9. '[:]' → logprob: -9.849916458129883
    10. '[i' → logprob: -9.974916458129883

Token 36: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005771008436568081
    2. '0' → logprob: -7.500576972961426
    3. ' ' → logprob: -11.750576972961426
    4. '[' → logprob: -12.000576972961426
    5. 'blocks' → logprob: -12.375576972961426
    6. 'b' → logprob: -13.250576972961426
    7. 'block' → logprob: -13.750576972961426
    8. '-' → logprob: -14.375576972961426
    9. 'x' → logprob: -14.625576972961426
    10. '(' → logprob: -14.750576972961426

Token 37: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.4987581670284271
    2. ']' → logprob: -0.9987581968307495
    3. ']*(' → logprob: -3.74875807762146
    4. ']+' → logprob: -7.623758316040039
    5. ',' → logprob: -8.248758316040039
    6. ' for' → logprob: -10.248758316040039
    7. ' ]' → logprob: -10.873758316040039
    8. 'for' → logprob: -11.123758316040039
    9. ')]' → logprob: -12.623758316040039
    10. '*' → logprob: -13.373758316040039

Token 38: 'n' (ID: 77)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1440836489200592
    2. '\n' → logprob: -2.3940837383270264
    3. 'for' → logprob: -3.8940837383270264
    4. 'dp' → logprob: -4.769083499908447
    5. '\' → logprob: -5.144083499908447
    6. '
' → logprob: -6.144083499908447
    7. ' for' → logprob: -6.394083499908447
    8. '  
' → logprob: -6.644083499908447
    9. ' 
' → logprob: -6.644083499908447
    10. '' → logprob: -7.644083499908447

Token 40: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22024136781692505
    2. '\n' → logprob: -2.0952413082122803
    3. 'dp' → logprob: -2.7202413082122803
    4. ' for' → logprob: -5.345241546630859
    5. '
' → logprob: -5.720241546630859
    6. '\' → logprob: -8.47024154663086
    7. '0' → logprob: -8.84524154663086
    8. 'n' → logprob: -9.34524154663086
    9. '```' → logprob: -9.97024154663086
    10. '1' → logprob: -10.09524154663086

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006717743817716837
    2. 'i' → logprob: -5.006717681884766
    3. '	i' → logprob: -13.506717681884766
    4. ' ' → logprob: -13.881717681884766
    5. '_i' → logprob: -17.381717681884766
    6. ' ' → logprob: -18.006717681884766
    7. '  ' → logprob: -18.881717681884766
    8. '   ' → logprob: -19.006717681884766
    9. '_' → logprob: -19.256717681884766
    10. '`' → logprob: -19.756717681884766

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0704394057393074
    2. 'in' → logprob: -2.695439338684082
    3. ' ' → logprob: -8.195439338684082
    4. '	in' → logprob: -8.570439338684082
    5. 'n' → logprob: -10.820439338684082
    6. '  ' → logprob: -11.945439338684082
    7. '<|end|>' → logprob: -12.820439338684082
    8. ')' → logprob: -13.570439338684082
    9. ' i' → logprob: -13.570439338684082
    10. ' n' → logprob: -14.757939338684082

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038042064756155014
    2. ' range' → logprob: -3.2880420684814453
    3. '(range' → logprob: -15.163042068481445
    4. '	range' → logprob: -15.413042068481445
    5. 'ange' → logprob: -16.538042068481445
    6. ' ' → logprob: -17.413042068481445
    7. ' xrange' → logprob: -18.413042068481445
    8. '_range' → logprob: -18.788042068481445
    9. '.range' → logprob: -19.663042068481445
    10. '0' → logprob: -19.913042068481445

Token 44: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018188457936048508
    2. '(' → logprob: -4.0181884765625
    3. 'n' → logprob: -10.8931884765625
    4. ' n' → logprob: -11.2681884765625
    5. ' (' → logprob: -12.3931884765625
    6. '(i' → logprob: -13.0181884765625
    7. '(len' → logprob: -14.8931884765625
    8. '1' → logprob: -15.8931884765625
    9. '(
' → logprob: -16.0181884765625
    10. ' ' → logprob: -16.6431884765625

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06275437772274017
    2. ')' → logprob: -2.8127543926239014
    3. '):
' → logprob: -7.687754154205322
    4. ':' → logprob: -8.18775463104248
    5. '+' → logprob: -10.68775463104248
    6. ' ):' → logprob: -11.31275463104248
    7. ':)' → logprob: -11.68775463104248
    8. ']:' → logprob: -14.31275463104248
    9. ' )' → logprob: -14.43775463104248
    10. ' ' → logprob: -14.43775463104248

Token 46: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5051727890968323
    2. '   ' → logprob: -1.5051727294921875
    3. 'dp' → logprob: -1.7551727294921875
    4. '	dp' → logprob: -6.8801727294921875
    5. ' for' → logprob: -8.380172729492188
    6. '(dp' → logprob: -8.630172729492188
    7. '_dp' → logprob: -9.005172729492188
    8. ' ' → logprob: -10.380172729492188
    9. '```' → logprob: -10.630172729492188
    10. 'for' → logprob: -10.755172729492188

Token 47: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.005294477101415396
    2. ' dp' → logprob: -5.505294322967529
    3. '   ' → logprob: -7.255294322967529
    4. 'max' → logprob: -8.005294799804688
    5. 'for' → logprob: -8.880294799804688
    6. '1' → logprob: -11.255294799804688
    7. ' for' → logprob: -11.755294799804688
    8. '_dp' → logprob: -12.880294799804688
    9. '0' → logprob: -13.005294799804688
    10. ' max' → logprob: -13.130294799804688

Token 48: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0031804447062313557
    2. '[' → logprob: -5.753180503845215
    3. '\[' → logprob: -14.128180503845215
    4. '[int' → logprob: -14.253180503845215
    5. '[I' → logprob: -14.753180503845215
    6. '```' → logprob: -15.378180503845215
    7. '=[' → logprob: -16.6281795501709
    8. '=' → logprob: -16.6281795501709
    9. 'i' → logprob: -16.6281795501709
    10. '[j' → logprob: -16.8781795501709

Token 49: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.21550136804580688
    2. ']' → logprob: -1.715501308441162
    3. '=' → logprob: -4.340501308441162
    4. ')=' → logprob: -7.590501308441162
    5. ']+=' → logprob: -8.21550178527832
    6. ')' → logprob: -9.71550178527832
    7. ' ]' → logprob: -10.59050178527832
    8. ']=(' → logprob: -10.59050178527832
    9. ']={' → logprob: -11.09050178527832
    10. ']='' → logprob: -11.21550178527832

Token 50: 'blocks' (ID: 44754)
  Prédit: 'blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.0898779109120369
    2. '1' → logprob: -2.4648778438568115
    3. 'max' → logprob: -7.339878082275391
    4. ' blocks' → logprob: -8.58987808227539
    5. ' ' → logprob: -9.83987808227539
    6. '   ' → logprob: -10.71487808227539
    7. 'block' → logprob: -11.96487808227539
    8. 'b' → logprob: -12.58987808227539
    9. '0' → logprob: -12.96487808227539
    10. '2' → logprob: -13.08987808227539

Token 51: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.873571692267433e-05
    2. '[' → logprob: -9.625068664550781
    3. '```' → logprob: -14.500068664550781
    4. 'i' → logprob: -14.875068664550781
    5. ' [' → logprob: -15.125068664550781
    6. '[I' → logprob: -15.250068664550781
    7. '[max' → logprob: -15.500068664550781
    8. '\[' → logprob: -15.625068664550781
    9. '[j' → logprob: -16.00006866455078
    10. '[:' → logprob: -16.37506866455078

Token 52: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10143616050481796
    2. '[' → logprob: -2.351436138153076
    3. ')[' → logprob: -8.101436614990234
    4. ' ][' → logprob: -8.726436614990234
    5. '"][' → logprob: -9.226436614990234
    6. ''][' → logprob: -9.476436614990234
    7. ']' → logprob: -9.601436614990234
    8. '-' → logprob: -9.601436614990234
    9. '1' → logprob: -9.601436614990234
    10. '][-' → logprob: -9.851436614990234

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016053372994065285
    2. '0' → logprob: -4.141053199768066
    3. '2' → logprob: -11.391053199768066
    4. '-' → logprob: -12.891053199768066
    5. ' ' → logprob: -12.891053199768066
    6. '   ' → logprob: -13.828553199768066
    7. '::-' → logprob: -15.328553199768066
    8. '```' → logprob: -15.328553199768066
    9. '[' → logprob: -15.703553199768066
    10. '

' → logprob: -15.766053199768066

Token 54: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1224694475531578
    2. '<|end|>' → logprob: -2.622469425201416
    3. ']' → logprob: -3.247469425201416
    4. '<|end|>' → logprob: -6.747469425201416
    5. '])' → logprob: -7.497469425201416
    6. '+' → logprob: -7.747469425201416
    7. ')]' → logprob: -8.122469902038574
    8. '```' → logprob: -8.247469902038574
    9. ']+' → logprob: -8.497469902038574
    10. ' )' → logprob: -8.497469902038574

Token 55: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24373917281627655
    2. ' for' → logprob: -2.243739128112793
    3. 'for' → logprob: -3.118739128112793
    4. ' 
' → logprob: -3.618739128112793
    5. '<|end|>' → logprob: -3.868739128112793
    6. '\n' → logprob: -4.743739128112793
    7. '  
' → logprob: -5.493739128112793
    8. '    
' → logprob: -6.118739128112793
    9. '   ' → logprob: -6.243739128112793
    10. '	for' → logprob: -7.993739128112793

Token 56: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2921592891216278
    2. ' for' → logprob: -1.4171593189239502
    3. '
' → logprob: -5.042159080505371
    4. '\n' → logprob: -6.167159080505371
    5. ' 
' → logprob: -6.417159080505371
    6. '	for' → logprob: -8.792159080505371
    7. '    
' → logprob: -8.792159080505371
    8. '   ' → logprob: -8.917159080505371
    9. '  
' → logprob: -9.042159080505371
    10. '<|end|>' → logprob: -9.042159080505371

Token 57: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.08938140422105789
    2. 'j' → logprob: -2.464381456375122
    3. ' ' → logprob: -8.464381217956543
    4. ' range' → logprob: -8.714381217956543
    5. 'range' → logprob: -10.464381217956543
    6. '	j' → logprob: -10.589381217956543
    7. '_j' → logprob: -11.714381217956543
    8. '   ' → logprob: -13.339381217956543
    9. '  ' → logprob: -14.464381217956543
    10. '    ' → logprob: -14.464381217956543

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1603032350540161
    2. 'in' → logprob: -1.9103032350540161
    3. 'range' → logprob: -9.660303115844727
    4. ' ' → logprob: -11.785303115844727
    5. ' range' → logprob: -13.160303115844727
    6. '	in' → logprob: -13.285303115844727
    7. '   ' → logprob: -14.285303115844727
    8. '  ' → logprob: -14.785303115844727
    9. 'space' → logprob: -15.160303115844727
    10. 'i' → logprob: -15.160303115844727

Token 59: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02975129522383213
    2. 'range' → logprob: -3.5297513008117676
    3. '(range' → logprob: -14.90475082397461
    4. ' xrange' → logprob: -15.40475082397461
    5. '	range' → logprob: -15.65475082397461
    6. ' ' → logprob: -17.40475082397461
    7. '_range' → logprob: -19.15475082397461
    8. 'ange' → logprob: -19.52975082397461
    9. ' i' → logprob: -20.15475082397461
    10. '0' → logprob: -20.52975082397461

Token 60: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005191420670598745
    2. '(' → logprob: -5.755191326141357
    3. ' i' → logprob: -6.505191326141357
    4. ' (' → logprob: -7.630191326141357
    5. 'i' → logprob: -10.505191802978516
    6. ' ' → logprob: -13.755191802978516
    7. '	i' → logprob: -14.130191802978516
    8. '   ' → logprob: -14.630191802978516
    9. ')' → logprob: -15.630191802978516
    10. '(j' → logprob: -15.755191802978516

Token 61: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2763047516345978
    2. '):' → logprob: -1.5263047218322754
    3. '):
' → logprob: -4.526304721832275
    4. ' )' → logprob: -4.651304721832275
    5. ' ):' → logprob: -5.901304721832275
    6. ' ):
' → logprob: -8.401305198669434
    7. ')+' → logprob: -9.401305198669434
    8. ')>' → logprob: -9.401305198669434
    9. '<|end|>' → logprob: -9.526305198669434
    10. '),' → logprob: -9.776305198669434

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2413618117570877
    2. ' if' → logprob: -2.6163618564605713
    3. '    ' → logprob: -2.7413618564605713
    4. '   ' → logprob: -3.1163618564605713
    5. ' ' → logprob: -4.491361618041992
    6. '<|end|>' → logprob: -4.616361618041992
    7. ' and' → logprob: -4.866361618041992
    8. ' 
' → logprob: -7.616361618041992
    9. '        ' → logprob: -7.741361618041992
    10. '           ' → logprob: -8.116361618041992

Token 63: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04290144145488739
    2. '       ' → logprob: -3.5429015159606934
    3. '<|end|>' → logprob: -5.042901515960693
    4. 'if' (adapté à ' if') → logprob: -6.292901515960693
    5. '           ' → logprob: -6.417901515960693
    6. '   ' → logprob: -6.667901515960693
    7. ' ' → logprob: -7.542901515960693
    8. ' 
' → logprob: -7.917901515960693
    9. '    ' → logprob: -8.292901039123535
    10. ' and' → logprob: -8.417901039123535

Token 64: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.043012890964746475
    2. 'blocks' → logprob: -3.168012857437134
    3. '.blocks' → logprob: -11.668012619018555
    4. '   ' → logprob: -12.668012619018555
    5. ' block' → logprob: -14.418012619018555
    6. '(block' → logprob: -14.668012619018555
    7. '_blocks' → logprob: -14.668012619018555
    8. 'block' → logprob: -15.668012619018555
    9. ' dp' → logprob: -16.168012619018555
    10. ' bloques' → logprob: -16.418012619018555

Token 65: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.023341331630945206
    2. '[i' → logprob: -3.773341417312622
    3. '[' → logprob: -9.898341178894043
    4. '][' → logprob: -10.773341178894043
    5. 'j' → logprob: -11.773341178894043
    6. '```' → logprob: -12.023341178894043
    7. ')[' → logprob: -12.523341178894043
    8. 'i' → logprob: -14.398341178894043
    9. '   ' → logprob: -14.523341178894043
    10. ' [' → logprob: -14.523341178894043

Token 66: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31388455629348755
    2. '][' → logprob: -1.3138844966888428
    3. '1' → logprob: -9.063884735107422
    4. '```' → logprob: -9.313884735107422
    5. '0' → logprob: -9.688884735107422
    6. ')[' → logprob: -9.813884735107422
    7. ' ][' → logprob: -9.813884735107422
    8. ' [' → logprob: -10.063884735107422
    9. '}[' → logprob: -10.563884735107422
    10. '``' → logprob: -10.688884735107422

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759440064430237
    2. '1' → logprob: -0.8259440064430237
    3. ' ' → logprob: -13.138443946838379
    4. '   ' → logprob: -13.950943946838379
    5. '
' → logprob: -15.388443946838379
    6. '

' → logprob: -15.638443946838379
    7. '[' → logprob: -15.638443946838379
    8. '-' → logprob: -15.700943946838379
    9. '
' → logprob: -15.825943946838379
    10. '' → logprob: -15.950943946838379

Token 68: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.023673538118600845
    2. ' <' → logprob: -4.2736735343933105
    3. '<=' → logprob: -4.7736735343933105
    4. ' <=' → logprob: -7.0236735343933105
    5. ' blocks' → logprob: -10.023674011230469
    6. '<n' → logprob: -11.148674011230469
    7. '[' → logprob: -11.648674011230469
    8. ')' → logprob: -11.648674011230469
    9. '<int' → logprob: -12.148674011230469
    10. ')<' → logprob: -12.273674011230469

Token 69: 'blocks' (ID: 44754)
  Prédit: 'blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.00011641718447208405
    2. ' blocks' → logprob: -9.125116348266602
    3. 'block' → logprob: -12.000116348266602
    4. 'blo' → logprob: -14.625116348266602
    5. '.blocks' → logprob: -15.250116348266602
    6. 'bl' → logprob: -15.625116348266602
    7. 'bloc' → logprob: -15.625116348266602
    8. '   ' → logprob: -15.875116348266602
    9. 'b' → logprob: -17.3751163482666
    10. '_blocks' → logprob: -17.6251163482666

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.703443770878948e-06
    2. '[j' → logprob: -11.875007629394531
    3. '[' → logprob: -15.125007629394531
    4. 'i' → logprob: -15.625007629394531
    5. '```' → logprob: -16.25000762939453
    6. '][' → logprob: -16.50000762939453
    7. '   ' → logprob: -18.37500762939453
    8. '[
' → logprob: -19.25000762939453
    9. ' [' → logprob: -19.37500762939453
    10. '1' → logprob: -19.62500762939453

Token 71: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08109883964061737
    2. '[' → logprob: -2.581098794937134
    3. '0' → logprob: -6.331099033355713
    4. '>[' → logprob: -9.081098556518555
    5. ']' → logprob: -9.331098556518555
    6. '   ' → logprob: -10.206098556518555
    7. ''][' → logprob: -10.206098556518555
    8. '"][' → logprob: -10.331098556518555
    9. ' ][' → logprob: -10.581098556518555
    10. '}[' → logprob: -10.706098556518555

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002981624274980277
    2. '1' → logprob: -8.125298500061035
    3. ' ' → logprob: -13.687798500061035
    4. '   ' → logprob: -15.500298500061035
    5. '[' → logprob: -15.812798500061035
    6. '۰' → logprob: -15.937798500061035
    7. ']' → logprob: -16.75029754638672
    8. ')' → logprob: -17.00029754638672
    9. '-' → logprob: -17.50029754638672
    10. '```' → logprob: -17.50029754638672

Token 73: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030350739136338234
    2. 'and' → logprob: -3.905350685119629
    3. ')' → logprob: -4.655350685119629
    4. ']' → logprob: -9.155350685119629
    5. '):' → logprob: -9.655350685119629
    6. ' )' → logprob: -9.780350685119629
    7. ' ' → logprob: -12.280350685119629
    8. '<|end|>' → logprob: -12.280350685119629
    9. '       ' → logprob: -12.905350685119629
    10. '   ' → logprob: -13.155350685119629

Token 74: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16022878885269165
    2. 'and' → logprob: -1.9102287292480469
    3. ' ' → logprob: -12.660228729248047
    4. '    ' → logprob: -14.535228729248047
    5. '	and' → logprob: -15.160228729248047
    6. '   ' → logprob: -15.535228729248047
    7. '        ' → logprob: -15.910228729248047
    8. ' ' → logprob: -16.785228729248047
    9. '<|end|>' → logprob: -16.785228729248047
    10. '  ' → logprob: -17.035228729248047

Token 75: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.1602308303117752
    2. ' blocks' → logprob: -1.9102308750152588
    3. 'block' → logprob: -12.41023063659668
    4. '.blocks' → logprob: -13.28523063659668
    5. '_blocks' → logprob: -14.91023063659668
    6. '   ' → logprob: -15.53523063659668
    7. ' ' → logprob: -16.03523063659668
    8. '(block' → logprob: -16.16023063659668
    9. ' block' → logprob: -16.41023063659668
    10. 'Blocks' → logprob: -17.28523063659668

Token 76: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2471589798224159e-05
    2. '[' → logprob: -12.125012397766113
    3. '][' → logprob: -12.375012397766113
    4. '[i' → logprob: -13.375012397766113
    5. '```' → logprob: -14.875012397766113
    6. ')[' → logprob: -15.500012397766113
    7. 'j' → logprob: -15.625012397766113
    8. ' [' → logprob: -15.875012397766113
    9. ']' → logprob: -16.50001335144043
    10. '>[' → logprob: -16.87501335144043

Token 77: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003051504259929061
    2. '[' → logprob: -5.878051280975342
    3. ')[' → logprob: -9.1280517578125
    4. ']' → logprob: -9.8780517578125
    5. ' ][' → logprob: -10.6280517578125
    6. '"][' → logprob: -10.8780517578125
    7. '>[' → logprob: -11.3780517578125
    8. ')][' → logprob: -11.5030517578125
    9. ''][' → logprob: -11.8780517578125
    10. ']][' → logprob: -12.2530517578125

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.500005722045898
    3. ' ' → logprob: -14.250005722045898
    4. '   ' → logprob: -15.000005722045898
    5. '```' → logprob: -15.250005722045898
    6. ']' → logprob: -16.1250057220459
    7. '۱' → logprob: -16.7500057220459
    8. '][' → logprob: -17.2500057220459
    9. '``' → logprob: -17.5625057220459
    10. '`' → logprob: -17.8750057220459

Token 79: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07084140181541443
    2. ' <' → logprob: -2.6958413124084473
    3. ')<' → logprob: -7.820841312408447
    4. ']<' → logprob: -8.570841789245605
    5. '<|end|>' → logprob: -8.945841789245605
    6. '[' → logprob: -10.070841789245605
    7. '()<' → logprob: -10.445841789245605
    8. ')' → logprob: -10.570841789245605
    9. '}<' → logprob: -10.820841789245605
    10. '<Block' → logprob: -11.195841789245605

Token 80: 'blocks' (ID: 44754)
  Prédit: 'blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.002476135268807411
    2. ' blocks' → logprob: -6.002476215362549
    3. '.blocks' → logprob: -15.00247573852539
    4. 'block' → logprob: -15.37747573852539
    5. '_blocks' → logprob: -17.75247573852539
    6. 'blo' → logprob: -20.37747573852539
    7. 'Blocks' → logprob: -20.37747573852539
    8. '(block' → logprob: -20.37747573852539
    9. 'b' → logprob: -20.62747573852539
    10. '   ' → logprob: -21.00247573852539

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.000000953674316
    3. '[j' → logprob: -16.000001907348633
    4. '```' → logprob: -16.750001907348633
    5. 'i' → logprob: -18.750001907348633
    6. '][' → logprob: -19.125001907348633
    7. '[
' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.625001907348633
    9. ' [' → logprob: -20.125001907348633
    10. '``' → logprob: -20.250001907348633

Token 82: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0037332146894186735
    2. '[' → logprob: -5.628733158111572
    3. ']' → logprob: -10.37873363494873
    4. '>[' → logprob: -10.62873363494873
    5. '"][' → logprob: -10.75373363494873
    6. '}[' → logprob: -11.25373363494873
    7. ' ][' → logprob: -11.37873363494873
    8. '   ' → logprob: -11.50373363494873
    9. ')[' → logprob: -11.62873363494873
    10. ''][' → logprob: -11.75373363494873

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '0' → logprob: -13.875001907348633
    3. ' ' → logprob: -15.500001907348633
    4. '```' → logprob: -15.750001907348633
    5. '   ' → logprob: -15.875001907348633
    6. '[' → logprob: -16.250001907348633
    7. ']' → logprob: -16.500001907348633
    8. '۱' → logprob: -17.375001907348633
    9. '１' → logprob: -17.625001907348633
    10. '' → logprob: -18.062501907348633

Token 84: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28999045491218567
    2. '):' → logprob: -1.4149904251098633
    3. '):
' → logprob: -4.789990425109863
    4. ':
' → logprob: -7.914990425109863
    5. ')' → logprob: -9.914990425109863
    6. '       ' → logprob: -10.789990425109863
    7. '   ' → logprob: -11.164990425109863
    8. '):
' → logprob: -11.414990425109863
    9. ']:' → logprob: -12.164990425109863
    10. ' and' → logprob: -12.539990425109863

Token 85: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024554820731282234
    2. ' dp' → logprob: -4.27455472946167
    3. 'dp' → logprob: -5.02455472946167
    4. '               ' → logprob: -6.77455472946167
    5. '	dp' → logprob: -7.39955472946167
    6. ' and' → logprob: -7.77455472946167
    7. ':' → logprob: -7.89955472946167
    8. '       ' → logprob: -8.149555206298828
    9. ':
' → logprob: -8.399555206298828
    10. '(dp' → logprob: -8.524555206298828

Token 86: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.100313201546669
    2. 'dp' (adapté à ' dp') → logprob: -2.350313186645508
    3. '           ' → logprob: -9.600313186645508
    4. '	dp' → logprob: -10.475313186645508
    5. '               ' → logprob: -11.850313186645508
    6. '(dp' → logprob: -13.600313186645508
    7. '_dp' → logprob: -13.975313186645508
    8. '.dp' → logprob: -14.100313186645508
    9. '   ' → logprob: -15.225313186645508
    10. '```' → logprob: -15.850313186645508

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5332478142227046e-05
    2. '[' → logprob: -11.125015258789062
    3. '[j' → logprob: -15.000015258789062
    4. '[I' → logprob: -16.125015258789062
    5. 'i' → logprob: -17.250015258789062
    6. '[max' → logprob: -18.250015258789062
    7. '\[' → logprob: -18.375015258789062
    8. '```' → logprob: -18.500015258789062
    9. '[n' → logprob: -19.875015258789062
    10. '[index' → logprob: -20.000015258789062

Token 88: ']=' (ID: 9539)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.306760805164231e-05
    2. ' max' → logprob: -11.25001335144043
    3. '	max' → logprob: -20.37501335144043
    4. '   ' → logprob: -21.75001335144043
    5. '[max' → logprob: -22.12501335144043
    6. '(max' → logprob: -22.37501335144043
    7. '_max' → logprob: -23.00001335144043
    8. '=max' → logprob: -23.25001335144043
    9. ',max' → logprob: -24.12501335144043
    10. 'min' → logprob: -24.37501335144043

Token 90: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. 'dp' → logprob: -17.37502670288086
    4. '	dp' → logprob: -18.12502670288086
    5. ' (' → logprob: -19.62502670288086
    6. '(d' → logprob: -20.12502670288086
    7. '(
' → logprob: -20.12502670288086
    8. ' dp' → logprob: -20.50002670288086
    9. '(

' → logprob: -20.87502670288086
    10. '(df' → logprob: -22.25002670288086

Token 91: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2520813047885895
    2. '[i' → logprob: -1.502081274986267
    3. '[' → logprob: -8.877080917358398
    4. ')' → logprob: -12.377080917358398
    5. ')[' → logprob: -13.127080917358398
    6. '```' → logprob: -13.127080917358398
    7. '][' → logprob: -14.002080917358398
    8. '   ' → logprob: -14.627080917358398
    9. '])' → logprob: -14.627080917358398
    10. 'dp' → logprob: -14.752080917358398

Token 92: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040421701851300895
    2. ' ,' → logprob: -7.875404357910156
    3. 'dp' → logprob: -10.750404357910156
    4. ' dp' → logprob: -13.625404357910156
    5. '),' → logprob: -15.250404357910156
    6. '],' → logprob: -15.500404357910156
    7. '	dp' → logprob: -15.500404357910156
    8. '   ' → logprob: -16.000404357910156
    9. ',d' → logprob: -16.125404357910156
    10. '，' → logprob: -16.250404357910156

Token 93: 'dp' (ID: 19037)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.339278580620885e-06
    2. 'j' → logprob: -13.000001907348633
    3. '[i' → logprob: -16.750001907348633
    4. '[' → logprob: -18.625001907348633
    5. '	j' → logprob: -18.625001907348633
    6. '```' → logprob: -19.250001907348633
    7. '[js' → logprob: -20.000001907348633
    8. '][' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.375001907348633
    10. '[x' → logprob: -20.625001907348633

Token 95: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.011156057938933372
    2. ']' → logprob: -4.51115608215332
    3. ' ]' → logprob: -10.01115608215332
    4. ')+' → logprob: -10.51115608215332
    5. '+' → logprob: -10.76115608215332
    6. '[' → logprob: -11.88615608215332
    7. '[i' → logprob: -13.38615608215332
    8. '   ' → logprob: -13.63615608215332
    9. '+]' → logprob: -14.01115608215332
    10. ')' → logprob: -14.13615608215332

Token 96: 'blocks' (ID: 44754)
  Prédit: 'blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.00018899753922596574
    2. ' blocks' → logprob: -8.625188827514648
    3. '1' → logprob: -11.625188827514648
    4. 'block' → logprob: -14.625188827514648
    5. '   ' → logprob: -17.00018882751465
    6. '.blocks' → logprob: -17.00018882751465
    7. 'b' → logprob: -18.25018882751465
    8. ' ' → logprob: -18.75018882751465
    9. '_blocks' → logprob: -19.37518882751465
    10. '-block' → logprob: -19.87518882751465

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.12500286102295
    3. '[j' → logprob: -13.87500286102295
    4. '][' → logprob: -16.500003814697266
    5. '```' → logprob: -16.625003814697266
    6. ')[' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.375003814697266
    8. 'i' → logprob: -17.500003814697266
    9. ' [' → logprob: -18.000003814697266
    10. ' ' → logprob: -19.250003814697266

Token 98: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03338297829031944
    2. '[' → logprob: -3.5333828926086426
    3. ')[' → logprob: -5.783382892608643
    4. '1' → logprob: -8.5333833694458
    5. ']' → logprob: -9.2833833694458
    6. '}[' → logprob: -9.9083833694458
    7. '"][' → logprob: -9.9083833694458
    8. '   ' → logprob: -10.1583833694458
    9. ' ][' → logprob: -10.2833833694458
    10. '>[' → logprob: -10.5333833694458

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.875003814697266
    4. '[' → logprob: -16.125003814697266
    5. '0' → logprob: -16.875003814697266
    6. '
' → logprob: -17.375003814697266
    7. '  ' → logprob: -17.687503814697266
    8. ']' → logprob: -17.750003814697266
    9. '```' → logprob: -17.812503814697266
    10. '][' → logprob: -18.250003814697266

Token 100: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ')
' → logprob: -11.250014305114746
    3. ' )' → logprob: -14.125014305114746
    4. '))' → logprob: -15.125014305114746
    5. '）' → logprob: -17.00001335144043
    6. '`)' → logprob: -17.87501335144043
    7. ')`' → logprob: -18.00001335144043
    8. ')

' → logprob: -18.25001335144043
    9. ')return' → logprob: -18.37501335144043
    10. '')' → logprob: -18.62501335144043

Token 101: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00042268994729965925
    2. '
' → logprob: -8.000422477722168
    3. 'max' → logprob: -9.500422477722168
    4. 'pr' → logprob: -13.375422477722168
    5. '  
' → logprob: -13.375422477722168
    6. 'answer' → logprob: -13.375422477722168
    7. ' print' → logprob: -13.500422477722168
    8. '    
' → logprob: -13.875422477722168
    9. 'm' → logprob: -14.000422477722168
    10. '```' → logprob: -14.000422477722168

Token 102: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.25204575061798096
    2. '(' → logprob: -1.502045750617981
    3. '(sum' → logprob: -9.127045631408691
    4. '(
' → logprob: -12.377045631408691
    5. '(dp' → logprob: -13.127045631408691
    6. '(

' → logprob: -14.127045631408691
    7. 'max' → logprob: -14.377045631408691
    8. ' (' → logprob: -15.877045631408691
    9. '()' → logprob: -16.002046585083008
    10. '(min' → logprob: -16.127046585083008

Token 103: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -7.896309739408025e-07
    2. 'dp' → logprob: -14.375000953674316
    3. '(' → logprob: -16.25
    4. ')' → logprob: -17.625
    5. ' dp' → logprob: -18.875
    6. ' (' → logprob: -19.0
    7. '	dp' → logprob: -20.0
    8. '_dp' → logprob: -21.0
    9. '(d' → logprob: -21.125
    10. '(dx' → logprob: -21.25

Token 104: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03804286941885948
    2. ')' → logprob: -3.2880427837371826
    3. '))
' → logprob: -14.538043022155762
    4. ')))' → logprob: -15.288043022155762
    5. ' ))' → logprob: -15.663043022155762
    6. '])' → logprob: -16.163042068481445
    7. ')
' → logprob: -16.163042068481445
    8. '})' → logprob: -16.413042068481445
    9. ' )' → logprob: -16.538042068481445
    10. ')}' → logprob: -16.663042068481445


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 82
Précision stricte (1ère position): 61.76%
Précision adaptée (1ère position): 63.73%
Précision (top 10): 80.39%
================================================================================
