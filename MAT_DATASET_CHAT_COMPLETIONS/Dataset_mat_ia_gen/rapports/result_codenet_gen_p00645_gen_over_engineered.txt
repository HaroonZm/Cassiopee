================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class EnemyGrid:
    def __init__(self, n, grid):
        self.n = n
        self.grid = grid  # grid as list of list of int, 1 or 0

    def clone(self):
        return EnemyGrid(self.n, [row[:] for row in self.grid])

    def all_defeated(self):
        return all(enemy == 0 for row in self.grid for enemy in row)

    def toggle_rectangle(self, top, left, bottom, right):
        for r in range(top, bottom + 1):
            for c in range(left, right + 1):
                self.grid[r][c] ^= 1

    def to_tuple(self):
        return tuple(tuple(row) for row in self.grid)


class Rectangle:
    def __init__(self, top, left, bottom, right):
        self.top = top
        self.left = left
        self.bottom = bottom
        self.right = right

    def __repr__(self):
        return f"Rect(({self.top},{self.left})-({self.bottom},{self.right}))"


class SpellCaster:
    def __init__(self, enemy_grid):
        self.original_grid = enemy_grid
        self.n = enemy_grid.n
        self.visited = {}
        self.queue = []
        self.parent_map = {}
        self.action_map = {}

    def generate_all_rectangles(self):
        rects = []
        n = self.n
        for top in range(n):
            for left in range(n):
                for bottom in range(top, n):
                    for right in range(left, n):
                        rects.append(Rectangle(top, left, bottom, right))
        return rects

    def solve(self):
        start_state = self.original_grid.to_tuple()
        if all(enemy == 0 for row in start_state for enemy in row):
            return ""  # Already all defeated
        from collections import deque
        queue = deque()
        queue.append(start_state)
        self.visited[start_state] = True
        self.parent_map[start_state] = None
        self.action_map[start_state] = None
        rectangles = self.generate_all_rectangles()
        while queue:
            current = queue.popleft()
            current_grid = EnemyGrid(self.n, [list(row) for row in current])
            if current_grid.all_defeated():
                # reconstruct path
                path = []
                state = current
                while self.parent_map[state] is not None:
                    path.append(self.action_map[state])
                    state = self.parent_map[state]
                path.reverse()
                return "myon" * len(path)
            # try all moves:
            for rect in rectangles:
                next_grid = EnemyGrid(self.n, [list(row) for row in current])
                next_grid.toggle_rectangle(rect.top, rect.left, rect.bottom, rect.right)
                next_state = next_grid.to_tuple()
                if next_state not in self.visited:
                    self.visited[next_state] = True
                    self.parent_map[next_state] = current
                    self.action_map[next_state] = rect
                    queue.append(next_state)
        return ""  # no solution (should not happen)

class InputParser:
    def __init__(self):
        self.datasets = []

    def parse(self):
        import sys
        lines = sys.stdin.read().splitlines()
        idx = 0
        while idx < len(lines):
            n = int(lines[idx])
            idx += 1
            if n == 0:
                break
            grid = []
            for _ in range(n):
                row = list(map(int, lines[idx].split()))
                idx += 1
                grid.append(row)
            self.datasets.append(EnemyGrid(n, grid))


class OutputHandler:
    def __init__(self, results):
        self.results = results

    def print_results(self):
        for res in self.results:
            print(res)


class MysteriousOnslaughtSolver:
    def __init__(self):
        self.input_parser = InputParser()
        self.results = []

    def run(self):
        self.input_parser.parse()
        for enemy_grid in self.input_parser.datasets:
            spell_caster = SpellCaster(enemy_grid)
            shortest_spell = spell_caster.solve()
            self.results.append(shortest_spell)
        output_handler = OutputHandler(self.results)
        output_handler.print_results()


if __name__ == "__main__":
    MysteriousOnslaughtSolver().run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Enemy' (ID: 64111)
  → Token d'amorce (pas de prédiction)

Token 2: 'Grid' (ID: 5351)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39474278688430786
    2. '{' → logprob: -1.894742727279663
    3. '.' → logprob: -2.144742727279663
    4. '(' → logprob: -2.894742727279663
    5. ' {' → logprob: -5.894742965698242
    6. '[' → logprob: -8.519742965698242
    7. '```' → logprob: -8.644742965698242
    8. ' :' → logprob: -9.644742965698242
    9. '(:' → logprob: -10.519742965698242
    10. ' .' → logprob: -10.769742965698242

Token 4: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2144109159708023
    2. ':' → logprob: -1.7144109010696411
    3. '.' → logprob: -5.214410781860352
    4. '```' → logprob: -5.964410781860352
    5. '   ' → logprob: -6.214410781860352
    6. '(
' → logprob: -6.339410781860352
    7. ':
' → logprob: -7.839410781860352
    8. '[' → logprob: -8.964410781860352
    9. '():' → logprob: -8.964410781860352
    10. ''' → logprob: -8.964410781860352

Token 5: ' def' (ID: 1056)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9850096702575684
    2. '   ' → logprob: -1.2350096702575684
    3. ':' → logprob: -1.9850096702575684
    4. '(' → logprob: -2.7350096702575684
    5. '\' → logprob: -3.2350096702575684
    6. '<|end|>' → logprob: -3.9850096702575684
    7. ' ' → logprob: -4.110009670257568
    8. '\n' → logprob: -4.485009670257568
    9. '.' → logprob: -4.735009670257568
    10. '[' → logprob: -5.235009670257568

Token 6: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0254337787628174
    2. ' ' → logprob: -1.1504337787628174
    3. ' __' → logprob: -1.1504337787628174
    4. '_' → logprob: -6.525433540344238
    5. ' ' → logprob: -6.525433540344238
    6. ' init' → logprob: -7.275433540344238
    7. ' create' → logprob: -7.525433540344238
    8. '  ' → logprob: -7.775433540344238
    9. ' add' → logprob: -7.900433540344238
    10. ' advance' → logprob: -8.025433540344238

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.098748053773306e-05
    2. ' init' → logprob: -9.75006103515625
    3. '_init' → logprob: -13.37506103515625
    4. 'ini' → logprob: -14.75006103515625
    5. '	init' → logprob: -15.50006103515625
    6. 'i' → logprob: -15.75006103515625
    7. '_' → logprob: -16.00006103515625
    8. 'in' → logprob: -16.12506103515625
    9. 'inite' → logprob: -17.12506103515625
    10. '   ' → logprob: -17.25006103515625

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08980513364076614
    2. '__' → logprob: -2.8398051261901855
    3. '(' → logprob: -3.7148051261901855
    4. '__(
' → logprob: -6.3398051261901855
    5. '(self' → logprob: -6.9648051261901855
    6. '__((' → logprob: -8.964805603027344
    7. '_' → logprob: -9.714805603027344
    8. '```' → logprob: -9.964805603027344
    9. ' (' → logprob: -10.339805603027344
    10. '_(' → logprob: -10.589805603027344

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0022124657407402992
    2. ' self' → logprob: -6.1272125244140625
    3. ')' → logprob: -10.877212524414062
    4. '(self' → logprob: -12.002212524414062
    5. 'enemy' → logprob: -14.502212524414062
    6. ' )' → logprob: -15.002212524414062
    7. '   ' → logprob: -15.127212524414062
    8. '       ' → logprob: -15.377212524414062
    9. ',self' → logprob: -15.752212524414062
    10. '_self' → logprob: -15.752212524414062

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19364015758037567
    2. ')' → logprob: -2.5686402320861816
    3. 'self' → logprob: -3.0686402320861816
    4. '_' → logprob: -3.9436402320861816
    5. '):' → logprob: -4.443640232086182
    6. '(' → logprob: -5.068640232086182
    7. '.' → logprob: -5.443640232086182
    8. '<|end|>' → logprob: -6.068640232086182
    9. '(self' → logprob: -6.818640232086182
    10. ' ,' → logprob: -7.068640232086182

Token 11: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25861358642578125
    2. 'self' → logprob: -1.5086135864257812
    3. ' grid' → logprob: -5.883613586425781
    4. ' player' → logprob: -6.633613586425781
    5. ' rows' → logprob: -6.758613586425781
    6. ' size' → logprob: -8.258613586425781
    7. ')' → logprob: -8.383613586425781
    8. ' enemy' → logprob: -8.383613586425781
    9. 'grid' → logprob: -8.508613586425781
    10. 'rows' → logprob: -9.008613586425781

Token 12: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5206254720687866
    2. ')' → logprob: -1.8956254720687866
    3. '_' → logprob: -2.270625591278076
    4. ',' → logprob: -2.395625591278076
    5. '_cells' → logprob: -3.395625591278076
    6. 'umber' → logprob: -5.395625591278076
    7. ' ):' → logprob: -6.020625591278076
    8. '_rows' → logprob: -6.020625591278076
    9. ' )' → logprob: -6.145625591278076
    10. ':' → logprob: -6.145625591278076

Token 13: ' grid' (ID: 10586)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3048238456249237
    2. 'm' → logprob: -1.679823875427246
    3. ' grid' → logprob: -3.804823875427246
    4. ' size' → logprob: -4.054823875427246
    5. ' n' → logprob: -4.929823875427246
    6. ')' → logprob: -5.679823875427246
    7. 'size' → logprob: -5.804823875427246
    8. ' k' → logprob: -5.929823875427246
    9. ' y' → logprob: -6.054823875427246
    10. ' width' → logprob: -6.304823875427246

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016544676618650556
    2. ':' → logprob: -7.251654624938965
    3. ')' → logprob: -7.376654624938965
    4. ',' → logprob: -8.876654624938965
    5. '):
' → logprob: -9.251654624938965
    6. '_size' → logprob: -10.001654624938965
    7. '   ' → logprob: -11.751654624938965
    8. '=' → logprob: -12.251654624938965
    9. '_cells' → logprob: -12.251654624938965
    10. ' ):' → logprob: -12.501654624938965

Token 15: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2468421906232834
    2. '       ' → logprob: -1.7468421459197998
    3. '   ' → logprob: -3.9968421459198
    4. '.' → logprob: -4.121842384338379
    5. '    ' → logprob: -6.371842384338379
    6. '):' → logprob: -6.621842384338379
    7. '(' → logprob: -6.871842384338379
    8. '```' → logprob: -7.121842384338379
    9. ')' → logprob: -7.246842384338379
    10. '():' → logprob: -7.496842384338379

Token 16: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2083919495344162
    2. ' self' → logprob: -2.2083919048309326
    3. '       ' → logprob: -2.9583919048309326
    4. ' ' → logprob: -4.958392143249512
    5. ' ' → logprob: -5.458392143249512
    6. '\' → logprob: -5.583392143249512
    7. '   ' → logprob: -5.833392143249512
    8. '        ' → logprob: -5.958392143249512
    9. '```' → logprob: -6.208392143249512
    10. '\n' → logprob: -7.083392143249512

Token 17: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09154145419597626
    2. '.grid' → logprob: -2.8415415287017822
    3. '.n' → logprob: -3.5915415287017822
    4. ' .' → logprob: -7.341541290283203
    5. '.enemy' → logprob: -8.341541290283203
    6. '.is' → logprob: -9.466541290283203
    7. '.size' → logprob: -9.966541290283203
    8. '   ' → logprob: -10.341541290283203
    9. '.data' → logprob: -10.341541290283203
    10. '.space' → logprob: -10.591541290283203

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4069483280181885
    2. '=' → logprob: -1.1569483280181885
    3. ' ' → logprob: -5.031948089599609
    4. '<|end|>' → logprob: -5.281948089599609
    5. '.' → logprob: -5.781948089599609
    6. ')' → logprob: -6.531948089599609
    7. ',' → logprob: -6.906948089599609
    8. '_' → logprob: -7.281948089599609
    9. '   ' → logprob: -8.15694808959961
    10. '  ' → logprob: -8.15694808959961

Token 19: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.018150178715586662
    2. 'n' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.393150329589844
    4. ' ' → logprob: -16.893150329589844
    5. '	n' → logprob: -18.018150329589844
    6. '_n' → logprob: -18.393150329589844
    7. ' grid' → logprob: -18.768150329589844
    8. ')n' → logprob: -18.768150329589844
    9. 'int' → logprob: -19.518150329589844
    10. 'grid' → logprob: -20.018150329589844

Token 20: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6786938905715942
    2. '<|end|>' → logprob: -0.8036938905715942
    3. '\' → logprob: -4.553693771362305
    4. '```' → logprob: -4.928693771362305
    5. '        
' → logprob: -5.053693771362305
    6. '
' → logprob: -5.553693771362305
    7. '<|end|>' → logprob: -5.678693771362305
    8. ' ' → logprob: -6.053693771362305
    9. '        ' → logprob: -6.053693771362305
    10. 'newline' → logprob: -6.428693771362305

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12142487615346909
    2. '<|end|>' → logprob: -2.621424913406372
    3. '```' → logprob: -4.371424674987793
    4. '.' → logprob: -4.371424674987793
    5. '_' → logprob: -5.996424674987793
    6. ')' → logprob: -5.996424674987793
    7. ' ' → logprob: -6.246424674987793
    8. '   ' → logprob: -6.371424674987793
    9. '        ' → logprob: -6.496424674987793
    10. '<|end|>' → logprob: -6.621424674987793

Token 22: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008839575573801994
    2. 'self' (adapté à ' self') → logprob: -4.7588396072387695
    3. ' self' → logprob: -9.13383960723877
    4. '   ' → logprob: -9.88383960723877
    5. '        ' → logprob: -10.75883960723877
    6. '```' → logprob: -11.25883960723877
    7. 'grid' → logprob: -12.25883960723877
    8. '      ' → logprob: -12.25883960723877
    9. '           ' → logprob: -12.75883960723877
    10. '\' → logprob: -12.88383960723877

Token 23: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.20183700323104858
    2. '.' → logprob: -1.7018370628356934
    3. ' .' → logprob: -9.201836585998535
    4. '.n' → logprob: -10.076836585998535
    5. '.enemy' → logprob: -10.326836585998535
    6. '.Grid' → logprob: -10.701836585998535
    7. '.cells' → logprob: -10.701836585998535
    8. '.points' → logprob: -10.951836585998535
    9. '.rows' → logprob: -11.076836585998535
    10. '._' → logprob: -11.076836585998535

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5836001634597778
    2. ' =' → logprob: -0.8336001634597778
    3. '[' → logprob: -4.958600044250488
    4. '   ' → logprob: -8.583600044250488
    5. '.' → logprob: -8.833600044250488
    6. '<|end|>' → logprob: -9.458600044250488
    7. '[:]' → logprob: -10.458600044250488
    8. ' ' → logprob: -10.583600044250488
    9. ')' → logprob: -10.583600044250488
    10. '.setdefault' → logprob: -10.833600044250488

Token 25: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.5761076807975769
    2. ' grid' → logprob: -0.8261076807975769
    3. ' [' → logprob: -9.5761079788208
    4. '[]' → logprob: -10.2011079788208
    5. '[' → logprob: -10.2011079788208
    6. ' []' → logprob: -11.5761079788208
    7. '	grid' → logprob: -12.5761079788208
    8. '(grid' → logprob: -12.9511079788208
    9. ' ' → logprob: -13.3261079788208
    10. '.grid' → logprob: -13.5761079788208

Token 26: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9925907850265503
    2. '\' → logprob: -1.3675907850265503
    3. '.' → logprob: -1.8675907850265503
    4. '\n' → logprob: -2.61759090423584
    5. '
' → logprob: -3.11759090423584
    6. '<|end|>' → logprob: -3.49259090423584
    7. '```' → logprob: -3.74259090423584
    8. '[' → logprob: -4.49259090423584
    9. '    
' → logprob: -4.86759090423584
    10. ''' → logprob: -5.74259090423584

Token 27: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22148318588733673
    2. '.' → logprob: -3.0964832305908203
    3. '\n' → logprob: -3.2214832305908203
    4. '<|end|>' → logprob: -3.5964832305908203
    5. '\' → logprob: -3.8464832305908203
    6. '
' → logprob: -3.9714832305908203
    7. 'def' → logprob: -4.59648323059082
    8. '    
' → logprob: -4.97148323059082
    9. ',' → logprob: -5.34648323059082
    10. ':' → logprob: -5.47148323059082

Token 28: ' grid' (ID: 10586)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.525362491607666
    2. ' []' → logprob: -1.900362491607666
    3. ' [' → logprob: -2.275362491607666
    4. '[' → logprob: -2.400362491607666
    5. ' [['' → logprob: -4.025362491607666
    6. ' [[' → logprob: -4.525362491607666
    7. '[]' → logprob: -4.775362491607666
    8. ' [
' → logprob: -5.650362491607666
    9. ' [][]' → logprob: -6.025362491607666
    10. ' List' → logprob: -6.025362491607666

Token 29: ' as' (ID: 472)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1345299929380417
    2. '<|end|>' → logprob: -3.1345300674438477
    3. '   ' → logprob: -3.8845300674438477
    4. '.' → logprob: -4.009530067443848
    5. '[row' → logprob: -4.884530067443848
    6. ')' → logprob: -5.009530067443848
    7. '<|end|>' → logprob: -5.509530067443848
    8. ' ' → logprob: -5.634530067443848
    9. '\' → logprob: -6.009530067443848
    10. '[cell' → logprob: -6.384530067443848

Token 30: ' list' (ID: 1562)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.037821583449840546
    2. 'a' → logprob: -3.4128215312957764
    3. ' list' → logprob: -5.7878217697143555
    4. ' ' → logprob: -7.6628217697143555
    5. ' List' → logprob: -8.287821769714355
    6. 'list' → logprob: -8.787821769714355
    7. ' [' → logprob: -9.787821769714355
    8. 'List' → logprob: -9.912821769714355
    9. ' an' → logprob: -10.037821769714355
    10. ' lists' → logprob: -10.287821769714355

Token 31: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05929458513855934
    2. '   ' → logprob: -3.4342947006225586
    3. '.' → logprob: -4.184294700622559
    4. '<|end|>' → logprob: -6.059294700622559
    5. ' of' → logprob: -6.434294700622559
    6. '[]' → logprob: -7.309294700622559
    7. '\[' → logprob: -7.434294700622559
    8. '```' → logprob: -7.684294700622559
    9. '[:]' → logprob: -7.684294700622559
    10. ')' → logprob: -7.809294700622559

Token 32: ' list' (ID: 1562)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.16106954216957092
    2. 'lists' → logprob: -2.411069631576538
    3. 'list' → logprob: -3.536069631576538
    4. ' strings' → logprob: -4.286069393157959
    5. ' list' → logprob: -4.911069393157959
    6. 'strings' → logprob: -4.911069393157959
    7. 'str' → logprob: -6.661069393157959
    8. ' str' → logprob: -9.036069869995117
    9. 'rows' → logprob: -11.911069869995117
    10. 'List' → logprob: -12.286069869995117

Token 33: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8624938726425171
    2. 'str' → logprob: -1.612493872642517
    3. ' int' → logprob: -1.737493872642517
    4. ' str' → logprob: -2.7374939918518066
    5. 'ints' → logprob: -3.4874939918518066
    6. '0' → logprob: -3.7374939918518066
    7. ' integers' → logprob: -3.9874939918518066
    8. ' ints' → logprob: -4.737493991851807
    9. ' bool' → logprob: -4.987493991851807
    10. 'strings' → logprob: -5.112493991851807

Token 35: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4822508990764618
    2. '\' → logprob: -2.107250928878784
    3. '<|end|>' → logprob: -2.357250928878784
    4. '\n' → logprob: -3.107250928878784
    5. '
' → logprob: -3.232250928878784
    6. ' ' → logprob: -3.982250928878784
    7. '    ' → logprob: -4.732250690460205
    8. '       ' → logprob: -4.732250690460205
    9. '    
' → logprob: -4.732250690460205
    10. '```' → logprob: -5.232250690460205

Token 36: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7359622716903687
    2. ' ' → logprob: -1.2359622716903687
    3. ')' → logprob: -2.485962390899658
    4. '<|end|>' → logprob: -3.235962390899658
    5. ' )' → logprob: -3.360962390899658
    6. '   ' → logprob: -3.360962390899658
    7. '    ' → logprob: -4.110962390899658
    8. '        ' → logprob: -5.485962390899658
    9. ' 
' → logprob: -5.985962390899658
    10. '  ' → logprob: -6.360962390899658

Token 37: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5818436741828918
    2. '       ' → logprob: -1.581843614578247
    3. ')' → logprob: -2.331843614578247
    4. '   ' → logprob: -2.706843614578247
    5. ' )' → logprob: -3.206843614578247
    6. '    ' → logprob: -4.581843852996826
    7. ' 
' → logprob: -4.956843852996826
    8. '  ' → logprob: -6.081843852996826
    9. ' ' → logprob: -6.456843852996826
    10. '        ' → logprob: -6.831843852996826

Token 38: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759503245353699
    2. '0' → logprob: -0.8259503245353699
    3. 'space' → logprob: -13.200950622558594
    4. ' space' → logprob: -13.450950622558594
    5. '_' → logprob: -13.700950622558594
    6. ' ' → logprob: -13.700950622558594
    7. '<|end|>' → logprob: -13.700950622558594
    8. 's' → logprob: -13.825950622558594
    9. ' spaces' → logprob: -13.950950622558594
    10. '  ' → logprob: -14.950950622558594

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052342405542731285
    2. ' ' → logprob: -5.255234241485596
    3. '1' → logprob: -15.505233764648438
    4. '-' → logprob: -15.505233764648438
    5. '_' → logprob: -17.630233764648438
    6. ' -' → logprob: -18.005233764648438
    7. ')' → logprob: -18.005233764648438
    8. 's' → logprob: -18.505233764648438
    9. ' ' → logprob: -18.567733764648438
    10. '.' → logprob: -18.755233764648438

Token 41: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10779550671577454
    2. '<|end|>' → logprob: -3.232795476913452
    3. ' ' → logprob: -4.232795715332031
    4. '
' → logprob: -4.357795715332031
    5. ')' → logprob: -4.982795715332031
    6. '\n' → logprob: -5.232795715332031
    7. '\' → logprob: -5.357795715332031
    8. '       ' → logprob: -5.607795715332031
    9. ' 
' → logprob: -5.982795715332031
    10. 'n' → logprob: -6.107795715332031

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08196664601564407
    2. '    
' → logprob: -4.081966876983643
    3. ' 
' → logprob: -4.081966876983643
    4. ' ' → logprob: -4.206966876983643
    5. '\' → logprob: -5.081966876983643
    6. '
' → logprob: -5.206966876983643
    7. ' def' → logprob: -5.331966876983643
    8. '  
' → logprob: -6.331966876983643
    9. '\n' → logprob: -6.456966876983643
    10. 'def' → logprob: -6.706966876983643

Token 43: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06504890322685242
    2. ' def' → logprob: -3.190048933029175
    3. 'def' (adapté à ' def') → logprob: -4.190048694610596
    4. '    
' → logprob: -6.315048694610596
    5. ' 
' → logprob: -6.440048694610596
    6. '    ' → logprob: -6.440048694610596
    7. ' ' → logprob: -7.690048694610596
    8. 'd' → logprob: -8.190049171447754
    9. '```' → logprob: -8.190049171447754
    10. '       ' → logprob: -9.440049171447754

Token 44: ' clone' (ID: 28806)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0010380487656220794
    2. ' space' → logprob: -7.751038074493408
    3. '_' → logprob: -8.37603759765625
    4. 'space' → logprob: -9.00103759765625
    5. ' a' → logprob: -10.37603759765625
    6. 'c' → logprob: -10.37603759765625
    7. 'e' → logprob: -10.37603759765625
    8. ' is' → logprob: -10.87603759765625
    9. 's' → logprob: -11.00103759765625
    10. ' ```' → logprob: -11.12603759765625

Token 45: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04776659235358238
    2. '.' → logprob: -3.29776668548584
    3. '(self' → logprob: -5.17276668548584
    4. '_' → logprob: -5.92276668548584
    5. ' (' → logprob: -8.29776668548584
    6. '._' → logprob: -8.42276668548584
    7. ')' → logprob: -8.92276668548584
    8. '_space' → logprob: -9.29776668548584
    9. '<|end|>' → logprob: -9.67276668548584
    10. '(
' → logprob: -9.67276668548584

Token 46: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16939716041088104
    2. '):' → logprob: -2.0443971157073975
    3. ',' → logprob: -3.6693971157073975
    4. ' )' → logprob: -8.294397354125977
    5. '.' → logprob: -8.419397354125977
    6. ').' → logprob: -8.544397354125977
    7. ' ):' → logprob: -10.169397354125977
    8. '):
' → logprob: -10.169397354125977
    9. '.)' → logprob: -10.294397354125977
    10. ' ,' → logprob: -10.544397354125977

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024384045973420143
    2. '
' → logprob: -3.899384021759033
    3. '        
' → logprob: -6.774384021759033
    4. 'return' → logprob: -6.899384021759033
    5. '    
' → logprob: -8.149384498596191
    6. '  
' → logprob: -8.399384498596191
    7. ' return' → logprob: -8.399384498596191
    8. ' 
' → logprob: -8.524384498596191
    9. '<|end|>' → logprob: -8.774384498596191
    10. '\n' → logprob: -9.149384498596191

Token 48: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7085281014442444
    2. 'return' (adapté à ' return') → logprob: -1.5835280418395996
    3. '       ' → logprob: -1.5835280418395996
    4. ' return' → logprob: -2.8335280418395996
    5. 'r' → logprob: -4.7085280418396
    6. ' 
' → logprob: -4.8335280418396
    7. '\' → logprob: -5.0835280418396
    8. '\n' → logprob: -5.0835280418396
    9. '' → logprob: -6.2085280418396
    10. '        
' → logprob: -6.3335280418396

Token 49: ' Enemy' (ID: 64111)
  Prédit: ' Enemy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Enemy' → logprob: -5.8961017202818766e-05
    2. 'Enemy' → logprob: -9.750059127807617
    3. ' ' → logprob: -15.000059127807617
    4. ' ' → logprob: -15.750059127807617
    5. ' self' → logprob: -16.125059127807617
    6. 'self' → logprob: -17.250059127807617
    7. ' En' → logprob: -17.625059127807617
    8. ' enemy' → logprob: -18.000059127807617
    9. ' Energy' → logprob: -19.000059127807617
    10. ' Employee' → logprob: -19.500059127807617

Token 50: 'Grid' (ID: 5351)
  Prédit: 'Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -1.4259644558478612e-05
    2. 'G' → logprob: -11.250014305114746
    3. 'Gr' → logprob: -14.125014305114746
    4. 'grid' → logprob: -15.500014305114746
    5. '<Grid' → logprob: -15.875014305114746
    6. ' Grid' → logprob: -17.25001335144043
    7. '	Grid' → logprob: -17.25001335144043
    8. '(Grid' → logprob: -17.37501335144043
    9. '```' → logprob: -18.25001335144043
    10. 'GRID' → logprob: -18.25001335144043

Token 51: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3876246213912964
    2. '(self' → logprob: -1.1376246213912964
    3. '(
' → logprob: -7.262624740600586
    4. ' (' → logprob: -10.262624740600586
    5. '(s' → logprob: -11.637624740600586
    6. '((' → logprob: -13.137624740600586
    7. '(n' → logprob: -13.262624740600586
    8. '(

' → logprob: -13.262624740600586
    9. '(`' → logprob: -13.637624740600586
    10. '(None' → logprob: -14.512624740600586

Token 52: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0003815756645053625
    2. '.' → logprob: -7.8753814697265625
    3. 'n' → logprob: -13.750381469726562
    4. ' .' → logprob: -15.375381469726562
    5. ',' → logprob: -16.250381469726562
    6. ',n' → logprob: -17.500381469726562
    7. '	n' → logprob: -17.875381469726562
    8. '```' → logprob: -18.125381469726562
    9. '.
' → logprob: -19.000381469726562
    10. '.s' → logprob: -19.000381469726562

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.061676347395405e-05
    2. ' ,' → logprob: -10.25005054473877
    3. ',self' → logprob: -12.00005054473877
    4. ',[' → logprob: -12.25005054473877
    5. ',
' → logprob: -12.62505054473877
    6. '[' → logprob: -15.00005054473877
    7. ',

' → logprob: -15.87505054473877
    8. 'self' → logprob: -16.625051498413086
    9. ' ,[' → logprob: -16.625051498413086
    10. '`,' → logprob: -16.875051498413086

Token 54: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.09135890007019043
    2. '[' → logprob: -2.9663589000701904
    3. '[self' → logprob: -3.3413589000701904
    4. '[s' → logprob: -8.46635913848877
    5. '[list' → logprob: -9.71635913848877
    6. '[cell' → logprob: -10.46635913848877
    7. '[i' → logprob: -10.59135913848877
    8. '[row' → logprob: -10.84135913848877
    9. '[line' → logprob: -11.46635913848877
    10. '[int' → logprob: -11.59135913848877

Token 55: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0003961185284424573
    2. ' row' → logprob: -7.875396251678467
    3. '[row' → logprob: -11.875395774841309
    4. 'r' → logprob: -12.625395774841309
    5. 'list' → logprob: -13.125395774841309
    6. '[' → logprob: -13.125395774841309
    7. '   ' → logprob: -14.250395774841309
    8. '	row' → logprob: -15.000395774841309
    9. ' [' → logprob: -15.500395774841309
    10. 'x' → logprob: -15.625395774841309

Token 56: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.0011711753904819489
    2. '.copy' → logprob: -6.751171112060547
    3. '[' → logprob: -14.376171112060547
    4. '[:' → logprob: -15.001171112060547
    5. '.' → logprob: -19.126171112060547
    6. '.deepcopy' → logprob: -20.126171112060547
    7. '[::-' → logprob: -20.751171112060547
    8. '.Copy' → logprob: -21.001171112060547
    9. '[]' → logprob: -21.376171112060547
    10. '[...]' → logprob: -22.001171112060547

Token 57: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41624021530151367
    2. ']' → logprob: -1.1662402153015137
    3. ' ]' → logprob: -4.916240215301514
    4. 'for' → logprob: -4.916240215301514
    5. '])' → logprob: -5.041240215301514
    6. '       ' → logprob: -5.541240215301514
    7. '<|end|>' → logprob: -6.291240215301514
    8. ')' → logprob: -7.041240215301514
    9. ']()' → logprob: -8.541240692138672
    10. ' ' → logprob: -8.916240692138672

Token 58: ' row' (ID: 5225)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.011132238432765007
    2. 'self' → logprob: -4.51113224029541
    3. ' row' → logprob: -9.76113224029541
    4. ' ' → logprob: -11.63613224029541
    5. '	self' → logprob: -12.13613224029541
    6. '<|end|>' → logprob: -12.26113224029541
    7. ' s' → logprob: -13.26113224029541
    8. '(self' → logprob: -13.51113224029541
    9. 'row' → logprob: -13.88613224029541
    10. ' ' → logprob: -14.01113224029541

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010584142291918397
    2. 'in' → logprob: -6.876058578491211
    3. '<|end|>' → logprob: -11.376058578491211
    4. 'self' → logprob: -11.751058578491211
    5. ' ' → logprob: -12.376058578491211
    6. '<|end|>' → logprob: -13.626058578491211
    7. ' self' → logprob: -15.251058578491211
    8. '	in' → logprob: -16.06355857849121
    9. ' ' → logprob: -16.62605857849121
    10. 's' → logprob: -16.68855857849121

Token 60: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023245826363563538
    2. ' self' → logprob: -3.7732458114624023
    3. '(self' → logprob: -15.523245811462402
    4. '	self' → logprob: -16.77324676513672
    5. '       ' → logprob: -17.27324676513672
    6. ' ' → logprob: -17.89824676513672
    7. '[self' → logprob: -18.27324676513672
    8. '           ' → logprob: -18.52324676513672
    9. '   ' → logprob: -18.64824676513672
    10. 's' → logprob: -19.89824676513672

Token 61: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.00012558852904476225
    2. '.' → logprob: -9.000125885009766
    3. ' .' → logprob: -13.750125885009766
    4. '.g' → logprob: -15.125125885009766
    5. '.gridx' → logprob: -15.250125885009766
    6. '.Grid' → logprob: -16.125125885009766
    7. ':grid' → logprob: -16.500125885009766
    8. '.game' → logprob: -16.875125885009766
    9. 'grid' → logprob: -17.000125885009766
    10. '	grid' → logprob: -17.125125885009766

Token 62: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -7.266944157890975e-05
    2. ']' → logprob: -10.125072479248047
    3. ')' → logprob: -10.750072479248047
    4. ' ])' → logprob: -12.125072479248047
    5. '       ' → logprob: -12.625072479248047
    6. '   ' → logprob: -14.250072479248047
    7. '])
' → logprob: -14.375072479248047
    8. ')])' → logprob: -14.875072479248047
    9. ']))' → logprob: -15.250072479248047
    10. '])]' → logprob: -16.250072479248047

Token 63: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47739261388778687
    2. '   ' → logprob: -1.2273926734924316
    3. '<|end|>' → logprob: -3.2273926734924316
    4. '```' → logprob: -4.727392673492432
    5. '    
' → logprob: -4.727392673492432
    6. '\' → logprob: -5.227392673492432
    7. 'def' → logprob: -5.477392673492432
    8. ' ' → logprob: -5.727392673492432
    9. '\n' → logprob: -5.727392673492432
    10. ' 
' → logprob: -5.852392673492432

Token 64: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029778262600302696
    2. '    
' → logprob: -4.404778480529785
    3. ' ' → logprob: -5.279778480529785
    4. 'def' (adapté à ' def') → logprob: -5.654778480529785
    5. ' 
' → logprob: -5.904778480529785
    6. '
' → logprob: -6.529778480529785
    7. 'd' → logprob: -6.779778480529785
    8. '<|end|>' → logprob: -7.279778480529785
    9. ' def' → logprob: -7.779778480529785
    10. '```' → logprob: -8.029778480529785

Token 65: ' all' (ID: 722)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2101448774337769
    2. ' can' → logprob: -2.3351449966430664
    3. ' count' → logprob: -2.3351449966430664
    4. ' place' → logprob: -2.4601449966430664
    5. ' get' → logprob: -2.7101449966430664
    6. ' def' → logprob: -3.3351449966430664
    7. ' find' → logprob: -3.5851449966430664
    8. ' check' → logprob: -3.7101449966430664
    9. ' clear' → logprob: -3.8351449966430664
    10. ' has' → logprob: -3.9601449966430664

Token 66: '_def' (ID: 26756)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2226664274930954
    2. '_cells' → logprob: -3.0976665019989014
    3. '_positions' → logprob: -3.0976665019989014
    4. '_alive' → logprob: -3.4726665019989014
    5. '_s' → logprob: -4.097666263580322
    6. '_active' → logprob: -4.722666263580322
    7. '_en' → logprob: -4.847666263580322
    8. '_hits' → logprob: -5.097666263580322
    9. '_rows' → logprob: -5.472666263580322
    10. '_dead' → logprob: -5.847666263580322

Token 67: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3923417031764984
    2. 'enders' → logprob: -1.6423417329788208
    3. 'ended' → logprob: -2.7673416137695312
    4. 'ense' → logprob: -3.6423416137695312
    5. 'eat' → logprob: -4.017341613769531
    6. 'end' → logprob: -4.392341613769531
    7. 'ected' → logprob: -5.517341613769531
    8. 'enses' → logprob: -6.517341613769531
    9. '```' → logprob: -6.642341613769531
    10. 'ence' → logprob: -7.267341613769531

Token 68: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.01638917252421379
    2. 'at' → logprob: -4.2663893699646
    3. 'ate' → logprob: -6.2663893699646
    4. 'atable' → logprob: -8.641388893127441
    5. 'a' → logprob: -10.141388893127441
    6. '```' → logprob: -10.391388893127441
    7. 'ats' → logprob: -11.266388893127441
    8. 'ating' → logprob: -12.016388893127441
    9. '``' → logprob: -12.391388893127441
    10. 'atted' → logprob: -12.516388893127441

Token 69: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07903112471103668
    2. '(' → logprob: -2.579031229019165
    3. ' (' → logprob: -9.704030990600586
    4. '(s' → logprob: -10.579030990600586
    5. 'self' → logprob: -11.204030990600586
    6. '   ' → logprob: -11.454030990600586
    7. 's' → logprob: -11.454030990600586
    8. '_' → logprob: -12.204030990600586
    9. ' ' → logprob: -12.454030990600586
    10. '()' → logprob: -13.079030990600586

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005601072683930397
    2. 'self' → logprob: -5.880600929260254
    3. ')' → logprob: -6.505600929260254
    4. '):
' → logprob: -7.380600929260254
    5. '(self' → logprob: -7.755600929260254
    6. ' ):' → logprob: -8.505600929260254
    7. '   ' → logprob: -11.130600929260254
    8. ',' → logprob: -12.255600929260254
    9. ' self' → logprob: -12.255600929260254
    10. '       ' → logprob: -12.505600929260254

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027552980929613113
    2. ':' → logprob: -4.277553081512451
    3. '(self' → logprob: -5.277553081512451
    4. '():' → logprob: -5.652553081512451
    5. '   ' → logprob: -6.152553081512451
    6. '(' → logprob: -6.652553081512451
    7. '    ' → logprob: -8.402552604675293
    8. ':
' → logprob: -8.527552604675293
    9. '()' → logprob: -8.527552604675293
    10. '():
' → logprob: -8.902552604675293

Token 72: ' return' (ID: 622)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1106910705566406
    2. ' all' → logprob: -1.6106910705566406
    3. 'for' → logprob: -1.7356910705566406
    4. 'all' → logprob: -2.2356910705566406
    5. ' return' → logprob: -2.4856910705566406
    6. 'return' (adapté à ' return') → logprob: -2.6106910705566406
    7. '       ' → logprob: -3.4856910705566406
    8. '   ' → logprob: -8.36069107055664
    9. ' ' → logprob: -10.11069107055664
    10. '    ' → logprob: -11.11069107055664

Token 73: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.07000479102134705
    2. 'all' → logprob: -2.69500470161438
    3. ' ' → logprob: -10.5700044631958
    4. ' not' → logprob: -10.5700044631958
    5. '   ' → logprob: -12.0700044631958
    6. ' ' → logprob: -12.6950044631958
    7. ' al' → logprob: -12.9450044631958
    8. '	all' → logprob: -13.3200044631958
    9. ' a' → logprob: -13.8200044631958
    10. '  ' → logprob: -14.3200044631958

Token 74: '(enemy' (ID: 133101)
  Prédit: '(cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cell' → logprob: -0.43133658170700073
    2. '(all' → logprob: -1.1813366413116455
    3. '(' → logprob: -3.3063366413116455
    4. '(
' → logprob: -5.181336402893066
    5. '(enemy' → logprob: -8.431336402893066
    6. '(row' → logprob: -8.431336402893066
    7. 'all' → logprob: -8.681336402893066
    8. '(not' → logprob: -8.806336402893066
    9. 'cell' → logprob: -9.306336402893066
    10. '(

' → logprob: -9.681336402893066

Token 75: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5765821933746338
    2. ' ==' → logprob: -0.8265821933746338
    3. ' ' → logprob: -8.576581954956055
    4. 'for' → logprob: -9.201581954956055
    5. ' for' → logprob: -9.326581954956055
    6. '```' → logprob: -9.826581954956055
    7. 'cell' → logprob: -10.326581954956055
    8. '=' → logprob: -10.701581954956055
    9. '()==' → logprob: -10.826581954956055
    10. 's' → logprob: -11.201581954956055

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17987826466560364
    2. ' ' → logprob: -1.8048782348632812
    3. '1' → logprob: -8.929878234863281
    4. ' ' → logprob: -14.992378234863281
    5. '  ' → logprob: -15.492378234863281
    6. '   ' → logprob: -15.617378234863281
    7. '۰' → logprob: -15.804878234863281
    8. '```' → logprob: -16.55487823486328
    9. '    ' → logprob: -16.61737823486328
    10. ' 
' → logprob: -17.05487823486328

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '1' → logprob: -14.87515926361084
    4. '```' → logprob: -18.500158309936523
    5. '۰' → logprob: -19.000158309936523
    6. '   ' → logprob: -19.000158309936523
    7. ' ' → logprob: -19.125158309936523
    8. '  ' → logprob: -19.250158309936523
    9. '=' → logprob: -20.375158309936523
    10. ' 
' → logprob: -20.562658309936523

Token 78: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020749634131789207
    2. 'for' → logprob: -3.895749568939209
    3. ' ' → logprob: -9.020750045776367
    4. '    ' → logprob: -10.645750045776367
    5. ' in' → logprob: -11.020750045776367
    6. '   ' → logprob: -11.020750045776367
    7. ' or' → logprob: -11.645750045776367
    8. '        ' → logprob: -12.395750045776367
    9. ')' → logprob: -12.395750045776367
    10. '  ' → logprob: -12.395750045776367

Token 79: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.18028618395328522
    2. 'row' → logprob: -1.805286169052124
    3. '	row' → logprob: -8.305286407470703
    4. '<|end|>' → logprob: -8.430286407470703
    5. ',row' → logprob: -10.305286407470703
    6. ' ' → logprob: -11.055286407470703
    7. '<|end|>' → logprob: -12.305286407470703
    8. '(row' → logprob: -12.430286407470703
    9. ' in' → logprob: -12.680286407470703
    10. '
' → logprob: -13.555286407470703

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013382164761424065
    2. 'in' → logprob: -6.626338005065918
    3. 'self' → logprob: -12.376338005065918
    4. ' self' → logprob: -13.001338005065918
    5. '       ' → logprob: -13.501338005065918
    6. '<|end|>' → logprob: -13.626338005065918
    7. '   ' → logprob: -13.876338005065918
    8. ' ' → logprob: -13.876338005065918
    9. '	in' → logprob: -14.626338005065918
    10. '    ' → logprob: -14.876338005065918

Token 81: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2014189064502716
    2. ' self' → logprob: -1.7014188766479492
    3. '	self' → logprob: -13.07641887664795
    4. '(self' → logprob: -13.82641887664795
    5. '<|end|>' → logprob: -14.32641887664795
    6. ' ' → logprob: -14.45141887664795
    7. ')' → logprob: -15.57641887664795
    8. 's' → logprob: -15.82641887664795
    9. '<|end|>' → logprob: -15.82641887664795
    10. '_self' → logprob: -16.201419830322266

Token 82: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.002220914699137211
    2. '.' → logprob: -6.12722110748291
    3. '.g' → logprob: -11.12722110748291
    4. 'grid' → logprob: -11.37722110748291
    5. ' .' → logprob: -12.87722110748291
    6. '.rows' → logprob: -13.37722110748291
    7. '   ' → logprob: -14.00222110748291
    8. ').' → logprob: -14.12722110748291
    9. '.Grid' → logprob: -14.75222110748291
    10. '.user' → logprob: -14.87722110748291

Token 83: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0016375737031921744
    2. 'for' → logprob: -6.5016374588012695
    3. ' in' → logprob: -9.62663745880127
    4. '   ' → logprob: -10.50163745880127
    5. '       ' → logprob: -11.12663745880127
    6. ')' → logprob: -11.12663745880127
    7. ' ' → logprob: -12.00163745880127
    8. '    ' → logprob: -13.00163745880127
    9. '	for' → logprob: -13.00163745880127
    10. '           ' → logprob: -14.50163745880127

Token 84: ' enemy' (ID: 20935)
  Prédit: 'enemy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enemy' → logprob: -0.38687777519226074
    2. ' enemy' → logprob: -1.1368777751922607
    3. ' enemigo' → logprob: -12.76187801361084
    4. ' ' → logprob: -13.38687801361084
    5. '(enemy' → logprob: -14.01187801361084
    6. 'en' → logprob: -14.76187801361084
    7. '   ' → logprob: -15.38687801361084
    8. '.enemy' → logprob: -15.51187801361084
    9. '  ' → logprob: -15.88687801361084
    10. '_enemy' → logprob: -16.261877059936523

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07023784518241882
    2. 'in' → logprob: -2.695237874984741
    3. ' ' → logprob: -8.44523811340332
    4. ')' → logprob: -9.44523811340332
    5. ' )' → logprob: -12.19523811340332
    6. '<|end|>' → logprob: -14.44523811340332
    7. '  ' → logprob: -14.82023811340332
    8. '	in' → logprob: -15.07023811340332
    9. ' i' → logprob: -15.69523811340332
    10. '),' → logprob: -16.07023811340332

Token 86: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.4743450880050659
    2. ' row' → logprob: -0.9743450880050659
    3. ' ' → logprob: -8.349345207214355
    4. ' enemy' → logprob: -11.224345207214355
    5. 'enemy' → logprob: -11.849345207214355
    6. '	row' → logprob: -12.349345207214355
    7. '   ' → logprob: -12.599345207214355
    8. '  ' → logprob: -13.099345207214355
    9. '    ' → logprob: -14.599345207214355
    10. '     ' → logprob: -15.974345207214355

Token 87: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2352385965641588e-05
    2. '))' → logprob: -11.875012397766113
    3. ' )' → logprob: -12.375012397766113
    4. ')}' → logprob: -15.375012397766113
    5. ')))' → logprob: -15.750012397766113
    6. '())' → logprob: -16.125011444091797
    7. ')return' → logprob: -16.250011444091797
    8. '])' → logprob: -16.250011444091797
    9. ')
' → logprob: -16.375011444091797
    10. '       ' → logprob: -16.500011444091797

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6772817373275757
    2. '
' → logprob: -0.8022817373275757
    3. '```' → logprob: -4.302281856536865
    4. '    
' → logprob: -4.552281856536865
    5. '<|end|>' → logprob: -5.552281856536865
    6. ' 
' → logprob: -5.677281856536865
    7. 'def' → logprob: -5.677281856536865
    8. '\n' → logprob: -6.302281856536865
    9. ' ' → logprob: -6.552281856536865
    10. '' → logprob: -6.552281856536865

Token 89: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.375609427690506
    2. 'def' (adapté à ' def') → logprob: -1.2506093978881836
    3. ' def' → logprob: -3.6256093978881836
    4. '    
' → logprob: -9.875609397888184
    5. '    ' → logprob: -10.250609397888184
    6. '  ' → logprob: -10.500609397888184
    7. ' ' → logprob: -10.875609397888184
    8. '```' → logprob: -12.125609397888184
    9. '	def' → logprob: -12.125609397888184
    10. ' 
' → logprob: -12.250609397888184

Token 90: ' toggle' (ID: 24966)
  Prédit: ' defeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defeat' → logprob: -0.507205069065094
    2. ' attack' → logprob: -1.7572050094604492
    3. ' hit' → logprob: -2.632205009460449
    4. ' def' → logprob: -4.007205009460449
    5. ' count' → logprob: -4.007205009460449
    6. ' mark' → logprob: -4.007205009460449
    7. 'attack' → logprob: -4.007205009460449
    8. ' eliminate' → logprob: -4.382205009460449
    9. 'def' → logprob: -4.757205009460449
    10. ' destroy' → logprob: -5.007205009460449

Token 91: '_rectangle' (ID: 166619)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8180215358734131
    2. '(self' → logprob: -1.443021535873413
    3. '_cell' → logprob: -1.443021535873413
    4. '_' → logprob: -3.193021535873413
    5. '_enemy' → logprob: -3.568021535873413
    6. '_tile' → logprob: -4.943021774291992
    7. '_position' → logprob: -6.068021774291992
    8. '_self' → logprob: -6.568021774291992
    9. '_(' → logprob: -6.818021774291992
    10. '_toggle' → logprob: -6.943021774291992

Token 92: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11304612457752228
    2. '(' → logprob: -2.238046169281006
    3. ' (' → logprob: -8.863045692443848
    4. '(s' → logprob: -9.863045692443848
    5. ' ' → logprob: -11.738045692443848
    6. 'self' → logprob: -11.863045692443848
    7. '(
' → logprob: -12.238045692443848
    8. ' self' → logprob: -12.238045692443848
    9. '   ' → logprob: -13.988045692443848
    10. '<|end|>' → logprob: -14.238045692443848

Token 93: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14147545397281647
    2. ',' → logprob: -3.0164754390716553
    3. 'self' → logprob: -3.1414754390716553
    4. '(' → logprob: -4.016475677490234
    5. ')' → logprob: -4.766475677490234
    6. ' (' → logprob: -5.141475677490234
    7. ')(' → logprob: -5.766475677490234
    8. ' ,' → logprob: -7.016475677490234
    9. '       ' → logprob: -7.266475677490234
    10. 's' → logprob: -7.266475677490234

Token 94: ' top' (ID: 2344)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6198051571846008
    2. ' x' → logprob: -1.869805097579956
    3. ' r' → logprob: -1.994805097579956
    4. 'self' → logprob: -2.369805097579956
    5. ' top' → logprob: -3.494805097579956
    6. 'x' → logprob: -3.869805097579956
    7. 'r' → logprob: -4.244805335998535
    8. ' row' → logprob: -5.244805335998535
    9. ' start' → logprob: -5.869805335998535
    10. 'top' → logprob: -6.744805335998535

Token 95: ',' (ID: 11)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.12832561135292053
    2. ',' → logprob: -2.2533257007598877
    3. '-left' → logprob: -5.128325462341309
    4. ' ,' → logprob: -5.628325462341309
    5. 'left' → logprob: -6.128325462341309
    6. ',left' → logprob: -6.378325462341309
    7. ')' → logprob: -7.503325462341309
    8. 'Left' → logprob: -8.003325462341309
    9. ' left' → logprob: -8.128325462341309
    10. '_LEFT' → logprob: -8.253325462341309

Token 96: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.31490686535835266
    2. ' left' → logprob: -1.3149068355560303
    3. 'bottom' → logprob: -6.689907073974609
    4. ' bottom' → logprob: -7.939907073974609
    5. '	left' → logprob: -10.68990707397461
    6. 'bot' → logprob: -11.93990707397461
    7. '```' → logprob: -12.43990707397461
    8. '   ' → logprob: -12.56490707397461
    9. ',left' → logprob: -13.43990707397461
    10. ' lef' → logprob: -13.43990707397461

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.700132997939363e-05
    2. ' ,' → logprob: -11.000017166137695
    3. ',
' → logprob: -16.125017166137695
    4. '‌,' → logprob: -16.250017166137695
    5. '   ' → logprob: -17.500017166137695
    6. '),' → logprob: -17.625017166137695
    7. '`,' → logprob: -18.125017166137695
    8. '_,' → logprob: -18.500017166137695
    9. '):' → logprob: -18.625017166137695
    10. ' ' → logprob: -18.625017166137695

Token 98: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.10265950858592987
    2. ' bottom' → logprob: -2.3526594638824463
    3. 'bot' → logprob: -6.102659702301025
    4. '   ' → logprob: -9.227659225463867
    5. '```' → logprob: -9.602659225463867
    6. ' bot' → logprob: -11.102659225463867
    7. 'down' → logprob: -11.352659225463867
    8. 'height' → logprob: -12.602659225463867
    9. ' ' → logprob: -12.852659225463867
    10. 'b' → logprob: -12.852659225463867

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',left' → logprob: -13.62501049041748
    4. ',right' → logprob: -14.75001049041748
    5. '‌,' → logprob: -17.000011444091797
    6. '):' → logprob: -17.875011444091797
    7. ',
' → logprob: -18.250011444091797
    8. '`,' → logprob: -18.750011444091797
    9. '+,' → logprob: -18.750011444091797
    10. '_,' → logprob: -19.000011444091797

Token 100: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.04858953505754471
    2. 'right' → logprob: -3.0485894680023193
    3. '	right' → logprob: -13.423589706420898
    4. ' ' → logprob: -15.298589706420898
    5. '   ' → logprob: -16.1735897064209
    6. ' left' → logprob: -16.2985897064209
    7. 'left' → logprob: -16.2985897064209
    8. ',right' → logprob: -16.4235897064209
    9. '```' → logprob: -17.6735897064209
    10. '_right' → logprob: -17.7985897064209

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00026288547087460756
    2. '):
' → logprob: -8.375263214111328
    3. ' ):' → logprob: -11.250263214111328
    4. ')' → logprob: -11.750263214111328
    5. '   ' → logprob: -12.125263214111328
    6. ':' → logprob: -12.375263214111328
    7. '):
' → logprob: -14.375263214111328
    8. '       ' → logprob: -14.625263214111328
    9. ' ' → logprob: -16.000263214111328
    10. '    ' → logprob: -16.375263214111328

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12358932942152023
    2. '
' → logprob: -2.373589277267456
    3. ':' → logprob: -4.123589515686035
    4. '\n' → logprob: -5.748589515686035
    5. '<|end|>' → logprob: -6.373589515686035
    6. ':
' → logprob: -7.748589515686035
    7. '   ' → logprob: -7.748589515686035
    8. '        
' → logprob: -8.373589515686035
    9. ' 
' → logprob: -8.623589515686035
    10. '\' → logprob: -8.998589515686035

Token 103: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5785791873931885
    2. ' for' → logprob: -0.8285791873931885
    3. 'for' (adapté à ' for') → logprob: -5.953578948974609
    4. '   ' → logprob: -10.95357894897461
    5. '	for' → logprob: -11.70357894897461
    6. '
' → logprob: -11.95357894897461
    7. '```' → logprob: -12.07857894897461
    8. '        ' → logprob: -14.57857894897461
    9. ' ' → logprob: -15.07857894897461
    10. '    ' → logprob: -15.20357894897461

Token 104: ' r' (ID: 428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33616745471954346
    2. ' i' → logprob: -1.3361674547195435
    3. 'r' → logprob: -4.336167335510254
    4. 'row' → logprob: -5.211167335510254
    5. ' row' → logprob: -5.961167335510254
    6. ' r' → logprob: -6.586167335510254
    7. ' ' → logprob: -9.586167335510254
    8. '   ' → logprob: -9.586167335510254
    9. '	i' → logprob: -12.336167335510254
    10. '  ' → logprob: -13.336167335510254

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0034394615795463324
    2. 'in' → logprob: -6.003439426422119
    3. ' ' → logprob: -7.128439426422119
    4. 'ange' → logprob: -8.878439903259277
    5. 'range' → logprob: -12.503439903259277
    6. '   ' → logprob: -13.003439903259277
    7. '  ' → logprob: -13.128439903259277
    8. 'n' → logprob: -13.128439903259277
    9. 'nge' → logprob: -13.628439903259277
    10. ' i' → logprob: -13.628439903259277

Token 106: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750484973192215
    2. ' range' → logprob: -3.5297505855560303
    3. '	range' → logprob: -17.40475082397461
    4. '   ' → logprob: -17.65475082397461
    5. 'rang' → logprob: -18.65475082397461
    6. 'ange' → logprob: -19.15475082397461
    7. '(range' → logprob: -19.15475082397461
    8. ' ' → logprob: -19.27975082397461
    9. 'ran' → logprob: -20.52975082397461
    10. ' rang' → logprob: -20.52975082397461

Token 107: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -7.5649528298527e-05
    2. '(' → logprob: -9.625075340270996
    3. ' top' → logprob: -12.500075340270996
    4. 'top' → logprob: -12.625075340270996
    5. ' (' → logprob: -13.125075340270996
    6. '	top' → logprob: -15.125075340270996
    7. '(bottom' → logprob: -16.750076293945312
    8. '[top' → logprob: -16.875076293945312
    9. '(t' → logprob: -17.000076293945312
    10. '(self' → logprob: -17.625076293945312

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02637612447142601
    2. ' ,' → logprob: -3.6513760089874268
    3. '       ' → logprob: -10.026375770568848
    4. '   ' → logprob: -11.276375770568848
    5. ' ' → logprob: -12.776375770568848
    6. ',b' → logprob: -12.901375770568848
    7. '	' → logprob: -13.401375770568848
    8. '    ' → logprob: -13.526375770568848
    9. ')' → logprob: -13.651375770568848
    10. ',right' → logprob: -13.651375770568848

Token 109: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.08897588402032852
    2. ' bottom' → logprob: -2.4639759063720703
    3. 'right' → logprob: -10.46397590637207
    4. '   ' → logprob: -12.46397590637207
    5. ' right' → logprob: -13.46397590637207
    6. '(bottom' → logprob: -14.33897590637207
    7. ' ' → logprob: -14.83897590637207
    8. '    ' → logprob: -15.33897590637207
    9. '
' → logprob: -15.58897590637207
    10. 'bot' → logprob: -15.58897590637207

Token 110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931514143943787
    2. ' +' → logprob: -0.6931514143943787
    3. ')' → logprob: -13.693151473999023
    4. ' ' → logprob: -14.193151473999023
    5. '+
' → logprob: -14.568151473999023
    6. ' +
' → logprob: -14.568151473999023
    7. ',' → logprob: -14.818151473999023
    8. '   ' → logprob: -15.193151473999023
    9. ')+' → logprob: -15.318151473999023
    10. '1' → logprob: -15.818151473999023

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012510355561971664
    2. ' ' → logprob: -4.387510299682617
    3. ')' → logprob: -15.012510299682617
    4. '   ' → logprob: -15.137510299682617
    5. '```' → logprob: -16.637510299682617
    6. '  ' → logprob: -17.762510299682617
    7. ',' → logprob: -18.700010299682617
    8. ' ' → logprob: -18.950010299682617
    9. '
' → logprob: -18.950010299682617
    10. '0' → logprob: -19.012510299682617

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. ')' → logprob: -16.500009536743164
    4. '   ' → logprob: -17.125009536743164
    5. '```' → logprob: -19.375009536743164
    6. '0' → logprob: -19.500009536743164
    7. '  ' → logprob: -20.000009536743164
    8. '
' → logprob: -20.250009536743164
    9. '):
' → logprob: -20.625009536743164
    10. '2' → logprob: -20.625009536743164

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05757942423224449
    2. '):
' → logprob: -3.307579517364502
    3. ',' → logprob: -4.057579517364502
    4. ')' → logprob: -7.182579517364502
    5. '       ' → logprob: -7.932579517364502
    6. '<|end|>' → logprob: -8.182579040527344
    7. ' ):' → logprob: -8.307579040527344
    8. ':' → logprob: -8.557579040527344
    9. '   ' → logprob: -9.557579040527344
    10. ' ' → logprob: -10.307579040527344

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06935357302427292
    2. '       ' → logprob: -3.6943535804748535
    3. ' for' → logprob: -3.6943535804748535
    4. '<|end|>' → logprob: -5.0693535804748535
    5. ' ' → logprob: -5.5693535804748535
    6. '               ' → logprob: -5.8193535804748535
    7. '        ' → logprob: -6.3193535804748535
    8. '   ' → logprob: -6.9443535804748535
    9. '            ' → logprob: -7.9443535804748535
    10. 'for' → logprob: -8.569353103637695

Token 115: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07952778041362762
    2. 'for' (adapté à ' for') → logprob: -2.5795278549194336
    3. '       ' → logprob: -7.704527854919434
    4. '        ' → logprob: -9.704527854919434
    5. '           ' → logprob: -9.829527854919434
    6. ' ' → logprob: -10.454527854919434
    7. '   ' → logprob: -10.954527854919434
    8. '               ' → logprob: -11.329527854919434
    9. '	for' → logprob: -12.079527854919434
    10. '    ' → logprob: -12.704527854919434

Token 116: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12693199515342712
    2. ' c' → logprob: -2.12693190574646
    3. '   ' → logprob: -13.251932144165039
    4. '	c' → logprob: -13.376932144165039
    5. ' ' → logprob: -14.501932144165039
    6. '  ' → logprob: -16.75193214416504
    7. 'l' → logprob: -17.00193214416504
    8. '    ' → logprob: -17.12693214416504
    9. '```' → logprob: -18.62693214416504
    10. '       ' → logprob: -18.75193214416504

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014262939803302288
    2. 'in' → logprob: -4.264263153076172
    3. ' ' → logprob: -9.389263153076172
    4. '<|end|>' → logprob: -11.639263153076172
    5. '	in' → logprob: -13.514263153076172
    6. 'n' → logprob: -13.639263153076172
    7. '    ' → logprob: -13.639263153076172
    8. '<|end|>' → logprob: -14.264263153076172
    9. '  ' → logprob: -14.639263153076172
    10. ')' → logprob: -15.264263153076172

Token 118: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25192928314208984
    2. ' range' → logprob: -1.5019292831420898
    3. '(range' → logprob: -15.87692928314209
    4. '	range' → logprob: -16.751930236816406
    5. ' ' → logprob: -17.251930236816406
    6. '   ' → logprob: -17.751930236816406
    7. 'left' → logprob: -18.626930236816406
    8. '    ' → logprob: -18.751930236816406
    9. 'Range' → logprob: -19.751930236816406
    10. '_range' → logprob: -20.251930236816406

Token 119: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00010604646377032623
    2. '(' → logprob: -9.250105857849121
    3. 'left' → logprob: -11.625105857849121
    4. ' left' → logprob: -14.750105857849121
    5. ',left' → logprob: -14.875105857849121
    6. ' (' → logprob: -16.500106811523438
    7. '(top' → logprob: -16.625106811523438
    8. '(right' → logprob: -17.250106811523438
    9. '[left' → logprob: -17.750106811523438
    10. '	left' → logprob: -17.875106811523438

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002523341914638877
    2. ' ,' → logprob: -6.002523422241211
    3. ',c' → logprob: -10.877523422241211
    4. '           ' → logprob: -12.002523422241211
    5. 'c' → logprob: -12.502523422241211
    6. '<|end|>' → logprob: -12.627523422241211
    7. '+' → logprob: -13.127523422241211
    8. ')' → logprob: -13.377523422241211
    9. '       ' → logprob: -13.502523422241211
    10. '<|end|>' → logprob: -13.627523422241211

Token 121: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.061968132853507996
    2. ' right' → logprob: -2.8119680881500244
    3. '	right' → logprob: -14.686967849731445
    4. ' ' → logprob: -17.436967849731445
    5. '   ' → logprob: -17.436967849731445
    6. '(right' → logprob: -17.561967849731445
    7. 'r' → logprob: -17.936967849731445
    8. 'bottom' → logprob: -18.311967849731445
    9. '[right' → logprob: -18.686967849731445
    10. ':right' → logprob: -19.061967849731445

Token 122: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.281290203332901
    2. '+' → logprob: -1.4062901735305786
    3. ',' → logprob: -9.031290054321289
    4. ' ' → logprob: -11.781290054321289
    5. ' ,' → logprob: -12.906290054321289
    6. ')' → logprob: -12.906290054321289
    7. '+c' → logprob: -13.281290054321289
    8. '   ' → logprob: -13.906290054321289
    9. '           ' → logprob: -14.031290054321289
    10. '    ' → logprob: -14.656290054321289

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020557070150971413
    2. ' ' → logprob: -3.895557165145874
    3. ')' → logprob: -11.770557403564453
    4. '   ' → logprob: -12.520557403564453
    5. '+' → logprob: -14.270557403564453
    6. '0' → logprob: -14.395557403564453
    7. '```' → logprob: -15.020557403564453
    8. ' )' → logprob: -15.270557403564453
    9. '  ' → logprob: -15.270557403564453
    10. '
' → logprob: -15.645557403564453

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030578780570067465
    2. ' ' → logprob: -8.125306129455566
    3. '+' → logprob: -12.500306129455566
    4. '0' → logprob: -13.250306129455566
    5. ')' → logprob: -13.500306129455566
    6. '):
' → logprob: -14.000306129455566
    7. '
' → logprob: -14.500306129455566
    8. '   ' → logprob: -14.875306129455566
    9. 'c' → logprob: -15.000306129455566
    10. '```' → logprob: -15.500306129455566

Token 125: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20163387060165405
    2. '):' → logprob: -1.7016339302062988
    3. '       ' → logprob: -9.57663345336914
    4. '               ' → logprob: -10.20163345336914
    5. '):
' → logprob: -10.32663345336914
    6. ')' → logprob: -10.95163345336914
    7. ' ):
' → logprob: -10.95163345336914
    8. '           ' → logprob: -11.07663345336914
    9. ':
' → logprob: -11.70163345336914
    10. ':' → logprob: -11.82663345336914

Token 126: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023274246603250504
    2. ' self' → logprob: -3.8982741832733154
    3. '           ' → logprob: -6.5232744216918945
    4. 'self' → logprob: -7.0232744216918945
    5. ' ' → logprob: -9.148274421691895
    6. '   ' → logprob: -9.148274421691895
    7. '       ' → logprob: -10.273274421691895
    8. '```' → logprob: -10.273274421691895
    9. '                
' → logprob: -10.898274421691895
    10. '                   ' → logprob: -11.773274421691895

Token 127: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16038954257965088
    2. ' self' → logprob: -1.9103895425796509
    3. '               ' → logprob: -9.03538990020752
    4. '                   ' → logprob: -10.28538990020752
    5. ' ' → logprob: -12.41038990020752
    6. '	self' → logprob: -12.41038990020752
    7. '   ' → logprob: -13.16038990020752
    8. '                       ' → logprob: -13.78538990020752
    9. '```' → logprob: -15.41038990020752
    10. '[self' → logprob: -15.53538990020752

Token 128: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -2.3915141355246305e-05
    2. '.' → logprob: -10.87502384185791
    3. ' .' → logprob: -12.75002384185791
    4. '.toggle' → logprob: -13.62502384185791
    5. '.Grid' → logprob: -15.37502384185791
    6. '.user' → logprob: -16.500024795532227
    7. '.game' → logprob: -16.750024795532227
    8. '].' → logprob: -16.750024795532227
    9. '.tile' → logprob: -17.000024795532227
    10. 'grid' → logprob: -17.125024795532227

Token 129: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.2200749754119897e-06
    2. '[self' → logprob: -13.875001907348633
    3. '[' → logprob: -15.000001907348633
    4. '[row' → logprob: -15.250001907348633
    5. ' [' → logprob: -15.875001907348633
    6. 'r' → logprob: -16.375001907348633
    7. '   ' → logprob: -16.500001907348633
    8. '```' → logprob: -16.625001907348633
    9. '][' → logprob: -16.750001907348633
    10. '       ' → logprob: -16.875001907348633

Token 130: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2144847959280014
    2. '[r' → logprob: -2.339484691619873
    3. '[c' → logprob: -2.339484691619873
    4. '[' → logprob: -8.589485168457031
    5. ']' → logprob: -10.089485168457031
    6. ' ][' → logprob: -10.714485168457031
    7. ')[' → logprob: -11.714485168457031
    8. '"][' → logprob: -12.214485168457031
    9. '[row' → logprob: -12.839485168457031
    10. '           ' → logprob: -12.964485168457031

Token 131: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.392202976712724e-06
    2. ' c' → logprob: -12.000006675720215
    3. ')c' → logprob: -16.2500057220459
    4. '	c' → logprob: -16.8750057220459
    5. '
' → logprob: -17.0000057220459
    6. '```' → logprob: -18.2500057220459
    7. '   ' → logprob: -19.1250057220459
    8. '               ' → logprob: -19.3750057220459
    9. '
' → logprob: -19.6250057220459
    10. 'с' → logprob: -20.0000057220459

Token 132: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5079666972160339
    2. ' ^=' → logprob: -1.0079667568206787
    3. ' =' → logprob: -3.5079667568206787
    4. '^' → logprob: -6.2579665184021
    5. ']' → logprob: -6.7579665184021
    6. ')' → logprob: -8.257966995239258
    7. ' ' → logprob: -11.382966995239258
    8. ']=' → logprob: -12.007966995239258
    9. '1' → logprob: -12.882966995239258
    10. ' ' → logprob: -13.382966995239258

Token 133: ' ^=' (ID: 79665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10538224130868912
    2. ' ^=' → logprob: -2.355382204055786
    3. '^' → logprob: -5.355382442474365
    4. ' =' → logprob: -7.730382442474365
    5. '1' → logprob: -15.980381965637207
    6. ' ' → logprob: -16.355382919311523
    7. '=

' → logprob: -16.730382919311523
    8. ' ' → logprob: -17.355382919311523
    9. '=!' → logprob: -17.355382919311523
    10. '*=' → logprob: -17.730382919311523

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067154900170862675
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.506715774536133
    4. '  ' → logprob: -19.131715774536133
    5. '```' → logprob: -19.131715774536133
    6. ' ' → logprob: -19.256715774536133
    7. '１' → logprob: -19.819215774536133
    8. '' → logprob: -20.131715774536133
    9. '
' → logprob: -20.569215774536133
    10. '0' → logprob: -20.694215774536133

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.250003814697266
    4. '```' → logprob: -19.375003814697266
    5. '           ' → logprob: -19.500003814697266
    6. '       ' → logprob: -20.250003814697266
    7. '`' → logprob: -20.375003814697266
    8. '' → logprob: -20.562503814697266
    9. '  ' → logprob: -20.625003814697266
    10. '
' → logprob: -20.687503814697266

Token 136: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3704499900341034
    2. '<|end|>' → logprob: -1.2454500198364258
    3. '\n' → logprob: -4.120450019836426
    4. '#' → logprob: -6.245450019836426
    5. '```' → logprob: -7.120450019836426
    6. '<|end|>' → logprob: -7.495450019836426
    7. '\' → logprob: -8.245450019836426
    8. ')' → logprob: -8.245450019836426
    9. ':' → logprob: -8.245450019836426
    10. '   ' → logprob: -8.370450019836426

Token 138: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002391110174357891
    2. 'class' → logprob: -6.252391338348389
    3. '   ' → logprob: -8.37739086151123
    4. ' def' → logprob: -8.87739086151123
    5. 'from' → logprob: -10.37739086151123
    6. 'd' → logprob: -10.62739086151123
    7. '
' → logprob: -10.87739086151123
    8. 'import' → logprob: -11.87739086151123
    9. '#' → logprob: -13.00239086151123
    10. ' ' → logprob: -13.25239086151123

Token 139: ' to' (ID: 316)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.9998391270637512
    2. ' find' → logprob: -1.4998390674591064
    3. 'count' → logprob: -2.4998390674591064
    4. ' def' → logprob: -2.8748390674591064
    5. 'def' → logprob: -3.1248390674591064
    6. ' toggle' → logprob: -3.2498390674591064
    7. ' solve' → logprob: -3.4998390674591064
    8. ' is' → logprob: -3.8748390674591064
    9. ' defeat' → logprob: -3.8748390674591064
    10. ' apply' → logprob: -4.3748393058776855

Token 140: '_tuple' (ID: 53371)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.2074657827615738
    2. '_list' → logprob: -2.082465887069702
    3. '_' → logprob: -3.707465887069702
    4. '_matrix' → logprob: -3.707465887069702
    5. '_array' → logprob: -5.457465648651123
    6. '_s' → logprob: -5.832465648651123
    7. 'string' → logprob: -6.582465648651123
    8. '_grid' → logprob: -6.582465648651123
    9. '_str' → logprob: -7.082465648651123
    10. '_json' → logprob: -7.207465648651123

Token 141: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.610702363715973e-06
    2. '(' → logprob: -12.375009536743164
    3. 'self' → logprob: -12.625009536743164
    4. '(s' → logprob: -13.625009536743164
    5. ' (' → logprob: -15.250009536743164
    6. 's' → logprob: -15.625009536743164
    7. '(
' → logprob: -15.750009536743164
    8. '   ' → logprob: -16.125009536743164
    9. '<|end|>' → logprob: -16.500009536743164
    10. ' self' → logprob: -17.125009536743164

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16045382618904114
    2. '(self' → logprob: -2.2854537963867188
    3. 'self' → logprob: -3.7854537963867188
    4. '):
' → logprob: -3.7854537963867188
    5. ')' → logprob: -7.285453796386719
    6. ' ):' → logprob: -8.785453796386719
    7. '   ' → logprob: -9.285453796386719
    8. '):

' → logprob: -9.785453796386719
    9. '       ' → logprob: -10.410453796386719
    10. '():' → logprob: -10.535453796386719

Token 143: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17946361005306244
    2. 'return' → logprob: -1.9294636249542236
    3. '(' → logprob: -5.1794633865356445
    4. ' return' → logprob: -5.1794633865356445
    5. '   ' → logprob: -5.4294633865356445
    6. '       ' → logprob: -6.1794633865356445
    7. '():' → logprob: -7.4294633865356445
    8. '()
' → logprob: -8.054463386535645
    9. '(
' → logprob: -8.804463386535645
    10. ' ()' → logprob: -9.679463386535645

Token 144: ' return' (ID: 622)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.3190945088863373
    2. 'tuple' → logprob: -1.3190945386886597
    3. '(tuple' → logprob: -5.569094657897949
    4. 'return' (adapté à ' return') → logprob: -6.569094657897949
    5. ' return' → logprob: -7.444094657897949
    6. '   ' → logprob: -11.31909465789795
    7. '       ' → logprob: -14.06909465789795
    8. '(
' → logprob: -15.69409465789795
    9. ' (' → logprob: -15.69409465789795
    10. 'tu' → logprob: -15.94409465789795

Token 145: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0002888682356569916
    2. ' tuple' → logprob: -8.250288963317871
    3. '(tuple' → logprob: -10.500288963317871
    4. 'tu' → logprob: -17.875288009643555
    5. '   ' → logprob: -18.125288009643555
    6. '(' → logprob: -21.000288009643555
    7. '_tuple' → logprob: -21.250288009643555
    8. 'Tuple' → logprob: -21.875288009643555
    9. ' ' → logprob: -22.375288009643555
    10. '  ' → logprob: -22.500288009643555

Token 146: '(tuple' (ID: 133029)
  Prédit: '(tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.00012642296496778727
    2. 'tuple' → logprob: -9.250126838684082
    3. '(' → logprob: -10.500126838684082
    4. '(map' → logprob: -13.625126838684082
    5. '([' → logprob: -14.125126838684082
    6. '(row' → logprob: -15.000126838684082
    7. '((' → logprob: -15.375126838684082
    8. ' tuple' → logprob: -15.625126838684082
    9. '(
' → logprob: -17.375125885009766
    10. ' (' → logprob: -18.375125885009766

Token 147: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.00021962920436635613
    2. ' row' → logprob: -9.000219345092773
    3. '(row' → logprob: -9.250219345092773
    4. '	row' → logprob: -16.750219345092773
    5. 'self' → logprob: -17.500219345092773
    6. '   ' → logprob: -17.500219345092773
    7. 'r' → logprob: -18.375219345092773
    8. '       ' → logprob: -20.625219345092773
    9. ',row' → logprob: -20.625219345092773
    10. '$row' → logprob: -21.000219345092773

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013738969573751092
    2. 'self' → logprob: -9.375137329101562
    3. '(row' → logprob: -10.375137329101562
    4. '(self' → logprob: -11.625137329101562
    5. '   ' → logprob: -12.625137329101562
    6. ' )' → logprob: -13.000137329101562
    7. ' for' → logprob: -13.250137329101562
    8. '       ' → logprob: -13.500137329101562
    9. ' ' → logprob: -14.125137329101562
    10. 'for' → logprob: -14.750137329101562

Token 149: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11558650434017181
    2. ' for' → logprob: -2.865586519241333
    3. '(row' → logprob: -3.365586519241333
    4. '(self' → logprob: -4.490586280822754
    5. 'self' → logprob: -5.240586280822754
    6. 'for' → logprob: -7.740586280822754
    7. ' self' → logprob: -7.865586280822754
    8. '   ' → logprob: -9.490586280822754
    9. ' row' → logprob: -9.740586280822754
    10. ' in' → logprob: -10.115586280822754

Token 150: ' row' (ID: 5225)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.575942873954773
    2. 'self' → logprob: -0.825942873954773
    3. '	self' → logprob: -13.075942993164062
    4. ' ' → logprob: -14.825942993164062
    5. '(self' → logprob: -14.825942993164062
    6. ' row' → logprob: -15.200942993164062
    7. 'row' → logprob: -15.575942993164062
    8. '   ' → logprob: -16.700942993164062
    9. ' ' → logprob: -16.825942993164062
    10. '  ' → logprob: -17.200942993164062

Token 151: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25466904044151306
    2. ' self' → logprob: -1.8796690702438354
    3. ' in' → logprob: -2.629668951034546
    4. 'in' → logprob: -10.879669189453125
    5. '(self' → logprob: -11.004669189453125
    6. '<|end|>' → logprob: -11.254669189453125
    7. ' ' → logprob: -11.629669189453125
    8. '	self' → logprob: -12.004669189453125
    9. ')' → logprob: -12.004669189453125
    10. '   ' → logprob: -13.004669189453125

Token 152: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002476016292348504
    2. ' self' → logprob: -6.002476215362549
    3. '   ' → logprob: -16.12747573852539
    4. '       ' → logprob: -16.12747573852539
    5. '(self' → logprob: -16.87747573852539
    6. ' ' → logprob: -17.37747573852539
    7. '           ' → logprob: -17.50247573852539
    8. '	self' → logprob: -18.25247573852539
    9. '    ' → logprob: -18.87747573852539
    10. '[self' → logprob: -19.00247573852539

Token 153: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -6.0033853515051305e-05
    2. 'grid' → logprob: -10.250060081481934
    3. '.' → logprob: -10.625060081481934
    4. ' .' → logprob: -15.750060081481934
    5. '.g' → logprob: -16.500059127807617
    6. ').' → logprob: -17.250059127807617
    7. 'self' → logprob: -17.250059127807617
    8. ' grid' → logprob: -17.500059127807617
    9. '	grid' → logprob: -17.500059127807617
    10. ')' → logprob: -17.625059127807617

Token 154: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '())' → logprob: -14.250000953674316
    3. ')
' → logprob: -14.750000953674316
    4. ' )' → logprob: -15.625000953674316
    5. '))' → logprob: -16.375001907348633
    6. ')return' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '()' → logprob: -18.625001907348633
    9. ')#' → logprob: -18.625001907348633
    10. ')`' → logprob: -18.625001907348633

Token 155: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18169373273849487
    2. 'class' → logprob: -1.9316937923431396
    3. 'def' → logprob: -4.3066935539245605
    4. '

' → logprob: -5.8066935539245605
    5. ' class' → logprob: -6.1816935539245605
    6. '   ' → logprob: -7.1816935539245605
    7. '```' → logprob: -7.6816935539245605
    8. ' 
' → logprob: -8.056694030761719
    9. '    
' → logprob: -8.181694030761719
    10. '<|end|>' → logprob: -8.306694030761719

Token 156: ' Rectangle' (ID: 38728)
  Prédit: ' Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.7834155559539795
    2. ' Solution' → logprob: -1.1584155559539795
    3. ' Solver' → logprob: -2.6584155559539795
    4. ' Battles' → logprob: -2.6584155559539795
    5. ' Game' → logprob: -3.7834155559539795
    6. ' Grid' → logprob: -4.033415794372559
    7. ' Enemy' → logprob: -4.033415794372559
    8. ' Puzzle' → logprob: -4.908415794372559
    9. ' Battle' → logprob: -5.533415794372559
    10. ' Tower' → logprob: -5.658415794372559

Token 157: ':
' (ID: 734)
  Prédit: 'Toggle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Toggle' → logprob: -0.09977693855762482
    2. ':' → logprob: -3.2247769832611084
    3. 'Picker' → logprob: -4.349776744842529
    4. 'Selector' → logprob: -4.474776744842529
    5. 'Flip' → logprob: -4.724776744842529
    6. 'T' → logprob: -4.849776744842529
    7. 'Chooser' → logprob: -5.224776744842529
    8. 'Solver' → logprob: -6.224776744842529
    9. 'Attack' → logprob: -6.849776744842529
    10. 'Selection' → logprob: -7.224776744842529

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02662072330713272
    2. ':' → logprob: -3.901620626449585
    3. ':
' → logprob: -5.276620864868164
    4. 'def' → logprob: -8.401620864868164
    5. ' def' → logprob: -8.526620864868164
    6. '):
' → logprob: -9.151620864868164
    7. '    ' → logprob: -9.401620864868164
    8. '<|end|>' → logprob: -9.526620864868164
    9. '  ' → logprob: -9.651620864868164
    10. ' ' → logprob: -10.151620864868164

Token 159: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5808376669883728
    2. 'def' (adapté à ' def') → logprob: -0.8308376669883728
    3. '   ' → logprob: -5.330837726593018
    4. ' __' → logprob: -10.83083724975586
    5. '__' → logprob: -10.83083724975586
    6. 'class' → logprob: -12.58083724975586
    7. '	def' → logprob: -12.95583724975586
    8. ' ' → logprob: -15.20583724975586
    9. '```' → logprob: -15.58083724975586
    10. ':def' → logprob: -15.95583724975586

Token 160: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06452476233243942
    2. ' def' → logprob: -3.3145246505737305
    3. 'init' → logprob: -3.9395246505737305
    4. ' init' → logprob: -5.3145246505737305
    5. '__' → logprob: -6.8145246505737305
    6. '_init' → logprob: -7.8145246505737305
    7. 'def' → logprob: -8.56452465057373
    8. ' _' → logprob: -11.18952465057373
    9. ' ' → logprob: -11.31452465057373
    10. ' ' → logprob: -11.56452465057373

Token 161: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. ' init' → logprob: -14.500000953674316
    3. 'ini' → logprob: -16.5
    4. 'def' → logprob: -18.375
    5. 'int' → logprob: -18.625
    6. 'i' → logprob: -18.75
    7. 'new' → logprob: -19.0
    8. '   ' → logprob: -19.125
    9. '```' → logprob: -19.375
    10. 'in' → logprob: -19.5

Token 162: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.029787981882691383
    2. '__' → logprob: -3.529788017272949
    3. '__(
' → logprob: -10.40478801727295
    4. '__((' → logprob: -12.40478801727295
    5. '__('' → logprob: -13.77978801727295
    6. '(self' → logprob: -14.15478801727295
    7. '___' → logprob: -14.65478801727295
    8. '__(*' → logprob: -15.40478801727295
    9. '__("' → logprob: -15.65478801727295
    10. '_' → logprob: -15.77978801727295

Token 163: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015043864259496331
    2. ' self' → logprob: -6.501504421234131
    3. 'top' → logprob: -14.126503944396973
    4. '0' → logprob: -14.501503944396973
    5. ',' → logprob: -14.751503944396973
    6. '(self' → logprob: -15.751503944396973
    7. '1' → logprob: -16.37650489807129
    8. '
' → logprob: -16.87650489807129
    9. ',self' → logprob: -17.25150489807129
    10. 's' → logprob: -17.37650489807129

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015540247550234199
    2. ' ,' → logprob: -7.001554012298584
    3. 'self' → logprob: -7.376554012298584
    4. ' self' → logprob: -12.251554489135742
    5. 'top' → logprob: -12.376554489135742
    6. '(self' → logprob: -12.751554489135742
    7. ',self' → logprob: -13.251554489135742
    8. ' (' → logprob: -13.876554489135742
    9. ' top' → logprob: -14.251554489135742
    10. '(top' → logprob: -14.626554489135742

Token 165: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.11821684241294861
    2. ' top' → logprob: -2.2432167530059814
    3. 'self' → logprob: -5.3682169914245605
    4. '   ' → logprob: -7.7432169914245605
    5. ' self' → logprob: -8.243216514587402
    6. '	top' → logprob: -12.368216514587402
    7. ' ' → logprob: -12.493216514587402
    8. 't' → logprob: -12.743216514587402
    9. 'left' → logprob: -12.993216514587402
    10. 'x' → logprob: -13.618216514587402

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9146995327901095e-05
    2. ' ,' → logprob: -11.125019073486328
    3. '=' → logprob: -12.625019073486328
    4. '=None' → logprob: -15.000019073486328
    5. ',int' → logprob: -15.500019073486328
    6. '<|end|>' → logprob: -15.625019073486328
    7. ',left' → logprob: -15.625019073486328
    8. '‌,' → logprob: -17.000019073486328
    9. '   ' → logprob: -17.125019073486328
    10. '<|end|>' → logprob: -17.500019073486328

Token 167: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3132645785808563
    2. 'left' → logprob: -1.3132646083831787
    3. '	left' → logprob: -13.438264846801758
    4. ',left' → logprob: -14.938264846801758
    5. ' bottom' → logprob: -15.063264846801758
    6. 'bottom' → logprob: -15.188264846801758
    7. ' lef' → logprob: -15.438264846801758
    8. '_left' → logprob: -15.813264846801758
    9. '   ' → logprob: -16.188264846801758
    10. ' ' → logprob: -16.938264846801758

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ' ,' → logprob: -12.250005722045898
    3. '):' → logprob: -14.500005722045898
    4. ',right' → logprob: -15.500005722045898
    5. ',b' → logprob: -16.2500057220459
    6. ')' → logprob: -16.7500057220459
    7. '),' → logprob: -17.7500057220459
    8. '‌,' → logprob: -17.7500057220459
    9. '   ' → logprob: -17.7500057220459
    10. '):
' → logprob: -17.8750057220459

Token 169: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.10023082792758942
    2. ' bottom' → logprob: -2.3502309322357178
    3. 'bot' → logprob: -11.350231170654297
    4. '   ' → logprob: -11.600231170654297
    5. ' ' → logprob: -13.975231170654297
    6. '```' → logprob: -14.725231170654297
    7. '       ' → logprob: -14.975231170654297
    8. '
' → logprob: -15.475231170654297
    9. ')' → logprob: -15.475231170654297
    10. 'b' → logprob: -15.725231170654297

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023298001906368881
    2. ',right' → logprob: -8.625232696533203
    3. ',left' → logprob: -10.250232696533203
    4. ' ,' → logprob: -11.000232696533203
    5. ',b' → logprob: -14.375232696533203
    6. ')' → logprob: -16.250232696533203
    7. '):
' → logprob: -16.375232696533203
    8. '   ' → logprob: -16.375232696533203
    9. 'right' → logprob: -16.625232696533203
    10. '<|end|>' → logprob: -16.750232696533203

Token 171: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.0380457378923893
    2. 'right' → logprob: -3.288045644760132
    3. ' top' → logprob: -13.163045883178711
    4. ' ' → logprob: -13.788045883178711
    5. 'top' → logprob: -14.913045883178711
    6. ',right' → logprob: -14.913045883178711
    7. '	right' → logprob: -14.913045883178711
    8. 'left' → logprob: -15.538045883178711
    9. ' left' → logprob: -15.913045883178711
    10. ',' → logprob: -18.16304588317871

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006917051505297422
    2. '):
' → logprob: -7.375691890716553
    3. ')' → logprob: -9.750691413879395
    4. ':' → logprob: -12.750691413879395
    5. ',' → logprob: -13.250691413879395
    6. ' ):' → logprob: -13.625691413879395
    7. '   ' → logprob: -14.250691413879395
    8. '):
' → logprob: -15.750691413879395
    9. '       ' → logprob: -16.75069236755371
    10. ' ' → logprob: -17.50069236755371

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010182792320847511
    2. 'self' → logprob: -7.001018047332764
    3. ' self' → logprob: -9.501018524169922
    4. '   ' → logprob: -10.501018524169922
    5. ',' → logprob: -13.501018524169922
    6. '):
' → logprob: -14.626018524169922
    7. '	' → logprob: -14.751018524169922
    8. '	self' → logprob: -14.876018524169922
    9. ':' → logprob: -15.126018524169922
    10. '<|end|>' → logprob: -15.251018524169922

Token 174: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7102598547935486
    2. 'self' (adapté à ' self') → logprob: -0.7102598547935486
    3. '       ' → logprob: -4.085259914398193
    4. '   ' → logprob: -8.960259437561035
    5. '	self' → logprob: -11.460259437561035
    6. ' ' → logprob: -12.210259437561035
    7. '        ' → logprob: -13.460259437561035
    8. '           ' → logprob: -14.085259437561035
    9. '     ' → logprob: -14.835259437561035
    10. ' ' → logprob: -14.960259437561035

Token 175: '.top' (ID: 16801)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0216184351593256
    2. '.top' → logprob: -3.896618366241455
    3. ' .' → logprob: -7.271618366241455
    4. ' ' → logprob: -8.396618843078613
    5. ' top' → logprob: -9.021618843078613
    6. '.space' → logprob: -10.896618843078613
    7. 'top' → logprob: -11.271618843078613
    8. ' =' → logprob: -14.021618843078613
    9. '=' → logprob: -14.646618843078613
    10. ',' → logprob: -14.771618843078613

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42020031809806824
    2. ' =' → logprob: -1.1702003479003906
    3. ',' → logprob: -3.4202003479003906
    4. ' ,' → logprob: -9.67020034790039
    5. ' ' → logprob: -12.04520034790039
    6. '   ' → logprob: -12.92020034790039
    7. '    ' → logprob: -14.42020034790039
    8. '=int' → logprob: -14.67020034790039
    9. ')' → logprob: -14.79520034790039
    10. '=None' → logprob: -15.04520034790039

Token 177: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.023245595395565033
    2. 'top' → logprob: -3.7732455730438232
    3. '	top' → logprob: -16.273244857788086
    4. '(top' → logprob: -18.523244857788086
    5. '[top' → logprob: -19.398244857788086
    6. ' ' → logprob: -20.148244857788086
    7. '_top' → logprob: -20.273244857788086
    8. ' ' → logprob: -20.898244857788086
    9. ' топ' → logprob: -21.023244857788086
    10. 't' → logprob: -21.523244857788086

Token 178: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48714756965637207
    2. ',' → logprob: -1.862147569656372
    3. '
' → logprob: -2.112147569656372
    4. 'self' → logprob: -2.487147569656372
    5. ' 
' → logprob: -4.862147331237793
    6. ' self' → logprob: -5.237147331237793
    7. ',
' → logprob: -5.362147331237793
    8. 'left' → logprob: -6.612147331237793
    9. '<|end|>' → logprob: -6.737147331237793
    10. ' ' → logprob: -6.737147331237793

Token 180: ' self' (ID: 1051)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6360793709754944
    2. 'self' (adapté à ' self') → logprob: -1.0110793113708496
    3. ' left' → logprob: -2.7610793113708496
    4. ' self' → logprob: -3.1360793113708496
    5. '       ' → logprob: -9.011079788208008
    6. '        ' → logprob: -12.761079788208008
    7. 'lef' → logprob: -13.136079788208008
    8. '	left' → logprob: -13.761079788208008
    9. '   ' → logprob: -13.886079788208008
    10. ' ' → logprob: -14.136079788208008

Token 181: '.left' (ID: 15388)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3100932240486145
    2. '.left' → logprob: -1.6850931644439697
    3. ' left' → logprob: -3.4350931644439697
    4. ' ,' → logprob: -4.310093402862549
    5. 'left' → logprob: -4.560093402862549
    6. ' top' → logprob: -4.560093402862549
    7. '.top' → logprob: -5.435093402862549
    8. ',left' → logprob: -5.685093402862549
    9. 'top' → logprob: -6.435093402862549
    10. '.' → logprob: -6.560093402862549

Token 182: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4641163945198059
    2. '<|end|>' → logprob: -1.0891163349151611
    3. '=' → logprob: -4.71411657333374
    4. '       ' → logprob: -5.21411657333374
    5. '
' → logprob: -5.46411657333374
    6. ',
' → logprob: -5.71411657333374
    7. '<|end|>' → logprob: -5.71411657333374
    8. ' ,' → logprob: -5.71411657333374
    9. ' ' → logprob: -5.96411657333374
    10. ' =' → logprob: -6.46411657333374

Token 183: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5759417414665222
    2. ' left' → logprob: -0.8259417414665222
    3. '	left' → logprob: -14.450942039489746
    4. ' lef' → logprob: -14.700942039489746
    5. '[left' → logprob: -14.950942039489746
    6. 'right' → logprob: -15.200942039489746
    7. '(left' → logprob: -15.200942039489746
    8. ' ' → logprob: -16.07594108581543
    9. ':left' → logprob: -16.20094108581543
    10. 'space' → logprob: -16.45094108581543

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05943085253238678
    2. 'self' → logprob: -2.9344308376312256
    3. '
' → logprob: -5.809431076049805
    4. ' self' → logprob: -6.684431076049805
    5. '   ' → logprob: -9.684431076049805
    6. ',' → logprob: -9.809431076049805
    7. '<|end|>' → logprob: -10.059431076049805
    8. '        
' → logprob: -10.434431076049805
    9. '               ' → logprob: -11.059431076049805
    10. ' 
' → logprob: -11.434431076049805

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05559249594807625
    2. 'self' → logprob: -2.9305925369262695
    3. ' self' → logprob: -7.3055925369262695
    4. ',' → logprob: -11.55559253692627
    5. '   ' → logprob: -11.55559253692627
    6. ' ' → logprob: -12.30559253692627
    7. '
' → logprob: -12.93059253692627
    8. '	self' → logprob: -13.30559253692627
    9. '      ' → logprob: -13.55559253692627
    10. '        
' → logprob: -13.68059253692627

Token 186: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03838857635855675
    2. 'right' → logprob: -3.28838849067688
    3. 'bottom' → logprob: -8.1633882522583
    4. ' self' → logprob: -10.4133882522583
    5. '       ' → logprob: -11.1633882522583
    6. 'left' → logprob: -11.5383882522583
    7. 'top' → logprob: -11.7883882522583
    8. ' right' → logprob: -14.7883882522583
    9. '   ' → logprob: -16.038389205932617
    10. '	self' → logprob: -17.288389205932617

Token 187: '.bottom' (ID: 35613)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.018404405564069748
    2. '.right' → logprob: -4.518404483795166
    3. 'bottom' → logprob: -5.518404483795166
    4. 'eft' → logprob: -7.018404483795166
    5. ' right' → logprob: -7.268404483795166
    6. 'ight' → logprob: -7.893404483795166
    7. ',right' → logprob: -8.143404006958008
    8. 'top' → logprob: -8.268404006958008
    9. 'left' → logprob: -8.393404006958008
    10. '	right' → logprob: -9.268404006958008

Token 188: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.6668740510940552
    2. 'right' → logprob: -0.9168740510940552
    3. ' bottom' → logprob: -2.9168739318847656
    4. ' right' → logprob: -3.4168739318847656
    5. 'left' → logprob: -12.916873931884766
    6. '	right' → logprob: -14.166873931884766
    7. 'bot' → logprob: -14.666873931884766
    8. '(bottom' → logprob: -14.666873931884766
    9. 'b' → logprob: -14.916873931884766
    10. '(right' → logprob: -15.541873931884766

Token 190: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2206895500421524
    2. '<|end|>' → logprob: -1.9706895351409912
    3. ' ' → logprob: -4.09568977355957
    4. 'right' → logprob: -4.22068977355957
    5. ' right' → logprob: -4.97068977355957
    6. '   ' → logprob: -5.34568977355957
    7. 'self' → logprob: -5.72068977355957
    8. '
' → logprob: -5.97068977355957
    9. ' 
' → logprob: -6.34568977355957
    10. ',' → logprob: -6.34568977355957

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2902548313140869
    2. ' self' → logprob: -2.040254831314087
    3. 'self' → logprob: -2.165254831314087
    4. 'right' → logprob: -5.540254592895508
    5. ' right' → logprob: -6.040254592895508
    6. '<|end|>' → logprob: -8.290254592895508
    7. '	self' → logprob: -8.915254592895508
    8. ',' → logprob: -9.290254592895508
    9. '   ' → logprob: -9.540254592895508
    10. '	right' → logprob: -9.665254592895508

Token 192: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07920162379741669
    2. ' self' → logprob: -2.5792016983032227
    3. '       ' → logprob: -8.079201698303223
    4. 'right' → logprob: -13.454201698303223
    5. '	self' → logprob: -15.829201698303223
    6. ' right' → logprob: -16.204200744628906
    7. '   ' → logprob: -16.829200744628906
    8. '(self' → logprob: -16.954200744628906
    9. '        ' → logprob: -17.079200744628906
    10. ' ' → logprob: -17.204200744628906

Token 193: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.20158319175243378
    2. '.' → logprob: -1.7015831470489502
    3. 'right' → logprob: -9.451582908630371
    4. '.bottom' → logprob: -10.076582908630371
    5. ' .' → logprob: -10.701582908630371
    6. '=' → logprob: -11.951582908630371
    7. '	right' → logprob: -12.201582908630371
    8. '.left' → logprob: -12.826582908630371
    9. '.Right' → logprob: -13.201582908630371
    10. ' ' → logprob: -13.326582908630371

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.281697541475296
    2. ' =' → logprob: -1.4066975116729736
    3. '<|end|>' → logprob: -7.656697750091553
    4. '<|end|>' → logprob: -10.031697273254395
    5. ')' → logprob: -11.281697273254395
    6. ' ' → logprob: -11.406697273254395
    7. ',' → logprob: -13.406697273254395
    8. '_' → logprob: -14.406697273254395
    9. ' +=' → logprob: -14.531697273254395
    10. '   ' → logprob: -14.656697273254395

Token 195: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06196858361363411
    2. ' right' → logprob: -2.8119685649871826
    3. '	right' → logprob: -14.186968803405762
    4. 'r' → logprob: -15.936968803405762
    5. '(right' → logprob: -16.936967849731445
    6. 'rig' → logprob: -17.436967849731445
    7. '   ' → logprob: -18.061967849731445
    8. ' ' → logprob: -18.186967849731445
    9. ':right' → logprob: -18.186967849731445
    10. 'rightness' → logprob: -18.186967849731445

Token 196: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3382842242717743
    2. '<|end|>' → logprob: -1.3382842540740967
    3. '   ' → logprob: -4.088284015655518
    4. '<|end|>' → logprob: -5.588284015655518
    5. 'def' → logprob: -5.713284015655518
    6. '    
' → logprob: -7.463284015655518
    7. ' def' → logprob: -9.088284492492676
    8. '

' → logprob: -9.963284492492676
    9. '  
' → logprob: -10.213284492492676
    10. '
' → logprob: -10.588284492492676

Token 197: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.13388703338569e-06
    2. ' def' → logprob: -12.000009536743164
    3. '   ' → logprob: -13.625009536743164
    4. '@' → logprob: -13.750009536743164
    5. '@property' → logprob: -14.250009536743164
    6. 'de' → logprob: -18.000009536743164
    7. 'd' → logprob: -18.875009536743164
    8. '    
' → logprob: -18.875009536743164
    9. '```' → logprob: -19.375009536743164
    10. '	def' → logprob: -19.625009536743164

Token 199: ' __' (ID: 2516)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.4442356824874878
    2. ' area' → logprob: -1.1942356824874878
    3. 'width' → logprob: -3.3192358016967773
    4. ' width' → logprob: -4.319235801696777
    5. 'def' → logprob: -6.194235801696777
    6. 'size' → logprob: -6.194235801696777
    7. ' size' → logprob: -7.444235801696777
    8. ' def' → logprob: -7.569235801696777
    9. '   ' → logprob: -8.069235801696777
    10. '__' → logprob: -8.569235801696777

Token 200: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0032629151828587055
    2. 'repr' → logprob: -6.003262996673584
    3. 'hash' → logprob: -7.753262996673584
    4. 'lt' → logprob: -8.253262519836426
    5. 'str' → logprob: -9.253262519836426
    6. 'len' → logprob: -14.628262519836426
    7. 'iter' → logprob: -14.753262519836426
    8. 'init' → logprob: -15.378262519836426
    9. 'bool' → logprob: -16.128263473510742
    10. 'le' → logprob: -16.628263473510742

Token 201: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00019042797794099897
    2. '__' → logprob: -8.750190734863281
    3. '__('' → logprob: -11.125190734863281
    4. '__(
' → logprob: -11.125190734863281
    5. '(self' → logprob: -13.750190734863281
    6. '__("' → logprob: -14.250190734863281
    7. '__((' → logprob: -14.500190734863281
    8. '__.__' → logprob: -16.75019073486328
    9. '__(*' → logprob: -17.00019073486328
    10. '__()

' → logprob: -17.75019073486328

Token 202: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008988389745354652
    2. ')' → logprob: -7.125898838043213
    3. ' self' → logprob: -9.750899314880371
    4. '(self' → logprob: -11.000899314880371
    5. '<|end|>' → logprob: -12.125899314880371
    6. ' ' → logprob: -12.250899314880371
    7. '	self' → logprob: -12.625899314880371
    8. ')(' → logprob: -13.375899314880371
    9. '):
' → logprob: -14.000899314880371
    10. '):' → logprob: -14.125899314880371

Token 203: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08499497175216675
    2. '__)' → logprob: -3.3349950313568115
    3. 'self' → logprob: -4.334994792938232
    4. '):' → logprob: -4.959994792938232
    5. ')' → logprob: -5.209994792938232
    6. '__('' → logprob: -5.334994792938232
    7. '__(*' → logprob: -5.959994792938232
    8. '__).' → logprob: -6.209994792938232
    9. '__(' → logprob: -6.459994792938232
    10. ')__' → logprob: -6.709994792938232

Token 204: '       ' (ID: 309)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5025981068611145
    2. 'f' → logprob: -1.2525980472564697
    3. '       ' → logprob: -2.2525980472564697
    4. ' return' → logprob: -5.877598285675049
    5. 'return' → logprob: -6.627598285675049
    6. '   ' → logprob: -10.75259780883789
    7. '    ' → logprob: -13.00259780883789
    8. '     ' → logprob: -13.25259780883789
    9. '           ' → logprob: -13.62759780883789
    10. ' ' → logprob: -13.87759780883789

Token 205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15518394112586975
    2. 'f' → logprob: -2.155184030532837
    3. ' return' → logprob: -3.655184030532837
    4. ' f' → logprob: -6.655183792114258
    5. '       ' → logprob: -7.405183792114258
    6. '   ' → logprob: -9.155183792114258
    7. '           ' → logprob: -13.905183792114258
    8. '
' → logprob: -14.280183792114258
    9. '```' → logprob: -15.280183792114258
    10. '{return' → logprob: -15.405183792114258

Token 206: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.014163628220558167
    2. 'f' → logprob: -4.264163494110107
    3. '(f' → logprob: -16.764163970947266
    4. ' ' → logprob: -17.139163970947266
    5. '	f' → logprob: -18.014163970947266
    6. 'F' → logprob: -19.014163970947266
    7. ' F' → logprob: -19.139163970947266
    8. ''f' → logprob: -19.139163970947266
    9. ''' → logprob: -19.264163970947266
    10. ' ' → logprob: -19.389163970947266

Token 207: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.019570574164390564
    2. '"<' → logprob: -4.019570350646973
    3. ''Re' → logprob: -6.894570350646973
    4. ''' → logprob: -8.144570350646973
    5. ''<' → logprob: -9.644570350646973
    6. 'f' → logprob: -10.519570350646973
    7. 'Rectangle' → logprob: -11.894570350646973
    8. '"{' → logprob: -12.394570350646973
    9. '(Rect' → logprob: -12.769570350646973
    10. '"class' → logprob: -12.769570350646973

Token 208: 'Rect' (ID: 7872)
  Prédit: 'Rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -0.0001146291324403137
    2. '<' → logprob: -9.750114440917969
    3. 'Rect' → logprob: -10.875114440917969
    4. '"' → logprob: -11.500114440917969
    5. '(Rect' → logprob: -11.625114440917969
    6. ''' → logprob: -12.000114440917969
    7. ''Re' → logprob: -12.250114440917969
    8. ' Rectangle' → logprob: -12.875114440917969
    9. '.Rectangle' → logprob: -13.125114440917969
    10. '{' → logprob: -13.875114440917969

Token 209: '(({' (ID: 66373)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -1.4617256056226324e-05
    2. '(angle' → logprob: -11.500014305114746
    3. '(top' → logprob: -12.875014305114746
    4. '({' → logprob: -14.375014305114746
    5. '{' → logprob: -14.500014305114746
    6. 'angular' → logprob: -15.000014305114746
    7. 'ANGLE' → logprob: -15.625014305114746
    8. '(' → logprob: -15.750014305114746
    9. '{{' → logprob: -16.750015258789062
    10. 'angel' → logprob: -17.125015258789062

Token 210: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07922772318124771
    2. '{' → logprob: -2.5792276859283447
    3. ' self' → logprob: -8.079227447509766
    4. '
' → logprob: -11.204227447509766
    5. '{
' → logprob: -12.454227447509766
    6. ' {' → logprob: -12.454227447509766
    7. '(self' → logprob: -13.079227447509766
    8. '   ' → logprob: -13.829227447509766
    9. '}{' → logprob: -14.329227447509766
    10. '0' → logprob: -14.454227447509766

Token 211: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -4.842555426876061e-06
    2. 'top' → logprob: -13.250004768371582
    3. '.' → logprob: -13.625004768371582
    4. '.left' → logprob: -13.875004768371582
    5. ' .' → logprob: -15.125004768371582
    6. 'self' → logprob: -15.125004768371582
    7. '.self' → logprob: -15.875004768371582
    8. '.bottom' → logprob: -16.2500057220459
    9. '{' → logprob: -16.2500057220459
    10. '}.' → logprob: -17.0000057220459

Token 212: '},{' (ID: 34684)
  Prédit: '},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.862358033657074
    2. '},{' → logprob: -0.862358033657074
    3. ',' → logprob: -1.8623580932617188
    4. '),' → logprob: -8.737358093261719
    5. '{' → logprob: -8.987358093261719
    6. ',{' → logprob: -10.237358093261719
    7. ',
' → logprob: -10.987358093261719
    8. '},
' → logprob: -11.612358093261719
    9. ' },' → logprob: -12.362358093261719
    10. ' ,' → logprob: -12.487358093261719

Token 213: 'self' (ID: 1156)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2774040699005127
    2. 'self' → logprob: -1.5274040699005127
    3. ' self' → logprob: -4.402403831481934
    4. ' {' → logprob: -4.402403831481934
    5. ' )' → logprob: -8.152403831481934
    6. ')' → logprob: -8.527403831481934
    7. ' ){' → logprob: -9.902403831481934
    8. ' ' → logprob: -10.277403831481934
    9. ' ' → logprob: -10.652403831481934
    10. ',self' → logprob: -11.652403831481934

Token 214: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.014587115496397018
    2. '},{' → logprob: -4.389586925506592
    3. 'left' → logprob: -6.264586925506592
    4. '),' → logprob: -10.38958740234375
    5. '.right' → logprob: -10.38958740234375
    6. '.top' → logprob: -10.38958740234375
    7. '),(' → logprob: -10.51458740234375
    8. '},' → logprob: -11.01458740234375
    9. '{' → logprob: -12.26458740234375
    10. ')' → logprob: -12.51458740234375

Token 215: '})' (ID: 9263)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4803062379360199
    2. '},{' → logprob: -1.1053062677383423
    3. '),(' → logprob: -3.9803061485290527
    4. '},' → logprob: -3.9803061485290527
    5. '}),' → logprob: -5.105306148529053
    6. '),
' → logprob: -5.605306148529053
    7. ')' → logprob: -6.980306148529053
    8. '}' → logprob: -7.480306148529053
    9. '{' → logprob: -7.730306148529053
    10. ',' → logprob: -7.730306148529053

Token 216: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13759057223796844
    2. '),' → logprob: -2.6375906467437744
    3. '-' → logprob: -3.1375906467437744
    4. ')-' → logprob: -5.387590408325195
    5. ',{' → logprob: -5.762590408325195
    6. ' ,' → logprob: -6.637590408325195
    7. ' -' → logprob: -6.762590408325195
    8. ',
' → logprob: -7.012590408325195
    9. '{' → logprob: -7.137590408325195
    10. '),(' → logprob: -7.137590408325195

Token 217: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.003056142246350646
    2. '{' → logprob: -5.878056049346924
    3. ' ({' → logprob: -8.503056526184082
    4. '(' → logprob: -10.503056526184082
    5. '>' → logprob: -11.628056526184082
    6. '>{' → logprob: -13.128056526184082
    7. '({
' → logprob: -13.628056526184082
    8. ' {' → logprob: -13.628056526184082
    9. ')' → logprob: -13.753056526184082
    10. '(({' → logprob: -13.753056526184082

Token 218: 'self' (ID: 1156)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.02975558675825596
    2. 'self' → logprob: -3.5297555923461914
    3. ' {' → logprob: -13.404755592346191
    4. ' self' → logprob: -13.654755592346191
    5. '(self' → logprob: -15.154755592346191
    6. '{
' → logprob: -15.279755592346191
    7. '
' → logprob: -15.279755592346191
    8. '{lng' → logprob: -15.529755592346191
    9. '{return' → logprob: -15.654755592346191
    10. '}{' → logprob: -15.779755592346191

Token 219: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -4.35837464465294e-05
    2. '.right' → logprob: -10.250043869018555
    3. 'bottom' → logprob: -11.875043869018555
    4. '.' → logprob: -14.875043869018555
    5. '.top' → logprob: -15.750043869018555
    6. '.Bottom' → logprob: -15.750043869018555
    7. '.self' → logprob: -16.000043869018555
    8. '.bot' → logprob: -16.125043869018555
    9. 'self' → logprob: -16.250043869018555
    10. '.b' → logprob: -17.125043869018555

Token 220: '},{' (ID: 34684)
  Prédit: ',{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',{' → logprob: -0.31895291805267334
    2. ',' → logprob: -1.3189529180526733
    3. ',self' → logprob: -6.193953037261963
    4. '},{' → logprob: -6.318953037261963
    5. ',{
' → logprob: -6.568953037261963
    6. '{' → logprob: -8.193952560424805
    7. ',
' → logprob: -10.068952560424805
    8. ' ,' → logprob: -10.693952560424805
    9. ',int' → logprob: -11.318952560424805
    10. '',{' → logprob: -11.443952560424805

Token 221: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005949183367192745
    2. '{' → logprob: -5.255949020385742
    3. ' self' → logprob: -7.255949020385742
    4. '(self' → logprob: -12.255949020385742
    5. ',self' → logprob: -13.380949020385742
    6. '	self' → logprob: -14.255949020385742
    7. '$self' → logprob: -14.880949020385742
    8. '<|end|>' → logprob: -14.880949020385742
    9. '{
' → logprob: -15.005949020385742
    10. ' {' → logprob: -15.380949020385742

Token 222: '.right' (ID: 17627)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02325642853975296
    2. '.right' → logprob: -3.773256540298462
    3. ' right' → logprob: -11.773256301879883
    4. '	right' → logprob: -13.023256301879883
    5. ',right' → logprob: -14.523256301879883
    6. '_right' → logprob: -15.023256301879883
    7. ':right' → logprob: -16.148256301879883
    8. '[right' → logprob: -16.273256301879883
    9. 'rightness' → logprob: -17.648256301879883
    10. ' ' → logprob: -18.273256301879883

Token 223: '}))' (ID: 144625)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10749085992574692
    2. '}))' → logprob: -2.6074907779693604
    3. '})' → logprob: -3.6074907779693604
    4. ')' → logprob: -7.1074910163879395
    5. ')))' → logprob: -8.982490539550781
    6. '}' → logprob: -9.607490539550781
    7. ')"' → logprob: -10.232490539550781
    8. '"))' → logprob: -11.107490539550781
    9. ''))' → logprob: -13.232490539550781
    10. ' ))' → logprob: -13.357490539550781

Token 224: '"


' (ID: 36470)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.25274908542633057
    2. '"' → logprob: -1.5027490854263306
    3. '")' → logprob: -7.252748966217041
    4. ')' → logprob: -10.1277494430542
    5. '}"' → logprob: -10.3777494430542
    6. '"""' → logprob: -11.1277494430542
    7. '"
' → logprob: -11.3777494430542
    8. '')"' → logprob: -11.7527494430542
    9. ')"
' → logprob: -13.6277494430542
    10. ']"' → logprob: -13.6277494430542

Token 225: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0021767891012132168
    2. 'class' → logprob: -6.252176761627197
    3. 'from' → logprob: -8.377177238464355
    4. 'import' → logprob: -11.127177238464355
    5. ' def' → logprob: -12.877177238464355
    6. '   ' → logprob: -14.877177238464355
    7. '#' → logprob: -15.877177238464355
    8. '
' → logprob: -16.12717628479004
    9. 'ndef' → logprob: -16.75217628479004
    10. ' class' → logprob: -17.12717628479004

Token 226: ' Spell' (ID: 69108)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -1.1918708086013794
    2. ' Solution' → logprob: -1.3168708086013794
    3. ' Solver' → logprob: -1.8168708086013794
    4. ' Enemy' → logprob: -2.56687068939209
    5. 'Enemy' → logprob: -3.44187068939209
    6. 'Solver' → logprob: -3.44187068939209
    7. ' Rectangle' → logprob: -4.19187068939209
    8. ' Grid' → logprob: -4.31687068939209
    9. 'Grid' → logprob: -4.44187068939209
    10. 'Rectangle' → logprob: -4.44187068939209

Token 227: 'Caster' (ID: 185964)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030008815228939056
    2. ':
' → logprob: -5.878000736236572
    3. 'Optimizer' → logprob: -10.12800121307373
    4. 'Caster' → logprob: -10.37800121307373
    5. '(' → logprob: -11.37800121307373
    6. ':

' → logprob: -11.87800121307373
    7. 'Attempt' → logprob: -12.00300121307373
    8. '():' → logprob: -12.25300121307373
    9. 'Processor' → logprob: -12.37800121307373
    10. 'Planner' → logprob: -12.50300121307373

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011363278143107891
    2. ':
' → logprob: -4.511363506317139
    3. ' :' → logprob: -8.13636302947998
    4. ' :
' → logprob: -11.51136302947998
    5. '<|end|>' → logprob: -12.38636302947998
    6. '(' → logprob: -12.76136302947998
    7. ':

' → logprob: -13.51136302947998
    8. ':def' → logprob: -13.63636302947998
    9. '(object' → logprob: -14.76136302947998
    10. ':
' → logprob: -14.76136302947998

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026691069826483727
    2. ' def' → logprob: -3.65169095993042
    3. 'def' → logprob: -8.026691436767578
    4. '
' → logprob: -11.026691436767578
    5. '    
' → logprob: -11.151691436767578
    6. '<|end|>' → logprob: -11.151691436767578
    7. '	def' → logprob: -12.276691436767578
    8. ' class' → logprob: -12.776691436767578
    9. 'class' → logprob: -12.776691436767578
    10. ' 
' → logprob: -13.401691436767578

Token 230: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06402261555194855
    2. 'def' (adapté à ' def') → logprob: -2.8140225410461426
    3. '   ' → logprob: -6.189022541046143
    4. ' ' → logprob: -14.8140230178833
    5. '	def' → logprob: -15.4390230178833
    6. '  ' → logprob: -15.9390230178833
    7. '    ' → logprob: -16.189022064208984
    8. 'class' → logprob: -16.439022064208984
    9. ':def' → logprob: -17.689022064208984
    10. 'import' → logprob: -17.814022064208984

Token 231: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.024792317301034927
    2. ' init' → logprob: -4.524792194366455
    3. ' def' → logprob: -5.024792194366455
    4. '_init' → logprob: -5.524792194366455
    5. 'init' → logprob: -6.649792194366455
    6. '__' → logprob: -6.899792194366455
    7. ' ' → logprob: -7.649792194366455
    8. ' _' → logprob: -9.274792671203613
    9. ' ' → logprob: -9.399792671203613
    10. 'def' → logprob: -10.149792671203613

Token 232: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.8889261304575484e-06
    2. ' init' → logprob: -13.875003814697266
    3. 'class' → logprob: -13.875003814697266
    4. '_init' → logprob: -15.125003814697266
    5. '__' → logprob: -15.250003814697266
    6. 'int' → logprob: -15.250003814697266
    7. 'iter' → logprob: -15.375003814697266
    8. 'new' → logprob: -15.375003814697266
    9. 'def' → logprob: -15.750003814697266
    10. 'i' → logprob: -15.875003814697266

Token 233: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0025064588990062475
    2. '(self' → logprob: -6.127506256103516
    3. '__' → logprob: -8.752506256103516
    4. '__(
' → logprob: -9.627506256103516
    5. '(' → logprob: -9.877506256103516
    6. '_(' → logprob: -11.002506256103516
    7. ' (' → logprob: -11.127506256103516
    8. 'self' → logprob: -12.252506256103516
    9. ',' → logprob: -12.752506256103516
    10. '<>(' → logprob: -13.377506256103516

Token 234: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00035453110467642546
    2. ' self' → logprob: -8.125354766845703
    3. 'n' → logprob: -10.125354766845703
    4. '   ' → logprob: -11.750354766845703
    5. '(self' → logprob: -12.875354766845703
    6. '
' → logprob: -13.000354766845703
    7. '       ' → logprob: -13.250354766845703
    8. ',' → logprob: -13.500354766845703
    9. '0' → logprob: -14.250354766845703
    10. '1' → logprob: -14.875354766845703

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002791803563013673
    2. 'self' → logprob: -6.127791881561279
    3. ' ,' → logprob: -7.502791881561279
    4. ' self' → logprob: -10.377791404724121
    5. ',self' → logprob: -11.752791404724121
    6. '<|end|>' → logprob: -12.377791404724121
    7. ',n' → logprob: -12.627791404724121
    8. ',
' → logprob: -12.752791404724121
    9. 'n' → logprob: -13.627791404724121
    10. '<|end|>' → logprob: -13.752791404724121

Token 236: ' enemy' (ID: 20935)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8920011520385742
    2. 'n' → logprob: -1.3920011520385742
    3. 'self' → logprob: -1.6420011520385742
    4. ' self' → logprob: -2.267001152038574
    5. ' grid' → logprob: -3.767001152038574
    6. ' enemy' → logprob: -4.892001152038574
    7. '   ' → logprob: -5.642001152038574
    8. 'grid' → logprob: -5.642001152038574
    9. 'enemy' → logprob: -5.642001152038574
    10. ' size' → logprob: -6.892001152038574

Token 237: '_grid' (ID: 34614)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.5323442816734314
    2. '_grid' → logprob: -0.9073442816734314
    3. 'grid' → logprob: -5.282344341278076
    4. 's' → logprob: -5.657344341278076
    5. '_n' → logprob: -9.282343864440918
    6. 'n' → logprob: -9.532343864440918
    7. '_size' → logprob: -9.657343864440918
    8. ' grid' → logprob: -9.907343864440918
    9. '_gr' → logprob: -10.157343864440918
    10. '):
' → logprob: -10.282343864440918

Token 238: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036833323538303375
    2. '):' → logprob: -5.878683567047119
    3. ',n' → logprob: -7.128683567047119
    4. ' ,' → logprob: -10.503683090209961
    5. '):
' → logprob: -10.878683090209961
    6. ':' → logprob: -11.128683090209961
    7. '   ' → logprob: -12.628683090209961
    8. 'n' → logprob: -12.628683090209961
    9. '(n' → logprob: -13.003683090209961
    10. ' ):' → logprob: -14.003683090209961

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005423958413302898
    2. 'self' → logprob: -5.7554240226745605
    3. ' self' → logprob: -7.1304240226745605
    4. '   ' → logprob: -7.3804240226745605
    5. '<|end|>' → logprob: -7.6304240226745605
    6. ',' → logprob: -8.755423545837402
    7. '
' → logprob: -10.005423545837402
    8. '(self' → logprob: -10.255423545837402
    9. '        
' → logprob: -10.380423545837402
    10. '):
' → logprob: -11.630423545837402

Token 240: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2523702383041382
    2. '       ' → logprob: -1.7523702383041382
    3. ' self' → logprob: -3.0023703575134277
    4. '   ' → logprob: -12.25236988067627
    5. '	self' → logprob: -12.87736988067627
    6. ' ' → logprob: -13.25236988067627
    7. '(self' → logprob: -14.25236988067627
    8. '
' → logprob: -14.75236988067627
    9. 'class' → logprob: -15.50236988067627
    10. '```' → logprob: -15.87736988067627

Token 241: '.original' (ID: 65193)
  Prédit: '.enemy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.enemy' → logprob: -0.0095622343942523
    2. '.' → logprob: -4.884562015533447
    3. '.grid' → logprob: -6.884562015533447
    4. '.en' → logprob: -7.884562015533447
    5. ' .' → logprob: -8.134562492370605
    6. '.n' → logprob: -8.634562492370605
    7. 'enemy' → logprob: -10.134562492370605
    8. ' enemy' → logprob: -11.509562492370605
    9. '.em' → logprob: -11.759562492370605
    10. '.current' → logprob: -11.884562492370605

Token 242: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.10195712000131607
    2. ' =' → logprob: -2.601957082748413
    3. '_enemy' → logprob: -4.351957321166992
    4. '=' → logprob: -5.726957321166992
    5. '_' → logprob: -5.851957321166992
    6. 'grid' → logprob: -7.226957321166992
    7. '.grid' → logprob: -7.351957321166992
    8. 'Grid' → logprob: -7.351957321166992
    9. ' _' → logprob: -7.476957321166992
    10. ' ' → logprob: -8.476957321166992

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519296407699585
    2. '=' → logprob: -1.5019296407699585
    3. ' ' → logprob: -15.00192928314209
    4. '   ' → logprob: -16.251930236816406
    5. ',' → logprob: -17.126930236816406
    6. ' =
' → logprob: -17.251930236816406
    7. ')' → logprob: -17.626930236816406
    8. '=
' → logprob: -17.751930236816406
    9. '    ' → logprob: -17.876930236816406
    10. '<|end|>' → logprob: -18.126930236816406

Token 244: ' enemy' (ID: 20935)
  Prédit: ' enemy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enemy' → logprob: -0.34845393896102905
    2. 'enemy' → logprob: -1.2234539985656738
    3. '(enemy' → logprob: -12.848453521728516
    4. 'Enemy' → logprob: -12.848453521728516
    5. '.enemy' → logprob: -13.723453521728516
    6. ' Enemy' → logprob: -13.848453521728516
    7. ' enemigo' → logprob: -14.223453521728516
    8. '_enemy' → logprob: -15.348453521728516
    9. ' ' → logprob: -15.473453521728516
    10. ' ' → logprob: -15.910953521728516

Token 245: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -5.7888184528565034e-05
    2. '_' → logprob: -10.3750581741333
    3. 'Grid' → logprob: -11.1250581741333
    4. 'grid' → logprob: -11.5000581741333
    5. '_gr' → logprob: -15.0000581741333
    6. '_g' → logprob: -15.1250581741333
    7. ' _' → logprob: -15.1250581741333
    8. '_GRID' → logprob: -15.5000581741333
    9. '_cast' → logprob: -15.6250581741333
    10. '_
' → logprob: -15.7500581741333

Token 246: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4267846941947937
    2. '
' → logprob: -1.1767847537994385
    3. '<|end|>' → logprob: -3.3017847537994385
    4. 'self' → logprob: -7.176784515380859
    5. '<|end|>' → logprob: -7.551784515380859
    6. ' self' → logprob: -8.17678451538086
    7. ',' → logprob: -8.30178451538086
    8. '   ' → logprob: -8.42678451538086
    9. '        
' → logprob: -9.42678451538086
    10. ',
' → logprob: -9.80178451538086

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004438971809577197
    2. '   ' → logprob: -8.625443458557129
    3. 'self' → logprob: -8.750443458557129
    4. ' self' → logprob: -9.375443458557129
    5. '
' → logprob: -11.250443458557129
    6. '<|end|>' → logprob: -12.750443458557129
    7. '        
' → logprob: -13.250443458557129
    8. ' ' → logprob: -14.500443458557129
    9. ',' → logprob: -14.625443458557129
    10. 'def' → logprob: -14.875443458557129

Token 248: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003764535649679601
    2. '       ' → logprob: -8.25037670135498
    3. ' self' → logprob: -9.12537670135498
    4. '
' → logprob: -12.62537670135498
    5. '   ' → logprob: -14.00037670135498
    6. '        
' → logprob: -14.25037670135498
    7. 'from' → logprob: -14.50037670135498
    8. 'def' → logprob: -15.25037670135498
    9. 'import' → logprob: -15.62537670135498
    10. '#' → logprob: -15.62537670135498

Token 249: '.n' (ID: 1835)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.13902941346168518
    2. '.grid' → logprob: -2.2640295028686523
    3. '.' → logprob: -4.514029502868652
    4. ' .' → logprob: -5.389029502868652
    5. '.best' → logprob: -6.264029502868652
    6. '.enemy' → logprob: -6.264029502868652
    7. 'current' → logprob: -6.764029502868652
    8. '.available' → logprob: -6.889029502868652
    9. '.queue' → logprob: -7.639029502868652
    10. '.remaining' → logprob: -7.889029502868652

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15289165079593658
    2. '=' → logprob: -2.0278916358947754
    3. '<|end|>' → logprob: -4.777891635894775
    4. '   ' → logprob: -7.402891635894775
    5. '<|end|>' → logprob: -7.902891635894775
    6. ' ' → logprob: -8.402892112731934
    7. '    ' → logprob: -8.527892112731934
    8. '       ' → logprob: -9.527892112731934
    9. ',' → logprob: -9.777892112731934
    10. '  ' → logprob: -10.152892112731934

Token 251: ' enemy' (ID: 20935)
  Prédit: 'enemy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enemy' → logprob: -0.281948447227478
    2. ' enemy' → logprob: -1.406948447227478
    3. 'self' → logprob: -7.406948566436768
    4. ' self' → logprob: -8.65694808959961
    5. '.enemy' → logprob: -11.90694808959961
    6. '(enemy' → logprob: -12.65694808959961
    7. '   ' → logprob: -13.28194808959961
    8. '_enemy' → logprob: -13.78194808959961
    9. ' enemigo' → logprob: -13.78194808959961
    10. '       ' → logprob: -14.03194808959961

Token 252: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.007069482002407312
    2. 'grid' → logprob: -5.2570695877075195
    3. 'Grid' → logprob: -7.3820695877075195
    4. '   ' → logprob: -8.00706958770752
    5. '       ' → logprob: -8.75706958770752
    6. '.grid' → logprob: -9.13206958770752
    7. 'self' → logprob: -9.13206958770752
    8. '_gr' → logprob: -9.13206958770752
    9. '_GRID' → logprob: -9.38206958770752
    10. 'gr' → logprob: -9.50706958770752

Token 253: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -5.3358446166384965e-05
    2. '.' → logprob: -10.000053405761719
    3. ' .' → logprob: -12.000053405761719
    4. '`.' → logprob: -14.250053405761719
    5. '.grid' → logprob: -15.375053405761719
    6. 'n' → logprob: -15.625053405761719
    7. ').' → logprob: -15.625053405761719
    8. '```' → logprob: -15.875053405761719
    9. '   ' → logprob: -16.12505340576172
    10. '​.' → logprob: -16.87505340576172

Token 254: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015756867360323668
    2. '
' → logprob: -6.751575469970703
    3. 'self' → logprob: -8.376575469970703
    4. '<|end|>' → logprob: -9.001575469970703
    5. ' self' → logprob: -10.876575469970703
    6. '        
' → logprob: -11.001575469970703
    7. '   ' → logprob: -12.001575469970703
    8. ',' → logprob: -13.376575469970703
    9. '<|end|>' → logprob: -13.626575469970703
    10. '(self' → logprob: -13.626575469970703

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007785348570905626
    2. 'self' → logprob: -8.000778198242188
    3. '<|end|>' → logprob: -8.125778198242188
    4. ' self' → logprob: -9.125778198242188
    5. '   ' → logprob: -11.500778198242188
    6. '
' → logprob: -12.000778198242188
    7. '<|end|>' → logprob: -12.000778198242188
    8. '	self' → logprob: -12.750778198242188
    9. '        
' → logprob: -12.875778198242188
    10. 'from' → logprob: -13.375778198242188

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0016792253591120243
    2. 'from' → logprob: -6.626679420471191
    3. ' self' → logprob: -9.126679420471191
    4. '       ' → logprob: -9.251679420471191
    5. '
' → logprob: -9.501679420471191
    6. 'import' → logprob: -9.876679420471191
    7. '#' → logprob: -10.876679420471191
    8. 'def' → logprob: -14.001679420471191
    9. '        
' → logprob: -14.376679420471191
    10. '   ' → logprob: -14.501679420471191

Token 257: '.vis' (ID: 15800)
  Prédit: '.grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.5451926589012146
    2. '.current' → logprob: -1.0451927185058594
    3. '.state' → logprob: -4.545192718505859
    4. 'current' → logprob: -4.795192718505859
    5. '.vis' → logprob: -4.795192718505859
    6. '.best' → logprob: -4.795192718505859
    7. '.' → logprob: -5.545192718505859
    8. '.memo' → logprob: -5.670192718505859
    9. '.enemy' → logprob: -5.670192718505859
    10. '.def' → logprob: -6.045192718505859

Token 258: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -2.4272752852994017e-05
    2. 'isted' → logprob: -11.00002384185791
    3. '_' → logprob: -12.75002384185791
    4. 'it' → logprob: -13.87502384185791
    5. '=' → logprob: -14.50002384185791
    6. 'ite' → logprob: -14.62502384185791
    7. 'ible' → logprob: -14.62502384185791
    8. 'ed' → logprob: -14.75002384185791
    9. 'its' → logprob: -15.00002384185791
    10. '   ' → logprob: -15.37502384185791

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25196900963783264
    2. '=' → logprob: -1.5019689798355103
    3. '<|end|>' → logprob: -11.126969337463379
    4. ' ' → logprob: -11.376969337463379
    5. '=set' → logprob: -11.501969337463379
    6. '[' → logprob: -14.251969337463379
    7. ')' → logprob: -14.501969337463379
    8. ',' → logprob: -14.751969337463379
    9. '={}' → logprob: -15.251969337463379
    10. 's' → logprob: -15.251969337463379

Token 260: ' {}
' (ID: 11421)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.48119160532951355
    2. 'set' → logprob: -0.9811916351318359
    3. '{}' → logprob: -5.106191635131836
    4. ' {}' → logprob: -6.981191635131836
    5. '{' → logprob: -9.856191635131836
    6. ' {' → logprob: -10.606191635131836
    7. '=set' → logprob: -11.356191635131836
    8. '	set' → logprob: -11.606191635131836
    9. '   ' → logprob: -13.731191635131836
    10. ' ' → logprob: -14.231191635131836

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5632584095001221
    2. '   ' → logprob: -1.188258409500122
    3. '<|end|>' → logprob: -2.563258409500122
    4. 'def' → logprob: -3.188258409500122
    5. ' def' → logprob: -6.063258171081543
    6. '<|end|>' → logprob: -6.313258171081543
    7. '        
' → logprob: -7.063258171081543
    8. '
' → logprob: -7.188258171081543
    9. 'self' → logprob: -7.813258171081543
    10. '	def' → logprob: -7.938258171081543

Token 262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15757256746292114
    2. '       ' → logprob: -2.2825725078582764
    3. 'from' → logprob: -3.7825725078582764
    4. 'def' → logprob: -4.1575727462768555
    5. '   ' → logprob: -5.7825727462768555
    6. ' self' → logprob: -6.4075727462768555
    7. 'import' → logprob: -7.9075727462768555
    8. ' from' → logprob: -9.032572746276855
    9. '	self' → logprob: -9.907572746276855
    10. '
' → logprob: -10.907572746276855

Token 263: '.queue' (ID: 60866)
  Prédit: '.queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.queue' → logprob: -0.7673446536064148
    2. '.best' → logprob: -1.2673447132110596
    3. '.min' → logprob: -2.5173447132110596
    4. ' .' → logprob: -3.0173447132110596
    5. '.' → logprob: -3.2673447132110596
    6. '.steps' → logprob: -4.2673444747924805
    7. '.stack' → logprob: -4.5173444747924805
    8. '.grid' → logprob: -4.7673444747924805
    9. 'queue' → logprob: -4.8923444747924805
    10. ' queue' → logprob: -5.2673444747924805

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005937924608588219
    2. '=' → logprob: -5.1309380531311035
    3. '=[]' → logprob: -12.755937576293945
    4. ' ' → logprob: -12.880937576293945
    5. '<|end|>' → logprob: -13.130937576293945
    6. ' =[' → logprob: -13.880937576293945
    7. ' =)' → logprob: -15.630937576293945
    8. '.append' → logprob: -15.880937576293945
    9. ',' → logprob: -16.005937576293945
    10. '	' → logprob: -16.130937576293945

Token 265: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.26410454511642456
    2. '[]' → logprob: -1.5141046047210693
    3. ' [(' → logprob: -5.38910436630249
    4. '[(' → logprob: -5.76410436630249
    5. 'deque' → logprob: -5.76410436630249
    6. ' [' → logprob: -7.88910436630249
    7. '[' → logprob: -8.139104843139648
    8. 'collections' → logprob: -8.514104843139648
    9. ' deque' → logprob: -8.764104843139648
    10. '[]}' → logprob: -9.639104843139648

Token 266: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3304932415485382
    2. '       ' → logprob: -1.9554932117462158
    3. '<|end|>' → logprob: -2.205493211746216
    4. 'def' → logprob: -4.455493450164795
    5. ' def' → logprob: -5.205493450164795
    6. '
' → logprob: -5.205493450164795
    7. '<|end|>' → logprob: -5.705493450164795
    8. ' ' → logprob: -7.080493450164795
    9. 'self' → logprob: -7.330493450164795
    10. ' self' → logprob: -7.330493450164795

Token 267: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.8419541120529175
    2. '       ' → logprob: -1.0919541120529175
    3. ' self' → logprob: -1.9669541120529175
    4. 'import' → logprob: -3.091954231262207
    5. 'def' → logprob: -3.966954231262207
    6. '   ' → logprob: -4.216954231262207
    7. 'from' → logprob: -4.841954231262207
    8. ' def' → logprob: -5.841954231262207
    9. ' from' → logprob: -6.091954231262207
    10. ' import' → logprob: -7.216954231262207

Token 268: '.parent' (ID: 17454)
  Prédit: '.queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.queue' → logprob: -0.07622420787811279
    2. ' .' → logprob: -3.9512243270874023
    3. '.' → logprob: -4.076224327087402
    4. '.grid' → logprob: -4.576224327087402
    5. '.current' → logprob: -5.326224327087402
    6. 'queue' → logprob: -5.826224327087402
    7. '.push' → logprob: -6.076224327087402
    8. '.def' → logprob: -6.326224327087402
    9. '.enqueue' → logprob: -6.326224327087402
    10. '.from' → logprob: -6.326224327087402

Token 269: '_map' (ID: 11824)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5253331661224365
    2. '=' → logprob: -0.9003331661224365
    3. 's' → logprob: -6.650333404541016
    4. '<|end|>' → logprob: -7.900333404541016
    5. '[' → logprob: -8.650333404541016
    6. '<|end|>' → logprob: -9.025333404541016
    7. '_map' → logprob: -9.650333404541016
    8. ',' → logprob: -9.900333404541016
    9. '=None' → logprob: -10.775333404541016
    10. 'es' → logprob: -11.150333404541016

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869036138057709
    2. '=' → logprob: -1.1369036436080933
    3. '<|end|>' → logprob: -10.886903762817383
    4. ' ' → logprob: -12.261903762817383
    5. '={}' → logprob: -12.761903762817383
    6. '=[]' → logprob: -13.511903762817383
    7. ',' → logprob: -13.636903762817383
    8. '   ' → logprob: -13.886903762817383
    9. ')' → logprob: -14.761903762817383
    10. ':' → logprob: -14.761903762817383

Token 271: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00015979631280060858
    2. ' {}' → logprob: -8.750160217285156
    3. '{}
' → logprob: -13.875160217285156
    4. '{' → logprob: -14.875160217285156
    5. '{}

' → logprob: -16.875160217285156
    6. '{},' → logprob: -18.500160217285156
    7. '{})' → logprob: -19.000160217285156
    8. '={}' → logprob: -19.000160217285156
    9. '{}\' → logprob: -19.125160217285156
    10. 'dict' → logprob: -19.500160217285156

Token 272: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1688593477010727
    2. 'def' → logprob: -2.4188592433929443
    3. '<|end|>' → logprob: -3.4188592433929443
    4. ' def' → logprob: -3.5438592433929443
    5. '<|end|>' → logprob: -6.418859481811523
    6. '    
' → logprob: -7.043859481811523
    7. '	def' → logprob: -7.168859481811523
    8. '       ' → logprob: -7.543859481811523
    9. '
' → logprob: -7.668859481811523
    10. ',' → logprob: -9.418859481811523

Token 273: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.8900480270385742
    2. 'def' → logprob: -1.5150480270385742
    3. '       ' → logprob: -1.7650480270385742
    4. ' self' → logprob: -2.515048027038574
    5. '   ' → logprob: -2.765048027038574
    6. 'import' → logprob: -3.640048027038574
    7. ' def' → logprob: -3.765048027038574
    8. ' ' → logprob: -6.140048027038574
    9. 'from' → logprob: -7.015048027038574
    10. ' import' → logprob: -8.140048027038574

Token 274: '.action' (ID: 22351)
  Prédit: '.queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.queue' → logprob: -0.16737671196460724
    2. '.current' → logprob: -3.417376756668091
    3. ' .' → logprob: -3.667376756668091
    4. '.grid' → logprob: -4.042376518249512
    5. '.def' → logprob: -4.292376518249512
    6. '.' → logprob: -4.417376518249512
    7. '.steps' → logprob: -4.917376518249512
    8. '.vis' → logprob: -5.167376518249512
    9. '.front' → logprob: -5.292376518249512
    10. '.depth' → logprob: -5.292376518249512

Token 275: '_map' (ID: 11824)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.585173487663269
    2. 's' → logprob: -1.460173487663269
    3. '_map' → logprob: -1.585173487663269
    4. '_' → logprob: -5.835173606872559
    5. '_stack' → logprob: -6.460173606872559
    6. '_sequence' → logprob: -7.460173606872559
    7. '_list' → logprob: -8.460173606872559
    8. '=' → logprob: -8.835173606872559
    9. '_s' → logprob: -9.335173606872559
    10. '_index' → logprob: -9.585173606872559

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805423527956009
    2. '=' → logprob: -3.2880542278289795
    3. '={}' → logprob: -11.538054466247559
    4. ' ' → logprob: -13.538054466247559
    5. '=[]' → logprob: -14.288054466247559
    6. ' ={' → logprob: -15.038054466247559
    7. '   ' → logprob: -15.538054466247559
    8. '  ' → logprob: -15.788054466247559
    9. '=None' → logprob: -16.288053512573242
    10. ':' → logprob: -16.663053512573242

Token 277: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0002632430987432599
    2. ' {}' → logprob: -8.250263214111328
    3. '{}
' → logprob: -13.250263214111328
    4. '[]' → logprob: -16.375263214111328
    5. '{' → logprob: -16.875263214111328
    6. '{}

' → logprob: -17.125263214111328
    7. '   ' → logprob: -17.750263214111328
    8. '{})' → logprob: -17.750263214111328
    9. '={}' → logprob: -18.375263214111328
    10. '{}\' → logprob: -18.750263214111328

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12005046755075455
    2. '<|end|>' → logprob: -2.9950504302978516
    3. 'def' → logprob: -3.4950504302978516
    4. ' def' → logprob: -3.6200504302978516
    5. '
' → logprob: -5.495050430297852
    6. '<|end|>' → logprob: -6.995050430297852
    7. '    
' → logprob: -8.245050430297852
    8. '	def' → logprob: -8.245050430297852
    9. ' ' → logprob: -9.120050430297852
    10. '       ' → logprob: -9.995050430297852

Token 279: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07551692426204681
    2. ' def' → logprob: -2.700516939163208
    3. '   ' → logprob: -5.200516700744629
    4. ' ' → logprob: -10.950516700744629
    5. ')' → logprob: -11.075516700744629
    6. '	def' → logprob: -11.950516700744629
    7. 'de' → logprob: -12.825516700744629
    8. 'import' → logprob: -12.950516700744629
    9. 'from' → logprob: -13.700516700744629
    10. '  ' → logprob: -13.700516700744629

Token 280: ' generate' (ID: 10419)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3736592233181
    2. ' bfs' → logprob: -1.4986592531204224
    3. 'solve' → logprob: -3.123659133911133
    4. ' solve' → logprob: -3.623659133911133
    5. 'enqueue' → logprob: -5.373659133911133
    6. ' enqueue' → logprob: -5.623659133911133
    7. ' run' → logprob: -6.498659133911133
    8. 'run' → logprob: -6.748659133911133
    9. ' cast' → logprob: -6.873659133911133
    10. '_b' → logprob: -6.873659133911133

Token 281: '_all' (ID: 13305)
  Prédit: '_rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.47089558839797974
    2. '_all' → logprob: -1.345895528793335
    3. '_sp' → logprob: -3.095895528793335
    4. '_rectangle' → logprob: -3.470895528793335
    5. '_' → logprob: -3.970895528793335
    6. '_possible' → logprob: -4.720895767211914
    7. '_moves' → logprob: -5.720895767211914
    8. '_actions' → logprob: -6.470895767211914
    9. '(self' → logprob: -6.720895767211914
    10. '_candidates' → logprob: -7.220895767211914

Token 282: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.024448389187455177
    2. '_possible' → logprob: -4.149448394775391
    3. '_sp' → logprob: -5.774448394775391
    4. '_rectangle' → logprob: -6.024448394775391
    5. '_actions' → logprob: -7.274448394775391
    6. '_sub' → logprob: -7.524448394775391
    7. '_moves' → logprob: -7.649448394775391
    8. '_' → logprob: -7.774448394775391
    9. '_candidates' → logprob: -9.02444839477539
    10. '_positions' → logprob: -9.14944839477539

Token 283: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0004498573543969542
    2. 'angle' → logprob: -7.8754496574401855
    3. 's' → logprob: -9.750450134277344
    4. 'ang' → logprob: -11.625450134277344
    5. 'ANGLES' → logprob: -13.750450134277344
    6. 'angular' → logprob: -14.250450134277344
    7. '   ' → logprob: -15.625450134277344
    8. 'anges' → logprob: -15.750450134277344
    9. '_angles' → logprob: -16.375450134277344
    10. '(self' → logprob: -16.625450134277344

Token 284: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01108625903725624
    2. '(' → logprob: -4.511086463928223
    3. ' (' → logprob: -10.511086463928223
    4. '   ' → logprob: -12.636086463928223
    5. 'self' → logprob: -12.636086463928223
    6. '(s' → logprob: -12.761086463928223
    7. '(
' → logprob: -14.011086463928223
    8. '       ' → logprob: -15.011086463928223
    9. ' ' → logprob: -15.386086463928223
    10. ' self' → logprob: -15.636086463928223

Token 285: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029356641694903374
    2. '):' → logprob: -3.6543567180633545
    3. '):
' → logprob: -6.279356479644775
    4. 'self' → logprob: -7.154356479644775
    5. '   ' → logprob: -9.404356956481934
    6. '(' → logprob: -9.529356956481934
    7. ',' → logprob: -9.529356956481934
    8. ')(' → logprob: -10.029356956481934
    9. 'def' → logprob: -10.154356956481934
    10. ' (' → logprob: -10.904356956481934

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07055361568927765
    2. 'rect' → logprob: -2.8205535411834717
    3. ' for' → logprob: -5.320553779602051
    4. ' rectangles' → logprob: -6.445553779602051
    5. 'for' → logprob: -6.820553779602051
    6. ' rect' → logprob: -7.195553779602051
    7. 'n' → logprob: -9.19555377960205
    8. 'r' → logprob: -10.57055377960205
    9. '(rect' → logprob: -10.94555377960205
    10. '	rect' → logprob: -11.07055377960205

Token 287: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' (adapté à ' rect') → logprob: -0.2543119192123413
    2. '       ' → logprob: -1.6293119192123413
    3. 'for' → logprob: -3.879312038421631
    4. ' for' → logprob: -5.504312038421631
    5. ' rect' → logprob: -6.254312038421631
    6. ' rectangles' → logprob: -6.379312038421631
    7. '   ' → logprob: -9.379311561584473
    8. '	rect' → logprob: -11.254311561584473
    9. '.rect' → logprob: -11.504311561584473
    10. 'result' → logprob: -12.004311561584473

Token 288: 's' (ID: 82)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.5232073664665222
    2. 's' → logprob: -0.8982073664665222
    3. 'ANGLES' → logprob: -10.898207664489746
    4. ' =' → logprob: -11.398207664489746
    5. '_angles' → logprob: -11.398207664489746
    6. 'angle' → logprob: -11.898207664489746
    7. 'anges' → logprob: -12.023207664489746
    8. ' s' → logprob: -12.023207664489746
    9. '=' → logprob: -12.273207664489746
    10. '[]' → logprob: -12.273207664489746

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3879605531692505
    2. '=' → logprob: -1.1379605531692505
    3. '=[]' → logprob: -7.262960433959961
    4. 'ects' → logprob: -8.012960433959961
    5. 's' → logprob: -10.387960433959961
    6. 'ect' → logprob: -11.512960433959961
    7. '=[]
' → logprob: -11.762960433959961
    8. '[]' → logprob: -12.637960433959961
    9. '   ' → logprob: -13.512960433959961
    10. 'cts' → logprob: -13.887960433959961

Token 290: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6931869983673096
    2. '[]
' → logprob: -0.6931869983673096
    3. ' []
' → logprob: -10.44318675994873
    4. ' []' → logprob: -11.94318675994873
    5. '[]

' → logprob: -12.69318675994873
    6. '[' → logprob: -14.06818675994873
    7. '[
' → logprob: -15.19318675994873
    8. '[])
' → logprob: -16.818187713623047
    9. '   ' → logprob: -17.568187713623047
    10. '[]}' → logprob: -18.943187713623047

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011596144177019596
    2. ' for' → logprob: -4.511596202850342
    3. 'for' → logprob: -7.886596202850342
    4. '
' → logprob: -9.261595726013184
    5. ',' → logprob: -10.886595726013184
    6. '   ' → logprob: -10.886595726013184
    7. '        
' → logprob: -11.386595726013184
    8. '	for' → logprob: -12.011595726013184
    9. '	' → logprob: -12.386595726013184
    10. '  
' → logprob: -12.386595726013184

Token 292: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31451377272605896
    2. ' for' → logprob: -1.3145138025283813
    3. '       ' → logprob: -6.689513683319092
    4. '   ' → logprob: -12.68951416015625
    5. '	for' → logprob: -13.18951416015625
    6. 'n' (adapté à ' n') → logprob: -13.43951416015625
    7. ' ' → logprob: -14.56451416015625
    8. '
' → logprob: -15.81451416015625
    9. ' n' → logprob: -16.06451416015625
    10. '    ' → logprob: -16.81451416015625

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10320035368204117
    2. '=' → logprob: -2.3532004356384277
    3. 'for' → logprob: -6.603200435638428
    4. ' for' → logprob: -6.603200435638428
    5. ' ' → logprob: -9.35319995880127
    6. '       ' → logprob: -9.97819995880127
    7. '
' → logprob: -10.35319995880127
    8. ')' → logprob: -10.60319995880127
    9. '   ' → logprob: -10.85319995880127
    10. 'range' → logprob: -11.47819995880127

Token 294: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141440629959106
    2. ' self' → logprob: -1.7014143466949463
    3. '       ' → logprob: -14.451414108276367
    4. '
' → logprob: -15.451414108276367
    5. '   ' → logprob: -15.701414108276367
    6. '	self' → logprob: -15.951414108276367
    7. '(self' → logprob: -17.076414108276367
    8. ' ' → logprob: -17.701414108276367
    9. '=self' → logprob: -17.951414108276367
    10. 'n' → logprob: -18.201414108276367

Token 295: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -3.726595241460018e-05
    2. 'self' → logprob: -11.12503719329834
    3. ' .' → logprob: -11.50003719329834
    4. '.' → logprob: -11.75003719329834
    5. 'n' → logprob: -13.50003719329834
    6. '   ' → logprob: -13.62503719329834
    7. '       ' → logprob: -14.00003719329834
    8. '.self' → logprob: -15.00003719329834
    9. ' self' → logprob: -15.25003719329834
    10. '.original' → logprob: -15.87503719329834

Token 296: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4789202809333801
    2. '       ' → logprob: -1.1039202213287354
    3. ' for' → logprob: -3.4789202213287354
    4. 'for' → logprob: -4.3539204597473145
    5. '        
' → logprob: -5.4789204597473145
    6. '  
' → logprob: -8.103919982910156
    7. ' 
' → logprob: -8.603919982910156
    8. '
' → logprob: -9.103919982910156
    9. '   ' → logprob: -9.353919982910156
    10. '<|end|>' → logprob: -9.478919982910156

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030154475942254066
    2. ' for' → logprob: -3.6551544666290283
    3. 'for' → logprob: -5.780154705047607
    4. '
' → logprob: -7.655154705047607
    5. '   ' → logprob: -8.53015422821045
    6. '        
' → logprob: -9.90515422821045
    7. '	for' → logprob: -11.03015422821045
    8. ' ' → logprob: -12.40515422821045
    9. '  
' → logprob: -12.90515422821045
    10. '```' → logprob: -13.03015422821045

Token 298: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3412359654903412
    2. ' for' → logprob: -1.3412359952926636
    3. '       ' → logprob: -3.591235876083374
    4. '   ' → logprob: -11.466236114501953
    5. '	for' → logprob: -11.591236114501953
    6. '        
' → logprob: -14.091236114501953
    7. '
' → logprob: -14.091236114501953
    8. ' ' → logprob: -14.591236114501953
    9. '```' → logprob: -14.841236114501953
    10. '    ' → logprob: -16.966236114501953

Token 299: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.07893507182598114
    2. ' top' → logprob: -2.578935146331787
    3. 't' → logprob: -10.703934669494629
    4. 'i' → logprob: -11.703934669494629
    5. '   ' → logprob: -11.953934669494629
    6. 'r' → logprob: -12.578934669494629
    7. '	top' → logprob: -13.703934669494629
    8. ' i' → logprob: -14.078934669494629
    9. '_top' → logprob: -14.078934669494629
    10. ' ' → logprob: -14.203934669494629

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009783834218978882
    2. 'in' → logprob: -4.634783744812012
    3. ' ' → logprob: -11.009783744812012
    4. 'n' → logprob: -12.759783744812012
    5. '=' → logprob: -13.759783744812012
    6. '	in' → logprob: -14.134783744812012
    7. '   ' → logprob: -14.259783744812012
    8. ' i' → logprob: -14.259783744812012
    9. ',' → logprob: -14.509783744812012
    10. 'i' → logprob: -14.634783744812012

Token 301: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014198750257492
    2. ' range' → logprob: -1.7014198303222656
    3. '0' → logprob: -12.076419830322266
    4. '(range' → logprob: -14.951419830322266
    5. '   ' → logprob: -15.451419830322266
    6. '	range' → logprob: -15.701419830322266
    7. ' ' → logprob: -16.076419830322266
    8. '
' → logprob: -17.451419830322266
    9. ')' → logprob: -17.826419830322266
    10. ' in' → logprob: -18.201419830322266

Token 302: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00022392053506337106
    2. '(' → logprob: -8.500224113464355
    3. 'n' → logprob: -11.125224113464355
    4. '(self' → logprob: -12.125224113464355
    5. '(
' → logprob: -16.00022315979004
    6. ' n' → logprob: -16.25022315979004
    7. 'self' → logprob: -18.87522315979004
    8. ')n' → logprob: -18.87522315979004
    9. '	n' → logprob: -19.12522315979004
    10. '0' → logprob: -19.50022315979004

Token 303: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31340131163597107
    2. '):' → logprob: -1.3134013414382935
    3. '   ' → logprob: -9.813401222229004
    4. 'n' → logprob: -10.938401222229004
    5. '       ' → logprob: -11.063401222229004
    6. ' ):' → logprob: -11.063401222229004
    7. ' ):
' → logprob: -11.438401222229004
    8. '):
' → logprob: -11.938401222229004
    9. ',n' → logprob: -11.938401222229004
    10. ')' → logprob: -12.938401222229004

Token 304: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5144072771072388
    2. '           ' → logprob: -1.5144072771072388
    3. '       ' → logprob: -1.7644072771072388
    4. '   ' → logprob: -4.764407157897949
    5. 'for' → logprob: -6.264407157897949
    6. ',' → logprob: -9.26440715789795
    7. ':' → logprob: -9.38940715789795
    8. ' ' → logprob: -9.38940715789795
    9. '	for' → logprob: -10.13940715789795
    10. '               ' → logprob: -10.13940715789795

Token 305: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3872816860675812
    2. 'for' (adapté à ' for') → logprob: -1.1372816562652588
    3. '           ' → logprob: -8.01228141784668
    4. '               ' → logprob: -10.01228141784668
    5. '   ' → logprob: -10.63728141784668
    6. '       ' → logprob: -12.26228141784668
    7. '	for' → logprob: -13.01228141784668
    8. ' ' → logprob: -13.38728141784668
    9. '            ' → logprob: -13.88728141784668
    10. '    ' → logprob: -15.51228141784668

Token 306: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.26556721329689026
    2. 'bottom' → logprob: -1.7655671834945679
    3. ' left' → logprob: -3.1405673027038574
    4. ' bottom' → logprob: -4.015567302703857
    5. 'top' → logprob: -7.140567302703857
    6. ' top' → logprob: -11.1405668258667
    7. '   ' → logprob: -11.5155668258667
    8. ' ' → logprob: -12.1405668258667
    9. 'bot' → logprob: -12.7655668258667
    10. '	left' → logprob: -12.7655668258667

Token 307: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011059137992560863
    2. 'in' → logprob: -4.511059284210205
    3. ' ' → logprob: -11.636058807373047
    4. 'n' → logprob: -14.636058807373047
    5. '	in' → logprob: -14.761058807373047
    6. '<|end|>' → logprob: -15.136058807373047
    7. ',' → logprob: -15.261058807373047
    8. '    ' → logprob: -16.011058807373047
    9. '   ' → logprob: -16.261058807373047
    10. 'import' → logprob: -16.261058807373047

Token 308: ' range' (ID: 3352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.050726518034935
    2. 'range' → logprob: -3.3007264137268066
    3. ' n' → logprob: -4.550726413726807
    4. '(n' → logprob: -6.425726413726807
    5. ' range' → logprob: -7.800726413726807
    6. '0' → logprob: -11.550726890563965
    7. '(range' → logprob: -12.675726890563965
    8. '(' → logprob: -13.550726890563965
    9. '
' → logprob: -14.425726890563965
    10. '	n' → logprob: -14.425726890563965

Token 309: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.9504606825648807e-05
    2. 'n' → logprob: -10.875019073486328
    3. '(' → logprob: -14.500019073486328
    4. '<n' → logprob: -18.125019073486328
    5. '(
' → logprob: -18.250019073486328
    6. ' n' → logprob: -18.500019073486328
    7. ',n' → logprob: -19.125019073486328
    8. '	n' → logprob: -19.250019073486328
    9. 'range' → logprob: -19.375019073486328
    10. 's' → logprob: -19.375019073486328

Token 310: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18364575505256653
    2. '):' → logprob: -1.8086457252502441
    3. ',' → logprob: -5.933645725250244
    4. ',n' → logprob: -7.183645725250244
    5. 'n' → logprob: -8.308646202087402
    6. '+' → logprob: -9.808646202087402
    7. '       ' → logprob: -10.058646202087402
    8. ':' → logprob: -10.058646202087402
    9. '   ' → logprob: -10.683646202087402
    10. ':
' → logprob: -11.433646202087402

Token 311: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029826906975358725
    2. ' for' → logprob: -5.8779826164245605
    3. '           ' → logprob: -9.752983093261719
    4. ':' → logprob: -10.752983093261719
    5. '                   ' → logprob: -10.877983093261719
    6. ',' → logprob: -11.002983093261719
    7. '       ' → logprob: -11.127983093261719
    8. '	           ' → logprob: -11.377983093261719
    9. '   ' → logprob: -11.752983093261719
    10. 'for' → logprob: -11.752983093261719

Token 312: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026764076203107834
    2. 'for' (adapté à ' for') → logprob: -3.901764154434204
    3. '                   ' → logprob: -5.401763916015625
    4. '               ' → logprob: -6.526763916015625
    5. '   ' → logprob: -8.776763916015625
    6. '           ' → logprob: -10.401763916015625
    7. ' ' → logprob: -10.901763916015625
    8. '                       ' → logprob: -11.651763916015625
    9. '       ' → logprob: -12.026763916015625
    10. '	for' → logprob: -12.026763916015625

Token 313: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.023369982838630676
    2. ' bottom' → logprob: -3.7733700275421143
    3. 'right' → logprob: -9.023369789123535
    4. 'bot' → logprob: -13.648369789123535
    5. 'top' → logprob: -13.898369789123535
    6. ' right' → logprob: -13.898369789123535
    7. '(bottom' → logprob: -15.648369789123535
    8. '   ' → logprob: -15.773369789123535
    9. '.bottom' → logprob: -16.02337074279785
    10. '_bottom' → logprob: -16.14837074279785

Token 314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029803255572915077
    2. 'in' → logprob: -3.5298032760620117
    3. 'range' → logprob: -11.529803276062012
    4. '   ' → logprob: -11.654803276062012
    5. ' ' → logprob: -11.654803276062012
    6. 'top' → logprob: -11.779803276062012
    7. '=' → logprob: -12.154803276062012
    8. ')' → logprob: -13.529803276062012
    9. 'from' → logprob: -13.967303276062012
    10. '       ' → logprob: -14.217303276062012

Token 315: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750604182481766
    2. ' range' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.27975082397461
    4. '   ' → logprob: -17.02975082397461
    5. 'top' → logprob: -17.27975082397461
    6. 'left' → logprob: -17.90475082397461
    7. '	range' → logprob: -18.02975082397461
    8. '(range' → logprob: -18.40475082397461
    9. '  ' → logprob: -19.02975082397461
    10. '
' → logprob: -19.02975082397461

Token 316: '(top' (ID: 42605)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.293941855430603
    2. '(top' → logprob: -1.543941855430603
    3. 'left' → logprob: -3.7939419746398926
    4. '(left' → logprob: -4.293941974639893
    5. 'range' → logprob: -5.418941974639893
    6. ' top' → logprob: -7.668941974639893
    7. ' left' → logprob: -9.918941497802734
    8. '[top' → logprob: -11.293941497802734
    9. ' range' → logprob: -11.418941497802734
    10. 'n' → logprob: -12.543941497802734

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00613841088488698
    2. ',n' → logprob: -5.131138324737549
    3. ' ,' → logprob: -8.506138801574707
    4. 'n' → logprob: -11.881138801574707
    5. '   ' → logprob: -16.25613784790039
    6. '       ' → logprob: -16.38113784790039
    7. '

' → logprob: -16.50613784790039
    8. ',
' → logprob: -16.50613784790039
    9. ',len' → logprob: -16.63113784790039
    10. '(n' → logprob: -17.25613784790039

Token 318: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014163863845169544
    2. ' n' → logprob: -4.264163970947266
    3. '	n' → logprob: -16.014163970947266
    4. ')n' → logprob: -16.264163970947266
    5. '_n' → logprob: -16.389163970947266
    6. '<n' → logprob: -17.389163970947266
    7. ')' → logprob: -17.514163970947266
    8. '(n' → logprob: -18.139163970947266
    9. '<|end|>' → logprob: -18.264163970947266
    10. '
' → logprob: -18.389163970947266

Token 319: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31330883502960205
    2. '):' → logprob: -1.313308835029602
    3. '):
' → logprob: -10.688308715820312
    4. '):

' → logprob: -11.938308715820312
    5. ' ):' → logprob: -12.188308715820312
    6. ' ):
' → logprob: -12.188308715820312
    7. ')' → logprob: -13.063308715820312
    8. '   ' → logprob: -13.188308715820312
    9. 'n' → logprob: -14.438308715820312
    10. '<|end|>' → logprob: -14.563308715820312

Token 320: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0026648349594324827
    2. ':' → logprob: -6.502665042877197
    3. '               ' → logprob: -7.377665042877197
    4. '                       ' → logprob: -8.627664566040039
    5. ':
' → logprob: -9.502664566040039
    6. '           ' → logprob: -10.002664566040039
    7. ' :' → logprob: -10.252664566040039
    8. '   ' → logprob: -10.502664566040039
    9. '<|end|>' → logprob: -10.752664566040039
    10. '                    ' → logprob: -10.877664566040039

Token 321: ' for' (ID: 395)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4237988293170929
    2. ' for' → logprob: -1.2987987995147705
    3. 'for' (adapté à ' for') → logprob: -2.6737987995147705
    4. '                   ' → logprob: -5.79879903793335
    5. '                     ' → logprob: -8.548798561096191
    6. ' in' → logprob: -9.298798561096191
    7. '               ' → logprob: -9.923798561096191
    8. '       ' → logprob: -10.048798561096191
    9. '                    ' → logprob: -10.173798561096191
    10. '                           ' → logprob: -10.673798561096191

Token 322: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.003184363478794694
    2. ' right' → logprob: -5.7531843185424805
    3. 'left' → logprob: -12.00318431854248
    4. '                   ' → logprob: -15.75318431854248
    5. '	right' → logprob: -16.378185272216797
    6. ' ' → logprob: -16.503185272216797
    7. 'c' → logprob: -16.878185272216797
    8. '   ' → logprob: -16.878185272216797
    9. '               ' → logprob: -17.003185272216797
    10. '                       ' → logprob: -17.003185272216797

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06997167319059372
    2. 'in' → logprob: -2.6949715614318848
    3. '                   ' → logprob: -11.819972038269043
    4. '   ' → logprob: -12.319972038269043
    5. '                    ' → logprob: -12.444972038269043
    6. ' ' → logprob: -12.569972038269043
    7. '	in' → logprob: -13.319972038269043
    8. '    ' → logprob: -13.444972038269043
    9. '=' → logprob: -13.569972038269043
    10. '_in' → logprob: -13.694972038269043

Token 324: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.052023693919181824
    2. 'left' → logprob: -3.8020236492156982
    3. ' range' → logprob: -4.052023887634277
    4. '(left' → logprob: -4.552023887634277
    5. ' left' → logprob: -8.427023887634277
    6. '(range' → logprob: -8.552023887634277
    7. '[left' → logprob: -11.427023887634277
    8. 'in' → logprob: -12.052023887634277
    9. ' in' → logprob: -12.302023887634277
    10. '   ' → logprob: -14.052023887634277

Token 325: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -2.935296834039036e-06
    2. 'left' → logprob: -12.87500286102295
    3. '(' → logprob: -15.87500286102295
    4. ' (' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '[left' → logprob: -17.125003814697266
    7. ' left' → logprob: -17.625003814697266
    8. '(right' → logprob: -17.875003814697266
    9. ',left' → logprob: -17.875003814697266
    10. '	left' → logprob: -18.250003814697266

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006451221415773034
    2. ',n' → logprob: -7.500645160675049
    3. ' ,' → logprob: -9.37564468383789
    4. 'n' → logprob: -12.50064468383789
    5. '(n' → logprob: -13.50064468383789
    6. ',
' → logprob: -14.37564468383789
    7. '+' → logprob: -14.37564468383789
    8. '               ' → logprob: -15.62564468383789
    9. ',right' → logprob: -15.75064468383789
    10. '),' → logprob: -16.37564468383789

Token 327: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0546075813472271
    2. 'bottom' → logprob: -3.054607629776001
    3. ' n' → logprob: -5.179607391357422
    4. ' bottom' → logprob: -8.054607391357422
    5. 'right' → logprob: -10.679607391357422
    6. '(n' → logprob: -11.304607391357422
    7. 'top' → logprob: -12.304607391357422
    8. '	n' → logprob: -12.429607391357422
    9. '   ' → logprob: -12.804607391357422
    10. '(bottom' → logprob: -13.554607391357422

Token 328: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3496741056442261
    2. '):' → logprob: -1.224674105644226
    3. '                       ' → logprob: -7.724674224853516
    4. '):
' → logprob: -8.224674224853516
    5. '                   ' → logprob: -8.349674224853516
    6. '+' → logprob: -9.724674224853516
    7. ':' → logprob: -9.724674224853516
    8. ')' → logprob: -9.849674224853516
    9. '               ' → logprob: -9.974674224853516
    10. '                           ' → logprob: -11.599674224853516

Token 329: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00042030587792396545
    2. '                        
' → logprob: -9.000420570373535
    3. '                           ' → logprob: -9.500420570373535
    4. '                   ' → logprob: -9.625420570373535
    5. '               ' → logprob: -9.750420570373535
    6. ':' → logprob: -11.500420570373535
    7. '                               ' → logprob: -11.625420570373535
    8. '       ' → logprob: -11.625420570373535
    9. '	                   ' → logprob: -11.750420570373535
    10. ',' → logprob: -11.875420570373535

Token 330: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' (adapté à ' rect') → logprob: -0.48098447918891907
    2. ' rect' → logprob: -1.6059844493865967
    3. '                           ' → logprob: -1.7309844493865967
    4. '	rect' → logprob: -6.730984687805176
    5. '                       ' → logprob: -6.980984687805176
    6. '           ' → logprob: -7.980984687805176
    7. '                   ' → logprob: -8.105984687805176
    8. '   ' → logprob: -8.105984687805176
    9. '                               ' → logprob: -8.355984687805176
    10. '
' → logprob: -8.480984687805176

Token 331: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.908022285439074e-05
    2. '=' → logprob: -10.250059127807617
    3. ' =' → logprob: -10.875059127807617
    4. 'angle' → logprob: -12.750059127807617
    5. 'angles' → logprob: -13.625059127807617
    6. ' s' → logprob: -15.750059127807617
    7. 'angular' → logprob: -15.750059127807617
    8. '=s' → logprob: -15.750059127807617
    9. '.append' → logprob: -16.500059127807617
    10. '.' → logprob: -17.250059127807617

Token 332: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0012723775580525398
    2. '.' → logprob: -6.751272201538086
    3. '=' → logprob: -10.376272201538086
    4. ' =' → logprob: -10.626272201538086
    5. ' .' → logprob: -10.876272201538086
    6. 'append' → logprob: -11.126272201538086
    7. ').' → logprob: -12.251272201538086
    8. '.push' → logprob: -13.126272201538086
    9. '.rect' → logprob: -13.876272201538086
    10. '.
' → logprob: -14.251272201538086

Token 333: '(Rect' (ID: 138396)
  Prédit: '(Rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Rect' → logprob: -0.0013748762430623174
    2. 'Rectangle' → logprob: -6.8763747215271
    3. ' Rectangle' → logprob: -8.126375198364258
    4. ' (' → logprob: -10.251375198364258
    5. '(' → logprob: -12.251375198364258
    6. '.Rectangle' → logprob: -12.751375198364258
    7. '_Rect' → logprob: -14.001375198364258
    8. '_rectangle' → logprob: -14.501375198364258
    9. '   ' → logprob: -14.626375198364258
    10. 'Rect' → logprob: -15.126375198364258

Token 334: 'angle' (ID: 7140)
  Prédit: 'angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -6.704273118884885e-07
    2. '(top' → logprob: -15.500000953674316
    3. '(angle' → logprob: -15.875000953674316
    4. 'ANGLE' → logprob: -15.875000953674316
    5. 'Angle' → logprob: -16.625
    6. 'angular' → logprob: -16.75
    7. 'ang' → logprob: -18.0
    8. 'angel' → logprob: -19.0
    9. 'angles' → logprob: -19.125
    10. 'ange' → logprob: -19.375

Token 335: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.875024795532227
    3. 'top' → logprob: -12.125024795532227
    4. '(
' → logprob: -15.125024795532227
    5. '[top' → logprob: -15.625024795532227
    6. ' (' → logprob: -16.875024795532227
    7. ')' → logprob: -17.125024795532227
    8. ' top' → logprob: -18.250024795532227
    9. '
' → logprob: -18.750024795532227
    10. ')(' → logprob: -18.875024795532227

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008267502300441265
    2. ' ,' → logprob: -5.383267402648926
    3. ',left' → logprob: -5.758267402648926
    4. '<|end|>' → logprob: -8.133267402648926
    5. ',right' → logprob: -9.633267402648926
    6. ',
' → logprob: -9.758267402648926
    7. ')' → logprob: -11.008267402648926
    8. ' ' → logprob: -11.383267402648926
    9. '<|end|>' → logprob: -12.258267402648926
    10. '   ' → logprob: -12.758267402648926

Token 337: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.003178544342517853
    2. ' left' → logprob: -5.753178596496582
    3. '                               ' → logprob: -15.378178596496582
    4. '	left' → logprob: -15.378178596496582
    5. ',left' → logprob: -15.753178596496582
    6. '[left' → logprob: -16.503177642822266
    7. '                           ' → logprob: -16.628177642822266
    8. 'right' → logprob: -16.628177642822266
    9. ' lef' → logprob: -16.878177642822266
    10. '                                   ' → logprob: -17.378177642822266

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032497590291313827
    2. ' ,' → logprob: -8.125325202941895
    3. ',b' → logprob: -10.625325202941895
    4. ',
' → logprob: -12.500325202941895
    5. ',right' → logprob: -15.000325202941895
    6. ')' → logprob: -16.500324249267578
    7. '```' → logprob: -16.500324249267578
    8. ',

' → logprob: -16.625324249267578
    9. 'bottom' → logprob: -16.625324249267578
    10. '),' → logprob: -16.750324249267578

Token 339: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0019295861711725593
    2. ' bottom' → logprob: -6.251929759979248
    3. '   ' → logprob: -15.25192928314209
    4. 'right' → logprob: -15.50192928314209
    5. '(bottom' → logprob: -16.001930236816406
    6. 'bot' → logprob: -16.376930236816406
    7. '```' → logprob: -17.001930236816406
    8. 'b' → logprob: -17.126930236816406
    9. '
' → logprob: -17.126930236816406
    10. '.bottom' → logprob: -17.501930236816406

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019759766291826963
    2. ' ,' → logprob: -6.626976013183594
    3. ' +' → logprob: -8.126976013183594
    4. '+' → logprob: -8.126976013183594
    5. ',right' → logprob: -10.251976013183594
    6. ',
' → logprob: -11.126976013183594
    7. '<|end|>' → logprob: -12.501976013183594
    8. ')' → logprob: -13.376976013183594
    9. ' ' → logprob: -14.501976013183594
    10. '   ' → logprob: -14.626976013183594

Token 341: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.05488871410489082
    2. ' right' → logprob: -2.9298887252807617
    3. '	right' → logprob: -12.929888725280762
    4. '
' → logprob: -14.679888725280762
    5. '   ' → logprob: -14.679888725280762
    6. ' ' → logprob: -15.054888725280762
    7. '                   ' → logprob: -15.054888725280762
    8. '[right' → logprob: -15.054888725280762
    9. '               ' → logprob: -15.304888725280762
    10. '                               ' → logprob: -15.429888725280762

Token 342: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004381109494715929
    2. ')' → logprob: -5.75438117980957
    3. '))
' → logprob: -6.75438117980957
    4. ' ))' → logprob: -10.87938117980957
    5. ')
' → logprob: -11.87938117980957
    6. '                       ' → logprob: -12.50438117980957
    7. ')))' → logprob: -13.62938117980957
    8. '                   ' → logprob: -13.75438117980957
    9. '       ' → logprob: -14.25438117980957
    10. '))

' → logprob: -14.37938117980957

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019289902411401272
    2. '
' → logprob: -6.626928806304932
    3. 'return' → logprob: -8.00192928314209
    4. '        
' → logprob: -9.37692928314209
    5. ' return' → logprob: -9.62692928314209
    6. '<|end|>' → logprob: -10.25192928314209
    7. '	' → logprob: -11.37692928314209
    8. ')' → logprob: -11.37692928314209
    9. '                       ' → logprob: -11.50192928314209
    10. '   ' → logprob: -11.75192928314209

Token 344: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004588672425597906
    2. 'return' (adapté à ' return') → logprob: -6.004588603973389
    3. '
' → logprob: -6.754588603973389
    4. ' return' → logprob: -7.129588603973389
    5. '	return' → logprob: -10.004589080810547
    6. '<|end|>' → logprob: -10.629589080810547
    7. '	' → logprob: -10.879589080810547
    8. '        
' → logprob: -10.879589080810547
    9. '   ' → logprob: -11.379589080810547
    10. ':return' → logprob: -12.504589080810547

Token 345: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.04858827963471413
    2. ' rect' → logprob: -3.048588275909424
    3. '	rect' → logprob: -14.173588752746582
    4. '(rect' → logprob: -16.548587799072266
    5. '   ' → logprob: -16.798587799072266
    6. '_rect' → logprob: -17.173587799072266
    7. '.rect' → logprob: -17.173587799072266
    8. 'r' → logprob: -18.798587799072266
    9. '[' → logprob: -19.173587799072266
    10. '
' → logprob: -19.548587799072266

Token 346: 's' (ID: 82)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.008793369866907597
    2. 's' → logprob: -4.758793354034424
    3. 't' → logprob: -8.633793830871582
    4. ' ts' → logprob: -15.008793830871582
    5. '[' → logprob: -15.633793830871582
    6. 'tsx' → logprob: -16.383792877197266
    7. 'rect' → logprob: -16.508792877197266
    8. 'sts' → logprob: -16.508792877197266
    9. '```' → logprob: -17.383792877197266
    10. 'angle' → logprob: -17.508792877197266

Token 347: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003445403417572379
    2. ' def' → logprob: -5.753445625305176
    3. '   ' → logprob: -8.253445625305176
    4. '
' → logprob: -12.503445625305176
    5. '	def' → logprob: -14.003445625305176
    6. 'from' → logprob: -14.253445625305176
    7. ' ' → logprob: -14.378445625305176
    8. 'import' → logprob: -15.003445625305176
    9. 'de' → logprob: -15.503445625305176
    10. '    
' → logprob: -15.628445625305176

Token 350: ' solve' (ID: 17722)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.56572425365448
    2. 'solve' → logprob: -1.56572425365448
    3. ' bfs' → logprob: -1.94072425365448
    4. ' solve' → logprob: -2.6907243728637695
    5. 'cast' → logprob: -5.9407243728637695
    6. ' cast' → logprob: -6.3157243728637695
    7. 'def' → logprob: -6.4407243728637695
    8. 'can' → logprob: -6.6907243728637695
    9. ' find' → logprob: -7.4407243728637695
    10. '_b' → logprob: -7.6907243728637695

Token 351: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005950483493506908
    2. '(' → logprob: -5.130950450897217
    3. ' (' → logprob: -11.130950927734375
    4. 'self' → logprob: -12.255950927734375
    5. '_(' → logprob: -13.630950927734375
    6. '_' → logprob: -14.630950927734375
    7. '(
' → logprob: -15.130950927734375
    8. '   ' → logprob: -16.005950927734375
    9. '__(' → logprob: -16.505950927734375
    10. '()' → logprob: -16.505950927734375

Token 352: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14296667277812958
    2. '):' → logprob: -2.1429667472839355
    3. 'self' → logprob: -4.6429667472839355
    4. '):
' → logprob: -5.2679667472839355
    5. '_grid' → logprob: -8.017966270446777
    6. ' ,' → logprob: -8.517966270446777
    7. ')' → logprob: -8.642966270446777
    8. 'grid' → logprob: -9.017966270446777
    9. '_self' → logprob: -10.392966270446777
    10. '_state' → logprob: -10.392966270446777

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005896799731999636
    2. 'from' → logprob: -6.13089656829834
    3. ' from' → logprob: -6.25589656829834
    4. 'import' → logprob: -7.63089656829834
    5. 'start' → logprob: -7.75589656829834
    6. '   ' → logprob: -8.13089656829834
    7. 'state' → logprob: -8.88089656829834
    8. 'initial' → logprob: -9.25589656829834
    9. ' start' → logprob: -9.63089656829834
    10. 'current' → logprob: -10.00589656829834

Token 354: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.48196786642074585
    2. 'from' → logprob: -1.9819679260253906
    3. 'self' → logprob: -2.2319679260253906
    4. '       ' → logprob: -2.3569679260253906
    5. 'import' → logprob: -3.3569679260253906
    6. ' start' → logprob: -5.856967926025391
    7. ' from' → logprob: -6.106967926025391
    8. 'state' → logprob: -7.356967926025391
    9. ' self' → logprob: -7.606967926025391
    10. 'initial' → logprob: -7.606967926025391

Token 355: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.10869981348514557
    2. '_grid' → logprob: -2.4836997985839844
    3. ' =' → logprob: -3.9836997985839844
    4. '=' → logprob: -7.108699798583984
    5. '_queue' → logprob: -9.858699798583984
    6. 'state' → logprob: -10.608699798583984
    7. '=_' → logprob: -11.483699798583984
    8. '_' → logprob: -11.483699798583984
    9. '   ' → logprob: -12.233699798583984
    10. '_states' → logprob: -12.358699798583984

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858827963471413
    2. '=' → logprob: -3.048588275909424
    3. ')' → logprob: -14.923588752746582
    4. '_state' → logprob: -15.423588752746582
    5. ',' → logprob: -15.798588752746582
    6. ':' → logprob: -17.173587799072266
    7. ' ' → logprob: -17.173587799072266
    8. 'state' → logprob: -17.298587799072266
    9. ' =
' → logprob: -17.548587799072266
    10. ')=' → logprob: -17.798587799072266

Token 357: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07890014350414276
    2. ' self' → logprob: -2.578900098800659
    3. '       ' → logprob: -11.703900337219238
    4. '(self' → logprob: -13.453900337219238
    5. '	self' → logprob: -14.828900337219238
    6. '   ' → logprob: -16.578899383544922
    7. '=self' → logprob: -16.953899383544922
    8. ':self' → logprob: -17.703899383544922
    9. '[self' → logprob: -17.828899383544922
    10. ' ' → logprob: -17.953899383544922

Token 358: '.original' (ID: 65193)
  Prédit: '.original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.original' → logprob: -0.0021968833170831203
    2. 'original' → logprob: -6.127196788787842
    3. '.' → logprob: -13.002197265625
    4. ' original' → logprob: -13.377197265625
    5. ' .' → logprob: -13.377197265625
    6. '   ' → logprob: -13.502197265625
    7. '.origin' → logprob: -13.752197265625
    8. '       ' → logprob: -14.127197265625
    9. '_original' → logprob: -14.252197265625
    10. '
' → logprob: -14.252197265625

Token 359: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -4.842555426876061e-06
    2. 'grid' → logprob: -12.750004768371582
    3. 'Grid' → logprob: -13.625004768371582
    4. '.grid' → logprob: -15.125004768371582
    5. '._' → logprob: -16.7500057220459
    6. '_' → logprob: -16.8750057220459
    7. '_state' → logprob: -16.8750057220459
    8. '_queue' → logprob: -17.0000057220459
    9. '
' → logprob: -17.5000057220459
    10. '.Grid' → logprob: -18.0000057220459

Token 360: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -0.003374599851667881
    2. '.clone' → logprob: -5.7533745765686035
    3. 'to' → logprob: -9.253375053405762
    4. '.' → logprob: -9.753375053405762
    5. '
' → logprob: -10.628375053405762
    6. ' .' → logprob: -11.628375053405762
    7. '   ' → logprob: -13.378375053405762
    8. '.cl' → logprob: -13.753375053405762
    9. '.t' → logprob: -14.003375053405762
    10. ' to' → logprob: -14.003375053405762

Token 361: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -2.5822400857578032e-05
    2. 'tuple' → logprob: -10.625025749206543
    3. '_' → logprob: -14.250025749206543
    4. '_t' → logprob: -14.625025749206543
    5. '
' → logprob: -17.00002670288086
    6. ' tuple' → logprob: -17.12502670288086
    7. '_token' → logprob: -17.12502670288086
    8. ' _' → logprob: -17.25002670288086
    9. '```' → logprob: -17.62502670288086
    10. '_to' → logprob: -18.25002670288086

Token 362: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3289225995540619
    2. '()' → logprob: -1.8289226293563843
    3. '()
' → logprob: -2.2039225101470947
    4. '
' → logprob: -5.578922748565674
    5. ')' → logprob: -6.203922748565674
    6. ')
' → logprob: -6.578922748565674
    7. ',' → logprob: -6.953922748565674
    8. '(' → logprob: -8.703922271728516
    9. '<|end|>' → logprob: -8.828922271728516
    10. '(self' → logprob: -8.953922271728516

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009955824352800846
    2. '
' → logprob: -5.134955883026123
    3. '<|end|>' → logprob: -6.384955883026123
    4. 'self' → logprob: -7.384955883026123
    5. ',' → logprob: -7.384955883026123
    6. ')' → logprob: -8.384955406188965
    7. '        
' → logprob: -8.509955406188965
    8. '#' → logprob: -8.634955406188965
    9. ' self' → logprob: -8.884955406188965
    10. '<|end|>' → logprob: -9.759955406188965

Token 364: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0362417958676815
    2. '       ' → logprob: -3.7862417697906494
    3. ' self' → logprob: -5.0362420082092285
    4. 'from' → logprob: -5.1612420082092285
    5. 'import' → logprob: -7.5362420082092285
    6. ' from' → logprob: -9.28624153137207
    7. 'if' (adapté à ' if') → logprob: -10.78624153137207
    8. '        
' → logprob: -11.53624153137207
    9. 'queue' → logprob: -11.91124153137207
    10. '
' → logprob: -12.53624153137207

Token 365: ' all' (ID: 722)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2016264647245407
    2. 'self' → logprob: -1.7016264200210571
    3. ' not' → logprob: -8.826626777648926
    4. ' start' → logprob: -10.326626777648926
    5. 'start' → logprob: -11.201626777648926
    6. ' all' → logprob: -11.326626777648926
    7. 'not' → logprob: -12.951626777648926
    8. ' ' → logprob: -13.076626777648926
    9. '(self' → logprob: -14.076626777648926
    10. ' len' → logprob: -14.326626777648926

Token 366: '(enemy' (ID: 133101)
  Prédit: '(enemy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(enemy' → logprob: -0.29299578070640564
    2. '(e' → logprob: -1.792995810508728
    3. '(cell' → logprob: -3.4179956912994385
    4. '(x' → logprob: -3.7929956912994385
    5. '(v' → logprob: -4.167995929718018
    6. '(value' → logprob: -4.792995929718018
    7. '(val' → logprob: -5.042995929718018
    8. 'enemy' → logprob: -6.792995929718018
    9. '(all' → logprob: -8.41799545288086
    10. '(' → logprob: -8.91799545288086

Token 367: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16048447787761688
    2. '==' → logprob: -1.9104844331741333
    3. ' for' → logprob: -8.785484313964844
    4. 'for' → logprob: -10.160484313964844
    5. 's' → logprob: -10.410484313964844
    6. ' ' → logprob: -11.285484313964844
    7. ')' → logprob: -11.785484313964844
    8. '=' → logprob: -12.535484313964844
    9. '```' → logprob: -12.785484313964844
    10. '[' → logprob: -13.535484313964844

Token 368: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020575053989887238
    2. ' ' → logprob: -3.8955750465393066
    3. '1' → logprob: -10.645575523376465
    4. '   ' → logprob: -12.895575523376465
    5. '
' → logprob: -13.395575523376465
    6. '  ' → logprob: -14.208075523376465
    7. '```' → logprob: -14.583075523376465
    8. '       ' → logprob: -14.645575523376465
    9. ' 
' → logprob: -14.708075523376465
    10. '           ' → logprob: -15.145575523376465

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002632430987432599
    2. ' ' → logprob: -8.250263214111328
    3. '1' → logprob: -14.125263214111328
    4. '
' → logprob: -15.000263214111328
    5. '   ' → logprob: -15.250263214111328
    6. '```' → logprob: -15.562763214111328
    7. '  ' → logprob: -16.562763214111328
    8. ')' → logprob: -17.125263214111328
    9. '۰' → logprob: -17.125263214111328
    10. ' 
' → logprob: -17.250263214111328

Token 370: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05509001761674881
    2. 'for' → logprob: -2.9300899505615234
    3. ' ' → logprob: -8.930089950561523
    4. ' in' → logprob: -10.430089950561523
    5. ')' → logprob: -11.180089950561523
    6. '	for' → logprob: -11.680089950561523
    7. '    ' → logprob: -12.180089950561523
    8. '        ' → logprob: -12.430089950561523
    9. '  ' → logprob: -13.055089950561523
    10. '   ' → logprob: -13.180089950561523

Token 371: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.4415806829929352
    2. ' row' → logprob: -1.0665806531906128
    3. ' enemy' → logprob: -4.816580772399902
    4. 'enemy' → logprob: -5.441580772399902
    5. ' ' → logprob: -9.066580772399902
    6. ' _' → logprob: -9.441580772399902
    7. 'r' → logprob: -9.941580772399902
    8. '_' → logprob: -10.691580772399902
    9. '	row' → logprob: -10.691580772399902
    10. ' r' → logprob: -11.379080772399902

Token 372: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0788913294672966
    2. 'in' → logprob: -2.5788912773132324
    3. ' ' → logprob: -13.95389175415039
    4. ')' → logprob: -15.45389175415039
    5. 'for' → logprob: -15.70389175415039
    6. 'row' → logprob: -16.82889175415039
    7. '	in' → logprob: -16.95389175415039
    8. '        ' → logprob: -17.32889175415039
    9. ' for' → logprob: -17.32889175415039
    10. ',' → logprob: -17.32889175415039

Token 373: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16837622225284576
    2. ' self' → logprob: -1.9183762073516846
    3. 'start' → logprob: -5.043376445770264
    4. ' start' → logprob: -6.418376445770264
    5. ')' → logprob: -12.043375968933105
    6. 'range' → logprob: -12.168375968933105
    7. 'row' → logprob: -12.793375968933105
    8. '
' → logprob: -12.918375968933105
    9. ' ' → logprob: -12.918375968933105
    10. '[self' → logprob: -13.043375968933105

Token 374: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.43229570984840393
    2. ' in' → logprob: -1.0572956800460815
    3. 'in' → logprob: -5.932295799255371
    4. '_' → logprob: -7.057295799255371
    5. 'state' → logprob: -11.057295799255371
    6. ' _' → logprob: -11.182295799255371
    7. '   ' → logprob: -11.182295799255371
    8. '_states' → logprob: -11.932295799255371
    9. 'State' → logprob: -12.307295799255371
    10. 's' → logprob: -12.432295799255371

Token 375: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03808211907744408
    2. '):' → logprob: -4.288082122802734
    3. 'for' → logprob: -4.663082122802734
    4. ' in' → logprob: -4.663082122802734
    5. '           ' → logprob: -5.788082122802734
    6. '):
' → logprob: -7.538082122802734
    7. ')' → logprob: -7.788082122802734
    8. ' ):' → logprob: -8.663082122802734
    9. ' if' → logprob: -8.913082122802734
    10. '       ' → logprob: -9.413082122802734

Token 376: ' enemy' (ID: 20935)
  Prédit: 'enemy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enemy' → logprob: -0.12692894041538239
    2. ' enemy' → logprob: -2.1269290447235107
    3. '(enemy' → logprob: -15.25192928314209
    4. ' ' → logprob: -15.37692928314209
    5. '   ' → logprob: -16.126928329467773
    6. ' enemigo' → logprob: -16.501928329467773
    7. 'en' → logprob: -16.626928329467773
    8. ' ' → logprob: -16.626928329467773
    9. '.enemy' → logprob: -16.626928329467773
    10. '
' → logprob: -17.626928329467773

Token 377: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008627813309431076
    2. 'in' → logprob: -4.758627891540527
    3. ')' → logprob: -11.383627891540527
    4. ' ' → logprob: -14.008627891540527
    5. '   ' → logprob: -15.008627891540527
    6. ' )' → logprob: -15.758627891540527
    7. '  ' → logprob: -16.00862693786621
    8. '    ' → logprob: -16.13362693786621
    9. ' not' → logprob: -16.25862693786621
    10. '),' → logprob: -16.50862693786621

Token 378: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.1430836319923401
    2. ' row' → logprob: -2.0180835723876953
    3. 'enemy' → logprob: -8.393083572387695
    4. ' enemy' → logprob: -8.643083572387695
    5. ' ' → logprob: -13.018083572387695
    6. '
' → logprob: -14.018083572387695
    7. ')' → logprob: -14.268083572387695
    8. '	row' → logprob: -14.518083572387695
    9. '   ' → logprob: -14.768083572387695
    10. '(row' → logprob: -15.018083572387695

Token 379: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3134250044822693
    2. '):
' → logprob: -1.313425064086914
    3. '       ' → logprob: -9.688425064086914
    4. ')' → logprob: -9.938425064086914
    5. ' ):' → logprob: -10.563425064086914
    6. '):
' → logprob: -11.313425064086914
    7. ' ):
' → logprob: -11.813425064086914
    8. ':' → logprob: -12.688425064086914
    9. '           ' → logprob: -12.938425064086914
    10. '):

' → logprob: -13.688425064086914

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0377909317612648
    2. ':
' → logprob: -3.6627910137176514
    3. ':' → logprob: -4.537790775299072
    4. 'return' → logprob: -8.16279125213623
    5. ':return' → logprob: -8.41279125213623
    6. '
' → logprob: -9.28779125213623
    7. ' return' → logprob: -9.78779125213623
    8. '):
' → logprob: -10.41279125213623
    9. ',' → logprob: -11.16279125213623
    10. '       ' → logprob: -11.53779125213623

Token 381: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07703430950641632
    2. 'return' (adapté à ' return') → logprob: -3.0770342350006104
    3. ' return' → logprob: -3.5770342350006104
    4. '
' → logprob: -10.327033996582031
    5. '   ' → logprob: -10.327033996582031
    6. '	return' → logprob: -11.827033996582031
    7. '       ' → logprob: -11.952033996582031
    8. '               ' → logprob: -12.952033996582031
    9. ':return' → logprob: -13.327033996582031
    10. '{return' → logprob: -13.952033996582031

Token 382: ' ""' (ID: 3216)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25949496030807495
    2. ' []' → logprob: -1.5094950199127197
    3. '[]
' → logprob: -5.259494781494141
    4. ' []
' → logprob: -6.509494781494141
    5. '[]

' → logprob: -7.634494781494141
    6. ' []

' → logprob: -8.25949478149414
    7. 'None' → logprob: -10.25949478149414
    8. ' None' → logprob: -10.38449478149414
    9. ' ' → logprob: -11.13449478149414
    10. '0' → logprob: -11.75949478149414

Token 383: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03269800916314125
    2. '       ' → logprob: -3.907697916030884
    3. '\n' → logprob: -5.282698154449463
    4. '        
' → logprob: -5.532698154449463
    5. '<|end|>' → logprob: -6.532698154449463
    6. '
' → logprob: -7.157698154449463
    7. '

' → logprob: -8.157697677612305
    8. '
        
' → logprob: -8.907697677612305
    9. 'newline' → logprob: -9.282697677612305
    10. ',' → logprob: -10.157697677612305

Token 384: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009686567820608616
    2. '       ' → logprob: -4.884686470031738
    3. '        
' → logprob: -6.384686470031738
    4. '

' → logprob: -9.009686470031738
    5. '
' → logprob: -9.509686470031738
    6. '\n' → logprob: -9.634686470031738
    7. '
        
' → logprob: -9.759686470031738
    8. ' 
' → logprob: -10.759686470031738
    9. '    
' → logprob: -11.384686470031738
    10. '  
' → logprob: -11.884686470031738

Token 385: ' Already' (ID: 72560)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -1.179394006729126
    2. '#' → logprob: -1.304394006729126
    3. '       ' → logprob: -2.429394006729126
    4. '
' → logprob: -2.429394006729126
    5. 'No' → logprob: -2.804394006729126
    6. ' no' → logprob: -2.929394006729126
    7. '"' → logprob: -2.929394006729126
    8. ' #' → logprob: -3.804394006729126
    9. ' ' → logprob: -4.429393768310547
    10. ' No' → logprob: -4.554393768310547

Token 386: ' all' (ID: 722)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017472924664616585
    2. 'sol' → logprob: -7.001747131347656
    3. ' defeated' → logprob: -7.626747131347656
    4. ' solved' → logprob: -9.126747131347656
    5. 'done' → logprob: -9.751747131347656
    6. 'all' → logprob: -9.876747131347656
    7. 'vict' → logprob: -10.376747131347656
    8. 'no' → logprob: -11.126747131347656
    9. '```' → logprob: -11.126747131347656
    10. 'empty' → logprob: -11.251747131347656

Token 387: ' defeated' (ID: 53738)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.261489599943161
    2. 'en' → logprob: -1.5114896297454834
    3. ' enemies' → logprob: -5.511489391326904
    4. ' defeated' → logprob: -5.636489391326904
    5. 'clear' → logprob: -7.261489391326904
    6. 'dead' → logprob: -7.636489391326904
    7. '```' → logprob: -8.386489868164062
    8. 'cle' → logprob: -9.136489868164062
    9. 'zeros' → logprob: -9.886489868164062
    10. '0' → logprob: -9.886489868164062

Token 388: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02731521986424923
    2. '       ' → logprob: -3.777315139770508
    3. '<|end|>' → logprob: -5.902315139770508
    4. '        
' → logprob: -7.152315139770508
    5. '
' → logprob: -8.152315139770508
    6. '<|end|>' → logprob: -9.527315139770508
    7. '\n' → logprob: -10.277315139770508
    8. '

' → logprob: -10.527315139770508
    9. ',' → logprob: -11.027315139770508
    10. 'newline' → logprob: -11.027315139770508

Token 389: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010172496549785137
    2. '       ' → logprob: -4.760172367095947
    3. '        
' → logprob: -6.885172367095947
    4. '
' → logprob: -8.010172843933105
    5. '  
' → logprob: -9.885172843933105
    6. '    
' → logprob: -10.010172843933105
    7. '<|end|>' → logprob: -10.510172843933105
    8. '\n' → logprob: -10.760172843933105
    9. ' 
' → logprob: -11.135172843933105
    10. '`
' → logprob: -11.510172843933105

Token 390: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21372753381729126
    2. 'self' → logprob: -1.7137274742126465
    3. 'from' (adapté à ' from') → logprob: -4.8387274742126465
    4. 'import' → logprob: -5.5887274742126465
    5. ' self' → logprob: -7.9637274742126465
    6. '
' → logprob: -9.338727951049805
    7. ' from' → logprob: -10.088727951049805
    8. '   ' → logprob: -10.463727951049805
    9. 'queue' → logprob: -10.838727951049805
    10. '        
' → logprob: -10.838727951049805

Token 391: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.002517277142032981
    2. 'collections' → logprob: -6.002517223358154
    3. ' queue' → logprob: -10.127517700195312
    4. ' collection' → logprob: -14.627517700195312
    5. '_' → logprob: -14.877517700195312
    6. ' copy' → logprob: -15.252517700195312
    7. '```' → logprob: -16.002517700195312
    8. ' ' → logprob: -16.252517700195312
    9. ' itertools' → logprob: -16.627517700195312
    10. ' heap' → logprob: -16.877517700195312

Token 392: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01748678833246231
    2. ' import' → logprob: -4.392486572265625
    3. 'port' → logprob: -5.767486572265625
    4. 'n' → logprob: -6.642486572265625
    5. 'ation' → logprob: -8.392486572265625
    6. '```' → logprob: -9.767486572265625
    7. 'on' → logprob: -9.892486572265625
    8. 'ort' → logprob: -10.267486572265625
    9. '
' → logprob: -10.767486572265625
    10. '_import' → logprob: -11.017486572265625

Token 393: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.029753148555755615
    2. ' deque' → logprob: -3.5297532081604004
    3. 'de' → logprob: -13.404752731323242
    4. '```' → logprob: -13.904752731323242
    5. 'collections' → logprob: -16.029752731323242
    6. '
' → logprob: -16.029752731323242
    7. '   ' → logprob: -17.279752731323242
    8. 'Deque' → logprob: -17.904752731323242
    9. '`' → logprob: -18.029752731323242
    10. '	de' → logprob: -19.029752731323242

Token 394: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012687635608017445
    2. '       ' → logprob: -4.387687683105469
    3. 'self' → logprob: -10.012687683105469
    4. '

' → logprob: -10.262687683105469
    5. '        
' → logprob: -10.262687683105469
    6. '<|end|>' → logprob: -10.512687683105469
    7. '
' → logprob: -11.012687683105469
    8. '  
' → logprob: -12.387687683105469
    9. '```' → logprob: -13.387687683105469
    10. ' 
' → logprob: -13.512687683105469

Token 395: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0013592824107035995
    2. '       ' → logprob: -6.876359462738037
    3. '<|end|>' → logprob: -8.876358985900879
    4. 'self' → logprob: -9.626358985900879
    5. '
' → logprob: -10.126358985900879
    6. '        
' → logprob: -10.626358985900879
    7. '

' → logprob: -11.251358985900879
    8. '' → logprob: -11.501358985900879
    9. ' self' → logprob: -12.126358985900879
    10. '		
' → logprob: -12.251358985900879

Token 396: ' queue' (ID: 13661)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5720458626747131
    2. 'self' → logprob: -0.9470458626747131
    3. '       ' → logprob: -3.6970458030700684
    4. '
' → logprob: -4.572045803070068
    5. ' queue' → logprob: -4.822045803070068
    6. 'queue' (adapté à ' queue') → logprob: -5.572045803070068
    7. '        
' → logprob: -8.072046279907227
    8. 'deque' → logprob: -9.072046279907227
    9. 'q' → logprob: -9.322046279907227
    10. ' deque' → logprob: -9.572046279907227

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34859180450439453
    2. '=' → logprob: -1.2235918045043945
    3. '.append' → logprob: -9.473591804504395
    4. '.' → logprob: -9.723591804504395
    5. '.=' → logprob: -12.348591804504395
    6. '.extend' → logprob: -13.598591804504395
    7. ' ' → logprob: -13.723591804504395
    8. '<|end|>' → logprob: -13.848591804504395
    9. ')' → logprob: -14.473591804504395
    10. '.add' → logprob: -15.098591804504395

Token 398: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.16022484004497528
    2. 'deque' → logprob: -1.9102247953414917
    3. 'Deque' → logprob: -14.910224914550781
    4. 'de' → logprob: -15.160224914550781
    5. '(de' → logprob: -17.16022491455078
    6. ' dequeue' → logprob: -18.66022491455078
    7. '   ' → logprob: -18.78522491455078
    8. '	de' → logprob: -18.91022491455078
    9. ' collections' → logprob: -19.16022491455078
    10. 'collections' → logprob: -19.66022491455078

Token 399: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.4781546890735626
    2. '([' → logprob: -1.2281546592712402
    3. '()
' → logprob: -2.4781546592712402
    4. '()' → logprob: -5.72815465927124
    5. '[(' → logprob: -9.978155136108398
    6. '([
' → logprob: -11.353155136108398
    7. '(' → logprob: -11.603155136108398
    8. '()

' → logprob: -11.853155136108398
    9. '([])
' → logprob: -11.978155136108398
    10. '((' → logprob: -12.228155136108398

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3178982138633728
    2. ' queue' → logprob: -1.8178982734680176
    3. 'queue' → logprob: -2.3178982734680176
    4. '(queue' → logprob: -4.567898273468018
    5. 'start' → logprob: -7.317898273468018
    6. ' start' → logprob: -8.44289779663086
    7. '.queue' → logprob: -9.81789779663086
    8. '        
' → logprob: -10.56789779663086
    9. 'state' → logprob: -10.69289779663086
    10. '	queue' → logprob: -10.94289779663086

Token 401: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.051189523190259933
    2. ' queue' → logprob: -3.051189422607422
    3. 'start' → logprob: -6.176189422607422
    4. '       ' → logprob: -7.926189422607422
    5. 'state' → logprob: -9.426189422607422
    6. ' start' → logprob: -10.426189422607422
    7. '(queue' → logprob: -10.926189422607422
    8. '
' → logprob: -11.676189422607422
    9. 'visited' → logprob: -11.676189422607422
    10. 'self' → logprob: -11.926189422607422

Token 402: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.076218025758862e-05
    2. '.' → logprob: -10.625070571899414
    3. '.extend' → logprob: -10.625070571899414
    4. '.enqueue' → logprob: -11.625070571899414
    5. '.p' → logprob: -12.875070571899414
    6. ').' → logprob: -12.875070571899414
    7. ' .' → logprob: -13.000070571899414
    8. '.put' → logprob: -13.500070571899414
    9. 'append' → logprob: -13.750070571899414
    10. '_append' → logprob: -13.750070571899414

Token 403: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.1421869695186615
    2. '((' → logprob: -2.2671868801116943
    3. '(self' → logprob: -3.6421868801116943
    4. '(' → logprob: -6.392187118530273
    5. 'start' → logprob: -6.892187118530273
    6. '(s' → logprob: -11.392187118530273
    7. 'self' → logprob: -11.517187118530273
    8. ' start' → logprob: -11.892187118530273
    9. ' (' → logprob: -11.892187118530273
    10. '(Start' → logprob: -12.767187118530273

Token 404: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -4.4060561776859686e-05
    2. 'state' → logprob: -10.125043869018555
    3. ')' → logprob: -13.250043869018555
    4. '=' → logprob: -14.375043869018555
    5. '-state' → logprob: -15.125043869018555
    6. ' state' → logprob: -15.625043869018555
    7. 'State' → logprob: -15.875043869018555
    8. '_' → logprob: -16.125043869018555
    9. '   ' → logprob: -16.250043869018555
    10. ')
' → logprob: -16.250043869018555

Token 405: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3134134113788605
    2. ')
' → logprob: -1.313413381576538
    3. '       ' → logprob: -8.938413619995117
    4. ')
' → logprob: -11.063413619995117
    5. ')

' → logprob: -13.313413619995117
    6. ' )' → logprob: -14.063413619995117
    7. ' )
' → logprob: -14.188413619995117
    8. '
' → logprob: -14.438413619995117
    9. '   ' → logprob: -15.438413619995117
    10. '<|end|>' → logprob: -15.688413619995117

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006408873945474625
    2. 'self' → logprob: -5.38140869140625
    3. ' self' → logprob: -6.38140869140625
    4. '<|end|>' → logprob: -10.00640869140625
    5. '```' → logprob: -11.13140869140625
    6. '
' → logprob: -11.75640869140625
    7. '        
' → logprob: -11.75640869140625
    8. '   ' → logprob: -11.88140869140625
    9. ',' → logprob: -12.63140869140625
    10. '<|end|>' → logprob: -13.50640869140625

Token 407: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0395047590136528
    2. '       ' → logprob: -3.2895047664642334
    3. ' self' → logprob: -6.539504528045654
    4. 'visited' → logprob: -12.039505004882812
    5. '
' → logprob: -12.414505004882812
    6. '   ' → logprob: -12.789505004882812
    7. 'while' → logprob: -13.289505004882812
    8. '	self' → logprob: -13.789505004882812
    9. '        
' → logprob: -15.164505004882812
    10. '```' → logprob: -15.289505004882812

Token 408: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -6.456358823925257e-05
    2. '.' → logprob: -10.750064849853516
    3. '.queue' → logprob: -11.125064849853516
    4. '.visit' → logprob: -11.375064849853516
    5. ' .' → logprob: -11.500064849853516
    6. 'visited' → logprob: -12.750064849853516
    7. '.parent' → logprob: -14.500064849853516
    8. '.selected' → logprob: -14.625064849853516
    9. '.v' → logprob: -14.625064849853516
    10. '.visible' → logprob: -14.625064849853516

Token 409: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -2.057743949990254e-05
    2. '_' → logprob: -11.000020980834961
    3. 'isted' → logprob: -13.500020980834961
    4. '[' → logprob: -14.375020980834961
    5. '
' → logprob: -15.125020980834961
    6. '```' → logprob: -15.125020980834961
    7. 'ITED' → logprob: -15.625020980834961
    8. '\' → logprob: -15.875020980834961
    9. '   ' → logprob: -16.12502098083496
    10. '__' → logprob: -16.12502098083496

Token 410: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0002680112374946475
    2. '[' → logprob: -8.37526798248291
    3. '[state' → logprob: -11.12526798248291
    4. ' =' → logprob: -11.25026798248291
    5. '=' → logprob: -11.87526798248291
    6. '[self' → logprob: -13.50026798248291
    7. '=start' → logprob: -14.25026798248291
    8. '[end' → logprob: -15.37526798248291
    9. ' [' → logprob: -16.000268936157227
    10. '[current' → logprob: -17.000268936157227

Token 411: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.000477620807942003
    2. '_' → logprob: -8.37547779083252
    3. 'state' → logprob: -8.75047779083252
    4. ')' → logprob: -10.87547779083252
    5. '_states' → logprob: -11.37547779083252
    6. '_)' → logprob: -11.75047779083252
    7. 'State' → logprob: -12.00047779083252
    8. '_token' → logprob: -12.12547779083252
    9. '```' → logprob: -12.37547779083252
    10. '_]' → logprob: -12.50047779083252

Token 412: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000897289311978966
    2. ']=' → logprob: -7.250897407531738
    3. ' ]' → logprob: -9.250897407531738
    4. '=' → logprob: -9.750897407531738
    5. ' =' → logprob: -10.375897407531738
    6. ')' → logprob: -14.000897407531738
    7. '=True' → logprob: -14.250897407531738
    8. ' ' → logprob: -16.375896453857422
    9. 'True' → logprob: -16.625896453857422
    10. '   ' → logprob: -16.875896453857422

Token 413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022787988185883
    2. ' =' → logprob: -1.91022789478302
    3. '=True' → logprob: -12.53522777557373
    4. ']' → logprob: -17.535228729248047
    5. ']=' → logprob: -17.660228729248047
    6. '[' → logprob: -18.285228729248047
    7. ' ' → logprob: -18.410228729248047
    8. '=
' → logprob: -18.910228729248047
    9. '=set' → logprob: -18.910228729248047
    10. ')' → logprob: -19.410228729248047

Token 414: ' True' (ID: 6432)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06340497732162476
    2. '""' → logprob: -2.8134050369262695
    3. '''' → logprob: -6.9384050369262695
    4. '(None' → logprob: -8.31340503692627
    5. ' None' → logprob: -9.31340503692627
    6. '"' → logprob: -9.93840503692627
    7. '(' → logprob: -9.93840503692627
    8. '("")' → logprob: -11.18840503692627
    9. '0' → logprob: -12.18840503692627
    10. '[]' → logprob: -12.18840503692627

Token 415: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4042506217956543
    2. '
' → logprob: -1.1542506217956543
    3. '<|end|>' → logprob: -4.404250621795654
    4. ',' → logprob: -6.154250621795654
    5. ' while' → logprob: -7.404250621795654
    6. ',
' → logprob: -7.404250621795654
    7. '        
' → logprob: -7.404250621795654
    8. 'while' → logprob: -7.779250621795654
    9. 'self' → logprob: -8.904251098632812
    10. '<|end|>' → logprob: -9.154251098632812

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004621661268174648
    2. '
' → logprob: -6.129621505737305
    3. '<|end|>' → logprob: -7.254621505737305
    4. ' while' → logprob: -7.379621505737305
    5. 'while' → logprob: -7.754621505737305
    6. ',' → logprob: -8.129621505737305
    7. 'self' → logprob: -8.879621505737305
    8. ' self' → logprob: -9.879621505737305
    9. '```' → logprob: -10.254621505737305
    10. '   ' → logprob: -10.379621505737305

Token 417: ' self' (ID: 1051)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09363113343715668
    2. 'self' (adapté à ' self') → logprob: -2.4686310291290283
    3. '       ' → logprob: -5.593631267547607
    4. ' while' → logprob: -7.468631267547607
    5. '
' → logprob: -8.21863079071045
    6. '   ' → logprob: -10.21863079071045
    7. 'parent' → logprob: -10.46863079071045
    8. ' self' → logprob: -10.71863079071045
    9. 'from' → logprob: -10.96863079071045
    10. '        
' → logprob: -12.71863079071045

Token 418: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0032605347223579884
    2. 'parent' → logprob: -5.753260612487793
    3. '.queue' → logprob: -9.753260612487793
    4. ' .' → logprob: -11.628260612487793
    5. ' parent' → logprob: -12.253260612487793
    6. '.' → logprob: -12.253260612487793
    7. '_parent' → logprob: -13.003260612487793
    8. '.action' → logprob: -13.628260612487793
    9. '
' → logprob: -14.503260612487793
    10. 'queue' → logprob: -14.628260612487793

Token 419: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -6.825890159234405e-05
    2. '_' → logprob: -10.500068664550781
    3. '_state' → logprob: -11.625068664550781
    4. '_states' → logprob: -12.125068664550781
    5. '_s' → logprob: -12.250068664550781
    6. '_maps' → logprob: -12.250068664550781
    7. '_queue' → logprob: -12.625068664550781
    8. '[_' → logprob: -13.250068664550781
    9. '_token' → logprob: -13.500068664550781
    10. 'Map' → logprob: -13.625068664550781

Token 420: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0014560704585164785
    2. '=' → logprob: -7.626456260681152
    3. ' =' → logprob: -7.751456260681152
    4. '[' → logprob: -8.001456260681152
    5. '[state' → logprob: -8.751456260681152
    6. '=start' → logprob: -10.376456260681152
    7. '[end' → logprob: -12.501456260681152
    8. '[parent' → logprob: -13.001456260681152
    9. '[next' → logprob: -13.626456260681152
    10. '[
' → logprob: -13.751456260681152

Token 421: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.026327118277549744
    2. 'state' → logprob: -3.651327133178711
    3. 'State' → logprob: -11.901327133178711
    4. ']' → logprob: -12.151327133178711
    5. 'start' → logprob: -12.401327133178711
    6. '_STATE' → logprob: -13.776327133178711
    7. '-state' → logprob: -13.901327133178711
    8. '=' → logprob: -14.151327133178711
    9. ' state' → logprob: -14.276327133178711
    10. 'token' → logprob: -14.276327133178711

Token 422: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22934293746948242
    2. ' =' → logprob: -2.2293429374694824
    3. ']' → logprob: -2.3543429374694824
    4. ']=' → logprob: -6.104342937469482
    5. '=None' → logprob: -9.47934341430664
    6. ')' → logprob: -9.85434341430664
    7. 'None' → logprob: -11.47934341430664
    8. ',' → logprob: -11.72934341430664
    9. ' ]' → logprob: -12.60434341430664
    10. ')=' → logprob: -12.72934341430664

Token 423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019308974733576179
    2. ' =' → logprob: -6.2519307136535645
    3. '=None' → logprob: -13.001931190490723
    4. 'None' → logprob: -18.876930236816406
    5. ']=' → logprob: -18.876930236816406
    6. '=

' → logprob: -19.001930236816406
    7. ',' → logprob: -19.126930236816406
    8. '=
' → logprob: -19.126930236816406
    9. '=}' → logprob: -19.751930236816406
    10. '=null' → logprob: -20.126930236816406

Token 424: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00021140782337170094
    2. '(None' → logprob: -8.500211715698242
    3. ' None' → logprob: -11.750211715698242
    4. '_None' → logprob: -18.500211715698242
    5. ',None' → logprob: -19.375211715698242
    6. '=None' → logprob: -19.875211715698242
    7. 'none' → logprob: -20.000211715698242
    8. 'null' → logprob: -20.125211715698242
    9. '   ' → logprob: -20.625211715698242
    10. '(' → logprob: -22.125211715698242

Token 425: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09934043884277344
    2. '
' → logprob: -2.4743404388427734
    3. '<|end|>' → logprob: -4.849340438842773
    4. ',' → logprob: -6.724340438842773
    5. '<|end|>' → logprob: -7.849340438842773
    6. '        
' → logprob: -7.974340438842773
    7. ',
' → logprob: -9.224340438842773
    8. 'self' → logprob: -9.474340438842773
    9. '```' → logprob: -9.849340438842773
    10. ')' → logprob: -9.974340438842773

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06367211788892746
    2. '
' → logprob: -3.5636720657348633
    3. '<|end|>' → logprob: -3.5636720657348633
    4. '<|end|>' → logprob: -5.938672065734863
    5. ',' → logprob: -7.063672065734863
    6. '        
' → logprob: -8.438672065734863
    7. '```' → logprob: -8.938672065734863
    8. 'tokens' → logprob: -9.063672065734863
    9. 'queue' → logprob: -9.063672065734863
    10. ' and' → logprob: -9.313672065734863

Token 427: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08569779992103577
    2. 'while' → logprob: -2.835697889328003
    3. '       ' → logprob: -4.210697650909424
    4. 'current' → logprob: -5.585697650909424
    5. 'state' → logprob: -6.335697650909424
    6. 'start' → logprob: -6.960697650909424
    7. '
' → logprob: -7.210697650909424
    8. '   ' → logprob: -8.460698127746582
    9. ' self' → logprob: -8.585698127746582
    10. ' while' → logprob: -8.835698127746582

Token 428: '.action' (ID: 22351)
  Prédit: '.action'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.action' → logprob: -0.00020330198458395898
    2. 'action' → logprob: -9.250203132629395
    3. ' .' → logprob: -10.250203132629395
    4. '.' → logprob: -10.750203132629395
    5. '.queue' → logprob: -10.750203132629395
    6. '
' → logprob: -12.125203132629395
    7. '.actions' → logprob: -12.750203132629395
    8. '.current' → logprob: -13.125203132629395
    9. '.act' → logprob: -13.125203132629395
    10. '.state' → logprob: -13.625203132629395

Token 429: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -6.682846287731081e-05
    2. '_queue' → logprob: -10.375066757202148
    3. 's' → logprob: -10.750066757202148
    4. '_' → logprob: -12.750066757202148
    5. ' =' → logprob: -13.125066757202148
    6. '_mapping' → logprob: -13.125066757202148
    7. ' _' → logprob: -13.250066757202148
    8. '_maps' → logprob: -13.500066757202148
    9. '=' → logprob: -13.875066757202148
    10. 'Map' → logprob: -15.000066757202148

Token 430: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.006293614394962788
    2. ' =' → logprob: -5.631293773651123
    3. '=' → logprob: -6.381293773651123
    4. '[state' → logprob: -7.381293773651123
    5. '[' → logprob: -8.256293296813965
    6. '=start' → logprob: -9.631293296813965
    7. '[top' → logprob: -11.131293296813965
    8. '[source' → logprob: -11.881293296813965
    9. '[end' → logprob: -12.256293296813965
    10. '[next' → logprob: -12.381293296813965

Token 431: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0869368389248848
    2. 'state' → logprob: -2.8369369506835938
    3. 'start' → logprob: -4.336936950683594
    4. '[start' → logprob: -4.586936950683594
    5. '[state' → logprob: -7.086936950683594
    6. '_start' → logprob: -9.086936950683594
    7. 'State' → logprob: -9.211936950683594
    8. '-state' → logprob: -9.836936950683594
    9. '=' → logprob: -10.086936950683594
    10. '_states' → logprob: -10.586936950683594

Token 432: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40723755955696106
    2. '=' → logprob: -1.1572375297546387
    3. ' =' → logprob: -4.532237529754639
    4. ']=' → logprob: -5.157237529754639
    5. ')' → logprob: -5.657237529754639
    6. ')=' → logprob: -9.282238006591797
    7. '=None' → logprob: -10.657238006591797
    8. ' ]' → logprob: -10.782238006591797
    9. 'None' → logprob: -12.407238006591797
    10. '])' → logprob: -12.532238006591797

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858827963471413
    2. ' =' → logprob: -3.048588275909424
    3. '=None' → logprob: -14.048588752746582
    4. ' ' → logprob: -18.298587799072266
    5. '=[]' → logprob: -18.423587799072266
    6. '=}' → logprob: -18.673587799072266
    7. '=
' → logprob: -18.673587799072266
    8. ']=' → logprob: -19.548587799072266
    9. '=''' → logprob: -19.548587799072266
    10. '=

' → logprob: -19.548587799072266

Token 434: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.003361889161169529
    2. '""' → logprob: -5.753361701965332
    3. ' None' → logprob: -8.878361701965332
    4. '''' → logprob: -10.628361701965332
    5. '"' → logprob: -11.003361701965332
    6. '[]' → logprob: -13.378361701965332
    7. '(None' → logprob: -14.128361701965332
    8. 'none' → logprob: -14.878361701965332
    9. 'null' → logprob: -15.003361701965332
    10. '''
' → logprob: -15.003361701965332

Token 435: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03410919010639191
    2. '<|end|>' → logprob: -3.659109115600586
    3. '       ' → logprob: -5.534109115600586
    4. '<|end|>' → logprob: -7.159109115600586
    5. '  
' → logprob: -7.284109115600586
    6. ')' → logprob: -7.659109115600586
    7. '        
' → logprob: -7.784109115600586
    8. ',
' → logprob: -8.159109115600586
    9. '

' → logprob: -8.534109115600586
    10. ',' → logprob: -9.159109115600586

Token 436: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14003144204616547
    2. '       ' → logprob: -2.265031337738037
    3. ' while' → logprob: -4.765031337738037
    4. 'while' → logprob: -5.140031337738037
    5. '        
' → logprob: -5.640031337738037
    6. '<|end|>' → logprob: -5.765031337738037
    7. '   ' → logprob: -6.015031337738037
    8. '    
' → logprob: -7.140031337738037
    9. '  
' → logprob: -8.140031814575195
    10. ')' → logprob: -8.140031814575195

Token 437: ' rectangles' (ID: 164265)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01789764314889908
    2. '       ' → logprob: -4.267897605895996
    3. ' while' → logprob: -5.642897605895996
    4. '
' → logprob: -8.767897605895996
    5. '   ' → logprob: -11.642897605895996
    6. '	while' → logprob: -11.767897605895996
    7. '        
' → logprob: -12.017897605895996
    8. '```' → logprob: -12.642897605895996
    9. 'While' → logprob: -13.642897605895996
    10. 'def' → logprob: -15.267897605895996

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00975679699331522
    2. '=' → logprob: -4.634756565093994
    3. ' ' → logprob: -14.509757041931152
    4. 's' → logprob: -15.384757041931152
    5. '=self' → logprob: -17.384756088256836
    6. ' =
' → logprob: -17.509756088256836
    7. '   ' → logprob: -18.384756088256836
    8. '  ' → logprob: -18.384756088256836
    9. ' ' → logprob: -18.509756088256836
    10. ')' → logprob: -18.634756088256836

Token 439: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889044284820557
    2. ' self' → logprob: -2.578890323638916
    3. '[self' → logprob: -14.828890800476074
    4. '(self' → logprob: -16.078889846801758
    5. '	self' → logprob: -16.203889846801758
    6. '   ' → logprob: -17.078889846801758
    7. '=self' → logprob: -17.828889846801758
    8. '
' → logprob: -18.078889846801758
    9. '       ' → logprob: -18.828889846801758
    10. '`' → logprob: -19.453889846801758

Token 440: '.generate' (ID: 33917)
  Prédit: '.generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.generate' → logprob: -0.005249176174402237
    2. 'generate' → logprob: -5.2552490234375
    3. '.' → logprob: -11.6302490234375
    4. 'enerate' → logprob: -12.6302490234375
    5. ' .' → logprob: -13.0052490234375
    6. '   ' → logprob: -15.1302490234375
    7. '_generate' → logprob: -15.5052490234375
    8. ' generate' → logprob: -15.8802490234375
    9. ' ' → logprob: -16.6302490234375
    10. 'self' → logprob: -16.8802490234375

Token 441: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -2.45848218582978e-06
    2. 'all' → logprob: -13.00000286102295
    3. '_rectangle' → logprob: -16.500001907348633
    4. 'All' → logprob: -17.250001907348633
    5. '```' → logprob: -18.125001907348633
    6. ' all' → logprob: -18.250001907348633
    7. '_rect' → logprob: -18.750001907348633
    8. '"_' → logprob: -19.375001907348633
    9. '_ALL' → logprob: -19.375001907348633
    10. '_' → logprob: -19.375001907348633

Token 442: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0010469816625118256
    2. 'rect' → logprob: -6.876047134399414
    3. '_rectangle' → logprob: -11.251047134399414
    4. '_Rect' → logprob: -15.251047134399414
    5. 'rectangle' → logprob: -15.251047134399414
    6. '(rect' → logprob: -15.251047134399414
    7. '_rec' → logprob: -16.001047134399414
    8. 'Rect' → logprob: -16.126047134399414
    9. '_' → logprob: -16.501047134399414
    10. '```' → logprob: -16.751047134399414

Token 443: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0004746406921185553
    2. 's' → logprob: -8.00047492980957
    3. 'angle' → logprob: -9.12547492980957
    4. 'anges' → logprob: -11.12547492980957
    5. 'ang' → logprob: -12.00047492980957
    6. 'ANGLES' → logprob: -12.87547492980957
    7. 'es' → logprob: -13.87547492980957
    8. 'an' → logprob: -13.87547492980957
    9. 'ables' → logprob: -14.37547492980957
    10. '[' → logprob: -14.50047492980957

Token 444: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3020636737346649
    2. '()' → logprob: -1.8020637035369873
    3. '()
' → logprob: -3.0520637035369873
    4. '<|end|>' → logprob: -3.8020637035369873
    5. '       ' → logprob: -4.302063465118408
    6. '<|end|>' → logprob: -5.427063465118408
    7. '        
' → logprob: -6.677063465118408
    8. ':' → logprob: -6.927063465118408
    9. '(' → logprob: -7.177063465118408
    10. '  
' → logprob: -7.177063465118408

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45848411321640015
    2. '
' → logprob: -1.208484172821045
    3. '<|end|>' → logprob: -3.583484172821045
    4. ' while' → logprob: -3.958484172821045
    5. 'while' → logprob: -4.583484172821045
    6. '        
' → logprob: -5.333484172821045
    7. '   ' → logprob: -6.333484172821045
    8. '  
' → logprob: -7.083484172821045
    9. ')' → logprob: -7.208484172821045
    10. '    
' → logprob: -7.333484172821045

Token 446: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.013098694384098053
    2. ' while' → logprob: -5.01309871673584
    3. '       ' → logprob: -5.38809871673584
    4. '
' → logprob: -6.38809871673584
    5. '	while' → logprob: -10.01309871673584
    6. '        
' → logprob: -10.38809871673584
    7. '```' → logprob: -11.13809871673584
    8. '   ' → logprob: -11.63809871673584
    9. 'While' → logprob: -12.63809871673584
    10. 'current' → logprob: -13.01309871673584

Token 447: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.3870621621608734
    2. 'queue' → logprob: -1.1370621919631958
    3. '(queue' → logprob: -9.137062072753906
    4. ' len' → logprob: -10.387062072753906
    5. 'len' → logprob: -10.512062072753906
    6. 'self' → logprob: -11.637062072753906
    7. '	queue' → logprob: -11.762062072753906
    8. 'True' → logprob: -12.762062072753906
    9. 'que' → logprob: -13.512062072753906
    10. '.queue' → logprob: -13.762062072753906

Token 448: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012700467370450497
    2. ':
' → logprob: -4.38770055770874
    3. '.p' → logprob: -9.637700080871582
    4. '.' → logprob: -10.637700080871582
    5. '.pop' → logprob: -10.887700080871582
    6. 'opleft' → logprob: -10.887700080871582
    7. 'deque' → logprob: -11.637700080871582
    8. 'pop' → logprob: -11.762700080871582
    9. 'p' → logprob: -11.887700080871582
    10. '.dequeue' → logprob: -12.387700080871582

Token 449: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13917630910873413
    2. 'state' → logprob: -2.389176368713379
    3. 'current' → logprob: -3.889176368713379
    4. ' current' → logprob: -4.389176368713379
    5. ' state' → logprob: -5.264176368713379
    6. '   ' → logprob: -10.014176368713379
    7. '_state' → logprob: -10.514176368713379
    8. '```' → logprob: -10.514176368713379
    9. 'curr' → logprob: -10.764176368713379
    10. ',' → logprob: -12.139176368713379

Token 450: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.07980804890394211
    2. 'state' → logprob: -2.829807996749878
    3. ' current' → logprob: -4.079808235168457
    4. ' state' → logprob: -8.204808235168457
    5. 'curr' → logprob: -8.204808235168457
    6. '           ' → logprob: -8.829808235168457
    7. 'cur' → logprob: -9.579808235168457
    8. ' curr' → logprob: -12.704808235168457
    9. '               ' → logprob: -12.829808235168457
    10. '   ' → logprob: -13.204808235168457

Token 451: ' =' (ID: 314)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0001996066712308675
    2. ' =' → logprob: -9.125199317932129
    3. 'state' → logprob: -9.875199317932129
    4. '_' → logprob: -10.500199317932129
    5. '=' → logprob: -11.500199317932129
    6. '_states' → logprob: -14.750199317932129
    7. '_grid' → logprob: -15.125199317932129
    8. ' state' → logprob: -16.000200271606445
    9. 'State' → logprob: -16.125200271606445
    10. '_STATE' → logprob: -16.375200271606445

Token 452: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.04858759790658951
    2. ' queue' → logprob: -3.0485875606536865
    3. 'que' → logprob: -15.923587799072266
    4. '	queue' → logprob: -16.673587799072266
    5. '(queue' → logprob: -17.298587799072266
    6. '.queue' → logprob: -18.923587799072266
    7. '   ' → logprob: -19.298587799072266
    8. 'deque' → logprob: -20.173587799072266
    9. '       ' → logprob: -20.298587799072266
    10. ' ' → logprob: -20.798587799072266

Token 453: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00010163593105971813
    2. '.pop' → logprob: -9.875102043151855
    3. '.' → logprob: -11.125102043151855
    4. '=' → logprob: -11.375102043151855
    5. '   ' → logprob: -11.875102043151855
    6. '           ' → logprob: -12.000102043151855
    7. '       ' → logprob: -12.625102043151855
    8. 'p' → logprob: -12.750102043151855
    9. ' =' → logprob: -13.625102043151855
    10. ' .' → logprob: -14.250102043151855

Token 454: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0005896099028177559
    2. 'op' → logprob: -7.500589847564697
    3. 'ople' → logprob: -10.250589370727539
    4. 'opl' → logprob: -13.750589370727539
    5. '```' → logprob: -16.00058937072754
    6. 'opf' → logprob: -16.75058937072754
    7. 'left' → logprob: -17.50058937072754
    8. 'oplevel' → logprob: -17.50058937072754
    9. 'opy' → logprob: -17.87558937072754
    10. 'opt' → logprob: -17.87558937072754

Token 455: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7212365865707397
    2. '           ' → logprob: -1.0962365865707397
    3. ')' → logprob: -2.7212367057800293
    4. '            
' → logprob: -3.3462367057800293
    5. ',' → logprob: -3.4712367057800293
    6. '       ' → logprob: -4.221236705780029
    7. '<|end|>' → logprob: -4.596236705780029
    8. '               ' → logprob: -5.721236705780029
    9. '<|end|>' → logprob: -6.096236705780029
    10. '            ' → logprob: -6.596236705780029

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.045523907989263535
    2. 'current' → logprob: -3.5455238819122314
    3. ' current' → logprob: -5.0455241203308105
    4. '       ' → logprob: -6.1705241203308105
    5. 'enemy' → logprob: -6.4205241203308105
    6. '   ' → logprob: -6.5455241203308105
    7. '
' → logprob: -7.0455241203308105
    8. 'grid' → logprob: -7.0455241203308105
    9. ' for' → logprob: -7.6705241203308105
    10. '            
' → logprob: -7.9205241203308105

Token 457: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09437597543001175
    2. 'current' (adapté à ' current') → logprob: -2.5943760871887207
    3. 'if' → logprob: -4.844376087188721
    4. ' for' → logprob: -5.719376087188721
    5. '           ' → logprob: -5.719376087188721
    6. 'grid' → logprob: -7.594376087188721
    7. 'enemy' → logprob: -8.094375610351562
    8. ' if' → logprob: -10.719375610351562
    9. ' current' → logprob: -10.719375610351562
    10. 'curr' → logprob: -11.219375610351562

Token 458: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.0033303992822766304
    2. '_enemy' → logprob: -6.253330230712891
    3. '_state' → logprob: -7.253330230712891
    4. '_' → logprob: -7.628330230712891
    5. 'grid' → logprob: -9.12833023071289
    6. 'Grid' → logprob: -9.87833023071289
    7. '_obj' → logprob: -11.25333023071289
    8. 'Enemy' → logprob: -11.25333023071289
    9. 'enemy' → logprob: -12.37833023071289
    10. '_en' → logprob: -12.62833023071289

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740857779979706
    2. '=' → logprob: -0.974085807800293
    3. ' ' → logprob: -13.599085807800293
    4. 'grid' → logprob: -13.849085807800293
    5. '_grid' → logprob: -13.974085807800293
    6. '_obj' → logprob: -14.099085807800293
    7. ')' → logprob: -14.224085807800293
    8. '_' → logprob: -14.974085807800293
    9. 's' → logprob: -14.974085807800293
    10. '=
' → logprob: -15.224085807800293

Token 460: ' Enemy' (ID: 64111)
  Prédit: 'Enemy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Enemy' → logprob: -0.02655583806335926
    2. '[' → logprob: -3.6515557765960693
    3. ' Enemy' → logprob: -8.651556015014648
    4. '[list' → logprob: -10.276556015014648
    5. '[self' → logprob: -10.651556015014648
    6. ' [' → logprob: -11.276556015014648
    7. 'self' → logprob: -12.401556015014648
    8. 'list' → logprob: -13.401556015014648
    9. '[[' → logprob: -13.526556015014648
    10. '[
' → logprob: -14.276556015014648

Token 461: 'Grid' (ID: 5351)
  Prédit: 'Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -7.896309739408025e-07
    2. 'grid' → logprob: -15.625000953674316
    3. '<Grid' → logprob: -15.750000953674316
    4. '	Grid' → logprob: -16.0
    5. 'Enemy' → logprob: -16.75
    6. '(Grid' → logprob: -17.25
    7. '_grid' → logprob: -17.75
    8. ' Grid' → logprob: -18.25
    9. '
' → logprob: -18.75
    10. 'Gr' → logprob: -19.125

Token 462: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47463101148605347
    2. 'self' → logprob: -0.9746310114860535
    3. '(len' → logprob: -8.349631309509277
    4. 'len' → logprob: -8.349631309509277
    5. ' self' → logprob: -9.599631309509277
    6. '(' → logprob: -12.349631309509277
    7. '
' → logprob: -12.474631309509277
    8. '[self' → logprob: -13.599631309509277
    9. '(
' → logprob: -14.224631309509277
    10. ' (' → logprob: -14.224631309509277

Token 463: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00043615259346552193
    2. 'n' → logprob: -8.125435829162598
    3. 'self' → logprob: -9.000435829162598
    4. '.' → logprob: -11.125435829162598
    5. '.
' → logprob: -14.250435829162598
    6. 'len' → logprob: -15.000435829162598
    7. '_n' → logprob: -15.125435829162598
    8. '
' → logprob: -16.000436782836914
    9. '   ' → logprob: -16.625436782836914
    10. '	n' → logprob: -16.625436782836914

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005277725285850465
    2. ',[' → logprob: -7.750527858734131
    3. ',list' → logprob: -9.750527381896973
    4. ',
' → logprob: -11.000527381896973
    5. ',current' → logprob: -11.625527381896973
    6. '[list' → logprob: -12.500527381896973
    7. ' ,' → logprob: -12.500527381896973
    8. '[' → logprob: -13.125527381896973
    9. '[current' → logprob: -13.750527381896973
    10. ' ,[' → logprob: -13.875527381896973

Token 465: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4287174344062805
    2. '[list' → logprob: -1.1787173748016357
    3. '[current' → logprob: -3.4287173748016357
    4. ' [' → logprob: -5.178717613220215
    5. '[List' → logprob: -6.803717613220215
    6. '[array' → logprob: -7.803717613220215
    7. '[next' → logprob: -8.303717613220215
    8. '[self' → logprob: -8.678717613220215
    9. '[to' → logprob: -9.053717613220215
    10. '[state' → logprob: -9.303717613220215

Token 466: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.722539834911004e-05
    2. 'row' → logprob: -9.250097274780273
    3. ' list' → logprob: -14.000097274780273
    4. '[list' → logprob: -15.250097274780273
    5. '(list' → logprob: -18.000097274780273
    6. '
' → logprob: -18.625097274780273
    7. 'r' → logprob: -19.000097274780273
    8. '[row' → logprob: -19.000097274780273
    9. '[' → logprob: -19.125097274780273
    10. '   ' → logprob: -19.500097274780273

Token 467: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.38691163063049316
    2. '(row' → logprob: -1.1369116306304932
    3. '(r' → logprob: -10.386911392211914
    4. 'r' → logprob: -12.011911392211914
    5. ' row' → logprob: -13.136911392211914
    6. 'state' → logprob: -14.511911392211914
    7. '(' → logprob: -14.886911392211914
    8. '	row' → logprob: -15.886911392211914
    9. '=row' → logprob: -16.011911392211914
    10. 'rows' → logprob: -16.136911392211914

Token 468: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06725115329027176
    2. 'for' → logprob: -3.567251205444336
    3. '(row' → logprob: -4.067251205444336
    4. ' for' → logprob: -4.317251205444336
    5. '(current' → logprob: -5.817251205444336
    6. 'current' → logprob: -6.067251205444336
    7. '(r' → logprob: -7.567251205444336
    8. 'row' → logprob: -8.067251205444336
    9. '           ' → logprob: -9.692251205444336
    10. ' )' → logprob: -10.692251205444336

Token 469: ' for' (ID: 395)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.1831240952014923
    2. 'for' → logprob: -2.05812406539917
    3. ' for' → logprob: -3.43312406539917
    4. '(current' → logprob: -5.68312406539917
    5. '(r' → logprob: -6.05812406539917
    6. 'row' → logprob: -7.05812406539917
    7. '(' → logprob: -8.933124542236328
    8. '(state' → logprob: -8.933124542236328
    9. '(token' → logprob: -9.058124542236328
    10. '(line' → logprob: -9.058124542236328

Token 470: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.18136237561702728
    2. 'current' → logprob: -1.8063623905181885
    3. ' current' → logprob: -6.681362152099609
    4. ' row' → logprob: -7.931362152099609
    5. '(row' → logprob: -14.30636215209961
    6. '(current' → logprob: -14.55636215209961
    7. 'cur' → logprob: -14.93136215209961
    8. 'r' → logprob: -14.93136215209961
    9. '
' → logprob: -15.05636215209961
    10. 'curr' → logprob: -15.43136215209961

Token 471: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03373629227280617
    2. 'in' → logprob: -3.408736228942871
    3. 'current' → logprob: -9.408736228942871
    4. ' ' → logprob: -12.908736228942871
    5. 'row' → logprob: -13.283736228942871
    6. '
' → logprob: -13.283736228942871
    7. ' current' → logprob: -14.658736228942871
    8. '  ' → logprob: -14.908736228942871
    9. 'import' → logprob: -15.158736228942871
    10. 's' → logprob: -15.408736228942871

Token 472: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0017044597771018744
    2. ' current' → logprob: -6.376704692840576
    3. 'cur' → logprob: -14.751704216003418
    4. '(current' → logprob: -14.876704216003418
    5. '   ' → logprob: -15.126704216003418
    6. '
' → logprob: -15.251704216003418
    7. 'self' → logprob: -15.251704216003418
    8. '[current' → logprob: -15.376704216003418
    9. ' ' → logprob: -15.626704216003418
    10. '.current' → logprob: -16.376705169677734

Token 473: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.20177291333675385
    2. '])' → logprob: -1.701772928237915
    3. '           ' → logprob: -8.326772689819336
    4. '])
' → logprob: -9.451772689819336
    5. '])

' → logprob: -11.201772689819336
    6. '       ' → logprob: -11.701772689819336
    7. ' ])
' → logprob: -11.826772689819336
    8. ' ])' → logprob: -12.951772689819336
    9. ')
' → logprob: -13.076772689819336
    10. ']' → logprob: -13.201772689819336

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.88418151892256e-05
    2. ' for' → logprob: -10.375059127807617
    3. '<|end|>' → logprob: -12.000059127807617
    4. '       ' → logprob: -12.250059127807617
    5. 'for' → logprob: -12.375059127807617
    6. '            
' → logprob: -12.500059127807617
    7. '<|end|>' → logprob: -13.000059127807617
    8. '
' → logprob: -13.125059127807617
    9. '               ' → logprob: -13.750059127807617
    10. '   ' → logprob: -13.875059127807617

Token 475: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21167440712451935
    2. ' for' → logprob: -1.836674451828003
    3. '           ' → logprob: -3.461674451828003
    4. '   ' → logprob: -10.586674690246582
    5. '       ' → logprob: -11.211674690246582
    6. '            
' → logprob: -12.711674690246582
    7. '               ' → logprob: -13.461674690246582
    8. '
' → logprob: -13.836674690246582
    9. '	for' → logprob: -13.961674690246582
    10. '                   ' → logprob: -14.336674690246582

Token 476: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0024763736873865128
    2. ' current' → logprob: -6.002476215362549
    3. 'cur' → logprob: -15.252476692199707
    4. 'self' → logprob: -16.25247573852539
    5. '(current' → logprob: -16.50247573852539
    6. '   ' → logprob: -16.50247573852539
    7. '	current' → logprob: -16.62747573852539
    8. '.current' → logprob: -17.50247573852539
    9. 'curr' → logprob: -17.62747573852539
    10. 'urrent' → logprob: -17.75247573852539

Token 477: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.00663496321067214
    2. '._' → logprob: -5.8816351890563965
    3. 'Grid' → logprob: -5.8816351890563965
    4. '.' → logprob: -8.131634712219238
    5. '.Grid' → logprob: -8.381634712219238
    6. 'all' → logprob: -9.256634712219238
    7. 'def' → logprob: -9.506634712219238
    8. '.all' → logprob: -10.006634712219238
    9. ' .' → logprob: -10.131634712219238
    10. '<Grid' → logprob: -10.381634712219238

Token 478: '.all' (ID: 14045)
  Prédit: '.all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.all' → logprob: -0.00011021859245374799
    2. '.' → logprob: -9.500110626220703
    3. ' .' → logprob: -10.500110626220703
    4. 'all' → logprob: -12.750110626220703
    5. '   ' → logprob: -13.500110626220703
    6. '.eql' → logprob: -13.875110626220703
    7. ' all' → logprob: -14.250110626220703
    8. '	all' → logprob: -15.000110626220703
    9. '>.' → logprob: -15.125110626220703
    10. '       ' → logprob: -15.500110626220703

Token 479: '_def' (ID: 26756)
  Prédit: '_def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_def' → logprob: -7.672236824873835e-05
    2. 'def' → logprob: -9.500076293945312
    3. '_' → logprob: -14.000076293945312
    4. '\' → logprob: -16.000076293945312
    5. ' _' → logprob: -16.000076293945312
    6. '
' → logprob: -16.625076293945312
    7. '...' → logprob: -16.750076293945312
    8. '_Def' → logprob: -16.875076293945312
    9. '```' → logprob: -17.000076293945312
    10. ' def' → logprob: -17.000076293945312

Token 480: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00020509003661572933
    2. 'ated' → logprob: -8.500205039978027
    3. '```' → logprob: -14.625205039978027
    4. 'a' → logprob: -15.500205039978027
    5. 'eted' → logprob: -15.500205039978027
    6. 'ected' → logprob: -15.500205039978027
    7. '...' → logprob: -16.000205993652344
    8. 'eat' → logprob: -16.250205993652344
    9. '_e' → logprob: -16.625205993652344
    10. 'ead' → logprob: -17.000205993652344

Token 481: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -6.704273118884885e-07
    2. 'atted' → logprob: -15.375000953674316
    3. 'at' → logprob: -16.25
    4. 'a' → logprob: -16.625
    5. 'e' → logprob: -16.625
    6. 'ATED' → logprob: -16.75
    7. 'ats' → logprob: -17.875
    8. 'eted' → logprob: -18.125
    9. 'aten' → logprob: -19.125
    10. 'lated' → logprob: -19.375

Token 482: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0024775585625320673
    2. '():
' → logprob: -6.002477645874023
    3. '()' → logprob: -13.502477645874023
    4. '():
' → logprob: -14.877477645874023
    5. ' ():' → logprob: -15.627477645874023
    6. '():

' → logprob: -17.627477645874023
    7. '()==' → logprob: -18.377477645874023
    8. ':' → logprob: -18.752477645874023
    9. '()):
' → logprob: -20.877477645874023
    10. '(' → logprob: -21.377477645874023

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00036382899270392954
    2. ' return' → logprob: -8.625364303588867
    3. 'return' → logprob: -9.750364303588867
    4. ':
' → logprob: -9.875364303588867
    5. '           ' → logprob: -10.250364303588867
    6. '                   ' → logprob: -11.125364303588867
    7. ':' → logprob: -11.375364303588867
    8. '):
' → logprob: -12.500364303588867
    9. '                       ' → logprob: -12.875364303588867
    10. ':return' → logprob: -13.250364303588867

Token 484: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7019106149673462
    2. 'path' → logprob: -1.0769106149673462
    3. ' path' → logprob: -2.0769104957580566
    4. '           ' → logprob: -4.451910495758057
    5. 'break' → logprob: -4.451910495758057
    6. '                   ' → logprob: -5.326910495758057
    7. '
' → logprob: -5.576910495758057
    8. 'moves' → logprob: -6.701910495758057
    9. 'steps' → logprob: -6.701910495758057
    10. '#' (adapté à ' #') → logprob: -6.951910495758057

Token 485: ' reconstruct' (ID: 78298)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.05667533725500107
    2. 'actions' → logprob: -3.556675434112549
    3. ' path' → logprob: -4.806675434112549
    4. 'break' → logprob: -5.056675434112549
    5. '#' → logprob: -5.806675434112549
    6. '               ' → logprob: -6.306675434112549
    7. 'result' → logprob: -6.306675434112549
    8. 'moves' → logprob: -6.431675434112549
    9. 'steps' → logprob: -6.556675434112549
    10. '           ' → logprob: -6.556675434112549

Token 486: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5787879824638367
    2. ' path' → logprob: -0.8287879824638367
    3. 'state' → logprob: -6.953787803649902
    4. '_path' → logprob: -7.453787803649902
    5. '           ' → logprob: -7.828787803649902
    6. '               ' → logprob: -7.953787803649902
    7. 'sequence' → logprob: -9.578787803649902
    8. 'moves' → logprob: -9.828787803649902
    9. '                   ' → logprob: -9.953787803649902
    10. 'spell' → logprob: -10.203787803649902

Token 487: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003636065172031522
    2. '           ' → logprob: -6.878635883331299
    3. '
' → logprob: -7.128635883331299
    4. '                
' → logprob: -7.628635883331299
    5. ':
' → logprob: -8.128636360168457
    6. ',' → logprob: -8.128636360168457
    7. '                   ' → logprob: -8.628636360168457
    8. ':' → logprob: -9.253636360168457
    9. '<|end|>' → logprob: -10.128636360168457
    10. 'return' → logprob: -10.503636360168457

Token 488: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004062434600200504
    2. '           ' → logprob: -8.625406265258789
    3. '
' → logprob: -8.875406265258789
    4. '                   ' → logprob: -10.000406265258789
    5. 'path' → logprob: -11.125406265258789
    6. '                
' → logprob: -11.625406265258789
    7. 'return' → logprob: -13.000406265258789
    8. '       ' → logprob: -13.125406265258789
    9. ',' → logprob: -13.625406265258789
    10. '{
' → logprob: -13.750406265258789

Token 489: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.08186538517475128
    2. 'actions' → logprob: -2.5818653106689453
    3. 'result' → logprob: -6.331865310668945
    4. 'moves' → logprob: -7.956865310668945
    5. '               ' → logprob: -8.206865310668945
    6. ' path' → logprob: -8.581865310668945
    7. 'action' → logprob: -8.956865310668945
    8. 'steps' → logprob: -9.331865310668945
    9. '                   ' → logprob: -9.831865310668945
    10. 'res' → logprob: -10.206865310668945

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4933461546897888
    2. '=' → logprob: -0.9933461546897888
    3. '_' → logprob: -4.618346214294434
    4. '_tokens' → logprob: -4.743346214294434
    5. '=[]' → logprob: -8.368346214294434
    6. 's' → logprob: -9.618346214294434
    7. '_token' → logprob: -9.868346214294434
    8. '_=' → logprob: -10.368346214294434
    9. ' ' → logprob: -10.493346214294434
    10. 'tokens' → logprob: -10.993346214294434

Token 491: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.5760892629623413
    2. '[]' → logprob: -0.8260892629623413
    3. '""' → logprob: -9.326088905334473
    4. '[]

' → logprob: -10.701088905334473
    5. '"' → logprob: -11.201088905334473
    6. ' []
' → logprob: -11.201088905334473
    7. ' []' → logprob: -11.951088905334473
    8. '[]"' → logprob: -12.451088905334473
    9. '''
' → logprob: -16.20108985900879
    10. '''' → logprob: -16.32608985900879

Token 492: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03011908009648323
    2. '           ' → logprob: -3.6551191806793213
    3. 'current' → logprob: -6.155118942260742
    4. 'token' → logprob: -7.405118942260742
    5. 'while' → logprob: -7.655118942260742
    6. 'state' → logprob: -8.530118942260742
    7. '                   ' → logprob: -8.655118942260742
    8. ' while' → logprob: -9.280118942260742
    9. ' current' → logprob: -10.530118942260742
    10. '   ' → logprob: -10.780118942260742

Token 493: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.02329462766647339
    2. 'curr' → logprob: -4.023294448852539
    3. 'cur' → logprob: -6.023294448852539
    4. 'while' → logprob: -6.773294448852539
    5. 'current' → logprob: -7.023294448852539
    6. 'node' → logprob: -7.523294448852539
    7. '           ' → logprob: -9.773294448852539
    8. '               ' → logprob: -10.648294448852539
    9. 'token' → logprob: -11.398294448852539
    10. ' state' → logprob: -11.398294448852539

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761139988899231
    2. ' =' → logprob: -0.8261139988899231
    3. '=current' → logprob: -8.7011137008667
    4. '_' → logprob: -13.2011137008667
    5. 'current' → logprob: -13.2011137008667
    6. '_state' → logprob: -14.2011137008667
    7. '_current' → logprob: -14.3261137008667
    8. ')' → logprob: -14.4511137008667
    9. '_=' → logprob: -15.0761137008667
    10. '_token' → logprob: -15.0761137008667

Token 495: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0009115827269852161
    2. ' current' → logprob: -7.000911712646484
    3. 'cur' → logprob: -17.625911712646484
    4. '           ' → logprob: -19.375911712646484
    5. 'parent' → logprob: -19.875911712646484
    6. '(current' → logprob: -20.000911712646484
    7. '   ' → logprob: -20.125911712646484
    8. '	current' → logprob: -20.250911712646484
    9. '
' → logprob: -20.875911712646484
    10. 'curr' → logprob: -21.000911712646484

Token 496: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4878753125667572
    2. '               ' → logprob: -1.7378753423690796
    3. 'while' → logprob: -2.36287522315979
    4. '           ' → logprob: -2.86287522315979
    5. '<|end|>' → logprob: -3.36287522315979
    6. ')' → logprob: -4.862875461578369
    7. ' while' → logprob: -5.612875461578369
    8. '<|end|>' → logprob: -6.237875461578369
    9. ' =' → logprob: -6.487875461578369
    10. '                
' → logprob: -6.487875461578369

Token 497: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02074660360813141
    2. '<|end|>' → logprob: -5.02074670791626
    3. ' while' → logprob: -5.39574670791626
    4. '           ' → logprob: -5.77074670791626
    5. 'while' → logprob: -5.77074670791626
    6. ')' → logprob: -7.52074670791626
    7. '                ' → logprob: -7.64574670791626
    8. '                
' → logprob: -7.77074670791626
    9. '
' → logprob: -8.145746231079102
    10. '<|end|>' → logprob: -8.145746231079102

Token 498: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3490668535232544
    2. ' while' → logprob: -1.3490668535232544
    3. '               ' → logprob: -3.349066734313965
    4. '           ' → logprob: -11.349066734313965
    5. '	while' → logprob: -11.599066734313965
    6. '
' → logprob: -11.724066734313965
    7. '                ' → logprob: -12.224066734313965
    8. '<|end|>' → logprob: -12.349066734313965
    9. '                
' → logprob: -12.474066734313965
    10. 'While' → logprob: -12.724066734313965

Token 499: ' self' (ID: 1051)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.2527141869068146
    2. 'self' → logprob: -1.5027141571044922
    3. ' state' → logprob: -7.752714157104492
    4. 'True' → logprob: -8.252714157104492
    5. ' self' → logprob: -9.627714157104492
    6. '   ' → logprob: -11.377714157104492
    7. '(state' → logprob: -11.752714157104492
    8. ' True' → logprob: -12.502714157104492
    9. '(self' → logprob: -13.002714157104492
    10. '(True' → logprob: -14.627714157104492

Token 500: '.parent' (ID: 17454)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.05154963210225105
    2. '.parent' → logprob: -3.1765496730804443
    3. 'state' → logprob: -4.801549434661865
    4. '.state' → logprob: -8.801549911499023
    5. '_parent' → logprob: -9.551549911499023
    6. ' parent' → logprob: -10.176549911499023
    7. 'action' → logprob: -10.801549911499023
    8. '[parent' → logprob: -11.801549911499023
    9. '	parent' → logprob: -12.801549911499023
    10. 'self' → logprob: -13.676549911499023

Token 501: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0008042682893574238
    2. '[state' → logprob: -7.625804424285889
    3. '_state' → logprob: -8.37580394744873
    4. 'state' → logprob: -10.12580394744873
    5. '_' → logprob: -11.12580394744873
    6. 'map' → logprob: -11.75080394744873
    7. 's' → logprob: -11.87580394744873
    8. '[' → logprob: -12.62580394744873
    9. '_maps' → logprob: -12.75080394744873
    10. '_states' → logprob: -13.50080394744873

Token 502: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -1.3856492842023727e-06
    2. 'state' → logprob: -13.625000953674316
    3. '[' → logprob: -16.125001907348633
    4. '(state' → logprob: -18.125001907348633
    5. '[
' → logprob: -19.625001907348633
    6. ',state' → logprob: -19.750001907348633
    7. ' [' → logprob: -20.125001907348633
    8. '```' → logprob: -20.375001907348633
    9. 's' → logprob: -20.500001907348633
    10. '.get' → logprob: -21.000001907348633

Token 503: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25241702795028687
    2. 'is' → logprob: -1.5024170875549316
    3. ')' → logprob: -7.752417087554932
    4. ']' → logprob: -10.502416610717773
    5. ')is' → logprob: -11.502416610717773
    6. 'in' → logprob: -11.627416610717773
    7. '):
' → logprob: -13.127416610717773
    8. '	is' → logprob: -13.252416610717773
    9. ' ' → logprob: -13.252416610717773
    10. 's' → logprob: -14.002416610717773

Token 504: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.38687366247177124
    2. ' is' → logprob: -1.136873722076416
    3. ')' → logprob: -14.511873245239258
    4. '!=' → logprob: -14.886873245239258
    5. '	is' → logprob: -14.886873245239258
    6. 'in' → logprob: -15.261873245239258
    7. '!==' → logprob: -15.261873245239258
    8. ')is' → logprob: -15.511873245239258
    9. ' ' → logprob: -16.136873245239258
    10. '
' → logprob: -16.511873245239258

Token 505: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.023288104683160782
    2. ' not' → logprob: -3.7732880115509033
    3. 'n't' → logprob: -11.523287773132324
    4. 'n' → logprob: -11.898287773132324
    5. '	not' → logprob: -12.398287773132324
    6. '               ' → logprob: -12.648287773132324
    7. '           ' → logprob: -12.648287773132324
    8. '!' → logprob: -12.648287773132324
    9. '       ' → logprob: -12.773287773132324
    10. '   ' → logprob: -13.648287773132324

Token 506: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00025037277373485267
    2. 'not' → logprob: -8.500250816345215
    3. ' None' → logprob: -10.000250816345215
    4. 'none' → logprob: -13.750250816345215
    5. '_None' → logprob: -15.500250816345215
    6. ' not' → logprob: -15.750250816345215
    7. '(None' → logprob: -17.2502498626709
    8. '...' → logprob: -18.5002498626709
    9. '_none' → logprob: -18.5002498626709
    10. '=None' → logprob: -18.6252498626709

Token 507: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15738630294799805
    2. ':
' → logprob: -2.032386302947998
    3. ' and' → logprob: -4.407386302947998
    4. 'and' → logprob: -6.782386302947998
    5. '                   ' → logprob: -7.282386302947998
    6. '):
' → logprob: -9.032386779785156
    7. '<|end|>' → logprob: -9.032386779785156
    8. '               ' → logprob: -9.157386779785156
    9. ',' → logprob: -9.282386779785156
    10. ':

' → logprob: -10.157386779785156

Token 508: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016844667261466384
    2. '               ' → logprob: -7.376684665679932
    3. '           ' → logprob: -8.251684188842773
    4. '
' → logprob: -8.251684188842773
    5. '                       ' → logprob: -9.001684188842773
    6. '<|end|>' → logprob: -9.001684188842773
    7. '                    
' → logprob: -9.626684188842773
    8. '   ' → logprob: -10.251684188842773
    9. '<|end|>' → logprob: -10.501684188842773
    10. '                  ' → logprob: -10.876684188842773

Token 509: ' path' (ID: 3104)
  Prédit: 'action'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'action' → logprob: -0.23705950379371643
    2. ' action' → logprob: -2.3620595932006836
    3. 'path' (adapté à ' path') → logprob: -2.6120595932006836
    4. '                   ' → logprob: -3.9870595932006836
    5. 'state' → logprob: -4.112059593200684
    6. ' path' → logprob: -5.487059593200684
    7. 'token' → logprob: -6.362059593200684
    8. '   ' → logprob: -6.987059593200684
    9. '
' → logprob: -8.362059593200684
    10. 'prev' → logprob: -8.487059593200684

Token 510: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005384230054914951
    2. '.' → logprob: -5.25538444519043
    3. '.insert' → logprob: -10.13038444519043
    4. ' .' → logprob: -10.13038444519043
    5. '].' → logprob: -10.88038444519043
    6. '.pop' → logprob: -11.25538444519043
    7. '                   ' → logprob: -11.25538444519043
    8. 'append' → logprob: -12.63038444519043
    9. '.Append' → logprob: -12.75538444519043
    10. ').' → logprob: -12.88038444519043

Token 511: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011329513508826494
    2. '(' → logprob: -6.876132965087891
    3. 'self' → logprob: -9.62613296508789
    4. '(
' → logprob: -10.62613296508789
    5. '((' → logprob: -12.00113296508789
    6. '('' → logprob: -14.00113296508789
    7. '(str' → logprob: -14.37613296508789
    8. '("("' → logprob: -14.62613296508789
    9. '(chr' → logprob: -15.00113296508789
    10. '[self' → logprob: -15.00113296508789

Token 512: '.action' (ID: 22351)
  Prédit: '.action'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.action' → logprob: -0.016052784398198128
    2. 'action' → logprob: -4.141052722930908
    3. '.' → logprob: -12.641053199768066
    4. '_action' → logprob: -12.766053199768066
    5. ''action' → logprob: -13.141053199768066
    6. '[action' → logprob: -13.266053199768066
    7. '	action' → logprob: -13.641053199768066
    8. '`.' → logprob: -13.641053199768066
    9. ' action' → logprob: -13.891053199768066
    10. ' .' → logprob: -14.266053199768066

Token 513: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.1008713702030946e-06
    2. 'map' → logprob: -14.000001907348633
    3. 's' → logprob: -14.875001907348633
    4. '[state' → logprob: -15.375001907348633
    5. '[' → logprob: -15.625001907348633
    6. ')' → logprob: -15.750001907348633
    7. 'Map' → logprob: -16.500001907348633
    8. '[_' → logprob: -16.875001907348633
    9. '[action' → logprob: -17.625001907348633
    10. ' map' → logprob: -17.625001907348633

Token 514: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -14.125001907348633
    3. '(state' → logprob: -14.250001907348633
    4. 'state' → logprob: -14.500001907348633
    5. ')[' → logprob: -17.000001907348633
    6. '[
' → logprob: -17.375001907348633
    7. ')' → logprob: -17.375001907348633
    8. ',state' → logprob: -18.500001907348633
    9. '```' → logprob: -18.625001907348633
    10. ' [' → logprob: -19.500001907348633

Token 515: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01840182952582836
    2. ')
' → logprob: -4.393401622772217
    3. '])' → logprob: -5.768401622772217
    4. ' )' → logprob: -6.268401622772217
    5. 'state' → logprob: -8.768402099609375
    6. '[state' → logprob: -8.768402099609375
    7. ')]' → logprob: -9.018402099609375
    8. ' )
' → logprob: -9.268402099609375
    9. '])
' → logprob: -9.518402099609375
    10. '(state' → logprob: -9.518402099609375

Token 516: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011173540260642767
    2. '                    
' → logprob: -7.50111722946167
    3. '               ' → logprob: -8.501117706298828
    4. '                    ' → logprob: -9.626117706298828
    5. 'state' → logprob: -9.626117706298828
    6. '           ' → logprob: -10.251117706298828
    7. '
' → logprob: -11.001117706298828
    8. '                
' → logprob: -11.001117706298828
    9. '   ' → logprob: -11.001117706298828
    10. '       ' → logprob: -11.376117706298828

Token 517: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.5065993666648865
    2. '                   ' → logprob: -1.1315994262695312
    3. ' state' → logprob: -2.6315994262695312
    4. '               ' → logprob: -6.881599426269531
    5. '
' → logprob: -7.006599426269531
    6. '   ' → logprob: -7.756599426269531
    7. '           ' → logprob: -8.756599426269531
    8. '       ' → logprob: -9.006599426269531
    9. '[state' → logprob: -9.381599426269531
    10. '(state' → logprob: -10.006599426269531

Token 518: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740770161151886
    2. ' =' → logprob: -0.9740769863128662
    3. ',' → logprob: -17.974077224731445
    4. ' ' → logprob: -18.474077224731445
    5. '   ' → logprob: -19.224077224731445
    6. ' =
' → logprob: -19.349077224731445
    7. '=
' → logprob: -19.349077224731445
    8. ')' → logprob: -19.724077224731445
    9. '=

' → logprob: -19.849077224731445
    10. '        ' → logprob: -20.224077224731445

Token 519: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002186545403674245
    2. ' self' → logprob: -6.1271867752075195
    3. '                   ' → logprob: -14.25218677520752
    4. '           ' → logprob: -15.62718677520752
    5. '(self' → logprob: -15.62718677520752
    6. '[self' → logprob: -15.62718677520752
    7. '               ' → logprob: -16.252185821533203
    8. '                       ' → logprob: -17.002185821533203
    9. '	self' → logprob: -17.252185821533203
    10. '=self' → logprob: -17.252185821533203

Token 520: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.006172067020088434
    2. 'parent' → logprob: -5.381172180175781
    3. 'self' → logprob: -6.506172180175781
    4. '.' → logprob: -10.506172180175781
    5. '_parent' → logprob: -11.631172180175781
    6. '.self' → logprob: -11.756172180175781
    7. ' .' → logprob: -13.006172180175781
    8. ' self' → logprob: -13.256172180175781
    9. ' parent' → logprob: -13.381172180175781
    10. '	parent' → logprob: -13.756172180175781

Token 521: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.8193366486229934e-05
    2. 'Map' → logprob: -11.625018119812012
    3. 'map' → logprob: -12.000018119812012
    4. 'parent' → logprob: -13.875018119812012
    5. 'state' → logprob: -14.250018119812012
    6. '_maps' → logprob: -14.875018119812012
    7. '[state' → logprob: -15.125018119812012
    8. '[parent' → logprob: -15.625018119812012
    9. '_MAP' → logprob: -16.250019073486328
    10. '_state' → logprob: -16.625019073486328

Token 522: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -12.250007629394531
    3. 'state' → logprob: -12.875007629394531
    4. '[
' → logprob: -17.62500762939453
    5. '(state' → logprob: -18.62500762939453
    6. ',state' → logprob: -18.62500762939453
    7. '_state' → logprob: -18.87500762939453
    8. 's' → logprob: -19.00000762939453
    9. '[action' → logprob: -19.50000762939453
    10. ' state' → logprob: -19.62500762939453

Token 523: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018191704293712974
    2. ')' → logprob: -6.751819133758545
    3. ']
' → logprob: -8.376819610595703
    4. '[state' → logprob: -8.376819610595703
    5. ')]' → logprob: -9.751819610595703
    6. 'state' → logprob: -9.876819610595703
    7. ' ]' → logprob: -10.376819610595703
    8. '])' → logprob: -10.751819610595703
    9. '[' → logprob: -11.626819610595703
    10. 's' → logprob: -12.501819610595703

Token 524: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.766871452331543
    2. '[::-' → logprob: -0.766871452331543
    3. '                   ' → logprob: -3.391871452331543
    4. '
' → logprob: -3.641871452331543
    5. '.reverse' → logprob: -5.766871452331543
    6. 'return' → logprob: -6.141871452331543
    7. '           ' → logprob: -6.391871452331543
    8. 'reverse' → logprob: -7.266871452331543
    9. '\n' → logprob: -7.266871452331543
    10. '                
' → logprob: -8.141871452331543

Token 525: ' path' (ID: 3104)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10580860823392868
    2. '
' → logprob: -2.6058084964752197
    3. '       ' → logprob: -4.105808734893799
    4. '[::-' → logprob: -5.730808734893799
    5. '\n' → logprob: -5.855808734893799
    6. '           ' → logprob: -6.980808734893799
    7. '                
' → logprob: -7.105808734893799
    8. ' return' → logprob: -7.355808734893799
    9. 'return' → logprob: -7.980808734893799
    10. '                   ' → logprob: -7.980808734893799

Token 526: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.00018971276585943997
    2. '.' → logprob: -8.875189781188965
    3. '[::-' → logprob: -10.000189781188965
    4. 'reverse' → logprob: -12.500189781188965
    5. ' reverse' → logprob: -15.625189781188965
    6. ' .' → logprob: -15.625189781188965
    7. ' =' → logprob: -15.875189781188965
    8. '=' → logprob: -16.62518882751465
    9. '.pop' → logprob: -16.87518882751465
    10. '(reverse' → logprob: -17.25018882751465

Token 527: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5721458196640015
    2. '()' → logprob: -1.3221458196640015
    3. '<|end|>' → logprob: -2.572145938873291
    4. '       ' → logprob: -3.197145938873291
    5. '()
' → logprob: -3.447145938873291
    6. ')' → logprob: -5.072145938873291
    7. 'return' → logprob: -5.822145938873291
    8. ',' → logprob: -6.447145938873291
    9. '           ' → logprob: -6.697145938873291
    10. '\' → logprob: -6.947145938873291

Token 528: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08117654919624329
    2. 'return' → logprob: -3.081176519393921
    3. '       ' → logprob: -4.2061767578125
    4. ' return' → logprob: -4.9561767578125
    5. '
' → logprob: -4.9561767578125
    6. '           ' → logprob: -6.0811767578125
    7. '<|end|>' → logprob: -7.7061767578125
    8. '   ' → logprob: -9.2061767578125
    9. '	return' → logprob: -9.3311767578125
    10. '                   ' → logprob: -10.4561767578125

Token 529: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0794738382101059
    2. '               ' → logprob: -2.8294737339019775
    3. ' return' → logprob: -4.079473972320557
    4. '       ' → logprob: -7.829473972320557
    5. '           ' → logprob: -11.079473495483398
    6. '
' → logprob: -11.079473495483398
    7. '   ' → logprob: -12.579473495483398
    8. '	return' → logprob: -13.329473495483398
    9. '                   ' → logprob: -13.704473495483398
    10. '                       ' → logprob: -14.079473495483398

Token 530: ' "' (ID: 392)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.32696533203125
    2. '"' → logprob: -1.70196533203125
    3. ' path' → logprob: -2.82696533203125
    4. ''' → logprob: -3.95196533203125
    5. '"path' → logprob: -4.95196533203125
    6. ' "".' → logprob: -5.45196533203125
    7. '''.' → logprob: -5.70196533203125
    8. ' ''.' → logprob: -6.57696533203125
    9. ' "' → logprob: -7.32696533203125
    10. '""' → logprob: -7.45196533203125

Token 531: 'my' (ID: 3825)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '".' → logprob: -0.9188099503517151
    2. '"' → logprob: -1.5438098907470703
    3. '"\' → logprob: -1.7938098907470703
    4. '\n' → logprob: -2.1688098907470703
    5. ';' → logprob: -3.5438098907470703
    6. '",' → logprob: -3.9188098907470703
    7. '";' → logprob: -4.04380989074707
    8. 'path' → logprob: -4.29380989074707
    9. '''.' → logprob: -5.04380989074707
    10. '",".' → logprob: -5.91880989074707

Token 532: 'on' (ID: 263)
  Prédit: '_spell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_spell' → logprob: -0.9709750413894653
    2. 'spell' → logprob: -2.095974922180176
    3. ' spell' → logprob: -2.220974922180176
    4. '_code' → logprob: -2.845974922180176
    5. 'Spell' → logprob: -2.970974922180176
    6. 'th' → logprob: -3.345974922180176
    7. '_' → logprob: -3.470974922180176
    8. ' spells' → logprob: -3.470974922180176
    9. ' code' → logprob: -3.845974922180176
    10. '_sp' → logprob: -3.970974922180176

Token 533: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.13660982251167297
    2. ' "' → logprob: -2.1366097927093506
    3. '".' → logprob: -5.51161003112793
    4. '\n' → logprob: -6.26161003112793
    5. '""' → logprob: -7.38661003112793
    6. '"+' → logprob: -7.63661003112793
    7. '("' → logprob: -7.76161003112793
    8. ' ".' → logprob: -7.88661003112793
    9. '"+"' → logprob: -8.01161003112793
    10. '"\' → logprob: -8.76161003112793

Token 534: ' *' (ID: 425)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.132041096687317
    2. ' +' → logprob: -1.132041096687317
    3. '+' → logprob: -2.3820409774780273
    4. '.join' → logprob: -2.8820409774780273
    5. '"\' → logprob: -3.0070409774780273
    6. 'path' → logprob: -3.7570409774780273
    7. ''' → logprob: -4.132040977478027
    8. '.' → logprob: -4.132040977478027
    9. '
' → logprob: -4.257040977478027
    10. 'join' → logprob: -4.632040977478027

Token 535: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.017190612852573395
    2. ' len' → logprob: -4.142190456390381
    3. '(len' → logprob: -6.767190456390381
    4. '0' → logprob: -13.517190933227539
    5. '(' → logprob: -13.892190933227539
    6. ' (' → logprob: -14.017190933227539
    7. '[len' → logprob: -14.392190933227539
    8. '	len' → logprob: -14.892190933227539
    9. '1' → logprob: -15.767190933227539
    10. '=len' → logprob: -16.14219093322754

Token 536: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.0011743901995941997
    2. 'path' → logprob: -6.751174449920654
    3. '(' → logprob: -12.876173973083496
    4. ' path' → logprob: -13.751173973083496
    5. '"path' → logprob: -16.126174926757812
    6. ' (' → logprob: -16.251174926757812
    7. '(
' → logprob: -16.626174926757812
    8. '[path' → logprob: -16.626174926757812
    9. '	path' → logprob: -17.126174926757812
    10. '(p' → logprob: -17.751174926757812

Token 537: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7489495873451233
    2. '<|end|>' → logprob: -1.1239495277404785
    3. ' +' → logprob: -2.3739495277404785
    4. '+' → logprob: -2.6239495277404785
    5. '
' → logprob: -3.8739495277404785
    6. ' ' → logprob: -5.7489495277404785
    7. ',' → logprob: -5.8739495277404785
    8. ')+' → logprob: -6.1239495277404785
    9. '<|end|>' → logprob: -6.1239495277404785
    10. ')
' → logprob: -6.7489495277404785

Token 538: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4003724455833435
    2. '
' → logprob: -1.2753725051879883
    3. '<|end|>' → logprob: -3.9003725051879883
    4. '       ' → logprob: -4.400372505187988
    5. '               ' → logprob: -4.900372505187988
    6. '            
' → logprob: -5.650372505187988
    7. '\n' → logprob: -6.025372505187988
    8. '        
' → logprob: -7.400372505187988
    9. '<|end|>' → logprob: -7.400372505187988
    10. ' 
' → logprob: -8.025372505187988

Token 539: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004968205001205206
    2. ' for' → logprob: -6.004968166351318
    3. 'for' → logprob: -6.629968166351318
    4. '       ' → logprob: -7.129968166351318
    5. '
' → logprob: -8.504968643188477
    6. '            
' → logprob: -9.004968643188477
    7. '               ' → logprob: -10.754968643188477
    8. '        
' → logprob: -12.254968643188477
    9. '<|end|>' → logprob: -12.879968643188477
    10. '                   ' → logprob: -13.004968643188477

Token 540: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0186961367726326
    2. ' for' → logprob: -4.018696308135986
    3. '           ' → logprob: -7.518696308135986
    4. '   ' → logprob: -13.893695831298828
    5. '       ' → logprob: -13.893695831298828
    6. ' ' → logprob: -14.518695831298828
    7. '            
' → logprob: -14.893695831298828
    8. '               ' → logprob: -15.893695831298828
    9. '	for' → logprob: -16.518695831298828
    10. '                   ' → logprob: -16.643695831298828

Token 541: ' all' (ID: 722)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3620782494544983
    2. ' all' → logprob: -1.6120781898498535
    3. '   ' → logprob: -3.4870781898498535
    4. '           ' → logprob: -3.7370781898498535
    5. ':' → logprob: -3.8620781898498535
    6. ' each' → logprob: -3.8620781898498535
    7. 'all' → logprob: -5.8620781898498535
    8. '               ' → logprob: -6.2370781898498535
    9. ' for' → logprob: -6.8620781898498535
    10. 'each' → logprob: -7.2370781898498535

Token 542: ' moves' (ID: 19523)
  Prédit: ' rectangles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.7548823952674866
    2. 'rect' → logprob: -0.8798823952674866
    3. ' rect' → logprob: -2.629882335662842
    4. '           ' → logprob: -3.879882335662842
    5. ' for' → logprob: -4.379882335662842
    6. ' rectangle' → logprob: -5.629882335662842
    7. 'for' → logprob: -6.379882335662842
    8. 'rectangle' → logprob: -6.879882335662842
    9. '(rect' → logprob: -7.254882335662842
    10. '_rect' → logprob: -7.629882335662842

Token 543: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005670425482094288
    2. ' for' → logprob: -6.005670547485352
    3. '
' → logprob: -6.255670547485352
    4. ':' → logprob: -8.255670547485352
    5. ':
' → logprob: -8.255670547485352
    6. '       ' → logprob: -8.630670547485352
    7. '<|end|>' → logprob: -9.380670547485352
    8. ',' → logprob: -9.505670547485352
    9. '<|end|>' → logprob: -9.505670547485352
    10. '               ' → logprob: -9.630670547485352

Token 544: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6563156247138977
    2. '           ' → logprob: -0.7813156247138977
    3. 'for' → logprob: -3.781315565109253
    4. '       ' → logprob: -7.656315803527832
    5. '   ' → logprob: -9.531315803527832
    6. '               ' → logprob: -10.281315803527832
    7. '	for' → logprob: -10.531315803527832
    8. '                       ' → logprob: -11.656315803527832
    9. '                   ' → logprob: -11.781315803527832
    10. '	       ' → logprob: -12.781315803527832

Token 545: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23425951600074768
    2. ' for' → logprob: -1.6092594861984253
    3. '           ' → logprob: -4.734259605407715
    4. '       ' → logprob: -12.234259605407715
    5. 'rect' → logprob: -12.859259605407715
    6. '   ' → logprob: -12.984259605407715
    7. '```' → logprob: -13.109259605407715
    8. '               ' → logprob: -13.359259605407715
    9. ' rectangles' → logprob: -13.484259605407715
    10. '                   ' → logprob: -13.984259605407715

Token 546: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.004158295225352049
    2. ' rect' → logprob: -5.5041584968566895
    3. 'rectangle' → logprob: -9.879158020019531
    4. '   ' → logprob: -10.754158020019531
    5. ' rectangle' → logprob: -13.004158020019531
    6. '	rect' → logprob: -13.254158020019531
    7. 'r' → logprob: -13.379158020019531
    8. '_rect' → logprob: -14.629158020019531
    9. '       ' → logprob: -15.004158020019531
    10. ' ' → logprob: -15.129158020019531

Token 547: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08966781944036484
    2. 'angle' → logprob: -2.464667797088623
    3. 'ange' → logprob: -8.214668273925781
    4. 'in' → logprob: -8.214668273925781
    5. 's' → logprob: -9.839668273925781
    6. 'angles' → logprob: -10.839668273925781
    7. 'angular' → logprob: -10.839668273925781
    8. 'a' → logprob: -11.214668273925781
    9. 'angel' → logprob: -11.214668273925781
    10. 'ANGLE' → logprob: -11.464668273925781

Token 548: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.060527343302965164
    2. ' rectangles' → logprob: -3.0605273246765137
    3. 'self' → logprob: -4.560527324676514
    4. ' self' → logprob: -6.810527324676514
    5. ' rect' → logprob: -8.435527801513672
    6. '(rect' → logprob: -10.685527801513672
    7. 'rectangle' → logprob: -11.060527801513672
    8. '   ' → logprob: -11.060527801513672
    9. '       ' → logprob: -11.310527801513672
    10. '           ' → logprob: -11.685527801513672

Token 549: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25319644808769226
    2. ':
' → logprob: -1.5031964778900146
    3. ',' → logprob: -7.7531962394714355
    4. '):
' → logprob: -8.503196716308594
    5. '               ' → logprob: -8.628196716308594
    6. '           ' → logprob: -8.878196716308594
    7. ' :
' → logprob: -9.503196716308594
    8. ':

' → logprob: -9.878196716308594
    9. '<|end|>' → logprob: -10.003196716308594
    10. ' :' → logprob: -10.628196716308594

Token 550: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020924409851431847
    2. ' current' → logprob: -4.0209245681762695
    3. 'current' → logprob: -6.6459245681762695
    4. '                
' → logprob: -7.1459245681762695
    5. ',' → logprob: -8.89592456817627
    6. '           ' → logprob: -9.14592456817627
    7. ',current' → logprob: -9.39592456817627
    8. ':
' → logprob: -9.89592456817627
    9. '   ' → logprob: -10.14592456817627
    10. '):
' → logprob: -10.39592456817627

Token 551: ' next' (ID: 2613)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.140729546546936
    2. ' new' → logprob: -1.390729546546936
    3. ' current' → logprob: -1.765729546546936
    4. 'new' → logprob: -2.0157294273376465
    5. 'next' (adapté à ' next') → logprob: -2.7657294273376465
    6. ' next' → logprob: -3.0157294273376465
    7. '               ' → logprob: -4.7657294273376465
    8. '   ' → logprob: -6.5157294273376465
    9. 'grid' → logprob: -6.6407294273376465
    10. ' grid' → logprob: -6.6407294273376465

Token 552: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.15447138249874115
    2. '_state' → logprob: -2.0294713973999023
    3. '_' → logprob: -4.529471397399902
    4. '_token' → logprob: -7.654471397399902
    5. '_current' → logprob: -8.029471397399902
    6. 'state' → logprob: -10.654471397399902
    7. ' =' → logprob: -11.279471397399902
    8. '_states' → logprob: -11.279471397399902
    9. 'grid' → logprob: -11.529471397399902
    10. '_space' → logprob: -11.779471397399902

Token 553: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132670223712921
    2. '=' → logprob: -1.3132669925689697
    3. '   ' → logprob: -12.93826675415039
    4. '.' → logprob: -14.31326675415039
    5. ' ' → logprob: -14.93826675415039
    6. '    ' → logprob: -15.18826675415039
    7. '=current' → logprob: -15.18826675415039
    8. '       ' → logprob: -15.68826675415039
    9. 'grid' → logprob: -16.06326675415039
    10. 's' → logprob: -16.43826675415039

Token 554: ' Enemy' (ID: 64111)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11651655286550522
    2. 'Enemy' → logprob: -2.616516590118408
    3. ' current' → logprob: -3.366516590118408
    4. ' Enemy' → logprob: -6.116516590118408
    5. 'enemy' → logprob: -9.36651611328125
    6. '   ' → logprob: -10.61651611328125
    7. ' enemy' → logprob: -10.99151611328125
    8. '           ' → logprob: -11.36651611328125
    9. ' ' → logprob: -11.49151611328125
    10. 'cur' → logprob: -11.86651611328125

Token 555: 'Grid' (ID: 5351)
  Prédit: 'Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -3.128163257315464e-07
    2. 'Gr' → logprob: -15.875
    3. '<Grid' → logprob: -16.625
    4. '	Grid' → logprob: -17.125
    5. 'grid' → logprob: -17.5
    6. 'Enemy' → logprob: -17.875
    7. 'G' → logprob: -18.5
    8. '_grid' → logprob: -18.625
    9. ' Grid' → logprob: -18.875
    10. 'GRID' → logprob: -19.125

Token 556: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.955703818472102e-05
    2. 'self' → logprob: -10.000059127807617
    3. '(current' → logprob: -11.250059127807617
    4. '(' → logprob: -15.500059127807617
    5. '(
' → logprob: -15.500059127807617
    6. ' self' → logprob: -15.750059127807617
    7. 'current' → logprob: -15.750059127807617
    8. '.current' → logprob: -15.750059127807617
    9. '(n' → logprob: -16.625059127807617
    10. '[self' → logprob: -16.875059127807617

Token 557: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.004386794753372669
    2. 'n' → logprob: -6.129386901855469
    3. 'self' → logprob: -6.254386901855469
    4. 'current' → logprob: -9.254386901855469
    5. '.current' → logprob: -9.754386901855469
    6. '(n' → logprob: -9.754386901855469
    7. '(self' → logprob: -10.004386901855469
    8. '.size' → logprob: -12.504386901855469
    9. ' self' → logprob: -12.629386901855469
    10. '(current' → logprob: -12.879386901855469

Token 558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007939011557027698
    2. ',current' → logprob: -7.625793933868408
    3. ',[' → logprob: -8.62579345703125
    4. ' ,' → logprob: -9.87579345703125
    5. ',self' → logprob: -10.25079345703125
    6. ',next' → logprob: -11.00079345703125
    7. ',
' → logprob: -11.25079345703125
    8. '           ' → logprob: -13.87579345703125
    9. '[' → logprob: -14.00079345703125
    10. ',(' → logprob: -14.12579345703125

Token 559: ' [' (ID: 723)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.02980603463947773
    2. 'current' → logprob: -4.029806137084961
    3. ' [' → logprob: -4.654806137084961
    4. '[list' → logprob: -6.779806137084961
    5. ' current' → logprob: -8.529806137084961
    6. '[' → logprob: -8.654806137084961
    7. '[r' → logprob: -8.779806137084961
    8. '[c' → logprob: -9.404806137084961
    9. '[self' → logprob: -9.779806137084961
    10. '[state' → logprob: -10.154806137084961

Token 560: 'list' (ID: 2641)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.10028582066297531
    2. 'list' → logprob: -2.350285768508911
    3. 'r' → logprob: -9.475285530090332
    4. ' row' → logprob: -13.975285530090332
    5. '(row' → logprob: -14.725285530090332
    6. '[row' → logprob: -14.975285530090332
    7. 'lst' → logprob: -15.100285530090332
    8. '
' → logprob: -15.725285530090332
    9. ' list' → logprob: -16.22528648376465
    10. '   ' → logprob: -16.97528648376465

Token 561: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6931875348091125
    2. '(row' → logprob: -0.6931875348091125
    3. 'current' → logprob: -11.068187713623047
    4. '(current' → logprob: -11.193187713623047
    5. ' row' → logprob: -12.568187713623047
    6. '(r' → logprob: -13.068187713623047
    7. 'r' → logprob: -13.318187713623047
    8. '(' → logprob: -13.568187713623047
    9. '	row' → logprob: -14.318187713623047
    10. '[row' → logprob: -14.818187713623047

Token 562: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27278488874435425
    2. ' for' → logprob: -2.022784948348999
    3. '(row' → logprob: -2.522784948348999
    4. 'row' → logprob: -4.39778470993042
    5. ')' → logprob: -4.64778470993042
    6. '(r' → logprob: -6.39778470993042
    7. 'current' → logprob: -7.02278470993042
    8. '(current' → logprob: -7.64778470993042
    9. '           ' → logprob: -8.022785186767578
    10. 'r' → logprob: -8.397785186767578

Token 563: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006713124457746744
    2. ' for' → logprob: -5.381712913513184
    3. '(row' → logprob: -6.381712913513184
    4. ')' → logprob: -8.131712913513184
    5. 'row' → logprob: -10.006712913513184
    6. '(current' → logprob: -11.256712913513184
    7. '(r' → logprob: -11.881712913513184
    8. ']' → logprob: -12.131712913513184
    9. 'current' → logprob: -12.131712913513184
    10. 'from' → logprob: -12.256712913513184

Token 564: ' row' (ID: 5225)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.22938992083072662
    2. 'row' → logprob: -1.6043899059295654
    3. ' current' → logprob: -5.6043901443481445
    4. ' row' → logprob: -8.854390144348145
    5. 'state' → logprob: -9.729390144348145
    6. '(current' → logprob: -10.604390144348145
    7. 'cur' → logprob: -11.354390144348145
    8. 'curr' → logprob: -11.479390144348145
    9. 'r' → logprob: -11.604390144348145
    10. 'next' → logprob: -11.854390144348145

Token 565: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22542355954647064
    2. ' in' → logprob: -1.6004235744476318
    3. 'row' → logprob: -12.350423812866211
    4. 'current' → logprob: -12.725423812866211
    5. ')' → logprob: -13.475423812866211
    6. ' ' → logprob: -14.975423812866211
    7. '(row' → logprob: -15.225423812866211
    8. 'import' → logprob: -15.350423812866211
    9. 'from' → logprob: -15.850423812866211
    10. '
' → logprob: -15.850423812866211

Token 566: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.001705175032839179
    2. ' current' → logprob: -6.376705169677734
    3. '
' → logprob: -14.126705169677734
    4. '(current' → logprob: -14.251705169677734
    5. ' ' → logprob: -14.626705169677734
    6. '[current' → logprob: -14.876705169677734
    7. '   ' → logprob: -15.501705169677734
    8. 'cur' → logprob: -16.126705169677734
    9. '$current' → logprob: -16.751705169677734
    10. '_current' → logprob: -16.876705169677734

Token 567: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.43015679717063904
    2. '])' → logprob: -1.0551568269729614
    3. '])
' → logprob: -7.180156707763672
    4. ']' → logprob: -8.180156707763672
    5. ' ])
' → logprob: -9.305156707763672
    6. ')' → logprob: -9.430156707763672
    7. '])

' → logprob: -10.305156707763672
    8. ')
' → logprob: -10.430156707763672
    9. 'for' → logprob: -10.430156707763672
    10. '   ' → logprob: -10.555156707763672

Token 568: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013763030292466283
    2. 'next' → logprob: -7.126376152038574
    3. ' next' → logprob: -8.251376152038574
    4. '
' → logprob: -8.376376152038574
    5. '                
' → logprob: -10.751376152038574
    6. '[next' → logprob: -10.751376152038574
    7. '.next' → logprob: -11.001376152038574
    8. ',next' → logprob: -12.376376152038574
    9. ')' → logprob: -13.001376152038574
    10. '           ' → logprob: -13.126376152038574

Token 569: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.38823914527893066
    2. 'next' (adapté à ' next') → logprob: -1.1382391452789307
    3. '               ' → logprob: -6.888238906860352
    4. '.next' → logprob: -8.388238906860352
    5. '[next' → logprob: -9.513238906860352
    6. '_next' → logprob: -11.263238906860352
    7. '	next' → logprob: -11.388238906860352
    8. '(next' → logprob: -11.513238906860352
    9. '                
' → logprob: -12.263238906860352
    10. '
' → logprob: -13.013238906860352

Token 570: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -5.204720582696609e-05
    2. 'grid' → logprob: -10.125052452087402
    3. '_rect' → logprob: -11.750052452087402
    4. '_' → logprob: -13.500052452087402
    5. '.grid' → logprob: -14.500052452087402
    6. '_rectangle' → logprob: -15.000052452087402
    7. 'Grid' → logprob: -15.375052452087402
    8. 'rect' → logprob: -15.625052452087402
    9. '   ' → logprob: -15.625052452087402
    10. 'def' → logprob: -15.875052452087402

Token 571: '.toggle' (ID: 38839)
  Prédit: '.toggle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.toggle' → logprob: -3.054500666621607e-06
    2. '.grid' → logprob: -13.25000286102295
    3. '.' → logprob: -14.00000286102295
    4. ' .' → logprob: -15.50000286102295
    5. '   ' → logprob: -16.875003814697266
    6. 'toggle' → logprob: -16.875003814697266
    7. '.flip' → logprob: -17.000003814697266
    8. '.rectangle' → logprob: -17.625003814697266
    9. ').' → logprob: -18.375003814697266
    10. '.t' → logprob: -18.375003814697266

Token 572: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -1.1472419600977446e-06
    2. 'rectangle' → logprob: -13.750000953674316
    3. 'Rectangle' → logprob: -17.250001907348633
    4. '_rect' → logprob: -19.750001907348633
    5. '.rectangle' → logprob: -20.500001907348633
    6. '_' → logprob: -21.125001907348633
    7. '```' → logprob: -21.125001907348633
    8. ' rectangle' → logprob: -21.250001907348633
    9. '.Rectangle' → logprob: -22.250001907348633
    10. '_triangle' → logprob: -22.250001907348633

Token 573: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -2.5941604690160602e-05
    2. '(' → logprob: -10.625025749206543
    3. '(
' → logprob: -13.750025749206543
    4. '(rec' → logprob: -15.250025749206543
    5. '(Rect' → logprob: -15.500025749206543
    6. 'rect' → logprob: -17.37502670288086
    7. ' (' → logprob: -18.00002670288086
    8. '(ret' → logprob: -19.12502670288086
    9. '(

' → logprob: -19.75002670288086
    10. '((' → logprob: -20.00002670288086

Token 574: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -1.9743012671824545e-05
    2. '.' → logprob: -11.000020027160645
    3. ')' → logprob: -13.875020027160645
    4. 'top' → logprob: -14.000020027160645
    5. ',' → logprob: -15.125020027160645
    6. '(top' → logprob: -15.125020027160645
    7. '.rect' → logprob: -15.750020027160645
    8. ' .' → logprob: -16.000019073486328
    9. '.t' → logprob: -16.625019073486328
    10. '(' → logprob: -17.000019073486328

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011355629976605996
    2. ' ,' → logprob: -9.250113487243652
    3. ',
' → logprob: -11.875113487243652
    4. '<|end|>' → logprob: -11.875113487243652
    5. ')' → logprob: -13.500113487243652
    6. '‌,' → logprob: -14.750113487243652
    7. ',int' → logprob: -14.875113487243652
    8. '(rect' → logprob: -15.875113487243652
    9. ',row' → logprob: -15.875113487243652
    10. ',

' → logprob: -15.875113487243652

Token 576: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.061969365924596786
    2. ' rect' → logprob: -2.81196928024292
    3. '(rect' → logprob: -13.936969757080078
    4. '	rect' → logprob: -14.561969757080078
    5. '.rect' → logprob: -16.061969757080078
    6. '_rect' → logprob: -17.061969757080078
    7. ' ' → logprob: -17.436969757080078
    8. 'rectangle' → logprob: -17.436969757080078
    9. ' 
' → logprob: -17.561969757080078
    10. '
' → logprob: -17.811969757080078

Token 577: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0019326817709952593
    2. 'left' → logprob: -6.251932621002197
    3. ',left' → logprob: -13.501933097839355
    4. ' left' → logprob: -13.876933097839355
    5. '.' → logprob: -14.251933097839355
    6. ',' → logprob: -14.251933097839355
    7. '_left' → logprob: -16.00193214416504
    8. '	left' → logprob: -16.25193214416504
    9. ')' → logprob: -16.50193214416504
    10. '.right' → logprob: -16.75193214416504

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.56233171664644e-05
    2. ' ,' → logprob: -10.125055313110352
    3. ',
' → logprob: -11.250055313110352
    4. '               ' → logprob: -13.625055313110352
    5. ')' → logprob: -14.750055313110352
    6. '                   ' → logprob: -15.375055313110352
    7. '‌,' → logprob: -15.375055313110352
    8. '<|end|>' → logprob: -15.875055313110352
    9. 'rect' → logprob: -16.87505531311035
    10. '```' → logprob: -16.87505531311035

Token 579: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.011048170737922192
    2. ' rect' → logprob: -4.511048316955566
    3. '(rect' → logprob: -15.886048316955566
    4. '	rect' → logprob: -15.886048316955566
    5. '.rect' → logprob: -17.51104736328125
    6. '               ' → logprob: -17.88604736328125
    7. '
' → logprob: -18.13604736328125
    8. 'rec' → logprob: -18.51104736328125
    9. '                   ' → logprob: -18.51104736328125
    10. '_rect' → logprob: -18.76104736328125

Token 580: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.00799259077757597
    2. '.rect' → logprob: -5.007992744445801
    3. '.right' → logprob: -6.757992744445801
    4. '.top' → logprob: -9.2579927444458
    5. 'bottom' → logprob: -11.8829927444458
    6. '.' → logprob: -12.0079927444458
    7. 'rect' → logprob: -12.8829927444458
    8. ',' → logprob: -13.5079927444458
    9. ' .' → logprob: -13.8829927444458
    10. '.bot' → logprob: -14.6329927444458

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -11.375011444091797
    3. ',
' → logprob: -15.750011444091797
    4. ')' → logprob: -16.750011444091797
    5. '‌,' → logprob: -17.875011444091797
    6. 'rect' → logprob: -18.125011444091797
    7. '`,' → logprob: -18.125011444091797
    8. '               ' → logprob: -18.250011444091797
    9. '```' → logprob: -18.250011444091797
    10. '<|end|>' → logprob: -18.500011444091797

Token 582: ' rect' (ID: 13107)
  Prédit: ' rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rect' → logprob: -0.06994554400444031
    2. 'rect' → logprob: -2.6949455738067627
    3. '(rect' → logprob: -12.069945335388184
    4. '	rect' → logprob: -13.569945335388184
    5. '.rect' → logprob: -14.444945335388184
    6. ' 
' → logprob: -14.819945335388184
    7. ' ' → logprob: -15.444945335388184
    8. ' ' → logprob: -15.819945335388184
    9. ' rectangular' → logprob: -15.944945335388184
    10. ' rectangle' → logprob: -16.3199462890625

Token 583: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -3.5120287066092715e-05
    2. 'right' → logprob: -11.000035285949707
    3. ')' → logprob: -11.125035285949707
    4. '.' → logprob: -13.500035285949707
    5. ',right' → logprob: -13.500035285949707
    6. ',' → logprob: -14.625035285949707
    7. '.left' → logprob: -16.12503433227539
    8. '.bottom' → logprob: -16.50003433227539
    9. '	right' → logprob: -16.62503433227539
    10. '[right' → logprob: -17.00003433227539

Token 584: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00678310077637434
    2. ')
' → logprob: -5.0067830085754395
    3. '               ' → logprob: -9.756783485412598
    4. ')
' → logprob: -11.756783485412598
    5. ')`' → logprob: -14.381783485412598
    6. ' )' → logprob: -14.631783485412598
    7. '                   ' → logprob: -15.131783485412598
    8. '           ' → logprob: -15.256783485412598
    9. ')`
' → logprob: -15.881783485412598
    10. ')

' → logprob: -16.13178253173828

Token 585: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025246797129511833
    2. '                
' → logprob: -4.150246620178223
    3. '<|end|>' → logprob: -4.900246620178223
    4. ' next' → logprob: -7.400246620178223
    5. 'next' → logprob: -8.650246620178223
    6. '
' → logprob: -8.900246620178223
    7. '<|end|>' → logprob: -9.275246620178223
    8. ')' → logprob: -9.650246620178223
    9. 'token' → logprob: -9.775246620178223
    10. '                ' → logprob: -9.900246620178223

Token 586: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.0071855997666716576
    2. ' next' → logprob: -5.257185459136963
    3. 'state' → logprob: -6.507185459136963
    4. 'if' → logprob: -8.257185935974121
    5. '
' → logprob: -10.382185935974121
    6. '               ' → logprob: -10.507185935974121
    7. 'tuple' → logprob: -10.507185935974121
    8. 'n' → logprob: -10.757185935974121
    9. 'key' → logprob: -10.882185935974121
    10. ' state' → logprob: -11.632185935974121

Token 587: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.013497359119355679
    2. '_grid' → logprob: -4.388497352600098
    3. 'state' → logprob: -7.513497352600098
    4. '_tuple' → logprob: -7.763497352600098
    5. '_' → logprob: -12.513497352600098
    6. '_next' → logprob: -12.888497352600098
    7. 'grid' → logprob: -13.013497352600098
    8. '_t' → logprob: -13.888497352600098
    9. 'tuple' → logprob: -14.013497352600098
    10. 'State' → logprob: -14.263497352600098

Token 588: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '＝' → logprob: -18.78522491455078
    4. ')' → logprob: -19.41022491455078
    5. ')=' → logprob: -19.41022491455078
    6. '=
' → logprob: -19.66022491455078
    7. ' ' → logprob: -19.66022491455078
    8. '=

' → logprob: -20.03522491455078
    9. '_tuple' → logprob: -20.16022491455078
    10. ',' → logprob: -20.16022491455078

Token 589: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3868713676929474
    2. ' next' → logprob: -1.136871337890625
    3. '(next' → logprob: -15.136871337890625
    4. '_next' → logprob: -17.261871337890625
    5. 'tuple' → logprob: -17.636871337890625
    6. '	next' → logprob: -17.886871337890625
    7. '[next' → logprob: -18.136871337890625
    8. 'n' → logprob: -18.761871337890625
    9. '.next' → logprob: -18.886871337890625
    10. ' tuple' → logprob: -19.761871337890625

Token 590: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -1.580929347255733e-05
    2. 'grid' → logprob: -11.250016212463379
    3. '_state' → logprob: -13.500016212463379
    4. 'next' → logprob: -14.500016212463379
    5. '_gr' → logprob: -14.750016212463379
    6. '.grid' → logprob: -15.625016212463379
    7. 'Grid' → logprob: -16.250015258789062
    8. '_rect' → logprob: -16.875015258789062
    9. '_' → logprob: -17.625015258789062
    10. '_GRID' → logprob: -17.625015258789062

Token 591: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.750000953674316
    3. 'to' → logprob: -15.250000953674316
    4. ' .' → logprob: -16.875
    5. '.To' → logprob: -20.125
    6. ' to' → logprob: -20.875
    7. '[to' → logprob: -21.5
    8. '.tolist' → logprob: -21.875
    9. '.from' → logprob: -22.125
    10. '.t' → logprob: -22.125

Token 592: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -4.246537173457909e-06
    2. '_t' → logprob: -13.250003814697266
    3. '_' → logprob: -13.375003814697266
    4. 'tuple' → logprob: -14.750003814697266
    5. ' _' → logprob: -16.000003814697266
    6. '```' → logprob: -16.000003814697266
    7. '"_' → logprob: -17.625003814697266
    8. '_token' → logprob: -18.375003814697266
    9. ''_' → logprob: -18.375003814697266
    10. '_state' → logprob: -18.500003814697266

Token 593: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8505269289016724
    2. '<|end|>' → logprob: -0.8505269289016724
    3. '<|end|>' → logprob: -3.100526809692383
    4. ')' → logprob: -3.100526809692383
    5. '               ' → logprob: -4.100526809692383
    6. ']' → logprob: -4.475526809692383
    7. ' not' → logprob: -5.350526809692383
    8. '                
' → logprob: -5.975526809692383
    9. ',' → logprob: -6.225526809692383
    10. '
' → logprob: -6.350526809692383

Token 594: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012916665291413665
    2. '                
' → logprob: -7.001291751861572
    3. '<|end|>' → logprob: -9.126291275024414
    4. '
' → logprob: -9.251291275024414
    5. ' if' → logprob: -10.001291275024414
    6. ' 
' → logprob: -10.626291275024414
    7. '                ' → logprob: -10.876291275024414
    8. '  
' → logprob: -11.126291275024414
    9. '           ' → logprob: -11.501291275024414
    10. '<|end|>' → logprob: -11.626291275024414

Token 595: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37130841612815857
    2. ' if' → logprob: -1.246308445930481
    3. 'if' (adapté à ' if') → logprob: -4.871308326721191
    4. ' 
' → logprob: -4.871308326721191
    5. '                
' → logprob: -5.371308326721191
    6. '                ' → logprob: -6.496308326721191
    7. '                   ' → logprob: -8.121308326721191
    8. ' ' → logprob: -8.496308326721191
    9. '           ' → logprob: -9.621308326721191
    10. '                 
' → logprob: -9.621308326721191

Token 596: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5759775042533875
    2. ' next' → logprob: -0.8259775042533875
    3. '(next' → logprob: -11.200977325439453
    4. 'not' → logprob: -11.575977325439453
    5. ' not' → logprob: -11.575977325439453
    6. '	next' → logprob: -12.825977325439453
    7. '[next' → logprob: -12.950977325439453
    8. '.next' → logprob: -15.200977325439453
    9. '_next' → logprob: -15.450977325439453
    10. 'Next' → logprob: -16.575977325439453

Token 597: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -4.246537173457909e-06
    2. '_states' → logprob: -12.875003814697266
    3. '_' → logprob: -15.000003814697266
    4. 'state' → logprob: -15.125003814697266
    5. '_STATE' → logprob: -16.000003814697266
    6. '```' → logprob: -16.000003814697266
    7. '_State' → logprob: -16.250003814697266
    8. '
' → logprob: -16.375003814697266
    9. ' _' → logprob: -16.625003814697266
    10. '   ' → logprob: -16.625003814697266

Token 598: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008616226725280285
    2. 'not' → logprob: -4.7586164474487305
    3. '	not' → logprob: -13.38361644744873
    4. ')' → logprob: -16.133615493774414
    5. ' no' → logprob: -18.258615493774414
    6. ' in' → logprob: -18.258615493774414
    7. 'and' → logprob: -18.383615493774414
    8. '_not' → logprob: -18.633615493774414
    9. ':not' → logprob: -19.508615493774414
    10. ']' → logprob: -19.633615493774414

Token 599: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.657283365726471
    2. ' self' → logprob: -1.6572833061218262
    3. '<|end|>' → logprob: -1.9072833061218262
    4. 'self' → logprob: -2.782283306121826
    5. '               ' → logprob: -3.782283306121826
    6. '                   ' → logprob: -3.907283306121826
    7. ')' → logprob: -4.532283306121826
    8. '<|end|>' → logprob: -4.657283306121826
    9. '[self' → logprob: -5.532283306121826
    10. '           ' → logprob: -6.282283306121826

Token 600: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019289902411401272
    2. ' self' → logprob: -6.251928806304932
    3. '           ' → logprob: -16.001928329467773
    4. '(self' → logprob: -16.626928329467773
    5. '	self' → logprob: -17.501928329467773
    6. '               ' → logprob: -17.501928329467773
    7. '[self' → logprob: -17.501928329467773
    8. '   ' → logprob: -17.626928329467773
    9. '       ' → logprob: -18.001928329467773
    10. '
' → logprob: -18.126928329467773

Token 601: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -7.660315895918757e-05
    2. 'visited' → logprob: -9.500076293945312
    3. '.' → logprob: -13.750076293945312
    4. '.v' → logprob: -15.375076293945312
    5. ' .' → logprob: -15.875076293945312
    6. '.visit' → logprob: -16.375076293945312
    7. '.visible' → logprob: -16.500076293945312
    8. 'vis' → logprob: -17.125076293945312
    9. '.sent' → logprob: -18.125076293945312
    10. '.used' → logprob: -19.000076293945312

Token 602: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -2.935296834039036e-06
    2. 'ted' → logprob: -14.00000286102295
    3. '```' → logprob: -14.87500286102295
    4. '_' → logprob: -15.00000286102295
    5. 'isted' → logprob: -15.00000286102295
    6. '
' → logprob: -15.75000286102295
    7. '[' → logprob: -15.87500286102295
    8. '   ' → logprob: -16.000003814697266
    9. '#' → logprob: -16.375003814697266
    10. 'it' → logprob: -16.375003814697266

Token 603: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.282802939414978
    2. ':
' → logprob: -1.407802939414978
    3. '                   ' → logprob: -7.282803058624268
    4. '               ' → logprob: -8.15780258178711
    5. '                       ' → logprob: -8.65780258178711
    6. '           ' → logprob: -9.15780258178711
    7. ':
' → logprob: -9.53280258178711
    8. ' =' → logprob: -9.65780258178711
    9. '=' → logprob: -9.65780258178711
    10. ' and' → logprob: -9.90780258178711

Token 604: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0032487702555954456
    2. '                    
' → logprob: -6.878248691558838
    3. '                       ' → logprob: -7.003248691558838
    4. '               ' → logprob: -7.253248691558838
    5. '                           ' → logprob: -8.753249168395996
    6. '                    ' → logprob: -9.378249168395996
    7. '                        
' → logprob: -9.753249168395996
    8. '           ' → logprob: -10.003249168395996
    9. '                ' → logprob: -10.378249168395996
    10. ' 
' → logprob: -10.628249168395996

Token 605: ' self' (ID: 1051)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34391534328460693
    2. ' self' → logprob: -1.343915343284607
    3. '                       ' → logprob: -4.2189154624938965
    4. 'self' (adapté à ' self') → logprob: -4.4689154624938965
    5. '   ' → logprob: -6.0939154624938965
    6. '               ' → logprob: -7.2189154624938965
    7. '       ' → logprob: -7.5939154624938965
    8. '           ' → logprob: -8.468914985656738
    9. '                    ' → logprob: -8.843914985656738
    10. '    ' → logprob: -9.843914985656738

Token 606: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.00012130453251302242
    2. '.' → logprob: -9.375121116638184
    3. ' .' → logprob: -10.250121116638184
    4. '.visit' → logprob: -14.625121116638184
    5. 'visited' → logprob: -15.750121116638184
    6. '.sent' → logprob: -16.7501220703125
    7. '`.' → logprob: -16.7501220703125
    8. '.v' → logprob: -16.8751220703125
    9. '.queue' → logprob: -17.0001220703125
    10. '.visible' → logprob: -17.1251220703125

Token 607: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -13.250003814697266
    3. 'isted' → logprob: -13.625003814697266
    4. '[' → logprob: -15.125003814697266
    5. '```' → logprob: -15.375003814697266
    6. 'ted' → logprob: -15.625003814697266
    7. '
' → logprob: -16.125003814697266
    8. '__' → logprob: -16.375003814697266
    9. 'ITED' → logprob: -16.750003814697266
    10. '-' → logprob: -16.875003814697266

Token 608: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. '[now' → logprob: -20.125
    4. '[last' → logprob: -21.125
    5. 'next' → logprob: -22.0
    6. '[n' → logprob: -22.125
    7. '
' → logprob: -22.125
    8. '[new' → logprob: -22.375
    9. ',next' → logprob: -22.5
    10. '(next' → logprob: -22.75

Token 609: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -8.77627644513268e-06
    2. 'state' → logprob: -11.750008583068848
    3. 'State' → logprob: -15.625008583068848
    4. '_' → logprob: -16.000009536743164
    5. 't' → logprob: -16.250009536743164
    6. ')' → logprob: -16.250009536743164
    7. ']' → logprob: -16.375009536743164
    8. 'e' → logprob: -16.625009536743164
    9. '-state' → logprob: -16.750009536743164
    10. '_STATE' → logprob: -17.000009536743164

Token 610: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4266355335712433
    2. '=' → logprob: -1.176635503768921
    3. ' =' → logprob: -3.301635503768921
    4. ']=' → logprob: -6.1766357421875
    5. ')' → logprob: -10.4266357421875
    6. '=True' → logprob: -10.6766357421875
    7. ' ' → logprob: -11.0516357421875
    8. ' ]' → logprob: -12.3016357421875
    9. '[' → logprob: -12.5516357421875
    10. '   ' → logprob: -12.8016357421875

Token 611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740796685218811
    2. ' =' → logprob: -0.9740796685218811
    3. ']' → logprob: -13.099080085754395
    4. ']=' → logprob: -14.849080085754395
    5. '=True' → logprob: -15.224080085754395
    6. '[' → logprob: -17.599079132080078
    7. '   ' → logprob: -17.599079132080078
    8. ' ' → logprob: -17.724079132080078
    9. '       ' → logprob: -18.974079132080078
    10. ',' → logprob: -19.224079132080078

Token 612: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009115827269852161
    2. ' True' → logprob: -7.000911712646484
    3. '   ' → logprob: -18.500911712646484
    4. 'Tr' → logprob: -19.500911712646484
    5. '(True' → logprob: -19.625911712646484
    6. '=True' → logprob: -21.250911712646484
    7. ' ' → logprob: -21.625911712646484
    8. 'true' → logprob: -21.875911712646484
    9. 'False' → logprob: -22.500911712646484
    10. '  ' → logprob: -22.500911712646484

Token 613: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00038348292582668364
    2. '           ' → logprob: -8.875383377075195
    3. '               ' → logprob: -9.000383377075195
    4. '       ' → logprob: -10.000383377075195
    5. '                    ' → logprob: -10.875383377075195
    6. '
' → logprob: -11.000383377075195
    7. ',' → logprob: -11.500383377075195
    8. '   ' → logprob: -11.625383377075195
    9. '<|end|>' → logprob: -12.250383377075195
    10. '                  ' → logprob: -12.375383377075195

Token 614: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013767797499895096
    2. '       ' → logprob: -8.00137710571289
    3. '           ' → logprob: -8.12637710571289
    4. '               ' → logprob: -8.25137710571289
    5. '
' → logprob: -8.37637710571289
    6. '<|end|>' → logprob: -9.37637710571289
    7. '   ' → logprob: -10.12637710571289
    8. '                    ' → logprob: -10.37637710571289
    9. ',' → logprob: -10.50137710571289
    10. '                    
' → logprob: -10.75137710571289

Token 615: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01758389361202717
    2. ' self' → logprob: -4.142583847045898
    3. '                   ' → logprob: -6.517583847045898
    4. '	self' → logprob: -11.142583847045898
    5. '[self' → logprob: -11.267583847045898
    6. '```' → logprob: -11.892583847045898
    7. '                       ' → logprob: -12.142583847045898
    8. '   ' → logprob: -12.267583847045898
    9. '<|end|>' → logprob: -12.392583847045898
    10. '       ' → logprob: -12.517583847045898

Token 616: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -3.011373155459296e-05
    2. 'parent' → logprob: -10.500030517578125
    3. '.queue' → logprob: -13.125030517578125
    4. '.' → logprob: -16.000030517578125
    5. '[parent' → logprob: -16.500030517578125
    6. '.user' → logprob: -16.750030517578125
    7. '	parent' → logprob: -16.750030517578125
    8. '.Parent' → logprob: -17.375030517578125
    9. ',parent' → logprob: -17.375030517578125
    10. '_parent' → logprob: -17.375030517578125

Token 617: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -3.128163257315464e-07
    2. '[_' → logprob: -16.75
    3. '_maps' → logprob: -16.875
    4. '[state' → logprob: -16.875
    5. 'map' → logprob: -17.125
    6. '_MAP' → logprob: -17.875
    7. 'Map' → logprob: -17.875
    8. '[' → logprob: -17.875
    9. '_state' → logprob: -18.125
    10. '_queue' → logprob: -18.625

Token 618: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -6.2729995988775045e-06
    2. '[current' → logprob: -12.125006675720215
    3. '[state' → logprob: -14.250006675720215
    4. '[' → logprob: -15.875006675720215
    5. '[now' → logprob: -18.0000057220459
    6. '[last' → logprob: -18.1250057220459
    7. 'next' → logprob: -19.1250057220459
    8. '[new' → logprob: -19.3750057220459
    9. '[parent' → logprob: -20.2500057220459
    10. '(next' → logprob: -20.3750057220459

Token 619: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00029875844484195113
    2. 'state' → logprob: -8.250298500061035
    3. 'State' → logprob: -10.250298500061035
    4. '_STATE' → logprob: -14.000298500061035
    5. ')' → logprob: -15.750298500061035
    6. '_State' → logprob: -15.875298500061035
    7. '   ' → logprob: -16.00029945373535
    8. '_states' → logprob: -16.12529945373535
    9. '-state' → logprob: -16.50029945373535
    10. ' state' → logprob: -17.12529945373535

Token 620: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06642680615186691
    2. ' =' → logprob: -2.8164267539978027
    3. ']' → logprob: -5.441426753997803
    4. ']=' → logprob: -9.191427230834961
    5. ')' → logprob: -11.441427230834961
    6. ' ]' → logprob: -13.441427230834961
    7. ')=' → logprob: -14.066427230834961
    8. ',' → logprob: -14.441427230834961
    9. '=current' → logprob: -14.691427230834961
    10. '<|end|>' → logprob: -16.94142723083496

Token 621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '=current' → logprob: -16.643150329589844
    4. '=
' → logprob: -17.768150329589844
    5. ']=' → logprob: -18.018150329589844
    6. ']' → logprob: -18.143150329589844
    7. '<|end|>' → logprob: -18.518150329589844
    8. ')' → logprob: -18.893150329589844
    9. ',' → logprob: -19.018150329589844
    10. ')=' → logprob: -19.143150329589844

Token 622: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00015860427811276168
    2. ' current' → logprob: -8.750158309936523
    3. 'cur' → logprob: -17.875158309936523
    4. 'state' → logprob: -18.250158309936523
    5. '   ' → logprob: -20.250158309936523
    6. 'curr' → logprob: -20.750158309936523
    7. '	current' → logprob: -20.875158309936523
    8. '(current' → logprob: -21.250158309936523
    9. '[current' → logprob: -22.125158309936523
    10. '$current' → logprob: -22.625158309936523

Token 623: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010729423956945539
    2. '
' → logprob: -7.376072883605957
    3. '               ' → logprob: -8.251072883605957
    4. '                    
' → logprob: -9.751072883605957
    5. '                    ' → logprob: -10.251072883605957
    6. '           ' → logprob: -10.501072883605957
    7. ',' → logprob: -11.001072883605957
    8. 'self' → logprob: -11.501072883605957
    9. '       ' → logprob: -12.001072883605957
    10. '<|end|>' → logprob: -12.126072883605957

Token 624: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05057421699166298
    2. '                    
' → logprob: -3.42557430267334
    3. '                    ' → logprob: -4.67557430267334
    4. ' 
' → logprob: -5.80057430267334
    5. '               ' → logprob: -7.17557430267334
    6. '                     
' → logprob: -7.80057430267334
    7. '<|end|>' → logprob: -7.92557430267334
    8. '
' → logprob: -7.92557430267334
    9. 'self' → logprob: -8.17557430267334
    10. '```' → logprob: -8.17557430267334

Token 625: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0017381247598677874
    2. ' self' → logprob: -6.50173807144165
    3. '                   ' → logprob: -8.376738548278809
    4. '	self' → logprob: -12.751738548278809
    5. '   ' → logprob: -14.501738548278809
    6. '               ' → logprob: -14.876738548278809
    7. '[self' → logprob: -15.126738548278809
    8. '                       ' → logprob: -15.251738548278809
    9. '                           ' → logprob: -15.251738548278809
    10. '(self' → logprob: -15.251738548278809

Token 626: '.action' (ID: 22351)
  Prédit: '.action'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.action' → logprob: -4.246537173457909e-06
    2. 'action' → logprob: -13.000003814697266
    3. '.' → logprob: -13.375003814697266
    4. '[action' → logprob: -16.250003814697266
    5. ' .' → logprob: -16.750003814697266
    6. '?action' → logprob: -17.125003814697266
    7. '	action' → logprob: -17.375003814697266
    8. '```' → logprob: -17.375003814697266
    9. ''action' → logprob: -17.625003814697266
    10. '.Action' → logprob: -17.750003814697266

Token 627: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -3.128163257315464e-07
    2. '_mapping' → logprob: -16.25
    3. '_maps' → logprob: -16.75
    4. 's' → logprob: -18.125
    5. 'Map' → logprob: -18.125
    6. '_action' → logprob: -18.5
    7. '_' → logprob: -18.625
    8. '_MAP' → logprob: -18.75
    9. '="_' → logprob: -19.0
    10. 'a' → logprob: -19.125

Token 628: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -5.512236498361744e-07
    2. 'next' → logprob: -15.125000953674316
    3. '[' → logprob: -16.0
    4. '[now' → logprob: -18.0
    5. '[current' → logprob: -18.125
    6. '[new' → logprob: -18.375
    7. '[last' → logprob: -18.5
    8. '(next' → logprob: -19.125
    9. '[state' → logprob: -19.125
    10. '[
' → logprob: -19.375

Token 629: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0004960790392942727
    2. 'state' → logprob: -7.625495910644531
    3. 'State' → logprob: -12.000495910644531
    4. '_STATE' → logprob: -14.250495910644531
    5. '[' → logprob: -15.250495910644531
    6. '_states' → logprob: -15.750495910644531
    7. '[state' → logprob: -15.750495910644531
    8. '-state' → logprob: -16.12549591064453
    9. '_State' → logprob: -16.37549591064453
    10. '[next' → logprob: -16.62549591064453

Token 630: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049375247210264206
    2. ' =' → logprob: -3.049375295639038
    3. ']' → logprob: -7.174375057220459
    4. ']=' → logprob: -10.924375534057617
    5. ')' → logprob: -12.799375534057617
    6. '[' → logprob: -14.924375534057617
    7. ')=' → logprob: -15.799375534057617
    8. '>' → logprob: -16.299375534057617
    9. ' ]' → logprob: -16.299375534057617
    10. '=
' → logprob: -16.424375534057617

Token 631: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. '=
' → logprob: -16.163042068481445
    4. '[' → logprob: -17.163042068481445
    5. ' =
' → logprob: -19.163042068481445
    6. ']=' → logprob: -19.288042068481445
    7. '=

' → logprob: -19.288042068481445
    8. ' ' → logprob: -19.413042068481445
    9. '＝' → logprob: -19.413042068481445
    10. ' =[' → logprob: -19.538042068481445

Token 632: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.00162221840582788
    2. ' rect' → logprob: -7.251622200012207
    3. '(rect' → logprob: -7.376622200012207
    4. 'f' → logprob: -8.751622200012207
    5. 'str' → logprob: -9.376622200012207
    6. '(' → logprob: -11.251622200012207
    7. ' (' → logprob: -11.376622200012207
    8. 'repr' → logprob: -12.501622200012207
    9. '   ' → logprob: -12.626622200012207
    10. ' f' → logprob: -12.751622200012207

Token 633: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 634: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.061992332339286804
    2. '
' → logprob: -3.0619924068450928
    3. ' queue' → logprob: -6.186992168426514
    4. '               ' → logprob: -6.311992168426514
    5. '```' → logprob: -6.436992168426514
    6. '				' → logprob: -6.686992168426514
    7. '                    
' → logprob: -6.936992168426514
    8. '<|end|>' → logprob: -7.061992168426514
    9. 'queue' → logprob: -7.186992168426514
    10. '	queue' → logprob: -7.811992168426514

Token 635: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.023288104683160782
    2. ' queue' → logprob: -3.7732880115509033
    3. '	queue' → logprob: -10.523287773132324
    4. '                   ' → logprob: -12.023287773132324
    5. '.queue' → logprob: -12.273287773132324
    6. '(queue' → logprob: -12.398287773132324
    7. '   ' → logprob: -15.023287773132324
    8. '```' → logprob: -15.523287773132324
    9. '               ' → logprob: -16.02328872680664
    10. '       ' → logprob: -16.02328872680664

Token 636: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.375005722045898
    3. 'append' → logprob: -14.875005722045898
    4. '.app' → logprob: -15.000005722045898
    5. '.enqueue' → logprob: -15.375005722045898
    6. '.extend' → logprob: -17.3750057220459
    7. '.Append' → logprob: -18.1250057220459
    8. '.push' → logprob: -18.3750057220459
    9. '.put' → logprob: -18.5000057220459
    10. '.p' → logprob: -18.8750057220459

Token 637: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -1.318681188422488e-05
    2. 'next' → logprob: -11.25001335144043
    3. '(' → logprob: -16.25001335144043
    4. ' next' → logprob: -18.75001335144043
    5. '[next' → logprob: -19.12501335144043
    6. '	next' → logprob: -21.87501335144043
    7. ',next' → logprob: -21.87501335144043
    8. '(
' → logprob: -22.37501335144043
    9. '_next' → logprob: -22.75001335144043
    10. '((' → logprob: -23.37501335144043

Token 638: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.3856492842023727e-06
    2. 'state' → logprob: -13.750000953674316
    3. 'State' → logprob: -16.625001907348633
    4. '(next' → logprob: -16.875001907348633
    5. '_next' → logprob: -16.875001907348633
    6. '_states' → logprob: -17.250001907348633
    7. '_State' → logprob: -17.875001907348633
    8. '_STATE' → logprob: -18.375001907348633
    9. 'next' → logprob: -18.500001907348633
    10. '_' → logprob: -18.625001907348633

Token 639: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3120038501219824e-05
    2. ')
' → logprob: -10.250053405761719
    3. '<|end|>' → logprob: -11.250053405761719
    4. ')return' → logprob: -13.000053405761719
    5. ' )' → logprob: -14.000053405761719
    6. '       ' → logprob: -14.250053405761719
    7. '               ' → logprob: -15.625053405761719
    8. '())' → logprob: -15.625053405761719
    9. '<|end|>' → logprob: -15.750053405761719
    10. '))' → logprob: -16.50005340576172

Token 640: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 641: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47779420018196106
    2. '       ' → logprob: -1.3527941703796387
    3. '
' → logprob: -2.8527941703796387
    4. '<|end|>' → logprob: -3.3527941703796387
    5. ' return' → logprob: -4.602794170379639
    6. '\n' → logprob: -5.477794170379639
    7. '\' → logprob: -5.977794170379639
    8. '	return' → logprob: -5.977794170379639
    9. 'None' → logprob: -6.477794170379639
    10. '#' → logprob: -6.477794170379639

Token 642: ' ""' (ID: 3216)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10235060751438141
    2. ' None' → logprob: -2.3523507118225098
    3. '""' → logprob: -6.72735071182251
    4. '"' → logprob: -6.97735071182251
    5. ' ""' → logprob: -12.727350234985352
    6. ' ' → logprob: -12.852350234985352
    7. '_None' → logprob: -13.602350234985352
    8. '   ' → logprob: -13.977350234985352
    9. '''' → logprob: -14.102350234985352
    10. '(None' → logprob: -14.227350234985352

Token 643: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 644: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 645: ' no' (ID: 860)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 646: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.26381075382232666
    2. 'solution' → logprob: -1.7638107538223267
    3. ' possible' → logprob: -3.513810634613037
    4. 'possible' → logprob: -3.638810634613037
    5. ' ' → logprob: -6.513810634613037
    6. ' more' → logprob: -7.263810634613037
    7. 'more' → logprob: -7.513810634613037
    8. ' valid' → logprob: -8.138811111450195
    9. '_solution' → logprob: -8.138811111450195
    10. '<|end|>' → logprob: -8.513811111450195

Token 647: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 648: 'should' (ID: 10618)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. '<|end|>' → logprob: -12.375011444091797
    3. ')
' → logprob: -12.750011444091797
    4. '}' → logprob: -14.000011444091797
    5. '())' → logprob: -14.125011444091797
    6. ')return' → logprob: -14.250011444091797
    7. ')}' → logprob: -14.875011444091797
    8. ' )' → logprob: -15.375011444091797
    9. ')#' → logprob: -15.500011444091797
    10. '})' → logprob: -15.750011444091797

Token 649: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5772285461425781
    2. 'not' → logprob: -0.8272285461425781
    3. ' never' → logprob: -7.327228546142578
    4. 'never' → logprob: -7.952228546142578
    5. 'n't' → logprob: -8.827228546142578
    6. 'unlikely' → logprob: -9.827228546142578
    7. ' rarely' → logprob: -10.452228546142578
    8. '_not' → logprob: -10.577228546142578
    9. ' unlikely' → logprob: -11.702228546142578
    10. 'return' → logprob: -12.077228546142578

Token 650: ' happen' (ID: 5659)
  Prédit: ' happen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' happen' → logprob: -0.022767364978790283
    2. 'occur' → logprob: -4.647767543792725
    3. 'h' → logprob: -5.022767543792725
    4. ' occur' → logprob: -5.147767543792725
    5. ' be' → logprob: -8.897767066955566
    6. 'be' → logprob: -9.397767066955566
    7. 'return' → logprob: -9.772767066955566
    8. '   ' → logprob: -10.147767066955566
    9. ' ' → logprob: -10.522767066955566
    10. ' return' → logprob: -11.272767066955566

Token 651: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018089536752086133
    2. '<|end|>' → logprob: -8.875181198120117
    3. ')
' → logprob: -11.250181198120117
    4. '}' → logprob: -11.375181198120117
    5. ')return' → logprob: -12.375181198120117
    6. ')}' → logprob: -13.125181198120117
    7. '   ' → logprob: -13.250181198120117
    8. '<|end|>' → logprob: -13.625181198120117
    9. '```' → logprob: -13.750181198120117
    10. '})' → logprob: -13.875181198120117

Token 652: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 653: ' Input' (ID: 10090)
  Prédit: ' Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.8576294779777527
    2. ' Solution' → logprob: -1.1076295375823975
    3. ' Spell' → logprob: -2.3576295375823975
    4. ' Wizard' → logprob: -2.8576295375823975
    5. ' Solver' → logprob: -3.2326295375823975
    6. ' Game' → logprob: -3.8576295375823975
    7. ' Test' → logprob: -5.357629299163818
    8. ' User' → logprob: -5.482629299163818
    9. ' Enemy' → logprob: -5.607629299163818
    10. ' Battle' → logprob: -5.982629299163818

Token 654: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.4401942789554596
    2. 'Handler' → logprob: -1.5651942491531372
    3. 'Parser' → logprob: -2.0651943683624268
    4. ':' → logprob: -4.940194129943848
    5. 'Processor' → logprob: -5.565194129943848
    6. 'Manager' → logprob: -5.690194129943848
    7. ':
' → logprob: -5.940194129943848
    8. '():
' → logprob: -6.815194129943848
    9. 'Data' → logprob: -7.190194129943848
    10. '():' → logprob: -7.565194129943848

Token 655: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004640522412955761
    2. ':
' → logprob: -5.379640579223633
    3. '<|end|>' → logprob: -11.629640579223633
    4. ':

' → logprob: -12.754640579223633
    5. ':def' → logprob: -12.754640579223633
    6. ' :' → logprob: -13.504640579223633
    7. '):' → logprob: -13.879640579223633
    8. '```' → logprob: -14.004640579223633
    9. '():' → logprob: -14.629640579223633
    10. '(object' → logprob: -14.754640579223633

Token 656: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002084474079310894
    2. ' def' → logprob: -6.252084255218506
    3. 'def' → logprob: -9.127084732055664
    4. '```' → logprob: -10.627084732055664
    5. '<|end|>' → logprob: -11.502084732055664
    6. 'class' → logprob: -11.877084732055664
    7. ' class' → logprob: -12.752084732055664
    8. 'import' → logprob: -14.377084732055664
    9. '    
' → logprob: -15.002084732055664
    10. '<|end|>' → logprob: -15.252084732055664

Token 657: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.13155050575733185
    2. 'def' (adapté à ' def') → logprob: -2.1315505504608154
    3. '   ' → logprob: -5.381550312042236
    4. '```' → logprob: -12.006550788879395
    5. '	def' → logprob: -12.756550788879395
    6. 'class' → logprob: -13.506550788879395
    7. '@' → logprob: -15.506550788879395
    8. ' @' → logprob: -15.506550788879395
    9. 'staticmethod' → logprob: -15.881550788879395
    10. 'import' → logprob: -16.006549835205078

Token 658: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2046223282814026
    2. 'def' → logprob: -2.329622268676758
    3. 'staticmethod' → logprob: -2.579622268676758
    4. ' __' → logprob: -5.079622268676758
    5. ' static' → logprob: -5.704622268676758
    6. 'static' → logprob: -7.079622268676758
    7. ' parse' → logprob: -7.204622268676758
    8. '__' → logprob: -7.579622268676758
    9. 'parse' → logprob: -8.704622268676758
    10. 'init' → logprob: -10.079622268676758

Token 659: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.75
    3. 'def' → logprob: -19.25
    4. 'call' → logprob: -19.375
    5. 'ini' → logprob: -20.25
    6. '_init' → logprob: -20.5
    7. 'inite' → logprob: -20.625
    8. '(init' → logprob: -20.75
    9. 'int' → logprob: -21.0
    10. 'next' → logprob: -21.375

Token 660: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.024114806205034256
    2. '(self' → logprob: -3.7741148471832275
    3. '__' → logprob: -7.649114608764648
    4. '__(
' → logprob: -8.524114608764648
    5. '(' → logprob: -9.024114608764648
    6. 'self' → logprob: -10.274114608764648
    7. ' (' → logprob: -10.524114608764648
    8. '__((' → logprob: -13.149114608764648
    9. '<>(' → logprob: -13.524114608764648
    10. '<|end|>' → logprob: -13.649114608764648

Token 661: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00041398804751224816
    2. ')' → logprob: -8.00041389465332
    3. '
' → logprob: -10.37541389465332
    4. ' self' → logprob: -10.62541389465332
    5. '):
' → logprob: -11.12541389465332
    6. '   ' → logprob: -12.37541389465332
    7. '	self' → logprob: -13.00041389465332
    8. '(self' → logprob: -14.87541389465332
    9. '):' → logprob: -15.12541389465332
    10. '       ' → logprob: -15.87541389465332

Token 662: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005478725302964449
    2. '):' → logprob: -5.380478858947754
    3. 'self' → logprob: -8.255478858947754
    4. ',input' → logprob: -8.380478858947754
    5. '):
' → logprob: -8.755478858947754
    6. ',self' → logprob: -9.630478858947754
    7. ' ,' → logprob: -10.255478858947754
    8. '(self' → logprob: -10.380478858947754
    9. ',n' → logprob: -11.130478858947754
    10. '   ' → logprob: -11.505478858947754

Token 663: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1566496640443802
    2. 'def' → logprob: -2.406649589538574
    3. '   ' → logprob: -3.031649589538574
    4. '       ' → logprob: -5.531649589538574
    5. ' self' → logprob: -6.531649589538574
    6. ' def' → logprob: -7.281649589538574
    7. '(self' → logprob: -8.656649589538574
    8. 'n' → logprob: -9.281649589538574
    9. '	self' → logprob: -9.531649589538574
    10. '
' → logprob: -10.031649589538574

Token 664: ' self' (ID: 1051)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.24638861417770386
    2. 'self' (adapté à ' self') → logprob: -1.8713886737823486
    3. '       ' → logprob: -3.4963886737823486
    4. ' pass' → logprob: -3.6213886737823486
    5. 'def' → logprob: -5.1213884353637695
    6. '	pass' → logprob: -7.3713884353637695
    7. '   ' → logprob: -7.7463884353637695
    8. ' self' → logprob: -7.9963884353637695
    9. ' def' → logprob: -11.37138843536377
    10. '	self' → logprob: -11.62138843536377

Token 665: '.datasets' (ID: 136555)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.6178176403045654
    2. '.buffer' → logprob: -1.7428176403045654
    3. '.input' → logprob: -2.2428176403045654
    4. '.data' → logprob: -2.2428176403045654
    5. '.' → logprob: -3.1178176403045654
    6. '.lines' → logprob: -4.1178178787231445
    7. '.inputs' → logprob: -6.2428178787231445
    8. '.def' → logprob: -6.2428178787231445
    9. '.grid' → logprob: -6.2428178787231445
    10. '.source' → logprob: -6.6178178787231445

Token 666: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055061355233192444
    2. ' =' → logprob: -2.9300613403320312
    3. '=[]' → logprob: -8.930061340332031
    4. '   ' → logprob: -10.805061340332031
    5. '<|end|>' → logprob: -11.430061340332031
    6. ' ' → logprob: -11.805061340332031
    7. '={}' → logprob: -12.805061340332031
    8. '  ' → logprob: -13.555061340332031
    9. ':' → logprob: -14.180061340332031
    10. '=[]
' → logprob: -14.430061340332031

Token 667: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.452426608419046e-05
    2. ' []' → logprob: -11.00003433227539
    3. '[]
' → logprob: -11.25003433227539
    4. '[]

' → logprob: -12.37503433227539
    5. '{}' → logprob: -14.75003433227539
    6. '[]}' → logprob: -16.62503433227539
    7. '[' → logprob: -16.87503433227539
    8. '[]"' → logprob: -17.00003433227539
    9. '[],' → logprob: -18.25003433227539
    10. '   ' → logprob: -18.50003433227539

Token 668: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021471697837114334
    2. 'def' → logprob: -6.877147197723389
    3. ' def' → logprob: -6.877147197723389
    4. '
' → logprob: -10.12714672088623
    5. '<|end|>' → logprob: -10.62714672088623
    6. '    
' → logprob: -11.50214672088623
    7. '	def' → logprob: -12.25214672088623
    8. '<|end|>' → logprob: -13.75214672088623
    9. ' ' → logprob: -14.37714672088623
    10. '```' → logprob: -14.62714672088623

Token 669: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009125363430939615
    2. ' def' → logprob: -7.000912666320801
    3. '   ' → logprob: -13.8759126663208
    4. '	def' → logprob: -16.500911712646484
    5. 'class' → logprob: -19.750911712646484
    6. '
' → logprob: -20.250911712646484
    7. ' ' → logprob: -20.625911712646484
    8. '```' → logprob: -20.750911712646484
    9. 'Def' → logprob: -22.375911712646484
    10. 'import' → logprob: -22.625911712646484

Token 670: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0027661214116960764
    2. 'read' → logprob: -6.252766132354736
    3. ' parse' → logprob: -7.252766132354736
    4. 'add' → logprob: -9.252765655517578
    5. 'load' → logprob: -10.377765655517578
    6. ' read' → logprob: -13.502765655517578
    7. 'process' → logprob: -14.752765655517578
    8. ' add' → logprob: -15.752765655517578
    9. 'append' → logprob: -16.252765655517578
    10. ' load' → logprob: -17.377765655517578

Token 671: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0033172115217894316
    2. '(' → logprob: -6.003317356109619
    3. '_line' → logprob: -7.253317356109619
    4. 'self' → logprob: -9.253316879272461
    5. '_input' → logprob: -11.128316879272461
    6. '(
' → logprob: -12.128316879272461
    7. '(line' → logprob: -12.253316879272461
    8. 'line' → logprob: -12.378316879272461
    9. ' (' → logprob: -12.878316879272461
    10. '(input' → logprob: -14.003316879272461

Token 672: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6355352997779846
    2. 'self' → logprob: -1.3855352401733398
    3. '):' → logprob: -2.13553524017334
    4. '):
' → logprob: -3.13553524017334
    5. '_input' → logprob: -3.51053524017334
    6. ',input' → logprob: -4.26053524017334
    7. '_line' → logprob: -5.01053524017334
    8. 'input' → logprob: -6.51053524017334
    9. '(self' → logprob: -6.51053524017334
    10. ',line' → logprob: -6.76053524017334

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01625301130115986
    2. ' lines' → logprob: -5.6412529945373535
    3. ' self' → logprob: -5.7662529945373535
    4. 'import' → logprob: -6.3912529945373535
    5. ' line' → logprob: -6.6412529945373535
    6. '   ' → logprob: -6.6412529945373535
    7. ' input' → logprob: -6.7662529945373535
    8. 'self' → logprob: -6.8912529945373535
    9. 'n' → logprob: -7.0162529945373535
    10. ' import' → logprob: -7.0162529945373535

Token 674: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.6299027800559998
    2. 'n' → logprob: -1.3799028396606445
    3. ' n' → logprob: -2.1299028396606445
    4. ' import' → logprob: -2.3799028396606445
    5. ' lines' → logprob: -6.0049028396606445
    6. '       ' → logprob: -7.1299028396606445
    7. ' while' → logprob: -8.629902839660645
    8. ' self' → logprob: -8.754902839660645
    9. 'lines' → logprob: -8.754902839660645
    10. 'self' → logprob: -8.879902839660645

Token 675: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00043221889063715935
    2. ' sys' → logprob: -7.750432014465332
    3. '=sys' → logprob: -13.500432014465332
    4. '	sys' → logprob: -15.625432014465332
    5. '_sys' → logprob: -17.75043296813965
    6. 'json' → logprob: -18.75043296813965
    7. '(sys' → logprob: -19.25043296813965
    8. '.sys' → logprob: -20.00043296813965
    9. 'stdin' → logprob: -20.12543296813965
    10. 'io' → logprob: -20.25043296813965

Token 676: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04445609450340271
    2. 'for' → logprob: -3.7944560050964355
    3. ' for' → logprob: -4.1694560050964355
    4. ' lines' → logprob: -6.4194560050964355
    5. ' line' → logprob: -7.1694560050964355
    6. '
' → logprob: -7.2944560050964355
    7. 'input' → logprob: -7.5444560050964355
    8. 'data' → logprob: -7.7944560050964355
    9. 'line' → logprob: -8.044456481933594
    10. '        
' → logprob: -8.169456481933594

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037532902788370848
    2. ' lines' → logprob: -6.378753185272217
    3. 'for' → logprob: -7.253753185272217
    4. ' for' → logprob: -7.878753185272217
    5. 'data' → logprob: -8.253753662109375
    6. ' line' → logprob: -8.378753662109375
    7. 'input' → logprob: -9.003753662109375
    8. '
' → logprob: -9.503753662109375
    9. 'n' → logprob: -9.628753662109375
    10. 'lines' → logprob: -10.003753662109375

Token 678: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.0379855632781982
    2. 'lines' (adapté à ' lines') → logprob: -1.1629855632781982
    3. 'data' → logprob: -1.5379855632781982
    4. 'for' → logprob: -3.2879855632781982
    5. 'input' → logprob: -3.7879855632781982
    6. ' data' → logprob: -3.7879855632781982
    7. ' for' → logprob: -4.537985801696777
    8. 'line' → logprob: -4.662985801696777
    9. ' input' → logprob: -5.162985801696777
    10. '       ' → logprob: -5.162985801696777

Token 679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741531312465668
    2. ' =' → logprob: -0.9741531610488892
    3. '()' → logprob: -9.849153518676758
    4. '   ' → logprob: -12.099153518676758
    5. '=line' → logprob: -12.224153518676758
    6. '=sys' → logprob: -13.224153518676758
    7. '=[]' → logprob: -13.599153518676758
    8. '().' → logprob: -13.724153518676758
    9. '＝' → logprob: -13.724153518676758
    10. '=
' → logprob: -13.849153518676758

Token 680: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10022328048944473
    2. ' sys' → logprob: -2.3502233028411865
    3. '[' → logprob: -11.100223541259766
    4. ' [' → logprob: -13.850223541259766
    5. '(sys' → logprob: -15.600223541259766
    6. 'list' → logprob: -15.725223541259766
    7. '	sys' → logprob: -16.100223541259766
    8. '=sys' → logprob: -16.600223541259766
    9. ' list' → logprob: -17.975223541259766
    10. '[]
' → logprob: -19.225223541259766

Token 681: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.3358446166384965e-05
    2. 'stdin' → logprob: -9.875053405761719
    3. '.stdout' → logprob: -14.250053405761719
    4. '.' → logprob: -14.375053405761719
    5. '.argv' → logprob: -15.375053405761719
    6. '(stdin' → logprob: -15.625053405761719
    7. ' stdin' → logprob: -15.875053405761719
    8. '.std' → logprob: -16.75005340576172
    9. 'import' → logprob: -17.87505340576172
    10. '.stderr' → logprob: -18.37505340576172

Token 682: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.07962081581354141
    2. '.readline' → logprob: -2.579620838165283
    3. '.read' → logprob: -7.954620838165283
    4. 'read' → logprob: -8.079620361328125
    5. '.' → logprob: -9.704620361328125
    6. 'lines' → logprob: -13.204620361328125
    7. '_read' → logprob: -13.454620361328125
    8. '_lines' → logprob: -13.454620361328125
    9. '=' → logprob: -13.829620361328125
    10. '```' → logprob: -14.079620361328125

Token 683: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015029559144750237
    2. '()' → logprob: -6.501502990722656
    3. '(' → logprob: -15.001502990722656
    4. ' ().' → logprob: -16.001502990722656
    5. '()
' → logprob: -16.251502990722656
    6. '()`' → logprob: -16.751502990722656
    7. 'split' → logprob: -17.376502990722656
    8. '.split' → logprob: -17.876502990722656
    9. '()).' → logprob: -18.126502990722656
    10. 'lines' → logprob: -18.251502990722656

Token 684: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5765384435653687
    2. 'split' → logprob: -0.8265384435653687
    3. 'read' → logprob: -7.826538562774658
    4. 'decode' → logprob: -8.8265380859375
    5. 'rstrip' → logprob: -9.9515380859375
    6. 'lines' → logprob: -12.3265380859375
    7. ' split' → logprob: -15.0765380859375
    8. '(split' → logprob: -15.5765380859375
    9. 'replace' → logprob: -15.9515380859375
    10. ' strip' → logprob: -16.0765380859375

Token 685: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00028410006780177355
    2. '('\' → logprob: -8.250284194946289
    3. '()' → logprob: -10.750284194946289
    4. '("\' → logprob: -13.750284194946289
    5. 'line' → logprob: -16.00028419494629
    6. '()\' → logprob: -16.50028419494629
    7. '()
' → logprob: -18.00028419494629
    8. '(' → logprob: -18.37528419494629
    9. ' lines' → logprob: -20.00028419494629
    10. '()[' → logprob: -20.12528419494629

Token 686: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4317478835582733
    2. '()' → logprob: -1.0567479133605957
    3. '<|end|>' → logprob: -6.681747913360596
    4. '()
' → logprob: -6.806747913360596
    5. '(' → logprob: -8.556747436523438
    6. '<|end|>' → logprob: -9.806747436523438
    7. '[' → logprob: -9.931747436523438
    8. '   ' → logprob: -9.931747436523438
    9. '        
' → logprob: -9.931747436523438
    10. '[]' → logprob: -10.556747436523438

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04446544870734215
    2. ' i' → logprob: -3.9194655418395996
    3. 'i' → logprob: -4.4194655418396
    4. 'index' → logprob: -5.7944655418396
    5. 'n' → logprob: -5.9194655418396
    6. ' n' → logprob: -6.5444655418396
    7. ' for' → logprob: -6.7944655418396
    8. '```' → logprob: -6.9194655418396
    9. 'idx' → logprob: -7.0444655418396
    10. ' idx' → logprob: -7.7944655418396

Token 688: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04558803141117096
    2. 'idx' (adapté à ' idx') → logprob: -3.2955880165100098
    3. 'index' → logprob: -5.54558801651001
    4. ' idx' → logprob: -6.29558801651001
    5. 't' → logprob: -7.04558801651001
    6. ' i' → logprob: -7.29558801651001
    7. '       ' → logprob: -9.045588493347168
    8. ' index' → logprob: -10.045588493347168
    9. 'n' → logprob: -10.795588493347168
    10. '   ' → logprob: -10.920588493347168

Token 689: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07011693716049194
    2. '=' → logprob: -2.6951169967651367
    3. ' +=' → logprob: -8.945116996765137
    4. '+=' → logprob: -10.945116996765137
    5. ' ' → logprob: -11.195116996765137
    6. '<|end|>' → logprob: -11.695116996765137
    7. '_' → logprob: -13.070116996765137
    8. '   ' → logprob: -13.070116996765137
    9. ' =
' → logprob: -13.945116996765137
    10. '0' → logprob: -14.570116996765137

Token 690: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003809833142440766
    2. ' ' → logprob: -7.875380992889404
    3. '1' → logprob: -14.000380516052246
    4. '   ' → logprob: -18.000381469726562
    5. '       ' → logprob: -20.375381469726562
    6. '۰' → logprob: -20.625381469726562
    7. '  ' → logprob: -21.375381469726562
    8. '=' → logprob: -21.625381469726562
    9. '```' → logprob: -22.000381469726562
    10. '    ' → logprob: -22.125381469726562

Token 691: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -15.000001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '=' → logprob: -21.500001907348633
    6. '```' → logprob: -21.875001907348633
    7. '[' → logprob: -22.000001907348633
    8. '2' → logprob: -22.125001907348633
    9. '۰' → logprob: -22.500001907348633
    10. '(' → logprob: -23.500001907348633

Token 692: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16840453445911407
    2. 'while' → logprob: -2.2934045791625977
    3. '
' → logprob: -3.5434045791625977
    4. ' while' → logprob: -3.7934045791625977
    5. '	while' → logprob: -6.543404579162598
    6. ',' → logprob: -8.043404579162598
    7. '```' → logprob: -8.293404579162598
    8. 'n' → logprob: -8.543404579162598
    9. '<|end|>' → logprob: -8.918404579162598
    10. '	' → logprob: -9.418404579162598

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016133375465869904
    2. 'while' → logprob: -4.3911333084106445
    3. ' while' → logprob: -5.7661333084106445
    4. '   ' → logprob: -8.141133308410645
    5. '	while' → logprob: -9.016133308410645
    6. '```' → logprob: -10.516133308410645
    7. '	' → logprob: -11.266133308410645
    8. 'n' → logprob: -11.266133308410645
    9. ',' → logprob: -12.391133308410645
    10. '
' → logprob: -12.641133308410645

Token 694: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.184257984161377
    2. 't' → logprob: -1.309257984161377
    3. ' t' → logprob: -1.559257984161377
    4. ' while' → logprob: -1.934257984161377
    5. ' T' → logprob: -3.934257984161377
    6. 'T' → logprob: -4.184257984161377
    7. 'num' → logprob: -4.309257984161377
    8. '       ' → logprob: -4.434257984161377
    9. 'n' → logprob: -5.809257984161377
    10. ' num' → logprob: -5.934257984161377

Token 695: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06197608634829521
    2. ' idx' → logprob: -2.811976194381714
    3. '	idx' → logprob: -12.436976432800293
    4. '(idx' → logprob: -13.561976432800293
    5. 'len' → logprob: -13.686976432800293
    6. 'lines' → logprob: -14.311976432800293
    7. 'True' → logprob: -14.686976432800293
    8. ' True' → logprob: -15.311976432800293
    9. ' lines' → logprob: -15.436976432800293
    10. '_idx' → logprob: -15.561976432800293

Token 696: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16135019063949585
    2. '<' → logprob: -1.9113502502441406
    3. '<len' → logprob: -7.286350250244141
    4. '<n' → logprob: -8.91135025024414
    5. '[' → logprob: -9.28635025024414
    6. '<class' → logprob: -9.91135025024414
    7. '()<' → logprob: -9.91135025024414
    8. '<size' → logprob: -11.28635025024414
    9. '<|end|>' → logprob: -11.41135025024414
    10. '<num' → logprob: -11.53635025024414

Token 697: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002613358374219388
    2. ' len' → logprob: -8.250261306762695
    3. 'lines' → logprob: -17.625261306762695
    4. '(len' → logprob: -18.500261306762695
    5. '[len' → logprob: -19.625261306762695
    6. '	len' → logprob: -20.000261306762695
    7. '<len' → logprob: -20.250261306762695
    8. 'int' → logprob: -20.500261306762695
    9. '=len' → logprob: -20.500261306762695
    10. ',len' → logprob: -20.625261306762695

Token 698: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00023119196703191847
    2. 'lines' → logprob: -8.50023078918457
    3. ' lines' → logprob: -10.50023078918457
    4. '	lines' → logprob: -15.87523078918457
    5. '(' → logprob: -17.25023078918457
    6. '_lines' → logprob: -17.50023078918457
    7. '(line' → logprob: -19.50023078918457
    8. '.lines' → logprob: -20.00023078918457
    9. ' (' → logprob: -20.12523078918457
    10. 'line' → logprob: -21.12523078918457

Token 699: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18604134023189545
    2. ':' → logprob: -2.0610413551330566
    3. ' and' → logprob: -3.4360413551330566
    4. '):
' → logprob: -5.186041355133057
    5. '       ' → logprob: -5.936041355133057
    6. 'and' → logprob: -7.311041355133057
    7. '   ' → logprob: -8.436040878295898
    8. ' :
' → logprob: -8.436040878295898
    9. '           ' → logprob: -8.811040878295898
    10. '():
' → logprob: -8.811040878295898

Token 700: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008447202853858471
    2. '       ' → logprob: -5.383447170257568
    3. ' if' → logprob: -6.383447170257568
    4. '   ' → logprob: -7.008447170257568
    5. '```' → logprob: -7.758447170257568
    6. ' line' → logprob: -9.008447647094727
    7. 'n' → logprob: -9.133447647094727
    8. 'if' → logprob: -9.258447647094727
    9. '<|end|>' → logprob: -9.508447647094727
    10. ',' → logprob: -9.508447647094727

Token 701: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6534692645072937
    2. 'n' (adapté à ' n') → logprob: -1.1534693241119385
    3. ' line' → logprob: -2.6534693241119385
    4. 'line' → logprob: -3.4034693241119385
    5. '           ' → logprob: -4.028469085693359
    6. ' if' → logprob: -4.403469085693359
    7. '   ' → logprob: -4.528469085693359
    8. ' parts' → logprob: -5.403469085693359
    9. 'count' → logprob: -5.403469085693359
    10. ' count' → logprob: -5.903469085693359

Token 702: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869907855987549
    2. ' =' → logprob: -1.1369907855987549
    3. '=int' → logprob: -9.636990547180176
    4. '=
' → logprob: -11.011990547180176
    5. ' =
' → logprob: -11.136990547180176
    6. '   ' → logprob: -11.886990547180176
    7. '=line' → logprob: -12.136990547180176
    8. ',' → logprob: -12.386990547180176
    9. '           ' → logprob: -12.761990547180176
    10. '       ' → logprob: -13.261990547180176

Token 703: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.048587486147880554
    2. ' int' → logprob: -3.0485875606536865
    3. '=int' → logprob: -16.548587799072266
    4. '[int' → logprob: -17.548587799072266
    5. '(int' → logprob: -17.673587799072266
    6. 'n' → logprob: -18.048587799072266
    7. ' n' → logprob: -18.048587799072266
    8. '<int' → logprob: -18.798587799072266
    9. '	int' → logprob: -19.173587799072266
    10. ' ' → logprob: -20.048587799072266

Token 704: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -3.309382373117842e-05
    2. 'lines' → logprob: -10.625033378601074
    3. '(' → logprob: -12.000033378601074
    4. ' lines' → logprob: -13.000033378601074
    5. '	lines' → logprob: -15.500033378601074
    6. ' (' → logprob: -17.750032424926758
    7. '(line' → logprob: -18.000032424926758
    8. 'Lines' → logprob: -18.625032424926758
    9. '_lines' → logprob: -18.875032424926758
    10. '(
' → logprob: -18.875032424926758

Token 705: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.9361264946837764e-07
    2. 'idx' → logprob: -16.25
    3. '[' → logprob: -17.25
    4. '```' → logprob: -18.375
    5. ' idx' → logprob: -18.5
    6. '	idx' → logprob: -18.625
    7. '   ' → logprob: -19.125
    8. '(idx' → logprob: -19.25
    9. '       ' → logprob: -19.625
    10. '[
' → logprob: -19.625

Token 706: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.8978546857833862
    2. ')' → logprob: -1.3978546857833862
    3. '])
' → logprob: -1.5228546857833862
    4. ')
' → logprob: -2.772854804992676
    5. '.strip' → logprob: -2.772854804992676
    6. ']);' → logprob: -6.772854804992676
    7. ']' → logprob: -7.272854804992676
    8. ');' → logprob: -9.397854804992676
    9. ' )' → logprob: -9.397854804992676
    10. ' )
' → logprob: -9.897854804992676

Token 707: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017105208244174719
    2. 'idx' → logprob: -7.251710414886475
    3. '       ' → logprob: -8.126710891723633
    4. '
' → logprob: -8.376710891723633
    5. '```' → logprob: -9.001710891723633
    6. '               ' → logprob: -9.251710891723633
    7. '[idx' → logprob: -9.501710891723633
    8. '            
' → logprob: -9.751710891723633
    9. ',' → logprob: -10.376710891723633
    10. '                   ' → logprob: -10.626710891723633

Token 708: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.19113369286060333
    2. '           ' → logprob: -1.941133737564087
    3. '
' → logprob: -4.066133499145508
    4. ' idx' → logprob: -5.191133499145508
    5. '	idx' → logprob: -5.566133499145508
    6. '            
' → logprob: -6.566133499145508
    7. '\n' → logprob: -7.316133499145508
    8. '   ' → logprob: -7.691133499145508
    9. '```' → logprob: -7.941133499145508
    10. '       ' → logprob: -8.191133499145508

Token 709: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01421087421476841
    2. ' +=' → logprob: -4.2642107009887695
    3. '=' → logprob: -10.63921070098877
    4. '+' → logprob: -11.01421070098877
    5. ']+=' → logprob: -12.01421070098877
    6. '```' → logprob: -14.76421070098877
    7. '+="' → logprob: -15.26421070098877
    8. '<|end|>' → logprob: -16.264211654663086
    9. '+='' → logprob: -16.389211654663086
    10. ' =' → logprob: -17.014211654663086

Token 710: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -21.500003814697266
    4. '   ' → logprob: -22.375003814697266
    5. '+' → logprob: -22.500003814697266
    6. '=' → logprob: -22.625003814697266
    7. '۱' → logprob: -22.875003814697266
    8. '<|end|>' → logprob: -23.375003814697266
    9. '１' → logprob: -23.625003814697266
    10. '0' → logprob: -24.125003814697266

Token 711: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '```' → logprob: -23.5
    4. '۱' → logprob: -24.625
    5. '１' → logprob: -24.75
    6. '   ' → logprob: -25.125
    7. '0' → logprob: -25.375
    8. '+' → logprob: -25.5
    9. '=' → logprob: -25.5
    10. '১' → logprob: -25.875

Token 712: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3358486592769623
    2. '       ' → logprob: -2.085848569869995
    3. 'grid' → logprob: -2.835848569869995
    4. 'if' → logprob: -3.085848569869995
    5. ' if' → logprob: -3.085848569869995
    6. '<|end|>' → logprob: -5.710848808288574
    7. '
' → logprob: -6.210848808288574
    8. ' grid' → logprob: -6.335848808288574
    9. '   ' → logprob: -6.835848808288574
    10. '```' → logprob: -7.210848808288574

Token 713: '           ' (ID: 352)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.08504653722047806
    2. 'if' → logprob: -2.7100465297698975
    3. '           ' → logprob: -4.585046768188477
    4. '       ' → logprob: -6.085046768188477
    5. ' if' → logprob: -6.585046768188477
    6. ' grid' → logprob: -6.960046768188477
    7. 'rows' → logprob: -9.960046768188477
    8. '   ' → logprob: -10.335046768188477
    9. '	grid' → logprob: -10.335046768188477
    10. '```' → logprob: -10.335046768188477

Token 714: ' if' (ID: 538)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0012398716062307358
    2. 'if' (adapté à ' if') → logprob: -7.251239776611328
    3. 'for' → logprob: -7.626239776611328
    4. ' grid' → logprob: -10.626239776611328
    5. '           ' → logprob: -12.001239776611328
    6. 'rows' → logprob: -12.251239776611328
    7. '       ' → logprob: -12.501239776611328
    8. '   ' → logprob: -14.126239776611328
    9. ' if' → logprob: -15.126239776611328
    10. '
' → logprob: -15.376239776611328

Token 715: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010902655776590109
    2. ' n' → logprob: -9.12510871887207
    3. '	n' → logprob: -17.75010871887207
    4. 'not' → logprob: -17.87510871887207
    5. ' not' → logprob: -19.25010871887207
    6. '   ' → logprob: -19.37510871887207
    7. 'lines' → logprob: -19.50010871887207
    8. '(n' → logprob: -20.37510871887207
    9. '
' → logprob: -20.50010871887207
    10. '_n' → logprob: -20.50010871887207

Token 716: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1429978907108307
    2. ' ==' → logprob: -2.017997980117798
    3. '=' → logprob: -8.892997741699219
    4. '<=' → logprob: -9.017997741699219
    5. '==
' → logprob: -10.392997741699219
    6. '===' → logprob: -11.517997741699219
    7. '()==' → logprob: -12.392997741699219
    8. ')==' → logprob: -12.517997741699219
    9. ']==' → logprob: -12.642997741699219
    10. ' =' → logprob: -12.767997741699219

Token 717: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '-' → logprob: -22.250001907348633
    4. '۰' → logprob: -23.375001907348633
    5. '<|end|>' → logprob: -24.625001907348633
    6. '=' → logprob: -24.875001907348633
    7. ' -' → logprob: -24.875001907348633
    8. '０' → logprob: -25.000001907348633
    9. '০' → logprob: -25.500001907348633
    10. '   ' → logprob: -25.625001907348633

Token 718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '-' → logprob: -16.3750057220459
    4. ' -' → logprob: -20.8750057220459
    5. '۰' → logprob: -22.1250057220459
    6. ')' → logprob: -22.2500057220459
    7. '```' → logprob: -22.3750057220459
    8. 'end' → logprob: -22.5000057220459
    9. '=' → logprob: -22.7500057220459
    10. '   ' → logprob: -23.5000057220459

Token 719: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.40208399295806885
    2. ':' → logprob: -1.1520839929580688
    3. '           ' → logprob: -4.652083873748779
    4. ':return' → logprob: -5.902083873748779
    5. '       ' → logprob: -6.402083873748779
    6. '               ' → logprob: -7.277083873748779
    7. '   ' → logprob: -8.152084350585938
    8. '<|end|>' → logprob: -10.277084350585938
    9. '                   ' → logprob: -10.777084350585938
    10. '	break' → logprob: -11.152084350585938

Token 720: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002634515054523945
    2. '           ' → logprob: -6.002634525299072
    3. '	           ' → logprob: -9.877634048461914
    4. '   ' → logprob: -10.127634048461914
    5. '                   ' → logprob: -10.627634048461914
    6. '       ' → logprob: -11.877634048461914
    7. '	       ' → logprob: -12.002634048461914
    8. '		       ' → logprob: -12.127634048461914
    9. '	break' → logprob: -12.252634048461914
    10. 'break' → logprob: -12.627634048461914

Token 721: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.025607075542211533
    2. ' break' → logprob: -4.025607109069824
    3. '               ' → logprob: -5.275607109069824
    4. '	break' → logprob: -6.775607109069824
    5. '           ' → logprob: -7.150607109069824
    6. 'return' → logprob: -8.025607109069824
    7. '                   ' → logprob: -9.900607109069824
    8. '_break' → logprob: -12.400607109069824
    9. '   ' → logprob: -13.150607109069824
    10. '
' → logprob: -13.525607109069824

Token 722: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003146088565699756
    2. '       ' → logprob: -8.750314712524414
    3. '<|end|>' → logprob: -9.375314712524414
    4. '
' → logprob: -11.000314712524414
    5. '   ' → logprob: -11.625314712524414
    6. ',' → logprob: -11.625314712524414
    7. '            
' → logprob: -11.750314712524414
    8. '```' → logprob: -12.125314712524414
    9. '          ' → logprob: -12.750314712524414
    10. '<|end|>' → logprob: -12.750314712524414

Token 723: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17495384812355042
    2. 'grid' → logprob: -2.0499539375305176
    3. '       ' → logprob: -3.9249539375305176
    4. ' grid' → logprob: -4.674953937530518
    5. '   ' → logprob: -7.174953937530518
    6. '	grid' → logprob: -7.674953937530518
    7. '<|end|>' → logprob: -7.924953937530518
    8. '```' → logprob: -8.17495346069336
    9. '	       ' → logprob: -8.42495346069336
    10. 'rows' → logprob: -9.29995346069336

Token 724: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.00011427151912357658
    2. ' grid' → logprob: -9.125114440917969
    3. '           ' → logprob: -12.375114440917969
    4. 'rows' → logprob: -14.625114440917969
    5. '       ' → logprob: -15.250114440917969
    6. '```' → logprob: -16.00011444091797
    7. '	grid' → logprob: -16.25011444091797
    8. '   ' → logprob: -17.00011444091797
    9. '_grid' → logprob: -17.25011444091797
    10. 'row' → logprob: -18.25011444091797

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759708285331726
    2. ' =' → logprob: -0.8259708285331726
    3. '=[]' → logprob: -10.700970649719238
    4. '_rows' → logprob: -12.825970649719238
    5. '=[]
' → logprob: -12.950970649719238
    6. 'rows' → logprob: -13.325970649719238
    7. '_lines' → logprob: -13.950970649719238
    8. '=
' → logprob: -15.700970649719238
    9. 's' → logprob: -15.825970649719238
    10. '=[]
' → logprob: -15.825970649719238

Token 726: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6398738026618958
    2. '[]' → logprob: -1.389873743057251
    3. '[]
' → logprob: -1.639873743057251
    4. '[array' → logprob: -5.13987398147583
    5. '[line' → logprob: -5.51487398147583
    6. '[[' → logprob: -6.01487398147583
    7. '[list' → logprob: -6.01487398147583
    8. '[new' → logprob: -6.13987398147583
    9. '[int' → logprob: -6.51487398147583
    10. '[n' → logprob: -6.63987398147583

Token 727: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008151084766723216
    2. 'for' → logprob: -7.750814914703369
    3. '       ' → logprob: -8.000815391540527
    4. ' for' → logprob: -10.250815391540527
    5. '   ' → logprob: -12.000815391540527
    6. '	       ' → logprob: -12.500815391540527
    7. '<|end|>' → logprob: -13.375815391540527
    8. '               ' → logprob: -14.125815391540527
    9. '		' → logprob: -14.750815391540527
    10. '	   ' → logprob: -15.000815391540527

Token 728: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1022433191537857
    2. '           ' → logprob: -2.352243423461914
    3. '       ' → logprob: -6.352243423461914
    4. ' for' → logprob: -8.227243423461914
    5. '   ' → logprob: -10.977243423461914
    6. 'while' → logprob: -12.102243423461914
    7. '	for' → logprob: -13.602243423461914
    8. '               ' → logprob: -15.352243423461914
    9. '	       ' → logprob: -15.477243423461914
    10. '	   ' → logprob: -16.352243423461914

Token 729: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00022725824965164065
    2. '_i' → logprob: -8.500226974487305
    3. ' _' → logprob: -10.875226974487305
    4. 'i' → logprob: -12.500226974487305
    5. '_
' → logprob: -14.875226974487305
    6. '_row' → logprob: -15.250226974487305
    7. '_=' → logprob: -15.875226974487305
    8. '_line' → logprob: -16.250226974487305
    9. '_in' → logprob: -16.250226974487305
    10. '_r' → logprob: -16.500226974487305

Token 730: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011892566457390785
    2. 'in' → logprob: -5.136892795562744
    3. 'range' → logprob: -5.261892795562744
    4. ' range' → logprob: -7.761892795562744
    5. '_' → logprob: -8.011892318725586
    6. 'i' → logprob: -13.511892318725586
    7. '_range' → logprob: -13.636892318725586
    8. ' ' → logprob: -14.886892318725586
    9. '_in' → logprob: -15.511892318725586
    10. ' _' → logprob: -15.636892318725586

Token 731: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052342405542731285
    2. ' range' → logprob: -5.255234241485596
    3. '_range' → logprob: -14.880233764648438
    4. '_' → logprob: -16.005233764648438
    5. '	range' → logprob: -17.880233764648438
    6. ' in' → logprob: -18.255233764648438
    7. '(range' → logprob: -18.630233764648438
    8. '
' → logprob: -18.630233764648438
    9. ' ' → logprob: -18.880233764648438
    10. 'in' → logprob: -19.005233764648438

Token 732: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019558717031031847
    2. ' n' → logprob: -6.626955986022949
    3. '(n' → logprob: -7.376955986022949
    4. '	n' → logprob: -13.00195598602295
    5. '_n' → logprob: -13.75195598602295
    6. '           ' → logprob: -15.00195598602295
    7. '   ' → logprob: -15.50195598602295
    8. '       ' → logprob: -16.001955032348633
    9. ')n' → logprob: -16.251955032348633
    10. 'self' → logprob: -16.876955032348633

Token 733: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05505526065826416
    2. '):' → logprob: -2.9300551414489746
    3. '):
' → logprob: -9.680055618286133
    4. ':
' → logprob: -9.805055618286133
    5. ':' → logprob: -10.180055618286133
    6. '           ' → logprob: -12.305055618286133
    7. '():
' → logprob: -12.680055618286133
    8. ',' → logprob: -13.055055618286133
    9. '):

' → logprob: -13.930055618286133
    10. 'n' → logprob: -13.930055618286133

Token 734: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07531815767288208
    2. '           ' → logprob: -3.4503180980682373
    3. '   ' → logprob: -3.9503180980682373
    4. ' lines' → logprob: -4.700318336486816
    5. '	           ' → logprob: -5.825318336486816
    6. ' grid' → logprob: -5.950318336486816
    7. ' line' → logprob: -6.200318336486816
    8. 'grid' → logprob: -6.950318336486816
    9. ' row' → logprob: -7.450318336486816
    10. '<|end|>' → logprob: -7.575318336486816

Token 735: ' row' (ID: 5225)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.41606226563453674
    2. 'row' (adapté à ' row') → logprob: -1.1660622358322144
    3. ' row' → logprob: -4.166062355041504
    4. ' grid' → logprob: -4.416062355041504
    5. 'line' → logprob: -6.791062355041504
    6. ' line' → logprob: -10.666062355041504
    7. '               ' → logprob: -11.041062355041504
    8. 'rows' → logprob: -12.541062355041504
    9. '	grid' → logprob: -12.541062355041504
    10. '	row' → logprob: -13.416062355041504

Token 736: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046235607005655766
    2. '=' → logprob: -5.3796234130859375
    3. '.append' → logprob: -13.379623413085938
    4. '           ' → logprob: -14.254623413085938
    5. '=line' → logprob: -14.504623413085938
    6. '		' → logprob: -16.379623413085938
    7. ' ' → logprob: -17.004623413085938
    8. '   ' → logprob: -17.129623413085938
    9. 's' → logprob: -17.254623413085938
    10. '            ' → logprob: -17.379623413085938

Token 737: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0012362991692498326
    2. ' list' → logprob: -6.751236438751221
    3. '[list' → logprob: -9.751235961914062
    4. '[' → logprob: -11.751235961914062
    5. ' [' → logprob: -17.001235961914062
    6. '=list' → logprob: -19.126235961914062
    7. '(list' → logprob: -19.376235961914062
    8. 'List' → logprob: -19.376235961914062
    9. '[List' → logprob: -19.876235961914062
    10. '	list' → logprob: -20.001235961914062

Token 738: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.6550729419104755e-05
    2. 'map' → logprob: -10.250036239624023
    3. '(int' → logprob: -14.375036239624023
    4. '(' → logprob: -14.500036239624023
    5. '_map' → logprob: -18.250036239624023
    6. '.map' → logprob: -18.625036239624023
    7. '(
' → logprob: -19.250036239624023
    8. '   ' → logprob: -19.250036239624023
    9. ' map' → logprob: -19.250036239624023
    10. '	map' → logprob: -19.375036239624023

Token 739: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007641222910024226
    2. 'int' → logprob: -7.250763893127441
    3. '(lambda' → logprob: -9.875763893127441
    4. '(str' → logprob: -13.625763893127441
    5. ' int' → logprob: -14.250763893127441
    6. '(' → logprob: -14.500763893127441
    7. 'lambda' → logprob: -15.625763893127441
    8. '=int' → logprob: -16.375764846801758
    9. '<int' → logprob: -16.500764846801758
    10. '   ' → logprob: -16.875764846801758

Token 740: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.005423481110483408
    2. ',' → logprob: -5.255423545837402
    3. 'lines' → logprob: -9.255423545837402
    4. ' lines' → logprob: -9.505423545837402
    5. '(' → logprob: -11.630423545837402
    6. ' (' → logprob: -12.005423545837402
    7. ' ,' → logprob: -12.880423545837402
    8. '	lines' → logprob: -13.630423545837402
    9. ')' → logprob: -14.505423545837402
    10. '(
' → logprob: -16.005422592163086

Token 741: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.000725656165741384
    2. ' lines' → logprob: -7.250725746154785
    3. '(lines' → logprob: -11.250725746154785
    4. 'list' → logprob: -12.875725746154785
    5. '	lines' → logprob: -16.62572479248047
    6. 'line' → logprob: -19.00072479248047
    7. '   ' → logprob: -19.25072479248047
    8. '           ' → logprob: -20.12572479248047
    9. '-lines' → logprob: -21.25072479248047
    10. '.lines' → logprob: -21.25072479248047

Token 742: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.512236498361744e-07
    2. 'idx' → logprob: -15.375000953674316
    3. '[id' → logprob: -17.375
    4. '[' → logprob: -17.625
    5. '   ' → logprob: -17.625
    6. '(idx' → logprob: -17.75
    7. '[index' → logprob: -18.25
    8. '[
' → logprob: -18.375
    9. '[ind' → logprob: -18.75
    10. '	idx' → logprob: -19.375

Token 743: '].' (ID: 1651)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.05204089730978012
    2. '].' → logprob: -3.1770408153533936
    3. '][' → logprob: -5.677041053771973
    4. '.split' → logprob: -6.302041053771973
    5. '(idx' → logprob: -6.302041053771973
    6. ']))' → logprob: -7.677041053771973
    7. '().' → logprob: -7.802041053771973
    8. ']' → logprob: -8.052041053771973
    9. '.strip' → logprob: -8.177041053771973
    10. 'idx' → logprob: -9.052041053771973

Token 744: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20144061744213104
    2. 'strip' → logprob: -1.7014405727386475
    3. 'rstrip' → logprob: -10.951440811157227
    4. 'idx' → logprob: -12.701440811157227
    5. '.strip' → logprob: -12.826440811157227
    6. ' split' → logprob: -13.326440811157227
    7. ' strip' → logprob: -13.951440811157227
    8. '.split' → logprob: -14.201440811157227
    9. '[idx' → logprob: -14.701440811157227
    10. '(split' → logprob: -15.201440811157227

Token 745: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.047471288591623306
    2. '()))
' → logprob: -3.172471284866333
    3. '()' → logprob: -5.547471523284912
    4. '))' → logprob: -7.672471523284912
    5. '(' → logprob: -9.672471046447754
    6. '()))

' → logprob: -11.672471046447754
    7. '()));' → logprob: -11.672471046447754
    8. '()
' → logprob: -12.172471046447754
    9. '()))
' → logprob: -12.297471046447754
    10. '))
' → logprob: -12.547471046447754

Token 746: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034468699246644974
    2. '           ' → logprob: -3.659468650817871
    3. '                   ' → logprob: -5.784468650817871
    4. 'idx' → logprob: -5.784468650817871
    5. '<|end|>' → logprob: -7.534468650817871
    6. '       ' → logprob: -7.784468650817871
    7. '<|end|>' → logprob: -8.659468650817871
    8. '
' → logprob: -8.784468650817871
    9. '[idx' → logprob: -9.034468650817871
    10. ')' → logprob: -9.034468650817871

Token 747: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.011610168032348156
    2. '               ' → logprob: -4.63661003112793
    3. '           ' → logprob: -7.13661003112793
    4. '	idx' → logprob: -7.26161003112793
    5. ' idx' → logprob: -8.51161003112793
    6. '       ' → logprob: -10.51161003112793
    7. '_idx' → logprob: -10.51161003112793
    8. '   ' → logprob: -11.01161003112793
    9. 'index' → logprob: -11.13661003112793
    10. '                   ' → logprob: -11.26161003112793

Token 748: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0020709214732050896
    2. ' +=' → logprob: -6.377070903778076
    3. '+' → logprob: -8.877071380615234
    4. '```' → logprob: -9.502071380615234
    5. ']+=' → logprob: -9.752071380615234
    6. '++' → logprob: -10.252071380615234
    7. '           ' → logprob: -10.877071380615234
    8. '=' → logprob: -11.877071380615234
    9. '[idx' → logprob: -12.127071380615234
    10. 'idx' → logprob: -12.252071380615234

Token 749: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '0' → logprob: -19.75
    4. '
' → logprob: -20.125
    5. '```' → logprob: -20.75
    6. '   ' → logprob: -21.25
    7. '+' → logprob: -21.5
    8. '=' → logprob: -21.75
    9. '(' → logprob: -21.875
    10. '<|end|>' → logprob: -22.0

Token 750: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. 'n' → logprob: -19.875
    4. '(' → logprob: -22.125
    5. '0' → logprob: -22.125
    6. 'len' → logprob: -22.625
    7. '１' → logprob: -22.75
    8. '   ' → logprob: -23.0
    9. '```' → logprob: -23.0
    10. '+' → logprob: -23.625

Token 751: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10026060044765472
    2. '               ' → logprob: -2.3502604961395264
    3. '       ' → logprob: -10.850260734558105
    4. '                   ' → logprob: -11.725260734558105
    5. '<|end|>' → logprob: -11.725260734558105
    6. '
' → logprob: -12.350260734558105
    7. '          ' → logprob: -12.475260734558105
    8. '                       ' → logprob: -13.225260734558105
    9. ',' → logprob: -13.475260734558105
    10. '   ' → logprob: -13.600260734558105

Token 752: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008551205391995609
    2. '               ' → logprob: -7.125854969024658
    3. 'grid' → logprob: -10.500855445861816
    4. '       ' → logprob: -11.125855445861816
    5. '   ' → logprob: -12.500855445861816
    6. '                   ' → logprob: -13.250855445861816
    7. '          ' → logprob: -13.875855445861816
    8. ' grid' → logprob: -14.250855445861816
    9. '		' → logprob: -14.875855445861816
    10. '                       ' → logprob: -15.625855445861816

Token 753: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.010341820307075977
    2. '           ' → logprob: -4.760341644287109
    3. ' grid' → logprob: -6.385341644287109
    4. 'self' → logprob: -10.51034164428711
    5. '               ' → logprob: -11.88534164428711
    6. '	grid' → logprob: -13.13534164428711
    7. '.grid' → logprob: -13.63534164428711
    8. '
' → logprob: -14.38534164428711
    9. '       ' → logprob: -14.38534164428711
    10. '(grid' → logprob: -14.63534164428711

Token 754: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006382156861945987
    2. '.' → logprob: -7.375638008117676
    3. '           ' → logprob: -12.000638008117676
    4. ' .' → logprob: -13.000638008117676
    5. '.extend' → logprob: -13.375638008117676
    6. '               ' → logprob: -14.250638008117676
    7. '       ' → logprob: -14.875638008117676
    8. ').' → logprob: -15.375638008117676
    9. '.app' → logprob: -16.125638961791992
    10. '.add' → logprob: -16.250638961791992

Token 755: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.029758360236883163
    2. '(row' → logprob: -3.5297584533691406
    3. ' row' → logprob: -11.77975845336914
    4. '[row' → logprob: -16.40475845336914
    5. '=row' → logprob: -16.90475845336914
    6. '	row' → logprob: -17.15475845336914
    7. ',row' → logprob: -17.65475845336914
    8. '$row' → logprob: -19.90475845336914
    9. 'list' → logprob: -20.52975845336914
    10. '(' → logprob: -20.52975845336914

Token 756: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002387018030276522
    2. '       ' → logprob: -9.125238418579102
    3. ')
' → logprob: -9.375238418579102
    4. '           ' → logprob: -10.500238418579102
    5. '<|end|>' → logprob: -11.125238418579102
    6. '<|end|>' → logprob: -14.500238418579102
    7. '               ' → logprob: -14.625238418579102
    8. ')return' → logprob: -15.375238418579102
    9. '")' → logprob: -15.750238418579102
    10. '[' → logprob: -15.750238418579102

Token 757: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5981541872024536
    2. '       ' → logprob: -0.8481541872024536
    3. '
' → logprob: -4.223154067993164
    4. 'return' → logprob: -5.473154067993164
    5. ' return' → logprob: -6.223154067993164
    6. 'enemy' → logprob: -8.473154067993164
    7. '<|end|>' → logprob: -8.723154067993164
    8. ' enemy' → logprob: -8.723154067993164
    9. 'grid' → logprob: -9.098154067993164
    10. 'self' → logprob: -9.473154067993164

Token 758: ' self' (ID: 1051)
  Prédit: 'enemy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enemy' → logprob: -0.46184250712394714
    2. '       ' → logprob: -1.7118425369262695
    3. ' enemy' → logprob: -2.4618425369262695
    4. '           ' → logprob: -2.7118425369262695
    5. 'self' (adapté à ' self') → logprob: -4.0868425369262695
    6. 'grid' → logprob: -5.2118425369262695
    7. 'return' → logprob: -5.7118425369262695
    8. '
' → logprob: -5.9618425369262695
    9. ' self' → logprob: -5.9618425369262695
    10. '   ' → logprob: -6.3368425369262695

Token 759: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.00043400691356509924
    2. 'datasets' → logprob: -7.750433921813965
    3. '.datas' → logprob: -13.375433921813965
    4. '.dataset' → logprob: -13.875433921813965
    5. '.dat' → logprob: -15.375433921813965
    6. '.data' → logprob: -15.500433921813965
    7. ' datasets' → logprob: -15.750433921813965
    8. ' .' → logprob: -15.875433921813965
    9. 'atasets' → logprob: -16.62543487548828
    10. '.records' → logprob: -17.37543487548828

Token 760: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000719818810466677
    2. '.' → logprob: -7.250720024108887
    3. '.app' → logprob: -12.500720024108887
    4. ' .' → logprob: -12.625720024108887
    5. '.extend' → logprob: -13.750720024108887
    6. 'append' → logprob: -14.125720024108887
    7. '.setdefault' → logprob: -15.750720024108887
    8. '.py' → logprob: -15.875720024108887
    9. '<|end|>' → logprob: -16.12571907043457
    10. '​.' → logprob: -16.37571907043457

Token 761: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031272098422050476
    2. '(grid' → logprob: -6.503127098083496
    3. '((' → logprob: -6.753127098083496
    4. '(enemy' → logprob: -8.253127098083496
    5. 'Enemy' → logprob: -8.753127098083496
    6. '(Grid' → logprob: -10.628127098083496
    7. ' (' → logprob: -12.378127098083496
    8. 'grid' → logprob: -13.003127098083496
    9. '(self' → logprob: -13.378127098083496
    10. '(
' → logprob: -13.628127098083496

Token 762: 'Enemy' (ID: 38996)
  Prédit: 'Enemy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Enemy' → logprob: -0.03365849331021309
    2. '(' → logprob: -3.533658504486084
    3. '(grid' → logprob: -5.908658504486084
    4. ' Enemy' → logprob: -7.158658504486084
    5. 'grid' → logprob: -8.033658027648926
    6. ' (' → logprob: -10.283658027648926
    7. '(enemy' → logprob: -11.033658027648926
    8. '(E' → logprob: -12.033658027648926
    9. '(Employee' → logprob: -12.283658027648926
    10. 'Grid' → logprob: -12.908658027648926

Token 763: 'Grid' (ID: 5351)
  Prédit: 'Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -1.1472419600977446e-06
    2. 'grid' → logprob: -14.000000953674316
    3. '<Grid' → logprob: -16.500001907348633
    4. '_grid' → logprob: -17.125001907348633
    5. '(Grid' → logprob: -17.375001907348633
    6. '	Grid' → logprob: -18.875001907348633
    7. '(grid' → logprob: -19.125001907348633
    8. 'Enemy' → logprob: -19.250001907348633
    9. 'GRID' → logprob: -19.500001907348633
    10. '.Grid' → logprob: -19.875001907348633

Token 764: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014380558393895626
    2. '(self' → logprob: -4.26438045501709
    3. '(' → logprob: -8.63938045501709
    4. 'self' → logprob: -10.63938045501709
    5. 'n' → logprob: -12.13938045501709
    6. ')' → logprob: -12.63938045501709
    7. ')(' → logprob: -13.26438045501709
    8. '(len' → logprob: -13.63938045501709
    9. ')n' → logprob: -13.88938045501709
    10. '(
' → logprob: -14.38938045501709

Token 765: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006542971823364496
    2. '(grid' → logprob: -7.500654220581055
    3. 'grid' → logprob: -9.875654220581055
    4. ',
' → logprob: -10.375654220581055
    5. ' ,' → logprob: -11.375654220581055
    6. ',n' → logprob: -12.625654220581055
    7. ' grid' → logprob: -13.875654220581055
    8. ')' → logprob: -14.000654220581055
    9. '.grid' → logprob: -14.625654220581055
    10. '(' → logprob: -14.750654220581055

Token 766: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0002613358374219388
    2. ' grid' → logprob: -8.250261306762695
    3. '	grid' → logprob: -18.625261306762695
    4. '(grid' → logprob: -18.750261306762695
    5. '   ' → logprob: -19.000261306762695
    6. 'graph' → logprob: -19.625261306762695
    7. '.grid' → logprob: -19.750261306762695
    8. '           ' → logprob: -20.000261306762695
    9. 'row' → logprob: -20.250261306762695
    10. ' ' → logprob: -20.375261306762695

Token 767: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0040947855450212955
    2. '))' → logprob: -5.50409460067749
    3. ')
' → logprob: -11.504095077514648
    4. '       ' → logprob: -12.504095077514648
    5. '())' → logprob: -13.879095077514648
    6. ')))' → logprob: -13.879095077514648
    7. '))
' → logprob: -15.379095077514648
    8. ')`' → logprob: -16.25409507751465
    9. ')}' → logprob: -16.50409507751465
    10. ' )' → logprob: -16.62909507751465

Token 768: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019363749772310257
    2. 'class' → logprob: -4.519363880157471
    3. '   ' → logprob: -5.144363880157471
    4. '
' → logprob: -6.519363880157471
    5. 'if' → logprob: -7.394363880157471
    6. '<|end|>' → logprob: -8.519363403320312
    7. ' def' → logprob: -9.769363403320312
    8. 'parser' → logprob: -10.019363403320312
    9. '	def' → logprob: -10.769363403320312
    10. '```' → logprob: -12.144363403320312

Token 769: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.2818240821361542
    2. 'Main' → logprob: -2.6568241119384766
    3. 'Solution' → logprob: -2.7818241119384766
    4. 'Runner' → logprob: -2.9068241119384766
    5. 'Solver' → logprob: -3.5318241119384766
    6. 'Spell' → logprob: -4.156824111938477
    7. 'main' → logprob: -5.406824111938477
    8. 'Battle' → logprob: -5.906824111938477
    9. 'Game' → logprob: -7.031824111938477
    10. 'Executor' → logprob: -7.156824111938477

Token 770: 'Handler' (ID: 4139)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.07390191406011581
    2. 'Handler' → logprob: -3.573901891708374
    3. 'Parser' → logprob: -4.198902130126953
    4. 'Formatter' → logprob: -4.448902130126953
    5. 'Printer' → logprob: -4.823902130126953
    6. 'Generator' → logprob: -5.448902130126953
    7. 'Builder' → logprob: -6.573902130126953
    8. 'ter' → logprob: -6.698902130126953
    9. 'Manager' → logprob: -7.698902130126953
    10. 'class' → logprob: -7.948902130126953

Token 771: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01816387102007866
    2. ':
' → logprob: -4.018163681030273
    3. ':def' → logprob: -12.018163681030273
    4. 'class' → logprob: -13.018163681030273
    5. ':

' → logprob: -13.643163681030273
    6. '():
' → logprob: -13.768163681030273
    7. '<class' → logprob: -14.268163681030273
    8. '```' → logprob: -15.018163681030273
    9. '<|end|>' → logprob: -15.018163681030273
    10. '():' → logprob: -15.143163681030273

Token 772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07977480441331863
    2. 'class' → logprob: -2.579774856567383
    3. 'def' → logprob: -7.704774856567383
    4. ' class' → logprob: -8.079774856567383
    5. '```' → logprob: -9.454774856567383
    6. ' def' → logprob: -10.579774856567383
    7. '
' → logprob: -11.704774856567383
    8. '<|end|>' → logprob: -12.079774856567383
    9. '<class' → logprob: -13.329774856567383
    10. ':' → logprob: -14.329774856567383

Token 773: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00029065259150229394
    2. ' def' → logprob: -8.250290870666504
    3. '   ' → logprob: -10.875290870666504
    4. 'class' → logprob: -11.500290870666504
    5. '@' → logprob: -15.375290870666504
    6. '	def' → logprob: -17.500289916992188
    7. '```' → logprob: -17.625289916992188
    8. '
' → logprob: -19.750289916992188
    9. 'staticmethod' → logprob: -20.000289916992188
    10. ':def' → logprob: -20.250289916992188

Token 774: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010797139257192612
    2. 'staticmethod' → logprob: -4.635797023773193
    3. ' def' → logprob: -7.010797023773193
    4. 'classmethod' → logprob: -9.510797500610352
    5. '__' → logprob: -10.635797500610352
    6. 'init' → logprob: -11.010797500610352
    7. 'class' → logprob: -11.635797500610352
    8. 'self' → logprob: -12.260797500610352
    9. '.__' → logprob: -13.135797500610352
    10. '   ' → logprob: -13.260797500610352

Token 775: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. '__' → logprob: -16.625
    3. 'def' → logprob: -18.375
    4. 'iter' → logprob: -18.5
    5. 'int' → logprob: -18.75
    6. ' init' → logprob: -19.0
    7. 'call' → logprob: -19.125
    8. 'write' → logprob: -19.625
    9. 'staticmethod' → logprob: -20.625
    10. '_init' → logprob: -21.375

Token 776: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012534607201814651
    2. '__(' → logprob: -4.6375346183776855
    3. ' (' → logprob: -6.5125346183776855
    4. '   ' → logprob: -7.5125346183776855
    5. 'self' → logprob: -8.762534141540527
    6. '(' → logprob: -8.762534141540527
    7. '
' → logprob: -9.137534141540527
    8. '()' → logprob: -9.762534141540527
    9. '().__' → logprob: -10.387534141540527
    10. '():
' → logprob: -10.387534141540527

Token 777: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.244413766078651e-05
    2. ')' → logprob: -9.750082015991211
    3. '):
' → logprob: -10.875082015991211
    4. '   ' → logprob: -13.125082015991211
    5. ' self' → logprob: -13.125082015991211
    6. '
' → logprob: -14.875082015991211
    7. '):' → logprob: -15.125082015991211
    8. '       ' → logprob: -15.125082015991211
    9. '(self' → logprob: -16.50008201599121
    10. '),' → logprob: -16.75008201599121

Token 778: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6936498880386353
    2. '):' → logprob: -0.6936498880386353
    3. 'self' → logprob: -8.818650245666504
    4. ')' → logprob: -9.068650245666504
    5. ',' → logprob: -9.068650245666504
    6. 'def' → logprob: -9.943650245666504
    7. '():
' → logprob: -11.068650245666504
    8. '<|end|>' → logprob: -11.443650245666504
    9. '):
' → logprob: -11.693650245666504
    10. 'class' → logprob: -11.943650245666504

Token 779: ' results' (ID: 4376)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.38178977370262146
    2. '):
' → logprob: -2.0067896842956543
    3. 'results' → logprob: -2.7567896842956543
    4. '):' → logprob: -3.0067896842956543
    5. 'self' → logprob: -3.3817896842956543
    6. 'outputs' → logprob: -3.7567896842956543
    7. 'output' → logprob: -5.506789684295654
    8. '
' → logprob: -6.256789684295654
    9. '   ' → logprob: -6.256789684295654
    10. 'data' → logprob: -6.506789684295654

Token 780: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2520345151424408
    2. '):' → logprob: -1.5020345449447632
    3. ',' → logprob: -9.877034187316895
    4. '):
' → logprob: -10.377034187316895
    5. '   ' → logprob: -11.252034187316895
    6. ':' → logprob: -13.252034187316895
    7. ')' → logprob: -13.252034187316895
    8. '):

' → logprob: -13.502034187316895
    9. '       ' → logprob: -13.627034187316895
    10. ' ):
' → logprob: -13.877034187316895

Token 781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6651012301445007
    2. '   ' → logprob: -0.7901012301445007
    3. 'def' → logprob: -3.6651012897491455
    4. 'self' → logprob: -5.165101051330566
    5. ' self' → logprob: -7.915101051330566
    6. ' def' → logprob: -8.540101051330566
    7. '(self' → logprob: -11.165101051330566
    8. '	def' → logprob: -11.165101051330566
    9. '	self' → logprob: -11.290101051330566
    10. ':' → logprob: -11.415101051330566

Token 782: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -8.792751032160595e-05
    2. ' self' → logprob: -9.50008773803711
    3. '       ' → logprob: -11.25008773803711
    4. '   ' → logprob: -17.37508773803711
    5. '	self' → logprob: -18.25008773803711
    6. 'def' → logprob: -19.62508773803711
    7. '(self' → logprob: -20.37508773803711
    8. '[self' → logprob: -21.75008773803711
    9. ' ' → logprob: -21.87508773803711
    10. '_self' → logprob: -22.00008773803711

Token 783: '.results' (ID: 53203)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -5.526570384972729e-05
    2. '.results' → logprob: -10.500055313110352
    3. ' results' → logprob: -10.500055313110352
    4. '	results' → logprob: -16.37505531311035
    5. '_results' → logprob: -17.00005531311035
    6. '
' → logprob: -17.25005531311035
    7. 'result' → logprob: -18.62505531311035
    8. '(results' → logprob: -18.87505531311035
    9. '   ' → logprob: -19.87505531311035
    10. 'def' → logprob: -20.50005531311035

Token 784: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25206083059310913
    2. ' =' → logprob: -1.502060890197754
    3. '   ' → logprob: -9.002060890197754
    4. '=self' → logprob: -12.752060890197754
    5. '=[]' → logprob: -13.502060890197754
    6. '       ' → logprob: -13.627060890197754
    7. '=
' → logprob: -14.252060890197754
    8. ' ' → logprob: -14.627060890197754
    9. ' =
' → logprob: -14.877060890197754
    10. ',' → logprob: -15.127060890197754

Token 785: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0001234428636962548
    2. ' results' → logprob: -9.000123023986816
    3. '(results' → logprob: -16.875123977661133
    4. '	results' → logprob: -18.000123977661133
    5. '[' → logprob: -19.125123977661133
    6. '.results' → logprob: -19.125123977661133
    7. '[]' → logprob: -19.750123977661133
    8. '   ' → logprob: -21.125123977661133
    9. '[]
' → logprob: -21.375123977661133
    10. 'Results' → logprob: -22.500123977661133

Token 786: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010152910836040974
    2. '
' → logprob: -4.635152816772461
    3. 'def' → logprob: -8.010152816772461
    4. '    
' → logprob: -10.635152816772461
    5. ' def' → logprob: -10.635152816772461
    6. '<|end|>' → logprob: -11.260152816772461
    7. '<|end|>' → logprob: -14.260152816772461
    8. '  
' → logprob: -14.635152816772461
    9. ' ' → logprob: -14.635152816772461
    10. '	def' → logprob: -15.135152816772461

Token 787: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.101793572306633
    2. '   ' → logprob: -2.3517935276031494
    3. ' def' → logprob: -6.6017937660217285
    4. '
' → logprob: -8.60179328918457
    5. ' ' → logprob: -11.22679328918457
    6. '<|end|>' → logprob: -11.22679328918457
    7. 'class' → logprob: -12.22679328918457
    8. '	def' → logprob: -12.60179328918457
    9. '    
' → logprob: -13.10179328918457
    10. '```' → logprob: -13.35179328918457

Token 788: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.6789137084269896e-05
    2. ' def' → logprob: -10.25003719329834
    3. '   ' → logprob: -14.00003719329834
    4. '
' → logprob: -14.50003719329834
    5. '	def' → logprob: -16.750036239624023
    6. 'class' → logprob: -18.875036239624023
    7. ' ' → logprob: -19.250036239624023
    8. '```' → logprob: -20.875036239624023
    9. 'de' → logprob: -21.000036239624023
    10. 'from' → logprob: -21.875036239624023

Token 789: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03901785612106323
    2. 'display' → logprob: -3.789017915725708
    3. 'write' → logprob: -4.789017677307129
    4. 'output' → logprob: -5.039017677307129
    5. 'handle' → logprob: -7.289017677307129
    6. ' print' → logprob: -9.789017677307129
    7. 'process' → logprob: -9.914017677307129
    8. 'render' → logprob: -11.039017677307129
    9. ' output' → logprob: -11.539017677307129
    10. 'format' → logprob: -11.664017677307129

Token 790: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.06405303627252579
    2. '()' → logprob: -2.9390530586242676
    3. '_all' → logprob: -5.064053058624268
    4. '_result' → logprob: -7.064053058624268
    5. '_' → logprob: -7.314053058624268
    6. 'results' → logprob: -7.564053058624268
    7. '(' → logprob: -7.939053058624268
    8. '(self' → logprob: -8.93905258178711
    9. 'all' → logprob: -9.56405258178711
    10. 'Results' → logprob: -10.43905258178711

Token 791: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.954393079970032e-05
    2. '(' → logprob: -10.000049591064453
    3. '   ' → logprob: -12.750049591064453
    4. '       ' → logprob: -14.625049591064453
    5. 'def' → logprob: -15.250049591064453
    6. 'self' → logprob: -15.375049591064453
    7. '(
' → logprob: -15.625049591064453
    8. ' (' → logprob: -15.875049591064453
    9. '():
' → logprob: -18.375049591064453
    10. ' ' → logprob: -19.000049591064453

Token 792: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2521268129348755
    2. '):' → logprob: -1.5021268129348755
    3. 'self' → logprob: -9.377126693725586
    4. '):
' → logprob: -10.002126693725586
    5. ',' → logprob: -10.377126693725586
    6. '(self' → logprob: -10.752126693725586
    7. '   ' → logprob: -12.002126693725586
    8. '):

' → logprob: -12.752126693725586
    9. '       ' → logprob: -13.252126693725586
    10. ')' → logprob: -13.377126693725586

Token 793: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00379532715305686
    2. 'for' → logprob: -6.128795146942139
    3. '   ' → logprob: -7.128795146942139
    4. ' for' → logprob: -7.128795146942139
    5. 'def' → logprob: -13.503795623779297
    6. '	for' → logprob: -14.003795623779297
    7. ' ' → logprob: -14.253795623779297
    8. '```' → logprob: -14.378795623779297
    9. ',' → logprob: -14.503795623779297
    10. 'self' → logprob: -15.003795623779297

Token 794: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008627460338175297
    2. ' for' → logprob: -4.758627414703369
    3. '       ' → logprob: -11.258627891540527
    4. '   ' → logprob: -17.00862693786621
    5. '	for' → logprob: -18.00862693786621
    6. '```' → logprob: -18.50862693786621
    7. '
' → logprob: -20.25862693786621
    8. ' ' → logprob: -22.00862693786621
    9. '``' → logprob: -22.00862693786621
    10. '           ' → logprob: -22.13362693786621

Token 795: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10094218701124191
    2. 'res' → logprob: -2.3509421348571777
    3. ' result' → logprob: -7.475942134857178
    4. ' res' → logprob: -8.725942611694336
    5. 'r' → logprob: -12.850942611694336
    6. 'line' → logprob: -13.600942611694336
    7. 'output' → logprob: -14.350942611694336
    8. 'i' → logprob: -14.975942611694336
    9. 'ans' → logprob: -15.225942611694336
    10. '   ' → logprob: -15.350942611694336

Token 796: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000799980596639216
    2. 'in' → logprob: -7.375800132751465
    3. ' ' → logprob: -9.375800132751465
    4. 'ult' → logprob: -10.000800132751465
    5. 't' → logprob: -11.375800132751465
    6. '   ' → logprob: -11.500800132751465
    7. ',' → logprob: -12.875800132751465
    8. '_' → logprob: -12.875800132751465
    9. 's' → logprob: -13.375800132751465
    10. '  ' → logprob: -13.500800132751465

Token 797: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.710618905955926e-05
    2. ' self' → logprob: -9.250097274780273
    3. '(self' → logprob: -13.875097274780273
    4. '[self' → logprob: -18.250097274780273
    5. '   ' → logprob: -18.750097274780273
    6. 'res' → logprob: -20.125097274780273
    7. ' ' → logprob: -20.250097274780273
    8. '
' → logprob: -20.375097274780273
    9. '	self' → logprob: -20.625097274780273
    10. 'result' → logprob: -21.375097274780273

Token 798: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.0001261845463886857
    2. 'results' → logprob: -9.000125885009766
    3. '.' → logprob: -13.750125885009766
    4. '.result' → logprob: -14.375125885009766
    5. ' .' → logprob: -15.125125885009766
    6. 'self' → logprob: -15.625125885009766
    7. '	results' → logprob: -15.625125885009766
    8. '
' → logprob: -15.875125885009766
    9. '.res' → logprob: -16.500125885009766
    10. '   ' → logprob: -16.500125885009766

Token 799: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33001071214675903
    2. ':
' → logprob: -1.5800106525421143
    3. '           ' → logprob: -3.0800106525421143
    4. '():
' → logprob: -3.5800106525421143
    5. '):
' → logprob: -7.705010890960693
    6. ',' → logprob: -8.455010414123535
    7. '       ' → logprob: -8.705010414123535
    8. '():' → logprob: -8.705010414123535
    9. 'print' → logprob: -10.080010414123535
    10. '.print' → logprob: -10.455010414123535

Token 800: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01232232991605997
    2. '       ' → logprob: -4.512322425842285
    3. 'print' → logprob: -6.762322425842285
    4. ' print' → logprob: -9.387322425842285
    5. '```' → logprob: -11.262322425842285
    6. '   ' → logprob: -12.387322425842285
    7. '	       ' → logprob: -12.512322425842285
    8. 'if' → logprob: -13.137322425842285
    9. ',' → logprob: -13.262322425842285
    10. ' if' → logprob: -13.512322425842285

Token 801: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007332704844884574
    2. 'if' → logprob: -7.250733375549316
    3. '           ' → logprob: -10.750733375549316
    4. ' print' → logprob: -13.250733375549316
    5. '   ' → logprob: -17.375732421875
    6. ' if' → logprob: -18.000732421875
    7. '```' → logprob: -18.750732421875
    8. '               ' → logprob: -20.000732421875
    9. '       ' → logprob: -20.250732421875
    10. '	print' → logprob: -22.000732421875

Token 802: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0019288709154352546
    2. 'res' → logprob: -6.251928806304932
    3. '(' → logprob: -16.126928329467773
    4. '(len' → logprob: -16.876928329467773
    5. '$res' → logprob: -17.251928329467773
    6. ' res' → logprob: -18.001928329467773
    7. 'len' → logprob: -18.376928329467773
    8. '("")' → logprob: -18.376928329467773
    9. '(""' → logprob: -18.626928329467773
    10. '""' → logprob: -18.876928329467773

Token 803: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.5014188799541444e-05
    2. '())' → logprob: -10.250044822692871
    3. '()' → logprob: -11.625044822692871
    4. '")' → logprob: -15.375044822692871
    5. ' )' → logprob: -16.000045776367188
    6. ')
' → logprob: -16.375045776367188
    7. ')`' → logprob: -16.375045776367188
    8. '))' → logprob: -16.625045776367188
    9. ')")' → logprob: -17.750045776367188
    10. '`)' → logprob: -17.875045776367188

Token 804: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47856733202934265
    2. 'if' → logprob: -0.978567361831665
    3. 'class' → logprob: -5.853567123413086
    4. '```' → logprob: -6.478567123413086
    5. ' if' → logprob: -10.478567123413086
    6. 'import' → logprob: -10.978567123413086
    7. '#' → logprob: -11.478567123413086
    8. '
' → logprob: -11.978567123413086
    9. '#!/' → logprob: -12.853567123413086
    10. 'for' → logprob: -13.353567123413086

Token 805: ' M' (ID: 391)
  Prédit: 'Main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Main' → logprob: -0.12555114924907684
    2. 'Game' → logprob: -3.250551223754883
    3. 'Solution' → logprob: -3.625551223754883
    4. 'Runner' → logprob: -3.875551223754883
    5. 'Solver' → logprob: -4.250551223754883
    6. 'Battle' → logprob: -5.125551223754883
    7. 'main' → logprob: -5.125551223754883
    8. 'Controller' → logprob: -6.250551223754883
    9. 'Application' → logprob: -6.750551223754883
    10. 'Program' → logprob: -7.125551223754883

Token 806: 'yster' (ID: 42320)
  Prédit: 'ain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ain' → logprob: -1.1160349458805285e-05
    2. 'AIN' → logprob: -12.750011444091797
    3. 'anager' → logprob: -12.875011444091797
    4. 'y' → logprob: -13.250011444091797
    5. 'ainer' → logprob: -13.625011444091797
    6. 'agic' → logprob: -14.125011444091797
    7. 'Solver' → logprob: -14.750011444091797
    8. 'a' → logprob: -14.875011444091797
    9. 'ains' → logprob: -15.375011444091797
    10. 'odel' → logprob: -15.750011444091797

Token 807: 'ious' (ID: 1595)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011628193780779839
    2. 'ious' → logprob: -4.886628150939941
    3. 'io' → logprob: -5.886628150939941
    4. 'ion' → logprob: -7.386628150939941
    5. 'ia' → logprob: -9.011628150939941
    6. '```' → logprob: -9.136628150939941
    7. 'ius' → logprob: -9.511628150939941
    8. 'i' → logprob: -9.636628150939941
    9. 'e' → logprob: -9.761628150939941
    10. 'ium' → logprob: -9.886628150939941

Token 808: 'On' (ID: 2219)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.3234005868434906
    2. 'Spell' → logprob: -2.0734004974365234
    3. 'Class' → logprob: -3.1984004974365234
    4. 'Wizard' → logprob: -3.5734004974365234
    5. 'Code' → logprob: -3.9484004974365234
    6. 'class' → logprob: -3.9484004974365234
    7. 'Solution' → logprob: -4.573400497436523
    8. 'Game' → logprob: -5.198400497436523
    9. 'Problem' → logprob: -5.698400497436523
    10. 'Enemy' → logprob: -5.948400497436523

Token 809: 'slaught' (ID: 189081)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20569294691085815
    2. 'es' → logprob: -1.705693006515503
    3. 'ion' → logprob: -6.330692768096924
    4. 'ly' → logprob: -7.580692768096924
    5. 's' → logprob: -7.955692768096924
    6. 'Spell' → logprob: -8.080693244934082
    7. 'slaught' → logprob: -8.580693244934082
    8. 'el' → logprob: -8.830693244934082
    9. 'em' → logprob: -9.205693244934082
    10. 'line' → logprob: -9.330693244934082

Token 810: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016088450327515602
    2. ':
' → logprob: -4.141088485717773
    3. ':def' → logprob: -10.391088485717773
    4. 'def' → logprob: -11.891088485717773
    5. '(S' → logprob: -12.016088485717773
    6. '(' → logprob: -12.766088485717773
    7. ':

' → logprob: -13.141088485717773
    8. '():' → logprob: -13.266088485717773
    9. '   ' → logprob: -13.766088485717773
    10. '(object' → logprob: -14.141088485717773

Token 811: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020557301118969917
    2. ':
' → logprob: -3.895557403564453
    3. ':

' → logprob: -11.645557403564453
    4. ':def' → logprob: -12.895557403564453
    5. '(object' → logprob: -13.895557403564453
    6. '(' → logprob: -13.895557403564453
    7. ':
' → logprob: -14.645557403564453
    8. '(Abstract' → logprob: -15.145557403564453
    9. ' :' → logprob: -15.270557403564453
    10. '():' → logprob: -15.270557403564453

Token 812: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007274442468769848
    2. 'def' → logprob: -7.375727653503418
    3. ' def' → logprob: -9.375727653503418
    4. 'class' → logprob: -11.250727653503418
    5. '	def' → logprob: -12.875727653503418
    6. '
' → logprob: -15.500727653503418
    7. '    
' → logprob: -16.2507266998291
    8. '<|end|>' → logprob: -16.8757266998291
    9. 'classmethod' → logprob: -17.7507266998291
    10. ':def' → logprob: -17.7507266998291

Token 813: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002224125899374485
    2. ' def' → logprob: -6.502223968505859
    3. '   ' → logprob: -7.252223968505859
    4. '@' → logprob: -11.37722396850586
    5. 'staticmethod' → logprob: -14.62722396850586
    6. '	def' → logprob: -15.00222396850586
    7. ':def' → logprob: -15.62722396850586
    8. '__' → logprob: -15.75222396850586
    9. ':
' → logprob: -15.75222396850586
    10. ':' → logprob: -16.62722396850586

Token 814: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5047081708908081
    2. 'def' → logprob: -1.129708170890808
    3. ' __' → logprob: -3.5047082901000977
    4. ' def' → logprob: -3.8797082901000977
    5. 'init' → logprob: -3.8797082901000977
    6. '___' → logprob: -7.129708290100098
    7. 'solve' → logprob: -7.754708290100098
    8. '_init' → logprob: -8.629708290100098
    9. 'staticmethod' → logprob: -9.504708290100098
    10. '.__' → logprob: -9.504708290100098

Token 815: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.625
    3. 'def' → logprob: -21.375
    4. '
' → logprob: -21.875
    5. 'new' → logprob: -22.0
    6. '	init' → logprob: -22.0
    7. '__' → logprob: -22.125
    8. 'call' → logprob: -22.375
    9. '```' → logprob: -22.5
    10. '...' → logprob: -22.5

Token 816: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01445387490093708
    2. '__(' → logprob: -4.514453887939453
    3. '(' → logprob: -6.264453887939453
    4. 'self' → logprob: -7.264453887939453
    5. ' (' → logprob: -7.514453887939453
    6. '   ' → logprob: -9.514453887939453
    7. ',' → logprob: -9.639453887939453
    8. '(
' → logprob: -10.764453887939453
    9. '__(
' → logprob: -10.764453887939453
    10. '
' → logprob: -11.639453887939453

Token 817: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6240566083070007e-06
    2. ' self' → logprob: -13.750001907348633
    3. '
' → logprob: -15.375001907348633
    4. '):
' → logprob: -16.375001907348633
    5. ')' → logprob: -16.750001907348633
    6. ',' → logprob: -17.500001907348633
    7. '       ' → logprob: -18.500001907348633
    8. 's' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '0' → logprob: -18.625001907348633

Token 818: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016278693452477455
    2. 'self' → logprob: -4.1412787437438965
    3. '):
' → logprob: -9.141278266906738
    4. ',self' → logprob: -9.266278266906738
    5. '(self' → logprob: -11.016278266906738
    6. 'class' → logprob: -11.266278266906738
    7. '):' → logprob: -13.141278266906738
    8. ',
' → logprob: -13.266278266906738
    9. ' ,' → logprob: -13.391278266906738
    10. ' self' → logprob: -13.641278266906738

Token 819: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.584239938296378e-06
    2. ' self' → logprob: -12.625007629394531
    3. '       ' → logprob: -13.125007629394531
    4. '   ' → logprob: -13.625007629394531
    5. '(self' → logprob: -14.750007629394531
    6. '
' → logprob: -15.250007629394531
    7. '	self' → logprob: -15.500007629394531
    8. 'def' → logprob: -16.50000762939453
    9. '```' → logprob: -18.62500762939453
    10. ' ' → logprob: -19.25000762939453

Token 820: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010281645692884922
    2. 'def' → logprob: -4.760281562805176
    3. ' self' → logprob: -6.885281562805176
    4. '       ' → logprob: -7.385281562805176
    5. '   ' → logprob: -11.385281562805176
    6. 'class' → logprob: -12.635281562805176
    7. '	self' → logprob: -13.010281562805176
    8. '
' → logprob: -13.135281562805176
    9. ' def' → logprob: -13.885281562805176
    10. 's' → logprob: -14.135281562805176

Token 821: '.input' (ID: 18322)
  Prédit: '.parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.4935370087623596
    2. '.input' → logprob: -0.9935370087623596
    3. '.results' → logprob: -4.618536949157715
    4. '.parsers' → logprob: -5.493536949157715
    5. 'parser' → logprob: -5.868536949157715
    6. '.inputs' → logprob: -6.993536949157715
    7. 'input' → logprob: -6.993536949157715
    8. '.def' → logprob: -8.368536949157715
    9. 'results' → logprob: -8.618536949157715
    10. 'def' → logprob: -9.368536949157715

Token 822: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -0.002395748160779476
    2. 'Parser' → logprob: -6.1273956298828125
    3. 'parser' → logprob: -9.377395629882812
    4. '_handler' → logprob: -9.752395629882812
    5. '_reader' → logprob: -10.252395629882812
    6. '_source' → logprob: -11.377395629882812
    7. '_data' → logprob: -11.377395629882812
    8. '_lines' → logprob: -12.877395629882812
    9. '_buffer' → logprob: -13.377395629882812
    10. '_processor' → logprob: -13.752395629882812

Token 823: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.388031542301178
    2. '=' → logprob: -1.1380314826965332
    3. '.parse' → logprob: -7.888031482696533
    4. '=self' → logprob: -8.013031959533691
    5. '=parse' → logprob: -8.763031959533691
    6. '.' → logprob: -9.888031959533691
    7. '<|end|>' → logprob: -9.888031959533691
    8. 'self' → logprob: -10.013031959533691
    9. '(self' → logprob: -11.013031959533691
    10. '   ' → logprob: -11.138031959533691

Token 824: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -9.088346359931165e-07
    2. ' Input' → logprob: -14.000000953674316
    3. 'input' → logprob: -21.25
    4. '	Input' → logprob: -21.625
    5. '_input' → logprob: -22.125
    6. '<Input' → logprob: -23.25
    7. '_Input' → logprob: -24.375
    8. '\Input' → logprob: -24.375
    9. 'INPUT' → logprob: -25.0
    10. ' input' → logprob: -25.125

Token 825: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'Handler' → logprob: -18.75
    3. 'parser' → logprob: -19.0
    4. ' Parser' → logprob: -19.25
    5. '_parser' → logprob: -19.875
    6. '.Parser' → logprob: -20.375
    7. '(Parser' → logprob: -20.5
    8. 'Parsed' → logprob: -20.5
    9. 'Parse' → logprob: -20.625
    10. 'Processor' → logprob: -21.0

Token 826: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6337236762046814
    2. '   ' → logprob: -0.8837236762046814
    3. 'def' → logprob: -3.758723735809326
    4. '<|end|>' → logprob: -4.383723735809326
    5. '       ' → logprob: -4.758723735809326
    6. ' def' → logprob: -5.133723735809326
    7. '

' → logprob: -5.883723735809326
    8. '<|end|>' → logprob: -6.883723735809326
    9. '    
' → logprob: -7.008723735809326
    10. '	def' → logprob: -7.633723735809326

Token 827: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006387195084244013
    2. 'def' → logprob: -5.131387233734131
    3. '       ' → logprob: -8.256386756896973
    4. ' def' → logprob: -8.881386756896973
    5. 'self' → logprob: -10.506386756896973
    6. '
' → logprob: -10.881386756896973
    7. '```' → logprob: -11.506386756896973
    8. '	def' → logprob: -13.256386756896973
    9. '    
' → logprob: -14.631386756896973
    10. '<|end|>' → logprob: -14.756386756896973

Token 828: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011288318783044815
    2. 'def' → logprob: -4.886288166046143
    3. '       ' → logprob: -6.136288166046143
    4. ' self' → logprob: -6.511288166046143
    5. '
' → logprob: -11.2612886428833
    6. '   ' → logprob: -11.6362886428833
    7. '	self' → logprob: -13.1362886428833
    8. ' def' → logprob: -13.8862886428833
    9. '(self' → logprob: -14.8862886428833
    10. '<|end|>' → logprob: -15.5112886428833

Token 829: '.results' (ID: 53203)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.32860881090164185
    2. 'results' → logprob: -1.453608751296997
    3. 'spell' → logprob: -4.078608989715576
    4. 'solver' → logprob: -4.703608989715576
    5. '.output' → logprob: -4.953608989715576
    6. '.sp' → logprob: -5.703608989715576
    7. '.results' → logprob: -5.953608989715576
    8. 'result' → logprob: -6.203608989715576
    9. 'enemy' → logprob: -6.703608989715576
    10. 'input' → logprob: -6.703608989715576

Token 830: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47529613971710205
    2. ' =' → logprob: -0.975296139717102
    3. '=[]' → logprob: -6.7252960205078125
    4. '=[]
' → logprob: -12.100296020507812
    5. ' ' → logprob: -12.475296020507812
    6. '[]' → logprob: -12.600296020507812
    7. '   ' → logprob: -12.725296020507812
    8. '<|end|>' → logprob: -14.600296020507812
    9. ',' → logprob: -14.975296020507812
    10. '.' → logprob: -15.350296020507812

Token 831: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00036846695002168417
    2. ' []' → logprob: -8.000368118286133
    3. '[]
' → logprob: -10.375368118286133
    4. '[]

' → logprob: -14.375368118286133
    5. '=[]' → logprob: -14.500368118286133
    6. '[]"' → logprob: -15.250368118286133
    7. '[]}' → logprob: -15.375368118286133
    8. '[' → logprob: -16.625368118286133
    9. '[])' → logprob: -16.875368118286133
    10. '   ' → logprob: -17.125368118286133

Token 832: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27821218967437744
    2. '   ' → logprob: -1.5282121896743774
    3. ' def' → logprob: -3.653212070465088
    4. '
' → logprob: -11.153212547302246
    5. '	def' → logprob: -11.778212547302246
    6. '<|end|>' → logprob: -12.403212547302246
    7. ' ' → logprob: -12.903212547302246
    8. '```' → logprob: -13.028212547302246
    9. '<|end|>' → logprob: -14.153212547302246
    10. '       ' → logprob: -14.778212547302246

Token 833: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.08944896562025e-05
    2. ' def' → logprob: -10.000081062316895
    3. '   ' → logprob: -10.250081062316895
    4. '
' → logprob: -17.125080108642578
    5. '	def' → logprob: -18.625080108642578
    6. ' ' → logprob: -21.250080108642578
    7. 'Def' → logprob: -21.250080108642578
    8. '```' → logprob: -21.750080108642578
    9. '  ' → logprob: -22.250080108642578
    10. '       ' → logprob: -22.625080108642578

Token 834: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.03895903378725052
    2. 'solve' → logprob: -3.28895902633667
    3. 'process' → logprob: -7.66395902633667
    4. ' run' → logprob: -7.91395902633667
    5. ' solve' → logprob: -10.538959503173828
    6. 'read' → logprob: -10.538959503173828
    7. 'main' → logprob: -11.288959503173828
    8. 'm' → logprob: -11.788959503173828
    9. 'parse' → logprob: -12.413959503173828
    10. 'execute' → logprob: -13.163959503173828

Token 835: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.2855416066013277e-05
    2. '(' → logprob: -10.750032424926758
    3. '(
' → logprob: -12.500032424926758
    4. '   ' → logprob: -12.875032424926758
    5. 'self' → logprob: -13.250032424926758
    6. '():
' → logprob: -13.375032424926758
    7. '       ' → logprob: -13.625032424926758
    8. 'def' → logprob: -15.750032424926758
    9. '(s' → logprob: -16.125032424926758
    10. '(sel' → logprob: -16.750032424926758

Token 836: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5239353775978088
    2. '):' → logprob: -0.8989353775978088
    3. '):
' → logprob: -8.148935317993164
    4. 'self' → logprob: -8.398935317993164
    5. '():
' → logprob: -9.273935317993164
    6. ',' → logprob: -9.398935317993164
    7. '():' → logprob: -9.773935317993164
    8. '(self' → logprob: -10.523935317993164
    9. '   ' → logprob: -11.773935317993164
    10. ')' → logprob: -11.898935317993164

Token 837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009862465085461736
    2. 'self' → logprob: -7.000986099243164
    3. '
' → logprob: -9.875986099243164
    4. '   ' → logprob: -11.375986099243164
    5. ' self' → logprob: -11.625986099243164
    6. '        
' → logprob: -13.500986099243164
    7. '```' → logprob: -14.625986099243164
    8. '(self' → logprob: -15.375986099243164
    9. '           ' → logprob: -16.125986099243164
    10. 'def' → logprob: -16.125986099243164

Token 838: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.022668899968266487
    2. '       ' → logprob: -4.272668838500977
    3. ' self' → logprob: -4.772668838500977
    4. '   ' → logprob: -11.772668838500977
    5. '	self' → logprob: -12.897668838500977
    6. ' ' → logprob: -14.647668838500977
    7. '
' → logprob: -15.397668838500977
    8. '(self' → logprob: -15.647668838500977
    9. '           ' → logprob: -16.022668838500977
    10. 'def' → logprob: -17.272668838500977

Token 839: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -3.8889261304575484e-06
    2. 'input' → logprob: -12.500003814697266
    3. '.' → logprob: -16.875003814697266
    4. '=input' → logprob: -20.000003814697266
    5. '.output' → logprob: -20.125003814697266
    6. ' .' → logprob: -20.500003814697266
    7. '.inputs' → logprob: -20.750003814697266
    8. '<input' → logprob: -20.750003814697266
    9. '.user' → logprob: -21.125003814697266
    10. ' input' → logprob: -21.500003814697266

Token 840: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -4.246537173457909e-06
    2. 'parser' → logprob: -12.500003814697266
    3. 'Parser' → logprob: -15.375003814697266
    4. '_handler' → logprob: -16.500003814697266
    5. '   ' → logprob: -16.750003814697266
    6. 'parse' → logprob: -17.250003814697266
    7. '_parse' → logprob: -18.000003814697266
    8. '	parser' → logprob: -18.125003814697266
    9. '_processor' → logprob: -18.250003814697266
    10. '       ' → logprob: -18.250003814697266

Token 841: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -14.875
    3. ' .' → logprob: -17.125
    4. 'parse' → logprob: -17.875
    5. '   ' → logprob: -18.875
    6. '.parser' → logprob: -19.25
    7. '.process' → logprob: -19.25
    8. '=parse' → logprob: -20.125
    9. '.Parse' → logprob: -20.25
    10. '().' → logprob: -20.25

Token 842: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039492646465077996
    2. 'for' → logprob: -9.125394821166992
    3. '
' → logprob: -9.250394821166992
    4. 'n' → logprob: -9.375394821166992
    5. ' for' → logprob: -10.250394821166992
    6. 'while' → logprob: -10.625394821166992
    7. 'self' → logprob: -11.250394821166992
    8. '<|end|>' → logprob: -11.750394821166992
    9. ',' → logprob: -12.375394821166992
    10. '   ' → logprob: -12.375394821166992

Token 843: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1641906052827835
    2. 'for' → logprob: -1.914190649986267
    3. ' for' → logprob: -5.539190769195557
    4. '```' → logprob: -11.789190292358398
    5. 'self' → logprob: -11.914190292358398
    6. '   ' → logprob: -12.039190292358398
    7. '	for' → logprob: -12.914190292358398
    8. '<|end|>' → logprob: -13.039190292358398
    9. '
' → logprob: -13.914190292358398
    10. '        
' → logprob: -14.414190292358398

Token 844: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004206634475849569
    2. 'self' → logprob: -8.125420570373535
    3. '       ' → logprob: -9.500420570373535
    4. 'enemy' → logprob: -10.625420570373535
    5. 'rect' → logprob: -11.375420570373535
    6. 'results' → logprob: -12.125420570373535
    7. ' for' → logprob: -12.250420570373535
    8. 'spell' → logprob: -13.125420570373535
    9. 'grid' → logprob: -14.500420570373535
    10. '```' → logprob: -14.875420570373535

Token 845: ' enemy' (ID: 20935)
  Prédit: 'enemy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enemy' → logprob: -0.20675525069236755
    2. ' enemy' → logprob: -2.2067551612854004
    3. 'dataset' → logprob: -2.7067551612854004
    4. 'grid' → logprob: -5.2067551612854
    5. ' dataset' → logprob: -5.8317551612854
    6. '       ' → logprob: -7.4567551612854
    7. 'data' → logprob: -7.8317551612854
    8. '   ' → logprob: -8.081755638122559
    9. ' grid' → logprob: -8.831755638122559
    10. 'eg' → logprob: -10.581755638122559

Token 846: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.00017433916218578815
    2. ' in' → logprob: -8.875174522399902
    3. 'grid' → logprob: -10.750174522399902
    4. '_' → logprob: -11.625174522399902
    5. 's' → logprob: -13.250174522399902
    6. 'Grid' → logprob: -14.250174522399902
    7. '   ' → logprob: -15.000174522399902
    8. '
' → logprob: -15.250174522399902
    9. '_gr' → logprob: -15.750174522399902
    10. '=' → logprob: -15.750174522399902

Token 847: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011705794604495168
    2. 'in' → logprob: -6.751170635223389
    3. ' ' → logprob: -16.376171112060547
    4. '       ' → logprob: -16.876171112060547
    5. '   ' → logprob: -17.126171112060547
    6. 'self' → logprob: -17.126171112060547
    7. 's' → logprob: -17.251171112060547
    8. '
' → logprob: -17.501171112060547
    9. '        ' → logprob: -17.501171112060547
    10. '    ' → logprob: -17.751171112060547

Token 848: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022595763206482
    2. ' self' → logprob: -1.9102259874343872
    3. '       ' → logprob: -13.410225868225098
    4. '(self' → logprob: -15.160225868225098
    5. '	self' → logprob: -17.285226821899414
    6. '
' → logprob: -17.785226821899414
    7. '           ' → logprob: -17.785226821899414
    8. '   ' → logprob: -18.285226821899414
    9. '[self' → logprob: -18.285226821899414
    10. '=self' → logprob: -19.410226821899414

Token 849: '.input' (ID: 18322)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3071877956390381
    2. '.input' → logprob: -1.432187795639038
    3. 'input' → logprob: -3.682187795639038
    4. ' self' → logprob: -7.682188034057617
    5. '.self' → logprob: -10.057188034057617
    6. ' input' → logprob: -11.557188034057617
    7. '.enemy' → logprob: -12.307188034057617
    8. '.' → logprob: -12.557188034057617
    9. '
' → logprob: -12.932188034057617
    10. ' .' → logprob: -13.182188034057617

Token 850: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -0.010735808871686459
    2. 's' → logprob: -5.010735988616943
    3. '_grid' → logprob: -5.885735988616943
    4. 'gr' → logprob: -7.760735988616943
    5. 'parser' → logprob: -8.010735511779785
    6. '_gr' → logprob: -9.635735511779785
    7. 'grid' → logprob: -9.635735511779785
    8. '.enemy' → logprob: -9.760735511779785
    9. 'Parser' → logprob: -10.135735511779785
    10. '._' → logprob: -10.135735511779785

Token 851: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -3.47626737493556e-05
    2. '.results' → logprob: -10.62503433227539
    3. '.enemy' → logprob: -12.50003433227539
    4. 'datasets' → logprob: -12.75003433227539
    5. ' .' → logprob: -13.25003433227539
    6. '.dataset' → logprob: -14.25003433227539
    7. '.datas' → logprob: -14.50003433227539
    8. '.' → logprob: -14.62503433227539
    9. '._' → logprob: -15.87503433227539
    10. '.en' → logprob: -17.00003433227539

Token 852: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4351215958595276
    2. ':' → logprob: -1.0601215362548828
    3. '           ' → logprob: -5.185121536254883
    4. ',' → logprob: -8.560121536254883
    5. '):
' → logprob: -8.685121536254883
    6. '       ' → logprob: -8.810121536254883
    7. '<|end|>' → logprob: -8.935121536254883
    8. '():
' → logprob: -9.685121536254883
    9. '<|end|>' → logprob: -10.560121536254883
    10. ':

' → logprob: -11.185121536254883

Token 853: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4617256056226324e-05
    2. 'self' → logprob: -11.375014305114746
    3. '               ' → logprob: -14.250014305114746
    4. '
' → logprob: -14.625014305114746
    5. '```' → logprob: -15.250014305114746
    6. 's' → logprob: -15.375014305114746
    7. '	       ' → logprob: -15.500014305114746
    8. ' self' → logprob: -15.500014305114746
    9. '       ' → logprob: -15.500014305114746
    10. '#' → logprob: -16.250015258789062

Token 854: ' spell' (ID: 29176)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30622079968452454
    2. 'spell' (adapté à ' spell') → logprob: -2.181220769882202
    3. 'caster' → logprob: -2.806220769882202
    4. ' caster' → logprob: -2.806220769882202
    5. '       ' → logprob: -3.931220769882202
    6. 'solver' → logprob: -5.431221008300781
    7. ' spell' → logprob: -5.556221008300781
    8. 'sp' → logprob: -6.556221008300781
    9. 'sc' → logprob: -7.931221008300781
    10. '               ' → logprob: -9.431221008300781

Token 855: '_c' (ID: 1303)
  Prédit: 'caster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'caster' → logprob: -0.40845948457717896
    2. '_c' → logprob: -1.4084594249725342
    3. '           ' → logprob: -3.158459424972534
    4. ' =' → logprob: -3.158459424972534
    5. ' caster' → logprob: -6.283459663391113
    6. '=' → logprob: -6.283459663391113
    7. '_cast' → logprob: -6.658459663391113
    8. '_solver' → logprob: -8.408459663391113
    9. 'Caster' → logprob: -8.533459663391113
    10. '   ' → logprob: -9.033459663391113

Token 856: 'aster' (ID: 3588)
  Prédit: 'aster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aster' → logprob: -4.429896944202483e-05
    2. 'caster' → logprob: -11.500043869018555
    3. '_' → logprob: -11.625043869018555
    4. 'a' → logprob: -11.875043869018555
    5. 'acter' → logprob: -12.125043869018555
    6. '
' → logprob: -13.375043869018555
    7. 'ast' → logprob: -13.500043869018555
    8. '#' → logprob: -13.875043869018555
    9. 'ster' → logprob: -14.250043869018555
    10. '

' → logprob: -14.250043869018555

Token 857: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020699352025986
    2. '=' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.725207328796387
    4. ' ' → logprob: -16.85020637512207
    5. '           ' → logprob: -16.97520637512207
    6. '＝' → logprob: -17.35020637512207
    7. '.' → logprob: -17.47520637512207
    8. '    ' → logprob: -17.60020637512207
    9. '  ' → logprob: -17.85020637512207
    10. '       ' → logprob: -18.47520637512207

Token 858: ' Spell' (ID: 69108)
  Prédit: 'Spell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Spell' → logprob: -0.02325037121772766
    2. ' Spell' → logprob: -3.7732503414154053
    3. '           ' → logprob: -12.273250579833984
    4. ' spell' → logprob: -17.023250579833984
    5. 'spell' → logprob: -17.523250579833984
    6. 'Spam' → logprob: -17.648250579833984
    7. '   ' → logprob: -17.898250579833984
    8. 'SPELL' → logprob: -18.023250579833984
    9. 'Sp' → logprob: -18.273250579833984
    10. '       ' → logprob: -18.273250579833984

Token 859: 'Caster' (ID: 185964)
  Prédit: 'Caster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Caster' → logprob: -6.704273118884885e-07
    2. 'Cast' → logprob: -14.625000953674316
    3. 'caster' → logprob: -17.25
    4. 'Cas' → logprob: -18.0
    5. ' caster' → logprob: -18.625
    6. 'Casting' → logprob: -19.25
    7. 'Spell' → logprob: -19.375
    8. 'CAST' → logprob: -20.125
    9. '_C' → logprob: -20.375
    10. 'Coder' → logprob: -20.375

Token 860: '(enemy' (ID: 133101)
  Prédit: '(enemy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(enemy' → logprob: -0.003189478302374482
    2. 'enemy' → logprob: -5.753189563751221
    3. ' enemy' → logprob: -11.503189086914062
    4. '           ' → logprob: -14.253189086914062
    5. 'Enemy' → logprob: -15.003189086914062
    6. '(en' → logprob: -15.128189086914062
    7. '(' → logprob: -15.378189086914062
    8. '.enemy' → logprob: -15.878189086914062
    9. 'en' → logprob: -17.253189086914062
    10. '_enemy' → logprob: -18.128189086914062

Token 861: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.0016475648153573275
    2. 'grid' → logprob: -6.626647472381592
    3. 'enemy' → logprob: -8.87664794921875
    4. 'Grid' → logprob: -9.87664794921875
    5. '       ' → logprob: -10.25164794921875
    6. '(enemy' → logprob: -10.37664794921875
    7. '_cast' → logprob: -11.75164794921875
    8. 'caster' → logprob: -11.75164794921875
    9. '   ' → logprob: -12.12664794921875
    10. ')' → logprob: -12.12664794921875

Token 862: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06262136250734329
    2. ')' → logprob: -3.4376213550567627
    3. '           ' → logprob: -3.5626213550567627
    4. ')
' → logprob: -8.812621116638184
    5. '       ' → logprob: -10.312621116638184
    6. ').' → logprob: -12.187621116638184
    7. '               ' → logprob: -12.312621116638184
    8. '         ' → logprob: -14.062621116638184
    9. '          ' → logprob: -14.062621116638184
    10. '   ' → logprob: -14.437621116638184

Token 863: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011152047663927078
    2. 'result' → logprob: -4.511152267456055
    3. 'self' → logprob: -10.511152267456055
    4. 'solution' → logprob: -10.886152267456055
    5. 'output' → logprob: -11.136152267456055
    6. 'results' → logprob: -11.261152267456055
    7. 'answer' → logprob: -11.386152267456055
    8. 'res' → logprob: -12.011152267456055
    9. ' result' → logprob: -12.136152267456055
    10. '```' → logprob: -13.136152267456055

Token 864: ' shortest' (ID: 70564)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.30840668082237244
    2. 'solution' → logprob: -1.5584067106246948
    3. 'self' → logprob: -3.3084065914154053
    4. '           ' → logprob: -4.683406829833984
    5. 'answer' → logprob: -5.433406829833984
    6. 'res' → logprob: -5.433406829833984
    7. 'ans' → logprob: -8.558406829833984
    8. ' solution' → logprob: -10.058406829833984
    9. ' result' → logprob: -10.308406829833984
    10. 'output' → logprob: -11.058406829833984

Token 865: '_spell' (ID: 186925)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.015186312608420849
    2. '_solution' → logprob: -4.265186309814453
    3. '_spell' → logprob: -8.140186309814453
    4. '_sequence' → logprob: -8.390186309814453
    5. '_action' → logprob: -8.640186309814453
    6. 'path' → logprob: -9.015186309814453
    7. '_move' → logprob: -10.015186309814453
    8. '_code' → logprob: -10.390186309814453
    9. '_paths' → logprob: -10.640186309814453
    10. '_' → logprob: -10.640186309814453

Token 866: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010060152038931847
    2. '=' → logprob: -5.1350603103637695
    3. '_sequence' → logprob: -5.6350603103637695
    4. 's' → logprob: -7.8850603103637695
    5. '   ' → logprob: -9.38506031036377
    6. '_chain' → logprob: -10.26006031036377
    7. '_string' → logprob: -10.63506031036377
    8. '_code' → logprob: -11.51006031036377
    9. '_path' → logprob: -12.76006031036377
    10. '_str' → logprob: -12.88506031036377

Token 867: ' spell' (ID: 29176)
  Prédit: 'spell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spell' → logprob: -0.3868769407272339
    2. ' spell' → logprob: -1.1368769407272339
    3. '           ' → logprob: -12.261877059936523
    4. 'sp' → logprob: -14.636877059936523
    5. '_spell' → logprob: -15.011877059936523
    6. 'Spell' → logprob: -16.261877059936523
    7. '            ' → logprob: -16.386877059936523
    8. 'span' → logprob: -16.761877059936523
    9. '               ' → logprob: -17.011877059936523
    10. 'spam' → logprob: -17.636877059936523

Token 868: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.128163257315464e-07
    2. 'caster' → logprob: -15.75
    3. '_cast' → logprob: -17.25
    4. 'short' → logprob: -18.125
    5. 'Caster' → logprob: -18.125
    6. '_short' → logprob: -20.0
    7. ' caster' → logprob: -20.5
    8. '_' → logprob: -20.5
    9. 's' → logprob: -20.875
    10. '   ' → logprob: -21.875

Token 869: 'aster' (ID: 3588)
  Prédit: 'aster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aster' → logprob: -0.00031055594445206225
    2. 'ast' → logprob: -8.250310897827148
    3. 'ster' → logprob: -11.625310897827148
    4. '_cast' → logprob: -12.125310897827148
    5. 'caster' → logprob: -12.250310897827148
    6. 'ater' → logprob: -12.250310897827148
    7. 'a' → logprob: -12.750310897827148
    8. '_' → logprob: -13.000310897827148
    9. '
' → logprob: -13.250310897827148
    10. 'aste' → logprob: -13.250310897827148

Token 870: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.00015908108616713434
    2. 'solve' → logprob: -8.75015926361084
    3. '.' → logprob: -14.62515926361084
    4. ' .' → logprob: -16.375158309936523
    5. '.run' → logprob: -18.375158309936523
    6. '.sol' → logprob: -18.375158309936523
    7. '   ' → logprob: -18.875158309936523
    8. '.s' → logprob: -19.250158309936523
    9. ' solve' → logprob: -20.250158309936523
    10. '       ' → logprob: -20.500158309936523

Token 871: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009162812493741512
    2. '()
' → logprob: -4.759162902832031
    3. '()' → logprob: -7.884162902832031
    4. '
' → logprob: -8.759162902832031
    5. '()
' → logprob: -12.759162902832031
    6. '		' → logprob: -13.009162902832031
    7. 'print' → logprob: -13.384162902832031
    8. '            
' → logprob: -13.634162902832031
    9. '(' → logprob: -13.884162902832031
    10. '               ' → logprob: -14.134162902832031

Token 872: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.7697225252486533e-06
    2. '       ' → logprob: -13.250003814697266
    3. 'self' → logprob: -14.000003814697266
    4. '               ' → logprob: -14.125003814697266
    5. '		' → logprob: -16.125003814697266
    6. '<|end|>' → logprob: -16.500003814697266
    7. '```' → logprob: -16.750003814697266
    8. '   ' → logprob: -17.250003814697266
    9. '                   ' → logprob: -17.375003814697266
    10. 'print' → logprob: -17.750003814697266

Token 873: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25194019079208374
    2. 'self' (adapté à ' self') → logprob: -1.5019402503967285
    3. ' self' → logprob: -11.50193977355957
    4. '   ' → logprob: -14.50193977355957
    5. '       ' → logprob: -15.12693977355957
    6. 'if' → logprob: -15.75193977355957
    7. '		' → logprob: -16.62693977355957
    8. '               ' → logprob: -17.25193977355957
    9. '	self' → logprob: -17.50193977355957
    10. '          ' → logprob: -19.37693977355957

Token 874: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.0005587508203461766
    2. 'results' → logprob: -7.500558853149414
    3. '.' → logprob: -12.250558853149414
    4. ' results' → logprob: -14.750558853149414
    5. '	results' → logprob: -15.000558853149414
    6. ' .' → logprob: -16.500558853149414
    7. '   ' → logprob: -17.000558853149414
    8. '
' → logprob: -17.750558853149414
    9. '.result' → logprob: -18.250558853149414
    10. '           ' → logprob: -18.250558853149414

Token 875: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.87500286102295
    3. '.extend' → logprob: -13.87500286102295
    4. '.app' → logprob: -14.75000286102295
    5. 'append' → logprob: -16.125001907348633
    6. '.ap' → logprob: -17.625001907348633
    7. '_append' → logprob: -19.250001907348633
    8. '.add' → logprob: -19.375001907348633
    9. ' .' → logprob: -19.750001907348633
    10. '.Append' → logprob: -19.875001907348633

Token 876: '(short' (ID: 78511)
  Prédit: '(short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(short' → logprob: -1.0206720617134124e-05
    2. 'short' → logprob: -11.50001049041748
    3. '(' → logprob: -19.375009536743164
    4. '(
' → logprob: -20.750009536743164
    5. '_short' → logprob: -20.875009536743164
    6. '(sh' → logprob: -22.000009536743164
    7. '	short' → logprob: -22.125009536743164
    8. ' short' → logprob: -22.250009536743164
    9. 'Shortest' → logprob: -22.375009536743164
    10. ' shortest' → logprob: -22.375009536743164

Token 877: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: 0.0
    2. 'st' → logprob: -19.375
    3. 'test' → logprob: -19.375
    4. '_est' → logprob: -20.125
    5. 't' → logprob: -20.75
    6. '(est' → logprob: -21.375
    7. '(short' → logprob: -21.875
    8. 'uest' → logprob: -22.125
    9. 'ест' → logprob: -22.625
    10. 'iest' → logprob: -22.75

Token 878: '_spell' (ID: 186925)
  Prédit: '_spell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spell' → logprob: -1.1041145626222715e-05
    2. '_' → logprob: -11.875011444091797
    3. 'spell' → logprob: -13.875011444091797
    4. '_sp' → logprob: -14.125011444091797
    5. 's' → logprob: -14.125011444091797
    6. '_s' → logprob: -14.625011444091797
    7. '_
' → logprob: -15.625011444091797
    8. 'ed' → logprob: -15.750011444091797
    9. 'Spell' → logprob: -16.000011444091797
    10. '```' → logprob: -16.125011444091797

Token 879: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1360056847333908
    2. '
' → logprob: -2.6360056400299072
    3. '<|end|>' → logprob: -3.7610056400299072
    4. ')
' → logprob: -4.261005878448486
    5. '       ' → logprob: -4.636005878448486
    6. '           ' → logprob: -5.011005878448486
    7. '()' → logprob: -7.261005878448486
    8. '<|end|>' → logprob: -8.386005401611328
    9. '()
' → logprob: -9.386005401611328
    10. '   ' → logprob: -9.386005401611328

Token 880: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32207217812538147
    2. '       ' → logprob: -1.322072148323059
    3. '   ' → logprob: -4.9470720291137695
    4. 'def' → logprob: -6.8220720291137695
    5. '<|end|>' → logprob: -7.6970720291137695
    6. ' def' → logprob: -10.32207202911377
    7. '           ' → logprob: -10.94707202911377
    8. '
' → logprob: -11.07207202911377
    9. '```' → logprob: -11.07207202911377
    10. ' ' → logprob: -11.57207202911377

Token 881: ' output' (ID: 4733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19566377997398376
    2. '
' → logprob: -2.4456636905670166
    3. '   ' → logprob: -3.1956636905670166
    4. 'self' → logprob: -3.5706636905670166
    5. 'def' → logprob: -4.320663928985596
    6. 'Output' → logprob: -4.945663928985596
    7. 'output' (adapté à ' output') → logprob: -6.820663928985596
    8. ' self' → logprob: -8.820663452148438
    9. '```' → logprob: -9.570663452148438
    10. '
' → logprob: -9.945663452148438

Token 882: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -6.182190554682165e-05
    2. 'Handler' → logprob: -9.875061988830566
    3. ' =' → logprob: -12.250061988830566
    4. '=' → logprob: -13.250061988830566
    5. '_Handler' → logprob: -13.625061988830566
    6. 'handler' → logprob: -14.250061988830566
    7. '_handle' → logprob: -14.625061988830566
    8. '   ' → logprob: -15.000061988830566
    9. '_writer' → logprob: -15.125061988830566
    10. '=_' → logprob: -15.250061988830566

Token 883: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1434268057346344
    2. '=' → logprob: -2.0184268951416016
    3. '.print' → logprob: -7.268426895141602
    4. '.' → logprob: -10.768426895141602
    5. '.Output' → logprob: -11.518426895141602
    6. '.Handler' → logprob: -12.268426895141602
    7. '(' → logprob: -12.393426895141602
    8. '   ' → logprob: -12.643426895141602
    9. '.output' → logprob: -13.143426895141602
    10. ' ' → logprob: -13.393426895141602

Token 884: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.00033546582562848926
    2. ' Output' → logprob: -8.000335693359375
    3. '	Output' → logprob: -21.375335693359375
    4. '       ' → logprob: -22.500335693359375
    5. '(Output' → logprob: -23.125335693359375
    6. '_Output' → logprob: -23.375335693359375
    7. '   ' → logprob: -23.500335693359375
    8. ' output' → logprob: -24.500335693359375
    9. 'output' → logprob: -24.750335693359375
    10. '_output' → logprob: -24.750335693359375

Token 885: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: 0.0
    2. 'Handle' → logprob: -20.375
    3. 'handler' → logprob: -20.5
    4. 'Output' → logprob: -20.625
    5. '_Handler' → logprob: -20.625
    6. 'Handlers' → logprob: -21.375
    7. 'Hand' → logprob: -22.5
    8. ' Handler' → logprob: -22.5
    9. '_handler' → logprob: -22.5
    10. 'Helper' → logprob: -24.25

Token 886: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. 'self' → logprob: -17.125
    4. '(
' → logprob: -17.25
    5. '       ' → logprob: -17.375
    6. '(output' → logprob: -17.5
    7. ' (' → logprob: -17.625
    8. '[self' → logprob: -19.625
    9. '=self' → logprob: -20.625
    10. '   ' → logprob: -21.0

Token 887: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -1.1756367712223437e-05
    2. 'results' → logprob: -11.875011444091797
    3. '.' → logprob: -12.875011444091797
    4. 'self' → logprob: -14.000011444091797
    5. ',' → logprob: -14.375011444091797
    6. '.self' → logprob: -14.875011444091797
    7. ' .' → logprob: -16.000011444091797
    8. '.result' → logprob: -16.375011444091797
    9. '(results' → logprob: -16.500011444091797
    10. ' results' → logprob: -17.250011444091797

Token 888: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16611745953559875
    2. ')' → logprob: -1.9161174297332764
    3. '       ' → logprob: -5.2911176681518555
    4. '(output' → logprob: -7.6661176681518555
    5. '   ' → logprob: -8.541117668151855
    6. '()
' → logprob: -9.166117668151855
    7. ')
' → logprob: -11.041117668151855
    8. '()' → logprob: -11.166117668151855
    9. 'output' → logprob: -11.791117668151855
    10. '           ' → logprob: -12.291117668151855

Token 889: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053269561380147934
    2. '.output' → logprob: -3.678269624710083
    3. '
' → logprob: -4.178269386291504
    4. 'output' → logprob: -4.678269386291504
    5. '   ' → logprob: -6.428269386291504
    6. '	output' → logprob: -9.553269386291504
    7. '(output' → logprob: -10.053269386291504
    8. '           ' → logprob: -10.303269386291504
    9. '.' → logprob: -10.428269386291504
    10. '
' → logprob: -10.553269386291504

Token 890: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.0003196154139004648
    2. '       ' → logprob: -8.250319480895996
    3. ' output' → logprob: -9.750319480895996
    4. '	output' → logprob: -16.750320434570312
    5. '.output' → logprob: -17.750320434570312
    6. '   ' → logprob: -18.500320434570312
    7. '(output' → logprob: -18.500320434570312
    8. '_output' → logprob: -19.375320434570312
    9. '$output' → logprob: -19.750320434570312
    10. 'input' → logprob: -21.625320434570312

Token 891: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -2.45848218582978e-06
    2. '_hand' → logprob: -14.00000286102295
    3. '._' → logprob: -14.50000286102295
    4. '_handle' → logprob: -15.50000286102295
    5. '_Handler' → logprob: -15.50000286102295
    6. '_' → logprob: -15.75000286102295
    7. '_controller' → logprob: -16.375001907348633
    8. '_handlers' → logprob: -16.375001907348633
    9. '_HANDLER' → logprob: -16.750001907348633
    10. 'Handler' → logprob: -17.000001907348633

Token 892: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -6.704273118884885e-07
    2. 'print' → logprob: -15.000000953674316
    3. '.' → logprob: -15.375000953674316
    4. '.println' → logprob: -17.5
    5. '   ' → logprob: -17.875
    6. ' .' → logprob: -18.625
    7. '.run' → logprob: -20.0
    8. '#print' → logprob: -20.125
    9. '.pr' → logprob: -20.25
    10. '.Print' → logprob: -20.75

Token 893: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.00014180023572407663
    2. '()' → logprob: -8.875142097473145
    3. '_' → logprob: -13.500142097473145
    4. '()
' → logprob: -15.750142097473145
    5. 'Results' → logprob: -15.750142097473145
    6. '_RESULTS' → logprob: -16.125141143798828
    7. 'results' → logprob: -17.000141143798828
    8. '__' → logprob: -17.375141143798828
    9. '_result' → logprob: -17.875141143798828
    10. '_res' → logprob: -17.875141143798828

Token 894: '()


' (ID: 29771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28387922048568726
    2. '
' → logprob: -1.908879280090332
    3. '<|end|>' → logprob: -2.908879280090332
    4. '

' → logprob: -3.658879280090332
    5. '()

' → logprob: -4.908879280090332
    6. '()' → logprob: -5.658879280090332
    7. '<|end|>' → logprob: -6.158879280090332
    8. 'def' → logprob: -6.533879280090332
    9. '```' → logprob: -6.533879280090332
    10. '()
' → logprob: -6.908879280090332

Token 895: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001502636878285557
    2. 'M' → logprob: -9.375150680541992
    3. 'solver' → logprob: -10.375150680541992
    4. ' if' → logprob: -10.875150680541992
    5. 'def' → logprob: -11.750150680541992
    6. '```' → logprob: -12.375150680541992
    7. 'm' → logprob: -13.500150680541992
    8. '#' → logprob: -13.500150680541992
    9. 'Solver' → logprob: -16.625150680541992
    10. 'sol' → logprob: -17.000150680541992

Token 896: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2014353722333908
    2. '__' → logprob: -1.7014353275299072
    3. 'name' → logprob: -11.076435089111328
    4. '_name' → logprob: -12.701435089111328
    5. ' ' → logprob: -12.951435089111328
    6. '___' → logprob: -14.951435089111328
    7. 'Name' → logprob: -15.076435089111328
    8. '_' → logprob: -15.826435089111328
    9. '/__' → logprob: -15.951435089111328
    10. ' ' → logprob: -16.576435089111328

Token 897: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.33139440417289734
    2. ' __' → logprob: -1.4563944339752197
    3. 'name' → logprob: -3.0813944339752197
    4. ' ==' → logprob: -6.081394195556641
    5. 'if' → logprob: -8.08139419555664
    6. '_name' → logprob: -8.70639419555664
    7. '==' → logprob: -9.45639419555664
    8. '_' → logprob: -10.08139419555664
    9. '.__' → logprob: -10.33139419555664
    10. 'main' → logprob: -10.58139419555664

Token 898: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3663626305060461e-05
    2. '==' → logprob: -11.50001335144043
    3. '__.__' → logprob: -12.87501335144043
    4. '=="' → logprob: -15.12501335144043
    5. '____' → logprob: -15.50001335144043
    6. ' ==' → logprob: -15.62501335144043
    7. '___' → logprob: -16.62501335144043
    8. '_' → logprob: -17.00001335144043
    9. '__.' → logprob: -17.25001335144043
    10. 'name' → logprob: -17.50001335144043

Token 899: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02968360111117363
    2. '==' → logprob: -3.9046835899353027
    3. '=="' → logprob: -4.904683589935303
    4. ' ==' → logprob: -6.404683589935303
    5. '=='' → logprob: -10.779684066772461
    6. '__.__' → logprob: -12.529684066772461
    7. '_' → logprob: -12.779684066772461
    8. '__":
' → logprob: -13.529684066772461
    9. '___' → logprob: -13.779684066772461
    10. '=' → logprob: -14.029684066772461

Token 900: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0007157695363275707
    2. ''' → logprob: -7.250715732574463
    3. '__' → logprob: -12.750716209411621
    4. ' "__' → logprob: -12.875716209411621
    5. '"name' → logprob: -15.750716209411621
    6. '"class' → logprob: -16.000715255737305
    7. '   ' → logprob: -16.500715255737305
    8. '"user' → logprob: -17.125715255737305
    9. '("__' → logprob: -18.125715255737305
    10. '"type' → logprob: -18.875715255737305

Token 901: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.512236498361744e-07
    2. '__' → logprob: -14.750000953674316
    3. 'name' → logprob: -16.25
    4. ' main' → logprob: -17.625
    5. '_main' → logprob: -19.875
    6. 'ma' → logprob: -20.375
    7. 'built' → logprob: -20.5
    8. '(main' → logprob: -20.625
    9. 'MAIN' → logprob: -21.0
    10. 'm' → logprob: -21.125

Token 902: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10514457523822784
    2. '__' → logprob: -2.355144500732422
    3. '__':
' → logprob: -5.355144500732422
    4. '__:' → logprob: -8.980144500732422
    5. '_' → logprob: -10.480144500732422
    6. ':' → logprob: -10.730144500732422
    7. '__
' → logprob: -11.605144500732422
    8. '():
' → logprob: -12.605144500732422
    9. ':
' → logprob: -12.730144500732422
    10. '__
' → logprob: -12.980144500732422

Token 903: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013764221221208572
    2. 'M' → logprob: -7.251376628875732
    3. ' M' → logprob: -7.376376628875732
    4. 'm' → logprob: -11.251376152038574
    5. 'import' → logprob: -11.751376152038574
    6. '   ' → logprob: -11.751376152038574
    7. '    
' → logprob: -12.501376152038574
    8. '	M' → logprob: -12.876376152038574
    9. '```' → logprob: -13.626376152038574
    10. '__' → logprob: -14.251376152038574

Token 904: ' M' (ID: 391)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.23150621354579926
    2. 'M' (adapté à ' M') → logprob: -1.6065062284469604
    3. ' solver' → logprob: -5.98150634765625
    4. 'import' → logprob: -6.60650634765625
    5. ' M' → logprob: -6.85650634765625
    6. '   ' → logprob: -7.35650634765625
    7. 'm' → logprob: -7.98150634765625
    8. 'sol' → logprob: -9.60650634765625
    9. 's' → logprob: -9.98150634765625
    10. 'solution' → logprob: -10.85650634765625

Token 905: 'yster' (ID: 42320)
  Prédit: 'yster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yster' → logprob: -0.00119296764023602
    2. 'yst' → logprob: -7.626193046569824
    3. 'y' → logprob: -8.001193046569824
    4. 'M' → logprob: -8.001193046569824
    5. 'yste' → logprob: -10.751193046569824
    6. ' M' → logprob: -12.001193046569824
    7. 'ysters' → logprob: -12.626193046569824
    8. '=M' → logprob: -14.001193046569824
    9. 'YST' → logprob: -14.251193046569824
    10. 'Y' → logprob: -14.376193046569824

Token 906: 'ious' (ID: 1595)
  Prédit: 'ious'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ious' → logprob: -0.1282447725534439
    2. 'ous' → logprob: -2.2532448768615723
    3. 'M' → logprob: -4.378244876861572
    4. 'On' → logprob: -6.253244876861572
    5. 'i' → logprob: -7.378244876861572
    6. 'on' → logprob: -10.628244400024414
    7. 'IOUS' → logprob: -10.628244400024414
    8. '```' → logprob: -10.878244400024414
    9. '   ' → logprob: -11.003244400024414
    10. 'ial' → logprob: -11.128244400024414

Token 907: 'On' (ID: 2219)
  Prédit: 'On'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'On' → logprob: 0.0
    2. 'O' → logprob: -17.625
    3. ' On' → logprob: -17.625
    4. '	On' → logprob: -17.625
    5. '_On' → logprob: -18.0
    6. 'Ons' → logprob: -19.375
    7. 'Ond' → logprob: -19.5
    8. 'Ont' → logprob: -20.0
    9. '_on' → logprob: -20.0
    10. '```' → logprob: -20.75

Token 908: 'slaught' (ID: 189081)
  Prédit: 'slaught'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slaught' → logprob: -0.13339979946613312
    2. 'sol' → logprob: -2.383399724960327
    3. 'ons' → logprob: -4.008399963378906
    4. 'On' → logprob: -4.633399963378906
    5. 's' → logprob: -6.758399963378906
    6. 'slag' → logprob: -7.258399963378906
    7. 'sl' → logprob: -7.633399963378906
    8. 'sla' → logprob: -7.633399963378906
    9. 'als' → logprob: -8.008399963378906
    10. 'M' → logprob: -8.008399963378906

Token 909: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.3856492842023727e-06
    2. 'solver' → logprob: -13.625000953674316
    3. '_solver' → logprob: -16.000001907348633
    4. ' Solver' → logprob: -17.500001907348633
    5. ' solver' → logprob: -19.375001907348633
    6. 'Solve' → logprob: -20.250001907348633
    7. 'olver' → logprob: -20.375001907348633
    8. '   ' → logprob: -21.625001907348633
    9. 'solve' → logprob: -22.250001907348633
    10. 'Sol' → logprob: -22.500001907348633

Token 910: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07899609208106995
    2. '()' → logprob: -2.578996181488037
    3. '().__' → logprob: -9.203995704650879
    4. '(' → logprob: -13.703995704650879
    5. ' ()' → logprob: -14.078995704650879
    6. '()<' → logprob: -14.453995704650879
    7. '()(' → logprob: -14.703995704650879
    8. '();' → logprob: -15.078995704650879
    9. '()>' → logprob: -15.078995704650879
    10. '().'' → logprob: -15.203995704650879

Token 911: 'run' (ID: 12935)
  Prédit: 'run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: 0.0
    2. ' run' → logprob: -21.25
    3. '	run' → logprob: -24.75
    4. '.run' → logprob: -25.125
    5. '(run' → logprob: -26.0
    6. '_run' → logprob: -27.5
    7. 'Run' → logprob: -27.75
    8. 'r' → logprob: -28.25
    9. 'ran' → logprob: -28.375
    10. '-run' → logprob: -29.0

Token 912: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 910
Tokens correctement prédits (1ère position, stricte): 427
Tokens correctement prédits (1ère position, avec adaptation): 483
Tokens correctement prédits (top 10): 817
Précision stricte (1ère position): 46.92%
Précision adaptée (1ère position): 53.08%
Précision (top 10): 89.78%
================================================================================
