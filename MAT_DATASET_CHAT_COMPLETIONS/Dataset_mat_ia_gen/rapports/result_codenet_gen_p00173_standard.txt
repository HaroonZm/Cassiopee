================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:56:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
for _ in range(9):
    name,a,b=input().split()
    a,b=int(a),int(b)
    total=a+b
    income=a*200+b*300
    print(name,total,income)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'for' (ID: 1938)
  → Token d'amorce (pas de prédiction)

Token 1: ' _' (ID: 1175)
  → Token d'amorce (pas de prédiction)

Token 2: ' in' (ID: 306)
  → Token d'amorce (pas de prédiction)

Token 3: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012972688302397728
    2. 'range' → logprob: -4.387972831726074
    3. ' ' → logprob: -7.762972831726074
    4. '  ' → logprob: -11.387972831726074
    5. ' in' → logprob: -11.512972831726074
    6. '_range' → logprob: -13.137972831726074
    7. ' _' → logprob: -13.262972831726074
    8. ' xrange' → logprob: -13.262972831726074
    9. '```' → logprob: -13.512972831726074
    10. ' for' → logprob: -13.637972831726074

Token 4: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001427538663847372
    2. ' (' → logprob: -9.375143051147461
    3. '```' → logprob: -10.250143051147461
    4. '`' → logprob: -12.250143051147461
    5. '(n' → logprob: -12.250143051147461
    6. ' ' → logprob: -13.250143051147461
    7. '(len' → logprob: -13.375143051147461
    8. '(`' → logprob: -13.625143051147461
    9. '1' → logprob: -13.750143051147461
    10. '(
' → logprob: -14.250143051147461

Token 5: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000651197915431112
    2. '1' → logprob: -8.125651359558105
    3. '5' → logprob: -8.625651359558105
    4. ')' → logprob: -9.375651359558105
    5. '0' → logprob: -9.875651359558105
    6. '100' → logprob: -10.375651359558105
    7. ' ' → logprob: -12.375651359558105
    8. 'range' → logprob: -14.000651359558105
    9. '3' → logprob: -14.125651359558105
    10. '20' → logprob: -14.625651359558105

Token 6: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5761901140213013
    2. '):' → logprob: -0.8261901140213013
    3. ':' → logprob: -8.326189994812012
    4. '[' → logprob: -13.701189994812012
    5. ')**' → logprob: -14.201189994812012
    6. '```' → logprob: -14.326189994812012
    7. '**' → logprob: -14.451189994812012
    8. '){' → logprob: -14.451189994812012
    9. ')：' → logprob: -14.451189994812012
    10. '+' → logprob: -14.576189994812012

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2544615566730499
    2. ':' → logprob: -1.6294615268707275
    3. '    ' → logprob: -5.004461765289307
    4. ''' → logprob: -5.379461765289307
    5. ' ' → logprob: -5.379461765289307
    6. '    
' → logprob: -6.129461765289307
    7. '\' → logprob: -6.129461765289307
    8. ' :' → logprob: -6.254461765289307
    9. '"' → logprob: -6.379461765289307
    10. '\n' → logprob: -6.754461765289307

Token 8: ' name' (ID: 1308)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5620022416114807
    2. '    ' → logprob: -1.312002182006836
    3. 'print' → logprob: -2.312002182006836
    4. ' ' → logprob: -3.562002182006836
    5. '       ' → logprob: -4.437002182006836
    6. '```' → logprob: -4.937002182006836
    7. '#' → logprob: -5.437002182006836
    8. '_' → logprob: -6.437002182006836
    9. '\t' → logprob: -6.687002182006836
    10. ' print' → logprob: -6.937002182006836

Token 9: ',a' (ID: 26776)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6948310732841492
    2. '[' → logprob: -1.319831132888794
    3. '_' → logprob: -1.694831132888794
    4. ')' → logprob: -3.444831132888794
    5. '.' → logprob: -5.069830894470215
    6. '=' → logprob: -5.819830894470215
    7. ']' → logprob: -6.069830894470215
    8. '[]' → logprob: -6.694830894470215
    9. ' =' → logprob: -7.194830894470215
    10. ',' → logprob: -7.319830894470215

Token 10: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7665875554084778
    2. ' =' → logprob: -1.141587495803833
    3. ',' → logprob: -1.641587495803833
    4. ',b' → logprob: -5.016587734222412
    5. ' ' → logprob: -5.141587734222412
    6. ' ,' → logprob: -5.891587734222412
    7. 's' → logprob: -6.391587734222412
    8. 'r' → logprob: -7.141587734222412
    9. '_' → logprob: -7.266587734222412
    10. 'b' → logprob: -7.391587734222412

Token 11: '=input' (ID: 87911)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18637581169605255
    2. '=' → logprob: -1.8113758563995361
    3. ',' → logprob: -5.061375617980957
    4. '[' → logprob: -9.561375617980957
    5. ' ,' → logprob: -9.561375617980957
    6. ')' → logprob: -10.061375617980957
    7. ',c' → logprob: -10.436375617980957
    8. '_' → logprob: -10.811375617980957
    9. ' ' → logprob: -12.061375617980957
    10. '  ' → logprob: -12.561375617980957

Token 12: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2189561277627945
    2. '('' → logprob: -2.343956232070923
    3. '()' → logprob: -2.718956232070923
    4. '().' → logprob: -3.968956232070923
    5. '("("' → logprob: -4.218955993652344
    6. '("' → logprob: -8.343955993652344
    7. ''' → logprob: -8.593955993652344
    8. '"' → logprob: -8.843955993652344
    9. '('.')' → logprob: -9.343955993652344
    10. ')' → logprob: -9.968955993652344

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.886803359724581e-05
    2. 'strip' → logprob: -9.500079154968262
    3. 'rstrip' → logprob: -13.000079154968262
    4. 'rs' → logprob: -14.000079154968262
    5. ' split' → logprob: -14.500079154968262
    6. 'spl' → logprob: -15.250079154968262
    7. 'replace' → logprob: -16.625078201293945
    8. '```' → logprob: -17.375078201293945
    9. '(split' → logprob: -18.375078201293945
    10. 'sp' → logprob: -18.750078201293945

Token 14: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1993100345134735
    2. '('' → logprob: -1.824310064315796
    3. '("("' → logprob: -4.324309825897217
    4. '()' → logprob: -5.199309825897217
    5. '(
' → logprob: -8.574310302734375
    6. '("' → logprob: -9.074310302734375
    7. ''' → logprob: -9.074310302734375
    8. '"' → logprob: -10.074310302734375
    9. '(

' → logprob: -10.449310302734375
    10. '(`' → logprob: -10.574310302734375

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6377384662628174
    2. '    
' → logprob: -1.8877384662628174
    3. '
' → logprob: -2.1377384662628174
    4. '<|end|>' → logprob: -2.5127384662628174
    5. '\n' → logprob: -2.5127384662628174
    6. ')' → logprob: -2.6377384662628174
    7. ',' → logprob: -2.6377384662628174
    8. ' ' → logprob: -3.1377384662628174
    9. '[' → logprob: -3.6377384662628174
    10. '  
' → logprob: -3.7627384662628174

Token 16: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.725295066833496
    2. ' ' → logprob: -1.975295066833496
    3. '   ' → logprob: -2.100295066833496
    4. ' =' → logprob: -2.100295066833496
    5. 'print' → logprob: -2.475295066833496
    6. ',' → logprob: -2.725295066833496
    7. ')' → logprob: -2.975295066833496
    8. '\n' → logprob: -3.100295066833496
    9. '<|end|>' → logprob: -3.350295066833496
    10. '    
' → logprob: -3.850295066833496

Token 17: ',b' (ID: 17568)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2392123937606812
    2. '=' → logprob: -1.3642123937606812
    3. ' ' → logprob: -1.9892123937606812
    4. '<|end|>' → logprob: -1.9892123937606812
    5. ' =' → logprob: -2.7392125129699707
    6. ')' → logprob: -2.9892125129699707
    7. ',' → logprob: -4.114212512969971
    8. '=int' → logprob: -4.239212512969971
    9. ' +=' → logprob: -4.489212512969971
    10. '.' → logprob: -5.239212512969971

Token 18: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9100614190101624
    2. ',' → logprob: -1.0350613594055176
    3. ' =' → logprob: -2.4100613594055176
    4. ')' → logprob: -2.5350613594055176
    5. '<|end|>' → logprob: -2.9100613594055176
    6. ' ' → logprob: -4.910061359405518
    7. '=int' → logprob: -5.535061359405518
    8. '<|end|>' → logprob: -6.660061359405518
    9. '+' → logprob: -6.785061359405518
    10. ' ,' → logprob: -7.035061359405518

Token 19: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0341322235763073
    2. '(a' → logprob: -3.659132242202759
    3. '('' → logprob: -5.53413200378418
    4. '()' → logprob: -6.03413200378418
    5. 'a' → logprob: -7.78413200378418
    6. ')' → logprob: -8.65913200378418
    7. ' (' → logprob: -8.90913200378418
    8. '<|end|>' → logprob: -9.15913200378418
    9. '32' → logprob: -9.28413200378418
    10. ' ' → logprob: -9.65913200378418

Token 20: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03514762595295906
    2. ',' → logprob: -3.5351476669311523
    3. ')' → logprob: -5.410147666931152
    4. '+' → logprob: -8.285147666931152
    5. ' ),' → logprob: -8.535147666931152
    6. ',),' → logprob: -8.785147666931152
    7. '),(' → logprob: -9.410147666931152
    8. ',b' → logprob: -10.035147666931152
    9. ' ,' → logprob: -10.035147666931152
    10. ' ' → logprob: -10.660147666931152

Token 21: 'int' (ID: 491)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.922563963802531e-05
    2. ' b' → logprob: -9.625079154968262
    3. 'int' → logprob: -11.250079154968262
    4. '   ' → logprob: -16.875080108642578
    5. ' ' → logprob: -17.375080108642578
    6. '  ' → logprob: -17.875080108642578
    7. ' int' → logprob: -18.125080108642578
    8. '	b' → logprob: -19.375080108642578
    9. '    ' → logprob: -20.125080108642578
    10. ')b' → logprob: -20.375080108642578

Token 22: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14590822160243988
    2. '(b' → logprob: -2.0209081172943115
    3. ')' → logprob: -6.520908355712891
    4. ' (' → logprob: -7.395908355712891
    5. '('' → logprob: -8.02090835571289
    6. '(a' → logprob: -8.52090835571289
    7. ' ' → logprob: -8.64590835571289
    8. '()' → logprob: -9.02090835571289
    9. '<|end|>' → logprob: -9.02090835571289
    10. '<|end|>' → logprob: -10.27090835571289

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ')
' → logprob: -12.875007629394531
    3. '))' → logprob: -13.250007629394531
    4. '),' → logprob: -13.875007629394531
    5. ' )' → logprob: -14.750007629394531
    6. '`)' → logprob: -14.875007629394531
    7. '')' → logprob: -14.875007629394531
    8. '   ' → logprob: -15.125007629394531
    9. ')**' → logprob: -15.625007629394531
    10. ')`' → logprob: -15.750007629394531

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.174542635679245
    2. '<|end|>' → logprob: -2.2995426654815674
    3. ' ' → logprob: -3.9245426654815674
    4. ' if' → logprob: -4.174542427062988
    5. '    
' → logprob: -5.174542427062988
    6. '\n' → logprob: -5.924542427062988
    7. '
' → logprob: -6.049542427062988
    8. '  ' → logprob: -6.424542427062988
    9. 'if' → logprob: -6.424542427062988
    10. '    ' → logprob: -6.424542427062988

Token 25: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2996279299259186
    2. ' if' → logprob: -2.0496280193328857
    3. 'if' → logprob: -3.2996280193328857
    4. ' ' → logprob: -3.4246280193328857
    5. '<|end|>' → logprob: -3.4246280193328857
    6. '+' → logprob: -5.424627780914307
    7. '    
' → logprob: -5.549627780914307
    8. '	if' → logprob: -5.674627780914307
    9. '    ' → logprob: -5.799627780914307
    10. ')' → logprob: -6.049627780914307

Token 26: '=a' (ID: 53088)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09843951463699341
    2. '+=' → logprob: -2.4734394550323486
    3. '+' → logprob: -5.223439693450928
    4. '_' → logprob: -5.973439693450928
    5. '[' → logprob: -7.098439693450928
    6. 's' → logprob: -7.973439693450928
    7. ']+=' → logprob: -9.22343921661377
    8. '=' → logprob: -9.47343921661377
    9. '+=(' → logprob: -10.72343921661377
    10. ' =' → logprob: -11.22343921661377

Token 27: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004697476513683796
    2. ' +' → logprob: -5.379697322845459
    3. '<|end|>' → logprob: -10.004697799682617
    4. '+b' → logprob: -10.879697799682617
    5. '+=' → logprob: -13.004697799682617
    6. '>' → logprob: -13.129697799682617
    7. '+r' → logprob: -13.879697799682617
    8. '<|end|>' → logprob: -14.004697799682617
    9. '+
' → logprob: -14.379697799682617
    10. '+t' → logprob: -14.629697799682617

Token 28: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8317450284957886
    2. '<|end|>' → logprob: -0.9567450284957886
    3. '\n' → logprob: -2.831745147705078
    4. '
' → logprob: -3.331745147705078
    5. '    
' → logprob: -3.706745147705078
    6. ' if' → logprob: -4.206745147705078
    7. ' ' → logprob: -4.456745147705078
    8. 'if' → logprob: -5.081745147705078
    9. '  ' → logprob: -5.331745147705078
    10. '    ' → logprob: -5.456745147705078

Token 30: ' income' (ID: 11583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.217934250831604
    2. ' if' → logprob: -2.5929341316223145
    3. 'if' → logprob: -3.3429341316223145
    4. '
' → logprob: -3.4679341316223145
    5. '<|end|>' → logprob: -4.0929341316223145
    6. 'print' → logprob: -4.3429341316223145
    7. '    
' → logprob: -4.5929341316223145
    8. ' ' → logprob: -4.9679341316223145
    9. '  ' → logprob: -6.5929341316223145
    10. '    ' → logprob: -6.8429341316223145

Token 31: '=a' (ID: 53088)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9751337170600891
    2. '+=' → logprob: -0.9751337170600891
    3. '_' → logprob: -2.2251336574554443
    4. 's' → logprob: -2.4751336574554443
    5. '[' → logprob: -3.6001336574554443
    6. '=' → logprob: -4.850133895874023
    7. '+' → logprob: -5.725133895874023
    8. '.append' → logprob: -5.850133895874023
    9. '_total' → logprob: -5.975133895874023
    10. '[s' → logprob: -6.600133895874023

Token 32: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02686876244843006
    2. '<|end|>' → logprob: -4.90186882019043
    3. '>' → logprob: -5.27686882019043
    4. ' +' → logprob: -5.40186882019043
    5. '*' → logprob: -5.52686882019043
    6. '-' → logprob: -5.90186882019043
    7. '   ' → logprob: -7.65186882019043
    8. 'if' → logprob: -7.77686882019043
    9. ' >' → logprob: -7.90186882019043
    10. ')' → logprob: -8.52686882019043

Token 33: '200' (ID: 1179)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9781030416488647
    2. 'b' → logprob: -1.7281030416488647
    3. '12' → logprob: -2.2281031608581543
    4. '10' → logprob: -2.7281031608581543
    5. '0' → logprob: -3.4781031608581543
    6. '2' → logprob: -3.7281031608581543
    7. '20' → logprob: -3.8531031608581543
    8. '3' → logprob: -4.103103160858154
    9. '500' → logprob: -4.103103160858154
    10. '50' → logprob: -4.103103160858154

Token 34: '+b' (ID: 76609)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.003956224769353867
    2. '400' → logprob: -6.503956317901611
    3. '200' → logprob: -7.753956317901611
    4. '100' → logprob: -7.878956317901611
    5. '0' → logprob: -8.128955841064453
    6. '00' → logprob: -8.253955841064453
    7. '800' → logprob: -8.503955841064453
    8. '300' → logprob: -8.628955841064453
    9. '500' → logprob: -8.753955841064453
    10. '000' → logprob: -9.253955841064453

Token 36: '300' (ID: 4095)
  Prédit: '300'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '300' → logprob: -0.500252902507782
    2. '100' → logprob: -1.3752529621124268
    3. '150' → logprob: -3.0002529621124268
    4. '50' → logprob: -4.000252723693848
    5. '500' → logprob: -4.250252723693848
    6. '400' → logprob: -4.375252723693848
    7. '250' → logprob: -4.750252723693848
    8. '3' → logprob: -4.750252723693848
    9. '200' → logprob: -5.625252723693848
    10. '180' → logprob: -5.625252723693848

Token 37: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08102716505527496
    2. '<|end|>' → logprob: -2.9560272693634033
    3. '
' → logprob: -4.081027030944824
    4. ' if' → logprob: -5.706027030944824
    5. '    
' → logprob: -6.331027030944824
    6. '	if' → logprob: -7.081027030944824
    7. 'if' → logprob: -7.081027030944824
    8. ' ' → logprob: -7.956027030944824
    9. '\n' → logprob: -8.081027030944824
    10. ')' → logprob: -8.206027030944824

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08647392690181732
    2. '<|end|>' → logprob: -3.0864739418029785
    3. '    
' → logprob: -4.5864739418029785
    4. '\n' → logprob: -4.7114739418029785
    5. 'if' → logprob: -5.3364739418029785
    6. '
' → logprob: -5.4614739418029785
    7. ' if' → logprob: -5.9614739418029785
    8. '  
' → logprob: -6.0864739418029785
    9. '  ' → logprob: -7.0864739418029785
    10. ' ' → logprob: -7.3364739418029785

Token 39: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05661699175834656
    2. ' if' → logprob: -3.806617021560669
    3. 'if' → logprob: -4.18161678314209
    4. '\n' → logprob: -4.43161678314209
    5. '<|end|>' → logprob: -6.18161678314209
    6. 'print' (adapté à ' print') → logprob: -6.30661678314209
    7. '    
' → logprob: -8.05661678314209
    8. '
' → logprob: -8.05661678314209
    9. '    ' → logprob: -8.55661678314209
    10. '	if' → logprob: -8.80661678314209

Token 40: '(name' (ID: 5587)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3166470229625702
    2. '(total' → logprob: -1.3166470527648926
    3. '(f' → logprob: -6.441647052764893
    4. '('' → logprob: -7.441647052764893
    5. '()' → logprob: -7.691647052764893
    6. '(name' → logprob: -8.066646575927734
    7. '("("' → logprob: -8.191646575927734
    8. '("' → logprob: -9.691646575927734
    9. '((' → logprob: -10.191646575927734
    10. '(sum' → logprob: -11.066646575927734

Token 41: ',total' (ID: 195794)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022501297295093536
    2. ')' → logprob: -3.897501230239868
    3. ' ,' → logprob: -7.272501468658447
    4. ',f' → logprob: -8.272500991821289
    5. ',end' → logprob: -8.397500991821289
    6. '   ' → logprob: -8.772500991821289
    7. ',)' → logprob: -8.897500991821289
    8. ',total' → logprob: -8.897500991821289
    9. ' ' → logprob: -9.147500991821289
    10. ' )' → logprob: -10.647500991821289

Token 42: ',in' (ID: 93374)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22758759558200836
    2. ',' → logprob: -1.6025875806808472
    3. ',total' → logprob: -6.852587699890137
    4. ',)' → logprob: -7.602587699890137
    5. '   ' → logprob: -8.977587699890137
    6. ',end' → logprob: -9.102587699890137
    7. '*' → logprob: -10.227587699890137
    8. '+' → logprob: -10.352587699890137
    9. ' )' → logprob: -10.352587699890137
    10. ',f' → logprob: -10.352587699890137

Token 43: 'come' (ID: 2512)
  Prédit: 'come'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'come' → logprob: -0.07082162797451019
    2. 'ome' → logprob: -2.695821523666382
    3. 'e' → logprob: -7.195821762084961
    4. ')' → logprob: -10.570821762084961
    5. 't' → logprob: -11.195821762084961
    6. '-' → logprob: -11.445821762084961
    7. ' come' → logprob: -11.570821762084961
    8. '```' → logprob: -12.070821762084961
    9. 'o' → logprob: -12.195821762084961
    10. '[' → logprob: -12.320821762084961

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '`)' → logprob: -15.250000953674316
    3. ' )' → logprob: -15.375000953674316
    4. '))' → logprob: -16.125
    5. '')' → logprob: -16.5
    6. ')`' → logprob: -16.75
    7. ')
' → logprob: -16.875
    8. '   ' → logprob: -17.75
    9. ',' → logprob: -18.5
    10. '),' → logprob: -18.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 26
Précision stricte (1ère position): 30.95%
Précision adaptée (1ère position): 30.95%
Précision (top 10): 61.90%
================================================================================
