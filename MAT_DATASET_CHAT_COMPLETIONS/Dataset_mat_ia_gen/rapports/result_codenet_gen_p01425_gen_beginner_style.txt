================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def in_obstacle(x, y, obstacles):
    for (L, B, R, T) in obstacles:
        if L <= x <= R and B <= y <= T:
            return True
    return False

def bird_position(V, angle, t):
    g = 9.8
    x = V * math.cos(angle) * t
    y = V * math.sin(angle) * t - 0.5 * g * t * t
    return x, y

def egg_can_hit_pig(V, X, Y, obstacles):
    g = 9.8
    # Try angles from 0 to pi/2 with small steps
    for deg in range(1, 90):
        angle = math.radians(deg)
        t_end = 2 * V * math.sin(angle) / g  # total flight time until y=0
        t = 0
        step = 0.01
        can_drop = True
        drop_positions = []
        while t <= t_end:
            x, y = bird_position(V, angle, t)
            if y < 0:
                break
            if in_obstacle(x, y, obstacles):
                can_drop = False
                break
            t += step
        if not can_drop:
            continue
        # If can_drop is True, try to drop egg at some time t_drop
        t = 0
        while t <= t_end:
            x_bird, y_bird = bird_position(V, angle, t)
            if y_bird < 0:
                break
            # Check if bird is inside any obstacle
            if in_obstacle(x_bird, y_bird, obstacles):
                t += step
                continue
            # Egg falls straight down from (x_bird, y_bird)
            # Check if egg hits pig at (X, Y)
            if abs(x_bird - X) > 0.01:
                t += step
                continue
            if y_bird < Y:
                t += step
                continue
            # Egg falls from y_bird to Y, check if any obstacle in between at x_bird
            hit_obstacle = False
            for (L, B, R, T) in obstacles:
                if L <= x_bird <= R:
                    if B <= Y <= T:
                        hit_obstacle = True
                        break
                    if Y <= B <= y_bird:
                        hit_obstacle = True
                        break
            if hit_obstacle:
                t += step
                continue
            # Egg can reach pig without obstacles
            return True
            t += step
    return False

def main():
    N, V, X, Y = map(int, input().split())
    obstacles = []
    for _ in range(N):
        L, B, R, T = map(int, input().split())
        obstacles.append((L, B, R, T))
    if egg_can_hit_pig(V, X, Y, obstacles):
        print("Yes")
    else:
        print("No")

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006415460375137627
    2. '\' → logprob: -8.875641822814941
    3. 'import' → logprob: -9.000641822814941
    4. '\n' → logprob: -9.000641822814941
    5. '```' → logprob: -9.250641822814941
    6. '<|end|>' → logprob: -10.750641822814941
    7. 'def' → logprob: -11.250641822814941
    8. '#' → logprob: -11.375641822814941
    9. '*' → logprob: -11.500641822814941
    10. 'a' → logprob: -11.625641822814941

Token 4: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010168137960135937
    2. ' calculate' → logprob: -5.885168075561523
    3. ' math' → logprob: -6.010168075561523
    4. ' sqrt' → logprob: -6.135168075561523
    5. ' space' → logprob: -7.385168075561523
    6. '_' → logprob: -7.385168075561523
    7. ' factorial' → logprob: -7.385168075561523
    8. ' ' → logprob: -8.885168075561523
    9. ' f' → logprob: -9.135168075561523
    10. ' square' → logprob: -9.635168075561523

Token 5: '_ob' (ID: 46416)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028073899447917938
    2. '_circle' → logprob: -4.528073787689209
    3. '_range' → logprob: -5.778073787689209
    4. '_radius' → logprob: -6.028073787689209
    5. 'e' → logprob: -6.278073787689209
    6. 'put' → logprob: -6.403073787689209
    7. 't' → logprob: -6.528073787689209
    8. '__' → logprob: -7.153073787689209
    9. '_put' → logprob: -7.153073787689209
    10. 's' → logprob: -7.153073787689209

Token 6: 'stacle' (ID: 69123)
  Prédit: 'stacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacle' → logprob: -0.2188420593738556
    2. 's' → logprob: -2.468842029571533
    3. 'ject' → logprob: -2.468842029571533
    4. 'stacles' → logprob: -4.718842029571533
    5. '_' → logprob: -5.593842029571533
    6. 'j' → logprob: -5.593842029571533
    7. 'server' → logprob: -6.093842029571533
    8. 'st' → logprob: -6.093842029571533
    9. 'stance' → logprob: -6.843842029571533
    10. 'jective' → logprob: -7.218842029571533

Token 7: '(x' (ID: 4061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5423946976661682
    2. '(' → logprob: -0.9173946976661682
    3. 's' → logprob: -4.792394638061523
    4. '_:' → logprob: -5.167394638061523
    5. '_(' → logprob: -6.542394638061523
    6. '(_' → logprob: -6.917394638061523
    7. '(s' → logprob: -7.667394638061523
    8. '_s' → logprob: -7.917394638061523
    9. '```' → logprob: -8.292394638061523
    10. '):' → logprob: -8.417394638061523

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16131691634655
    2. '):' → logprob: -2.1613168716430664
    3. ')' → logprob: -3.5363168716430664
    4. '[' → logprob: -5.536316871643066
    5. ':' → logprob: -8.536316871643066
    6. ',y' → logprob: -8.786316871643066
    7. 's' → logprob: -9.161316871643066
    8. ' ,' → logprob: -9.536316871643066
    9. ',
' → logprob: -10.161316871643066
    10. ' ' → logprob: -10.661316871643066

Token 9: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12692999839782715
    2. ' y' → logprob: -2.126929998397827
    3. ' ' → logprob: -13.751930236816406
    4. '   ' → logprob: -15.376930236816406
    5. '	y' → logprob: -15.376930236816406
    6. ',y' → logprob: -16.126930236816406
    7. '    ' → logprob: -16.376930236816406
    8. '  ' → logprob: -16.501930236816406
    9. ' ' → logprob: -16.876930236816406
    10. ',' → logprob: -17.126930236816406

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008785806596279144
    2. ')' → logprob: -4.758785724639893
    3. '):
' → logprob: -9.00878620147705
    4. ',' → logprob: -10.63378620147705
    5. ':' → logprob: -11.25878620147705
    6. ''):' → logprob: -12.63378620147705
    7. ' ):' → logprob: -12.75878620147705
    8. '   ' → logprob: -13.63378620147705
    9. ' ' → logprob: -13.63378620147705
    10. ')**' → logprob: -14.50878620147705

Token 11: ' obstacles' (ID: 46430)
  Prédit: ' radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' radius' → logprob: -1.4116854667663574
    2. 'radius' → logprob: -1.7866854667663574
    3. 'r' → logprob: -1.9116854667663574
    4. 'z' → logprob: -2.2866854667663574
    5. ' z' → logprob: -2.6616854667663574
    6. ' r' → logprob: -3.4116854667663574
    7. 'ob' → logprob: -3.5366854667663574
    8. ' obstacle' → logprob: -3.6616854667663574
    9. ' grid' → logprob: -3.7866854667663574
    10. ' obstacles' → logprob: -3.7866854667663574

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002255999017506838
    2. ')' → logprob: -6.502255916595459
    3. ',' → logprob: -8.002256393432617
    4. ' ):' → logprob: -8.627256393432617
    5. ':' → logprob: -8.877256393432617
    6. '[' → logprob: -9.877256393432617
    7. '[]):' → logprob: -11.252256393432617
    8. '):
' → logprob: -11.502256393432617
    9. '=' → logprob: -11.752256393432617
    10. '_list' → logprob: -12.877256393432617

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13104048371315002
    2. '   ' → logprob: -2.881040573120117
    3. '):' → logprob: -3.256040573120117
    4. '(' → logprob: -4.756040573120117
    5. ''' → logprob: -4.881040573120117
    6. '[' → logprob: -5.881040573120117
    7. ')' → logprob: -6.256040573120117
    8. ' ' → logprob: -6.881040573120117
    9. '```' → logprob: -6.881040573120117
    10. ' if' → logprob: -7.131040573120117

Token 14: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2157122939825058
    2. ' ' → logprob: -2.090712308883667
    3. ' for' → logprob: -3.590712308883667
    4. '    ' → logprob: -3.840712308883667
    5. ':' → logprob: -5.090712070465088
    6. ' return' → logprob: -5.965712070465088
    7. ' if' → logprob: -6.090712070465088
    8. '  ' → logprob: -6.715712070465088
    9. ' :' → logprob: -6.715712070465088
    10. ''' → logprob: -6.965712070465088

Token 15: ' (' (ID: 350)
  Prédit: ' obstacle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obstacle' → logprob: -0.18334819376468658
    2. ' (' → logprob: -3.4333481788635254
    3. 'ob' → logprob: -3.4333481788635254
    4. ' obs' → logprob: -3.5583481788635254
    5. ' ' → logprob: -3.8083481788635254
    6. ' ob' → logprob: -3.9333481788635254
    7. '(ob' → logprob: -4.683348178863525
    8. ' obst' → logprob: -4.808348178863525
    9. ' o' → logprob: -5.433348178863525
    10. ' x' → logprob: -5.683348178863525

Token 16: 'L' (ID: 43)
  Prédit: 'ox'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ox' → logprob: -0.05695914477109909
    2. ' ox' → logprob: -3.1819591522216797
    3. 'obs' → logprob: -5.18195915222168
    4. 'ob' → logprob: -5.43195915222168
    5. 'xo' → logprob: -5.93195915222168
    6. 'x' → logprob: -6.93195915222168
    7. '   ' → logprob: -9.68195915222168
    8. ' obs' → logprob: -10.05695915222168
    9. 'oxo' → logprob: -10.55695915222168
    10. 'o' → logprob: -10.68195915222168

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6937450766563416
    2. 'x' → logprob: -0.6937450766563416
    3. '_x' → logprob: -8.318744659423828
    4. ' ,' → logprob: -8.818744659423828
    5. ')' → logprob: -9.443744659423828
    6. ',x' → logprob: -10.443744659423828
    7. '1' → logprob: -11.318744659423828
    8. '_,' → logprob: -11.568744659423828
    9. ',)' → logprob: -11.568744659423828
    10. 'ength' → logprob: -11.693744659423828

Token 18: ' B' (ID: 418)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.9386678338050842
    2. 'R' → logprob: -1.8136677742004395
    3. ' W' → logprob: -2.3136677742004395
    4. 'l' → logprob: -2.8136677742004395
    5. 'x' → logprob: -3.3136677742004395
    6. ' R' → logprob: -3.3136677742004395
    7. 'H' → logprob: -3.5636677742004395
    8. ' l' → logprob: -3.8136677742004395
    9. 'U' → logprob: -3.8136677742004395
    10. 'T' → logprob: -3.9386677742004395

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013002688996493816
    2. ')' → logprob: -4.513002872467041
    3. '),' → logprob: -6.638002872467041
    4. ' ,' → logprob: -7.513002872467041
    5. 'W' → logprob: -9.763002395629883
    6. ',W' → logprob: -11.888002395629883
    7. ' )' → logprob: -12.138002395629883
    8. 'H' → logprob: -12.263002395629883
    9. '_,' → logprob: -12.763002395629883
    10. ' W' → logprob: -12.888002395629883

Token 20: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -1.3343656063079834
    2. ' W' → logprob: -1.5843656063079834
    3. ' H' → logprob: -1.9593656063079834
    4. ' T' → logprob: -2.2093656063079834
    5. ' x' → logprob: -2.9593656063079834
    6. 'R' → logprob: -3.0843656063079834
    7. 'T' → logprob: -3.3343656063079834
    8. 'H' → logprob: -3.3343656063079834
    9. 'W' → logprob: -3.5843656063079834
    10. 'x' → logprob: -3.8343656063079834

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ' ,' → logprob: -10.750027656555176
    3. ')' → logprob: -12.125027656555176
    4. ' ' → logprob: -15.875027656555176
    5. '),' → logprob: -16.125028610229492
    6. ',)' → logprob: -16.250028610229492
    7. ',
' → logprob: -16.312528610229492
    8. ',

' → logprob: -16.562528610229492
    9. '```' → logprob: -16.687528610229492
    10. ',D' → logprob: -16.812528610229492

Token 22: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.022030988708138466
    2. ' T' → logprob: -3.89703106880188
    3. ' ' → logprob: -7.522030830383301
    4. ')' → logprob: -7.772030830383301
    5. 'U' → logprob: -8.5220308303833
    6. '  ' → logprob: -9.2720308303833
    7. 'D' → logprob: -9.5220308303833
    8. 'Y' → logprob: -9.8970308303833
    9. '   ' → logprob: -10.1470308303833
    10. ' U' → logprob: -10.8970308303833

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011391390580683947
    2. ' )' → logprob: -9.625113487243652
    3. '),' → logprob: -10.625113487243652
    4. ',' → logprob: -11.000113487243652
    5. '):' → logprob: -13.250113487243652
    6. '   ' → logprob: -13.375113487243652
    7. ' in' → logprob: -13.625113487243652
    8. ' ' → logprob: -14.875113487243652
    9. ')
' → logprob: -14.875113487243652
    10. '```' → logprob: -15.125113487243652

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010152322240173817
    2. 'in' → logprob: -4.760152339935303
    3. ',' → logprob: -7.385152339935303
    4. '   ' → logprob: -8.010151863098145
    5. ')' → logprob: -8.135151863098145
    6. '    ' → logprob: -8.760151863098145
    7. ' ,' → logprob: -10.510151863098145
    8. ' ' → logprob: -10.510151863098145
    9. '<|end|>' → logprob: -10.635151863098145
    10. '  ' → logprob: -11.260151863098145

Token 25: ' obstacles' (ID: 46430)
  Prédit: ' obstacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obstacles' → logprob: -0.0008157044649124146
    2. 'ob' → logprob: -7.1258158683776855
    3. ' obstáculos' → logprob: -12.750815391540527
    4. ' ob' → logprob: -13.125815391540527
    5. '_ob' → logprob: -13.250815391540527
    6. ' obstacle' → logprob: -13.500815391540527
    7. ' obst' → logprob: -13.625815391540527
    8. '(ob' → logprob: -14.000815391540527
    9. '	ob' → logprob: -14.625815391540527
    10. ' Obst' → logprob: -15.125815391540527

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012451570364646614
    2. '):' → logprob: -10.12512493133545
    3. ':
' → logprob: -10.25012493133545
    4. '   ' → logprob: -10.37512493133545
    5. ',' → logprob: -12.37512493133545
    6. ' :' → logprob: -12.50012493133545
    7. '       ' → logprob: -12.62512493133545
    8. ':**' → logprob: -13.00012493133545
    9. '<|end|>' → logprob: -13.25012493133545
    10. ':return' → logprob: -14.00012493133545

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001367857912555337
    2. ':' → logprob: -7.751368045806885
    3. '<|end|>' → logprob: -7.751368045806885
    4. ',' → logprob: -8.251367568969727
    5. '        
' → logprob: -9.751367568969727
    6. '   ' → logprob: -9.876367568969727
    7. '    ' → logprob: -11.001367568969727
    8. '<|end|>' → logprob: -11.126367568969727
    9. '      ' → logprob: -11.251367568969727
    10. ' ' → logprob: -11.501367568969727

Token 28: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027337603271007538
    2. '<|end|>' → logprob: -4.152337551116943
    3. '           ' → logprob: -5.527337551116943
    4. ' if' → logprob: -6.027337551116943
    5. ' ' → logprob: -6.277337551116943
    6. '        ' → logprob: -6.902337551116943
    7. '   ' → logprob: -7.652337551116943
    8. '<|end|>' → logprob: -8.152338027954102
    9. 'if' (adapté à ' if') → logprob: -8.277338027954102
    10. '        
' → logprob: -8.277338027954102

Token 29: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5404175519943237
    2. ' x' → logprob: -0.9154175519943237
    3. 'x' → logprob: -4.290417671203613
    4. ' (' → logprob: -6.165417671203613
    5. '    ' → logprob: -7.665417671203613
    6. ' ' → logprob: -7.915417671203613
    7. 'L' → logprob: -8.165417671203613
    8. '   ' → logprob: -9.040417671203613
    9. '(' → logprob: -10.165417671203613
    10. '(x' → logprob: -10.915417671203613

Token 30: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31330248713493347
    2. '<=' → logprob: -1.3133025169372559
    3. ')<=' → logprob: -11.313302040100098
    4. '<|end|>' → logprob: -11.813302040100098
    5. '<' → logprob: -12.063302040100098
    6. ' <' → logprob: -12.688302040100098
    7. '[' → logprob: -13.063302040100098
    8. ']<=' → logprob: -13.063302040100098
    9. ')' → logprob: -13.188302040100098
    10. ' ' → logprob: -13.563302040100098

Token 31: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08894187211990356
    2. 'x' → logprob: -2.463941812515259
    3. ' ' → logprob: -13.08894157409668
    4. '	x' → logprob: -15.46394157409668
    5. ')x' → logprob: -16.83894157409668
    6. '<|end|>' → logprob: -16.96394157409668
    7. ' ' → logprob: -17.08894157409668
    8. '(x' → logprob: -17.46394157409668
    9. '"x' → logprob: -17.58894157409668
    10. '_x' → logprob: -18.08894157409668

Token 32: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20387253165245056
    2. ' and' → logprob: -1.828872561454773
    3. '<=' → logprob: -4.0788726806640625
    4. 'and' → logprob: -5.2038726806640625
    5. '<|end|>' → logprob: -6.7038726806640625
    6. ' ' → logprob: -9.328872680664062
    7. '<|end|>' → logprob: -9.828872680664062
    8. ' <' → logprob: -10.953872680664062
    9. '```' → logprob: -12.328872680664062
    10. ' ≤' → logprob: -12.453872680664062

Token 33: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6326294541358948
    2. ' R' → logprob: -0.7576294541358948
    3. ' ' → logprob: -10.50762939453125
    4. ' ' → logprob: -14.13262939453125
    5. '	R' → logprob: -14.75762939453125
    6. '

' → logprob: -14.75762939453125
    7. ')' → logprob: -15.19512939453125
    8. '<|end|>' → logprob: -15.50762939453125
    9. ',' → logprob: -15.63262939453125
    10. '.' → logprob: -16.00762939453125

Token 34: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00469581875950098
    2. 'and' → logprob: -5.379695892333984
    3. ' ' → logprob: -10.004695892333984
    4. '<|end|>' → logprob: -10.879695892333984
    5. '        ' → logprob: -12.254695892333984
    6. '       ' → logprob: -12.379695892333984
    7. '           ' → logprob: -14.379695892333984
    8. '	and' → logprob: -14.504695892333984
    9. '<|end|>' → logprob: -14.629695892333984
    10. ' &&' → logprob: -15.754695892333984

Token 35: ' B' (ID: 418)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.059040989726781845
    2. ' T' → logprob: -3.3090410232543945
    3. 'y' → logprob: -4.0590410232543945
    4. ' ' → logprob: -5.9340410232543945
    5. '<|end|>' → logprob: -8.059041023254395
    6. ' B' → logprob: -8.559041023254395
    7. 'T' → logprob: -9.309041023254395
    8. '    ' → logprob: -9.434041023254395
    9. ' ' → logprob: -10.059041023254395
    10. ' Y' → logprob: -10.684041023254395

Token 36: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04301438108086586
    2. '<=' → logprob: -3.1680142879486084
    3. ' ' → logprob: -11.918014526367188
    4. '<|end|>' → logprob: -11.918014526367188
    5. ' ≤' → logprob: -14.418014526367188
    6. ' ' → logprob: -14.793014526367188
    7. ' >=' → logprob: -15.543014526367188
    8. ' <=",' → logprob: -15.668014526367188
    9. ')<=' → logprob: -16.168014526367188
    10. '<|end|>' → logprob: -16.168014526367188

Token 37: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04300056770443916
    2. 'y' → logprob: -3.1680004596710205
    3. ' ' → logprob: -14.043000221252441
    4. ' ' → logprob: -15.293000221252441
    5. '	y' → logprob: -15.793000221252441
    6. '<|end|>' → logprob: -17.043001174926758
    7. ',' → logprob: -17.605501174926758
    8. ')y' → logprob: -17.668001174926758
    9. '>' → logprob: -17.980501174926758
    10. '```' → logprob: -18.168001174926758

Token 38: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03237641230225563
    2. '<=' → logprob: -3.532376527786255
    3. '<|end|>' → logprob: -6.032376289367676
    4. ' ' → logprob: -9.532376289367676
    5. '<|end|>' → logprob: -10.032376289367676
    6. ')<=' → logprob: -10.657376289367676
    7. ')' → logprob: -10.657376289367676
    8. ':' → logprob: -10.907376289367676
    9. ' and' → logprob: -11.282376289367676
    10. '```' → logprob: -12.032376289367676

Token 39: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.11292921006679535
    2. 'T' → logprob: -2.237929105758667
    3. ' ' → logprob: -9.362929344177246
    4. ' ' → logprob: -11.112929344177246
    5. '<|end|>' → logprob: -12.487929344177246
    6. '  ' → logprob: -15.175429344177246
    7. '	T' → logprob: -15.362929344177246
    8. '   ' → logprob: -15.425429344177246
    9. ' ' → logprob: -15.675429344177246
    10. ' y' → logprob: -15.800429344177246

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015052694827318192
    2. '           ' → logprob: -4.515052795410156
    3. ':return' → logprob: -6.140052795410156
    4. ' :' → logprob: -6.890052795410156
    5. ':
' → logprob: -7.265052795410156
    6. '       ' → logprob: -9.890052795410156
    7. '):' → logprob: -10.140052795410156
    8. ' return' → logprob: -12.140052795410156
    9. ':**' → logprob: -12.640052795410156
    10. ' and' → logprob: -12.640052795410156

Token 41: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006684110499918461
    2. ' return' → logprob: -5.131684303283691
    3. 'return' → logprob: -8.006684303283691
    4. '               ' → logprob: -9.006684303283691
    5. ':return' → logprob: -9.381684303283691
    6. ' :' → logprob: -9.506684303283691
    7. ' ' → logprob: -10.631684303283691
    8. ' ' → logprob: -10.756684303283691
    9. '       ' → logprob: -10.881684303283691
    10. ':' → logprob: -11.381684303283691

Token 42: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21747148036956787
    2. '               ' → logprob: -2.4674715995788574
    3. 'return' (adapté à ' return') → logprob: -2.8424715995788574
    4. '           ' → logprob: -2.9674715995788574
    5. ' ' → logprob: -7.967471599578857
    6. ' ' → logprob: -8.3424711227417
    7. '            ' → logprob: -8.9674711227417
    8. ':return' → logprob: -9.8424711227417
    9. '   ' → logprob: -10.2174711227417
    10. '```' → logprob: -10.2174711227417

Token 43: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.12692862749099731
    2. 'True' → logprob: -2.1269285678863525
    3. 'False' → logprob: -15.376928329467773
    4. ' ' → logprob: -15.751928329467773
    5. ' False' → logprob: -15.876928329467773
    6. '(True' → logprob: -16.501928329467773
    7. '1' → logprob: -17.001928329467773
    8. ' ' → logprob: -17.251928329467773
    9. '   ' → logprob: -17.751928329467773
    10. ' true' → logprob: -18.751928329467773

Token 44: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6230474710464478
    2. '       ' → logprob: -0.9980474710464478
    3. '
' → logprob: -2.748047351837158
    4. '    
' → logprob: -4.373047351837158
    5. ' return' → logprob: -6.123047351837158
    6. '\n' → logprob: -6.123047351837158
    7. '        
' → logprob: -6.123047351837158
    8. '<|end|>' → logprob: -6.123047351837158
    9. '  
' → logprob: -6.248047351837158
    10. '    ' → logprob: -6.623047351837158

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0131462337449193
    2. '
' → logprob: -5.38814640045166
    3. '       ' → logprob: -5.38814640045166
    4. 'return' → logprob: -6.01314640045166
    5. ' return' → logprob: -7.51314640045166
    6. '    
' → logprob: -7.76314640045166
    7. 'None' → logprob: -8.63814640045166
    8. '\n' → logprob: -9.38814640045166
    9. '	return' → logprob: -10.01314640045166
    10. '        
' → logprob: -10.26314640045166

Token 46: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.29791662096977234
    2. '   ' → logprob: -1.9229166507720947
    3. ' return' → logprob: -2.6729166507720947
    4. 'False' → logprob: -3.4229166507720947
    5. 'None' → logprob: -5.422916412353516
    6. '    
' → logprob: -6.547916412353516
    7. '
' → logprob: -6.672916412353516
    8. ' ' → logprob: -7.047916412353516
    9. ' False' → logprob: -7.172916412353516
    10. ' None' → logprob: -8.547916412353516

Token 47: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6931471824645996
    2. 'False' → logprob: -0.6931471824645996
    3. '(False' → logprob: -18.443147659301758
    4. ' ' → logprob: -19.693147659301758
    5. ' false' → logprob: -20.193147659301758
    6. ' ' → logprob: -20.443147659301758
    7. '_false' → logprob: -21.068147659301758
    8. '=False' → logprob: -21.318147659301758
    9. '.False' → logprob: -21.318147659301758
    10. ' None' → logprob: -21.443147659301758

Token 48: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5581048727035522
    2. 'def' → logprob: -1.6831048727035522
    3. 'x' → logprob: -2.433104991912842
    4. 'n' → logprob: -3.058104991912842
    5. '```' → logprob: -3.558104991912842
    6. '<|end|>' → logprob: -3.933104991912842
    7. 'd' → logprob: -4.308104991912842
    8. '
' → logprob: -4.433104991912842
    9. '\' → logprob: -4.808104991912842
    10. '\n' → logprob: -5.058104991912842

Token 50: ' bird' (ID: 16189)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.35374972224235535
    2. ' calculate' → logprob: -1.9787497520446777
    3. ' ' → logprob: -2.8537497520446777
    4. ' math' → logprob: -3.6037497520446777
    5. ' area' → logprob: -4.353749752044678
    6. ' compute' → logprob: -4.603749752044678
    7. ' in' → logprob: -4.728749752044678
    8. ' safe' → logprob: -5.228749752044678
    9. ' calc' → logprob: -5.478749752044678
    10. ' distance' → logprob: -5.603749752044678

Token 51: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.43633797764778137
    2. '_f' → logprob: -2.561337947845459
    3. '_path' → logprob: -2.936337947845459
    4. '(' → logprob: -3.936337947845459
    5. '_y' → logprob: -3.936337947845459
    6. '(x' → logprob: -3.936337947845459
    7. '_eye' → logprob: -3.936337947845459
    8. '_' → logprob: -4.311337947845459
    9. '_ob' → logprob: -4.436337947845459
    10. '_in' → logprob: -4.436337947845459

Token 52: '(V' (ID: 16949)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07026251405477524
    2. '(x' → logprob: -2.8202624320983887
    3. '(time' → logprob: -5.195262432098389
    4. '(s' → logprob: -7.445262432098389
    5. ' (' → logprob: -7.945262432098389
    6. '(start' → logprob: -8.070262908935547
    7. '(t' → logprob: -8.570262908935547
    8. '(p' → logprob: -8.820262908935547
    9. '(n' → logprob: -9.070262908935547
    10. '(pos' → logprob: -9.195262908935547

Token 53: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9041065573692322
    2. ',' → logprob: -1.279106616973877
    3. '0' → logprob: -1.529106616973877
    4. '_x' → logprob: -2.779106616973877
    5. '_' → logprob: -3.404106616973877
    6. ')' → logprob: -6.904106616973877
    7. 'y' → logprob: -7.529106616973877
    8. 'o' → logprob: -8.029106140136719
    9. ' ,' → logprob: -8.154106140136719
    10. '_y' → logprob: -8.154106140136719

Token 54: ' angle' (ID: 16538)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5968023538589478
    2. 't' → logprob: -1.9718023538589478
    3. ' theta' → logprob: -2.221802234649658
    4. 'theta' → logprob: -2.596802234649658
    5. ' x' → logprob: -3.846802234649658
    6. 'x' → logprob: -3.971802234649658
    7. ' angle' → logprob: -4.346802234649658
    8. 'angle' → logprob: -4.596802234649658
    9. ' y' → logprob: -4.846802234649658
    10. ' T' → logprob: -4.846802234649658

Token 55: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11975566297769547
    2. ',' → logprob: -2.244755744934082
    3. ')' → logprob: -4.994755744934082
    4. ' ):' → logprob: -9.869755744934082
    5. ' ,' → logprob: -11.244755744934082
    6. '_' → logprob: -11.494755744934082
    7. '):
' → logprob: -11.869755744934082
    8. '   ' → logprob: -12.494755744934082
    9. '_de' → logprob: -12.494755744934082
    10. '```' → logprob: -12.619755744934082

Token 56: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.19079439342021942
    2. 't' → logprob: -1.8157943487167358
    3. ' x' → logprob: -5.690794467926025
    4. 'x' → logprob: -6.315794467926025
    5. ' d' → logprob: -6.940794467926025
    6. ' g' → logprob: -7.190794467926025
    7. ' time' → logprob: -7.315794467926025
    8. ' h' → logprob: -7.565794467926025
    9. 'd' → logprob: -7.815794467926025
    10. 'h' → logprob: -7.940794467926025

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007511401199735701
    2. ')' → logprob: -7.25075101852417
    3. ',' → logprob: -10.375751495361328
    4. ' ):' → logprob: -12.125751495361328
    5. '):
' → logprob: -12.875751495361328
    6. '_' → logprob: -14.250751495361328
    7. '   ' → logprob: -14.875751495361328
    8. ':' → logprob: -15.500751495361328
    9. ')：' → logprob: -16.375751495361328
    10. '):
' → logprob: -16.500751495361328

Token 58: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6386604309082031
    2. '   ' → logprob: -1.1386604309082031
    3. '):' → logprob: -2.388660430908203
    4. ' :' → logprob: -4.138660430908203
    5. '():' → logprob: -4.263660430908203
    6. ',' → logprob: -4.513660430908203
    7. '<|end|>' → logprob: -4.638660430908203
    8. ' ):' → logprob: -5.888660430908203
    9. '(' → logprob: -7.013660430908203
    10. ')' → logprob: -7.388660430908203

Token 59: ' g' (ID: 329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0781526565551758
    2. ' g' → logprob: -1.2031526565551758
    3. ' x' → logprob: -1.4531526565551758
    4. ' return' → logprob: -2.703152656555176
    5. ' v' → logprob: -4.453152656555176
    6. 'x' → logprob: -4.453152656555176
    7. ' import' → logprob: -4.953152656555176
    8. 'import' → logprob: -5.078152656555176
    9. ' math' → logprob: -5.703152656555176
    10. 'g' (adapté à ' g') → logprob: -5.828152656555176

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062013059854507446
    2. '=' → logprob: -2.8120131492614746
    3. ' *' → logprob: -11.187012672424316
    4. ')' → logprob: -11.437012672424316
    5. ' ' → logprob: -11.562012672424316
    6. ',' → logprob: -12.312012672424316
    7. ' =)' → logprob: -13.437012672424316
    8. '*' → logprob: -13.937012672424316
    9. ' )' → logprob: -14.187012672424316
    10. ' *=' → logprob: -14.187012672424316

Token 61: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2519291639328003
    2. ' ' → logprob: -1.5019291639328003
    3. '981' → logprob: -17.251928329467773
    4. '10' → logprob: -17.376928329467773
    5. '98' → logprob: -17.376928329467773
    6. ' ' → logprob: -18.001928329467773
    7. '   ' → logprob: -18.126928329467773
    8. '  ' → logprob: -18.376928329467773
    9. '0' → logprob: -18.501928329467773
    10. 'g' → logprob: -19.001928329467773

Token 62: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '-' → logprob: -18.250003814697266
    4. '10' → logprob: -19.000003814697266
    5. '   ' → logprob: -19.000003814697266
    6. 'math' → logprob: -19.250003814697266
    7. '  ' → logprob: -20.125003814697266
    8. '```' → logprob: -20.250003814697266
    9. '98' → logprob: -20.375003814697266
    10. 'g' → logprob: -20.375003814697266

Token 63: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.512236498361744e-07
    2. ' .' → logprob: -14.750000953674316
    3. ' ' → logprob: -17.125
    4. '\.' → logprob: -17.375
    5. '.

' → logprob: -17.625
    6. '‌.' → logprob: -17.875
    7. '.​' → logprob: -18.75
    8. ',' → logprob: -19.0
    9. '.
' → logprob: -19.375
    10. 'point' → logprob: -19.5

Token 64: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.06201103702187538
    2. '81' → logprob: -2.8120110034942627
    3. '806' → logprob: -10.062010765075684
    4. '807' → logprob: -15.062010765075684
    5. '82' → logprob: -15.937010765075684
    6. 'eight' → logprob: -15.937010765075684
    7. '```' → logprob: -16.06201171875
    8. '８' → logprob: -16.93701171875
    9. '८' → logprob: -17.43701171875
    10. '۸' → logprob: -17.43701171875

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3931553065776825
    2. '<|end|>' → logprob: -1.7681553363800049
    3. '  
' → logprob: -2.893155336380005
    4. ' ' → logprob: -4.018155097961426
    5. '

' → logprob: -4.268155097961426
    6. ' 
' → logprob: -4.268155097961426
    7. '<|end|>' → logprob: -4.268155097961426
    8. '*' → logprob: -4.643155097961426
    9. ')' → logprob: -4.768155097961426
    10. '
' → logprob: -5.393155097961426

Token 66: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' x' (ID: 1215)
  Prédit: 'theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'theta' → logprob: -0.33880001306533813
    2. 'angle' → logprob: -2.0887999534606934
    3. 'x' (adapté à ' x') → logprob: -2.9637999534606934
    4. '   ' → logprob: -3.2137999534606934
    5. ' theta' → logprob: -3.4637999534606934
    6. ' angle' → logprob: -4.838799953460693
    7. 'vx' → logprob: -5.088799953460693
    8. ' rad' → logprob: -5.088799953460693
    9. 'rad' → logprob: -5.463799953460693
    10. 'v' → logprob: -5.713799953460693

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0827169269323349
    2. '=' → logprob: -2.582716941833496
    3. '0' → logprob: -5.582716941833496
    4. '_' → logprob: -10.207716941833496
    5. ',' → logprob: -11.832716941833496
    6. ' +=' → logprob: -12.707716941833496
    7. '<|end|>' → logprob: -13.582716941833496
    8. ')' → logprob: -13.832716941833496
    9. '+' → logprob: -13.957716941833496
    10. '_space' → logprob: -14.207716941833496

Token 69: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.04301996901631355
    2. ' V' → logprob: -3.168020009994507
    3. '(V' → logprob: -12.043020248413086
    4. '   ' → logprob: -12.168020248413086
    5. '	V' → logprob: -12.543020248413086
    6. '0' → logprob: -12.793020248413086
    7. ' ' → logprob: -13.293020248413086
    8. '(' → logprob: -15.168020248413086
    9. 'int' → logprob: -15.918020248413086
    10. '  ' → logprob: -15.918020248413086

Token 70: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.055168528109788895
    2. '*' → logprob: -2.930168628692627
    3. '*t' → logprob: -8.680168151855469
    4. '*cos' → logprob: -9.430168151855469
    5. ' ' → logprob: -10.930168151855469
    6. '0' → logprob: -12.430168151855469
    7. '*time' → logprob: -12.930168151855469
    8. '*object' → logprob: -13.180168151855469
    9. '*Math' → logprob: -13.555168151855469
    10. '   ' → logprob: -13.680168151855469

Token 71: ' math' (ID: 13324)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.46186789870262146
    2. ' math' → logprob: -1.0868679285049438
    3. 'math' → logprob: -3.5868678092956543
    4. 't' → logprob: -5.336867809295654
    5. '(math' → logprob: -9.586868286132812
    6. ' ' → logprob: -10.711868286132812
    7. '<|end|>' → logprob: -10.961868286132812
    8. 'cmath' → logprob: -12.336868286132812
    9. 'cos' → logprob: -12.836868286132812
    10. '  ' → logprob: -12.836868286132812

Token 72: '.cos' (ID: 44221)
  Prédit: '.cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cos' → logprob: -0.04378518834710121
    2. '.' → logprob: -3.1687850952148438
    3. 'cos' → logprob: -7.918785095214844
    4. '.sin' → logprob: -8.543785095214844
    5. '.Cos' → logprob: -9.043785095214844
    6. ' cos' → logprob: -10.168785095214844
    7. '*cos' → logprob: -10.793785095214844
    8. '.sqrt' → logprob: -11.043785095214844
    9. '.pi' → logprob: -11.668785095214844
    10. '<|end|>' → logprob: -12.293785095214844

Token 73: '(angle' (ID: 66047)
  Prédit: '(angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -0.0015629465924575925
    2. '(' → logprob: -6.75156307220459
    3. '(math' → logprob: -7.87656307220459
    4. 'angle' → logprob: -11.37656307220459
    5. ' (' → logprob: -14.00156307220459
    6. '(theta' → logprob: -14.37656307220459
    7. '(
' → logprob: -16.751562118530273
    8. '(Math' → logprob: -17.251562118530273
    9. '(

' → logprob: -17.376562118530273
    10. ' angle' → logprob: -17.501562118530273

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002670575922820717
    2. '*' → logprob: -9.500267028808594
    3. ' )' → logprob: -9.500267028808594
    4. ' *' → logprob: -9.750267028808594
    5. ')*' → logprob: -10.000267028808594
    6. '*)' → logprob: -12.625267028808594
    7. 't' → logprob: -13.000267028808594
    8. '   ' → logprob: -13.125267028808594
    9. '*t' → logprob: -13.375267028808594
    10. ')t' → logprob: -14.000267028808594

Token 75: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10298173129558563
    2. '*' → logprob: -2.3529818058013916
    3. '*t' → logprob: -5.9779815673828125
    4. '(' → logprob: -9.227981567382812
    5. ' ' → logprob: -10.227981567382812
    6. '0' → logprob: -10.852981567382812
    7. '()*' → logprob: -11.227981567382812
    8. ' t' → logprob: -11.602981567382812
    9. '   ' → logprob: -11.852981567382812
    10. ')' → logprob: -12.102981567382812

Token 76: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.026305755600333214
    2. 't' → logprob: -3.651305675506592
    3. ' ' → logprob: -12.27630615234375
    4. '<|end|>' → logprob: -15.02630615234375
    5. ' ' → logprob: -15.40130615234375
    6. '	t' → logprob: -15.90130615234375
    7. 'space' → logprob: -17.02630615234375
    8. ' space' → logprob: -17.90130615234375
    9. '_t' → logprob: -18.15130615234375
    10. ',' → logprob: -18.15130615234375

Token 77: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9457393884658813
    2. '<|end|>' → logprob: -1.3207393884658813
    3. '    
' → logprob: -2.320739269256592
    4. '   ' → logprob: -2.570739269256592
    5. '  
' → logprob: -3.070739269256592
    6. ' 
' → logprob: -3.570739269256592
    7. '*' → logprob: -4.195739269256592
    8. 'y' → logprob: -4.320739269256592
    9. '   
' → logprob: -4.320739269256592
    10. '-' → logprob: -4.570739269256592

Token 79: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.28558260202407837
    2. ' y' → logprob: -1.4105825424194336
    3. ' ' → logprob: -5.785582542419434
    4. '\n' → logprob: -7.660582542419434
    5. ' \' → logprob: -8.660582542419434
    6. '    
' → logprob: -9.160582542419434
    7. ' 
' → logprob: -9.160582542419434
    8. '    ' → logprob: -9.785582542419434
    9. '   ' → logprob: -10.035582542419434
    10. '\' → logprob: -10.160582542419434

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687145709991455
    2. '=' → logprob: -1.1368714570999146
    3. '<|end|>' → logprob: -15.511871337890625
    4. ' ' → logprob: -16.261871337890625
    5. ' ' → logprob: -17.136871337890625
    6. ' =)' → logprob: -17.261871337890625
    7. '=}' → logprob: -17.511871337890625
    8. ')' → logprob: -17.511871337890625
    9. '＝' → logprob: -17.511871337890625
    10. '.' → logprob: -18.136871337890625

Token 81: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.4741678237915039
    2. ' V' → logprob: -0.9741678237915039
    3. '(V' → logprob: -10.349167823791504
    4. ' ' → logprob: -10.849167823791504
    5. '	V' → logprob: -11.099167823791504
    6. '   ' → logprob: -11.349167823791504
    7. '  ' → logprob: -12.849167823791504
    8. ' (' → logprob: -12.974167823791504
    9. '(' → logprob: -12.974167823791504
    10. '0' → logprob: -13.599167823791504

Token 82: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029770394787192345
    2. '*' → logprob: -3.5297703742980957
    3. ' ' → logprob: -11.779770851135254
    4. '<|end|>' → logprob: -12.029770851135254
    5. ' ' → logprob: -12.779770851135254
    6. '*sin' → logprob: -13.904770851135254
    7. '   ' → logprob: -14.529770851135254
    8. '**' → logprob: -14.529770851135254
    9. '  ' → logprob: -15.279770851135254
    10. '*Math' → logprob: -15.904770851135254

Token 83: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4747604727745056
    2. ' math' → logprob: -0.9747604727745056
    3. '(math' → logprob: -7.34976053237915
    4. 'sin' → logprob: -10.974760055541992
    5. '<|end|>' → logprob: -11.599760055541992
    6. '.math' → logprob: -11.974760055541992
    7. ' ' → logprob: -13.099760055541992
    8. '_math' → logprob: -13.349760055541992
    9. 'cmath' → logprob: -13.599760055541992
    10. 's' → logprob: -13.599760055541992

Token 84: '.sin' (ID: 35734)
  Prédit: '.cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cos' → logprob: -0.4914560616016388
    2. '.sin' → logprob: -0.9914560317993164
    3. '.' → logprob: -4.116456031799316
    4. '.s' → logprob: -7.616456031799316
    5. '.sqrt' → logprob: -8.866456031799316
    6. '.pi' → logprob: -8.991456031799316
    7. '.Cos' → logprob: -10.241456031799316
    8. '.c' → logprob: -11.116456031799316
    9. 'sin' → logprob: -11.116456031799316
    10. '.py' → logprob: -11.116456031799316

Token 85: '(angle' (ID: 66047)
  Prédit: '(angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -0.005236717872321606
    2. '(' → logprob: -5.255236625671387
    3. 'angle' → logprob: -13.255236625671387
    4. ' (' → logprob: -15.130236625671387
    5. '<|end|>' → logprob: -15.380236625671387
    6. '(theta' → logprob: -15.505236625671387
    7. '(
' → logprob: -15.755236625671387
    8. '(age' → logprob: -16.630237579345703
    9. '(amount' → logprob: -16.755237579345703
    10. ' angle' → logprob: -16.880237579345703

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002079240046441555
    2. ')*' → logprob: -6.627079010009766
    3. '*' → logprob: -7.502079010009766
    4. 'angle' → logprob: -9.627079010009766
    5. '(angle' → logprob: -9.752079010009766
    6. '(' → logprob: -10.127079010009766
    7. ' )' → logprob: -11.002079010009766
    8. ' *' → logprob: -12.627079010009766
    9. '')' → logprob: -12.877079010009766
    10. '*)' → logprob: -12.877079010009766

Token 87: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3591316342353821
    2. ' *' → logprob: -1.6091315746307373
    3. '(' → logprob: -2.6091315746307373
    4. '*t' → logprob: -4.234131813049316
    5. 't' → logprob: -5.234131813049316
    6. '(t' → logprob: -6.234131813049316
    7. ''*' → logprob: -6.734131813049316
    8. ' ' → logprob: -6.984131813049316
    9. 'angle' → logprob: -7.484131813049316
    10. '`' → logprob: -7.484131813049316

Token 88: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20142397284507751
    2. ' t' → logprob: -1.7014240026474
    3. ' ' → logprob: -12.576423645019531
    4. '(' → logprob: -13.076423645019531
    5. 'angle' → logprob: -13.451423645019531
    6. ' angle' → logprob: -13.951423645019531
    7. '	t' → logprob: -14.576423645019531
    8. '(t' → logprob: -14.576423645019531
    9. ')t' → logprob: -14.701423645019531
    10. ' math' → logprob: -15.326423645019531

Token 89: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22661878168582916
    2. '-' → logprob: -1.601618766784668
    3. ' ' → logprob: -6.976618766784668
    4. '<|end|>' → logprob: -8.726618766784668
    5. ' ' → logprob: -10.351618766784668
    6. '   ' → logprob: -10.726618766784668
    7. ' -
' → logprob: -11.351618766784668
    8. ' 
' → logprob: -12.601618766784668
    9. '	' → logprob: -12.851618766784668
    10. ')' → logprob: -12.851618766784668

Token 90: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231452584266663
    2. '0' → logprob: -0.8981452584266663
    3. ' g' → logprob: -11.64814567565918
    4. ' (' → logprob: -11.89814567565918
    5. 'g' → logprob: -13.02314567565918
    6. '(' → logprob: -13.64814567565918
    7. '  ' → logprob: -13.77314567565918
    8. '1' → logprob: -14.52314567565918
    9. ' ' → logprob: -14.89814567565918
    10. '   ' → logprob: -15.14814567565918

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022248411551117897
    2. ' ' → logprob: -6.127224922180176
    3. '(' → logprob: -10.377224922180176
    4. 'g' → logprob: -13.002224922180176
    5. ' (' → logprob: -13.002224922180176
    6. '1' → logprob: -13.377224922180176
    7. '.' → logprob: -14.002224922180176
    8. '(g' → logprob: -14.502224922180176
    9. '   ' → logprob: -14.627224922180176
    10. ' g' → logprob: -15.377224922180176

Token 92: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.300083648762666e-05
    2. '.
' → logprob: -11.500053405761719
    3. ' .' → logprob: -11.875053405761719
    4. '\.' → logprob: -12.250053405761719
    5. ''.' → logprob: -12.750053405761719
    6. '**' → logprob: -12.750053405761719
    7. '"."' → logprob: -12.750053405761719
    8. '*' → logprob: -13.000053405761719
    9. '<|end|>' → logprob: -13.125053405761719
    10. '`.`' → logprob: -13.375053405761719

Token 93: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7415639162063599
    2. '98' → logprob: -0.8665639162063599
    3. '8' → logprob: -3.2415637969970703
    4. '4' → logprob: -4.24156379699707
    5. '6' → logprob: -4.24156379699707
    6. '48' → logprob: -4.49156379699707
    7. '2' → logprob: -4.74156379699707
    8. '58' → logprob: -5.24156379699707
    9. '56' → logprob: -6.86656379699707
    10. '3' → logprob: -7.24156379699707

Token 94: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.27906548976898193
    2. '*g' → logprob: -2.0290656089782715
    3. '*' → logprob: -2.2790656089782715
    4. '<|end|>' → logprob: -4.6540656089782715
    5. ' ' → logprob: -9.529065132141113
    6. 'g' → logprob: -10.529065132141113
    7. ' g' → logprob: -10.779065132141113
    8. '*object' → logprob: -11.904065132141113
    9. '*Math' → logprob: -13.029065132141113
    10. '<|end|>' → logprob: -13.154065132141113

Token 95: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.007794470991939306
    2. ' g' → logprob: -4.882794380187988
    3. '9' → logprob: -8.632794380187988
    4. '<|end|>' → logprob: -12.007794380187988
    5. ' ' → logprob: -12.632794380187988
    6. '	g' → logprob: -15.382794380187988
    7. '*g' → logprob: -15.632794380187988
    8. 'gt' → logprob: -16.382795333862305
    9. '_g' → logprob: -16.507795333862305
    10. '  ' → logprob: -16.507795333862305

Token 96: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6823011040687561
    2. '*t' → logprob: -1.1823010444641113
    3. ' *' → logprob: -1.6823010444641113
    4. 't' → logprob: -6.307301044464111
    5. ' t' → logprob: -8.55730152130127
    6. '*(' → logprob: -12.05730152130127
    7. ' ' → logprob: -12.93230152130127
    8. '*g' → logprob: -12.93230152130127
    9. '**' → logprob: -14.18230152130127
    10. '*time' → logprob: -14.93230152130127

Token 97: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018175341188907623
    2. ' t' → logprob: -4.01817512512207
    3. 'g' → logprob: -11.01817512512207
    4. ' ' → logprob: -12.26817512512207
    5. '9' → logprob: -13.89317512512207
    6. '	t' → logprob: -14.14317512512207
    7. '(t' → logprob: -14.51817512512207
    8. '<|end|>' → logprob: -14.89317512512207
    9. '*t' → logprob: -15.26817512512207
    10. '   ' → logprob: -15.39317512512207

Token 98: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.007672171574085951
    2. '*' → logprob: -5.757672309875488
    3. '*t' → logprob: -5.757672309875488
    4. '2' → logprob: -6.632672309875488
    5. '²' → logprob: -12.257672309875488
    6. '^' → logprob: -14.007672309875488
    7. '```' → logprob: -14.257672309875488
    8. '*u' → logprob: -14.507672309875488
    9. '***' → logprob: -14.882672309875488
    10. 't' → logprob: -15.132672309875488

Token 99: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.000964223057962954
    2. ' t' → logprob: -7.375964164733887
    3. '2' → logprob: -8.000964164733887
    4. ' ' → logprob: -13.375964164733887
    5. '	t' → logprob: -15.000964164733887
    6. '**' → logprob: -15.875964164733887
    7. '²' → logprob: -16.000965118408203
    8. '*t' → logprob: -16.500965118408203
    9. '<|end|>' → logprob: -16.500965118408203
    10. '_t' → logprob: -18.000965118408203

Token 100: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01189739815890789
    2. ' return' → logprob: -5.386897563934326
    3. ' ' → logprob: -6.136897563934326
    4. '<|end|>' → logprob: -6.636897563934326
    5. '	return' → logprob: -6.761897563934326
    6. '    
' → logprob: -7.011897563934326
    7. '
' → logprob: -8.011897087097168
    8. ',' → logprob: -8.261897087097168
    9. '  
' → logprob: -8.386897087097168
    10. '  ' → logprob: -8.386897087097168

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008312429301440716
    2. ' return' → logprob: -6.258312225341797
    3. '<|end|>' → logprob: -6.383312225341797
    4. ' ' → logprob: -6.508312225341797
    5. '	return' → logprob: -6.883312225341797
    6. '    
' → logprob: -6.883312225341797
    7. 'return' → logprob: -8.383312225341797
    8. '
' → logprob: -8.633312225341797
    9. '  
' → logprob: -8.633312225341797
    10. '  ' → logprob: -9.008312225341797

Token 102: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7640936970710754
    2. 'return' (adapté à ' return') → logprob: -1.2640936374664307
    3. ' return' → logprob: -1.3890936374664307
    4. ' ' → logprob: -6.38909387588501
    5. '	return' → logprob: -7.88909387588501
    6. '<|end|>' → logprob: -9.264093399047852
    7. '    
' → logprob: -9.514093399047852
    8. ' if' → logprob: -9.639093399047852
    9. '  ' → logprob: -9.889093399047852
    10. 'if' → logprob: -10.514093399047852

Token 103: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19349753856658936
    2. '(x' → logprob: -2.443497657775879
    3. ' (' → logprob: -2.693497657775879
    4. ' x' → logprob: -3.943497657775879
    5. '(' → logprob: -6.193497657775879
    6. '(int' → logprob: -12.943497657775879
    7. '(round' → logprob: -13.818497657775879
    8. '(
' → logprob: -14.818497657775879
    9. '	x' → logprob: -15.693497657775879
    10. 'int' → logprob: -15.818497657775879

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024859998375177383
    2. ' ,' → logprob: -6.252486228942871
    3. ',y' → logprob: -7.502486228942871
    4. '<|end|>' → logprob: -12.627486228942871
    5. ',
' → logprob: -13.752486228942871
    6. ' ' → logprob: -14.877486228942871
    7. 'y' → logprob: -15.377486228942871
    8. ' y' → logprob: -15.502486228942871
    9. '‌,' → logprob: -16.127485275268555
    10. ',\
' → logprob: -16.752485275268555

Token 105: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07889099419116974
    2. 'y' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.828890800476074
    4. '	y' → logprob: -14.953890800476074
    5. ' ' → logprob: -15.078890800476074
    6. '<|end|>' → logprob: -15.578890800476074
    7. '    ' → logprob: -18.70389175415039
    8. 'space' → logprob: -18.70389175415039
    9. '(y' → logprob: -18.82889175415039
    10. ',y' → logprob: -18.95389175415039

Token 106: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007278395351022482
    2. 't' → logprob: -5.7572784423828125
    3. 'angle' → logprob: -6.3822784423828125
    4. '#' → logprob: -7.0072784423828125
    5. 'd' → logprob: -8.382278442382812
    6. '```' → logprob: -8.507278442382812
    7. 'for' → logprob: -8.632278442382812
    8. 'import' → logprob: -8.632278442382812
    9. 'n' → logprob: -9.757278442382812
    10. ',' → logprob: -9.757278442382812

Token 108: ' egg' (ID: 16102)
  Prédit: ' hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hit' → logprob: -1.2318605184555054
    2. ' simulate' → logprob: -1.6068605184555054
    3. ' main' → logprob: -2.481860637664795
    4. ' projectile' → logprob: -2.481860637664795
    5. ' launch' → logprob: -2.731860637664795
    6. ' calculate' → logprob: -2.856860637664795
    7. ' trajectory' → logprob: -2.981860637664795
    8. ' bird' → logprob: -3.106860637664795
    9. ' solve' → logprob: -3.481860637664795
    10. 'simulate' → logprob: -4.231860637664795

Token 109: '_can' (ID: 71644)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.8058556914329529
    2. '_drop' → logprob: -2.0558557510375977
    3. '_l' → logprob: -2.4308557510375977
    4. 's' → logprob: -2.5558557510375977
    5. '_' → logprob: -2.6808557510375977
    6. '_f' → logprob: -3.8058557510375977
    7. '_break' → logprob: -3.8058557510375977
    8. '_throw' → logprob: -3.9308557510375977
    9. '_velocity' → logprob: -4.555855751037598
    10. '_angle' → logprob: -4.555855751037598

Token 110: '_hit' (ID: 91390)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.9959551095962524
    2. '_drop' → logprob: -1.7459551095962524
    3. '_hit' → logprob: -2.120954990386963
    4. '_break' → logprob: -2.370954990386963
    5. '_throw' → logprob: -2.870954990386963
    6. 'h' → logprob: -3.370954990386963
    7. '_h' → logprob: -3.370954990386963
    8. '_c' → logprob: -4.120954990386963
    9. '_' → logprob: -4.620954990386963
    10. '_escape' → logprob: -4.745954990386963

Token 111: '_p' (ID: 1359)
  Prédit: '(target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(target' → logprob: -1.1665093898773193
    2. '(ob' → logprob: -1.1665093898773193
    3. '_target' → logprob: -1.4165093898773193
    4. '(' → logprob: -3.1665093898773193
    5. '_ob' → logprob: -3.5415093898773193
    6. '(x' → logprob: -4.041509628295898
    7. '(b' → logprob: -4.041509628295898
    8. '(V' → logprob: -4.291509628295898
    9. 'target' → logprob: -6.041509628295898
    10. '_b' → logprob: -6.541509628295898

Token 112: 'ig' (ID: 343)
  Prédit: 'layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layer' → logprob: -0.7787110209465027
    2. 'ig' → logprob: -1.7787110805511475
    3. 'oint' → logprob: -1.7787110805511475
    4. 'os' → logprob: -2.5287110805511475
    5. 'osition' → logprob: -3.0287110805511475
    6. 'lay' → logprob: -3.5287110805511475
    7. 'ath' → logprob: -4.778710842132568
    8. 'ipe' → logprob: -4.903710842132568
    9. 'r' → logprob: -5.028710842132568
    10. 'l' → logprob: -5.153710842132568

Token 113: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.1662522405385971
    2. '(' → logprob: -2.0412521362304688
    3. '(angle' → logprob: -5.041252136230469
    4. '(x' → logprob: -5.166252136230469
    5. '(s' → logprob: -5.791252136230469
    6. '(ob' → logprob: -5.916252136230469
    7. '(target' → logprob: -6.916252136230469
    8. '(p' → logprob: -7.541252136230469
    9. '(hit' → logprob: -7.541252136230469
    10. '(t' → logprob: -7.666252136230469

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ' ,' → logprob: -12.000007629394531
    3. '‌,' → logprob: -15.500007629394531
    4. 'angle' → logprob: -15.750007629394531
    5. ',p' → logprob: -16.00000762939453
    6. ',int' → logprob: -16.12500762939453
    7. ',
' → logprob: -16.25000762939453
    8. '<|end|>' → logprob: -16.25000762939453
    9. ')' → logprob: -16.37500762939453
    10. 's' → logprob: -16.87500762939453

Token 115: ' X' (ID: 2127)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.5232905745506287
    2. 'angle' → logprob: -0.8982905745506287
    3. ' angles' → logprob: -10.148290634155273
    4. 'theta' → logprob: -10.273290634155273
    5. 'angles' → logprob: -10.398290634155273
    6. 'ang' → logprob: -11.835790634155273
    7. '(angle' → logprob: -12.023290634155273
    8. ' theta' → logprob: -12.148290634155273
    9. '_angle' → logprob: -12.210790634155273
    10. 'a' → logprob: -12.648290634155273

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00489880470559001
    2. '_p' → logprob: -5.379899024963379
    3. 'p' → logprob: -9.004899024963379
    4. '_,' → logprob: -10.004899024963379
    5. ' ,' → logprob: -10.129899024963379
    6. '_' → logprob: -10.879899024963379
    7. ',p' → logprob: -11.129899024963379
    8. '0' → logprob: -11.629899024963379
    9. 'P' → logprob: -11.879899024963379
    10. '_target' → logprob: -12.004899024963379

Token 117: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.04416758194565773
    2. ' Y' → logprob: -3.1691675186157227
    3. 'angle' → logprob: -7.169167518615723
    4. ' angle' → logprob: -9.169167518615723
    5. ' pig' → logprob: -9.419167518615723
    6. '   ' → logprob: -10.419167518615723
    7. 'pig' → logprob: -10.669167518615723
    8. ' ' → logprob: -10.919167518615723
    9. 'A' → logprob: -10.919167518615723
    10. 'theta' → logprob: -11.294167518615723

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3544423381972592e-05
    2. '):' → logprob: -11.75001335144043
    3. ' ,' → logprob: -12.37501335144043
    4. 'angle' → logprob: -14.62501335144043
    5. ',
' → logprob: -15.25001335144043
    6. '

' → logprob: -16.25001335144043
    7. ')' → logprob: -16.25001335144043
    8. '0' → logprob: -16.68751335144043
    9. '):
' → logprob: -16.75001335144043
    10. '),' → logprob: -17.12501335144043

Token 119: ' obstacles' (ID: 46430)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.714541494846344
    2. 'ob' → logprob: -0.839541494846344
    3. ' obstacles' → logprob: -3.589541435241699
    4. ' angle' → logprob: -3.839541435241699
    5. 'theta' → logprob: -4.589541435241699
    6. 'pig' → logprob: -5.214541435241699
    7. 'angles' → logprob: -5.339541435241699
    8. 'egg' → logprob: -6.589541435241699
    9. 't' → logprob: -6.964541435241699
    10. 'ang' → logprob: -7.089541435241699

Token 120: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16027428209781647
    2. '):' → logprob: -1.9102742671966553
    3. ')' → logprob: -11.035274505615234
    4. '   ' → logprob: -11.285274505615234
    5. ' ):' → logprob: -11.285274505615234
    6. ' ,' → logprob: -12.035274505615234
    7. '):
' → logprob: -13.660274505615234
    8. ':' → logprob: -15.660274505615234
    9. '),' → logprob: -15.660274505615234
    10. '    ' → logprob: -15.660274505615234

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19324277341365814
    2. ':' → logprob: -2.0682427883148193
    3. '(' → logprob: -4.19324254989624
    4. ' (' → logprob: -4.94324254989624
    5. ' :' → logprob: -5.31824254989624
    6. ',' → logprob: -5.69324254989624
    7. '<|end|>' → logprob: -5.81824254989624
    8. '    
' → logprob: -6.19324254989624
    9. '(angle' → logprob: -6.31824254989624
    10. ' 
' → logprob: -6.31824254989624

Token 122: ' g' (ID: 329)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5056703090667725
    2. 'angle' → logprob: -1.5056703090667725
    3. 'for' → logprob: -2.5056703090667725
    4. ' for' → logprob: -2.8806703090667725
    5. '   ' → logprob: -4.255670547485352
    6. ' import' → logprob: -4.755670547485352
    7. 'g' (adapté à ' g') → logprob: -5.380670547485352
    8. ' angle' → logprob: -5.380670547485352
    9. 'from' → logprob: -6.130670547485352
    10. 'steps' → logprob: -7.505670547485352

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017031522002071142
    2. '=' → logprob: -6.376703262329102
    3. ' ' → logprob: -15.126703262329102
    4. ' =
' → logprob: -15.126703262329102
    5. ',' → logprob: -16.3767032623291
    6. ' =)' → logprob: -16.5017032623291
    7. ' ' → logprob: -16.7517032623291
    8. ')' → logprob: -17.1267032623291
    9. ' *=' → logprob: -17.1267032623291
    10. 'import' → logprob: -17.2517032623291

Token 124: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4287012815475464
    2. ' ' → logprob: -1.0537012815475464
    3. ' ' → logprob: -14.553701400756836
    4. '0' → logprob: -16.991201400756836
    5. '```' → logprob: -17.241201400756836
    6. '1' → logprob: -18.116201400756836
    7. '10' → logprob: -18.178701400756836
    8. '_' → logprob: -18.616201400756836
    9. '.' → logprob: -18.928701400756836
    10. '  ' → logprob: -18.991201400756836

Token 125: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '９' → logprob: -20.25000762939453
    4. '```' → logprob: -20.62500762939453
    5. '   ' → logprob: -21.12500762939453
    6. '۹' → logprob: -21.18750762939453
    7. '  ' → logprob: -21.43750762939453
    8. '९' → logprob: -22.31250762939453
    9. 'g' → logprob: -22.31250762939453
    10. '`' → logprob: -22.37500762939453

Token 126: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.320199877838604e-07
    2. ' .' → logprob: -16.0
    3. '.
' → logprob: -16.375
    4. '<|end|>' → logprob: -16.875
    5. '‌.' → logprob: -18.625
    6. 'point' → logprob: -19.0
    7. ',' → logprob: -19.125
    8. '\.' → logprob: -19.25
    9. '0' → logprob: -19.375
    10. '.Point' → logprob: -19.5

Token 127: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -3.531315314830863e-06
    2. '6' → logprob: -12.625003814697266
    3. '```' → logprob: -17.375003814697266
    4. '۸' → logprob: -17.625003814697266
    5. '८' → logprob: -17.625003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '84' → logprob: -18.250003814697266
    8. '৮' → logprob: -18.375003814697266
    9. 'eight' → logprob: -18.562503814697266
    10. '<|end|>' → logprob: -18.812503814697266

Token 128: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9720063805580139
    2. '   ' → logprob: -1.0970063209533691
    3. ' angle' → logprob: -2.347006320953369
    4. '<|end|>' → logprob: -2.847006320953369
    5. 'angle' → logprob: -3.222006320953369
    6. 'import' → logprob: -3.347006320953369
    7. '
' → logprob: -3.597006320953369
    8. ',' → logprob: -4.847006320953369
    9. 'for' → logprob: -4.972006320953369
    10. ' angles' → logprob: -5.597006320953369

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025794368237257004
    2. 'import' → logprob: -4.775794506072998
    3. ' for' → logprob: -4.775794506072998
    4. ' angle' → logprob: -5.400794506072998
    5. 'angle' → logprob: -6.025794506072998
    6. ' import' → logprob: -7.275794506072998
    7. 'for' → logprob: -8.02579402923584
    8. '    
' → logprob: -8.40079402923584
    9. '
' → logprob: -9.27579402923584
    10. ' from' → logprob: -10.02579402923584

Token 130: ' #' (ID: 1069)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.35500597953796387
    2. 'for' → logprob: -1.7300059795379639
    3. ' for' → logprob: -2.980005979537964
    4. 'import' → logprob: -3.480005979537964
    5. 'theta' → logprob: -4.230006217956543
    6. ' angle' → logprob: -4.605006217956543
    7. 'dt' → logprob: -6.105006217956543
    8. 'steps' → logprob: -6.355006217956543
    9. 'from' → logprob: -6.480006217956543
    10. 'step' → logprob: -6.480006217956543

Token 131: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8811485767364502
    2. ' for' → logprob: -1.3811485767364502
    3. 'import' → logprob: -1.7561485767364502
    4. 'angle' → logprob: -2.25614857673645
    5. ' import' → logprob: -4.006148338317871
    6. 'from' → logprob: -4.881148338317871
    7. 'max' → logprob: -4.881148338317871
    8. ' angle' → logprob: -5.506148338317871
    9. 'steps' → logprob: -5.881148338317871
    10. 'theta' → logprob: -5.881148338317871

Token 132: ' angles' (ID: 43448)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8350874781608582
    2. ' t' → logprob: -1.460087537765503
    3. ':' → logprob: -1.585087537765503
    4. ' angles' → logprob: -3.585087537765503
    5. 'for' → logprob: -3.960087537765503
    6. 'angles' → logprob: -4.085087299346924
    7. ' for' → logprob: -4.335087299346924
    8. 'time' → logprob: -4.710087299346924
    9. ' to' → logprob: -4.960087299346924
    10. ' time' → logprob: -5.335087299346924

Token 133: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03296298533678055
    2. 'in' → logprob: -3.7829630374908447
    3. 'import' → logprob: -5.532962799072266
    4. 'from' → logprob: -6.032962799072266
    5. ' ' → logprob: -6.657962799072266
    6. ' from' → logprob: -7.532962799072266
    7. 'for' → logprob: -8.157962799072266
    8. ' for' → logprob: -8.157962799072266
    9. ' range' → logprob: -8.157962799072266
    10. ' i' → logprob: -8.282962799072266

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05228089541196823
    2. ' ' → logprob: -3.427280902862549
    3. '1' → logprob: -4.177280902862549
    4. ' math' → logprob: -6.302280902862549
    5. 'math' → logprob: -6.802280902862549
    6. '5' → logprob: -9.17728042602539
    7. '10' → logprob: -10.42728042602539
    8. '45' → logprob: -11.55228042602539
    9. '30' → logprob: -11.67728042602539
    10. '(math' → logprob: -12.05228042602539

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10352864116430283
    2. '1' → logprob: -2.3535287380218506
    3. 'math' → logprob: -6.4785284996032715
    4. ' ' → logprob: -6.6035284996032715
    5. '5' → logprob: -8.47852897644043
    6. ' math' → logprob: -9.22852897644043
    7. '10' → logprob: -9.97852897644043
    8. '```' → logprob: -10.85352897644043
    9. '15' → logprob: -11.60352897644043
    10. '45' → logprob: -11.85352897644043

Token 136: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.210302472114563
    2. '.' → logprob: -1.835302472114563
    3. ' ' → logprob: -3.9603023529052734
    4. 'to' → logprob: -4.835302352905273
    5. ',' → logprob: -6.210302352905273
    6. 'import' → logprob: -7.960302352905273
    7. ' ,' → logprob: -8.460302352905273
    8. '<|end|>' → logprob: -8.710302352905273
    9. '1' → logprob: -9.085302352905273
    10. '```' → logprob: -9.835302352905273

Token 137: ' pi' (ID: 6404)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '90' → logprob: -0.10596184432506561
    2. ' math' → logprob: -2.855961799621582
    3. 'math' → logprob: -3.480961799621582
    4. ' ' → logprob: -4.480961799621582
    5. '1' → logprob: -7.730961799621582
    6. '45' → logprob: -8.730961799621582
    7. '89' → logprob: -8.855961799621582
    8. '(math' → logprob: -8.855961799621582
    9. 'pi' → logprob: -11.105961799621582
    10. 'int' → logprob: -11.480961799621582

Token 138: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.13722680509090424
    2. ' /' → logprob: -2.6372268199920654
    3. 'import' → logprob: -3.0122268199920654
    4. ',' → logprob: -5.512226581573486
    5. ' ' → logprob: -6.387226581573486
    6. ' import' → logprob: -7.387226581573486
    7. '<|end|>' → logprob: -7.762226581573486
    8. ' ,' → logprob: -8.637227058410645
    9. ' (' → logprob: -9.262227058410645
    10. '   ' → logprob: -9.637227058410645

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001182607957161963
    2. ' ' → logprob: -6.751182556152344
    3. '/' → logprob: -11.376182556152344
    4. '1' → logprob: -15.001182556152344
    5. '6' → logprob: -15.876182556152344
    6. '```' → logprob: -15.876182556152344
    7. '3' → logprob: -16.126182556152344
    8. '0' → logprob: -16.501182556152344
    9. '   ' → logprob: -16.876182556152344
    10. '
' → logprob: -17.126182556152344

Token 140: ' with' (ID: 483)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5586144924163818
    2. ',' → logprob: -1.9336144924163818
    3. ' for' → logprob: -2.558614492416382
    4. ' ,' → logprob: -2.933614492416382
    5. ':' → logprob: -3.058614492416382
    6. 'import' → logprob: -3.433614492416382
    7. '   ' → logprob: -3.683614492416382
    8. '
' → logprob: -4.558614730834961
    9. ' import' → logprob: -5.058614730834961
    10. '<|end|>' → logprob: -5.058614730834961

Token 141: ' small' (ID: 3291)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12199082225561142
    2. ' ' → logprob: -2.496990919113159
    3. ' math' → logprob: -4.37199068069458
    4. 'math' → logprob: -4.37199068069458
    5. 'import' → logprob: -6.37199068069458
    6. ' steps' → logprob: -6.49699068069458
    7. ' increments' → logprob: -6.99699068069458
    8. 'steps' → logprob: -7.12199068069458
    9. ' step' → logprob: -7.24699068069458
    10. 'increment' → logprob: -7.74699068069458

Token 142: ' steps' (ID: 10331)
  Prédit: ' increments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increments' → logprob: -0.08702699840068817
    2. ' steps' → logprob: -3.212027072906494
    3. 'increments' → logprob: -3.712027072906494
    4. ' increment' → logprob: -4.587027072906494
    5. ' step' → logprob: -5.462027072906494
    6. 'increment' → logprob: -6.337027072906494
    7. 'steps' → logprob: -6.962027072906494
    8. ' angle' → logprob: -7.337027072906494
    9. ' incremental' → logprob: -8.712026596069336
    10. 'step' → logprob: -8.712026596069336

Token 143: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8972474336624146
    2. '   ' → logprob: -1.0222474336624146
    3. ',' → logprob: -2.772247314453125
    4. ' for' → logprob: -3.147247314453125
    5. ' 
' → logprob: -3.772247314453125
    6. ':' → logprob: -4.272247314453125
    7. '
' → logprob: -4.397247314453125
    8. '    ' → logprob: -4.522247314453125
    9. '  
' → logprob: -4.522247314453125
    10. '\' → logprob: -5.147247314453125

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019349252805113792
    2. ' ' → logprob: -4.644349098205566
    3. '    ' → logprob: -5.894349098205566
    4. ' for' → logprob: -6.019349098205566
    5. ',' → logprob: -7.144349098205566
    6. '    
' → logprob: -7.394349098205566
    7. '
' → logprob: -7.769349098205566
    8. ' 
' → logprob: -7.769349098205566
    9. 'import' → logprob: -7.894349098205566
    10. '  ' → logprob: -8.019349098205566

Token 145: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.596567690372467
    2. '   ' → logprob: -1.8465676307678223
    3. ' import' → logprob: -2.0965676307678223
    4. 'import' → logprob: -2.3465676307678223
    5. '0' → logprob: -3.5965676307678223
    6. 'for' (adapté à ' for') → logprob: -4.471567630767822
    7. ' angle' → logprob: -4.721567630767822
    8. 'angle' → logprob: -4.971567630767822
    9. ' i' → logprob: -5.221567630767822
    10. ' step' → logprob: -5.721567630767822

Token 146: ' deg' (ID: 5597)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.005415534600615501
    2. 'angle' → logprob: -6.005415439605713
    3. ' theta' → logprob: -6.505415439605713
    4. ' i' → logprob: -6.755415439605713
    5. 'theta' → logprob: -9.005415916442871
    6. ' a' → logprob: -9.380415916442871
    7. ' ' → logprob: -10.380415916442871
    8. ' step' → logprob: -11.255415916442871
    9. '_angle' → logprob: -11.755415916442871
    10. '(angle' → logprob: -12.130415916442871

Token 147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0071382587775588036
    2. 'in' → logprob: -5.507138252258301
    3. '_angle' → logprob: -6.757138252258301
    4. 'angle' → logprob: -7.007138252258301
    5. ' ' → logprob: -7.882138252258301
    6. 'a' → logprob: -8.8821382522583
    7. '   ' → logprob: -9.3821382522583
    8. ',' → logprob: -9.6321382522583
    9. ' angle' → logprob: -10.1321382522583
    10. '1' → logprob: -10.2571382522583

Token 148: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026306109502911568
    2. 'range' → logprob: -3.65130615234375
    3. ' ' → logprob: -13.15130615234375
    4. '	range' → logprob: -13.15130615234375
    5. '(range' → logprob: -14.27630615234375
    6. ' ra' → logprob: -15.15130615234375
    7. ' rang' → logprob: -15.15130615234375
    8. ' xrange' → logprob: -15.27630615234375
    9. '   ' → logprob: -15.90130615234375
    10. '[' → logprob: -16.40130615234375

Token 149: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7066030502319336
    2. '(' → logprob: -0.8316030502319336
    3. '1' → logprob: -3.4566030502319336
    4. '90' → logprob: -3.9566030502319336
    5. '91' → logprob: -4.081603050231934
    6. '45' → logprob: -6.331603050231934
    7. ' ' → logprob: -7.206603050231934
    8. '901' → logprob: -8.081603050231934
    9. '(
' → logprob: -8.331603050231934
    10. '46' → logprob: -8.456603050231934

Token 150: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1719852238893509
    2. '1' → logprob: -2.046985149383545
    3. '91' → logprob: -3.921985149383545
    4. '901' → logprob: -5.421985149383545
    5. '90' → logprob: -5.421985149383545
    6. ' ' → logprob: -9.046985626220703
    7. '900' → logprob: -9.421985626220703
    8. '```' → logprob: -11.796985626220703
    9. '01' → logprob: -11.984485626220703
    10. '
' → logprob: -12.796985626220703

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47032299637794495
    2. ' ,' → logprob: -1.4703229665756226
    3. '0' → logprob: -2.595323085784912
    4. '8' → logprob: -2.970323085784912
    5. '80' → logprob: -4.470323085784912
    6. '85' → logprob: -5.720323085784912
    7. '90' → logprob: -7.220323085784912
    8. '00' → logprob: -7.345323085784912
    9. ' ' → logprob: -7.845323085784912
    10. '7' → logprob: -7.970323085784912

Token 152: ' ' (ID: 220)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.11998321861028671
    2. '91' → logprob: -2.369983196258545
    3. '901' → logprob: -4.244983196258545
    4. '900' → logprob: -5.369983196258545
    5. '9' → logprob: -8.244983673095703
    6. ' ' → logprob: -8.619983673095703
    7. '902' → logprob: -10.494983673095703
    8. '89' → logprob: -10.494983673095703
    9. '906' → logprob: -10.869983673095703
    10. '911' → logprob: -11.119983673095703

Token 153: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.10180650651454926
    2. '91' → logprob: -2.476806402206421
    3. '901' → logprob: -4.726806640625
    4. '900' → logprob: -5.601806640625
    5. '9' → logprob: -8.851806640625
    6. ' ' → logprob: -10.226806640625
    7. '89' → logprob: -11.101806640625
    8. '906' → logprob: -11.476806640625
    9. '902' → logprob: -11.851806640625
    10. '911' → logprob: -12.101806640625

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08976665884256363
    2. '):
' → logprob: -2.46476674079895
    3. '0' → logprob: -8.089766502380371
    4. ' ):' → logprob: -8.214766502380371
    5. '1' → logprob: -9.339766502380371
    6. ')' → logprob: -9.339766502380371
    7. ' ):
' → logprob: -10.964766502380371
    8. '):
' → logprob: -10.964766502380371
    9. ':' → logprob: -11.339766502380371
    10. ',' → logprob: -11.714766502380371

Token 155: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8742634057998657
    2. ':' → logprob: -1.2492634057998657
    3. '       ' → logprob: -1.6242634057998657
    4. ' ' → logprob: -3.374263286590576
    5. '<|end|>' → logprob: -3.499263286590576
    6. ' :' → logprob: -4.374263286590576
    7. '):' → logprob: -4.874263286590576
    8. '    ' → logprob: -4.999263286590576
    9. ',' → logprob: -6.249263286590576
    10. '  ' → logprob: -6.499263286590576

Token 156: ' angle' (ID: 16538)
  Prédit: ' angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.38531121611595154
    2. 'angle' (adapté à ' angle') → logprob: -1.510311245918274
    3. '       ' → logprob: -2.8853111267089844
    4. '   ' → logprob: -4.635311126708984
    5. ' ' → logprob: -4.760311126708984
    6. '    ' → logprob: -5.385311126708984
    7. '        
' → logprob: -5.510311126708984
    8. '        ' → logprob: -5.635311126708984
    9. ' 
' → logprob: -5.760311126708984
    10. '
' → logprob: -6.760311126708984

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011711753904819489
    2. '=' → logprob: -6.751171112060547
    3. ' ' → logprob: -15.001171112060547
    4. ' =
' → logprob: -15.126171112060547
    5. ')' → logprob: -15.751171112060547
    6. '<|end|>' → logprob: -16.501171112060547
    7. 's' → logprob: -16.876171112060547
    8. ',' → logprob: -17.876171112060547
    9. ' =)' → logprob: -18.001171112060547
    10. ' ' → logprob: -18.251171112060547

Token 158: ' math' (ID: 13324)
  Prédit: ' deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.7217416167259216
    2. ' math' → logprob: -0.8467416167259216
    3. 'deg' → logprob: -3.0967416763305664
    4. 'math' → logprob: -3.2217416763305664
    5. '(math' → logprob: -8.721741676330566
    6. ' (' → logprob: -11.971741676330566
    7. '(de' → logprob: -11.971741676330566
    8. '    ' → logprob: -12.096741676330566
    9. '```' → logprob: -12.721741676330566
    10. '   ' → logprob: -12.846741676330566

Token 159: '.r' (ID: 2951)
  Prédit: '.pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.08342958986759186
    2. '.' → logprob: -2.8334295749664307
    3. '.r' → logprob: -4.08342981338501
    4. '.sin' → logprob: -5.58342981338501
    5. '.atan' → logprob: -8.083429336547852
    6. '.as' → logprob: -9.458429336547852
    7. '.PI' → logprob: -9.583429336547852
    8. '.cos' → logprob: -9.708429336547852
    9. '.sqrt' → logprob: -10.083429336547852
    10. '<|end|>' → logprob: -10.333429336547852

Token 160: 'adians' (ID: 45611)
  Prédit: 'adians'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adians' → logprob: -0.014308647252619267
    2. 'ads' → logprob: -4.514308452606201
    3. 'adi' → logprob: -5.889308452606201
    4. 'ad' → logprob: -8.01430892944336
    5. 'adian' → logprob: -9.63930892944336
    6. '**' → logprob: -10.51430892944336
    7. '   ' → logprob: -11.13930892944336
    8. '  ' → logprob: -12.13930892944336
    9. '```' → logprob: -12.13930892944336
    10. '*' → logprob: -12.26430892944336

Token 161: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -6.802049756515771e-05
    2. 'deg' → logprob: -9.750067710876465
    3. '(' → logprob: -11.625067710876465
    4. ' deg' → logprob: -15.000067710876465
    5. ' (' → logprob: -15.375067710876465
    6. '(dec' → logprob: -16.62506866455078
    7. '(d' → logprob: -17.00006866455078
    8. '(def' → logprob: -17.25006866455078
    9. '	de' → logprob: -17.50006866455078
    10. 'de' → logprob: -18.00006866455078

Token 162: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -9.996708104154095e-05
    2. 'gree' → logprob: -10.250100135803223
    3. 'г' → logprob: -10.750100135803223
    4. 'grees' → logprob: -11.250100135803223
    5. 'f' → logprob: -11.875100135803223
    6. 'deg' → logprob: -12.250100135803223
    7. '```' → logprob: -13.750100135803223
    8. ' g' → logprob: -13.750100135803223
    9. ')' → logprob: -14.000100135803223
    10. 'degree' → logprob: -14.062600135803223

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.44574936106801e-05
    2. ')
' → logprob: -10.00007438659668
    3. ' )' → logprob: -10.50007438659668
    4. '<|end|>' → logprob: -14.25007438659668
    5. '))' → logprob: -16.00007438659668
    6. ')
' → logprob: -16.25007438659668
    7. ')

' → logprob: -16.25007438659668
    8. ')#' → logprob: -16.37507438659668
    9. ')return' → logprob: -16.75007438659668
    10. ')`' → logprob: -16.87507438659668

Token 164: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.17425857484340668
    2. 'for' → logprob: -1.9242585897445679
    3. 'hit' → logprob: -5.299258708953857
    4. 'time' → logprob: -5.424258708953857
    5. 'found' → logprob: -6.299258708953857
    6. '       ' → logprob: -7.174258708953857
    7. ' for' → logprob: -7.424258708953857
    8. ' t' → logprob: -7.549258708953857
    9. 'max' → logprob: -8.0492582321167
    10. 'dt' → logprob: -8.6742582321167

Token 166: '_end' (ID: 13707)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326591372489929
    2. ' =' → logprob: -0.7576591372489929
    3. ' ' → logprob: -10.007658958435059
    4. '<|end|>' → logprob: -12.257658958435059
    5. 's' → logprob: -12.632658958435059
    6. ')' → logprob: -12.632658958435059
    7. ',' → logprob: -14.632658958435059
    8. 'max' → logprob: -14.757658958435059
    9. '_max' → logprob: -15.007658958435059
    10. ' =
' → logprob: -15.132658958435059

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033990632742643356
    2. '=' → logprob: -3.4089906215667725
    3. ' ' → logprob: -8.033990859985352
    4. '<|end|>' → logprob: -11.658990859985352
    5. ')' → logprob: -12.283990859985352
    6. ',' → logprob: -12.908990859985352
    7. 's' → logprob: -13.908990859985352
    8. '_' → logprob: -14.033990859985352
    9. ' )' → logprob: -14.908990859985352
    10. 'max' → logprob: -15.033990859985352

Token 168: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9934524893760681
    2. ' (' → logprob: -0.9934524893760681
    3. '(' → logprob: -1.993452548980713
    4. ' ' → logprob: -2.118452548980713
    5. '(V' → logprob: -6.243452548980713
    6. '(X' → logprob: -7.993452548980713
    7. ' X' → logprob: -8.868452072143555
    8. 'X' → logprob: -9.118452072143555
    9. '  ' → logprob: -9.118452072143555
    10. ' V' → logprob: -10.180952072143555

Token 169: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47570937871932983
    2. '(' → logprob: -0.9757093787193298
    3. ' (' → logprob: -7.600709438323975
    4. '(V' → logprob: -7.600709438323975
    5. ' ' → logprob: -8.225708961486816
    6. '(X' → logprob: -8.600708961486816
    7. '10' → logprob: -10.225708961486816
    8. '((' → logprob: -10.725708961486816
    9. '20' → logprob: -10.850708961486816
    10. 'X' → logprob: -10.975708961486816

Token 170: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038106437772512436
    2. '*' → logprob: -3.2881064414978027
    3. 'V' → logprob: -10.788105964660645
    4. '.' → logprob: -11.163105964660645
    5. ' ' → logprob: -11.788105964660645
    6. '
' → logprob: -12.413105964660645
    7. '*v' → logprob: -12.413105964660645
    8. '0' → logprob: -12.788105964660645
    9. ' V' → logprob: -12.913105964660645
    10. '*(' → logprob: -13.163105964660645

Token 171: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.07026873528957367
    2. ' V' → logprob: -2.6952686309814453
    3. '<|end|>' → logprob: -9.070268630981445
    4. '(V' → logprob: -10.070268630981445
    5. ' (' → logprob: -10.070268630981445
    6. '	V' → logprob: -10.570268630981445
    7. ' ' → logprob: -10.695268630981445
    8. '
' → logprob: -10.820268630981445
    9. '   ' → logprob: -11.195268630981445
    10. '(' → logprob: -11.195268630981445

Token 172: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5235375165939331
    2. '*' → logprob: -0.8985375165939331
    3. '*sin' → logprob: -8.148537635803223
    4. ' math' → logprob: -10.648537635803223
    5. ' ' → logprob: -10.648537635803223
    6. '*Math' → logprob: -10.773537635803223
    7. '```' → logprob: -11.273537635803223
    8. 'math' → logprob: -11.273537635803223
    9. '   ' → logprob: -12.023537635803223
    10. '*s' → logprob: -12.148537635803223

Token 173: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5236764550209045
    2. ' math' → logprob: -0.8986764550209045
    3. '(math' → logprob: -7.52367639541626
    4. '<|end|>' → logprob: -12.898676872253418
    5. 'sin' → logprob: -13.023676872253418
    6. '/math' → logprob: -13.148676872253418
    7. ' ' → logprob: -13.273676872253418
    8. '   ' → logprob: -14.023676872253418
    9. '_math' → logprob: -14.148676872253418
    10. '.math' → logprob: -14.398676872253418

Token 174: '.sin' (ID: 35734)
  Prédit: '.sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sin' → logprob: -0.03717776760458946
    2. '.' → logprob: -3.787177801132202
    3. '.cos' → logprob: -4.537177562713623
    4. 'sin' → logprob: -6.287177562713623
    5. '.s' → logprob: -7.412177562713623
    6. '.sqrt' → logprob: -7.912177562713623
    7. '<|end|>' → logprob: -8.537178039550781
    8. 's' → logprob: -10.537178039550781
    9. '.com' → logprob: -11.287178039550781
    10. '.Sin' → logprob: -11.412178039550781

Token 175: '(angle' (ID: 66047)
  Prédit: '(angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -0.00016754455282352865
    2. '(' → logprob: -9.125167846679688
    3. 'angle' → logprob: -9.750167846679688
    4. '(
' → logprob: -16.000167846679688
    5. '(theta' → logprob: -16.500167846679688
    6. ' angle' → logprob: -17.250167846679688
    7. '<|end|>' → logprob: -17.375167846679688
    8. '.angle' → logprob: -17.750167846679688
    9. ' (' → logprob: -17.750167846679688
    10. '_angle' → logprob: -18.625167846679688

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008813306922093034
    2. ')/' → logprob: -7.250881195068359
    3. ' )' → logprob: -8.87588119506836
    4. ')/(' → logprob: -11.62588119506836
    5. '()' → logprob: -12.25088119506836
    6. ')
' → logprob: -12.50088119506836
    7. '       ' → logprob: -12.62588119506836
    8. '(' → logprob: -12.87588119506836
    9. 't' → logprob: -13.62588119506836
    10. '   ' → logprob: -13.87588119506836

Token 177: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.019579462707042694
    2. '/' → logprob: -4.5195794105529785
    3. '       ' → logprob: -5.0195794105529785
    4. ' /
' → logprob: -7.2695794105529785
    5. '/math' → logprob: -7.5195794105529785
    6. '(' → logprob: -8.519579887390137
    7. ' ' → logprob: -9.394579887390137
    8. '()' → logprob: -9.644579887390137
    9. '   ' → logprob: -9.894579887390137
    10. ' (' → logprob: -10.394579887390137

Token 178: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.4498052223643754e-05
    2. '9' → logprob: -11.625014305114746
    3. ' g' → logprob: -12.125014305114746
    4. '   ' → logprob: -17.250015258789062
    5. '	g' → logprob: -18.125015258789062
    6. ' ' → logprob: -18.375015258789062
    7. '<|end|>' → logprob: -19.500015258789062
    8. '```' → logprob: -19.875015258789062
    9. '*g' → logprob: -19.875015258789062
    10. '`' → logprob: -20.500015258789062

Token 179: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7573371529579163
    2. '<|end|>' → logprob: -1.2573370933532715
    3. '       ' → logprob: -1.5073370933532715
    4. '  
' → logprob: -4.6323370933532715
    5. '<|end|>' → logprob: -4.8823370933532715
    6. ' 
' → logprob: -6.2573370933532715
    7. '        
' → logprob: -6.5073370933532715
    8. '   ' → logprob: -6.6323370933532715
    9. '\n' → logprob: -7.0073370933532715
    10. ' ' → logprob: -7.6323370933532715

Token 180: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1528930813074112
    2. '
' → logprob: -2.15289306640625
    3. '<|end|>' → logprob: -4.52789306640625
    4. '        
' → logprob: -5.02789306640625
    5. '  
' → logprob: -5.52789306640625
    6. ' for' → logprob: -6.27789306640625
    7. '<|end|>' → logprob: -7.77789306640625
    8. '\n' → logprob: -7.90289306640625
    9. ' 
' → logprob: -7.90289306640625
    10. '    
' → logprob: -8.15289306640625

Token 181: ' total' (ID: 3609)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.0542265176773071
    2. 't' → logprob: -1.4292265176773071
    3. ' step' → logprob: -1.6792265176773071
    4. '<|end|>' → logprob: -1.8042265176773071
    5. 'step' → logprob: -4.304226398468018
    6. ' for' → logprob: -4.429226398468018
    7. '0' → logprob: -5.054226398468018
    8. ' steps' → logprob: -5.054226398468018
    9. '       ' → logprob: -5.429226398468018
    10. '<|end|>' → logprob: -5.679226398468018

Token 182: ' flight' (ID: 15243)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.6079632043838501
    2. ' time' → logprob: -1.10796320438385
    3. '_time' → logprob: -2.4829630851745605
    4. ' flight' → logprob: -3.4829630851745605
    5. 't' → logprob: -5.2329630851745605
    6. 'flight' → logprob: -6.1079630851745605
    7. '_' → logprob: -6.6079630851745605
    8. ' t' → logprob: -6.7329630851745605
    9. '_t' → logprob: -8.232963562011719
    10. '<|end|>' → logprob: -8.607963562011719

Token 183: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.25436127185821533
    2. 'time' → logprob: -1.6293612718582153
    3. '_time' → logprob: -3.754361152648926
    4. '<|end|>' → logprob: -5.379361152648926
    5. '<|end|>' → logprob: -8.379361152648926
    6. '-time' → logprob: -10.004361152648926
    7. '   ' → logprob: -10.129361152648926
    8. ' times' → logprob: -10.379361152648926
    9. 't' → logprob: -10.629361152648926
    10. '	time' → logprob: -11.129361152648926

Token 184: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03287774696946144
    2. '<|end|>' → logprob: -3.7828776836395264
    3. '
' → logprob: -5.0328779220581055
    4. '<|end|>' → logprob: -6.5328779220581055
    5. ' for' → logprob: -7.4078779220581055
    6. '        
' → logprob: -8.157877922058105
    7. 't' → logprob: -9.157877922058105
    8. ' t' → logprob: -9.282877922058105
    9. ',' → logprob: -9.532877922058105
    10. ')' → logprob: -9.657877922058105

Token 185: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08296262472867966
    2. ' y' → logprob: -2.8329625129699707
    3. 'bird' → logprob: -5.707962512969971
    4. ' the' → logprob: -5.832962512969971
    5. 'the' → logprob: -5.832962512969971
    6. 'egg' → logprob: -6.082962512969971
    7. 'ground' → logprob: -6.207962512969971
    8. '   ' → logprob: -6.207962512969971
    9. '0' → logprob: -6.332962512969971
    10. ' egg' → logprob: -6.332962512969971

Token 186: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012406513094902039
    2. ' =' → logprob: -4.637406349182129
    3. ' <=' → logprob: -6.637406349182129
    4. '<=' → logprob: -6.762406349182129
    5. ' ==' → logprob: -10.262406349182129
    6. '0' → logprob: -10.262406349182129
    7. '==' → logprob: -10.637406349182129
    8. ' becomes' → logprob: -10.762406349182129
    9. ' reaches' → logprob: -10.887406349182129
    10. ' returns' → logprob: -11.262406349182129

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '=' → logprob: -16.87501335144043
    4. '<|end|>' → logprob: -17.87501335144043
    5. 'zero' → logprob: -18.62501335144043
    6. 'y' → logprob: -18.62501335144043
    7. ' ' → logprob: -19.12501335144043
    8. '۰' → logprob: -19.56251335144043
    9. '(' → logprob: -19.68751335144043
    10. '   ' → logprob: -19.68751335144043

Token 188: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004827273078262806
    2. '
' → logprob: -6.129827499389648
    3. '<|end|>' → logprob: -6.504827499389648
    4. ' for' → logprob: -7.504827499389648
    5. '        
' → logprob: -8.879827499389648
    6. '<|end|>' → logprob: -9.129827499389648
    7. '   ' → logprob: -9.254827499389648
    8. ' t' → logprob: -9.754827499389648
    9. ',' → logprob: -10.004827499389648
    10. 't' → logprob: -10.254827499389648

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033153212280012667
    2. ' step' → logprob: -9.25033187866211
    3. ' for' → logprob: -9.37533187866211
    4. ' t' → logprob: -9.50033187866211
    5. 't' → logprob: -10.00033187866211
    6. '   ' → logprob: -12.00033187866211
    7. '<|end|>' → logprob: -12.00033187866211
    8. ',' → logprob: -12.75033187866211
    9. '        
' → logprob: -13.00033187866211
    10. 'for' → logprob: -13.37533187866211

Token 190: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0851207748055458
    2. 'dt' → logprob: -2.710120677947998
    3. 'steps' → logprob: -5.085120677947998
    4. 'step' → logprob: -5.210120677947998
    5. '       ' → logprob: -6.085120677947998
    6. 'for' → logprob: -7.335120677947998
    7. 'time' → logprob: -8.335121154785156
    8. ' t' → logprob: -8.585121154785156
    9. 'import' → logprob: -11.085121154785156
    10. ' dt' → logprob: -11.335121154785156

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763305425643921
    2. ' =' → logprob: -0.8263305425643921
    3. '_step' → logprob: -8.701330184936523
    4. 'step' → logprob: -9.701330184936523
    5. 's' → logprob: -9.951330184936523
    6. '_' → logprob: -10.076330184936523
    7. ' ' → logprob: -10.826330184936523
    8. '_=' → logprob: -10.826330184936523
    9. 't' → logprob: -11.826330184936523
    10. '_steps' → logprob: -12.076330184936523

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004622137639671564
    2. ' ' → logprob: -5.379621982574463
    3. 't' → logprob: -14.129622459411621
    4. '<|end|>' → logprob: -14.379622459411621
    5. '   ' → logprob: -15.879622459411621
    6. '.' → logprob: -16.692121505737305
    7. ' t' → logprob: -16.754621505737305
    8. 'step' → logprob: -16.817121505737305
    9. '```' → logprob: -16.879621505737305
    10. '  ' → logprob: -16.942121505737305

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. 't' → logprob: -14.875041007995605
    4. '   ' → logprob: -16.56254005432129
    5. 'step' → logprob: -17.81254005432129
    6. '<|end|>' → logprob: -17.87504005432129
    7. '.' → logprob: -17.93754005432129
    8. '```' → logprob: -18.25004005432129
    9. '1' → logprob: -18.31254005432129
    10. '  ' → logprob: -18.31254005432129

Token 194: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22392119467258453
    2. '<|end|>' → logprob: -2.473921298980713
    3. ',' → logprob: -3.473921298980713
    4. '+' → logprob: -3.598921298980713
    5. ';' → logprob: -4.098921298980713
    6. '<|end|>' → logprob: -4.223921298980713
    7. '       ' → logprob: -4.723921298980713
    8. '   ' → logprob: -5.223921298980713
    9. '
' → logprob: -5.348921298980713
    10. ' +' → logprob: -6.473921298980713

Token 195: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33284491300582886
    2. '<|end|>' → logprob: -1.9578449726104736
    3. '       ' → logprob: -2.9578449726104736
    4. ';' → logprob: -3.7078449726104736
    5. ',' → logprob: -3.8328449726104736
    6. '
' → logprob: -4.3328447341918945
    7. '<|end|>' → logprob: -4.7078447341918945
    8. '+' → logprob: -4.8328447341918945
    9. '   ' → logprob: -5.5828447341918945
    10. ' ' → logprob: -6.0828447341918945

Token 196: ' step' (ID: 5983)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17248956859111786
    2. 'while' → logprob: -2.047489643096924
    3. ' while' → logprob: -4.047489643096924
    4. '       ' → logprob: -5.047489643096924
    5. '0' → logprob: -5.672489643096924
    6. ',' → logprob: -7.422489643096924
    7. '	while' → logprob: -7.797489643096924
    8. '
' → logprob: -8.047489166259766
    9. 't' → logprob: -8.297489166259766
    10. 'step' (adapté à ' step') → logprob: -9.297489166259766

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5803450345993042
    2. '=' → logprob: -0.8303450345993042
    3. '_' → logprob: -5.455345153808594
    4. 's' → logprob: -9.705345153808594
    5. '_=' → logprob: -11.205345153808594
    6. ' ' → logprob: -11.705345153808594
    7. '_size' → logprob: -11.705345153808594
    8. '_space' → logprob: -12.455345153808594
    9. '_step' → logprob: -12.455345153808594
    10. '_time' → logprob: -12.455345153808594

Token 198: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006716913543641567
    2. ' ' → logprob: -5.006716728210449
    3. 't' → logprob: -14.00671672821045
    4. ' t' → logprob: -15.50671672821045
    5. '1' → logprob: -15.63171672821045
    6. 's' → logprob: -15.81921672821045
    7. '.' → logprob: -16.131717681884766
    8. '=' → logprob: -16.444217681884766
    9. ' ' → logprob: -17.756717681884766
    10. '۰' → logprob: -18.006717681884766

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.125041007995605
    3. 't' → logprob: -14.000041007995605
    4. '1' → logprob: -16.250041961669922
    5. 's' → logprob: -17.250041961669922
    6. '.' → logprob: -17.375041961669922
    7. '...' → logprob: -17.437541961669922
    8. '-' → logprob: -17.687541961669922
    9. '=' → logprob: -17.750041961669922
    10. '00' → logprob: -17.875041961669922

Token 200: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.60414821645827e-06
    2. '0' → logprob: -12.375004768371582
    3. '.
' → logprob: -16.000003814697266
    4. ' .' → logprob: -16.125003814697266
    5. '.​' → logprob: -18.125003814697266
    6. '​.' → logprob: -18.375003814697266
    7. '‌.' → logprob: -18.625003814697266
    8. '.=' → logprob: -18.750003814697266
    9. '+.' → logprob: -18.875003814697266
    10. ' ' → logprob: -18.875003814697266

Token 201: '01' (ID: 2290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07737308740615845
    2. '01' → logprob: -2.9523730278015137
    3. '05' → logprob: -4.452373027801514
    4. '0' → logprob: -4.577373027801514
    5. '02' → logprob: -8.202373504638672
    6. '03' → logprob: -10.827373504638672
    7. '04' → logprob: -12.952373504638672
    8. '
' → logprob: -13.264873504638672
    9. '...' → logprob: -13.827373504638672
    10. '```' → logprob: -13.952373504638672

Token 202: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07053595036268234
    2. '       ' → logprob: -2.945535898208618
    3. '<|end|>' → logprob: -4.820536136627197
    4. '  
' → logprob: -6.445536136627197
    5. ' 
' → logprob: -6.570536136627197
    6. '        
' → logprob: -6.945536136627197
    7. ' while' → logprob: -6.945536136627197
    8. '<|end|>' → logprob: -7.570536136627197
    9. ' ' → logprob: -8.195535659790039
    10. '    
' → logprob: -8.195535659790039

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4923492670059204
    2. '
' → logprob: -1.3673492670059204
    3. '<|end|>' → logprob: -2.867349147796631
    4. ' while' → logprob: -3.617349147796631
    5. ' 
' → logprob: -3.867349147796631
    6. '  
' → logprob: -4.367349147796631
    7. '        
' → logprob: -5.617349147796631
    8. '	while' → logprob: -5.742349147796631
    9. ' ' → logprob: -6.117349147796631
    10. '<|end|>' → logprob: -6.492349147796631

Token 204: ' can' (ID: 665)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.227202907204628
    2. 'while' → logprob: -1.6022028923034668
    3. '       ' → logprob: -6.352202892303467
    4. '	while' → logprob: -10.602203369140625
    5. 't' → logprob: -11.477203369140625
    6. '        ' → logprob: -12.352203369140625
    7. ' t' → logprob: -13.352203369140625
    8. ' 
' → logprob: -13.727203369140625
    9. 'While' → logprob: -14.102203369140625
    10. '
' → logprob: -14.477203369140625

Token 205: '_drop' (ID: 51142)
  Prédit: '_hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.1248871460556984
    2. '_' → logprob: -2.249887228012085
    3. '_continue' → logprob: -5.749886989593506
    4. '_throw' → logprob: -6.499886989593506
    5. '   ' → logprob: -6.749886989593506
    6. '_jump' → logprob: -6.999886989593506
    7. '_move' → logprob: -7.249886989593506
    8. '_attack' → logprob: -7.374886989593506
    9. ' _' → logprob: -7.749886989593506
    10. '_hits' → logprob: -7.749886989593506

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07587377727031708
    2. '_' → logprob: -3.075873851776123
    3. '=' → logprob: -3.700873851776123
    4. 'Egg' → logprob: -7.700873851776123
    5. '   ' → logprob: -8.325873374938965
    6. '=False' → logprob: -8.450873374938965
    7. ',' → logprob: -8.825873374938965
    8. '_drop' → logprob: -9.075873374938965
    9. '_point' → logprob: -9.075873374938965
    10. '_p' → logprob: -9.075873374938965

Token 207: ' True' (ID: 6432)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.7818782329559326
    2. 'False' → logprob: -1.0318782329559326
    3. ' True' → logprob: -1.9068782329559326
    4. 'True' → logprob: -3.2818782329559326
    5. '   ' → logprob: -12.281878471374512
    6. '(False' → logprob: -12.531878471374512
    7. '=False' → logprob: -13.156878471374512
    8. '=True' → logprob: -13.281878471374512
    9. '(True' → logprob: -13.281878471374512
    10. '    ' → logprob: -14.031878471374512

Token 208: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2544858753681183
    2. '       ' → logprob: -2.129485845565796
    3. '<|end|>' → logprob: -2.379485845565796
    4. '  
' → logprob: -5.504486083984375
    5. '        
' → logprob: -6.254486083984375
    6. '<|end|>' → logprob: -6.379486083984375
    7. ' 
' → logprob: -6.504486083984375
    8. '		
' → logprob: -7.004486083984375
    9. '	' → logprob: -7.129486083984375
    10. ',' → logprob: -7.754486083984375

Token 209: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7281365990638733
    2. '       ' → logprob: -0.7281365990638733
    3. '<|end|>' → logprob: -4.8531365394592285
    4. '  
' → logprob: -5.1031365394592285
    5. '        
' → logprob: -5.3531365394592285
    6. '	' → logprob: -5.4781365394592285
    7. ' 
' → logprob: -5.4781365394592285
    8. '		
' → logprob: -5.9781365394592285
    9. ' while' → logprob: -6.7281365394592285
    10. '	
' → logprob: -7.8531365394592285

Token 210: ' drop' (ID: 9440)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.026921557262539864
    2. ' while' → logprob: -3.651921510696411
    3. '       ' → logprob: -7.40192174911499
    4. '	while' → logprob: -12.151921272277832
    5. '
' → logprob: -13.026921272277832
    6. 't' → logprob: -13.651921272277832
    7. '        
' → logprob: -14.026921272277832
    8. 'While' → logprob: -15.276921272277832
    9. 'x' → logprob: -15.526921272277832
    10. '0' → logprob: -15.526921272277832

Token 211: '_positions' (ID: 93193)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6858459711074829
    2. '_t' → logprob: -1.935845971107483
    3. '_' → logprob: -2.3108458518981934
    4. '_point' → logprob: -2.4358458518981934
    5. ' =' → logprob: -2.9358458518981934
    6. '=' → logprob: -3.4358458518981934
    7. '_index' → logprob: -3.6858458518981934
    8. '_x' → logprob: -4.185845851898193
    9. '_angle' → logprob: -4.435845851898193
    10. '_pos' → logprob: -5.310845851898193

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04870693385601044
    2. '=' → logprob: -3.0487070083618164
    3. '=[]' → logprob: -9.548707008361816
    4. ' ' → logprob: -10.673707008361816
    5. 's' → logprob: -11.673707008361816
    6. '[]' → logprob: -12.173707008361816
    7. '   ' → logprob: -12.923707008361816
    8. ',' → logprob: -12.923707008361816
    9. '=[]
' → logprob: -13.798707008361816
    10. ')' → logprob: -13.923707008361816

Token 213: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2526651918888092
    2. ' []' → logprob: -1.5026651620864868
    3. '[' → logprob: -8.002665519714355
    4. '[]
' → logprob: -8.252665519714355
    5. ' []
' → logprob: -10.127665519714355
    6. '[]}' → logprob: -10.502665519714355
    7. '[]

' → logprob: -10.877665519714355
    8. ' [' → logprob: -10.877665519714355
    9. ' ' → logprob: -11.502665519714355
    10. '[],' → logprob: -11.752665519714355

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28222256898880005
    2. '
' → logprob: -1.7822225093841553
    3. '<|end|>' → logprob: -3.0322225093841553
    4. '  
' → logprob: -4.657222747802734
    5. ' 
' → logprob: -5.282222747802734
    6. '        
' → logprob: -5.782222747802734
    7. ' ' → logprob: -6.032222747802734
    8. '	' → logprob: -6.032222747802734
    9. '		
' → logprob: -6.657222747802734
    10. '<|end|>' → logprob: -6.782222747802734

Token 215: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3579324781894684
    2. ' while' → logprob: -1.482932448387146
    3. '       ' → logprob: -2.6079325675964355
    4. '	while' → logprob: -9.357932090759277
    5. '        ' → logprob: -10.607932090759277
    6. 't' → logprob: -10.732932090759277
    7. ' ' → logprob: -11.107932090759277
    8. '        
' → logprob: -11.107932090759277
    9. ')' → logprob: -11.607932090759277
    10. '   ' → logprob: -11.982932090759277

Token 216: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.05488577485084534
    2. 't' → logprob: -2.9298858642578125
    3. ' ' → logprob: -13.554885864257812
    4. ' ' → logprob: -14.179885864257812
    5. '(t' → logprob: -14.929885864257812
    6. 'True' → logprob: -14.929885864257812
    7. '(' → logprob: -15.679885864257812
    8. ' (' → logprob: -15.929885864257812
    9. ' True' → logprob: -16.179885864257812
    10. 'T' → logprob: -16.554885864257812

Token 217: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07579763233661652
    2. ' <' → logprob: -2.8257975578308105
    3. '<=' → logprob: -4.4507975578308105
    4. '<' → logprob: -6.2007975578308105
    5. ' ' → logprob: -10.575798034667969
    6. '<|end|>' → logprob: -11.950798034667969
    7. ' ≤' → logprob: -13.075798034667969
    8. ' +=' → logprob: -14.325798034667969
    9. '0' → logprob: -15.075798034667969
    10. '[' → logprob: -15.575798034667969

Token 218: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3484460115432739
    2. 't' → logprob: -1.223446011543274
    3. ' ' → logprob: -14.473445892333984
    4. '	t' → logprob: -15.848445892333984
    5. '
' → logprob: -16.098445892333984
    6. '`t' → logprob: -16.098445892333984
    7. ' ' → logprob: -16.348445892333984
    8. 'T' → logprob: -16.473445892333984
    9. 'step' → logprob: -16.473445892333984
    10. ' step' → logprob: -16.473445892333984

Token 219: '_end' (ID: 13707)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29549944400787354
    2. '_end' → logprob: -1.7954994440078735
    3. ' +' → logprob: -2.545499324798584
    4. ':' → logprob: -4.795499324798584
    5. ':
' → logprob: -6.420499324798584
    6. '   ' → logprob: -7.670499324798584
    7. ' ' → logprob: -8.420499801635742
    8. '       ' → logprob: -8.545499801635742
    9. '_END' → logprob: -9.545499801635742
    10. ' +=' → logprob: -9.670499801635742

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018299657851457596
    2. ':
' → logprob: -4.018299579620361
    3. ' and' → logprob: -9.51830005645752
    4. ' :' → logprob: -10.51830005645752
    5. ',' → logprob: -10.64330005645752
    6. '       ' → logprob: -12.01830005645752
    7. ':

' → logprob: -12.14330005645752
    8. '   ' → logprob: -12.26830005645752
    9. ' :
' → logprob: -12.39330005645752
    10. 'and' → logprob: -13.89330005645752

Token 221: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9331421852111816
    2. '<|end|>' → logprob: -1.4331421852111816
    3. '           ' → logprob: -1.5581421852111816
    4. ',' → logprob: -2.4331421852111816
    5. ' ' → logprob: -4.058142185211182
    6. '<|end|>' → logprob: -4.433142185211182
    7. '        
' → logprob: -5.433142185211182
    8. '   ' → logprob: -5.558142185211182
    9. ':' → logprob: -5.558142185211182
    10. '  
' → logprob: -5.558142185211182

Token 222: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6364706158638
    2. 'x' (adapté à ' x') → logprob: -0.7614706158638
    3. ' ' → logprob: -6.511470794677734
    4. ' ' → logprob: -6.761470794677734
    5. '           ' → logprob: -7.886470794677734
    6. '               ' → logprob: -8.636470794677734
    7. ',' → logprob: -8.886470794677734
    8. ')' → logprob: -9.636470794677734
    9. ' 
' → logprob: -9.636470794677734
    10. '            ' → logprob: -9.761470794677734

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004372254479676485
    2. ',y' → logprob: -7.875437259674072
    3. ' ,' → logprob: -9.875436782836914
    4. 'y' → logprob: -12.625436782836914
    5. ',Y' → logprob: -14.750436782836914
    6. '=' → logprob: -14.875436782836914
    7. ',
' → logprob: -14.875436782836914
    8. ',x' → logprob: -15.500436782836914
    9. '‌,' → logprob: -15.500436782836914
    10. '<|end|>' → logprob: -16.125436782836914

Token 224: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4740787148475647
    2. ' y' → logprob: -0.9740787148475647
    3. ' ' → logprob: -14.224079132080078
    4. '<|end|>' → logprob: -14.974079132080078
    5. '   ' → logprob: -15.099079132080078
    6. '	y' → logprob: -15.474079132080078
    7. '    ' → logprob: -15.849079132080078
    8. '  ' → logprob: -16.224079132080078
    9. ',y' → logprob: -17.724079132080078
    10. 'Y' → logprob: -17.849079132080078

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868737816810608
    2. '=' → logprob: -1.136873722076416
    3. ')' → logprob: -13.886874198913574
    4. '<|end|>' → logprob: -14.511874198913574
    5. ' ' → logprob: -14.636874198913574
    6. ',' → logprob: -14.636874198913574
    7. ' =)' → logprob: -16.136873245239258
    8. ' =
' → logprob: -16.136873245239258
    9. '           ' → logprob: -16.386873245239258
    10. '            ' → logprob: -17.386873245239258

Token 226: ' bird' (ID: 16189)
  Prédit: 'bird'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bird' → logprob: -0.632632851600647
    2. ' bird' → logprob: -0.757632851600647
    3. '   ' → logprob: -11.507633209228516
    4. ' ' → logprob: -11.757633209228516
    5. 'b' → logprob: -12.695133209228516
    6. ' vogel' → logprob: -13.320133209228516
    7. '
' → logprob: -13.757633209228516
    8. ' ' → logprob: -13.882633209228516
    9. ' egg' → logprob: -14.007633209228516
    10. 'ball' → logprob: -14.007633209228516

Token 227: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -6.659005157416686e-05
    2. '_positions' → logprob: -10.125066757202148
    3. '_' → logprob: -12.000066757202148
    4. 'position' → logprob: -12.125066757202148
    5. '_POSITION' → logprob: -12.500066757202148
    6. ' _' → logprob: -12.875066757202148
    7. ')' → logprob: -13.000066757202148
    8. 'Position' → logprob: -13.125066757202148
    9. '_Position' → logprob: -13.375066757202148
    10. '_coordinates' → logprob: -14.625066757202148

Token 228: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.00023476807109545916
    2. '(' → logprob: -8.375234603881836
    3. 'V' → logprob: -13.375234603881836
    4. ' (' → logprob: -13.500234603881836
    5. '(
' → logprob: -14.125234603881836
    6. ')' → logprob: -16.375234603881836
    7. '
' → logprob: -17.000234603881836
    8. '\(' → logprob: -17.000234603881836
    9. '```' → logprob: -17.125234603881836
    10. '(

' → logprob: -18.125234603881836

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029995047952979803
    2. ' ,' → logprob: -8.875300407409668
    3. 'angle' → logprob: -9.000300407409668
    4. '(angle' → logprob: -10.500300407409668
    5. ' angle' → logprob: -12.625300407409668
    6. ',x' → logprob: -13.375300407409668
    7. ')' → logprob: -14.000300407409668
    8. '<|end|>' → logprob: -14.125300407409668
    9. ',
' → logprob: -14.500300407409668
    10. '_angle' → logprob: -15.625300407409668

Token 230: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.0297551192343235
    2. ' angle' → logprob: -3.529755115509033
    3. '(angle' → logprob: -12.404755592346191
    4. '.angle' → logprob: -15.029755592346191
    5. ')' → logprob: -15.904755592346191
    6. '_angle' → logprob: -17.279754638671875
    7. 'angler' → logprob: -17.904754638671875
    8. 'angel' → logprob: -18.154754638671875
    9. ' ' → logprob: -18.279754638671875
    10. '<|end|>' → logprob: -18.529754638671875

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.0590548703912646e-05
    2. ' ,' → logprob: -10.625030517578125
    3. ')' → logprob: -12.750030517578125
    4. ',t' → logprob: -13.375030517578125
    5. '           ' → logprob: -13.875030517578125
    6. '),' → logprob: -16.250030517578125
    7. 't' → logprob: -16.375030517578125
    8. ',x' → logprob: -16.500030517578125
    9. ',y' → logprob: -16.625030517578125
    10. '‌,' → logprob: -16.625030517578125

Token 232: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0024764856789261103
    2. ' t' → logprob: -6.002476692199707
    3. ')t' → logprob: -14.752476692199707
    4. ')' → logprob: -15.502476692199707
    5. '	t' → logprob: -16.12747573852539
    6. '   ' → logprob: -17.37747573852539
    7. '`t' → logprob: -18.50247573852539
    8. ' ' → logprob: -18.50247573852539
    9. '
' → logprob: -20.25247573852539
    10. '_t' → logprob: -20.75247573852539

Token 233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038208574056625366
    2. ')
' → logprob: -3.288208484649658
    3. '           ' → logprob: -8.788208961486816
    4. ')
' → logprob: -11.913208961486816
    5. ')

' → logprob: -12.288208961486816
    6. '       ' → logprob: -14.413208961486816
    7. ' )' → logprob: -14.663208961486816
    8. ')\' → logprob: -15.288208961486816
    9. '):
' → logprob: -15.288208961486816
    10. '),' → logprob: -15.413208961486816

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11371494829654694
    2. '<|end|>' → logprob: -2.3637149333953857
    3. '            
' → logprob: -5.113715171813965
    4. '
' → logprob: -5.988715171813965
    5. '  
' → logprob: -6.863715171813965
    6. '<|end|>' → logprob: -6.988715171813965
    7. ' 
' → logprob: -6.988715171813965
    8. ' if' → logprob: -7.238715171813965
    9. '       ' → logprob: -8.363715171813965
    10. ' ' → logprob: -8.613715171813965

Token 235: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03263905644416809
    2. '           ' → logprob: -4.282639026641846
    3. 'if' (adapté à ' if') → logprob: -4.282639026641846
    4. ' ' → logprob: -5.657639026641846
    5. ' 
' → logprob: -7.657639026641846
    6. '<|end|>' → logprob: -8.157639503479004
    7. ' ' → logprob: -9.657639503479004
    8. '            
' → logprob: -9.782639503479004
    9. ' x' → logprob: -9.907639503479004
    10. '            ' → logprob: -10.782639503479004

Token 236: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.028200577944517136
    2. ' in' → logprob: -3.778200626373291
    3. 'y' → logprob: -5.403200626373291
    4. 'in' → logprob: -8.278200149536133
    5. ' ' → logprob: -9.403200149536133
    6. ' egg' → logprob: -10.278200149536133
    7. ' math' → logprob: -11.090700149536133
    8. '   ' → logprob: -11.778200149536133
    9. ' (' → logprob: -11.778200149536133
    10. '    ' → logprob: -11.840700149536133

Token 237: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1880558878183365
    2. '<' → logprob: -2.313055992126465
    3. ' <=' → logprob: -2.688055992126465
    4. '<=' → logprob: -5.438055992126465
    5. '<|end|>' → logprob: -9.313055992126465
    6. ' ' → logprob: -11.563055992126465
    7. '[' → logprob: -12.438055992126465
    8. ')' → logprob: -13.063055992126465
    9. ' ' → logprob: -13.313055992126465
    10. ')<=' → logprob: -13.938055992126465

Token 238: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005930813029408455
    2. ' ' → logprob: -5.1309309005737305
    3. ' -' → logprob: -14.00593090057373
    4. '-' → logprob: -14.38093090057373
    5. '=' → logprob: -15.19343090057373
    6. '<|end|>' → logprob: -15.75593090057373
    7. '   ' → logprob: -16.443429946899414
    8. '1' → logprob: -16.630929946899414
    9. ' ' → logprob: -16.818429946899414
    10. '۰' → logprob: -17.505929946899414

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.363617962459102e-05
    2. ' ' → logprob: -9.500083923339844
    3. '-' → logprob: -11.875083923339844
    4. ' -' → logprob: -13.750083923339844
    5. '=' → logprob: -15.187583923339844
    6. '1' → logprob: -15.875083923339844
    7. '<|end|>' → logprob: -16.687583923339844
    8. '۰' → logprob: -17.125083923339844
    9. '.' → logprob: -18.437583923339844
    10. ')' → logprob: -18.437583923339844

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29497888684272766
    2. ' or' → logprob: -1.7949788570404053
    3. '           ' → logprob: -2.9199788570404053
    4. ':
' → logprob: -3.9199788570404053
    5. '               ' → logprob: -4.294979095458984
    6. ' and' → logprob: -6.544979095458984
    7. ',' → logprob: -8.919979095458984
    8. ':return' → logprob: -9.294979095458984
    9. '<|end|>' → logprob: -10.294979095458984
    10. '       ' → logprob: -10.419979095458984

Token 241: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034356580581516027
    2. '           ' → logprob: -5.8784356117248535
    3. ':
' → logprob: -9.003436088562012
    4. '
' → logprob: -9.253436088562012
    5. ' or' → logprob: -9.253436088562012
    6. ':' → logprob: -9.878436088562012
    7. '                
' → logprob: -10.003436088562012
    8. ' break' → logprob: -10.128436088562012
    9. ',' → logprob: -10.128436088562012
    10. '\n' → logprob: -10.628436088562012

Token 242: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43143895268440247
    2. '           ' → logprob: -1.93143892288208
    3. ' break' → logprob: -1.93143892288208
    4. 'break' (adapté à ' break') → logprob: -2.80643892288208
    5. '	break' → logprob: -10.431439399719238
    6. '            
' → logprob: -10.806439399719238
    7. '                   ' → logprob: -11.056439399719238
    8. '            ' → logprob: -11.431439399719238
    9. '                
' → logprob: -11.806439399719238
    10. '0' → logprob: -11.806439399719238

Token 243: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6409357786178589
    2. '<|end|>' → logprob: -1.2659357786178589
    3. '
' → logprob: -2.7659358978271484
    4. '            
' → logprob: -2.8909358978271484
    5. ' 
' → logprob: -3.2659358978271484
    6. '  
' → logprob: -3.6409358978271484
    7. '    
' → logprob: -6.015935897827148
    8. '<|end|>' → logprob: -6.640935897827148
    9. '\n' → logprob: -7.265935897827148
    10. '           
' → logprob: -7.390935897827148

Token 244: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13832718133926392
    2. ' if' → logprob: -2.388327121734619
    3. ' ' → logprob: -4.138327121734619
    4. '<|end|>' → logprob: -4.513327121734619
    5. ' 
' → logprob: -5.388327121734619
    6. '            
' → logprob: -6.013327121734619
    7. ' x' → logprob: -7.388327121734619
    8. ' ' → logprob: -7.513327121734619
    9. '            ' → logprob: -7.513327121734619
    10. ',' → logprob: -7.763327121734619

Token 246: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1275499314069748
    2. 'in' → logprob: -2.127549886703491
    3. ' (' → logprob: -8.25255012512207
    4. ' ' → logprob: -9.62755012512207
    5. '   ' → logprob: -9.75255012512207
    6. 'x' → logprob: -9.75255012512207
    7. '(in' → logprob: -10.25255012512207
    8. ' x' → logprob: -10.50255012512207
    9. '(' → logprob: -10.62755012512207
    10. ' not' → logprob: -11.12755012512207

Token 247: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -0.0015431918436661363
    2. 'ob' → logprob: -6.501543045043945
    3. '(ob' → logprob: -10.626543045043945
    4. '_obs' → logprob: -12.501543045043945
    5. '_' → logprob: -13.001543045043945
    6. ' obstacle' → logprob: -13.376543045043945
    7. ' ' → logprob: -13.626543045043945
    8. '(x' → logprob: -13.751543045043945
    9. ' _' → logprob: -14.001543045043945
    10. '	ob' → logprob: -14.251543045043945

Token 248: 'stacle' (ID: 69123)
  Prédit: 'stacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacle' → logprob: -4.1557283111615106e-05
    2. 'st' → logprob: -10.250041961669922
    3. 'stack' → logprob: -12.875041961669922
    4. 'stacles' → logprob: -13.625041961669922
    5. '_' → logprob: -14.500041961669922
    6. 's' → logprob: -14.625041961669922
    7. 'stance' → logprob: -14.625041961669922
    8. '[' → logprob: -15.375041961669922
    9. 'stable' → logprob: -16.000041961669922
    10. 'stal' → logprob: -16.375041961669922

Token 249: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014124833978712559
    2. '(' → logprob: -4.389124870300293
    3. '(int' → logprob: -6.514124870300293
    4. ' (' → logprob: -9.014124870300293
    5. '(round' → logprob: -12.514124870300293
    6. '(
' → logprob: -13.264124870300293
    7. 'x' → logprob: -13.389124870300293
    8. '((' → logprob: -13.889124870300293
    9. 'int' → logprob: -14.764124870300293
    10. '(X' → logprob: -14.889124870300293

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010541265364736319
    2. ' ,' → logprob: -7.626054286956787
    3. ',y' → logprob: -8.501053810119629
    4. '<|end|>' → logprob: -8.626053810119629
    5. ',x' → logprob: -8.876053810119629
    6. ' ' → logprob: -11.876053810119629
    7. ')' → logprob: -12.251053810119629
    8. ',user' → logprob: -12.876053810119629
    9. ',
' → logprob: -13.001053810119629
    10. '<|end|>' → logprob: -13.126053810119629

Token 251: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.012516365386545658
    2. ' y' → logprob: -4.387516498565674
    3. 'Y' → logprob: -13.512516021728516
    4. '           ' → logprob: -13.637516021728516
    5. 'x' → logprob: -14.137516021728516
    6. ',' → logprob: -14.262516021728516
    7. '0' → logprob: -14.637516021728516
    8. '<|end|>' → logprob: -14.762516021728516
    9. ',y' → logprob: -14.887516021728516
    10. '   ' → logprob: -14.887516021728516

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003975416184403002
    2. ' ,' → logprob: -8.250397682189941
    3. '(ob' → logprob: -9.125397682189941
    4. 'ob' → logprob: -11.500397682189941
    5. ',
' → logprob: -11.750397682189941
    6. '           ' → logprob: -12.875397682189941
    7. ')' → logprob: -14.125397682189941
    8. '

' → logprob: -14.250397682189941
    9. ',

' → logprob: -14.375397682189941
    10. '):' → logprob: -14.500397682189941

Token 253: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.004634353332221508
    2. ' obstacles' → logprob: -5.379634380340576
    3. '(ob' → logprob: -12.129633903503418
    4. ')' → logprob: -12.629633903503418
    5. ' ob' → logprob: -13.254633903503418
    6. 'obs' → logprob: -13.629633903503418
    7. '	ob' → logprob: -13.629633903503418
    8. '
' → logprob: -15.254633903503418
    9. '.ob' → logprob: -15.754633903503418
    10. '_ob' → logprob: -15.879633903503418

Token 254: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17203019559383392
    2. '):
' → logprob: -2.422030210494995
    3. ')' → logprob: -2.672030210494995
    4. ' or' → logprob: -10.297030448913574
    5. '           ' → logprob: -10.422030448913574
    6. '):
' → logprob: -10.422030448913574
    7. ' ):' → logprob: -10.422030448913574
    8. '):

' → logprob: -10.922030448913574
    9. ':' → logprob: -11.172030448913574
    10. ')==' → logprob: -11.547030448913574

Token 255: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032901321537792683
    2. ' return' → logprob: -6.628290176391602
    3. '           ' → logprob: -6.878290176391602
    4. '                
' → logprob: -7.253290176391602
    5. '            
' → logprob: -8.878290176391602
    6. '    
' → logprob: -11.378290176391602
    7. 'return' → logprob: -11.378290176391602
    8. '  
' → logprob: -11.628290176391602
    9. ' 
' → logprob: -11.753290176391602
    10. '                   ' → logprob: -11.753290176391602

Token 256: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.24646882712841034
    2. 'can' (adapté à ' can') → logprob: -2.1214687824249268
    3. '               ' → logprob: -2.3714687824249268
    4. ' break' → logprob: -5.996469020843506
    5. ' return' → logprob: -6.371469020843506
    6. '           ' → logprob: -7.496469020843506
    7. 'break' → logprob: -8.371468544006348
    8. 'return' → logprob: -9.121468544006348
    9. '	can' → logprob: -9.871468544006348
    10. '                   ' → logprob: -9.871468544006348

Token 257: '_drop' (ID: 51142)
  Prédit: '_drop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_drop' → logprob: -0.000387535837944597
    2. 'drop' → logprob: -8.625387191772461
    3. ' drop' → logprob: -9.250387191772461
    4. '_break' → logprob: -9.875387191772461
    5. '_DROP' → logprob: -11.125387191772461
    6. '_continue' → logprob: -12.125387191772461
    7. '-drop' → logprob: -12.125387191772461
    8. '_d' → logprob: -12.250387191772461
    9. '_dropout' → logprob: -12.250387191772461
    10. '_' → logprob: -12.375387191772461

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10056172311306
    2. ' =' → logprob: -2.3505616188049316
    3. '=False' → logprob: -7.975561618804932
    4. '=True' → logprob: -11.60056209564209
    5. ' ' → logprob: -13.97556209564209
    6. '=false' → logprob: -15.10056209564209
    7. '_break' → logprob: -15.72556209564209
    8. 'break' → logprob: -15.85056209564209
    9. '=
' → logprob: -15.85056209564209
    10. '               ' → logprob: -16.475561141967773

Token 259: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0015023599844425917
    2. ' False' → logprob: -6.501502513885498
    3. '=False' → logprob: -17.751502990722656
    4. '(False' → logprob: -18.126502990722656
    5. '
' → logprob: -20.876502990722656
    6. 'false' → logprob: -21.251502990722656
    7. '.False' → logprob: -21.376502990722656
    8. 'F' → logprob: -21.501502990722656
    9. '_false' → logprob: -22.001502990722656
    10. 'True' → logprob: -22.126502990722656

Token 260: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04512118920683861
    2. '<|end|>' → logprob: -3.420121192932129
    3. '
' → logprob: -5.045121192932129
    4. '           ' → logprob: -6.420121192932129
    5. '                
' → logprob: -6.670121192932129
    6. '                   ' → logprob: -7.045121192932129
    7. '            
' → logprob: -8.420121192932129
    8. '<|end|>' → logprob: -8.920121192932129
    9. '                ' → logprob: -9.045121192932129
    10. '  
' → logprob: -9.170121192932129

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019449377432465553
    2. '<|end|>' → logprob: -6.7519450187683105
    3. '                
' → logprob: -8.251944541931152
    4. '                   ' → logprob: -8.626944541931152
    5. '                ' → logprob: -9.376944541931152
    6. '
' → logprob: -9.751944541931152
    7. '              ' → logprob: -10.001944541931152
    8. '           ' → logprob: -10.251944541931152
    9. '			' → logprob: -10.501944541931152
    10. '            
' → logprob: -11.876944541931152

Token 262: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.14745648205280304
    2. ' break' → logprob: -2.147456407546997
    3. '               ' → logprob: -3.897456407546997
    4. '           ' → logprob: -11.022456169128418
    5. '	break' → logprob: -11.772456169128418
    6. 'return' → logprob: -14.772456169128418
    7. '                   ' → logprob: -14.897456169128418
    8. ' ' → logprob: -15.772456169128418
    9. '_break' → logprob: -15.772456169128418
    10. '			' → logprob: -15.897456169128418

Token 263: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6601359248161316
    2. '           ' → logprob: -0.7851359248161316
    3. '            
' → logprob: -4.160135746002197
    4. '  
' → logprob: -5.410135746002197
    5. ' 
' → logprob: -5.535135746002197
    6. '    
' → logprob: -6.535135746002197
    7. '\n' → logprob: -7.910135746002197
    8. '   
' → logprob: -8.410136222839355
    9. '<|end|>' → logprob: -8.535136222839355
    10. '		' → logprob: -8.785136222839355

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044056313345208764
    2. '
' → logprob: -8.87544059753418
    3. '            
' → logprob: -9.00044059753418
    4. '		' → logprob: -9.12544059753418
    5. '<|end|>' → logprob: -10.75044059753418
    6. '  
' → logprob: -11.50044059753418
    7. ' 
' → logprob: -12.25044059753418
    8. '          ' → logprob: -12.37544059753418
    9. '	       ' → logprob: -12.37544059753418
    10. '    
' → logprob: -12.50044059753418

Token 265: ' t' (ID: 260)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004060947801917791
    2. 't' (adapté à ' t') → logprob: -6.254060745239258
    3. ' t' → logprob: -7.004060745239258
    4. ' if' → logprob: -8.504060745239258
    5. '   ' → logprob: -8.629060745239258
    6. 'if' → logprob: -8.629060745239258
    7. '
' → logprob: -8.629060745239258
    8. '		' → logprob: -9.254060745239258
    9. '            
' → logprob: -9.504060745239258
    10. '	t' → logprob: -9.754060745239258

Token 266: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4740789234638214
    2. '+=' → logprob: -0.974078893661499
    3. '+' → logprob: -13.599079132080078
    4. '=' → logprob: -14.849079132080078
    5. ']+=' → logprob: -15.224079132080078
    6. ' ' → logprob: -16.349079132080078
    7. '	' → logprob: -17.599079132080078
    8. '+=(' → logprob: -17.849079132080078
    9. '+="' → logprob: -17.974079132080078
    10. '+='' → logprob: -18.224079132080078

Token 267: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.02326015569269657
    2. ' step' → logprob: -3.7732601165771484
    3. '0' → logprob: -11.148260116577148
    4. ' ' → logprob: -16.14826011657715
    5. '	step' → logprob: -16.89826011657715
    6. '(step' → logprob: -17.02326011657715
    7. 'Step' → logprob: -17.77326011657715
    8. '1' → logprob: -18.27326011657715
    9. 'steps' → logprob: -18.39826011657715
    10. '_step' → logprob: -18.52326011657715

Token 268: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2257634848356247
    2. '       ' → logprob: -1.7257634401321411
    3. '        
' → logprob: -4.600763320922852
    4. '<|end|>' → logprob: -5.350763320922852
    5. '           ' → logprob: -5.475763320922852
    6. '    
' → logprob: -5.975763320922852
    7. ' 
' → logprob: -6.850763320922852
    8. '  
' → logprob: -8.100763320922852
    9. '            
' → logprob: -8.475763320922852
    10. '   ' → logprob: -8.600763320922852

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08888417482376099
    2. '
' → logprob: -3.463884115219116
    3. '<|end|>' → logprob: -3.588884115219116
    4. '        
' → logprob: -4.963884353637695
    5. ' 
' → logprob: -5.213884353637695
    6. '   ' → logprob: -5.213884353637695
    7. ' ' → logprob: -5.838884353637695
    8. '    
' → logprob: -6.338884353637695
    9. '           ' → logprob: -6.838884353637695
    10. '  
' → logprob: -7.088884353637695

Token 270: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20150971412658691
    2. '   ' → logprob: -2.701509714126587
    3. 'if' (adapté à ' if') → logprob: -2.701509714126587
    4. ' if' → logprob: -3.076509714126587
    5. '
' → logprob: -7.201509475708008
    6. ' ' → logprob: -7.576509475708008
    7. '        
' → logprob: -8.201509475708008
    8. '<|end|>' → logprob: -8.326509475708008
    9. '    
' → logprob: -8.951509475708008
    10. 'return' → logprob: -9.951509475708008

Token 271: ' not' (ID: 625)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0315525196492672
    2. ' not' → logprob: -3.90655255317688
    3. 'can' → logprob: -4.531552314758301
    4. ' ' → logprob: -9.6565523147583
    5. 'not' → logprob: -9.9065523147583
    6. ' x' → logprob: -11.1565523147583
    7. ' y' → logprob: -11.5315523147583
    8. '	can' → logprob: -11.5315523147583
    9. ' V' → logprob: -12.2815523147583
    10. 'x' → logprob: -12.2815523147583

Token 272: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0013278567930683494
    2. 'can' → logprob: -6.626327991485596
    3. '_can' → logprob: -13.626327514648438
    4. '	can' → logprob: -14.376327514648438
    5. ' continue' → logprob: -16.751327514648438
    6. '(can' → logprob: -17.376327514648438
    7. ' could' → logprob: -17.376327514648438
    8. ' ' → logprob: -18.626327514648438
    9. ' ' → logprob: -18.876327514648438
    10. '.can' → logprob: -18.876327514648438

Token 273: '_drop' (ID: 51142)
  Prédit: '_drop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_drop' → logprob: -2.2200749754119897e-06
    2. '_d' → logprob: -14.250001907348633
    3. 'drop' → logprob: -14.750001907348633
    4. '_' → logprob: -15.125001907348633
    5. '_can' → logprob: -15.375001907348633
    6. '_DROP' → logprob: -15.500001907348633
    7. '_continue' → logprob: -15.750001907348633
    8. '_dropout' → logprob: -17.125001907348633
    9. ' drop' → logprob: -17.250001907348633
    10. 'Drop' → logprob: -17.500001907348633

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01191165391355753
    2. ':
' → logprob: -4.511911869049072
    3. '           ' → logprob: -7.636911869049072
    4. '       ' → logprob: -8.511911392211914
    5. ' continue' → logprob: -9.261911392211914
    6. ' continues' → logprob: -9.886911392211914
    7. 'continue' → logprob: -11.636911392211914
    8. ':return' → logprob: -12.261911392211914
    9. ',' → logprob: -12.636911392211914
    10. '   ' → logprob: -13.136911392211914

Token 275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014114963822066784
    2. ' continue' → logprob: -4.389114856719971
    3. 'continue' → logprob: -6.889114856719971
    4. '
' → logprob: -8.514115333557129
    5. '	continue' → logprob: -9.389115333557129
    6. ' continues' → logprob: -9.639115333557129
    7. ':' → logprob: -9.639115333557129
    8. '	       ' → logprob: -10.264115333557129
    9. ':
' → logprob: -10.389115333557129
    10. '       ' → logprob: -10.514115333557129

Token 276: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.12392080575227737
    2. 'continue' (adapté à ' continue') → logprob: -2.6239209175109863
    3. '           ' → logprob: -3.1239209175109863
    4. '	continue' → logprob: -10.748920440673828
    5. '   ' → logprob: -11.748920440673828
    6. '_continue' → logprob: -11.748920440673828
    7. '       ' → logprob: -12.498920440673828
    8. 'contin' → logprob: -13.623920440673828
    9. ' continu' → logprob: -13.748920440673828
    10. '               ' → logprob: -13.748920440673828

Token 277: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11892759054899216
    2. '
' → logprob: -2.618927478790283
    3. '        
' → logprob: -3.743927478790283
    4. '<|end|>' → logprob: -4.243927478790283
    5. '  
' → logprob: -8.743927955627441
    6. '            
' → logprob: -8.868927955627441
    7. ',' → logprob: -8.993927955627441
    8. '           ' → logprob: -9.493927955627441
    9. '<|end|>' → logprob: -9.493927955627441
    10. '
' → logprob: -9.493927955627441

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009844583692029119
    2. '        
' → logprob: -7.5009846687316895
    3. '        ' → logprob: -9.375984191894531
    4. ' ' → logprob: -9.625984191894531
    5. '<|end|>' → logprob: -9.625984191894531
    6. ' for' → logprob: -10.000984191894531
    7. '           ' → logprob: -10.125984191894531
    8. '   ' → logprob: -10.875984191894531
    9. '
' → logprob: -10.875984191894531
    10. '```' → logprob: -11.125984191894531

Token 279: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.29931265115737915
    2. 'for' → logprob: -2.4243125915527344
    3. '       ' → logprob: -3.0493125915527344
    4. '#' (adapté à ' #') → logprob: -3.0493125915527344
    5. 'time' → logprob: -3.5493125915527344
    6. 's' → logprob: -3.7993125915527344
    7. 'x' → logprob: -4.924312591552734
    8. 'drop' → logprob: -5.424312591552734
    9. 'dt' → logprob: -6.424312591552734
    10. 'u' → logprob: -6.424312591552734

Token 280: ' If' (ID: 1843)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8344359993934631
    2. 'for' → logprob: -0.9594359993934631
    3. '#' → logprob: -1.9594359397888184
    4. 'time' → logprob: -4.459435939788818
    5. 'x' → logprob: -4.584435939788818
    6. 'drop' → logprob: -4.834435939788818
    7. ' for' → logprob: -5.209435939788818
    8. ' t' → logprob: -6.709435939788818
    9. 'step' → logprob: -6.709435939788818
    10. 'egg' → logprob: -7.334435939788818

Token 281: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.277633547782898
    2. ' can' → logprob: -1.777633547782898
    3. ' drop' → logprob: -2.0276336669921875
    4. 'drop' → logprob: -2.1526336669921875
    5. 'abs' → logprob: -2.7776336669921875
    6. 'X' → logprob: -3.5276336669921875
    7. 'True' → logprob: -3.5276336669921875
    8. ' abs' → logprob: -3.5276336669921875
    9. ' True' → logprob: -3.9026336669921875
    10. ' X' → logprob: -4.4026336669921875

Token 282: '_drop' (ID: 51142)
  Prédit: '_drop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_drop' → logprob: -0.012646670453250408
    2. 'drop' → logprob: -5.012646675109863
    3. ' drop' → logprob: -5.262646675109863
    4. '_hit' → logprob: -7.637646675109863
    5. '_continue' → logprob: -9.637646675109863
    6. '_' → logprob: -10.012646675109863
    7. 'hit' → logprob: -10.262646675109863
    8. ' hit' → logprob: -10.387646675109863
    9. '   ' → logprob: -10.637646675109863
    10. '_DROP' → logprob: -11.637646675109863

Token 283: ' is' (ID: 382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09518085420131683
    2. ':' → logprob: -2.4701807498931885
    3. ' at' → logprob: -5.845180988311768
    4. '       ' → logprob: -6.595180988311768
    5. ':
' → logprob: -7.720180988311768
    6. ' and' → logprob: -7.720180988311768
    7. ' for' → logprob: -7.970180988311768
    8. ' ,' → logprob: -8.34518051147461
    9. '   ' → logprob: -8.59518051147461
    10. 'and' → logprob: -10.34518051147461

Token 284: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03805216774344444
    2. ' True' → logprob: -3.2880520820617676
    3. 'False' → logprob: -11.788052558898926
    4. ' still' → logprob: -13.913052558898926
    5. 'still' → logprob: -13.913052558898926
    6. '=True' → logprob: -14.538052558898926
    7. 'true' → logprob: -15.038052558898926
    8. ' False' → logprob: -15.788052558898926
    9. ':' → logprob: -16.03805160522461
    10. '   ' → logprob: -16.66305160522461

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18528421223163605
    2. ':' → logprob: -1.8102842569351196
    3. '       ' → logprob: -5.43528413772583
    4. ' and' → logprob: -7.81028413772583
    5. ':
' → logprob: -8.060284614562988
    6. ' ,' → logprob: -8.685284614562988
    7. '<|end|>' → logprob: -9.310284614562988
    8. '.' → logprob: -9.685284614562988
    9. ',
' → logprob: -10.060284614562988
    10. ' at' → logprob: -10.810284614562988

Token 286: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7228485345840454
    2. ' t' → logprob: -1.9728485345840454
    3. ' return' → logprob: -2.472848415374756
    4. '           ' → logprob: -2.722848415374756
    5. 'for' → logprob: -2.847848415374756
    6. '       ' → logprob: -2.847848415374756
    7. 't' → logprob: -2.972848415374756
    8. '#' → logprob: -3.972848415374756
    9. ' time' → logprob: -4.597848415374756
    10. 'return' → logprob: -4.722848415374756

Token 287: ' to' (ID: 316)
  Prédit: ' dropping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dropping' → logprob: -0.4257424771785736
    2. 't' → logprob: -1.925742506980896
    3. ' for' → logprob: -3.1757423877716064
    4. ' to' → logprob: -3.4257423877716064
    5. '   ' → logprob: -3.6757423877716064
    6. 'drop' → logprob: -3.8007423877716064
    7. 'dro' → logprob: -4.0507426261901855
    8. ' drop' → logprob: -4.1757426261901855
    9. ' t' → logprob: -4.5507426261901855
    10. 'for' → logprob: -4.6757426261901855

Token 288: ' drop' (ID: 9440)
  Prédit: ' drop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' drop' → logprob: -0.33013007044792175
    2. ' for' → logprob: -2.830130100250244
    3. 'drop' → logprob: -2.955130100250244
    4. ' find' → logprob: -3.080130100250244
    5. 'simulate' → logprob: -3.330130100250244
    6. 't' → logprob: -3.955130100250244
    7. ' check' → logprob: -4.080130100250244
    8. ' simulate' → logprob: -4.580130100250244
    9. ' t' → logprob: -4.830130100250244
    10. 'for' → logprob: -4.830130100250244

Token 289: ' egg' (ID: 16102)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.045604944229126
    2. 'egg' → logprob: -1.420604944229126
    3. ' egg' → logprob: -1.920604944229126
    4. ' at' → logprob: -2.295604944229126
    5. ' t' → logprob: -3.045604944229126
    6. 'the' → logprob: -3.170604944229126
    7. 't' → logprob: -3.545604944229126
    8. ' an' → logprob: -4.795604705810547
    9. ' for' → logprob: -4.920604705810547
    10. 'time' → logprob: -5.045604705810547

Token 290: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14136721193790436
    2. ' at' → logprob: -2.516367197036743
    3. '           ' → logprob: -3.266367197036743
    4. ' for' → logprob: -5.141367435455322
    5. ',' → logprob: -5.891367435455322
    6. '<|end|>' → logprob: -6.266367435455322
    7. 't' → logprob: -7.016367435455322
    8. '   ' → logprob: -8.141366958618164
    9. '<|end|>' → logprob: -8.516366958618164
    10. ' t' → logprob: -8.766366958618164

Token 291: ' some' (ID: 1236)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2616191804409027
    2. 'any' → logprob: -2.1366190910339355
    3. '0' → logprob: -3.5116190910339355
    4. ' any' → logprob: -4.1366190910339355
    5. ' t' → logprob: -4.2616190910339355
    6. 'some' → logprob: -4.3866190910339355
    7. 'the' → logprob: -4.5116190910339355
    8. 'time' → logprob: -4.6366190910339355
    9. 'different' → logprob: -5.5116190910339355
    10. 'x' → logprob: -5.6366190910339355

Token 292: ' time' (ID: 1058)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.238363265991211
    2. 'time' → logprob: -1.238363265991211
    3. ' time' → logprob: -1.488363265991211
    4. ' t' → logprob: -2.363363265991211
    5. ' point' → logprob: -2.738363265991211
    6. 'point' → logprob: -3.363363265991211
    7. ' moment' → logprob: -7.738363265991211
    8. 'times' → logprob: -8.613363265991211
    9. ' times' → logprob: -9.113363265991211
    10. ' intermediate' → logprob: -9.613363265991211

Token 293: ' t' (ID: 260)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1165974885225296
    2. ' t' → logprob: -3.7415974140167236
    3. '       ' → logprob: -3.7415974140167236
    4. ' for' → logprob: -3.8665974140167236
    5. ',' → logprob: -4.491597652435303
    6. ' at' → logprob: -4.616597652435303
    7. ' with' → logprob: -5.991597652435303
    8. 't' → logprob: -6.241597652435303
    9. ' in' → logprob: -6.241597652435303
    10. ' to' → logprob: -6.241597652435303

Token 294: '_drop' (ID: 51142)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22689379751682281
    2. ',' → logprob: -2.726893901824951
    3. '<|end|>' → logprob: -3.351893901824951
    4. '           ' → logprob: -3.476893901824951
    5. ' =' → logprob: -3.976893901824951
    6. ' for' → logprob: -4.226893901824951
    7. '.' → logprob: -4.726893901824951
    8. '=' → logprob: -4.726893901824951
    9. '<|end|>' → logprob: -5.226893901824951
    10. '        ' → logprob: -5.726893901824951

Token 295: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13196511566638947
    2. ',' → logprob: -3.256965160369873
    3. ' for' → logprob: -3.256965160369873
    4. '<|end|>' → logprob: -4.506965160369873
    5. '.' → logprob: -4.756965160369873
    6. '=' → logprob: -5.256965160369873
    7. '	' → logprob: -5.381965160369873
    8. ' at' → logprob: -6.131965160369873
    9. '        
' → logprob: -6.381965160369873
    10. '<|end|>' → logprob: -6.381965160369873

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04563574492931366
    2. '<|end|>' → logprob: -3.67063570022583
    3. ',' → logprob: -4.92063570022583
    4. ' for' → logprob: -5.54563570022583
    5. '<|end|>' → logprob: -6.17063570022583
    6. ' at' → logprob: -7.04563570022583
    7. '=' → logprob: -7.17063570022583
    8. '	' → logprob: -7.29563570022583
    9. '        
' → logprob: -7.42063570022583
    10. ' =' → logprob: -7.67063570022583

Token 297: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.06396234035491943
    2. 'for' → logprob: -3.563962459564209
    3. ' t' → logprob: -4.313962459564209
    4. '       ' → logprob: -4.938962459564209
    5. ' for' → logprob: -4.938962459564209
    6. 'drop' → logprob: -5.688962459564209
    7. 'egg' → logprob: -6.563962459564209
    8. ' drop' → logprob: -8.43896198272705
    9. ' egg' → logprob: -8.68896198272705
    10. 'step' → logprob: -8.68896198272705

Token 298: ' =' (ID: 314)
  Prédit: '_drop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_drop' → logprob: -0.49561840295791626
    2. ' =' → logprob: -0.9956184029579163
    3. '=' → logprob: -3.8706183433532715
    4. 'drop' → logprob: -8.74561882019043
    5. '_' → logprob: -9.12061882019043
    6. 't' → logprob: -9.99561882019043
    7. '_t' → logprob: -10.49561882019043
    8. '_dropout' → logprob: -10.62061882019043
    9. '_d' → logprob: -11.24561882019043
    10. '_=' → logprob: -11.49561882019043

Token 299: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003882738295942545
    2. ' ' → logprob: -5.628882884979248
    3. 'step' → logprob: -8.25388240814209
    4. ' step' → logprob: -10.87888240814209
    5. 't' → logprob: -13.37888240814209
    6. '   ' → logprob: -14.00388240814209
    7. '1' → logprob: -15.44138240814209
    8. ' t' → logprob: -15.75388240814209
    9. '=' → logprob: -15.87888240814209
    10. 'start' → logprob: -16.066383361816406

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040528984391130507
    2. 'step' → logprob: -7.875405311584473
    3. 't' → logprob: -11.125405311584473
    4. ' ' → logprob: -11.875405311584473
    5. '   ' → logprob: -14.125405311584473
    6. '1' → logprob: -14.562905311584473
    7. '2' → logprob: -15.187905311584473
    8. ' step' → logprob: -15.437905311584473
    9. 'start' → logprob: -15.437905311584473
    10. '=' → logprob: -15.875405311584473

Token 301: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5227257609367371
    2. '<|end|>' → logprob: -1.0227258205413818
    3. '
' → logprob: -4.022725582122803
    4. ',' → logprob: -4.522725582122803
    5. '<|end|>' → logprob: -5.022725582122803
    6. '+' → logprob: -5.772725582122803
    7. ' while' → logprob: -6.147725582122803
    8. ';' → logprob: -6.522725582122803
    9. '   ' → logprob: -6.772725582122803
    10. 'while' → logprob: -7.397725582122803

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12078507244586945
    2. '<|end|>' → logprob: -2.2457849979400635
    3. '<|end|>' → logprob: -5.995785236358643
    4. '
' → logprob: -6.870785236358643
    5. ',' → logprob: -6.995785236358643
    6. ' while' → logprob: -7.370785236358643
    7. '   ' → logprob: -7.495785236358643
    8. '	' → logprob: -7.745785236358643
    9. '        
' → logprob: -7.995785236358643
    10. '	while' → logprob: -8.495784759521484

Token 303: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.19574974477291107
    2. ' while' → logprob: -1.9457497596740723
    3. '       ' → logprob: -4.070749759674072
    4. 'step' → logprob: -4.445749759674072
    5. ' step' → logprob: -5.320749759674072
    6. 't' → logprob: -7.195749759674072
    7. '	while' → logprob: -8.445749282836914
    8. '   ' → logprob: -8.945749282836914
    9. ' t' → logprob: -10.320749282836914
    10. '.' → logprob: -11.320749282836914

Token 304: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.281171053647995
    2. ' t' → logprob: -1.4061710834503174
    3. 'True' → logprob: -11.156170845031738
    4. ' True' → logprob: -13.031170845031738
    5. '   ' → logprob: -13.406170845031738
    6. '`t' → logprob: -14.281170845031738
    7. '(t' → logprob: -14.781170845031738
    8. '	t' → logprob: -15.031170845031738
    9. 'x' → logprob: -15.281170845031738
    10. 'y' → logprob: -15.281170845031738

Token 305: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.018246755003929138
    2. '<=' → logprob: -4.018246650695801
    3. ' <' → logprob: -9.2682466506958
    4. '<' → logprob: -13.1432466506958
    5. ' ' → logprob: -15.2682466506958
    6. ' ≤' → logprob: -16.393247604370117
    7. '<|end|>' → logprob: -16.893247604370117
    8. '*' → logprob: -17.518247604370117
    9. ')<=' → logprob: -17.643247604370117
    10. ' *' → logprob: -17.643247604370117

Token 306: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002476135268807411
    2. ' t' → logprob: -6.002476215362549
    3. 'T' → logprob: -15.50247573852539
    4. '`t' → logprob: -16.12747573852539
    5. '_t' → logprob: -16.37747573852539
    6. ' ' → logprob: -17.25247573852539
    7. 'step' → logprob: -17.25247573852539
    8. '	t' → logprob: -17.50247573852539
    9. '2' → logprob: -17.87747573852539
    10. '(t' → logprob: -18.25247573852539

Token 307: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00014072739577386528
    2. 'end' → logprob: -8.875141143798828
    3. '_' → logprob: -15.875141143798828
    4. 't' → logprob: -16.625141143798828
    5. '_END' → logprob: -16.625141143798828
    6. 'End' → logprob: -16.625141143798828
    7. '_step' → logprob: -16.750141143798828
    8. '_drop' → logprob: -17.125141143798828
    9. 's' → logprob: -17.500141143798828
    10. '   ' → logprob: -17.750141143798828

Token 308: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.313484787940979
    2. ':
' → logprob: -1.313484787940979
    3. ' and' → logprob: -9.063485145568848
    4. '   ' → logprob: -10.688485145568848
    5. ':

' → logprob: -10.688485145568848
    6. '+' → logprob: -11.313485145568848
    7. ' :
' → logprob: -11.313485145568848
    8. ':
' → logprob: -11.563485145568848
    9. ',' → logprob: -11.938485145568848
    10. ' :' → logprob: -12.188485145568848

Token 309: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24853621423244476
    2. '       ' → logprob: -2.1235361099243164
    3. '<|end|>' → logprob: -3.2485361099243164
    4. '   ' → logprob: -3.7485361099243164
    5. ',' → logprob: -4.373536109924316
    6. ':' → logprob: -4.748536109924316
    7. '<|end|>' → logprob: -5.248536109924316
    8. ' ' → logprob: -6.498536109924316
    9. '        
' → logprob: -6.498536109924316
    10. ' x' → logprob: -6.873536109924316

Token 310: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4825534224510193
    2. 'x' (adapté à ' x') → logprob: -0.9825534224510193
    3. '   ' → logprob: -5.232553482055664
    4. '       ' → logprob: -6.482553482055664
    5. '           ' → logprob: -7.607553482055664
    6. ' ' → logprob: -7.732553482055664
    7. '	x' → logprob: -8.357553482055664
    8. '    ' → logprob: -9.232553482055664
    9. ',' → logprob: -9.357553482055664
    10. ' ' → logprob: -9.857553482055664

Token 311: '_b' (ID: 1535)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002249933750135824
    2. ',y' → logprob: -9.500225067138672
    3. '<|end|>' → logprob: -9.750225067138672
    4. ' ,' → logprob: -10.000225067138672
    5. ',x' → logprob: -11.125225067138672
    6. '+' → logprob: -11.375225067138672
    7. '=' → logprob: -12.000225067138672
    8. '<|end|>' → logprob: -12.750225067138672
    9. 'x' → logprob: -13.000225067138672
    10. 't' → logprob: -13.875225067138672

Token 312: 'ird' (ID: 2716)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011549857445061207
    2. ',y' → logprob: -7.251154899597168
    3. ',x' → logprob: -8.376154899597168
    4. ' ,' → logprob: -9.001154899597168
    5. 'ird' → logprob: -10.126154899597168
    6. ',b' → logprob: -10.501154899597168
    7. '_,' → logprob: -12.501154899597168
    8. 'irds' → logprob: -12.501154899597168
    9. ',
' → logprob: -12.876154899597168
    10. ',e' → logprob: -13.376154899597168

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.147740689106286e-05
    2. ',y' → logprob: -10.00007152557373
    3. ' ,' → logprob: -10.62507152557373
    4. '<|end|>' → logprob: -14.25007152557373
    5. 'y' → logprob: -15.00007152557373
    6. '=' → logprob: -15.12507152557373
    7. '‌,' → logprob: -16.125070571899414
    8. ',x' → logprob: -16.250070571899414
    9. ',Y' → logprob: -16.375070571899414
    10. ' =' → logprob: -17.125070571899414

Token 314: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0021877337712794542
    2. ' y' → logprob: -6.127187728881836
    3. '<|end|>' → logprob: -14.002187728881836
    4. 'Y' → logprob: -14.752187728881836
    5. '=' → logprob: -15.252187728881836
    6. 'x' → logprob: -15.752187728881836
    7. ' ' → logprob: -15.752187728881836
    8. ',' → logprob: -15.877187728881836
    9. '	y' → logprob: -16.002187728881836
    10. '   ' → logprob: -16.002187728881836

Token 315: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.07054772228002548
    2. '=' → logprob: -3.3205478191375732
    3. ' =' → logprob: -3.4455478191375732
    4. 'bird' → logprob: -10.695548057556152
    5. '_' → logprob: -10.820548057556152
    6. '=_' → logprob: -11.320548057556152
    7. 'b' → logprob: -11.445548057556152
    8. '=b' → logprob: -11.695548057556152
    9. '_=' → logprob: -12.070548057556152
    10. '<|end|>' → logprob: -12.070548057556152

Token 316: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -6.754368223482743e-05
    2. 'bird' → logprob: -10.625067710876465
    3. ',' → logprob: -11.250067710876465
    4. '=' → logprob: -11.375067710876465
    5. '   ' → logprob: -12.250067710876465
    6. 'ir' → logprob: -12.750067710876465
    7. ' =' → logprob: -12.875067710876465
    8. ' ' → logprob: -13.000067710876465
    9. '```' → logprob: -13.625067710876465
    10. 'irds' → logprob: -13.875067710876465

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.57594233751297
    2. '=' → logprob: -0.82594233751297
    3. ',' → logprob: -13.075942039489746
    4. ')' → logprob: -14.825942039489746
    5. ' ' → logprob: -15.700942039489746
    6. '   ' → logprob: -15.950942039489746
    7. '<|end|>' → logprob: -16.700942993164062
    8. ' =)' → logprob: -17.825942993164062
    9. ')=' → logprob: -17.950942993164062
    10. 'x' → logprob: -18.075942993164062

Token 318: ' bird' (ID: 16189)
  Prédit: 'bird'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bird' → logprob: -0.1797478049993515
    2. ' bird' → logprob: -1.8047478199005127
    3. 'b' → logprob: -13.804747581481934
    4. '   ' → logprob: -14.304747581481934
    5. 'x' → logprob: -15.304747581481934
    6. 'Bird' → logprob: -15.429747581481934
    7. ' ' → logprob: -15.554747581481934
    8. 'bir' → logprob: -16.05474853515625
    9. 'birds' → logprob: -16.05474853515625
    10. '	b' → logprob: -16.42974853515625

Token 319: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -4.842555426876061e-06
    2. 'position' → logprob: -12.500004768371582
    3. 'Position' → logprob: -14.375004768371582
    4. '(V' → logprob: -16.0000057220459
    5. '(' → logprob: -16.3750057220459
    6. '_POSITION' → logprob: -16.6250057220459
    7. '_velocity' → logprob: -17.0000057220459
    8. '_positions' → logprob: -17.3750057220459
    9. ' ' → logprob: -17.5000057220459
    10. '_' → logprob: -17.5000057220459

Token 320: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.375004768371582
    3. 'V' → logprob: -15.125004768371582
    4. '(
' → logprob: -17.500003814697266
    5. ' (' → logprob: -19.750003814697266
    6. '```' → logprob: -20.125003814697266
    7. '
' → logprob: -20.500003814697266
    8. '(X' → logprob: -21.375003814697266
    9. '\(' → logprob: -21.375003814697266
    10. '<V' → logprob: -21.625003814697266

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.572941179503687e-05
    2. '(angle' → logprob: -10.375045776367188
    3. ' ,' → logprob: -11.500045776367188
    4. 'angle' → logprob: -12.875045776367188
    5. '(' → logprob: -15.000045776367188
    6. ',x' → logprob: -15.125045776367188
    7. ' angle' → logprob: -15.500045776367188
    8. '<|end|>' → logprob: -15.625045776367188
    9. ',
' → logprob: -15.750045776367188
    10. ')' → logprob: -16.250045776367188

Token 322: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.01815134845674038
    2. ' angle' → logprob: -4.01815128326416
    3. '(angle' → logprob: -13.76815128326416
    4. '.angle' → logprob: -16.268152236938477
    5. '_angle' → logprob: -16.768152236938477
    6. 'x' → logprob: -16.893152236938477
    7. ' ' → logprob: -17.143152236938477
    8. 'Angle' → logprob: -17.893152236938477
    9. 'answer' → logprob: -18.268152236938477
    10. ',' → logprob: -18.268152236938477

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ' ,' → logprob: -11.625011444091797
    3. ',t' → logprob: -12.875011444091797
    4. ')' → logprob: -17.375011444091797
    5. ',x' → logprob: -17.375011444091797
    6. '‌,' → logprob: -17.625011444091797
    7. 't' → logprob: -17.875011444091797
    8. ',
' → logprob: -18.500011444091797
    9. 's' → logprob: -19.625011444091797
    10. ' ' → logprob: -19.625011444091797

Token 324: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02054317481815815
    2. ' t' → logprob: -3.895543098449707
    3. 'x' → logprob: -14.395543098449707
    4. '0' → logprob: -15.395543098449707
    5. ',' → logprob: -15.645543098449707
    6. 'T' → logprob: -16.645544052124023
    7. ')' → logprob: -16.895544052124023
    8. 'y' → logprob: -17.395544052124023
    9. 'angle' → logprob: -17.395544052124023
    10. '`t' → logprob: -17.645544052124023

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03371739387512207
    2. ')
' → logprob: -3.408717393875122
    3. '           ' → logprob: -10.158717155456543
    4. ',' → logprob: -11.033717155456543
    5. ')
' → logprob: -11.783717155456543
    6. ')

' → logprob: -12.408717155456543
    7. '):
' → logprob: -13.908717155456543
    8. '),' → logprob: -13.908717155456543
    9. '       ' → logprob: -14.908717155456543
    10. ' )' → logprob: -14.908717155456543

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007612544111907482
    2. '<|end|>' → logprob: -5.382612705230713
    3. '            
' → logprob: -6.632612705230713
    4. ',' → logprob: -7.132612705230713
    5. ' 
' → logprob: -8.257612228393555
    6. '  
' → logprob: -8.882612228393555
    7. '
' → logprob: -9.132612228393555
    8. ' if' → logprob: -9.382612228393555
    9. '<|end|>' → logprob: -9.382612228393555
    10. '    
' → logprob: -10.507612228393555

Token 327: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6359143257141113
    2. '           ' → logprob: -1.3859143257141113
    3. ' if' → logprob: -1.7609143257141113
    4. 'dx' → logprob: -3.2609143257141113
    5. 'x' → logprob: -5.260914325714111
    6. ' dx' → logprob: -6.135914325714111
    7. 'distance' → logprob: -6.885914325714111
    8. '   ' → logprob: -7.135914325714111
    9. 'd' → logprob: -8.260913848876953
    10. ' ' → logprob: -8.635913848876953

Token 328: ' y' (ID: 342)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.3005562722682953
    2. 'abs' → logprob: -1.8005563020706177
    3. ' math' → logprob: -3.175556182861328
    4. '(abs' → logprob: -3.925556182861328
    5. ' (' → logprob: -4.050556182861328
    6. 'math' → logprob: -5.175556182861328
    7. '(math' → logprob: -5.925556182861328
    8. ' x' → logprob: -6.300556182861328
    9. ' y' → logprob: -6.300556182861328
    10. 'x' → logprob: -6.300556182861328

Token 329: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.250000953674316
    3. '<=' → logprob: -16.125001907348633
    4. ' <=' → logprob: -16.250001907348633
    5. '>=' → logprob: -16.500001907348633
    6. ' >=' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.250001907348633
    8. ',' → logprob: -18.000001907348633
    9. ' _' → logprob: -18.375001907348633
    10. '>' → logprob: -18.500001907348633

Token 330: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.0002683688362594694
    2. '<' → logprob: -9.25026798248291
    3. 'ir' → logprob: -9.75026798248291
    4. '>' → logprob: -10.12526798248291
    5. '_b' → logprob: -11.00026798248291
    6. '_' → logprob: -11.25026798248291
    7. 'irds' → logprob: -11.50026798248291
    8. 'bird' → logprob: -11.62526798248291
    9. ' <' → logprob: -12.25026798248291
    10. 'urd' → logprob: -12.50026798248291

Token 331: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.022698024287819862
    2. '<=' → logprob: -3.897697925567627
    3. ' >=' → logprob: -6.272697925567627
    4. ' <' → logprob: -8.897698402404785
    5. '>=' → logprob: -9.022698402404785
    6. '-' → logprob: -12.647698402404785
    7. '<|end|>' → logprob: -13.397698402404785
    8. '<' → logprob: -13.522698402404785
    9. ' -' → logprob: -14.022698402404785
    10. ' ' → logprob: -14.397698402404785

Token 332: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06047281250357628
    2. 'Y' → logprob: -2.9354727268218994
    3. ' ' → logprob: -5.4354729652404785
    4. ' Y' → logprob: -6.8104729652404785
    5. '=' → logprob: -9.43547248840332
    6. '1' → logprob: -11.06047248840332
    7. 'y' → logprob: -12.18547248840332
    8. ' =' → logprob: -13.43547248840332
    9. 'X' → logprob: -13.43547248840332
    10. '>' → logprob: -14.18547248840332

Token 333: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06223386526107788
    2. 'Y' → logprob: -2.8122339248657227
    3. ' ' → logprob: -8.812233924865723
    4. ' Y' → logprob: -9.562233924865723
    5. '1' → logprob: -10.562233924865723
    6. 'y' → logprob: -11.687233924865723
    7. '=' → logprob: -12.562233924865723
    8. 'X' → logprob: -13.062233924865723
    9. '-' → logprob: -14.187233924865723
    10. '	Y' → logprob: -14.749733924865723

Token 334: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37115535140037537
    2. ':
' → logprob: -1.2461553812026978
    3. ' or' → logprob: -3.871155261993408
    4. '           ' → logprob: -6.996155261993408
    5. '               ' → logprob: -7.871155261993408
    6. ' and' → logprob: -8.371155738830566
    7. '       ' → logprob: -10.371155738830566
    8. ',' → logprob: -10.996155738830566
    9. ':return' → logprob: -11.371155738830566
    10. '   ' → logprob: -11.496155738830566

Token 335: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021674320101737976
    2. '           ' → logprob: -4.021674156188965
    3. ':
' → logprob: -6.396674156188965
    4. ':' → logprob: -6.646674156188965
    5. ' or' → logprob: -8.146674156188965
    6. ',' → logprob: -9.396674156188965
    7. ' and' → logprob: -9.521674156188965
    8. '                
' → logprob: -11.021674156188965
    9. '       ' → logprob: -11.271674156188965
    10. ' break' → logprob: -11.521674156188965

Token 336: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.7641969919204712
    2. '               ' → logprob: -1.2641969919204712
    3. ' break' → logprob: -1.3891969919204712
    4. '           ' → logprob: -6.389196872711182
    5. '	break' → logprob: -7.389196872711182
    6. '   ' → logprob: -8.88919734954834
    7. '```' → logprob: -10.76419734954834
    8. 't' → logprob: -11.13919734954834
    9. '                   ' → logprob: -11.38919734954834
    10. '
' → logprob: -11.51419734954834

Token 337: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06686777621507645
    2. ':' → logprob: -3.5668678283691406
    3. '            
' → logprob: -4.441867828369141
    4. ':
' → logprob: -4.941867828369141
    5. '               ' → logprob: -5.441867828369141
    6. '
' → logprob: -5.566867828369141
    7. ',' → logprob: -5.941867828369141
    8. '<|end|>' → logprob: -6.566867828369141
    9. ' and' → logprob: -6.691867828369141
    10. '       ' → logprob: -7.316867828369141

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009620774653740227
    2. '<|end|>' → logprob: -7.750962257385254
    3. '            
' → logprob: -8.875962257385254
    4. '
' → logprob: -9.125962257385254
    5. ' if' → logprob: -9.750962257385254
    6. '   ' → logprob: -9.875962257385254
    7. '       ' → logprob: -10.250962257385254
    8. ',' → logprob: -10.875962257385254
    9. ' 
' → logprob: -11.000962257385254
    10. ' and' → logprob: -11.250962257385254

Token 339: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2611114978790283
    2. 'dx' → logprob: -1.3861114978790283
    3. ' if' → logprob: -1.7611114978790283
    4. ' dx' → logprob: -2.3861114978790283
    5. 'x' → logprob: -2.5111114978790283
    6. 'if' → logprob: -2.7611114978790283
    7. 'distance' → logprob: -3.7611114978790283
    8. ' x' → logprob: -3.8861114978790283
    9. 'egg' → logprob: -5.636111259460449
    10. ' distance' → logprob: -5.761111259460449

Token 340: ' Check' (ID: 6208)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.48069941997528076
    2. 'if' → logprob: -1.6056994199752808
    3. 'distance' → logprob: -2.3556995391845703
    4. 'dist' → logprob: -2.9806995391845703
    5. 'x' → logprob: -4.35569953918457
    6. 'for' → logprob: -4.98069953918457
    7. 'd' → logprob: -5.23069953918457
    8. ' if' → logprob: -5.85569953918457
    9. '           ' → logprob: -5.85569953918457
    10. ' dx' → logprob: -6.10569953918457

Token 341: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.017127571627497673
    2. 'if' → logprob: -4.392127513885498
    3. '           ' → logprob: -6.392127513885498
    4. 'abs' → logprob: -6.642127513885498
    5. ' abs' → logprob: -6.892127513885498
    6. ' for' → logprob: -8.642127990722656
    7. 'distance' → logprob: -8.892127990722656
    8. '(abs' → logprob: -9.267127990722656
    9. ' (' → logprob: -9.642127990722656
    10. ' distance' → logprob: -10.392127990722656

Token 342: ' bird' (ID: 16189)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.30733975768089294
    2. ' abs' → logprob: -2.057339668273926
    3. '(abs' → logprob: -2.057339668273926
    4. 'math' → logprob: -5.432339668273926
    5. '(math' → logprob: -6.057339668273926
    6. ' (' → logprob: -6.682339668273926
    7. ' math' → logprob: -7.057339668273926
    8. '(x' → logprob: -9.057339668273926
    9. 'x' → logprob: -9.932339668273926
    10. '(X' → logprob: -12.182339668273926

Token 343: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.21897345781326294
    2. 'is' → logprob: -2.468973398208618
    3. 'x' → logprob: -2.968973398208618
    4. ' at' → logprob: -3.468973398208618
    5. ' can' → logprob: -4.718973636627197
    6. 'at' → logprob: -4.968973636627197
    7. '_x' → logprob: -5.718973636627197
    8. 'can' → logprob: -5.843973636627197
    9. '_position' → logprob: -6.593973636627197
    10. ' has' → logprob: -6.718973636627197

Token 344: ' inside' (ID: 6772)
  Prédit: 'close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'close' → logprob: -0.2744680643081665
    2. ' close' → logprob: -1.5244680643081665
    3. 'near' → logprob: -5.274467945098877
    4. 'within' → logprob: -5.274467945098877
    5. ' at' → logprob: -5.524467945098877
    6. ' within' → logprob: -5.774467945098877
    7. ' near' → logprob: -6.149467945098877
    8. 'at' → logprob: -7.149467945098877
    9. ' sufficiently' → logprob: -7.399467945098877
    10. 's' → logprob: -7.649467945098877

Token 345: ' any' (ID: 1062)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.8572084903717041
    2. '(ob' → logprob: -1.107208490371704
    3. 'any' → logprob: -2.982208490371704
    4. 'the' → logprob: -3.357208490371704
    5. 'an' → logprob: -3.357208490371704
    6. '(x' → logprob: -3.857208490371704
    7. '(' → logprob: -3.982208490371704
    8. ' any' → logprob: -4.107208251953125
    9. 'for' → logprob: -4.357208251953125
    10. ' the' → logprob: -4.732208251953125

Token 346: ' obstacle' (ID: 57212)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.01801508106291294
    2. ' obstacle' → logprob: -4.268014907836914
    3. '(ob' → logprob: -5.643014907836914
    4. ' of' → logprob: -9.893014907836914
    5. ' (' → logprob: -10.018014907836914
    6. 'of' → logprob: -10.018014907836914
    7. '(' → logprob: -10.268014907836914
    8. 'pig' → logprob: -11.143014907836914
    9. ')' → logprob: -11.268014907836914
    10. '(
' → logprob: -11.393014907836914

Token 347: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16517946124076843
    2. ' and' → logprob: -2.540179491043091
    3. ' or' → logprob: -2.790179491043091
    4. ':' → logprob: -5.040179252624512
    5. '               ' → logprob: -6.665179252624512
    6. '<|end|>' → logprob: -6.665179252624512
    7. ',' → logprob: -6.915179252624512
    8. ' at' → logprob: -7.915179252624512
    9. 'and' → logprob: -8.040179252624512
    10. ' (' → logprob: -8.165179252624512

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08164633065462112
    2. ' and' → logprob: -3.20664644241333
    3. ' or' → logprob: -3.45664644241333
    4. '<|end|>' → logprob: -5.83164644241333
    5. '               ' → logprob: -7.33164644241333
    6. ',' → logprob: -7.33164644241333
    7. ':' → logprob: -7.70664644241333
    8. ' (' → logprob: -8.206645965576172
    9. ' if' → logprob: -8.331645965576172
    10. ' at' → logprob: -8.456645965576172

Token 349: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41334986686706543
    2. '           ' → logprob: -1.2883498668670654
    3. 'if' (adapté à ' if') → logprob: -2.7883498668670654
    4. '<|end|>' → logprob: -7.0383501052856445
    5. ' ' → logprob: -9.163350105285645
    6. '       ' → logprob: -10.038350105285645
    7. ' and' → logprob: -10.163350105285645
    8. ' for' → logprob: -10.163350105285645
    9. '   ' → logprob: -10.288350105285645
    10. '          ' → logprob: -10.663350105285645

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16698287427425385
    2. 'in' → logprob: -2.041982889175415
    3. ' not' → logprob: -3.791982889175415
    4. 'not' → logprob: -6.541982650756836
    5. ' ' → logprob: -11.666982650756836
    6. '	in' → logprob: -12.604482650756836
    7. ' ' → logprob: -12.791982650756836
    8. ' any' → logprob: -13.166982650756836
    9. 'x' → logprob: -14.979482650756836
    10. ' y' → logprob: -15.166982650756836

Token 351: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -7.584239938296378e-06
    2. '_' → logprob: -12.625007629394531
    3. 'ob' → logprob: -12.875007629394531
    4. '_b' → logprob: -14.250007629394531
    5. ' _' → logprob: -14.625007629394531
    6. '(x' → logprob: -14.875007629394531
    7. '_obs' → logprob: -16.12500762939453
    8. '(ob' → logprob: -16.62500762939453
    9. '_object' → logprob: -17.62500762939453
    10. '_OB' → logprob: -17.75000762939453

Token 352: 'stacle' (ID: 69123)
  Prédit: 'stacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacle' → logprob: -4.227250610711053e-05
    2. 'st' → logprob: -10.125041961669922
    3. 'stacles' → logprob: -14.375041961669922
    4. '_' → logprob: -15.000041961669922
    5. 'stance' → logprob: -15.000041961669922
    6. 'acle' → logprob: -15.375041961669922
    7. 'stable' → logprob: -15.875041961669922
    8. 'stack' → logprob: -16.250041961669922
    9. 'stal' → logprob: -16.250041961669922
    10. '_st' → logprob: -16.375041961669922

Token 353: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006820162292569876
    2. '(' → logprob: -5.006820201873779
    3. ' (' → logprob: -9.506819725036621
    4. '(
' → logprob: -10.631819725036621
    5. '(int' → logprob: -12.131819725036621
    6. 'x' → logprob: -14.881819725036621
    7. '((' → logprob: -15.881819725036621
    8. '(s' → logprob: -16.006820678710938
    9. ')' → logprob: -16.631820678710938
    10. '(float' → logprob: -16.756820678710938

Token 354: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.018343433737754822
    2. '(x' → logprob: -4.268343448638916
    3. '_,' → logprob: -6.393343448638916
    4. ',' → logprob: -6.518343448638916
    5. '(' → logprob: -7.768343448638916
    6. '_' → logprob: -7.893343448638916
    7. 'b' → logprob: -9.393342971801758
    8. '_(' → logprob: -10.643342971801758
    9. ' (' → logprob: -10.768342971801758
    10. '_t' → logprob: -11.268342971801758

Token 355: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.0011647457722574472
    2. '_b' → logprob: -7.00116491317749
    3. '_' → logprob: -8.501164436340332
    4. 'bird' → logprob: -11.126164436340332
    5. ',' → logprob: -11.376164436340332
    6. '_,' → logprob: -12.001164436340332
    7. '__' → logprob: -12.376164436340332
    8. '_t' → logprob: -13.501164436340332
    9. 'rd' → logprob: -14.001164436340332
    10. 'ir' → logprob: -14.126164436340332

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000665375788230449
    2. ' ,' → logprob: -7.375665187835693
    3. '+' → logprob: -10.750665664672852
    4. ',y' → logprob: -12.625665664672852
    5. ',
' → logprob: -12.875665664672852
    6. ' ' → logprob: -13.000665664672852
    7. '-' → logprob: -13.375665664672852
    8. ')' → logprob: -13.500665664672852
    9. ' +' → logprob: -13.500665664672852
    10. '<|end|>' → logprob: -14.125665664672852

Token 357: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1002098023891449
    2. ' y' → logprob: -2.3502097129821777
    3. ',' → logprob: -12.850210189819336
    4. ',y' → logprob: -15.100210189819336
    5. '	y' → logprob: -16.475210189819336
    6. 'x' → logprob: -16.600210189819336
    7. '   ' → logprob: -17.225210189819336
    8. ' ' → logprob: -17.725210189819336
    9. '    ' → logprob: -18.850210189819336
    10. 'Y' → logprob: -18.850210189819336

Token 358: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.002758272225037217
    2. ',' → logprob: -6.627758502960205
    3. 'bird' → logprob: -6.752758502960205
    4. ',_' → logprob: -9.377758026123047
    5. 'b' → logprob: -9.752758026123047
    6. ',b' → logprob: -9.877758026123047
    7. '_,' → logprob: -10.377758026123047
    8. 'ird' → logprob: -11.002758026123047
    9. ')' → logprob: -12.252758026123047
    10. ' ,' → logprob: -12.877758026123047

Token 359: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.03243435174226761
    2. 'rd' → logprob: -4.032434463500977
    3. ',' → logprob: -4.907434463500977
    4. 'ard' → logprob: -6.407434463500977
    5. 'ord' → logprob: -6.657434463500977
    6. 'd' → logprob: -6.782434463500977
    7. 'bird' → logprob: -7.532434463500977
    8. 't' → logprob: -7.657434463500977
    9. 'urd' → logprob: -8.407434463500977
    10. 'y' → logprob: -8.407434463500977

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007255369564518332
    2. ' ,' → logprob: -7.375725746154785
    3. ')' → logprob: -10.375725746154785
    4. ',x' → logprob: -11.125725746154785
    5. '(x' → logprob: -11.250725746154785
    6. '           ' → logprob: -11.750725746154785
    7. '):' → logprob: -12.500725746154785
    8. ',
' → logprob: -12.625725746154785
    9. '   ' → logprob: -12.875725746154785
    10. '+' → logprob: -13.125725746154785

Token 361: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.0016068668337538838
    2. '[(' → logprob: -7.0016069412231445
    3. ' obstacles' → logprob: -7.6266069412231445
    4. '[]' → logprob: -8.876606941223145
    5. '[])' → logprob: -10.001606941223145
    6. '(ob' → logprob: -11.126606941223145
    7. '[' → logprob: -12.126606941223145
    8. 'obs' → logprob: -14.376606941223145
    9. ')' → logprob: -14.501606941223145
    10. '	ob' → logprob: -15.126606941223145

Token 362: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.622361421585083
    2. '):
' → logprob: -0.872361421585083
    3. ')' → logprob: -3.122361421585083
    4. '           ' → logprob: -7.247361183166504
    5. ')==' → logprob: -7.872361183166504
    6. '               ' → logprob: -9.622361183166504
    7. '):

' → logprob: -9.872361183166504
    8. '):
' → logprob: -10.122361183166504
    9. ' or' → logprob: -11.497361183166504
    10. '          ' → logprob: -11.872361183166504

Token 363: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006581319961696863
    2. ':' → logprob: -5.5065813064575195
    3. ':
' → logprob: -6.2565813064575195
    4. '           ' → logprob: -8.63158130645752
    5. ',' → logprob: -9.25658130645752
    6. '):
' → logprob: -9.50658130645752
    7. '<|end|>' → logprob: -10.00658130645752
    8. ' or' → logprob: -10.38158130645752
    9. ':return' → logprob: -10.63158130645752
    10. '                
' → logprob: -10.63158130645752

Token 364: ' t' (ID: 260)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8517816066741943
    2. '           ' → logprob: -1.4767816066741943
    3. ' break' → logprob: -1.4767816066741943
    4. 'break' → logprob: -3.2267816066741943
    5. 't' (adapté à ' t') → logprob: -3.6017816066741943
    6. ' continue' → logprob: -4.226781845092773
    7. ' t' → logprob: -4.226781845092773
    8. 'continue' → logprob: -4.476781845092773
    9. '   ' → logprob: -4.976781845092773
    10. ' return' → logprob: -7.101781845092773

Token 365: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20757649838924408
    2. '+=' → logprob: -1.7075765132904053
    3. '=' → logprob: -5.332576274871826
    4. ' =' → logprob: -6.832576274871826
    5. 'break' → logprob: -9.082576751708984
    6. '+' → logprob: -9.832576751708984
    7. ' break' → logprob: -10.457576751708984
    8. '_break' → logprob: -11.082576751708984
    9. ' ' → logprob: -11.707576751708984
    10. ' -=' → logprob: -11.957576751708984

Token 366: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.07898056507110596
    2. ' step' → logprob: -2.5789804458618164
    3. '0' → logprob: -9.328980445861816
    4. ' ' → logprob: -13.453980445861816
    5. '(step' → logprob: -15.453980445861816
    6. '	step' → logprob: -15.578980445861816
    7. '1' → logprob: -16.203981399536133
    8. 'steps' → logprob: -17.203981399536133
    9. 'Step' → logprob: -17.578981399536133
    10. '   ' → logprob: -18.703981399536133

Token 367: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006601344794034958
    2. '           ' → logprob: -7.750659942626953
    3. '                   ' → logprob: -9.625659942626953
    4. '<|end|>' → logprob: -10.000659942626953
    5. 'continue' → logprob: -10.500659942626953
    6. '
' → logprob: -10.500659942626953
    7. ' continue' → logprob: -10.750659942626953
    8. '              ' → logprob: -11.500659942626953
    9. '                
' → logprob: -12.250659942626953
    10. '                ' → logprob: -12.625659942626953

Token 368: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01476413756608963
    2. '           ' → logprob: -4.264764308929443
    3. '<|end|>' → logprob: -8.014763832092285
    4. ' continue' → logprob: -9.139763832092285
    5. '                   ' → logprob: -10.139763832092285
    6. 'continue' → logprob: -10.389763832092285
    7. '       ' → logprob: -11.139763832092285
    8. ',' → logprob: -11.264763832092285
    9. '<|end|>' → logprob: -11.889763832092285
    10. '   ' → logprob: -11.889763832092285

Token 369: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5376622080802917
    2. '               ' → logprob: -1.0376622676849365
    3. ' continue' → logprob: -2.7876622676849365
    4. '	continue' → logprob: -10.912662506103516
    5. '           ' → logprob: -11.037662506103516
    6. '                   ' → logprob: -12.787662506103516
    7. '_continue' → logprob: -13.787662506103516
    8. 'continu' → logprob: -14.412662506103516
    9. 'contin' → logprob: -14.412662506103516
    10. '   ' → logprob: -14.537662506103516

Token 370: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02060951106250286
    2. '
' → logprob: -4.145609378814697
    3. '            
' → logprob: -5.645609378814697
    4. '  
' → logprob: -7.395609378814697
    5. '    
' → logprob: -8.520609855651855
    6. ' 
' → logprob: -9.395609855651855
    7. '   
' → logprob: -10.020609855651855
    8. '           
' → logprob: -10.020609855651855
    9. '<|end|>' → logprob: -11.395609855651855
    10. '          ' → logprob: -12.145609855651855

Token 371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022809267102275044
    2. '            
' → logprob: -9.125227928161621
    3. '
' → logprob: -10.000227928161621
    4. '<|end|>' → logprob: -10.250227928161621
    5. '       ' → logprob: -11.625227928161621
    6. '  
' → logprob: -11.875227928161621
    7. '          ' → logprob: -12.375227928161621
    8. 'if' → logprob: -13.000227928161621
    9. '    
' → logprob: -13.125227928161621
    10. '   ' → logprob: -13.125227928161621

Token 372: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11018826067447662
    2. 'if' → logprob: -2.8601882457733154
    3. ' if' → logprob: -3.8601882457733154
    4. 'x' → logprob: -4.2351884841918945
    5. '#' (adapté à ' #') → logprob: -5.2351884841918945
    6. ' x' → logprob: -6.4851884841918945
    7. ' #' → logprob: -6.6101884841918945
    8. ' egg' → logprob: -7.1101884841918945
    9. 'egg' → logprob: -7.1101884841918945
    10. '       ' → logprob: -7.7351884841918945

Token 373: ' Egg' (ID: 52711)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7445085644721985
    2. 'dx' → logprob: -1.1195085048675537
    3. '#' → logprob: -2.4945085048675537
    4. 'vx' → logprob: -3.6195085048675537
    5. 'egg' → logprob: -3.6195085048675537
    6. 'distance' → logprob: -3.9945085048675537
    7. 'for' → logprob: -4.119508743286133
    8. 'v' → logprob: -4.619508743286133
    9. 'if' → logprob: -5.744508743286133
    10. 't' → logprob: -6.119508743286133

Token 374: ' falls' (ID: 25709)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.02692272514104843
    2. '_drop' → logprob: -4.401922702789307
    3. 'x' → logprob: -5.151922702789307
    4. '_time' → logprob: -6.276922702789307
    5. '_can' → logprob: -6.776922702789307
    6. '_position' → logprob: -7.026922702789307
    7. '_t' → logprob: -7.026922702789307
    8. '_release' → logprob: -7.401922702789307
    9. '_pos' → logprob: -7.401922702789307
    10. '_dx' → logprob: -8.026923179626465

Token 375: ' straight' (ID: 10230)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.3532177209854126
    2. ' straight' → logprob: -1.8532177209854126
    3. ' down' → logprob: -1.9782177209854126
    4. 'from' → logprob: -1.9782177209854126
    5. 'down' → logprob: -2.103217601776123
    6. ' at' → logprob: -2.478217601776123
    7. 'straight' → logprob: -2.853217601776123
    8. ' freely' → logprob: -4.478217601776123
    9. ' immediately' → logprob: -5.228217601776123
    10. ' vertically' → logprob: -5.228217601776123

Token 376: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.001504982472397387
    2. ' down' → logprob: -6.501504898071289
    3. '           ' → logprob: -14.001504898071289
    4. '_down' → logprob: -14.376504898071289
    5. 'dow' → logprob: -15.126504898071289
    6. 'vertical' → logprob: -15.626504898071289
    7. 'from' → logprob: -16.25150489807129
    8. '               ' → logprob: -16.37650489807129
    9. 'do' → logprob: -16.37650489807129
    10. '0' → logprob: -16.37650489807129

Token 377: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07885905355215073
    2. ' at' → logprob: -2.9538590908050537
    3. ',' → logprob: -4.453858852386475
    4. ' from' → logprob: -5.203858852386475
    5. ' with' → logprob: -5.828858852386475
    6. '		' → logprob: -7.328858852386475
    7. 'from' → logprob: -7.703858852386475
    8. ' and' → logprob: -7.828858852386475
    9. '.' → logprob: -7.953858852386475
    10. '<|end|>' → logprob: -8.328859329223633

Token 378: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7756372094154358
    2. '(x' → logprob: -0.7756372094154358
    3. 'y' → logprob: -2.650637149810791
    4. 'the' → logprob: -5.525637149810791
    5. '(y' → logprob: -5.775637149810791
    6. ' (' → logprob: -7.275637149810791
    7. 'bird' → logprob: -7.775637149810791
    8. ' x' → logprob: -9.40063762664795
    9. '(' → logprob: -9.40063762664795
    10. 't' → logprob: -9.90063762664795

Token 379: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.2166411478538066e-05
    2. ' x' → logprob: -9.875052452087402
    3. 'int' → logprob: -14.750052452087402
    4. ')x' → logprob: -15.375052452087402
    5. '(x' → logprob: -16.125051498413086
    6. ')' → logprob: -17.000051498413086
    7. ',' → logprob: -17.875051498413086
    8. ',x' → logprob: -18.625051498413086
    9. '_x' → logprob: -19.000051498413086
    10. '	x' → logprob: -19.125051498413086

Token 380: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.054500666621607e-06
    2. ',' → logprob: -13.00000286102295
    3. 'x' → logprob: -15.75000286102295
    4. '_x' → logprob: -15.87500286102295
    5. 'b' → logprob: -16.000003814697266
    6. ')' → logprob: -16.250003814697266
    7. '_,' → logprob: -16.500003814697266
    8. 'bird' → logprob: -16.750003814697266
    9. ',_' → logprob: -16.875003814697266
    10. '_' → logprob: -17.000003814697266

Token 381: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.07286299765110016
    2. '_b' → logprob: -2.8228631019592285
    3. 'bird' → logprob: -4.5728631019592285
    4. ',' → logprob: -8.69786262512207
    5. '_' → logprob: -9.19786262512207
    6. ' bird' → logprob: -9.82286262512207
    7. '```' → logprob: -10.32286262512207
    8. ' ' → logprob: -11.32286262512207
    9. 'irds' → logprob: -11.44786262512207
    10. '_,' → logprob: -11.57286262512207

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000205566844670102
    2. ' ,' → logprob: -9.000205993652344
    3. ',y' → logprob: -10.500205993652344
    4. ')' → logprob: -10.500205993652344
    5. ',
' → logprob: -11.875205993652344
    6. '),' → logprob: -13.000205993652344
    7. ',b' → logprob: -13.125205993652344
    8. '_,' → logprob: -13.250205993652344
    9. '```' → logprob: -13.250205993652344
    10. ',x' → logprob: -13.375205993652344

Token 383: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04858771339058876
    2. ' y' → logprob: -3.0485877990722656
    3. ')' → logprob: -16.548587799072266
    4. ')y' → logprob: -16.673587799072266
    5. ',' → logprob: -16.798587799072266
    6. '	y' → logprob: -17.923587799072266
    7. ' ' → logprob: -18.673587799072266
    8. 'Y' → logprob: -18.923587799072266
    9. '           ' → logprob: -18.923587799072266
    10. ',y' → logprob: -19.048587799072266

Token 384: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00030829108436591923
    2. ')' → logprob: -8.6253080368042
    3. 'bird' → logprob: -9.1253080368042
    4. 'b' → logprob: -11.6253080368042
    5. '_' → logprob: -12.5003080368042
    6. ')_' → logprob: -13.2503080368042
    7. '_)' → logprob: -13.8753080368042
    8. ',' → logprob: -13.8753080368042
    9. '),' → logprob: -14.2503080368042
    10. '```' → logprob: -14.5003080368042

Token 385: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.10015113651752472
    2. 'rd' → logprob: -2.9751510620117188
    3. ')' → logprob: -3.3501510620117188
    4. 'ord' → logprob: -5.975151062011719
    5. ')
' → logprob: -6.350151062011719
    6. ',' → logprob: -7.100151062011719
    7. '),' → logprob: -7.475151062011719
    8. '_' → logprob: -7.600151062011719
    9. 'ard' → logprob: -7.600151062011719
    10. '```' → logprob: -7.725151062011719

Token 386: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013521412620320916
    2. ')
' → logprob: -7.126352310180664
    3. '):' → logprob: -8.001352310180664
    4. '           ' → logprob: -9.751352310180664
    5. ',' → logprob: -9.751352310180664
    6. '):
' → logprob: -10.126352310180664
    7. '),' → logprob: -10.501352310180664
    8. ').' → logprob: -11.501352310180664
    9. ')

' → logprob: -11.751352310180664
    10. ' )' → logprob: -12.751352310180664

Token 387: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00039968726923689246
    2. ',' → logprob: -8.000399589538574
    3. '            
' → logprob: -10.750399589538574
    4. ' at' → logprob: -11.250399589538574
    5. '       ' → logprob: -12.625399589538574
    6. ')' → logprob: -12.750399589538574
    7. '               ' → logprob: -12.875399589538574
    8. '.' → logprob: -12.875399589538574
    9. '          ' → logprob: -12.875399589538574
    10. '<|end|>' → logprob: -12.875399589538574

Token 388: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2759888470172882
    2. '           ' → logprob: -2.150988817214966
    3. 'time' → logprob: -2.775988817214966
    4. 'fall' → logprob: -4.150989055633545
    5. 'y' → logprob: -4.525989055633545
    6. 'egg' → logprob: -5.150989055633545
    7. 'tt' → logprob: -5.275989055633545
    8. 'for' → logprob: -5.525989055633545
    9. 's' → logprob: -5.775989055633545
    10. 'dt' → logprob: -6.275989055633545

Token 389: ' Check' (ID: 6208)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6318660378456116
    2. 'time' → logprob: -1.1318659782409668
    3. 'fall' → logprob: -3.006865978240967
    4. 'for' → logprob: -3.131865978240967
    5. 'egg' → logprob: -3.881865978240967
    6. '#' → logprob: -4.756865978240967
    7. 'g' → logprob: -4.881865978240967
    8. 's' → logprob: -6.506865978240967
    9. 'free' → logprob: -6.506865978240967
    10. 'y' → logprob: -6.631865978240967

Token 390: ' if' (ID: 538)
  Prédit: 'egg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egg' → logprob: -0.6438047289848328
    2. ' egg' → logprob: -1.3938047885894775
    3. ' if' → logprob: -2.2688047885894775
    4. '           ' → logprob: -2.7688047885894775
    5. 'if' → logprob: -3.6438047885894775
    6. 't' → logprob: -4.643804550170898
    7. 'x' → logprob: -5.018804550170898
    8. ' t' → logprob: -5.393804550170898
    9. ' x' → logprob: -6.643804550170898
    10. 'eg' → logprob: -6.643804550170898

Token 391: ' egg' (ID: 16102)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.5622583031654358
    2. 'y' → logprob: -1.312258243560791
    3. 'abs' → logprob: -2.437258243560791
    4. 'any' → logprob: -3.812258243560791
    5. ' y' → logprob: -4.062258243560791
    6. ' any' → logprob: -4.687258243560791
    7. ' abs' → logprob: -4.812258243560791
    8. ' Y' → logprob: -4.937258243560791
    9. 'x' → logprob: -5.562258243560791
    10. 'X' → logprob: -6.312258243560791

Token 392: ' hits' (ID: 21571)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5233869552612305
    2. '_can' → logprob: -2.0233869552612305
    3. '_hits' → logprob: -2.0233869552612305
    4. '_x' → logprob: -2.8983869552612305
    5. ' can' → logprob: -3.1483869552612305
    6. 'x' → logprob: -4.8983869552612305
    7. 'hits' → logprob: -4.8983869552612305
    8. '_y' → logprob: -5.0233869552612305
    9. 'y' → logprob: -5.5233869552612305
    10. 's' → logprob: -5.7733869552612305

Token 393: ' pig' (ID: 24819)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.1390573978424072
    2. 'pig' → logprob: -1.2640573978424072
    3. 'the' → logprob: -2.0140573978424072
    4. '(Y' → logprob: -3.0140573978424072
    5. ' the' → logprob: -3.1390573978424072
    6. ' (' → logprob: -3.2640573978424072
    7. 'abs' → logprob: -3.5140573978424072
    8. 'int' → logprob: -4.014057159423828
    9. ' pig' → logprob: -4.264057159423828
    10. 'X' → logprob: -4.389057159423828

Token 394: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007091972976922989
    2. ' at' → logprob: -5.132091999053955
    3. '<|end|>' → logprob: -7.757091999053955
    4. '<|end|>' → logprob: -8.257091522216797
    5. '            
' → logprob: -8.632091522216797
    6. ',' → logprob: -9.007091522216797
    7. ':' → logprob: -10.257091522216797
    8. ' with' → logprob: -10.882091522216797
    9. '
' → logprob: -11.257091522216797
    10. '          ' → logprob: -11.757091522216797

Token 395: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1803114414215088
    2. ' (' → logprob: -1.3053114414215088
    3. '(X' → logprob: -2.180311441421509
    4. 'x' → logprob: -2.430311441421509
    5. '(int' → logprob: -2.555311441421509
    6. 'X' → logprob: -2.680311441421509
    7. '(' → logprob: -2.930311441421509
    8. 'int' → logprob: -4.30531120300293
    9. ' x' → logprob: -5.93031120300293
    10. ' X' → logprob: -6.18031120300293

Token 396: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.006719520781189203
    2. ' X' → logprob: -5.006719589233398
    3. ',' → logprob: -13.256719589233398
    4. 'x' → logprob: -14.006719589233398
    5. '
' → logprob: -14.381719589233398
    6. ')' → logprob: -14.506719589233398
    7. ' ' → logprob: -15.631719589233398
    8. '   ' → logprob: -16.5067195892334
    9. ',X' → logprob: -16.8817195892334
    10. ' x' → logprob: -17.0067195892334

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036439071409404278
    2. ' ,' → logprob: -5.628643989562988
    3. ' +' → logprob: -12.003643989562988
    4. ',Y' → logprob: -12.003643989562988
    5. ')' → logprob: -12.128643989562988
    6. ',
' → logprob: -12.378643989562988
    7. ',y' → logprob: -12.628643989562988
    8. '
' → logprob: -12.878643989562988
    9. ' ' → logprob: -13.378643989562988
    10. '<|end|>' → logprob: -13.503643989562988

Token 398: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0232466422021389
    2. ' Y' → logprob: -3.7732465267181396
    3. ',' → logprob: -14.398246765136719
    4. ',Y' → logprob: -15.773246765136719
    5. '	Y' → logprob: -15.898246765136719
    6. ' ' → logprob: -16.14824676513672
    7. '<|end|>' → logprob: -16.27324676513672
    8. ')' → logprob: -16.52324676513672
    9. 'y' → logprob: -17.52324676513672
    10. '```' → logprob: -18.89824676513672

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12447672337293625
    2. '           ' → logprob: -2.499476671218872
    3. ')
' → logprob: -4.374476909637451
    4. '):' → logprob: -4.499476909637451
    5. '):
' → logprob: -4.624476909637451
    6. '):

' → logprob: -7.624476909637451
    7. ')

' → logprob: -8.374476432800293
    8. ' )' → logprob: -8.874476432800293
    9. '               ' → logprob: -8.874476432800293
    10. ',' → logprob: -8.999476432800293

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046033994294703007
    2. ',' → logprob: -8.500460624694824
    3. '            
' → logprob: -9.375460624694824
    4. '       ' → logprob: -9.875460624694824
    5. '<|end|>' → logprob: -10.125460624694824
    6. ' at' → logprob: -11.750460624694824
    7. ' and' → logprob: -11.875460624694824
    8. '<|end|>' → logprob: -11.875460624694824
    9. ' with' → logprob: -12.125460624694824
    10. '		' → logprob: -12.125460624694824

Token 401: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3763735890388489
    2. 'if' (adapté à ' if') → logprob: -1.751373529434204
    3. 'egg' → logprob: -3.001373529434204
    4. 'dx' → logprob: -3.876373529434204
    5. 'x' → logprob: -4.126373767852783
    6. 't' → logprob: -4.126373767852783
    7. 'distance' → logprob: -4.751373767852783
    8. 'dy' → logprob: -4.876373767852783
    9. '#' → logprob: -5.376373767852783
    10. 'y' → logprob: -5.501373767852783

Token 402: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.1597452610731125
    2. 'abs' → logprob: -2.034745216369629
    3. ' x' → logprob: -5.159745216369629
    4. 'x' → logprob: -5.534745216369629
    5. ' math' → logprob: -5.534745216369629
    6. '(abs' → logprob: -6.659745216369629
    7. 'math' → logprob: -7.159745216369629
    8. ' y' → logprob: -7.409745216369629
    9. ' (' → logprob: -7.909745216369629
    10. 'y' → logprob: -9.034745216369629

Token 403: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0007274442468769848
    2. '(X' → logprob: -7.875727653503418
    3. '(' → logprob: -8.000727653503418
    4. '(y' → logprob: -11.500727653503418
    5. '((' → logprob: -13.875727653503418
    6. ' (' → logprob: -15.125727653503418
    7. 'x' → logprob: -15.500727653503418
    8. '(Y' → logprob: -15.750727653503418
    9. '(t' → logprob: -16.1257266998291
    10. '(a' → logprob: -17.1257266998291

Token 404: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002644351334311068
    2. ' -' → logprob: -8.375264167785645
    3. '-' → logprob: -10.875264167785645
    4. '_' → logprob: -12.125264167785645
    5. '-b' → logprob: -12.750264167785645
    6. '_x' → logprob: -12.875264167785645
    7. 'b' → logprob: -13.375264167785645
    8. 'X' → logprob: -14.625264167785645
    9. 'x' → logprob: -14.875264167785645
    10. '_p' → logprob: -15.125264167785645

Token 405: 'ird' (ID: 2716)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.4291836619377136
    2. 'ird' → logprob: -1.0541837215423584
    3. 'bird' → logprob: -7.804183483123779
    4. '_' → logprob: -10.429183959960938
    5. '-b' → logprob: -10.554183959960938
    6. 'b' → logprob: -12.554183959960938
    7. 'irds' → logprob: -12.679183959960938
    8. 'ir' → logprob: -13.554183959960938
    9. ' bird' → logprob: -13.679183959960938
    10. '__' → logprob: -14.179183959960938

Token 406: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016039058566093445
    2. '-' → logprob: -4.14103889465332
    3. ' ' → logprob: -12.51603889465332
    4. ',' → logprob: -15.26603889465332
    5. '   ' → logprob: -15.39103889465332
    6. ' -
' → logprob: -15.76603889465332
    7. '-X' → logprob: -16.14103889465332
    8. '  ' → logprob: -16.39103889465332
    9. '<|end|>' → logprob: -16.89103889465332
    10. '[' → logprob: -17.14103889465332

Token 407: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.306760805164231e-05
    2. ' X' → logprob: -11.25001335144043
    3. '(X' → logprob: -20.62501335144043
    4. '   ' → logprob: -21.12501335144043
    5. ')' → logprob: -21.50001335144043
    6. '	X' → logprob: -22.00001335144043
    7. '>X' → logprob: -22.00001335144043
    8. 'x' → logprob: -22.12501335144043
    9. ' ' → logprob: -22.25001335144043
    10. '[' → logprob: -22.87501335144043

Token 408: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.166338137816638e-05
    2. ')<=' → logprob: -10.500031471252441
    3. ' )' → logprob: -13.250031471252441
    4. ')<' → logprob: -13.250031471252441
    5. ' <=' → logprob: -16.250032424926758
    6. ')
' → logprob: -16.375032424926758
    7. '')' → logprob: -16.500032424926758
    8. '")' → logprob: -17.000032424926758
    9. '[' → logprob: -17.125032424926758
    10. '0' → logprob: -17.125032424926758

Token 409: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.14058063924312592
    2. ')' → logprob: -2.265580654144287
    3. '<=' → logprob: -3.890580654144287
    4. ' <' → logprob: -5.640580654144287
    5. ')<=' → logprob: -5.765580654144287
    6. '<' → logprob: -8.890580177307129
    7. ' )' → logprob: -9.640580177307129
    8. ')<' → logprob: -10.765580177307129
    9. '0' → logprob: -11.765580177307129
    10. '<|end|>' → logprob: -12.265580177307129

Token 410: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0620550736784935
    2. '1' → logprob: -2.8120551109313965
    3. ' ' → logprob: -9.562054634094238
    4. '5' → logprob: -11.687054634094238
    5. '10' → logprob: -13.062054634094238
    6. '2' → logprob: -13.562054634094238
    7. '(' → logprob: -14.062054634094238
    8. 'step' → logprob: -14.312054634094238
    9. '
' → logprob: -14.437054634094238
    10. '   ' → logprob: -14.937054634094238

Token 411: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42874225974082947
    2. '1' → logprob: -1.0537422895431519
    3. ' ' → logprob: -10.428742408752441
    4. '10' → logprob: -12.428742408752441
    5. '5' → logprob: -12.803742408752441
    6. '(' → logprob: -13.303742408752441
    7. '2' → logprob: -14.303742408752441
    8. 'step' → logprob: -14.928742408752441
    9. '
' → logprob: -15.053742408752441
    10. '-' → logprob: -15.178742408752441

Token 412: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007322286255657673
    2. '0' → logprob: -5.632322311401367
    3. 'e' → logprob: -6.007322311401367
    4. '1' → logprob: -7.757322311401367
    5. ' ' → logprob: -8.132322311401367
    6. ':' → logprob: -8.882322311401367
    7. ' and' → logprob: -8.882322311401367
    8. ':
' → logprob: -9.632322311401367
    9. '   ' → logprob: -10.507322311401367
    10. '-' → logprob: -10.632322311401367

Token 413: '01' (ID: 2290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5746920704841614
    2. '5' → logprob: -0.9496920704841614
    3. '01' → logprob: -3.1996920108795166
    4. '2' → logprob: -5.574692249298096
    5. '001' → logprob: -5.949692249298096
    6. '05' → logprob: -6.699692249298096
    7. '000' → logprob: -6.824692249298096
    8. '3' → logprob: -7.449692249298096
    9. '6' → logprob: -9.574691772460938
    10. '4' → logprob: -10.074691772460938

Token 414: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.45250487327575684
    2. ':' → logprob: -1.3275048732757568
    3. ' and' → logprob: -2.577504873275757
    4. ':
' → logprob: -4.577505111694336
    5. '           ' → logprob: -4.827505111694336
    6. '       ' → logprob: -6.577505111694336
    7. '   ' → logprob: -7.202505111694336
    8. ')' → logprob: -7.327505111694336
    9. 'and' → logprob: -7.452505111694336
    10. ':return' → logprob: -7.577505111694336

Token 415: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12849891185760498
    2. ' or' → logprob: -2.5034990310668945
    3. '           ' → logprob: -3.6284990310668945
    4. ':' → logprob: -4.7534990310668945
    5. ':
' → logprob: -6.2534990310668945
    6. ' and' → logprob: -6.7534990310668945
    7. '                   ' → logprob: -9.503499031066895
    8. ' continue' → logprob: -9.503499031066895
    9. ':return' → logprob: -9.753499031066895
    10. '   ' → logprob: -9.878499031066895

Token 416: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5953731536865234
    2. 't' (adapté à ' t') → logprob: -0.9703731536865234
    3. '               ' → logprob: -3.3453731536865234
    4. '           ' → logprob: -3.4703731536865234
    5. '   ' → logprob: -6.345373153686523
    6. '	t' → logprob: -6.970373153686523
    7. '                   ' → logprob: -7.845373153686523
    8. ' ' → logprob: -9.220373153686523
    9. '
' → logprob: -10.470373153686523
    10. '       ' → logprob: -10.720373153686523

Token 417: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.003605416975915432
    2. '+=' → logprob: -5.628605365753174
    3. ' ' → logprob: -13.003605842590332
    4. '+' → logprob: -13.378605842590332
    5. ' +' → logprob: -14.878605842590332
    6. ']+=' → logprob: -15.253605842590332
    7. '            ' → logprob: -15.378605842590332
    8. ' ' → logprob: -15.628605842590332
    9. '    ' → logprob: -15.753605842590332
    10. '   ' → logprob: -16.378604888916016

Token 418: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.018150877207517624
    2. ' step' → logprob: -4.018150806427002
    3. '0' → logprob: -14.89315128326416
    4. ' ' → logprob: -14.89315128326416
    5. '	step' → logprob: -15.76815128326416
    6. '(step' → logprob: -16.893150329589844
    7. '1' → logprob: -17.143150329589844
    8. '   ' → logprob: -17.518150329589844
    9. 'Step' → logprob: -18.268150329589844
    10. 'steps' → logprob: -18.393150329589844

Token 419: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031160376965999603
    2. '           ' → logprob: -6.378116130828857
    3. '<|end|>' → logprob: -7.753116130828857
    4. ' continue' → logprob: -7.878116130828857
    5. 'continue' → logprob: -8.3781156539917
    6. '                   ' → logprob: -8.7531156539917
    7. '                
' → logprob: -10.5031156539917
    8. '              ' → logprob: -10.8781156539917
    9. '	           ' → logprob: -10.8781156539917
    10. '                       ' → logprob: -11.0031156539917

Token 420: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00026085900026373565
    2. '           ' → logprob: -8.750261306762695
    3. ' continue' → logprob: -10.750261306762695
    4. '<|end|>' → logprob: -11.000261306762695
    5. ',' → logprob: -11.250261306762695
    6. 'else' → logprob: -11.500261306762695
    7. 'continue' → logprob: -11.625261306762695
    8. ' else' → logprob: -12.250261306762695
    9. '	           ' → logprob: -12.375261306762695
    10. '                
' → logprob: -12.375261306762695

Token 421: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.015653865411877632
    2. '               ' → logprob: -4.26565408706665
    3. ' continue' → logprob: -6.51565408706665
    4. '	continue' → logprob: -12.390653610229492
    5. '           ' → logprob: -13.640653610229492
    6. '   ' → logprob: -13.890653610229492
    7. 'contin' → logprob: -14.265653610229492
    8. 't' → logprob: -14.515653610229492
    9. 'continu' → logprob: -14.515653610229492
    10. ' ' → logprob: -14.640653610229492

Token 422: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027692171279340982
    2. '            
' → logprob: -6.3777689933776855
    3. '
' → logprob: -7.1277689933776855
    4. 'if' → logprob: -9.127769470214844
    5. '```' → logprob: -10.002769470214844
    6. '    
' → logprob: -10.752769470214844
    7. 'y' → logprob: -11.252769470214844
    8. '  
' → logprob: -11.252769470214844
    9. '\n' → logprob: -11.752769470214844
    10. '\
' → logprob: -12.127769470214844

Token 423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005896442104130983
    2. 'if' → logprob: -5.38089656829834
    3. '            
' → logprob: -7.50589656829834
    4. ' if' → logprob: -7.88089656829834
    5. 'y' → logprob: -8.63089656829834
    6. '
' → logprob: -9.75589656829834
    7. '```' → logprob: -10.75589656829834
    8. '       ' → logprob: -11.00589656829834
    9. '          ' → logprob: -11.25589656829834
    10. '   ' → logprob: -11.38089656829834

Token 424: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3165733516216278
    2. 'if' (adapté à ' if') → logprob: -1.5665733814239502
    3. 'y' → logprob: -2.94157338142395
    4. ' if' → logprob: -5.566573143005371
    5. '            
' → logprob: -6.191573143005371
    6. '#' → logprob: -6.441573143005371
    7. '       ' → logprob: -7.191573143005371
    8. '
' → logprob: -7.691573143005371
    9. 'egg' → logprob: -7.691573143005371
    10. ' y' → logprob: -8.566573143005371

Token 425: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7129169702529907
    2. ' y' → logprob: -0.7129169702529907
    3. 'Y' → logprob: -4.837916851043701
    4. ' Y' → logprob: -4.962916851043701
    5. 'abs' → logprob: -5.837916851043701
    6. ' abs' → logprob: -6.587916851043701
    7. '(y' → logprob: -8.96291732788086
    8. ' ' → logprob: -9.33791732788086
    9. '   ' → logprob: -9.71291732788086
    10. '0' → logprob: -10.21291732788086

Token 426: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.816093228830141e-06
    2. '>=' → logprob: -13.87500286102295
    3. 'bird' → logprob: -14.50000286102295
    4. '<=' → logprob: -15.62500286102295
    5. '_y' → logprob: -15.62500286102295
    6. 'b' → logprob: -15.75000286102295
    7. 'Bird' → logprob: -15.87500286102295
    8. ' >=' → logprob: -16.250001907348633
    9. '_' → logprob: -16.375001907348633
    10. ' ' → logprob: -16.375001907348633

Token 427: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.02842237427830696
    2. '_b' → logprob: -3.6534223556518555
    3. 'bird' → logprob: -6.2784223556518555
    4. 'b' → logprob: -10.153422355651855
    5. 'ir' → logprob: -10.278422355651855
    6. '>' → logprob: -10.528422355651855
    7. ' ' → logprob: -10.653422355651855
    8. '_y' → logprob: -10.903422355651855
    9. 'irds' → logprob: -11.028422355651855
    10. 'Bird' → logprob: -11.403422355651855

Token 428: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.381050705909729
    2. ' <=' → logprob: -1.256050705909729
    3. '>=' → logprob: -3.7560505867004395
    4. '<=' → logprob: -4.7560505867004395
    5. ' ' → logprob: -10.381051063537598
    6. ' <' → logprob: -10.381051063537598
    7. '<|end|>' → logprob: -11.381051063537598
    8. ' -' → logprob: -11.756051063537598
    9. '-' → logprob: -11.881051063537598
    10. ' ==' → logprob: -12.006051063537598

Token 429: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.18211542069911957
    2. '=' → logprob: -1.8071154356002808
    3. ' Y' → logprob: -6.05711555480957
    4. 'y' → logprob: -10.80711555480957
    5. ' ' → logprob: -13.18211555480957
    6. ' =' → logprob: -13.93211555480957
    7. '0' → logprob: -14.05711555480957
    8. '>=' → logprob: -14.55711555480957
    9. '
' → logprob: -14.68211555480957
    10. '==' → logprob: -15.18211555480957

Token 430: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9632050395011902
    2. ':
' → logprob: -1.213205099105835
    3. ' +' → logprob: -2.088205099105835
    4. '+' → logprob: -2.088205099105835
    5. ' and' → logprob: -3.213205099105835
    6. '               ' → logprob: -4.213204860687256
    7. ' or' → logprob: -4.713204860687256
    8. 'and' → logprob: -5.588204860687256
    9. '           ' → logprob: -5.838204860687256
    10. ' -' → logprob: -6.838204860687256

Token 431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012455896940082312
    2. '           ' → logprob: -7.001245498657227
    3. ':
' → logprob: -9.126245498657227
    4. ':' → logprob: -9.126245498657227
    5. 't' → logprob: -9.751245498657227
    6. ' or' → logprob: -10.501245498657227
    7. ',' → logprob: -12.126245498657227
    8. ' t' → logprob: -12.876245498657227
    9. '   ' → logprob: -13.126245498657227
    10. ':return' → logprob: -13.126245498657227

Token 432: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.08426271378993988
    2. '           ' → logprob: -2.9592626094818115
    3. '               ' → logprob: -4.084262847900391
    4. ' t' → logprob: -4.584262847900391
    5. '       ' → logprob: -7.584262847900391
    6. '   ' → logprob: -7.709262847900391
    7. 'break' → logprob: -7.834262847900391
    8. ' break' → logprob: -7.959262847900391
    9. '                   ' → logprob: -9.20926284790039
    10. ' ' → logprob: -10.08426284790039

Token 433: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12770575284957886
    2. '+=' → logprob: -2.1277058124542236
    3. '           ' → logprob: -7.7527055740356445
    4. '+' → logprob: -8.627705574035645
    5. '          ' → logprob: -9.252705574035645
    6. '=' → logprob: -10.502705574035645
    7. ' +' → logprob: -11.502705574035645
    8. '        ' → logprob: -11.627705574035645
    9. '       ' → logprob: -12.377705574035645
    10. ' =' → logprob: -12.502705574035645

Token 434: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.10020752996206284
    2. ' step' → logprob: -2.350207567214966
    3. '	step' → logprob: -14.725207328796387
    4. '(step' → logprob: -15.850207328796387
    5. '0' → logprob: -16.100208282470703
    6. ' ' → logprob: -16.100208282470703
    7. '1' → logprob: -16.975208282470703
    8. '   ' → logprob: -17.725208282470703
    9. '.step' → logprob: -18.100208282470703
    10. 'Step' → logprob: -18.350208282470703

Token 435: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014704519708175212
    2. ' continue' → logprob: -9.750146865844727
    3. '           ' → logprob: -10.125146865844727
    4. 'continue' → logprob: -10.375146865844727
    5. '                   ' → logprob: -12.750146865844727
    6. '<|end|>' → logprob: -12.750146865844727
    7. ',' → logprob: -12.875146865844727
    8. '   ' → logprob: -13.500146865844727
    9. '       ' → logprob: -13.625146865844727
    10. '	           ' → logprob: -14.000146865844727

Token 436: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031258241506293416
    2. '           ' → logprob: -8.750312805175781
    3. ' continue' → logprob: -9.375312805175781
    4. 'continue' → logprob: -10.750312805175781
    5. ',' → logprob: -11.000312805175781
    6. '       ' → logprob: -11.750312805175781
    7. '<|end|>' → logprob: -11.750312805175781
    8. '                   ' → logprob: -13.125312805175781
    9. '	           ' → logprob: -13.250312805175781
    10. ' and' → logprob: -13.375312805175781

Token 437: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1914355307817459
    2. '               ' → logprob: -2.4414355754852295
    3. ' continue' → logprob: -2.4414355754852295
    4. '	continue' → logprob: -9.691435813903809
    5. 'break' → logprob: -10.566435813903809
    6. 't' → logprob: -11.066435813903809
    7. '           ' → logprob: -11.191435813903809
    8. '       ' → logprob: -11.691435813903809
    9. '   ' → logprob: -11.941435813903809
    10. '                   ' → logprob: -12.316435813903809

Token 438: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038748965598642826
    2. '            
' → logprob: -6.378874778747559
    3. '
' → logprob: -6.503874778747559
    4. 't' → logprob: -8.503874778747559
    5. 'return' → logprob: -8.753874778747559
    6. '```' → logprob: -9.128874778747559
    7. '<|end|>' → logprob: -10.628874778747559
    8. 'Egg' → logprob: -10.878874778747559
    9. 'egg' → logprob: -10.878874778747559
    10. 'if' → logprob: -11.003874778747559

Token 439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013391701504588127
    2. 't' → logprob: -7.876338958740234
    3. 'return' → logprob: -8.376338958740234
    4. '
' → logprob: -8.501338958740234
    5. 'if' → logprob: -8.626338958740234
    6. '            
' → logprob: -9.001338958740234
    7. 'egg' → logprob: -9.626338958740234
    8. 'y' → logprob: -9.876338958740234
    9. '```' → logprob: -10.251338958740234
    10. '       ' → logprob: -11.376338958740234

Token 440: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5851128101348877
    2. 't' → logprob: -2.2101128101348877
    3. 'egg' → logprob: -2.4601128101348877
    4. 'return' → logprob: -2.9601128101348877
    5. 'y' → logprob: -3.3351128101348877
    6. 'time' → logprob: -3.4601128101348877
    7. 'if' → logprob: -3.5851128101348877
    8. '#' (adapté à ' #') → logprob: -3.9601128101348877
    9. 'vy' → logprob: -4.085112571716309
    10. 'dy' → logprob: -4.335112571716309

Token 441: ' Egg' (ID: 52711)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.6810094714164734
    2. '#' → logprob: -1.1810095310211182
    3. 't' → logprob: -2.306009531021118
    4. 'return' → logprob: -3.556009531021118
    5. 'for' → logprob: -3.806009531021118
    6. 'g' → logprob: -4.556009292602539
    7. 'egg' → logprob: -4.556009292602539
    8. 'fall' → logprob: -5.431009292602539
    9. 'while' → logprob: -6.306009292602539
    10. '   ' → logprob: -6.806009292602539

Token 442: ' falls' (ID: 25709)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.9820289015769958
    2. 'fall' → logprob: -1.1070289611816406
    3. '_f' → logprob: -2.6070289611816406
    4. '_drop' → logprob: -2.9820289611816406
    5. 'time' → logprob: -3.1070289611816406
    6. 'drop' → logprob: -3.4820289611816406
    7. 'y' → logprob: -3.9820289611816406
    8. 'falls' → logprob: -4.107028961181641
    9. ' falls' → logprob: -4.357028961181641
    10. '_y' → logprob: -4.607028961181641

Token 443: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7140381932258606
    2. 'down' → logprob: -1.0890381336212158
    3. 'straight' → logprob: -2.089038133621216
    4. 'through' → logprob: -3.839038133621216
    5. 'to' → logprob: -5.089038372039795
    6. ' from' → logprob: -5.839038372039795
    7. ' straight' → logprob: -5.839038372039795
    8. 'at' → logprob: -5.964038372039795
    9. '           ' → logprob: -6.339038372039795
    10. 'and' → logprob: -6.589038372039795

Token 444: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008703920990228653
    2. ' y' → logprob: -4.758703708648682
    3. '(y' → logprob: -9.38370418548584
    4. ' (' → logprob: -13.50870418548584
    5. 't' → logprob: -13.88370418548584
    6. 'Y' → logprob: -14.25870418548584
    7. '   ' → logprob: -14.38370418548584
    8. '(' → logprob: -14.63370418548584
    9. 'the' → logprob: -15.13370418548584
    10. '	y' → logprob: -15.25870418548584

Token 445: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00040540905320085585
    2. 'bird' → logprob: -8.000405311584473
    3. 'b' → logprob: -10.000405311584473
    4. 'y' → logprob: -11.000405311584473
    5. '_y' → logprob: -13.375405311584473
    6. '=' → logprob: -13.625405311584473
    7. '```' → logprob: -14.250405311584473
    8. 't' → logprob: -14.500405311584473
    9. '	b' → logprob: -14.750405311584473
    10. ',' → logprob: -14.750405311584473

Token 446: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.23293977975845337
    2. '_b' → logprob: -1.7329397201538086
    3. 'bird' → logprob: -3.4829397201538086
    4. '_y' → logprob: -9.732939720153809
    5. '_' → logprob: -9.857939720153809
    6. 'y' → logprob: -9.857939720153809
    7. 'ir' → logprob: -10.607939720153809
    8. ' bird' → logprob: -10.857939720153809
    9. 'b' → logprob: -11.107939720153809
    10. '   ' → logprob: -11.357939720153809

Token 447: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.34672772884368896
    2. ' down' → logprob: -2.0967278480529785
    3. ',' → logprob: -2.7217278480529785
    4. '           ' → logprob: -3.0967278480529785
    5. 'to' → logprob: -3.8467278480529785
    6. 'down' → logprob: -3.9717278480529785
    7. ' at' → logprob: -4.3467278480529785
    8. ' downward' → logprob: -7.0967278480529785
    9. '<|end|>' → logprob: -7.7217278480529785
    10. ')' → logprob: -7.7217278480529785

Token 448: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0019289902411401272
    2. ' Y' → logprob: -6.251928806304932
    3. 'y' → logprob: -15.37692928314209
    4. '0' → logprob: -16.626928329467773
    5. '	Y' → logprob: -18.001928329467773
    6. ' y' → logprob: -18.251928329467773
    7. '
' → logprob: -19.126928329467773
    8. ' ' → logprob: -19.376928329467773
    9. '_Y' → logprob: -20.251928329467773
    10. '   ' → logprob: -20.251928329467773

Token 449: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014456817880272865
    2. ',' → logprob: -5.014456748962402
    3. '
' → logprob: -5.889456748962402
    4. ' at' → logprob: -6.389456748962402
    5. '            
' → logprob: -6.889456748962402
    6. ' with' → logprob: -7.139456748962402
    7. ' and' → logprob: -8.014456748962402
    8. ' while' → logprob: -8.889456748962402
    9. ',
' → logprob: -9.014456748962402
    10. '.' → logprob: -9.014456748962402

Token 450: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1422068178653717
    2. ' return' → logprob: -3.142206907272339
    3. 'return' → logprob: -3.267206907272339
    4. 'and' → logprob: -4.76720666885376
    5. 'while' → logprob: -4.76720666885376
    6. ' and' → logprob: -5.01720666885376
    7. ' so' → logprob: -5.51720666885376
    8. '               ' → logprob: -5.64220666885376
    9. ' while' → logprob: -5.76720666885376
    10. '#' → logprob: -6.01720666885376

Token 451: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44737204909324646
    2. ' if' → logprob: -1.4473720788955688
    3. '           ' → logprob: -2.9473719596862793
    4. 'egg' → logprob: -3.0723719596862793
    5. ' egg' → logprob: -4.697371959686279
    6. 'the' → logprob: -5.447371959686279
    7. 'eg' → logprob: -6.197371959686279
    8. 'down' → logprob: -6.322371959686279
    9. 'gravity' → logprob: -6.447371959686279
    10. ' the' → logprob: -6.572371959686279

Token 452: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.3022197484970093
    2. 'in' → logprob: -2.427219867706299
    3. ' any' → logprob: -2.552219867706299
    4. 'not' → logprob: -3.052219867706299
    5. 'there' → logprob: -3.427219867706299
    6. 'ob' → logprob: -5.802219867706299
    7. ' in' → logprob: -6.177219867706299
    8. 'the' → logprob: -6.177219867706299
    9. ' there' → logprob: -6.552219867706299
    10. ' not' → logprob: -6.552219867706299

Token 453: ' obstacle' (ID: 57212)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.03116423264145851
    2. ' obstacle' → logprob: -4.281164169311523
    3. ' obstacles' → logprob: -5.906164169311523
    4. 'for' → logprob: -6.031164169311523
    5. '(ob' → logprob: -6.281164169311523
    6. ' for' → logprob: -6.906164169311523
    7. '(' → logprob: -6.906164169311523
    8. ' (' → logprob: -6.906164169311523
    9. ')' → logprob: -7.156164169311523
    10. '(x' → logprob: -7.406164169311523

Token 454: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6114765405654907
    2. 'in' → logprob: -1.7364765405654907
    3. ' in' → logprob: -2.111476421356201
    4. '               ' → logprob: -2.236476421356201
    5. ',' → logprob: -3.236476421356201
    6. ':' → logprob: -3.236476421356201
    7. ' is' → logprob: -3.361476421356201
    8. ' below' → logprob: -3.361476421356201
    9. 'below' → logprob: -3.486476421356201
    10. '<|end|>' → logprob: -3.486476421356201

Token 455: ' between' (ID: 2870)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.024654733017086983
    2. '[(' → logprob: -4.274654865264893
    3. 'drop' → logprob: -6.274654865264893
    4. '(ob' → logprob: -6.274654865264893
    5. 'x' → logprob: -6.524654865264893
    6. 'between' → logprob: -6.899654865264893
    7. '(x' → logprob: -7.024654865264893
    8. 'the' → logprob: -7.149654865264893
    9. '[x' → logprob: -7.649654865264893
    10. ' obstacles' → logprob: -7.899654865264893

Token 456: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005145281553268433
    2. '<|end|>' → logprob: -6.505145072937012
    3. '            
' → logprob: -7.380145072937012
    4. ',' → logprob: -7.505145072937012
    5. ' at' → logprob: -7.630145072937012
    6. ' for' → logprob: -8.130145072937012
    7. ' in' → logprob: -8.380145072937012
    8. ':' → logprob: -8.630145072937012
    9. ' if' → logprob: -8.755145072937012
    10. ' (' → logprob: -8.755145072937012

Token 457: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1482144147157669
    2. '(x' → logprob: -2.148214340209961
    3. ' (' → logprob: -4.398214340209961
    4. ' x' → logprob: -5.648214340209961
    5. '(' → logprob: -5.898214340209961
    6. 'int' → logprob: -7.648214340209961
    7. 'the' → logprob: -7.773214340209961
    8. 'y' → logprob: -8.023214340209961
    9. '(int' → logprob: -8.273214340209961
    10. 'X' → logprob: -8.773214340209961

Token 458: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.6130725741386414
    2. ' =' → logprob: -1.3630726337432861
    3. '=' → logprob: -2.113072633743286
    4. ',' → logprob: -3.488072633743286
    5. '=x' → logprob: -3.863072633743286
    6. '           ' → logprob: -4.863072395324707
    7. 'x' → logprob: -4.988072395324707
    8. ')' → logprob: -5.738072395324707
    9. '       ' → logprob: -6.238072395324707
    10. '   ' → logprob: -6.488072395324707

Token 459: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.6496798992156982
    2. '_b' → logprob: -0.8996798992156982
    3. 'x' → logprob: -3.0246798992156982
    4. 'bird' → logprob: -4.524680137634277
    5. 'b' → logprob: -4.774680137634277
    6. '_x' → logprob: -6.524680137634277
    7. 'ir' → logprob: -8.024680137634277
    8. 'r' → logprob: -8.274680137634277
    9. '_' → logprob: -8.899680137634277
    10. '(x' → logprob: -9.649680137634277

Token 460: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004091342911124229
    2. ',' → logprob: -6.754091262817383
    3. '            
' → logprob: -7.004091262817383
    4. ':
' → logprob: -7.629091262817383
    5. ':' → logprob: -7.754091262817383
    6. '<|end|>' → logprob: -8.129091262817383
    7. ' and' → logprob: -8.254091262817383
    8. '
' → logprob: -9.629091262817383
    9. '          ' → logprob: -9.754091262817383
    10. ')' → logprob: -10.254091262817383

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002880337997339666
    2. '<|end|>' → logprob: -9.375288009643555
    3. ',' → logprob: -9.500288009643555
    4. '            
' → logprob: -9.625288009643555
    5. '       ' → logprob: -11.000288009643555
    6. '               ' → logprob: -11.625288009643555
    7. '<|end|>' → logprob: -12.000288009643555
    8. '	       ' → logprob: -12.125288009643555
    9. '          ' → logprob: -12.875288009643555
    10. '```' → logprob: -12.875288009643555

Token 462: ' hit' (ID: 7103)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06725572794675827
    2. 'for' → logprob: -4.31725549697876
    3. 'ob' → logprob: -4.31725549697876
    4. 'blocked' → logprob: -4.56725549697876
    5. 'y' → logprob: -4.81725549697876
    6. ' for' → logprob: -4.94225549697876
    7. 'found' → logprob: -6.19225549697876
    8. 'can' → logprob: -6.81725549697876
    9. 'fall' → logprob: -6.94225549697876
    10. ' obstruct' → logprob: -7.06725549697876

Token 463: '_ob' (ID: 46416)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17432215809822083
    2. '=' → logprob: -2.2993221282958984
    3. '_ob' → logprob: -3.5493221282958984
    4. 'ed' → logprob: -4.549322128295898
    5. '_block' → logprob: -4.924322128295898
    6. '_' → logprob: -6.174322128295898
    7. '_in' → logprob: -6.174322128295898
    8. 's' → logprob: -6.424322128295898
    9. '_y' → logprob: -6.674322128295898
    10. '=True' → logprob: -6.799322128295898

Token 464: 'stacle' (ID: 69123)
  Prédit: 'stacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacle' → logprob: -0.14129817485809326
    2. 'stacles' → logprob: -2.266298294067383
    3. '           ' → logprob: -4.016298294067383
    4. 's' → logprob: -5.891298294067383
    5. '       ' → logprob: -6.016298294067383
    6. 'st' → logprob: -6.141298294067383
    7. '               ' → logprob: -6.641298294067383
    8. '   ' → logprob: -8.641298294067383
    9. 'ject' → logprob: -8.766298294067383
    10. 'struct' → logprob: -9.016298294067383

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00524075236171484
    2. ' =' → logprob: -5.2552409172058105
    3. '=True' → logprob: -13.380240440368652
    4. 'd' → logprob: -13.505240440368652
    5. 'ed' → logprob: -13.755240440368652
    6. '=False' → logprob: -14.005240440368652
    7. '_in' → logprob: -14.005240440368652
    8. '_found' → logprob: -14.505240440368652
    9. 'found' → logprob: -15.880240440368652
    10. '   ' → logprob: -15.880240440368652

Token 466: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.56102097814437e-05
    2. ' False' → logprob: -10.250045776367188
    3. 'any' → logprob: -11.500045776367188
    4. '(False' → logprob: -17.750045776367188
    5. 'false' → logprob: -18.250045776367188
    6. '   ' → logprob: -18.250045776367188
    7. '=False' → logprob: -19.875045776367188
    8. 'True' → logprob: -20.000045776367188
    9. 'Any' → logprob: -20.375045776367188
    10. ' any' → logprob: -20.500045776367188

Token 467: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021664367523044348
    2. '<|end|>' → logprob: -6.627166271209717
    3. '
' → logprob: -8.252166748046875
    4. ',' → logprob: -8.252166748046875
    5. ' for' → logprob: -9.127166748046875
    6. '            
' → logprob: -9.627166748046875
    7. '<|end|>' → logprob: -10.127166748046875
    8. '  
' → logprob: -11.127166748046875
    9. 'for' → logprob: -11.627166748046875
    10. ' at' → logprob: -11.752166748046875

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047988566802814603
    2. '<|end|>' → logprob: -8.500479698181152
    3. ' for' → logprob: -8.625479698181152
    4. 'for' → logprob: -10.000479698181152
    5. '<|end|>' → logprob: -11.250479698181152
    6. '       ' → logprob: -12.000479698181152
    7. '            
' → logprob: -12.250479698181152
    8. '	       ' → logprob: -12.375479698181152
    9. '```' → logprob: -12.500479698181152
    10. '   ' → logprob: -12.500479698181152

Token 469: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.027793940156698227
    2. ' for' → logprob: -4.027793884277344
    3. '           ' → logprob: -4.652793884277344
    4. 'y' → logprob: -10.027793884277344
    5. 'while' → logprob: -12.527793884277344
    6. 'z' → logprob: -13.027793884277344
    7. '```' → logprob: -13.402793884277344
    8. '       ' → logprob: -13.527793884277344
    9. '	for' → logprob: -13.902793884277344
    10. '            
' → logprob: -14.277793884277344

Token 470: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0010998494690284133
    2. ' (' → logprob: -7.126100063323975
    3. '(' → logprob: -8.251099586486816
    4. '(ob' → logprob: -11.251099586486816
    5. 'L' → logprob: -11.751099586486816
    6. '(O' → logprob: -11.876099586486816
    7. 'ob' → logprob: -12.751099586486816
    8. '(_,' → logprob: -14.126099586486816
    9. '(obs' → logprob: -14.126099586486816
    10. '(x' → logprob: -14.876099586486816

Token 471: 'L' (ID: 43)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.6327316164970398
    2. 'L' → logprob: -0.7577316164970398
    3. '(' → logprob: -9.757731437683105
    4. ' (' → logprob: -10.382731437683105
    5. ' L' → logprob: -11.507731437683105
    6. '(_,' → logprob: -11.632731437683105
    7. '(O' → logprob: -12.382731437683105
    8. 'O' → logprob: -12.632731437683105
    9. 'LX' → logprob: -12.882731437683105
    10. '_L' → logprob: -13.257731437683105

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005399276851676404
    2. ' ,' → logprob: -8.750539779663086
    3. ',x' → logprob: -9.000539779663086
    4. ',R' → logprob: -9.625539779663086
    5. ',B' → logprob: -10.000539779663086
    6. 'x' → logprob: -10.375539779663086
    7. ')' → logprob: -10.875539779663086
    8. ',S' → logprob: -11.625539779663086
    9. ',L' → logprob: -11.750539779663086
    10. 'R' → logprob: -11.875539779663086

Token 473: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00025526012177579105
    2. ' B' → logprob: -8.750255584716797
    3. ',' → logprob: -9.875255584716797
    4. 'x' → logprob: -10.375255584716797
    5. '   ' → logprob: -12.875255584716797
    6. ',B' → logprob: -13.000255584716797
    7. 'Bx' → logprob: -13.125255584716797
    8. 'T' → logprob: -13.250255584716797
    9. '_,' → logprob: -13.375255584716797
    10. '    ' → logprob: -13.500255584716797

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001858982432167977
    2. ' ,' → logprob: -8.8751859664917
    3. ',R' → logprob: -10.8751859664917
    4. 'R' → logprob: -11.6251859664917
    5. ')' → logprob: -12.6251859664917
    6. ',
' → logprob: -13.2501859664917
    7. ',x' → logprob: -13.3751859664917
    8. ',Q' → logprob: -13.6251859664917
    9. '_,' → logprob: -13.7501859664917
    10. 'x' → logprob: -13.8751859664917

Token 475: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00035060103982686996
    2. ' R' → logprob: -8.000350952148438
    3. ',' → logprob: -11.375350952148438
    4. '_,' → logprob: -13.750350952148438
    5. ',R' → logprob: -14.375350952148438
    6. '
' → logprob: -14.375350952148438
    7. '   ' → logprob: -14.750350952148438
    8. ' ' → logprob: -15.250350952148438
    9. '  ' → logprob: -15.375350952148438
    10. '	R' → logprob: -15.750350952148438

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014716439181938767
    2. ' ,' → logprob: -9.000146865844727
    3. ')' → logprob: -12.125146865844727
    4. ',K' → logprob: -12.500146865844727
    5. ',
' → logprob: -13.000146865844727
    6. '           ' → logprob: -13.125146865844727
    7. ',U' → logprob: -13.625146865844727
    8. ',x' → logprob: -13.750146865844727
    9. ',B' → logprob: -14.000146865844727
    10. ',S' → logprob: -14.125146865844727

Token 477: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.029782773926854134
    2. ' T' → logprob: -3.529782772064209
    3. ')' → logprob: -11.154783248901367
    4. ',' → logprob: -11.404783248901367
    5. '
' → logprob: -13.154783248901367
    6. ' ' → logprob: -13.404783248901367
    7. '   ' → logprob: -14.154783248901367
    8. '  ' → logprob: -14.904783248901367
    9. '<|end|>' → logprob: -15.154783248901367
    10. '

' → logprob: -15.279783248901367

Token 478: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.440506407059729e-05
    2. ' )' → logprob: -10.87503433227539
    3. 'in' → logprob: -11.12503433227539
    4. ')
' → logprob: -15.50003433227539
    5. ',' → logprob: -16.12503433227539
    6. '),' → logprob: -16.12503433227539
    7. ' in' → logprob: -16.50003433227539
    8. '   ' → logprob: -16.75003433227539
    9. '
' → logprob: -17.12503433227539
    10. ',)' → logprob: -18.00003433227539

Token 479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995321810245514
    2. 'in' → logprob: -2.694953203201294
    3. ')' → logprob: -11.194952964782715
    4. ' ' → logprob: -14.194952964782715
    5. '	in' → logprob: -14.944952964782715
    6. '   ' → logprob: -15.069952964782715
    7. ':
' → logprob: -15.319952964782715
    8. 'n' → logprob: -15.569952964782715
    9. '           ' → logprob: -15.569952964782715
    10. '):
' → logprob: -15.694952964782715

Token 480: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.0001093841710826382
    2. ' obstacles' → logprob: -9.125109672546387
    3. '(ob' → logprob: -15.125109672546387
    4. '	ob' → logprob: -17.00010871887207
    5. '_ob' → logprob: -17.50010871887207
    6. ' ob' → logprob: -17.62510871887207
    7. '
' → logprob: -17.87510871887207
    8. ')' → logprob: -17.87510871887207
    9. '.ob' → logprob: -18.62510871887207
    10. 'obs' → logprob: -18.62510871887207

Token 481: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3202481269836426
    2. ':' → logprob: -1.8202481269836426
    3. '               ' → logprob: -2.1952481269836426
    4. '           ' → logprob: -8.695247650146484
    5. ',' → logprob: -8.695247650146484
    6. '       ' → logprob: -9.070247650146484
    7. '):
' → logprob: -9.320247650146484
    8. ':

' → logprob: -10.070247650146484
    9. '<|end|>' → logprob: -10.445247650146484
    10. '   ' → logprob: -11.195247650146484

Token 482: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001222966704517603
    2. ' if' → logprob: -7.876223087310791
    3. '<|end|>' → logprob: -8.001222610473633
    4. '           ' → logprob: -8.126222610473633
    5. ':
' → logprob: -10.126222610473633
    6. '	           ' → logprob: -10.376222610473633
    7. '                
' → logprob: -10.501222610473633
    8. ':' → logprob: -10.751222610473633
    9. ',' → logprob: -11.376222610473633
    10. '                ' → logprob: -11.501222610473633

Token 483: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002446758095175028
    2. ' if' → logprob: -6.87744665145874
    3. '<|end|>' → logprob: -7.87744665145874
    4. '   ' → logprob: -8.002447128295898
    5. 'if' (adapté à ' if') → logprob: -8.377447128295898
    6. '                   ' → logprob: -8.502447128295898
    7. '           ' → logprob: -8.877447128295898
    8. '	           ' → logprob: -10.127447128295898
    9. ' ' → logprob: -10.627447128295898
    10. '       ' → logprob: -11.252447128295898

Token 484: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00018649426056072116
    2. ' L' → logprob: -8.750186920166016
    3. 'x' → logprob: -11.250186920166016
    4. 'abs' → logprob: -12.125186920166016
    5. '   ' → logprob: -12.375186920166016
    6. '(L' → logprob: -12.625186920166016
    7. 'R' → logprob: -14.250186920166016
    8. '	L' → logprob: -15.000186920166016
    9. 'B' → logprob: -15.750186920166016
    10. '  ' → logprob: -15.875186920166016

Token 485: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31326648592948914
    2. '<=' → logprob: -1.3132665157318115
    3. ')<=' → logprob: -13.18826675415039
    4. '```' → logprob: -13.81326675415039
    5. ']<=' → logprob: -14.93826675415039
    6. '<|end|>' → logprob: -15.43826675415039
    7. '0' → logprob: -15.56326675415039
    8. ' ' → logprob: -15.56326675415039
    9. ' ≤' → logprob: -15.56326675415039
    10. '==' → logprob: -15.81326675415039

Token 486: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004620241466909647
    2. ' x' → logprob: -5.37962007522583
    3. 'int' → logprob: -17.254619598388672
    4. '=' → logprob: -18.129619598388672
    5. '_x' → logprob: -20.004619598388672
    6. '(x' → logprob: -20.129619598388672
    7. '<=' → logprob: -20.129619598388672
    8. '0' → logprob: -20.254619598388672
    9. ' ' → logprob: -20.254619598388672
    10. '```' → logprob: -20.254619598388672

Token 487: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.2729995988775045e-06
    2. 'bird' → logprob: -13.250006675720215
    3. '_' → logprob: -13.500006675720215
    4. 'b' → logprob: -13.625006675720215
    5. 'x' → logprob: -14.375006675720215
    6. ' _' → logprob: -15.750006675720215
    7. '_book' → logprob: -16.1250057220459
    8. '-b' → logprob: -16.2500057220459
    9. '_x' → logprob: -16.2500057220459
    10. '>=' → logprob: -16.3750057220459

Token 488: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.019595354795455933
    2. '_b' → logprob: -4.519595146179199
    3. 'bird' → logprob: -4.769595146179199
    4. 'x' → logprob: -12.1445951461792
    5. 'ir' → logprob: -12.1445951461792
    6. 'b' → logprob: -12.5195951461792
    7. 'irds' → logprob: -13.0195951461792
    8. '_' → logprob: -13.2695951461792
    9. '-b' → logprob: -13.3945951461792
    10. 'irst' → logprob: -13.6445951461792

Token 489: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20205093920230865
    2. '<=' → logprob: -1.8270509243011475
    3. ' and' → logprob: -4.202051162719727
    4. 'and' → logprob: -4.952051162719727
    5. ' ' → logprob: -11.702051162719727
    6. '```' → logprob: -12.202051162719727
    7. '0' → logprob: -12.577051162719727
    8. '==' → logprob: -13.077051162719727
    9. ' <' → logprob: -13.202051162719727
    10. '<' → logprob: -14.827051162719727

Token 490: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -5.796184723294573e-06
    2. ' R' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.500005722045898
    4. '
' → logprob: -17.1250057220459
    5. '                   ' → logprob: -17.1250057220459
    6. '               ' → logprob: -17.2500057220459
    7. ' ' → logprob: -18.3750057220459
    8. '           ' → logprob: -18.5000057220459
    9. '	R' → logprob: -18.8750057220459
    10. '       ' → logprob: -19.3750057220459

Token 491: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006725549232214689
    2. 'and' → logprob: -5.006725311279297
    3. '               ' → logprob: -12.131725311279297
    4. '                ' → logprob: -13.006725311279297
    5. '                   ' → logprob: -13.631725311279297
    6. ' ' → logprob: -14.131725311279297
    7. '                    ' → logprob: -16.256725311279297
    8. '            ' → logprob: -16.381725311279297
    9. ',' → logprob: -16.506725311279297
    10. '```' → logprob: -16.756725311279297

Token 492: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0005517214885912836
    2. 'and' → logprob: -7.875551700592041
    3. '                   ' → logprob: -9.0005521774292
    4. '               ' → logprob: -10.0005521774292
    5. '                ' → logprob: -13.6255521774292
    6. ' if' → logprob: -14.6255521774292
    7. ' ' → logprob: -14.6255521774292
    8. '           ' → logprob: -15.5005521774292
    9. ',' → logprob: -16.375551223754883
    10. '                 ' → logprob: -16.625551223754883

Token 493: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.761695921421051
    2. ' if' → logprob: -1.0116958618164062
    3. 'if' (adapté à ' if') → logprob: -2.0116958618164062
    4. 'and' → logprob: -3.7616958618164062
    5. '                       ' → logprob: -4.511695861816406
    6. '               ' → logprob: -7.386695861816406
    7. '                   ' → logprob: -7.511695861816406
    8. ' ' → logprob: -8.761695861816406
    9. '
' → logprob: -9.136695861816406
    10. '           ' → logprob: -10.886695861816406

Token 494: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.033497001975774765
    2. '(B' → logprob: -4.033496856689453
    3. '(not' → logprob: -5.658496856689453
    4. 'not' → logprob: -5.908496856689453
    5. 'Y' → logprob: -6.033496856689453
    6. '(y' → logprob: -6.158496856689453
    7. 'y' → logprob: -6.283496856689453
    8. ' B' → logprob: -7.033496856689453
    9. '(min' → logprob: -7.783496856689453
    10. ' not' → logprob: -7.783496856689453

Token 495: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.38692641258239746
    2. '<=' → logprob: -1.1369264125823975
    3. ' <' → logprob: -10.386926651000977
    4. '<' → logprob: -11.011926651000977
    5. '<|end|>' → logprob: -13.386926651000977
    6. '>=' → logprob: -13.511926651000977
    7. ' >=' → logprob: -13.636926651000977
    8. ' ≤' → logprob: -14.136926651000977
    9. '```' → logprob: -14.136926651000977
    10. ')<=' → logprob: -14.386926651000977

Token 496: ' Y' (ID: 865)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06344636529684067
    2. 'Y' → logprob: -2.813446283340454
    3. ' y' → logprob: -6.563446521759033
    4. ' Y' → logprob: -9.813446044921875
    5. 'min' → logprob: -12.563446044921875
    6. 'max' → logprob: -13.063446044921875
    7. '<=' → logprob: -13.938446044921875
    8. '(y' → logprob: -13.938446044921875
    9. '   ' → logprob: -14.188446044921875
    10. '	y' → logprob: -14.938446044921875

Token 497: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.09387947618961334
    2. '<=' → logprob: -2.468879461288452
    3. ' <' → logprob: -5.593879699707031
    4. ' and' → logprob: -7.468879699707031
    5. '<' → logprob: -8.218879699707031
    6. 'and' → logprob: -8.468879699707031
    7. '                   ' → logprob: -9.218879699707031
    8. ' ' → logprob: -10.968879699707031
    9. '0' → logprob: -11.593879699707031
    10. '```' → logprob: -11.968879699707031

Token 498: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00029363270732574165
    2. ' T' → logprob: -8.625293731689453
    3. 'y' → logprob: -9.125293731689453
    4. '   ' → logprob: -13.125293731689453
    5. ' ' → logprob: -14.875293731689453
    6. ' y' → logprob: -14.875293731689453
    7. '                   ' → logprob: -15.000293731689453
    8. 't' → logprob: -15.375293731689453
    9. '
' → logprob: -15.500293731689453
    10. '	T' → logprob: -15.687793731689453

Token 499: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15847833454608917
    2. ':' → logprob: -3.283478260040283
    3. '                       ' → logprob: -3.283478260040283
    4. ' or' → logprob: -3.533478260040283
    5. ' and' → logprob: -3.783478260040283
    6. '                   ' → logprob: -4.283478260040283
    7. '):
' → logprob: -5.408478260040283
    8. ' :
' → logprob: -7.658478260040283
    9. '               ' → logprob: -8.158478736877441
    10. ')' → logprob: -9.408478736877441

Token 500: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.017303338274359703
    2. ':
' → logprob: -5.267303466796875
    3. '                   ' → logprob: -5.517303466796875
    4. ':' → logprob: -5.767303466796875
    5. ' and' → logprob: -6.142303466796875
    6. ' or' → logprob: -6.392303466796875
    7. '               ' → logprob: -8.267303466796875
    8. '                           ' → logprob: -9.017303466796875
    9. ',' → logprob: -9.267303466796875
    10. '):
' → logprob: -9.392303466796875

Token 501: ' hit' (ID: 7103)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hit' (adapté à ' hit') → logprob: -0.02693038247525692
    2. ' hit' → logprob: -3.651930332183838
    3. '                       ' → logprob: -7.776930332183838
    4. '                           ' → logprob: -9.151930809020996
    5. '                               ' → logprob: -10.651930809020996
    6. '(hit' → logprob: -10.651930809020996
    7. '               ' → logprob: -10.776930809020996
    8. '                   ' → logprob: -11.151930809020996
    9. '           ' → logprob: -11.901930809020996
    10. '
' → logprob: -11.901930809020996

Token 502: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -7.941850526549388e-06
    2. 'ob' → logprob: -11.875007629394531
    3. '_oc' → logprob: -15.125007629394531
    4. '	ob' → logprob: -15.500007629394531
    5. '_' → logprob: -16.25000762939453
    6. '_object' → logprob: -16.37500762939453
    7. '<|end|>' → logprob: -16.37500762939453
    8. '
' → logprob: -17.00000762939453
    9. '_OB' → logprob: -17.37500762939453
    10. 'Obstacle' → logprob: -17.37500762939453

Token 503: 'stacle' (ID: 69123)
  Prédit: 'stacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacle' → logprob: -0.00045045334263704717
    2. 'st' → logprob: -7.875450611114502
    3. 'acle' → logprob: -10.875450134277344
    4. 'stacles' → logprob: -11.000450134277344
    5. 'stable' → logprob: -11.500450134277344
    6. 'stack' → logprob: -11.625450134277344
    7. '                       ' → logprob: -12.875450134277344
    8. 'stance' → logprob: -13.500450134277344
    9. '               ' → logprob: -13.625450134277344
    10. 'stat' → logprob: -13.875450134277344

Token 504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024261713027954
    2. ' =' → logprob: -1.9102425575256348
    3. '=True' → logprob: -11.035243034362793
    4. '=
' → logprob: -13.785243034362793
    5. '                       ' → logprob: -15.035243034362793
    6. ' =
' → logprob: -15.035243034362793
    7. '                           ' → logprob: -15.785243034362793
    8. '=False' → logprob: -15.910243034362793
    9. '                   ' → logprob: -16.410242080688477
    10. ' ' → logprob: -16.535242080688477

Token 505: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. 'False' → logprob: -19.875001907348633
    4. '(True' → logprob: -20.500001907348633
    5. '=True' → logprob: -21.750001907348633
    6. 'true' → logprob: -22.250001907348633
    7. '1' → logprob: -24.375001907348633
    8. 'Tr' → logprob: -24.875001907348633
    9. '   ' → logprob: -25.500001907348633
    10. 'TRUE' → logprob: -25.625001907348633

Token 506: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004201986361294985
    2. '                           ' → logprob: -6.629201889038086
    3. '<|end|>' → logprob: -6.754201889038086
    4. '                   ' → logprob: -6.879201889038086
    5. '               ' → logprob: -8.504201889038086
    6. '           ' → logprob: -8.879201889038086
    7. '                        ' → logprob: -9.504201889038086
    8. '       ' → logprob: -9.754201889038086
    9. ',' → logprob: -9.754201889038086
    10. '                               ' → logprob: -10.629201889038086

Token 507: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0006551315891556442
    2. '                   ' → logprob: -8.125655174255371
    3. '                           ' → logprob: -9.375655174255371
    4. '<|end|>' → logprob: -9.750655174255371
    5. '               ' → logprob: -10.000655174255371
    6. '
' → logprob: -10.125655174255371
    7. '           ' → logprob: -10.500655174255371
    8. '					' → logprob: -10.625655174255371
    9. '                        ' → logprob: -10.750655174255371
    10. '       ' → logprob: -10.875655174255371

Token 508: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.12146055698394775
    2. ' break' → logprob: -2.371460437774658
    3. '                       ' → logprob: -3.871460437774658
    4. '	break' → logprob: -8.871460914611816
    5. '                   ' → logprob: -10.371460914611816
    6. '                           ' → logprob: -11.121460914611816
    7. '               ' → logprob: -12.121460914611816
    8. '                               ' → logprob: -12.371460914611816
    9. '					' → logprob: -13.496460914611816
    10. '                        ' → logprob: -13.871460914611816

Token 509: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010548417922109365
    2. '
' → logprob: -8.251054763793945
    3. '		' → logprob: -8.376054763793945
    4. '               ' → logprob: -8.626054763793945
    5. '<|end|>' → logprob: -8.626054763793945
    6. '                   ' → logprob: -9.001054763793945
    7. '       ' → logprob: -11.001054763793945
    8. ',' → logprob: -11.626054763793945
    9. '	       ' → logprob: -11.626054763793945
    10. '          ' → logprob: -12.126054763793945

Token 510: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.351697033504024e-05
    2. '                   ' → logprob: -10.250083923339844
    3. '               ' → logprob: -10.625083923339844
    4. '<|end|>' → logprob: -12.000083923339844
    5. '		' → logprob: -12.500083923339844
    6. '       ' → logprob: -12.500083923339844
    7. 'if' → logprob: -12.875083923339844
    8. '          ' → logprob: -13.375083923339844
    9. 'continue' → logprob: -14.000083923339844
    10. ',' → logprob: -14.000083923339844

Token 511: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3135835826396942
    2. 'if' (adapté à ' if') → logprob: -1.8135836124420166
    3. '               ' → logprob: -2.3135836124420166
    4. ' if' → logprob: -5.0635833740234375
    5. 'elif' → logprob: -8.188583374023438
    6. '                   ' → logprob: -8.563583374023438
    7. 'return' → logprob: -9.813583374023438
    8. '       ' → logprob: -9.938583374023438
    9. 'continue' → logprob: -9.938583374023438
    10. '            ' → logprob: -10.313583374023438

Token 512: ' Y' (ID: 865)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.30303677916526794
    2. 'Y' → logprob: -2.053036689758301
    3. ' B' → logprob: -2.928036689758301
    4. 'y' → logprob: -3.303036689758301
    5. 'T' → logprob: -3.678036689758301
    6. ' y' → logprob: -4.928036689758301
    7. ' Y' → logprob: -5.178036689758301
    8. ' T' → logprob: -5.928036689758301
    9. '   ' → logprob: -7.053036689758301
    10. '(B' → logprob: -7.553036689758301

Token 513: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08826349675655365
    2. '<' → logprob: -3.463263511657715
    3. ' <=' → logprob: -3.713263511657715
    4. ' >' → logprob: -3.963263511657715
    5. ' >=' → logprob: -5.713263511657715
    6. '<|end|>' → logprob: -5.713263511657715
    7. '>' → logprob: -6.588263511657715
    8. '<=' → logprob: -6.713263511657715
    9. ' ' → logprob: -8.338263511657715
    10. '>=' → logprob: -8.713263511657715

Token 514: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0016480415361002088
    2. 'T' → logprob: -6.50164794921875
    3. ' B' → logprob: -8.87664794921875
    4. '                   ' → logprob: -12.87664794921875
    5. '   ' → logprob: -14.12664794921875
    6. ' T' → logprob: -14.50164794921875
    7. 'y' → logprob: -14.87664794921875
    8. '                       ' → logprob: -15.00164794921875
    9. 'b' → logprob: -15.25164794921875
    10. 'Y' → logprob: -15.50164794921875

Token 515: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.19665400683879852
    2. ' <' → logprob: -2.4466540813446045
    3. '<=' → logprob: -3.0716540813446045
    4. ' and' → logprob: -3.4466540813446045
    5. 'and' → logprob: -5.071653842926025
    6. '<' → logprob: -5.196653842926025
    7. '                       ' → logprob: -6.446653842926025
    8. ' ' → logprob: -8.946654319763184
    9. '```' → logprob: -9.946654319763184
    10. '                   ' → logprob: -9.946654319763184

Token 516: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01416398212313652
    2. ' y' → logprob: -4.264163970947266
    3. '                   ' → logprob: -15.639163970947266
    4. '	y' → logprob: -16.139163970947266
    5. '   ' → logprob: -16.764163970947266
    6. ' ' → logprob: -18.389163970947266
    7. 'yb' → logprob: -18.639163970947266
    8. ',y' → logprob: -18.639163970947266
    9. '```' → logprob: -19.139163970947266
    10. '  ' → logprob: -19.514163970947266

Token 517: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.47495681833243e-05
    2. 'bird' → logprob: -11.125024795532227
    3. 'b' → logprob: -11.875024795532227
    4. '	b' → logprob: -13.500024795532227
    5. ' ' → logprob: -15.250024795532227
    6. ')' → logprob: -15.375024795532227
    7. '_' → logprob: -15.625024795532227
    8. '<|end|>' → logprob: -15.750024795532227
    9. '-b' → logprob: -16.000024795532227
    10. '
' → logprob: -16.000024795532227

Token 518: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.00017565040616318583
    2. 'bird' → logprob: -8.750175476074219
    3. 'ir' → logprob: -12.000175476074219
    4. '_b' → logprob: -12.125175476074219
    5. 'urd' → logprob: -14.000175476074219
    6. 'old' → logprob: -14.250175476074219
    7. 'ord' → logprob: -14.250175476074219
    8. 'ard' → logprob: -14.625175476074219
    9. 'rd' → logprob: -14.750175476074219
    10. 'Bird' → logprob: -14.875175476074219

Token 519: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5303579568862915
    2. ':' → logprob: -0.9053579568862915
    3. '                       ' → logprob: -5.280357837677002
    4. ' :
' → logprob: -7.905357837677002
    5. '                   ' → logprob: -8.03035831451416
    6. '<|end|>' → logprob: -8.15535831451416
    7. ' :' → logprob: -8.28035831451416
    8. ' or' → logprob: -8.53035831451416
    9. ':

' → logprob: -8.53035831451416
    10. ' and' → logprob: -8.78035831451416

Token 520: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007649566978216171
    2. '<|end|>' → logprob: -8.250764846801758
    3. '               ' → logprob: -8.875764846801758
    4. '                        
' → logprob: -9.625764846801758
    5. '                   ' → logprob: -9.750764846801758
    6. '                           ' → logprob: -9.875764846801758
    7. '                        ' → logprob: -10.125764846801758
    8. ' and' → logprob: -10.750764846801758
    9. '
' → logprob: -10.875764846801758
    10. ':
' → logprob: -11.250764846801758

Token 521: ' hit' (ID: 7103)
  Prédit: ' hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hit' → logprob: -0.12751078605651855
    2. 'hit' (adapté à ' hit') → logprob: -2.1275107860565186
    3. '                       ' → logprob: -8.127511024475098
    4. ' break' → logprob: -8.752511024475098
    5. 'break' → logprob: -9.252511024475098
    6. '               ' → logprob: -11.502511024475098
    7. '                   ' → logprob: -12.127511024475098
    8. '           ' → logprob: -12.377511024475098
    9. '                           ' → logprob: -12.752511024475098
    10. '(hit' → logprob: -12.877511024475098

Token 522: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -5.512236498361744e-07
    2. 'ob' → logprob: -15.000000953674316
    3. '_object' → logprob: -17.125
    4. '_' → logprob: -17.125
    5. '_oc' → logprob: -17.875
    6. '	ob' → logprob: -18.125
    7. ' ' → logprob: -18.125
    8. ' _' → logprob: -18.75
    9. 'Obstacle' → logprob: -18.75
    10. '_out' → logprob: -18.75

Token 523: 'stacle' (ID: 69123)
  Prédit: 'stacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacle' → logprob: -0.0013114250032231212
    2. 'acle' → logprob: -7.126311302185059
    3. 'st' → logprob: -8.751311302185059
    4. 'stacles' → logprob: -9.501311302185059
    5. '           ' → logprob: -9.751311302185059
    6. 'stable' → logprob: -10.001311302185059
    7. '       ' → logprob: -10.251311302185059
    8. '```' → logprob: -10.376311302185059
    9. '_' → logprob: -11.001311302185059
    10. '               ' → logprob: -11.251311302185059

Token 524: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38693854212760925
    2. ' =' → logprob: -1.1369385719299316
    3. '=True' → logprob: -9.761938095092773
    4. '                       ' → logprob: -12.761938095092773
    5. ' =
' → logprob: -13.136938095092773
    6. '=
' → logprob: -13.261938095092773
    7. '                           ' → logprob: -13.761938095092773
    8. '=False' → logprob: -14.636938095092773
    9. '==' → logprob: -15.011938095092773
    10. ':' → logprob: -15.261938095092773

Token 525: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03804149478673935
    2. 'True' → logprob: -3.288041591644287
    3. '=True' → logprob: -18.538042068481445
    4. '(True' → logprob: -18.663042068481445
    5. ' ' → logprob: -20.288042068481445
    6. 'False' → logprob: -20.413042068481445
    7. ' False' → logprob: -20.913042068481445
    8. '.True' → logprob: -23.163042068481445
    9. '_true' → logprob: -24.538042068481445
    10. ' Tru' → logprob: -24.663042068481445

Token 526: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007115975022315979
    2. '                           ' → logprob: -8.375711441040039
    3. '<|end|>' → logprob: -8.500711441040039
    4. '               ' → logprob: -9.625711441040039
    5. '           ' → logprob: -9.750711441040039
    6. '                   ' → logprob: -9.750711441040039
    7. '       ' → logprob: -10.750711441040039
    8. '                        ' → logprob: -10.875711441040039
    9. '                        
' → logprob: -11.250711441040039
    10. '					' → logprob: -11.750711441040039

Token 527: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0002918446552939713
    2. '                   ' → logprob: -9.50029182434082
    3. '               ' → logprob: -9.75029182434082
    4. '                           ' → logprob: -10.00029182434082
    5. '           ' → logprob: -10.25029182434082
    6. '                        
' → logprob: -11.12529182434082
    7. '<|end|>' → logprob: -11.50029182434082
    8. '                        ' → logprob: -11.50029182434082
    9. '       ' → logprob: -11.62529182434082
    10. '					' → logprob: -11.75029182434082

Token 528: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.07913696765899658
    2. 'break' (adapté à ' break') → logprob: -2.579136848449707
    3. '                       ' → logprob: -8.329136848449707
    4. '	break' → logprob: -12.329136848449707
    5. '
' → logprob: -15.079136848449707
    6. ' ' → logprob: -15.579136848449707
    7. '                   ' → logprob: -15.829136848449707
    8. '               ' → logprob: -16.079137802124023
    9. '                        
' → logprob: -16.079137802124023
    10. ' ' → logprob: -16.204137802124023

Token 529: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004505725810304284
    2. 'if' → logprob: -8.000450134277344
    3. '               ' → logprob: -10.000450134277344
    4. '		' → logprob: -10.750450134277344
    5. 'continue' → logprob: -11.125450134277344
    6. '                   ' → logprob: -11.500450134277344
    7. '       ' → logprob: -12.125450134277344
    8. ' if' → logprob: -12.500450134277344
    9. ',' → logprob: -12.625450134277344
    10. '          ' → logprob: -13.250450134277344

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.53050296427682e-05
    2. '               ' → logprob: -10.25008487701416
    3. '		' → logprob: -10.75008487701416
    4. 'if' → logprob: -11.00008487701416
    5. '                   ' → logprob: -12.37508487701416
    6. '       ' → logprob: -13.12508487701416
    7. '          ' → logprob: -13.62508487701416
    8. ',' → logprob: -14.50008487701416
    9. 'continue' → logprob: -14.50008487701416
    10. 'return' → logprob: -14.62508487701416

Token 531: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04988684505224228
    2. 'if' (adapté à ' if') → logprob: -3.04988694190979
    3. ' if' → logprob: -6.674886703491211
    4. '       ' → logprob: -10.924886703491211
    5. '   ' → logprob: -11.674886703491211
    6. '               ' → logprob: -12.049886703491211
    7. '          ' → logprob: -14.049886703491211
    8. '                   ' → logprob: -14.174886703491211
    9. 'If' → logprob: -14.549886703491211
    10. ' ' → logprob: -14.674886703491211

Token 532: ' hit' (ID: 7103)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hit' → logprob: -0.9717158675193787
    2. ' not' → logprob: -1.0967159271240234
    3. ' hit' → logprob: -1.4717159271240234
    4. 'not' → logprob: -2.8467159271240234
    5. ' ' → logprob: -11.221715927124023
    6. '(hit' → logprob: -11.971715927124023
    7. '   ' → logprob: -12.971715927124023
    8. 'h' → logprob: -13.034215927124023
    9. 'Hit' → logprob: -13.534215927124023
    10. '_hit' → logprob: -13.846715927124023

Token 533: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -1.7432603272027336e-06
    2. 'ob' → logprob: -14.375001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_oc' → logprob: -15.375001907348633
    5. '	ob' → logprob: -16.000001907348633
    6. '_o' → logprob: -16.375001907348633
    7. '_object' → logprob: -16.625001907348633
    8. '_OB' → logprob: -17.250001907348633
    9. '_obs' → logprob: -17.625001907348633
    10. '   ' → logprob: -18.125001907348633

Token 534: 'stacle' (ID: 69123)
  Prédit: 'stacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacle' → logprob: -7.398067828034982e-05
    2. 'stacles' → logprob: -10.12507438659668
    3. 'st' → logprob: -10.37507438659668
    4. 'stable' → logprob: -13.62507438659668
    5. 'stack' → logprob: -14.75007438659668
    6. 'acle' → logprob: -14.87507438659668
    7. 'struct' → logprob: -15.87507438659668
    8. 'sta' → logprob: -16.25007438659668
    9. '_' → logprob: -16.62507438659668
    10. 's' → logprob: -16.87507438659668

Token 535: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6559576988220215
    2. ':
' → logprob: -0.7809576988220215
    3. '               ' → logprob: -3.9059576988220215
    4. '           ' → logprob: -5.9059576988220215
    5. '==' → logprob: -9.28095817565918
    6. '=' → logprob: -10.15595817565918
    7. ',' → logprob: -11.28095817565918
    8. ':

' → logprob: -11.40595817565918
    9. ':return' → logprob: -11.40595817565918
    10. ' or' → logprob: -11.65595817565918

Token 536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.0339031834737398e-05
    2. '           ' → logprob: -11.375020027160645
    3. '                   ' → logprob: -12.750020027160645
    4. ' continue' → logprob: -13.000020027160645
    5. 't' → logprob: -13.875020027160645
    6. 'continue' → logprob: -13.875020027160645
    7. ' t' → logprob: -14.750020027160645
    8. ',' → logprob: -15.375020027160645
    9. '              ' → logprob: -15.625020027160645
    10. '                       ' → logprob: -15.625020027160645

Token 537: ' t' (ID: 260)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.667292058467865
    2. 't' (adapté à ' t') → logprob: -0.917292058467865
    3. ' t' → logprob: -2.5422921180725098
    4. '           ' → logprob: -5.16729211807251
    5. 'continue' → logprob: -6.54229211807251
    6. ' continue' → logprob: -6.79229211807251
    7. '   ' → logprob: -8.792291641235352
    8. '                   ' → logprob: -9.292291641235352
    9. ' ' → logprob: -9.667291641235352
    10. '	t' → logprob: -11.042291641235352

Token 538: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06196925416588783
    2. '+=' → logprob: -2.81196928024292
    3. '+' → logprob: -14.561968803405762
    4. '=' → logprob: -14.686968803405762
    5. '            ' → logprob: -16.186969757080078
    6. ']+=' → logprob: -16.186969757080078
    7. '           ' → logprob: -16.436969757080078
    8. ' ' → logprob: -16.561969757080078
    9. ' -=' → logprob: -16.561969757080078
    10. ' +' → logprob: -16.561969757080078

Token 539: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.474077433347702
    2. ' step' → logprob: -0.9740774631500244
    3. '	step' → logprob: -15.724077224731445
    4. '(step' → logprob: -15.849077224731445
    5. '0' → logprob: -16.224077224731445
    6. ' ' → logprob: -16.724077224731445
    7. '.step' → logprob: -17.849077224731445
    8. '_step' → logprob: -18.474077224731445
    9. 'Step' → logprob: -19.224077224731445
    10. 'space' → logprob: -19.224077224731445

Token 540: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003385614836588502
    2. '           ' → logprob: -8.125338554382324
    3. '                   ' → logprob: -11.250338554382324
    4. 'continue' → logprob: -11.375338554382324
    5. ' continue' → logprob: -13.125338554382324
    6. 'else' → logprob: -13.125338554382324
    7. '			' → logprob: -13.125338554382324
    8. '              ' → logprob: -13.250338554382324
    9. '	           ' → logprob: -13.250338554382324
    10. '                
' → logprob: -13.750338554382324

Token 541: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021784115233458579
    2. '           ' → logprob: -8.75021743774414
    3. 'continue' → logprob: -10.12521743774414
    4. '                   ' → logprob: -11.62521743774414
    5. ' continue' → logprob: -12.62521743774414
    6. '```' → logprob: -13.50021743774414
    7. '              ' → logprob: -13.75021743774414
    8. 'else' → logprob: -14.12521743774414
    9. '			' → logprob: -14.37521743774414
    10. '	           ' → logprob: -14.50021743774414

Token 542: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.004124230705201626
    2. ' continue' → logprob: -5.504124164581299
    3. '               ' → logprob: -10.004124641418457
    4. '	continue' → logprob: -15.004124641418457
    5. '                   ' → logprob: -16.00412368774414
    6. ' ' → logprob: -16.75412368774414
    7. '   ' → logprob: -17.00412368774414
    8. '           ' → logprob: -17.37912368774414
    9. 'contin' → logprob: -17.62912368774414
    10. '_continue' → logprob: -17.62912368774414

Token 543: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002187852980569005
    2. 'return' → logprob: -6.377187728881836
    3. '            
' → logprob: -8.002187728881836
    4. '
' → logprob: -9.377187728881836
    5. 'else' → logprob: -10.502187728881836
    6. '       ' → logprob: -11.752187728881836
    7. ' return' → logprob: -12.002187728881836
    8. '#' → logprob: -12.377187728881836
    9. '               ' → logprob: -12.752187728881836
    10. 't' → logprob: -12.877187728881836

Token 544: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004102504346519709
    2. 'return' → logprob: -5.50410270690918
    3. '       ' → logprob: -11.37910270690918
    4. '               ' → logprob: -12.25410270690918
    5. ' return' → logprob: -12.87910270690918
    6. 'else' → logprob: -13.00410270690918
    7. '```' → logprob: -14.00410270690918
    8. '
' → logprob: -14.37910270690918
    9. 'if' → logprob: -14.62910270690918
    10. '            
' → logprob: -14.75410270690918

Token 545: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06322930008172989
    2. '           ' → logprob: -2.8132293224334717
    3. '       ' → logprob: -7.188229084014893
    4. ' return' → logprob: -7.688229084014893
    5. '#' (adapté à ' #') → logprob: -10.81322956085205
    6. '   ' → logprob: -11.68822956085205
    7. '               ' → logprob: -11.81322956085205
    8. 'else' → logprob: -12.18822956085205
    9. 'if' → logprob: -12.81322956085205
    10. '
' → logprob: -13.68822956085205

Token 546: ' Egg' (ID: 52711)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010877089807763696
    2. ' return' → logprob: -7.126087665557861
    3. '#' → logprob: -8.62608814239502
    4. '           ' → logprob: -9.50108814239502
    5. '       ' → logprob: -10.75108814239502
    6. '   ' → logprob: -12.50108814239502
    7. 'Return' → logprob: -13.37608814239502
    8. '               ' → logprob: -13.50108814239502
    9. '	return' → logprob: -15.50108814239502
    10. 'if' → logprob: -15.62608814239502

Token 547: ' can' (ID: 665)
  Prédit: '_can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_can' → logprob: -1.2111399173736572
    2. '_hits' → logprob: -1.3361399173736572
    3. 'can' → logprob: -1.9611399173736572
    4. ' can' → logprob: -2.5861399173736572
    5. 'hits' → logprob: -2.5861399173736572
    6. ' hits' → logprob: -2.5861399173736572
    7. 'falls' → logprob: -3.3361399173736572
    8. 'return' → logprob: -4.461139678955078
    9. ' falls' → logprob: -4.961139678955078
    10. 'drops' → logprob: -5.586139678955078

Token 548: ' reach' (ID: 7627)
  Prédit: ' hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hit' → logprob: -0.14540916681289673
    2. 'hit' → logprob: -2.020409107208252
    3. '_hit' → logprob: -6.895409107208252
    4. ' hits' → logprob: -7.520409107208252
    5. ' fall' → logprob: -7.770409107208252
    6. 'fall' → logprob: -8.14540958404541
    7. 'hits' → logprob: -8.52040958404541
    8. '_hits' → logprob: -8.89540958404541
    9. ' drop' → logprob: -10.02040958404541
    10. 'drop' → logprob: -10.27040958404541

Token 549: ' pig' (ID: 24819)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.164553701877594
    2. ' Y' → logprob: -2.039553642272949
    3. 'the' → logprob: -4.789553642272949
    4. ' the' → logprob: -5.164553642272949
    5. 'pig' → logprob: -5.289553642272949
    6. ' pig' → logprob: -6.039553642272949
    7. 'return' → logprob: -8.91455364227295
    8. 'Pig' → logprob: -11.03955364227295
    9. 'target' → logprob: -11.53955364227295
    10. ' return' → logprob: -11.66455364227295

Token 550: ' without' (ID: 2935)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011732467450201511
    2. 'return' → logprob: -4.886732578277588
    3. ' return' → logprob: -5.511732578277588
    4. '               ' → logprob: -9.51173210144043
    5. ',' → logprob: -13.63673210144043
    6. '          ' → logprob: -13.76173210144043
    7. '		' → logprob: -14.26173210144043
    8. '            
' → logprob: -14.51173210144043
    9. '       ' → logprob: -14.88673210144043
    10. '
' → logprob: -15.38673210144043

Token 551: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.1358799785375595
    2. 'h' → logprob: -2.3858799934387207
    3. ' hitting' → logprob: -3.8858799934387207
    4. 'return' → logprob: -5.010879993438721
    5. 'hit' → logprob: -6.260879993438721
    6. 'being' → logprob: -6.260879993438721
    7. 'collision' → logprob: -7.010879993438721
    8. 'inter' → logprob: -7.135879993438721
    9. ' obstacles' → logprob: -7.385879993438721
    10. 'any' → logprob: -7.510879993438721

Token 552: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10815677046775818
    2. 'return' → logprob: -2.358156681060791
    3. ' return' → logprob: -4.858156681060791
    4. '               ' → logprob: -8.98315715789795
    5. '       ' → logprob: -10.60815715789795
    6. '   ' → logprob: -13.73315715789795
    7. '		' → logprob: -14.60815715789795
    8. '
' → logprob: -14.85815715789795
    9. ',' → logprob: -14.98315715789795
    10. '          ' → logprob: -15.10815715789795

Token 553: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013311875984072685
    2. 'return' → logprob: -5.138311862945557
    3. ' return' → logprob: -5.263311862945557
    4. '               ' → logprob: -6.138311862945557
    5. '       ' → logprob: -11.638312339782715
    6. '                   ' → logprob: -12.763312339782715
    7. '                       ' → logprob: -12.888312339782715
    8. '		' → logprob: -13.513312339782715
    9. '            
' → logprob: -13.638312339782715
    10. '          ' → logprob: -14.013312339782715

Token 554: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00020056030189152807
    2. ' return' → logprob: -9.000200271606445
    3. '           ' → logprob: -9.500200271606445
    4. '       ' → logprob: -13.500200271606445
    5. '               ' → logprob: -14.250200271606445
    6. '   ' → logprob: -15.250200271606445
    7. '	return' → logprob: -16.750200271606445
    8. '                   ' → logprob: -19.250200271606445
    9. ':return' → logprob: -19.250200271606445
    10. '
' → logprob: -19.500200271606445

Token 555: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.12520408630371
    4. '           ' → logprob: -17.87520408630371
    5. '"' → logprob: -19.00020408630371
    6. '(True' → logprob: -19.00020408630371
    7. '               ' → logprob: -19.50020408630371
    8. '       ' → logprob: -20.37520408630371
    9. 'False' → logprob: -20.50020408630371
    10. '                   ' → logprob: -20.50020408630371

Token 556: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8683732748031616
    2. '           ' → logprob: -0.9933732748031616
    3. '       ' → logprob: -1.6183732748031616
    4. ' return' → logprob: -5.493373394012451
    5. 'return' → logprob: -5.868373394012451
    6. '
' → logprob: -6.618373394012451
    7. '        
' → logprob: -7.618373394012451
    8. ' ' → logprob: -7.743373394012451
    9. '    
' → logprob: -7.993373394012451
    10. '    ' → logprob: -7.993373394012451

Token 557: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06170804053544998
    2. '       ' → logprob: -2.9367079734802246
    3. '
' → logprob: -6.061707973480225
    4. '    
' → logprob: -6.686707973480225
    5. ' return' → logprob: -6.936707973480225
    6. 'return' → logprob: -7.311707973480225
    7. '        
' → logprob: -7.561707973480225
    8. '           ' → logprob: -8.061708450317383
    9. '	return' → logprob: -8.686708450317383
    10. '<|end|>' → logprob: -9.061708450317383

Token 558: ' t' (ID: 260)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08923377096652985
    2. '   ' → logprob: -2.589233875274658
    3. '           ' → logprob: -5.464233875274658
    4. 'return' → logprob: -6.089233875274658
    5. '
' → logprob: -7.089233875274658
    6. '        
' → logprob: -7.089233875274658
    7. ' return' → logprob: -7.339233875274658
    8. ' ' → logprob: -7.964233875274658
    9. '    ' → logprob: -8.9642333984375
    10. '    
' → logprob: -9.3392333984375

Token 559: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14747808873653412
    2. '+=' → logprob: -2.1474781036376953
    3. '+' → logprob: -3.8974781036376953
    4. ' +' → logprob: -10.147478103637695
    5. ' ' → logprob: -12.272478103637695
    6. '=' → logprob: -13.147478103637695
    7. '+='' → logprob: -14.397478103637695
    8. '+="' → logprob: -14.522478103637695
    9. ']+=' → logprob: -15.897478103637695
    10. '+=(' → logprob: -16.522478103637695

Token 560: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.005234121344983578
    2. ' step' → logprob: -5.255234241485596
    3. '0' → logprob: -15.505233764648438
    4. ' ' → logprob: -17.005233764648438
    5. '	step' → logprob: -17.880233764648438
    6. '(step' → logprob: -18.005233764648438
    7. '1' → logprob: -18.255233764648438
    8. '.step' → logprob: -19.130233764648438
    9. 'Step' → logprob: -19.755233764648438
    10. 'space' → logprob: -19.755233764648438

Token 561: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. '(False' → logprob: -20.750911712646484
    4. '_false' → logprob: -22.000911712646484
    5. 'false' → logprob: -22.250911712646484
    6. 'True' → logprob: -22.875911712646484
    7. '=False' → logprob: -23.500911712646484
    8. '.False' → logprob: -25.125911712646484
    9. '_FALSE' → logprob: -26.750911712646484
    10. 'FALSE' → logprob: -27.000911712646484

Token 565: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 566: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 567: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.125992551445961
    2. ' bird' → logprob: -3.5009925365448
    3. 'main' → logprob: -4.250992774963379
    4. ' check' → logprob: -4.625992774963379
    5. ' egg' → logprob: -4.625992774963379
    6. ' is' → logprob: -4.875992774963379
    7. ' calculate' → logprob: -5.000992774963379
    8. ' solve' → logprob: -5.250992774963379
    9. ' hit' → logprob: -5.625992774963379
    10. ' pig' → logprob: -5.625992774963379

Token 568: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00023762896307744086
    2. '():
' → logprob: -8.375237464904785
    3. ' ():' → logprob: -12.875237464904785
    4. '()' → logprob: -13.125237464904785
    5. '():
' → logprob: -13.250237464904785
    6. '(' → logprob: -14.750237464904785
    7. '()>' → logprob: -16.1252384185791
    8. '():

' → logprob: -16.3752384185791
    9. '().' → logprob: -17.5002384185791
    10. ':' → logprob: -17.7502384185791

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030460132285952568
    2. ' V' → logprob: -4.030460357666016
    3. ' import' → logprob: -5.155460357666016
    4. ' n' → logprob: -6.030460357666016
    5. ' input' → logprob: -6.530460357666016
    6. 'import' → logprob: -7.405460357666016
    7. 'n' → logprob: -7.780460357666016
    8. '    ' → logprob: -8.530460357666016
    9. ' inputs' → logprob: -8.655460357666016
    10. '(' → logprob: -9.155460357666016

Token 570: ' N' (ID: 478)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.8363119959831238
    2. '   ' → logprob: -1.3363120555877686
    3. ' V' → logprob: -2.0863120555877686
    4. 'N' (adapté à ' N') → logprob: -2.9613120555877686
    5. 'import' → logprob: -3.0863120555877686
    6. 'n' → logprob: -3.2113120555877686
    7. ' import' → logprob: -3.8363120555877686
    8. ' n' → logprob: -4.3363118171691895
    9. ' N' → logprob: -5.5863118171691895
    10. 'X' → logprob: -6.7113118171691895

Token 571: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011338639073073864
    2. '=' → logprob: -4.511338710784912
    3. ',' → logprob: -8.761338233947754
    4. ' ' → logprob: -9.386338233947754
    5. '=int' → logprob: -10.261338233947754
    6. ' =
' → logprob: -12.386338233947754
    7. '   ' → logprob: -12.511338233947754
    8. '=input' → logprob: -13.136338233947754
    9. ' ,' → logprob: -13.261338233947754
    10. '  ' → logprob: -14.136338233947754

Token 572: ' V' (ID: 631)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.14857040345668793
    2. 'V' → logprob: -2.3985702991485596
    3. 'M' → logprob: -4.023570537567139
    4. ' X' → logprob: -4.023570537567139
    5. ' V' → logprob: -5.648570537567139
    6. ' =' → logprob: -6.148570537567139
    7. ' M' → logprob: -6.648570537567139
    8. 'VX' → logprob: -6.648570537567139
    9. '=' → logprob: -6.898570537567139
    10. 'K' → logprob: -7.898570537567139

Token 573: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014676183462143
    2. ' =' → logprob: -1.7014676332473755
    3. ',' → logprob: -9.951467514038086
    4. '=input' → logprob: -12.076467514038086
    5. ')' → logprob: -15.326467514038086
    6. ')=' → logprob: -15.826467514038086
    7. ' ' → logprob: -15.951467514038086
    8. '<|end|>' → logprob: -16.201467514038086
    9. '=int' → logprob: -16.451467514038086
    10. 'input' → logprob: -16.451467514038086

Token 574: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.005959495436400175
    2. ' X' → logprob: -5.130959510803223
    3. 'input' → logprob: -11.880959510803223
    4. ' ' → logprob: -12.630959510803223
    5. '_X' → logprob: -12.755959510803223
    6. 'target' → logprob: -13.005959510803223
    7. '*' → logprob: -13.005959510803223
    8. '=' → logprob: -13.755959510803223
    9. 'data' → logprob: -13.880959510803223
    10. 'pig' → logprob: -13.880959510803223

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006008113850839436
    2. '=' → logprob: -7.625600814819336
    3. ' =' → logprob: -9.125600814819336
    4. ' ,' → logprob: -12.750600814819336
    5. ',Y' → logprob: -14.625600814819336
    6. 'Y' → logprob: -15.125600814819336
    7. '<|end|>' → logprob: -16.000600814819336
    8. ',y' → logprob: -16.625600814819336
    9. ' ' → logprob: -17.125600814819336
    10. '_,' → logprob: -17.625600814819336

Token 576: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0004892880679108202
    2. ' Y' → logprob: -7.625489234924316
    3. '   ' → logprob: -14.000489234924316
    4. ' ' → logprob: -15.500489234924316
    5. '  ' → logprob: -16.250490188598633
    6. '    ' → logprob: -16.625490188598633
    7. '	Y' → logprob: -17.250490188598633
    8. '<|end|>' → logprob: -17.500490188598633
    9. ',' → logprob: -17.875490188598633
    10. 'and' → logprob: -17.875490188598633

Token 577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759422183036804
    2. ' =' → logprob: -0.8259422183036804
    3. '=input' → logprob: -13.325942039489746
    4. ',' → logprob: -14.075942039489746
    5. ' ' → logprob: -15.075942039489746
    6. '   ' → logprob: -16.450942993164062
    7. '  ' → logprob: -17.825942993164062
    8. ' ' → logprob: -17.825942993164062
    9. ')' → logprob: -18.325942993164062
    10. 'input' → logprob: -18.575942993164062

Token 578: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.029751529917120934
    2. 'map' → logprob: -3.5297515392303467
    3. ' list' → logprob: -14.404751777648926
    4. '[' → logprob: -15.404751777648926
    5. ' [' → logprob: -16.40475082397461
    6. 'list' → logprob: -16.40475082397461
    7. '(map' → logprob: -16.65475082397461
    8. '	map' → logprob: -17.02975082397461
    9. ' ' → logprob: -17.77975082397461
    10. ' input' → logprob: -18.15475082397461

Token 579: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00160782050807029
    2. '(input' → logprob: -6.626607894897461
    3. '(' → logprob: -8.376607894897461
    4. 'int' → logprob: -10.501607894897461
    5. '(str' → logprob: -11.626607894897461
    6. '(float' → logprob: -12.376607894897461
    7. 'input' → logprob: -12.751607894897461
    8. '<int' → logprob: -12.876607894897461
    9. '[int' → logprob: -13.376607894897461
    10. '(
' → logprob: -13.501607894897461

Token 580: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.46625763177871704
    2. ',input' → logprob: -1.7162575721740723
    3. ',' → logprob: -2.0912575721740723
    4. 'input' → logprob: -2.7162575721740723
    5. ')' → logprob: -6.341257572174072
    6. '(' → logprob: -7.591257572174072
    7. ' input' → logprob: -7.591257572174072
    8. '(),' → logprob: -8.34125804901123
    9. '=input' → logprob: -8.84125804901123
    10. '   ' → logprob: -10.59125804901123

Token 581: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.7610454708337784e-05
    2. ' input' → logprob: -10.500027656555176
    3. ')' → logprob: -17.37502670288086
    4. '   ' → logprob: -18.62502670288086
    5. ',input' → logprob: -19.37502670288086
    6. '
' → logprob: -20.00002670288086
    7. '=input' → logprob: -20.25002670288086
    8. '```' → logprob: -20.50002670288086
    9. '(input' → logprob: -20.62502670288086
    10. ' ' → logprob: -20.87502670288086

Token 582: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -12.250004768371582
    3. ' ().' → logprob: -16.6250057220459
    4. '()
' → logprob: -19.7500057220459
    5. '(' → logprob: -19.7500057220459
    6. '())' → logprob: -20.2500057220459
    7. '("").' → logprob: -21.2500057220459
    8. '()[' → logprob: -21.6250057220459
    9. '()?.' → logprob: -22.1250057220459
    10. '('').' → logprob: -22.5000057220459

Token 583: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.2729995988775045e-06
    2. '().' → logprob: -12.750006675720215
    3. 'strip' → logprob: -13.125006675720215
    4. '(split' → logprob: -14.250006675720215
    5. ' split' → logprob: -14.500006675720215
    6. 'rstrip' → logprob: -15.750006675720215
    7. 'spl' → logprob: -17.1250057220459
    8. 's' → logprob: -17.8750057220459
    9. ')' → logprob: -18.0000057220459
    10. '.split' → logprob: -18.2500057220459

Token 584: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05255917087197304
    2. '()' → logprob: -3.0525591373443604
    3. ')' → logprob: -5.5525593757629395
    4. '(' → logprob: -9.802558898925781
    5. '('' → logprob: -10.927558898925781
    6. '())
' → logprob: -11.677558898925781
    7. '().' → logprob: -12.927558898925781
    8. '()
' → logprob: -14.802558898925781
    9. '("' → logprob: -15.052558898925781
    10. '(),' → logprob: -15.177558898925781

Token 585: '   ' (ID: 271)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.10560429096221924
    2. '	ob' → logprob: -2.7306041717529297
    3. '   ' → logprob: -3.7306041717529297
    4. ' obstacles' → logprob: -4.85560417175293
    5. ' ob' → logprob: -6.60560417175293
    6. '
' → logprob: -6.85560417175293
    7. '_ob' → logprob: -7.60560417175293
    8. '(ob' → logprob: -8.98060417175293
    9. '```' → logprob: -9.48060417175293
    10. '    
' → logprob: -9.98060417175293

Token 586: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -5.438573680294212e-06
    2. ' obstacles' → logprob: -12.750005722045898
    3. '	ob' → logprob: -13.375005722045898
    4. '   ' → logprob: -14.375005722045898
    5. '_ob' → logprob: -15.875005722045898
    6. 'obs' → logprob: -16.2500057220459
    7. '.ob' → logprob: -16.5000057220459
    8. '(ob' → logprob: -17.0000057220459
    9. 'obl' → logprob: -18.3750057220459
    10. '-ob' → logprob: -18.8750057220459

Token 587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20154568552970886
    2. '=' → logprob: -1.7015457153320312
    3. '=[]' → logprob: -8.951545715332031
    4. '[]' → logprob: -13.701545715332031
    5. '=[]
' → logprob: -14.451545715332031
    6. 's' → logprob: -14.701545715332031
    7. '[' → logprob: -15.201545715332031
    8. ',' → logprob: -16.45154571533203
    9. '=[]
' → logprob: -16.57654571533203
    10. '[:]' → logprob: -16.70154571533203

Token 588: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.08029783517122269
    2. '[' → logprob: -2.5802979469299316
    3. '[]
' → logprob: -6.580297946929932
    4. '[int' → logprob: -11.830297470092773
    5. '[array' → logprob: -12.955297470092773
    6. '[input' → logprob: -13.830297470092773
    7. '[get' → logprob: -13.830297470092773
    8. '[
' → logprob: -13.955297470092773
    9. '[]

' → logprob: -14.205297470092773
    10. '[user' → logprob: -14.705297470092773

Token 589: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18288317322731018
    2. 'for' → logprob: -1.8078831434249878
    3. '   ' → logprob: -5.932883262634277
    4. '	for' → logprob: -8.057883262634277
    5. '<|end|>' → logprob: -9.057883262634277
    6. '
' → logprob: -10.182883262634277
    7. '    
' → logprob: -12.307883262634277
    8. ' 
' → logprob: -12.682883262634277
    9. ' ' → logprob: -13.682883262634277
    10. '<|end|>' → logprob: -14.432883262634277

Token 590: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.048642322421073914
    2. ' for' → logprob: -3.04864239692688
    3. '   ' → logprob: -9.9236421585083
    4. '	for' → logprob: -12.0486421585083
    5. '
' → logprob: -17.673643112182617
    6. '    
' → logprob: -18.423643112182617
    7. ' ' → logprob: -20.173643112182617
    8. '<|end|>' → logprob: -20.923643112182617
    9. ' 
' → logprob: -21.173643112182617
    10. '```' → logprob: -21.298643112182617

Token 591: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.941850526549388e-06
    2. ' _' → logprob: -11.750007629394531
    3. ' in' → logprob: -17.00000762939453
    4. 'i' → logprob: -17.25000762939453
    5. '_i' → logprob: -17.50000762939453
    6. ' range' → logprob: -19.25000762939453
    7. ' i' → logprob: -19.87500762939453
    8. '_=' → logprob: -19.87500762939453
    9. '_range' → logprob: -20.25000762939453
    10. '_in' → logprob: -21.12500762939453

Token 592: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3029519021511078
    2. ' in' → logprob: -2.0529518127441406
    3. 'range' → logprob: -2.3029518127441406
    4. '_' → logprob: -3.5529518127441406
    5. 'in' → logprob: -5.427951812744141
    6. '_range' → logprob: -12.55295181274414
    7. ' ' → logprob: -12.67795181274414
    8. 'ange' → logprob: -12.92795181274414
    9. ' _' → logprob: -13.17795181274414
    10. '	range' → logprob: -14.05295181274414

Token 593: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -18.25007438659668
    4. 'ange' → logprob: -18.37507438659668
    5. '   ' → logprob: -18.50007438659668
    6. '	range' → logprob: -19.12507438659668
    7. '  ' → logprob: -20.50007438659668
    8. 'input' → logprob: -20.75007438659668
    9. 'rang' → logprob: -20.87507438659668
    10. 'in' → logprob: -21.37507438659668

Token 594: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10072223097085953
    2. 'N' → logprob: -2.350722312927246
    3. '(' → logprob: -7.600722312927246
    4. ' N' → logprob: -11.350722312927246
    5. ' (' → logprob: -12.975722312927246
    6. '(int' → logprob: -14.725722312927246
    7. '(n' → logprob: -15.100722312927246
    8. '(
' → logprob: -15.475722312927246
    9. 'range' → logprob: -15.850722312927246
    10. '_N' → logprob: -16.85072135925293

Token 595: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47435805201530457
    2. '):' → logprob: -0.974358081817627
    3. ':' → logprob: -9.099357604980469
    4. '):
' → logprob: -9.474357604980469
    5. '   ' → logprob: -9.974357604980469
    6. '():
' → logprob: -10.974357604980469
    7. ':
' → logprob: -11.224357604980469
    8. ')' → logprob: -12.224357604980469
    9. '<|end|>' → logprob: -13.349357604980469
    10. '):

' → logprob: -13.474357604980469

Token 596: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22325602173805237
    2. '       ' → logprob: -1.84825599193573
    3. 'ob' → logprob: -4.3482561111450195
    4. 'L' → logprob: -4.5982561111450195
    5. ' obstacles' → logprob: -5.2232561111450195
    6. ' L' → logprob: -5.4732561111450195
    7. ' ob' → logprob: -5.5982561111450195
    8. '    ' → logprob: -6.2232561111450195
    9. '	ob' → logprob: -7.0982561111450195
    10. '_ob' → logprob: -8.09825611114502

Token 597: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.01265114825218916
    2. ' L' → logprob: -4.387650966644287
    3. 'ob' → logprob: -10.012651443481445
    4. '   ' → logprob: -10.137651443481445
    5. 'l' → logprob: -10.887651443481445
    6. ' obstacles' → logprob: -10.887651443481445
    7. 'x' → logprob: -11.762651443481445
    8. '	L' → logprob: -12.637651443481445
    9. ' ' → logprob: -12.887651443481445
    10. 'a' → logprob: -13.637651443481445

Token 598: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018935515254270285
    2. ' ,' → logprob: -8.750189781188965
    3. ',B' → logprob: -10.500189781188965
    4. '<|end|>' → logprob: -14.000189781188965
    5. ',b' → logprob: -14.375189781188965
    6. '=' → logprob: -14.625189781188965
    7. '_,' → logprob: -14.875189781188965
    8. ',
' → logprob: -15.250189781188965
    9. 'B' → logprob: -15.375189781188965
    10. '‌,' → logprob: -15.500189781188965

Token 599: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00861468818038702
    2. ' B' → logprob: -4.758614540100098
    3. ',' → logprob: -15.633614540100098
    4. ' ' → logprob: -17.383615493774414
    5. '<|end|>' → logprob: -17.883615493774414
    6. ' 
' → logprob: -18.258615493774414
    7. '    ' → logprob: -18.383615493774414
    8. 'space' → logprob: -18.633615493774414
    9. '    
' → logprob: -19.133615493774414
    10. '  ' → logprob: -19.258615493774414

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.158350151963532e-05
    2. ',R' → logprob: -9.750061988830566
    3. ' ,' → logprob: -13.125061988830566
    4. 'R' → logprob: -13.750061988830566
    5. ',Q' → logprob: -17.25006103515625
    6. ',r' → logprob: -17.75006103515625
    7. '=' → logprob: -17.75006103515625
    8. '<|end|>' → logprob: -18.25006103515625
    9. ',U' → logprob: -18.37506103515625
    10. '_,' → logprob: -18.50006103515625

Token 601: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00018065694894175977
    2. ' R' → logprob: -8.6251802444458
    3. 'T' → logprob: -13.8751802444458
    4. ' ' → logprob: -17.250181198120117
    5. '   ' → logprob: -17.375181198120117
    6. '  ' → logprob: -17.875181198120117
    7. '	R' → logprob: -18.375181198120117
    8. ',' → logprob: -18.500181198120117
    9. 'D' → logprob: -18.625181198120117
    10. '
' → logprob: -19.625181198120117

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ' ,' → logprob: -12.875004768371582
    3. '=' → logprob: -13.250004768371582
    4. ',B' → logprob: -16.5000057220459
    5. ',Y' → logprob: -16.6250057220459
    6. ',E' → logprob: -17.0000057220459
    7. '<|end|>' → logprob: -17.1250057220459
    8. ',C' → logprob: -17.3750057220459
    9. ',D' → logprob: -17.6250057220459
    10. ',
' → logprob: -17.8750057220459

Token 603: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.16022484004497528
    2. ' T' → logprob: -1.9102247953414917
    3. 'S' → logprob: -14.285224914550781
    4. ' ' → logprob: -16.91022491455078
    5. ' S' → logprob: -18.41022491455078
    6. '   ' → logprob: -19.53522491455078
    7. 'A' → logprob: -19.53522491455078
    8. '  ' → logprob: -19.53522491455078
    9. '
' → logprob: -19.91022491455078
    10. ',' → logprob: -20.16022491455078

Token 604: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889077812433243
    2. ' =' → logprob: -2.578890800476074
    3. '   ' → logprob: -14.828890800476074
    4. '=input' → logprob: -15.328890800476074
    5. '=int' → logprob: -15.453890800476074
    6. ' ' → logprob: -16.578889846801758
    7. '＝' → logprob: -17.203889846801758
    8. '=line' → logprob: -17.328889846801758
    9. ')' → logprob: -17.828889846801758
    10. ')=' → logprob: -18.078889846801758

Token 605: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.048587825149297714
    2. 'map' → logprob: -3.0485877990722656
    3. '	map' → logprob: -14.673587799072266
    4. '   ' → logprob: -18.423587799072266
    5. ' list' → logprob: -19.048587799072266
    6. '    ' → logprob: -20.048587799072266
    7. ' ' → logprob: -20.298587799072266
    8. 'm' → logprob: -20.298587799072266
    9. ' mapa' → logprob: -20.673587799072266
    10. '_map' → logprob: -20.798587799072266

Token 606: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.5716304410016164e-05
    2. 'int' → logprob: -10.250035285949707
    3. '[int' → logprob: -15.625035285949707
    4. '<int' → logprob: -17.000036239624023
    5. '(float' → logprob: -17.000036239624023
    6. '(' → logprob: -17.375036239624023
    7. '=int' → logprob: -17.625036239624023
    8. '(list' → logprob: -18.625036239624023
    9. ',int' → logprob: -19.000036239624023
    10. '(input' → logprob: -19.125036239624023

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06233098730444908
    2. ',input' → logprob: -2.812330961227417
    3. '(input' → logprob: -8.062331199645996
    4. 'input' → logprob: -10.562331199645996
    5. '(' → logprob: -11.687331199645996
    6. ' ,' → logprob: -11.937331199645996
    7. '(),' → logprob: -12.937331199645996
    8. '   ' → logprob: -13.437331199645996
    9. '```' → logprob: -13.687331199645996
    10. '
' → logprob: -14.187331199645996

Token 608: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.615255839889869e-05
    2. ' input' → logprob: -9.250096321105957
    3. '_input' → logprob: -21.12509536743164
    4. '=input' → logprob: -21.12509536743164
    5. ' ' → logprob: -22.00009536743164
    6. ',input' → logprob: -22.12509536743164
    7. '(input' → logprob: -22.25009536743164
    8. '<input' → logprob: -22.50009536743164
    9. '   ' → logprob: -23.25009536743164
    10. '	input' → logprob: -23.37509536743164

Token 609: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: 0.0
    2. '()' → logprob: -18.25
    3. ' ().' → logprob: -18.375
    4. '.' → logprob: -19.0
    5. '.split' → logprob: -20.0
    6. '()
' → logprob: -22.0
    7. ' .' → logprob: -23.0
    8. '(' → logprob: -23.25
    9. '   ' → logprob: -24.0
    10. ')' → logprob: -24.75

Token 610: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. 'strip' → logprob: -14.500000953674316
    3. '.split' → logprob: -17.125
    4. ' split' → logprob: -17.5
    5. 'rstrip' → logprob: -17.5
    6. '(split' → logprob: -17.625
    7. '().' → logprob: -18.0
    8. 'plit' → logprob: -18.625
    9. 'spl' → logprob: -19.125
    10. '_split' → logprob: -19.5

Token 611: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39698106050491333
    2. '())' → logprob: -1.1469810009002686
    3. '())
' → logprob: -5.271981239318848
    4. '()' → logprob: -5.896981239318848
    5. ')
' → logprob: -6.146981239318848
    6. '()
' → logprob: -10.896981239318848
    7. '())
' → logprob: -11.896981239318848
    8. '(' → logprob: -12.271981239318848
    9. ')
' → logprob: -12.646981239318848
    10. '))' → logprob: -14.021981239318848

Token 612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1267480105161667
    2. '   ' → logprob: -2.2517480850219727
    3. '	ob' → logprob: -4.751748085021973
    4. 'ob' → logprob: -5.501748085021973
    5. ' obstacles' → logprob: -7.501748085021973
    6. '
' → logprob: -8.501748085021973
    7. '<|end|>' → logprob: -8.876748085021973
    8. ' ob' → logprob: -9.376748085021973
    9. '(ob' → logprob: -10.126748085021973
    10. '        
' → logprob: -11.126748085021973

Token 613: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.015061021782457829
    2. ' obstacles' → logprob: -4.390060901641846
    3. '   ' → logprob: -6.140060901641846
    4. '	ob' → logprob: -8.390061378479004
    5. '       ' → logprob: -8.890061378479004
    6. ' ob' → logprob: -10.640061378479004
    7. '(ob' → logprob: -13.390061378479004
    8. 'obs' → logprob: -13.890061378479004
    9. '_ob' → logprob: -14.140061378479004
    10. '.ob' → logprob: -14.640061378479004

Token 614: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003365350130479783
    2. '.' → logprob: -8.000336647033691
    3. '.app' → logprob: -14.875336647033691
    4. ' .' → logprob: -15.625336647033691
    5. '.ap' → logprob: -15.625336647033691
    6. '.extend' → logprob: -15.750336647033691
    7. '.Append' → logprob: -16.250335693359375
    8. '.add' → logprob: -16.500335693359375
    9. 'append' → logprob: -16.500335693359375
    10. '.push' → logprob: -16.875335693359375

Token 615: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0030277445912361145
    2. '(' → logprob: -6.00302791595459
    3. '(L' → logprob: -7.50302791595459
    4. ' (' → logprob: -15.00302791595459
    5. '([' → logprob: -15.50302791595459
    6. '(
' → logprob: -18.003026962280273
    7. '(l' → logprob: -18.253026962280273
    8. '[(' → logprob: -18.253026962280273
    9. ' ((' → logprob: -18.378026962280273
    10. '   ' → logprob: -19.753026962280273

Token 616: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.6240566083070007e-06
    2. ' L' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.500001907348633
    4. '	L' → logprob: -19.875001907348633
    5. '  ' → logprob: -22.125001907348633
    6. '(L' → logprob: -22.250001907348633
    7. ')L' → logprob: -22.375001907348633
    8. '_L' → logprob: -23.375001907348633
    9. '    ' → logprob: -23.625001907348633
    10. ' ' → logprob: -23.750001907348633

Token 617: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012965429341420531
    2. ',B' → logprob: -6.751296520233154
    3. ' ,' → logprob: -9.001296997070312
    4. 'B' → logprob: -13.376296997070312
    5. ',
' → logprob: -14.001296997070312
    6. ' B' → logprob: -14.876296997070312
    7. ',b' → logprob: -16.126296997070312
    8. ' ' → logprob: -16.501296997070312
    9. ',
' → logprob: -17.376296997070312
    10. '   ' → logprob: -17.751296997070312

Token 618: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.001170225441455841
    2. ' B' → logprob: -6.7511701583862305
    3. '	B' → logprob: -18.501171112060547
    4. '   ' → logprob: -18.876171112060547
    5. ' ' → logprob: -19.251171112060547
    6. 'b' → logprob: -20.251171112060547
    7. ',' → logprob: -20.626171112060547
    8. ' ' → logprob: -21.376171112060547
    9. ')' → logprob: -21.501171112060547
    10. '_B' → logprob: -21.501171112060547

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3199920178740285e-05
    2. ',R' → logprob: -11.375022888183594
    3. ' ,' → logprob: -11.500022888183594
    4. ',
' → logprob: -13.375022888183594
    5. ',T' → logprob: -18.875022888183594
    6. ',
' → logprob: -19.750022888183594
    7. 'R' → logprob: -19.875022888183594
    8. ',

' → logprob: -20.500022888183594
    9. '   ' → logprob: -20.750022888183594
    10. '‌,' → logprob: -21.125022888183594

Token 620: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0007099286303855479
    2. ' R' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.500709533691406
    4. ' ' → logprob: -19.000709533691406
    5. '  ' → logprob: -20.875709533691406
    6. '	R' → logprob: -21.125709533691406
    7. '    ' → logprob: -21.250709533691406
    8. '
' → logprob: -21.500709533691406
    9. '       ' → logprob: -21.750709533691406
    10. ',' → logprob: -22.375709533691406

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.384836888173595e-05
    2. ',T' → logprob: -9.7500638961792
    3. ' ,' → logprob: -12.2500638961792
    4. ',
' → logprob: -14.3750638961792
    5. 'T' → logprob: -16.500062942504883
    6. ',R' → logprob: -18.125062942504883
    7. '   ' → logprob: -18.500062942504883
    8. '),' → logprob: -19.000062942504883
    9. '`,' → logprob: -19.250062942504883
    10. '```' → logprob: -19.250062942504883

Token 622: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.000488110730657354
    2. ' T' → logprob: -7.62548828125
    3. '   ' → logprob: -17.50048828125
    4. ' ' → logprob: -17.50048828125
    5. '	T' → logprob: -19.00048828125
    6. '  ' → logprob: -19.87548828125
    7. ')' → logprob: -20.37548828125
    8. '
' → logprob: -20.62548828125
    9. ' ' → logprob: -20.87548828125
    10. '    ' → logprob: -21.37548828125

Token 623: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00029279827140271664
    2. ')' → logprob: -8.250292778015137
    3. '))
' → logprob: -10.375292778015137
    4. ' ))' → logprob: -15.750292778015137
    5. ')))' → logprob: -15.750292778015137
    6. '));' → logprob: -16.875293731689453
    7. '))

' → logprob: -17.125293731689453
    8. ')
' → logprob: -17.500293731689453
    9. '   ' → logprob: -18.625293731689453
    10. '),' → logprob: -18.625293731689453

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025335369631648064
    2. ' for' → logprob: -4.150335311889648
    3. 'for' → logprob: -5.775335311889648
    4. 't' → logprob: -5.900335311889648
    5. '```' → logprob: -6.025335311889648
    6. '
' → logprob: -8.025335311889648
    7. '    
' → logprob: -8.275335311889648
    8. ' t' → logprob: -8.400335311889648
    9. '<|end|>' → logprob: -9.525335311889648
    10. ' egg' → logprob: -10.150335311889648

Token 625: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2472555935382843
    2. 'print' → logprob: -1.997255563735962
    3. 'result' → logprob: -2.497255563735962
    4. ' if' → logprob: -6.997255802154541
    5. '   ' → logprob: -10.872255325317383
    6. 'for' → logprob: -10.872255325317383
    7. 'angle' → logprob: -10.997255325317383
    8. 'found' → logprob: -10.997255325317383
    9. ' result' → logprob: -11.122255325317383
    10. 'res' → logprob: -11.497255325317383

Token 626: ' egg' (ID: 16102)
  Prédit: ' egg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' egg' → logprob: -0.12696170806884766
    2. 'egg' → logprob: -2.1269617080688477
    3. ' bird' → logprob: -10.751961708068848
    4. 'bird' → logprob: -11.376961708068848
    5. 'eg' → logprob: -15.501961708068848
    6. '   ' → logprob: -15.626961708068848
    7. ' eggs' → logprob: -16.00196075439453
    8. ' ' → logprob: -16.12696075439453
    9. ' ' → logprob: -16.25196075439453
    10. ' eagle' → logprob: -16.75196075439453

Token 627: '_can' (ID: 71644)
  Prédit: '_can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_can' → logprob: 0.0
    2. '_c' → logprob: -17.875
    3. '_ca' → logprob: -18.875
    4. ' _' → logprob: -18.875
    5. '_CAN' → logprob: -20.0
    6. '_' → logprob: -20.625
    7. '_has' → logprob: -20.75
    8. 'Can' → logprob: -20.75
    9. '_should' → logprob: -21.125
    10. '\' → logprob: -21.25

Token 628: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.0013283335138112307
    2. 'hit' → logprob: -6.626328468322754
    3. '_hits' → logprob: -14.126328468322754
    4. ' hit' → logprob: -14.501328468322754
    5. '_' → logprob: -14.876328468322754
    6. '_can' → logprob: -15.626328468322754
    7. 'Hit' → logprob: -15.751328468322754
    8. '```' → logprob: -15.751328468322754
    9. '(hit' → logprob: -16.126327514648438
    10. '_h' → logprob: -16.626327514648438

Token 629: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -6.749814019713085e-06
    2. 'pig' → logprob: -12.125006675720215
    3. '_' → logprob: -13.750006675720215
    4. 'p' → logprob: -17.50000762939453
    5. '(p' → logprob: -17.75000762939453
    6. ' pig' → logprob: -18.00000762939453
    7. 'egg' → logprob: -18.25000762939453
    8. 'Pig' → logprob: -18.37500762939453
    9. '<p' → logprob: -19.37500762939453
    10. '_b' → logprob: -19.62500762939453

Token 630: 'ig' (ID: 343)
  Prédit: 'ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -1.5570885807392187e-05
    2. 'g' → logprob: -12.250015258789062
    3. 'pig' → logprob: -12.500015258789062
    4. 'иг' → logprob: -13.125015258789062
    5. 'i' → logprob: -13.625015258789062
    6. 'og' → logprob: -14.000015258789062
    7. 'igg' → logprob: -14.937515258789062
    8. 'igs' → logprob: -15.125015258789062
    9. 'p' → logprob: -15.375015258789062
    10. '   ' → logprob: -15.562515258789062

Token 631: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -8.137130498653278e-05
    2. '(' → logprob: -9.500081062316895
    3. ' (' → logprob: -12.250081062316895
    4. '((' → logprob: -14.500081062316895
    5. '(
' → logprob: -15.625081062316895
    6. '\(' → logprob: -15.875081062316895
    7. '```' → logprob: -16.25008201599121
    8. ')' → logprob: -16.37508201599121
    9. '(N' → logprob: -16.62508201599121
    10. '(True' → logprob: -16.62508201599121

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014776040916331112
    2. ' ,' → logprob: -9.125147819519043
    3. ',X' → logprob: -10.250147819519043
    4. ',
' → logprob: -13.500147819519043
    5. ',V' → logprob: -14.375147819519043
    6. '(' → logprob: -14.625147819519043
    7. '(X' → logprob: -14.625147819519043
    8. ',x' → logprob: -16.500146865844727
    9. '
' → logprob: -16.625146865844727
    10. ')' → logprob: -16.625146865844727

Token 633: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.306760805164231e-05
    2. ' X' → logprob: -11.25001335144043
    3. '	X' → logprob: -21.75001335144043
    4. '   ' → logprob: -22.12501335144043
    5. '(X' → logprob: -22.50001335144043
    6. ')' → logprob: -23.50001335144043
    7. '>X' → logprob: -23.50001335144043
    8. ',X' → logprob: -23.62501335144043
    9. '
' → logprob: -23.87501335144043
    10. 'Xs' → logprob: -24.12501335144043

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4894986785948277e-05
    2. ',Y' → logprob: -10.500044822692871
    3. ' ,' → logprob: -11.000044822692871
    4. ',
' → logprob: -15.000044822692871
    5. '   ' → logprob: -15.750044822692871
    6. 'Y' → logprob: -16.000045776367188
    7. '```' → logprob: -17.375045776367188
    8. ',y' → logprob: -18.375045776367188
    9. ')' → logprob: -18.625045776367188
    10. ',V' → logprob: -19.250045776367188

Token 635: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -9.13388703338569e-06
    2. ' Y' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.250009536743164
    4. '	Y' → logprob: -18.125009536743164
    5. '    ' → logprob: -19.000009536743164
    6. ' ' → logprob: -19.375009536743164
    7. '
' → logprob: -19.500009536743164
    8. '  ' → logprob: -19.625009536743164
    9. '       ' → logprob: -20.375009536743164
    10. '```' → logprob: -21.250009536743164

Token 636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ' ,' → logprob: -12.500004768371582
    3. 'ob' → logprob: -14.500004768371582
    4. ',
' → logprob: -15.125004768371582
    5. '(ob' → logprob: -15.750004768371582
    6. '   ' → logprob: -16.6250057220459
    7. '```' → logprob: -17.2500057220459
    8. ')' → logprob: -17.6250057220459
    9. '),' → logprob: -17.7500057220459
    10. '‌,' → logprob: -18.2500057220459

Token 637: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.0019294669618830085
    2. ' obstacles' → logprob: -6.25192928314209
    3. '(ob' → logprob: -15.12692928314209
    4. '	ob' → logprob: -15.75192928314209
    5. 'obs' → logprob: -16.126930236816406
    6. ' ob' → logprob: -16.251930236816406
    7. '   ' → logprob: -17.376930236816406
    8. '.ob' → logprob: -17.501930236816406
    9. '[]' → logprob: -17.626930236816406
    10. ' obst' → logprob: -18.001930236816406

Token 638: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019347082125023007
    2. '):
' → logprob: -6.25193452835083
    3. ')' → logprob: -12.251935005187988
    4. '):
' → logprob: -13.751935005187988
    5. ' ):' → logprob: -15.876935005187988
    6. ':' → logprob: -16.001934051513672
    7. '):

' → logprob: -18.501934051513672
    8. '   ' → logprob: -18.501934051513672
    9. '():' → logprob: -18.751934051513672
    10. '[]):' → logprob: -18.876934051513672

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007885443628765643
    2. 'print' → logprob: -7.375788688659668
    3. ' print' → logprob: -8.750788688659668
    4. '   ' → logprob: -13.750788688659668
    5. '
' → logprob: -14.125788688659668
    6. '	print' → logprob: -15.125788688659668
    7. '	   ' → logprob: -15.500788688659668
    8. ',' → logprob: -15.625788688659668
    9. '```' → logprob: -15.625788688659668
    10. '      ' → logprob: -15.875788688659668

Token 640: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04769589751958847
    2. ' print' → logprob: -3.5476958751678467
    3. '       ' → logprob: -4.047696113586426
    4. '   ' → logprob: -8.047696113586426
    5. '	print' → logprob: -12.797696113586426
    6. '```' → logprob: -16.79769515991211
    7. ' ' → logprob: -17.17269515991211
    8. '           ' → logprob: -17.29769515991211
    9. '
' → logprob: -17.42269515991211
    10. '.print' → logprob: -18.54769515991211

Token 641: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00026205103495158255
    2. '(' → logprob: -8.500262260437012
    3. '('' → logprob: -9.750262260437012
    4. '"' → logprob: -16.000261306762695
    5. '(True' → logprob: -16.875261306762695
    6. ' ("' → logprob: -17.125261306762695
    7. '(":' → logprob: -17.500261306762695
    8. '(("' → logprob: -17.875261306762695
    9. '(
' → logprob: -18.000261306762695
    10. '("'' → logprob: -18.875261306762695

Token 642: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.004739126190543175
    2. 'YES' → logprob: -5.504739284515381
    3. 'True' → logprob: -8.004738807678223
    4. 'Possible' → logprob: -9.254738807678223
    5. 'Hit' → logprob: -9.754738807678223
    6. 'Good' → logprob: -10.504738807678223
    7. 'WIN' → logprob: -10.879738807678223
    8. 'yes' → logprob: -10.879738807678223
    9. 'Happy' → logprob: -10.879738807678223
    10. 'Lucky' → logprob: -11.129738807678223

Token 643: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.06199143826961517
    2. '")' → logprob: -2.8119914531707764
    3. '")
' → logprob: -10.686991691589355
    4. ')
' → logprob: -14.561991691589355
    5. ')' → logprob: -15.061991691589355
    6. '")

' → logprob: -16.81199073791504
    7. '"' → logprob: -16.93699073791504
    8. '')
' → logprob: -17.18699073791504
    9. '```' → logprob: -17.81199073791504
    10. '");' → logprob: -18.06199073791504

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015586259542033076
    2. 'else' → logprob: -9.000155448913574
    3. ' else' → logprob: -10.375155448913574
    4. '	else' → logprob: -14.250155448913574
    5. '<|end|>' → logprob: -15.000155448913574
    6. '       ' → logprob: -16.50015640258789
    7. '```' → logprob: -17.12515640258789
    8. ' ' → logprob: -18.25015640258789
    9. '<|end|>' → logprob: -18.25015640258789
    10. '   ' → logprob: -18.37515640258789

Token 645: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5975066423416138
    2. '   ' → logprob: -0.8475066423416138
    3. ' else' → logprob: -3.847506523132324
    4. '	else' → logprob: -13.222506523132324
    5. ' ' → logprob: -13.597506523132324
    6. '       ' → logprob: -16.59750747680664
    7. '```' → logprob: -16.59750747680664
    8. 'elser' → logprob: -16.72250747680664
    9. '  ' → logprob: -16.84750747680664
    10. 'elif' → logprob: -17.72250747680664

Token 646: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02345568872988224
    2. ':
' → logprob: -3.7734556198120117
    3. '       ' → logprob: -9.148455619812012
    4. '   ' → logprob: -9.273455619812012
    5. ' :' → logprob: -12.023455619812012
    6. ' :
' → logprob: -13.523455619812012
    7. ':
' → logprob: -14.273455619812012
    8. '    ' → logprob: -14.648455619812012
    9. ',' → logprob: -15.023455619812012
    10. '      ' → logprob: -15.023455619812012

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020596429705619812
    2. ' print' → logprob: -4.145596504211426
    3. 'print' → logprob: -5.395596504211426
    4. '	print' → logprob: -11.770596504211426
    5. '   ' → logprob: -12.645596504211426
    6. '(print' → logprob: -13.145596504211426
    7. '(' → logprob: -14.645596504211426
    8. '.print' → logprob: -14.645596504211426
    9. '           ' → logprob: -14.770596504211426
    10. '```' → logprob: -15.645596504211426

Token 648: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.011059612035751343
    2. 'print' (adapté à ' print') → logprob: -4.511059761047363
    3. '       ' → logprob: -11.511059761047363
    4. '	print' → logprob: -13.761059761047363
    5. '.print' → logprob: -15.011059761047363
    6. '   ' → logprob: -15.636059761047363
    7. '    ' → logprob: -15.886059761047363
    8. ' ' → logprob: -16.511058807373047
    9. '(print' → logprob: -17.511058807373047
    10. ' printf' → logprob: -18.261058807373047

Token 649: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007099286303855479
    2. '(' → logprob: -7.2507100105285645
    3. '(
' → logprob: -17.000709533691406
    4. '('' → logprob: -17.750709533691406
    5. '("("' → logprob: -17.875709533691406
    6. '(

' → logprob: -20.125709533691406
    7. '("""' → logprob: -20.375709533691406
    8. '("")' → logprob: -20.625709533691406
    9. '(""' → logprob: -21.000709533691406
    10. '("(' → logprob: -21.000709533691406

Token 650: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.306760805164231e-05
    2. '"No' → logprob: -11.25001335144043
    3. '"' → logprob: -17.87501335144043
    4. ' No' → logprob: -19.12501335144043
    5. 'NO' → logprob: -19.12501335144043
    6. '“No' → logprob: -21.00001335144043
    7. '_No' → logprob: -22.12501335144043
    8. '.No' → logprob: -22.37501335144043
    9. '>No' → logprob: -22.50001335144043
    10. 'Sorry' → logprob: -22.75001335144043

Token 651: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.8624639324116288e-06
    2. ')")' → logprob: -13.750001907348633
    3. ')' → logprob: -14.375001907348633
    4. '")
' → logprob: -15.750001907348633
    5. '}")' → logprob: -20.625001907348633
    6. '')' → logprob: -21.000001907348633
    7. '()' → logprob: -21.000001907348633
    8. '”)' → logprob: -21.500001907348633
    9. '"' → logprob: -21.625001907348633
    10. '")
' → logprob: -21.875001907348633

Token 652: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00016802136087790132
    2. 'main' → logprob: -8.875167846679688
    3. ' if' → logprob: -10.875167846679688
    4. '<|end|>' → logprob: -12.375167846679688
    5. '```' → logprob: -12.375167846679688
    6. '
' → logprob: -14.500167846679688
    7. '#' → logprob: -17.125167846679688
    8. 'If' → logprob: -17.375167846679688
    9. 'import' → logprob: -17.500167846679688
    10. '\' → logprob: -17.500167846679688

Token 653: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 651
Tokens correctement prédits (1ère position, stricte): 295
Tokens correctement prédits (1ère position, avec adaptation): 319
Tokens correctement prédits (top 10): 577
Précision stricte (1ère position): 45.31%
Précision adaptée (1ère position): 49.00%
Précision (top 10): 88.63%
================================================================================
