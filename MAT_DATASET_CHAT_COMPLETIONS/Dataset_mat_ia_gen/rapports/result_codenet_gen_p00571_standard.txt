================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline
N=int(input())
items=[tuple(map(int,input().split())) for _ in range(N)]
items.sort(key=lambda x:x[0])
prefix=[0]*(N+1)
res=-10**18
j=0
for i in range(N):
    while j<N and (items[j][0]-items[i][0])<=1000000000000000:
        j+=1
    # sum values from i to j-1
    total=sum(items[k][1] for k in range(i,j))
    val=total-(items[j-1][0]-items[i][0])
    res=max(res,val)
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6788356304168701
    2. '\n' → logprob: -0.8038356304168701
    3. 'import' → logprob: -4.428835868835449
    4. 'newline' → logprob: -4.678835868835449
    5. '\' → logprob: -4.803835868835449
    6. '
' → logprob: -5.678835868835449
    7. '```' → logprob: -5.678835868835449
    8. '<|end|>' → logprob: -5.928835868835449
    9. '' → logprob: -6.428835868835449
    10. 'print' → logprob: -7.178835868835449

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004960254766047001
    2. '.' → logprob: -5.379960060119629
    3. ' (' → logprob: -9.379960060119629
    4. '(
' → logprob: -9.504960060119629
    5. ')' → logprob: -9.879960060119629
    6. '()' → logprob: -10.129960060119629
    7. '('' → logprob: -11.129960060119629
    8. '[' → logprob: -11.129960060119629
    9. ' ' → logprob: -11.754960060119629
    10. '=' → logprob: -11.879960060119629

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0011133047519251704
    2. '[' → logprob: -7.501113414764404
    3. ' .' → logprob: -8.376112937927246
    4. '.readline' → logprob: -8.501112937927246
    5. '.
' → logprob: -10.876112937927246
    6. '.[' → logprob: -11.126112937927246
    7. '.get' → logprob: -11.251112937927246
    8. '.setdefault' → logprob: -11.501112937927246
    9. ''.' → logprob: -12.126112937927246
    10. '"."' → logprob: -12.251112937927246

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25736203789711
    2. '.readline' → logprob: -1.5073620080947876
    3. '.read' → logprob: -5.257361888885498
    4. '.Read' → logprob: -9.757362365722656
    5. '```' → logprob: -10.632362365722656
    6. '.get' → logprob: -10.757362365722656
    7. '.
' → logprob: -11.132362365722656
    8. '[' → logprob: -11.257362365722656
    9. '.readlines' → logprob: -11.507362365722656
    10. '<|end|>' → logprob: -11.632362365722656

Token 7: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020644422620534897
    2. '(' → logprob: -4.395644187927246
    3. '().' → logprob: -4.895644187927246
    4. '()
' → logprob: -7.895644187927246
    5. '(
' → logprob: -9.645644187927246
    6. '()\' → logprob: -9.770644187927246
    7. ')' → logprob: -10.270644187927246
    8. '()

' → logprob: -10.770644187927246
    9. '
' → logprob: -11.520644187927246
    10. ' ()' → logprob: -11.645644187927246

Token 8: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021844852715730667
    2. '(' → logprob: -3.8968448638916016
    3. '().' → logprob: -7.646844863891602
    4. '()
' → logprob: -7.896844863891602
    5. '()\' → logprob: -8.771844863891602
    6. 'def' → logprob: -9.896844863891602
    7. '(
' → logprob: -10.021844863891602
    8. '()

' → logprob: -10.396844863891602
    9. 'print' → logprob: -10.771844863891602
    10. '(n' → logprob: -10.896844863891602

Token 9: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6483597755432129
    2. '=' → logprob: -0.7733597755432129
    3. ' ' → logprob: -4.648359775543213
    4. ')' → logprob: -6.398359775543213
    5. ',' → logprob: -6.773359775543213
    6. '.' → logprob: -6.898359775543213
    7. '[' → logprob: -7.273359775543213
    8. '_' → logprob: -8.148359298706055
    9. '  ' → logprob: -8.273359298706055
    10. '>' → logprob: -8.773359298706055

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31365981698036194
    2. '(input' → logprob: -1.3136597871780396
    3. '(sys' → logprob: -9.06365966796875
    4. '(N' → logprob: -9.31365966796875
    5. '()' → logprob: -9.68865966796875
    6. '('' → logprob: -9.81365966796875
    7. 'input' → logprob: -10.43865966796875
    8. ' (' → logprob: -11.68865966796875
    9. '(`' → logprob: -11.68865966796875
    10. '(
' → logprob: -11.93865966796875

Token 11: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05792631581425667
    2. '()' → logprob: -3.3079264163970947
    3. ')' → logprob: -3.9329264163970947
    4. '(' → logprob: -9.932926177978516
    5. ' ())' → logprob: -10.057926177978516
    6. '()))' → logprob: -13.182926177978516
    7. '();)' → logprob: -13.557926177978516
    8. '().' → logprob: -13.557926177978516
    9. '`)' → logprob: -13.682926177978516
    10. '())
' → logprob: -13.807926177978516

Token 12: 'items' (ID: 6918)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08519259095191956
    2. 'data' → logprob: -2.9601926803588867
    3. ' for' → logprob: -4.710192680358887
    4. 'a' → logprob: -5.460192680358887
    5. '*' → logprob: -6.085192680358887
    6. ')' → logprob: -6.210192680358887
    7. 'if' → logprob: -6.460192680358887
    8. '\' → logprob: -6.460192680358887
    9. 's' → logprob: -7.085192680358887
    10. '\n' → logprob: -7.085192680358887

Token 13: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006227744743227959
    2. '.' → logprob: -5.756227970123291
    3. '=' → logprob: -6.006227970123291
    4. ' =' → logprob: -8.756227493286133
    5. '[:]' → logprob: -9.006227493286133
    6. '[]' → logprob: -9.381227493286133
    7. '=[' → logprob: -10.506227493286133
    8. 's' → logprob: -10.756227493286133
    9. '[count' → logprob: -10.881227493286133
    10. '\[' → logprob: -11.006227493286133

Token 14: 'tuple' (ID: 52834)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2043382078409195
    2. '()]' → logprob: -2.704338312149048
    3. 'list' → logprob: -2.954338312149048
    4. 'int' → logprob: -3.204338312149048
    5. 'input' → logprob: -5.579338073730469
    6. '(' → logprob: -5.579338073730469
    7. '()' → logprob: -5.579338073730469
    8. '(int' → logprob: -5.704338073730469
    9. 'tuple' → logprob: -5.829338073730469
    10. '[]' → logprob: -5.954338073730469

Token 15: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.08242672681808472
    2. '(input' → logprob: -2.5824267864227295
    3. '(int' → logprob: -6.08242654800415
    4. '(' → logprob: -6.70742654800415
    5. 'map' → logprob: -11.582427024841309
    6. '(list' → logprob: -12.082427024841309
    7. 'input' → logprob: -12.957427024841309
    8. '(
' → logprob: -13.207427024841309
    9. '((' → logprob: -13.582427024841309
    10. '(i' → logprob: -13.957427024841309

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0018814003560692072
    2. '(str' → logprob: -7.2518815994262695
    3. 'int' → logprob: -7.5018815994262695
    4. '<|end|>' → logprob: -8.62688159942627
    5. ',int' → logprob: -9.00188159942627
    6. '(' → logprob: -9.25188159942627
    7. '<int' → logprob: -10.00188159942627
    8. 'str' → logprob: -10.00188159942627
    9. '=int' → logprob: -10.25188159942627
    10. '[int' → logprob: -10.87688159942627

Token 17: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3693883717060089
    2. ',input' → logprob: -1.7443883419036865
    3. '(' → logprob: -2.6193883419036865
    4. ',' → logprob: -2.9943883419036865
    5. ')' → logprob: -5.369388580322266
    6. '<|end|>' → logprob: -5.744388580322266
    7. 'input' → logprob: -6.369388580322266
    8. '=input' → logprob: -8.244388580322266
    9. '<|end|>' → logprob: -8.494388580322266
    10. '(sys' → logprob: -8.744388580322266

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.869017852295656e-06
    2. '()' → logprob: -12.250006675720215
    3. '.readline' → logprob: -13.750006675720215
    4. '.split' → logprob: -14.625006675720215
    5. '.' → logprob: -16.25000762939453
    6. 'split' → logprob: -16.25000762939453
    7. '(' → logprob: -16.75000762939453
    8. ' ().' → logprob: -16.87500762939453
    9. '()))' → logprob: -17.12500762939453
    10. '()
' → logprob: -17.75000762939453

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003512999275699258
    2. 'strip' → logprob: -5.753512859344482
    3. 'rstrip' → logprob: -8.00351333618164
    4. ' split' → logprob: -14.12851333618164
    5. '(split' → logprob: -15.37851333618164
    6. 'spl' → logprob: -17.75351333618164
    7. 's' → logprob: -18.37851333618164
    8. 'rs' → logprob: -18.50351333618164
    9. '.split' → logprob: -18.62851333618164
    10. '```' → logprob: -19.00351333618164

Token 20: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5766161680221558
    2. '()))' → logprob: -0.8266161680221558
    3. '()' → logprob: -8.076616287231445
    4. '())' → logprob: -8.951616287231445
    5. '(' → logprob: -9.576616287231445
    6. '()))
' → logprob: -9.826616287231445
    7. ')' → logprob: -10.076616287231445
    8. ')))' → logprob: -10.576616287231445
    9. ' ))' → logprob: -11.201616287231445
    10. '))
' → logprob: -11.576616287231445

Token 21: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4245242476463318
    2. ')]' → logprob: -1.1745243072509766
    3. ']' → logprob: -3.4245243072509766
    4. ' for' → logprob: -6.049524307250977
    5. 'for' → logprob: -6.924524307250977
    6. ')])' → logprob: -8.424524307250977
    7. '),' → logprob: -8.549524307250977
    8. '])' → logprob: -8.799524307250977
    9. ',' → logprob: -8.924524307250977
    10. ')],' → logprob: -9.549524307250977

Token 22: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22377602756023407
    2. ' range' → logprob: -1.7237759828567505
    3. ' _' → logprob: -3.84877610206604
    4. 'range' → logprob: -7.473775863647461
    5. ' ' → logprob: -9.098775863647461
    6. '_range' → logprob: -9.473775863647461
    7. ' i' → logprob: -10.348775863647461
    8. ' in' → logprob: -11.473775863647461
    9. '(range' → logprob: -12.848775863647461
    10. ' xrange' → logprob: -12.973775863647461

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012630313634872437
    2. 'in' → logprob: -4.387630462646484
    3. ' ' → logprob: -9.762630462646484
    4. 'range' → logprob: -10.012630462646484
    5. ' range' → logprob: -11.887630462646484
    6. 'i' → logprob: -12.262630462646484
    7. ' i' → logprob: -13.137630462646484
    8. ' _' → logprob: -13.762630462646484
    9. ')' → logprob: -14.137630462646484
    10. 'n' → logprob: -14.637630462646484

Token 24: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013271415373310447
    2. ' range' → logprob: -6.626327037811279
    3. ' ' → logprob: -14.876327514648438
    4. '(range' → logprob: -15.751327514648438
    5. '	range' → logprob: -15.876327514648438
    6. 'rang' → logprob: -16.001327514648438
    7. '  ' → logprob: -16.376327514648438
    8. 'r' → logprob: -16.501327514648438
    9. '```' → logprob: -16.626327514648438
    10. 'ran' → logprob: -16.876327514648438

Token 25: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0014585700118914247
    2. '(' → logprob: -6.626458644866943
    3. 'N' → logprob: -9.001458168029785
    4. ')' → logprob: -12.501458168029785
    5. '(n' → logprob: -13.001458168029785
    6. ' N' → logprob: -13.501458168029785
    7. '(
' → logprob: -13.751458168029785
    8. ' (' → logprob: -14.126458168029785
    9. '(

' → logprob: -16.8764591217041
    10. '(len' → logprob: -17.2514591217041

Token 26: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00021307668066583574
    2. ')' → logprob: -8.625212669372559
    3. ']' → logprob: -11.000212669372559
    4. ')])' → logprob: -11.500212669372559
    5. '])]' → logprob: -12.875212669372559
    6. '))' → logprob: -13.625212669372559
    7. ')]
' → logprob: -13.750212669372559
    8. '])' → logprob: -14.500212669372559
    9. '')]' → logprob: -15.375212669372559
    10. ' )' → logprob: -15.500212669372559

Token 27: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.004640049301087856
    2. 'sorted' → logprob: -6.004640102386475
    3. '```' → logprob: -7.629640102386475
    4. '\n' → logprob: -8.004639625549316
    5. 's' → logprob: -8.129639625549316
    6. '
' → logprob: -8.254639625549316
    7. 'dp' → logprob: -8.629639625549316
    8. '\' → logprob: -8.754639625549316
    9. ' items' → logprob: -9.879639625549316
    10. 'result' → logprob: -10.004639625549316

Token 28: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48742014169692993
    2. '(' → logprob: -0.9874201416969299
    3. '(key' → logprob: -4.862420082092285
    4. '(reverse' → logprob: -5.362420082092285
    5. '(()' → logprob: -8.112420082092285
    6. '((' → logprob: -8.987420082092285
    7. '(lambda' → logprob: -9.612420082092285
    8. '(
' → logprob: -10.237420082092285
    9. '(items' → logprob: -10.362420082092285
    10. '("("' → logprob: -10.862420082092285

Token 30: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.008615872822701931
    2. '=' → logprob: -4.758615970611572
    3. 'lambda' → logprob: -14.633615493774414
    4. ')=' → logprob: -15.383615493774414
    5. '=len' → logprob: -15.883615493774414
    6. '=item' → logprob: -15.883615493774414
    7. '=

' → logprob: -16.258615493774414
    8. '=(' → logprob: -16.383615493774414
    9. '(lambda' → logprob: -16.758615493774414
    10. '=}' → logprob: -17.258615493774414

Token 31: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1269425004720688
    2. 'x' → logprob: -2.1269423961639404
    3. 'item' → logprob: -12.00194263458252
    4. ' item' → logprob: -12.12694263458252
    5. ' a' → logprob: -13.87694263458252
    6. 'a' → logprob: -14.50194263458252
    7. ' ' → logprob: -14.62694263458252
    8. ' i' → logprob: -15.25194263458252
    9. '	x' → logprob: -15.75194263458252
    10. ' s' → logprob: -16.001941680908203

Token 32: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043645523488521576
    2. ':x' → logprob: -3.1686456203460693
    3. ' :' → logprob: -7.54364538192749
    4. 'x' → logprob: -9.293645858764648
    5. ':(' → logprob: -11.418645858764648
    6. ':
' → logprob: -12.418645858764648
    7. ' x' → logprob: -12.918645858764648
    8. '[' → logprob: -13.918645858764648
    9. ' :(' → logprob: -14.043645858764648
    10. '(x' → logprob: -14.293645858764648

Token 33: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.6087021473795176e-05
    2. ')' → logprob: -10.375045776367188
    3. '.' → logprob: -12.375045776367188
    4. ':' → logprob: -12.500045776367188
    5. '[
' → logprob: -13.250045776367188
    6. '[]' → logprob: -13.500045776367188
    7. ' [' → logprob: -13.625045776367188
    8. '[:' → logprob: -14.500045776367188
    9. ')[' → logprob: -15.000045776367188
    10. '[::-' → logprob: -15.125045776367188

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22559985518455505
    2. '1' → logprob: -1.6005998849868774
    3. ' ' → logprob: -8.725600242614746
    4. '-' → logprob: -10.850600242614746
    5. '2' → logprob: -14.038100242614746
    6. ':' → logprob: -14.100600242614746
    7. '[' → logprob: -14.350600242614746
    8. ')' → logprob: -14.663100242614746
    9. '' → logprob: -14.975600242614746
    10. ' -' → logprob: -15.413100242614746

Token 35: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003391590900719166
    2. ',' → logprob: -6.628391742706299
    3. '))' → logprob: -6.878391742706299
    4. '),' → logprob: -7.503391742706299
    5. '])' → logprob: -8.62839126586914
    6. ')])' → logprob: -9.12839126586914
    7. ' )' → logprob: -9.37839126586914
    8. ')]' → logprob: -9.87839126586914
    9. ',)' → logprob: -10.75339126586914
    10. '})' → logprob: -11.12839126586914

Token 36: 'prefix' (ID: 26155)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022308724001049995
    2. 'd' → logprob: -5.147308826446533
    3. 'for' → logprob: -5.647308826446533
    4. 'result' → logprob: -5.647308826446533
    5. 'total' → logprob: -5.897308826446533
    6. 'max' → logprob: -6.022308826446533
    7. 'time' → logprob: -7.022308826446533
    8. 'answer' → logprob: -7.397308826446533
    9. 'DP' → logprob: -7.522308826446533
    10. 'count' → logprob: -7.897308826446533

Token 37: '=[' (ID: 13370)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.28591644763946533
    2. '_s' → logprob: -1.5359164476394653
    3. '_' → logprob: -3.410916328430176
    4. 's' → logprob: -8.285916328430176
    5. 'sum' → logprob: -10.160916328430176
    6. '_len' → logprob: -10.535916328430176
    7. '_lengths' → logprob: -10.535916328430176
    8. '_length' → logprob: -11.160916328430176
    9. '=[]' → logprob: -11.910916328430176
    10. '_counts' → logprob: -12.285916328430176

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014597235713154078
    2. 'items' → logprob: -8.87514591217041
    3. ' ' → logprob: -12.75014591217041
    4. '[' → logprob: -14.00014591217041
    5. ' items' → logprob: -14.75014591217041
    6. '1' → logprob: -14.87514591217041
    7. '-' → logprob: -14.87514591217041
    8. '(' → logprob: -14.87514591217041
    9. '-items' → logprob: -15.62514591217041
    10. '(items' → logprob: -15.75014591217041

Token 39: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009544557542540133
    2. ']
' → logprob: -7.250954627990723
    3. ']*(' → logprob: -9.125954627990723
    4. '0' → logprob: -10.375954627990723
    5. ']*' → logprob: -10.375954627990723
    6. ']+' → logprob: -10.625954627990723
    7. ']
' → logprob: -11.000954627990723
    8. ',' → logprob: -11.625954627990723
    9. ' ]' → logprob: -11.750954627990723
    10. ')' → logprob: -12.750954627990723

Token 40: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.729906196298543e-06
    2. ' N' → logprob: -12.000009536743164
    3. 'len' → logprob: -12.625009536743164
    4. '(N' → logprob: -16.250009536743164
    5. '100' → logprob: -17.625009536743164
    6. 'n' → logprob: -18.625009536743164
    7. '1' → logprob: -19.250009536743164
    8. '{' → logprob: -19.500009536743164
    9. '0' → logprob: -19.625009536743164
    10. '101' → logprob: -20.000009536743164

Token 41: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.939851037808694e-05
    2. '+
' → logprob: -11.250029563903809
    3. ')' → logprob: -11.625029563903809
    4. '+)' → logprob: -12.375029563903809
    5. ' +' → logprob: -12.750029563903809
    6. '+

' → logprob: -16.250028610229492
    7. ')+' → logprob: -16.500028610229492
    8. '1' → logprob: -17.125028610229492
    9. ')
' → logprob: -17.750028610229492
    10. '```' → logprob: -17.875028610229492

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -14.875036239624023
    4. '```' → logprob: -16.687536239624023
    5. '   ' → logprob: -16.875036239624023
    6. '１' → logprob: -17.062536239624023
    7. ')' → logprob: -17.437536239624023
    8. '  ' → logprob: -17.500036239624023
    9. '
' → logprob: -18.562536239624023
    10. '

' → logprob: -18.750036239624023

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003618839429691434
    2. ')
' → logprob: -5.6286187171936035
    3. ')

' → logprob: -11.753619194030762
    4. ')
' → logprob: -12.003619194030762
    5. ' )' → logprob: -13.003619194030762
    6. ')`' → logprob: -14.628619194030762
    7. '`)' → logprob: -14.878619194030762
    8. '```' → logprob: -15.503619194030762
    9. '),' → logprob: -15.628619194030762
    10. '')' → logprob: -16.128618240356445

Token 44: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023250321100931615
    2. ' for' → logprob: -8.375232696533203
    3. '
' → logprob: -14.000232696533203
    4. '```' → logprob: -14.250232696533203
    5. '\n' → logprob: -15.250232696533203
    6. 'f' → logprob: -17.125232696533203
    7. ' 
' → logprob: -17.500232696533203
    8. '	for' → logprob: -17.875232696533203
    9. 'i' → logprob: -18.250232696533203
    10. 'For' → logprob: -18.625232696533203

Token 45: '=-' (ID: 21714)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23503513634204865
    2. ' =' → logprob: -1.8600351810455322
    3. '[' → logprob: -2.9850351810455322
    4. '[:]' → logprob: -6.485034942626953
    5. '=[]' → logprob: -7.735034942626953
    6. '_' → logprob: -7.985034942626953
    7. ' ' → logprob: -8.485034942626953
    8. '.' → logprob: -8.610034942626953
    9. '[]' → logprob: -8.985034942626953
    10. '=[' → logprob: -9.235034942626953

Token 46: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1056879535317421
    2. '1' → logprob: -2.8556878566741943
    3. 'float' → logprob: -3.2306878566741943
    4. 'int' → logprob: -6.230688095092773
    5. '100' → logprob: -7.230688095092773
    6. 'sys' → logprob: -8.105688095092773
    7. '(' → logprob: -9.355688095092773
    8. '2' → logprob: -9.480688095092773
    9. '200' → logprob: -11.105688095092773
    10. '101' → logprob: -11.480688095092773

Token 47: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06813494116067886
    2. '9' → logprob: -3.3181350231170654
    3. '**' → logprob: -3.5681350231170654
    4. '000' → logprob: -6.943134784698486
    5. '7' → logprob: -8.693135261535645
    6. '00' → logprob: -8.943135261535645
    7. '8' → logprob: -9.193135261535645
    8. '6' → logprob: -10.318135261535645
    9. '^' → logprob: -11.693135261535645
    10. '10' → logprob: -12.318135261535645

Token 48: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04284045472741127
    2. '15' → logprob: -3.2928404808044434
    3. '10' → logprob: -5.792840480804443
    4. '18' → logprob: -6.417840480804443
    5. '12' → logprob: -9.417840003967285
    6. '16' → logprob: -11.667840003967285
    7. '14' → logprob: -12.292840003967285
    8. '20' → logprob: -12.792840003967285
    9. '11' → logprob: -12.917840003967285
    10. '13' → logprob: -13.042840003967285

Token 49: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05419493466615677
    2. '
' → logprob: -3.054194927215576
    3. ' for' → logprob: -5.554194927215576
    4. ' 
' → logprob: -7.054194927215576
    5. '\n' → logprob: -7.429194927215576
    6. '' → logprob: -9.429195404052734
    7. '```' → logprob: -9.929195404052734
    8. '
' → logprob: -10.429195404052734
    9. '\' → logprob: -10.804195404052734
    10. '  
' → logprob: -11.179195404052734

Token 50: 'j' (ID: 73)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005604273173958063
    2. ' for' → logprob: -5.880604267120361
    3. '
' → logprob: -6.005604267120361
    4. '\n' → logprob: -8.13060474395752
    5. ' 
' → logprob: -11.38060474395752
    6. '```' → logprob: -11.38060474395752
    7. '' → logprob: -12.88060474395752
    8. '
' → logprob: -13.00560474395752
    9. '0' → logprob: -14.00560474395752
    10. '+' → logprob: -14.00560474395752

Token 51: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10030081123113632
    2. ' =' → logprob: -2.3503007888793945
    3. '=j' → logprob: -10.100300788879395
    4. '=int' → logprob: -11.225300788879395
    5. '=i' → logprob: -11.225300788879395
    6. ',' → logprob: -12.225300788879395
    7. '=index' → logprob: -12.350300788879395
    8. '=len' → logprob: -12.600300788879395
    9. ' ' → logprob: -12.975300788879395
    10. '＝' → logprob: -13.850300788879395

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -11.000020980834961
    3. '1' → logprob: -12.625020980834961
    4. '-' → logprob: -14.500020980834961
    5. '<|end|>' → logprob: -17.50002098083496
    6. ' -' → logprob: -17.75002098083496
    7. '```' → logprob: -19.25002098083496
    8. '  ' → logprob: -19.31252098083496
    9. '۰' → logprob: -19.37502098083496
    10. '   ' → logprob: -19.50002098083496

Token 53: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4670097529888153
    2. 'for' → logprob: -1.0920097827911377
    3. '<|end|>' → logprob: -4.092009544372559
    4. '
' → logprob: -4.467009544372559
    5. ' 
' → logprob: -5.217009544372559
    6. ' ' → logprob: -6.217009544372559
    7. '+' → logprob: -7.217009544372559
    8. '\n' → logprob: -8.217009544372559
    9. '```' → logprob: -8.467009544372559
    10. '1' → logprob: -8.467009544372559

Token 54: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3907310962677002
    2. 'for' → logprob: -1.2657310962677002
    3. '
' → logprob: -4.265730857849121
    4. '<|end|>' → logprob: -4.390730857849121
    5. ' 
' → logprob: -4.765730857849121
    6. '\n' → logprob: -5.515730857849121
    7. ' ' → logprob: -6.390730857849121
    8. '  
' → logprob: -9.140730857849121
    9. '```' → logprob: -9.140730857849121
    10. '<|end|>' → logprob: -9.265730857849121

Token 55: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03984641656279564
    2. 'i' → logprob: -3.289846420288086
    3. ' range' → logprob: -6.789846420288086
    4. 'range' → logprob: -8.039846420288086
    5. ' ' → logprob: -8.789846420288086
    6. ' in' → logprob: -9.039846420288086
    7. '	i' → logprob: -11.289846420288086
    8. '_i' → logprob: -11.414846420288086
    9. ' j' → logprob: -11.789846420288086
    10. '  ' → logprob: -11.914846420288086

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.201525017619133
    2. 'in' → logprob: -1.7015249729156494
    3. ' ' → logprob: -9.57652473449707
    4. '	in' → logprob: -10.20152473449707
    5. ',' → logprob: -13.57652473449707
    6. '  ' → logprob: -13.95152473449707
    7. '1' → logprob: -14.32652473449707
    8. ',in' → logprob: -14.70152473449707
    9. 'import' → logprob: -14.95152473449707
    10. ')' → logprob: -15.07652473449707

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141470432281494
    2. ' range' → logprob: -1.701414704322815
    3. '(range' → logprob: -14.076415061950684
    4. ' ' → logprob: -14.576415061950684
    5. '	range' → logprob: -16.326414108276367
    6. '   ' → logprob: -16.576414108276367
    7. '  ' → logprob: -16.951414108276367
    8. '0' → logprob: -17.576414108276367
    9. ' xrange' → logprob: -17.826414108276367
    10. '1' → logprob: -18.451414108276367

Token 58: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.20146645605564117
    2. '(' → logprob: -1.70146644115448
    3. '(n' → logprob: -10.82646656036377
    4. 'N' → logprob: -11.20146656036377
    5. '(len' → logprob: -11.57646656036377
    6. '1' → logprob: -12.32646656036377
    7. ' (' → logprob: -12.57646656036377
    8. '(
' → logprob: -13.95146656036377
    9. ' ' → logprob: -14.95146656036377
    10. '(A' → logprob: -15.57646656036377

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023739319294691086
    2. '):
' → logprob: -3.7737393379211426
    3. ')' → logprob: -8.773738861083984
    4. '+' → logprob: -9.148738861083984
    5. ':' → logprob: -9.398738861083984
    6. '):
' → logprob: -9.648738861083984
    7. '-' → logprob: -10.148738861083984
    8. '):

' → logprob: -11.398738861083984
    9. '1' → logprob: -12.023738861083984
    10. ' ' → logprob: -12.398738861083984

Token 60: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3541054427623749
    2. 'while' → logprob: -1.4791054725646973
    3. '	while' → logprob: -3.2291054725646973
    4. '   ' → logprob: -3.8541054725646973
    5. '+' → logprob: -5.229105472564697
    6. ' ' → logprob: -6.604105472564697
    7. '    ' → logprob: -7.604105472564697
    8. ')' → logprob: -7.729105472564697
    9. 'While' → logprob: -7.979105472564697
    10. '  ' → logprob: -8.104104995727539

Token 61: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6989782452583313
    2. 'while' (adapté à ' while') → logprob: -0.6989782452583313
    3. '   ' → logprob: -5.323978424072266
    4. '1' → logprob: -8.073978424072266
    5. '	while' → logprob: -8.948978424072266
    6. '```' → logprob: -9.448978424072266
    7. ')' → logprob: -9.698978424072266
    8. ' ' → logprob: -9.698978424072266
    9. 'for' → logprob: -9.948978424072266
    10. 'j' → logprob: -9.948978424072266

Token 62: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03477086126804352
    2. 'items' → logprob: -3.659770965576172
    3. ' j' → logprob: -5.034770965576172
    4. ' items' → logprob: -7.034770965576172
    5. 'prefix' → logprob: -7.534770965576172
    6. '   ' → logprob: -8.159770965576172
    7. 'i' → logprob: -8.659770965576172
    8. ' ' → logprob: -11.409770965576172
    9. ' prefix' → logprob: -11.784770965576172
    10. '  ' → logprob: -12.034770965576172

Token 63: '<N' (ID: 60262)
  Prédit: '<N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<N' → logprob: -0.044169407337903976
    2. '<' → logprob: -3.1691694259643555
    3. '<n' → logprob: -7.7941694259643555
    4. ' <' → logprob: -7.7941694259643555
    5. '<len' → logprob: -8.044169425964355
    6. '<i' → logprob: -12.544169425964355
    7. 'N' → logprob: -12.669169425964355
    8. '<=' → logprob: -13.044169425964355
    9. '<size' → logprob: -13.294169425964355
    10. '<B' → logprob: -13.544169425964355

Token 64: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.12701167166233063
    2. ' and' → logprob: -2.127011775970459
    3. ' ' → logprob: -10.0020112991333
    4. '   ' → logprob: -10.7520112991333
    5. '  ' → logprob: -11.6270112991333
    6. 'a' → logprob: -13.3770112991333
    7. '    ' → logprob: -13.5020112991333
    8. '```' → logprob: -13.7520112991333
    9. '0' → logprob: -14.1270112991333
    10. '      ' → logprob: -14.5020112991333

Token 65: ' (' (ID: 350)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.28134381771087646
    2. 'items' → logprob: -1.4063438177108765
    3. '   ' → logprob: -9.781343460083008
    4. '	items' → logprob: -10.281343460083008
    5. 'prefix' → logprob: -10.531343460083008
    6. '(items' → logprob: -10.906343460083008
    7. '_items' → logprob: -11.531343460083008
    8. ' ' → logprob: -11.781343460083008
    9. ' prefix' → logprob: -11.781343460083008
    10. '  ' → logprob: -12.031343460083008

Token 66: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.012830877676606178
    2. ' items' → logprob: -4.38783073425293
    3. ')' → logprob: -9.01283073425293
    4. '   ' → logprob: -9.26283073425293
    5. 'prefix' → logprob: -10.38783073425293
    6. 'item' → logprob: -11.01283073425293
    7. 'j' → logprob: -11.76283073425293
    8. 'x' → logprob: -12.01283073425293
    9. '```' → logprob: -12.26283073425293
    10. '	items' → logprob: -12.38783073425293

Token 67: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00016671013145241886
    2. ')[' → logprob: -9.125166893005371
    3. '[' → logprob: -10.500166893005371
    4. '[i' → logprob: -11.375166893005371
    5. ')' → logprob: -11.750166893005371
    6. ' [' → logprob: -12.125166893005371
    7. '   ' → logprob: -13.000166893005371
    8. ' )[' → logprob: -13.875166893005371
    9. '][' → logprob: -14.125166893005371
    10. '```' → logprob: -14.750166893005371

Token 68: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0029033010359853506
    2. ')[' → logprob: -6.002903461456299
    3. '][' → logprob: -7.877903461456299
    4. ' [' → logprob: -11.25290298461914
    5. ')' → logprob: -11.87790298461914
    6. '   ' → logprob: -12.25290298461914
    7. ' )[' → logprob: -12.25290298461914
    8. ''[' → logprob: -13.00290298461914
    9. '[
' → logprob: -13.25290298461914
    10. '```' → logprob: -13.25290298461914

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231736898422241
    2. '1' → logprob: -0.8981736898422241
    3. ' ' → logprob: -10.273173332214355
    4. '
' → logprob: -11.898173332214355
    5. '   ' → logprob: -12.273173332214355
    6. '

' → logprob: -13.835673332214355
    7. ')' → logprob: -14.335673332214355
    8. '```' → logprob: -14.335673332214355
    9. ']' → logprob: -14.773173332214355
    10. '[' → logprob: -15.273173332214355

Token 70: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8339794874191284
    2. '-' → logprob: -1.0839794874191284
    3. '-items' → logprob: -1.8339794874191284
    4. '<=' → logprob: -4.083979606628418
    5. '[' → logprob: -4.333979606628418
    6. '<' → logprob: -4.583979606628418
    7. ')' → logprob: -4.583979606628418
    8. '-item' → logprob: -5.708979606628418
    9. ')<=' → logprob: -5.833979606628418
    10. '   ' → logprob: -6.208979606628418

Token 71: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.01608152873814106
    2. ' items' → logprob: -4.1410813331604
    3. '	items' → logprob: -10.641081809997559
    4. '   ' → logprob: -11.391081809997559
    5. '  ' → logprob: -12.516081809997559
    6. '_items' → logprob: -13.141081809997559
    7. '(items' → logprob: -13.141081809997559
    8. ')' → logprob: -13.641081809997559
    9. ' ' → logprob: -13.766081809997559
    10. '.items' → logprob: -14.391081809997559

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9743012671824545e-05
    2. '[' → logprob: -11.250020027160645
    3. '[j' → logprob: -12.250020027160645
    4. '[I' → logprob: -14.750020027160645
    5. ' ' → logprob: -15.250020027160645
    6. '   ' → logprob: -15.500020027160645
    7. ')[' → logprob: -15.500020027160645
    8. 'i' → logprob: -15.625020027160645
    9. ')' → logprob: -15.625020027160645
    10. ' [' → logprob: -15.875020027160645

Token 73: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005118065746501088
    2. '][' → logprob: -7.625511646270752
    3. ')[' → logprob: -11.37551212310791
    4. ')' → logprob: -13.00051212310791
    5. ''[' → logprob: -13.75051212310791
    6. ' [' → logprob: -13.87551212310791
    7. '0' → logprob: -14.00051212310791
    8. '()[' → logprob: -14.00051212310791
    9. '
' → logprob: -14.12551212310791
    10. '   ' → logprob: -14.12551212310791

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017072015907615423
    2. '1' → logprob: -6.376707077026367
    3. ' ' → logprob: -13.001707077026367
    4. '[' → logprob: -14.189207077026367
    5. '۰' → logprob: -14.751707077026367
    6. '
' → logprob: -15.501707077026367
    7. '

' → logprob: -15.564207077026367
    8. '```' → logprob: -15.689207077026367
    9. '   ' → logprob: -16.064207077026367
    10. ']' → logprob: -16.126707077026367

Token 75: '])' (ID: 4636)
  Prédit: ')<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')<' → logprob: -0.7292974591255188
    2. ')<=' → logprob: -1.479297399520874
    3. ')**' → logprob: -1.979297399520874
    4. '<' → logprob: -2.604297399520874
    5. ')' → logprob: -2.979297399520874
    6. '<=' → logprob: -3.729297399520874
    7. '[' → logprob: -6.354297637939453
    8. ' )' → logprob: -8.229297637939453
    9. ']<=' → logprob: -8.229297637939453
    10. ']<' → logprob: -8.354297637939453

Token 76: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06272123754024506
    2. '<=' → logprob: -2.8127212524414062
    3. ' <' → logprob: -7.937721252441406
    4. '[' → logprob: -8.437721252441406
    5. ' <=' → logprob: -10.062721252441406
    6. '<int' → logprob: -10.062721252441406
    7. '<len' → logprob: -11.312721252441406
    8. ')<=' → logprob: -11.562721252441406
    9. '<data' → logprob: -11.937721252441406
    10. '<size' → logprob: -12.187721252441406

Token 77: '100' (ID: 1353)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6133133769035339
    2. '1' → logprob: -0.9883133769035339
    3. 'k' → logprob: -3.4883134365081787
    4. 'K' → logprob: -3.8633134365081787
    5. 'items' → logprob: -3.8633134365081787
    6. '2' → logprob: -4.8633131980896
    7. '4' → logprob: -6.7383131980896
    8. '100' → logprob: -6.8633131980896
    9. '3' → logprob: -6.8633131980896
    10. '10' → logprob: -7.1133131980896

Token 78: '000' (ID: 1302)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006488934624940157
    2. '0' → logprob: -5.881488800048828
    3. '):' → logprob: -6.131488800048828
    4. ' :' → logprob: -6.631488800048828
    5. '100' → logprob: -9.631488800048828
    6. '000' → logprob: -10.381488800048828
    7. ')' → logprob: -11.131488800048828
    8. ':
' → logprob: -11.506488800048828
    9. '500' → logprob: -11.881488800048828
    10. '1' → logprob: -12.006488800048828

Token 79: '000' (ID: 1302)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011428380385041237
    2. '):' → logprob: -7.501142978668213
    3. '0' → logprob: -8.126142501831055
    4. ':j' → logprob: -8.501142501831055
    5. ':
' → logprob: -10.126142501831055
    6. ' :' → logprob: -10.251142501831055
    7. ')' → logprob: -12.626142501831055
    8. '>:' → logprob: -12.751142501831055
    9. '1' → logprob: -13.251142501831055
    10. ':def' → logprob: -13.876142501831055

Token 80: '000' (ID: 1302)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012799992691725492
    2. ' :' → logprob: -7.001279830932617
    3. '0' → logprob: -8.376279830932617
    4. ':
' → logprob: -10.001279830932617
    5. ':j' → logprob: -10.001279830932617
    6. '):' → logprob: -10.126279830932617
    7. '1' → logprob: -13.876279830932617
    8. ')' → logprob: -13.876279830932617
    9. ':
' → logprob: -14.126279830932617
    10. ':def' → logprob: -14.376279830932617

Token 81: '000' (ID: 1302)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019999155774712563
    2. '0' → logprob: -4.269999027252197
    3. '):' → logprob: -5.644999027252197
    4. ' :' → logprob: -6.144999027252197
    5. '000' → logprob: -10.019999504089355
    6. ')' → logprob: -10.644999504089355
    7. ':
' → logprob: -11.269999504089355
    8. '1' → logprob: -11.644999504089355
    9. ' ):' → logprob: -11.769999504089355
    10. '7' → logprob: -11.894999504089355

Token 82: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011656234040856361
    2. '):' → logprob: -4.886656284332275
    3. ' :' → logprob: -5.886656284332275
    4. '0' → logprob: -6.886656284332275
    5. ')' → logprob: -9.511655807495117
    6. ':
' → logprob: -9.761655807495117
    7. ' ):' → logprob: -10.386655807495117
    8. '000' → logprob: -11.261655807495117
    9. ':j' → logprob: -11.386655807495117
    10. '+:' → logprob: -11.511655807495117

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006125260144472122
    2. ':
' → logprob: -5.506125450134277
    3. '):' → logprob: -6.756125450134277
    4. ':j' → logprob: -7.256125450134277
    5. ')' → logprob: -9.381125450134277
    6. '   ' → logprob: -10.381125450134277
    7. '):
' → logprob: -10.381125450134277
    8. ' :' → logprob: -11.381125450134277
    9. 'j' → logprob: -12.631125450134277
    10. ' ' → logprob: -12.881125450134277

Token 84: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011852286756038666
    2. 'j' → logprob: -5.261852264404297
    3. ':j' → logprob: -5.636852264404297
    4. '):' → logprob: -6.011852264404297
    5. ')' → logprob: -8.386852264404297
    6. ':
' → logprob: -8.636852264404297
    7. '   ' → logprob: -9.511852264404297
    8. '{' → logprob: -10.511852264404297
    9. ' j' → logprob: -10.636852264404297
    10. '):
' → logprob: -11.761852264404297

Token 85: ' j' (ID: 441)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.7077522277832031
    2. 'j' (adapté à ' j') → logprob: -1.4577522277832031
    3. '   ' → logprob: -1.5827522277832031
    4. '+' → logprob: -3.332752227783203
    5. ' prefix' → logprob: -3.957752227783203
    6. 'res' → logprob: -5.082752227783203
    7. ' j' → logprob: -5.582752227783203
    8. ' res' → logprob: -6.207752227783203
    9. '++' → logprob: -7.332752227783203
    10. '       ' → logprob: -7.957752227783203

Token 86: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07909137010574341
    2. '+' → logprob: -2.5790913105010986
    3. ' +=' → logprob: -8.70409107208252
    4. ']+=' → logprob: -10.57909107208252
    5. '++' → logprob: -12.45409107208252
    6. '+="' → logprob: -13.45409107208252
    7. '+='' → logprob: -13.45409107208252
    8. '+j' → logprob: -13.70409107208252
    9. '+++' → logprob: -13.82909107208252
    10. '+=(' → logprob: -14.57909107208252

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.75
    4. '<|end|>' → logprob: -20.25
    5. '```' → logprob: -21.375
    6. '+' → logprob: -21.75
    7. '  ' → logprob: -21.875
    8. '１' → logprob: -22.625
    9. '0' → logprob: -22.75
    10. '۱' → logprob: -23.0

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.588143527507782
    2. '   ' → logprob: -1.5881435871124268
    3. ' 
' → logprob: -1.7131435871124268
    4. ' res' → logprob: -3.5881435871124268
    5. '    
' → logprob: -3.9631435871124268
    6. 'res' → logprob: -5.588143348693848
    7. ' prefix' → logprob: -6.088143348693848
    8. '   
' → logprob: -6.213143348693848
    9. '  
' → logprob: -6.463143348693848
    10. 'prefix' → logprob: -7.213143348693848

Token 89: '   ' (ID: 271)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.770811140537262
    2. ' prefix' → logprob: -1.2708110809326172
    3. '   ' → logprob: -2.020811080932617
    4. 'prefix' → logprob: -2.645811080932617
    5. 'res' → logprob: -3.145811080932617
    6. '
' → logprob: -5.520811080932617
    7. ' 
' → logprob: -6.270811080932617
    8. '    
' → logprob: -6.520811080932617
    9. 'sum' → logprob: -7.520811080932617
    10. '```' → logprob: -7.645811080932617

Token 90: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11731056869029999
    2. 'prefix' → logprob: -2.8673105239868164
    3. ' res' → logprob: -3.1173105239868164
    4. '
' → logprob: -5.492310523986816
    5. 'sum' → logprob: -6.992310523986816
    6. '   ' → logprob: -7.117310523986816
    7. ' 
' → logprob: -7.492310523986816
    8. 'max' → logprob: -7.617310523986816
    9. ' prefix' → logprob: -7.617310523986816
    10. 's' → logprob: -7.867310523986816

Token 91: ' sum' (ID: 4215)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1101112812757492
    2. ' res' → logprob: -2.8601112365722656
    3. 'sum' → logprob: -3.8601112365722656
    4. 'total' → logprob: -4.985111236572266
    5. 'prefix' → logprob: -5.360111236572266
    6. 's' → logprob: -5.485111236572266
    7. 'temp' → logprob: -5.860111236572266
    8. 'current' → logprob: -6.360111236572266
    9. 'for' → logprob: -6.610111236572266
    10. 'max' → logprob: -6.985111236572266

Token 92: ' values' (ID: 4824)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10581246763467789
    2. 'prefix' → logprob: -3.1058125495910645
    3. '=max' → logprob: -4.2308125495910645
    4. ' =' → logprob: -4.6058125495910645
    5. '+=' → logprob: -4.7308125495910645
    6. '_=' → logprob: -5.3558125495910645
    7. '<|end|>' → logprob: -5.3558125495910645
    8. '_prefix' → logprob: -5.4808125495910645
    9. '=sum' → logprob: -5.6058125495910645
    10. '(prefix' → logprob: -6.3558125495910645

Token 93: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0037853471003472805
    2. ' i' → logprob: -5.878785133361816
    3. 'prefix' → logprob: -7.628785133361816
    4. '   ' → logprob: -7.878785133361816
    5. 'items' → logprob: -9.503785133361816
    6. ' prefix' → logprob: -11.628785133361816
    7. 'j' → logprob: -11.878785133361816
    8. '(i' → logprob: -12.378785133361816
    9. ' items' → logprob: -12.503785133361816
    10. '```' → logprob: -12.753785133361816

Token 95: ' to' (ID: 316)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5757964253425598
    2. 'prefix' → logprob: -1.200796365737915
    3. '<|end|>' → logprob: -2.450796365737915
    4. '+=' → logprob: -4.825796604156494
    5. 'res' → logprob: -4.825796604156494
    6. '=' → logprob: -4.950796604156494
    7. '[' → logprob: -5.700796604156494
    8. ')' → logprob: -5.825796604156494
    9. '   ' → logprob: -6.075796604156494
    10. ' to' → logprob: -6.325796604156494

Token 96: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014223090372979641
    2. ' j' → logprob: -4.264223098754883
    3. '   ' → logprob: -9.764223098754883
    4. '[j' → logprob: -14.389223098754883
    5. ' ' → logprob: -14.514223098754883
    6. '
' → logprob: -15.514223098754883
    7. '	j' → logprob: -15.639223098754883
    8. '  ' → logprob: -15.764223098754883
    9. '(j' → logprob: -15.889223098754883
    10. 'items' → logprob: -16.264223098754883

Token 97: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.610174834728241
    2. '<|end|>' → logprob: -1.2351748943328857
    3. '
' → logprob: -2.3601748943328857
    4. '\n' → logprob: -3.4851748943328857
    5. '   ' → logprob: -4.235174655914307
    6. ')' → logprob: -4.485174655914307
    7. 'prefix' → logprob: -5.735174655914307
    8. '1' → logprob: -5.735174655914307
    9. '```' → logprob: -6.610174655914307
    10. '+
' → logprob: -6.735174655914307

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.87501049041748
    3. '2' → logprob: -13.00001049041748
    4. '```' → logprob: -14.25001049041748
    5. '-' → logprob: -15.50001049041748
    6. '   ' → logprob: -15.87501049041748
    7. 'i' → logprob: -17.250011444091797
    8. 's' → logprob: -17.625011444091797
    9. 'j' → logprob: -18.000011444091797
    10. '`' → logprob: -18.062511444091797

Token 99: '
' (ID: 198)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.2864781618118286
    2. '<|end|>' → logprob: -1.9114781618118286
    3. '   ' → logprob: -2.536478042602539
    4. ')' → logprob: -4.661478042602539
    5. '```' → logprob: -5.786478042602539
    6. ' prefix' → logprob: -5.911478042602539
    7. '+' → logprob: -6.286478042602539
    8. '(prefix' → logprob: -6.536478042602539
    9. 'for' → logprob: -7.161478042602539
    10. '
' → logprob: -7.161478042602539

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6998484134674072
    2. 'prefix' → logprob: -1.8248484134674072
    3. '<|end|>' → logprob: -2.0748484134674072
    4. '
' → logprob: -3.0748484134674072
    5. ' 
' → logprob: -3.1998484134674072
    6. 'sum' → logprob: -3.6998484134674072
    7. ' ' → logprob: -3.6998484134674072
    8. ' prefix' → logprob: -4.199848175048828
    9. '    
' → logprob: -4.449848175048828
    10. '+' → logprob: -4.699848175048828

Token 101: ' total' (ID: 3609)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.12001314014196396
    2. 'sum' → logprob: -2.8700132369995117
    3. '<|end|>' → logprob: -4.370013236999512
    4. 'total' (adapté à ' total') → logprob: -5.120013236999512
    5. ' prefix' → logprob: -5.245013236999512
    6. 'temp' → logprob: -5.370013236999512
    7. '   ' → logprob: -5.495013236999512
    8. 'value' → logprob: -5.495013236999512
    9. 'current' → logprob: -5.620013236999512
    10. 'curr' → logprob: -6.120013236999512

Token 102: '=sum' (ID: 174693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05026454105973244
    2. '=sum' → logprob: -3.300264596939087
    3. ' =' → logprob: -4.425264358520508
    4. '=s' → logprob: -10.050264358520508
    5. '=max' → logprob: -10.175264358520508
    6. '=int' → logprob: -10.425264358520508
    7. '=value' → logprob: -11.050264358520508
    8. '_=' → logprob: -11.425264358520508
    9. '=query' → logprob: -11.925264358520508
    10. '+=' → logprob: -12.175264358520508

Token 103: '(items' (ID: 50514)
  Prédit: '(items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(items' → logprob: -0.014010234735906124
    2. '(item' → logprob: -5.264010429382324
    3. '(' → logprob: -5.389010429382324
    4. '([' → logprob: -6.264010429382324
    5. '(value' → logprob: -6.764010429382324
    6. '(x' → logprob: -7.889010429382324
    7. 'items' → logprob: -8.264010429382324
    8. '(prefix' → logprob: -8.389010429382324
    9. '(values' → logprob: -9.264010429382324
    10. '(
' → logprob: -10.264010429382324

Token 104: '[k' (ID: 14298)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.17202597856521606
    2. '[k' → logprob: -2.2970259189605713
    3. '[' → logprob: -3.4220259189605713
    4. '[i' → logprob: -3.7970259189605713
    5. '[x' → logprob: -7.79702615737915
    6. '[min' → logprob: -7.79702615737915
    7. '[s' → logprob: -8.047025680541992
    8. ')[' → logprob: -8.172025680541992
    9. ')' → logprob: -8.797025680541992
    10. ' [' → logprob: -9.047025680541992

Token 105: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002938002347946167
    2. '[' → logprob: -5.8779377937316895
    3. ']' → logprob: -9.877938270568848
    4. ')[' → logprob: -10.002938270568848
    5. ' ][' → logprob: -11.377938270568848
    6. '   ' → logprob: -11.752938270568848
    7. '>[' → logprob: -12.502938270568848
    8. '"][' → logprob: -13.252938270568848
    9. ' [' → logprob: -13.502938270568848
    10. '])[' → logprob: -13.627938270568848

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.416665640543215e-05
    2. '][' → logprob: -11.00003433227539
    3. '[' → logprob: -11.87503433227539
    4. ']' → logprob: -12.62503433227539
    5. ' ' → logprob: -13.37503433227539
    6. '   ' → logprob: -13.62503433227539
    7. '```' → logprob: -13.62503433227539
    8. '
' → logprob: -14.25003433227539
    9. ')' → logprob: -14.75003433227539
    10. '

' → logprob: -15.00003433227539

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003698973741848022
    2. 'for' → logprob: -8.500370025634766
    3. 'k' → logprob: -9.625370025634766
    4. ' ]' → logprob: -10.250370025634766
    5. '])' → logprob: -10.500370025634766
    6. ')' → logprob: -10.875370025634766
    7. ' for' → logprob: -11.500370025634766
    8. '   ' → logprob: -13.625370025634766
    9. ':k' → logprob: -14.000370025634766
    10. '```' → logprob: -14.000370025634766

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16190677881240845
    2. ' for' → logprob: -1.9119067192077637
    3. ')' → logprob: -6.661906719207764
    4. '	for' → logprob: -8.411907196044922
    5. ']' → logprob: -9.286907196044922
    6. 'k' → logprob: -10.411907196044922
    7. ' ' → logprob: -10.911907196044922
    8. '   ' → logprob: -11.036907196044922
    9. '```' → logprob: -11.661907196044922
    10. '+k' → logprob: -12.786907196044922

Token 109: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2902332544326782
    2. 'range' → logprob: -2.1652331352233887
    3. ' k' → logprob: -2.4152331352233887
    4. ' range' → logprob: -3.0402331352233887
    5. '	range' → logprob: -12.290233612060547
    6. ' in' → logprob: -12.790233612060547
    7. '_k' → logprob: -13.165233612060547
    8. '	k' → logprob: -13.165233612060547
    9. '<|end|>' → logprob: -13.915233612060547
    10. ' xrange' → logprob: -13.915233612060547

Token 110: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05725064501166344
    2. ' range' → logprob: -3.057250738143921
    3. ' in' → logprob: -5.182250499725342
    4. 'in' → logprob: -5.932250499725342
    5. 'k' → logprob: -8.8072509765625
    6. '	range' → logprob: -9.3072509765625
    7. '(range' → logprob: -9.6822509765625
    8. ' ' → logprob: -11.1822509765625
    9. ' xrange' → logprob: -11.5572509765625
    10. ')' → logprob: -11.6822509765625

Token 111: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233882926404476
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -16.380233764648438
    4. '	range' → logprob: -17.130233764648438
    5. 'rang' → logprob: -19.755233764648438
    6. '   ' → logprob: -19.880233764648438
    7. ' ' → logprob: -20.255233764648438
    8. 'r' → logprob: -21.380233764648438
    9. ' xrange' → logprob: -22.005233764648438
    10. '```' → logprob: -22.130233764648438

Token 112: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2525383234024048
    2. 'i' → logprob: -1.5025383234024048
    3. ' i' → logprob: -7.752538204193115
    4. '(' → logprob: -9.252538681030273
    5. '   ' → logprob: -9.877538681030273
    6. '	i' → logprob: -11.377538681030273
    7. ')i' → logprob: -11.877538681030273
    8. ' (' → logprob: -12.627538681030273
    9. '(k' → logprob: -13.127538681030273
    10. '[i' → logprob: -13.252538681030273

Token 113: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.5482502579689026
    2. ',' → logprob: -1.2982501983642578
    3. 'j' → logprob: -1.9232501983642578
    4. ' j' → logprob: -6.298250198364258
    5. ' ,' → logprob: -7.673250198364258
    6. '   ' → logprob: -7.798250198364258
    7. ' ' → logprob: -9.298250198364258
    8. '	j' → logprob: -10.298250198364258
    9. '    ' → logprob: -10.673250198364258
    10. '       ' → logprob: -11.673250198364258

Token 114: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009887122549116611
    2. '))' → logprob: -4.634887218475342
    3. ')
' → logprob: -9.259886741638184
    4. ')+' → logprob: -10.884886741638184
    5. ' )' → logprob: -12.384886741638184
    6. '+' → logprob: -12.384886741638184
    7. '])' → logprob: -13.384886741638184
    8. ')>' → logprob: -13.509886741638184
    9. ')))' → logprob: -13.634886741638184
    10. '))
' → logprob: -13.634886741638184

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34291231632232666
    2. '
' → logprob: -1.3429123163223267
    3. 'res' → logprob: -3.592912197113037
    4. ' res' → logprob: -6.842912197113037
    5. '    
' → logprob: -8.217912673950195
    6. '
' → logprob: -9.467912673950195
    7. '  
' → logprob: -9.967912673950195
    8. ' if' → logprob: -10.092912673950195
    9. '  ' → logprob: -10.217912673950195
    10. ' ' → logprob: -10.717912673950195

Token 116: ' val' (ID: 1459)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07669608294963837
    2. '   ' → logprob: -2.7016961574554443
    3. ' res' → logprob: -5.826695919036865
    4. 'if' → logprob: -6.076695919036865
    5. '
' → logprob: -6.951695919036865
    6. ' if' → logprob: -7.701695919036865
    7. '    
' → logprob: -10.076696395874023
    8. ' ' → logprob: -11.326696395874023
    9. '	res' → logprob: -11.701696395874023
    10. '  ' → logprob: -11.826696395874023

Token 117: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012627330143004656
    2. '=max' → logprob: -7.376262664794922
    3. '=res' → logprob: -8.001262664794922
    4. '=id' → logprob: -9.501262664794922
    5. '=_' → logprob: -9.626262664794922
    6. ' =' → logprob: -10.001262664794922
    7. '=e' → logprob: -11.001262664794922
    8. '=value' → logprob: -11.001262664794922
    9. '=
' → logprob: -11.126262664794922
    10. 'ues' → logprob: -11.751262664794922

Token 118: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.02387598343193531
    2. ' total' → logprob: -4.398876190185547
    3. 'prefix' → logprob: -4.898876190185547
    4. 'res' → logprob: -6.273876190185547
    5. 'max' → logprob: -6.398876190185547
    6. 'items' → logprob: -9.148876190185547
    7. ' prefix' → logprob: -9.648876190185547
    8. ' res' → logprob: -10.023876190185547
    9. ' max' → logprob: -10.023876190185547
    10. 'abs' → logprob: -11.148876190185547

Token 119: '-(' (ID: 18825)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6268627047538757
    2. '-max' → logprob: -1.0018627643585205
    3. '-val' → logprob: -3.1268627643585205
    4. '-res' → logprob: -3.7518627643585205
    5. '-items' → logprob: -4.501862525939941
    6. ' -' → logprob: -4.751862525939941
    7. '+' → logprob: -5.376862525939941
    8. '-total' → logprob: -6.626862525939941
    9. '-p' → logprob: -6.751862525939941
    10. '-prefix' → logprob: -7.126862525939941

Token 120: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.03439084067940712
    2. ' items' → logprob: -3.534390926361084
    3. '(items' → logprob: -5.409390926361084
    4. 'prefix' → logprob: -10.159390449523926
    5. ')' → logprob: -10.284390449523926
    6. '   ' → logprob: -10.909390449523926
    7. '	items' → logprob: -11.034390449523926
    8. ' (' → logprob: -11.409390449523926
    9. ' ' → logprob: -11.909390449523926
    10. 'total' → logprob: -12.159390449523926

Token 121: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017544300062581897
    2. '[k' → logprob: -6.376754283905029
    3. '[j' → logprob: -9.876754760742188
    4. '[' → logprob: -14.501754760742188
    5. 'i' → logprob: -15.626754760742188
    6. 'k' → logprob: -17.126754760742188
    7. '[s' → logprob: -17.251754760742188
    8. '```' → logprob: -18.001754760742188
    9. ')[' → logprob: -18.126754760742188
    10. ' [' → logprob: -18.376754760742188

Token 122: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29064831137657166
    2. '][' → logprob: -1.415648341178894
    3. '[' → logprob: -4.790648460388184
    4. ' -' → logprob: -7.165648460388184
    5. '1' → logprob: -8.915648460388184
    6. ']' → logprob: -10.040648460388184
    7. '   ' → logprob: -10.290648460388184
    8. '```' → logprob: -10.790648460388184
    9. ' ][' → logprob: -10.790648460388184
    10. '0' → logprob: -10.915648460388184

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. '][' → logprob: -11.12502670288086
    3. ' ' → logprob: -12.00002670288086
    4. '```' → logprob: -13.68752670288086
    5. '[' → logprob: -13.93752670288086
    6. ']' → logprob: -14.25002670288086
    7. '   ' → logprob: -14.50002670288086
    8. '0' → logprob: -14.56252670288086
    9. '2' → logprob: -14.75002670288086
    10. '-' → logprob: -14.81252670288086

Token 124: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09826913475990295
    2. '[' → logprob: -2.59826922416687
    3. ')[' → logprob: -3.97326922416687
    4. ' ][' → logprob: -9.34826946258545
    5. ']' → logprob: -9.47326946258545
    6. ')' → logprob: -10.34826946258545
    7. '0' → logprob: -10.34826946258545
    8. '}[' → logprob: -10.47326946258545
    9. ')][' → logprob: -10.72326946258545
    10. ' )[' → logprob: -10.72326946258545

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.334533878136426e-05
    2. '][' → logprob: -10.500042915344238
    3. ' ' → logprob: -11.750042915344238
    4. '1' → logprob: -12.750042915344238
    5. '   ' → logprob: -13.125042915344238
    6. '
' → logprob: -14.000042915344238
    7. ']' → logprob: -14.375042915344238
    8. '[' → logprob: -15.000042915344238
    9. '```' → logprob: -15.125042915344238
    10. ')' → logprob: -15.250042915344238

Token 126: ']-' (ID: 27107)
  Prédit: '-items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-items' → logprob: -0.8114715814590454
    2. '-' → logprob: -1.0614715814590454
    3. ' -' → logprob: -1.5614715814590454
    4. '-)' → logprob: -12.811471939086914
    5. '-
' → logprob: -12.936471939086914
    6. ')' → logprob: -13.061471939086914
    7. '-p' → logprob: -13.061471939086914
    8. '-item' → logprob: -13.436471939086914
    9. '-prefix' → logprob: -13.811471939086914
    10. '-values' → logprob: -13.936471939086914

Token 127: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.002810105914250016
    2. ' items' → logprob: -5.877810001373291
    3. '   ' → logprob: -13.12781047821045
    4. '	items' → logprob: -13.37781047821045
    5. '(items' → logprob: -13.62781047821045
    6. '  ' → logprob: -15.50281047821045
    7. ' ' → logprob: -16.252809524536133
    8. '/items' → logprob: -17.002809524536133
    9. '-items' → logprob: -17.377809524536133
    10. 'item' → logprob: -17.502809524536133

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.246537173457909e-06
    2. 'items' → logprob: -13.375003814697266
    3. '[' → logprob: -13.500003814697266
    4. '[j' → logprob: -14.875003814697266
    5. ' [' → logprob: -15.000003814697266
    6. '0' → logprob: -16.125003814697266
    7. '(items' → logprob: -16.500003814697266
    8. '[item' → logprob: -16.500003814697266
    9. ')[' → logprob: -16.750003814697266
    10. 'i' → logprob: -16.875003814697266

Token 129: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31350594758987427
    2. '][' → logprob: -1.3135058879852295
    3. ')[' → logprob: -9.813506126403809
    4. '"][' → logprob: -10.188506126403809
    5. '()[' → logprob: -10.438506126403809
    6. '```' → logprob: -10.438506126403809
    7. ' ][' → logprob: -10.688506126403809
    8. '0' → logprob: -11.063506126403809
    9. '   ' → logprob: -11.438506126403809
    10. ' [' → logprob: -11.438506126403809

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -12.500007629394531
    3. ' ' → logprob: -12.875007629394531
    4. '][' → logprob: -14.750007629394531
    5. '```' → logprob: -15.750007629394531
    6. '۰' → logprob: -16.18750762939453
    7. '1' → logprob: -16.25000762939453
    8. '０' → logprob: -16.31250762939453
    9. '{' → logprob: -16.56250762939453
    10. '   ' → logprob: -16.68750762939453

Token 131: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.567518413066864
    2. ')*' → logprob: -1.0675184726715088
    3. ')**' → logprob: -2.567518472671509
    4. ')
' → logprob: -4.94251823425293
    5. '])' → logprob: -5.56751823425293
    6. ')])' → logprob: -7.94251823425293
    7. '])*' → logprob: -8.06751823425293
    8. ')]' → logprob: -8.69251823425293
    9. ']*' → logprob: -8.81751823425293
    10. ')*(' → logprob: -8.81751823425293

Token 132: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.594261646270752
    2. '
' → logprob: -1.344261646270752
    3. 'res' → logprob: -1.844261646270752
    4. '   ' → logprob: -3.844261646270752
    5. ' if' → logprob: -5.469261646270752
    6. '\n' → logprob: -5.844261646270752
    7. ' res' → logprob: -8.469261169433594
    8. '    
' → logprob: -8.719261169433594
    9. '
' → logprob: -9.719261169433594
    10. ')' → logprob: -9.719261169433594

Token 133: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13053655624389648
    2. 'res' (adapté à ' res') → logprob: -2.1305365562438965
    3. '
' → logprob: -5.7555365562438965
    4. ' if' → logprob: -8.255537033081055
    5. '   ' → logprob: -9.005537033081055
    6. '\n' → logprob: -10.505537033081055
    7. ' res' → logprob: -11.755537033081055
    8. '\' → logprob: -12.380537033081055
    9. '    
' → logprob: -12.505537033081055
    10. ')' → logprob: -12.630537033081055

Token 134: '=max' (ID: 102952)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.254119873046875
    2. '=max' → logprob: -1.504119873046875
    3. ' =' → logprob: -6.129119873046875
    4. 'max' → logprob: -11.754119873046875
    5. '=Math' → logprob: -14.379119873046875
    6. '=min' → logprob: -15.004119873046875
    7. '=int' → logprob: -15.629119873046875
    8. ',max' → logprob: -16.004119873046875
    9. '   ' → logprob: -16.254119873046875
    10. '＝' → logprob: -16.504119873046875

Token 135: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.747814349073451e-05
    2. 'res' → logprob: -11.000017166137695
    3. '(' → logprob: -14.125017166137695
    4. ',res' → logprob: -18.375017166137695
    5. '	res' → logprob: -18.875017166137695
    6. '```' → logprob: -19.500017166137695
    7. '(
' → logprob: -19.875017166137695
    8. '=res' → logprob: -19.875017166137695
    9. ' res' → logprob: -20.000017166137695
    10. ' (' → logprob: -20.250017166137695

Token 136: ',val' (ID: 126054)
  Prédit: ',val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',val' → logprob: -0.3868943452835083
    2. ',' → logprob: -1.1368943452835083
    3. ',res' → logprob: -11.261894226074219
    4. ' ,' → logprob: -11.761894226074219
    5. 'val' → logprob: -13.136894226074219
    6. ' val' → logprob: -14.886894226074219
    7. ',
' → logprob: -16.26189422607422
    8. '(val' → logprob: -16.63689422607422
    9. ',v' → logprob: -17.01189422607422
    10. ',value' → logprob: -17.13689422607422

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009138475870713592
    2. ')
' → logprob: -7.000913619995117
    3. ' )' → logprob: -13.250913619995117
    4. ')i' → logprob: -15.875913619995117
    5. '   ' → logprob: -16.000913619995117
    6. ')
' → logprob: -16.500913619995117
    7. ')return' → logprob: -16.750913619995117
    8. ')

' → logprob: -17.000913619995117
    9. ')`' → logprob: -17.750913619995117
    10. ' )
' → logprob: -18.250913619995117

Token 138: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006827684701420367
    2. ' print' → logprob: -8.625682830810547
    3. '<|end|>' → logprob: -8.625682830810547
    4. ')' → logprob: -8.875682830810547
    5. '
' → logprob: -9.625682830810547
    6. '```' → logprob: -10.000682830810547
    7. 'for' → logprob: -10.875682830810547
    8. '#print' → logprob: -11.250682830810547
    9. '#' → logprob: -11.375682830810547
    10. '\n' → logprob: -11.375682830810547

Token 139: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.002480412134900689
    2. '(' → logprob: -6.002480506896973
    3. 'res' → logprob: -12.502480506896973
    4. ' (' → logprob: -14.377480506896973
    5. '(
' → logprob: -14.877480506896973
    6. '()' → logprob: -17.002479553222656
    7. '(re' → logprob: -17.252479553222656
    8. ',res' → logprob: -17.627479553222656
    9. '(max' → logprob: -17.627479553222656
    10. '(r' → logprob: -17.877479553222656

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.375000953674316
    3. ' )' → logprob: -16.125
    4. ')
' → logprob: -16.5
    5. ')`' → logprob: -16.5
    6. '`)' → logprob: -17.875
    7. '')' → logprob: -17.875
    8. '()' → logprob: -18.125
    9. '())' → logprob: -18.25
    10. ')}' → logprob: -18.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 138
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 110
Précision stricte (1ère position): 40.58%
Précision adaptée (1ère position): 40.58%
Précision (top 10): 79.71%
================================================================================
