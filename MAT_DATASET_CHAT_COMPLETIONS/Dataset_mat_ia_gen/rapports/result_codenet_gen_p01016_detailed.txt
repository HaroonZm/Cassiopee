================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture des entrées
A = input()
B = input()

# Longueur des chaînes
len_A = len(A)
len_B = len(B)

# On parcourt toutes les positions possibles dans A où B peut correspondre
for i in range(len_A - len_B + 1):
    match = True  # Indique si B correspond à A à la position i
    for j in range(len_B):
        # Si le caractère de B est '_' alors il correspond à n'importe quel caractère d'A
        # Sinon, il doit correspondre exactement
        if B[j] != '_' and B[j] != A[i+j]:
            match = False
            break
    # Si on a trouvé une correspondance, on affiche "Yes" et on termine
    if match:
        print("Yes")
        break
else:
    # Si aucune correspondance n'a été trouvée, on affiche "No"
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' des' (ID: 731)
  → Token d'amorce (pas de prédiction)

Token 3: ' entr' (ID: 7072)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0030627958476543427
    2. ' d' → logprob: -7.253062725067139
    3. ' des' → logprob: -7.503062725067139
    4. ' données' → logprob: -7.753062725067139
    5. ' du' → logprob: -8.003063201904297
    6. ' f' → logprob: -8.253063201904297
    7. ' fichiers' → logprob: -8.503063201904297
    8. ' fichier' → logprob: -8.628063201904297
    9. ' ' → logprob: -9.753063201904297
    10. 'f' → logprob: -9.753063201904297

Token 4: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.007903999648988247
    2. 'ée' → logprob: -5.007904052734375
    3. 'és' → logprob: -6.882904052734375
    4. 'é' → logprob: -8.882904052734375
    5. 'êtes' → logprob: -11.382904052734375
    6. 'ès' → logprob: -12.757904052734375
    7. 'ees' → logprob: -13.257904052734375
    8. 'es' → logprob: -13.757904052734375
    9. 'êt' → logprob: -14.007904052734375
    10. 'nées' → logprob: -14.132904052734375

Token 5: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2580466270446777
    2. '```' → logprob: -1.6330466270446777
    3. '#' → logprob: -1.8830466270446777
    4. 's' → logprob: -2.1330466270446777
    5. 'input' → logprob: -2.8830466270446777
    6. '`' → logprob: -3.1330466270446777
    7. ':' → logprob: -3.3830466270446777
    8. 'user' → logprob: -3.5080466270446777
    9. 'inputs' → logprob: -3.8830466270446777
    10. '\' → logprob: -5.133046627044678

Token 6: 'A' (ID: 32)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.3686255216598511
    2. '```' → logprob: -2.4936256408691406
    3. 'inputs' → logprob: -2.7436256408691406
    4. 's' → logprob: -3.2436256408691406
    5. 'input' → logprob: -3.4936256408691406
    6. '_' → logprob: -3.8686256408691406
    7. ' =' → logprob: -4.118625640869141
    8. ' user' → logprob: -4.743625640869141
    9. ':' → logprob: -4.868625640869141
    10. 'def' → logprob: -5.368625640869141

Token 7: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6932397484779358
    2. 'rg' → logprob: -1.318239688873291
    3. '=' → logprob: -2.318239688873291
    4. ' =' → logprob: -3.568239688873291
    5. '=input' → logprob: -4.568239688873291
    6. 'l' → logprob: -4.568239688873291
    7. '#' → logprob: -4.693239688873291
    8. 'n' → logprob: -4.818239688873291
    9. 'i' → logprob: -5.193239688873291
    10. 'u' → logprob: -5.193239688873291

Token 8: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.30306822061538696
    2. 'input' → logprob: -2.053068161010742
    3. ' int' → logprob: -2.678068161010742
    4. ' float' → logprob: -3.303068161010742
    5. ' ' → logprob: -4.678068161010742
    6. 'int' → logprob: -4.928068161010742
    7. ' []' → logprob: -5.428068161010742
    8. 'float' → logprob: -5.678068161010742
    9. ' np' → logprob: -7.178068161010742
    10. '[]' → logprob: -7.803068161010742

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00025561772054061294
    2. '('' → logprob: -9.000255584716797
    3. '()' → logprob: -9.375255584716797
    4. '("("' → logprob: -10.625255584716797
    5. '("' → logprob: -11.375255584716797
    6. '(
' → logprob: -12.125255584716797
    7. '("")' → logprob: -12.750255584716797
    8. ' (' → logprob: -13.875255584716797
    9. '(

' → logprob: -13.875255584716797
    10. '("""' → logprob: -14.625255584716797

Token 10: 'B' (ID: 33)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04776136577129364
    2. '()' → logprob: -4.1727614402771
    3. ')' → logprob: -4.7977614402771
    4. '+' → logprob: -4.9227614402771
    5. '\' → logprob: -6.1727614402771
    6. '(' → logprob: -6.1727614402771
    7. '.strip' → logprob: -6.1727614402771
    8. '[' → logprob: -6.2977614402771
    9. '*' → logprob: -6.7977614402771
    10. '.readline' → logprob: -6.9227614402771

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04963833838701248
    2. '=' → logprob: -3.049638271331787
    3. '.' → logprob: -7.799638271331787
    4. ')' → logprob: -8.299638748168945
    5. ',' → logprob: -9.049638748168945
    6. '_' → logprob: -9.674638748168945
    7. ' ' → logprob: -9.799638748168945
    8. '=input' → logprob: -10.049638748168945
    9. '()' → logprob: -11.049638748168945
    10. 'A' → logprob: -11.424638748168945

Token 12: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16027630865573883
    2. 'input' → logprob: -1.9102762937545776
    3. ' ' → logprob: -11.285276412963867
    4. ' int' → logprob: -11.785276412963867
    5. ' A' → logprob: -11.910276412963867
    6. 'A' → logprob: -12.035276412963867
    7. 'int' → logprob: -12.160276412963867
    8. '=input' → logprob: -12.410276412963867
    9. '(input' → logprob: -12.535276412963867
    10. '	input' → logprob: -13.660276412963867

Token 13: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28128793835639954
    2. '(' → logprob: -1.4062879085540771
    3. '(
' → logprob: -10.156288146972656
    4. '()
' → logprob: -10.656288146972656
    5. ')' → logprob: -11.406288146972656
    6. ' ()' → logprob: -11.656288146972656
    7. ' ' → logprob: -11.781288146972656
    8. ' (' → logprob: -11.781288146972656
    9. '(

' → logprob: -11.781288146972656
    10. '`()' → logprob: -12.031288146972656

Token 14: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09539187699556351
    2. '=' → logprob: -3.3453919887542725
    3. '#' → logprob: -3.4703919887542725
    4. 'if' → logprob: -5.345391750335693
    5. 'C' → logprob: -5.345391750335693
    6. '*' → logprob: -5.595391750335693
    7. 'A' → logprob: -6.345391750335693
    8. '.' → logprob: -6.595391750335693
    9. ' =' → logprob: -6.845391750335693
    10. 'a' → logprob: -6.845391750335693

Token 15: ' Long' (ID: 7790)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8758763670921326
    2. 'if' → logprob: -1.1258764266967773
    3. ' if' → logprob: -1.8758764266967773
    4. 'C' → logprob: -3.3758764266967773
    5. 'result' → logprob: -3.3758764266967773
    6. ' #' → logprob: -4.125876426696777
    7. 'A' → logprob: -4.375876426696777
    8. 'sum' → logprob: -6.000876426696777
    9. ' result' → logprob: -6.375876426696777
    10. ' C' → logprob: -7.375876426696777

Token 16: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.005453004967421293
    2. 'ue' → logprob: -5.380453109741211
    3. 'eur' → logprob: -9.130453109741211
    4. '_' → logprob: -9.130453109741211
    5. 'u' → logprob: -9.255453109741211
    6. 'e' → logprob: -9.505453109741211
    7. '```' → logprob: -9.505453109741211
    8. ' =' → logprob: -9.630453109741211
    9. '#' → logprob: -9.880453109741211
    10. '()' → logprob: -10.130453109741211

Token 17: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28667837381362915
    2. 'A' → logprob: -2.2866783142089844
    3. '=' → logprob: -2.7866783142089844
    4. 's' → logprob: -3.1616783142089844
    5. '()' → logprob: -4.786678314208984
    6. 'len' → logprob: -4.911678314208984
    7. '_' → logprob: -4.911678314208984
    8. ' ' → logprob: -5.661678314208984
    9. 'max' → logprob: -5.661678314208984
    10. '=len' → logprob: -5.661678314208984

Token 18: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.6500705480575562
    2. 'A' → logprob: -1.7750705480575562
    3. ' A' → logprob: -2.5250706672668457
    4. ' ' → logprob: -3.1500706672668457
    5. 's' → logprob: -3.2750706672668457
    6. ' strings' → logprob: -3.6500706672668457
    7. 'strings' → logprob: -3.6500706672668457
    8. 'chain' → logprob: -4.025070667266846
    9. ' chain' → logprob: -4.025070667266846
    10. 'chaine' → logprob: -4.275070667266846

Token 19: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6073148250579834
    2. 'A' → logprob: -0.9823148250579834
    3. ' =' → logprob: -3.4823148250579834
    4. 'a' → logprob: -3.8573148250579834
    5. 'len' → logprob: -4.6073150634765625
    6. ' A' → logprob: -5.7323150634765625
    7. '_' → logprob: -5.9823150634765625
    8. 'length' → logprob: -6.3573150634765625
    9. '1' → logprob: -6.4823150634765625
    10. 'n' → logprob: -6.8573150634765625

Token 20: 'len' (ID: 3303)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7887265682220459
    2. 'len' → logprob: -0.7887265682220459
    3. ' =' → logprob: -3.413726568222046
    4. ' len' → logprob: -4.288726806640625
    5. 'l' → logprob: -4.538726806640625
    6. 'length' → logprob: -4.663726806640625
    7. 'n' → logprob: -5.288726806640625
    8. 'a' → logprob: -5.288726806640625
    9. '_len' → logprob: -5.663726806640625
    10. 'L' → logprob: -5.788726806640625

Token 21: '_A' (ID: 6829)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062098320573568344
    2. '(A' → logprob: -2.812098264694214
    3. 'A' → logprob: -10.062098503112793
    4. 's' → logprob: -10.437098503112793
    5. '(B' → logprob: -10.437098503112793
    6. '(a' → logprob: -11.562098503112793
    7. '()' → logprob: -11.812098503112793
    8. '(s' → logprob: -12.187098503112793
    9. '(
' → logprob: -12.937098503112793
    10. '('' → logprob: -13.687098503112793

Token 22: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015152141451835632
    2. '()' → logprob: -4.3901519775390625
    3. '(A' → logprob: -6.6401519775390625
    4. '=' → logprob: -7.3901519775390625
    5. '_' → logprob: -7.7651519775390625
    6. ')' → logprob: -9.390151977539062
    7. 'A' → logprob: -9.640151977539062
    8. ' (' → logprob: -10.140151977539062
    9. ' =' → logprob: -10.515151977539062
    10. '(len' → logprob: -11.140151977539062

Token 23: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20144248008728027
    2. ' len' → logprob: -1.7014424800872803
    3. '(len' → logprob: -10.45144271850586
    4. '=len' → logprob: -15.70144271850586
    5. ' ' → logprob: -17.32644271850586
    6. '[len' → logprob: -17.70144271850586
    7. '	len' → logprob: -17.82644271850586
    8. ',len' → logprob: -19.57644271850586
    9. '```' → logprob: -19.57644271850586
    10. '<len' → logprob: -19.95144271850586

Token 24: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.10023006796836853
    2. '(' → logprob: -2.3502299785614014
    3. '(B' → logprob: -10.85023021697998
    4. ' (' → logprob: -13.35023021697998
    5. '(
' → logprob: -14.47523021697998
    6. '()' → logprob: -14.85023021697998
    7. '(a' → logprob: -15.35023021697998
    8. '('' → logprob: -15.47523021697998
    9. '(

' → logprob: -15.72523021697998
    10. '(E' → logprob: -16.100229263305664

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022725824965164065
    2. '()' → logprob: -9.000226974487305
    3. ' )' → logprob: -10.000226974487305
    4. '())' → logprob: -10.250226974487305
    5. '(' → logprob: -11.125226974487305
    6. ')
' → logprob: -12.875226974487305
    7. '(A' → logprob: -13.625226974487305
    8. '))' → logprob: -14.000226974487305
    9. 'A' → logprob: -14.250226974487305
    10. ')

' → logprob: -14.750226974487305

Token 26: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3134312927722931
    2. '<|end|>' → logprob: -2.6884312629699707
    3. '
' → logprob: -2.8134312629699707
    4. ' ' → logprob: -3.1884312629699707
    5. ')' → logprob: -3.4384312629699707
    6. ' 
' → logprob: -3.6884312629699707
    7. '  
' → logprob: -4.938431262969971
    8. '+' → logprob: -5.063431262969971
    9. ' len' → logprob: -5.063431262969971
    10. 'l' → logprob: -6.188431262969971

Token 27: '_B' (ID: 3201)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5762107372283936
    2. '_B' → logprob: -0.8262107372283936
    3. '(' → logprob: -8.451210975646973
    4. '(B' → logprob: -10.701210975646973
    5. ' _' → logprob: -11.201210975646973
    6. ')' → logprob: -12.326210975646973
    7. ')_' → logprob: -12.326210975646973
    8. '_A' → logprob: -12.701210975646973
    9. '_b' → logprob: -13.076210975646973
    10. 'B' → logprob: -13.451210975646973

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194698572158813
    2. '=' → logprob: -1.5019469261169434
    3. ')' → logprob: -11.126947402954102
    4. '=len' → logprob: -13.501947402954102
    5. ' ' → logprob: -14.126947402954102
    6. ' =
' → logprob: -15.751947402954102
    7. ' =)' → logprob: -15.876947402954102
    8. ' )' → logprob: -15.876947402954102
    9. ' ==' → logprob: -16.1269474029541
    10. '<|end|>' → logprob: -16.1269474029541

Token 29: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20210285484790802
    2. ' len' → logprob: -1.7021028995513916
    3. '(len' → logprob: -7.3271026611328125
    4. '(' → logprob: -11.077102661132812
    5. '(B' → logprob: -12.327102661132812
    6. ' B' → logprob: -12.827102661132812
    7. 'B' → logprob: -13.202102661132812
    8. ')' → logprob: -13.327102661132812
    9. ' ' → logprob: -13.827102661132812
    10. '	len' → logprob: -13.827102661132812

Token 30: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.4741112291812897
    2. '(' → logprob: -0.9741111993789673
    3. '(A' → logprob: -11.099111557006836
    4. '(
' → logprob: -11.599111557006836
    5. ')' → logprob: -12.849111557006836
    6. ' (' → logprob: -13.099111557006836
    7. '('' → logprob: -13.349111557006836
    8. '(b' → logprob: -13.849111557006836
    9. '(

' → logprob: -14.349111557006836
    10. '()' → logprob: -14.474111557006836

Token 31: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. '()' → logprob: -12.375009536743164
    3. ' )' → logprob: -13.000009536743164
    4. ')
' → logprob: -13.625009536743164
    5. '())' → logprob: -13.875009536743164
    6. '))' → logprob: -14.875009536743164
    7. '#' → logprob: -16.500009536743164
    8. ')#' → logprob: -17.500009536743164
    9. '`)' → logprob: -17.625009536743164
    10. ')

' → logprob: -17.875009536743164

Token 32: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8914875984191895
    2. '
' → logprob: -1.0164875984191895
    3. 'if' → logprob: -2.0164875984191895
    4. 'i' → logprob: -2.7664875984191895
    5. 'for' → logprob: -4.3914875984191895
    6. 'result' → logprob: -5.2664875984191895
    7. 'C' → logprob: -5.5164875984191895
    8. '

' → logprob: -5.6414875984191895
    9. 'n' → logprob: -6.6414875984191895
    10. '```' → logprob: -6.8914875984191895

Token 33: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3160823881626129
    2. 'i' → logprob: -2.31608247756958
    3. 'result' → logprob: -2.69108247756958
    4. ' if' → logprob: -3.31608247756958
    5. 'max' → logprob: -3.56608247756958
    6. 'for' → logprob: -4.56608247756958
    7. ' result' → logprob: -4.94108247756958
    8. ' i' → logprob: -5.19108247756958
    9. '#' → logprob: -5.31608247756958
    10. 'min' → logprob: -5.44108247756958

Token 34: ' parc' (ID: 22138)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5218324661254883
    2. ' compare' → logprob: -1.7718324661254883
    3. ' veut' → logprob: -2.0218324661254883
    4. '#' → logprob: -2.8968324661254883
    5. 'compare' → logprob: -2.8968324661254883
    6. 'cherche' → logprob: -3.2718324661254883
    7. ' cherche' → logprob: -3.2718324661254883
    8. ' ' → logprob: -3.3968324661254883
    9. '_compare' → logprob: -3.5218324661254883
    10. 's' → logprob: -3.7718324661254883

Token 35: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.00972539372742176
    2. 'oure' → logprob: -5.259725570678711
    3. 'ours' → logprob: -5.509725570678711
    4. '_' → logprob: -8.634725570678711
    5. 'our' → logprob: -8.884725570678711
    6. 'ourse' → logprob: -10.634725570678711
    7. '
' → logprob: -11.009725570678711
    8. 'court' → logprob: -11.134725570678711
    9. 'ou' → logprob: -11.384725570678711
    10. '-' → logprob: -12.259725570678711

Token 36: ' toutes' (ID: 17502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.048956919461488724
    2. '(' → logprob: -3.423956871032715
    3. ' A' → logprob: -5.298956871032715
    4. ' les' → logprob: -5.923956871032715
    5. ' (' → logprob: -6.173956871032715
    6. ' la' → logprob: -6.673956871032715
    7. ' l' → logprob: -6.923956871032715
    8. '_' → logprob: -7.048956871032715
    9. ' le' → logprob: -7.798956871032715
    10. 'A' → logprob: -7.923956871032715

Token 37: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6206554174423218
    2. '_' → logprob: -1.8706554174423218
    3. ' ' → logprob: -1.8706554174423218
    4. 'les' → logprob: -2.3706555366516113
    5. '(' → logprob: -3.3706555366516113
    6. 's' → logprob: -3.8706555366516113
    7. '()' → logprob: -6.995655536651611
    8. '  ' → logprob: -7.120655536651611
    9. ' (' → logprob: -7.245655536651611
    10. 'es' → logprob: -7.870655536651611

Token 38: ' positions' (ID: 15897)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8644301891326904
    2. 'positions' → logprob: -0.9894301891326904
    3. 'poss' → logprob: -2.9894301891326904
    4. ' positions' → logprob: -2.9894301891326904
    5. 'p' → logprob: -3.1144301891326904
    6. ' sous' → logprob: -3.8644301891326904
    7. 'sub' → logprob: -4.7394304275512695
    8. '_' → logprob: -4.7394304275512695
    9. ' p' → logprob: -5.4894304275512695
    10. 'i' → logprob: -6.1144304275512695

Token 39: ' possibles' (ID: 97753)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3517164885997772
    2. ' i' → logprob: -1.6017165184020996
    3. ' de' → logprob: -3.3517165184020996
    4. ' possible' → logprob: -3.7267165184020996
    5. 'i' → logprob: -3.9767165184020996
    6. '_' → logprob: -5.8517165184021
    7. 'possible' → logprob: -6.1017165184021
    8. ' d' → logprob: -6.2267165184021
    9. 's' → logprob: -6.4767165184021
    10. ' possibles' → logprob: -6.9767165184021

Token 40: ' dans' (ID: 2671)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6975213289260864
    2. 'i' → logprob: -1.0725213289260864
    3. ':' → logprob: -3.197521209716797
    4. ' for' → logprob: -3.572521209716797
    5. ',' → logprob: -3.822521209716797
    6. ' de' → logprob: -3.947521209716797
    7. ' ' → logprob: -4.322521209716797
    8. 'for' → logprob: -4.572521209716797
    9. '_' → logprob: -4.697521209716797
    10. ' :' → logprob: -5.697521209716797

Token 41: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.31865227222442627
    2. 'A' → logprob: -1.3186522722244263
    3. ' B' → logprob: -6.068652153015137
    4. ' la' → logprob: -6.693652153015137
    5. 'B' → logprob: -7.443652153015137
    6. 'la' → logprob: -7.568652153015137
    7. 'range' → logprob: -8.568652153015137
    8. 'l' → logprob: -8.818652153015137
    9. ' range' → logprob: -8.818652153015137
    10. ' l' → logprob: -9.693652153015137

Token 42: ' où' (ID: 15113)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7431663274765015
    2. 'for' → logprob: -0.7431663274765015
    3. ',' → logprob: -3.743166446685791
    4. ':' → logprob: -3.868166446685791
    5. '.' → logprob: -6.868166446685791
    6. ' ,' → logprob: -7.118166446685791
    7. 'i' → logprob: -7.743166446685791
    8. 'f' → logprob: -8.118165969848633
    9. 'r' → logprob: -8.493165969848633
    10. ' ' → logprob: -8.493165969848633

Token 43: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3513636291027069
    2. ' B' → logprob: -1.3513636589050293
    3. ' une' → logprob: -4.601363658905029
    4. 'une' → logprob: -4.726363658905029
    5. ' on' → logprob: -4.976363658905029
    6. 'on' → logprob: -5.226363658905029
    7. ' la' → logprob: -6.726363658905029
    8. 'l' → logprob: -6.976363658905029
    9. 's' → logprob: -7.601363658905029
    10. 'sub' → logprob: -7.601363658905029

Token 44: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.8082320690155029
    2. ' pourrait' → logprob: -1.433232069015503
    3. ' peut' → logprob: -1.558232069015503
    4. 'est' → logprob: -3.683232069015503
    5. 'could' → logprob: -4.058232307434082
    6. ' could' → logprob: -4.183232307434082
    7. ' apparaît' → logprob: -5.058232307434082
    8. ' pourra' → logprob: -5.308232307434082
    9. '.' → logprob: -5.308232307434082
    10. ' est' → logprob: -5.558232307434082

Token 45: ' correspond' (ID: 11095)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.5382874608039856
    2. 's' → logprob: -1.1632874011993408
    3. ' s' → logprob: -3.288287401199341
    4. ' être' → logprob: -4.16328763961792
    5. 'se' → logprob: -4.66328763961792
    6. 'comm' → logprob: -4.66328763961792
    7. ' commencer' → logprob: -5.16328763961792
    8. ' appara' → logprob: -5.66328763961792
    9. 'occ' → logprob: -5.91328763961792
    10. 'êtres' → logprob: -5.91328763961792

Token 46: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -8.73314929776825e-05
    2. 'o' → logprob: -10.50008773803711
    3. 'e' → logprob: -10.62508773803711
    4. 'r' → logprob: -11.00008773803711
    5. 'oire' → logprob: -12.75008773803711
    6. 'oir' → logprob: -12.87508773803711
    7. 'dre' → logprob: -13.00008773803711
    8. '```' → logprob: -13.00008773803711
    9. '=re' → logprob: -13.25008773803711
    10. 'ent' → logprob: -13.75008773803711

Token 47: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33431339263916016
    2. ' for' → logprob: -1.3343133926391602
    3. 'i' → logprob: -4.70931339263916
    4. ':' → logprob: -4.95931339263916
    5. ',' → logprob: -6.20931339263916
    6. 'f' → logprob: -6.95931339263916
    7. ' i' → logprob: -7.33431339263916
    8. '.' → logprob: -7.95931339263916
    9. ' ' → logprob: -8.33431339263916
    10. ' f' → logprob: -9.45931339263916

Token 48: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22987931966781616
    2. ' for' → logprob: -1.604879379272461
    3. ':' → logprob: -5.604879379272461
    4. '
' → logprob: -8.729879379272461
    5. 'i' → logprob: -8.854879379272461
    6. ' ' → logprob: -9.229879379272461
    7. '```' → logprob: -9.229879379272461
    8. 'n' → logprob: -10.104879379272461
    9. '\n' → logprob: -10.229879379272461
    10. ',' → logprob: -10.229879379272461

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008366696420125663
    2. 'i' → logprob: -7.5008368492126465
    3. ' ' → logprob: -8.375836372375488
    4. ' _' → logprob: -10.250836372375488
    5. '_' → logprob: -12.250836372375488
    6. ' ' → logprob: -12.375836372375488
    7. '	i' → logprob: -13.125836372375488
    8. ' ‌' → logprob: -13.500836372375488
    9. '  ' → logprob: -13.625836372375488
    10. ' position' → logprob: -13.750836372375488

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003512287512421608
    2. 'in' → logprob: -5.753512382507324
    3. ' ' → logprob: -8.128512382507324
    4. ' i' → logprob: -11.128512382507324
    5. ' ' → logprob: -11.878512382507324
    6. '  ' → logprob: -12.503512382507324
    7. ' "' → logprob: -13.253512382507324
    8. ')' → logprob: -13.503512382507324
    9. '	in' → logprob: -13.628512382507324
    10. ' =' → logprob: -13.816012382507324

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00826195813715458
    2. 'range' → logprob: -4.8832621574401855
    3. ' ' → logprob: -7.3832621574401855
    4. '	range' → logprob: -11.383261680603027
    5. ' xrange' → logprob: -11.758261680603027
    6. ' ' → logprob: -13.008261680603027
    7. ' ra' → logprob: -13.258261680603027
    8. ' rang' → logprob: -13.258261680603027
    9. ' "' → logprob: -13.258261680603027
    10. '  ' → logprob: -13.258261680603027

Token 52: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3869260847568512
    2. '(len' → logprob: -1.1369260549545288
    3. ' (' → logprob: -9.88692569732666
    4. '((' → logprob: -14.01192569732666
    5. '(length' → logprob: -14.01192569732666
    6. '('' → logprob: -14.63692569732666
    7. '(
' → logprob: -14.76192569732666
    8. '(strlen' → logprob: -14.76192569732666
    9. '(max' → logprob: -15.01192569732666
    10. '(i' → logprob: -15.38692569732666

Token 53: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0008223761687986553
    2. '(A' → logprob: -7.1258225440979
    3. '_' → logprob: -11.375822067260742
    4. '(' → logprob: -12.375822067260742
    5. '_B' → logprob: -13.625822067260742
    6. '_(' → logprob: -14.500822067260742
    7. 'A' → logprob: -15.000822067260742
    8. '(_' → logprob: -16.875822067260742
    9. ')' → logprob: -17.000822067260742
    10. '```' → logprob: -17.250822067260742

Token 54: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018180612474679947
    2. '-' → logprob: -4.018180847167969
    3. ' ' → logprob: -10.518180847167969
    4. '-l' → logprob: -13.393180847167969
    5. ' ' → logprob: -13.893180847167969
    6. ')' → logprob: -14.018180847167969
    7. '	' → logprob: -15.643180847167969
    8. '   ' → logprob: -16.89318084716797
    9. ' )' → logprob: -17.14318084716797
    10. '  ' → logprob: -17.58068084716797

Token 55: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16026394069194794
    2. ' len' → logprob: -1.9102638959884644
    3. '	len' → logprob: -10.910264015197754
    4. '(len' → logprob: -11.910264015197754
    5. '[len' → logprob: -12.285264015197754
    6. ' ' → logprob: -12.410264015197754
    7. '=len' → logprob: -12.535264015197754
    8. '<len' → logprob: -13.660264015197754
    9. '_len' → logprob: -14.160264015197754
    10. ',len' → logprob: -15.785264015197754

Token 56: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -8.061054359131958e-06
    2. '_' → logprob: -12.000007629394531
    3. 'B' → logprob: -14.125007629394531
    4. '(B' → logprob: -14.375007629394531
    5. ' _' → logprob: -15.750007629394531
    6. '```' → logprob: -16.00000762939453
    7. ')' → logprob: -16.25000762939453
    8. '(' → logprob: -16.25000762939453
    9. ' B' → logprob: -16.87500762939453
    10. '(_' → logprob: -17.25000762939453

Token 57: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38688093423843384
    2. '+' → logprob: -1.136880874633789
    3. ' ' → logprob: -12.011880874633789
    4. ')' → logprob: -12.761880874633789
    5. '1' → logprob: -15.011880874633789
    6. ')+' → logprob: -16.26188087463379
    7. '```' → logprob: -16.26188087463379
    8. ' plus' → logprob: -16.38688087463379
    9. ' ' → logprob: -16.51188087463379
    10. ' )' → logprob: -16.63688087463379

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02054772712290287
    2. ' ' → logprob: -3.89554762840271
    3. ')' → logprob: -12.520547866821289
    4. '```' → logprob: -13.895547866821289
    5. '   ' → logprob: -14.770547866821289
    6. ' )' → logprob: -14.770547866821289
    7. '  ' → logprob: -16.39554786682129
    8. ' ' → logprob: -16.58304786682129
    9. '(' → logprob: -16.77054786682129
    10. '۱' → logprob: -16.89554786682129

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.644463479053229e-05
    2. ' ' → logprob: -10.000046730041504
    3. '```' → logprob: -14.750046730041504
    4. ')' → logprob: -14.875046730041504
    5. '{' → logprob: -17.187545776367188
    6. '   ' → logprob: -17.312545776367188
    7. '۱' → logprob: -17.875045776367188
    8. '１' → logprob: -17.937545776367188
    9. '`' → logprob: -18.062545776367188
    10. '' → logprob: -18.250045776367188

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0050908527337014675
    2. ')' → logprob: -5.505090713500977
    3. ':' → logprob: -7.005090713500977
    4. ' ):' → logprob: -9.255090713500977
    5. '):
' → logprob: -12.255090713500977
    6. '+' → logprob: -14.130090713500977
    7. ' )' → logprob: -14.130090713500977
    8. '():' → logprob: -14.380090713500977
    9. ':)' → logprob: -14.630090713500977
    10. ' :' → logprob: -14.880090713500977

Token 61: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12413542717695236
    2. '   ' → logprob: -2.3741354942321777
    3. ' :' → logprob: -4.249135494232178
    4. ' ' → logprob: -5.124135494232178
    5. ' if' → logprob: -6.749135494232178
    6. 'if' → logprob: -7.499135494232178
    7. '  ' → logprob: -7.624135494232178
    8. '):' → logprob: -8.12413501739502
    9. ':
' → logprob: -8.12413501739502
    10. '<|end|>' → logprob: -8.87413501739502

Token 62: ' match' (ID: 3981)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5530233979225159
    2. 'if' → logprob: -1.178023338317871
    3. ' if' → logprob: -2.428023338317871
    4. ' ' → logprob: -4.553023338317871
    5. '    ' → logprob: -4.803023338317871
    6. '  ' → logprob: -5.553023338317871
    7. 'i' → logprob: -5.928023338317871
    8. ':' → logprob: -6.678023338317871
    9. '#' → logprob: -7.303023338317871
    10. ' #' → logprob: -8.303023338317871

Token 63: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36002296209335327
    2. '=' → logprob: -1.735023021697998
    3. ' =' → logprob: -2.235023021697998
    4. 's' → logprob: -4.360023021697998
    5. '_' → logprob: -5.860023021697998
    6. ' :' → logprob: -6.235023021697998
    7. ' ' → logprob: -7.735023021697998
    8. 'e' → logprob: -8.86002254486084
    9. 'if' → logprob: -9.11002254486084
    10. '=True' → logprob: -9.23502254486084

Token 64: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07890267670154572
    2. ' True' → logprob: -2.5789027214050293
    3. '   ' → logprob: -12.078902244567871
    4. '(True' → logprob: -12.203902244567871
    5. 'False' → logprob: -14.328902244567871
    6. 'true' → logprob: -14.328902244567871
    7. ' ' → logprob: -14.953902244567871
    8. '1' → logprob: -15.453902244567871
    9. '=True' → logprob: -15.828902244567871
    10. 'A' → logprob: -15.953902244567871

Token 65: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.387711763381958
    2. ':' → logprob: -1.887711763381958
    3. '<|end|>' → logprob: -2.512711763381958
    4. ' ' → logprob: -3.012711763381958
    5. '    
' → logprob: -4.512711524963379
    6. '  ' → logprob: -4.512711524963379
    7. '    ' → logprob: -5.012711524963379
    8. '       ' → logprob: -5.762711524963379
    9. '   
' → logprob: -6.012711524963379
    10. ' 
' → logprob: -7.012711524963379

Token 66: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11460211127996445
    2. '   ' → logprob: -3.1146020889282227
    3. '<|end|>' → logprob: -3.1146020889282227
    4. ' ' → logprob: -4.614602088928223
    5. '  ' → logprob: -6.364602088928223
    6. ')' → logprob: -6.739602088928223
    7. '    ' → logprob: -6.864602088928223
    8. '#' → logprob: -6.864602088928223
    9. '    
' → logprob: -6.989602088928223
    10. ':
' → logprob: -6.989602088928223

Token 67: ' Ind' (ID: 2761)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05854993313550949
    2. '<|end|>' → logprob: -3.6835498809814453
    3. 'for' → logprob: -4.308549880981445
    4. ' for' → logprob: -4.558549880981445
    5. '#' → logprob: -5.808549880981445
    6. '  ' → logprob: -6.558549880981445
    7. '    ' → logprob: -7.433549880981445
    8. ' 
' → logprob: -7.433549880981445
    9. '<|end|>' → logprob: -7.558549880981445
    10. '   ' → logprob: -7.683549880981445

Token 68: 'ique' (ID: 2222)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.02710302732884884
    2. '#' → logprob: -4.902102947235107
    3. 'f' → logprob: -5.527102947235107
    4. 'e' → logprob: -5.527102947235107
    5. 'ent' → logprob: -5.652102947235107
    6. 'entation' → logprob: -5.652102947235107
    7. 'expl' → logprob: -7.277102947235107
    8. 'x' → logprob: -7.402102947235107
    9. 'i' → logprob: -7.402102947235107
    10. '   ' → logprob: -8.277103424072266

Token 69: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.197177529335022
    2. ' if' → logprob: -1.572177529335022
    3. '<|end|>' → logprob: -2.0721774101257324
    4. 's' → logprob: -2.1971774101257324
    5. 'si' → logprob: -2.4471774101257324
    6. 'if' → logprob: -2.6971774101257324
    7. '   ' → logprob: -3.1971774101257324
    8. ' ' → logprob: -4.197177410125732
    9. 't' → logprob: -4.947177410125732
    10. '```' → logprob: -4.947177410125732

Token 70: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5837574601173401
    2. ' la' → logprob: -1.8337574005126953
    3. ' les' → logprob: -2.8337574005126953
    4. 'B' → logprob: -2.9587574005126953
    5. ' toutes' → logprob: -3.5837574005126953
    6. ' le' → logprob: -3.7087574005126953
    7. ' on' → logprob: -3.9587574005126953
    8. ' A' → logprob: -4.208757400512695
    9. 'tout' → logprob: -4.583757400512695
    10. 'A' → logprob: -4.708757400512695

Token 71: ' correspond' (ID: 11095)
  Prédit: ' correspond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.5107506513595581
    2. 'cor' → logprob: -1.885750651359558
    3. 'est' → logprob: -2.1357507705688477
    4. ' est' → logprob: -2.5107507705688477
    5. 's' → logprob: -4.510750770568848
    6. ' corresponds' → logprob: -4.635750770568848
    7. '[' → logprob: -5.385750770568848
    8. 'se' → logprob: -5.760750770568848
    9. ' match' → logprob: -6.010750770568848
    10. 'match' → logprob: -6.260750770568848

Token 72: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8542612195014954
    2. ' à' → logprob: -0.8542612195014954
    3. 'ent' → logprob: -2.4792611598968506
    4. ' ' → logprob: -4.22926139831543
    5. '   ' → logprob: -4.22926139831543
    6. '<|end|>' → logprob: -4.35426139831543
    7. 'compl' → logprob: -5.22926139831543
    8. 'com' → logprob: -5.72926139831543
    9. 'au' → logprob: -5.97926139831543
    10. '```' → logprob: -6.22926139831543

Token 73: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4827740490436554
    2. 'A' → logprob: -0.982774019241333
    3. ' la' → logprob: -5.482774257659912
    4. ' ' → logprob: -6.107774257659912
    5. 'l' → logprob: -7.482774257659912
    6. 'la' → logprob: -7.482774257659912
    7. ' l' → logprob: -8.482773780822754
    8. 'position' → logprob: -8.732773780822754
    9. '```' → logprob: -8.982773780822754
    10. 's' → logprob: -9.107773780822754

Token 74: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0142571926116943
    2. ' à' → logprob: -1.2642571926116943
    3. '[' → logprob: -1.3892571926116943
    4. '   ' → logprob: -2.3892571926116943
    5. 'à' → logprob: -5.264257431030273
    6. ' [' → logprob: -6.264257431030273
    7. '    ' → logprob: -6.764257431030273
    8. ' ' → logprob: -6.764257431030273
    9. '[j' → logprob: -6.889257431030273
    10. '```' → logprob: -7.139257431030273

Token 75: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8794373273849487
    2. 'l' → logprob: -2.0044374465942383
    3. 'position' → logprob: -2.0044374465942383
    4. ' la' → logprob: -2.1294374465942383
    5. 'i' → logprob: -2.8794374465942383
    6. 'c' → logprob: -3.0044374465942383
    7. ' cette' → logprob: -3.1294374465942383
    8. ' ' → logprob: -3.8794374465942383
    9. ' position' → logprob: -4.879437446594238
    10. 'cet' → logprob: -5.254437446594238

Token 76: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0117444833740592
    2. 'i' → logprob: -4.761744499206543
    3. 'pos' → logprob: -6.636744499206543
    4. ' position' → logprob: -6.761744499206543
    5. ' ' → logprob: -8.386744499206543
    6. '   ' → logprob: -8.511744499206543
    7. ' i' → logprob: -9.261744499206543
    8. 'posit' → logprob: -9.886744499206543
    9. 'positions' → logprob: -10.886744499206543
    10. 'part' → logprob: -11.761744499206543

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10051374137401581
    2. ' i' → logprob: -2.3505136966705322
    3. ' ' → logprob: -8.100513458251953
    4. '   ' → logprob: -13.225513458251953
    5. ' ' → logprob: -14.225513458251953
    6. '	i' → logprob: -14.850513458251953
    7. '  ' → logprob: -15.225513458251953
    8. '```' → logprob: -15.725513458251953
    9. '    ' → logprob: -15.850513458251953
    10. '`' → logprob: -16.225513458251953

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6224603652954102
    2. ' ' → logprob: -1.3724603652954102
    3. '<|end|>' → logprob: -2.37246036529541
    4. '  ' → logprob: -3.49746036529541
    5. '    
' → logprob: -3.99746036529541
    6. '    ' → logprob: -4.12246036529541
    7. '   
' → logprob: -4.12246036529541
    8. ':' → logprob: -4.74746036529541
    9. ')' → logprob: -5.12246036529541
    10. ' 
' → logprob: -5.37246036529541

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043272752314805984
    2. ' ' → logprob: -3.7932727336883545
    3. '    
' → logprob: -4.543272972106934
    4. '  ' → logprob: -5.918272972106934
    5. '   
' → logprob: -6.168272972106934
    6. ' 
' → logprob: -6.543272972106934
    7. '    ' → logprob: -7.543272972106934
    8. '<|end|>' → logprob: -7.668272972106934
    9. ' for' → logprob: -7.918272972106934
    10. '     
' → logprob: -8.168272972106934

Token 80: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11776812374591827
    2. ' ' → logprob: -2.7427680492401123
    3. ' for' → logprob: -3.4927680492401123
    4. 'for' (adapté à ' for') → logprob: -4.367768287658691
    5. '    ' → logprob: -6.242768287658691
    6. '    
' → logprob: -7.117768287658691
    7. '  ' → logprob: -7.617768287658691
    8. '       ' → logprob: -9.242768287658691
    9. '     
' → logprob: -9.367768287658691
    10. '   ' → logprob: -10.242768287658691

Token 81: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.009772616438567638
    2. 'j' → logprob: -4.634772777557373
    3. ' ' → logprob: -11.259772300720215
    4. '_j' → logprob: -13.509772300720215
    5. '	j' → logprob: -13.759772300720215
    6. ' _' → logprob: -14.134772300720215
    7. '_' → logprob: -15.509772300720215
    8. ' b' → logprob: -16.63477325439453
    9. '  ' → logprob: -16.75977325439453
    10. ' ```' → logprob: -17.00977325439453

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07108691334724426
    2. 'in' → logprob: -3.321086883544922
    3. ' ' → logprob: -3.696086883544922
    4. '<|end|>' → logprob: -5.071086883544922
    5. '    ' → logprob: -7.696086883544922
    6. '   ' → logprob: -8.196086883544922
    7. ')' → logprob: -8.696086883544922
    8. '  ' → logprob: -8.821086883544922
    9. ' =' → logprob: -9.196086883544922
    10. '<|end|>' → logprob: -9.696086883544922

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5765796899795532
    2. 'range' → logprob: -0.8265796899795532
    3. ' ' → logprob: -7.576579570770264
    4. '<|end|>' → logprob: -9.826580047607422
    5. '(range' → logprob: -10.576580047607422
    6. ' len' → logprob: -10.951580047607422
    7. ')' → logprob: -11.076580047607422
    8. 'space' → logprob: -12.576580047607422
    9. '	range' → logprob: -12.701580047607422
    10. ' xrange' → logprob: -12.951580047607422

Token 84: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.003589736996218562
    2. '(' → logprob: -6.128589630126953
    3. ' (' → logprob: -6.628589630126953
    4. ' len' → logprob: -9.878589630126953
    5. '<len' → logprob: -11.253589630126953
    6. 'len' → logprob: -11.753589630126953
    7. '	len' → logprob: -12.128589630126953
    8. '[len' → logprob: -13.503589630126953
    9. '(length' → logprob: -13.628589630126953
    10. '<|end|>' → logprob: -14.503589630126953

Token 85: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -5.676981345459353e-06
    2. '(B' → logprob: -12.500005722045898
    3. '_' → logprob: -13.375005722045898
    4. 'B' → logprob: -15.750005722045898
    5. '(' → logprob: -16.1250057220459
    6. ')' → logprob: -17.1250057220459
    7. '_A' → logprob: -17.3750057220459
    8. '(_' → logprob: -17.7500057220459
    9. '(len' → logprob: -17.7500057220459
    10. ')_' → logprob: -18.7500057220459

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006133131100796163
    2. ')' → logprob: -8.62561321258545
    3. '):
' → logprob: -8.87561321258545
    4. ':' → logprob: -9.00061321258545
    5. ' ):' → logprob: -9.12561321258545
    6. '   ' → logprob: -9.87561321258545
    7. '():' → logprob: -12.00061321258545
    8. '+' → logprob: -13.87561321258545
    9. ' ' → logprob: -13.87561321258545
    10. ' :' → logprob: -14.75061321258545

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006147300358861685
    2. '<|end|>' → logprob: -5.381147384643555
    3. ' ' → logprob: -7.881147384643555
    4. '    ' → logprob: -8.006147384643555
    5. '   ' → logprob: -8.006147384643555
    6. '        
' → logprob: -8.631147384643555
    7. ' 
' → logprob: -10.006147384643555
    8. ' if' → logprob: -10.506147384643555
    9. ':' → logprob: -10.506147384643555
    10. '        ' → logprob: -10.756147384643555

Token 88: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3554479777812958
    2. '<|end|>' → logprob: -1.8554480075836182
    3. ' ' → logprob: -2.355448007583618
    4. ' if' → logprob: -4.480447769165039
    5. '   ' → logprob: -4.480447769165039
    6. 'if' → logprob: -5.105447769165039
    7. ':' → logprob: -5.355447769165039
    8. '        ' → logprob: -6.105447769165039
    9. '           ' → logprob: -6.355447769165039
    10. '    ' → logprob: -6.355447769165039

Token 89: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5288930535316467
    2. 'if' → logprob: -0.9038930535316467
    3. '   ' → logprob: -5.278892993927002
    4. '    ' → logprob: -8.02889347076416
    5. '       ' → logprob: -8.65389347076416
    6. ' ' → logprob: -9.40389347076416
    7. 'If' → logprob: -10.40389347076416
    8. '	if' → logprob: -11.77889347076416
    9. 'i' → logprob: -12.15389347076416
    10. '  ' → logprob: -12.27889347076416

Token 90: ' le' (ID: 505)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.006171590182930231
    2. 'A' → logprob: -5.131171703338623
    3. ' ' → logprob: -9.006171226501465
    4. ' B' → logprob: -9.506171226501465
    5. '   ' → logprob: -10.256171226501465
    6. '  ' → logprob: -12.506171226501465
    7. '    ' → logprob: -13.506171226501465
    8. 'B' → logprob: -13.506171226501465
    9. '	A' → logprob: -13.881171226501465
    10. ' ' → logprob: -14.006171226501465

Token 91: ' caractère' (ID: 80509)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6359713673591614
    2. ' A' → logprob: -0.7609713673591614
    3. ' B' → logprob: -6.385971546173096
    4. 'B' → logprob: -6.510971546173096
    5. ' ' → logprob: -9.010971069335938
    6. '   ' → logprob: -11.385971069335938
    7. ' code' → logprob: -11.385971069335938
    8. '  ' → logprob: -11.635971069335938
    9. 's' → logprob: -12.010971069335938
    10. 'a' → logprob: -12.135971069335938

Token 92: ' de' (ID: 334)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.7873274087905884
    2. 'A' → logprob: -0.9123274087905884
    3. 's' → logprob: -2.912327289581299
    4. '   ' → logprob: -3.412327289581299
    5. ' B' → logprob: -3.912327289581299
    6. ' ' → logprob: -4.037327289581299
    7. 'B' → logprob: -4.912327289581299
    8. '    ' → logprob: -6.287327289581299
    9. '       ' → logprob: -6.537327289581299
    10. ' n' → logprob: -6.662327289581299

Token 93: ' B' (ID: 418)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4140571355819702
    2. ' B' → logprob: -1.6640571355819702
    3. 'A' → logprob: -2.2890572547912598
    4. 'B' → logprob: -3.0390572547912598
    5. ' ' → logprob: -8.039056777954102
    6. 's' → logprob: -10.164056777954102
    7. 'a' → logprob: -11.164056777954102
    8. '  ' → logprob: -11.664056777954102
    9. '   ' → logprob: -11.914056777954102
    10. 'b' → logprob: -11.914056777954102

Token 94: ' est' (ID: 893)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.2635087966918945
    2. '[i' → logprob: -2.0135087966918945
    3. '[' → logprob: -2.2635087966918945
    4. ' n' → logprob: -2.2635087966918945
    5. '[j' → logprob: -2.3885087966918945
    6. 'à' → logprob: -2.6385087966918945
    7. ' ne' → logprob: -2.8885087966918945
    8. '[n' → logprob: -3.0135087966918945
    9. 'ne' → logprob: -3.1385087966918945
    10. 'n' → logprob: -3.3885087966918945

Token 95: ' '_'' (ID: 86115)
  Prédit: ' différent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.05631944164633751
    2. ' different' → logprob: -3.55631947517395
    3. 'different' → logprob: -3.80631947517395
    4. 'diff' → logprob: -6.556319236755371
    5. ' not' → logprob: -7.431319236755371
    6. ''' → logprob: -7.931319236755371
    7. ' !=' → logprob: -8.306319236755371
    8. 'not' → logprob: -8.431319236755371
    9. ' différente' → logprob: -8.681319236755371
    10. 'Different' → logprob: -8.931319236755371

Token 96: ' alors' (ID: 17971)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.920370876789093
    2. ' and' → logprob: -1.0453708171844482
    3. ' ' → logprob: -2.5453708171844482
    4. ' or' → logprob: -3.0453708171844482
    5. ' not' → logprob: -3.2953708171844482
    6. '!=' → logprob: -3.5453708171844482
    7. '<|end|>' → logprob: -4.545371055603027
    8. 'and' → logprob: -4.795371055603027
    9. ' et' → logprob: -5.045371055603027
    10. ')' → logprob: -5.420371055603027

Token 97: ' il' (ID: 1793)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.42288675904273987
    2. 'continue' → logprob: -2.297886848449707
    3. ' ' → logprob: -2.547886848449707
    4. ' if' → logprob: -2.922886848449707
    5. 'if' → logprob: -3.172886848449707
    6. '   ' → logprob: -3.797886848449707
    7. ' match' → logprob: -4.047886848449707
    8. 'A' → logprob: -5.422886848449707
    9. '_' → logprob: -5.422886848449707
    10. '    ' → logprob: -6.047886848449707

Token 98: ' correspond' (ID: 11095)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.3481613397598267
    2. ' continue' → logprob: -1.4731613397598267
    3. 's' → logprob: -1.8481613397598267
    4. '<|end|>' → logprob: -2.473161220550537
    5. 'n' → logprob: -2.723161220550537
    6. ' faut' → logprob: -2.973161220550537
    7. '   ' → logprob: -3.348161220550537
    8. 'ne' → logprob: -3.598161220550537
    9. ' ne' → logprob: -3.723161220550537
    10. ')' → logprob: -3.723161220550537

Token 99: ' à' (ID: 1221)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.005694031715393
    2. '<|end|>' → logprob: -1.005694031715393
    3. ' à' → logprob: -1.880694031715393
    4. ' to' → logprob: -3.6306939125061035
    5. ' ou' → logprob: -4.0056939125061035
    6. ' ' → logprob: -4.5056939125061035
    7. '    ' → logprob: -4.5056939125061035
    8. '   ' → logprob: -4.6306939125061035
    9. '       ' → logprob: -4.6306939125061035
    10. 'à' → logprob: -4.8806939125061035

Token 100: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.45700064301490784
    2. ' n' → logprob: -1.2070006132125854
    3. 'tout' → logprob: -3.832000732421875
    4. 't' → logprob: -4.082000732421875
    5. ' any' → logprob: -4.707000732421875
    6. ''' → logprob: -5.457000732421875
    7. '<|end|>' → logprob: -5.707000732421875
    8. 'any' → logprob: -6.082000732421875
    9. ' tout' → logprob: -6.707000732421875
    10. ' quelcon' → logprob: -7.082000732421875

Token 101: ''importe' (ID: 103032)
  Prédit: ''importe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''importe' → logprob: -0.1447938084602356
    2. 'importe' → logprob: -2.019793748855591
    3. ''imp' → logprob: -7.39479398727417
    4. ''import' → logprob: -7.76979398727417
    5. 'import' → logprob: -8.144793510437012
    6. ''im' → logprob: -8.394793510437012
    7. 'n' → logprob: -8.769793510437012
    8. ''' → logprob: -9.019793510437012
    9. 'imp' → logprob: -9.519793510437012
    10. 'u' → logprob: -10.019793510437012

Token 102: ' quel' (ID: 10613)
  Prédit: 'quel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quel' → logprob: -0.14650176465511322
    2. ' quel' → logprob: -2.1465017795562744
    3. 'quoi' → logprob: -4.771501541137695
    4. 'quelle' → logprob: -5.521501541137695
    5. ' quoi' → logprob: -5.771501541137695
    6. '```' → logprob: -6.271501541137695
    7. ' ' → logprob: -7.896501541137695
    8. 'quele' → logprob: -8.271501541137695
    9. ' quelle' → logprob: -8.521501541137695
    10. '-' → logprob: -8.521501541137695

Token 103: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.011866772547364235
    2. 'c' → logprob: -4.636866569519043
    3. ' caractère' → logprob: -7.386866569519043
    4. '_' → logprob: -7.636866569519043
    5. ' caract' → logprob: -7.636866569519043
    6. '<|end|>' → logprob: -8.886866569519043
    7. ' ' → logprob: -9.261866569519043
    8. '```' → logprob: -9.386866569519043
    9. '.' → logprob: -9.636866569519043
    10. '_car' → logprob: -10.136866569519043

Token 104: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041819822043180466
    2. ',' → logprob: -4.416820049285889
    3. '<|end|>' → logprob: -5.166820049285889
    4. '   ' → logprob: -5.291820049285889
    5. ':' → logprob: -5.416820049285889
    6. ' ' → logprob: -5.791820049285889
    7. '           ' → logprob: -5.916820049285889
    8. ' or' → logprob: -6.166820049285889
    9. '        ' → logprob: -6.666820049285889
    10. '    ' → logprob: -6.666820049285889

Token 105: ''A' (ID: 40735)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6731690168380737
    2. ' A' → logprob: -0.9231690168380737
    3. ''A' → logprob: -2.4231691360473633
    4. '<|end|>' → logprob: -6.423169136047363
    5. ''' → logprob: -7.298169136047363
    6. 'u' → logprob: -7.423169136047363
    7. 'e' → logprob: -8.673169136047363
    8. '’A' → logprob: -8.673169136047363
    9. '```' → logprob: -8.673169136047363
    10. 'a' → logprob: -8.673169136047363

Token 106: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07496916502714157
    2. ':' → logprob: -3.9499690532684326
    3. ' if' → logprob: -4.324969291687012
    4. ',' → logprob: -4.699969291687012
    5. 'if' → logprob: -4.824969291687012
    6. '           ' → logprob: -5.074969291687012
    7. '   ' → logprob: -5.199969291687012
    8. ' or' → logprob: -5.824969291687012
    9. '        ' → logprob: -6.574969291687012
    10. '    ' → logprob: -6.699969291687012

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022885913494974375
    2. '   ' → logprob: -8.002288818359375
    3. '<|end|>' → logprob: -8.127288818359375
    4. ',' → logprob: -8.252288818359375
    5. '        
' → logprob: -8.252288818359375
    6. '           ' → logprob: -8.252288818359375
    7. ' if' → logprob: -8.627288818359375
    8. '        ' → logprob: -8.752288818359375
    9. '      ' → logprob: -9.252288818359375
    10. '    ' → logprob: -9.377288818359375

Token 108: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04190361499786377
    2. ' if' → logprob: -3.541903495788574
    3. 'if' → logprob: -4.666903495788574
    4. '   ' → logprob: -6.791903495788574
    5. ' ' → logprob: -7.666903495788574
    6. '<|end|>' → logprob: -7.666903495788574
    7. '           ' → logprob: -9.041903495788574
    8. '    ' → logprob: -9.291903495788574
    9. '        
' → logprob: -9.291903495788574
    10. '        ' → logprob: -9.666903495788574

Token 109: ' Sinon' (ID: 154924)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.551444411277771
    2. ' if' → logprob: -1.176444411277771
    3. '       ' → logprob: -2.1764445304870605
    4. '   ' → logprob: -6.6764445304870605
    5. 'elif' → logprob: -7.8014445304870605
    6. ' elif' → logprob: -9.051444053649902
    7. 'else' → logprob: -9.176444053649902
    8. 'If' → logprob: -10.301444053649902
    9. '           ' → logprob: -10.426444053649902
    10. ' ' → logprob: -10.426444053649902

Token 110: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2914554178714752
    2. 'if' → logprob: -1.4164553880691528
    3. '       ' → logprob: -5.541455268859863
    4. '   ' → logprob: -6.166455268859863
    5. ':' → logprob: -6.291455268859863
    6. '<|end|>' → logprob: -7.166455268859863
    7. ' ' → logprob: -7.291455268859863
    8. '    ' → logprob: -7.791455268859863
    9. '        ' → logprob: -9.166455268859863
    10. ',' → logprob: -9.166455268859863

Token 111: ' il' (ID: 1793)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28150036931037903
    2. 'if' → logprob: -1.4065003395080566
    3. '   ' → logprob: -9.031500816345215
    4. '    ' → logprob: -9.531500816345215
    5. ' A' → logprob: -9.656500816345215
    6. 'A' → logprob: -9.906500816345215
    7. ' ' → logprob: -10.906500816345215
    8. '       ' → logprob: -12.031500816345215
    9. '<|end|>' → logprob: -12.906500816345215
    10. 'If' → logprob: -13.031500816345215

Token 112: ' doit' (ID: 21822)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08244723826646805
    2. 's' → logprob: -2.7074472904205322
    3. 'elif' → logprob: -5.457447052001953
    4. ' if' → logprob: -5.957447052001953
    5. 'f' → logprob: -6.082447052001953
    6. 'n' → logprob: -6.582447052001953
    7. '   ' → logprob: -7.707447052001953
    8. ' faut' → logprob: -8.207447052001953
    9. '#' → logprob: -8.457447052001953
    10. '=' → logprob: -8.832447052001953

Token 113: ' correspond' (ID: 11095)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.20958758890628815
    2. 'r' → logprob: -1.834587574005127
    3. 'er' → logprob: -4.334587574005127
    4. 'a' → logprob: -5.334587574005127
    5. 'à' → logprob: -5.459587574005127
    6. 'tre' → logprob: -5.959587574005127
    7. '   ' → logprob: -6.709587574005127
    8. ''à' → logprob: -7.709587574005127
    9. 'au' → logprob: -7.834587574005127
    10. ' à' → logprob: -7.834587574005127

Token 115: ' exactement' (ID: 108701)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7802593111991882
    2. ' ' → logprob: -1.655259370803833
    3. '    ' → logprob: -2.280259370803833
    4. ' a' → logprob: -2.905259370803833
    5. ' A' → logprob: -3.280259370803833
    6. 'A' → logprob: -3.405259370803833
    7. '   ' → logprob: -3.655259370803833
    8. ' elif' → logprob: -4.030259132385254
    9. ' if' → logprob: -4.280259132385254
    10. ' exactly' → logprob: -4.655259132385254

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3357775211334229
    2. ' a' → logprob: -1.9607775211334229
    3. ')' → logprob: -2.085777521133423
    4. '<|end|>' → logprob: -2.710777521133423
    5. ' à' → logprob: -2.710777521133423
    6. ' ' → logprob: -2.835777521133423
    7. ' if' → logprob: -2.960777521133423
    8. ' )' → logprob: -3.085777521133423
    9. '    ' → logprob: -3.210777521133423
    10. ':' → logprob: -3.960777521133423

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010982506908476353
    2. '   ' → logprob: -5.010982513427734
    3. ' if' → logprob: -6.385982513427734
    4. '    ' → logprob: -7.510982513427734
    5. '           ' → logprob: -8.135982513427734
    6. '<|end|>' → logprob: -8.135982513427734
    7. ':' → logprob: -8.260982513427734
    8. ' :' → logprob: -8.385982513427734
    9. ' ' → logprob: -8.385982513427734
    10. 'if' → logprob: -8.760982513427734

Token 118: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048817750066518784
    2. ' if' → logprob: -3.4238176345825195
    3. '   ' → logprob: -4.9238176345825195
    4. 'if' (adapté à ' if') → logprob: -5.1738176345825195
    5. ' ' → logprob: -7.0488176345825195
    6. '           ' → logprob: -7.6738176345825195
    7. '<|end|>' → logprob: -8.42381763458252
    8. '    ' → logprob: -8.79881763458252
    9. ' 
' → logprob: -9.42381763458252
    10. '        
' → logprob: -9.42381763458252

Token 119: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.011094745248556137
    2. 'B' → logprob: -4.511094570159912
    3. ' ' → logprob: -10.38609504699707
    4. ' A' → logprob: -11.76109504699707
    5. '   ' → logprob: -13.26109504699707
    6. ' not' → logprob: -13.26109504699707
    7. '	B' → logprob: -13.88609504699707
    8. '  ' → logprob: -14.13609504699707
    9. ' ' → logprob: -14.13609504699707
    10. 'A' → logprob: -14.13609504699707

Token 120: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.006749955005943775
    2. '[' → logprob: -5.006750106811523
    3. '[i' → logprob: -10.631750106811523
    4. ' [' → logprob: -12.256750106811523
    5. '[J' → logprob: -12.506750106811523
    6. '[js' → logprob: -15.131750106811523
    7. '```' → logprob: -15.256750106811523
    8. '   ' → logprob: -15.506750106811523
    9. ' ' → logprob: -15.881750106811523
    10. '[
' → logprob: -15.881750106811523

Token 121: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.720550537109375
    2. '!=' → logprob: -0.720550537109375
    3. ']' → logprob: -3.720550537109375
    4. ']!=' → logprob: -6.845550537109375
    5. ' ]' → logprob: -7.470550537109375
    6. '']' → logprob: -7.470550537109375
    7. '!='' → logprob: -8.845550537109375
    8. ')' → logprob: -9.095550537109375
    9. ''' → logprob: -9.095550537109375
    10. ' not' → logprob: -9.595550537109375

Token 122: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.523358166217804
    2. '!=' → logprob: -0.898358166217804
    3. ' not' → logprob: -9.023358345031738
    4. ' ' → logprob: -10.273358345031738
    5. '!='' → logprob: -11.023358345031738
    6. '==' → logprob: -11.148358345031738
    7. '=' → logprob: -11.273358345031738
    8. ''' → logprob: -11.773358345031738
    9. ' ==' → logprob: -12.398358345031738
    10. '!==' → logprob: -12.523358345031738

Token 123: ' '_'' (ID: 86115)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0024273828603327274
    2. ' '_'' → logprob: -6.627427577972412
    3. ''_' → logprob: -7.127427577972412
    4. ''A' → logprob: -8.877427101135254
    5. '_' → logprob: -9.127427101135254
    6. '"' → logprob: -10.752427101135254
    7. 'A' → logprob: -11.752427101135254
    8. '_'' → logprob: -12.127427101135254
    9. ' ' → logprob: -12.752427101135254
    10. '('_' → logprob: -13.002427101135254

Token 124: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016270365566015244
    2. 'and' → logprob: -4.141270160675049
    3. ' ' → logprob: -8.391270637512207
    4. ' a' → logprob: -12.141270637512207
    5. ':' → logprob: -13.641270637512207
    6. ' an' → logprob: -13.891270637512207
    7. '<|end|>' → logprob: -14.891270637512207
    8. ' et' → logprob: -15.141270637512207
    9. '  ' → logprob: -15.641270637512207
    10. '    ' → logprob: -15.766270637512207

Token 125: ' B' (ID: 418)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.7268422245979309
    2. 'A' → logprob: -0.8518422245979309
    3. ' B' → logprob: -3.101842164993286
    4. 'B' → logprob: -3.101842164993286
    5. ' ' → logprob: -12.476841926574707
    6. '	A' → logprob: -14.226841926574707
    7. ' ' → logprob: -14.601841926574707
    8. '   ' → logprob: -16.101842880249023
    9. '	B' → logprob: -16.289342880249023
    10. 'b' → logprob: -16.289342880249023

Token 126: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.050714392215013504
    2. '[i' → logprob: -3.0507144927978516
    3. '[' → logprob: -6.550714492797852
    4. 'A' → logprob: -7.675714492797852
    5. '[A' → logprob: -9.050714492797852
    6. '[
' → logprob: -9.550714492797852
    7. ' [' → logprob: -11.425714492797852
    8. '```' → logprob: -11.925714492797852
    9. '[I' → logprob: -12.425714492797852
    10. 'i' → logprob: -12.550714492797852

Token 127: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1696561723947525
    2. '!=' → logprob: -2.419656276702881
    3. ' !=' → logprob: -2.919656276702881
    4. ']!=' → logprob: -4.669656276702881
    5. ' ]' → logprob: -5.669656276702881
    6. '']' → logprob: -8.919655799865723
    7. ')' → logprob: -9.419655799865723
    8. ' ' → logprob: -10.669655799865723
    9. ')!=' → logprob: -10.669655799865723
    10. '<|end|>' → logprob: -12.044655799865723

Token 128: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.10030458122491837
    2. ' !=' → logprob: -2.35030460357666
    3. ']!=' → logprob: -10.47530460357666
    4. ')!=' → logprob: -10.60030460357666
    5. ')' → logprob: -10.97530460357666
    6. '!==' → logprob: -11.72530460357666
    7. ']' → logprob: -12.35030460357666
    8. '()!=' → logprob: -12.47530460357666
    9. ' ' → logprob: -12.60030460357666
    10. 'A' → logprob: -13.35030460357666

Token 129: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.10026901960372925
    2. 'A' → logprob: -2.350269079208374
    3. ' ' → logprob: -9.725269317626953
    4. ' '' → logprob: -14.100269317626953
    5. ''A' → logprob: -14.850269317626953
    6. '  ' → logprob: -14.975269317626953
    7. ' ' → logprob: -15.600269317626953
    8. ''' → logprob: -15.725269317626953
    9. ')' → logprob: -15.725269317626953
    10. '	A' → logprob: -15.975269317626953

Token 130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003009041247423738
    2. '[' → logprob: -8.250301361083984
    3. '[j' → logprob: -10.375301361083984
    4. '[
' → logprob: -12.000301361083984
    5. '[I' → logprob: -13.625301361083984
    6. 'i' → logprob: -14.125301361083984
    7. ' [' → logprob: -15.625301361083984
    8. '```' → logprob: -16.125301361083984
    9. '[A' → logprob: -16.500301361083984
    10. ')' → logprob: -17.875301361083984

Token 131: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.08152240514755249
    2. '+' → logprob: -2.8315224647521973
    3. ' +' → logprob: -3.9565224647521973
    4. '[j' → logprob: -8.456521987915039
    5. '+i' → logprob: -11.831521987915039
    6. '+]' → logprob: -12.206521987915039
    7. ']' → logprob: -12.331521987915039
    8. 'j' → logprob: -13.206521987915039
    9. '+
' → logprob: -13.456521987915039
    10. '[' → logprob: -13.831521987915039

Token 132: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0025713793002068996
    2. ']' → logprob: -6.1275715827941895
    3. ']:
' → logprob: -8.127571105957031
    4. ':' → logprob: -9.627571105957031
    5. ' ]' → logprob: -11.252571105957031
    6. '):' → logprob: -12.377571105957031
    7. ']:
' → logprob: -13.252571105957031
    8. '']:' → logprob: -13.377571105957031
    9. ']):' → logprob: -13.752571105957031
    10. ']:

' → logprob: -13.752571105957031

Token 133: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40761011838912964
    2. '           ' → logprob: -1.1576101779937744
    3. ' match' → logprob: -4.032609939575195
    4. ':' → logprob: -6.782609939575195
    5. 'match' → logprob: -6.782609939575195
    6. '   ' → logprob: -8.407609939575195
    7. ':
' → logprob: -9.907609939575195
    8. '
' → logprob: -10.032609939575195
    9. '               ' → logprob: -10.407609939575195
    10. ' break' → logprob: -10.532609939575195

Token 134: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.7286397218704224
    2. '       ' → logprob: -1.1036397218704224
    3. 'match' (adapté à ' match') → logprob: -1.9786397218704224
    4. '           ' → logprob: -3.103639602661133
    5. '   ' → logprob: -6.103639602661133
    6. '	match' → logprob: -8.603639602661133
    7. '               ' → logprob: -9.103639602661133
    8. '        
' → logprob: -10.978639602661133
    9. ' ' → logprob: -11.228639602661133
    10. '
' → logprob: -11.728639602661133

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10029605776071548
    2. '=' → logprob: -2.3502960205078125
    3. ' ' → logprob: -10.100296020507812
    4. '=False' → logprob: -10.475296020507812
    5. 's' → logprob: -11.100296020507812
    6. ')' → logprob: -13.600296020507812
    7. '   ' → logprob: -13.850296020507812
    8. '=True' → logprob: -14.100296020507812
    9. '  ' → logprob: -14.600296020507812
    10. '    ' → logprob: -15.600296020507812

Token 136: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.048587486147880554
    2. ' False' → logprob: -3.0485875606536865
    3. '(False' → logprob: -16.173587799072266
    4. '=False' → logprob: -17.423587799072266
    5. 'F' → logprob: -18.923587799072266
    6. '_false' → logprob: -19.298587799072266
    7. '.False' → logprob: -19.798587799072266
    8. 'false' → logprob: -20.173587799072266
    9. 'True' → logprob: -20.798587799072266
    10. '   ' → logprob: -20.798587799072266

Token 137: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019865304057020694
    2. '       ' → logprob: -8.750198364257812
    3. '               ' → logprob: -10.625198364257812
    4. '		' → logprob: -12.125198364257812
    5. '          ' → logprob: -12.750198364257812
    6. '            
' → logprob: -12.750198364257812
    7. 'break' → logprob: -13.750198364257812
    8. '            ' → logprob: -13.875198364257812
    9. '   ' → logprob: -14.000198364257812
    10. '<|end|>' → logprob: -14.625198364257812

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0683535037969705e-05
    2. '       ' → logprob: -12.62501049041748
    3. '               ' → logprob: -13.00001049041748
    4. '		' → logprob: -13.25001049041748
    5. '            
' → logprob: -13.75001049041748
    6. '<|end|>' → logprob: -13.87501049041748
    7. '          ' → logprob: -14.50001049041748
    8. 'break' → logprob: -15.50001049041748
    9. '   ' → logprob: -16.000011444091797
    10. '            ' → logprob: -16.500011444091797

Token 139: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.01269316952675581
    2. ' break' → logprob: -4.512693405151367
    3. '           ' → logprob: -6.637693405151367
    4. '       ' → logprob: -8.387693405151367
    5. '	break' → logprob: -9.512693405151367
    6. '               ' → logprob: -10.762693405151367
    7. '   ' → logprob: -12.012693405151367
    8. 'b' → logprob: -12.887693405151367
    9. '_break' → logprob: -14.137693405151367
    10. '                   ' → logprob: -14.387693405151367

Token 140: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14241372048854828
    2. '
' → logprob: -2.51741361618042
    3. '    
' → logprob: -3.39241361618042
    4. '<|end|>' → logprob: -4.39241361618042
    5. '  
' → logprob: -6.51741361618042
    6. ')' → logprob: -6.64241361618042
    7. ' 
' → logprob: -6.89241361618042
    8. '   
' → logprob: -7.51741361618042
    9. '       ' → logprob: -7.64241361618042
    10. '        
' → logprob: -8.017414093017578

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003681909292936325
    2. '    
' → logprob: -5.7536821365356445
    3. 'if' → logprob: -8.378682136535645
    4. ' if' → logprob: -9.003682136535645
    5. '   
' → logprob: -10.378682136535645
    6. '  
' → logprob: -10.753682136535645
    7. ')' → logprob: -10.878682136535645
    8. '        
' → logprob: -11.003682136535645
    9. '  ' → logprob: -11.128682136535645
    10. '       ' → logprob: -11.628682136535645

Token 142: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2884443700313568
    2. '   ' → logprob: -1.7884443998336792
    3. ' if' → logprob: -2.7884442806243896
    4. '    
' → logprob: -5.163444519042969
    5. ')' → logprob: -5.288444519042969
    6. ' ' → logprob: -5.413444519042969
    7. ' 
' → logprob: -6.538444519042969
    8. ':' → logprob: -6.663444519042969
    9. '  ' → logprob: -6.913444519042969
    10. '<|end|>' → logprob: -7.038444519042969

Token 143: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01220622193068266
    2. ' if' → logprob: -4.762206077575684
    3. '   ' → logprob: -5.637206077575684
    4. 'If' → logprob: -11.262206077575684
    5. '    
' → logprob: -12.762206077575684
    6. ' ' → logprob: -13.262206077575684
    7. 'Si' → logprob: -13.262206077575684
    8. '  ' → logprob: -14.012206077575684
    9. '	if' → logprob: -14.262206077575684
    10. '    ' → logprob: -14.762206077575684

Token 144: ' on' (ID: 402)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.03806202858686447
    2. 'match' → logprob: -3.28806209564209
    3. '(match' → logprob: -11.28806209564209
    4. ' ' → logprob: -12.41306209564209
    5. '	match' → logprob: -13.28806209564209
    6. ' ' → logprob: -14.03806209564209
    7. 'm' → logprob: -15.03806209564209
    8. ' not' → logprob: -15.16306209564209
    9. ' ma' → logprob: -15.28806209564209
    10. ' mat' → logprob: -15.53806209564209

Token 145: ' a' (ID: 261)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.05116448923945427
    2. 'match' → logprob: -3.051164388656616
    3. ' trouve' → logprob: -6.551164627075195
    4. ' find' → logprob: -7.926164627075195
    5. '   ' → logprob: -8.301164627075195
    6. ' ' → logprob: -9.301164627075195
    7. ' if' → logprob: -9.676164627075195
    8. 'if' → logprob: -9.926164627075195
    9. '_match' → logprob: -10.176164627075195
    10. 't' → logprob: -10.426164627075195

Token 146: ' trouvé' (ID: 60081)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.10243798047304153
    2. 'match' → logprob: -2.352437973022461
    3. '   ' → logprob: -6.352437973022461
    4. ' ' → logprob: -8.102437973022461
    5. '(match' → logprob: -9.727437973022461
    6. '_match' → logprob: -10.852437973022461
    7. '	match' → logprob: -10.852437973022461
    8. '    ' → logprob: -11.227437973022461
    9. '  ' → logprob: -11.227437973022461
    10. ' trouvé' → logprob: -11.477437973022461

Token 147: ' une' (ID: 2463)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.3875908851623535
    2. 'match' → logprob: -1.1375908851623535
    3. ' un' → logprob: -8.262590408325195
    4. '   ' → logprob: -9.012590408325195
    5. ' a' → logprob: -9.262590408325195
    6. '(match' → logprob: -9.512590408325195
    7. ' ' → logprob: -9.637590408325195
    8. ' True' → logprob: -9.887590408325195
    9. '	match' → logprob: -11.637590408325195
    10. 'True' → logprob: -11.762590408325195

Token 148: ' correspond' (ID: 11095)
  Prédit: ' correspond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.38638928532600403
    2. 'cor' → logprob: -1.3863892555236816
    3. 'match' → logprob: -3.0113892555236816
    4. 'occ' → logprob: -4.886389255523682
    5. ' match' → logprob: -5.386389255523682
    6. 'occur' → logprob: -5.761389255523682
    7. 'position' → logprob: -6.136389255523682
    8. ' ' → logprob: -6.511389255523682
    9. ' correspondence' → logprob: -6.886389255523682
    10. ' cor' → logprob: -8.51138973236084

Token 149: 'ance' (ID: 766)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3211290240287781
    2. 'ance' → logprob: -1.4461290836334229
    3. 'ence' → logprob: -3.696129083633423
    4. 'aise' → logprob: -4.946128845214844
    5. 'e' → logprob: -5.946128845214844
    6. 'issance' → logprob: -6.196128845214844
    7. 'rence' → logprob: -7.321128845214844
    8. 'ais' → logprob: -8.321128845214844
    9. 'rance' → logprob: -8.571128845214844
    10. 'ale' → logprob: -8.821128845214844

Token 150: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6496826410293579
    2. ':' → logprob: -1.024682641029358
    3. '       ' → logprob: -2.1496825218200684
    4. ':
' → logprob: -7.024682521820068
    5. ',' → logprob: -7.524682521820068
    6. '    
' → logprob: -7.649682521820068
    7. '        
' → logprob: -9.149682998657227
    8. '    ' → logprob: -9.274682998657227
    9. ' :' → logprob: -10.149682998657227
    10. '<|end|>' → logprob: -10.274682998657227

Token 151: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8822024464607239
    2. ' print' → logprob: -1.257202386856079
    3. '       ' → logprob: -1.632202386856079
    4. 'print' → logprob: -2.257202386856079
    5. '    ' → logprob: -7.007202625274658
    6. '    
' → logprob: -8.6322021484375
    7. '	print' → logprob: -8.8822021484375
    8. '
' → logprob: -9.7572021484375
    9. ' ' → logprob: -9.7572021484375
    10. '```' → logprob: -10.5072021484375

Token 152: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6870549321174622
    2. ' print' → logprob: -0.8120549321174622
    3. '   ' → logprob: -3.0620548725128174
    4. '    ' → logprob: -5.6870551109313965
    5. ' imprime' → logprob: -7.5620551109313965
    6. ')' → logprob: -7.6870551109313965
    7. '_print' → logprob: -8.312054634094238
    8. '.print' → logprob: -8.562054634094238
    9. '#print' → logprob: -8.687054634094238
    10. 's' → logprob: -8.687054634094238

Token 153: ' "' (ID: 392)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.014607079327106476
    2. 'i' → logprob: -4.264606952667236
    3. '(' → logprob: -7.764606952667236
    4. ' i' → logprob: -12.389607429504395
    5. '(A' → logprob: -12.764607429504395
    6. '   ' → logprob: -13.014607429504395
    7. '(len' → logprob: -13.014607429504395
    8. '()' → logprob: -13.264607429504395
    9. '("' → logprob: -13.389607429504395
    10. 'len' → logprob: -14.139607429504395

Token 154: 'Yes' (ID: 13022)
  Prédit: 'Oui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Oui' → logprob: -0.730319082736969
    2. 'i' → logprob: -0.980319082736969
    3. 'oui' → logprob: -2.855319023132324
    4. 'O' → logprob: -3.480319023132324
    5. 'True' → logprob: -3.730319023132324
    6. 'Yes' → logprob: -4.105319023132324
    7. 'YES' → logprob: -4.855319023132324
    8. 'Match' → logprob: -6.980319023132324
    9. '"' → logprob: -7.105319023132324
    10. 'OK' → logprob: -7.355319023132324

Token 155: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1222599595785141
    2. '   ' → logprob: -2.7472598552703857
    3. '")' → logprob: -3.1222598552703857
    4. 'print' → logprob: -5.872260093688965
    5. '       ' → logprob: -6.122260093688965
    6. ')' → logprob: -7.372260093688965
    7. '")
' → logprob: -8.372260093688965
    8. '           ' → logprob: -8.622260093688965
    9. '"
' → logprob: -8.872260093688965
    10. '```' → logprob: -8.997260093688965

Token 156: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4290452003479004
    2. '       ' → logprob: -1.0540452003479004
    3. '    
' → logprob: -8.679044723510742
    4. '           ' → logprob: -9.304044723510742
    5. ' and' → logprob: -10.804044723510742
    6. '        
' → logprob: -11.054044723510742
    7. 'print' → logprob: -11.429044723510742
    8. ',' → logprob: -11.679044723510742
    9. '```' → logprob: -11.804044723510742
    10. 'if' → logprob: -12.679044723510742

Token 157: ' on' (ID: 402)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.24588562548160553
    2. 'break' → logprob: -1.9958856105804443
    3. ' exit' → logprob: -3.2458856105804443
    4. '   ' → logprob: -3.7458856105804443
    5. 'exit' → logprob: -3.9958856105804443
    6. 'print' → logprob: -7.745885848999023
    7. ' print' → logprob: -8.120885848999023
    8. '    ' → logprob: -8.620885848999023
    9. '	break' → logprob: -9.745885848999023
    10. ' ' → logprob: -10.495885848999023

Token 158: ' termine' (ID: 76900)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.555121898651123
    2. 'break' → logprob: -1.055121898651123
    3. '   ' → logprob: -3.180121898651123
    4. 'exit' → logprob: -3.930121898651123
    5. ' exit' → logprob: -4.430121898651123
    6. 'print' → logprob: -6.930121898651123
    7. ' stop' → logprob: -7.305121898651123
    8. '    ' → logprob: -7.805121898651123
    9. ' ' → logprob: -8.055122375488281
    10. ' print' → logprob: -8.180122375488281

Token 159: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01923454739153385
    2. '    
' → logprob: -4.519234657287598
    3. '
' → logprob: -5.769234657287598
    4. '       ' → logprob: -6.144234657287598
    5. 'print' → logprob: -6.144234657287598
    6. '    ' → logprob: -9.269234657287598
    7. '```' → logprob: -9.394234657287598
    8. '        
' → logprob: -9.644234657287598
    9. '\n' → logprob: -9.894234657287598
    10. '  
' → logprob: -9.894234657287598

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000549218209926039
    2. 'if' → logprob: -8.00054931640625
    3. '       ' → logprob: -9.00054931640625
    4. '    
' → logprob: -9.75054931640625
    5. ' if' → logprob: -10.75054931640625
    6. '```' → logprob: -11.75054931640625
    7. '
' → logprob: -13.50054931640625
    8. '        
' → logprob: -14.75054931640625
    9. 'print' → logprob: -15.00054931640625
    10. '   ' → logprob: -15.25054931640625

Token 161: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036853551864624023
    2. '       ' → logprob: -6.378685474395752
    3. 'if' (adapté à ' if') → logprob: -6.878685474395752
    4. ' if' → logprob: -7.628685474395752
    5. 'print' → logprob: -8.128684997558594
    6. '    
' → logprob: -9.128684997558594
    7. ' print' → logprob: -9.878684997558594
    8. '        
' → logprob: -12.628684997558594
    9. '    ' → logprob: -13.128684997558594
    10. '```' → logprob: -13.378684997558594

Token 162: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.054886456578969955
    2. 'match' → logprob: -2.9298863410949707
    3. '(match' → logprob: -13.554886817932129
    4. ' ' → logprob: -13.804886817932129
    5. '	match' → logprob: -13.804886817932129
    6. ' ' → logprob: -15.054886817932129
    7. '   ' → logprob: -15.929886817932129
    8. 'm' → logprob: -16.179885864257812
    9. ' not' → logprob: -16.679885864257812
    10. ' m' → logprob: -16.679885864257812

Token 163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011464104754850268
    2. ':
' → logprob: -7.12614631652832
    3. '==' → logprob: -8.25114631652832
    4. ' ==' → logprob: -10.00114631652832
    5. '       ' → logprob: -11.00114631652832
    6. '   ' → logprob: -11.50114631652832
    7. ' :' → logprob: -12.25114631652832
    8. '):' → logprob: -13.00114631652832
    9. '():' → logprob: -14.25114631652832
    10. '=' → logprob: -15.00114631652832

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0064093428663909435
    2. ' print' → logprob: -5.881409168243408
    3. 'print' → logprob: -5.881409168243408
    4. '   ' → logprob: -7.131409168243408
    5. '	print' → logprob: -13.131409645080566
    6. '```' → logprob: -13.256409645080566
    7. '        
' → logprob: -13.506409645080566
    8. '    
' → logprob: -14.256409645080566
    9. '
' → logprob: -14.756409645080566
    10. ' ' → logprob: -15.506409645080566

Token 165: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.061984043568372726
    2. ' print' → logprob: -2.811984062194824
    3. '   ' → logprob: -11.061984062194824
    4. '
' → logprob: -15.436984062194824
    5. '	print' → logprob: -15.686984062194824
    6. '```' → logprob: -16.061983108520508
    7. 'break' → logprob: -16.436983108520508
    8. '       ' → logprob: -16.436983108520508
    9. '    
' → logprob: -17.686983108520508
    10. ' break' → logprob: -18.061983108520508

Token 166: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004087778273969889
    2. '(' → logprob: -5.504087924957275
    3. '('' → logprob: -11.629087448120117
    4. '(
' → logprob: -15.879087448120117
    5. '()' → logprob: -16.629087448120117
    6. '"' → logprob: -16.754087448120117
    7. '("("' → logprob: -16.879087448120117
    8. '("")' → logprob: -17.879087448120117
    9. '(True' → logprob: -18.254087448120117
    10. '(

' → logprob: -18.629087448120117

Token 167: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -3.128163257315464e-07
    2. ' Yes' → logprob: -15.875
    3. 'Oui' → logprob: -15.875
    4. 'YES' → logprob: -17.25
    5. 'Ye' → logprob: -18.0
    6. 'Y' → logprob: -19.75
    7. 'No' → logprob: -20.5
    8. 'True' → logprob: -20.5
    9. 'Yeah' → logprob: -20.625
    10. '")' → logprob: -20.875

Token 168: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.06216127425432205
    2. '")' → logprob: -2.8121612071990967
    3. '")
' → logprob: -8.687161445617676
    4. ')
' → logprob: -10.812161445617676
    5. ')' → logprob: -13.062161445617676
    6. ')")
' → logprob: -13.687161445617676
    7. '       ' → logprob: -14.437161445617676
    8. '"' → logprob: -14.562161445617676
    9. '   ' → logprob: -16.18716049194336
    10. '```' → logprob: -16.31216049194336

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.027225754223764e-05
    2. '
' → logprob: -10.000060081481934
    3. '<|end|>' → logprob: -11.375060081481934
    4. '        
' → logprob: -13.875060081481934
    5. '   ' → logprob: -14.000060081481934
    6. ')' → logprob: -15.125060081481934
    7. '           ' → logprob: -15.500060081481934
    8. '    
' → logprob: -15.750060081481934
    9. '<|end|>' → logprob: -15.750060081481934
    10. '```' → logprob: -16.12506103515625

Token 170: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.1594812572002411
    2. '       ' → logprob: -2.4094812870025635
    3. 'exit' → logprob: -2.9094812870025635
    4. ' break' → logprob: -6.034481048583984
    5. '   ' → logprob: -7.659481048583984
    6. '        
' → logprob: -10.159481048583984
    7. '
' → logprob: -10.409481048583984
    8. 'import' → logprob: -10.534481048583984
    9. '	break' → logprob: -10.534481048583984
    10. '```' → logprob: -10.909481048583984

Token 171: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.1472419600977446e-06
    2. ' else' → logprob: -13.875000953674316
    3. '```' → logprob: -16.500001907348633
    4. 'Else' → logprob: -17.375001907348633
    5. '#else' → logprob: -18.875001907348633
    6. '_else' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.750001907348633
    8. '}else' → logprob: -20.500001907348633
    9. '``' → logprob: -21.125001907348633
    10. 'e' → logprob: -21.375001907348633

Token 172: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -9.088346359931165e-07
    2. ' else' → logprob: -14.000000953674316
    3. '```' → logprob: -17.25
    4. 'Else' → logprob: -17.75
    5. '#else' → logprob: -19.125
    6. '_else' → logprob: -19.25
    7. 'e' → logprob: -20.0
    8. '   ' → logprob: -20.375
    9. '}else' → logprob: -20.625
    10. 'elses' → logprob: -20.75

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02981066145002842
    2. ':
' → logprob: -3.529810667037964
    3. ' :' → logprob: -10.029810905456543
    4. ' :
' → logprob: -11.154810905456543
    5. ':

' → logprob: -14.029810905456543
    6. '   ' → logprob: -14.404810905456543
    7. ':
' → logprob: -15.029810905456543
    8. '{' → logprob: -18.279809951782227
    9. '：' → logprob: -18.779809951782227
    10. ':def' → logprob: -18.779809951782227

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04882819205522537
    2. 'print' → logprob: -3.048828125
    3. ' print' → logprob: -8.423828125
    4. '       ' → logprob: -11.173828125
    5. '	print' → logprob: -12.798828125
    6. '   ' → logprob: -13.298828125
    7. '    
' → logprob: -13.798828125
    8. ' ' → logprob: -14.173828125
    9. '  ' → logprob: -14.423828125
    10. '    ' → logprob: -15.423828125

Token 175: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04042555391788483
    2. ' print' → logprob: -3.2904255390167236
    3. '   ' → logprob: -6.040425777435303
    4. '	print' → logprob: -14.915425300598145
    5. ' ' → logprob: -15.790425300598145
    6. '    
' → logprob: -16.91542625427246
    7. '    ' → logprob: -17.04042625427246
    8. ' ' → logprob: -17.41542625427246
    9. '  ' → logprob: -17.91542625427246
    10. ' 
' → logprob: -18.16542625427246

Token 176: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2645167410373688
    2. '   ' → logprob: -1.5145167112350464
    3. ' print' → logprob: -4.389516830444336
    4. '    ' → logprob: -9.889516830444336
    5. '       ' → logprob: -10.389516830444336
    6. ' ' → logprob: -11.889516830444336
    7. '  ' → logprob: -12.389516830444336
    8. '	print' → logprob: -12.764516830444336
    9. '    
' → logprob: -13.014516830444336
    10. '   ' → logprob: -13.514516830444336

Token 177: ' aucune' (ID: 51173)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.688420832157135
    2. 'not' → logprob: -0.813420832157135
    3. '   ' → logprob: -3.0634207725524902
    4. 'auc' → logprob: -5.81342077255249
    5. 'print' → logprob: -6.18842077255249
    6. ' no' → logprob: -7.18842077255249
    7. '  ' → logprob: -8.313421249389648
    8. 'n' → logprob: -8.563421249389648
    9. 'no' → logprob: -9.063421249389648
    10. ' print' → logprob: -9.063421249389648

Token 178: ' correspond' (ID: 11095)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.11687318235635757
    2. ' correspond' → logprob: -2.241873264312744
    3. 'match' → logprob: -6.241873264312744
    4. '   ' → logprob: -6.866873264312744
    5. 'print' → logprob: -7.991873264312744
    6. 'occ' → logprob: -8.116872787475586
    7. ' ' → logprob: -9.241872787475586
    8. 'occur' → logprob: -9.616872787475586
    9. ' correspondence' → logprob: -9.866872787475586
    10. '"' → logprob: -10.241872787475586

Token 179: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.12886324524879456
    2. 'ence' → logprob: -2.2538633346557617
    3. 'ation' → logprob: -5.503863334655762
    4. 'ée' → logprob: -5.503863334655762
    5. 'match' → logprob: -6.128863334655762
    6. 'é' → logprob: -6.628863334655762
    7. 't' → logprob: -7.253863334655762
    8. 'e' → logprob: -7.378863334655762
    9. 'ace' → logprob: -7.753863334655762
    10. 'ed' → logprob: -8.378863334655762

Token 180: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9299268126487732
    2. ':' → logprob: -1.054926872253418
    3. 'n' → logprob: -1.429926872253418
    4. ' n' → logprob: -4.554926872253418
    5. ':
' → logprob: -5.304926872253418
    6. ',' → logprob: -6.929926872253418
    7. 'print' → logprob: -7.304926872253418
    8. 'not' → logprob: -8.804926872253418
    9. '       ' → logprob: -9.179926872253418
    10. ' ' → logprob: -9.679926872253418

Token 181: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5881606340408325
    2. ''a' → logprob: -0.8381606340408325
    3. ''est' → logprob: -4.713160514831543
    4. ''' → logprob: -6.213160514831543
    5. ''ont' → logprob: -7.463160514831543
    6. '’a' → logprob: -9.713160514831543
    7. ''était' → logprob: -9.713160514831543
    8. ''ai' → logprob: -9.713160514831543
    9. 'est' → logprob: -9.838160514831543
    10. ''avait' → logprob: -10.088160514831543

Token 182: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.0010181600227952003
    2. 'ét' → logprob: -7.501018047332764
    3. 'être' → logprob: -9.001018524169922
    4. 'é' → logprob: -9.376018524169922
    5. ' été' → logprob: -9.876018524169922
    6. 'êt' → logprob: -10.126018524169922
    7. 'pas' → logprob: -10.376018524169922
    8. 'étés' → logprob: -10.501018524169922
    9. 'ê' → logprob: -11.001018524169922
    10. 'eté' → logprob: -11.626018524169922

Token 183: ' trouv' (ID: 40254)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.00018125296628568321
    2. ' trouv' → logprob: -8.750181198120117
    3. 'faite' → logprob: -11.625181198120117
    4. 'print' → logprob: -12.250181198120117
    5. 'found' → logprob: -12.625181198120117
    6. '#' → logprob: -13.375181198120117
    7. 'find' → logprob: -14.375181198120117
    8. '   ' → logprob: -14.625181198120117
    9. 'dé' → logprob: -14.625181198120117
    10. 'Trou' → logprob: -14.875181198120117

Token 184: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.36755236983299255
    2. 'ue' → logprob: -1.242552399635315
    3. 'ie' → logprob: -4.367552280426025
    4. 'e' → logprob: -5.617552280426025
    5. 'é' → logprob: -6.117552280426025
    6. 'u' → logprob: -8.492552757263184
    7. 'ee' → logprob: -8.992552757263184
    8. 'i' → logprob: -10.742552757263184
    9. 'uée' → logprob: -11.617552757263184
    10. 'rée' → logprob: -11.867552757263184

Token 185: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038550782948732376
    2. 'print' → logprob: -3.413550853729248
    3. '       ' → logprob: -6.038550853729248
    4. ':' → logprob: -6.163550853729248
    5. ' print' → logprob: -8.66355037689209
    6. ':
' → logprob: -8.78855037689209
    7. ',' → logprob: -9.53855037689209
    8. '    
' → logprob: -13.66355037689209
    9. '	print' → logprob: -14.03855037689209
    10. '   ' → logprob: -14.16355037689209

Token 186: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7036256790161133
    2. 'print' → logprob: -0.7036256790161133
    3. ' print' → logprob: -4.578625679016113
    4. '       ' → logprob: -8.828625679016113
    5. '	print' → logprob: -12.453625679016113
    6. ' ' → logprob: -13.828625679016113
    7. '   ' → logprob: -13.828625679016113
    8. '    ' → logprob: -14.078625679016113
    9. '```' → logprob: -14.203625679016113
    10. '  ' → logprob: -14.703625679016113

Token 187: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023555487859994173
    2. '   ' → logprob: -6.127355575561523
    3. ' print' → logprob: -8.752355575561523
    4. '       ' → logprob: -11.752355575561523
    5. '  ' → logprob: -13.252355575561523
    6. ' ' → logprob: -14.377355575561523
    7. 'pr' → logprob: -14.502355575561523
    8. '	print' → logprob: -15.002355575561523
    9. '```' → logprob: -15.127355575561523
    10. '    ' → logprob: -15.377355575561523

Token 188: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0012036849511787295
    2. '(' → logprob: -6.876203536987305
    3. '"' → logprob: -8.751203536987305
    4. '('' → logprob: -11.501203536987305
    5. '"No' → logprob: -13.251203536987305
    6. '(
' → logprob: -15.126203536987305
    7. '   ' → logprob: -15.251203536987305
    8. ' ("' → logprob: -16.376203536987305
    9. ''' → logprob: -17.126203536987305
    10. ' ' → logprob: -17.501203536987305

Token 189: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.006722233723849058
    2. '"No' → logprob: -5.006722450256348
    3. '"' → logprob: -12.131722450256348
    4. ' No' → logprob: -14.506722450256348
    5. 'NO' → logprob: -15.006722450256348
    6. '“No' → logprob: -15.756722450256348
    7. 'Non' → logprob: -15.881722450256348
    8. ''' → logprob: -16.00672149658203
    9. 'N' → logprob: -17.13172149658203
    10. '_No' → logprob: -17.38172149658203

Token 190: '"
' (ID: 1092)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0011835616314783692
    2. '")
' → logprob: -6.75118350982666
    3. ')' → logprob: -11.62618350982666
    4. '()' → logprob: -13.50118350982666
    5. '("' → logprob: -13.62618350982666
    6. '"' → logprob: -14.00118350982666
    7. ')")' → logprob: -15.12618350982666
    8. '")
' → logprob: -15.37618350982666
    9. 'print' → logprob: -15.75118350982666
    10. '")

' → logprob: -16.376184463500977

Token 191: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5762116312980652
    2. '   ' → logprob: -0.8262116312980652
    3. ' print' → logprob: -8.326211929321289
    4. '```' → logprob: -11.326211929321289
    5. '
' → logprob: -12.326211929321289
    6. '    
' → logprob: -12.451211929321289
    7. '(print' → logprob: -12.701211929321289
    8. '	print' → logprob: -12.951211929321289
    9. '       ' → logprob: -12.951211929321289
    10. '   ' → logprob: -15.201211929321289

Token 192: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.113290095934644e-05
    2. '   ' → logprob: -9.500081062316895
    3. ' print' → logprob: -12.000081062316895
    4. '```' → logprob: -19.50008201599121
    5. '	print' → logprob: -19.62508201599121
    6. '       ' → logprob: -20.50008201599121
    7. ' ' → logprob: -21.50008201599121
    8. 'pr' → logprob: -21.87508201599121
    9. 'Print' → logprob: -21.87508201599121
    10. '  ' → logprob: -22.37508201599121

Token 193: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00026169343618676066
    2. '(' → logprob: -8.250261306762695
    3. '('' → logprob: -16.250261306762695
    4. '("("' → logprob: -16.250261306762695
    5. '("")' → logprob: -16.375261306762695
    6. '()' → logprob: -16.750261306762695
    7. '(
' → logprob: -18.500261306762695
    8. '(""' → logprob: -19.625261306762695
    9. '("""' → logprob: -19.750261306762695
    10. '("(' → logprob: -20.000261306762695

Token 194: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -2.935296834039036e-06
    2. '"No' → logprob: -12.75000286102295
    3. ' No' → logprob: -19.125003814697266
    4. 'N' → logprob: -20.625003814697266
    5. '"' → logprob: -20.750003814697266
    6. '(No' → logprob: -21.000003814697266
    7. '")' → logprob: -21.250003814697266
    8. '_No' → logprob: -21.500003814697266
    9. '("' → logprob: -21.875003814697266
    10. 'NO' → logprob: -22.500003814697266

Token 195: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.286852345103398e-05
    2. ')' → logprob: -10.250042915344238
    3. ')")' → logprob: -11.875042915344238
    4. '")
' → logprob: -15.250042915344238
    5. '"' → logprob: -15.375042915344238
    6. '()' → logprob: -17.375041961669922
    7. '}")' → logprob: -18.125041961669922
    8. '')' → logprob: -18.250041961669922
    9. '!")' → logprob: -18.750041961669922
    10. '”)' → logprob: -19.250041961669922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 193
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 132
Précision stricte (1ère position): 35.75%
Précision adaptée (1ère position): 37.82%
Précision (top 10): 68.39%
================================================================================
