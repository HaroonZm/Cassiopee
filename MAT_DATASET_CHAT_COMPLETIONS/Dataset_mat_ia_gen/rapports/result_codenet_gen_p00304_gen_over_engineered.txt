================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
MOD = 10**9 + 7

from typing import List, Dict, Union, Optional
from abc import ABC, abstractmethod


class Node(ABC):
    def __init__(self, idx: int, optional: bool):
        self.idx = idx
        self.optional = optional
        self.children: List['Node'] = []

    def add_child(self, child: 'Node'):
        self.children.append(child)

    @abstractmethod
    def count_combinations(self) -> int:
        ...

class SubstanceNode(Node):
    # Substance node: either optional or not
    def count_combinations(self) -> int:
        # If optional, can choose or not choose (2 ways)
        # If not optional, must choose (1 way)
        return 2 if self.optional else 1

class SelectionNode(Node):
    # Abstract selection node
    def __init__(self, idx: int, optional: bool):
        super().__init__(idx, optional)

    @abstractmethod
    def count_combinations(self) -> int:
        ...

class OrSelectionNode(SelectionNode):
    # Or type: must choose at least one child if not optional,
    # If optional: can choose no children as well
    def count_combinations(self) -> int:
        child_counts = [child.count_combinations() for child in self.children]

        # For Or: total combinations = number of ways to choose subset (non-empty if non-optional),
        # where each chosen child multiplies child_counts, and unchosen contribute 1.
        # Using product for each child's (1 + count) - 1 because at least one chosen:
        # total = product(1 + child_count) - 1
        ways = 1
        for c in child_counts:
            ways = (ways * (1 + c)) % MOD

        if not self.optional:
            ways = (ways - 1) % MOD  # exclude 'choose none'
        # else optional: can choose empty subset, so ways keep

        return ways

class AltSelectionNode(SelectionNode):
    # Alt type: choose exactly one child if not optional,
    # if optional: choose zero or one child
    def count_combinations(self) -> int:
        child_counts = [child.count_combinations() for child in self.children]

        total = sum(child_counts) % MOD
        if self.optional:
            # can choose none (1 way) or one child
            total = (total + 1) % MOD
        # else must choose exactly one child, sum of child counts

        return total

# Factory for Node creation anticipating extensions.
class NodeFactory:
    @staticmethod
    def create_node(idx:int, info: str) -> Node:
        optional = info.endswith('?')
        base = info[:-1] if optional else info

        if base == 'E':
            return SubstanceNode(idx, optional)
        elif base == 'R':
            return OrSelectionNode(idx, optional)
        elif base == 'A':
            return AltSelectionNode(idx, optional)
        else:
            raise ValueError(f'Unknown node type: {info}')

class DrugCombinationTree:
    def __init__(self, n: int):
        self.n = n
        self.nodes: Dict[int, Node] = {}

    def build_nodes(self, node_infos: List[str]) -> None:
        for i in range(1, self.n + 1):
            self.nodes[i] = NodeFactory.create_node(i, node_infos[i-1])

    def build_tree(self, edges: List[List[int]]) -> None:
        # edges: [(s, t), ...], s parent, t child
        for s, t in edges:
            parent = self.nodes[s]
            child = self.nodes[t]
            parent.add_child(child)

    def count_all_combinations(self) -> int:
        # According to problem: root is node 1, not optional by condition given
        root = self.nodes[1]
        # The count_combinations returns total number of ways to realize subtree
        return root.count_combinations() % MOD


def main():
    import sys
    sys.setrecursionlimit(10**7)
    input = sys.stdin.readline

    N = int(input())
    node_infos = [input().strip() for _ in range(N)]
    edges = [list(map(int, input().split())) for _ in range(N-1)]

    tree = DrugCombinationTree(N)
    tree.build_nodes(node_infos)
    tree.build_tree(edges)

    ans = tree.count_all_combinations()
    print(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'MOD' (ID: 52135)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.12835821509361267
    2. '10' → logprob: -2.1283581256866455
    3. ' ' → logprob: -6.628358364105225
    4. '```' → logprob: -10.003357887268066
    5. '1' → logprob: -10.378357887268066
    6. '`' → logprob: -11.128357887268066
    7. '(' → logprob: -11.628357887268066
    8. '998' → logprob: -12.378357887268066
    9. '123' → logprob: -14.128357887268066
    10. '``' → logprob: -14.753357887268066

Token 4: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.428131639957428
    2. '**' → logprob: -1.1781315803527832
    3. '_' → logprob: -4.178131580352783
    4. '000' → logprob: -4.428131580352783
    5. ' **' → logprob: -4.553131580352783
    6. '^' → logprob: -7.303131580352783
    7. '00' → logprob: -7.678131580352783
    8. '*' → logprob: -8.178132057189941
    9. '6' → logprob: -8.303132057189941
    10. ',' → logprob: -8.553132057189941

Token 5: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.842555426876061e-06
    2. '09' → logprob: -12.250004768371582
    3. ' ' → logprob: -16.8750057220459
    4. '```' → logprob: -18.0000057220459
    5. '**' → logprob: -21.0000057220459
    6. '^' → logprob: -22.0000057220459
    7. '９' → logprob: -22.2500057220459
    8. '0' → logprob: -22.5000057220459
    9. '``' → logprob: -22.7500057220459
    10. '4' → logprob: -22.8750057220459

Token 6: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005860374658368528
    2. ' +' → logprob: -7.500586032867432
    3. '7' → logprob: -10.37558650970459
    4. '+
' → logprob: -14.25058650970459
    5. '```' → logprob: -14.37558650970459
    6. '＋' → logprob: -15.75058650970459
    7. '\' → logprob: -16.375585556030273
    8. '+

' → logprob: -16.500585556030273
    9. '+x' → logprob: -16.875585556030273
    10. '"+"' → logprob: -17.625585556030273

Token 7: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '+' → logprob: -15.125045776367188
    4. '```' → logprob: -16.125045776367188
    5. '9' → logprob: -17.375045776367188
    6. ' ' → logprob: -18.000045776367188
    7. '07' → logprob: -18.625045776367188
    8. '``' → logprob: -18.625045776367188
    9. '1' → logprob: -18.750045776367188
    10. '   ' → logprob: -18.937545776367188

Token 8: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -16.75
    3. ' ' → logprob: -17.5
    4. '```' → logprob: -17.625
    5. '``' → logprob: -20.5
    6. '37' → logprob: -20.75
    7. '   ' → logprob: -20.75
    8. '07' → logprob: -20.875
    9. '9' → logprob: -21.25
    10. '  ' → logprob: -22.1875

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7688374519348145
    2. '```' → logprob: -1.2688374519348145
    3. '\' → logprob: -2.3938374519348145
    4. '`' → logprob: -3.1438374519348145
    5. '
' → logprob: -3.5188374519348145
    6. '*' → logprob: -3.5188374519348145
    7. '**' → logprob: -4.1438374519348145
    8. '#' → logprob: -4.7688374519348145
    9. '\r' → logprob: -4.8938374519348145
    10. '=' → logprob: -5.5188374519348145

Token 10: 'from' (ID: 2845)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.0953957736492157
    2. '`' → logprob: -3.095395803451538
    3. '\n' → logprob: -3.970395803451538
    4. '\' → logprob: -4.470395565032959
    5. '
' → logprob: -5.595395565032959
    6. '``' → logprob: -5.845395565032959
    7. '*' → logprob: -5.970395565032959
    8. '**' → logprob: -6.470395565032959
    9. '=' → logprob: -7.220395565032959
    10. ')' → logprob: -7.470395565032959

Token 11: ' typing' (ID: 34152)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.23561879992485046
    2. ' ' → logprob: -2.110618829727173
    3. ' collections' → logprob: -2.860618829727173
    4. ' sys' → logprob: -3.985618829727173
    5. ' functools' → logprob: -4.735618591308594
    6. ' itertools' → logprob: -5.860618591308594
    7. 'collections' → logprob: -7.860618591308594
    8. ' random' → logprob: -8.610618591308594
    9. ' numpy' → logprob: -8.860618591308594
    10. ' ' → logprob: -8.985618591308594

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20185239613056183
    2. 'import' → logprob: -1.7018524408340454
    3. '```' → logprob: -8.201852798461914
    4. '_import' → logprob: -9.826852798461914
    5. '.import' → logprob: -10.076852798461914
    6. '.' → logprob: -11.201852798461914
    7. '	import' → logprob: -11.201852798461914
    8. '<|end|>' → logprob: -11.576852798461914
    9. ' ' → logprob: -11.826852798461914
    10. '[' → logprob: -12.701852798461914

Token 13: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.2813962697982788
    2. ' List' → logprob: -1.4063962697982788
    3. 'import' → logprob: -9.53139591217041
    4. 'Tuple' → logprob: -9.53139591217041
    5. 'Any' → logprob: -10.78139591217041
    6. '```' → logprob: -10.78139591217041
    7. 'Optional' → logprob: -11.40639591217041
    8. '.List' → logprob: -11.78139591217041
    9. ' Tuple' → logprob: -12.03139591217041
    10. 'Generator' → logprob: -12.15639591217041

Token 14: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.29887455701828003
    2. '
' → logprob: -1.5488746166229248
    3. 'def' → logprob: -3.548874616622925
    4. '```' → logprob: -4.423874378204346
    5. '\n' → logprob: -6.048874378204346
    6. '
' → logprob: -6.923874378204346
    7. '\' → logprob: -7.798874378204346
    8. 'class' → logprob: -7.923874378204346
    9. ',' → logprob: -8.423874855041504
    10. 'import' → logprob: -8.548874855041504

Token 15: ' Dict' (ID: 55179)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.03202066197991371
    2. 'Optional' → logprob: -4.157020568847656
    3. ' Tuple' → logprob: -4.282020568847656
    4. 'Union' → logprob: -7.532020568847656
    5. 'Dict' → logprob: -7.657020568847656
    6. 'deque' → logprob: -8.032020568847656
    7. ' Optional' → logprob: -8.407020568847656
    8. 'Iterable' → logprob: -8.907020568847656
    9. 'Deque' → logprob: -8.907020568847656
    10. 'Callable' → logprob: -9.907020568847656

Token 16: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.05430819094181061
    2. 'def' → logprob: -3.8043081760406494
    3. '
' → logprob: -4.0543084144592285
    4. '```' → logprob: -4.9293084144592285
    5. 'class' → logprob: -5.3043084144592285
    6. '\n' → logprob: -8.17930793762207
    7. 'import' → logprob: -8.67930793762207
    8. '


' → logprob: -8.92930793762207
    9. '
' → logprob: -9.05430793762207
    10. '\' → logprob: -9.30430793762207

Token 17: ' Union' (ID: 14746)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.24864304065704346
    2. ' Tuple' → logprob: -2.123642921447754
    3. 'Set' → logprob: -2.873642921447754
    4. 'Any' → logprob: -3.873642921447754
    5. 'deque' → logprob: -5.123642921447754
    6. 'Union' → logprob: -5.623642921447754
    7. ' Set' → logprob: -5.873642921447754
    8. ' Union' → logprob: -6.248642921447754
    9. 'Optional' → logprob: -6.373642921447754
    10. 'Deque' → logprob: -6.498642921447754

Token 18: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0570294857025146
    2. 'class' → logprob: -1.1820294857025146
    3. '

' → logprob: -1.1820294857025146
    4. '
' → logprob: -3.6820294857025146
    5. '```' → logprob: -4.682029724121094
    6. 'import' → logprob: -6.557029724121094
    7. '\n' → logprob: -7.182029724121094
    8. '\' → logprob: -7.307029724121094
    9. ',' → logprob: -7.682029724121094
    10. ' class' → logprob: -8.057029724121094

Token 19: ' Optional' (ID: 19351)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.3337383568286896
    2. ' Tuple' → logprob: -1.3337383270263672
    3. 'Optional' → logprob: -5.083738327026367
    4. 'Any' → logprob: -5.208738327026367
    5. ' Optional' → logprob: -5.458738327026367
    6. 'Set' → logprob: -6.083738327026367
    7. ' defaultdict' → logprob: -7.833738327026367
    8. ' Any' → logprob: -7.958738327026367
    9. ' Callable' → logprob: -8.083738327026367
    10. 'Iterable' → logprob: -8.583738327026367

Token 20: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.04908381775021553
    2. 'class' → logprob: -3.549083709716797
    3. 'def' → logprob: -5.049083709716797
    4. '
' → logprob: -5.174083709716797
    5. '```' → logprob: -5.174083709716797
    6. 'import' → logprob: -7.174083709716797
    7. ',' → logprob: -8.924083709716797
    8. 'from' → logprob: -9.174083709716797
    9. ' class' → logprob: -9.674083709716797
    10. '\n' → logprob: -9.924083709716797

Token 21: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10382551699876785
    2. 'class' → logprob: -2.478825569152832
    3. '```' → logprob: -4.478825569152832
    4. 'import' → logprob: -6.478825569152832
    5. '
' → logprob: -6.978825569152832
    6. '\' → logprob: -8.103825569152832
    7. 'd' → logprob: -8.603825569152832
    8. '

' → logprob: -8.853825569152832
    9. '\n' → logprob: -9.603825569152832
    10. '`' → logprob: -9.603825569152832

Token 22: ' abc' (ID: 75094)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.03249736130237579
    2. ' math' → logprob: -4.282497406005859
    3. 'collections' → logprob: -4.657497406005859
    4. ' typing' → logprob: -5.282497406005859
    5. ' sys' → logprob: -6.532497406005859
    6. ' dat' → logprob: -6.782497406005859
    7. ' itertools' → logprob: -7.407497406005859
    8. ' functools' → logprob: -8.78249740600586
    9. 'math' → logprob: -9.03249740600586
    10. ' datetime' → logprob: -9.65749740600586

Token 23: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14719177782535553
    2. ' import' → logprob: -2.0221917629241943
    3. '	import' → logprob: -5.522192001342773
    4. ' ' → logprob: -9.022192001342773
    5. '_import' → logprob: -9.272192001342773
    6. '```' → logprob: -9.647192001342773
    7. '<|end|>' → logprob: -9.897192001342773
    8. ' ' → logprob: -9.897192001342773
    9. '.' → logprob: -10.897192001342773
    10. 'abc' → logprob: -11.397192001342773

Token 24: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.0016503063961863518
    2. 'ABC' → logprob: -6.626650333404541
    3. ' ' → logprob: -9.251649856567383
    4. ' abstract' → logprob: -9.251649856567383
    5. 'abstract' → logprob: -9.251649856567383
    6. ' A' → logprob: -10.376649856567383
    7. ' ' → logprob: -13.251649856567383
    8. 'abc' → logprob: -13.626649856567383
    9. '	' → logprob: -14.626649856567383
    10. ' abc' → logprob: -14.626649856567383

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21841959655284882
    2. 'import' → logprob: -2.0934195518493652
    3. '.' → logprob: -2.9684195518493652
    4. ' ' → logprob: -4.718419551849365
    5. '<|end|>' → logprob: -5.093419551849365
    6. ' import' → logprob: -5.843419551849365
    7. ' ,' → logprob: -6.468419551849365
    8. ')' → logprob: -8.343420028686523
    9. 'Abstract' → logprob: -8.593420028686523
    10. ' and' → logprob: -8.718420028686523

Token 26: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.2014167606830597
    2. ' abstract' → logprob: -1.7014167308807373
    3. ' ' → logprob: -13.326416969299316
    4. '.abstract' → logprob: -14.326416969299316
    5. 'classmethod' → logprob: -14.951416969299316
    6. 'Abstract' → logprob: -14.951416969299316
    7. ' ABC' → logprob: -15.951416969299316
    8. '123' → logprob: -16.326416015625
    9. '```' → logprob: -16.326416015625
    10. 'staticmethod' → logprob: -16.826416015625

Token 27: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -7.219262624857947e-05
    2. 'classmethod' → logprob: -9.750072479248047
    3. 'ethod' → logprob: -11.875072479248047
    4. 'staticmethod' → logprob: -13.250072479248047
    5. 'meth' → logprob: -13.250072479248047
    6. '_method' → logprob: -13.500072479248047
    7. '	method' → logprob: -13.750072479248047
    8. ' method' → logprob: -14.625072479248047
    9. 'class' → logprob: -16.125072479248047
    10. 'Method' → logprob: -16.500072479248047

Token 28: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.11444231122732162
    2. 'class' → logprob: -2.8644423484802246
    3. '
' → logprob: -2.9894423484802246
    4. '```' → logprob: -8.239441871643066
    5. '


' → logprob: -8.489441871643066
    6. ' class' → logprob: -8.739441871643066
    7. '
' → logprob: -9.489441871643066
    8. '' → logprob: -10.614441871643066
    9. ' 

' → logprob: -10.989441871643066
    10. '\n' → logprob: -11.239441871643066

Token 29: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00013691288768313825
    2. '
' → logprob: -9.000137329101562
    3. ' class' → logprob: -11.375137329101562
    4. ' 
' → logprob: -14.000137329101562
    5. '

' → logprob: -14.625137329101562
    6. 'c' → logprob: -15.750137329101562
    7. '  
' → logprob: -16.125137329101562
    8. '```' → logprob: -16.125137329101562
    9. '"class' → logprob: -16.250137329101562
    10. 'clas' → logprob: -16.375137329101562

Token 30: ' Node' (ID: 10882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27243953943252563
    2. ' Abstract' → logprob: -1.8974394798278809
    3. ' Solver' → logprob: -3.897439479827881
    4. ' Solution' → logprob: -4.272439479827881
    5. ' Serializer' → logprob: -4.647439479827881
    6. ' Base' → logprob: -4.897439479827881
    7. ' Basic' → logprob: -4.897439479827881
    8. ' Parser' → logprob: -5.647439479827881
    9. ' Object' → logprob: -5.772439479827881
    10. ' Processor' → logprob: -6.022439479827881

Token 31: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031072497367858887
    2. '(' → logprob: -6.253107070922852
    3. ' :' → logprob: -6.878107070922852
    4. '():' → logprob: -10.128107070922852
    5. '):' → logprob: -10.378107070922852
    6. '(Abstract' → logprob: -10.628107070922852
    7. '<|end|>' → logprob: -10.878107070922852
    8. ':**' → logprob: -11.253107070922852
    9. ' (' → logprob: -12.003107070922852
    10. ':
' → logprob: -12.003107070922852

Token 32: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.008311725221574306
    2. ' ABC' → logprob: -5.258311748504639
    3. '):' → logprob: -6.133311748504639
    4. 'object' → logprob: -7.758311748504639
    5. ')' → logprob: -7.883311748504639
    6. '):
' → logprob: -9.88331127166748
    7. ' object' → logprob: -10.88331127166748
    8. 'Abstract' → logprob: -12.00831127166748
    9. ' ):' → logprob: -12.38331127166748
    10. 'abc' → logprob: -12.38331127166748

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001764074433594942
    2. ')' → logprob: -6.376764297485352
    3. ':' → logprob: -9.876764297485352
    4. ' ):' → logprob: -12.376764297485352
    5. ',' → logprob: -12.751764297485352
    6. '):
' → logprob: -13.251764297485352
    7. '[' → logprob: -15.251764297485352
    8. '):

' → logprob: -15.376764297485352
    9. '():' → logprob: -15.626764297485352
    10. ')：' → logprob: -16.00176429748535

Token 34: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014442839892581105
    2. '):' → logprob: -7.251444339752197
    3. '   ' → logprob: -7.751444339752197
    4. ':
' → logprob: -8.751443862915039
    5. ' :' → logprob: -9.126443862915039
    6. ')' → logprob: -10.876443862915039
    7. '):
' → logprob: -12.501443862915039
    8. '<|end|>' → logprob: -12.626443862915039
    9. '():' → logprob: -12.876443862915039
    10. ',' → logprob: -13.251443862915039

Token 35: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09248609095811844
    2. ' def' → logprob: -2.9674861431121826
    3. ' @' → logprob: -4.2174859046936035
    4. 'def' (adapté à ' def') → logprob: -4.8424859046936035
    5. '@' → logprob: -5.0924859046936035
    6. '    
' → logprob: -5.4674859046936035
    7. '    ' → logprob: -6.2174859046936035
    8. ' 
' → logprob: -7.3424859046936035
    9. '
' → logprob: -7.5924859046936035
    10. ' pass' → logprob: -8.717486381530762

Token 36: ' __' (ID: 2516)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9815277457237244
    2. 'i' → logprob: -1.1065278053283691
    3. 'it' → logprob: -1.9815278053283691
    4. 'def' → logprob: -2.356527805328369
    5. 'itialize' → logprob: -4.106527805328369
    6. ' def' → logprob: -4.731527805328369
    7. ' i' → logprob: -5.106527805328369
    8. 'italize' → logprob: -5.231527805328369
    9. 'p' → logprob: -5.481527805328369
    10. '(' → logprob: -5.606527805328369

Token 37: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.0
    3. 'ini' → logprob: -18.125
    4. 'int' → logprob: -19.5
    5. 'in' → logprob: -20.0
    6. 'call' → logprob: -20.0
    7. '_init' → logprob: -21.125
    8. 'i' → logprob: -21.5
    9. 'inite' → logprob: -21.5
    10. '	init' → logprob: -23.375

Token 38: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.027327511459589005
    2. '__' → logprob: -3.902327537536621
    3. '(self' → logprob: -5.527327537536621
    4. '(' → logprob: -6.277327537536621
    5. '__(
' → logprob: -7.527327537536621
    6. '__((' → logprob: -9.652327537536621
    7. '__(*' → logprob: -9.777327537536621
    8. '__('' → logprob: -9.902327537536621
    9. '<|end|>' → logprob: -10.277327537536621
    10. '_(' → logprob: -10.277327537536621

Token 39: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00038419815246015787
    2. ' self' → logprob: -7.875384330749512
    3. ')' → logprob: -12.625384330749512
    4. ',' → logprob: -15.250384330749512
    5. '	self' → logprob: -15.875384330749512
    6. '(self' → logprob: -16.000383377075195
    7. ' ' → logprob: -16.125383377075195
    8. '0' → logprob: -16.750383377075195
    9. '_self' → logprob: -17.125383377075195
    10. ',self' → logprob: -17.250383377075195

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027017051354050636
    2. ' ,' → logprob: -4.027017116546631
    3. 'self' → logprob: -4.777017116546631
    4. ')' → logprob: -9.027016639709473
    5. ' self' → logprob: -9.277016639709473
    6. ',value' → logprob: -9.777016639709473
    7. '):' → logprob: -10.277016639709473
    8. ',self' → logprob: -10.527016639709473
    9. ',data' → logprob: -11.652016639709473
    10. ',parent' → logprob: -11.652016639709473

Token 41: ' idx' (ID: 14016)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6483791470527649
    2. 'value' → logprob: -0.8983791470527649
    3. ' value' → logprob: -3.77337908744812
    4. ' self' → logprob: -4.273379325866699
    5. ')' → logprob: -5.023379325866699
    6. 'parent' → logprob: -5.023379325866699
    7. 'id' → logprob: -5.148379325866699
    8. 'data' → logprob: -5.523379325866699
    9. 'name' → logprob: -5.648379325866699
    10. 'val' → logprob: -5.773379325866699

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022147126495838165
    2. '):' → logprob: -3.8971471786499023
    3. ':int' → logprob: -6.772147178649902
    4. ')' → logprob: -8.272147178649902
    5. ',' → logprob: -8.647147178649902
    6. ' :' → logprob: -11.397147178649902
    7. '=' → logprob: -12.147147178649902
    8. '):
' → logprob: -12.522147178649902
    9. '=None' → logprob: -12.772147178649902
    10. ' ):' → logprob: -13.147147178649902

Token 43: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.576086699962616
    2. 'int' → logprob: -0.826086699962616
    3. ':int' → logprob: -9.07608699798584
    4. ':' → logprob: -11.32608699798584
    5. ')' → logprob: -11.57608699798584
    6. ' Optional' → logprob: -12.45108699798584
    7. '   ' → logprob: -12.82608699798584
    8. 'Optional' → logprob: -13.70108699798584
    9. '0' → logprob: -14.07608699798584
    10. ' ' → logprob: -14.32608699798584

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5280796885490417
    2. '):' → logprob: -1.2780797481536865
    3. ')' → logprob: -2.0280797481536865
    4. ' ,' → logprob: -10.153079986572266
    5. ' ):' → logprob: -11.028079986572266
    6. '):
' → logprob: -11.278079986572266
    7. ':' → logprob: -11.403079986572266
    8. ' )' → logprob: -11.403079986572266
    9. '   ' → logprob: -12.403079986572266
    10. ')->' → logprob: -13.153079986572266

Token 45: ' optional' (ID: 18297)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5880231857299805
    2. ' val' → logprob: -1.8380231857299805
    3. 'value' → logprob: -2.3380231857299805
    4. ' parent' → logprob: -3.0880231857299805
    5. 'val' → logprob: -3.2130231857299805
    6. ' data' → logprob: -3.3380231857299805
    7. ' left' → logprob: -4.3380231857299805
    8. ' children' → logprob: -4.7130231857299805
    9. ' weight' → logprob: -5.3380231857299805
    10. 'parent' → logprob: -5.3380231857299805

Token 46: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019293125660624355
    2. 'ity' → logprob: -9.750192642211914
    3. '=' → logprob: -10.000192642211914
    4. '_:' → logprob: -10.125192642211914
    5. '=False' → logprob: -11.500192642211914
    6. ' :' → logprob: -11.500192642211914
    7. 'ly' → logprob: -11.625192642211914
    8. '_params' → logprob: -12.375192642211914
    9. '=True' → logprob: -13.125192642211914
    10. '):' → logprob: -13.500192642211914

Token 47: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.23192167282104492
    2. ' bool' → logprob: -1.606921672821045
    3. 'int' → logprob: -5.731921672821045
    4. 'str' → logprob: -7.231921672821045
    5. ')' → logprob: -7.231921672821045
    6. ' int' → logprob: -7.856921672821045
    7. ' str' → logprob: -7.856921672821045
    8. 'Union' → logprob: -8.356922149658203
    9. 'List' → logprob: -8.731922149658203
    10. ' Union' → logprob: -8.856922149658203

Token 48: '):
' (ID: 1883)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12668479979038239
    2. '):' → logprob: -3.0016849040985107
    3. ')' → logprob: -3.5016849040985107
    4. ' =' → logprob: -3.6266849040985107
    5. '=False' → logprob: -4.751684665679932
    6. '=True' → logprob: -6.126684665679932
    7. ',' → logprob: -6.751684665679932
    8. ':' → logprob: -7.751684665679932
    9. '=None' → logprob: -9.37668514251709
    10. '):
' → logprob: -11.12668514251709

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007721725385636091
    2. '):' → logprob: -5.632721900939941
    3. ':' → logprob: -6.382721900939941
    4. ')' → logprob: -6.507721900939941
    5. '   ' → logprob: -8.382721900939941
    6. 'self' → logprob: -8.507721900939941
    7. ' ):' → logprob: -8.882721900939941
    8. ',' → logprob: -9.257721900939941
    9. ' :' → logprob: -9.382721900939941
    10. ' self' → logprob: -9.882721900939941

Token 50: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.372042179107666
    2. ' self' → logprob: -1.372042179107666
    3. '       ' → logprob: -2.872042179107666
    4. 'super' → logprob: -8.122041702270508
    5. ' super' → logprob: -8.747041702270508
    6. '   ' → logprob: -10.747041702270508
    7. '	self' → logprob: -11.247041702270508
    8. ' ' → logprob: -11.747041702270508
    9. ' ' → logprob: -13.122041702270508
    10. '```' → logprob: -14.497041702270508

Token 51: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -0.11342060565948486
    2. '.' → logprob: -2.2384204864501953
    3. '.id' → logprob: -8.238420486450195
    4. ' .' → logprob: -8.488420486450195
    5. 'idx' → logprob: -10.238420486450195
    6. '	idx' → logprob: -10.738420486450195
    7. ' idx' → logprob: -10.988420486450195
    8. '[idx' → logprob: -11.238420486450195
    9. '._' → logprob: -11.238420486450195
    10. '       ' → logprob: -12.113420486450195

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002007268602028489
    2. '=' → logprob: -6.252007484436035
    3. ':' → logprob: -9.627007484436035
    4. ' ' → logprob: -12.377007484436035
    5. '   ' → logprob: -12.627007484436035
    6. '<|end|>' → logprob: -13.252007484436035
    7. ',' → logprob: -13.752007484436035
    8. '<|end|>' → logprob: -14.002007484436035
    9. ')' → logprob: -14.752007484436035
    10. '    ' → logprob: -14.877007484436035

Token 53: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.009758212603628635
    2. 'idx' → logprob: -4.634757995605469
    3. '	idx' → logprob: -13.259757995605469
    4. '(idx' → logprob: -15.009757995605469
    5. '[idx' → logprob: -15.884757995605469
    6. '_idx' → logprob: -17.13475799560547
    7. '.idx' → logprob: -18.00975799560547
    8. ' ' → logprob: -18.50975799560547
    9. ' ' → logprob: -18.63475799560547
    10. '    ' → logprob: -19.50975799560547

Token 54: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000387535837944597
    2. '<|end|>' → logprob: -8.625387191772461
    3. '
' → logprob: -9.125387191772461
    4. 'self' → logprob: -9.375387191772461
    5. ' self' → logprob: -12.000387191772461
    6. '   ' → logprob: -13.000387191772461
    7. '<|end|>' → logprob: -13.000387191772461
    8. '        
' → logprob: -14.250387191772461
    9. '      ' → logprob: -14.500387191772461
    10. ',' → logprob: -15.000387191772461

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.457669562427327e-05
    2. 'self' → logprob: -10.00007438659668
    3. '<|end|>' → logprob: -10.87507438659668
    4. ' self' → logprob: -11.87507438659668
    5. '
' → logprob: -13.62507438659668
    6. '   ' → logprob: -13.87507438659668
    7. '<|end|>' → logprob: -15.12507438659668
    8. '        
' → logprob: -15.25007438659668
    9. '      ' → logprob: -15.62507438659668
    10. ',' → logprob: -16.62507438659668

Token 56: ' self' (ID: 1051)
  Prédit: ' optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optional' → logprob: -0.6701900959014893
    2. ' self' → logprob: -1.6701900959014893
    3. 'self' (adapté à ' self') → logprob: -1.7951900959014893
    4. 'optional' → logprob: -2.1701900959014893
    5. '       ' → logprob: -3.9201900959014893
    6. '_optional' → logprob: -10.67018985748291
    7. 'Optional' → logprob: -10.79518985748291
    8. '.optional' → logprob: -11.54518985748291
    9. '   ' → logprob: -11.92018985748291
    10. '(optional' → logprob: -12.04518985748291

Token 57: '.optional' (ID: 184220)
  Prédit: '.optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.optional' → logprob: -0.387480765581131
    2. '.' → logprob: -1.1374807357788086
    3. '.opt' → logprob: -8.012480735778809
    4. 'optional' → logprob: -8.387480735778809
    5. ' .' → logprob: -10.637480735778809
    6. '_optional' → logprob: -12.137480735778809
    7. '.Optional' → logprob: -12.387480735778809
    8. '.option' → logprob: -12.637480735778809
    9. ' optional' → logprob: -12.762480735778809
    10. '.idx' → logprob: -12.762480735778809

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194093585014343
    2. ' =' → logprob: -1.5019409656524658
    3. '<|end|>' → logprob: -12.001940727233887
    4. '=True' → logprob: -13.626940727233887
    5. ')' → logprob: -13.626940727233887
    6. ',' → logprob: -14.251940727233887
    7. '<|end|>' → logprob: -14.501940727233887
    8. '   ' → logprob: -14.751940727233887
    9. ' ' → logprob: -14.751940727233887
    10. ':' → logprob: -14.751940727233887

Token 59: ' optional' (ID: 18297)
  Prédit: ' optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optional' → logprob: -0.06198740750551224
    2. 'optional' → logprob: -2.8119874000549316
    3. '(optional' → logprob: -12.06198787689209
    4. ' False' → logprob: -12.18698787689209
    5. 'False' → logprob: -12.81198787689209
    6. '_optional' → logprob: -13.06198787689209
    7. '.optional' → logprob: -13.56198787689209
    8. 'Optional' → logprob: -13.81198787689209
    9. ' True' → logprob: -14.31198787689209
    10. ' ' → logprob: -14.93698787689209

Token 60: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.312346488237381
    2. '<|end|>' → logprob: -1.4373464584350586
    3. '   ' → logprob: -3.8123464584350586
    4. '<|end|>' → logprob: -5.812346458435059
    5. '       ' → logprob: -5.937346458435059
    6. '    
' → logprob: -6.062346458435059
    7. '  
' → logprob: -8.812346458435059
    8. '\n' → logprob: -9.062346458435059
    9. '

' → logprob: -9.187346458435059
    10. '```' → logprob: -9.562346458435059

Token 62: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '.children' (ID: 26331)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19127695262432098
    2. '.children' → logprob: -1.8162769079208374
    3. 'children' → logprob: -5.691277027130127
    4. '.next' → logprob: -6.066277027130127
    5. '_children' → logprob: -6.691277027130127
    6. '.value' → logprob: -6.816277027130127
    7. '.parent' → logprob: -6.816277027130127
    8. '.is' → logprob: -7.691277027130127
    9. '.tokens' → logprob: -8.566276550292969
    10. ' .' → logprob: -8.566276550292969

Token 64: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33532556891441345
    2. ' =' → logprob: -1.3353255987167358
    3. '=' → logprob: -3.8353254795074463
    4. ' :' → logprob: -8.585325241088867
    5. '=[]' → logprob: -10.210325241088867
    6. ' ' → logprob: -13.210325241088867
    7. '[:]' → logprob: -14.585325241088867
    8. ':list' → logprob: -14.710325241088867
    9. '=None' → logprob: -14.960325241088867
    10. '   ' → logprob: -15.210325241088867

Token 65: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.576166033744812
    2. ' List' → logprob: -0.826166033744812
    3. ' list' → logprob: -9.201166152954102
    4. '[List' → logprob: -10.326166152954102
    5. 'list' → logprob: -10.701166152954102
    6. ' []' → logprob: -11.076166152954102
    7. ' ' → logprob: -11.326166152954102
    8. '[]' → logprob: -11.576166152954102
    9. 'Dict' → logprob: -11.701166152954102
    10. 'Optional' → logprob: -11.951166152954102

Token 66: '['' (ID: 1181)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003851517685689032
    2. '['' → logprob: -8.000385284423828
    3. '<Node' → logprob: -10.500385284423828
    4. '[int' → logprob: -11.875385284423828
    5. '[node' → logprob: -12.250385284423828
    6. '["' → logprob: -12.250385284423828
    7. '[
' → logprob: -13.750385284423828
    8. '<|end|>' → logprob: -13.750385284423828
    9. '[Index' → logprob: -14.125385284423828
    10. '(Node' → logprob: -14.375385284423828

Token 67: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -5.796184723294573e-06
    2. ' Node' → logprob: -12.125005722045898
    3. '	Node' → logprob: -15.625005722045898
    4. '<Node' → logprob: -15.875005722045898
    5. '_Node' → logprob: -17.1250057220459
    6. '.Node' → logprob: -17.7500057220459
    7. 'N' → logprob: -18.3750057220459
    8. 'Nodo' → logprob: -18.6250057220459
    9. '_node' → logprob: -18.8750057220459
    10. 'Token' → logprob: -19.0000057220459

Token 68: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -2.2723104848410003e-05
    2. ']' → logprob: -10.750022888183594
    3. ''' → logprob: -14.500022888183594
    4. ' ']' → logprob: -15.500022888183594
    5. '']=' → logprob: -15.625022888183594
    6. '"]' → logprob: -15.625022888183594
    7. ')' → logprob: -16.500022888183594
    8. '[' → logprob: -17.250022888183594
    9. '']]' → logprob: -17.500022888183594
    10. '']
' → logprob: -18.000022888183594

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021162778139114
    2. '=' → logprob: -2.3502116203308105
    3. ' ' → logprob: -13.600212097167969
    4. ']' → logprob: -13.725212097167969
    5. '=[]' → logprob: -14.225212097167969
    6. '<|end|>' → logprob: -14.225212097167969
    7. '[' → logprob: -14.475212097167969
    8. ')' → logprob: -14.600212097167969
    9. '[]' → logprob: -15.350212097167969
    10. '  ' → logprob: -16.97521209716797

Token 70: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.029761716723442078
    2. ' []' → logprob: -3.529761791229248
    3. ' ' → logprob: -12.27976131439209
    4. '[]}' → logprob: -12.52976131439209
    5. '[]
' → logprob: -13.52976131439209
    6. '[]

' → logprob: -14.52976131439209
    7. '[])' → logprob: -15.27976131439209
    8. '[' → logprob: -15.52976131439209
    9. '   ' → logprob: -15.77976131439209
    10. '=[]' → logprob: -15.90476131439209

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4423789083957672
    2. '
' → logprob: -1.3173788785934448
    3. '    
' → logprob: -2.5673789978027344
    4. '<|end|>' → logprob: -4.692378997802734
    5. ' 
' → logprob: -7.067378997802734
    6. '

' → logprob: -7.192378997802734
    7. '<|end|>' → logprob: -7.442378997802734
    8. '        
' → logprob: -7.692378997802734
    9. '\n' → logprob: -8.067378997802734
    10. '  
' → logprob: -8.567378997802734

Token 72: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11842314153909683
    2. '@' → logprob: -2.6184232234954834
    3. '
' → logprob: -3.6184232234954834
    4. 'def' (adapté à ' def') → logprob: -4.743422985076904
    5. '    
' → logprob: -6.618422985076904
    6. '@property' → logprob: -6.743422985076904
    7. ' def' → logprob: -8.118423461914062
    8. ' @' → logprob: -9.243423461914062
    9. '

' → logprob: -9.243423461914062
    10. '@index' → logprob: -10.493423461914062

Token 73: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.006670377682894468
    2. 'add' → logprob: -5.6316704750061035
    3. '_add' → logprob: -6.2566704750061035
    4. ' def' → logprob: -7.7566704750061035
    5. ' append' → logprob: -8.381669998168945
    6. ' __' → logprob: -8.756669998168945
    7. ' has' → logprob: -9.631669998168945
    8. ' ' → logprob: -10.256669998168945
    9. ' abstract' → logprob: -10.506669998168945
    10. 'append' → logprob: -10.631669998168945

Token 74: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.00014239625306800008
    2. '_' → logprob: -9.000142097473145
    3. '_node' → logprob: -11.000142097473145
    4. '_children' → logprob: -13.750142097473145
    5. '_CHILD' → logprob: -15.000142097473145
    6. 'Child' → logprob: -15.250142097473145
    7. 'child' → logprob: -16.25014305114746
    8. '_ch' → logprob: -16.75014305114746
    9. '(child' → logprob: -16.87514305114746
    10. '_branch' → logprob: -17.12514305114746

Token 75: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008752365596592426
    2. '(self' → logprob: -4.883752346038818
    3. '<|end|>' → logprob: -7.633752346038818
    4. ' (' → logprob: -7.883752346038818
    5. '(
' → logprob: -8.508752822875977
    6. '('' → logprob: -11.008752822875977
    7. ')' → logprob: -11.383752822875977
    8. '(

' → logprob: -11.758752822875977
    9. ' ' → logprob: -11.883752822875977
    10. '(child' → logprob: -12.508752822875977

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47628727555274963
    2. ')' → logprob: -0.9762872457504272
    3. ' ,' → logprob: -6.976287364959717
    4. '(' → logprob: -7.101287364959717
    5. ' )' → logprob: -9.351286888122559
    6. '(child' → logprob: -9.476286888122559
    7. 'self' → logprob: -9.476286888122559
    8. '<|end|>' → logprob: -9.976286888122559
    9. '(self' → logprob: -10.101286888122559
    10. ',node' → logprob: -10.351286888122559

Token 77: ' child' (ID: 2320)
  Prédit: ' child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.053748343139886856
    2. 'child' → logprob: -3.053748369216919
    3. ' node' → logprob: -5.30374813079834
    4. 'node' → logprob: -8.67874813079834
    5. '	child' → logprob: -12.55374813079834
    6. ' self' → logprob: -15.30374813079834
    7. ')' → logprob: -15.55374813079834
    8. 'self' → logprob: -15.67874813079834
    9. '(child' → logprob: -16.178749084472656
    10. '_child' → logprob: -16.553749084472656

Token 78: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05383837968111038
    2. '):' → logprob: -3.1788384914398193
    3. ':' → logprob: -4.80383825302124
    4. '):
' → logprob: -7.17883825302124
    5. '<|end|>' → logprob: -7.17883825302124
    6. ' )' → logprob: -7.30383825302124
    7. '<|end|>' → logprob: -9.178838729858398
    8. ' ' → logprob: -9.178838729858398
    9. ' ):' → logprob: -10.178838729858398
    10. '')' → logprob: -10.553838729858398

Token 79: ' '' (ID: 461)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.3927847146987915
    2. ')' → logprob: -1.1427847146987915
    3. ' ' → logprob: -5.142784595489502
    4. ''' → logprob: -10.39278507232666
    5. ' ' → logprob: -12.01778507232666
    6. '<|end|>' → logprob: -12.14278507232666
    7. ' ){' → logprob: -12.64278507232666
    8. '')' → logprob: -12.76778507232666
    9. ' )
' → logprob: -13.89278507232666
    10. '  ' → logprob: -13.89278507232666

Token 80: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -3.5954712075181305e-05
    2. ' Node' → logprob: -10.250036239624023
    3. '	Node' → logprob: -15.875036239624023
    4. ')' → logprob: -16.375036239624023
    5. '_Node' → logprob: -16.375036239624023
    6. '.Node' → logprob: -16.500036239624023
    7. 'N' → logprob: -16.625036239624023
    8. 'Child' → logprob: -17.125036239624023
    9. '<Node' → logprob: -17.250036239624023
    10. 'Nodo' → logprob: -18.000036239624023

Token 81: ''):
' (ID: 26539)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.21817398071289062
    2. ''):' → logprob: -2.0931739807128906
    3. ')' → logprob: -2.7181739807128906
    4. '):' → logprob: -5.093173980712891
    5. ''' → logprob: -7.968173980712891
    6. ''):
' → logprob: -8.84317398071289
    7. ':' → logprob: -10.59317398071289
    8. ')'' → logprob: -10.84317398071289
    9. ''):
' → logprob: -11.96817398071289
    10. '':' → logprob: -12.21817398071289

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04196512699127197
    2. '<|end|>' → logprob: -3.4169650077819824
    3. '   ' → logprob: -5.791965007781982
    4. ' self' → logprob: -6.666965007781982
    5. 'self' → logprob: -6.666965007781982
    6. '        
' → logprob: -7.291965007781982
    7. '```' → logprob: -8.16696548461914
    8. '\' → logprob: -8.16696548461914
    9. '<|end|>' → logprob: -8.54196548461914
    10. ' 
' → logprob: -8.66696548461914

Token 83: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2552281320095062
    2. 'self' (adapté à ' self') → logprob: -1.5052281618118286
    3. '       ' → logprob: -5.755228042602539
    4. ' ' → logprob: -9.505228042602539
    5. '        
' → logprob: -10.880228042602539
    6. ' 
' → logprob: -11.505228042602539
    7. '	self' → logprob: -11.630228042602539
    8. '```' → logprob: -12.755228042602539
    9. '[self' → logprob: -13.005228042602539
    10. '   ' → logprob: -13.005228042602539

Token 84: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.20158953964710236
    2. '.' → logprob: -1.701589584350586
    3. '.Children' → logprob: -8.951589584350586
    4. ').' → logprob: -11.576589584350586
    5. '.child' → logprob: -11.701589584350586
    6. '.characters' → logprob: -12.326589584350586
    7. ' .' → logprob: -12.451589584350586
    8. '.cells' → logprob: -13.201589584350586
    9. 'children' → logprob: -13.326589584350586
    10. '.add' → logprob: -13.451589584350586

Token 85: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03806949034333229
    2. '.' → logprob: -3.288069486618042
    3. '.app' → logprob: -10.788069725036621
    4. '.extend' → logprob: -12.913069725036621
    5. ' .' → logprob: -13.413069725036621
    6. '.ap' → logprob: -13.663069725036621
    7. '.Append' → logprob: -14.663069725036621
    8. '.add' → logprob: -14.663069725036621
    9. '.setdefault' → logprob: -14.663069725036621
    10. ').' → logprob: -15.163069725036621

Token 86: '(child' (ID: 34164)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3132847845554352
    2. '(child' → logprob: -1.3132847547531128
    3. '(
' → logprob: -11.938284873962402
    4. '(children' → logprob: -12.313284873962402
    5. '(

' → logprob: -12.563284873962402
    6. '(parent' → logprob: -12.813284873962402
    7. '(cell' → logprob: -13.688284873962402
    8. ' (' → logprob: -15.063284873962402
    9. 'child' → logprob: -15.313284873962402
    10. '(user' → logprob: -15.563284873962402

Token 87: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.47495681833243e-05
    2. '<|end|>' → logprob: -11.000024795532227
    3. ')
' → logprob: -12.375024795532227
    4. ' )' → logprob: -13.250024795532227
    5. ')return' → logprob: -14.875024795532227
    6. '<|end|>' → logprob: -15.125024795532227
    7. '\n' → logprob: -15.250024795532227
    8. '```' → logprob: -15.500024795532227
    9. '
' → logprob: -15.500024795532227
    10. '   ' → logprob: -15.875024795532227

Token 88: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4183706045150757
    2. '   ' → logprob: -1.1683706045150757
    3. '    
' → logprob: -4.043370723724365
    4. '@' → logprob: -4.793370723724365
    5. '

' → logprob: -6.918370723724365
    6. '<|end|>' → logprob: -6.918370723724365
    7. ' 
' → logprob: -7.168370723724365
    8. ' ' → logprob: -7.918370723724365
    9. '\n' → logprob: -7.918370723724365
    10. '```' → logprob: -8.043370246887207

Token 89: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0005915171932429075
    2. '   ' → logprob: -7.75059175491333
    3. ' @' → logprob: -9.000591278076172
    4. '@
' → logprob: -10.500591278076172
    5. '
' → logprob: -12.875591278076172
    6. '    
' → logprob: -13.000591278076172
    7. '@property' → logprob: -13.000591278076172
    8. ' ' → logprob: -14.125591278076172
    9. ' 
' → logprob: -14.625591278076172
    10. 'def' → logprob: -15.000591278076172

Token 90: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -6.034592388459714e-06
    2. 'ab' → logprob: -12.500005722045898
    3. 'abs' → logprob: -13.500005722045898
    4. 'property' → logprob: -14.250005722045898
    5. 'abc' → logprob: -15.500005722045898
    6. 'staticmethod' → logprob: -17.6250057220459
    7. 'a' → logprob: -19.1250057220459
    8. ' abstract' → logprob: -19.3750057220459
    9. 'classmethod' → logprob: -20.2500057220459
    10. '.abstract' → logprob: -20.3750057220459

Token 91: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.1324879378080368
    2. '_method' → logprob: -2.5074880123138428
    3. 'def' → logprob: -4.007487773895264
    4. '_token' → logprob: -4.507487773895264
    5. '<|end|>' → logprob: -5.007487773895264
    6. 'token' → logprob: -6.257487773895264
    7. ' def' → logprob: -6.507487773895264
    8. '_' → logprob: -7.507487773895264
    9. 'classmethod' → logprob: -7.632487773895264
    10. 'staticmethod' → logprob: -8.257488250732422

Token 92: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10653340071439743
    2. 'def' → logprob: -2.4815332889556885
    3. '
' → logprob: -4.106533527374268
    4. ' ' → logprob: -7.481533527374268
    5. 'method' → logprob: -8.98153305053711
    6. ' 
' → logprob: -9.85653305053711
    7. '\' → logprob: -10.60653305053711
    8. ')' → logprob: -10.85653305053711
    9. '_token' → logprob: -10.85653305053711
    10. 'classmethod' → logprob: -10.98153305053711

Token 93: '   ' (ID: 271)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.6179665327072144
    2. 'def' → logprob: -0.9929665327072144
    3. '
' → logprob: -2.617966651916504
    4. ' def' → logprob: -4.742966651916504
    5. 'classmethod' → logprob: -5.367966651916504
    6. ' ' → logprob: -6.492966651916504
    7. 'staticmethod' → logprob: -7.492966651916504
    8. 'property' → logprob: -7.992966651916504
    9. 'token' → logprob: -8.367966651916504
    10. '`' → logprob: -8.742966651916504

Token 94: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.31777894496917725
    2. 'classmethod' → logprob: -2.192779064178467
    3. 'property' → logprob: -2.317779064178467
    4. 'method' → logprob: -3.192779064178467
    5. 'staticmethod' → logprob: -4.567779064178467
    6. 'abstract' → logprob: -4.817779064178467
    7. 'call' → logprob: -6.317779064178467
    8. 'abc' → logprob: -7.817779064178467
    9. '`' → logprob: -8.817778587341309
    10. ' def' → logprob: -9.692778587341309

Token 95: ' count' (ID: 3605)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -1.076947569847107
    2. ' evaluate' → logprob: -1.326947569847107
    3. ' calculate' → logprob: -1.326947569847107
    4. ' def' → logprob: -2.3269476890563965
    5. ' process' → logprob: -4.4519476890563965
    6. ' validate' → logprob: -4.8269476890563965
    7. ' ' → logprob: -5.3269476890563965
    8. ' apply' → logprob: -7.3269476890563965
    9. ' build' → logprob: -7.5769476890563965
    10. 'calculate' → logprob: -7.5769476890563965

Token 96: '_com' (ID: 10828)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6549897789955139
    2. '(' → logprob: -2.029989719390869
    3. '(self' → logprob: -2.279989719390869
    4. '_tokens' → logprob: -2.529989719390869
    5. '_nodes' → logprob: -3.154989719390869
    6. '_paths' → logprob: -3.779989719390869
    7. '_sequences' → logprob: -3.779989719390869
    8. '_s' → logprob: -4.779989719390869
    9. '_valid' → logprob: -5.029989719390869
    10. '_values' → logprob: -5.154989719390869

Token 97: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.17887993156909943
    2. 'plet' → logprob: -1.928879976272583
    3. 'positions' → logprob: -4.053879737854004
    4. '```' → logprob: -7.928879737854004
    5. 'ponents' → logprob: -8.303879737854004
    6. 'b' → logprob: -8.553879737854004
    7. 'p' → logprob: -9.428879737854004
    8. 'ponent' → logprob: -10.053879737854004
    9. 'bination' → logprob: -10.303879737854004
    10. 'ple' → logprob: -10.303879737854004

Token 98: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07010682672262192
    2. '(' → logprob: -2.6951067447662354
    3. 'self' → logprob: -9.070106506347656
    4. '(
' → logprob: -10.195106506347656
    5. ' (' → logprob: -11.570106506347656
    6. 's' → logprob: -12.695106506347656
    7. '(s' → logprob: -13.195106506347656
    8. ' self' → logprob: -14.070106506347656
    9. ' ' → logprob: -14.570106506347656
    10. '_self' → logprob: -14.945106506347656

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04408431798219681
    2. '):' → logprob: -3.294084310531616
    3. ',' → logprob: -5.169084548950195
    4. 'self' → logprob: -8.794084548950195
    5. ' )' → logprob: -9.669084548950195
    6. ')->' → logprob: -10.044084548950195
    7. ':' → logprob: -10.044084548950195
    8. '):
' → logprob: -10.794084548950195
    9. ' ):' → logprob: -12.669084548950195
    10. ' ,' → logprob: -12.919084548950195

Token 100: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7615766525268555
    2. '(' → logprob: -0.8865766525268555
    3. ':' → logprob: -2.1365766525268555
    4. ')' → logprob: -6.8865766525268555
    5. '->' → logprob: -7.1365766525268555
    6. ' ->' → logprob: -7.6365766525268555
    7. '.' → logprob: -8.761576652526855
    8. 'self' → logprob: -8.886576652526855
    9. '(
' → logprob: -9.511576652526855
    10. '():' → logprob: -9.886576652526855

Token 101: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12696170806884766
    2. ' int' → logprob: -2.1269617080688477
    3. 'List' → logprob: -10.751961708068848
    4. ' List' → logprob: -12.376961708068848
    5. 'None' → logprob: -12.501961708068848
    6. ' None' → logprob: -13.876961708068848
    7. ' ' → logprob: -14.126961708068848
    8. 'Optional' → logprob: -14.251961708068848
    9. 'Dict' → logprob: -14.626961708068848
    10. '	int' → logprob: -15.001961708068848

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008581952191889286
    2. '<|end|>' → logprob: -4.88358211517334
    3. '<|end|>' → logprob: -8.50858211517334
    4. ':return' → logprob: -8.75858211517334
    5. ':
' → logprob: -8.88358211517334
    6. '   ' → logprob: -9.00858211517334
    7. '
' → logprob: -9.13358211517334
    8. '```' → logprob: -9.75858211517334
    9. ')' → logprob: -10.00858211517334
    10. 'newline' → logprob: -11.00858211517334

Token 103: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5058405995368958
    2. '
' → logprob: -2.005840539932251
    3. '<|end|>' → logprob: -2.130840539932251
    4. '   ' → logprob: -2.880840539932251
    5. '\' → logprob: -3.630840539932251
    6. '       ' → logprob: -4.00584077835083
    7. ':' → logprob: -4.13084077835083
    8. ' 
' → logprob: -4.63084077835083
    9. '' → logprob: -5.75584077835083
    10. '    
' → logprob: -6.00584077835083

Token 104: ' ...

' (ID: 5231)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.6471899747848511
    2. '<|end|>' → logprob: -1.147189974784851
    3. '       ' → logprob: -2.6471900939941406
    4. '\n' → logprob: -2.7721900939941406
    5. '
' → logprob: -4.522190093994141
    6. 'pass' → logprob: -4.647190093994141
    7. ' ' → logprob: -6.772190093994141
    8. ' 
' → logprob: -7.147190093994141
    9. '   ' → logprob: -7.397190093994141
    10. '\' → logprob: -7.647190093994141

Token 105: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06286666542291641
    2. '

' → logprob: -3.812866687774658
    3. '   ' → logprob: -3.812866687774658
    4. '<|end|>' → logprob: -4.937866687774658
    5. 'class' → logprob: -5.812866687774658
    6. '    
' → logprob: -6.062866687774658
    7. ' 
' → logprob: -6.312866687774658
    8. '\n' → logprob: -6.687866687774658
    9. '  
' → logprob: -8.1878662109375
    10. '


' → logprob: -8.8128662109375

Token 106: ' Substance' (ID: 165971)
  Prédit: ' Leaf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Leaf' → logprob: -0.7582654356956482
    2. ' Sequence' → logprob: -1.633265495300293
    3. ' Text' → logprob: -2.758265495300293
    4. ' Terminal' → logprob: -2.758265495300293
    5. ' Choice' → logprob: -2.758265495300293
    6. ' Literal' → logprob: -2.758265495300293
    7. 'Leaf' → logprob: -4.008265495300293
    8. ' Binary' → logprob: -4.633265495300293
    9. ' Value' → logprob: -4.758265495300293
    10. ' ' → logprob: -5.008265495300293

Token 107: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.02979607880115509
    2. '(Node' → logprob: -3.5297961235046387
    3. '(' → logprob: -10.27979564666748
    4. ' Node' → logprob: -11.65479564666748
    5. '	Node' → logprob: -14.52979564666748
    6. '_Node' → logprob: -14.90479564666748
    7. ' (' → logprob: -15.52979564666748
    8. 'Name' → logprob: -15.52979564666748
    9. '_node' → logprob: -15.65479564666748
    10. '<Node' → logprob: -16.029796600341797

Token 108: '(Node' (ID: 43019)
  Prédit: '(Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Node' → logprob: -0.005247395019978285
    2. '(' → logprob: -5.255247592926025
    3. ' (' → logprob: -12.130247116088867
    4. '(Abstract' → logprob: -12.255247116088867
    5. ':' → logprob: -13.380247116088867
    6. '(Sub' → logprob: -14.505247116088867
    7. '(Note' → logprob: -15.130247116088867
    8. '(node' → logprob: -15.505247116088867
    9. '<Node' → logprob: -15.505247116088867
    10. '(No' → logprob: -15.630247116088867

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000498701527249068
    2. '(Node' → logprob: -8.12549877166748
    3. ')' → logprob: -9.50049877166748
    4. '):
' → logprob: -9.50049877166748
    5. ':' → logprob: -10.12549877166748
    6. ',' → logprob: -12.62549877166748
    7. '<Node' → logprob: -12.87549877166748
    8. ' ):' → logprob: -13.25049877166748
    9. '.Node' → logprob: -13.75049877166748
    10. '(' → logprob: -13.75049877166748

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017028623551595956
    2. ' def' → logprob: -9.125170707702637
    3. 'def' → logprob: -10.000170707702637
    4. ':' → logprob: -11.250170707702637
    5. ')' → logprob: -13.875170707702637
    6. '   ' → logprob: -14.125170707702637
    7. '    
' → logprob: -14.625170707702637
    8. '   ' → logprob: -16.37516975402832
    9. '```' → logprob: -16.50016975402832
    10. ':def' → logprob: -16.50016975402832

Token 111: ' #' (ID: 1069)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.23672059178352356
    2. 'def' → logprob: -1.7367205619812012
    3. '   ' → logprob: -3.361720561981201
    4. ' ' → logprob: -11.61172103881836
    5. '	def' → logprob: -13.48672103881836
    6. '    ' → logprob: -13.61172103881836
    7. '  ' → logprob: -14.11172103881836
    8. '
' → logprob: -14.36172103881836
    9. '```' → logprob: -14.86172103881836
    10. '1' → logprob: -15.42422103881836

Token 112: ' Substance' (ID: 165971)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10222996771335602
    2. 'def' → logprob: -2.3522300720214844
    3. '   ' → logprob: -6.227230072021484
    4. ' ' → logprob: -10.727230072021484
    5. '```' → logprob: -11.977230072021484
    6. '  ' → logprob: -12.477230072021484
    7. '    ' → logprob: -13.102230072021484
    8. '...' → logprob: -13.102230072021484
    9. ')' → logprob: -13.227230072021484
    10. '__' → logprob: -13.977230072021484

Token 113: ' node' (ID: 4596)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16098612546920776
    2. ':' → logprob: -2.2859861850738525
    3. 'def' → logprob: -3.7859861850738525
    4. '(' → logprob: -4.535985946655273
    5. ' def' → logprob: -5.285985946655273
    6. ' ' → logprob: -5.910985946655273
    7. ')' → logprob: -6.160985946655273
    8. ' =' → logprob: -7.160985946655273
    9. '<|end|>' → logprob: -7.285985946655273
    10. '  ' → logprob: -7.535985946655273

Token 114: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6506229639053345
    2. '   ' → logprob: -0.7756229639053345
    3. 'def' → logprob: -4.650622844696045
    4. ' def' → logprob: -4.900622844696045
    5. ':
' → logprob: -8.275623321533203
    6. '	def' → logprob: -8.650623321533203
    7. '):' → logprob: -8.900623321533203
    8. ')' → logprob: -8.900623321533203
    9. '  ' → logprob: -10.525623321533203
    10. ':def' → logprob: -10.650623321533203

Token 115: ' either' (ID: 4784)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04639962688088417
    2. 'def' → logprob: -3.6713995933532715
    3. '   ' → logprob: -3.9213995933532715
    4. '    ' → logprob: -10.67140007019043
    5. ' ' → logprob: -10.79640007019043
    6. ' pass' → logprob: -10.79640007019043
    7. '...' → logprob: -12.04640007019043
    8. '```' → logprob: -12.54640007019043
    9. '	def' → logprob: -13.04640007019043
    10. ' 
' → logprob: -13.29640007019043

Token 116: ' optional' (ID: 18297)
  Prédit: ' present'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' present' → logprob: -0.3614054024219513
    2. 'present' → logprob: -1.736405372619629
    3. ' selected' → logprob: -3.486405372619629
    4. ' included' → logprob: -3.611405372619629
    5. 'selected' → logprob: -4.361405372619629
    6. 'included' → logprob: -4.486405372619629
    7. ' chosen' → logprob: -5.111405372619629
    8. ' the' → logprob: -5.236405372619629
    9. '1' → logprob: -5.861405372619629
    10. 'chosen' → logprob: -6.111405372619629

Token 117: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.012882779352366924
    2. 'or' → logprob: -5.012882709503174
    3. ' ' → logprob: -5.262882709503174
    4. '   ' → logprob: -8.262883186340332
    5. ',' → logprob: -8.387883186340332
    6. ':' → logprob: -8.762883186340332
    7. '=' → logprob: -9.012883186340332
    8. ' and' → logprob: -9.762883186340332
    9. '<|end|>' → logprob: -10.262883186340332
    10. ' (' → logprob: -10.887883186340332

Token 118: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5097886919975281
    2. ' not' → logprob: -1.7597887516021729
    3. 'mandatory' → logprob: -2.009788751602173
    4. 'required' → logprob: -3.134788751602173
    5. 'non' → logprob: -3.509788751602173
    6. ' mandatory' → logprob: -4.509788513183594
    7. ' required' → logprob: -5.384788513183594
    8. ' non' → logprob: -6.384788513183594
    9. 'fixed' → logprob: -6.759788513183594
    10. 'present' → logprob: -8.759788513183594

Token 119: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06274250894784927
    2. '
' → logprob: -3.3127424716949463
    3. ':' → logprob: -4.812742710113525
    4. '    
' → logprob: -4.937742710113525
    5. '<|end|>' → logprob: -5.312742710113525
    6. 'def' → logprob: -6.812742710113525
    7. ' def' → logprob: -6.937742710113525
    8. ',' → logprob: -7.562742710113525
    9. '<|end|>' → logprob: -7.562742710113525
    10. ' ' → logprob: -8.312742233276367

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006171276327222586
    2. '    
' → logprob: -8.500617027282715
    3. 'def' → logprob: -8.750617027282715
    4. ' def' → logprob: -8.875617027282715
    5. '    ' → logprob: -10.250617027282715
    6. '
' → logprob: -10.250617027282715
    7. ' ' → logprob: -11.375617027282715
    8. '<|end|>' → logprob: -12.375617027282715
    9. ' 
' → logprob: -12.500617027282715
    10. ':' → logprob: -12.500617027282715

Token 121: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46437180042266846
    2. ' def' → logprob: -1.4643718004226685
    3. 'def' (adapté à ' def') → logprob: -1.9643718004226685
    4. '    
' → logprob: -13.839371681213379
    5. '	def' → logprob: -14.339371681213379
    6. '
' → logprob: -14.589371681213379
    7. '   ' → logprob: -15.214371681213379
    8. ' ' → logprob: -15.714371681213379
    9. '@' → logprob: -15.714371681213379
    10. '    ' → logprob: -15.839371681213379

Token 122: ' count' (ID: 3605)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.005438300780951977
    2. ' ' → logprob: -5.880438327789307
    3. ' count' → logprob: -6.255438327789307
    4. 'def' → logprob: -7.380438327789307
    5. '   ' → logprob: -10.630437850952148
    6. 'count' → logprob: -11.380437850952148
    7. '
' → logprob: -11.380437850952148
    8. ' _' → logprob: -12.130437850952148
    9. '  ' → logprob: -12.255437850952148
    10. ' 
' → logprob: -12.255437850952148

Token 123: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.0014341588830575347
    2. '_' → logprob: -6.626434326171875
    3. '_comb' → logprob: -9.626434326171875
    4. ' _' → logprob: -10.251434326171875
    5. '_
' → logprob: -13.501434326171875
    6. '__' → logprob: -14.376434326171875
    7. '<|end|>' → logprob: -14.626434326171875
    8. '```' → logprob: -14.876434326171875
    9. '_con' → logprob: -15.001434326171875
    10. '_co' → logprob: -15.126434326171875

Token 124: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0001450187264708802
    2. 'inations' → logprob: -9.750144958496094
    3. 'utations' → logprob: -10.250144958496094
    4. 'b' → logprob: -10.500144958496094
    5. '_b' → logprob: -11.875144958496094
    6. 'bin' → logprob: -12.000144958496094
    7. '```' → logprob: -12.250144958496094
    8. '_' → logprob: -13.375144958496094
    9. 'ptions' → logprob: -14.500144958496094
    10. 'initions' → logprob: -14.750144958496094

Token 125: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000432695698691532
    2. '(' → logprob: -7.75043249130249
    3. '(
' → logprob: -13.875432968139648
    4. 'self' → logprob: -14.500432968139648
    5. ' (' → logprob: -15.000432968139648
    6. '(s' → logprob: -15.875432968139648
    7. ' self' → logprob: -17.87543296813965
    8. ' ' → logprob: -18.00043296813965
    9. '=self' → logprob: -18.12543296813965
    10. '(sel' → logprob: -18.50043296813965

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019449107348918915
    2. '):' → logprob: -4.394449234008789
    3. 'self' → logprob: -5.144449234008789
    4. '):
' → logprob: -7.519449234008789
    5. ',' → logprob: -8.769449234008789
    6. ' )' → logprob: -8.894449234008789
    7. '   ' → logprob: -9.269449234008789
    8. ' ' → logprob: -10.019449234008789
    9. ')->' → logprob: -10.644449234008789
    10. '(self' → logprob: -10.894449234008789

Token 127: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06882335245609283
    2. ' ->' → logprob: -3.1938233375549316
    3. '->' → logprob: -4.443823337554932
    4. '(self' → logprob: -4.818823337554932
    5. ':
' → logprob: -5.693823337554932
    6. '(' → logprob: -6.943823337554932
    7. ')' → logprob: -7.318823337554932
    8. ' :' → logprob: -8.81882381439209
    9. '   ' → logprob: -8.94382381439209
    10. ':return' → logprob: -9.56882381439209

Token 128: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16279545426368713
    2. 'int' → logprob: -1.9127954244613647
    3. '1' → logprob: -6.412795543670654
    4. ' ' → logprob: -7.912795543670654
    5. ' (' → logprob: -8.162795066833496
    6. '(int' → logprob: -8.412795066833496
    7. '(' → logprob: -10.412795066833496
    8. '0' → logprob: -11.287795066833496
    9. '   ' → logprob: -12.787795066833496
    10. ' self' → logprob: -13.037795066833496

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00679423613473773
    2. ':
' → logprob: -5.006794452667236
    3. '):' → logprob: -10.381793975830078
    4. '       ' → logprob: -10.881793975830078
    5. '   ' → logprob: -11.756793975830078
    6. ':return' → logprob: -12.006793975830078
    7. ' :' → logprob: -12.256793975830078
    8. '):
' → logprob: -12.381793975830078
    9. '():' → logprob: -12.756793975830078
    10. ' :
' → logprob: -14.256793975830078

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004990151152014732
    2. ' if' → logprob: -5.754990100860596
    3. 'if' → logprob: -7.254990100860596
    4. 'result' → logprob: -7.629990100860596
    5. 'count' → logprob: -8.504990577697754
    6. 'total' → logprob: -9.129990577697754
    7. 'com' → logprob: -9.504990577697754
    8. '   ' → logprob: -9.879990577697754
    9. ' result' → logprob: -10.004990577697754
    10. ' total' → logprob: -10.129990577697754

Token 131: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6530956625938416
    2. 'return' → logprob: -1.4030957221984863
    3. ' if' → logprob: -2.0280957221984863
    4. '       ' → logprob: -2.5280957221984863
    5. ' return' → logprob: -4.403095722198486
    6. '1' → logprob: -4.903095722198486
    7. 'result' → logprob: -6.403095722198486
    8. 'count' → logprob: -7.528095722198486
    9. '0' → logprob: -8.153095245361328
    10. '   ' → logprob: -10.028095245361328

Token 132: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17002815008163452
    2. ' if' → logprob: -1.9200282096862793
    3. '       ' → logprob: -5.170028209686279
    4. 'return' → logprob: -6.295028209686279
    5. 'count' → logprob: -7.045028209686279
    6. 'result' → logprob: -7.045028209686279
    7. ' return' → logprob: -8.795027732849121
    8. 'If' → logprob: -9.670027732849121
    9. '   ' → logprob: -10.045027732849121
    10. 'com' → logprob: -10.170027732849121

Token 133: ' optional' (ID: 18297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2015065997838974
    2. ' self' → logprob: -1.7015066146850586
    3. ' not' → logprob: -9.701506614685059
    4. 'not' → logprob: -10.576506614685059
    5. '   ' → logprob: -13.826506614685059
    6. '	self' → logprob: -13.826506614685059
    7. ' ' → logprob: -13.951506614685059
    8. 'optional' → logprob: -13.951506614685059
    9. '(self' → logprob: -14.451506614685059
    10. '0' → logprob: -15.076506614685059

Token 134: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03754261136054993
    2. ':
' → logprob: -3.6625425815582275
    3. ',' → logprob: -4.537542819976807
    4. ' :' → logprob: -8.912542343139648
    5. ':return' → logprob: -8.912542343139648
    6. ' and' → logprob: -9.662542343139648
    7. '<|end|>' → logprob: -10.787542343139648
    8. '       ' → logprob: -10.787542343139648
    9. ' if' → logprob: -10.912542343139648
    10. '
' → logprob: -11.162542343139648

Token 135: ' can' (ID: 665)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3163723349571228
    2. 'return' → logprob: -1.3163723945617676
    3. ' if' → logprob: -5.941372394561768
    4. '       ' → logprob: -8.06637191772461
    5. 'if' → logprob: -9.44137191772461
    6. '           ' → logprob: -10.56637191772461
    7. '
' → logprob: -11.19137191772461
    8. ' ' → logprob: -11.44137191772461
    9. '1' → logprob: -12.44137191772461
    10. 'result' → logprob: -12.44137191772461

Token 136: ' choose' (ID: 5655)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7542344331741333
    2. ' ' → logprob: -1.3792344331741333
    3. ' return' → logprob: -1.6292344331741333
    4. ' choose' → logprob: -3.0042343139648438
    5. ' either' → logprob: -4.629234313964844
    6. '_choose' → logprob: -5.629234313964844
    7. ' have' → logprob: -5.754234313964844
    8. '0' → logprob: -6.129234313964844
    9. 'return' → logprob: -6.379234313964844
    10. ' include' → logprob: -6.629234313964844

Token 137: ' or' (ID: 503)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.26558446884155273
    2. '0' → logprob: -1.7655844688415527
    3. ' ' → logprob: -3.2655844688415527
    4. ' not' → logprob: -4.265584468841553
    5. '1' → logprob: -5.140584468841553
    6. ' or' → logprob: -6.390584468841553
    7. 'to' → logprob: -7.140584468841553
    8. '2' → logprob: -7.140584468841553
    9. ' self' → logprob: -8.265584945678711
    10. ' (' → logprob: -8.890584945678711

Token 138: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.019422680139541626
    2. 'not' → logprob: -4.01942253112793
    3. ' skip' → logprob: -6.89442253112793
    4. ' omit' → logprob: -8.64442253112793
    5. 'skip' → logprob: -10.01942253112793
    6. ' ' → logprob: -11.26942253112793
    7. ' exclude' → logprob: -11.64442253112793
    8. '_not' → logprob: -12.39442253112793
    9. 'exclude' → logprob: -12.76942253112793
    10. ' choose' → logprob: -12.89442253112793

Token 139: ' choose' (ID: 5655)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8088951110839844
    2. ' return' → logprob: -1.5588951110839844
    3. ' ' → logprob: -2.0588951110839844
    4. ',' → logprob: -2.1838951110839844
    5. 'return' → logprob: -3.5588951110839844
    6. ':' → logprob: -3.8088951110839844
    7. ' ,' → logprob: -4.308895111083984
    8. '1' → logprob: -4.433895111083984
    9. '(' → logprob: -4.933895111083984
    10. ' 
' → logprob: -5.683895111083984

Token 140: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29291537404060364
    2. ',' → logprob: -2.4179153442382812
    3. 'return' → logprob: -2.9179153442382812
    4. ' return' → logprob: -3.5429153442382812
    5. ':' → logprob: -3.6679153442382812
    6. '
' → logprob: -4.542915344238281
    7. '(' → logprob: -4.667915344238281
    8. '   ' → logprob: -4.667915344238281
    9. ' ' → logprob: -4.792915344238281
    10. '*' → logprob: -5.542915344238281

Token 141: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7497267127037048
    2. '1' → logprob: -1.4997267723083496
    3. '2' → logprob: -2.4997267723083496
    4. ' ),' → logprob: -2.4997267723083496
    5. ' )' → logprob: -3.1247267723083496
    6. ')' → logprob: -3.1247267723083496
    7. '),' → logprob: -3.4997267723083496
    8. ' return' → logprob: -4.24972677230835
    9. 'return' → logprob: -5.37472677230835
    10. ' self' → logprob: -7.12472677230835

Token 142: ' ways' (ID: 6984)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2936824560165405
    2. '<|end|>' → logprob: -1.9186824560165405
    3. ' **' → logprob: -3.29368257522583
    4. '**' → logprob: -3.29368257522583
    5. ' if' → logprob: -4.16868257522583
    6. ' )' → logprob: -5.16868257522583
    7. ')**' → logprob: -5.41868257522583
    8. '<|end|>' → logprob: -5.54368257522583
    9. '
' → logprob: -5.91868257522583
    10. ' **)' → logprob: -8.168682098388672

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1572786420583725
    2. '),' → logprob: -2.657278537750244
    3. '       ' → logprob: -3.157278537750244
    4. ',' → logprob: -4.407278537750244
    5. ' if' → logprob: -4.907278537750244
    6. ')
' → logprob: -5.282278537750244
    7. '
' → logprob: -6.782278537750244
    8. '   ' → logprob: -7.032278537750244
    9. ' or' → logprob: -7.032278537750244
    10. 'return' → logprob: -7.282278537750244

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001679940614849329
    2. ' if' → logprob: -7.50167989730835
    3. ' return' → logprob: -7.75167989730835
    4. ',' → logprob: -8.126680374145508
    5. '   ' → logprob: -8.751680374145508
    6. 'return' → logprob: -9.251680374145508
    7. ' or' → logprob: -9.251680374145508
    8. '           ' → logprob: -12.001680374145508
    9. 'if' → logprob: -12.251680374145508
    10. ':' → logprob: -12.251680374145508

Token 145: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18331126868724823
    2. 'return' → logprob: -1.9333112239837646
    3. '       ' → logprob: -4.183311462402344
    4. ' if' → logprob: -4.933311462402344
    5. ' return' → logprob: -7.933311462402344
    6. 'count' → logprob: -12.558311462402344
    7. '   ' → logprob: -12.558311462402344
    8. 'n' → logprob: -13.308311462402344
    9. 'result' → logprob: -13.808311462402344
    10. 'ways' → logprob: -14.183311462402344

Token 146: ' If' (ID: 1843)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6147301197052002
    2. 'if' → logprob: -1.2397301197052002
    3. ' return' → logprob: -2.3647301197052
    4. 'return' → logprob: -2.7397301197052
    5. '       ' → logprob: -4.614729881286621
    6. 'count' → logprob: -7.864729881286621
    7. 'ways' → logprob: -8.239729881286621
    8. ' count' → logprob: -8.489729881286621
    9. ' ways' → logprob: -8.614729881286621
    10. '   ' → logprob: -9.364729881286621

Token 147: ' not' (ID: 625)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1903580278158188
    2. ' not' → logprob: -1.94035804271698
    3. 'self' → logprob: -3.6903579235076904
    4. ' optional' → logprob: -5.8153581619262695
    5. 'not' → logprob: -6.5653581619262695
    6. ' ' → logprob: -8.69035816192627
    7. 'optional' → logprob: -10.06535816192627
    8. ' ' → logprob: -10.19035816192627
    9. '   ' → logprob: -10.81535816192627
    10. '       ' → logprob: -11.06535816192627

Token 148: ' optional' (ID: 18297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35286322236061096
    2. ',' → logprob: -1.2278631925582886
    3. ' ,' → logprob: -5.977863311767578
    4. ' :' → logprob: -7.102863311767578
    5. ':return' → logprob: -7.477863311767578
    6. ':
' → logprob: -8.727863311767578
    7. '):' → logprob: -9.477863311767578
    8. '<|end|>' → logprob: -9.602863311767578
    9. '<|end|>' → logprob: -10.102863311767578
    10. ' ' → logprob: -10.227863311767578

Token 149: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28363272547721863
    2. ',' → logprob: -1.408632755279541
    3. ':return' → logprob: -6.158632755279541
    4. ':
' → logprob: -9.033632278442383
    5. '       ' → logprob: -9.408632278442383
    6. '   ' → logprob: -10.158632278442383
    7. ' ,' → logprob: -10.408632278442383
    8. 'return' → logprob: -10.533632278442383
    9. '<|end|>' → logprob: -11.033632278442383
    10. ' return' → logprob: -11.408632278442383

Token 150: ' must' (ID: 2804)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6942528486251831
    2. 'return' → logprob: -0.6942528486251831
    3. '       ' → logprob: -6.819252967834473
    4. ' ' → logprob: -12.319252967834473
    5. '           ' → logprob: -12.819252967834473
    6. '   ' → logprob: -13.194252967834473
    7. ' ' → logprob: -13.569252967834473
    8. ' if' → logprob: -14.694252967834473
    9. '        ' → logprob: -14.944252967834473
    10. '1' → logprob: -15.069252967834473

Token 151: ' choose' (ID: 5655)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.1189790964126587
    2. 'choose' → logprob: -1.2439790964126587
    3. '_choose' → logprob: -2.118978977203369
    4. ' choose' → logprob: -2.243978977203369
    5. ' return' → logprob: -2.493978977203369
    6. 'return' → logprob: -2.868978977203369
    7. 'be' → logprob: -4.993978977203369
    8. ' ' → logprob: -5.493978977203369
    9. '_return' → logprob: -5.868978977203369
    10. ' chose' → logprob: -7.118978977203369

Token 152: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43697860836982727
    2. ' return' → logprob: -1.6869785785675049
    3. '1' → logprob: -2.561978578567505
    4. ' ' → logprob: -3.686978578567505
    5. 'return' → logprob: -3.811978578567505
    6. '2' → logprob: -4.686978816986084
    7. '
' → logprob: -4.811978816986084
    8. ':' → logprob: -5.061978816986084
    9. ' if' → logprob: -5.061978816986084
    10. '   ' → logprob: -5.436978816986084

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003604224883019924
    2. ' ' → logprob: -5.628604412078857
    3. '2' → logprob: -13.2536039352417
    4. ')' → logprob: -13.8786039352417
    5. 'return' → logprob: -14.2536039352417
    6. '   ' → logprob: -15.0036039352417
    7. ' return' → logprob: -15.7536039352417
    8. ' )' → logprob: -16.503604888916016
    9. '       ' → logprob: -17.128604888916016
    10. ' ' → logprob: -17.566104888916016

Token 154: ' way' (ID: 2006)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007706823293119669
    2. ' )' → logprob: -4.882706642150879
    3. ' ' → logprob: -10.007706642150879
    4. '<|end|>' → logprob: -10.882706642150879
    5. '```' → logprob: -11.882706642150879
    6. ' token' → logprob: -12.382706642150879
    7. ' way' → logprob: -12.507706642150879
    8. ')return' → logprob: -12.507706642150879
    9. '<|end|>' → logprob: -12.757706642150879
    10. ')
' → logprob: -12.882706642150879

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029043739195913076
    2. '       ' → logprob: -6.252904415130615
    3. ')
' → logprob: -7.002904415130615
    4. '   ' → logprob: -10.877903938293457
    5. '
' → logprob: -10.877903938293457
    6. ' )' → logprob: -11.377903938293457
    7. ')return' → logprob: -12.252903938293457
    8. 'return' → logprob: -12.877903938293457
    9. '):' → logprob: -13.502903938293457
    10. ',' → logprob: -13.627903938293457

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002229713834822178
    2. ' if' → logprob: -6.752229690551758
    3. ' return' → logprob: -7.502229690551758
    4. 'return' → logprob: -8.002229690551758
    5. '   ' → logprob: -9.252229690551758
    6. 'if' → logprob: -9.627229690551758
    7. '        
' → logprob: -13.377229690551758
    8. '    ' → logprob: -13.627229690551758
    9. ' ' → logprob: -13.877229690551758
    10. '      ' → logprob: -13.877229690551758

Token 157: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08404824882745743
    2. 'if' → logprob: -3.334048271179199
    3. '       ' → logprob: -3.834048271179199
    4. ' return' → logprob: -3.959048271179199
    5. ' if' → logprob: -5.459048271179199
    6. '   ' → logprob: -13.4590482711792
    7. '```' → logprob: -13.5840482711792
    8. 'ret' → logprob: -15.7090482711792
    9. ' ' → logprob: -15.7090482711792
    10. '	return' → logprob: -15.8340482711792

Token 158: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1602804809808731
    2. ' ' → logprob: -1.910280466079712
    3. '1' → logprob: -10.160280227661133
    4. ' (' → logprob: -11.785280227661133
    5. '(' → logprob: -12.035280227661133
    6. '   ' → logprob: -13.035280227661133
    7. '
' → logprob: -15.035280227661133
    8. '       ' → logprob: -15.035280227661133
    9. '     ' → logprob: -15.160280227661133
    10. ' ' → logprob: -15.285280227661133

Token 159: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.315936429426074e-05
    2. ' ' → logprob: -9.625082969665527
    3. '1' → logprob: -11.250082969665527
    4. '(' → logprob: -12.500082969665527
    5. '   ' → logprob: -15.500082969665527
    6. ' (' → logprob: -16.750083923339844
    7. '
' → logprob: -17.500083923339844
    8. '0' → logprob: -17.625083923339844
    9. 'pow' → logprob: -17.625083923339844
    10. '```' → logprob: -18.125083923339844

Token 160: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00043341092532500625
    2. 'if' → logprob: -7.750433444976807
    3. '**' → logprob: -13.625432968139648
    4. ' **' → logprob: -14.125432968139648
    5. ' -' → logprob: -14.750432968139648
    6. ' ' → logprob: -16.12543296813965
    7. 'If' → logprob: -17.12543296813965
    8. ' *' → logprob: -17.25043296813965
    9. '-' → logprob: -17.62543296813965
    10. '       ' → logprob: -17.75043296813965

Token 161: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.011049585416913033
    2. 'self' → logprob: -4.511049747467041
    3. '(self' → logprob: -13.761049270629883
    4. '	self' → logprob: -14.761049270629883
    5. ' ' → logprob: -15.386049270629883
    6. '_self' → logprob: -17.386049270629883
    7. '[self' → logprob: -17.511049270629883
    8. '=self' → logprob: -17.511049270629883
    9. ' ' → logprob: -18.511049270629883
    10. ' not' → logprob: -18.761049270629883

Token 162: '.optional' (ID: 184220)
  Prédit: '.optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.optional' → logprob: -5.490809417096898e-05
    2. '.' → logprob: -10.000055313110352
    3. '.opt' → logprob: -11.875055313110352
    4. ' .' → logprob: -13.625055313110352
    5. 'optional' → logprob: -14.500055313110352
    6. '.option' → logprob: -14.500055313110352
    7. '.Optional' → logprob: -15.500055313110352
    8. '_optional' → logprob: -17.37505531311035
    9. '.op' → logprob: -18.50005531311035
    10. '\.' → logprob: -19.00005531311035

Token 163: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0017038638470694423
    2. 'else' → logprob: -6.37670373916626
    3. ' ' → logprob: -13.376704216003418
    4. '        ' → logprob: -16.3767032623291
    5. '    ' → logprob: -18.3767032623291
    6. '	else' → logprob: -19.0017032623291
    7. ' els' → logprob: -19.2517032623291
    8. '```' → logprob: -19.5017032623291
    9. '_else' → logprob: -19.7517032623291
    10. ' ' → logprob: -19.8767032623291

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.504077911376953
    4. ' ' → logprob: -17.379077911376953
    5. '
' → logprob: -18.254077911376953
    6. '```' → logprob: -18.504077911376953
    7. '  ' → logprob: -18.879077911376953
    8. '۱' → logprob: -19.566577911376953
    9. '`' → logprob: -20.004077911376953
    10. '１' → logprob: -20.316577911376953

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '
' → logprob: -20.375001907348633
    5. '```' → logprob: -20.375001907348633
    6. '۱' → logprob: -20.500001907348633
    7. ' ' → logprob: -21.250001907348633
    8. '' → logprob: -21.312501907348633
    9. '１' → logprob: -21.687501907348633
    10. '`' → logprob: -21.750001907348633

Token 166: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05662667378783226
    2. '<|end|>' → logprob: -2.931626558303833
    3. '

' → logprob: -6.556626796722412
    4. '<|end|>' → logprob: -9.431626319885254
    5. '\n' → logprob: -9.556626319885254
    6. 'class' → logprob: -9.806626319885254
    7. '  
' → logprob: -10.431626319885254
    8. '    
' → logprob: -10.556626319885254
    9. ' 
' → logprob: -11.056626319885254
    10. '
' → logprob: -11.431626319885254

Token 167: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09041178971529007
    2. '<|end|>' → logprob: -2.465411901473999
    3. '

' → logprob: -7.09041166305542
    4. 'class' → logprob: -8.090412139892578
    5. '  
' → logprob: -9.340412139892578
    6. '<|end|>' → logprob: -9.465412139892578
    7. '\n' → logprob: -10.090412139892578
    8. ' 
' → logprob: -10.340412139892578
    9. '
' → logprob: -10.715412139892578
    10. '    
' → logprob: -10.840412139892578

Token 168: ' Selection' (ID: 41903)
  Prédit: 'Group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Group' → logprob: -1.2738561630249023
    2. 'Operator' → logprob: -1.6488561630249023
    3. 'Choice' → logprob: -1.8988561630249023
    4. 'Composite' → logprob: -2.1488561630249023
    5. 'Operation' → logprob: -3.1488561630249023
    6. 'Combination' → logprob: -3.1488561630249023
    7. 'Compound' → logprob: -3.2738561630249023
    8. 'Sequence' → logprob: -3.5238561630249023
    9. 'Reaction' → logprob: -3.8988561630249023
    10. 'Container' → logprob: -3.8988561630249023

Token 169: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -6.034592388459714e-06
    2. 'Group' → logprob: -12.250005722045898
    3. 'Option' → logprob: -14.625005722045898
    4. 'Choice' → logprob: -15.500005722045898
    5. ' Node' → logprob: -15.750005722045898
    6. '(Node' → logprob: -16.3750057220459
    7. 'Block' → logprob: -16.5000057220459
    8. 'node' → logprob: -17.0000057220459
    9. '<Node' → logprob: -17.1250057220459
    10. '	Node' → logprob: -17.3750057220459

Token 170: '(Node' (ID: 43019)
  Prédit: '(Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Node' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. ' (' → logprob: -16.625
    4. ' Node' → logprob: -17.75
    5. '<Node' → logprob: -19.25
    6. '(node' → logprob: -20.75
    7. '	Node' → logprob: -21.125
    8. '(Abstract' → logprob: -22.0
    9. '.Node' → logprob: -22.25
    10. '(N' → logprob: -22.25

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004015953280031681
    2. '(Node' → logprob: -5.629015922546387
    3. '):
' → logprob: -8.254015922546387
    4. ')' → logprob: -9.004015922546387
    5. ':' → logprob: -10.629015922546387
    6. '(' → logprob: -12.879015922546387
    7. '   ' → logprob: -13.754015922546387
    8. '<Node' → logprob: -13.754015922546387
    9. '):

' → logprob: -14.004015922546387
    10. ' ):' → logprob: -14.254015922546387

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4782687723636627
    2. 'def' → logprob: -0.9782687425613403
    3. ' def' → logprob: -5.478268623352051
    4. '	def' → logprob: -12.10326862335205
    5. 'class' → logprob: -15.35326862335205
    6. '#' → logprob: -15.72826862335205
    7. '  ' → logprob: -16.103269577026367
    8. '
' → logprob: -16.353269577026367
    9. ':def' → logprob: -16.603269577026367
    10. ' ' → logprob: -16.978269577026367

Token 173: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2667204737663269
    2. ' def' → logprob: -1.7667205333709717
    3. '   ' → logprob: -2.7667205333709717
    4. '
' → logprob: -8.01672077178955
    5. '	def' → logprob: -11.01672077178955
    6. '    
' → logprob: -13.01672077178955
    7. ' ' → logprob: -13.51672077178955
    8. '  ' → logprob: -13.51672077178955
    9. '_def' → logprob: -15.01672077178955
    10. '    ' → logprob: -15.14172077178955

Token 174: ' Abstract' (ID: 17413)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4765186607837677
    2. ' def' → logprob: -0.9765186309814453
    3. '   ' → logprob: -6.601518630981445
    4. 'class' → logprob: -6.976518630981445
    5. '#' → logprob: -9.976518630981445
    6. ' class' → logprob: -10.851518630981445
    7. '	def' → logprob: -10.851518630981445
    8. '
' → logprob: -10.976518630981445
    9. ' ' → logprob: -11.226518630981445
    10. 'Def' → logprob: -11.976518630981445

Token 175: ' selection' (ID: 8441)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.028314726427197456
    2. ' class' → logprob: -3.7783148288726807
    3. '   ' → logprob: -5.778314590454102
    4. 'def' → logprob: -6.528314590454102
    5. '(' → logprob: -8.778314590454102
    6. 'classmethod' → logprob: -9.528314590454102
    7. 'method' → logprob: -9.653314590454102
    8. ':' → logprob: -9.903314590454102
    9. '<|end|>' → logprob: -10.028314590454102
    10. 'Node' → logprob: -10.903314590454102

Token 176: ' node' (ID: 4596)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.33805498480796814
    2. ' class' → logprob: -1.8380550146102905
    3. '<|end|>' → logprob: -2.713054895401001
    4. ' ' → logprob: -4.08805513381958
    5. '   ' → logprob: -4.21305513381958
    6. ':' → logprob: -4.46305513381958
    7. 'Node' → logprob: -4.58805513381958
    8. '<|end|>' → logprob: -6.08805513381958
    9. '  ' → logprob: -6.71305513381958
    10. 'method' → logprob: -7.33805513381958

Token 177: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02232784777879715
    2. '(' → logprob: -4.647327899932861
    3. '<|end|>' → logprob: -4.647327899932861
    4. '   ' → logprob: -7.272327899932861
    5. '):' → logprob: -7.272327899932861
    6. ':
' → logprob: -7.522327899932861
    7. ')' → logprob: -7.897327899932861
    8. '<|end|>' → logprob: -8.522327423095703
    9. ',' → logprob: -8.647327423095703
    10. '(Abstract' → logprob: -8.897327423095703

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032031282782554626
    2. ':' → logprob: -3.657031297683716
    3. ' def' → logprob: -5.907031059265137
    4. '<|end|>' → logprob: -6.657031059265137
    5. 'def' → logprob: -6.907031059265137
    6. ' ' → logprob: -8.282031059265137
    7. '  ' → logprob: -9.157031059265137
    8. ',' → logprob: -9.657031059265137
    9. 'class' → logprob: -9.657031059265137
    10. '<|end|>' → logprob: -9.907031059265137

Token 179: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2930477261543274
    2. '   ' → logprob: -2.0430476665496826
    3. ' def' → logprob: -2.5430476665496826
    4. 'class' → logprob: -3.9180476665496826
    5. ' pass' → logprob: -4.293047904968262
    6. 'pass' → logprob: -4.793047904968262
    7. '@' → logprob: -5.793047904968262
    8. ' @' → logprob: -8.168047904968262
    9. '  ' → logprob: -9.043047904968262
    10. '    ' → logprob: -9.168047904968262

Token 180: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6531909108161926
    2. ' count' → logprob: -1.0281908512115479
    3. 'count' → logprob: -2.778190851211548
    4. ' __' → logprob: -3.278190851211548
    5. 'def' → logprob: -4.278191089630127
    6. '_count' → logprob: -5.528191089630127
    7. '__' → logprob: -6.528191089630127
    8. ' ' → logprob: -7.153191089630127
    9. ' _' → logprob: -7.403191089630127
    10. ' abstract' → logprob: -7.903191089630127

Token 181: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. ' init' → logprob: -15.5
    3. '```' → logprob: -17.125
    4. '   ' → logprob: -17.625
    5. ' ' → logprob: -18.25
    6. '_init' → logprob: -18.375
    7. '
' → logprob: -18.875
    8. '  ' → logprob: -19.875
    9. 'post' → logprob: -20.0
    10. '	init' → logprob: -20.25

Token 182: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00997352134436369
    2. '(self' → logprob: -4.634973526000977
    3. '__' → logprob: -9.009973526000977
    4. '(' → logprob: -9.509973526000977
    5. '__(
' → logprob: -11.134973526000977
    6. '_(' → logprob: -12.384973526000977
    7. ' (' → logprob: -13.884973526000977
    8. 'self' → logprob: -14.509973526000977
    9. '__((' → logprob: -15.259973526000977
    10. '__(*' → logprob: -15.509973526000977

Token 183: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003032881941180676
    2. ' self' → logprob: -8.125303268432617
    3. '       ' → logprob: -12.500303268432617
    4. '(self' → logprob: -13.875303268432617
    5. '
' → logprob: -14.125303268432617
    6. ',' → logprob: -14.250303268432617
    7. '	self' → logprob: -14.250303268432617
    8. ',self' → logprob: -15.250303268432617
    9. '   ' → logprob: -15.500303268432617
    10. '0' → logprob: -16.875303268432617

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012621837668120861
    2. 'self' → logprob: -4.387621879577637
    3. '(self' → logprob: -10.012621879577637
    4. ',self' → logprob: -10.137621879577637
    5. ' self' → logprob: -11.137621879577637
    6. ' ,' → logprob: -11.387621879577637
    7. '   ' → logprob: -14.387621879577637
    8. '__,' → logprob: -15.012621879577637
    9. '       ' → logprob: -15.512621879577637
    10. ',
' → logprob: -15.887621879577637

Token 185: ' idx' (ID: 14016)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4406239092350006
    2. 'idx' → logprob: -1.0656238794326782
    3. ' idx' → logprob: -4.690623760223389
    4. ' self' → logprob: -5.940623760223389
    5. ')' → logprob: -11.815624237060547
    6. '   ' → logprob: -12.065624237060547
    7. '	idx' → logprob: -12.315624237060547
    8. '       ' → logprob: -12.690624237060547
    9. '_idx' → logprob: -13.065624237060547
    10. ',' → logprob: -13.065624237060547

Token 186: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20202045142650604
    2. ':' → logprob: -1.7020204067230225
    3. ':int' → logprob: -7.452020645141602
    4. ' ,' → logprob: -10.827020645141602
    5. '   ' → logprob: -12.577020645141602
    6. ' :' → logprob: -13.327020645141602
    7. ',int' → logprob: -13.952020645141602
    8. '       ' → logprob: -15.577020645141602
    9. ':,' → logprob: -15.827020645141602
    10. '```' → logprob: -15.952020645141602

Token 187: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015024791937321424
    2. ' int' → logprob: -6.501502513885498
    3. ':int' → logprob: -16.501502990722656
    4. ',' → logprob: -16.876502990722656
    5. 'self' → logprob: -17.001502990722656
    6. 'idx' → logprob: -17.376502990722656
    7. '   ' → logprob: -17.876502990722656
    8. ',int' → logprob: -18.501502990722656
    9. '	int' → logprob: -18.876502990722656
    10. ')' → logprob: -18.876502990722656

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.875019073486328
    4. ')' → logprob: -16.375019073486328
    5. ',opt' → logprob: -16.500019073486328
    6. '       ' → logprob: -16.625019073486328
    7. '):' → logprob: -17.375019073486328
    8. ',
' → logprob: -17.500019073486328
    9. 'optional' → logprob: -17.500019073486328
    10. '):
' → logprob: -18.375019073486328

Token 189: ' optional' (ID: 18297)
  Prédit: ' optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optional' → logprob: -0.2015385776758194
    2. 'optional' → logprob: -1.7015385627746582
    3. ' children' → logprob: -10.201539039611816
    4. ' choices' → logprob: -10.701539039611816
    5. ' ' → logprob: -11.451539039611816
    6. '   ' → logprob: -11.576539039611816
    7. 'children' → logprob: -12.076539039611816
    8. ' options' → logprob: -12.764039039611816
    9. ' selection' → logprob: -13.076539039611816
    10. 'choices' → logprob: -13.139039039611816

Token 190: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.693356454372406
    2. ':' → logprob: -0.693356454372406
    3. '=' → logprob: -8.81835651397705
    4. '):' → logprob: -10.44335651397705
    5. '=False' → logprob: -11.31835651397705
    6. ' ,' → logprob: -11.56835651397705
    7. '=True' → logprob: -11.81835651397705
    8. ')' → logprob: -13.44335651397705
    9. '   ' → logprob: -14.81835651397705
    10. '):
' → logprob: -15.06835651397705

Token 191: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.02327110432088375
    2. ' bool' → logprob: -3.773271083831787
    3. 'Optional' → logprob: -10.898271560668945
    4. ')' → logprob: -13.898271560668945
    5. '	bool' → logprob: -14.148271560668945
    6. ' Optional' → logprob: -14.273271560668945
    7. 'True' → logprob: -14.273271560668945
    8. '(bool' → logprob: -14.398271560668945
    9. '   ' → logprob: -14.523271560668945
    10. ' ' → logprob: -14.523271560668945

Token 192: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005319139454513788
    2. '):' → logprob: -5.505319118499756
    3. '):
' → logprob: -6.755319118499756
    4. ')' → logprob: -9.880319595336914
    5. ' ,' → logprob: -10.880319595336914
    6. '):
' → logprob: -13.130319595336914
    7. '   ' → logprob: -13.380319595336914
    8. '):

' → logprob: -14.630319595336914
    9. ' ):' → logprob: -15.005319595336914
    10. ',
' → logprob: -15.130319595336914

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7602952718734741
    2. 'super' → logprob: -0.7602952718734741
    3. ' super' → logprob: -2.7602953910827637
    4. '   ' → logprob: -6.760295391082764
    5. '	super' → logprob: -7.635295391082764
    6. ',' → logprob: -11.135294914245605
    7. '      ' → logprob: -12.635294914245605
    8. '     ' → logprob: -12.760294914245605
    9. ' ' → logprob: -13.385294914245605
    10. '    ' → logprob: -13.385294914245605

Token 194: ' super' (ID: 2539)
  Prédit: 'super'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'super' (adapté à ' super') → logprob: -0.2629638612270355
    2. ' super' → logprob: -1.512963891029358
    3. '       ' → logprob: -4.512963771820068
    4. '	super' → logprob: -12.012964248657227
    5. '   ' → logprob: -14.137964248657227
    6. ' ' → logprob: -14.762964248657227
    7. '        ' → logprob: -15.137964248657227
    8. '           ' → logprob: -15.637964248657227
    9. '      ' → logprob: -15.637964248657227
    10. '     ' → logprob: -16.012964248657227

Token 195: '().__' (ID: 57377)
  Prédit: '().__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().__' → logprob: -0.017692232504487038
    2. '()' → logprob: -4.5176920890808105
    3. '().' → logprob: -5.0176920890808105
    4. '(' → logprob: -13.642692565917969
    5. '()-' → logprob: -15.142692565917969
    6. '()(' → logprob: -15.267692565917969
    7. '()<' → logprob: -15.767692565917969
    8. '(),' → logprob: -15.892692565917969
    9. ' ()' → logprob: -16.14269256591797
    10. '():' → logprob: -16.26769256591797

Token 196: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0004690418136306107
    2. '__' → logprob: -8.125469207763672
    3. '_init' → logprob: -8.750469207763672
    4. 'nit' → logprob: -11.750469207763672
    5. '(init' → logprob: -12.875469207763672
    6. 'it' → logprob: -13.500469207763672
    7. 'Init' → logprob: -14.875469207763672
    8. '().__' → logprob: -15.125469207763672
    9. 'int' → logprob: -15.250469207763672
    10. '```' → logprob: -15.375469207763672

Token 197: '__(' (ID: 8241)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.009173687547445297
    2. '__(' → logprob: -4.75917387008667
    3. '(' → logprob: -7.50917387008667
    4. ' (' → logprob: -12.759173393249512
    5. '(index' → logprob: -13.134173393249512
    6. '(ii' → logprob: -13.509173393249512
    7. '(id' → logprob: -13.759173393249512
    8. '(i' → logprob: -14.009173393249512
    9. ')(' → logprob: -14.634173393249512
    10. '__' → logprob: -14.759173393249512

Token 198: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.6240566083070007e-06
    2. ' idx' → logprob: -13.375001907348633
    3. ')' → logprob: -18.250001907348633
    4. '	idx' → logprob: -18.625001907348633
    5. '(idx' → logprob: -19.875001907348633
    6. '       ' → logprob: -20.000001907348633
    7. '   ' → logprob: -20.375001907348633
    8. '           ' → logprob: -20.500001907348633
    9. '_idx' → logprob: -21.500001907348633
    10. '[idx' → logprob: -21.750001907348633

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6060808522743173e-05
    2. ' ,' → logprob: -10.625025749206543
    3. ',opt' → logprob: -14.125025749206543
    4. ')' → logprob: -14.875025749206543
    5. 'optional' → logprob: -15.375025749206543
    6. ' optional' → logprob: -16.00002670288086
    7. ',
' → logprob: -16.12502670288086
    8. '‌,' → logprob: -17.25002670288086
    9. '       ' → logprob: -17.25002670288086
    10. '),' → logprob: -17.50002670288086

Token 200: ' optional' (ID: 18297)
  Prédit: 'optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optional' → logprob: -0.023246292024850845
    2. ' optional' → logprob: -3.7732462882995605
    3. 'Optional' → logprob: -15.398246765136719
    4. '(optional' → logprob: -15.898246765136719
    5. '       ' → logprob: -16.02324676513672
    6. '   ' → logprob: -16.39824676513672
    7. '.optional' → logprob: -16.52324676513672
    8. '_optional' → logprob: -16.89824676513672
    9. '
' → logprob: -17.27324676513672
    10. 'False' → logprob: -17.89824676513672

Token 201: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.318681188422488e-05
    2. ')
' → logprob: -11.50001335144043
    3. ' )' → logprob: -13.00001335144043
    4. '       ' → logprob: -14.87501335144043
    5. '   ' → logprob: -16.12501335144043
    6. ')

' → logprob: -16.62501335144043
    7. ',' → logprob: -17.00001335144043
    8. '))' → logprob: -17.62501335144043
    9. '),' → logprob: -17.62501335144043
    10. ')`' → logprob: -17.75001335144043

Token 202: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3165420889854431
    2. '   ' → logprob: -1.316542148590088
    3. '@' → logprob: -6.316542148590088
    4. ' def' → logprob: -7.066542148590088
    5. '<|end|>' → logprob: -8.31654167175293
    6. 'class' → logprob: -8.81654167175293
    7. '@property' → logprob: -9.06654167175293
    8. 'from' → logprob: -10.56654167175293
    9. 'pass' → logprob: -11.06654167175293
    10. '  ' → logprob: -11.19154167175293

Token 203: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027257563546299934
    2. '@' (adapté à ' @') → logprob: -3.6522576808929443
    3. ' def' → logprob: -7.527257442474365
    4. '   ' → logprob: -7.902257442474365
    5. '@property' → logprob: -10.777257919311523
    6. 'class' → logprob: -11.777257919311523
    7. ' @' → logprob: -11.777257919311523
    8. 'from' → logprob: -12.027257919311523
    9. 'pass' → logprob: -12.902257919311523
    10. 'abstract' → logprob: -14.152257919311523

Token 204: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.5048530030981055e-06
    2. 'property' → logprob: -13.500001907348633
    3. ' abstract' → logprob: -16.625001907348633
    4. 'staticmethod' → logprob: -17.875001907348633
    5. 'override' → logprob: -18.000001907348633
    6. 'abc' → logprob: -19.000001907348633
    7. 'classmethod' → logprob: -19.875001907348633
    8. 'abs' → logprob: -20.625001907348633
    9. 'ab' → logprob: -21.750001907348633
    10. '.abstract' → logprob: -22.625001907348633

Token 205: 'method' (ID: 8697)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9499385952949524
    2. 'method' → logprob: -1.1999385356903076
    3. '_method' → logprob: -1.4499385356903076
    4. ' def' → logprob: -2.9499385356903076
    5. '_token' → logprob: -4.574938774108887
    6. 'classmethod' → logprob: -5.324938774108887
    7. '<|end|>' → logprob: -5.449938774108887
    8. 'staticmethod' → logprob: -7.074938774108887
    9. '   ' → logprob: -7.074938774108887
    10. '<|end|>' → logprob: -7.574938774108887

Token 206: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1739744395017624
    2. 'def' → logprob: -2.4239745140075684
    3. ' def' → logprob: -3.0489745140075684
    4. '   ' → logprob: -3.7989745140075684
    5. '<|end|>' → logprob: -7.173974514007568
    6. '
' → logprob: -8.17397403717041
    7. '    
' → logprob: -9.04897403717041
    8. '	def' → logprob: -9.54897403717041
    9. '<|end|>' → logprob: -10.29897403717041
    10. '  ' → logprob: -11.67397403717041

Token 207: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18316110968589783
    2. '
' → logprob: -1.9331611394882202
    3. ' def' → logprob: -3.8081610202789307
    4. '   ' → logprob: -7.80816125869751
    5. '	def' → logprob: -10.308160781860352
    6. '\' → logprob: -11.433160781860352
    7. '
' → logprob: -11.683160781860352
    8. '    
' → logprob: -11.808160781860352
    9. '```' → logprob: -12.308160781860352
    10. 'method' → logprob: -12.933160781860352

Token 208: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06214805319905281
    2. ' def' → logprob: -2.812148094177246
    3. '
' → logprob: -8.687148094177246
    4. '   ' → logprob: -11.687148094177246
    5. '  ' → logprob: -13.687148094177246
    6. ' ' → logprob: -13.687148094177246
    7. 'count' → logprob: -15.812148094177246
    8. 'method' → logprob: -16.06214714050293
    9. '_def' → logprob: -16.06214714050293
    10. '
' → logprob: -16.18714714050293

Token 209: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.581035315990448
    2. ' count' → logprob: -0.831035315990448
    3. ' select' → logprob: -6.581035137176514
    4. 'select' → logprob: -6.831035137176514
    5. '_count' → logprob: -7.331035137176514
    6. 'choose' → logprob: -7.956035137176514
    7. 'evaluate' → logprob: -8.331035614013672
    8. ' compute' → logprob: -8.581035614013672
    9. 'compute' → logprob: -8.706035614013672
    10. 'combine' → logprob: -8.831035614013672

Token 210: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.00013810492237098515
    2. '_' → logprob: -9.250138282775879
    3. '_comb' → logprob: -10.500138282775879
    4. '<|end|>' → logprob: -12.125138282775879
    5. '_choices' → logprob: -13.625138282775879
    6. ' _' → logprob: -13.625138282775879
    7. '_factor' → logprob: -14.125138282775879
    8. '_con' → logprob: -14.375138282775879
    9. '_token' → logprob: -14.500138282775879
    10. '_vari' → logprob: -14.875138282775879

Token 211: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.00036406738217920065
    2. 'om' → logprob: -8.875364303588867
    3. 'inations' → logprob: -9.875364303588867
    4. 'omb' → logprob: -10.000364303588867
    5. 'b' → logprob: -10.000364303588867
    6. 'ount' → logprob: -11.000364303588867
    7. 'utations' → logprob: -11.125364303588867
    8. 'ominations' → logprob: -11.250364303588867
    9. 'initions' → logprob: -11.750364303588867
    10. '_' → logprob: -11.875364303588867

Token 212: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -10.875025749206543
    3. 'self' → logprob: -12.250025749206543
    4. '   ' → logprob: -14.125025749206543
    5. ')' → logprob: -15.125025749206543
    6. '       ' → logprob: -15.250025749206543
    7. '(
' → logprob: -16.125024795532227
    8. ' ' → logprob: -16.250024795532227
    9. '()' → logprob: -17.125024795532227
    10. ' (' → logprob: -17.375024795532227

Token 213: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004184059798717499
    2. 'self' → logprob: -5.879184246063232
    3. '):' → logprob: -7.379184246063232
    4. '(self' → logprob: -7.379184246063232
    5. '   ' → logprob: -10.004183769226074
    6. '):
' → logprob: -10.129183769226074
    7. '       ' → logprob: -11.004183769226074
    8. ' )' → logprob: -11.379183769226074
    9. ',' → logprob: -12.254183769226074
    10. ')->' → logprob: -12.879183769226074

Token 214: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.7640430331230164
    2. ' ->' → logprob: -1.2640430927276611
    3. ')' → logprob: -1.8890430927276611
    4. '(self' → logprob: -2.389043092727661
    5. ':' → logprob: -5.889042854309082
    6. 'self' → logprob: -6.264042854309082
    7. '(' → logprob: -6.264042854309082
    8. '   ' → logprob: -6.639042854309082
    9. '       ' → logprob: -7.764042854309082
    10. ')->' → logprob: -8.014042854309082

Token 215: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141655206680298
    2. ' int' → logprob: -1.7014164924621582
    3. ' ' → logprob: -12.951416969299316
    4. '   ' → logprob: -15.326416969299316
    5. ')' → logprob: -15.951416969299316
    6. '[int' → logprob: -16.201416015625
    7. 'Optional' → logprob: -16.326416015625
    8. 'None' → logprob: -16.451416015625
    9. ':int' → logprob: -16.701416015625
    10. '(int' → logprob: -16.701416015625

Token 216: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' ...

' (ID: 5231)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43760231137275696
    2. 'pass' → logprob: -1.1876022815704346
    3. ' pass' → logprob: -3.3126022815704346
    4. '   ' → logprob: -4.812602519989014
    5. '...' → logprob: -5.687602519989014
    6. '    ' → logprob: -7.562602519989014
    7. ')' → logprob: -8.312602043151855
    8. '	pass' → logprob: -9.062602043151855
    9. 'def' → logprob: -9.187602043151855
    10. ' ' → logprob: -9.312602043151855

Token 219: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09849365055561066
    2. '   ' → logprob: -2.4734935760498047
    3. 'def' → logprob: -5.473493576049805
    4. '<|end|>' → logprob: -6.098493576049805
    5. ' ' → logprob: -7.348493576049805
    6. ' class' → logprob: -7.348493576049805
    7. '    ' → logprob: -7.848493576049805
    8. '
' → logprob: -7.848493576049805
    9. ' 
' → logprob: -8.223493576049805
    10. ')' → logprob: -8.348493576049805

Token 220: ' Or' (ID: 2604)
  Prédit: 'Choice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Choice' → logprob: -0.5528473854064941
    2. 'Sequence' → logprob: -1.3028473854064941
    3. 'All' → logprob: -3.427847385406494
    4. 'Union' → logprob: -3.677847385406494
    5. 'Selection' → logprob: -4.552847385406494
    6. 'Sequential' → logprob: -4.802847385406494
    7. 'And' → logprob: -4.802847385406494
    8. 'Alternative' → logprob: -4.802847385406494
    9. ' Choice' → logprob: -4.927847385406494
    10. ' Sequence' → logprob: -5.052847385406494

Token 221: 'Selection' (ID: 12653)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.018155913800001144
    2. 'Selection' → logprob: -4.018156051635742
    3. '(Node' → logprob: -13.143156051635742
    4. 'Choice' → logprob: -13.768156051635742
    5. 'Select' → logprob: -14.018156051635742
    6. '<Node' → logprob: -14.643156051635742
    7. '(' → logprob: -15.018156051635742
    8. 'Selector' → logprob: -15.143156051635742
    9. '_Node' → logprob: -15.143156051635742
    10. 'Nodes' → logprob: -15.393156051635742

Token 222: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.0021591836120933294
    2. 'Selection' → logprob: -6.627159118652344
    3. '(' → logprob: -7.377159118652344
    4. '(Node' → logprob: -8.502159118652344
    5. 'Nodes' → logprob: -13.627159118652344
    6. ' Node' → logprob: -14.002159118652344
    7. 'node' → logprob: -14.502159118652344
    8. '	Node' → logprob: -14.752159118652344
    9. 'Select' → logprob: -15.127159118652344
    10. '_Node' → logprob: -15.377159118652344

Token 223: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009214656893163919
    2. '(Node' → logprob: -7.000921249389648
    3. ' (' → logprob: -12.250921249389648
    4. '(selection' → logprob: -12.625921249389648
    5. '(S' → logprob: -14.250921249389648
    6. '(SE' → logprob: -15.000921249389648
    7. '(
' → logprob: -15.375921249389648
    8. 'Selection' → logprob: -16.00092124938965
    9. '(Session' → logprob: -16.37592124938965
    10. ':' → logprob: -16.50092124938965

Token 224: 'Selection' (ID: 12653)
  Prédit: 'Selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selection' → logprob: -0.006744496989995241
    2. ' Selection' → logprob: -5.256744384765625
    3. 'Node' → logprob: -6.506744384765625
    4. ' Node' → logprob: -11.506744384765625
    5. ')' → logprob: -13.256744384765625
    6. 'Select' → logprob: -13.381744384765625
    7. ' selection' → logprob: -13.881744384765625
    8. '   ' → logprob: -15.131744384765625
    9. 'Selected' → logprob: -15.131744384765625
    10. 'selection' → logprob: -15.131744384765625

Token 225: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -3.531315314830863e-06
    2. ')' → logprob: -13.500003814697266
    3. ' Node' → logprob: -14.000003814697266
    4. '(Node' → logprob: -14.875003814697266
    5. '	Node' → logprob: -15.250003814697266
    6. '_Node' → logprob: -15.500003814697266
    7. '<Node' → logprob: -15.625003814697266
    8. '):' → logprob: -16.000003814697266
    9. 'Nodes' → logprob: -17.250003814697266
    10. 'Nodo' → logprob: -17.625003814697266

Token 226: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025504580698907375
    2. '):
' → logprob: -6.0025506019592285
    3. ')' → logprob: -9.62755012512207
    4. ' ):' → logprob: -12.87755012512207
    5. ',' → logprob: -13.12755012512207
    6. '   ' → logprob: -13.25255012512207
    7. ':' → logprob: -13.62755012512207
    8. '):

' → logprob: -14.00255012512207
    9. '):
' → logprob: -14.75255012512207
    10. '(' → logprob: -17.25255012512207

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019588442519307137
    2. 'def' → logprob: -6.501958847045898
    3. ' def' → logprob: -7.751958847045898
    4. ':' → logprob: -11.126958847045898
    5. '
' → logprob: -12.251958847045898
    6. ')' → logprob: -12.626958847045898
    7. '    
' → logprob: -13.751958847045898
    8. ':def' → logprob: -13.876958847045898
    9. '	def' → logprob: -14.501958847045898
    10. '):' → logprob: -14.751958847045898

Token 228: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24132585525512695
    2. '   ' → logprob: -1.741325855255127
    3. ' def' → logprob: -3.241325855255127
    4. '
' → logprob: -11.366325378417969
    5. '	def' → logprob: -13.116325378417969
    6. '#' (adapté à ' #') → logprob: -14.866325378417969
    7. '    
' → logprob: -15.241325378417969
    8. '  ' → logprob: -15.991325378417969
    9. ' ' → logprob: -16.49132537841797
    10. '_def' → logprob: -16.99132537841797

Token 229: ' Or' (ID: 2604)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06764094531536102
    2. ' def' → logprob: -2.817641019821167
    3. 'class' → logprob: -5.942640781402588
    4. 'count' → logprob: -6.442640781402588
    5. '   ' → logprob: -6.942640781402588
    6. '#' → logprob: -8.692641258239746
    7. '
' → logprob: -8.942641258239746
    8. ' count' → logprob: -9.567641258239746
    9. ' ' → logprob: -10.817641258239746
    10. '```' → logprob: -11.317641258239746

Token 230: ' type' (ID: 1490)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9290832281112671
    2. 'Selection' → logprob: -1.429083228111267
    3. '_selection' → logprob: -1.929083228111267
    4. '   ' → logprob: -2.1790833473205566
    5. ' def' → logprob: -2.4290833473205566
    6. '
' → logprob: -4.679083347320557
    7. ' selection' → logprob: -6.054083347320557
    8. 'selection' → logprob: -6.304083347320557
    9. ' Selection' → logprob: -6.429083347320557
    10. ')' → logprob: -7.429083347320557

Token 231: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4713943898677826
    2. ' def' → logprob: -1.721394419670105
    3. 'Selection' → logprob: -2.7213943004608154
    4. 'def' → logprob: -3.0963943004608154
    5. ':' → logprob: -4.2213945388793945
    6. '
' → logprob: -4.3463945388793945
    7. '<|end|>' → logprob: -4.3463945388793945
    8. '<|end|>' → logprob: -4.7213945388793945
    9. ' selection' → logprob: -4.9713945388793945
    10. 'class' → logprob: -5.3463945388793945

Token 232: ' must' (ID: 2804)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16463550925254822
    2. ' def' → logprob: -1.9146355390548706
    3. '   ' → logprob: -5.53963565826416
    4. ' if' → logprob: -9.03963565826416
    5. '       ' → logprob: -9.41463565826416
    6. 'if' → logprob: -9.53963565826416
    7. 'If' → logprob: -9.66463565826416
    8. '
' → logprob: -10.16463565826416
    9. 'class' → logprob: -10.41463565826416
    10. ' ' → logprob: -10.91463565826416

Token 233: ' choose' (ID: 5655)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.4518878161907196
    2. ' choose' → logprob: -2.201887845993042
    3. ' select' → logprob: -2.326887845993042
    4. 'select' → logprob: -2.451887845993042
    5. '_choose' → logprob: -3.201887845993042
    6. ' have' → logprob: -4.201887607574463
    7. '_select' → logprob: -5.201887607574463
    8. 'have' → logprob: -5.326887607574463
    9. ' ' → logprob: -7.076887607574463
    10. '   ' → logprob: -7.576887607574463

Token 234: ' at' (ID: 540)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.7238908410072327
    2. 'at' → logprob: -0.9738908410072327
    3. ' exactly' → logprob: -2.598890781402588
    4. ' at' → logprob: -3.098890781402588
    5. 'one' → logprob: -4.223890781402588
    6. ' one' → logprob: -5.723890781402588
    7. ' ' → logprob: -9.223891258239746
    8. '1' → logprob: -10.848891258239746
    9. '_exact' → logprob: -11.598891258239746
    10. '	at' → logprob: -11.723891258239746

Token 235: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.2014552354812622
    2. ' least' → logprob: -1.7014552354812622
    3. '_le' → logprob: -11.076455116271973
    4. 'le' → logprob: -11.451455116271973
    5. 'lease' → logprob: -12.076455116271973
    6. 'at' → logprob: -12.451455116271973
    7. 'east' → logprob: -13.701455116271973
    8. ' at' → logprob: -13.701455116271973
    9. 'Least' → logprob: -13.826455116271973
    10. 'lest' → logprob: -13.951455116271973

Token 236: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.005245379637926817
    2. ' one' → logprob: -5.255245208740234
    3. '_one' → logprob: -11.505245208740234
    4. 'One' → logprob: -14.005245208740234
    5. '1' → logprob: -14.505245208740234
    6. '```' → logprob: -16.255245208740234
    7. ' ' → logprob: -16.755245208740234
    8. 'once' → logprob: -17.630245208740234
    9. '(one' → logprob: -17.880245208740234
    10. '   ' → logprob: -18.380245208740234

Token 237: ' child' (ID: 2320)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1279151439666748
    2. ',' → logprob: -2.502915143966675
    3. ')' → logprob: -4.752915382385254
    4. ':' → logprob: -4.877915382385254
    5. ' from' → logprob: -5.002915382385254
    6. 'def' → logprob: -5.877915382385254
    7. 'from' → logprob: -6.252915382385254
    8. '       ' → logprob: -6.377915382385254
    9. '.' → logprob: -6.502915382385254
    10. ' or' → logprob: -6.627915382385254

Token 238: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046067722141742706
    2. '
' → logprob: -4.046067714691162
    3. 'def' → logprob: -4.171067714691162
    4. ':' → logprob: -5.921067714691162
    5. ')' → logprob: -6.046067714691162
    6. '       ' → logprob: -6.171067714691162
    7. '(' → logprob: -6.421067714691162
    8. ',' → logprob: -6.671067714691162
    9. '    
' → logprob: -7.171067714691162
    10. '()' → logprob: -8.42106819152832

Token 239: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5759508013725281
    2. 'not' → logprob: -0.8259508013725281
    3. '(not' → logprob: -12.825950622558594
    4. 'self' → logprob: -12.950950622558594
    5. 'optional' → logprob: -13.325950622558594
    6. '	not' → logprob: -13.450950622558594
    7. ' optional' → logprob: -13.700950622558594
    8. ' self' → logprob: -14.200950622558594
    9. '   ' → logprob: -14.325950622558594
    10. '
' → logprob: -15.200950622558594

Token 240: ' optional' (ID: 18297)
  Prédit: 'optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optional' → logprob: -0.8183444142341614
    2. ' optional' → logprob: -1.1933443546295166
    3. 'self' → logprob: -1.9433443546295166
    4. ' self' → logprob: -2.1933443546295166
    5. '_optional' → logprob: -7.443344593048096
    6. '.optional' → logprob: -8.818344116210938
    7. 'Optional' → logprob: -9.318344116210938
    8. '(optional' → logprob: -11.568344116210938
    9. ' Optional' → logprob: -11.943344116210938
    10. 'None' → logprob: -12.068344116210938

Token 241: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08341751992702484
    2. '
' → logprob: -2.8334174156188965
    3. 'def' → logprob: -3.9584174156188965
    4. ' def' → logprob: -6.7084174156188965
    5. '    
' → logprob: -7.9584174156188965
    6. ',' → logprob: -8.083417892456055
    7. ')' → logprob: -9.333417892456055
    8. '  
' → logprob: -10.458417892456055
    9. '       ' → logprob: -10.833417892456055
    10. '	def' → logprob: -10.958417892456055

Token 242: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10233865678310394
    2. '   ' → logprob: -3.4773385524749756
    3. '#' → logprob: -3.8523385524749756
    4. 'otherwise' → logprob: -4.227338790893555
    5. 'else' → logprob: -4.227338790893555
    6. ' else' → logprob: -4.852338790893555
    7. 'and' → logprob: -6.352338790893555
    8. 'def' → logprob: -6.477338790893555
    9. ' otherwise' → logprob: -6.602338790893555
    10. ' ' → logprob: -7.102338790893555

Token 243: ' #' (ID: 1069)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.17792540788650513
    2. 'else' → logprob: -2.4279253482818604
    3. ' otherwise' → logprob: -3.5529253482818604
    4. '#' (adapté à ' #') → logprob: -4.4279255867004395
    5. '   ' → logprob: -4.4279255867004395
    6. '       ' → logprob: -4.5529255867004395
    7. 'otherwise' → logprob: -4.9279255867004395
    8. ' ' → logprob: -7.0529255867004395
    9. ' but' → logprob: -7.1779255867004395
    10. ' and' → logprob: -7.8029255867004395

Token 244: ' If' (ID: 1843)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1580609381198883
    2. '   ' → logprob: -2.4080610275268555
    3. 'def' → logprob: -3.2830610275268555
    4. ' #' → logprob: -4.6580610275268555
    5. 'else' → logprob: -6.0330610275268555
    6. 'otherwise' → logprob: -6.0330610275268555
    7. ' def' → logprob: -6.2830610275268555
    8. '       ' → logprob: -6.6580610275268555
    9. ' else' → logprob: -7.7830610275268555
    10. ' ' → logprob: -8.283061027526855

Token 245: ' optional' (ID: 18297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.18895481526851654
    2. ' optional' → logprob: -2.1889548301696777
    3. 'self' → logprob: -2.9389548301696777
    4. 'optional' → logprob: -4.938954830169678
    5. ' not' → logprob: -10.31395435333252
    6. '_optional' → logprob: -11.43895435333252
    7. '.optional' → logprob: -11.81395435333252
    8. ' all' → logprob: -12.43895435333252
    9. 'Optional' → logprob: -13.81395435333252
    10. 'not' → logprob: -14.31395435333252

Token 246: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030350271612405777
    2. ':' → logprob: -3.7803502082824707
    3. ' ,' → logprob: -5.030350208282471
    4. ' :' → logprob: -8.030350685119629
    5. ' optional' → logprob: -10.155350685119629
    6. ' else' → logprob: -10.405350685119629
    7. '   ' → logprob: -10.905350685119629
    8. 'self' → logprob: -10.905350685119629
    9. ',
' → logprob: -11.155350685119629
    10. ',:' → logprob: -11.405350685119629

Token 247: ' can' (ID: 665)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39486008882522583
    2. ' can' → logprob: -1.644860029220581
    3. 'return' → logprob: -2.144860029220581
    4. 'can' → logprob: -5.39486026763916
    5. ' at' → logprob: -6.14486026763916
    6. ' must' → logprob: -6.76986026763916
    7. '   ' → logprob: -6.76986026763916
    8. ' #' → logprob: -6.76986026763916
    9. '#' → logprob: -6.89486026763916
    10. '       ' → logprob: -7.01986026763916

Token 248: ' choose' (ID: 5655)
  Prédit: ' choose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choose' → logprob: -0.6053369641304016
    2. 'choose' → logprob: -0.8553369641304016
    3. ' skip' → logprob: -4.355337142944336
    4. 'skip' → logprob: -4.855337142944336
    5. ' not' → logprob: -5.855337142944336
    6. 'not' → logprob: -6.480337142944336
    7. ' also' → logprob: -6.730337142944336
    8. 'also' → logprob: -6.980337142944336
    9. ' or' → logprob: -7.855337142944336
    10. 'or' → logprob: -7.980337142944336

Token 249: ' no' (ID: 860)
  Prédit: ' none'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' none' → logprob: -0.8611646294593811
    2. 'none' → logprob: -0.9861646294593811
    3. ' zero' → logprob: -1.8611645698547363
    4. 'no' → logprob: -3.9861645698547363
    5. ' no' → logprob: -4.236164569854736
    6. 'zero' → logprob: -4.486164569854736
    7. '0' → logprob: -6.111164569854736
    8. ' or' → logprob: -6.986164569854736
    9. ' ' → logprob: -7.111164569854736
    10. ' all' → logprob: -9.111165046691895

Token 250: ' children' (ID: 3953)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.814889132976532
    2. 'one' → logprob: -1.3148891925811768
    3. ' child' → logprob: -2.1898891925811768
    4. 'thing' → logprob: -2.4398891925811768
    5. ' one' → logprob: -3.1898891925811768
    6. 't' → logprob: -3.5648891925811768
    7. 'children' → logprob: -4.689888954162598
    8. 'ne' → logprob: -4.814888954162598
    9. ' children' → logprob: -7.189888954162598
    10. ' or' → logprob: -7.814888954162598

Token 251: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33977919816970825
    2. '
' → logprob: -1.8397791385650635
    3. 'def' → logprob: -2.2147791385650635
    4. ' def' → logprob: -4.089779376983643
    5. ')' → logprob: -6.714779376983643
    6. '       ' → logprob: -7.464779376983643
    7. '    
' → logprob: -7.714779376983643
    8. ',' → logprob: -8.214778900146484
    9. ':' → logprob: -8.839778900146484
    10. '```' → logprob: -9.089778900146484

Token 252: ' well' (ID: 1775)
  Prédit: ' well'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' well' → logprob: -0.061977315694093704
    2. 'well' → logprob: -2.8119773864746094
    3. 'w' → logprob: -12.68697738647461
    4. ' ' → logprob: -13.43697738647461
    5. ' wel' → logprob: -13.56197738647461
    6. '   ' → logprob: -14.31197738647461
    7. 'wel' → logprob: -14.93697738647461
    8. ' ' → logprob: -14.93697738647461
    9. ' option' → logprob: -15.06197738647461
    10. 'option' → logprob: -15.18697738647461

Token 253: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2364046275615692
    2. 'def' → logprob: -2.2364046573638916
    3. '
' → logprob: -2.6114046573638916
    4. ' def' → logprob: -3.6114046573638916
    5. ',' → logprob: -6.4864044189453125
    6. '    
' → logprob: -6.8614044189453125
    7. ')' → logprob: -8.611404418945312
    8. '  
' → logprob: -8.986404418945312
    9. '	def' → logprob: -9.736404418945312
    10. '.' → logprob: -9.986404418945312

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01200094260275364
    2. 'def' → logprob: -5.012001037597656
    3. '
' → logprob: -5.637001037597656
    4. ' def' → logprob: -6.887001037597656
    5. '    
' → logprob: -7.762001037597656
    6. ')' → logprob: -8.637001037597656
    7. '  
' → logprob: -10.887001037597656
    8. ':' → logprob: -11.387001037597656
    9. '	def' → logprob: -11.637001037597656
    10. ' 
' → logprob: -11.887001037597656

Token 255: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009518424049019814
    2. ' def' → logprob: -4.759518623352051
    3. '   ' → logprob: -7.009518623352051
    4. '	def' → logprob: -15.38451862335205
    5. '
' → logprob: -17.134517669677734
    6. ' ' → logprob: -18.259517669677734
    7. '  ' → logprob: -18.884517669677734
    8. '    
' → logprob: -19.134517669677734
    9. 'de' → logprob: -19.634517669677734
    10. '       ' → logprob: -20.134517669677734

Token 256: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.16033978760242462
    2. 'count' → logprob: -1.9103398323059082
    3. ' def' → logprob: -9.28533935546875
    4. 'def' → logprob: -10.78533935546875
    5. '_count' → logprob: -13.66033935546875
    6. ' ' → logprob: -14.78533935546875
    7. '	count' → logprob: -15.16033935546875
    8. '.count' → logprob: -15.66033935546875
    9. '(count' → logprob: -16.78533935546875
    10. '   ' → logprob: -17.91033935546875

Token 257: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.00010068230039905757
    2. '_' → logprob: -9.625101089477539
    3. ' _' → logprob: -11.000101089477539
    4. '_comb' → logprob: -11.375101089477539
    5. '```' → logprob: -14.375101089477539
    6. '_
' → logprob: -14.500101089477539
    7. '(_' → logprob: -14.875101089477539
    8. '_sub' → logprob: -15.125101089477539
    9. '(' → logprob: -15.250101089477539
    10. ')_' → logprob: -15.375101089477539

Token 258: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.02116663008928299
    2. 'inations' → logprob: -4.021166801452637
    3. 'utations' → logprob: -6.396166801452637
    4. 'o' → logprob: -7.896166801452637
    5. 'initions' → logprob: -8.646166801452637
    6. 'b' → logprob: -8.896166801452637
    7. '```' → logprob: -9.521166801452637
    8. 'on' → logprob: -10.021166801452637
    9. 'ations' → logprob: -10.021166801452637
    10. 'ine' → logprob: -10.146166801452637

Token 259: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00019376569252926856
    2. '(' → logprob: -8.62519359588623
    3. ' (' → logprob: -11.37519359588623
    4. '   ' → logprob: -13.87519359588623
    5. 'self' → logprob: -14.00019359588623
    6. '       ' → logprob: -15.37519359588623
    7. ')' → logprob: -15.87519359588623
    8. '(s' → logprob: -16.000194549560547
    9. '()' → logprob: -16.250194549560547
    10. '```' → logprob: -16.500194549560547

Token 260: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.514650183613412e-05
    2. 'self' → logprob: -10.875055313110352
    3. '(self' → logprob: -11.250055313110352
    4. ' )' → logprob: -11.250055313110352
    5. '   ' → logprob: -12.250055313110352
    6. '):' → logprob: -13.125055313110352
    7. '):
' → logprob: -13.500055313110352
    8. ')->' → logprob: -14.000055313110352
    9. '()' → logprob: -14.500055313110352
    10. '       ' → logprob: -14.875055313110352

Token 261: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002715873415581882
    2. '(' → logprob: -8.500271797180176
    3. '->' → logprob: -10.875271797180176
    4. '   ' → logprob: -11.375271797180176
    5. ')' → logprob: -11.375271797180176
    6. ' (' → logprob: -11.625271797180176
    7. ' ->' → logprob: -11.750271797180176
    8. 'self' → logprob: -12.250271797180176
    9. '       ' → logprob: -13.375271797180176
    10. 'def' → logprob: -13.750271797180176

Token 262: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008618354797363281
    2. ' int' → logprob: -4.758618354797363
    3. '(int' → logprob: -12.883618354797363
    4. '   ' → logprob: -14.633618354797363
    5. ':int' → logprob: -14.758618354797363
    6. ' ' → logprob: -15.383618354797363
    7. ':' → logprob: -16.883617401123047
    8. ')' → logprob: -17.258617401123047
    9. '1' → logprob: -17.633617401123047
    10. '0' → logprob: -17.883617401123047

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04769521951675415
    2. '(self' → logprob: -3.4226951599121094
    3. '       ' → logprob: -4.797695159912109
    4. ':
' → logprob: -5.797695159912109
    5. '):' → logprob: -6.547695159912109
    6. '   ' → logprob: -7.172695159912109
    7. ')' → logprob: -9.04769515991211
    8. 'self' → logprob: -9.54769515991211
    9. '(' → logprob: -9.67269515991211
    10. '():' → logprob: -9.79769515991211

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004931025905534625
    2. 'result' → logprob: -8.125493049621582
    3. 'total' → logprob: -9.375493049621582
    4. 'count' → logprob: -10.750493049621582
    5. '   ' → logprob: -10.875493049621582
    6. '```' → logprob: -11.125493049621582
    7. 'com' → logprob: -11.750493049621582
    8. '        
' → logprob: -12.125493049621582
    9. ' result' → logprob: -12.250493049621582
    10. 'res' → logprob: -12.375493049621582

Token 265: ' child' (ID: 2320)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.10740906745195389
    2. '       ' → logprob: -2.8574090003967285
    3. 'res' → logprob: -3.9824090003967285
    4. 'result' → logprob: -4.2324090003967285
    5. 'child' (adapté à ' child') → logprob: -5.2324090003967285
    6. 'ways' → logprob: -6.1074090003967285
    7. ' total' → logprob: -7.2324090003967285
    8. 'prod' → logprob: -7.3574090003967285
    9. 'children' → logprob: -7.4824090003967285
    10. 'if' → logprob: -7.4824090003967285

Token 266: '_counts' (ID: 61971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8396165370941162
    2. '_counts' → logprob: -1.3396165370941162
    3. '_com' → logprob: -1.5896165370941162
    4. 's' → logprob: -2.714616537094116
    5. '_total' → logprob: -4.839616775512695
    6. '_count' → logprob: -4.839616775512695
    7. '_s' → logprob: -5.214616775512695
    8. '_comb' → logprob: -5.214616775512695
    9. '_results' → logprob: -5.464616775512695
    10. '_choices' → logprob: -6.214616775512695

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759851932525635
    2. ' =' → logprob: -0.8259851932525635
    3. '   ' → logprob: -11.075984954833984
    4. 's' → logprob: -11.575984954833984
    5. ':' → logprob: -11.825984954833984
    6. ' ' → logprob: -11.950984954833984
    7. '=[' → logprob: -13.325984954833984
    8. '[' → logprob: -13.700984954833984
    9. '       ' → logprob: -14.325984954833984
    10. '_sum' → logprob: -14.700984954833984

Token 268: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03498591482639313
    2. '1' → logprob: -3.5349860191345215
    3. ' [' → logprob: -5.7849860191345215
    4. '[(' → logprob: -6.2849860191345215
    5. '[self' → logprob: -9.034985542297363
    6. '[
' → logprob: -10.034985542297363
    7. ' ' → logprob: -10.034985542297363
    8. '[p' → logprob: -10.659985542297363
    9. '[s' → logprob: -11.409985542297363
    10. '[len' → logprob: -11.534985542297363

Token 269: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.0019643204286694527
    2. '(child' → logprob: -7.126964092254639
    3. 'c' → logprob: -7.251964092254639
    4. ' child' → logprob: -8.251964569091797
    5. '(' → logprob: -8.626964569091797
    6. ' (' → logprob: -12.376964569091797
    7. '(c' → logprob: -13.251964569091797
    8. 'children' → logprob: -13.876964569091797
    9. 'ch' → logprob: -14.126964569091797
    10. ' c' → logprob: -14.251964569091797

Token 270: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.00010962257510982454
    2. '.' → logprob: -9.250109672546387
    3. ' .' → logprob: -11.375109672546387
    4. 'count' → logprob: -13.250109672546387
    5. ').' → logprob: -17.37510871887207
    6. '   ' → logprob: -17.50010871887207
    7. '().' → logprob: -17.75010871887207
    8. '(count' → logprob: -17.87510871887207
    9. ' count' → logprob: -18.37510871887207
    10. '	count' → logprob: -18.50010871887207

Token 271: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.7120533811976202e-05
    2. '_' → logprob: -11.125017166137695
    3. '_comb' → logprob: -13.625017166137695
    4. ' _' → logprob: -15.000017166137695
    5. '_
' → logprob: -16.500017166137695
    6. ')_' → logprob: -16.500017166137695
    7. '_con' → logprob: -16.625017166137695
    8. '()' → logprob: -16.750017166137695
    9. 'com' → logprob: -16.750017166137695
    10. '_sub' → logprob: -17.250017166137695

Token 272: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.020619668066501617
    2. 'inations' → logprob: -3.8956196308135986
    3. 'ations' → logprob: -10.77061939239502
    4. 'utations' → logprob: -10.77061939239502
    5. 'bin' → logprob: -11.64561939239502
    6. 'on' → logprob: -11.89561939239502
    7. 'ulations' → logprob: -12.27061939239502
    8. 'b' → logprob: -12.64561939239502
    9. 'initions' → logprob: -13.52061939239502
    10. 'ob' → logprob: -14.02061939239502

Token 273: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010533124441280961
    2. '()]' → logprob: -9.250104904174805
    3. '()
' → logprob: -12.000104904174805
    4. ' ()' → logprob: -13.375104904174805
    5. '())' → logprob: -14.500104904174805
    6. ')' → logprob: -15.000104904174805
    7. '()*' → logprob: -15.500104904174805
    8. 'for' → logprob: -16.000104904174805
    9. ']' → logprob: -16.250104904174805
    10. ']()' → logprob: -16.500104904174805

Token 274: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004019633866846561
    2. 'for' → logprob: -5.754019737243652
    3. '()' → logprob: -7.254019737243652
    4. ' ' → logprob: -10.379019737243652
    5. ')' → logprob: -10.504019737243652
    6. '       ' → logprob: -10.504019737243652
    7. ' +' → logprob: -11.004019737243652
    8. '+' → logprob: -11.254019737243652
    9. '   ' → logprob: -12.004019737243652
    10. ']' → logprob: -12.129019737243652

Token 275: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.5760926604270935
    2. ' child' → logprob: -0.8260926604270935
    3. 'self' → logprob: -9.076092720031738
    4. ' self' → logprob: -10.451092720031738
    5. '	child' → logprob: -11.951092720031738
    6. ' ' → logprob: -13.326092720031738
    7. 'c' → logprob: -14.201092720031738
    8. '   ' → logprob: -15.201092720031738
    9. '(child' → logprob: -15.201092720031738
    10. '.child' → logprob: -15.201092720031738

Token 276: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033670250326395035
    2. 'in' → logprob: -3.40867018699646
    3. ']' → logprob: -11.533670425415039
    4. ' ]' → logprob: -12.158670425415039
    5. ' ' → logprob: -13.033670425415039
    6. 's' → logprob: -13.033670425415039
    7. 'child' → logprob: -13.408670425415039
    8. 'children' → logprob: -14.283670425415039
    9. '.' → logprob: -14.658670425415039
    10. '	in' → logprob: -15.408670425415039

Token 277: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018150296062231064
    2. ' self' → logprob: -4.018150329589844
    3. '(self' → logprob: -16.393150329589844
    4. ' ' → logprob: -16.768150329589844
    5. '	self' → logprob: -17.018150329589844
    6. '   ' → logprob: -17.268150329589844
    7. '
' → logprob: -17.893150329589844
    8. ')' → logprob: -18.143150329589844
    9. 'child' → logprob: -18.143150329589844
    10. ']' → logprob: -18.893150329589844

Token 278: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.00035095500061288476
    2. 'children' → logprob: -8.000350952148438
    3. '.' → logprob: -11.375350952148438
    4. ' .' → logprob: -13.125350952148438
    5. ' children' → logprob: -13.375350952148438
    6. '	children' → logprob: -15.750350952148438
    7. '(children' → logprob: -16.000350952148438
    8. '.Children' → logprob: -16.125350952148438
    9. 'Children' → logprob: -16.875350952148438
    10. '_children' → logprob: -17.875350952148438

Token 279: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14712511003017426
    2. ']
' → logprob: -2.022125005722046
    3. '       ' → logprob: -5.647125244140625
    4. ']

' → logprob: -8.022125244140625
    5. ' ]' → logprob: -8.147125244140625
    6. ' ]
' → logprob: -8.897125244140625
    7. '   ' → logprob: -9.147125244140625
    8. ']
' → logprob: -10.272125244140625
    9. '
' → logprob: -12.647125244140625
    10. ')' → logprob: -13.147125244140625

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1622926890850067
    2. 'total' → logprob: -2.537292718887329
    3. 'result' → logprob: -3.287292718887329
    4. ' total' → logprob: -4.66229248046875
    5. 'res' → logprob: -5.03729248046875
    6. '        
' → logprob: -5.78729248046875
    7. '
' → logprob: -5.91229248046875
    8. 'count' → logprob: -5.91229248046875
    9. ' result' → logprob: -6.53729248046875
    10. 'n' → logprob: -6.66229248046875

Token 281: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.023773424327373505
    2. ' total' → logprob: -4.523773193359375
    3. '       ' → logprob: -5.148773193359375
    4. 'result' → logprob: -6.148773193359375
    5. 'prod' → logprob: -6.273773193359375
    6. 'product' → logprob: -6.898773193359375
    7. 'ways' → logprob: -7.648773193359375
    8. 'all' → logprob: -7.898773193359375
    9. 'res' → logprob: -8.148773193359375
    10. 'if' → logprob: -8.273773193359375

Token 282: ' For' (ID: 2214)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03755432739853859
    2. ' total' → logprob: -4.1625542640686035
    3. 'prod' → logprob: -4.6625542640686035
    4. 'product' → logprob: -5.4125542640686035
    5. 'ways' → logprob: -6.1625542640686035
    6. 'all' → logprob: -6.2875542640686035
    7. 'from' → logprob: -7.1625542640686035
    8. 'res' → logprob: -7.4125542640686035
    9. ' prod' → logprob: -7.4125542640686035
    10. 'result' → logprob: -7.5375542640686035

Token 283: ' Or' (ID: 2604)
  Prédit: ' child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' child' → logprob: -1.0653659105300903
    2. ' c' → logprob: -1.8153659105300903
    3. 'child' → logprob: -1.8153659105300903
    4. 'c' → logprob: -2.065365791320801
    5. 'count' → logprob: -2.565365791320801
    6. ' count' → logprob: -3.440365791320801
    7. ' total' → logprob: -4.065365791320801
    8. 'cnt' → logprob: -4.315365791320801
    9. 'total' → logprob: -4.815365791320801
    10. ' cnt' → logprob: -4.815365791320801

Token 284: ':' (ID: 25)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.895248293876648
    2. '_selection' → logprob: -2.0202484130859375
    3. '       ' → logprob: -2.5202484130859375
    4. '   ' → logprob: -2.7702484130859375
    5. '_count' → logprob: -2.7702484130859375
    6. '_' → logprob: -2.8952484130859375
    7. '_choices' → logprob: -2.8952484130859375
    8. '_comb' → logprob: -3.6452484130859375
    9. ':' → logprob: -3.7702484130859375
    10. '_total' → logprob: -3.8952484130859375

Token 285: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.516972005367279
    2. ' total' → logprob: -1.0169720649719238
    3. '       ' → logprob: -3.266972064971924
    4. 'ways' → logprob: -7.016972064971924
    5. ' ways' → logprob: -7.766972064971924
    6. 'all' → logprob: -7.766972064971924
    7. 'result' → logprob: -8.016971588134766
    8. ' prod' → logprob: -8.141971588134766
    9. 'prod' → logprob: -8.141971588134766
    10. 'product' → logprob: -8.641971588134766

Token 286: ' combinations' (ID: 43835)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9805260300636292
    2. '_' → logprob: -0.9805260300636292
    3. ' =' → logprob: -1.4805259704589844
    4. 'ways' → logprob: -4.230525970458984
    5. '_choices' → logprob: -5.480525970458984
    6. '_com' → logprob: -6.105525970458984
    7. '_comb' → logprob: -7.855525970458984
    8. '_=' → logprob: -8.355525970458984
    9. '_options' → logprob: -8.730525970458984
    10. '_count' → logprob: -9.105525970458984

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519298195838928
    2. ' =' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.501930236816406
    4. ':' → logprob: -15.626930236816406
    5. ',' → logprob: -16.376930236816406
    6. ')' → logprob: -16.876930236816406
    7. 's' → logprob: -17.001930236816406
    8. '   ' → logprob: -17.126930236816406
    9. '=
' → logprob: -17.126930236816406
    10. '=sum' → logprob: -17.376930236816406

Token 288: ' number' (ID: 2086)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2745702266693115
    2. '(' → logprob: -1.7745702266693115
    3. 'prod' → logprob: -3.5245702266693115
    4. ' (' → logprob: -4.024570465087891
    5. '(prod' → logprob: -5.149570465087891
    6. '   ' → logprob: -5.399570465087891
    7. 'pow' → logprob: -6.149570465087891
    8. '(sum' → logprob: -6.149570465087891
    9. '(M' → logprob: -6.274570465087891
    10. '((' → logprob: -6.524570465087891

Token 289: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.836090087890625
    2. 'of' → logprob: -1.461090087890625
    3. ' =' → logprob: -1.711090087890625
    4. '_of' → logprob: -2.086090087890625
    5. ' of' → logprob: -3.836090087890625
    6. '=sum' → logprob: -5.586090087890625
    7. '(sum' → logprob: -7.336090087890625
    8. '-' → logprob: -7.461090087890625
    9. '1' → logprob: -7.711090087890625
    10. '       ' → logprob: -7.836090087890625

Token 290: ' ways' (ID: 6984)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3481371402740479
    2. ' ways' → logprob: -1.4731371402740479
    3. 'ways' → logprob: -1.8481371402740479
    4. 'all' → logprob: -1.8481371402740479
    5. 'com' → logprob: -2.723137140274048
    6. ' all' → logprob: -2.848137140274048
    7. ' combinations' → logprob: -4.098136901855469
    8. 'child' → logprob: -4.473136901855469
    9. ' ' → logprob: -4.973136901855469
    10. '(' → logprob: -4.973136901855469

Token 291: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.9808822870254517
    2. '=' → logprob: -1.4808822870254517
    3. ' to' → logprob: -1.7308822870254517
    4. ' =' → logprob: -1.8558822870254517
    5. '       ' → logprob: -3.855882167816162
    6. '(' → logprob: -4.105882167816162
    7. '*' → logprob: -5.105882167816162
    8. '-' → logprob: -5.230882167816162
    9. ' *' → logprob: -5.855882167816162
    10. ')' → logprob: -6.355882167816162

Token 292: ' choose' (ID: 5655)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.87012779712677
    2. 'multiply' → logprob: -1.24512779712677
    3. 'combine' → logprob: -2.1201276779174805
    4. ' multiply' → logprob: -2.6201276779174805
    5. 'choose' → logprob: -3.1201276779174805
    6. '(' → logprob: -3.3701276779174805
    7. ' ' → logprob: -4.8701276779174805
    8. 'product' → logprob: -5.3701276779174805
    9. ' (' → logprob: -5.6201276779174805
    10. 'prod' → logprob: -6.7451276779174805

Token 293: ' subset' (ID: 58845)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.33288705348968506
    2. ' from' → logprob: -2.3328871726989746
    3. ' subsets' → logprob: -2.5828871726989746
    4. ' any' → logprob: -3.7078871726989746
    5. ' child' → logprob: -3.8328871726989746
    6. 'from' → logprob: -3.8328871726989746
    7. ' (' → logprob: -4.457887172698975
    8. 'at' → logprob: -5.332887172698975
    9. ' combinations' → logprob: -5.332887172698975
    10. 'child' → logprob: -5.457887172698975

Token 294: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.278580904006958
    2. ' -' → logprob: -1.403580904006958
    3. ' of' → logprob: -2.028580904006958
    4. ' from' → logprob: -2.903580904006958
    5. '-' → logprob: -3.028580904006958
    6. 'of' → logprob: -3.153580904006958
    7. ' =' → logprob: -3.278580904006958
    8. '=' → logprob: -3.278580904006958
    9. 's' → logprob: -3.403580904006958
    10. ' (' → logprob: -4.278580665588379

Token 295: 'non' (ID: 11741)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -1.3344597816467285
    2. ' child' → logprob: -1.5844597816467285
    3. 'from' → logprob: -2.3344597816467285
    4. ' at' → logprob: -2.7094597816467285
    5. 'including' → logprob: -3.2094597816467285
    6. ' (' → logprob: -3.3344597816467285
    7. '1' → logprob: -3.4594597816467285
    8. ' from' → logprob: -3.4594597816467285
    9. ' ' → logprob: -3.5844597816467285
    10. ' including' → logprob: -3.5844597816467285

Token 296: '-empty' (ID: 93958)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.5647735595703125
    2. '-empty' → logprob: -0.9397735595703125
    3. ' empty' → logprob: -3.5647735595703125
    4. '_empty' → logprob: -4.6897735595703125
    5. '       ' → logprob: -7.3147735595703125
    6. ')' → logprob: -7.4397735595703125
    7. ',' → logprob: -8.064773559570312
    8. '(empty' → logprob: -8.064773559570312
    9. '+' → logprob: -8.439773559570312
    10. '-' → logprob: -8.439773559570312

Token 297: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9943262338638306
    2. ' subsets' → logprob: -1.2443262338638306
    3. ' -' → logprob: -2.244326114654541
    4. ' of' → logprob: -3.244326114654541
    5. 's' → logprob: -3.744326114654541
    6. ' ' → logprob: -3.994326114654541
    7. ' )' → logprob: -3.994326114654541
    8. '+' → logprob: -3.994326114654541
    9. ' +' → logprob: -4.244326114654541
    10. 'of' → logprob: -4.369326114654541

Token 298: ' non' (ID: 2893)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4674082100391388
    2. 'not' → logprob: -1.0924081802368164
    3. 'self' → logprob: -3.7174081802368164
    4. ' self' → logprob: -4.342408180236816
    5. 'optional' → logprob: -8.342408180236816
    6. ' optional' → logprob: -8.592408180236816
    7. '(not' → logprob: -9.342408180236816
    8. '
' → logprob: -10.467408180236816
    9. ')' → logprob: -10.592408180236816
    10. '   ' → logprob: -10.717408180236816

Token 299: '-' (ID: 12)
  Prédit: ' optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optional' → logprob: -0.17611126601696014
    2. '_optional' → logprob: -2.1761112213134766
    3. 'optional' → logprob: -3.3011112213134766
    4. ' self' → logprob: -5.301111221313477
    5. '-' → logprob: -6.051111221313477
    6. 'self' → logprob: -6.676111221313477
    7. ' _' → logprob: -7.676111221313477
    8. ' ' → logprob: -7.926111221313477
    9. '.optional' → logprob: -8.051111221313477
    10. '_' → logprob: -8.301111221313477

Token 300: 'optional' (ID: 24685)
  Prédit: 'optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optional' → logprob: -0.4291478097438812
    2. ' optional' → logprob: -1.0541478395462036
    3. '_optional' → logprob: -8.679147720336914
    4. 'self' → logprob: -8.804147720336914
    5. ' self' → logprob: -9.804147720336914
    6. '.optional' → logprob: -10.679147720336914
    7. '(optional' → logprob: -10.929147720336914
    8. 'empty' → logprob: -11.804147720336914
    9. ')' → logprob: -11.804147720336914
    10. '   ' → logprob: -12.929147720336914

Token 301: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18238621950149536
    2. ' )' → logprob: -2.1823861598968506
    3. ',' → logprob: -3.5573861598968506
    4. ' -' → logprob: -5.43238639831543
    5. ' ,' → logprob: -5.43238639831543
    6. ')
' → logprob: -5.68238639831543
    7. '),' → logprob: -5.93238639831543
    8. ')-' → logprob: -6.43238639831543
    9. ' ' → logprob: -6.55738639831543
    10. '       ' → logprob: -6.93238639831543

Token 302: '       ' (ID: 309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9692416191101074
    2. '       ' → logprob: -1.2192416191101074
    3. ' total' → logprob: -1.4692416191101074
    4. 'result' → logprob: -2.9692416191101074
    5. ' ways' → logprob: -4.719241619110107
    6. ' result' → logprob: -4.969241619110107
    7. 'ways' → logprob: -5.094241619110107
    8. 'res' → logprob: -5.094241619110107
    9. '1' → logprob: -6.219241619110107
    10. ' res' → logprob: -6.719241619110107

Token 303: ' #' (ID: 1069)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0858877897262573
    2. '       ' → logprob: -1.0858877897262573
    3. ')' → logprob: -3.335887908935547
    4. 'result' → logprob: -3.460887908935547
    5. '
' → logprob: -3.710887908935547
    6. 'mod' → logprob: -3.710887908935547
    7. 'from' → logprob: -3.835887908935547
    8. 'total' → logprob: -3.835887908935547
    9. 'excluding' → logprob: -3.835887908935547
    10. '   ' → logprob: -4.460887908935547

Token 304: ' where' (ID: 1919)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2630675733089447
    2. ' total' → logprob: -1.638067603111267
    3. '       ' → logprob: -4.013067722320557
    4. 'ways' → logprob: -5.013067722320557
    5. ' ways' → logprob: -5.263067722320557
    6. 'result' → logprob: -6.888067722320557
    7. 'prod' → logprob: -6.888067722320557
    8. 'product' → logprob: -7.138067722320557
    9. 'res' → logprob: -7.138067722320557
    10. ' prod' → logprob: -7.513067722320557

Token 305: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.09414923936128616
    2. ' each' → logprob: -2.594149351119995
    3. 'for' → logprob: -5.094149112701416
    4. 'ways' → logprob: -5.719149112701416
    5. ' for' → logprob: -6.344149112701416
    6. ' ways' → logprob: -6.844149112701416
    7. 'we' → logprob: -7.344149112701416
    8. '   ' → logprob: -7.719149112701416
    9. '       ' → logprob: -8.094149589538574
    10. ' at' → logprob: -8.219149589538574

Token 306: ' chosen' (ID: 16180)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7567355036735535
    2. 'child' → logprob: -1.5067355632781982
    3. 'c' → logprob: -1.6317355632781982
    4. ' count' → logprob: -3.2567355632781982
    5. ' c' → logprob: -3.3817355632781982
    6. ' child' → logprob: -3.5067355632781982
    7. 'cnt' → logprob: -5.131735324859619
    8. '_count' → logprob: -6.881735324859619
    9. 'ct' → logprob: -7.506735324859619
    10. 'comb' → logprob: -7.631735324859619

Token 307: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.8313835859298706
    2. ' child' → logprob: -1.0813835859298706
    3. '_count' → logprob: -2.70638370513916
    4. 'count' → logprob: -2.83138370513916
    5. ' count' → logprob: -3.20638370513916
    6. ' child's' → logprob: -4.83138370513916
    7. '_child' → logprob: -4.83138370513916
    8. 'comb' → logprob: -4.95638370513916
    9. ' combination' → logprob: -5.20638370513916
    10. ' option' → logprob: -5.20638370513916

Token 308: ' multipl' (ID: 44269)
  Prédit: ' contributes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contributes' → logprob: -1.6081328392028809
    2. ' can' → logprob: -1.7331328392028809
    3. ' has' → logprob: -1.8581328392028809
    4. 'con' → logprob: -2.108132839202881
    5. 'can' → logprob: -2.233132839202881
    6. '+' → logprob: -2.733132839202881
    7. 'has' → logprob: -2.733132839202881
    8. ''s' → logprob: -3.483132839202881
    9. 's' → logprob: -3.733132839202881
    10. 'provid' → logprob: -4.858132839202881

Token 309: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.0003200922510586679
    2. 'lies' → logprob: -8.625320434570312
    3. 'es' → logprob: -9.250320434570312
    4. 'plies' → logprob: -11.125320434570312
    5. 'y' → logprob: -11.500320434570312
    6. 'les' → logprob: -12.250320434570312
    7. 'ays' → logprob: -12.375320434570312
    8. 'is' → logprob: -13.375320434570312
    9. 'ys' → logprob: -13.750320434570312
    10. 'icates' → logprob: -13.875320434570312

Token 310: ' child' (ID: 2320)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.753226637840271
    2. ' by' → logprob: -1.628226637840271
    3. ' their' → logprob: -3.0032267570495605
    4. ' child' → logprob: -3.0032267570495605
    5. 'child' → logprob: -3.3782267570495605
    6. 'by' → logprob: -3.3782267570495605
    7. 'the' → logprob: -3.5032267570495605
    8. ' (' → logprob: -3.6282267570495605
    9. '(' → logprob: -3.7532267570495605
    10. ',' → logprob: -4.2532267570495605

Token 311: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.5868079662322998
    2. '_count' → logprob: -0.8368079662322998
    3. '_com' → logprob: -5.711808204650879
    4. '_' → logprob: -6.711808204650879
    5. '```' → logprob: -6.836808204650879
    6. 'count' → logprob: -6.961808204650879
    7. 's' → logprob: -7.086808204650879
    8. '_tokens' → logprob: -7.461808204650879
    9. '+' → logprob: -7.711808204650879
    10. '_comb' → logprob: -7.711808204650879

Token 312: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.498397707939148
    2. ' -' → logprob: -1.623397707939148
    3. ' =' → logprob: -1.623397707939148
    4. ',' → logprob: -2.8733978271484375
    5. '[' → logprob: -2.8733978271484375
    6. '-' → logprob: -2.9983978271484375
    7. '=' → logprob: -3.3733978271484375
    8. ' ' → logprob: -3.3733978271484375
    9. '   ' → logprob: -3.7483978271484375
    10. ')' → logprob: -3.8733978271484375

Token 313: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7054625153541565
    2. ' so' → logprob: -1.4554624557495117
    3. '
' → logprob: -2.0804624557495117
    4. '1' → logprob: -3.8304624557495117
    5. ' and' → logprob: -4.080462455749512
    6. 'and' → logprob: -4.205462455749512
    7. 'so' → logprob: -4.330462455749512
    8. '   ' → logprob: -4.455462455749512
    9. 'excluding' → logprob: -4.830462455749512
    10. ' ' → logprob: -4.955462455749512

Token 314: ' un' (ID: 537)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9546568989753723
    2. ' all' → logprob: -1.2046568393707275
    3. ' we' → logprob: -2.7046568393707275
    4. ' child' → logprob: -3.0796568393707275
    5. 'the' → logprob: -3.8296568393707275
    6. 'all' → logprob: -3.8296568393707275
    7. ' at' → logprob: -3.9546568393707275
    8. ' for' → logprob: -3.9546568393707275
    9. ' total' → logprob: -4.204657077789307
    10. ' including' → logprob: -4.579657077789307

Token 315: 'chosen' (ID: 118821)
  Prédit: 'chosen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.011889987625181675
    2. ' chosen' → logprob: -5.011889934539795
    3. 'selected' → logprob: -5.886889934539795
    4. '[' → logprob: -7.136889934539795
    5. '```' → logprob: -7.511889934539795
    6. '   ' → logprob: -8.761890411376953
    7. '`' → logprob: -8.761890411376953
    8. 'ion' → logprob: -9.011890411376953
    9. '=' → logprob: -9.636890411376953
    10. 'c' → logprob: -9.886890411376953

Token 316: ' contribute' (ID: 22977)
  Prédit: '_children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_children' → logprob: -1.2665382623672485
    2. 'children' → logprob: -1.5165382623672485
    3. '_child' → logprob: -2.641538143157959
    4. 'child' → logprob: -2.766538143157959
    5. '_' → logprob: -2.891538143157959
    6. ' child' → logprob: -2.891538143157959
    7. ' children' → logprob: -3.141538143157959
    8. '_counts' → logprob: -3.266538143157959
    9. '_sub' → logprob: -3.391538143157959
    10. '_choices' → logprob: -3.641538143157959

Token 317: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.055167507380247116
    2. ' ' → logprob: -2.9301674365997314
    3. '*' → logprob: -9.555167198181152
    4. '+' → logprob: -10.055167198181152
    5. ' +' → logprob: -10.055167198181152
    6. '(' → logprob: -10.805167198181152
    7. ' *' → logprob: -11.180167198181152
    8. '   ' → logprob: -11.305167198181152
    9. ' (' → logprob: -11.555167198181152
    10. 's' → logprob: -11.680167198181152

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005804349202662706
    2. ' ' → logprob: -7.500580310821533
    3. '
' → logprob: -11.625580787658691
    4. '*' → logprob: -12.375580787658691
    5. '+' → logprob: -12.500580787658691
    6. '(' → logprob: -12.875580787658691
    7. '[' → logprob: -13.875580787658691
    8. '`' → logprob: -14.000580787658691
    9. '```' → logprob: -14.250580787658691
    10. '=' → logprob: -14.500580787658691

Token 319: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6569185256958008
    2. ' =' → logprob: -1.9069185256958008
    3. '       ' → logprob: -1.9069185256958008
    4. ',' → logprob: -3.281918525695801
    5. ' ,' → logprob: -3.656918525695801
    6. '=' → logprob: -3.906918525695801
    7. ' ' → logprob: -4.156918525695801
    8. '
        
' → logprob: -4.281918525695801
    9. '        
' → logprob: -4.406918525695801
    10. 'from' → logprob: -4.781918525695801

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17048543691635132
    2. 'total' → logprob: -2.545485496520996
    3. ' total' → logprob: -3.795485496520996
    4. '
' → logprob: -4.420485496520996
    5. 'n' → logprob: -4.670485496520996
    6. ' from' → logprob: -5.045485496520996
    7. '        
' → logprob: -5.295485496520996
    8. 'from' → logprob: -5.420485496520996
    9. 'result' → logprob: -5.795485496520996
    10. ' n' → logprob: -6.170485496520996

Token 321: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.33001017570495605
    2. '       ' → logprob: -1.830010175704956
    3. ' total' → logprob: -2.330010175704956
    4. 'from' → logprob: -4.705010414123535
    5. 'n' → logprob: -5.455010414123535
    6. 'result' → logprob: -5.705010414123535
    7. 'dp' → logprob: -5.955010414123535
    8. ' from' → logprob: -6.830010414123535
    9. ' n' → logprob: -7.455010414123535
    10. 'all' → logprob: -7.580010414123535

Token 322: ' Using' (ID: 17511)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.013490299694240093
    2. ' total' → logprob: -4.638490200042725
    3. 'from' → logprob: -6.138490200042725
    4. '       ' → logprob: -7.763490200042725
    5. '   ' → logprob: -8.013490676879883
    6. 'result' → logprob: -8.388490676879883
    7. 'all' → logprob: -8.888490676879883
    8. 'def' → logprob: -9.388490676879883
    9. 'dp' → logprob: -9.638490676879883
    10. 'prod' → logprob: -9.763490676879883

Token 323: ' product' (ID: 1888)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0244673453271389
    2. ' ' → logprob: -4.899467468261719
    3. 'from' → logprob: -5.649467468261719
    4. 'product' → logprob: -6.024467468261719
    5. 'total' → logprob: -6.149467468261719
    6. 'prod' → logprob: -6.149467468261719
    7. 'dp' → logprob: -6.524467468261719
    8. 'pow' → logprob: -6.774467468261719
    9. ' total' → logprob: -7.524467468261719
    10. '=' → logprob: -7.774467468261719

Token 324: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0270884037017822
    2. ' =' → logprob: -1.4020884037017822
    3. '_' → logprob: -2.1520884037017822
    4. '=' → logprob: -2.7770884037017822
    5. '(
' → logprob: -2.9020884037017822
    6. 'from' → logprob: -3.5270884037017822
    7. '_of' → logprob: -3.6520884037017822
    8. 'import' → logprob: -3.7770884037017822
    9. '_=' → logprob: -4.652088165283203
    10. ' of' → logprob: -4.777088165283203

Token 325: ' each' (ID: 2454)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.3352668285369873
    2. '(' → logprob: -1.8352668285369873
    3. ' all' → logprob: -1.8352668285369873
    4. ' child' → logprob: -1.9602668285369873
    5. 'all' → logprob: -2.8352668285369873
    6. 'child' → logprob: -2.9602668285369873
    7. '(child' → logprob: -2.9602668285369873
    8. ' the' → logprob: -3.8352668285369873
    9. ' ' → logprob: -4.460267066955566
    10. ' c' → logprob: -4.710267066955566

Token 326: ' child's' (ID: 72758)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3061537444591522
    2. 'from' → logprob: -2.3061537742614746
    3. '(
' → logprob: -2.9311537742614746
    4. ',' → logprob: -4.056153774261475
    5. ' (' → logprob: -4.056153774261475
    6. '_' → logprob: -4.556153774261475
    7. 'import' → logprob: -4.681153774261475
    8. '(child' → logprob: -4.931153774261475
    9. '   ' → logprob: -5.431153774261475
    10. ')' → logprob: -5.556153774261475

Token 327: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6206356883049011
    2. '(' → logprob: -0.9956356883049011
    3. '(c' → logprob: -4.120635509490967
    4. '(child' → logprob: -4.245635509490967
    5. 'count' → logprob: -4.370635509490967
    6. ' count' → logprob: -4.495635509490967
    7. '(count' → logprob: -4.620635509490967
    8. '(
' → logprob: -5.870635509490967
    9. 's' → logprob: -5.870635509490967
    10. ' counts' → logprob: -6.120635509490967

Token 328: '1' (ID: 16)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.30984896421432495
    2. '(child' → logprob: -2.0598490238189697
    3. ' child' → logprob: -2.3098490238189697
    4. ' (' → logprob: -3.5598490238189697
    5. 'count' → logprob: -5.059848785400391
    6. '(' → logprob: -6.184848785400391
    7. ')' → logprob: -6.684848785400391
    8. ' count' → logprob: -7.809848785400391
    9. '(count' → logprob: -7.934848785400391
    10. '_child' → logprob: -9.18484878540039

Token 329: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14269974827766418
    2. '+' → logprob: -2.017699718475342
    3. ')' → logprob: -12.0177001953125
    4. ')+' → logprob: -12.1427001953125
    5. ' plus' → logprob: -12.2677001953125
    6. ' +
' → logprob: -13.2677001953125
    7. ' ' → logprob: -13.7677001953125
    8. '+c' → logprob: -14.5177001953125
    9. '+)' → logprob: -14.5177001953125
    10. ' if' → logprob: -14.6427001953125

Token 330: ' count' (ID: 3605)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.057431984692811966
    2. ' child' → logprob: -3.182431936264038
    3. 'count' → logprob: -4.932432174682617
    4. '(child' → logprob: -5.557432174682617
    5. ' (' → logprob: -6.307432174682617
    6. ' count' → logprob: -7.932432174682617
    7. ')' → logprob: -8.307432174682617
    8. 'c' → logprob: -8.557432174682617
    9. ' ' → logprob: -9.057432174682617
    10. 'counts' → logprob: -9.307432174682617

Token 331: ')' (ID: 8)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.6314446330070496
    2. '_' → logprob: -2.0064446926116943
    3. ')' → logprob: -2.1314446926116943
    4. '_)' → logprob: -2.3814446926116943
    5. '_counts' → logprob: -2.3814446926116943
    6. 's' → logprob: -4.131444454193115
    7. '_comb' → logprob: -5.631444454193115
    8. '_child' → logprob: -6.256444454193115
    9. '(' → logprob: -6.506444454193115
    10. ')_' → logprob: -6.881444454193115

Token 332: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2706753015518188
    2. ' =' → logprob: -1.8956753015518188
    3. '=' → logprob: -2.3956751823425293
    4. 'from' → logprob: -2.5206751823425293
    5. '   ' → logprob: -2.8956751823425293
    6. ')' → logprob: -3.0206751823425293
    7. '_' → logprob: -3.1456751823425293
    8. ':' → logprob: -3.2706751823425293
    9. 's' → logprob: -3.2706751823425293
    10. ' ' → logprob: -3.5206751823425293

Token 333: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009790917858481407
    2. ' ' → logprob: -4.634790897369385
    3. '```' → logprob: -11.884791374206543
    4. '   ' → logprob: -12.509791374206543
    5. ',' → logprob: -12.509791374206543
    6. '<|end|>' → logprob: -12.884791374206543
    7. '
' → logprob: -13.384791374206543
    8. ' product' → logprob: -13.634791374206543
    9. '       ' → logprob: -13.697291374206543
    10. 'product' → logprob: -13.884791374206543

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004985823179595172
    2. ' ' → logprob: -7.6254987716674805
    3. '(' → logprob: -12.75049877166748
    4. '```' → logprob: -12.75049877166748
    5. ' (' → logprob: -13.37549877166748
    6. '   ' → logprob: -14.12549877166748
    7. '
' → logprob: -14.68799877166748
    8. '{' → logprob: -15.31299877166748
    9. ',' → logprob: -15.68799877166748
    10. ' ' → logprob: -15.81299877166748

Token 335: ' because' (ID: 2236)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.266834020614624
    2. '()' → logprob: -1.641834020614624
    3. '()
' → logprob: -2.266834020614624
    4. '
' → logprob: -2.516834020614624
    5. '=' → logprob: -2.766834020614624
    6. '(
' → logprob: -2.891834020614624
    7. '(' → logprob: -3.016834020614624
    8. ' (' → logprob: -3.141834020614624
    9. ')' → logprob: -3.391834020614624
    10. '*' → logprob: -4.391834259033203

Token 336: ' at' (ID: 540)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5631940960884094
    2. '1' → logprob: -0.9381940960884094
    3. ' all' → logprob: -3.6881940364837646
    4. ' the' → logprob: -5.438194274902344
    5. ' we' → logprob: -5.688194274902344
    6. 'all' → logprob: -6.813194274902344
    7. ' for' → logprob: -7.313194274902344
    8. ' of' → logprob: -7.813194274902344
    9. ' sum' → logprob: -8.188194274902344
    10. ' product' → logprob: -8.313194274902344

Token 337: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.4337849020957947
    2. ' least' → logprob: -1.0587849617004395
    3. ' ' → logprob: -6.6837849617004395
    4. 's' → logprob: -7.9337849617004395
    5. '_le' → logprob: -8.058784484863281
    6. '   ' → logprob: -8.058784484863281
    7. ' the' → logprob: -8.433784484863281
    8. '1' → logprob: -8.683784484863281
    9. '       ' → logprob: -8.683784484863281
    10. 'all' → logprob: -8.808784484863281

Token 338: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.10522495210170746
    2. 'one' → logprob: -2.355224847793579
    3. '1' → logprob: -5.480225086212158
    4. ' ' → logprob: -7.105225086212158
    5. '_one' → logprob: -11.355224609375
    6. '   ' → logprob: -12.730224609375
    7. '```' → logprob: -15.355224609375
    8. 'One' → logprob: -15.480224609375
    9. '
' → logprob: -15.730224609375
    10. '[' → logprob: -16.230224609375

Token 339: ' chosen' (ID: 16180)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6744612455368042
    2. '=' → logprob: -1.7994612455368042
    3. '_token' → logprob: -1.7994612455368042
    4. ' =' → logprob: -1.9244612455368042
    5. ' _' → logprob: -2.6744613647460938
    6. 'token' → logprob: -3.5494613647460938
    7. ' *' → logprob: -3.6744613647460938
    8. '*' → logprob: -3.6744613647460938
    9. '_tokens' → logprob: -3.9244613647460938
    10. '_product' → logprob: -4.049461364746094

Token 340: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6270087957382202
    2. '=' → logprob: -1.5020087957382202
    3. 's' → logprob: -3.1270089149475098
    4. '_' → logprob: -3.6270089149475098
    5. '_counts' → logprob: -3.7520089149475098
    6. '(' → logprob: -4.00200891494751
    7. '       ' → logprob: -4.12700891494751
    8. '_tokens' → logprob: -4.25200891494751
    9. '_count' → logprob: -4.37700891494751
    10. ',' → logprob: -4.87700891494751

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11985337734222412
    2. ' result' → logprob: -3.2448534965515137
    3. 'result' → logprob: -3.6198534965515137
    4. ' prod' → logprob: -4.494853496551514
    5. '
' → logprob: -4.869853496551514
    6. 'prod' → logprob: -5.119853496551514
    7. 'product' → logprob: -5.869853496551514
    8. ' product' → logprob: -5.869853496551514
    9. '   ' → logprob: -5.869853496551514
    10. 'res' → logprob: -6.244853496551514

Token 342: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6618518233299255
    2. 'result' → logprob: -1.1618518829345703
    3. 'res' → logprob: -2.9118518829345703
    4. 'prod' → logprob: -2.9118518829345703
    5. 'product' → logprob: -3.6618518829345703
    6. ' result' → logprob: -4.66185188293457
    7. 'ans' → logprob: -5.16185188293457
    8. 'from' → logprob: -5.16185188293457
    9. 'total' → logprob: -5.28685188293457
    10. ' prod' → logprob: -5.53685188293457

Token 343: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2707189321517944
    2. 'prod' → logprob: -1.7707189321517944
    3. ' prod' → logprob: -2.270719051361084
    4. 'product' → logprob: -2.270719051361084
    5. 'res' → logprob: -2.645719051361084
    6. 'from' → logprob: -2.770719051361084
    7. ' result' → logprob: -2.895719051361084
    8. ' product' → logprob: -3.270719051361084
    9. '       ' → logprob: -3.645719051361084
    10. ' from' → logprob: -4.020719051361084

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030365189537405968
    2. '=' → logprob: -3.655365228652954
    3. '_com' → logprob: -6.655364990234375
    4. '_count' → logprob: -7.030364990234375
    5. 's' → logprob: -7.530364990234375
    6. '_' → logprob: -7.655364990234375
    7. '_counts' → logprob: -8.280364990234375
    8. '   ' → logprob: -8.780364990234375
    9. '_product' → logprob: -9.405364990234375
    10. '_comb' → logprob: -9.780364990234375

Token 345: ' product' (ID: 1888)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.652925431728363
    2. '(' → logprob: -1.0279254913330078
    3. 'prod' → logprob: -2.277925491333008
    4. ' (' → logprob: -5.152925491333008
    5. '(prod' → logprob: -5.777925491333008
    6. 'product' → logprob: -6.152925491333008
    7. '((' → logprob: -6.152925491333008
    8. '   ' → logprob: -6.277925491333008
    9. ' ' → logprob: -6.652925491333008
    10. 'pow' → logprob: -7.652925491333008

Token 346: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4700116217136383
    2. '((' → logprob: -1.470011591911316
    3. '([' → logprob: -2.5950117111206055
    4. ' =' → logprob: -4.0950117111206055
    5. '([(' → logprob: -4.2200117111206055
    6. '(i' → logprob: -4.8450117111206055
    7. '(
' → logprob: -4.8450117111206055
    8. '(child' → logprob: -5.0950117111206055
    9. '(c' → logprob: -5.3450117111206055
    10. '=' → logprob: -5.5950117111206055

Token 347: '1' (ID: 16)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.3303511440753937
    2. '(' → logprob: -2.4553511142730713
    3. '(count' → logprob: -2.7053511142730713
    4. '(child' → logprob: -2.7053511142730713
    5. '(x' → logprob: -3.8303511142730713
    6. '[c' → logprob: -4.33035135269165
    7. '[(' → logprob: -4.95535135269165
    8. '(cnt' → logprob: -5.58035135269165
    9. '[' → logprob: -5.70535135269165
    10. 'c' → logprob: -5.83035135269165

Token 348: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931600570678711
    2. ' +' → logprob: -0.6931600570678711
    3. '   ' → logprob: -12.943160057067871
    4. '+c' → logprob: -13.318160057067871
    5. ',' → logprob: -13.443160057067871
    6. ' ' → logprob: -13.693160057067871
    7. ')' → logprob: -14.443160057067871
    8. '*' → logprob: -14.568160057067871
    9. ' plus' → logprob: -14.568160057067871
    10. '+
' → logprob: -14.568160057067871

Token 349: ' child' (ID: 2320)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22046448290348053
    2. 'count' → logprob: -1.8454644680023193
    3. 'child' → logprob: -3.9704644680023193
    4. 'x' → logprob: -4.470464706420898
    5. 'cnt' → logprob: -5.220464706420898
    6. 'cc' → logprob: -5.845464706420898
    7. ' c' → logprob: -7.720464706420898
    8. ')' → logprob: -8.845464706420898
    9. 'counts' → logprob: -8.845464706420898
    10. '   ' → logprob: -9.595464706420898

Token 350: '_count' (ID: 7536)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0019975120667368174
    2. '_count' → logprob: -7.001997470855713
    3. '_' → logprob: -7.501997470855713
    4. ')' → logprob: -8.376997947692871
    5. 'counts' → logprob: -9.876997947692871
    6. 'count' → logprob: -10.251997947692871
    7. '_com' → logprob: -10.376997947692871
    8. '```' → logprob: -10.376997947692871
    9. 's' → logprob: -10.626997947692871
    10. '_comb' → logprob: -10.876997947692871

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02760087326169014
    2. 's' → logprob: -4.7776007652282715
    3. ' )' → logprob: -4.7776007652282715
    4. ' for' → logprob: -5.2776007652282715
    5. '())' → logprob: -6.0276007652282715
    6. 'for' → logprob: -6.6526007652282715
    7. '[' → logprob: -8.40260124206543
    8. '(token' → logprob: -8.77760124206543
    9. '()' → logprob: -8.90260124206543
    10. '   ' → logprob: -9.15260124206543

Token 352: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.047440268099308014
    2. '-' → logprob: -3.29744029045105
    3. '       ' → logprob: -5.422440052032471
    4. ')' → logprob: -5.672440052032471
    5. '()' → logprob: -7.922440052032471
    6. ' ' → logprob: -8.172440528869629
    7. '()-' → logprob: -8.422440528869629
    8. 'def' → logprob: -9.047440528869629
    9. ')-' → logprob: -9.047440528869629
    10. 'import' → logprob: -9.547440528869629

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003693013568408787
    2. ' ' → logprob: -8.62536907196045
    3. '(' → logprob: -8.75036907196045
    4. ' (' → logprob: -10.37536907196045
    5. '   ' → logprob: -16.875370025634766
    6. '```' → logprob: -16.875370025634766
    7. '(
' → logprob: -18.125370025634766
    8. '(mod' → logprob: -18.500370025634766
    9. '[' → logprob: -18.625370025634766
    10. '(M' → logprob: -18.750370025634766

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003819332632701844
    2. '(' → logprob: -8.125381469726562
    3. ' ' → logprob: -10.000381469726562
    4. ' (' → logprob: -10.125381469726562
    5. '(mod' → logprob: -16.000381469726562
    6. '   ' → logprob: -16.375381469726562
    7. '(M' → logprob: -17.250381469726562
    8. '```' → logprob: -17.250381469726562
    9. '(
' → logprob: -17.812881469726562
    10. '(int' → logprob: -18.125381469726562

Token 355: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15604782104492188
    2. ')' → logprob: -2.656047821044922
    3. '
' → logprob: -3.406047821044922
    4. ' if' → logprob: -3.531047821044922
    5. '<|end|>' → logprob: -5.031047821044922
    6. 'if' → logprob: -6.906047821044922
    7. '<|end|>' → logprob: -7.156047821044922
    8. ' +' → logprob: -7.156047821044922
    9. '   ' → logprob: -7.656047821044922
    10. '()' → logprob: -7.906047821044922

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17004403471946716
    2. '
' → logprob: -2.0450439453125
    3. ')' → logprob: -4.9200439453125
    4. '        
' → logprob: -5.4200439453125
    5. ' if' → logprob: -5.5450439453125
    6. ' 
' → logprob: -6.1700439453125
    7. '   ' → logprob: -6.4200439453125
    8. ',' → logprob: -6.9200439453125
    9. '    
' → logprob: -7.1700439453125
    10. '  
' → logprob: -7.4200439453125

Token 357: ' ways' (ID: 6984)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03032771684229374
    2. 'result' → logprob: -4.655327796936035
    3. 'product' → logprob: -5.155327796936035
    4. 'return' → logprob: -6.405327796936035
    5. ' result' → logprob: -6.530327796936035
    6. ' product' → logprob: -6.530327796936035
    7. 'total' → logprob: -6.905327796936035
    8. '   ' → logprob: -6.905327796936035
    9. ' if' → logprob: -7.155327796936035
    10. '
' → logprob: -7.405327796936035

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003601974807679653
    2. '=' → logprob: -5.628602027893066
    3. ' ' → logprob: -13.503602027893066
    4. ':' → logprob: -15.628602027893066
    5. '   ' → logprob: -15.753602027893066
    6. ',' → logprob: -16.62860107421875
    7. ' *=' → logprob: -16.75360107421875
    8. ')' → logprob: -17.00360107421875
    9. ' ' → logprob: -17.12860107421875
    10. '  ' → logprob: -18.75360107421875

Token 359: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.196732960641384e-05
    2. '       ' → logprob: -10.125082015991211
    3. '   ' → logprob: -10.625082015991211
    4. ' ' → logprob: -11.000082015991211
    5. '(' → logprob: -15.125082015991211
    6. '     ' → logprob: -16.00008201599121
    7. '      ' → logprob: -16.37508201599121
    8. '```' → logprob: -16.37508201599121
    9. '           ' → logprob: -16.62508201599121
    10. '  ' → logprob: -16.87508201599121

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.87500286102295
    3. '(' → logprob: -14.25000286102295
    4. 'prod' → logprob: -14.75000286102295
    5. 'MOD' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.125001907348633
    7. 'pow' → logprob: -16.375001907348633
    8. 'product' → logprob: -16.875001907348633
    9. '```' → logprob: -17.750001907348633
    10. 'mod' → logprob: -19.187501907348633

Token 361: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24113638699054718
    2. '<|end|>' → logprob: -2.491136312484741
    3. 'for' → logprob: -2.741136312484741
    4. ' for' → logprob: -2.991136312484741
    5. '*' → logprob: -4.99113655090332
    6. '<|end|>' → logprob: -5.24113655090332
    7. ' *' → logprob: -6.99113655090332
    8. '   ' → logprob: -7.11613655090332
    9. '        
' → logprob: -7.61613655090332
    10. '
' → logprob: -7.61613655090332

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30839505791664124
    2. 'for' → logprob: -1.8083950281143188
    3. ' for' → logprob: -3.0583951473236084
    4. '*' → logprob: -3.6833951473236084
    5. '
' → logprob: -4.183394908905029
    6. '<|end|>' → logprob: -5.058394908905029
    7. '   ' → logprob: -5.683394908905029
    8. ' *' → logprob: -6.308394908905029
    9. '<|end|>' → logprob: -7.558394908905029
    10. '    
' → logprob: -8.058395385742188

Token 363: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1282772570848465
    2. ' for' → logprob: -2.12827730178833
    3. '       ' → logprob: -6.62827730178833
    4. '	for' → logprob: -11.003276824951172
    5. '   ' → logprob: -11.878276824951172
    6. ' ' → logprob: -14.878276824951172
    7. '    ' → logprob: -15.003276824951172
    8. '        ' → logprob: -15.003276824951172
    9. '*' → logprob: -15.378276824951172
    10. '           ' → logprob: -15.503276824951172

Token 364: ' c' (ID: 274)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.28777042031288147
    2. 'c' → logprob: -1.537770390510559
    3. 'cnt' → logprob: -3.5377705097198486
    4. 'cc' → logprob: -5.2877702713012695
    5. 'child' → logprob: -6.9127702713012695
    6. ' c' → logprob: -9.91277027130127
    7. ' count' → logprob: -10.78777027130127
    8. 'ct' → logprob: -12.28777027130127
    9. ' cnt' → logprob: -12.66277027130127
    10. 'counts' → logprob: -14.16277027130127

Token 365: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005628820043057203
    2. 'in' → logprob: -5.25562858581543
    3. 'ount' → logprob: -9.00562858581543
    4. 'c' → logprob: -9.25562858581543
    5. ' ' → logprob: -9.63062858581543
    6. '_' → logprob: -10.13062858581543
    7. '   ' → logprob: -11.25562858581543
    8. 'i' → logprob: -11.38062858581543
    9. ' c' → logprob: -11.50562858581543
    10. '	in' → logprob: -11.75562858581543

Token 366: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -4.572941179503687e-05
    2. ' child' → logprob: -10.000045776367188
    3. '(child' → logprob: -16.125045776367188
    4. '	child' → logprob: -17.000045776367188
    5. 'c' → logprob: -17.375045776367188
    6. '[' → logprob: -17.875045776367188
    7. '   ' → logprob: -18.500045776367188
    8. '.child' → logprob: -18.500045776367188
    9. ' ' → logprob: -18.875045776367188
    10. '  ' → logprob: -21.125045776367188

Token 367: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.688212614681106e-05
    2. 'counts' → logprob: -11.750017166137695
    3. 's' → logprob: -12.125017166137695
    4. '_' → logprob: -13.000017166137695
    5. '_count' → logprob: -15.000017166137695
    6. '   ' → logprob: -15.875017166137695
    7. ' counts' → logprob: -16.000017166137695
    8. '_c' → logprob: -16.125017166137695
    9. '_
' → logprob: -16.500017166137695
    10. '_children' → logprob: -16.625017166137695

Token 368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04312023147940636
    2. ':
' → logprob: -3.2931201457977295
    3. ',' → logprob: -6.543120384216309
    4. '   ' → logprob: -6.918120384216309
    5. '       ' → logprob: -7.168120384216309
    6. '):
' → logprob: -7.418120384216309
    7. '):' → logprob: -7.668120384216309
    8. ')' → logprob: -8.168120384216309
    9. '+' → logprob: -8.293120384216309
    10. '=' → logprob: -10.168120384216309

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016982723027467728
    2. 'ways' → logprob: -6.5016984939575195
    3. ' ways' → logprob: -9.00169849395752
    4. '       ' → logprob: -10.25169849395752
    5. ',' → logprob: -11.75169849395752
    6. '               ' → logprob: -11.75169849395752
    7. '          ' → logprob: -12.25169849395752
    8. '1' → logprob: -12.62669849395752
    9. '            ' → logprob: -13.12669849395752
    10. '            
' → logprob: -13.12669849395752

Token 370: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.023508911952376366
    2. ' ways' → logprob: -3.7735090255737305
    3. '           ' → logprob: -8.27350902557373
    4. '               ' → logprob: -12.52350902557373
    5. 'WAYS' → logprob: -13.27350902557373
    6. '       ' → logprob: -13.52350902557373
    7. 'way' → logprob: -14.52350902557373
    8. '(' → logprob: -14.52350902557373
    9. 'Ways' → logprob: -15.77350902557373
    10. '   ' → logprob: -15.89850902557373

Token 371: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.005517969373613596
    2. ' *=' → logprob: -5.255517959594727
    3. '*' → logprob: -8.755517959594727
    4. '=' → logprob: -9.005517959594727
    5. '   ' → logprob: -13.130517959594727
    6. ' =' → logprob: -13.255517959594727
    7. '```' → logprob: -16.505517959594727
    8. '\' → logprob: -17.630517959594727
    9. ' ' → logprob: -17.880517959594727
    10. '	' → logprob: -18.005517959594727

Token 372: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008525127195753157
    2. 'ways' → logprob: -7.750852584838867
    3. ' (' → logprob: -7.875852584838867
    4. '(w' → logprob: -10.125852584838867
    5. ' ways' → logprob: -14.250852584838867
    6. '(m' → logprob: -15.000852584838867
    7. '(mod' → logprob: -15.875852584838867
    8. 'w' → logprob: -16.125852584838867
    9. '   ' → logprob: -16.250852584838867
    10. '(e' → logprob: -16.500852584838867

Token 373: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -2.3795937522663735e-05
    2. ' ways' → logprob: -10.87502384185791
    3. '(' → logprob: -12.37502384185791
    4. 'WAYS' → logprob: -14.87502384185791
    5. '   ' → logprob: -17.125022888183594
    6. 'way' → logprob: -17.250022888183594
    7. 'Ways' → logprob: -17.250022888183594
    8. '```' → logprob: -17.375022888183594
    9. 'w' → logprob: -18.750022888183594
    10. ' (' → logprob: -18.750022888183594

Token 374: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931538581848145
    2. ' *' → logprob: -0.6931538581848145
    3. '*(' → logprob: -11.943153381347656
    4. '**' → logprob: -16.818153381347656
    5. ' ' → logprob: -17.068153381347656
    6. ' ' → logprob: -17.068153381347656
    7. '   ' → logprob: -17.193153381347656
    8. '```' → logprob: -17.693153381347656
    9. '*object' → logprob: -18.193153381347656
    10. ')' → logprob: -18.318153381347656

Token 375: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.703705370426178
    2. '(c' → logprob: -0.703705370426178
    3. ' (' → logprob: -4.578705310821533
    4. '((' → logprob: -8.453705787658691
    5. '(C' → logprob: -12.328705787658691
    6. '(q' → logprob: -12.703705787658691
    7. '(p' → logprob: -12.828705787658691
    8. '(M' → logprob: -12.953705787658691
    9. ' ((' → logprob: -14.078705787658691
    10. '(m' → logprob: -14.203705787658691

Token 376: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13882192969322205
    2. '(c' → logprob: -2.763821840286255
    3. '(' → logprob: -3.138821840286255
    4. '1' → logprob: -3.763821840286255
    5. ' (' → logprob: -10.638821601867676
    6. ' c' → logprob: -11.638821601867676
    7. '2' → logprob: -14.388821601867676
    8. '{' → logprob: -14.513821601867676
    9. ')c' → logprob: -14.513821601867676
    10. '((' → logprob: -14.638821601867676

Token 377: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12713168561458588
    2. ' +' → logprob: -2.127131700515747
    3. '+c' → logprob: -8.502131462097168
    4. '+
' → logprob: -15.252131462097168
    5. ' +
' → logprob: -17.002132415771484
    6. ' ' → logprob: -17.002132415771484
    7. ')+' → logprob: -17.252132415771484
    8. 'c' → logprob: -17.377132415771484
    9. '+C' → logprob: -17.377132415771484
    10. ' plus' → logprob: -17.752132415771484

Token 378: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014036978245712817
    2. ' c' → logprob: -8.875140190124512
    3. ')c' → logprob: -14.750140190124512
    4. '(c' → logprob: -17.875141143798828
    5. '	c' → logprob: -18.125141143798828
    6. '_c' → logprob: -19.250141143798828
    7. '[c' → logprob: -19.375141143798828
    8. '*c' → logprob: -19.500141143798828
    9. '$c' → logprob: -19.750141143798828
    10. ')' → logprob: -19.875141143798828

Token 379: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -5.2524021157296374e-05
    2. ' ))' → logprob: -10.250052452087402
    3. ')' → logprob: -11.000052452087402
    4. '   ' → logprob: -16.50005340576172
    5. ')))' → logprob: -16.62505340576172
    6. ')%' → logprob: -16.62505340576172
    7. ')
' → logprob: -17.87505340576172
    8. '       ' → logprob: -18.00005340576172
    9. '))
' → logprob: -18.12505340576172
    10. ''))' → logprob: -18.12505340576172

Token 380: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5760502219200134
    2. ' %' → logprob: -0.8260502219200134
    3. ')%' → logprob: -9.5760498046875
    4. ')' → logprob: -10.9510498046875
    5. ' %=' → logprob: -11.3260498046875
    6. '       ' → logprob: -12.0760498046875
    7. 'ways' → logprob: -13.7010498046875
    8. '
' → logprob: -14.0760498046875
    9. '%c' → logprob: -14.7010498046875
    10. '%=' → logprob: -14.8260498046875

Token 381: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: 0.0
    2. ' MOD' → logprob: -17.0
    3. 'MO' → logprob: -22.125
    4. '_MOD' → logprob: -23.125
    5. '.MOD' → logprob: -23.75
    6. 'MD' → logprob: -23.875
    7. 'MODULE' → logprob: -24.125
    8. 'MODE' → logprob: -24.5
    9. '   ' → logprob: -25.625
    10. '
' → logprob: -25.75

Token 382: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13870902359485626
    2. '
' → logprob: -2.26370906829834
    3. ' if' → logprob: -4.76370906829834
    4. '        
' → logprob: -4.76370906829834
    5. 'if' → logprob: -4.88870906829834
    6. '<|end|>' → logprob: -8.38870906829834
    7. '    
' → logprob: -8.76370906829834
    8. ' 
' → logprob: -9.13870906829834
    9. '  
' → logprob: -9.26370906829834
    10. 'return' → logprob: -9.51370906829834

Token 383: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5553908348083496
    2. ' if' → logprob: -1.4303908348083496
    3. '       ' → logprob: -1.6803908348083496
    4. 'return' → logprob: -8.305391311645508
    5. '
' → logprob: -9.055391311645508
    6. '        
' → logprob: -9.430391311645508
    7. '   ' → logprob: -9.680391311645508
    8. '	if' → logprob: -10.680391311645508
    9. ' return' → logprob: -11.055391311645508
    10. '```' → logprob: -11.055391311645508

Token 384: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04076208174228668
    2. '       ' → logprob: -3.540762186050415
    3. ' if' → logprob: -5.165761947631836
    4. 'return' → logprob: -5.415761947631836
    5. 'ways' → logprob: -7.165761947631836
    6. ' return' → logprob: -11.165761947631836
    7. ' ways' → logprob: -11.915761947631836
    8. '   ' → logprob: -13.415761947631836
    9. 'result' → logprob: -14.415761947631836
    10. '	if' → logprob: -15.165761947631836

Token 385: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.42270761728286743
    2. 'self' → logprob: -1.7977075576782227
    3. ' not' → logprob: -1.7977075576782227
    4. ' self' → logprob: -4.422707557678223
    5. '   ' → logprob: -7.172707557678223
    6. '       ' → logprob: -7.922707557678223
    7. '           ' → logprob: -8.422707557678223
    8. ' ' → logprob: -12.172707557678223
    9. '               ' → logprob: -13.047707557678223
    10. '(not' → logprob: -13.047707557678223

Token 386: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018151111900806427
    2. ' self' → logprob: -4.01815128326416
    3. '(self' → logprob: -14.14315128326416
    4. '[self' → logprob: -15.26815128326416
    5. '       ' → logprob: -16.018150329589844
    6. 'optional' → logprob: -17.143150329589844
    7. '	self' → logprob: -17.268150329589844
    8. '   ' → logprob: -18.143150329589844
    9. '=self' → logprob: -18.893150329589844
    10. 'Optional' → logprob: -18.893150329589844

Token 387: '.optional' (ID: 184220)
  Prédit: '.optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.optional' → logprob: -3.054500666621607e-06
    2. 'optional' → logprob: -13.12500286102295
    3. '.opt' → logprob: -14.37500286102295
    4. '.' → logprob: -15.25000286102295
    5. ' .' → logprob: -15.62500286102295
    6. '.Optional' → logprob: -17.500003814697266
    7. '_optional' → logprob: -17.750003814697266
    8. '.required' → logprob: -17.750003814697266
    9. '.option' → logprob: -19.125003814697266
    10. '.optim' → logprob: -19.625003814697266

Token 388: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4740949273109436
    2. ':
' → logprob: -0.9740949273109436
    3. ' :
' → logprob: -12.599095344543457
    4. ':
' → logprob: -12.849095344543457
    5. '           ' → logprob: -12.849095344543457
    6. ' :' → logprob: -12.974095344543457
    7. '):
' → logprob: -13.099095344543457
    8. ':

' → logprob: -13.224095344543457
    9. '       ' → logprob: -13.474095344543457
    10. '   ' → logprob: -14.599095344543457

Token 389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03286067396402359
    2. 'ways' → logprob: -3.53286075592041
    3. ' ways' → logprob: -5.78286075592041
    4. '	       ' → logprob: -11.78286075592041
    5. '		' → logprob: -12.03286075592041
    6. 'WAYS' → logprob: -12.78286075592041
    7. 'return' → logprob: -12.90786075592041
    8. '               ' → logprob: -13.65786075592041
    9. ' return' → logprob: -14.03286075592041
    10. '       ' → logprob: -14.03286075592041

Token 390: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.016608083620667458
    2. ' ways' → logprob: -4.141608238220215
    3. '       ' → logprob: -7.891608238220215
    4. '           ' → logprob: -9.141608238220215
    5. 'return' → logprob: -9.391608238220215
    6. ' return' → logprob: -12.016608238220215
    7. '   ' → logprob: -13.641608238220215
    8. 'WAYS' → logprob: -14.016608238220215
    9. 'way' → logprob: -14.891608238220215
    10. '               ' → logprob: -15.016608238220215

Token 391: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5123600363731384
    2. '-=' → logprob: -1.0123600959777832
    3. ' -=' → logprob: -3.762360095977783
    4. ' =' → logprob: -4.262360095977783
    5. '   ' → logprob: -8.637359619140625
    6. '-' → logprob: -10.262359619140625
    7. '=(' → logprob: -10.887359619140625
    8. '+=' → logprob: -12.512359619140625
    9. ' ' → logprob: -12.887359619140625
    10. '  ' → logprob: -13.262359619140625

Token 392: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001706367009319365
    2. ' (' → logprob: -6.626706600189209
    3. '(w' → logprob: -7.876706600189209
    4. '   ' → logprob: -15.12670612335205
    5. 'ways' → logprob: -15.37670612335205
    6. '(mod' → logprob: -16.251707077026367
    7. '           ' → logprob: -16.376707077026367
    8. '(max' → logprob: -16.751707077026367
    9. '       ' → logprob: -17.001707077026367
    10. '(values' → logprob: -17.876707077026367

Token 393: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00014537633978761733
    2. '(' → logprob: -8.875144958496094
    3. ' ways' → logprob: -12.250144958496094
    4. 'WAYS' → logprob: -14.875144958496094
    5. ' (' → logprob: -15.625144958496094
    6. 'way' → logprob: -15.875144958496094
    7. 'w' → logprob: -18.750144958496094
    8. '(w' → logprob: -18.875144958496094
    9. '
' → logprob: -19.625144958496094
    10. ')' → logprob: -19.875144958496094

Token 394: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10020720958709717
    2. '-' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.350207328796387
    4. '   ' → logprob: -15.600207328796387
    5. '+' → logprob: -16.85020637512207
    6. ' ' → logprob: -16.97520637512207
    7. '  ' → logprob: -17.60020637512207
    8. '1' → logprob: -17.72520637512207
    9. '−' → logprob: -17.85020637512207
    10. '```' → logprob: -18.35020637512207

Token 395: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.375019073486328
    4. ')' → logprob: -18.750019073486328
    5. '```' → logprob: -19.500019073486328
    6. '<|end|>' → logprob: -20.500019073486328
    7. '       ' → logprob: -21.500019073486328
    8. '
' → logprob: -21.687519073486328
    9. '  ' → logprob: -21.812519073486328
    10. '۱' → logprob: -21.812519073486328

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.000001907348633
    4. ')' → logprob: -17.375001907348633
    5. '```' → logprob: -18.875001907348633
    6. '
' → logprob: -19.125001907348633
    7. '<|end|>' → logprob: -20.500001907348633
    8. '       ' → logprob: -20.625001907348633
    9. '{
' → logprob: -20.812501907348633
    10. '۱' → logprob: -21.062501907348633

Token 397: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034761743154376745
    2. ' +' → logprob: -5.878476142883301
    3. ' )' → logprob: -8.0034761428833
    4. '+' → logprob: -8.1284761428833
    5. ')%' → logprob: -10.3784761428833
    6. '       ' → logprob: -11.8784761428833
    7. '           ' → logprob: -12.6284761428833
    8. '+)' → logprob: -15.5034761428833
    9. '               ' → logprob: -15.7534761428833
    10. '   ' → logprob: -16.253477096557617

Token 398: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.05942939221858978
    2. '%' → logprob: -2.934429407119751
    3. '       ' → logprob: -5.434429168701172
    4. ')' → logprob: -9.559429168701172
    5. ' if' → logprob: -10.434429168701172
    6. '
' → logprob: -11.434429168701172
    7. '   ' → logprob: -11.434429168701172
    8. ' or' → logprob: -11.559429168701172
    9. ')%' → logprob: -11.684429168701172
    10. ' else' → logprob: -11.934429168701172

Token 399: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.5048530030981055e-06
    2. ' MOD' → logprob: -13.500001907348633
    3. '_MOD' → logprob: -22.750001907348633
    4. '.MOD' → logprob: -24.125001907348633
    5. 'MO' → logprob: -27.250001907348633
    6. 'MD' → logprob: -27.750001907348633
    7. 'MODULE' → logprob: -27.750001907348633
    8. 'MAD' → logprob: -28.125001907348633
    9. 'MODE' → logprob: -28.875001907348633
    10. 'M' → logprob: -29.250001907348633

Token 400: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0723293200135231
    2. 'return' → logprob: -3.19732928276062
    3. '
' → logprob: -3.57232928276062
    4. ' return' → logprob: -7.572329521179199
    5. '        
' → logprob: -8.3223295211792
    6. '	return' → logprob: -11.4473295211792
    7. '<|end|>' → logprob: -11.4473295211792
    8. '   ' → logprob: -11.6973295211792
    9. '  
' → logprob: -12.1973295211792
    10. '
' → logprob: -12.1973295211792

Token 401: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6520519256591797
    2. '       ' → logprob: -0.9020519256591797
    3. '
' → logprob: -2.6520519256591797
    4. ' return' → logprob: -6.15205192565918
    5. 'else' → logprob: -7.90205192565918
    6. '        
' → logprob: -9.02705192565918
    7. '
' → logprob: -9.77705192565918
    8. '	return' → logprob: -10.40205192565918
    9. '   ' → logprob: -11.52705192565918
    10. ' else' → logprob: -11.52705192565918

Token 402: ' exclude' (ID: 39566)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2108592540025711
    2. ' return' → logprob: -1.8358592987060547
    3. '       ' → logprob: -3.5858592987060547
    4. '
' → logprob: -6.210859298706055
    5. '           ' → logprob: -8.085859298706055
    6. ')' → logprob: -8.585859298706055
    7. '```' → logprob: -9.335859298706055
    8. '<|end|>' → logprob: -9.835859298706055
    9. '	return' → logprob: -10.585859298706055
    10. '        
' → logprob: -10.585859298706055

Token 403: ' '' (ID: 461)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1752394437789917
    2. ' empty' → logprob: -1.1752394437789917
    3. 'empty' → logprob: -1.8002394437789917
    4. 'the' → logprob: -1.9252394437789917
    5. '0' → logprob: -3.1752395629882812
    6. ' no' → logprob: -4.425239562988281
    7. ' zero' → logprob: -4.550239562988281
    8. 'no' → logprob: -5.550239562988281
    9. 'zero' → logprob: -6.300239562988281
    10. ' ' → logprob: -7.175239562988281

Token 404: 'choose' (ID: 47312)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3431017994880676
    2. 'empty' → logprob: -2.093101739883423
    3. 'no' → logprob: -2.343101739883423
    4. ' no' → logprob: -3.843101739883423
    5. 'the' → logprob: -4.218101978302002
    6. ' empty' → logprob: -4.593101978302002
    7. ' ' → logprob: -5.093101978302002
    8. 'zero' → logprob: -5.093101978302002
    9. ' the' → logprob: -5.218101978302002
    10. 'not' → logprob: -6.093101978302002

Token 405: ' none' (ID: 12698)
  Prédit: ' none'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' none' → logprob: -0.7239511609077454
    2. 'none' → logprob: -0.9739511609077454
    3. ' no' → logprob: -2.4739511013031006
    4. 'no' → logprob: -2.9739511013031006
    5. '0' → logprob: -6.34895133972168
    6. ' nothing' → logprob: -8.97395133972168
    7. ' ' → logprob: -8.97395133972168
    8. 'nothing' → logprob: -9.09895133972168
    9. ' zero' → logprob: -10.22395133972168
    10. '   ' → logprob: -10.59895133972168

Token 406: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026077566668391228
    2. '')' → logprob: -4.276077747344971
    3. 'option' → logprob: -4.651077747344971
    4. ' option' → logprob: -6.151077747344971
    5. 'case' → logprob: -10.526077270507812
    6. '')
' → logprob: -10.526077270507812
    7. ')' → logprob: -10.776077270507812
    8. ')'' → logprob: -10.901077270507812
    9. ' '' → logprob: -11.026077270507812
    10. 'choice' → logprob: -11.151077270507812

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14130738377571106
    2. 'return' → logprob: -2.1413073539733887
    3. '
' → logprob: -4.641307353973389
    4. ' return' → logprob: -5.391307353973389
    5. '        
' → logprob: -10.391307830810547
    6. '   ' → logprob: -11.516307830810547
    7. 'else' → logprob: -11.516307830810547
    8. '	return' → logprob: -11.641307830810547
    9. '           ' → logprob: -12.766307830810547
    10. '```' → logprob: -12.891307830810547

Token 408: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7060691118240356
    2. 'return' → logprob: -0.7060691118240356
    3. ' return' → logprob: -4.456068992614746
    4. '
' → logprob: -7.206068992614746
    5. '	return' → logprob: -7.956068992614746
    6. '	' → logprob: -9.956068992614746
    7. '        
' → logprob: -10.331068992614746
    8. '   ' → logprob: -10.831068992614746
    9. 'eturn' → logprob: -11.331068992614746
    10. '<|end|>' → logprob: -11.831068992614746

Token 409: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009163170121610165
    2. '       ' → logprob: -4.7591633796691895
    3. ' return' → logprob: -7.5091633796691895
    4. '   ' → logprob: -15.759162902832031
    5. '	return' → logprob: -16.00916290283203
    6. '
' → logprob: -16.50916290283203
    7. '        
' → logprob: -18.50916290283203
    8. 'eturn' → logprob: -18.63416290283203
    9. '```' → logprob: -19.00916290283203
    10. '           ' → logprob: -19.38416290283203

Token 410: ' optional' (ID: 18297)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.604455292224884
    2. ':
' → logprob: -1.9794552326202393
    3. ' return' → logprob: -2.1044552326202393
    4. '       ' → logprob: -2.2294552326202393
    5. '           ' → logprob: -2.9794552326202393
    6. ':' → logprob: -3.8544552326202393
    7. ':return' → logprob: -4.604455471038818
    8. 'ways' → logprob: -7.104455471038818
    9. '#' → logprob: -7.104455471038818
    10. '   ' → logprob: -7.354455471038818

Token 411: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3168697655200958
    2. 'return' → logprob: -1.8168697357177734
    3. ' return' → logprob: -2.3168697357177734
    4. '
' → logprob: -4.691869735717773
    5. '        
' → logprob: -7.191869735717773
    6. ':return' → logprob: -8.691869735717773
    7. ' 
' → logprob: -9.441869735717773
    8. '	return' → logprob: -9.691869735717773
    9. ' else' → logprob: -10.441869735717773
    10. '            
' → logprob: -10.566869735717773

Token 412: ' can' (ID: 665)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6527266502380371
    2. 'pass' → logprob: -1.277726650238037
    3. ' pass' → logprob: -2.152726650238037
    4. ' return' → logprob: -2.652726650238037
    5. '       ' → logprob: -4.777726650238037
    6. 'ways' → logprob: -5.902726650238037
    7. '#' → logprob: -6.152726650238037
    8. ' ways' → logprob: -7.527726650238037
    9. '           ' → logprob: -8.777727127075195
    10. ' #' → logprob: -10.027727127075195

Token 413: ' choose' (ID: 5655)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.07162613421678543
    2. ' choose' → logprob: -2.6966261863708496
    3. 'include' → logprob: -7.32162618637085
    4. '_choose' → logprob: -8.571625709533691
    5. 'also' → logprob: -8.821625709533691
    6. 'ways' → logprob: -8.821625709533691
    7. ' also' → logprob: -9.196625709533691
    8. ' include' → logprob: -9.321625709533691
    9. '       ' → logprob: -9.446625709533691
    10. ' be' → logprob: -10.196625709533691

Token 414: ' empty' (ID: 8213)
  Prédit: 'none'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'none' → logprob: -0.1373799741268158
    2. 'ways' → logprob: -2.8873798847198486
    3. ' none' → logprob: -3.5123798847198486
    4. ' ways' → logprob: -3.8873798847198486
    5. 'no' → logprob: -4.012380123138428
    6. ' no' → logprob: -6.262380123138428
    7. '0' → logprob: -6.387380123138428
    8. 'nothing' → logprob: -8.63737964630127
    9. 'all' → logprob: -8.76237964630127
    10. 'any' → logprob: -9.26237964630127

Token 415: ' subset' (ID: 58845)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5695906281471252
    2. 'return' → logprob: -1.3195905685424805
    3. '       ' → logprob: -1.9445905685424805
    4. '        
' → logprob: -4.4445905685424805
    5. '
' → logprob: -4.6945905685424805
    6. ' subset' → logprob: -7.1945905685424805
    7. ' 
' → logprob: -8.06959056854248
    8. 'subset' → logprob: -8.19459056854248
    9. '<|end|>' → logprob: -8.19459056854248
    10. ' space' → logprob: -8.44459056854248

Token 416: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01275602076202631
    2. 'return' → logprob: -4.762755870819092
    3. ' return' → logprob: -6.262755870819092
    4. '
' → logprob: -6.262755870819092
    5. '        
' → logprob: -8.76275634765625
    6. '<|end|>' → logprob: -9.38775634765625
    7. '<|end|>' → logprob: -10.26275634765625
    8. '    
' → logprob: -12.01275634765625
    9. '   ' → logprob: -12.01275634765625
    10. '	return' → logprob: -12.26275634765625

Token 417: ' so' (ID: 813)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011112547479569912
    2. ' return' → logprob: -4.761112689971924
    3. '       ' → logprob: -6.011112689971924
    4. '#' → logprob: -11.011112213134766
    5. '
' → logprob: -11.011112213134766
    6. 'ways' → logprob: -12.261112213134766
    7. ' ways' → logprob: -13.511112213134766
    8. '        
' → logprob: -14.011112213134766
    9. 'pass' → logprob: -14.386112213134766
    10. '	return' → logprob: -14.761112213134766

Token 418: ' ways' (ID: 6984)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2536391615867615
    2. 'ways' → logprob: -2.7536392211914062
    3. ' return' → logprob: -2.8786392211914062
    4. ' ways' → logprob: -2.8786392211914062
    5. 'pass' → logprob: -3.2536392211914062
    6. ' pass' → logprob: -4.753639221191406
    7. '       ' → logprob: -7.628639221191406
    8. 'continue' → logprob: -10.253639221191406
    9. '           ' → logprob: -10.753639221191406
    10. '   ' → logprob: -10.878639221191406

Token 419: ' keep' (ID: 3357)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5748703479766846
    2. '=' → logprob: -0.9498703479766846
    3. '       ' → logprob: -3.8248703479766846
    4. ' return' → logprob: -4.4498701095581055
    5. ' =' → logprob: -4.9498701095581055
    6. '+=' → logprob: -5.8248701095581055
    7. ' is' → logprob: -6.4498701095581055
    8. ' remains' → logprob: -6.6998701095581055
    9. 'remain' → logprob: -7.5748701095581055
    10. '
' → logprob: -7.6998701095581055

Token 420: '

' (ID: 279)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.4907456338405609
    2. 'ways' → logprob: -1.2407456636428833
    3. ' as' → logprob: -2.3657455444335938
    4. ' ways' → logprob: -6.115745544433594
    5. 'the' → logprob: -7.240745544433594
    6. 'unch' → logprob: -7.615745544433594
    7. 'being' → logprob: -7.990745544433594
    8. 'going' → logprob: -7.990745544433594
    9. '=' → logprob: -9.240745544433594
    10. 'way' → logprob: -9.365745544433594

Token 421: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.48607707023620605
    2. '       ' → logprob: -0.986077070236206
    3. ' return' → logprob: -4.486077308654785
    4. '	return' → logprob: -7.736077308654785
    5. '
' → logprob: -8.861077308654785
    6. '	' → logprob: -10.486077308654785
    7. '   ' → logprob: -10.986077308654785
    8. ':return' → logprob: -11.361077308654785
    9. '        
' → logprob: -11.486077308654785
    10. '<|end|>' → logprob: -11.986077308654785

Token 422: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001964082010090351
    2. '       ' → logprob: -6.251964092254639
    3. ' return' → logprob: -10.25196361541748
    4. '	return' → logprob: -16.876964569091797
    5. '   ' → logprob: -17.626964569091797
    6. '{return' → logprob: -18.751964569091797
    7. '
' → logprob: -19.001964569091797
    8. 'eturn' → logprob: -19.376964569091797
    9. '```' → logprob: -19.501964569091797
    10. ':return' → logprob: -20.251964569091797

Token 423: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -2.165027217415627e-05
    2. ' ways' → logprob: -10.750021934509277
    3. 'way' → logprob: -15.750021934509277
    4. 'WAYS' → logprob: -19.25002098083496
    5. '   ' → logprob: -19.50002098083496
    6. '       ' → logprob: -20.37502098083496
    7. 'words' → logprob: -21.50002098083496
    8. 'works' → logprob: -21.62502098083496
    9. 'Ways' → logprob: -21.62502098083496
    10. '```' → logprob: -21.87502098083496

Token 424: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.20274651050567627
    2. '
' → logprob: -1.8277465105056763
    3. '<|end|>' → logprob: -3.8277463912963867
    4. ' class' → logprob: -8.202746391296387
    5. ')' → logprob: -8.577746391296387
    6. '

' → logprob: -9.077746391296387
    7. '    
' → logprob: -9.577746391296387
    8. '<|end|>' → logprob: -9.827746391296387
    9. '<class' → logprob: -9.952746391296387
    10. '```' → logprob: -10.077746391296387

Token 425: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.908022285439074e-05
    2. ' class' → logprob: -9.875059127807617
    3. ')' → logprob: -13.125059127807617
    4. '
' → logprob: -13.250059127807617
    5. '<class' → logprob: -13.250059127807617
    6. '<|end|>' → logprob: -14.375059127807617
    7. 'and' → logprob: -15.125059127807617
    8. '"class' → logprob: -15.250059127807617
    9. '#' → logprob: -15.375059127807617
    10. 'Class' → logprob: -16.000059127807617

Token 426: ' Alt' (ID: 26421)
  Prédit: 'And'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'And' → logprob: -4.251091377227567e-05
    2. ' And' → logprob: -10.125042915344238
    3. 'X' → logprob: -13.500042915344238
    4. 'and' → logprob: -14.500042915344238
    5. 'AND' → logprob: -16.000041961669922
    6. 'Add' → logprob: -16.750041961669922
    7. '_and' → logprob: -16.750041961669922
    8. 'An' → logprob: -16.875041961669922
    9. 'A' → logprob: -17.000041961669922
    10. '#' → logprob: -17.125041961669922

Token 427: 'Selection' (ID: 12653)
  Prédit: 'Selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selection' → logprob: -5.7053759519476444e-05
    2. 'er' → logprob: -10.375057220458984
    3. 'ern' → logprob: -10.875057220458984
    4. 'Choice' → logprob: -12.500057220458984
    5. 'Node' → logprob: -13.750057220458984
    6. '(' → logprob: -14.750057220458984
    7. 'Select' → logprob: -15.000057220458984
    8. 'selection' → logprob: -15.250057220458984
    9. 'ernate' → logprob: -15.875057220458984
    10. ' Selection' → logprob: -16.000057220458984

Token 428: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -4.320199877838604e-07
    2. '(Node' → logprob: -15.125
    3. ' Node' → logprob: -16.75
    4. '	Node' → logprob: -16.75
    5. '<Node' → logprob: -17.5
    6. 'Nodes' → logprob: -18.25
    7. '_Node' → logprob: -18.375
    8. '(' → logprob: -19.125
    9. '_node' → logprob: -19.75
    10. 'node' → logprob: -19.875

Token 429: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017052943585440516
    2. '(Node' → logprob: -6.376705169677734
    3. ' (' → logprob: -13.876705169677734
    4. '(SE' → logprob: -14.751705169677734
    5. '(selection' → logprob: -15.001705169677734
    6. '(Abstract' → logprob: -15.251705169677734
    7. '(S' → logprob: -15.376705169677734
    8. '(Note' → logprob: -15.501705169677734
    9. ':' → logprob: -15.876705169677734
    10. 'Selection' → logprob: -16.001705169677734

Token 430: 'Selection' (ID: 12653)
  Prédit: 'Selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selection' → logprob: -1.6240566083070007e-06
    2. ' Selection' → logprob: -13.875001907348633
    3. '(' → logprob: -15.000001907348633
    4. 'Select' → logprob: -15.375001907348633
    5. 'Node' → logprob: -17.750001907348633
    6. 'selection' → logprob: -18.750001907348633
    7. 'Selector' → logprob: -19.000001907348633
    8. ' selection' → logprob: -19.000001907348633
    9. '.Selection' → logprob: -19.125001907348633
    10. 'Selecting' → logprob: -19.625001907348633

Token 431: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: 0.0
    2. ' Node' → logprob: -18.75
    3. 'Nodes' → logprob: -19.25
    4. '	Node' → logprob: -19.875
    5. 'N' → logprob: -20.125
    6. 'node' → logprob: -20.125
    7. '_Node' → logprob: -20.5
    8. '_node' → logprob: -21.0
    9. '(Node' → logprob: -21.0
    10. ')' → logprob: -21.125

Token 432: '):
' (ID: 1883)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15819820761680603
    2. '):' → logprob: -2.158198118209839
    3. '):
' → logprob: -3.658198118209839
    4. ')' → logprob: -6.158198356628418
    5. '   ' → logprob: -6.158198356628418
    6. ' (' → logprob: -8.408198356628418
    7. 'Selection' → logprob: -8.908198356628418
    8. ':' → logprob: -9.283198356628418
    9. ',' → logprob: -9.533198356628418
    10. '(Node' → logprob: -9.533198356628418

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022809267102275044
    2. 'def' → logprob: -8.875227928161621
    3. ' def' → logprob: -10.000227928161621
    4. '#' → logprob: -10.250227928161621
    5. '
' → logprob: -12.125227928161621
    6. '(' → logprob: -15.000227928161621
    7. '       ' → logprob: -15.000227928161621
    8. '```' → logprob: -15.000227928161621
    9. '   ' → logprob: -15.750227928161621
    10. ')' → logprob: -16.000228881835938

Token 434: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6502767205238342
    2. '   ' → logprob: -0.7752767205238342
    3. 'def' → logprob: -4.2752766609191895
    4. ' def' → logprob: -6.1502766609191895
    5. ' #' → logprob: -6.5252766609191895
    6. '	def' → logprob: -12.650277137756348
    7. ' ' → logprob: -12.775277137756348
    8. '
' → logprob: -13.150277137756348
    9. 'class' → logprob: -13.400277137756348
    10. '       ' → logprob: -13.900277137756348

Token 435: ' Alt' (ID: 26421)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13894589245319366
    2. 'def' → logprob: -2.1389458179473877
    3. '   ' → logprob: -5.763946056365967
    4. ' def' → logprob: -5.763946056365967
    5. ' #' → logprob: -6.263946056365967
    6. 'And' → logprob: -6.388946056365967
    7. 'All' → logprob: -7.263946056365967
    8. 'Or' → logprob: -7.513946056365967
    9. ' ' → logprob: -8.388945579528809
    10. 'class' → logprob: -8.513945579528809

Token 436: ' type' (ID: 1490)
  Prédit: 'Selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Selection' → logprob: -1.0087516784551553e-05
    2. '_selection' → logprob: -13.50001049041748
    3. '.Selection' → logprob: -13.75001049041748
    4. 'selection' → logprob: -13.87501049041748
    5. ' Selection' → logprob: -13.87501049041748
    6. 'class' → logprob: -14.00001049041748
    7. ' selection' → logprob: -14.00001049041748
    8. 'def' → logprob: -14.25001049041748
    9. '(' → logprob: -14.50001049041748
    10. '_SELECTION' → logprob: -14.50001049041748

Token 437: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4321478307247162
    2. ':' → logprob: -1.3071478605270386
    3. ':
' → logprob: -2.932147741317749
    4. '(' → logprob: -4.057147979736328
    5. 'def' → logprob: -4.932147979736328
    6. '(Node' → logprob: -6.807147979736328
    7. 'class' → logprob: -7.807147979736328
    8. ' def' → logprob: -8.057147979736328
    9. '):
' → logprob: -8.307147979736328
    10. '
' → logprob: -9.307147979736328

Token 438: ' choose' (ID: 5655)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1983669251203537
    2. '   ' → logprob: -2.44836688041687
    3. 'def' → logprob: -2.44836688041687
    4. ' #' → logprob: -5.448367118835449
    5. ' def' → logprob: -5.948367118835449
    6. '
' → logprob: -10.19836711883545
    7. ' ' → logprob: -10.44836711883545
    8. '       ' → logprob: -10.57336711883545
    9. '```' → logprob: -10.82336711883545
    10. '  ' → logprob: -11.32336711883545

Token 439: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.038301970809698105
    2. 'exact' → logprob: -3.413301944732666
    3. ' one' → logprob: -5.413301944732666
    4. 'one' → logprob: -9.038302421569824
    5. ' ' → logprob: -10.788302421569824
    6. ' exact' → logprob: -11.163302421569824
    7. '_exact' → logprob: -11.538302421569824
    8. '   ' → logprob: -11.663302421569824
    9. ' only' → logprob: -12.538302421569824
    10. 'Exactly' → logprob: -12.788302421569824

Token 440: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6932507157325745
    2. ' one' → logprob: -0.6932507157325745
    3. '_one' → logprob: -9.81825065612793
    4. '1' → logprob: -10.19325065612793
    5. ' ' → logprob: -11.69325065612793
    6. '   ' → logprob: -13.56825065612793
    7. '```' → logprob: -14.19325065612793
    8. 'One' → logprob: -14.31825065612793
    9. ' exactly' → logprob: -14.56825065612793
    10. 'exact' → logprob: -15.81825065612793

Token 441: ' child' (ID: 2320)
  Prédit: ' child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.18045149743556976
    2. 'child' → logprob: -1.930451512336731
    3. '   ' → logprob: -3.9304513931274414
    4. '_child' → logprob: -8.930451393127441
    5. ' of' → logprob: -9.180451393127441
    6. ' child's' → logprob: -9.805451393127441
    7. ' ' → logprob: -10.680451393127441
    8. '(child' → logprob: -11.305451393127441
    9. '       ' → logprob: -11.555451393127441
    10. '	child' → logprob: -11.555451393127441

Token 442: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0641728863120079
    2. 'def' → logprob: -3.3141729831695557
    3. '
' → logprob: -3.8141729831695557
    4. ' def' → logprob: -5.939172744750977
    5. ':' → logprob: -6.939172744750977
    6. '(' → logprob: -10.564172744750977
    7. ',' → logprob: -10.939172744750977
    8. ':
' → logprob: -10.939172744750977
    9. '	def' → logprob: -11.064172744750977
    10. '  ' → logprob: -11.439172744750977

Token 443: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.14282852411270142
    2. ' not' → logprob: -2.0178284645080566
    3. 'self' → logprob: -9.267828941345215
    4. 'optional' → logprob: -11.267828941345215
    5. '```' → logprob: -11.392828941345215
    6. '
' → logprob: -11.517828941345215
    7. '   ' → logprob: -11.767828941345215
    8. '       ' → logprob: -12.517828941345215
    9. '(not' → logprob: -12.642828941345215
    10. ' self' → logprob: -13.017828941345215

Token 444: ' optional' (ID: 18297)
  Prédit: 'optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optional' → logprob: -0.027639608830213547
    2. ' optional' → logprob: -3.652639627456665
    3. 'self' → logprob: -7.027639389038086
    4. ' self' → logprob: -8.152639389038086
    5. '_optional' → logprob: -9.777639389038086
    6. '.optional' → logprob: -10.027639389038086
    7. '```' → logprob: -10.652639389038086
    8. '   ' → logprob: -11.152639389038086
    9. '(optional' → logprob: -11.527639389038086
    10. '
' → logprob: -11.902639389038086

Token 445: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025102298706769943
    2. '
' → logprob: -4.400102138519287
    3. 'def' → logprob: -4.900102138519287
    4. ',' → logprob: -6.025102138519287
    5. ':' → logprob: -6.150102138519287
    6. ' def' → logprob: -8.775102615356445
    7. '    
' → logprob: -9.525102615356445
    8. ':
' → logprob: -9.525102615356445
    9. ',
' → logprob: -9.650102615356445
    10. '<|end|>' → logprob: -10.275102615356445

Token 446: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4810253977775574
    2. '   ' → logprob: -0.9810253977775574
    3. '       ' → logprob: -4.981025218963623
    4. ' #' → logprob: -11.106025695800781
    5. ' ' → logprob: -11.231025695800781
    6. 'else' → logprob: -11.231025695800781
    7. '  ' → logprob: -12.606025695800781
    8. '           ' → logprob: -12.731025695800781
    9. 'or' → logprob: -13.106025695800781
    10. '
' → logprob: -13.356025695800781

Token 447: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.04863641783595085
    2. '   ' → logprob: -3.0486364364624023
    3. 'def' → logprob: -10.173636436462402
    4. '       ' → logprob: -12.048636436462402
    5. ' #' → logprob: -12.423636436462402
    6. '
' → logprob: -15.423636436462402
    7. ' ' → logprob: -15.798636436462402
    8. '  ' → logprob: -15.923636436462402
    9. '##' → logprob: -16.798635482788086
    10. '	' → logprob: -16.798635482788086

Token 448: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22151921689510345
    2. '   ' → logprob: -1.9715192317962646
    3. 'def' → logprob: -2.8465192317962646
    4. ' def' → logprob: -7.2215189933776855
    5. ' #' → logprob: -7.8465189933776855
    6. ' ' → logprob: -9.471519470214844
    7. '
' → logprob: -9.596519470214844
    8. 'if' → logprob: -9.971519470214844
    9. '  ' → logprob: -10.471519470214844
    10. '       ' → logprob: -10.721519470214844

Token 449: ' optional' (ID: 18297)
  Prédit: 'optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optional' → logprob: -0.5419183969497681
    2. ' optional' → logprob: -1.291918396949768
    3. 'self' → logprob: -2.1669182777404785
    4. ' self' → logprob: -3.5419182777404785
    5. '_optional' → logprob: -9.916918754577637
    6. '   ' → logprob: -10.416918754577637
    7. 'Optional' → logprob: -10.416918754577637
    8. '.optional' → logprob: -10.916918754577637
    9. '(optional' → logprob: -12.166918754577637
    10. '(self' → logprob: -14.041918754577637

Token 450: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006181967910379171
    2. ' :' → logprob: -8.250617980957031
    3. ',' → logprob: -8.625617980957031
    4. ':
' → logprob: -9.000617980957031
    5. ' optional' → logprob: -10.500617980957031
    6. 'optional' → logprob: -11.875617980957031
    7. ':self' → logprob: -12.250617980957031
    8. '   ' → logprob: -12.375617980957031
    9. 'self' → logprob: -13.000617980957031
    10. '       ' → logprob: -13.125617980957031

Token 451: ' choose' (ID: 5655)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6166089177131653
    2. 'can' → logprob: -0.8666089177131653
    3. 'choose' → logprob: -3.9916088581085205
    4. '   ' → logprob: -5.1166090965271
    5. ' choose' → logprob: -5.4916090965271
    6. '#' → logprob: -5.4916090965271
    7. 'def' → logprob: -5.8666090965271
    8. ' def' → logprob: -6.9916090965271
    9. ' return' → logprob: -7.4916090965271
    10. 'return' → logprob: -7.6166090965271

Token 452: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.7886665463447571
    2. ' zero' → logprob: -0.9136665463447571
    3. '0' → logprob: -2.4136664867401123
    4. 'either' → logprob: -4.038666725158691
    5. 'none' → logprob: -4.663666725158691
    6. ' ' → logprob: -4.663666725158691
    7. ' either' → logprob: -4.788666725158691
    8. 'one' → logprob: -5.163666725158691
    9. ' none' → logprob: -6.413666725158691
    10. ' one' → logprob: -7.038666725158691

Token 453: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.4292508661746979
    2. ' or' → logprob: -1.0542508363723755
    3. 'children' → logprob: -8.179250717163086
    4. 'child' → logprob: -9.679250717163086
    5. '   ' → logprob: -9.804250717163086
    6. '_or' → logprob: -10.179250717163086
    7. ' child' → logprob: -10.804250717163086
    8. '<|end|>' → logprob: -10.804250717163086
    9. '	or' → logprob: -11.054250717163086
    10. ' ' → logprob: -11.554250717163086

Token 454: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.014452704228460789
    2. ' one' → logprob: -4.264452934265137
    3. 'more' → logprob: -8.264452934265137
    4. '1' → logprob: -10.764452934265137
    5. '   ' → logprob: -12.514452934265137
    6. ' more' → logprob: -12.639452934265137
    7. '_one' → logprob: -14.014452934265137
    8. 'One' → logprob: -14.139452934265137
    9. 'exact' → logprob: -14.389452934265137
    10. '(one' → logprob: -14.639452934265137

Token 455: ' child' (ID: 2320)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5867481827735901
    2. 'child' → logprob: -1.5867481231689453
    3. ' child' → logprob: -2.3367481231689453
    4. 'def' → logprob: -2.7117481231689453
    5. ' def' → logprob: -3.7117481231689453
    6. '
' → logprob: -3.8367481231689453
    7. '    
' → logprob: -4.961748123168945
    8. '  ' → logprob: -5.461748123168945
    9. ' ' → logprob: -5.586748123168945
    10. ':
' → logprob: -5.711748123168945

Token 456: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37506675720214844
    2. '
' → logprob: -1.8750667572021484
    3. 'def' → logprob: -1.8750667572021484
    4. ' def' → logprob: -5.125066757202148
    5. ':' → logprob: -10.250066757202148
    6. '    
' → logprob: -11.000066757202148
    7. ',' → logprob: -11.250066757202148
    8. '
' → logprob: -11.375066757202148
    9. '	def' → logprob: -11.625066757202148
    10. ' ' → logprob: -11.750066757202148

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25271546840667725
    2. 'def' → logprob: -1.5027154684066772
    3. ' def' → logprob: -7.252715587615967
    4. '
' → logprob: -9.502715110778809
    5. '	def' → logprob: -13.252715110778809
    6. '```' → logprob: -13.877715110778809
    7. ':' → logprob: -16.252716064453125
    8. '    
' → logprob: -16.252716064453125
    9. ':def' → logprob: -16.252716064453125
    10. '   ' → logprob: -17.002716064453125

Token 458: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007568581495434046
    2. '   ' → logprob: -7.500756740570068
    3. ' def' → logprob: -8.500757217407227
    4. '	def' → logprob: -15.000757217407227
    5. '
' → logprob: -15.500757217407227
    6. '```' → logprob: -19.750757217407227
    7. '_def' → logprob: -19.750757217407227
    8. ' ' → logprob: -20.250757217407227
    9. '  ' → logprob: -20.500757217407227
    10. ':def' → logprob: -20.625757217407227

Token 459: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.033702872693538666
    2. 'count' → logprob: -3.408702850341797
    3. ' def' → logprob: -10.533702850341797
    4. '_count' → logprob: -11.283702850341797
    5. '	count' → logprob: -12.408702850341797
    6. ' ' → logprob: -12.658702850341797
    7. '```' → logprob: -13.033702850341797
    8. ' ' → logprob: -13.408702850341797
    9. '_' → logprob: -13.658702850341797
    10. ' continue' → logprob: -13.658702850341797

Token 460: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -7.100059156073257e-05
    2. '_' → logprob: -10.625070571899414
    3. '_comb' → logprob: -11.500070571899414
    4. '```' → logprob: -11.500070571899414
    5. 'com' → logprob: -12.750070571899414
    6. 'def' → logprob: -12.875070571899414
    7. '_tokens' → logprob: -13.000070571899414
    8. 's' → logprob: -13.250070571899414
    9. ' _' → logprob: -13.500070571899414
    10. '\' → logprob: -13.875070571899414

Token 461: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0010943770175799727
    2. 'inations' → logprob: -8.126094818115234
    3. 'com' → logprob: -8.876094818115234
    4. 'b' → logprob: -8.876094818115234
    5. '_com' → logprob: -9.001094818115234
    6. 'o' → logprob: -9.251094818115234
    7. 'om' → logprob: -9.626094818115234
    8. '_' → logprob: -10.001094818115234
    9. 'initions' → logprob: -10.251094818115234
    10. '```' → logprob: -10.376094818115234

Token 462: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.000000953674316
    3. ' (' → logprob: -15.625000953674316
    4. '(s' → logprob: -16.500001907348633
    5. 'def' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.250001907348633
    7. '```' → logprob: -17.750001907348633
    8. 'self' → logprob: -18.000001907348633
    9. '=self' → logprob: -18.500001907348633
    10. '       ' → logprob: -18.500001907348633

Token 463: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8337658643722534
    2. '(self' → logprob: -0.8337658643722534
    3. '()' → logprob: -2.083765983581543
    4. '(' → logprob: -5.833765983581543
    5. '   ' → logprob: -6.333765983581543
    6. 'def' → logprob: -7.958765983581543
    7. 'self' → logprob: -8.083765983581543
    8. '       ' → logprob: -8.208765983581543
    9. ' ->' → logprob: -8.333765983581543
    10. '->' → logprob: -8.458765983581543

Token 464: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6438854336738586
    2. ' ->' → logprob: -1.1438853740692139
    3. ')' → logprob: -2.018885374069214
    4. ':' → logprob: -4.518885612487793
    5. '   ' → logprob: -5.143885612487793
    6. '       ' → logprob: -5.268885612487793
    7. 'def' → logprob: -8.018885612487793
    8. '(self' → logprob: -8.143885612487793
    9. ')->' → logprob: -8.643885612487793
    10. ' def' → logprob: -8.768885612487793

Token 465: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005935082212090492
    2. ' int' → logprob: -5.130935192108154
    3. '(int' → logprob: -12.505934715270996
    4. '   ' → logprob: -13.130934715270996
    5. ' ' → logprob: -14.255934715270996
    6. '[int' → logprob: -17.005935668945312
    7. '  ' → logprob: -17.380935668945312
    8. ' (' → logprob: -17.505935668945312
    9. '```' → logprob: -17.630935668945312
    10. 'Optional' → logprob: -17.755935668945312

Token 466: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005714519880712032
    2. '       ' → logprob: -5.630714416503906
    3. 'self' → logprob: -6.505714416503906
    4. ':' → logprob: -8.255714416503906
    5. '   ' → logprob: -8.630714416503906
    6. '(' → logprob: -9.380714416503906
    7. ':
' → logprob: -10.380714416503906
    8. '->' → logprob: -10.380714416503906
    9. 'def' → logprob: -11.630714416503906
    10. ' self' → logprob: -11.880714416503906

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019503815099596977
    2. 'ways' → logprob: -4.394503593444824
    3. 'child' → logprob: -6.019503593444824
    4. 'children' → logprob: -6.644503593444824
    5. 'total' → logprob: -6.769503593444824
    6. 'count' → logprob: -6.894503593444824
    7. 'if' → logprob: -7.644503593444824
    8. '```' → logprob: -8.144503593444824
    9. ' ways' → logprob: -9.769503593444824
    10. 'n' → logprob: -10.019503593444824

Token 468: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' (adapté à ' child') → logprob: -0.028778957203030586
    2. '       ' → logprob: -4.278779029846191
    3. 'total' → logprob: -5.028779029846191
    4. 'ways' → logprob: -5.653779029846191
    5. 'count' → logprob: -5.903779029846191
    6. ' child' → logprob: -7.403779029846191
    7. 'if' → logprob: -7.778779029846191
    8. 'counts' → logprob: -8.403779029846191
    9. 'sum' → logprob: -8.778779029846191
    10. 'children' → logprob: -9.153779029846191

Token 469: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.00015788905147928745
    2. 's' → logprob: -9.250158309936523
    3. '_count' → logprob: -10.375158309936523
    4. ' =' → logprob: -12.000158309936523
    5. '_' → logprob: -12.250158309936523
    6. '_s' → logprob: -12.625158309936523
    7. '```' → logprob: -12.875158309936523
    8. '_choices' → logprob: -13.125158309936523
    9. 'counts' → logprob: -13.500158309936523
    10. '=' → logprob: -13.750158309936523

Token 470: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193166732788086
    2. '=' → logprob: -1.5019316673278809
    3. ':' → logprob: -14.001932144165039
    4. ' ' → logprob: -14.251932144165039
    5. '   ' → logprob: -15.126932144165039
    6. '=[' → logprob: -15.376932144165039
    7. 's' → logprob: -15.376932144165039
    8. ' =[' → logprob: -15.376932144165039
    9. ',' → logprob: -16.87693214416504
    10. ')' → logprob: -17.12693214416504

Token 471: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6721780896186829
    2. ' [' → logprob: -0.9221780896186829
    3. '[self' → logprob: -2.422178030014038
    4. '[len' → logprob: -6.922178268432617
    5. '[cell' → logprob: -7.547178268432617
    6. '[item' → logprob: -8.047178268432617
    7. '[int' → logprob: -8.672178268432617
    8. '[node' → logprob: -8.922178268432617
    9. '[class' → logprob: -9.172178268432617
    10. '   ' → logprob: -9.422178268432617

Token 472: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -1.6286106983898208e-05
    2. '(child' → logprob: -11.250016212463379
    3. ' child' → logprob: -12.875016212463379
    4. 'c' → logprob: -14.750016212463379
    5. '(' → logprob: -15.875016212463379
    6. '   ' → logprob: -16.750017166137695
    7. '	child' → logprob: -18.125017166137695
    8. '       ' → logprob: -18.500017166137695
    9. ' (' → logprob: -19.125017166137695
    10. '           ' → logprob: -19.250017166137695

Token 473: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.00031401283922605217
    2. '.' → logprob: -8.250313758850098
    3. 'count' → logprob: -10.250313758850098
    4. ' .' → logprob: -11.125313758850098
    5. '().' → logprob: -14.125313758850098
    6. ').' → logprob: -15.375313758850098
    7. '(count' → logprob: -15.375313758850098
    8. ' for' → logprob: -15.625313758850098
    9. '].' → logprob: -15.750313758850098
    10. '   ' → logprob: -15.750313758850098

Token 474: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.981667537620524e-06
    2. '_comb' → logprob: -14.250001907348633
    3. '_tokens' → logprob: -14.750001907348633
    4. '_' → logprob: -15.250001907348633
    5. '```' → logprob: -15.500001907348633
    6. '_con' → logprob: -16.250001907348633
    7. '_sub' → logprob: -16.875001907348633
    8. '_token' → logprob: -17.125001907348633
    9. ' _' → logprob: -17.250001907348633
    10. 's' → logprob: -17.250001907348633

Token 475: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.13634389638900757
    2. 'inations' → logprob: -2.1363439559936523
    3. 'utations' → logprob: -5.886343955993652
    4. 'ations' → logprob: -6.386343955993652
    5. '_com' → logprob: -6.886343955993652
    6. 'initions' → logprob: -7.136343955993652
    7. 'b' → logprob: -7.511343955993652
    8. 'ine' → logprob: -7.761343955993652
    9. '_count' → logprob: -8.386343955993652
    10. 'ount' → logprob: -8.636343955993652

Token 476: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.6240566083070007e-06
    2. '()
' → logprob: -14.250001907348633
    3. '()]' → logprob: -14.375001907348633
    4. 'for' → logprob: -15.000001907348633
    5. ' ()' → logprob: -16.750001907348633
    6. ' for' → logprob: -18.625001907348633
    7. '())' → logprob: -19.500001907348633
    8. ')' → logprob: -19.875001907348633
    9. '()[' → logprob: -19.875001907348633
    10. '()+' → logprob: -20.250001907348633

Token 477: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08960015326738358
    2. '()' → logprob: -2.589600086212158
    3. 'for' → logprob: -4.589600086212158
    4. '       ' → logprob: -7.714600086212158
    5. ')' → logprob: -10.589600563049316
    6. ']' → logprob: -11.589600563049316
    7. '        ' → logprob: -12.339600563049316
    8. '   ' → logprob: -12.714600563049316
    9. '	for' → logprob: -13.589600563049316
    10. '()
' → logprob: -13.839600563049316

Token 478: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.0015191456768661737
    2. ' child' → logprob: -6.501519203186035
    3. 'self' → logprob: -11.126519203186035
    4. 'c' → logprob: -13.126519203186035
    5. '	child' → logprob: -16.25151824951172
    6. '(child' → logprob: -17.00151824951172
    7. '_child' → logprob: -18.00151824951172
    8. ' self' → logprob: -18.37651824951172
    9. 'ch' → logprob: -18.62651824951172
    10. 'children' → logprob: -18.75151824951172

Token 479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804837539792061
    2. 'in' → logprob: -3.288048267364502
    3. 's' → logprob: -13.03804874420166
    4. '_in' → logprob: -14.03804874420166
    5. '	in' → logprob: -14.03804874420166
    6. '       ' → logprob: -14.28804874420166
    7. ' ' → logprob: -15.03804874420166
    8. 'n' → logprob: -15.03804874420166
    9. '
' → logprob: -15.03804874420166
    10. ']' → logprob: -15.53804874420166

Token 480: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001398929744027555
    2. ' self' → logprob: -8.875140190124512
    3. '
' → logprob: -17.375139236450195
    4. '(self' → logprob: -18.000139236450195
    5. '   ' → logprob: -18.375139236450195
    6. ' ' → logprob: -18.875139236450195
    7. '	self' → logprob: -19.875139236450195
    8. '  ' → logprob: -19.875139236450195
    9. ',' → logprob: -20.875139236450195
    10. '       ' → logprob: -21.000139236450195

Token 481: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.13174644112586975
    2. 'children' → logprob: -2.131746530532837
    3. ' in' → logprob: -5.631746292114258
    4. 'in' → logprob: -6.756746292114258
    5. ' children' → logprob: -10.506746292114258
    6. '(children' → logprob: -11.006746292114258
    7. '	children' → logprob: -12.131746292114258
    8. 's' → logprob: -12.131746292114258
    9. '_children' → logprob: -13.381746292114258
    10. ' .' → logprob: -13.756746292114258

Token 482: ']

' (ID: 3144)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025971751660108566
    2. '
' → logprob: -4.02597188949585
    3. ')' → logprob: -5.52597188949585
    4. ']' → logprob: -6.52597188949585
    5. ')
' → logprob: -7.02597188949585
    6. '        
' → logprob: -7.52597188949585
    7. ',' → logprob: -8.275971412658691
    8. ']
' → logprob: -8.525971412658691
    9. '<|end|>' → logprob: -8.775971412658691
    10. '[' → logprob: -10.400971412658691

Token 483: '       ' (ID: 309)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.5785629153251648
    2. '       ' → logprob: -0.8285629153251648
    3. 'total' → logprob: -6.7035627365112305
    4. 'if' → logprob: -7.8285627365112305
    5. 'sum' → logprob: -7.9535627365112305
    6. ' ways' → logprob: -8.32856273651123
    7. '```' → logprob: -8.57856273651123
    8. 'count' → logprob: -8.95356273651123
    9. 'result' → logprob: -10.20356273651123
    10. '        
' → logprob: -11.32856273651123

Token 484: ' total' (ID: 3609)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0888272374868393
    2. 'total' (adapté à ' total') → logprob: -2.588827133178711
    3. 'if' → logprob: -5.463827133178711
    4. '       ' → logprob: -6.088827133178711
    5. 'count' → logprob: -6.588827133178711
    6. 'sum' → logprob: -7.213827133178711
    7. 'result' → logprob: -7.713827133178711
    8. ' ways' → logprob: -7.838827133178711
    9. 'res' → logprob: -8.463827133178711
    10. 's' → logprob: -9.463827133178711

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042064756155014
    2. '=' → logprob: -3.2880420684814453
    3. 's' → logprob: -15.788042068481445
    4. '_' → logprob: -16.413042068481445
    5. 'ways' → logprob: -16.663042068481445
    6. '```' → logprob: -16.663042068481445
    7. ':' → logprob: -16.788042068481445
    8. '=sum' → logprob: -16.913042068481445
    9. ' ' → logprob: -17.163042068481445
    10. '   ' → logprob: -17.413042068481445

Token 486: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22149361670017242
    2. 'sum' → logprob: -1.7214936017990112
    3. ' sum' → logprob: -3.971493721008301
    4. ' ' → logprob: -7.846493721008301
    5. '(sum' → logprob: -7.971493721008301
    6. '   ' → logprob: -9.2214937210083
    7. '(' → logprob: -9.4714937210083
    8. '1' → logprob: -9.5964937210083
    9. '       ' → logprob: -10.4714937210083
    10. ' (' → logprob: -10.8464937210083

Token 487: '(child' (ID: 34164)
  Prédit: '(child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(child' → logprob: -0.3161957263946533
    2. 'child' → logprob: -1.3161957263946533
    3. '(c' → logprob: -6.316195487976074
    4. '((' → logprob: -7.941195487976074
    5. '(' → logprob: -8.191195487976074
    6. 'c' → logprob: -8.441195487976074
    7. ' child' → logprob: -8.691195487976074
    8. '(
' → logprob: -9.691195487976074
    9. '([' → logprob: -10.316195487976074
    10. ' (' → logprob: -11.941195487976074

Token 488: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -2.3438327843905427e-05
    2. '```' → logprob: -12.25002384185791
    3. '_count' → logprob: -12.75002384185791
    4. 's' → logprob: -13.00002384185791
    5. '_com' → logprob: -13.12502384185791
    6. '(_' → logprob: -13.25002384185791
    7. '_child' → logprob: -13.87502384185791
    8. '_c' → logprob: -14.00002384185791
    9. 'counts' → logprob: -14.00002384185791
    10. '_' → logprob: -14.12502384185791

Token 489: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005545362364500761
    2. ')%' → logprob: -5.630545139312744
    3. '<|end|>' → logprob: -6.630545139312744
    4. ' +' → logprob: -8.755545616149902
    5. ' %' → logprob: -8.880545616149902
    6. ' )' → logprob: -9.255545616149902
    7. '<|end|>' → logprob: -9.380545616149902
    8. '%' → logprob: -9.505545616149902
    9. '       ' → logprob: -10.505545616149902
    10. '+' → logprob: -11.005545616149902

Token 490: ' %' (ID: 1851)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7002543807029724
    2. '%' → logprob: -1.7002544403076172
    3. '
' → logprob: -1.8252544403076172
    4. ' %' → logprob: -2.200254440307617
    5. ' if' → logprob: -3.700254440307617
    6. '<|end|>' → logprob: -4.450254440307617
    7. ' +' → logprob: -5.450254440307617
    8. ')' → logprob: -5.950254440307617
    9. ')%' → logprob: -6.075254440307617
    10. 'if' → logprob: -6.450254440307617

Token 491: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.836499985889532e-05
    2. ' MOD' → logprob: -9.7500581741333
    3. '_MOD' → logprob: -22.000059127807617
    4. '.MOD' → logprob: -22.625059127807617
    5. 'MO' → logprob: -25.875059127807617
    6. 'M' → logprob: -26.250059127807617
    7. ' ' → logprob: -27.000059127807617
    8. 'mod' → logprob: -27.250059127807617
    9. 'MODE' → logprob: -27.625059127807617
    10. '   ' → logprob: -27.625059127807617

Token 492: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12414310872554779
    2. 'if' → logprob: -2.249143123626709
    3. ' if' → logprob: -5.124143123626709
    4. '
' → logprob: -6.249143123626709
    5. '        
' → logprob: -6.249143123626709
    6. 'return' → logprob: -7.124143123626709
    7. '+' → logprob: -8.99914264678955
    8. '	' → logprob: -9.12414264678955
    9. '	if' → logprob: -9.49914264678955
    10. '```' → logprob: -9.49914264678955

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3188854157924652
    2. 'if' → logprob: -1.3188854455947876
    3. ' if' → logprob: -5.693885326385498
    4. '
' → logprob: -6.818885326385498
    5. '   ' → logprob: -7.443885326385498
    6. '        
' → logprob: -8.568885803222656
    7. '```' → logprob: -8.693885803222656
    8. '	if' → logprob: -8.818885803222656
    9. '``' → logprob: -11.318885803222656
    10. '    
' → logprob: -11.568885803222656

Token 494: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03847931697964668
    2. '       ' → logprob: -3.2884793281555176
    3. ' if' → logprob: -7.913479328155518
    4. '
' → logprob: -9.91347885131836
    5. 'return' → logprob: -10.78847885131836
    6. '        
' → logprob: -14.28847885131836
    7. '	if' → logprob: -14.28847885131836
    8. '   ' → logprob: -14.78847885131836
    9. '```' → logprob: -15.91347885131836
    10. 'If' → logprob: -17.66347885131836

Token 495: ' self' (ID: 1051)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.39772745966911316
    2. ' self' → logprob: -1.7727274894714355
    3. 'not' → logprob: -2.2727274894714355
    4. 'self' → logprob: -2.8977274894714355
    5. '   ' → logprob: -9.522727012634277
    6. ' ' → logprob: -11.022727012634277
    7. '	not' → logprob: -12.522727012634277
    8. '	self' → logprob: -13.147727012634277
    9. '    ' → logprob: -13.272727012634277
    10. '(self' → logprob: -13.397727012634277

Token 496: '.optional' (ID: 184220)
  Prédit: '.optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.optional' → logprob: -3.881560041918419e-05
    2. ' .' → logprob: -10.750039100646973
    3. 'optional' → logprob: -11.750039100646973
    4. '.opt' → logprob: -12.000039100646973
    5. '.' → logprob: -12.750039100646973
    6. '_optional' → logprob: -16.125038146972656
    7. '.Optional' → logprob: -16.625038146972656
    8. ' optional' → logprob: -17.000038146972656
    9. '.option' → logprob: -17.375038146972656
    10. '>.' → logprob: -17.625038146972656

Token 497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1442735493183136
    2. ':
' → logprob: -2.019273519515991
    3. '==' → logprob: -6.76927375793457
    4. ' ==' → logprob: -8.14427375793457
    5. '=' → logprob: -9.76927375793457
    6. '       ' → logprob: -10.51927375793457
    7. ',' → logprob: -10.76927375793457
    8. '           ' → logprob: -10.89427375793457
    9. ':

' → logprob: -12.01927375793457
    10. 'else' → logprob: -12.26927375793457

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007917628972791135
    2. '       ' → logprob: -7.625791549682617
    3. 'total' → logprob: -8.500791549682617
    4. '	       ' → logprob: -11.000791549682617
    5. 'return' → logprob: -11.250791549682617
    6. ',' → logprob: -11.625791549682617
    7. ':
' → logprob: -11.875791549682617
    8. ':' → logprob: -12.125791549682617
    9. '#' → logprob: -12.125791549682617
    10. '    	   ' → logprob: -12.125791549682617

Token 499: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.006068982649594545
    2. ' total' → logprob: -5.256069183349609
    3. '           ' → logprob: -7.131069183349609
    4. 'return' → logprob: -10.50606918334961
    5. '       ' → logprob: -13.00606918334961
    6. '
' → logprob: -13.25606918334961
    7. '(total' → logprob: -13.75606918334961
    8. ',total' → logprob: -14.63106918334961
    9. '	total' → logprob: -15.00606918334961
    10. '$total' → logprob: -15.25606918334961

Token 500: ' can' (ID: 665)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00047690561041235924
    2. '           ' → logprob: -8.250476837158203
    3. ' total' → logprob: -8.500476837158203
    4. 'return' → logprob: -11.875476837158203
    5. 'result' → logprob: -12.875476837158203
    6. '       ' → logprob: -14.000476837158203
    7. '(total' → logprob: -14.625476837158203
    8. '#' → logprob: -15.125476837158203
    9. 'answer' → logprob: -15.125476837158203
    10. '
' → logprob: -15.625476837158203

Token 501: ' choose' (ID: 5655)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0752168893814087
    2. 'choose' → logprob: -1.0752168893814087
    3. ' choose' → logprob: -1.7002168893814087
    4. ' also' → logprob: -3.075216770172119
    5. ' total' → logprob: -3.075216770172119
    6. 'also' → logprob: -3.950216770172119
    7. '_choose' → logprob: -4.575216770172119
    8. 'select' → logprob: -5.325216770172119
    9. ' select' → logprob: -6.075216770172119
    10. '_total' → logprob: -7.200216770172119

Token 502: ' none' (ID: 12698)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.6711480617523193
    2. '0' → logprob: -1.5461480617523193
    3. ' none' → logprob: -2.1711480617523193
    4. ' ' → logprob: -2.6711480617523193
    5. ' zero' → logprob: -3.1711480617523193
    6. 'no' → logprob: -3.5461480617523193
    7. 'none' → logprob: -3.9211480617523193
    8. ' to' → logprob: -7.296148300170898
    9. 'zero' → logprob: -7.546148300170898
    10. ' not' → logprob: -8.046148300170898

Token 503: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0285501666367054
    2. ',' → logprob: -3.778550148010254
    3. '
' → logprob: -6.278550148010254
    4. ':' → logprob: -6.653550148010254
    5. ':
' → logprob: -7.653550148010254
    6. ' or' → logprob: -8.028550148010254
    7. '       ' → logprob: -8.028550148010254
    8. ' ,' → logprob: -8.278550148010254
    9. '               ' → logprob: -8.653550148010254
    10. ' (' → logprob: -9.028550148010254

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008121603168547153
    2. ' ' → logprob: -6.258121490478516
    3. ' (' → logprob: -6.508121490478516
    4. '           ' → logprob: -6.758121490478516
    5. '(total' → logprob: -6.883121490478516
    6. '(' → logprob: -7.008121490478516
    7. 'total' → logprob: -7.258121490478516
    8. '+' → logprob: -8.133121490478516
    9. ')' → logprob: -8.508121490478516
    10. ' total' → logprob: -8.633121490478516

Token 505: ' way' (ID: 2006)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7509350776672363
    2. ')' → logprob: -0.8759350776672363
    3. '+' → logprob: -2.2509350776672363
    4. ')
' → logprob: -5.625935077667236
    5. '):
' → logprob: -7.250935077667236
    6. ' )' → logprob: -7.500935077667236
    7. '),' → logprob: -8.250934600830078
    8. '           ' → logprob: -8.375934600830078
    9. ')+' → logprob: -8.875934600830078
    10. ' +
' → logprob: -9.000934600830078

Token 506: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.56351637840271
    2. '           ' → logprob: -1.43851637840271
    3. ')
' → logprob: -1.68851637840271
    4. '),' → logprob: -5.188516616821289
    5. '):
' → logprob: -6.188516616821289
    6. ',' → logprob: -8.188516616821289
    7. '       ' → logprob: -8.188516616821289
    8. '+' → logprob: -9.063516616821289
    9. ' +' → logprob: -9.063516616821289
    10. '):' → logprob: -9.813516616821289

Token 507: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004326384048908949
    2. '
' → logprob: -6.004326343536377
    3. ',' → logprob: -6.504326343536377
    4. ':
' → logprob: -8.879326820373535
    5. '       ' → logprob: -9.629326820373535
    6. ',
' → logprob: -10.004326820373535
    7. ':' → logprob: -10.379326820373535
    8. '               ' → logprob: -11.129326820373535
    9. '):
' → logprob: -11.629326820373535
    10. '	       ' → logprob: -12.129326820373535

Token 508: ' one' (ID: 1001)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8002219796180725
    2. 'total' → logprob: -0.9252219796180725
    3. 'choose' → logprob: -2.1752219200134277
    4. ' choose' → logprob: -3.4252219200134277
    5. ' any' → logprob: -5.300221920013428
    6. '           ' → logprob: -7.050221920013428
    7. 'any' → logprob: -7.425221920013428
    8. 'the' → logprob: -7.925221920013428
    9. ' one' → logprob: -7.925221920013428
    10. ' the' → logprob: -8.175222396850586

Token 509: ' child' (ID: 2320)
  Prédit: ' more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' more' → logprob: -1.0186578035354614
    2. 'more' → logprob: -1.2686578035354614
    3. '+' → logprob: -2.018657684326172
    4. '           ' → logprob: -3.018657684326172
    5. ' of' → logprob: -3.018657684326172
    6. ' +' → logprob: -3.268657684326172
    7. 'child' → logprob: -3.518657684326172
    8. 'of' → logprob: -3.893657684326172
    9. 'additional' → logprob: -5.018657684326172
    10. '_more' → logprob: -5.018657684326172

Token 510: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005215855780988932
    2. ',' → logprob: -6.130215644836426
    3. '       ' → logprob: -6.255215644836426
    4. 'return' → logprob: -7.255215644836426
    5. 'total' → logprob: -9.380215644836426
    6. ':' → logprob: -9.380215644836426
    7. '
' → logprob: -9.755215644836426
    8. ':
' → logprob: -10.505215644836426
    9. '<|end|>' → logprob: -10.630215644836426
    10. '	       ' → logprob: -11.130215644836426

Token 511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009026461048051715
    2. 'return' → logprob: -8.00090217590332
    3. ',' → logprob: -8.87590217590332
    4. '
' → logprob: -9.00090217590332
    5. 'total' → logprob: -9.37590217590332
    6. '       ' → logprob: -9.37590217590332
    7. ' return' → logprob: -10.25090217590332
    8. ':' → logprob: -10.37590217590332
    9. '	       ' → logprob: -11.25090217590332
    10. ':
' → logprob: -11.62590217590332

Token 512: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.12374291568994522
    2. 'return' → logprob: -2.8737428188323975
    3. ' total' → logprob: -3.1237428188323975
    4. '           ' → logprob: -4.498743057250977
    5. ' return' → logprob: -5.373743057250977
    6. '```' → logprob: -9.748743057250977
    7. '       ' → logprob: -10.248743057250977
    8. '   ' → logprob: -11.373743057250977
    9. '(total' → logprob: -11.373743057250977
    10. '
' → logprob: -11.748743057250977

Token 513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16112302243709564
    2. ' =' → logprob: -2.161123037338257
    3. '+=' → logprob: -3.411123037338257
    4. ' +=' → logprob: -7.411122798919678
    5. '=(' → logprob: -12.036123275756836
    6. '   ' → logprob: -13.536123275756836
    7. '       ' → logprob: -14.786123275756836
    8. '```' → logprob: -16.036123275756836
    9. '+' → logprob: -16.161123275756836
    10. 'return' → logprob: -16.536123275756836

Token 514: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.07289380580186844
    2. '(' → logprob: -2.8228938579559326
    3. ' (' → logprob: -4.5728936195373535
    4. '(t' → logprob: -7.9478936195373535
    5. '           ' → logprob: -9.447894096374512
    6. '(ans' → logprob: -10.822894096374512
    7. '   ' → logprob: -11.447894096374512
    8. '(to' → logprob: -11.697894096374512
    9. '(one' → logprob: -11.697894096374512
    10. '(next' → logprob: -12.197894096374512

Token 515: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.001203923486173153
    2. '1' → logprob: -7.001204013824463
    3. ' total' → logprob: -8.251203536987305
    4. '(total' → logprob: -10.376203536987305
    5. '(' → logprob: -16.001203536987305
    6. ' ' → logprob: -16.876203536987305
    7. '	total' → logprob: -17.001203536987305
    8. '$total' → logprob: -17.251203536987305
    9. 'tot' → logprob: -17.626203536987305
    10. ',total' → logprob: -18.126203536987305

Token 516: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.011047814972698689
    2. '+' → logprob: -4.511047840118408
    3. '1' → logprob: -17.51104736328125
    4. ' ' → logprob: -18.38604736328125
    5. ' +
' → logprob: -18.63604736328125
    6. ' plus' → logprob: -18.76104736328125
    7. ')' → logprob: -18.88604736328125
    8. '0' → logprob: -19.26104736328125
    9. ' ' → logprob: -19.88604736328125
    10. '+
' → logprob: -20.26104736328125

Token 517: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.750009536743164
    4. ')' → logprob: -18.875009536743164
    5. '```' → logprob: -19.625009536743164
    6. '`' → logprob: -21.500009536743164
    7. '  ' → logprob: -22.375009536743164
    8. '       ' → logprob: -22.375009536743164
    9. '۱' → logprob: -22.500009536743164
    10. '[' → logprob: -22.500009536743164

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.250001907348633
    4. ')' → logprob: -19.375001907348633
    5. '```' → logprob: -19.875001907348633
    6. '[' → logprob: -22.250001907348633
    7. '۱' → logprob: -22.250001907348633
    8. '`' → logprob: -22.375001907348633
    9. '0' → logprob: -22.500001907348633
    10. '<|end|>' → logprob: -22.875001907348633

Token 519: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')%' → logprob: -12.000009536743164
    3. ' )' → logprob: -12.625009536743164
    4. ')
' → logprob: -17.375009536743164
    5. '),' → logprob: -20.250009536743164
    6. '）' → logprob: -20.500009536743164
    7. ')return' → logprob: -21.000009536743164
    8. '       ' → logprob: -21.250009536743164
    9. '`)' → logprob: -21.250009536743164
    10. '```' → logprob: -21.625009536743164

Token 520: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.391425758600235
    2. '       ' → logprob: -1.5164257287979126
    3. ' %' → logprob: -3.016425848007202
    4. 'return' → logprob: -3.266425848007202
    5. ' return' → logprob: -4.641425609588623
    6. '
' → logprob: -5.766425609588623
    7. '<|end|>' → logprob: -6.266425609588623
    8. ')' → logprob: -6.891425609588623
    9. ')%' → logprob: -8.016426086425781
    10. '        
' → logprob: -8.016426086425781

Token 521: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.023245595395565033
    2. ' MOD' → logprob: -3.7732455730438232
    3. '_MOD' → logprob: -16.648244857788086
    4. '.MOD' → logprob: -18.023244857788086
    5. ' ' → logprob: -20.898244857788086
    6. ' ' → logprob: -22.273244857788086
    7. '(M' → logprob: -22.273244857788086
    8. '`' → logprob: -22.273244857788086
    9. '```' → logprob: -22.273244857788086
    10. 'mod' → logprob: -23.523244857788086

Token 522: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010845718905329704
    2. 'return' → logprob: -4.76084566116333
    3. '
' → logprob: -6.13584566116333
    4. ' return' → logprob: -9.760846138000488
    5. 'else' → logprob: -13.135846138000488
    6. '        
' → logprob: -13.260846138000488
    7. '   ' → logprob: -13.885846138000488
    8. '	return' → logprob: -13.885846138000488
    9. '	' → logprob: -14.385846138000488
    10. '           ' → logprob: -15.135846138000488

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018231887370347977
    2. 'return' → logprob: -4.0182318687438965
    3. ' return' → logprob: -9.768232345581055
    4. 'else' → logprob: -11.518232345581055
    5. '
' → logprob: -11.768232345581055
    6. '	return' → logprob: -13.143232345581055
    7. '   ' → logprob: -13.143232345581055
    8. '	' → logprob: -13.893232345581055
    9. '           ' → logprob: -14.393232345581055
    10. '```' → logprob: -14.643232345581055

Token 524: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10687123239040375
    2. 'return' → logprob: -2.3568711280822754
    3. 'else' → logprob: -5.106871128082275
    4. ' return' → logprob: -7.856871128082275
    5. ' else' → logprob: -8.731871604919434
    6. '
' → logprob: -10.606871604919434
    7. '   ' → logprob: -11.481871604919434
    8. '	return' → logprob: -13.231871604919434
    9. '           ' → logprob: -14.356871604919434
    10. '        
' → logprob: -14.481871604919434

Token 525: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.31705495715141296
    2. 'return' → logprob: -1.3170549869537354
    3. '       ' → logprob: -5.692054748535156
    4. ' else' → logprob: -7.942054748535156
    5. ' return' → logprob: -9.817054748535156
    6. '   ' → logprob: -13.192054748535156
    7. '
' → logprob: -13.942054748535156
    8. '```' → logprob: -15.567054748535156
    9. '           ' → logprob: -15.817054748535156
    10. 'elif' → logprob: -16.442054748535156

Token 526: ' must' (ID: 2804)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.347892165184021
    2. ':
' → logprob: -1.847892165184021
    3. 'return' → logprob: -3.0978922843933105
    4. '           ' → logprob: -3.2228922843933105
    5. ':return' → logprob: -3.2228922843933105
    6. 'pass' → logprob: -5.5978922843933105
    7. '#' → logprob: -5.7228922843933105
    8. '       ' → logprob: -6.2228922843933105
    9. ' return' → logprob: -6.8478922843933105
    10. ':#' → logprob: -7.4728922843933105

Token 527: ' choose' (ID: 5655)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.001706247916445136
    2. ' choose' → logprob: -7.251706123352051
    3. '_choose' → logprob: -7.626706123352051
    4. 'select' → logprob: -8.12670612335205
    5. 'return' → logprob: -9.12670612335205
    6. '       ' → logprob: -10.75170612335205
    7. '   ' → logprob: -11.00170612335205
    8. 'cho' → logprob: -11.00170612335205
    9. '           ' → logprob: -11.50170612335205
    10. 'pick' → logprob: -11.87670612335205

Token 528: ' exactly' (ID: 9707)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.5538629293441772
    2. ' exactly' → logprob: -1.0538629293441772
    3. 'one' → logprob: -2.803863048553467
    4. ' one' → logprob: -4.678863048553467
    5. 'total' → logprob: -5.053863048553467
    6. 'Exactly' → logprob: -8.803862571716309
    7. ' total' → logprob: -9.678862571716309
    8. ' exact' → logprob: -9.678862571716309
    9. '(total' → logprob: -10.053862571716309
    10. '       ' → logprob: -10.553862571716309

Token 529: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.061976537108421326
    2. ' one' → logprob: -2.811976432800293
    3. '1' → logprob: -12.186976432800293
    4. ' ' → logprob: -13.811976432800293
    5. 'total' → logprob: -13.936976432800293
    6. '_one' → logprob: -13.936976432800293
    7. '   ' → logprob: -15.186976432800293
    8. 'child' → logprob: -15.186976432800293
    9. 'sum' → logprob: -15.811976432800293
    10. 'One' → logprob: -15.811976432800293

Token 530: ' child' (ID: 2320)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5687136650085449
    2. 'return' → logprob: -1.693713665008545
    3. ' return' → logprob: -1.818713665008545
    4. '
' → logprob: -2.443713665008545
    5. '        
' → logprob: -7.318713665008545
    6. ' 
' → logprob: -9.943714141845703
    7. ',' → logprob: -10.693714141845703
    8. ':return' → logprob: -11.318714141845703
    9. '    
' → logprob: -11.443714141845703
    10. '
' → logprob: -11.443714141845703

Token 531: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1289730668067932
    2. 'return' → logprob: -2.1289730072021484
    3. ' return' → logprob: -6.378973007202148
    4. '
' → logprob: -8.253973007202148
    5. '        
' → logprob: -9.628973007202148
    6. '	return' → logprob: -12.253973007202148
    7. '   ' → logprob: -12.378973007202148
    8. '<|end|>' → logprob: -12.503973007202148
    9. '```' → logprob: -13.753973007202148
    10. ':return' → logprob: -13.878973007202148

Token 532: ' sum' (ID: 4215)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03504173457622528
    2. '       ' → logprob: -3.7850418090820312
    3. ' return' → logprob: -4.535041809082031
    4. '
' → logprob: -6.910041809082031
    5. '        
' → logprob: -13.785041809082031
    6. '   ' → logprob: -14.660041809082031
    7. '#' → logprob: -14.785041809082031
    8. '	return' → logprob: -15.160041809082031
    9. '           ' → logprob: -15.910041809082031
    10. ' 
' → logprob: -16.16004180908203

Token 533: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 534: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.0017437237547710538
    2. ' child' → logprob: -6.376743793487549
    3. 'children' → logprob: -10.62674331665039
    4. 'the' → logprob: -11.87674331665039
    5. '(child' → logprob: -12.37674331665039
    6. 'all' → logprob: -12.75174331665039
    7. 'counts' → logprob: -13.37674331665039
    8. '	child' → logprob: -14.50174331665039
    9. ' the' → logprob: -14.87674331665039
    10. 'count' → logprob: -15.12674331665039

Token 535: ' counts' (ID: 28991)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -6.988221684878226e-06
    2. '```' → logprob: -12.750006675720215
    3. 's' → logprob: -13.125006675720215
    4. 'counts' → logprob: -14.250006675720215
    5. '_choices' → logprob: -15.250006675720215
    6. ' counts' → logprob: -15.250006675720215
    7. ''s' → logprob: -16.00000762939453
    8. ''_' → logprob: -16.00000762939453
    9. '_' → logprob: -16.50000762939453
    10. '`' → logprob: -16.62500762939453

Token 536: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038535131607204676
    2. 'return' → logprob: -5.6288533210754395
    3. ' return' → logprob: -8.503853797912598
    4. '
' → logprob: -11.003853797912598
    5. '<|end|>' → logprob: -11.253853797912598
    6. '        
' → logprob: -11.628853797912598
    7. '	return' → logprob: -12.503853797912598
    8. '	' → logprob: -13.003853797912598
    9. '   ' → logprob: -13.503853797912598
    10. '           ' → logprob: -13.628853797912598

Token 537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31336861848831177
    2. 'return' → logprob: -1.313368558883667
    3. ' return' → logprob: -9.313368797302246
    4. '   ' → logprob: -11.438368797302246
    5. '	return' → logprob: -12.563368797302246
    6. '{return' → logprob: -14.313368797302246
    7. '```' → logprob: -14.688368797302246
    8. '           ' → logprob: -14.813368797302246
    9. ':return' → logprob: -15.188368797302246
    10. '
' → logprob: -15.438368797302246

Token 538: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019389885710552335
    2. '       ' → logprob: -6.251938819885254
    3. ' return' → logprob: -11.501938819885254
    4. '   ' → logprob: -15.626938819885254
    5. '	return' → logprob: -16.75193977355957
    6. '
' → logprob: -17.37693977355957
    7. 'eturn' → logprob: -19.62693977355957
    8. '{return' → logprob: -19.62693977355957
    9. '           ' → logprob: -20.75193977355957
    10. '```' → logprob: -21.00193977355957

Token 539: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3868710398674011
    2. ' total' → logprob: -1.136871099472046
    3. 'tot' → logprob: -17.136871337890625
    4. '(total' → logprob: -17.636871337890625
    5. '	total' → logprob: -17.886871337890625
    6. 't' → logprob: -19.136871337890625
    7. '   ' → logprob: -19.386871337890625
    8. '_total' → logprob: -19.636871337890625
    9. ' tot' → logprob: -19.761871337890625
    10. '       ' → logprob: -20.511871337890625

Token 540: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 542: ' Factory' (ID: 28905)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01004870980978012
    2. '<|end|>' → logprob: -5.260048866271973
    3. '```' → logprob: -6.135048866271973
    4. 'def' → logprob: -6.260048866271973
    5. '...' → logprob: -7.635048866271973
    6. ')' → logprob: -9.135048866271973
    7. '<|end|>' → logprob: -9.760048866271973
    8. '[' → logprob: -11.135048866271973
    9. 'The' → logprob: -11.510048866271973
    10. 'class' → logprob: -11.635048866271973

Token 543: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16024717688560486
    2. 'class' → logprob: -1.9102472066879272
    3. 'from' → logprob: -11.910246849060059
    4. '<|end|>' → logprob: -11.910246849060059
    5. ' def' → logprob: -12.410246849060059
    6. ' class' → logprob: -12.910246849060059
    7. '
' → logprob: -13.410246849060059
    8. '```' → logprob: -14.910246849060059
    9. 'import' → logprob: -15.285246849060059
    10. '<class' → logprob: -15.785246849060059

Token 544: ' Node' (ID: 10882)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15296071767807007
    2. 'Node' → logprob: -2.152960777282715
    3. 'class' → logprob: -4.652960777282715
    4. 'creating' → logprob: -4.902960777282715
    5. ' creating' → logprob: -5.402960777282715
    6. 'nodes' → logprob: -6.402960777282715
    7. ' nodes' → logprob: -7.027960777282715
    8. 'Nodes' → logprob: -7.652960777282715
    9. ' Node' → logprob: -7.902960777282715
    10. 'Creating' → logprob: -7.902960777282715

Token 545: ' creation' (ID: 15609)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1003584936261177
    2. 'def' → logprob: -2.350358486175537
    3. '
' → logprob: -8.975358963012695
    4. ' class' → logprob: -10.850358963012695
    5. '<|end|>' → logprob: -13.725358963012695
    6. ' def' → logprob: -13.975358963012695
    7. '  
' → logprob: -14.225358963012695
    8. '<class' → logprob: -14.225358963012695
    9. '

' → logprob: -14.600358963012695
    10. '```' → logprob: -14.850358963012695

Token 546: ' anticipating' (ID: 136423)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004402820952236652
    2. 'def' → logprob: -6.0044026374816895
    3. '
' → logprob: -6.2544026374816895
    4. ' class' → logprob: -13.504403114318848
    5. '```' → logprob: -13.879403114318848
    6. '

' → logprob: -14.629403114318848
    7. 'from' → logprob: -15.504403114318848
    8. ' 
' → logprob: -16.25440216064453
    9. '
' → logprob: -16.37940216064453
    10. '  
' → logprob: -16.62940216064453

Token 547: ' extensions' (ID: 34511)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1820649355649948
    2. ' possible' → logprob: -2.932065010070801
    3. ' the' → logprob: -3.057065010070801
    4. 'the' → logprob: -4.057065010070801
    5. 'class' → logprob: -4.557065010070801
    6. 'possible' → logprob: -4.682065010070801
    7. ' next' → logprob: -5.682065010070801
    8. ' def' → logprob: -5.682065010070801
    9. ' node' → logprob: -6.307065010070801
    10. ' future' → logprob: -6.307065010070801

Token 548: '.
' (ID: 558)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.006844549905508757
    2. '
' → logprob: -5.006844520568848
    3. 'def' → logprob: -9.006844520568848
    4. ' class' → logprob: -12.631844520568848
    5. '

' → logprob: -13.131844520568848
    6. '```' → logprob: -14.131844520568848
    7. '  
' → logprob: -15.381844520568848
    8. 'from' → logprob: -16.131845474243164
    9. '
' → logprob: -16.256845474243164
    10. ' 
' → logprob: -16.256845474243164

Token 549: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00029744720086455345
    2. '
' → logprob: -8.250297546386719
    3. 'def' → logprob: -10.500297546386719
    4. ' class' → logprob: -11.750297546386719
    5. '```' → logprob: -14.875297546386719
    6. '<class' → logprob: -16.00029754638672
    7. '"class' → logprob: -16.12529754638672
    8. '

' → logprob: -16.75029754638672
    9. 'from' → logprob: -17.00029754638672
    10. ' 
' → logprob: -17.25029754638672

Token 550: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.0015067668864503503
    2. ' Node' → logprob: -6.501506805419922
    3. 'Factory' → logprob: -12.626506805419922
    4. 'def' → logprob: -14.001506805419922
    5. 'Abstract' → logprob: -15.876506805419922
    6. 'node' → logprob: -16.251506805419922
    7. '	Node' → logprob: -17.126506805419922
    8. 'Tree' → logprob: -17.251506805419922
    9. 'Parser' → logprob: -17.376506805419922
    10. '_Node' → logprob: -17.626506805419922

Token 551: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -1.0280383548888494e-06
    2. 'Builder' → logprob: -14.625000953674316
    3. 'Type' → logprob: -16.250001907348633
    4. 'Factor' → logprob: -16.375001907348633
    5. '.Factory' → logprob: -16.375001907348633
    6. ':' → logprob: -16.500001907348633
    7. ' Factory' → logprob: -17.000001907348633
    8. '_factory' → logprob: -17.000001907348633
    9. ' factory' → logprob: -17.875001907348633
    10. '_FACTORY' → logprob: -18.625001907348633

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019348275382071733
    2. ':
' → logprob: -6.251935005187988
    3. '():' → logprob: -13.251935005187988
    4. '(' → logprob: -13.876935005187988
    5. ':

' → logprob: -14.126935005187988
    6. ':def' → logprob: -14.251935005187988
    7. '):' → logprob: -14.376935005187988
    8. '```' → logprob: -15.001935005187988
    9. '(object' → logprob: -15.251935005187988
    10. ' :' → logprob: -16.001934051513672

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02004016749560833
    2. ' def' → logprob: -4.395040035247803
    3. ' @' → logprob: -5.020040035247803
    4. 'def' → logprob: -7.645040035247803
    5. '@' → logprob: -8.270040512084961
    6. 'staticmethod' → logprob: -9.645040512084961
    7. ' ' → logprob: -10.895040512084961
    8. '    ' → logprob: -11.145040512084961
    9. '   ' → logprob: -11.145040512084961
    10. '  ' → logprob: -11.395040512084961

Token 554: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.5798270106315613
    2. ' @' → logprob: -0.8298270106315613
    3. ' def' → logprob: -5.829826831817627
    4. 'def' → logprob: -7.204826831817627
    5. '   ' → logprob: -8.704827308654785
    6. ' node' → logprob: -10.579827308654785
    7. 'node' → logprob: -12.829827308654785
    8. 'class' → logprob: -13.954827308654785
    9. ' _' → logprob: -14.079827308654785
    10. ' ' → logprob: -14.454827308654785

Token 555: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -6.630610641877865e-06
    2. 'classmethod' → logprob: -12.250006675720215
    3. 'static' → logprob: -13.250006675720215
    4. ' static' → logprob: -19.7500057220459
    5. 'stat' → logprob: -24.3750057220459
    6. 'property' → logprob: -27.0000057220459
    7. '_static' → logprob: -27.5000057220459
    8. 'Static' → logprob: -28.1250057220459
    9. '.static' → logprob: -28.3750057220459
    10. 'st' → logprob: -28.3750057220459

Token 556: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008092868141829967
    2. ' def' → logprob: -5.133092880249023
    3. '
' → logprob: -6.258092880249023
    4. '   ' → logprob: -8.883092880249023
    5. '(def' → logprob: -10.008092880249023
    6. '(' → logprob: -10.883092880249023
    7. '	def' → logprob: -11.508092880249023
    8. ':def' → logprob: -11.883092880249023
    9. '    
' → logprob: -12.133092880249023
    10. '(
' → logprob: -12.258092880249023

Token 557: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0037877275608479977
    2. '
' → logprob: -5.628787517547607
    3. ' def' → logprob: -8.628787994384766
    4. '  
' → logprob: -12.753787994384766
    5. '    
' → logprob: -12.878787994384766
    6. '   ' → logprob: -13.378787994384766
    7. '```' → logprob: -14.878787994384766
    8. 'method' → logprob: -15.003787994384766
    9. '('' → logprob: -15.878787994384766
    10. ' ' → logprob: -16.003787994384766

Token 558: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.723352049040841e-06
    2. ' def' → logprob: -12.375004768371582
    3. '
' → logprob: -14.750004768371582
    4. 'create' → logprob: -20.000003814697266
    5. ' ' → logprob: -20.250003814697266
    6. '   ' → logprob: -21.000003814697266
    7. 'method' → logprob: -21.125003814697266
    8. 'classmethod' → logprob: -21.250003814697266
    9. '_def' → logprob: -21.375003814697266
    10. '  
' → logprob: -22.000003814697266

Token 559: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.005233763717114925
    2. ' create' → logprob: -5.2552337646484375
    3. 'def' → logprob: -18.255233764648438
    4. 'get' → logprob: -18.505233764648438
    5. 'make' → logprob: -19.005233764648438
    6. 'build' → logprob: -19.630233764648438
    7. 'from' → logprob: -19.755233764648438
    8. '.create' → logprob: -19.880233764648438
    9. '	create' → logprob: -20.130233764648438
    10. '_create' → logprob: -20.630233764648438

Token 560: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.6726912260055542
    2. '(node' → logprob: -1.2976912260055542
    3. 'Node' → logprob: -2.1726913452148438
    4. '(' → logprob: -2.7976913452148438
    5. '(name' → logprob: -4.047691345214844
    6. 'node' → logprob: -4.797691345214844
    7. ' (' → logprob: -5.297691345214844
    8. '(Node' → logprob: -5.672691345214844
    9. '(type' → logprob: -6.047691345214844
    10. '(id' → logprob: -6.547691345214844

Token 561: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.5935150980949402
    2. '(type' → logprob: -1.093515157699585
    3. '(node' → logprob: -2.843515157699585
    4. '(' → logprob: -3.093515157699585
    5. ' (' → logprob: -5.343514919281006
    6. '(name' → logprob: -6.468514919281006
    7. '(token' → logprob: -6.718514919281006
    8. '(kind' → logprob: -7.468514919281006
    9. '(cls' → logprob: -7.968514919281006
    10. '(tag' → logprob: -8.718515396118164

Token 562: ':int' (ID: 30362)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002507643774151802
    2. ':' → logprob: -6.00250768661499
    3. ' ,' → logprob: -10.502507209777832
    4. '   ' → logprob: -13.252507209777832
    5. ':int' → logprob: -14.627507209777832
    6. '=' → logprob: -14.627507209777832
    7. ' :' → logprob: -15.002507209777832
    8. ')' → logprob: -15.002507209777832
    9. '‌,' → logprob: -15.002507209777832
    10. ',type' → logprob: -15.252507209777832

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ' ,' → logprob: -11.50001049041748
    3. ',type' → logprob: -15.37501049041748
    4. '   ' → logprob: -16.500011444091797
    5. ',class' → logprob: -17.750011444091797
    6. '‌,' → logprob: -18.000011444091797
    7. ',node' → logprob: -19.250011444091797
    8. '‍,' → logprob: -19.250011444091797
    9. ',
' → logprob: -19.375011444091797
    10. ',module' → logprob: -19.750011444091797

Token 564: ' info' (ID: 5377)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.1425773650407791
    2. 'type' → logprob: -2.1425774097442627
    3. ' node' → logprob: -4.767577171325684
    4. 'optional' → logprob: -5.267577171325684
    5. ' type' → logprob: -7.392577171325684
    6. ' optional' → logprob: -7.517577171325684
    7. 'nod' → logprob: -7.767577171325684
    8. 'typ' → logprob: -8.892577171325684
    9. 'kind' → logprob: -9.892577171325684
    10. '_type' → logprob: -10.642577171325684

Token 565: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004960790392942727
    2. ':str' → logprob: -7.875495910644531
    3. '):' → logprob: -10.000495910644531
    4. ':type' → logprob: -10.250495910644531
    5. ')' → logprob: -10.625495910644531
    6. '):
' → logprob: -13.000495910644531
    7. ':'' → logprob: -13.375495910644531
    8. '_type' → logprob: -13.750495910644531
    9. ':UI' → logprob: -14.000495910644531
    10. ':void' → logprob: -14.250495910644531

Token 566: ' str' (ID: 989)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.00852226372808218
    2. 'dict' → logprob: -4.883522033691406
    3. 'str' → logprob: -7.133522033691406
    4. 'Union' → logprob: -9.258522033691406
    5. ' Dict' → logprob: -11.133522033691406
    6. ' dict' → logprob: -12.508522033691406
    7. 'Tuple' → logprob: -13.508522033691406
    8. 'List' → logprob: -14.008522033691406
    9. ' str' → logprob: -14.508522033691406
    10. '_dict' → logprob: -14.633522033691406

Token 567: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008636081591248512
    2. ')' → logprob: -4.758635997772217
    3. ' ,' → logprob: -10.883636474609375
    4. ')->' → logprob: -13.383636474609375
    5. '):' → logprob: -14.633636474609375
    6. ' )' → logprob: -15.508636474609375
    7. '):
' → logprob: -15.758636474609375
    8. '   ' → logprob: -16.258636474609375
    9. ',)' → logprob: -16.258636474609375
    10. ',opt' → logprob: -16.383636474609375

Token 568: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3225328326225281
    2. '->' → logprob: -1.3225328922271729
    3. ':
' → logprob: -5.822532653808594
    4. ' ->' → logprob: -5.947532653808594
    5. ')->' → logprob: -6.447532653808594
    6. ')' → logprob: -7.947532653808594
    7. ',' → logprob: -8.072532653808594
    8. ':return' → logprob: -8.322532653808594
    9. '->____' → logprob: -8.572532653808594
    10. '()->' → logprob: -8.572532653808594

Token 569: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.07953768968582153
    2. 'Optional' → logprob: -2.5795376300811768
    3. 'Union' → logprob: -7.829537868499756
    4. ' Node' → logprob: -8.579537391662598
    5. ' Optional' → logprob: -10.204537391662598
    6. ''' → logprob: -10.704537391662598
    7. 'None' → logprob: -14.204537391662598
    8. ' Union' → logprob: -15.079537391662598
    9. 'node' → logprob: -15.204537391662598
    10. 'optional' → logprob: -15.204537391662598

Token 570: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03001636266708374
    2. ':
' → logprob: -4.6550164222717285
    3. '(' → logprob: -5.0300164222717285
    4. '       ' → logprob: -6.1550164222717285
    5. '   ' → logprob: -6.2800164222717285
    6. '<|end|>' → logprob: -6.2800164222717285
    7. ',' → logprob: -6.4050164222717285
    8. '(token' → logprob: -6.7800164222717285
    9. '(
' → logprob: -7.1550164222717285
    10. '):' → logprob: -7.1550164222717285

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011250240728259087
    2. 'tokens' → logprob: -5.011250019073486
    3. 'token' → logprob: -6.011250019073486
    4. 'if' → logprob: -6.761250019073486
    5. ' if' → logprob: -8.386250495910645
    6. '   ' → logprob: -9.011250495910645
    7. 'parts' → logprob: -9.136250495910645
    8. '```' → logprob: -9.261250495910645
    9. ' tokens' → logprob: -9.511250495910645
    10. ' parts' → logprob: -9.761250495910645

Token 572: ' optional' (ID: 18297)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.32780930399894714
    2. 'info' → logprob: -1.5778093338012695
    3. 'type' → logprob: -3.0778093338012695
    4. 'if' → logprob: -4.3278093338012695
    5. 'tokens' → logprob: -4.9528093338012695
    6. '       ' → logprob: -5.3278093338012695
    7. ' parts' → logprob: -6.8278093338012695
    8. 'token' → logprob: -8.57780933380127
    9. ' if' → logprob: -8.57780933380127
    10. 'data' → logprob: -9.57780933380127

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5314883589744568
    2. ' =' → logprob: -0.9064883589744568
    3. '_' → logprob: -5.031488418579102
    4. ',' → logprob: -7.906488418579102
    5. '_idx' → logprob: -7.906488418579102
    6. '_space' → logprob: -8.156488418579102
    7. '_=' → logprob: -8.906488418579102
    8. '_token' → logprob: -9.031488418579102
    9. '_tokens' → logprob: -9.281488418579102
    10. '_flag' → logprob: -9.656488418579102

Token 574: ' info' (ID: 5377)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08669682592153549
    2. 'info' → logprob: -2.9616968631744385
    3. '('' → logprob: -4.211696624755859
    4. '"' → logprob: -5.586696624755859
    5. '(info' → logprob: -5.836696624755859
    6. ''information' → logprob: -6.086696624755859
    7. ''in' → logprob: -6.211696624755859
    8. ''(' → logprob: -6.961696624755859
    9. ' '' → logprob: -7.461696624755859
    10. ''op' → logprob: -7.961696624755859

Token 575: '.endswith' (ID: 100591)
  Prédit: '.endswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.endswith' → logprob: -0.03660387545824051
    2. '.split' → logprob: -3.7866039276123047
    3. '.startswith' → logprob: -4.661603927612305
    4. '.strip' → logprob: -6.411603927612305
    5. '[-' → logprob: -6.536603927612305
    6. '[' → logprob: -8.536603927612305
    7. '==' → logprob: -8.786603927612305
    8. '.' → logprob: -8.786603927612305
    9. ' ==' → logprob: -9.161603927612305
    10. '.count' → logprob: -10.161603927612305

Token 576: '('?' (ID: 181802)
  Prédit: '('?'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('?' → logprob: -0.07466167211532593
    2. '('' → logprob: -3.4496617317199707
    3. '("?' → logprob: -3.5746617317199707
    4. ''?' → logprob: -5.074661731719971
    5. '('*' → logprob: -6.074661731719971
    6. '?' → logprob: -6.824661731719971
    7. '('_' → logprob: -7.199661731719971
    8. '("' → logprob: -7.574661731719971
    9. '"?' → logprob: -7.949661731719971
    10. ''' → logprob: -8.199661254882812

Token 577: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2607745826244354
    2. '')
' → logprob: -1.5107746124267578
    3. ')' → logprob: -4.760774612426758
    4. ')
' → logprob: -9.010774612426758
    5. ''' → logprob: -9.385774612426758
    6. '?' → logprob: -10.885774612426758
    7. ')')
' → logprob: -11.635774612426758
    8. '')
' → logprob: -12.010774612426758
    9. '')

' → logprob: -12.635774612426758
    10. '")' → logprob: -13.135774612426758

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03053135797381401
    2. '<|end|>' → logprob: -4.280531406402588
    3. ' ' → logprob: -4.905531406402588
    4. ' if' → logprob: -5.905531406402588
    5. '        ' → logprob: -6.405531406402588
    6. '        
' → logprob: -6.530531406402588
    7. 'if' → logprob: -7.280531406402588
    8. '   ' → logprob: -7.780531406402588
    9. ' 
' → logprob: -7.780531406402588
    10. '    ' → logprob: -8.28053092956543

Token 579: ' base' (ID: 3611)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.40269315242767334
    2. ' if' → logprob: -2.027693271636963
    3. 'if' → logprob: -2.152693271636963
    4. 'info' → logprob: -3.652693271636963
    5. ' type' → logprob: -3.777693271636963
    6. '       ' → logprob: -4.527693271636963
    7. 'node' → logprob: -4.527693271636963
    8. 'kind' → logprob: -5.152693271636963
    9. 'token' → logprob: -6.027693271636963
    10. 'space' → logprob: -6.902693271636963

Token 580: ' =' (ID: 314)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.27678853273391724
    2. ' =' → logprob: -1.9017884731292725
    3. 'type' → logprob: -2.9017884731292725
    4. '_name' → logprob: -3.5267884731292725
    5. '=' → logprob: -5.151788711547852
    6. 'name' → logprob: -6.276788711547852
    7. '_info' → logprob: -7.901788711547852
    8. ',' → logprob: -10.776788711547852
    9. 'Type' → logprob: -11.026788711547852
    10. '_' → logprob: -11.401788711547852

Token 581: ' info' (ID: 5377)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' → logprob: -0.00018196819291915745
    2. ' info' → logprob: -8.625182151794434
    3. '(info' → logprob: -13.125182151794434
    4. ''' → logprob: -15.750182151794434
    5. '   ' → logprob: -16.875181198120117
    6. '	info' → logprob: -17.500181198120117
    7. ' ' → logprob: -17.875181198120117
    8. 'None' → logprob: -18.125181198120117
    9. 'Or' → logprob: -19.375181198120117
    10. '  ' → logprob: -19.375181198120117

Token 582: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.6658896803855896
    2. '.rstrip' → logprob: -1.5408897399902344
    3. '.replace' → logprob: -2.0408897399902344
    4. '.split' → logprob: -2.0408897399902344
    5. ' =' → logprob: -5.290889739990234
    6. '[' → logprob: -5.540889739990234
    7. 'split' → logprob: -7.290889739990234
    8. '=' → logprob: -7.415889739990234
    9. ' if' → logprob: -7.665889739990234
    10. '[:' → logprob: -8.165889739990234

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008647724171169102
    2. '(' → logprob: -7.8758649826049805
    3. '?' → logprob: -7.8758649826049805
    4. '('' → logprob: -10.00086498260498
    5. '('?' → logprob: -10.12586498260498
    6. ''' → logprob: -12.62586498260498
    7. 'int' → logprob: -12.87586498260498
    8. '   ' → logprob: -13.37586498260498
    9. '("?' → logprob: -13.75086498260498
    10. ' (' → logprob: -13.75086498260498

Token 584: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003336777735967189
    2. ']
' → logprob: -8.250333786010742
    3. '].' → logprob: -10.375333786010742
    4. 'if' → logprob: -10.500333786010742
    5. ' if' → logprob: -11.875333786010742
    6. ' ]' → logprob: -12.750333786010742
    7. ']

' → logprob: -13.125333786010742
    8. ']
' → logprob: -14.750333786010742
    9. '       ' → logprob: -15.125333786010742
    10. '   ' → logprob: -15.250333786010742

Token 585: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2805781960487366
    2. 'if' → logprob: -1.5305781364440918
    3. '       ' → logprob: -3.655578136444092
    4. '
' → logprob: -7.280578136444092
    5. '<|end|>' → logprob: -7.405578136444092
    6. ' or' → logprob: -7.530578136444092
    7. '	if' → logprob: -8.65557861328125
    8. '        
' → logprob: -9.78057861328125
    9. '.' → logprob: -9.90557861328125
    10. ')' → logprob: -9.90557861328125

Token 586: ' optional' (ID: 18297)
  Prédit: 'optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optional' → logprob: -0.004059759434312582
    2. ' optional' → logprob: -5.754059791564941
    3. '(optional' → logprob: -7.629059791564941
    4. 'info' → logprob: -7.879059791564941
    5. 'base' → logprob: -11.254059791564941
    6. 'Optional' → logprob: -13.879059791564941
    7. ' info' → logprob: -14.379059791564941
    8. '(info' → logprob: -14.879059791564941
    9. '_optional' → logprob: -15.004059791564941
    10. '(' → logprob: -15.379059791564941

Token 587: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.12706029415130615
    2. ' else' → logprob: -2.1270604133605957
    3. '==' → logprob: -9.502059936523438
    4. 'and' → logprob: -10.752059936523438
    5. '       ' → logprob: -11.502059936523438
    6. '	else' → logprob: -12.252059936523438
    7. ' and' → logprob: -12.502059936523438
    8. '.endswith' → logprob: -12.877059936523438
    9. 'elif' → logprob: -13.252059936523438
    10. '           ' → logprob: -13.502059936523438

Token 588: ' info' (ID: 5377)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' → logprob: -2.935296834039036e-06
    2. ' info' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.500003814697266
    4. '	info' → logprob: -19.375003814697266
    5. '_info' → logprob: -20.625003814697266
    6. '
' → logprob: -20.875003814697266
    7. ' ' → logprob: -21.750003814697266
    8. 'INFO' → logprob: -21.875003814697266
    9. '(info' → logprob: -22.000003814697266
    10. '.info' → logprob: -22.000003814697266

Token 589: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016146862879395485
    2. 'if' → logprob: -4.641146659851074
    3. ' if' → logprob: -5.141146659851074
    4. ' ' → logprob: -8.766146659851074
    5. '   ' → logprob: -9.016146659851074
    6. '        
' → logprob: -9.516146659851074
    7. 'token' → logprob: -10.391146659851074
    8. '        ' → logprob: -10.766146659851074
    9. '```' → logprob: -10.891146659851074
    10. '	' → logprob: -11.016146659851074

Token 591: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011442647082731128
    2. '       ' → logprob: -7.2511444091796875
    3. ' if' → logprob: -7.7511444091796875
    4. 'type' → logprob: -13.376144409179688
    5. 'token' → logprob: -13.876144409179688
    6. 'match' → logprob: -14.876144409179688
    7. '   ' → logprob: -15.001144409179688
    8. 'i' → logprob: -15.376144409179688
    9. 'node' → logprob: -16.126144409179688
    10. '	if' → logprob: -16.376144409179688

Token 592: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.1602269560098648
    2. ' base' → logprob: -1.9102269411087036
    3. '   ' → logprob: -13.660226821899414
    4. '	base' → logprob: -13.910226821899414
    5. ' ' → logprob: -15.285226821899414
    6. '(base' → logprob: -16.160226821899414
    7. ''' → logprob: -16.285226821899414
    8. '"' → logprob: -16.535226821899414
    9. '       ' → logprob: -16.785226821899414
    10. '    ' → logprob: -17.035226821899414

Token 593: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5763182044029236
    2. ' ==' → logprob: -0.8263182044029236
    3. '=='' → logprob: -8.20131778717041
    4. '=="' → logprob: -9.45131778717041
    5. '=' → logprob: -11.57631778717041
    6. '===' → logprob: -11.70131778717041
    7. '.startswith' → logprob: -12.32631778717041
    8. '==
' → logprob: -14.32631778717041
    9. ' =='' → logprob: -14.32631778717041
    10. 'in' → logprob: -14.57631778717041

Token 594: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.2939799726009369
    2. ''' → logprob: -1.9189800024032593
    3. '"' → logprob: -2.7939798831939697
    4. '"S' → logprob: -3.6689798831939697
    5. ''Or' → logprob: -3.9189798831939697
    6. ''s' → logprob: -7.543980121612549
    7. ''O' → logprob: -7.793980121612549
    8. ''or' → logprob: -8.29397964477539
    9. ' '' → logprob: -9.54397964477539
    10. ''A' → logprob: -10.41897964477539

Token 595: 'E' (ID: 36)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.9913655519485474
    2. 'S' → logprob: -1.8663655519485474
    3. 'sub' → logprob: -1.8663655519485474
    4. 'Sub' → logprob: -2.116365432739258
    5. 'SUB' → logprob: -2.491365432739258
    6. ''' → logprob: -2.866365432739258
    7. ''s' → logprob: -3.741365432739258
    8. '"' → logprob: -4.741365432739258
    9. 'subst' → logprob: -5.116365432739258
    10. 'OR' → logprob: -5.366365432739258

Token 596: '':
' (ID: 7669)
  Prédit: 'Or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Or' → logprob: -1.616481065750122
    2. ''' → logprob: -1.741481065750122
    3. 'or' → logprob: -1.866481065750122
    4. '':' → logprob: -2.241481065750122
    5. 'Sub' → logprob: -2.616481065750122
    6. 'OR' → logprob: -2.741481065750122
    7. 'lement' → logprob: -3.116481065750122
    8. 'x' → logprob: -3.741481065750122
    9. ''or' → logprob: -3.741481065750122
    10. 'PS' → logprob: -3.991481065750122

Token 597: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12827202677726746
    2. '           ' → logprob: -2.12827205657959
    3. ' return' → logprob: -6.62827205657959
    4. '               ' → logprob: -12.00327205657959
    5. ':return' → logprob: -12.50327205657959
    6. '       ' → logprob: -12.87827205657959
    7. '
' → logprob: -13.25327205657959
    8. '		' → logprob: -13.75327205657959
    9. '	       ' → logprob: -14.00327205657959
    10. '            
' → logprob: -14.37827205657959

Token 598: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.1756367712223437e-05
    2. ' return' → logprob: -11.500011444091797
    3. '           ' → logprob: -13.375011444091797
    4. '
' → logprob: -17.250011444091797
    5. '       ' → logprob: -17.875011444091797
    6. '               ' → logprob: -18.625011444091797
    7. '	return' → logprob: -19.000011444091797
    8. '{return' → logprob: -19.125011444091797
    9. ':return' → logprob: -19.875011444091797
    10. '   ' → logprob: -20.000011444091797

Token 599: ' Substance' (ID: 165971)
  Prédit: 'Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -8.113290095934644e-05
    2. 'Node' → logprob: -10.375081062316895
    3. 'Selection' → logprob: -10.500081062316895
    4. ' Substance' → logprob: -10.875081062316895
    5. 'Or' → logprob: -13.500081062316895
    6. 'Element' → logprob: -14.000081062316895
    7. '   ' → logprob: -14.875081062316895
    8. ' Sub' → logprob: -15.125081062316895
    9. ' substance' → logprob: -15.750081062316895
    10. 'Entity' → logprob: -16.12508201599121

Token 600: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.04300399497151375
    2. 'Sub' → logprob: -3.168004035949707
    3. '(Sub' → logprob: -13.293004035949707
    4. 'node' → logprob: -14.168004035949707
    5. 'sub' → logprob: -14.543004035949707
    6. 'None' → logprob: -14.793004035949707
    7. '(' → logprob: -14.918004035949707
    8. 'Nodes' → logprob: -15.793004035949707
    9. 'S' → logprob: -16.04300308227539
    10. 'N' → logprob: -16.41800308227539

Token 601: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0015147423837333918
    2. 'idx' → logprob: -6.501514911651611
    3. '(' → logprob: -11.501514434814453
    4. ' idx' → logprob: -14.001514434814453
    5. '           ' → logprob: -14.876514434814453
    6. ' (' → logprob: -15.001514434814453
    7. '(index' → logprob: -15.251514434814453
    8. '[idx' → logprob: -15.501514434814453
    9. '	idx' → logprob: -16.376514434814453
    10. '(
' → logprob: -16.501514434814453

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.259079363080673e-05
    2. ' ,' → logprob: -11.375012397766113
    3. '=' → logprob: -14.625012397766113
    4. ',false' → logprob: -16.12501335144043
    5. ')' → logprob: -16.25001335144043
    6. ',
' → logprob: -16.62501335144043
    7. 'idx' → logprob: -16.75001335144043
    8. '   ' → logprob: -17.12501335144043
    9. '=False' → logprob: -17.50001335144043
    10. 'False' → logprob: -17.50001335144043

Token 603: ' optional' (ID: 18297)
  Prédit: 'optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optional' → logprob: -0.005117414984852076
    2. 'False' → logprob: -5.505117416381836
    3. ' optional' → logprob: -6.880117416381836
    4. ' False' → logprob: -12.505117416381836
    5. 'True' → logprob: -12.630117416381836
    6. '           ' → logprob: -13.755117416381836
    7. '       ' → logprob: -13.880117416381836
    8. 'Optional' → logprob: -14.380117416381836
    9. '(optional' → logprob: -15.005117416381836
    10. 'false' → logprob: -15.380117416381836

Token 604: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31884294748306274
    2. ')' → logprob: -1.318842887878418
    3. '       ' → logprob: -5.193842887878418
    4. ')
' → logprob: -11.193842887878418
    5. ')

' → logprob: -15.068842887878418
    6. '   ' → logprob: -15.068842887878418
    7. ' )
' → logprob: -15.318842887878418
    8. ')`
' → logprob: -15.943842887878418
    9. ')\
' → logprob: -16.318843841552734
    10. ' )' → logprob: -16.318843841552734

Token 605: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022594700567424297
    2. 'elif' → logprob: -8.875226020812988
    3. 'if' → logprob: -9.625226020812988
    4. '   ' → logprob: -11.625226020812988
    5. '<|end|>' → logprob: -12.000226020812988
    6. '        
' → logprob: -14.125226020812988
    7. 'return' → logprob: -14.125226020812988
    8. ' if' → logprob: -14.500226020812988
    9. '
' → logprob: -14.500226020812988
    10. '	' → logprob: -14.625226020812988

Token 606: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.604310929775238
    2. '       ' → logprob: -1.1043109893798828
    3. 'elif' (adapté à ' elif') → logprob: -2.104310989379883
    4. ' if' → logprob: -9.104310989379883
    5. '
' → logprob: -9.854310989379883
    6. ' elif' → logprob: -11.729310989379883
    7. '        
' → logprob: -12.104310989379883
    8. '   ' → logprob: -13.854310989379883
    9. 'If' → logprob: -14.479310989379883
    10. '	' → logprob: -15.479310989379883

Token 607: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4740773141384125
    2. ' base' → logprob: -0.9740773439407349
    3. '	base' → logprob: -15.724077224731445
    4. '           ' → logprob: -16.349077224731445
    5. '(base' → logprob: -17.224077224731445
    6. '_base' → logprob: -17.849077224731445
    7. 'Base' → logprob: -17.849077224731445
    8. '       ' → logprob: -17.849077224731445
    9. ' ' → logprob: -19.349077224731445
    10. '    ' → logprob: -19.474077224731445

Token 608: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.062054283916950226
    2. '==' → logprob: -2.812054395675659
    3. '=='' → logprob: -9.562054634094238
    4. '=' → logprob: -12.562054634094238
    5. '=="' → logprob: -12.562054634094238
    6. ' =='' → logprob: -12.812054634094238
    7. '===' → logprob: -12.937054634094238
    8. ' =' → logprob: -13.187054634094238
    9. ' ===' → logprob: -14.437054634094238
    10. '==
' → logprob: -15.437054634094238

Token 609: ' '' (ID: 461)
  Prédit: ''O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''O' → logprob: -0.6126493215560913
    2. ''Or' → logprob: -0.8626493215560913
    3. ''' → logprob: -3.612649440765381
    4. ' '' → logprob: -4.862649440765381
    5. ''I' → logprob: -7.237649440765381
    6. ''U' → logprob: -7.987649440765381
    7. ''S' → logprob: -9.112648963928223
    8. ' ' → logprob: -9.862648963928223
    9. ''or' → logprob: -9.987648963928223
    10. ''E' → logprob: -10.612648963928223

Token 610: 'R' (ID: 49)
  Prédit: ''O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''O' → logprob: -0.5190398097038269
    2. ''' → logprob: -1.5190398693084717
    3. ''Or' → logprob: -2.1440398693084717
    4. ''S' → logprob: -3.3940398693084717
    5. ''or' → logprob: -4.644039630889893
    6. ''A' → logprob: -4.769039630889893
    7. ''I' → logprob: -6.019039630889893
    8. '"' → logprob: -6.019039630889893
    9. ''N' → logprob: -6.144039630889893
    10. 'O' → logprob: -6.269039630889893

Token 611: '':
' (ID: 7669)
  Prédit: 'Selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selection' → logprob: -0.3105785846710205
    2. 'Or' → logprob: -1.9355785846710205
    3. '':
' → logprob: -3.3105785846710205
    4. ''' → logprob: -3.4355785846710205
    5. 'Alt' → logprob: -4.560578346252441
    6. 'O' → logprob: -5.060578346252441
    7. 'e' → logprob: -5.435578346252441
    8. 'OR' → logprob: -5.810578346252441
    9. ':
' → logprob: -6.185578346252441
    10. 'Select' → logprob: -6.185578346252441

Token 612: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6507613658905029
    2. ' return' → logprob: -1.150761365890503
    3. '           ' → logprob: -1.900761365890503
    4. '       ' → logprob: -4.400761604309082
    5. '               ' → logprob: -9.400761604309082
    6. '   ' → logprob: -10.025761604309082
    7. ':return' → logprob: -10.150761604309082
    8. '	return' → logprob: -10.775761604309082
    9. ' ' → logprob: -11.150761604309082
    10. '	       ' → logprob: -11.525761604309082

Token 613: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004306692280806601
    2. ' return' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.500431060791016
    4. '
' → logprob: -17.875431060791016
    5. '       ' → logprob: -18.750431060791016
    6. 'Or' → logprob: -18.750431060791016
    7. '	return' → logprob: -19.375431060791016
    8. '           ' → logprob: -19.625431060791016
    9. 'Return' → logprob: -19.625431060791016
    10. ':return' → logprob: -20.750431060791016

Token 614: ' Or' (ID: 2604)
  Prédit: 'Or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Or' → logprob: -0.04859986528754234
    2. ' Or' → logprob: -3.0485999584198
    3. 'Selection' → logprob: -11.673600196838379
    4. 'Alt' → logprob: -13.298600196838379
    5. ' Selection' → logprob: -13.548600196838379
    6. ' Alt' → logprob: -15.673600196838379
    7. ' or' → logprob: -16.173599243164062
    8. 'OR' → logprob: -16.298599243164062
    9. ' ' → logprob: -16.423599243164062
    10. ''Or' → logprob: -16.423599243164062

Token 615: 'Selection' (ID: 12653)
  Prédit: 'Selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selection' → logprob: 0.0
    2. 'selection' → logprob: -17.0
    3. '(' → logprob: -18.75
    4. 'Select' → logprob: -19.0
    5. '_selection' → logprob: -20.375
    6. 'Sele' → logprob: -20.5
    7. 'Or' → logprob: -20.625
    8. ' Selection' → logprob: -21.875
    9. '_SELECTION' → logprob: -21.875
    10. '.Selection' → logprob: -22.125

Token 616: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: 0.0
    2. ' Node' → logprob: -19.0
    3. '	Node' → logprob: -19.0
    4. '_Node' → logprob: -19.875
    5. 'N' → logprob: -20.5
    6. 'Selection' → logprob: -20.625
    7. 'node' → logprob: -20.75
    8. '<Node' → logprob: -20.875
    9. '(Node' → logprob: -20.875
    10. 'Or' → logprob: -21.0

Token 617: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -8.65707261255011e-06
    2. ' (' → logprob: -12.125008583068848
    3. '(' → logprob: -13.500008583068848
    4. '[idx' → logprob: -13.625008583068848
    5. '(index' → logprob: -15.750008583068848
    6. '(ctx' → logprob: -16.375009536743164
    7. 'idx' → logprob: -16.500009536743164
    8. '(ix' → logprob: -17.000009536743164
    9. '(
' → logprob: -17.125009536743164
    10. '(indices' → logprob: -17.500009536743164

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.661626634420827e-05
    2. ' ,' → logprob: -9.375086784362793
    3. ',opt' → logprob: -14.250086784362793
    4. ')' → logprob: -14.750086784362793
    5. '<|end|>' → logprob: -15.375086784362793
    6. '(optional' → logprob: -16.125085830688477
    7. ' optional' → logprob: -16.250085830688477
    8. 'optional' → logprob: -16.250085830688477
    9. ',
' → logprob: -16.625085830688477
    10. '           ' → logprob: -17.250085830688477

Token 619: ' optional' (ID: 18297)
  Prédit: 'optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optional' → logprob: -0.023245595395565033
    2. ' optional' → logprob: -3.7732455730438232
    3. '(optional' → logprob: -15.898245811462402
    4. 'Optional' → logprob: -17.648244857788086
    5. '.optional' → logprob: -17.898244857788086
    6. '_optional' → logprob: -19.023244857788086
    7. '           ' → logprob: -19.523244857788086
    8. '       ' → logprob: -19.648244857788086
    9. 'opt' → logprob: -20.398244857788086
    10. '   ' → logprob: -20.648244857788086

Token 620: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7088647484779358
    2. ')' → logprob: -0.9588647484779358
    3. '       ' → logprob: -2.083864688873291
    4. ')
' → logprob: -11.83386516571045
    5. ')return' → logprob: -12.45886516571045
    6. '   ' → logprob: -12.95886516571045
    7. '
' → logprob: -13.95886516571045
    8. ' )
' → logprob: -13.95886516571045
    9. ')\
' → logprob: -13.95886516571045
    10. '):
' → logprob: -14.08386516571045

Token 621: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016206118743866682
    2. 'elif' → logprob: -8.750162124633789
    3. ' elif' → logprob: -13.500162124633789
    4. '   ' → logprob: -13.625162124633789
    5. '	' → logprob: -14.500162124633789
    6. '```' → logprob: -16.00016212463379
    7. '	elif' → logprob: -16.12516212463379
    8. '<|end|>' → logprob: -16.50016212463379
    9. '
' → logprob: -16.87516212463379
    10. '      ' → logprob: -17.25016212463379

Token 622: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.00525154173374176
    2. '       ' → logprob: -5.255251407623291
    3. ' elif' → logprob: -11.00525188446045
    4. '   ' → logprob: -14.25525188446045
    5. 'else' → logprob: -15.25525188446045
    6. '	elif' → logprob: -16.255250930786133
    7. '
' → logprob: -16.755250930786133
    8. ' ' → logprob: -17.505250930786133
    9. '#elif' → logprob: -18.255250930786133
    10. 'if' → logprob: -19.130250930786133

Token 623: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.47408348321914673
    2. ' base' → logprob: -0.9740834832191467
    3. '	base' → logprob: -13.22408390045166
    4. '           ' → logprob: -13.34908390045166
    5. '(base' → logprob: -13.97408390045166
    6. ''' → logprob: -14.84908390045166
    7. 'Base' → logprob: -14.84908390045166
    8. ' ' → logprob: -15.22408390045166
    9. '_base' → logprob: -15.34908390045166
    10. '       ' → logprob: -15.34908390045166

Token 624: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4319656789302826
    2. '==' → logprob: -1.056965708732605
    3. '=='' → logprob: -5.9319658279418945
    4. '=' → logprob: -7.8069658279418945
    5. ''' → logprob: -9.181965827941895
    6. ' =='' → logprob: -10.181965827941895
    7. ' =' → logprob: -10.806965827941895
    8. '===' → logprob: -11.431965827941895
    9. '='' → logprob: -12.306965827941895
    10. ' '' → logprob: -12.681965827941895

Token 625: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.06613907963037491
    2. ''S' → logprob: -3.066138982772827
    3. ''L' → logprob: -4.441139221191406
    4. ' '' → logprob: -6.066139221191406
    5. ''' → logprob: -6.316139221191406
    6. ''U' → logprob: -7.316139221191406
    7. ''O' → logprob: -7.816139221191406
    8. ''I' → logprob: -8.566139221191406
    9. ''C' → logprob: -9.316139221191406
    10. ''T' → logprob: -10.066139221191406

Token 626: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06929618120193481
    2. 'L' → logprob: -2.81929612159729
    3. 'S' → logprob: -6.069296360015869
    4. 'X' → logprob: -7.194296360015869
    5. 'C' → logprob: -7.319296360015869
    6. 'P' → logprob: -7.444296360015869
    7. 'U' → logprob: -7.569296360015869
    8. 'Alt' → logprob: -7.694296360015869
    9. ''A' → logprob: -7.944296360015869
    10. ''' → logprob: -8.444295883178711

Token 627: '':
' (ID: 7669)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.0001847062085289508
    2. 'l' → logprob: -8.625185012817383
    3. 'lts' → logprob: -13.125185012817383
    4. 'alt' → logprob: -14.375185012817383
    5. '```' → logprob: -14.375185012817383
    6. 'ltk' → logprob: -14.750185012817383
    7. 'lrt' → logprob: -15.375185012817383
    8. 'L' → logprob: -15.625185012817383
    9. ' lt' → logprob: -15.875185012817383
    10. 'llt' → logprob: -16.000185012817383

Token 628: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3974156677722931
    2. ' return' → logprob: -1.1474156379699707
    3. '           ' → logprob: -4.647415637969971
    4. '       ' → logprob: -7.522415637969971
    5. ':return' → logprob: -8.397416114807129
    6. 'eturn' → logprob: -9.272416114807129
    7. '   ' → logprob: -11.272416114807129
    8. ':' → logprob: -11.272416114807129
    9. '	return' → logprob: -12.522416114807129
    10. '               ' → logprob: -12.647416114807129

Token 629: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019287518225610256
    2. ' return' → logprob: -6.251928806304932
    3. '           ' → logprob: -17.501928329467773
    4. '       ' → logprob: -17.751928329467773
    5. '
' → logprob: -17.876928329467773
    6. '   ' → logprob: -18.251928329467773
    7. '	return' → logprob: -19.001928329467773
    8. ':return' → logprob: -20.376928329467773
    9. 'eturn' → logprob: -20.876928329467773
    10. '```' → logprob: -22.376928329467773

Token 630: ' Alt' (ID: 26421)
  Prédit: 'Alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Alt' → logprob: -0.004078401252627373
    2. ' Alt' → logprob: -5.504078388214111
    3. 'alt' → logprob: -19.879077911376953
    4. ' alt' → logprob: -20.629077911376953
    5. 'Al' → logprob: -21.254077911376953
    6. ' ' → logprob: -21.629077911376953
    7. '   ' → logprob: -21.629077911376953
    8. '_alt' → logprob: -21.879077911376953
    9. 'ALT' → logprob: -22.504077911376953
    10. 'Alter' → logprob: -22.629077911376953

Token 631: 'Selection' (ID: 12653)
  Prédit: 'Selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selection' → logprob: 0.0
    2. 'selection' → logprob: -18.75
    3. 'Select' → logprob: -19.5
    4. 'Sele' → logprob: -19.875
    5. '_selection' → logprob: -20.0
    6. ' Selection' → logprob: -20.625
    7. '.Selection' → logprob: -21.5
    8. '_SELECTION' → logprob: -21.5
    9. 'Seleccion' → logprob: -21.875
    10. ' selection' → logprob: -23.125

Token 632: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: 0.0
    2. 'ode' → logprob: -17.125
    3. 'Nodes' → logprob: -17.875
    4. 'N' → logprob: -18.625
    5. '	Node' → logprob: -21.125
    6. 'Selection' → logprob: -21.125
    7. 'node' → logprob: -21.125
    8. ' Node' → logprob: -21.375
    9. '_node' → logprob: -21.5
    10. '_Node' → logprob: -21.625

Token 633: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -1.5048530030981055e-06
    2. '[idx' → logprob: -14.000001907348633
    3. ' (' → logprob: -14.625001907348633
    4. '(index' → logprob: -16.500001907348633
    5. '(ix' → logprob: -16.875001907348633
    6. '(' → logprob: -17.500001907348633
    7. 'idx' → logprob: -17.625001907348633
    8. '(ctx' → logprob: -17.750001907348633
    9. '(id' → logprob: -18.875001907348633
    10. ' idx' → logprob: -19.000001907348633

Token 634: ',' (ID: 11)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.5703569054603577
    2. ',' → logprob: -1.070356845855713
    3. 'idx' → logprob: -2.695356845855713
    4. ' idx' → logprob: -3.820356845855713
    5. '[idx' → logprob: -6.195356845855713
    6. ' ,' → logprob: -9.195357322692871
    7. '	idx' → logprob: -9.195357322692871
    8. ')' → logprob: -9.695357322692871
    9. '),' → logprob: -10.695357322692871
    10. '.idx' → logprob: -11.695357322692871

Token 635: ' optional' (ID: 18297)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1611793339252472
    2. 'optional' → logprob: -1.9111793041229248
    3. ' optional' → logprob: -7.286179542541504
    4. ' idx' → logprob: -8.286179542541504
    5. 'Optional' → logprob: -11.786179542541504
    6. 'opt' → logprob: -11.911179542541504
    7. '(idx' → logprob: -13.286179542541504
    8. '_optional' → logprob: -14.411179542541504
    9. '(optional' → logprob: -14.786179542541504
    10. '[idx' → logprob: -15.161179542541504

Token 636: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09058438241481781
    2. ')' → logprob: -2.4655842781066895
    3. '<|end|>' → logprob: -7.0905842781066895
    4. ')
' → logprob: -7.2155842781066895
    5. '<|end|>' → logprob: -11.090584754943848
    6. ')return' → logprob: -11.340584754943848
    7. 'return' → logprob: -11.715584754943848
    8. '
' → logprob: -11.840584754943848
    9. '        
' → logprob: -12.340584754943848
    10. '):
' → logprob: -12.465584754943848

Token 637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015943869948387146
    2. 'else' → logprob: -9.37515926361084
    3. '   ' → logprob: -10.62515926361084
    4. '<|end|>' → logprob: -11.12515926361084
    5. 'return' → logprob: -11.50015926361084
    6. ' else' → logprob: -12.37515926361084
    7. '      ' → logprob: -12.50015926361084
    8. '        
' → logprob: -12.62515926361084
    9. '	' → logprob: -12.75015926361084
    10. 'raise' → logprob: -12.75015926361084

Token 638: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07049384713172913
    2. 'else' (adapté à ' else') → logprob: -2.8204939365386963
    3. 'raise' → logprob: -5.070493698120117
    4. ' else' → logprob: -6.570493698120117
    5. 'return' → logprob: -8.195493698120117
    6. ' raise' → logprob: -8.695493698120117
    7. '<|end|>' → logprob: -9.445493698120117
    8. '   ' → logprob: -9.445493698120117
    9. '      ' → logprob: -9.820493698120117
    10. '
' → logprob: -10.195493698120117

Token 639: ':
' (ID: 734)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.9769817590713501
    2. ':' → logprob: -1.47698175907135
    3. ' raise' → logprob: -1.97698175907135
    4. '           ' → logprob: -1.97698175907135
    5. ':
' → logprob: -2.9769816398620605
    6. '	raise' → logprob: -3.2269816398620605
    7. '       ' → logprob: -3.8519816398620605
    8. 'Raise' → logprob: -6.9769816398620605
    9. '.raise' → logprob: -7.1019816398620605
    10. ' raises' → logprob: -7.6019816398620605

Token 640: '           ' (ID: 352)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.2594001591205597
    2. '           ' → logprob: -1.5094001293182373
    3. ' raise' → logprob: -5.259400367736816
    4. '	raise' → logprob: -6.259400367736816
    5. 'return' → logprob: -8.384400367736816
    6. '       ' → logprob: -10.009400367736816
    7. '_raise' → logprob: -10.634400367736816
    8. 'Raise' → logprob: -11.759400367736816
    9. '	       ' → logprob: -11.884400367736816
    10. '   ' → logprob: -12.384400367736816

Token 641: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0004116076452191919
    2. ' raise' → logprob: -8.000411987304688
    3. 'return' → logprob: -9.500411987304688
    4. '
' → logprob: -14.875411987304688
    5. '       ' → logprob: -14.875411987304688
    6. '           ' → logprob: -15.000411987304688
    7. '	raise' → logprob: -15.375411987304688
    8. 'assert' → logprob: -17.125411987304688
    9. 'Raise' → logprob: -17.625411987304688
    10. '   ' → logprob: -17.625411987304688

Token 642: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -5.512236498361744e-07
    2. ' Value' → logprob: -15.000000953674316
    3. 'Not' → logprob: -16.5
    4. 'Name' → logprob: -16.75
    5. 'Key' → logprob: -17.25
    6. 'Runtime' → logprob: -18.0
    7. 'Assertion' → logprob: -18.125
    8. '_value' → logprob: -20.0
    9. 'value' → logprob: -21.0
    10. '_Value' → logprob: -21.75

Token 643: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -6.034592388459714e-06
    2. 'rror' → logprob: -12.375005722045898
    3. 'Value' → logprob: -13.250005722045898
    4. '```' → logprob: -19.5000057220459
    5. 'error' → logprob: -20.1250057220459
    6. 'SError' → logprob: -20.2500057220459
    7. 'LError' → logprob: -21.0000057220459
    8. 'Not' → logprob: -21.7500057220459
    9. '.Error' → logprob: -22.0000057220459
    10. 'Argument' → logprob: -22.1250057220459

Token 644: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2056940197944641
    2. '(' → logprob: -1.7056939601898193
    3. '('' → logprob: -5.580694198608398
    4. '(f' → logprob: -7.705694198608398
    5. '()' → logprob: -10.455694198608398
    6. '(
' → logprob: -10.955694198608398
    7. '("'' → logprob: -13.705694198608398
    8. '("("' → logprob: -14.080694198608398
    9. '(None' → logprob: -14.205694198608398
    10. '("")' → logprob: -14.330694198608398

Token 645: ''' (ID: 6)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6947734951972961
    2. 'f' → logprob: -0.6947734951972961
    3. ' f' → logprob: -7.5697736740112305
    4. ''' → logprob: -7.8197736740112305
    5. '(f' → logprob: -8.31977367401123
    6. 'Unknown' → logprob: -8.56977367401123
    7. 'Invalid' → logprob: -8.94477367401123
    8. 'Unexpected' → logprob: -9.94477367401123
    9. '       ' → logprob: -10.06977367401123
    10. '           ' → logprob: -10.69477367401123

Token 646: 'Unknown' (ID: 24560)
  Prédit: 'Unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unknown' → logprob: -0.047006115317344666
    2. 'Invalid' → logprob: -3.547006130218506
    3. 'f' → logprob: -4.297006130218506
    4. 'Unsupported' → logprob: -6.172006130218506
    5. 'Unexpected' → logprob: -7.047006130218506
    6. ''' → logprob: -8.297005653381348
    7. '"' → logprob: -8.297005653381348
    8. 'Un' → logprob: -10.672005653381348
    9. 'Illegal' → logprob: -12.172005653381348
    10. 'Unhandled' → logprob: -12.547005653381348

Token 647: ' node' (ID: 4596)
  Prédit: ' info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' info' → logprob: -0.3806801438331604
    2. 'info' → logprob: -1.6306800842285156
    3. ' base' → logprob: -2.2556800842285156
    4. '(info' → logprob: -4.755680084228516
    5. 'base' → logprob: -5.630680084228516
    6. ' node' → logprob: -6.005680084228516
    7. ' f' → logprob: -7.505680084228516
    8. 'node' → logprob: -7.880680084228516
    9. ' type' → logprob: -8.880680084228516
    10. '(base' → logprob: -8.880680084228516

Token 648: ' type' (ID: 1490)
  Prédit: ' type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.06220496445894241
    2. 'type' → logprob: -2.8122050762176514
    3. '_type' → logprob: -8.68720531463623
    4. ' info' → logprob: -10.06220531463623
    5. 'info' → logprob: -10.81220531463623
    6. 'Type' → logprob: -13.31220531463623
    7. ' base' → logprob: -13.43720531463623
    8. '_info' → logprob: -14.56220531463623
    9. '_' → logprob: -15.06220531463623
    10. '   ' → logprob: -15.43720531463623

Token 649: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13054440915584564
    2. '{' → logprob: -2.505544424057007
    3. '(f' → logprob: -3.505544424057007
    4. ' {' → logprob: -5.130544185638428
    5. '(' → logprob: -5.880544185638428
    6. '(info' → logprob: -7.380544185638428
    7. ' f' → logprob: -7.630544185638428
    8. ' (' → logprob: -8.505544662475586
    9. ' for' → logprob: -8.755544662475586
    10. '({' → logprob: -9.005544662475586

Token 650: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5953048467636108
    2. 'info' → logprob: -0.8453048467636108
    3. 'base' → logprob: -4.0953049659729
    4. ' info' → logprob: -6.9703049659729
    5. ' base' → logprob: -6.9703049659729
    6. ' {' → logprob: -7.3453049659729
    7. '"{' → logprob: -13.095304489135742
    8. '```' → logprob: -15.220304489135742
    9. '{name' → logprob: -15.220304489135742
    10. '{
' → logprob: -15.345304489135742

Token 651: 'info' (ID: 5789)
  Prédit: 'info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' → logprob: -0.12694017589092255
    2. 'base' → logprob: -2.1269402503967285
    3. ' info' → logprob: -11.87693977355957
    4. ' base' → logprob: -12.50193977355957
    5. '{' → logprob: -15.12693977355957
    6. 'Info' → logprob: -15.62693977355957
    7. 'Base' → logprob: -15.87693977355957
    8. '(info' → logprob: -15.87693977355957
    9. '	info' → logprob: -16.00193977355957
    10. '   ' → logprob: -16.12693977355957

Token 652: '}')

' (ID: 171301)
  Prédit: '}')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}')' → logprob: -0.014723259024322033
    2. '')' → logprob: -4.514723300933838
    3. ')' → logprob: -6.139723300933838
    4. '}' → logprob: -6.514723300933838
    5. '}")' → logprob: -11.51472282409668
    6. '}')
' → logprob: -11.88972282409668
    7. '}'' → logprob: -12.26472282409668
    8. '')}' → logprob: -12.26472282409668
    9. '")' → logprob: -13.63972282409668
    10. ''}' → logprob: -13.76472282409668

Token 653: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13552963733673096
    2. '<|end|>' → logprob: -2.8855295181274414
    3. '#' → logprob: -3.3855295181274414
    4. 'class' → logprob: -3.5105295181274414
    5. '```' → logprob: -5.760529518127441
    6. '<|end|>' → logprob: -5.885529518127441
    7. '   ' → logprob: -8.010529518127441
    8. ')' → logprob: -8.385529518127441
    9. 'import' → logprob: -8.760529518127441
    10. '
' → logprob: -9.010529518127441

Token 654: ' Drug' (ID: 37595)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.822324812412262
    2. 'Parser' → logprob: -1.0723247528076172
    3. 'Solution' → logprob: -1.8223247528076172
    4. 'Graph' → logprob: -3.822324752807617
    5. ' Tree' → logprob: -4.822324752807617
    6. 'Builder' → logprob: -4.822324752807617
    7. ' Parser' → logprob: -5.322324752807617
    8. 'Node' → logprob: -5.447324752807617
    9. ' Solution' → logprob: -6.322324752807617
    10. 'Input' → logprob: -6.697324752807617

Token 655: 'Combination' (ID: 114627)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.29675984382629395
    2. 'Tree' → logprob: -2.046759843826294
    3. 'Builder' → logprob: -3.046759843826294
    4. 'Graph' → logprob: -4.046759605407715
    5. ':' → logprob: -4.296759605407715
    6. 'Composition' → logprob: -4.546759605407715
    7. '(' → logprob: -4.796759605407715
    8. 'Structure' → logprob: -5.171759605407715
    9. 'Node' → logprob: -5.296759605407715
    10. '{' → logprob: -5.546759605407715

Token 656: 'Tree' (ID: 8062)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4707827866077423
    2. 'Builder' → logprob: -1.47078275680542
    3. 'Parser' → logprob: -2.34578275680542
    4. '(' → logprob: -4.47078275680542
    5. '{' → logprob: -4.59578275680542
    6. 'Processor' → logprob: -5.47078275680542
    7. 'Node' → logprob: -5.59578275680542
    8. 'Tree' → logprob: -5.72078275680542
    9. 'Generator' → logprob: -6.09578275680542
    10. '(Node' → logprob: -6.09578275680542

Token 657: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00440982123836875
    2. '(Node' → logprob: -5.6294097900390625
    3. '(' → logprob: -7.3794097900390625
    4. '<|end|>' → logprob: -9.754409790039062
    5. ':
' → logprob: -10.004409790039062
    6. '():' → logprob: -11.004409790039062
    7. '#:' → logprob: -11.379409790039062
    8. '>:' → logprob: -11.504409790039062
    9. '):' → logprob: -11.629409790039062
    10. '(QWidget' → logprob: -12.254409790039062

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006164124351926148
    2. ' def' → logprob: -7.625616550445557
    3. 'def' → logprob: -9.375616073608398
    4. '    
' → logprob: -10.375616073608398
    5. 'class' → logprob: -12.500616073608398
    6. '```' → logprob: -12.625616073608398
    7. ':' → logprob: -13.625616073608398
    8. '    ' → logprob: -13.750616073608398
    9. '	def' → logprob: -13.875616073608398
    10. ' class' → logprob: -14.500616073608398

Token 659: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.42872533202171326
    2. '   ' → logprob: -1.4287253618240356
    3. 'class' → logprob: -2.928725242614746
    4. 'def' (adapté à ' def') → logprob: -2.928725242614746
    5. ' class' → logprob: -6.178725242614746
    6. '	def' → logprob: -11.053725242614746
    7. '```' → logprob: -11.303725242614746
    8. '    ' → logprob: -12.803725242614746
    9. ' __' → logprob: -13.178725242614746
    10. '
' → logprob: -13.178725242614746

Token 660: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00875260028988123
    2. ' __' → logprob: -4.758752822875977
    3. 'def' → logprob: -9.133752822875977
    4. 'init' → logprob: -10.633752822875977
    5. '_init' → logprob: -12.758752822875977
    6. '```' → logprob: -13.758752822875977
    7. '.__' → logprob: -14.383752822875977
    8. ' def' → logprob: -14.508752822875977
    9. '   ' → logprob: -15.633752822875977
    10. '___' → logprob: -15.758752822875977

Token 661: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.375
    3. '_init' → logprob: -18.0
    4. '(init' → logprob: -18.625
    5. '```' → logprob: -18.75
    6. 'def' → logprob: -19.375
    7. 'inite' → logprob: -20.125
    8. '__' → logprob: -20.125
    9. 'ini' → logprob: -20.125
    10. 'class' → logprob: -20.375

Token 662: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0003078142472077161
    2. '(self' → logprob: -8.2503080368042
    3. '__' → logprob: -10.2503080368042
    4. '__(
' → logprob: -11.6253080368042
    5. '_(' → logprob: -14.0003080368042
    6. 'self' → logprob: -14.1253080368042
    7. '(' → logprob: -15.2503080368042
    8. '__((' → logprob: -15.2503080368042
    9. '__('' → logprob: -16.750307083129883
    10. '<>(' → logprob: -16.875307083129883

Token 663: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.4391956685576588e-05
    2. ' self' → logprob: -10.875024795532227
    3. ')' → logprob: -12.375024795532227
    4. '(self' → logprob: -15.125024795532227
    5. '
' → logprob: -15.250024795532227
    6. '   ' → logprob: -15.625024795532227
    7. '):
' → logprob: -16.250024795532227
    8. ',' → logprob: -16.500024795532227
    9. '       ' → logprob: -16.500024795532227
    10. '0' → logprob: -17.000024795532227

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7634977698326111
    2. 'self' → logprob: -1.0134978294372559
    3. '(self' → logprob: -2.013497829437256
    4. ' (' → logprob: -3.638497829437256
    5. ' self' → logprob: -5.388497829437256
    6. '__(' → logprob: -5.638497829437256
    7. '   ' → logprob: -6.888497829437256
    8. ')' → logprob: -7.013497829437256
    9. ' ,' → logprob: -8.013497352600098
    10. ',self' → logprob: -8.638497352600098

Token 665: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.022722851485013962
    2. 'n' → logprob: -5.0227227210998535
    3. 'nodes' → logprob: -5.0227227210998535
    4. 'num' → logprob: -5.3977227210998535
    5. ')' → logprob: -5.8977227210998535
    6. '):
' → logprob: -7.1477227210998535
    7. 'node' → logprob: -7.3977227210998535
    8. 'root' → logprob: -8.272723197937012
    9. '):' → logprob: -8.897723197937012
    10. ' self' → logprob: -9.522723197937012

Token 666: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10774735361337662
    2. '):' → logprob: -2.3577473163604736
    3. ':int' → logprob: -5.357747554779053
    4. '):
' → logprob: -6.357747554779053
    5. ')' → logprob: -6.982747554779053
    6. ',' → logprob: -9.107747077941895
    7. ' ):' → logprob: -11.607747077941895
    8. ' :' → logprob: -12.232747077941895
    9. '   ' → logprob: -12.732747077941895
    10. 'int' → logprob: -13.107747077941895

Token 667: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.698698704596609e-05
    2. ' int' → logprob: -9.250097274780273
    3. ')' → logprob: -15.500097274780273
    4. '[int' → logprob: -15.750097274780273
    5. '=int' → logprob: -15.750097274780273
    6. '(int' → logprob: -16.250097274780273
    7. ':int' → logprob: -16.375097274780273
    8. '
' → logprob: -16.500097274780273
    9. ']int' → logprob: -17.500097274780273
    10. ',int' → logprob: -18.250097274780273

Token 668: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004742922727018595
    2. '):' → logprob: -5.3797430992126465
    3. '):
' → logprob: -9.629742622375488
    4. ')' → logprob: -9.879742622375488
    5. '   ' → logprob: -13.254742622375488
    6. ' ,' → logprob: -13.629742622375488
    7. ',n' → logprob: -14.629742622375488
    8. ':' → logprob: -14.754742622375488
    9. ',int' → logprob: -14.879742622375488
    10. ',
' → logprob: -15.004742622375488

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04459131881594658
    2. 'self' → logprob: -3.1695914268493652
    3. ' self' → logprob: -6.544591426849365
    4. '   ' → logprob: -9.669590950012207
    5. '	self' → logprob: -10.044590950012207
    6. '	' → logprob: -10.419590950012207
    7. '(self' → logprob: -12.294590950012207
    8. '	   ' → logprob: -12.419590950012207
    9. '	       ' → logprob: -13.544590950012207
    10. ',' → logprob: -14.294590950012207

Token 670: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006919435109011829
    2. ' self' → logprob: -7.750691890716553
    3. '       ' → logprob: -8.250692367553711
    4. '   ' → logprob: -16.00069236755371
    5. '	self' → logprob: -16.37569236755371
    6. '(self' → logprob: -18.87569236755371
    7. '
' → logprob: -19.62569236755371
    8. 'super' → logprob: -19.75069236755371
    9. 'class' → logprob: -20.00069236755371
    10. 'def' → logprob: -21.12569236755371

Token 671: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.005451936274766922
    2. '.nodes' → logprob: -5.2554521560668945
    3. 'n' → logprob: -8.630452156066895
    4. 'nodes' → logprob: -11.255452156066895
    5. '.idx' → logprob: -11.630452156066895
    6. '.root' → logprob: -11.755452156066895
    7. '.num' → logprob: -12.630452156066895
    8. '.size' → logprob: -13.505452156066895
    9. ' n' → logprob: -13.880452156066895
    10. ',n' → logprob: -14.130452156066895

Token 672: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3174584209918976
    2. ' =' → logprob: -1.3174583911895752
    3. '   ' → logprob: -5.942458629608154
    4. ':' → logprob: -7.692458629608154
    5. ',' → logprob: -7.817458629608154
    6. '<|end|>' → logprob: -8.317458152770996
    7. ')' → logprob: -8.692458152770996
    8. '=int' → logprob: -9.067458152770996
    9. '<|end|>' → logprob: -10.692458152770996
    10. '    ' → logprob: -10.692458152770996

Token 673: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.7610454708337784e-05
    2. ' n' → logprob: -10.500027656555176
    3. '	n' → logprob: -18.37502670288086
    4. '0' → logprob: -19.87502670288086
    5. '   ' → logprob: -21.62502670288086
    6. '[n' → logprob: -21.75002670288086
    7. '[' → logprob: -21.87502670288086
    8. '_n' → logprob: -22.50002670288086
    9. ')n' → logprob: -22.50002670288086
    10. '$n' → logprob: -23.00002670288086

Token 674: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007136593572795391
    2. 'self' → logprob: -5.632136821746826
    3. '
' → logprob: -6.007136821746826
    4. '<|end|>' → logprob: -7.507136821746826
    5. ',' → logprob: -7.757136821746826
    6. '	' → logprob: -10.632136344909668
    7. ' self' → logprob: -10.757136344909668
    8. '   ' → logprob: -11.757136344909668
    9. '	self' → logprob: -12.007136344909668
    10. '        
' → logprob: -12.382136344909668

Token 675: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02336835116147995
    2. 'self' → logprob: -3.7733683586120605
    3. ' self' → logprob: -9.273367881774902
    4. '
' → logprob: -11.773367881774902
    5. '   ' → logprob: -11.898367881774902
    6. '	self' → logprob: -12.398367881774902
    7. '	' → logprob: -12.648367881774902
    8. ',' → logprob: -13.273367881774902
    9. '<|end|>' → logprob: -13.398367881774902
    10. '(self' → logprob: -13.523367881774902

Token 676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.676292231422849e-05
    2. '       ' → logprob: -11.250017166137695
    3. ' self' → logprob: -12.500017166137695
    4. '   ' → logprob: -17.875017166137695
    5. 'nodes' → logprob: -18.125017166137695
    6. '
' → logprob: -19.250017166137695
    7. '	self' → logprob: -19.500017166137695
    8. 'def' → logprob: -19.875017166137695
    9. '[self' → logprob: -20.250017166137695
    10. '        
' → logprob: -20.375017166137695

Token 677: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.0003890854713972658
    2. 'nodes' → logprob: -7.875389099121094
    3. '.children' → logprob: -13.125389099121094
    4. '_nodes' → logprob: -13.250389099121094
    5. '.parents' → logprob: -13.875389099121094
    6. '	nodes' → logprob: -13.875389099121094
    7. '.Nodes' → logprob: -14.500389099121094
    8. '.parent' → logprob: -14.625389099121094
    9. '.tree' → logprob: -14.625389099121094
    10. ' nodes' → logprob: -14.875389099121094

Token 678: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2855459451675415
    2. '=' → logprob: -1.5355459451675415
    3. ':' → logprob: -3.410545825958252
    4. ' :' → logprob: -11.03554630279541
    5. '=[]' → logprob: -11.78554630279541
    6. '[' → logprob: -11.91054630279541
    7. '[:]' → logprob: -13.53554630279541
    8. '   ' → logprob: -14.28554630279541
    9. '=[' → logprob: -14.66054630279541
    10. ' =[' → logprob: -14.91054630279541

Token 679: ' Dict' (ID: 55179)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00036514020757749677
    2. '[List' → logprob: -8.500365257263184
    3. 'Dict' → logprob: -8.750365257263184
    4. ' List' → logprob: -13.000365257263184
    5. '[' → logprob: -14.000365257263184
    6. 'dict' → logprob: -16.500364303588867
    7. 'list' → logprob: -16.750364303588867
    8. '	List' → logprob: -19.875364303588867
    9. '(List' → logprob: -21.000364303588867
    10. '[]' → logprob: -21.875364303588867

Token 680: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.5716304410016164e-05
    2. 'int' → logprob: -10.375035285949707
    3. '<int' → logprob: -13.250035285949707
    4. '=int' → logprob: -13.625035285949707
    5. ' =' → logprob: -13.750035285949707
    6. '(int' → logprob: -15.625035285949707
    7. '[in' → logprob: -16.375036239624023
    8. '[Int' → logprob: -17.375036239624023
    9. ']int' → logprob: -17.375036239624023
    10. '[i' → logprob: -17.500036239624023

Token 681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021689364220947027
    2. '[int' → logprob: -6.252169132232666
    3. ',int' → logprob: -8.377168655395508
    4. 'int' → logprob: -12.002168655395508
    5. ' ,' → logprob: -13.252168655395508
    6. ']' → logprob: -13.627168655395508
    7. '[' → logprob: -14.627168655395508
    8. ',
' → logprob: -15.252168655395508
    9. 'Node' → logprob: -15.877168655395508
    10. ']int' → logprob: -16.127168655395508

Token 682: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -7.493430894101039e-05
    2. ' Node' → logprob: -9.500075340270996
    3. '	Node' → logprob: -16.87507438659668
    4. 'Optional' → logprob: -17.25007438659668
    5. ''' → logprob: -17.87507438659668
    6. 'Union' → logprob: -19.25007438659668
    7. '<Node' → logprob: -20.37507438659668
    8. '   ' → logprob: -20.50007438659668
    9. '_Node' → logprob: -20.50007438659668
    10. 'List' → logprob: -20.87507438659668

Token 683: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009667078964412212
    2. '=' → logprob: -4.759666919708252
    3. ']=' → logprob: -7.384666919708252
    4. ' =' → logprob: -7.884666919708252
    5. ')' → logprob: -10.50966739654541
    6. '<|end|>' → logprob: -12.00966739654541
    7. ']={' → logprob: -12.13466739654541
    8. '[' → logprob: -12.25966739654541
    9. '']' → logprob: -12.50966739654541
    10. '}' → logprob: -13.88466739654541

Token 684: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003177952254191041
    2. ' =' → logprob: -5.753178119659424
    3. '={}' → logprob: -15.253177642822266
    4. '=
' → logprob: -17.753177642822266
    5. '=[]' → logprob: -18.003177642822266
    6. '	' → logprob: -18.628177642822266
    7. '={}
' → logprob: -18.753177642822266
    8. '={' → logprob: -18.753177642822266
    9. ' ' → logprob: -19.128177642822266
    10. ']' → logprob: -19.253177642822266

Token 685: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.0445127372804563e-05
    2. 'dict' → logprob: -11.50001049041748
    3. '{}
' → logprob: -16.000009536743164
    4. ' {}' → logprob: -16.250009536743164
    5. '{}

' → logprob: -17.000009536743164
    6. '{' → logprob: -17.250009536743164
    7. '={}' → logprob: -17.750009536743164
    8. '{})' → logprob: -18.000009536743164
    9. '{}_' → logprob: -19.750009536743164
    10. '{},' → logprob: -20.000009536743164

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061804305762052536
    2. 'def' → logprob: -3.1868042945861816
    3. '
' → logprob: -4.186804294586182
    4. ' def' → logprob: -5.936804294586182
    5. '    
' → logprob: -7.936804294586182
    6. '<|end|>' → logprob: -8.18680477142334
    7. '```' → logprob: -9.31180477142334
    8. '	def' → logprob: -10.18680477142334
    9. '        
' → logprob: -10.93680477142334
    10. '       ' → logprob: -12.18680477142334

Token 687: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07892558723688126
    2. ' def' → logprob: -2.578925609588623
    3. '   ' → logprob: -10.453925132751465
    4. '	def' → logprob: -11.953925132751465
    5. '
' → logprob: -14.703925132751465
    6. ' ' → logprob: -16.70392608642578
    7. '<|end|>' → logprob: -17.95392608642578
    8. '```' → logprob: -18.20392608642578
    9. '       ' → logprob: -19.20392608642578
    10. '    
' → logprob: -19.45392608642578

Token 688: ' build' (ID: 3024)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.007747290190309286
    2. 'build' → logprob: -5.507747173309326
    3. 'create' → logprob: -6.382747173309326
    4. ' add' → logprob: -6.507747173309326
    5. 'def' → logprob: -8.007747650146484
    6. '_add' → logprob: -9.882747650146484
    7. 'get' → logprob: -10.507747650146484
    8. ' build' → logprob: -10.882747650146484
    9. 'read' → logprob: -11.007747650146484
    10. 'set' → logprob: -11.132747650146484

Token 689: '_nodes' (ID: 34593)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4337708652019501
    2. '_tree' → logprob: -1.0587708950042725
    3. '(' → logprob: -5.933770656585693
    4. 'self' → logprob: -7.308770656585693
    5. '_nodes' → logprob: -7.558770656585693
    6. '_node' → logprob: -7.808770656585693
    7. 'tree' → logprob: -8.308771133422852
    8. '(
' → logprob: -8.808771133422852
    9. '_from' → logprob: -9.058771133422852
    10. '_parent' → logprob: -9.683771133422852

Token 690: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.078839502763003e-05
    2. '(' → logprob: -9.500090599060059
    3. '(
' → logprob: -12.250090599060059
    4. 'self' → logprob: -12.250090599060059
    5. ' (' → logprob: -12.625090599060059
    6. '   ' → logprob: -13.500090599060059
    7. 'from' → logprob: -14.500090599060059
    8. '       ' → logprob: -14.625090599060059
    9. 'for' → logprob: -15.875090599060059
    10. 'def' → logprob: -16.625091552734375

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6983544230461121
    2. '(self' → logprob: -0.6983544230461121
    3. 'self' → logprob: -6.073354244232178
    4. ')' → logprob: -7.073354244232178
    5. ')(' → logprob: -7.073354244232178
    6. ' (' → logprob: -8.198354721069336
    7. ',self' → logprob: -8.448354721069336
    8. '(' → logprob: -8.448354721069336
    9. '):
' → logprob: -8.948354721069336
    10. '       ' → logprob: -9.198354721069336

Token 692: ' node' (ID: 4596)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' → logprob: -1.3016021251678467
    2. 'node' → logprob: -1.4266021251678467
    3. 'nodes' → logprob: -1.5516021251678467
    4. 'infos' → logprob: -1.9266021251678467
    5. 'types' → logprob: -3.4266021251678467
    6. ' info' → logprob: -3.6766021251678467
    7. ' node' → logprob: -3.8016021251678467
    8. ' infos' → logprob: -4.301602363586426
    9. 'range' → logprob: -4.426602363586426
    10. ' nodes' → logprob: -4.676602363586426

Token 693: '_infos' (ID: 117905)
  Prédit: '_types'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -0.6808075904846191
    2. '_info' → logprob: -1.4308075904846191
    3. 's' → logprob: -1.9308075904846191
    4. '_infos' → logprob: -2.305807590484619
    5. '_type' → logprob: -5.305807590484619
    6. 'types' → logprob: -6.180807590484619
    7. 'info' → logprob: -6.930807590484619
    8. '_list' → logprob: -7.430807590484619
    9. 'infos' → logprob: -8.305807113647461
    10. '_data' → logprob: -8.305807113647461

Token 694: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.508522629737854
    2. ')' → logprob: -1.883522629737854
    3. 'self' → logprob: -2.3835225105285645
    4. ':' → logprob: -2.5085225105285645
    5. '(self' → logprob: -2.8835225105285645
    6. '       ' → logprob: -4.8835225105285645
    7. '):' → logprob: -5.2585225105285645
    8. '   ' → logprob: -6.1335225105285645
    9. '):
' → logprob: -7.1335225105285645
    10. ' self' → logprob: -7.6335225105285645

Token 695: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0002263046189909801
    2. ' List' → logprob: -8.500226020812988
    3. 'self' → logprob: -11.250226020812988
    4. '[List' → logprob: -11.875226020812988
    5. ')' → logprob: -13.375226020812988
    6. 'list' → logprob: -13.875226020812988
    7. '   ' → logprob: -15.875226020812988
    8. '
' → logprob: -16.125226974487305
    9. ',List' → logprob: -16.875226974487305
    10. '```' → logprob: -17.125226974487305

Token 696: '[str' (ID: 33439)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.006741777528077364
    2. '[str' → logprob: -5.006742000579834
    3. '[' → logprob: -10.756741523742676
    4. 'int' → logprob: -12.256741523742676
    5. '<int' → logprob: -16.131742477416992
    6. '[Int' → logprob: -16.881742477416992
    7. 'str' → logprob: -17.131742477416992
    8. '[
' → logprob: -17.881742477416992
    9. '[(' → logprob: -18.006742477416992
    10. ')' → logprob: -18.006742477416992

Token 697: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.11691275238990784
    2. ')' → logprob: -2.366912841796875
    3. ']):
' → logprob: -4.366912841796875
    4. '):
' → logprob: -5.616912841796875
    5. ']):' → logprob: -9.741912841796875
    6. ' ])' → logprob: -9.991912841796875
    7. ',' → logprob: -10.116912841796875
    8. ']' → logprob: -10.241912841796875
    9. '   ' → logprob: -11.241912841796875
    10. '):' → logprob: -11.241912841796875

Token 698: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3296782672405243
    2. ':
' → logprob: -1.8296782970428467
    3. '->' → logprob: -2.5796782970428467
    4. '       ' → logprob: -3.4546782970428467
    5. '(self' → logprob: -5.329678058624268
    6. '):
' → logprob: -6.454678058624268
    7. ' ->' → logprob: -6.579678058624268
    8. ')' → logprob: -6.954678058624268
    9. ',' → logprob: -7.079678058624268
    10. '   ' → logprob: -7.079678058624268

Token 699: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.264322317088954e-05
    2. ' None' → logprob: -9.875052452087402
    3. 'List' → logprob: -14.625052452087402
    4. 'range' → logprob: -15.625052452087402
    5. '   ' → logprob: -15.750052452087402
    6. '[' → logprob: -16.12505340576172
    7. ' ' → logprob: -16.50005340576172
    8. '(None' → logprob: -16.75005340576172
    9. 'list' → logprob: -17.00005340576172
    10. 'int' → logprob: -17.25005340576172

Token 700: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20431458950042725
    2. ':
' → logprob: -2.079314708709717
    3. '       ' → logprob: -2.829314708709717
    4. '):
' → logprob: -7.704314708709717
    5. ',' → logprob: -9.079314231872559
    6. '<|end|>' → logprob: -10.454314231872559
    7. '):' → logprob: -10.829314231872559
    8. '():
' → logprob: -10.829314231872559
    9. '<|end|>' → logprob: -11.204314231872559
    10. ')' → logprob: -11.454314231872559

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005616246722638607
    2. ' for' → logprob: -5.505616188049316
    3. 'for' → logprob: -6.505616188049316
    4. '   ' → logprob: -10.380616188049316
    5. '```' → logprob: -11.755616188049316
    6. '	for' → logprob: -13.755616188049316
    7. ',' → logprob: -14.630616188049316
    8. '	   ' → logprob: -15.255616188049316
    9. '	' → logprob: -15.505616188049316
    10. '
' → logprob: -15.880616188049316

Token 702: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00015097891446202993
    2. ' for' → logprob: -9.000150680541992
    3. '       ' → logprob: -10.500150680541992
    4. '	for' → logprob: -18.250150680541992
    5. '```' → logprob: -18.625150680541992
    6. '   ' → logprob: -19.000150680541992
    7. '``' → logprob: -22.250150680541992
    8. ' ' → logprob: -22.750150680541992
    9. 'For' → logprob: -23.250150680541992
    10. '_for' → logprob: -23.500150680541992

Token 703: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03728194534778595
    2. 'i' → logprob: -3.7872819900512695
    3. ' idx' → logprob: -4.2872819900512695
    4. ' i' → logprob: -8.53728199005127
    5. 'index' → logprob: -17.037281036376953
    6. '	idx' → logprob: -18.412281036376953
    7. '_idx' → logprob: -18.537281036376953
    8. '```' → logprob: -19.162281036376953
    9. '(idx' → logprob: -19.287281036376953
    10. '   ' → logprob: -20.537281036376953

Token 704: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030722463503479958
    2. 'in' → logprob: -3.7807223796844482
    3. ',' → logprob: -4.905722618103027
    4. ' ,' → logprob: -10.530722618103027
    5. 'n' → logprob: -12.155722618103027
    6. '   ' → logprob: -12.655722618103027
    7. ',in' → logprob: -12.905722618103027
    8. ',n' → logprob: -13.155722618103027
    9. '	in' → logprob: -13.280722618103027
    10. ' ' → logprob: -13.905722618103027

Token 705: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.125158309936523
    4. ' ' → logprob: -19.625158309936523
    5. '  ' → logprob: -20.375158309936523
    6. '
' → logprob: -21.125158309936523
    7. '(range' → logprob: -21.125158309936523
    8. '    ' → logprob: -21.625158309936523
    9. '	range' → logprob: -21.750158309936523
    10. 'enumer' → logprob: -22.250158309936523

Token 706: '(' (ID: 7)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005964008742012084
    2. '(' → logprob: -7.500596523284912
    3. 'self' → logprob: -10.125596046447754
    4. '(n' → logprob: -13.500596046447754
    5. '(len' → logprob: -13.625596046447754
    6. ' self' → logprob: -14.750596046447754
    7. '(
' → logprob: -15.750596046447754
    8. '1' → logprob: -16.00059700012207
    9. '	self' → logprob: -17.12559700012207
    10. ',self' → logprob: -17.25059700012207

Token 707: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001295222609769553
    2. '1' → logprob: -9.500129699707031
    3. 'n' → logprob: -9.875129699707031
    4. ' self' → logprob: -12.750129699707031
    5. '0' → logprob: -15.750129699707031
    6. 'len' → logprob: -16.50012969970703
    7. 's' → logprob: -18.12512969970703
    8. '(self' → logprob: -18.25012969970703
    9. '	self' → logprob: -18.62512969970703
    10. '   ' → logprob: -19.12512969970703

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026057446375489235
    2. ',n' → logprob: -6.50260591506958
    3. ' ,' → logprob: -7.37760591506958
    4. ',len' → logprob: -7.75260591506958
    5. ',self' → logprob: -10.877605438232422
    6. '   ' → logprob: -11.752605438232422
    7. '(n' → logprob: -12.002605438232422
    8. 'n' → logprob: -12.877605438232422
    9. '(len' → logprob: -12.877605438232422
    10. ',
' → logprob: -13.127605438232422

Token 709: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005321870092302561
    2. 'n' → logprob: -5.505321979522705
    3. 'len' → logprob: -7.005321979522705
    4. ' self' → logprob: -8.005321502685547
    5. '	self' → logprob: -14.255321502685547
    6. ' len' → logprob: -14.630321502685547
    7. '   ' → logprob: -15.255321502685547
    8. ' n' → logprob: -15.505321502685547
    9. 'i' → logprob: -16.130321502685547
    10. '(self' → logprob: -16.380321502685547

Token 710: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6327841877937317
    2. '.n' → logprob: -0.7577841877937317
    3. ',n' → logprob: -9.882783889770508
    4. '<n' → logprob: -10.257783889770508
    5. '_n' → logprob: -10.632783889770508
    6. '=n' → logprob: -11.132783889770508
    7. '+' → logprob: -11.507783889770508
    8. ' n' → logprob: -11.882783889770508
    9. '	n' → logprob: -12.257783889770508
    10. '=' → logprob: -12.507783889770508

Token 711: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01605607196688652
    2. ' +' → logprob: -4.141056060791016
    3. '):
' → logprob: -11.266056060791016
    4. '+
' → logprob: -12.641056060791016
    5. '+n' → logprob: -13.266056060791016
    6. '()+' → logprob: -13.641056060791016
    7. ')+' → logprob: -14.266056060791016
    8. '1' → logprob: -14.766056060791016
    9. '):' → logprob: -15.391056060791016
    10. ',' → logprob: -15.516056060791016

Token 712: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -18.625804901123047
    4. '```' → logprob: -19.500804901123047
    5. '
' → logprob: -20.000804901123047
    6. ')' → logprob: -20.125804901123047
    7. '=' → logprob: -20.500804901123047
    8. '2' → logprob: -20.500804901123047
    9. '  ' → logprob: -21.625804901123047
    10. ',' → logprob: -21.750804901123047

Token 713: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.250011444091797
    4. '```' → logprob: -17.875011444091797
    5. '
' → logprob: -18.375011444091797
    6. '=' → logprob: -18.875011444091797
    7. '2' → logprob: -19.500011444091797
    8. 'self' → logprob: -19.625011444091797
    9. 'i' → logprob: -20.000011444091797
    10. ')' → logprob: -20.250011444091797

Token 714: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6549937129020691
    2. '):' → logprob: -1.0299937725067139
    3. ':' → logprob: -2.154993772506714
    4. ',' → logprob: -5.904993534088135
    5. ':
' → logprob: -5.904993534088135
    6. '       ' → logprob: -6.279993534088135
    7. '           ' → logprob: -9.279994010925293
    8. ')' → logprob: -9.529994010925293
    9. '):
' → logprob: -10.029994010925293
    10. '():
' → logprob: -10.154994010925293

Token 715: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030510887503623962
    2. '       ' → logprob: -4.780510902404785
    3. 'info' → logprob: -4.780510902404785
    4. 'self' → logprob: -6.155510902404785
    5. 'tokens' → logprob: -6.155510902404785
    6. '<|end|>' → logprob: -6.405510902404785
    7. '{' → logprob: -6.905510902404785
    8. ',' → logprob: -6.905510902404785
    9. ' info' → logprob: -7.030510902404785
    10. '```' → logprob: -7.405510902404785

Token 716: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2287033349275589
    2. 'info' → logprob: -1.9787033796310425
    3. 'node' → logprob: -2.728703260421753
    4. 'type' → logprob: -7.353703498840332
    5. '           ' → logprob: -8.853703498840332
    6. ' self' → logprob: -9.353703498840332
    7. ' info' → logprob: -12.228703498840332
    8. ' node' → logprob: -12.478703498840332
    9. '_info' → logprob: -13.353703498840332
    10. '```' → logprob: -14.228703498840332

Token 717: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -5.2524021157296374e-05
    2. 'nodes' → logprob: -9.875052452087402
    3. '.' → logprob: -14.750052452087402
    4. ' .' → logprob: -15.250052452087402
    5. '	nodes' → logprob: -15.750052452087402
    6. ').' → logprob: -17.37505340576172
    7. '.tokens' → logprob: -17.75005340576172
    8. 's' → logprob: -17.87505340576172
    9. '.Nodes' → logprob: -18.12505340576172
    10. ' nodes' → logprob: -18.25005340576172

Token 718: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019291093340143561
    2. '[' → logprob: -6.25192928314209
    3. '[int' → logprob: -15.25192928314209
    4. ' [' → logprob: -16.251928329467773
    5. '[self' → logprob: -16.501928329467773
    6. '[I' → logprob: -17.001928329467773
    7. '
' → logprob: -17.126928329467773
    8. '[
' → logprob: -17.251928329467773
    9. '```' → logprob: -17.376928329467773
    10. '[idx' → logprob: -17.376928329467773

Token 719: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016345303505659103
    2. '=' → logprob: -4.266345500946045
    3. ']=' → logprob: -6.766345500946045
    4. ' =' → logprob: -7.016345500946045
    5. ')' → logprob: -9.266345024108887
    6. ' ]' → logprob: -10.266345024108887
    7. ')=' → logprob: -14.641345024108887
    8. ',' → logprob: -15.016345024108887
    9. ' )' → logprob: -16.766345977783203
    10. ' ' → logprob: -16.891345977783203

Token 720: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024756586644798517
    2. ' =' → logprob: -6.002475738525391
    3. '.=' → logprob: -18.87747573852539
    4. '=

' → logprob: -19.00247573852539
    5. ']=' → logprob: -19.12747573852539
    6. '=
' → logprob: -19.62747573852539
    7. ']' → logprob: -19.87747573852539
    8. '＝' → logprob: -20.62747573852539
    9. ')=' → logprob: -20.87747573852539
    10. ')' → logprob: -21.50247573852539

Token 721: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -2.7610454708337784e-05
    2. ' Node' → logprob: -10.500027656555176
    3. '	Node' → logprob: -19.87502670288086
    4. '_Node' → logprob: -22.50002670288086
    5. '<Node' → logprob: -22.62502670288086
    6. '(Node' → logprob: -22.87502670288086
    7. '.Node' → logprob: -23.12502670288086
    8. '_node' → logprob: -25.00002670288086
    9. 'node' → logprob: -25.50002670288086
    10. 'Nodes' → logprob: -26.25002670288086

Token 722: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: 0.0
    2. 'factory' → logprob: -17.875
    3. '_factory' → logprob: -19.75
    4. '.Factory' → logprob: -21.5
    5. '.factory' → logprob: -22.25
    6. '_FACTORY' → logprob: -22.25
    7. 'Factories' → logprob: -23.0
    8. 'Factor' → logprob: -23.25
    9. ' Factory' → logprob: -23.25
    10. 'Fact' → logprob: -23.25

Token 723: '.create' (ID: 3916)
  Prédit: '.create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.create' → logprob: -0.0005594660760834813
    2. '.' → logprob: -7.500559329986572
    3. 'create' → logprob: -12.62555980682373
    4. '().' → logprob: -12.87555980682373
    5. '=create' → logprob: -15.62555980682373
    6. ' .' → logprob: -16.125558853149414
    7. '{}.' → logprob: -16.500558853149414
    8. '   ' → logprob: -16.625558853149414
    9. '#create' → logprob: -17.375558853149414
    10. '```' → logprob: -17.500558853149414

Token 724: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.700132997939363e-05
    2. '_token' → logprob: -11.750017166137695
    3. 'Node' → logprob: -12.750017166137695
    4. 'node' → logprob: -12.875017166137695
    5. '_nodes' → logprob: -13.000017166137695
    6. '_Node' → logprob: -14.250017166137695
    7. '_n' → logprob: -15.375017166137695
    8. '_' → logprob: -16.250017166137695
    9. '_NODE' → logprob: -16.875017166137695
    10. '```' → logprob: -16.875017166137695

Token 725: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -12.00001049041748
    3. 'i' → logprob: -12.37501049041748
    4. ' (' → logprob: -15.12501049041748
    5. '(
' → logprob: -15.62501049041748
    6. ' i' → logprob: -17.750011444091797
    7. '```' → logprob: -18.500011444091797
    8. '((' → logprob: -19.375011444091797
    9. '(ii' → logprob: -20.375011444091797
    10. '(None' → logprob: -20.750011444091797

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22168758511543274
    2. '(node' → logprob: -2.0966875553131104
    3. ',node' → logprob: -2.5966875553131104
    4. '(i' → logprob: -6.8466877937316895
    5. '           ' → logprob: -8.846687316894531
    6. ',i' → logprob: -9.596687316894531
    7. 'node' → logprob: -10.096687316894531
    8. ')' → logprob: -10.346687316894531
    9. ' ,' → logprob: -10.596687316894531
    10. ',(' → logprob: -10.846687316894531

Token 727: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -9.615255839889869e-05
    2. ' node' → logprob: -9.250096321105957
    3. '           ' → logprob: -18.75009536743164
    4. '[node' → logprob: -19.12509536743164
    5. '(node' → logprob: -19.37509536743164
    6. '	node' → logprob: -19.75009536743164
    7. 'user' → logprob: -21.37509536743164
    8. '               ' → logprob: -21.62509536743164
    9. '```' → logprob: -21.62509536743164
    10. '   ' → logprob: -21.87509536743164

Token 728: '_infos' (ID: 117905)
  Prédit: '_infos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_infos' → logprob: -5.512236498361744e-07
    2. 'infos' → logprob: -15.250000953674316
    3. 'Infos' → logprob: -15.500000953674316
    4. 's' → logprob: -17.0
    5. '_in' → logprob: -18.5
    6. '_info' → logprob: -18.75
    7. '_inf' → logprob: -19.5
    8. '_INF' → logprob: -19.625
    9. '
' → logprob: -19.75
    10. '_datas' → logprob: -19.875

Token 729: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. 'i' → logprob: -18.625
    4. '[I' → logprob: -19.0
    5. '[
' → logprob: -19.375
    6. '
' → logprob: -20.375
    7. ')' → logprob: -20.875
    8. '   ' → logprob: -20.875
    9. ')[' → logprob: -21.375
    10. ' [' → logprob: -21.375

Token 730: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18101805448532104
    2. '[i' → logprob: -1.9310181140899658
    3. ' -' → logprob: -3.931018114089966
    4. ']' → logprob: -7.181017875671387
    5. '1' → logprob: -9.556017875671387
    6. '(i' → logprob: -10.556017875671387
    7. 'i' → logprob: -10.681017875671387
    8. '[' → logprob: -10.806017875671387
    9. '])' → logprob: -11.181017875671387
    10. '-i' → logprob: -11.806017875671387

Token 731: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. ']' → logprob: -18.0
    4. 'i' → logprob: -18.625
    5. '```' → logprob: -19.25
    6. '0' → logprob: -19.875
    7. '   ' → logprob: -20.25
    8. ')' → logprob: -20.375
    9. '])' → logprob: -21.25
    10. '-' → logprob: -21.5

Token 732: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '))' → logprob: -16.0
    5. '<|end|>' → logprob: -17.25
    6. '       ' → logprob: -17.375
    7. '   ' → logprob: -17.875
    8. ')`' → logprob: -18.375
    9. '')' → logprob: -18.5
    10. '())' → logprob: -18.625

Token 733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41999852657318115
    2. '<|end|>' → logprob: -1.1699985265731812
    3. ' def' → logprob: -4.669998645782471
    4. '
' → logprob: -4.919998645782471
    5. 'def' → logprob: -5.044998645782471
    6. '```' → logprob: -5.544998645782471
    7. '<|end|>' → logprob: -6.044998645782471
    8. ' ' → logprob: -6.669998645782471
    9. '	def' → logprob: -7.794998645782471
    10. ')' → logprob: -8.732498168945312

Token 734: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004712903406471014
    2. ' def' → logprob: -5.50471305847168
    3. '
' → logprob: -7.62971305847168
    4. '   ' → logprob: -8.87971305847168
    5. '```' → logprob: -11.87971305847168
    6. '<|end|>' → logprob: -14.12971305847168
    7. '	def' → logprob: -14.87971305847168
    8. '

' → logprob: -15.00471305847168
    9. ')' → logprob: -15.25471305847168
    10. '    
' → logprob: -15.37971305847168

Token 735: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.4552306532859802
    2. 'add' → logprob: -1.205230712890625
    3. 'set' → logprob: -2.955230712890625
    4. 'get' → logprob: -5.705230712890625
    5. 'def' → logprob: -5.830230712890625
    6. 'count' → logprob: -6.080230712890625
    7. ' build' → logprob: -6.205230712890625
    8. 'connect' → logprob: -6.955230712890625
    9. 'read' → logprob: -7.330230712890625
    10. ' add' → logprob: -7.705230712890625

Token 736: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.2634906470775604
    2. '_edges' → logprob: -1.6384906768798828
    3. '_children' → logprob: -3.388490676879883
    4. '_rel' → logprob: -6.638490676879883
    5. '_parent' → logprob: -7.513490676879883
    6. '_par' → logprob: -7.638490676879883
    7. '_connections' → logprob: -8.138490676879883
    8. '_structure' → logprob: -8.263490676879883
    9. '_relationship' → logprob: -8.513490676879883
    10. '_graph' → logprob: -9.263490676879883

Token 737: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.754368223482743e-05
    2. '(' → logprob: -9.750067710876465
    3. 'self' → logprob: -12.625067710876465
    4. '(
' → logprob: -12.875067710876465
    5. ' (' → logprob: -12.875067710876465
    6. '(parent' → logprob: -14.875067710876465
    7. '(sel' → logprob: -16.25006675720215
    8. '(s' → logprob: -16.50006675720215
    9. '   ' → logprob: -17.12506675720215
    10. '(root' → logprob: -17.25006675720215

Token 738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007102862582542002
    2. 'self' → logprob: -7.500710487365723
    3. ',self' → logprob: -10.000710487365723
    4. ' ,' → logprob: -10.000710487365723
    5. '(self' → logprob: -10.250710487365723
    6. ')' → logprob: -11.500710487365723
    7. '       ' → logprob: -12.500710487365723
    8. ',
' → logprob: -12.500710487365723
    9. ',parent' → logprob: -12.500710487365723
    10. '   ' → logprob: -12.625710487365723

Token 739: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6300851702690125
    2. 'parent' → logprob: -1.7550852298736572
    3. 'parents' → logprob: -2.0050852298736572
    4. ' edges' → logprob: -2.2550852298736572
    5. ' parent' → logprob: -3.3800852298736572
    6. ' parents' → logprob: -3.8800852298736572
    7. 'children' → logprob: -9.255084991455078
    8. 'relations' → logprob: -9.255084991455078
    9. 'connections' → logprob: -9.505084991455078
    10. 'self' → logprob: -11.505084991455078

Token 740: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19689254462718964
    2. '       ' → logprob: -2.946892499923706
    3. 'self' → logprob: -2.946892499923706
    4. ')' → logprob: -3.321892499923706
    5. ',' → logprob: -4.196892738342285
    6. '   ' → logprob: -4.696892738342285
    7. ':' → logprob: -5.071892738342285
    8. '):' → logprob: -6.196892738342285
    9. '):
' → logprob: -6.571892738342285
    10. ')(' → logprob: -6.946892738342285

Token 741: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0009188431431539357
    2. ' List' → logprob: -7.000918865203857
    3. ')' → logprob: -12.3759183883667
    4. '[List' → logprob: -12.7509183883667
    5. '	List' → logprob: -16.875919342041016
    6. '(List' → logprob: -17.250919342041016
    7. 'list' → logprob: -17.500919342041016
    8. 'int' → logprob: -18.375919342041016
    9. '   ' → logprob: -18.625919342041016
    10. '_list' → logprob: -18.625919342041016

Token 742: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.023304877802729607
    2. '[' → logprob: -3.7733049392700195
    3. 'List' → logprob: -10.89830493927002
    4. '[(' → logprob: -11.02330493927002
    5. '[int' → logprob: -11.02330493927002
    6. ')' → logprob: -12.14830493927002
    7. '   ' → logprob: -13.77330493927002
    8. '[
' → logprob: -14.52330493927002
    9. '	List' → logprob: -15.39830493927002
    10. ' ' → logprob: -15.64830493927002

Token 743: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.203409844194539e-05
    2. 'int' → logprob: -10.500041961669922
    3. '[List' → logprob: -11.250041961669922
    4. '[' → logprob: -14.000041961669922
    5. '<int' → logprob: -15.000041961669922
    6. ']int' → logprob: -15.375041961669922
    7. '[Int' → logprob: -16.750041961669922
    8. '	int' → logprob: -17.250041961669922
    9. '[[' → logprob: -18.000041961669922
    10. '[
' → logprob: -19.000041961669922

Token 744: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005566463340073824
    2. ']])' → logprob: -5.505566596984863
    3. ']):
' → logprob: -7.130566596984863
    4. '[int' → logprob: -7.380566596984863
    5. '[' → logprob: -10.880566596984863
    6. ')' → logprob: -10.880566596984863
    7. ']]' → logprob: -11.255566596984863
    8. '[List' → logprob: -12.755566596984863
    9. ')])' → logprob: -13.505566596984863
    10. ']' → logprob: -13.630566596984863

Token 745: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25976309180259705
    2. '       ' → logprob: -2.50976300239563
    3. ':' → logprob: -3.00976300239563
    4. '   ' → logprob: -3.25976300239563
    5. '->' → logprob: -4.384763240814209
    6. 'self' → logprob: -4.509763240814209
    7. '<|end|>' → logprob: -5.009763240814209
    8. ':
' → logprob: -5.634763240814209
    9. '	self' → logprob: -5.759763240814209
    10. '(' → logprob: -5.759763240814209

Token 746: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004309076175559312
    2. ' None' → logprob: -7.750431060791016
    3. '(None' → logprob: -15.875431060791016
    4. '   ' → logprob: -16.875431060791016
    5. ' ' → logprob: -17.125431060791016
    6. 'void' → logprob: -17.875431060791016
    7. '_None' → logprob: -18.375431060791016
    8. 'No' → logprob: -19.125431060791016
    9. 'none' → logprob: -19.250431060791016
    10. '  ' → logprob: -19.750431060791016

Token 747: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1663053333759308
    2. '(self' → logprob: -2.0413053035736084
    3. ':' → logprob: -4.6663055419921875
    4. '   ' → logprob: -5.0413055419921875
    5. ':
' → logprob: -5.4163055419921875
    6. '(' → logprob: -7.4163055419921875
    7. '<|end|>' → logprob: -7.5413055419921875
    8. ',' → logprob: -7.6663055419921875
    9. 'self' → logprob: -7.9163055419921875
    10. ' self' → logprob: -8.666305541992188

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003490069881081581
    2. 'for' → logprob: -5.753489971160889
    3. '   ' → logprob: -8.253490447998047
    4. ' for' → logprob: -9.878490447998047
    5. '	for' → logprob: -15.003490447998047
    6. '```' → logprob: -15.253490447998047
    7. ' ' → logprob: -16.628490447998047
    8. '      ' → logprob: -17.128490447998047
    9. '           ' → logprob: -17.253490447998047
    10. '     ' → logprob: -17.753490447998047

Token 749: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2664456789934775e-06
    2. '       ' → logprob: -13.750000953674316
    3. ' for' → logprob: -15.750000953674316
    4. '   ' → logprob: -19.000001907348633
    5. '	for' → logprob: -20.125001907348633
    6. '```' → logprob: -21.000001907348633
    7. '``' → logprob: -23.500001907348633
    8. 'For' → logprob: -24.500001907348633
    9. '#' (adapté à ' #') → logprob: -26.250001907348633
    10. '_for' → logprob: -26.375001907348633

Token 750: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. '       ' → logprob: -15.25
    3. ' for' → logprob: -17.25
    4. '#' → logprob: -20.875
    5. '   ' → logprob: -21.0
    6. '	for' → logprob: -21.25
    7. 'For' → logprob: -22.125
    8. '```' → logprob: -24.125
    9. '
' → logprob: -24.375
    10. '        
' → logprob: -24.875

Token 751: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8268283009529114
    2. 'for' → logprob: -0.8268283009529114
    3. '       ' → logprob: -2.8268282413482666
    4. ' for' → logprob: -3.5768282413482666
    5. ':
' → logprob: -4.201828479766846
    6. '   ' → logprob: -4.826828479766846
    7. '=' → logprob: -4.826828479766846
    8. '```' → logprob: -6.826828479766846
    9. 'def' → logprob: -6.951828479766846
    10. '[' → logprob: -7.201828479766846

Token 752: ' [(' (ID: 43900)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014438070356845856
    2. ' for' → logprob: -6.876443862915039
    3. '       ' → logprob: -8.126443862915039
    4. 'List' → logprob: -9.626443862915039
    5. 'from' → logprob: -11.126443862915039
    6. '[(' → logprob: -11.251443862915039
    7. '   ' → logprob: -12.251443862915039
    8. '[' → logprob: -12.251443862915039
    9. '
' → logprob: -12.626443862915039
    10. '[
' → logprob: -12.751443862915039

Token 753: 's' (ID: 82)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.1256714165210724
    2. 'u' → logprob: -2.25067138671875
    3. 'p' → logprob: -5.00067138671875
    4. 'int' → logprob: -5.37567138671875
    5. 'from' → logprob: -7.62567138671875
    6. ' parent' → logprob: -7.75067138671875
    7. ')' → logprob: -8.50067138671875
    8. 'child' → logprob: -9.12567138671875
    9. ' u' → logprob: -10.25067138671875
    10. 'a' → logprob: -10.75067138671875

Token 754: ',' (ID: 11)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.39650022983551025
    2. ',' → logprob: -1.1465002298355103
    3. 't' → logprob: -6.146500110626221
    4. 'ource' → logprob: -6.396500110626221
    5. '[' → logprob: -6.521500110626221
    6. 'elf' → logprob: -6.896500110626221
    7. '_,' → logprob: -7.146500110626221
    8. ' ,' → logprob: -8.146500587463379
    9. '   ' → logprob: -8.271500587463379
    10. ',t' → logprob: -8.271500587463379

Token 755: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6220952272415161
    2. 'e' → logprob: -1.2470952272415161
    3. 'd' → logprob: -1.7470952272415161
    4. ' t' → logprob: -7.747095108032227
    5. 'f' → logprob: -7.997095108032227
    6. ' e' → logprob: -7.997095108032227
    7. ' d' → logprob: -8.497095108032227
    8. ',' → logprob: -8.747095108032227
    9. 'p' → logprob: -9.622095108032227
    10. ')' → logprob: -11.372095108032227

Token 756: '),' (ID: 936)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2675127387046814
    2. ')' → logprob: -2.017512798309326
    3. '),' → logprob: -3.017512798309326
    4. ',' → logprob: -3.767512798309326
    5. ')],' → logprob: -4.142512798309326
    6. ')]
' → logprob: -4.892512798309326
    7. '):' → logprob: -6.142512798309326
    8. '[' → logprob: -6.767512798309326
    9. ')
' → logprob: -7.267512798309326
    10. '):
' → logprob: -7.392512798309326

Token 757: ' ...' (ID: 2550)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.486661672592163
    2. ')]' → logprob: -1.611661672592163
    3. 's' → logprob: -2.111661672592163
    4. '       ' → logprob: -2.736661672592163
    5. ' where' → logprob: -2.736661672592163
    6. ' s' → logprob: -2.986661672592163
    7. 'where' → logprob: -3.236661672592163
    8. ']' → logprob: -3.486661672592163
    9. 'parent' → logprob: -3.486661672592163
    10. '...' → logprob: -3.736661672592163

Token 758: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1350817084312439
    2. '       ' → logprob: -3.0100817680358887
    3. ']:
' → logprob: -3.1350817680358887
    4. ']
' → logprob: -3.8850817680358887
    5. ']:' → logprob: -5.010081768035889
    6. ' for' → logprob: -5.635081768035889
    7. 'for' → logprob: -6.385081768035889
    8. ' ]' → logprob: -8.13508129119873
    9. '):
' → logprob: -8.63508129119873
    10. ']
' → logprob: -9.13508129119873

Token 759: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43649718165397644
    2. ' for' → logprob: -1.0614972114562988
    3. '       ' → logprob: -4.936497211456299
    4. ' where' → logprob: -8.68649673461914
    5. ')' → logprob: -8.93649673461914
    6. 'where' → logprob: -9.18649673461914
    7. '	for' → logprob: -10.18649673461914
    8. ' ' → logprob: -10.93649673461914
    9. '
' → logprob: -10.93649673461914
    10. '   ' → logprob: -10.93649673461914

Token 760: ' parent' (ID: 5980)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038176897913217545
    2. ' ->' → logprob: -5.413177013397217
    3. ' for' → logprob: -5.538177013397217
    4. '       ' → logprob: -5.663177013397217
    5. ' =' → logprob: -5.663177013397217
    6. '->' → logprob: -5.788177013397217
    7. ')' → logprob: -6.038177013397217
    8. 'for' → logprob: -6.038177013397217
    9. ' ,' → logprob: -6.163177013397217
    10. '=' → logprob: -6.163177013397217

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0548449382185936
    2. ' ,' → logprob: -4.179844856262207
    3. '       ' → logprob: -4.179844856262207
    4. ' ->' → logprob: -5.054844856262207
    5. ')' → logprob: -5.679844856262207
    6. ':' → logprob: -6.304844856262207
    7. '->' → logprob: -6.429844856262207
    8. ' =' → logprob: -6.429844856262207
    9. '
' → logprob: -7.054844856262207
    10. 's' → logprob: -7.179844856262207

Token 762: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008653218857944012
    2. ' t' → logprob: -4.758653163909912
    3. '       ' → logprob: -10.25865364074707
    4. '#' → logprob: -13.38365364074707
    5. '   ' → logprob: -13.63365364074707
    6. 'd' → logprob: -15.13365364074707
    7. '        ' → logprob: -15.63365364074707
    8. '           ' → logprob: -15.88365364074707
    9. '	t' → logprob: -16.25865364074707
    10. '`t' → logprob: -16.63365364074707

Token 763: ' child' (ID: 2320)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31824424862861633
    2. ',' → logprob: -1.943244218826294
    3. ']' → logprob: -3.568244218826294
    4. 'child' → logprob: -3.818244218826294
    5. '):
' → logprob: -4.068244457244873
    6. ')
' → logprob: -4.568244457244873
    7. 'parent' → logprob: -4.568244457244873
    8. ')]' → logprob: -4.693244457244873
    9. '):' → logprob: -4.943244457244873
    10. ')->' → logprob: -5.443244457244873

Token 764: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046490661799907684
    2. 'for' → logprob: -3.6714906692504883
    3. ' for' → logprob: -3.9214906692504883
    4. '   ' → logprob: -9.921490669250488
    5. ':' → logprob: -10.296490669250488
    6. '
' → logprob: -10.296490669250488
    7. ',' → logprob: -11.171490669250488
    8. '):
' → logprob: -11.296490669250488
    9. ':
' → logprob: -11.546490669250488
    10. ')' → logprob: -11.546490669250488

Token 765: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048309117555618286
    2. 'for' → logprob: -3.173309087753296
    3. ' for' → logprob: -5.423309326171875
    4. '   ' → logprob: -7.048309326171875
    5. '```' → logprob: -12.298309326171875
    6. ' ' → logprob: -12.423309326171875
    7. '	for' → logprob: -12.923309326171875
    8. ',' → logprob: -14.173309326171875
    9. '	' → logprob: -14.298309326171875
    10. ')' → logprob: -14.423309326171875

Token 766: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00044092073221690953
    2. '       ' → logprob: -7.750441074371338
    3. ' for' → logprob: -11.50044059753418
    4. '   ' → logprob: -17.12544059753418
    5. '	for' → logprob: -17.75044059753418
    6. '```' → logprob: -17.87544059753418
    7. 'For' → logprob: -20.37544059753418
    8. '
' → logprob: -21.00044059753418
    9. ' ' → logprob: -22.50044059753418
    10. '           ' → logprob: -22.62544059753418

Token 767: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000748398422729224
    2. ' s' → logprob: -7.250748634338379
    3. 'parent' → logprob: -10.375748634338379
    4. '(s' → logprob: -11.875748634338379
    5. '   ' → logprob: -16.250747680664062
    6. ' (' → logprob: -16.250747680664062
    7. '(' → logprob: -16.375747680664062
    8. '(parent' → logprob: -17.000747680664062
    9. ' parent' → logprob: -18.000747680664062
    10. '`s' → logprob: -18.625747680664062

Token 768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0054968721233308315
    2. ' ,' → logprob: -5.630496978759766
    3. ',t' → logprob: -6.755496978759766
    4. ',s' → logprob: -7.880496978759766
    5. ',in' → logprob: -8.880496978759766
    6. 'in' → logprob: -9.255496978759766
    7. '[' → logprob: -10.505496978759766
    8. ' in' → logprob: -11.255496978759766
    9. ',[' → logprob: -11.505496978759766
    10. ',v' → logprob: -11.755496978759766

Token 769: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004078401252627373
    2. ' t' → logprob: -5.504078388214111
    3. '	t' → logprob: -17.879077911376953
    4. '`t' → logprob: -18.379077911376953
    5. ')t' → logprob: -20.504077911376953
    6. '   ' → logprob: -20.504077911376953
    7. ' ' → logprob: -21.504077911376953
    8. '       ' → logprob: -22.004077911376953
    9. '(t' → logprob: -22.254077911376953
    10. '_t' → logprob: -22.754077911376953

Token 770: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48268136382102966
    2. ',' → logprob: -0.982681393623352
    3. '       ' → logprob: -5.4826812744140625
    4. ' ,' → logprob: -6.4826812744140625
    5. '           ' → logprob: -6.9826812744140625
    6. 'in' → logprob: -7.2326812744140625
    7. ':' → logprob: -8.232681274414062
    8. ':
' → logprob: -8.482681274414062
    9. '   ' → logprob: -8.857681274414062
    10. ')' → logprob: -9.232681274414062

Token 771: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.04641931131482124
    2. 'self' → logprob: -3.796419382095337
    3. ' edges' → logprob: -3.796419382095337
    4. '(edges' → logprob: -8.796419143676758
    5. ' self' → logprob: -8.921419143676758
    6. '[(' → logprob: -9.171419143676758
    7. '[self' → logprob: -11.046419143676758
    8. '[' → logprob: -11.171419143676758
    9. '.edges' → logprob: -11.171419143676758
    10. '(self' → logprob: -11.796419143676758

Token 772: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7034249901771545
    2. ':
' → logprob: -1.0784249305725098
    3. '           ' → logprob: -2.7034249305725098
    4. ',' → logprob: -2.8284249305725098
    5. '       ' → logprob: -3.4534249305725098
    6. ' in' → logprob: -5.95342493057251
    7. '):
' → logprob: -6.57842493057251
    8. '.' → logprob: -7.57842493057251
    9. '=' → logprob: -7.70342493057251
    10. '[' → logprob: -8.328425407409668

Token 773: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03399546816945076
    2. 'self' → logprob: -3.6589953899383545
    3. ' self' → logprob: -4.908995628356934
    4. '   ' → logprob: -9.158995628356934
    5. '       ' → logprob: -9.908995628356934
    6. '	       ' → logprob: -10.408995628356934
    7. '	self' → logprob: -10.658995628356934
    8. '[self' → logprob: -10.658995628356934
    9. '
' → logprob: -11.658995628356934
    10. ',' → logprob: -11.783995628356934

Token 774: ' parent' (ID: 5980)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.960946772480384e-05
    2. ' self' → logprob: -9.500099182128906
    3. '           ' → logprob: -10.625099182128906
    4. 'parent' (adapté à ' parent') → logprob: -14.875099182128906
    5. '       ' → logprob: -17.125099182128906
    6. '	self' → logprob: -18.000099182128906
    7. '   ' → logprob: -18.250099182128906
    8. '(self' → logprob: -19.000099182128906
    9. '               ' → logprob: -19.375099182128906
    10. '[self' → logprob: -19.500099182128906

Token 775: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5775103569030762
    2. ' =' → logprob: -0.8275103569030762
    3. '.nodes' → logprob: -7.452510356903076
    4. '.' → logprob: -8.327510833740234
    5. '_node' → logprob: -8.327510833740234
    6. '=self' → logprob: -8.452510833740234
    7. '   ' → logprob: -9.077510833740234
    8. '.parent' → logprob: -10.327510833740234
    9. 'self' → logprob: -10.952510833740234
    10. ':' → logprob: -10.952510833740234

Token 776: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.518582762917504e-05
    2. ' self' → logprob: -9.37508487701416
    3. 'parent' → logprob: -15.12508487701416
    4. 's' → logprob: -19.000085830688477
    5. '`' → logprob: -19.125085830688477
    6. '(self' → logprob: -19.250085830688477
    7. '	self' → logprob: -19.500085830688477
    8. '[self' → logprob: -19.500085830688477
    9. '=self' → logprob: -19.875085830688477
    10. '   ' → logprob: -20.000085830688477

Token 777: '.nodes' (ID: 44152)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001421187655068934
    2. '.nodes' → logprob: -7.126420974731445
    3. 'nodes' → logprob: -7.501420974731445
    4. ' self' → logprob: -9.876420974731445
    5. '[self' → logprob: -12.376420974731445
    6. '.self' → logprob: -12.376420974731445
    7. 's' → logprob: -14.251420974731445
    8. 'user' → logprob: -14.501420974731445
    9. ' nodes' → logprob: -14.626420974731445
    10. '=self' → logprob: -14.751420974731445

Token 778: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.981667537620524e-06
    2. 's' → logprob: -13.500001907348633
    3. '[' → logprob: -14.625001907348633
    4. ' [' → logprob: -17.375001907348633
    5. '(s' → logprob: -18.000001907348633
    6. '[t' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.625001907348633
    8. ' s' → logprob: -18.750001907348633
    9. '.get' → logprob: -18.750001907348633
    10. '[parent' → logprob: -18.750001907348633

Token 779: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32695913314819336
    2. ']
' → logprob: -1.4519591331481934
    3. '].' → logprob: -3.5769591331481934
    4. '           ' → logprob: -4.576959133148193
    5. ')' → logprob: -6.201959133148193
    6. ')
' → logprob: -6.826959133148193
    7. '.parent' → logprob: -7.076959133148193
    8. '       ' → logprob: -7.576959133148193
    9. '];' → logprob: -7.826959133148193
    10. 'parent' → logprob: -8.076959609985352

Token 780: '           ' (ID: 352)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.5123173594474792
    2. '           ' → logprob: -1.012317419052124
    3. 'parent' → logprob: -3.387317419052124
    4. 'self' → logprob: -5.637317180633545
    5. ' child' → logprob: -9.262317657470703
    6. '       ' → logprob: -10.012317657470703
    7. ' parent' → logprob: -12.387317657470703
    8. ' self' → logprob: -13.012317657470703
    9. '	child' → logprob: -13.012317657470703
    10. '   ' → logprob: -13.262317657470703

Token 781: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' (adapté à ' child') → logprob: -0.00541102746501565
    2. 'self' → logprob: -5.255411148071289
    3. 'parent' → logprob: -8.755411148071289
    4. ' child' → logprob: -11.130411148071289
    5. '           ' → logprob: -12.255411148071289
    6. ' self' → logprob: -15.880411148071289
    7. '       ' → logprob: -17.38041114807129
    8. 'Child' → logprob: -17.38041114807129
    9. '   ' → logprob: -17.50541114807129
    10. '	child' → logprob: -17.88041114807129

Token 782: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.33140644431114197
    2. '.' → logprob: -1.5814064741134644
    3. '.parent' → logprob: -3.206406354904175
    4. ' =' → logprob: -4.831406593322754
    5. '.child' → logprob: -4.831406593322754
    6. '           ' → logprob: -5.206406593322754
    7. '.children' → logprob: -5.456406593322754
    8. '=' → logprob: -5.456406593322754
    9. ').' → logprob: -5.706406593322754
    10. '   ' → logprob: -6.581406593322754

Token 783: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031777136027812958
    2. ' self' → logprob: -5.753177642822266
    3. '(self' → logprob: -18.378177642822266
    4. '	self' → logprob: -18.378177642822266
    5. '[self' → logprob: -18.628177642822266
    6. '=self' → logprob: -18.753177642822266
    7. '           ' → logprob: -18.753177642822266
    8. ' ' → logprob: -21.128177642822266
    9. '       ' → logprob: -21.378177642822266
    10. '```' → logprob: -21.378177642822266

Token 784: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.00012154294381616637
    2. 'nodes' → logprob: -9.250121116638184
    3. '.' → logprob: -10.750121116638184
    4. ' .' → logprob: -13.625121116638184
    5. 'self' → logprob: -14.000121116638184
    6. '	nodes' → logprob: -14.375121116638184
    7. ' nodes' → logprob: -14.625121116638184
    8. '_nodes' → logprob: -16.2501220703125
    9. '(nodes' → logprob: -16.3751220703125
    10. 's' → logprob: -16.5001220703125

Token 785: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -2.2127087504486553e-05
    2. 't' → logprob: -10.750021934509277
    3. '[' → logprob: -14.500021934509277
    4. '	t' → logprob: -17.250022888183594
    5. '
' → logprob: -17.375022888183594
    6. ' [' → logprob: -17.375022888183594
    7. '[
' → logprob: -17.750022888183594
    8. '(t' → logprob: -18.125022888183594
    9. '```' → logprob: -18.250022888183594
    10. ' t' → logprob: -19.250022888183594

Token 786: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07222174853086472
    2. ')' → logprob: -2.9472217559814453
    3. '           ' → logprob: -4.072221755981445
    4. ')
' → logprob: -9.947221755981445
    5. ']
' → logprob: -10.197221755981445
    6. '       ' → logprob: -11.322221755981445
    7. 'parent' → logprob: -11.447221755981445
    8. ']' → logprob: -11.572221755981445
    9. '   ' → logprob: -11.822221755981445
    10. ').' → logprob: -12.447221755981445

Token 787: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47503751516342163
    2. 'parent' → logprob: -0.9750375151634216
    3. ' parent' → logprob: -6.975037574768066
    4. '[parent' → logprob: -12.100037574768066
    5. '	parent' → logprob: -12.100037574768066
    6. '.parent' → logprob: -12.350037574768066
    7. '(parent' → logprob: -12.600037574768066
    8. '   ' → logprob: -12.975037574768066
    9. ',parent' → logprob: -13.225037574768066
    10. '       ' → logprob: -13.725037574768066

Token 788: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -8.41866585687967e-06
    2. ' parent' → logprob: -11.750008583068848
    3. '           ' → logprob: -14.500008583068848
    4. '.parent' → logprob: -18.12500762939453
    5. '	parent' → logprob: -19.12500762939453
    6. '[parent' → logprob: -20.12500762939453
    7. '(parent' → logprob: -20.50000762939453
    8. '   ' → logprob: -22.25000762939453
    9. 'child' → logprob: -22.37500762939453
    10. ',parent' → logprob: -22.62500762939453

Token 789: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.3902033970225602e-05
    2. '.' → logprob: -11.250014305114746
    3. 'add' → logprob: -14.250014305114746
    4. '.append' → logprob: -17.00001335144043
    5. ' .' → logprob: -17.62501335144043
    6. '   ' → logprob: -18.00001335144043
    7. '.children' → logprob: -19.12501335144043
    8. ':add' → logprob: -19.37501335144043
    9. ')add' → logprob: -19.50001335144043
    10. ').' → logprob: -19.75001335144043

Token 790: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -5.200166469876422e-06
    2. 'child' → logprob: -12.250004768371582
    3. '(child' → logprob: -15.375004768371582
    4. ' child' → logprob: -16.3750057220459
    5. '_' → logprob: -16.8750057220459
    6. 'Child' → logprob: -18.5000057220459
    7. '_parent' → logprob: -18.6250057220459
    8. '_node' → logprob: -19.0000057220459
    9. '_children' → logprob: -20.3750057220459
    10. '_CHILD' → logprob: -20.5000057220459

Token 791: '(child' (ID: 34164)
  Prédit: '(child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(child' → logprob: -0.00026169343618676066
    2. '(' → logprob: -8.250261306762695
    3. ' (' → logprob: -15.125261306762695
    4. 'child' → logprob: -15.750261306762695
    5. '(
' → logprob: -17.500261306762695
    6. ' child' → logprob: -18.875261306762695
    7. '(children' → logprob: -18.875261306762695
    8. '(parent' → logprob: -19.375261306762695
    9. '	child' → logprob: -19.750261306762695
    10. '()' → logprob: -20.000261306762695

Token 792: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3199920178740285e-05
    2. ')
' → logprob: -10.875022888183594
    3. '<|end|>' → logprob: -12.500022888183594
    4. ' )' → logprob: -15.875022888183594
    5. ')return' → logprob: -16.500022888183594
    6. '       ' → logprob: -16.500022888183594
    7. '<|end|>' → logprob: -17.000022888183594
    8. ')

' → logprob: -17.125022888183594
    9. ')}' → logprob: -17.250022888183594
    10. ')#' → logprob: -17.250022888183594

Token 793: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10302851349115372
    2. 'def' → logprob: -2.4780285358428955
    3. '
' → logprob: -4.353028297424316
    4. ' def' → logprob: -7.353028297424316
    5. '<|end|>' → logprob: -7.853028297424316
    6. '    
' → logprob: -10.228028297424316
    7. '	def' → logprob: -10.728028297424316
    8. '```' → logprob: -11.728028297424316
    9. '<|end|>' → logprob: -11.853028297424316
    10. ' ' → logprob: -11.978028297424316

Token 794: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010866894444916397
    2. ' def' → logprob: -9.62510871887207
    3. '   ' → logprob: -10.12510871887207
    4. '	def' → logprob: -13.75010871887207
    5. '#' → logprob: -14.00010871887207
    6. '<|end|>' → logprob: -15.25010871887207
    7. 'from' → logprob: -16.00010871887207
    8. '```' → logprob: -16.12510871887207
    9. '
' → logprob: -16.50010871887207
    10. 'class' → logprob: -16.75010871887207

Token 795: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.010382412001490593
    2. ' count' → logprob: -4.760382175445557
    3. 'compute' → logprob: -6.760382175445557
    4. 'root' → logprob: -7.885382175445557
    5. 'calculate' → logprob: -8.885382652282715
    6. ' compute' → logprob: -10.135382652282715
    7. 'get' → logprob: -10.385382652282715
    8. '_count' → logprob: -11.760382652282715
    9. ' root' → logprob: -12.135382652282715
    10. ' calculate' → logprob: -13.135382652282715

Token 796: '_all' (ID: 13305)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.0003398726985324174
    2. '_' → logprob: -8.00033950805664
    3. '_comb' → logprob: -13.62533950805664
    4. '_sub' → logprob: -14.00033950805664
    5. '_total' → logprob: -14.25033950805664
    6. 'com' → logprob: -15.25033950805664
    7. '_all' → logprob: -15.25033950805664
    8. '_root' → logprob: -15.62533950805664
    9. '_options' → logprob: -15.87533950805664
    10. '_s' → logprob: -16.00033950805664

Token 797: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.0013445195509120822
    2. '_' → logprob: -6.626344680786133
    3. '()' → logprob: -13.126344680786133
    4. '(' → logprob: -13.126344680786133
    5. '(self' → logprob: -13.251344680786133
    6. 'com' → logprob: -13.251344680786133
    7. '_nodes' → logprob: -13.626344680786133
    8. '_choices' → logprob: -13.751344680786133
    9. '_comb' → logprob: -13.751344680786133
    10. '```' → logprob: -13.876344680786133

Token 798: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -6.968934758333489e-05
    2. 'b' → logprob: -10.250069618225098
    3. '_b' → logprob: -11.250069618225098
    4. '_' → logprob: -12.000069618225098
    5. 'inations' → logprob: -12.000069618225098
    6. '```' → logprob: -12.625069618225098
    7. 'plet' → logprob: -13.625069618225098
    8. 'bin' → logprob: -14.125069618225098
    9. 'ations' → logprob: -14.250069618225098
    10. 'utations' → logprob: -15.250069618225098

Token 799: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001438266917830333
    2. '(' → logprob: -8.875144004821777
    3. 'self' → logprob: -13.000144004821777
    4. '   ' → logprob: -14.375144004821777
    5. '(
' → logprob: -14.875144004821777
    6. ' (' → logprob: -15.000144004821777
    7. ' ' → logprob: -16.37514305114746
    8. '(s' → logprob: -16.62514305114746
    9. '	self' → logprob: -17.00014305114746
    10. 's' → logprob: -17.25014305114746

Token 800: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22086745500564575
    2. 'self' → logprob: -1.970867395401001
    3. '(self' → logprob: -2.970867395401001
    4. '   ' → logprob: -5.72086763381958
    5. '):' → logprob: -5.97086763381958
    6. ',' → logprob: -6.72086763381958
    7. '       ' → logprob: -8.220867156982422
    8. '):
' → logprob: -8.595867156982422
    9. 'def' → logprob: -10.595867156982422
    10. ')->' → logprob: -10.720867156982422

Token 801: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00024406595912296325
    2. '(' → logprob: -8.375244140625
    3. 'self' → logprob: -11.875244140625
    4. '   ' → logprob: -12.250244140625
    5. '       ' → logprob: -14.125244140625
    6. '(
' → logprob: -14.750244140625
    7. ' (' → logprob: -15.875244140625
    8. '	self' → logprob: -16.250244140625
    9. 'def' → logprob: -16.500244140625
    10. '[self' → logprob: -16.625244140625

Token 802: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.12258882028982e-05
    2. ' int' → logprob: -9.75006103515625
    3. '(int' → logprob: -12.87506103515625
    4. '   ' → logprob: -16.00006103515625
    5. 'def' → logprob: -16.00006103515625
    6. '[int' → logprob: -17.25006103515625
    7. 'return' → logprob: -18.00006103515625
    8. ':int' → logprob: -18.37506103515625
    9. 'self' → logprob: -18.50006103515625
    10. '```' → logprob: -19.12506103515625

Token 803: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006299942615441978
    2. '(' → logprob: -7.875629901885986
    3. '(
' → logprob: -9.250630378723145
    4. '   ' → logprob: -9.750630378723145
    5. '       ' → logprob: -10.000630378723145
    6. '	self' → logprob: -11.250630378723145
    7. 'self' → logprob: -11.250630378723145
    8. '[self' → logprob: -11.625630378723145
    9. ' self' → logprob: -12.625630378723145
    10. '[' → logprob: -12.750630378723145

Token 804: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12914112210273743
    2. '   ' → logprob: -2.129141092300415
    3. 'return' → logprob: -6.629141330718994
    4. ' return' → logprob: -7.754141330718994
    5. '```' → logprob: -8.379140853881836
    6. '
' → logprob: -9.504140853881836
    7. '	return' → logprob: -10.254140853881836
    8. '    ' → logprob: -10.504140853881836
    9. '     ' → logprob: -11.004140853881836
    10. '	' → logprob: -11.129140853881836

Token 805: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011100404895842075
    2. 'root' → logprob: -4.7611002922058105
    3. '       ' → logprob: -6.0111002922058105
    4. ' return' → logprob: -10.511100769042969
    5. 'if' → logprob: -13.386100769042969
    6. '#' (adapté à ' #') → logprob: -13.386100769042969
    7. 'result' → logprob: -14.636100769042969
    8. '	return' → logprob: -15.761100769042969
    9. 'def' → logprob: -15.886100769042969
    10. ' root' → logprob: -16.01110076904297

Token 806: ' According' (ID: 16344)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.08002693951129913
    2. 'return' → logprob: -2.580026865005493
    3. '       ' → logprob: -6.830027103424072
    4. '#' → logprob: -10.455026626586914
    5. 'result' → logprob: -11.455026626586914
    6. ' root' → logprob: -11.830026626586914
    7. 'roots' → logprob: -12.580026626586914
    8. 'if' → logprob: -12.705026626586914
    9. ' return' → logprob: -14.080026626586914
    10. 'def' → logprob: -14.205026626586914

Token 807: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.13831213116645813
    2. ' to' → logprob: -2.5133121013641357
    3. '       ' → logprob: -3.1383121013641357
    4. 'def' → logprob: -5.388312339782715
    5. '   ' → logprob: -9.263312339782715
    6. 'self' → logprob: -9.388312339782715
    7. '#' → logprob: -11.013312339782715
    8. 'ing' → logprob: -11.263312339782715
    9. '        ' → logprob: -11.763312339782715
    10. '    ' → logprob: -12.263312339782715

Token 808: ' problem' (ID: 4792)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005776035133749247
    2. '1' → logprob: -5.5057759284973145
    3. '       ' → logprob: -7.0057759284973145
    4. ' self' → logprob: -7.5057759284973145
    5. 'def' → logprob: -9.255776405334473
    6. '0' → logprob: -9.505776405334473
    7. 'return' → logprob: -10.130776405334473
    8. 'root' → logprob: -11.130776405334473
    9. '#' → logprob: -12.130776405334473
    10. '   ' → logprob: -12.630776405334473

Token 809: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05707906559109688
    2. 'return' → logprob: -3.1820790767669678
    3. 'root' → logprob: -4.432078838348389
    4. ' return' → logprob: -6.807078838348389
    5. ' root' → logprob: -7.932078838348389
    6. '   ' → logprob: -8.932079315185547
    7. ':' → logprob: -9.182079315185547
    8. '
' → logprob: -9.432079315185547
    9. '#' → logprob: -9.807079315185547
    10. 'def' → logprob: -10.432079315185547

Token 810: ' root' (ID: 6577)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3901708126068115
    2. 'root' → logprob: -1.1401708126068115
    3. '       ' → logprob: -5.890171051025391
    4. '#' → logprob: -7.640171051025391
    5. ' return' → logprob: -10.64017105102539
    6. 'def' → logprob: -11.64017105102539
    7. ' root' → logprob: -11.76517105102539
    8. 'result' → logprob: -12.64017105102539
    9. 'if' → logprob: -13.76517105102539
    10. '
' → logprob: -14.64017105102539

Token 811: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06911997497081757
    2. '_node' → logprob: -2.944119930267334
    3. '=' → logprob: -4.569119930267334
    4. 'node' → logprob: -6.069119930267334
    5. '_idx' → logprob: -7.194119930267334
    6. 'idx' → logprob: -9.069120407104492
    7. ':' → logprob: -9.194120407104492
    8. '_id' → logprob: -9.194120407104492
    9. '_token' → logprob: -9.944120407104492
    10. '=self' → logprob: -9.944120407104492

Token 812: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47421568632125854
    2. '1' → logprob: -0.9742156863212585
    3. '       ' → logprob: -9.224215507507324
    4. ' self' → logprob: -10.224215507507324
    5. ' ' → logprob: -13.224215507507324
    6. '0' → logprob: -13.849215507507324
    7. '   ' → logprob: -14.474215507507324
    8. '	self' → logprob: -15.849215507507324
    9. '(self' → logprob: -16.59921646118164
    10. '#' → logprob: -16.72421646118164

Token 813: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011917540803551674
    2. '[' → logprob: -4.761917591094971
    3. '=' → logprob: -6.136917591094971
    4. ' =' → logprob: -7.511917591094971
    5. ' ' → logprob: -8.136917114257812
    6. '(' → logprob: -9.511917114257812
    7. '       ' → logprob: -10.261917114257812
    8. '```' → logprob: -10.511917114257812
    9. '[
' → logprob: -10.761917114257812
    10. '
' → logprob: -10.886917114257812

Token 814: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00047535591875202954
    2. '[' → logprob: -7.8754754066467285
    3. '=' → logprob: -9.50047492980957
    4. ' =' → logprob: -11.50047492980957
    5. '       ' → logprob: -13.00047492980957
    6. ' ' → logprob: -13.00047492980957
    7. '(' → logprob: -13.00047492980957
    8. 'def' → logprob: -13.62547492980957
    9. '   ' → logprob: -14.50047492980957
    10. '#' → logprob: -15.00047492980957

Token 815: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04185628890991211
    2. 'return' → logprob: -3.541856288909912
    3. '
' → logprob: -4.666856288909912
    4. ' return' → logprob: -6.666856288909912
    5. '	' → logprob: -7.666856288909912
    6. '   ' → logprob: -8.29185676574707
    7. '        
' → logprob: -8.54185676574707
    8. '```' → logprob: -9.41685676574707
    9. 'root' → logprob: -9.54185676574707
    10. ',' → logprob: -9.66685676574707

Token 816: ' not' (ID: 625)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07960484176874161
    2. '       ' → logprob: -2.5796048641204834
    3. ' return' → logprob: -7.329604625701904
    4. 'root' → logprob: -9.829605102539062
    5. '
' → logprob: -13.329605102539062
    6. '```' → logprob: -13.329605102539062
    7. '   ' → logprob: -14.079605102539062
    8. 'result' → logprob: -14.579605102539062
    9. '	return' → logprob: -15.204605102539062
    10. '      ' → logprob: -16.454605102539062

Token 817: ' optional' (ID: 18297)
  Prédit: 'optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optional' → logprob: -0.050552111119031906
    2. ' optional' → logprob: -3.3005521297454834
    3. 'self' → logprob: -4.550551891326904
    4. 'None' → logprob: -7.050551891326904
    5. ' self' → logprob: -8.050552368164062
    6. '_optional' → logprob: -8.300552368164062
    7. '.optional' → logprob: -9.175552368164062
    8. ' None' → logprob: -9.425552368164062
    9. 'Optional' → logprob: -9.675552368164062
    10. 'only' → logprob: -9.800552368164062

Token 818: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3888104557991028
    2. 'return' → logprob: -1.138810396194458
    3. ' return' → logprob: -7.013810634613037
    4. '
' → logprob: -7.138810634613037
    5. '   ' → logprob: -8.638810157775879
    6. '	return' → logprob: -10.763810157775879
    7. '	' → logprob: -10.763810157775879
    8. '        
' → logprob: -11.888810157775879
    9. '{
' → logprob: -12.263810157775879
    10. '```' → logprob: -12.638810157775879

Token 819: ' condition' (ID: 7060)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.004287453833967447
    2. 'definition' → logprob: -6.004287242889404
    3. ' default' → logprob: -6.754287242889404
    4. 'def' → logprob: -7.879287242889404
    5. 'design' → logprob: -8.504287719726562
    6. ' definition' → logprob: -10.254287719726562
    7. '
' → logprob: -11.004287719726562
    8. ' design' → logprob: -11.504287719726562
    9. 'constraint' → logprob: -14.879287719726562
    10. 'construction' → logprob: -15.879287719726562

Token 820: ' given' (ID: 4335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27511680126190186
    2. 'return' → logprob: -1.5251168012619019
    3. '
' → logprob: -3.9001169204711914
    4. ' return' → logprob: -6.150116920471191
    5. '   ' → logprob: -8.150116920471191
    6. '        
' → logprob: -9.650116920471191
    7. '{
' → logprob: -10.150116920471191
    8. '	' → logprob: -10.400116920471191
    9. '	return' → logprob: -10.650116920471191
    10. '```' → logprob: -10.650116920471191

Token 821: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1570085883140564
    2. '
' → logprob: -2.407008647918701
    3. 'return' → logprob: -3.157008647918701
    4. ' return' → logprob: -5.157008647918701
    5. '   ' → logprob: -5.282008647918701
    6. '	' → logprob: -7.157008647918701
    7. '        
' → logprob: -8.157008171081543
    8. '	return' → logprob: -8.907008171081543
    9. '{
' → logprob: -8.907008171081543
    10. '  
' → logprob: -9.282008171081543

Token 822: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3220382034778595
    2. 'return' → logprob: -1.322038173675537
    3. '
' → logprob: -5.072038173675537
    4. ' return' → logprob: -6.072038173675537
    5. '   ' → logprob: -10.197038650512695
    6. 'root' → logprob: -10.197038650512695
    7. '```' → logprob: -10.322038650512695
    8. '	' → logprob: -10.947038650512695
    9. '{
' → logprob: -11.197038650512695
    10. '{return' → logprob: -12.322038650512695

Token 823: ' root' (ID: 6577)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016613829880952835
    2. 'root' (adapté à ' root') → logprob: -4.266613960266113
    3. '       ' → logprob: -6.016613960266113
    4. ' return' → logprob: -11.766613960266113
    5. 'result' → logprob: -13.641613960266113
    6. 'node' → logprob: -15.141613960266113
    7. '
' → logprob: -16.391613006591797
    8. ' root' → logprob: -16.516613006591797
    9. '   ' → logprob: -17.266613006591797
    10. '```' → logprob: -17.516613006591797

Token 824: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02094600722193718
    2. '=' → logprob: -3.8959460258483887
    3. '.' → logprob: -8.39594554901123
    4. ':' → logprob: -9.27094554901123
    5. '   ' → logprob: -10.64594554901123
    6. '.count' → logprob: -11.02094554901123
    7. ')' → logprob: -11.89594554901123
    8. ' ' → logprob: -12.14594554901123
    9. ' .' → logprob: -12.27094554901123
    10. '=self' → logprob: -12.27094554901123

Token 825: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000553151941858232
    2. ' self' → logprob: -7.500553131103516
    3. '       ' → logprob: -16.500553131103516
    4. '	self' → logprob: -18.250553131103516
    5. '=self' → logprob: -18.375553131103516
    6. '(self' → logprob: -18.500553131103516
    7. '[self' → logprob: -20.000553131103516
    8. '   ' → logprob: -21.625553131103516
    9. '1' → logprob: -22.000553131103516
    10. '0' → logprob: -22.000553131103516

Token 826: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.00020520923135336488
    2. '.' → logprob: -9.250205039978027
    3. 'nodes' → logprob: -9.250205039978027
    4. ' .' → logprob: -12.375205039978027
    5. '.root' → logprob: -12.500205039978027
    6. '.n' → logprob: -13.250205039978027
    7. '	nodes' → logprob: -14.000205039978027
    8. '
' → logprob: -14.500205039978027
    9. '[' → logprob: -15.125205039978027
    10. '.users' → logprob: -15.250205039978027

Token 827: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9266199160483666e-05
    2. '1' → logprob: -10.875019073486328
    3. '\[' → logprob: -16.125019073486328
    4. '[
' → logprob: -16.625019073486328
    5. '```' → logprob: -16.750019073486328
    6. '=' → logprob: -17.125019073486328
    7. ' [' → logprob: -17.125019073486328
    8. 's' → logprob: -18.750019073486328
    9. '][' → logprob: -19.000019073486328
    10. ',' → logprob: -19.125019073486328

Token 828: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -18.875
    5. '[' → logprob: -19.25
    6. '`' → logprob: -21.375
    7. ']' → logprob: -21.75
    8. '
' → logprob: -21.875
    9. '  ' → logprob: -22.0
    10. '１' → logprob: -22.0

Token 829: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020952196791768074
    2. ')
' → logprob: -3.8959522247314453
    3. ']' → logprob: -8.020952224731445
    4. '       ' → logprob: -9.895952224731445
    5. ']
' → logprob: -11.520952224731445
    6. ')return' → logprob: -11.770952224731445
    7. '   ' → logprob: -12.270952224731445
    8. ' )' → logprob: -12.770952224731445
    9. ')
' → logprob: -13.770952224731445
    10. ' ' → logprob: -14.270952224731445

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25315776467323303
    2. 'return' → logprob: -1.5031577348709106
    3. ' return' → logprob: -6.878157615661621
    4. '   ' → logprob: -8.753157615661621
    5. '	return' → logprob: -10.878157615661621
    6. '	' → logprob: -11.378157615661621
    7. 'result' → logprob: -11.878157615661621
    8. '```' → logprob: -14.003157615661621
    9. '{return' → logprob: -14.378157615661621
    10. '
' → logprob: -14.753157615661621

Token 831: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007133854669518769
    2. '       ' → logprob: -7.250713348388672
    3. ' return' → logprob: -13.250713348388672
    4. 'result' → logprob: -13.375713348388672
    5. '	return' → logprob: -16.875713348388672
    6. '   ' → logprob: -18.750713348388672
    7. '
' → logprob: -19.875713348388672
    8. 'ret' → logprob: -20.000713348388672
    9. '	' → logprob: -20.250713348388672
    10. 'count' → logprob: -20.375713348388672

Token 832: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00015157493180595338
    2. '       ' → logprob: -9.000151634216309
    3. 'result' → logprob: -10.500151634216309
    4. ' return' → logprob: -14.500151634216309
    5. 'res' → logprob: -16.875150680541992
    6. '   ' → logprob: -17.750150680541992
    7. '```' → logprob: -18.250150680541992
    8. 'count' → logprob: -19.375150680541992
    9. '
' → logprob: -19.750150680541992
    10. '	return' → logprob: -20.000150680541992

Token 833: ' count' (ID: 3605)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006492138374596834
    2. 'root' → logprob: -5.7564921379089355
    3. 'result' → logprob: -6.3814921379089355
    4. 'count' → logprob: -6.8814921379089355
    5. ' return' → logprob: -7.6314921379089355
    6. '#' → logprob: -10.631492614746094
    7. 'def' → logprob: -10.881492614746094
    8. '
' → logprob: -11.006492614746094
    9. 'total' → logprob: -11.506492614746094
    10. '```' → logprob: -11.631492614746094

Token 834: '_com' (ID: 10828)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2329249382019043
    2. ' =' → logprob: -1.6079249382019043
    3. '_com' → logprob: -5.607924938201904
    4. '(' → logprob: -6.857924938201904
    5. '_' → logprob: -7.107924938201904
    6. '()' → logprob: -7.857924938201904
    7. 'com' → logprob: -8.107925415039062
    8. 'return' → logprob: -8.482925415039062
    9. '_comb' → logprob: -8.607925415039062
    10. '       ' → logprob: -8.732925415039062

Token 835: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.04258299618959427
    2. 'inations' → logprob: -3.2925829887390137
    3. 'utations' → logprob: -6.042582988739014
    4. 'b' → logprob: -8.042583465576172
    5. 'bin' → logprob: -8.167583465576172
    6. 'e' → logprob: -8.167583465576172
    7. '_' → logprob: -8.292583465576172
    8. 'put' → logprob: -9.292583465576172
    9. 'o' → logprob: -9.292583465576172
    10. 'initions' → logprob: -9.417583465576172

Token 836: ' returns' (ID: 7377)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008249913225881755
    2. ' =' → logprob: -8.500824928283691
    3. '()
' → logprob: -8.750824928283691
    4. 'return' → logprob: -9.000824928283691
    5. 'result' → logprob: -9.125824928283691
    6. '=' → logprob: -9.375824928283691
    7. '_result' → logprob: -10.000824928283691
    8. '(' → logprob: -11.250824928283691
    9. '())' → logprob: -11.375824928283691
    10. '_value' → logprob: -11.750824928283691

Token 837: ' total' (ID: 3609)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.006881130393594503
    2. ' root' → logprob: -5.006881237030029
    3. '(root' → logprob: -8.756880760192871
    4. 'the' → logprob: -12.256880760192871
    5. ' the' → logprob: -13.256880760192871
    6. '```' → logprob: -14.506880760192871
    7. '[root' → logprob: -15.631880760192871
    8. '       ' → logprob: -15.631880760192871
    9. ' (' → logprob: -15.756880760192871
    10. '	root' → logprob: -16.006881713867188

Token 838: ' number' (ID: 2086)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.04919050633907318
    2. '(root' → logprob: -3.5491905212402344
    3. ' root' → logprob: -4.049190521240234
    4. '(' → logprob: -6.924190521240234
    5. '(
' → logprob: -8.299190521240234
    6. '()' → logprob: -8.549190521240234
    7. '_root' → logprob: -9.674190521240234
    8. 'count' → logprob: -10.049190521240234
    9. 'return' → logprob: -10.174190521240234
    10. '=root' → logprob: -10.174190521240234

Token 839: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5552937984466553
    2. '()' → logprob: -1.5552937984466553
    3. '(root' → logprob: -2.0552937984466553
    4. '(
' → logprob: -2.5552937984466553
    5. '       ' → logprob: -5.930294036865234
    6. 'root' → logprob: -6.055294036865234
    7. '()
' → logprob: -6.430294036865234
    8. ')' → logprob: -7.680294036865234
    9. 'of' → logprob: -7.680294036865234
    10. 'return' → logprob: -8.180294036865234

Token 840: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.004892042838037014
    2. ' ways' → logprob: -5.629891872406006
    3. 'com' → logprob: -6.879891872406006
    4. 'possible' → logprob: -9.004892349243164
    5. 'root' → logprob: -9.879892349243164
    6. 'choices' → logprob: -10.254892349243164
    7. 'children' → logprob: -11.379892349243164
    8. 'child' → logprob: -11.504892349243164
    9. ' combinations' → logprob: -11.754892349243164
    10. 'valid' → logprob: -12.129892349243164

Token 841: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040409780922345817
    2. 'return' → logprob: -8.000404357910156
    3. ' return' → logprob: -10.125404357910156
    4. '()' → logprob: -11.750404357910156
    5. '   ' → logprob: -12.250404357910156
    6. '.' → logprob: -12.750404357910156
    7. '(' → logprob: -12.875404357910156
    8. '
' → logprob: -13.125404357910156
    9. ' to' → logprob: -13.375404357910156
    10. ',' → logprob: -13.375404357910156

Token 842: ' realize' (ID: 17161)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.0597747303545475
    2. 'count' → logprob: -3.05977463722229
    3. 'combine' → logprob: -5.184774875640869
    4. 'select' → logprob: -5.434774875640869
    5. 'root' → logprob: -7.184774875640869
    6. 'include' → logprob: -8.184774398803711
    7. ' choose' → logprob: -9.434774398803711
    8. 'return' → logprob: -12.059774398803711
    9. '_choose' → logprob: -12.059774398803711
    10. ' count' → logprob: -12.184774398803711

Token 843: ' subtree' (ID: 126158)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.48249781131744385
    2. 'the' → logprob: -0.9824978113174438
    3. ' the' → logprob: -5.107497692108154
    4. ' root' → logprob: -6.732497692108154
    5. '(root' → logprob: -6.982497692108154
    6. '       ' → logprob: -9.482498168945312
    7. 'self' → logprob: -10.732498168945312
    8. '```' → logprob: -10.857498168945312
    9. 'that' → logprob: -11.107498168945312
    10. '()' → logprob: -11.232498168945312

Token 844: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028201501816511154
    2. '()' → logprob: -4.028201580047607
    3. 'return' → logprob: -5.653201580047607
    4. '(' → logprob: -5.903201580047607
    5. '.' → logprob: -6.278201580047607
    6. '()
' → logprob: -7.653201580047607
    7. '().' → logprob: -7.903201580047607
    8. ',' → logprob: -8.40320110321045
    9. ' return' → logprob: -8.52820110321045
    10. '<|end|>' → logprob: -9.15320110321045

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08089172095060349
    2. 'return' → logprob: -2.5808916091918945
    3. ' return' → logprob: -6.3308916091918945
    4. '   ' → logprob: -8.830891609191895
    5. '
' → logprob: -10.580891609191895
    6. '	' → logprob: -10.705891609191895
    7. '	return' → logprob: -11.205891609191895
    8. 'result' → logprob: -12.580891609191895
    9. '{return' → logprob: -13.330891609191895
    10. '<|end|>' → logprob: -14.080891609191895

Token 846: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006322591798380017
    2. '       ' → logprob: -7.500632286071777
    3. ' return' → logprob: -9.625632286071777
    4. '
' → logprob: -11.375632286071777
    5. 'result' → logprob: -13.875632286071777
    6. '	return' → logprob: -14.625632286071777
    7. '```' → logprob: -15.875632286071777
    8. '   ' → logprob: -16.37563133239746
    9. '        
' → logprob: -16.75063133239746
    10. '	' → logprob: -17.25063133239746

Token 847: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0004315036640036851
    2. ' root' → logprob: -7.750431537628174
    3. '(root' → logprob: -14.000431060791016
    4. '	root' → logprob: -19.750431060791016
    5. '[root' → logprob: -21.000431060791016
    6. '_root' → logprob: -21.375431060791016
    7. '=root' → logprob: -22.375431060791016
    8. '/root' → logprob: -22.875431060791016
    9. '.root' → logprob: -23.250431060791016
    10. ' ' → logprob: -23.250431060791016

Token 848: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -7.719917630311102e-05
    2. '.' → logprob: -9.500077247619629
    3. 'count' → logprob: -13.750077247619629
    4. '   ' → logprob: -15.000077247619629
    5. ' .' → logprob: -15.250077247619629
    6. '.return' → logprob: -15.500077247619629
    7. ').' → logprob: -16.000076293945312
    8. '.calculate' → logprob: -16.625076293945312
    9. '[count' → logprob: -17.125076293945312
    10. '	count' → logprob: -17.250076293945312

Token 849: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.9361264946837764e-07
    2. '_comb' → logprob: -16.0
    3. 'com' → logprob: -18.125
    4. '_' → logprob: -18.5
    5. '_count' → logprob: -19.125
    6. '_co' → logprob: -19.375
    7. '```' → logprob: -19.5
    8. '`' → logprob: -19.875
    9. '_connections' → logprob: -20.0
    10. '__' → logprob: -20.375

Token 850: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.00040576665196567774
    2. 'inations' → logprob: -8.625405311584473
    3. 'b' → logprob: -8.750405311584473
    4. 'bin' → logprob: -9.750405311584473
    5. '_b' → logprob: -12.500405311584473
    6. '_' → logprob: -13.125405311584473
    7. 'ations' → logprob: -13.875405311584473
    8. 'utations' → logprob: -14.500405311584473
    9. '```' → logprob: -15.000405311584473
    10. '_bin' → logprob: -15.000405311584473

Token 851: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 852: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 853: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00033546582562848926
    2. ' MOD' → logprob: -8.000335693359375
    3. '_MOD' → logprob: -19.375335693359375
    4. '.MOD' → logprob: -20.000335693359375
    5. ' ' → logprob: -22.875335693359375
    6. '(M' → logprob: -23.125335693359375
    7. '(mod' → logprob: -23.750335693359375
    8. '100' → logprob: -24.375335693359375
    9. '```' → logprob: -24.375335693359375
    10. 'MO' → logprob: -24.625335693359375

Token 854: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 855: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 856: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.009007352404296398
    2. ' solve' → logprob: -5.509007453918457
    3. 'main' → logprob: -5.884007453918457
    4. ' parse' → logprob: -6.509007453918457
    5. ' solution' → logprob: -8.259007453918457
    6. ' run' → logprob: -8.634007453918457
    7. 'solve' → logprob: -9.634007453918457
    8. ' process' → logprob: -10.009007453918457
    9. ' read' → logprob: -10.259007453918457
    10. ' test' → logprob: -11.009007453918457

Token 857: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00038980069803074
    2. '():
' → logprob: -7.875389575958252
    3. ' ():' → logprob: -12.00039005279541
    4. '()' → logprob: -12.62539005279541
    5. '(' → logprob: -16.125389099121094
    6. '():
' → logprob: -17.000389099121094
    7. '()>' → logprob: -17.125389099121094
    8. '():

' → logprob: -17.250389099121094
    9. '(argv' → logprob: -17.375389099121094
    10. '().' → logprob: -17.625389099121094

Token 858: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.27074959874153137
    2. ' n' → logprob: -2.270749568939209
    3. 'import' → logprob: -2.270749568939209
    4. 'n' → logprob: -4.145749568939209
    5. '   ' → logprob: -4.270749568939209
    6. '	import' → logprob: -7.520749568939209
    7. '```' → logprob: -8.520750045776367
    8. '	n' → logprob: -9.645750045776367
    9. '(n' → logprob: -10.145750045776367
    10. ' input' → logprob: -10.770750045776367

Token 859: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.7412052154541016
    2. ' import' → logprob: -0.7412052154541016
    3. ' n' → logprob: -3.7412052154541016
    4. 'n' → logprob: -3.8662052154541016
    5. '   ' → logprob: -6.116205215454102
    6. '	import' → logprob: -10.241205215454102
    7. '	n' → logprob: -11.491205215454102
    8. '```' → logprob: -12.741205215454102
    9. 't' → logprob: -14.741205215454102
    10. 'from' → logprob: -15.116205215454102

Token 860: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.6550729419104755e-05
    2. ' sys' → logprob: -10.250036239624023
    3. '=sys' → logprob: -13.750036239624023
    4. '	sys' → logprob: -18.375036239624023
    5. '```' → logprob: -19.000036239624023
    6. '(sys' → logprob: -19.000036239624023
    7. 'io' → logprob: -19.875036239624023
    8. '_sys' → logprob: -20.375036239624023
    9. '__' → logprob: -20.875036239624023
    10. 'stdin' → logprob: -21.000036239624023

Token 861: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12155367434024811
    2. '    
' → logprob: -2.871553659439087
    3. '
' → logprob: -3.121553659439087
    4. 'input' → logprob: -4.496553897857666
    5. 'import' → logprob: -7.121553897857666
    6. '```' → logprob: -7.371553897857666
    7. 'data' → logprob: -8.121553421020508
    8. '     
' → logprob: -9.246553421020508
    9. '.readline' → logprob: -9.246553421020508
    10. 'def' → logprob: -9.371553421020508

Token 862: '   ' (ID: 271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5398001670837402
    2. ' input' → logprob: -1.0398001670837402
    3. '   ' → logprob: -2.9148001670837402
    4. ' readline' → logprob: -4.91480016708374
    5. 'data' → logprob: -7.53980016708374
    6. '
' → logprob: -7.66480016708374
    7. 'n' → logprob: -8.289800643920898
    8. '    
' → logprob: -8.289800643920898
    9. '	input' → logprob: -8.789800643920898
    10. 'import' → logprob: -8.789800643920898

Token 863: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6766759753227234
    2. '   ' → logprob: -1.3016760349273682
    3. ' input' → logprob: -1.5516760349273682
    4. 'n' → logprob: -5.676675796508789
    5. 'data' → logprob: -6.051675796508789
    6. ' n' → logprob: -7.301675796508789
    7. ' readline' → logprob: -7.551675796508789
    8. '
' → logprob: -8.176675796508789
    9. ' data' → logprob: -8.176675796508789
    10. '	input' → logprob: -9.926675796508789

Token 864: '.set' (ID: 1230)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03596755862236023
    2. '.' → logprob: -4.1609673500061035
    3. '.stdout' → logprob: -4.1609673500061035
    4. '.argv' → logprob: -5.7859673500061035
    5. ' .' → logprob: -7.7859673500061035
    6. '.exit' → logprob: -8.410967826843262
    7. '.readline' → logprob: -8.535967826843262
    8. '.stderr' → logprob: -9.285967826843262
    9. 'stdin' → logprob: -10.410967826843262
    10. '.setdefault' → logprob: -10.660967826843262

Token 865: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.02037159726023674
    2. '_rec' → logprob: -4.020371437072754
    3. '_limit' → logprob: -7.270371437072754
    4. 'limit' → logprob: -7.645371437072754
    5. ' recursion' → logprob: -7.770371437072754
    6. 'stdin' → logprob: -8.895371437072754
    7. '_max' → logprob: -10.270371437072754
    8. '_depth' → logprob: -10.395371437072754
    9. '_recursive' → logprob: -10.520371437072754
    10. '```' → logprob: -10.645371437072754

Token 866: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0004015945305582136
    2. 'limit' → logprob: -8.500401496887207
    3. 'ursive' → logprob: -9.250401496887207
    4. 'urs' → logprob: -10.250401496887207
    5. 'ur' → logprob: -10.500401496887207
    6. 'ursively' → logprob: -11.000401496887207
    7. 'set' → logprob: -12.500401496887207
    8. 'cur' → logprob: -12.500401496887207
    9. 'curse' → logprob: -13.250401496887207
    10. '```' → logprob: -13.375401496887207

Token 867: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: 0.0
    2. ' limit' → logprob: -17.75
    3. '_limit' → logprob: -18.0
    4. 'depth' → logprob: -18.25
    5. 'lim' → logprob: -19.25
    6. 'limits' → logprob: -20.375
    7. 'Limit' → logprob: -20.375
    8. '-limit' → logprob: -20.875
    9. '(limit' → logprob: -21.75
    10. '.limit' → logprob: -22.0

Token 868: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.372294698550832e-06
    2. '10' → logprob: -12.500009536743164
    3. ' (' → logprob: -12.875009536743164
    4. '(
' → logprob: -13.000009536743164
    5. '100' → logprob: -14.875009536743164
    6. ' ' → logprob: -15.625009536743164
    7. '1' → logprob: -17.125009536743164
    8. '=' → logprob: -17.125009536743164
    9. '(int' → logprob: -17.125009536743164
    10. '   ' → logprob: -17.250009536743164

Token 869: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. '100' → logprob: -13.875000953674316
    3. '1' → logprob: -17.250001907348633
    4. '１０' → logprob: -17.875001907348633
    5. '200' → logprob: -18.250001907348633
    6. '300' → logprob: -19.750001907348633
    7. 'int' → logprob: -19.875001907348633
    8. ' ' → logprob: -21.250001907348633
    9. 'pow' → logprob: -21.875001907348633
    10. '150' → logprob: -21.875001907348633

Token 870: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.11068667471408844
    2. '7' → logprob: -2.360686779022217
    3. '000' → logprob: -4.610686779022217
    4. '00' → logprob: -8.360686302185059
    5. '07' → logprob: -8.860686302185059
    6. '6' → logprob: -9.985686302185059
    7. '8' → logprob: -9.985686302185059
    8. '```' → logprob: -11.985686302185059
    9. '9' → logprob: -13.110686302185059
    10. '0' → logprob: -13.235686302185059

Token 871: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.007048533298075199
    2. '9' → logprob: -5.007048606872559
    3. '8' → logprob: -8.007048606872559
    4. '6' → logprob: -17.757047653198242
    5. '```' → logprob: -21.257047653198242
    6. '10' → logprob: -21.632047653198242
    7. '７' → logprob: -21.757047653198242
    8. '``' → logprob: -22.382047653198242
    9. '+' → logprob: -22.757047653198242
    10. '=' → logprob: -22.757047653198242

Token 872: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.150362166110426e-05
    2. ')
' → logprob: -10.000091552734375
    3. '   ' → logprob: -10.000091552734375
    4. ' )' → logprob: -15.250091552734375
    5. ')
' → logprob: -15.500091552734375
    6. '),' → logprob: -17.375091552734375
    7. ' ' → logprob: -17.375091552734375
    8. '))' → logprob: -17.625091552734375
    9. ')`' → logprob: -17.875091552734375
    10. '  ' → logprob: -18.250091552734375

Token 873: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026633381843566895
    2. 'input' → logprob: -3.9016332626342773
    3. '```' → logprob: -5.776633262634277
    4. 'n' → logprob: -6.651633262634277
    5. 'data' → logprob: -7.026633262634277
    6. '    
' → logprob: -8.526633262634277
    7. 'import' → logprob: -8.901633262634277
    8. ' input' → logprob: -9.401633262634277
    9. 'line' → logprob: -9.526633262634277
    10. '	input' → logprob: -9.901633262634277

Token 874: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.050091423094272614
    2. '   ' → logprob: -3.050091505050659
    3. 'n' → logprob: -6.67509126663208
    4. 'N' → logprob: -9.175091743469238
    5. ' input' → logprob: -9.175091743469238
    6. 'read' → logprob: -10.925091743469238
    7. '
' → logprob: -12.050091743469238
    8. '    
' → logprob: -12.175091743469238
    9. '	input' → logprob: -13.300091743469238
    10. 'data' → logprob: -13.425091743469238

Token 875: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01641203835606575
    2. '_data' → logprob: -5.141412258148193
    3. '=' → logprob: -5.516412258148193
    4. '().' → logprob: -6.641412258148193
    5. '_line' → logprob: -6.766412258148193
    6. '_' → logprob: -6.891412258148193
    7. ' =' → logprob: -7.141412258148193
    8. '(' → logprob: -7.266412258148193
    9. 'data' → logprob: -7.391412258148193
    10. '_token' → logprob: -8.891411781311035

Token 876: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6000939607620239
    2. 'sys' → logprob: -0.8500939607620239
    3. ' sys' → logprob: -3.8500938415527344
    4. ' input' → logprob: -5.975093841552734
    5. 'lambda' → logprob: -10.350093841552734
    6. '=sys' → logprob: -12.100093841552734
    7. 'stdin' → logprob: -12.725093841552734
    8. '	sys' → logprob: -13.475093841552734
    9. '=input' → logprob: -13.850093841552734
    10. '```' → logprob: -14.350093841552734

Token 877: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.02254302427172661
    2. '.' → logprob: -4.147542953491211
    3. '().' → logprob: -5.147542953491211
    4. '.read' → logprob: -7.522542953491211
    5. 'read' → logprob: -9.647542953491211
    6. '.stdin' → logprob: -11.147542953491211
    7. '()' → logprob: -11.397542953491211
    8. 'def' → logprob: -11.647542953491211
    9. '=' → logprob: -12.272542953491211
    10. '.readlines' → logprob: -12.647542953491211

Token 878: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0024077657144516706
    2. 'read' → logprob: -6.627407550811768
    3. '.' → logprob: -7.627407550811768
    4. '<|end|>' → logprob: -8.002408027648926
    5. '=' → logprob: -10.002408027648926
    6. ' =' → logprob: -10.002408027648926
    7. '.read' → logprob: -10.127408027648926
    8. '.readlines' → logprob: -10.377408027648926
    9. '_read' → logprob: -11.127408027648926
    10. '().' → logprob: -11.252408027648926

Token 879: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14967407286167145
    2. 'n' → logprob: -2.0246741771698
    3. '
' → logprob: -5.149673938751221
    4. '    
' → logprob: -7.024673938751221
    5. '	n' → logprob: -9.274674415588379
    6. '(n' → logprob: -9.399674415588379
    7. '```' → logprob: -10.149674415588379
    8. ' n' → logprob: -10.399674415588379
    9. 'def' → logprob: -11.649674415588379
    10. '  
' → logprob: -11.899674415588379

Token 880: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3869656026363373
    2. '   ' → logprob: -1.1369656324386597
    3. '	n' → logprob: -10.38696575164795
    4. '```' → logprob: -10.63696575164795
    5. ' n' → logprob: -10.88696575164795
    6. '    
' → logprob: -11.38696575164795
    7. 'N' → logprob: -12.26196575164795
    8. '
' → logprob: -12.88696575164795
    9. 't' → logprob: -13.26196575164795
    10. '_n' → logprob: -15.26196575164795

Token 881: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000271706550847739
    2. 'N' (adapté à ' N') → logprob: -8.250271797180176
    3. '   ' → logprob: -11.500271797180176
    4. ' n' → logprob: -15.250271797180176
    5. '	n' → logprob: -17.12527084350586
    6. '    
' → logprob: -17.62527084350586
    7. '
' → logprob: -17.75027084350586
    8. 't' → logprob: -17.75027084350586
    9. '_n' → logprob: -19.00027084350586
    10. '```' → logprob: -20.25027084350586

Token 882: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5804815292358398
    2. ' =' → logprob: -0.8304815292358398
    3. ',' → logprob: -5.70548152923584
    4. '=int' → logprob: -7.20548152923584
    5. '   ' → logprob: -7.83048152923584
    6. '    ' → logprob: -11.45548152923584
    7. '=N' → logprob: -11.58048152923584
    8. '=n' → logprob: -11.83048152923584
    9. ' ,' → logprob: -12.08048152923584
    10. 'n' → logprob: -12.33048152923584

Token 883: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002475777640938759
    2. ' int' → logprob: -6.002475738525391
    3. '(int' → logprob: -16.37747573852539
    4. '[int' → logprob: -17.12747573852539
    5. '=int' → logprob: -18.62747573852539
    6. '	int' → logprob: -19.00247573852539
    7. '<int' → logprob: -19.00247573852539
    8. '   ' → logprob: -20.62747573852539
    9. ':int' → logprob: -21.00247573852539
    10. ' ' → logprob: -21.37747573852539

Token 884: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.26199719309806824
    2. '()' → logprob: -1.5119972229003906
    3. 'input' → logprob: -4.886997222900391
    4. '(' → logprob: -6.136997222900391
    5. '()
' → logprob: -8.26199722290039
    6. '()\' → logprob: -11.38699722290039
    7. '(
' → logprob: -11.51199722290039
    8. '())' → logprob: -11.88699722290039
    9. '();' → logprob: -12.13699722290039
    10. '(sys' → logprob: -12.13699722290039

Token 885: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0299391970038414
    2. '()' → logprob: -3.5299391746520996
    3. '().' → logprob: -9.154939651489258
    4. ')' → logprob: -9.904939651489258
    5. ' ())' → logprob: -11.154939651489258
    6. '(' → logprob: -11.279939651489258
    7. '())
' → logprob: -12.904939651489258
    8. '();)' → logprob: -13.279939651489258
    9. '()]' → logprob: -14.529939651489258
    10. '()
' → logprob: -15.279939651489258

Token 886: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.009698724374175072
    2. ' node' → logprob: -5.259698867797852
    3. 'nodes' → logprob: -6.259698867797852
    4. 'info' → logprob: -7.134698867797852
    5. 'infos' → logprob: -7.259698867797852
    6. 'types' → logprob: -7.634698867797852
    7. '   ' → logprob: -8.884698867797852
    8. 'type' → logprob: -9.384698867797852
    9. '	node' → logprob: -9.509698867797852
    10. 'Node' → logprob: -9.509698867797852

Token 887: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -2.7491250875755213e-05
    2. 'nodes' → logprob: -11.125027656555176
    3. ' node' → logprob: -12.000027656555176
    4. 'infos' → logprob: -12.750027656555176
    5. 'info' → logprob: -13.250027656555176
    6. 'types' → logprob: -13.750027656555176
    7. 'type' → logprob: -15.250027656555176
    8. '	node' → logprob: -15.625027656555176
    9. '   ' → logprob: -15.625027656555176
    10. '_node' → logprob: -16.37502670288086

Token 888: '_infos' (ID: 117905)
  Prédit: '_infos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_infos' → logprob: -0.0001290454383706674
    2. '_types' → logprob: -9.000128746032715
    3. '_info' → logprob: -12.250128746032715
    4. '_in' → logprob: -15.000128746032715
    5. 's' → logprob: -15.375128746032715
    6. 'infos' → logprob: -16.62512969970703
    7. '_names' → logprob: -17.00012969970703
    8. '_type' → logprob: -17.12512969970703
    9. '_inf' → logprob: -17.37512969970703
    10. '_s' → logprob: -17.75012969970703

Token 889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576018750667572
    2. ' =' → logprob: -0.826018750667572
    3. '=[]' → logprob: -9.576018333435059
    4. '   ' → logprob: -12.451018333435059
    5. '[]' → logprob: -13.201018333435059
    6. '	' → logprob: -14.076018333435059
    7. '=[]
' → logprob: -14.451018333435059
    8. '＝' → logprob: -14.576018333435059
    9. ' =[' → logprob: -14.576018333435059
    10. '[:]' → logprob: -14.701018333435059

Token 890: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.00022070204431656748
    2. '[' → logprob: -9.25022029876709
    3. 'input' → logprob: -9.25022029876709
    4. ' [' → logprob: -10.50022029876709
    5. '[list' → logprob: -14.50022029876709
    6. ' input' → logprob: -16.125221252441406
    7. '[str' → logprob: -16.625221252441406
    8. '[int' → logprob: -16.625221252441406
    9. '[line' → logprob: -17.000221252441406
    10. '[n' → logprob: -17.625221252441406

Token 891: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -6.704273118884885e-07
    2. ' input' → logprob: -14.250000953674316
    3. '(input' → logprob: -18.75
    4. '	input' → logprob: -23.25
    5. '<input' → logprob: -24.0
    6. '
' → logprob: -24.5
    7. 'str' → logprob: -24.875
    8. '=input' → logprob: -24.875
    9. '.input' → logprob: -25.625
    10. 'strip' → logprob: -26.0

Token 892: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00043984793592244387
    2. '()' → logprob: -7.750439643859863
    3. '()]' → logprob: -11.750439643859863
    4. '()].' → logprob: -13.750439643859863
    5. '()
' → logprob: -16.75044059753418
    6. '()[' → logprob: -16.75044059753418
    7. '())' → logprob: -17.00044059753418
    8. '()][' → logprob: -17.62544059753418
    9. '()]
' → logprob: -17.87544059753418
    10. ' ().' → logprob: -17.87544059753418

Token 893: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03804183006286621
    2. 'rstrip' → logprob: -3.288041830062866
    3. 'read' → logprob: -16.163042068481445
    4. ' strip' → logprob: -16.288042068481445
    5. '_strip' → logprob: -16.538042068481445
    6. 'str' → logprob: -17.788042068481445
    7. 'rs' → logprob: -18.038042068481445
    8. '.rstrip' → logprob: -18.038042068481445
    9. '(strip' → logprob: -18.038042068481445
    10. 'split' → logprob: -18.163042068481445

Token 894: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001354824344161898
    2. '()]' → logprob: -9.12513542175293
    3. 'for' → logprob: -11.62513542175293
    4. ' for' → logprob: -11.75013542175293
    5. '()
' → logprob: -12.62513542175293
    6. ')' → logprob: -12.75013542175293
    7. '())' → logprob: -12.87513542175293
    8. ']' → logprob: -14.87513542175293
    9. '()]
' → logprob: -15.37513542175293
    10. ' ()' → logprob: -15.50013542175293

Token 895: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4060746729373932
    2. ' for' → logprob: -1.2810746431350708
    3. ')' → logprob: -3.5310747623443604
    4. 'for' → logprob: -3.7810747623443604
    5. ']' → logprob: -6.031074523925781
    6. '()]' → logprob: -7.281074523925781
    7. '<|end|>' → logprob: -8.281074523925781
    8. ' ' → logprob: -8.656074523925781
    9. '<|end|>' → logprob: -9.281074523925781
    10. ')]' → logprob: -9.781074523925781

Token 896: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004982559010386467
    2. '_i' → logprob: -5.6299824714660645
    3. '_N' → logprob: -7.5049824714660645
    4. ' _' → logprob: -7.8799824714660645
    5. '_tokens' → logprob: -8.879982948303223
    6. '_n' → logprob: -9.254982948303223
    7. '_in' → logprob: -10.004982948303223
    8. '_token' → logprob: -10.629982948303223
    9. '_answer' → logprob: -11.004982948303223
    10. '_range' → logprob: -11.004982948303223

Token 897: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00013214473437983543
    2. ' range' → logprob: -9.00013256072998
    3. '_range' → logprob: -12.50013256072998
    4. '_' → logprob: -12.75013256072998
    5. 'in' → logprob: -13.37513256072998
    6. '   ' → logprob: -15.75013256072998
    7. '	range' → logprob: -16.000131607055664
    8. '(range' → logprob: -16.875131607055664
    9. '  ' → logprob: -17.375131607055664
    10. '
' → logprob: -17.500131607055664

Token 898: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.088346359931165e-07
    2. ' range' → logprob: -14.000000953674316
    3. '(range' → logprob: -19.75
    4. '
' → logprob: -20.875
    5. '	range' → logprob: -21.25
    6. '.range' → logprob: -21.75
    7. '_range' → logprob: -21.875
    8. '   ' → logprob: -23.125
    9. '```' → logprob: -23.125
    10. '_' → logprob: -23.875

Token 899: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001818489981815219
    2. 'N' → logprob: -8.625182151794434
    3. '(' → logprob: -13.375182151794434
    4. '	N' → logprob: -14.875182151794434
    5. ' (' → logprob: -16.375181198120117
    6. ' N' → logprob: -16.375181198120117
    7. '   ' → logprob: -16.625181198120117
    8. '(
' → logprob: -18.375181198120117
    9. '
' → logprob: -18.750181198120117
    10. '<N' → logprob: -18.875181198120117

Token 900: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004255527164787054
    2. ')' → logprob: -5.504255294799805
    3. ']' → logprob: -8.879255294799805
    4. '   ' → logprob: -10.379255294799805
    5. ')]
' → logprob: -12.379255294799805
    6. ')
' → logprob: -13.879255294799805
    7. ')],' → logprob: -15.129255294799805
    8. ')])' → logprob: -15.129255294799805
    9. ' )' → logprob: -15.379255294799805
    10. ')][' → logprob: -16.004255294799805

Token 901: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.05237829312682152
    2. ' edges' → logprob: -3.5523781776428223
    3. '   ' → logprob: -3.8023781776428223
    4. '_edges' → logprob: -10.80237865447998
    5. 'edge' → logprob: -11.05237865447998
    6. '```' → logprob: -11.42737865447998
    7. '(edges' → logprob: -12.80237865447998
    8. '.edges' → logprob: -13.30237865447998
    9. '    
' → logprob: -13.80237865447998
    10. 'Edges' → logprob: -14.05237865447998

Token 902: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.000770436367020011
    2. ' edges' → logprob: -7.250770568847656
    3. '   ' → logprob: -10.125770568847656
    4. 'E' → logprob: -11.750770568847656
    5. 'M' → logprob: -12.500770568847656
    6. 'edge' → logprob: -12.875770568847656
    7. '_edges' → logprob: -12.875770568847656
    8. 'nodes' → logprob: -14.000770568847656
    9. 'Edges' → logprob: -14.250770568847656
    10. 'e' → logprob: -14.875770568847656

Token 903: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762819051742554
    2. ' =' → logprob: -0.8262819051742554
    3. '=[]' → logprob: -8.076281547546387
    4. '   ' → logprob: -10.701281547546387
    5. '=[]
' → logprob: -12.201281547546387
    6. '	' → logprob: -13.701281547546387
    7. '[]' → logprob: -14.326281547546387
    8. '=[' → logprob: -14.451281547546387
    9. '[' → logprob: -14.701281547546387
    10. '=[]
' → logprob: -15.451281547546387

Token 904: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23406389355659485
    2. '[int' → logprob: -1.7340638637542725
    3. '[N' → logprob: -3.4840638637542725
    4. '[n' → logprob: -7.484064102172852
    5. '[i' → logprob: -8.484064102172852
    6. '[Int' → logprob: -8.984064102172852
    7. '[input' → logprob: -8.984064102172852
    8. ' [' → logprob: -9.609064102172852
    9. '[List' → logprob: -9.734064102172852
    10. '[array' → logprob: -9.859064102172852

Token 905: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00031735055381432176
    2. 'tuple' → logprob: -8.250317573547363
    3. '[list' → logprob: -10.250317573547363
    4. ' list' → logprob: -11.000317573547363
    5. '(list' → logprob: -12.750317573547363
    6. '[' → logprob: -14.125317573547363
    7. 'map' → logprob: -15.625317573547363
    8. '(tuple' → logprob: -16.000316619873047
    9. '=list' → logprob: -17.000316619873047
    10. '   ' → logprob: -17.250316619873047

Token 906: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.4974866644479334e-05
    2. 'map' → logprob: -11.250015258789062
    3. '(int' → logprob: -13.375015258789062
    4. '(' → logprob: -15.875015258789062
    5. '(
' → logprob: -16.875015258789062
    6. '()' → logprob: -17.250015258789062
    7. '(tuple' → logprob: -17.500015258789062
    8. ' map' → logprob: -17.875015258789062
    9. '	map' → logprob: -18.000015258789062
    10. ',map' → logprob: -18.500015258789062

Token 907: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5768476128578186
    2. '(int' → logprob: -0.8268476128578186
    3. ',int' → logprob: -7.201847553253174
    4. '[int' → logprob: -9.826848030090332
    5. ']int' → logprob: -10.326848030090332
    6. '<int' → logprob: -10.951848030090332
    7. 'map' → logprob: -11.076848030090332
    8. '   ' → logprob: -11.326848030090332
    9. '=int' → logprob: -12.326848030090332
    10. '```' → logprob: -12.326848030090332

Token 908: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15451960265636444
    2. ',input' → logprob: -2.029519557952881
    3. ',' → logprob: -4.529519557952881
    4. 'input' → logprob: -7.154519557952881
    5. '   ' → logprob: -9.404520034790039
    6. '(' → logprob: -10.154520034790039
    7. '(),' → logprob: -10.154520034790039
    8. '[input' → logprob: -11.029520034790039
    9. '=input' → logprob: -11.529520034790039
    10. ' input' → logprob: -12.404520034790039

Token 909: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. '(input' → logprob: -17.375261306762695
    4. ',input' → logprob: -18.375261306762695
    5. '   ' → logprob: -19.875261306762695
    6. ')' → logprob: -19.875261306762695
    7. '	input' → logprob: -20.000261306762695
    8. '=input' → logprob: -20.500261306762695
    9. '
' → logprob: -20.625261306762695
    10. '<input' → logprob: -20.750261306762695

Token 910: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.125000953674316
    3. '()
' → logprob: -16.625
    4. ' ().' → logprob: -17.5
    5. '()[' → logprob: -19.0
    6. '   ' → logprob: -19.875
    7. '.strip' → logprob: -20.5
    8. '(' → logprob: -20.625
    9. '.readline' → logprob: -20.75
    10. '.split' → logprob: -20.875

Token 911: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16036640107631683
    2. 'strip' → logprob: -1.910366415977478
    3. '().' → logprob: -9.28536605834961
    4. 'rstrip' → logprob: -10.03536605834961
    5. 'read' → logprob: -13.03536605834961
    6. '.strip' → logprob: -13.91036605834961
    7. ' split' → logprob: -14.41036605834961
    8. ' strip' → logprob: -14.41036605834961
    9. '.readline' → logprob: -14.78536605834961
    10. '.split' → logprob: -14.91036605834961

Token 912: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0007773502147756517
    2. '()' → logprob: -7.625777244567871
    3. '()))
' → logprob: -8.875777244567871
    4. '))' → logprob: -8.875777244567871
    5. '())' → logprob: -12.500777244567871
    6. '(' → logprob: -13.000777244567871
    7. '()[' → logprob: -13.250777244567871
    8. '()
' → logprob: -14.375777244567871
    9. '().' → logprob: -15.250777244567871
    10. '())).' → logprob: -15.375777244567871

Token 913: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7030474543571472
    2. ' for' → logprob: -0.9530474543571472
    3. '()' → logprob: -2.578047513961792
    4. '   ' → logprob: -3.203047513961792
    5. ')' → logprob: -5.953047275543213
    6. '       ' → logprob: -9.578047752380371
    7. '	for' → logprob: -10.078047752380371
    8. '    ' → logprob: -10.328047752380371
    9. '(' → logprob: -11.328047752380371
    10. ']' → logprob: -11.578047752380371

Token 914: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005150742828845978
    2. ' range' → logprob: -5.50515079498291
    3. '_range' → logprob: -7.13015079498291
    4. 'range' → logprob: -8.25515079498291
    5. ' _' → logprob: -12.63015079498291
    6. ' in' → logprob: -13.25515079498291
    7. '_RANGE' → logprob: -13.75515079498291
    8. '   ' → logprob: -14.00515079498291
    9. '(range' → logprob: -14.25515079498291
    10. '_=' → logprob: -14.38015079498291

Token 915: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001938631059601903
    2. ' range' → logprob: -6.251938819885254
    3. 'in' → logprob: -12.126938819885254
    4. '(range' → logprob: -12.876938819885254
    5. '_' → logprob: -13.501938819885254
    6. '	range' → logprob: -15.001938819885254
    7. ' in' → logprob: -15.876938819885254
    8. '_range' → logprob: -15.876938819885254
    9. '   ' → logprob: -18.376937866210938
    10. '
' → logprob: -19.001937866210938

Token 916: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3306015716807451e-05
    2. ' range' → logprob: -11.25001335144043
    3. '(range' → logprob: -15.25001335144043
    4. '	range' → logprob: -20.37501335144043
    5. '
' → logprob: -21.62501335144043
    6. '   ' → logprob: -23.12501335144043
    7. '.range' → logprob: -23.50001335144043
    8. 'N' → logprob: -24.12501335144043
    9. '_range' → logprob: -24.25001335144043
    10. '[N' → logprob: -24.62501335144043

Token 917: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0024788661394268274
    2. 'N' → logprob: -6.002479076385498
    3. '(' → logprob: -13.00247859954834
    4. '   ' → logprob: -15.37747859954834
    5. '((' → logprob: -15.50247859954834
    6. ' (' → logprob: -15.75247859954834
    7. '	N' → logprob: -16.127479553222656
    8. '[N' → logprob: -16.252479553222656
    9. ' N' → logprob: -16.877479553222656
    10. ',N' → logprob: -17.002479553222656

Token 918: '-' (ID: 12)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.13537940382957458
    2. '-' → logprob: -2.1353793144226074
    3. ' -' → logprob: -5.510379314422607
    4. ')' → logprob: -5.510379314422607
    5. ')]
' → logprob: -8.885379791259766
    6. ')][' → logprob: -9.260379791259766
    7. '   ' → logprob: -10.385379791259766
    8. ']' → logprob: -10.885379791259766
    9. ')])' → logprob: -11.135379791259766
    10. ' )' → logprob: -11.635379791259766

Token 919: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '2' → logprob: -16.75
    4. ')' → logprob: -17.0
    5. '   ' → logprob: -17.0
    6. '```' → logprob: -17.125
    7. '0' → logprob: -18.375
    8. '
' → logprob: -19.375
    9. '``' → logprob: -19.375
    10. ')
' → logprob: -19.5

Token 920: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06548478454351425
    2. ']' → logprob: -2.8154847621917725
    3. ')' → logprob: -5.815485000610352
    4. '   ' → logprob: -7.565485000610352
    5. ')]
' → logprob: -11.940485000610352
    6. ']
' → logprob: -12.940485000610352
    7. ' ]' → logprob: -14.440485000610352
    8. '])' → logprob: -14.690485000610352
    9. '])]' → logprob: -14.815485000610352
    10. '()]' → logprob: -15.315485000610352

Token 921: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3304140269756317
    2. 'tree' → logprob: -1.330414056777954
    3. 'd' → logprob: -4.830413818359375
    4. 'dr' → logprob: -5.830413818359375
    5. 'dc' → logprob: -6.205413818359375
    6. 'dt' → logprob: -6.955413818359375
    7. '
' → logprob: -6.955413818359375
    8. 'drug' → logprob: -6.955413818359375
    9. '    
' → logprob: -7.080413818359375
    10. ' tree' → logprob: -9.205413818359375

Token 922: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.04320448264479637
    2. 'd' → logprob: -3.2932045459747314
    3. 'drug' → logprob: -5.293204307556152
    4. 'D' → logprob: -9.793204307556152
    5. '   ' → logprob: -10.043204307556152
    6. 'dr' → logprob: -11.793204307556152
    7. 'dc' → logprob: -11.793204307556152
    8. 'dt' → logprob: -11.793204307556152
    9. ' tree' → logprob: -14.418204307556152
    10. ' d' → logprob: -14.668204307556152

Token 923: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10073160380125046
    2. '=' → logprob: -2.350731611251831
    3. '   ' → logprob: -7.725731372833252
    4. '.build' → logprob: -9.60073184967041
    5. '.' → logprob: -12.60073184967041
    6. '_builder' → logprob: -13.10073184967041
    7. '	' → logprob: -13.22573184967041
    8. ' ' → logprob: -14.10073184967041
    9. ')' → logprob: -14.35073184967041
    10. 'builder' → logprob: -14.60073184967041

Token 924: ' Drug' (ID: 37595)
  Prédit: 'Drug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Drug' → logprob: -6.2729995988775045e-06
    2. ' Drug' → logprob: -12.000006675720215
    3. 'Dr' → logprob: -16.7500057220459
    4. 'Drag' → logprob: -19.5000057220459
    5. 'Dragon' → logprob: -19.5000057220459
    6. 'Drone' → logprob: -20.6250057220459
    7. 'Dog' → logprob: -21.3750057220459
    8. 'Drink' → logprob: -21.6250057220459
    9. '   ' → logprob: -22.6250057220459
    10. ' drug' → logprob: -23.2500057220459

Token 925: 'Combination' (ID: 114627)
  Prédit: 'Combination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Combination' → logprob: 0.0
    2. ' Combination' → logprob: -17.5
    3. 'comb' → logprob: -18.375
    4. 'Composition' → logprob: -18.5
    5. 'Drug' → logprob: -19.25
    6. 'Completion' → logprob: -19.25
    7. 'Continuation' → logprob: -19.625
    8. 'Comb' → logprob: -19.875
    9. 'Competition' → logprob: -20.25
    10. 'Com' → logprob: -21.125

Token 926: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -6.749814019713085e-06
    2. 'tree' → logprob: -12.000006675720215
    3. 'Tre' → logprob: -15.750006675720215
    4. '_tree' → logprob: -16.00000762939453
    5. 'Combination' → logprob: -16.37500762939453
    6. '	Tree' → logprob: -16.62500762939453
    7. '<Tree' → logprob: -17.12500762939453
    8. '
' → logprob: -17.37500762939453
    9. ' Tree' → logprob: -17.37500762939453
    10. 't' → logprob: -18.37500762939453

Token 927: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009913649410009384
    2. 'N' → logprob: -7.125991344451904
    3. '(' → logprob: -8.625991821289062
    4. '(n' → logprob: -12.500991821289062
    5. '(
' → logprob: -13.000991821289062
    6. '(tree' → logprob: -14.500991821289062
    7. '   ' → logprob: -15.375991821289062
    8. 'tree' → logprob: -15.500991821289062
    9. 'Tree' → logprob: -15.500991821289062
    10. '
' → logprob: -15.750991821289062

Token 928: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008687060908414423
    2. ')
' → logprob: -7.250868797302246
    3. '   ' → logprob: -8.750868797302246
    4. ')
' → logprob: -16.12586784362793
    5. '),' → logprob: -16.37586784362793
    6. ').' → logprob: -16.50086784362793
    7. ' )' → logprob: -17.12586784362793
    8. '")' → logprob: -17.75086784362793
    9. '```' → logprob: -18.25086784362793
    10. '(' → logprob: -18.37586784362793

Token 929: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03809163346886635
    2. 'tree' → logprob: -3.2880916595458984
    3. '	tree' → logprob: -10.163091659545898
    4. ' tree' → logprob: -11.788091659545898
    5. '```' → logprob: -13.288091659545898
    6. '  ' → logprob: -14.163091659545898
    7. '(tree' → logprob: -14.663091659545898
    8. '
' → logprob: -14.913091659545898
    9. ' ' → logprob: -15.663091659545898
    10. '    
' → logprob: -15.788091659545898

Token 930: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.875000953674316
    3. ' tree' → logprob: -15.125000953674316
    4. '	tree' → logprob: -17.25
    5. '(tree' → logprob: -19.0
    6. '
' → logprob: -19.375
    7. '```' → logprob: -20.5
    8. '.tree' → logprob: -21.0
    9. 'thread' → logprob: -21.5
    10. 'trees' → logprob: -21.625

Token 931: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -1.688212614681106e-05
    2. '.' → logprob: -11.000017166137695
    3. 'build' → logprob: -16.625017166137695
    4. '.load' → logprob: -17.000017166137695
    5. '.b' → logprob: -17.125017166137695
    6. '\.' → logprob: -17.750017166137695
    7. '.create' → logprob: -18.125017166137695
    8. ' .' → logprob: -18.375017166137695
    9. ').' → logprob: -18.750017166137695
    10. '.fill' → logprob: -19.375017166137695

Token 932: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -7.822646693966817e-06
    2. '_tree' → logprob: -11.875007629394531
    3. 'nodes' → logprob: -14.125007629394531
    4. 'tree' → logprob: -17.00000762939453
    5. '_node' → logprob: -18.25000762939453
    6. '_' → logprob: -18.37500762939453
    7. '```' → logprob: -20.75000762939453
    8. '\' → logprob: -21.00000762939453
    9. '(nodes' → logprob: -21.00000762939453
    10. '
' → logprob: -21.12500762939453

Token 933: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.4498052223643754e-05
    2. 'node' → logprob: -12.000014305114746
    3. '   ' → logprob: -12.375014305114746
    4. '(' → logprob: -13.125014305114746
    5. '[node' → logprob: -13.875014305114746
    6. '(
' → logprob: -14.500014305114746
    7. '```' → logprob: -15.250014305114746
    8. '(n' → logprob: -16.250015258789062
    9. '((' → logprob: -16.375015258789062
    10. ',node' → logprob: -16.625015258789062

Token 934: '_infos' (ID: 117905)
  Prédit: '_infos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_infos' → logprob: -2.2200749754119897e-06
    2. 'infos' → logprob: -14.875001907348633
    3. ')_' → logprob: -14.875001907348633
    4. ')' → logprob: -15.000001907348633
    5. 's' → logprob: -15.250001907348633
    6. 'Infos' → logprob: -15.750001907348633
    7. '_nodes' → logprob: -16.000001907348633
    8. '_' → logprob: -16.375001907348633
    9. '_ids' → logprob: -16.625001907348633
    10. '   ' → logprob: -16.750001907348633

Token 935: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015514022670686245
    2. ')' → logprob: -6.501551628112793
    3. ')
' → logprob: -10.001551628112793
    4. '
' → logprob: -13.376551628112793
    5. '<|end|>' → logprob: -14.126551628112793
    6. '    
' → logprob: -15.001551628112793
    7. ').' → logprob: -15.376551628112793
    8. '),' → logprob: -15.501551628112793
    9. '(tree' → logprob: -15.751551628112793
    10. '       ' → logprob: -16.126550674438477

Token 936: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008629471063613892
    2. 'tree' → logprob: -4.758629322052002
    3. '	tree' → logprob: -12.00862979888916
    4. ' tree' → logprob: -12.13362979888916
    5. '```' → logprob: -12.75862979888916
    6. '
' → logprob: -14.75862979888916
    7. '       ' → logprob: -16.383628845214844
    8. '(tree' → logprob: -16.883628845214844
    9. '    
' → logprob: -17.133628845214844
    10. ' ' → logprob: -17.508628845214844

Token 937: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.0012455896940082312
    2. '   ' → logprob: -6.751245498657227
    3. ' tree' → logprob: -9.501245498657227
    4. '	tree' → logprob: -14.626245498657227
    5. '```' → logprob: -16.251245498657227
    6. '
' → logprob: -17.251245498657227
    7. '  ' → logprob: -18.501245498657227
    8. '(tree' → logprob: -18.626245498657227
    9. ' ' → logprob: -18.751245498657227
    10. 'trees' → logprob: -19.751245498657227

Token 938: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.0
    3. 'build' → logprob: -16.375
    4. ' .' → logprob: -16.75
    5. '.b' → logprob: -18.875
    6. '\.' → logprob: -19.25
    7. '.load' → logprob: -20.75
    8. '.fill' → logprob: -21.125
    9. '```' → logprob: -21.125
    10. ').' → logprob: -21.25

Token 939: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.1279553291387856e-05
    2. 'tree' → logprob: -11.750011444091797
    3. '_nodes' → logprob: -13.250011444091797
    4. '_edges' → logprob: -13.500011444091797
    5. '_TREE' → logprob: -16.625011444091797
    6. '_t' → logprob: -17.125011444091797
    7. 'Tree' → logprob: -17.375011444091797
    8. ' tree' → logprob: -18.125011444091797
    9. '-tree' → logprob: -18.125011444091797
    10. '_' → logprob: -18.500011444091797

Token 940: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -3.5597102396423e-05
    2. 'edges' → logprob: -10.250035285949707
    3. '(' → logprob: -17.125036239624023
    4. '(ed' → logprob: -17.750036239624023
    5. '(edge' → logprob: -18.250036239624023
    6. ' edges' → logprob: -18.375036239624023
    7. '((' → logprob: -18.500036239624023
    8. '(nodes' → logprob: -18.500036239624023
    9. '(lines' → logprob: -18.625036239624023
    10. '_edges' → logprob: -19.000036239624023

Token 941: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1604369729757309
    2. '   ' → logprob: -1.910436987876892
    3. ')
' → logprob: -8.910436630249023
    4. '<|end|>' → logprob: -9.660436630249023
    5. '()' → logprob: -12.160436630249023
    6. '<|end|>' → logprob: -12.410436630249023
    7. '```' → logprob: -14.035436630249023
    8. '())' → logprob: -14.285436630249023
    9. '
' → logprob: -14.785436630249023
    10. '    
' → logprob: -15.035436630249023

Token 942: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10026447474956512
    2. '   ' → logprob: -2.350264549255371
    3. '```' → logprob: -10.350264549255371
    4. 'result' → logprob: -10.975264549255371
    5. ' print' → logprob: -12.350264549255371
    6. '
' → logprob: -12.850264549255371
    7. '    
' → logprob: -13.850264549255371
    8. '	print' → logprob: -14.725264549255371
    9. '``' → logprob: -15.475264549255371
    10. 'res' → logprob: -16.725263595581055

Token 943: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.747814349073451e-05
    2. 'result' → logprob: -11.000017166137695
    3. 'res' → logprob: -14.500017166137695
    4. 'ans' (adapté à ' ans') → logprob: -16.375017166137695
    5. '   ' → logprob: -16.750017166137695
    6. ' print' → logprob: -17.375017166137695
    7. 'answer' → logprob: -17.875017166137695
    8. '    
' → logprob: -19.500017166137695
    9. '```' → logprob: -19.500017166137695
    10. '
' → logprob: -20.500017166137695

Token 944: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16331955790519714
    2. '=' → logprob: -1.9133195877075195
    3. '.' → logprob: -5.9133195877075195
    4. '   ' → logprob: -8.16331958770752
    5. '.=' → logprob: -9.91331958770752
    6. ')' → logprob: -11.28831958770752
    7. '.write' → logprob: -11.91331958770752
    8. '_' → logprob: -12.28831958770752
    9. ' .=' → logprob: -12.41331958770752
    10. '.append' → logprob: -12.78831958770752

Token 945: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.004091458860784769
    2. ' tree' → logprob: -5.504091262817383
    3. '(tree' → logprob: -11.254091262817383
    4. '	tree' → logprob: -15.629091262817383
    5. '   ' → logprob: -19.129091262817383
    6. '/tree' → logprob: -20.004091262817383
    7. 'tre' → logprob: -20.254091262817383
    8. '.tree' → logprob: -21.004091262817383
    9. '```' → logprob: -21.879091262817383
    10. 't' → logprob: -22.379091262817383

Token 946: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -8.673547563375905e-05
    2. '.' → logprob: -9.500086784362793
    3. 'count' → logprob: -11.375086784362793
    4. '=count' → logprob: -16.750085830688477
    5. '.calculate' → logprob: -17.250085830688477
    6. '	count' → logprob: -17.500085830688477
    7. '.
' → logprob: -17.500085830688477
    8. ').' → logprob: -17.625085830688477
    9. '_count' → logprob: -17.625085830688477
    10. '(count' → logprob: -17.750085830688477

Token 947: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -8.061054359131958e-06
    2. '_' → logprob: -11.750007629394531
    3. 'All' → logprob: -17.25000762939453
    4. '_ALL' → logprob: -17.62500762939453
    5. '_
' → logprob: -17.87500762939453
    6. '_com' → logprob: -17.87500762939453
    7. '_al' → logprob: -17.87500762939453
    8. ' _' → logprob: -18.25000762939453
    9. '__' → logprob: -18.62500762939453
    10. 'all' → logprob: -18.75000762939453

Token 948: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -3.173704271830502e-06
    2. '_comb' → logprob: -13.25000286102295
    3. 'com' → logprob: -13.62500286102295
    4. '_' → logprob: -17.125003814697266
    5. 's' → logprob: -18.125003814697266
    6. 'Com' → logprob: -18.500003814697266
    7. '\' → logprob: -18.500003814697266
    8. '```' → logprob: -18.625003814697266
    9. 'a' → logprob: -18.875003814697266
    10. '_COM' → logprob: -19.125003814697266

Token 949: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -2.451116051815916e-05
    2. 'b' → logprob: -10.875024795532227
    3. 'inations' → logprob: -12.500024795532227
    4. 'bin' → logprob: -13.750024795532227
    5. '```' → logprob: -16.250024795532227
    6. 'bination' → logprob: -16.375024795532227
    7. 'com' → logprob: -16.625024795532227
    8. '#' → logprob: -16.625024795532227
    9. '_b' → logprob: -17.125024795532227
    10. 'positions' → logprob: -17.125024795532227

Token 950: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2828128933906555
    2. '()
' → logprob: -1.4078128337860107
    3. 'print' → logprob: -6.53281307220459
    4. '   ' → logprob: -9.03281307220459
    5. '();' → logprob: -11.40781307220459
    6. '()
' → logprob: -11.40781307220459
    7. '()%' → logprob: -11.65781307220459
    8. '()\' → logprob: -11.78281307220459
    9. '(' → logprob: -11.90781307220459
    10. '()`' → logprob: -12.15781307220459

Token 951: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47500157356262207
    2. '   ' → logprob: -0.9750015735626221
    3. '```' → logprob: -7.100001335144043
    4. ' print' → logprob: -10.100001335144043
    5. '	print' → logprob: -10.225001335144043
    6. '
' → logprob: -11.975001335144043
    7. '<|end|>' → logprob: -12.350001335144043
    8. '``' → logprob: -12.475001335144043
    9. '    
' → logprob: -12.600001335144043
    10. '`' → logprob: -13.975001335144043

Token 952: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -14.750000953674316
    3. '```' → logprob: -15.750000953674316
    4. ' print' → logprob: -16.0
    5. '	print' → logprob: -19.75
    6. '
' → logprob: -20.0
    7. '``' → logprob: -20.375
    8. '#print' → logprob: -22.75
    9. '`' → logprob: -23.0
    10. '    
' → logprob: -24.0

Token 953: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.8889261304575484e-06
    2. 'ans' → logprob: -12.500003814697266
    3. '(' → logprob: -15.875003814697266
    4. '	ans' → logprob: -18.125003814697266
    5. '(answer' → logprob: -19.250003814697266
    6. '(
' → logprob: -19.375003814697266
    7. '()' → logprob: -20.250003814697266
    8. ' ans' → logprob: -20.500003814697266
    9. '_ans' → logprob: -21.375003814697266
    10. ' (' → logprob: -21.500003814697266

Token 954: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014168102643452585
    2. '())' → logprob: -9.500142097473145
    3. '()' → logprob: -9.625142097473145
    4. ')
' → logprob: -14.750142097473145
    5. '   ' → logprob: -16.250141143798828
    6. ' )' → logprob: -16.875141143798828
    7. '`)' → logprob: -17.000141143798828
    8. '')' → logprob: -17.250141143798828
    9. ')`' → logprob: -17.375141143798828
    10. '(' → logprob: -18.000141143798828

Token 955: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00022368213103618473
    2. '```' → logprob: -9.000224113464355
    3. ' if' → logprob: -9.375224113464355
    4. '<|end|>' → logprob: -11.375224113464355
    5. '
' → logprob: -13.125224113464355
    6. '#' → logprob: -13.750224113464355
    7. 'If' → logprob: -15.625224113464355
    8. '	if' → logprob: -15.875224113464355
    9. 'main' → logprob: -16.00022315979004
    10. '\n' → logprob: -16.75022315979004

Token 956: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.31328558921813965
    2. '__' → logprob: -1.3132855892181396
    3. '_' → logprob: -11.313285827636719
    4. '___' → logprob: -11.938285827636719
    5. '_name' → logprob: -12.438285827636719
    6. 'name' → logprob: -15.438285827636719
    7. '/__' → logprob: -15.438285827636719
    8. '.__' → logprob: -15.938285827636719
    9. ' ___' → logprob: -15.938285827636719
    10. ' _' → logprob: -16.43828582763672

Token 957: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08516094833612442
    2. '==' → logprob: -2.710160970687866
    3. ' ==' → logprob: -4.585160732269287
    4. '=="' → logprob: -5.960160732269287
    5. '=='' → logprob: -6.210160732269287
    6. '```' → logprob: -9.460161209106445
    7. 'if' → logprob: -9.835161209106445
    8. 'name' → logprob: -10.210161209106445
    9. '__.__' → logprob: -10.585161209106445
    10. '==
' → logprob: -10.585161209106445

Token 958: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.546478935983032e-05
    2. '__.__' → logprob: -10.875025749206543
    3. '==' → logprob: -12.250025749206543
    4. '__
' → logprob: -14.750025749206543
    5. '__.' → logprob: -15.250025749206543
    6. '=="' → logprob: -15.500025749206543
    7. ' ==' → logprob: -15.625025749206543
    8. '__["' → logprob: -15.750025749206543
    9. '____' → logprob: -15.875025749206543
    10. '__('' → logprob: -16.000024795532227

Token 959: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3329063653945923
    2. '__' → logprob: -1.4579063653945923
    3. ' ==' → logprob: -3.2079062461853027
    4. '=="' → logprob: -4.957906246185303
    5. '=='' → logprob: -5.832906246185303
    6. '=' → logprob: -11.332906723022461
    7. '==
' → logprob: -11.707906723022461
    8. '.__' → logprob: -12.082906723022461
    9. '__.__' → logprob: -12.332906723022461
    10. '===' → logprob: -12.832906723022461

Token 960: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3868793249130249
    2. '"' → logprob: -1.136879324913025
    3. '__' → logprob: -11.761878967285156
    4. ' "__' → logprob: -16.011878967285156
    5. ''name' → logprob: -16.386878967285156
    6. ' '__' → logprob: -16.636878967285156
    7. ''"' → logprob: -16.886878967285156
    8. ''post' → logprob: -17.261878967285156
    9. '"name' → logprob: -17.636878967285156
    10. ''app' → logprob: -17.636878967285156

Token 961: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005291988607496023
    2. '__' → logprob: -5.255291938781738
    3. 'name' → logprob: -9.880291938781738
    4. '_main' → logprob: -12.130291938781738
    5. '__':
' → logprob: -14.005291938781738
    6. ' main' → logprob: -14.505291938781738
    7. '(main' → logprob: -16.255292892456055
    8. 'm' → logprob: -16.380292892456055
    9. ' __' → logprob: -17.630292892456055
    10. '__.' → logprob: -17.755292892456055

Token 962: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.04863857850432396
    2. '__' → logprob: -3.0486385822296143
    3. '__":
' → logprob: -9.923638343811035
    4. '_' → logprob: -13.923638343811035
    5. '__
' → logprob: -15.048638343811035
    6. '__:' → logprob: -15.173638343811035
    7. '__.' → logprob: -15.298638343811035
    8. '__.__' → logprob: -16.04863929748535
    9. '___' → logprob: -16.29863929748535
    10. '__('' → logprob: -16.67363929748535

Token 963: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00013715129171032459
    2. '	main' → logprob: -9.250137329101562
    3. ' main' → logprob: -10.375137329101562
    4. '   ' → logprob: -12.250137329101562
    5. '_main' → logprob: -13.250137329101562
    6. '__' → logprob: -13.500137329101562
    7. '(main' → logprob: -13.875137329101562
    8. '\
' → logprob: -15.500137329101562
    9. '    
' → logprob: -15.625137329101562
    10. '
' → logprob: -15.750137329101562

Token 964: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -20.25
    3. '	main' → logprob: -22.0
    4. '_main' → logprob: -26.375
    5. '.main' → logprob: -26.625
    6. '   ' → logprob: -26.625
    7. '(main' → logprob: -27.125
    8. 'import' → logprob: -28.25
    9. 'Main' → logprob: -29.0
    10. 'mainwindow' → logprob: -29.5

Token 965: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 963
Tokens correctement prédits (1ère position, stricte): 350
Tokens correctement prédits (1ère position, avec adaptation): 398
Tokens correctement prédits (top 10): 770
Précision stricte (1ère position): 36.34%
Précision adaptée (1ère position): 41.33%
Précision (top 10): 79.96%
================================================================================
