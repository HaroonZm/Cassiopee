================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:01:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    best_p = None
    best_diff = float('inf')
    for _ in range(n):
        p, h, w = map(int, input().split())
        bmi = w / ((h / 100) ** 2)
        diff = abs(bmi - 22)
        if diff < best_diff or (diff == best_diff and p < best_p):
            best_diff = diff
            best_p = p
    print(best_p)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6069875359535217
    2. 'u' → logprob: -1.731987476348877
    3. '=' → logprob: -2.481987476348877
    4. 'o' → logprob: -2.481987476348877
    5. '   ' → logprob: -3.356987476348877
    6. 'e' → logprob: -4.606987476348877
    7. '_' → logprob: -4.731987476348877
    8. ' =' → logprob: -4.731987476348877
    9. '+' → logprob: -4.856987476348877
    10. '%' → logprob: -5.106987476348877

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09271397441625595
    2. ' input' → logprob: -2.5927140712738037
    3. 'int' → logprob: -4.592713832855225
    4. 'input' → logprob: -5.717713832855225
    5. ' n' → logprob: -8.592714309692383
    6. ' ' → logprob: -9.717714309692383
    7. ' randint' → logprob: -10.967714309692383
    8. 'n' → logprob: -11.717714309692383
    9. ' eval' → logprob: -12.217714309692383
    10. ' i' → logprob: -12.217714309692383

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789412334561348
    2. '(input' → logprob: -2.5789413452148438
    3. '(n' → logprob: -10.703941345214844
    4. '()' → logprob: -11.953941345214844
    5. '(
' → logprob: -12.203941345214844
    6. '('' → logprob: -12.328941345214844
    7. '(user' → logprob: -13.203941345214844
    8. 'input' → logprob: -13.453941345214844
    9. '(range' → logprob: -13.703941345214844
    10. ' (' → logprob: -13.953941345214844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20760981738567352
    2. ')' → logprob: -1.95760977268219
    3. '()' → logprob: -3.3326098918914795
    4. '())' → logprob: -4.7076096534729
    5. '))' → logprob: -7.2076096534729
    6. '(
' → logprob: -8.707610130310059
    7. '('' → logprob: -8.832610130310059
    8. '()))' → logprob: -9.957610130310059
    9. ' )' → logprob: -10.082610130310059
    10. ' ' → logprob: -10.207610130310059

Token 9: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7105682492256165
    2. '   ' → logprob: -1.0855681896209717
    3. ' ' → logprob: -2.7105681896209717
    4. '    ' → logprob: -3.4605681896209717
    5. 'if' (adapté à ' if') → logprob: -3.4605681896209717
    6. ')' → logprob: -4.460568428039551
    7. '  ' → logprob: -4.835568428039551
    8. ':' → logprob: -5.835568428039551
    9. '\n' → logprob: -6.210568428039551
    10. ' )' → logprob: -6.335568428039551

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020662404596805573
    2. ' ' → logprob: -4.020662307739258
    3. ' not' → logprob: -6.520662307739258
    4. 'n' → logprob: -6.895662307739258
    5. ' ' → logprob: -11.270662307739258
    6. 'not' → logprob: -12.145662307739258
    7. '  ' → logprob: -12.395662307739258
    8. '	n' → logprob: -14.770662307739258
    9. '(n' → logprob: -15.145662307739258
    10. '<|end|>' → logprob: -15.395662307739258

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6851745247840881
    2. ' >' → logprob: -1.0601744651794434
    3. ' <=' → logprob: -2.5601744651794434
    4. ' <' → logprob: -3.5601744651794434
    5. ' ' → logprob: -4.310174465179443
    6. '==' → logprob: -4.310174465179443
    7. '>' → logprob: -4.435174465179443
    8. ' >=' → logprob: -6.435174465179443
    9. '  ' → logprob: -7.560174465179443
    10. ')' → logprob: -7.560174465179443

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.126935675740242
    2. '0' → logprob: -2.1269357204437256
    3. ' ' → logprob: -13.001935958862305
    4. '1' → logprob: -13.626935958862305
    5. ' -' → logprob: -14.314435958862305
    6. '100' → logprob: -15.126935958862305
    7. '10' → logprob: -15.126935958862305
    8. '  ' → logprob: -15.189435958862305
    9. ')' → logprob: -15.501935958862305
    10. '=' → logprob: -15.626935958862305

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022028323728591204
    2. ' ' → logprob: -6.127202987670898
    3. '-' → logprob: -11.252202987670898
    4. '1' → logprob: -13.502202987670898
    5. ' -' → logprob: -13.627202987670898
    6. '42' → logprob: -14.252202987670898
    7. '   ' → logprob: -14.377202987670898
    8. '  ' → logprob: -15.502202987670898
    9. '```' → logprob: -15.877202987670898
    10. '    ' → logprob: -16.0022029876709

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.755678961984813e-05
    2. ':
' → logprob: -9.875077247619629
    3. ' :' → logprob: -11.625077247619629
    4. '   ' → logprob: -12.125077247619629
    5. ':return' → logprob: -12.500077247619629
    6. '       ' → logprob: -13.000077247619629
    7. ':\' → logprob: -13.125077247619629
    8. '):' → logprob: -13.375077247619629
    9. '    ' → logprob: -14.375077247619629
    10. ':**' → logprob: -15.250077247619629

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006626377580687404
    2. ' break' → logprob: -8.125662803649902
    3. '   ' → logprob: -8.750662803649902
    4. '\n' → logprob: -9.500662803649902
    5. ':' → logprob: -10.250662803649902
    6. '    ' → logprob: -10.875662803649902
    7. '\' → logprob: -11.125662803649902
    8. '	break' → logprob: -11.125662803649902
    9. '      ' → logprob: -11.750662803649902
    10. '        ' → logprob: -12.125662803649902

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014878070913255215
    2. '       ' → logprob: -4.514878273010254
    3. 'break' (adapté à ' break') → logprob: -5.889878273010254
    4. '   ' → logprob: -7.264878273010254
    5. '\n' → logprob: -8.889878273010254
    6. '	break' → logprob: -9.014878273010254
    7. '    ' → logprob: -10.764878273010254
    8. '```' → logprob: -10.764878273010254
    9. '_break' → logprob: -11.514878273010254
    10. ' ' → logprob: -11.514878273010254

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4790402054786682
    2. '\n' → logprob: -1.6040401458740234
    3. ':' → logprob: -2.2290401458740234
    4. '    
' → logprob: -4.229040145874023
    5. '\' → logprob: -4.479040145874023
    6. '<|end|>' → logprob: -4.604040145874023
    7. '#' → logprob: -5.229040145874023
    8. ' ' → logprob: -5.479040145874023
    9. '\r' → logprob: -5.479040145874023
    10. ' 
' → logprob: -5.479040145874023

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3102973699569702
    2. '<|end|>' → logprob: -2.5602974891662598
    3. '\n' → logprob: -2.6852974891662598
    4. '    
' → logprob: -2.9352974891662598
    5. '
' → logprob: -3.6852974891662598
    6. '```' → logprob: -4.18529748916626
    7. '#' → logprob: -5.18529748916626
    8. '\' → logprob: -5.56029748916626
    9. ':' → logprob: -5.68529748916626
    10. '  
' → logprob: -5.81029748916626

Token 20: ' best' (ID: 1636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3405855596065521
    2. ' ' → logprob: -2.590585470199585
    3. '<|end|>' → logprob: -2.590585470199585
    4. '\n' → logprob: -3.590585470199585
    5. ')' → logprob: -3.840585470199585
    6. 'n' → logprob: -4.215585708618164
    7. '    ' → logprob: -4.340585708618164
    8. '\' → logprob: -4.590585708618164
    9. 'print' → logprob: -4.715585708618164
    10. ':' → logprob: -5.090585708618164

Token 21: '_p' (ID: 1359)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008461985853500664
    2. '_score' → logprob: -7.8758463859558105
    3. ' _' → logprob: -9.000845909118652
    4. ' ' → logprob: -9.750845909118652
    5. '_space' → logprob: -10.250845909118652
    6. '_s' → logprob: -10.375845909118652
    7. '_sum' → logprob: -10.375845909118652
    8. '_count' → logprob: -10.500845909118652
    9. '_answer' → logprob: -11.000845909118652
    10. ')' → logprob: -11.125845909118652

Token 22: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13356263935565948
    2. 'er' → logprob: -2.5085625648498535
    3. '_r' → logprob: -3.8835625648498535
    4. '_' → logprob: -5.8835625648498535
    5. ' =' → logprob: -6.1335625648498535
    6. '=' → logprob: -6.1335625648498535
    7. 'ro' → logprob: -6.2585625648498535
    8. 'rice' → logprob: -6.3835625648498535
    9. 'os' → logprob: -6.7585625648498535
    10. 'e' → logprob: -6.7585625648498535

Token 23: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.05427104979753494
    2. ' ' → logprob: -3.9292709827423096
    3. 'None' → logprob: -4.054271221160889
    4. ' float' → logprob: -4.804271221160889
    5. ' -' → logprob: -5.929271221160889
    6. '0' → logprob: -6.554271221160889
    7. ' []' → logprob: -6.679271221160889
    8. '-' → logprob: -7.429271221160889
    9. 'float' → logprob: -7.804271221160889
    10. ' n' → logprob: -8.05427074432373

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0415775291621685
    2. '<|end|>' → logprob: -3.9165775775909424
    3. ' ' → logprob: -5.041577339172363
    4. '    ' → logprob: -5.291577339172363
    5. '    
' → logprob: -5.791577339172363
    6. '  ' → logprob: -6.666577339172363
    7. ')' → logprob: -6.791577339172363
    8. '<|end|>' → logprob: -7.541577339172363
    9. '\' → logprob: -7.666577339172363
    10. '       ' → logprob: -7.916577339172363

Token 26: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.5270100235939026
    2. ' best' → logprob: -1.9020099639892578
    3. 'for' → logprob: -2.527009963989258
    4. 'max' → logprob: -3.027009963989258
    5. ' for' → logprob: -3.152009963989258
    6. 'b' → logprob: -3.777009963989258
    7. '   ' → logprob: -3.777009963989258
    8. ' max' → logprob: -4.027009963989258
    9. 'p' → logprob: -5.152009963989258
    10. ' ' → logprob: -5.277009963989258

Token 27: '_diff' (ID: 41047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07738059014081955
    2. '_p' → logprob: -2.827380657196045
    3. '_sum' → logprob: -5.202380657196045
    4. '_s' → logprob: -5.702380657196045
    5. '_score' → logprob: -6.577380657196045
    6. '_count' → logprob: -6.952380657196045
    7. '_n' → logprob: -7.577380657196045
    8. ' _' → logprob: -7.827380657196045
    9. '_value' → logprob: -7.827380657196045
    10. '_diff' → logprob: -7.952380657196045

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016397029161453247
    2. '=' → logprob: -4.141396999359131
    3. '_' → logprob: -8.391397476196289
    4. ' ' → logprob: -9.016397476196289
    5. ',' → logprob: -12.266397476196289
    6. ')' → logprob: -12.266397476196289
    7. ' _' → logprob: -13.391397476196289
    8. ' ' → logprob: -13.891397476196289
    9. ' ,' → logprob: -14.516397476196289
    10. '  ' → logprob: -15.016397476196289

Token 29: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.5173785090446472
    2. ' ' → logprob: -1.517378568649292
    3. 'float' → logprob: -2.517378568649292
    4. '100' → logprob: -2.892378568649292
    5. '10' → logprob: -3.392378568649292
    6. ' None' → logprob: -4.642378330230713
    7. '1' → logprob: -6.017378330230713
    8. '999' → logprob: -6.142378330230713
    9. 'None' → logprob: -7.892378330230713
    10. ' int' → logprob: -9.767378807067871

Token 30: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002694416616577655
    2. 'inf' → logprob: -9.500269889831543
    3. ''' → logprob: -9.625269889831543
    4. '(' → logprob: -9.875269889831543
    5. '('+' → logprob: -10.375269889831543
    6. ''s' → logprob: -10.750269889831543
    7. ''in' → logprob: -11.375269889831543
    8. '("' → logprob: -13.000269889831543
    9. '_inf' → logprob: -13.500269889831543
    10. '('-' → logprob: -14.000269889831543

Token 31: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0010572222527116537
    2. ''' → logprob: -7.376057147979736
    3. ''in' → logprob: -8.001057624816895
    4. ''s' → logprob: -10.251057624816895
    5. 'in' → logprob: -11.001057624816895
    6. 'info' → logprob: -11.501057624816895
    7. ''i' → logprob: -11.876057624816895
    8. '-inf' → logprob: -11.876057624816895
    9. ''r' → logprob: -12.751057624816895
    10. ''e' → logprob: -12.876057624816895

Token 32: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.64970643306151e-05
    2. ' )' → logprob: -9.875086784362793
    3. '   ' → logprob: -11.000086784362793
    4. '')' → logprob: -11.375086784362793
    5. ')
' → logprob: -12.125086784362793
    6. '```' → logprob: -15.250086784362793
    7. '`)' → logprob: -15.625086784362793
    8. '))' → logprob: -15.625086784362793
    9. '")' → logprob: -16.250085830688477
    10. ' ' → logprob: -16.250085830688477

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008537746965885162
    2. '    
' → logprob: -5.258537769317627
    3. '<|end|>' → logprob: -7.008537769317627
    4. ' ' → logprob: -7.258537769317627
    5. '    ' → logprob: -7.758537769317627
    6. ' 
' → logprob: -8.508537292480469
    7. '  ' → logprob: -8.508537292480469
    8. ')' → logprob: -8.758537292480469
    9. '\n' → logprob: -8.883537292480469
    10. '
' → logprob: -8.883537292480469

Token 34: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8148133754730225
    2. '   ' → logprob: -1.0648133754730225
    3. ' for' → logprob: -1.9398133754730225
    4. ' ' → logprob: -3.3148133754730225
    5. ' 
' → logprob: -4.314813613891602
    6. 'n' → logprob: -5.439813613891602
    7. '    
' → logprob: -5.439813613891602
    8. '\n' → logprob: -5.689813613891602
    9. '<|end|>' → logprob: -6.939813613891602
    10. '    ' → logprob: -7.064813613891602

Token 35: ' _' (ID: 1175)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.305159330368042
    2. ' i' → logprob: -1.430159330368042
    3. 'p' → logprob: -4.555159568786621
    4. 'i' → logprob: -5.805159568786621
    5. ' d' → logprob: -6.055159568786621
    6. ' x' → logprob: -6.180159568786621
    7. ' ' → logprob: -6.430159568786621
    8. ' k' → logprob: -6.930159568786621
    9. ' a' → logprob: -7.180159568786621
    10. ' _' → logprob: -8.305159568786621

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004203763324767351
    2. 'in' → logprob: -5.504203796386719
    3. ' ' → logprob: -9.629203796386719
    4. 'n' → logprob: -10.504203796386719
    5. 'range' → logprob: -12.254203796386719
    6. ' i' → logprob: -12.504203796386719
    7. ',' → logprob: -12.754203796386719
    8. '	in' → logprob: -13.004203796386719
    9. 's' → logprob: -13.129203796386719
    10. 'space' → logprob: -13.254203796386719

Token 37: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014409303665161
    2. ' range' → logprob: -1.7014409303665161
    3. '	range' → logprob: -11.326440811157227
    4. '[' → logprob: -12.451440811157227
    5. '(range' → logprob: -12.451440811157227
    6. 'rang' → logprob: -13.826440811157227
    7. ' ' → logprob: -13.951440811157227
    8. 'n' → logprob: -14.201440811157227
    9. ' xrange' → logprob: -14.201440811157227
    10. '_range' → logprob: -14.451440811157227

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5174395442008972
    2. '(' → logprob: -1.392439603805542
    3. ' (' → logprob: -1.892439603805542
    4. ' n' → logprob: -5.392439365386963
    5. 'n' → logprob: -9.142439842224121
    6. ' ' → logprob: -10.517439842224121
    7. '(int' → logprob: -10.517439842224121
    8. '(s' → logprob: -10.767439842224121
    9. '<|end|>' → logprob: -11.142439842224121
    10. '(range' → logprob: -12.017439842224121

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004193913657218218
    2. ')' → logprob: -5.8791937828063965
    3. ' ):' → logprob: -7.3791937828063965
    4. '+' → logprob: -7.7541937828063965
    5. '):
' → logprob: -9.004194259643555
    6. ':' → logprob: -9.504194259643555
    7. '   ' → logprob: -9.629194259643555
    8. ',' → logprob: -10.879194259643555
    9. '*' → logprob: -10.879194259643555
    10. ' )' → logprob: -12.004194259643555

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16289816796779633
    2. ' ' → logprob: -2.787898063659668
    3. '    ' → logprob: -3.287898063659668
    4. '<|end|>' → logprob: -3.662898063659668
    5. '   ' → logprob: -3.912898063659668
    6. 'n' → logprob: -6.537898063659668
    7. ' 
' → logprob: -6.912898063659668
    8. '        ' → logprob: -7.537898063659668
    9. ')' → logprob: -8.162898063659668
    10. '<|end|>' → logprob: -8.412898063659668

Token 41: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.70159113407135
    2. '<|end|>' → logprob: -2.2015910148620605
    3. ' p' → logprob: -2.3265910148620605
    4. ' ' → logprob: -2.5765910148620605
    5. ' line' → logprob: -2.5765910148620605
    6. 'n' → logprob: -2.8265910148620605
    7. 'p' (adapté à ' p') → logprob: -2.9515910148620605
    8. ' s' → logprob: -2.9515910148620605
    9. ' 
' → logprob: -3.3265910148620605
    10. ' price' → logprob: -3.4515910148620605

Token 42: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5622560977935791
    2. ',' → logprob: -1.187256097793579
    3. ' ' → logprob: -3.187256097793579
    4. ' ,' → logprob: -3.687256097793579
    5. 'r' → logprob: -4.062255859375
    6. '=' → logprob: -4.062255859375
    7. 'rice' → logprob: -4.187255859375
    8. ',r' → logprob: -6.437255859375
    9. 'iece' → logprob: -6.687255859375
    10. '   ' → logprob: -7.312255859375

Token 43: ' h' (ID: 312)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5346155166625977
    2. 's' → logprob: -2.1596155166625977
    3. ' d' → logprob: -2.2846155166625977
    4. 'q' → logprob: -2.5346155166625977
    5. ' s' → logprob: -2.6596155166625977
    6. 'c' → logprob: -3.1596155166625977
    7. 'w' → logprob: -3.2846155166625977
    8. 'v' → logprob: -3.4096155166625977
    9. 't' → logprob: -3.5346155166625977
    10. 'r' → logprob: -3.6596155166625977

Token 44: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08296690136194229
    2. '=' → logprob: -2.5829668045043945
    3. ',' → logprob: -5.5829668045043945
    4. ')' → logprob: -8.957966804504395
    5. ' ' → logprob: -9.457966804504395
    6. 'p' → logprob: -10.082966804504395
    7. '   ' → logprob: -11.707966804504395
    8. ' ,' → logprob: -12.082966804504395
    9. '    ' → logprob: -12.082966804504395
    10. '  ' → logprob: -12.082966804504395

Token 45: ' w' (ID: 286)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8009705543518066
    2. 'd' → logprob: -1.9259705543518066
    3. 'w' → logprob: -2.1759705543518066
    4. 'a' → logprob: -2.6759705543518066
    5. 'c' → logprob: -2.6759705543518066
    6. 'm' → logprob: -2.8009705543518066
    7. 'r' → logprob: -2.9259705543518066
    8. 'f' → logprob: -3.4259705543518066
    9. ' s' → logprob: -3.6759705543518066
    10. 't' → logprob: -3.6759705543518066

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2812913656234741
    2. '=' → logprob: -1.4062913656234741
    3. ',' → logprob: -9.031291007995605
    4. ' ' → logprob: -12.031291007995605
    5. ')' → logprob: -12.281291007995605
    6. '    ' → logprob: -12.781291007995605
    7. '   ' → logprob: -12.781291007995605
    8. '=input' → logprob: -12.781291007995605
    9. ' ,' → logprob: -14.656291007995605
    10. '  ' → logprob: -14.781291007995605

Token 47: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.013378212228417397
    2. ' input' → logprob: -4.888378143310547
    3. 'map' → logprob: -5.263378143310547
    4. '   ' → logprob: -8.888378143310547
    5. ' list' → logprob: -9.013378143310547
    6. ' [' → logprob: -9.013378143310547
    7. 'input' → logprob: -9.013378143310547
    8. ' ' → logprob: -10.388378143310547
    9. '[' → logprob: -11.013378143310547
    10. '    ' → logprob: -11.888378143310547

Token 48: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03894401341676712
    2. '(' → logprob: -3.6639440059661865
    3. '(input' → logprob: -5.038944244384766
    4. '(lambda' → logprob: -5.663944244384766
    5. '(str' → logprob: -6.038944244384766
    6. '<|end|>' → logprob: -9.038944244384766
    7. 'int' → logprob: -10.288944244384766
    8. '(eval' → logprob: -10.663944244384766
    9. '<int' → logprob: -11.288944244384766
    10. '(float' → logprob: -11.538944244384766

Token 49: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15944862365722656
    2. ',input' → logprob: -2.0344486236572266
    3. ',' → logprob: -4.409448623657227
    4. 'input' → logprob: -5.909448623657227
    5. '(' → logprob: -6.909448623657227
    6. ')' → logprob: -7.409448623657227
    7. ' input' → logprob: -9.659448623657227
    8. '=input' → logprob: -10.909448623657227
    9. '(),' → logprob: -11.284448623657227
    10. '   ' → logprob: -11.409448623657227

Token 50: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519395649433136
    2. ' input' → logprob: -1.5019395351409912
    3. ')' → logprob: -11.87693977355957
    4. '=input' → logprob: -13.75193977355957
    5. '	input' → logprob: -14.25193977355957
    6. ',input' → logprob: -14.62693977355957
    7. '(input' → logprob: -14.75193977355957
    8. ' ' → logprob: -15.37693977355957
    9. '   ' → logprob: -15.75193977355957
    10. '[input' → logprob: -15.75193977355957

Token 51: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.061054359131958e-06
    2. '()' → logprob: -11.750007629394531
    3. ' ().' → logprob: -16.62500762939453
    4. '()
' → logprob: -17.50000762939453
    5. ')' → logprob: -18.37500762939453
    6. '(' → logprob: -19.12500762939453
    7. '())' → logprob: -19.50000762939453
    8. '.split' → logprob: -20.62500762939453
    9. '()

' → logprob: -20.87500762939453
    10. '   ' → logprob: -21.00000762939453

Token 52: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.057743949990254e-05
    2. 'strip' → logprob: -11.125020980834961
    3. 'rstrip' → logprob: -12.250020980834961
    4. ' split' → logprob: -14.500020980834961
    5. '(split' → logprob: -14.875020980834961
    6. 'spl' → logprob: -15.875020980834961
    7. 'sp' → logprob: -18.87502098083496
    8. ')' → logprob: -19.37502098083496
    9. 's' → logprob: -19.50002098083496
    10. 'plit' → logprob: -20.00002098083496

Token 53: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.052973512560129166
    2. ')' → logprob: -3.052973508834839
    3. '()' → logprob: -5.552973747253418
    4. '))' → logprob: -8.427973747253418
    5. '()))' → logprob: -8.427973747253418
    6. '())
' → logprob: -10.052973747253418
    7. '(' → logprob: -12.177973747253418
    8. '')' → logprob: -12.802973747253418
    9. '('' → logprob: -12.927973747253418
    10. '(),' → logprob: -13.427973747253418

Token 54: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5483304262161255
    2. ' 
' → logprob: -1.5483304262161255
    3. '   ' → logprob: -1.9233304262161255
    4. ' ' → logprob: -2.048330307006836
    5. '<|end|>' → logprob: -2.048330307006836
    6. '    
' → logprob: -2.923330307006836
    7. '
' → logprob: -3.173330307006836
    8. '  
' → logprob: -4.173330307006836
    9. '       ' → logprob: -4.423330307006836
    10. '   
' → logprob: -4.548330307006836

Token 55: ' bmi' (ID: 186346)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7106868028640747
    2. '   ' → logprob: -1.8356868028640747
    3. '       ' → logprob: -2.085686683654785
    4. 'if' → logprob: -2.960686683654785
    5. ' ' → logprob: -3.335686683654785
    6. ' 
' → logprob: -3.460686683654785
    7. 'diff' → logprob: -3.460686683654785
    8. '    ' → logprob: -4.460686683654785
    9. '```' → logprob: -4.710686683654785
    10. '        
' → logprob: -4.710686683654785

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141558349132538
    2. '=' → logprob: -1.7014155387878418
    3. ' ' → logprob: -14.326416015625
    4. 's' → logprob: -15.451416015625
    5. ' =(' → logprob: -15.576416015625
    6. '=p' → logprob: -15.826416015625
    7. '＝' → logprob: -15.826416015625
    8. ' ' → logprob: -16.076416015625
    9. '=int' → logprob: -16.201416015625
    10. '=float' → logprob: -16.201416015625

Token 57: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6351736783981323
    2. ' w' → logprob: -0.7601736783981323
    3. 'h' → logprob: -6.635173797607422
    4. ' h' → logprob: -7.010173797607422
    5. ' p' → logprob: -8.635173797607422
    6. 'p' → logprob: -9.135173797607422
    7. ' ' → logprob: -10.260173797607422
    8. '   ' → logprob: -11.260173797607422
    9. '(w' → logprob: -12.010173797607422
    10. '100' → logprob: -12.760173797607422

Token 58: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.003184959525242448
    2. ' /' → logprob: -5.878184795379639
    3. '/p' → logprob: -8.503185272216797
    4. '/(' → logprob: -9.003185272216797
    5. '/h' → logprob: -10.003185272216797
    6. '*' → logprob: -13.378185272216797
    7. '/
' → logprob: -13.378185272216797
    8. '   ' → logprob: -13.878185272216797
    9. '/b' → logprob: -14.003185272216797
    10. ' ' → logprob: -14.503185272216797

Token 59: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5783571600914001
    2. '(h' → logprob: -0.8283571600914001
    3. '(' → logprob: -6.203357219696045
    4. ' ((' → logprob: -8.578356742858887
    5. ' (' → logprob: -9.453356742858887
    6. 'h' → logprob: -9.578356742858887
    7. '(p' → logprob: -11.203356742858887
    8. '(w' → logprob: -11.203356742858887
    9. '(((' → logprob: -11.453356742858887
    10. '(s' → logprob: -12.703356742858887

Token 60: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.008693515323102474
    2. '(h' → logprob: -4.758693695068359
    3. '(' → logprob: -10.25869369506836
    4. ' h' → logprob: -10.88369369506836
    5. ' (' → logprob: -11.88369369506836
    6. '	h' → logprob: -12.13369369506836
    7. '1' → logprob: -12.63369369506836
    8. 'p' → logprob: -13.38369369506836
    9. '   ' → logprob: -13.38369369506836
    10. '<h' → logprob: -14.25869369506836

Token 61: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6326401829719543
    2. '/' → logprob: -0.7576401829719543
    3. '   ' → logprob: -10.50763988494873
    4. ')' → logprob: -12.88263988494873
    5. '*' → logprob: -12.88263988494873
    6. ' ' → logprob: -13.13263988494873
    7. ' *' → logprob: -13.25763988494873
    8. '**' → logprob: -14.00763988494873
    9. ' ' → logprob: -14.13263988494873
    10. '    ' → logprob: -14.25763988494873

Token 62: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0010460281046107411
    2. ' ' → logprob: -6.876046180725098
    3. '10' → logprob: -12.251046180725098
    4. '1' → logprob: -12.626046180725098
    5. '   ' → logprob: -13.251046180725098
    6. '

' → logprob: -14.001046180725098
    7. '  ' → logprob: -14.626046180725098
    8. ')' → logprob: -15.001046180725098
    9. '```' → logprob: -15.126046180725098
    10. ' ' → logprob: -15.876046180725098

Token 63: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0001426346570951864
    2. ' ' → logprob: -9.500143051147461
    3. '10' → logprob: -10.375143051147461
    4. '1' → logprob: -10.500143051147461
    5. '   ' → logprob: -12.250143051147461
    6. '  ' → logprob: -13.375143051147461
    7. '

' → logprob: -14.625143051147461
    8. '```' → logprob: -15.250143051147461
    9. '2' → logprob: -15.375143051147461
    10. '3' → logprob: -15.625143051147461

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005294477101415396
    2. ')**' → logprob: -5.255294322967529
    3. ' )' → logprob: -9.755294799804688
    4. '   ' → logprob: -14.005294799804688
    5. '`)' → logprob: -14.880294799804688
    6. ')`' → logprob: -15.130294799804688
    7. ' ' → logprob: -15.880294799804688
    8. '）' → logprob: -16.005294799804688
    9. '.' → logprob: -16.005294799804688
    10. '))' → logprob: -16.130294799804688

Token 65: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02719445712864399
    2. ')**' → logprob: -3.6521944999694824
    3. ' )' → logprob: -7.027194499969482
    4. '**' → logprob: -13.652194023132324
    5. ' **' → logprob: -13.902194023132324
    6. '   ' → logprob: -14.402194023132324
    7. ' **)' → logprob: -14.527194023132324
    8. ' ' → logprob: -14.652194023132324
    9. '）' → logprob: -14.777194023132324
    10. '**)' → logprob: -15.027194023132324

Token 66: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007650403305888176
    2. ' ' → logprob: -4.882650375366211
    3. '   ' → logprob: -11.632650375366211
    4. ')' → logprob: -11.695150375366211
    5. '  ' → logprob: -11.695150375366211
    6. '²' → logprob: -12.632650375366211
    7. '```' → logprob: -13.195150375366211
    8. '22' → logprob: -13.882650375366211
    9. ' ' → logprob: -13.945150375366211
    10. '۲' → logprob: -14.132650375366211

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003623985394369811
    2. ' ' → logprob: -8.000362396240234
    3. '22' → logprob: -11.937862396240234
    4. '²' → logprob: -12.312862396240234
    5. '  ' → logprob: -13.250362396240234
    6. ')' → logprob: -13.312862396240234
    7. '23' → logprob: -13.625362396240234
    8. '   ' → logprob: -14.062862396240234
    9. '21' → logprob: -14.062862396240234
    10. '۲' → logprob: -14.062862396240234

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002944671141449362
    2. ')
' → logprob: -8.25029468536377
    3. ' )' → logprob: -10.37529468536377
    4. ')

' → logprob: -14.37529468536377
    5. '   ' → logprob: -14.75029468536377
    6. ' ' → logprob: -15.50029468536377
    7. ' )
' → logprob: -15.50029468536377
    8. ')
' → logprob: -16.000293731689453
    9. '))' → logprob: -16.250293731689453
    10. ')**' → logprob: -16.875293731689453

Token 69: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.19902384281158447
    2. 'if' → logprob: -2.324023723602295
    3. ' if' → logprob: -2.824023723602295
    4. ' diff' → logprob: -3.949023723602295
    5. 'd' → logprob: -6.824023723602295
    6. '   ' → logprob: -6.949023723602295
    7. '       ' → logprob: -7.074023723602295
    8. '	diff' → logprob: -8.199024200439453
    9. ' ' → logprob: -8.949024200439453
    10. '    ' → logprob: -9.199024200439453

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04302133992314339
    2. '=' → logprob: -3.1680214405059814
    3. ' ' → logprob: -10.793021202087402
    4. ' =
' → logprob: -14.668021202087402
    5. '   ' → logprob: -14.793021202087402
    6. '  ' → logprob: -15.668021202087402
    7. '_' → logprob: -15.918021202087402
    8. '    ' → logprob: -16.16802215576172
    9. '.' → logprob: -16.41802215576172
    10. ',' → logprob: -16.66802215576172

Token 72: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.02056092582643032
    2. 'abs' → logprob: -3.8955609798431396
    3. '    ' → logprob: -12.270561218261719
    4. '   ' → logprob: -12.395561218261719
    5. 'b' → logprob: -12.895561218261719
    6. '       ' → logprob: -13.395561218261719
    7. ' p' → logprob: -13.520561218261719
    8. '(abs' → logprob: -13.770561218261719
    9. '        ' → logprob: -14.270561218261719
    10. ' bmi' → logprob: -14.645561218261719

Token 73: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.23370413482189178
    2. '(p' → logprob: -1.6087040901184082
    3. '(' → logprob: -4.858704090118408
    4. '(best' → logprob: -7.733704090118408
    5. 'b' → logprob: -10.483704566955566
    6. ' (' → logprob: -11.608704566955566
    7. '(bp' → logprob: -12.858704566955566
    8. ' bmi' → logprob: -12.983704566955566
    9. '(s' → logprob: -13.358704566955566
    10. '(i' → logprob: -13.608704566955566

Token 74: 'mi' (ID: 3900)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.587360143661499
    2. 'mi' → logprob: -0.837360143661499
    3. 'est' → logprob: -5.087360382080078
    4. '_m' → logprob: -6.337360382080078
    5. 'st' → logprob: -7.212360382080078
    6. '_' → logprob: -8.337360382080078
    7. 'MI' → logprob: -8.524860382080078
    8. '       ' → logprob: -8.837360382080078
    9. 'p' → logprob: -9.024860382080078
    10. '```' → logprob: -9.024860382080078

Token 75: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07933685928583145
    2. '-' → logprob: -2.5793368816375732
    3. ' ' → logprob: -7.954336643218994
    4. ')' → logprob: -10.454337120056152
    5. '   ' → logprob: -10.454337120056152
    6. '  ' → logprob: -11.454337120056152
    7. '<|end|>' → logprob: -12.454337120056152
    8. '0' → logprob: -12.704337120056152
    9. '1' → logprob: -12.766837120056152
    10. '    ' → logprob: -12.954337120056152

Token 76: ' ' (ID: 220)
  Prédit: '22'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.07978768646717072
    2. '21' → logprob: -3.7047877311706543
    3. ' ' → logprob: -3.8297877311706543
    4. '23' → logprob: -3.9547877311706543
    5. '20' → logprob: -5.329787731170654
    6. '25' → logprob: -5.454787731170654
    7. '2' → logprob: -7.204787731170654
    8. ' p' → logprob: -7.454787731170654
    9. '24' → logprob: -8.329787254333496
    10. 'p' → logprob: -8.454787254333496

Token 77: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.07277598232030869
    2. '21' → logprob: -3.3227760791778564
    3. '23' → logprob: -4.322775840759277
    4. ' ' → logprob: -4.822775840759277
    5. '20' → logprob: -4.947775840759277
    6. '25' → logprob: -6.072775840759277
    7. '2' → logprob: -6.322775840759277
    8. 'p' → logprob: -7.322775840759277
    9. '24' → logprob: -8.197775840759277
    10. '   ' → logprob: -8.697775840759277

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017868020804598927
    2. ')
' → logprob: -6.501786708831787
    3. '.' → logprob: -8.376787185668945
    4. ' )' → logprob: -10.626787185668945
    5. ')

' → logprob: -11.626787185668945
    6. '9' → logprob: -12.501787185668945
    7. ' ' → logprob: -12.876787185668945
    8. '0' → logprob: -13.251787185668945
    9. '.)' → logprob: -13.251787185668945
    10. '')' → logprob: -13.376787185668945

Token 79: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3597211539745331
    2. '       ' → logprob: -1.8597211837768555
    3. '   ' → logprob: -2.6097211837768555
    4. '<|end|>' → logprob: -3.3597211837768555
    5. '  
' → logprob: -4.6097211837768555
    6. ' 
' → logprob: -4.7347211837768555
    7. '\n' → logprob: -4.9847211837768555
    8. '    
' → logprob: -5.8597211837768555
    9. '        
' → logprob: -5.8597211837768555
    10. ' ' → logprob: -6.4847211837768555

Token 80: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15814173221588135
    2. '
' → logprob: -2.533141613006592
    3. '   ' → logprob: -4.033141613006592
    4. 'if' (adapté à ' if') → logprob: -4.283141613006592
    5. ' ' → logprob: -4.533141613006592
    6. '        
' → logprob: -4.908141613006592
    7. ' 
' → logprob: -5.408141613006592
    8. ' if' → logprob: -5.533141613006592
    9. '<|end|>' → logprob: -6.283141613006592
    10. '  
' → logprob: -6.783141613006592

Token 81: ' diff' (ID: 8868)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.035072240978479385
    2. ' diff' → logprob: -3.4100723266601562
    3. 'best' → logprob: -6.660072326660156
    4. 'diff' → logprob: -9.535072326660156
    5. ' ' → logprob: -10.410072326660156
    6. ' (' → logprob: -11.410072326660156
    7. '(best' → logprob: -11.785072326660156
    8. '	best' → logprob: -11.785072326660156
    9. ' ' → logprob: -12.160072326660156
    10. ' dif' → logprob: -12.910072326660156

Token 82: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.003811353351920843
    2. '<' → logprob: -5.628811359405518
    3. ' ' → logprob: -8.50381088256836
    4. '  ' → logprob: -13.37881088256836
    5. ' <=' → logprob: -13.50381088256836
    6. '<|end|>' → logprob: -13.75381088256836
    7. '   ' → logprob: -14.50381088256836
    8. 'a' → logprob: -14.87881088256836
    9. '0' → logprob: -14.87881088256836
    10. ' ' → logprob: -15.06631088256836

Token 83: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.06198359653353691
    2. 'best' → logprob: -2.811983585357666
    3. '	best' → logprob: -11.436984062194824
    4. ' ' → logprob: -12.686984062194824
    5. '_best' → logprob: -13.811984062194824
    6. '(best' → logprob: -14.186984062194824
    7. '.best' → logprob: -15.436984062194824
    8. ' ' → logprob: -17.061983108520508
    9. '_' → logprob: -17.186983108520508
    10. '   ' → logprob: -17.311983108520508

Token 84: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -3.762356209335849e-05
    2. '_d' → logprob: -10.87503719329834
    3. 'diff' → logprob: -11.87503719329834
    4. ' _' → logprob: -12.25003719329834
    5. '_' → logprob: -12.50003719329834
    6. '_di' → logprob: -14.12503719329834
    7. '__' → logprob: -14.87503719329834
    8. ' diff' → logprob: -15.00003719329834
    9. ''_' → logprob: -15.00003719329834
    10. ' ' → logprob: -15.25003719329834

Token 85: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03825388848781586
    2. ':
' → logprob: -3.2882537841796875
    3. '       ' → logprob: -8.913253784179688
    4. '):' → logprob: -10.913253784179688
    5. ' or' → logprob: -10.913253784179688
    6. '):
' → logprob: -11.163253784179688
    7. ' and' → logprob: -11.913253784179688
    8. ':
' → logprob: -12.288253784179688
    9. '   ' → logprob: -12.413253784179688
    10. '<|end|>' → logprob: -12.788253784179688

Token 86: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4108625054359436
    2. ' best' → logprob: -1.6608624458312988
    3. '(best' → logprob: -2.160862445831299
    4. 'best' → logprob: -4.035862445831299
    5. '(' → logprob: -4.410862445831299
    6. '(p' → logprob: -6.910862445831299
    7. '(b' → logprob: -8.285862922668457
    8. ' (
' → logprob: -8.660862922668457
    9. '   ' → logprob: -9.410862922668457
    10. '(
' → logprob: -9.535862922668457

Token 87: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.22610527276992798
    2. ' diff' → logprob: -1.6011052131652832
    3. '(diff' → logprob: -8.851105690002441
    4. '	diff' → logprob: -8.976105690002441
    5. 'abs' → logprob: -9.351105690002441
    6. 'best' → logprob: -9.601105690002441
    7. ' abs' → logprob: -9.726105690002441
    8. '   ' → logprob: -10.226105690002441
    9. 'd' → logprob: -10.351105690002441
    10. ' ' → logprob: -10.351105690002441

Token 88: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10332538932561874
    2. '==' → logprob: -2.353325366973877
    3. ' and' → logprob: -6.103325366973877
    4. 'and' → logprob: -7.728325366973877
    5. '=' → logprob: -8.103325843811035
    6. ' ' → logprob: -9.978325843811035
    7. ' <=' → logprob: -10.603325843811035
    8. '<|end|>' → logprob: -10.978325843811035
    9. ' is' → logprob: -11.353325843811035
    10. ' =' → logprob: -11.478325843811035

Token 89: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.3485381603240967
    2. 'best' → logprob: -1.2235381603240967
    3. '	best' → logprob: -9.848538398742676
    4. ' ' → logprob: -10.473538398742676
    5. '0' → logprob: -12.348538398742676
    6. '(best' → logprob: -12.723538398742676
    7. 'Best' → logprob: -12.973538398742676
    8. '_best' → logprob: -14.348538398742676
    9. '   ' → logprob: -14.598538398742676
    10. '  ' → logprob: -14.723538398742676

Token 90: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.0001398929744027555
    2. 'diff' → logprob: -9.125140190124512
    3. '_p' → logprob: -11.375140190124512
    4. '_' → logprob: -11.500140190124512
    5. '_d' → logprob: -12.250140190124512
    6. '	diff' → logprob: -13.625140190124512
    7. ' diff' → logprob: -14.000140190124512
    8. 'Diff' → logprob: -14.375140190124512
    9. '_DIFF' → logprob: -14.375140190124512
    10. ' _' → logprob: -14.875140190124512

Token 91: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04302225261926651
    2. 'and' → logprob: -3.1680221557617188
    3. '    ' → logprob: -11.293022155761719
    4. '   ' → logprob: -12.293022155761719
    5. ' ' → logprob: -12.543022155761719
    6. '	and' → logprob: -14.043022155761719
    7. '<|end|>' → logprob: -14.918022155761719
    8. '        ' → logprob: -15.168022155761719
    9. ' an' → logprob: -15.418022155761719
    10. '       ' → logprob: -15.418022155761719

Token 92: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5761687159538269
    2. 'p' → logprob: -0.8261687159538269
    3. '(p' → logprob: -9.45116901397705
    4. ' (' → logprob: -9.57616901397705
    5. ' ' → logprob: -10.32616901397705
    6. '(' → logprob: -11.07616901397705
    7. '   ' → logprob: -11.32616901397705
    8. '  ' → logprob: -12.51366901397705
    9. ')' → logprob: -13.13866901397705
    10. ',' → logprob: -13.38866901397705

Token 93: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11495189368724823
    2. '<' → logprob: -2.3649518489837646
    3. ' >' → logprob: -4.364952087402344
    4. '>' → logprob: -6.864952087402344
    5. ' ' → logprob: -7.364952087402344
    6. '<p' → logprob: -8.739952087402344
    7. '<|end|>' → logprob: -10.364952087402344
    8. ' p' → logprob: -11.489952087402344
    9. ' and' → logprob: -12.114952087402344
    10. ')' → logprob: -12.114952087402344

Token 94: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.03820936754345894
    2. ' best' → logprob: -3.2882094383239746
    3. 'p' → logprob: -9.038208961486816
    4. ' p' → logprob: -10.788208961486816
    5. '	best' → logprob: -11.163208961486816
    6. '(best' → logprob: -11.913208961486816
    7. ' ' → logprob: -12.663208961486816
    8. 'b' → logprob: -13.538208961486816
    9. '   ' → logprob: -14.788208961486816
    10. '```' → logprob: -14.788208961486816

Token 95: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.0
    3. 'p' → logprob: -18.875
    4. '<|end|>' → logprob: -21.375
    5. ' _' → logprob: -21.625
    6. '_pm' → logprob: -22.375
    7. '‌' → logprob: -22.75
    8. '_ps' → logprob: -23.0
    9. '_pred' → logprob: -23.0
    10. '_px' → logprob: -23.625

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08239895105361938
    2. '):
' → logprob: -2.5823988914489746
    3. ')' → logprob: -5.832398891448975
    4. ' ):' → logprob: -8.457399368286133
    5. ' ):
' → logprob: -9.332399368286133
    6. '   ' → logprob: -9.582399368286133
    7. '       ' → logprob: -9.832399368286133
    8. ' or' → logprob: -10.207399368286133
    9. ':' → logprob: -10.457399368286133
    10. '):
' → logprob: -10.457399368286133

Token 97: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2749330699443817
    2. '           ' → logprob: -1.774933099746704
    3. ' best' → logprob: -3.024933099746704
    4. '(best' → logprob: -4.774932861328125
    5. 'best' → logprob: -5.899932861328125
    6. '
' → logprob: -6.274932861328125
    7. ':' → logprob: -6.524932861328125
    8. '	best' → logprob: -6.774932861328125
    9. '   ' → logprob: -6.899932861328125
    10. ':
' → logprob: -6.899932861328125

Token 98: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.014689781703054905
    2. 'best' (adapté à ' best') → logprob: -4.264689922332764
    3. '           ' → logprob: -7.639689922332764
    4. '       ' → logprob: -11.139689445495605
    5. '	best' → logprob: -11.139689445495605
    6. '               ' → logprob: -12.014689445495605
    7. '   ' → logprob: -12.639689445495605
    8. '(best' → logprob: -13.139689445495605
    9. '_best' → logprob: -13.389689445495605
    10. '            ' → logprob: -14.014689445495605

Token 99: '_diff' (ID: 41047)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00039968726923689246
    2. '_diff' → logprob: -7.875399589538574
    3. '_' → logprob: -10.875399589538574
    4. 'p' → logprob: -16.12540054321289
    5. 'diff' → logprob: -16.25040054321289
    6. '_best' → logprob: -16.62540054321289
    7. '_pos' → logprob: -16.75040054321289
    8. '_d' → logprob: -16.87540054321289
    9. '_pred' → logprob: -17.50040054321289
    10. ' _' → logprob: -17.87540054321289

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004091935232281685
    2. '=' → logprob: -5.504091739654541
    3. ' ' → logprob: -11.7540922164917
    4. ',' → logprob: -12.1290922164917
    5. ' ,' → logprob: -16.629091262817383
    6. ' =)' → logprob: -17.254091262817383
    7. '    ' → logprob: -17.754091262817383
    8. ')' → logprob: -17.754091262817383
    9. '＝' → logprob: -17.754091262817383
    10. ' =
' → logprob: -17.879091262817383

Token 101: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4740796387195587
    2. ' diff' → logprob: -0.9740796089172363
    3. '	diff' → logprob: -12.974080085754395
    4. '(diff' → logprob: -15.599080085754395
    5. 'd' → logprob: -18.349079132080078
    6. '_diff' → logprob: -18.599079132080078
    7. ' dif' → logprob: -18.974079132080078
    8. '.diff' → logprob: -18.974079132080078
    9. ' ' → logprob: -19.599079132080078
    10. '   ' → logprob: -19.599079132080078

Token 102: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003299151314422488
    2. ' 
' → logprob: -6.628299236297607
    3. ' best' → logprob: -7.378299236297607
    4. '
' → logprob: -7.503299236297607
    5. '            
' → logprob: -8.75329875946045
    6. '<|end|>' → logprob: -8.87829875946045
    7. '       ' → logprob: -9.12829875946045
    8. '   ' → logprob: -9.12829875946045
    9. '            ' → logprob: -9.25329875946045
    10. '               ' → logprob: -9.87829875946045

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02099725604057312
    2. ' best' → logprob: -3.8959972858428955
    3. '   ' → logprob: -8.645997047424316
    4. 'best' → logprob: -8.895997047424316
    5. '       ' → logprob: -9.520997047424316
    6. '            ' → logprob: -10.770997047424316
    7. '	best' → logprob: -11.020997047424316
    8. '    ' → logprob: -11.895997047424316
    9. '               ' → logprob: -12.145997047424316
    10. '          ' → logprob: -12.395997047424316

Token 104: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.004078758880496025
    2. ' best' → logprob: -5.5040788650512695
    3. '	best' → logprob: -16.254077911376953
    4. '           ' → logprob: -16.629077911376953
    5. 'p' → logprob: -16.754077911376953
    6. '(best' → logprob: -18.129077911376953
    7. '.best' → logprob: -19.004077911376953
    8. '_best' → logprob: -19.129077911376953
    9. 'Best' → logprob: -19.254077911376953
    10. 'b' → logprob: -19.379077911376953

Token 105: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: 0.0
    2. '_' → logprob: -17.0
    3. '<|end|>' → logprob: -20.875
    4. 'p' → logprob: -21.375
    5. '_token' → logprob: -21.5
    6. ' _' → logprob: -22.0
    7. '_ps' → logprob: -22.625
    8. '```' → logprob: -22.875
    9. '_pred' → logprob: -23.0
    10. '\' → logprob: -23.375

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328341364860535
    2. '=' → logprob: -1.3132834434509277
    3. '=p' → logprob: -10.93828296661377
    4. ' ' → logprob: -13.06328296661377
    5. ' p' → logprob: -13.93828296661377
    6. '<|end|>' → logprob: -14.68828296661377
    7. ',' → logprob: -15.31328296661377
    8. ')' → logprob: -16.313283920288086
    9. 'p' → logprob: -16.313283920288086
    10. '＝' → logprob: -17.063283920288086

Token 107: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007099286303855479
    2. ' p' → logprob: -7.2507100105285645
    3. '	p' → logprob: -20.375709533691406
    4. '<p' → logprob: -20.750709533691406
    5. '_p' → logprob: -21.000709533691406
    6. ' ' → logprob: -21.750709533691406
    7. '   ' → logprob: -21.875709533691406
    8. ' ' → logprob: -22.000709533691406
    9. ''p' → logprob: -22.125709533691406
    10. '*p' → logprob: -22.500709533691406

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5489171743392944
    2. '<|end|>' → logprob: -0.9239171743392944
    3. '\n' → logprob: -3.923917293548584
    4. '   ' → logprob: -5.798917293548584
    5. '<|end|>' → logprob: -7.298917293548584
    6. ' 
' → logprob: -7.923917293548584
    7. ')' → logprob: -8.048916816711426
    8. '    
' → logprob: -8.048916816711426
    9. '  
' → logprob: -8.423916816711426
    10. '```' → logprob: -8.923916816711426

Token 109: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6437482237815857
    2. '   ' → logprob: -1.3937482833862305
    3. ')' → logprob: -1.8937482833862305
    4. '<|end|>' → logprob: -3.2687482833862305
    5. '\n' → logprob: -3.7687482833862305
    6. '
' → logprob: -5.5187482833862305
    7. 'return' → logprob: -5.7687482833862305
    8. 'newline' → logprob: -6.5187482833862305
    9. '    
' → logprob: -7.1437482833862305
    10. ' print' → logprob: -7.1437482833862305

Token 110: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001263567479327321
    2. '   ' → logprob: -7.376263618469238
    3. ' print' → logprob: -7.376263618469238
    4. ')' → logprob: -12.001263618469238
    5. '(print' → logprob: -13.501263618469238
    6. '<|end|>' → logprob: -14.126263618469238
    7. ' ' → logprob: -14.626263618469238
    8. '    
' → logprob: -14.751263618469238
    9. '
' → logprob: -15.126263618469238
    10. '	print' → logprob: -15.376263618469238

Token 111: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.003228933084756136
    2. '(' → logprob: -5.753229141235352
    3. '(f' → logprob: -10.128229141235352
    4. '('' → logprob: -12.503229141235352
    5. '(b' → logprob: -12.628229141235352
    6. 'best' → logprob: -13.628229141235352
    7. '()' → logprob: -14.003229141235352
    8. '("' → logprob: -14.128229141235352
    9. '(p' → logprob: -14.628229141235352
    10. '(max' → logprob: -15.628229141235352

Token 112: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -3.4121114822482923e-06
    2. ')_' → logprob: -13.875003814697266
    3. ' _' → logprob: -14.500003814697266
    4. 'p' → logprob: -14.750003814697266
    5. '_' → logprob: -14.875003814697266
    6. ')' → logprob: -15.375003814697266
    7. '"_' → logprob: -15.625003814697266
    8. ''_' → logprob: -16.125003814697266
    9. '```' → logprob: -16.375003814697266
    10. '_best' → logprob: -16.500003814697266

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -16.375001907348633
    4. '')' → logprob: -16.875001907348633
    5. '))' → logprob: -17.375001907348633
    6. '`)' → logprob: -17.625001907348633
    7. ')`' → logprob: -17.625001907348633
    8. '")' → logprob: -18.250001907348633
    9. '())' → logprob: -19.750001907348633
    10. '）' → logprob: -20.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 62
Tokens correctement prédits (top 10): 99
Précision stricte (1ère position): 51.35%
Précision adaptée (1ère position): 55.86%
Précision (top 10): 89.19%
================================================================================
