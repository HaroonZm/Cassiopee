================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    if line == "0 0":
        break
    h, w = map(int, line.split())
    d_sq = h*h + w*w
    found = False
    for d2 in range(d_sq+1, 150*150*2+1):
        for nh in range(1, 151):
            for nw in range(nh+1, 151):
                if nh*nh + nw*nw == d2:
                    if nh < h or (nh == h and nw <= w):
                        continue
                    print(nh, nw)
                    found = True
                    break
            if found:
                break
        if found:
            break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14202077686786652
    2. ' ' → logprob: -3.0170207023620605
    3. '    ' → logprob: -4.1420207023620605
    4. '\' → logprob: -4.2670207023620605
    5. ' 
' → logprob: -4.5170207023620605
    6. '    
' → logprob: -4.5170207023620605
    7. '\n' → logprob: -5.0170207023620605
    8. '```' → logprob: -5.0170207023620605
    9. ':' → logprob: -5.1420207023620605
    10. '  
' → logprob: -6.5170207023620605

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7620258927345276
    2. ' =' → logprob: -0.8870258927345276
    3. 's' → logprob: -3.012025833129883
    4. '.' → logprob: -3.262025833129883
    5. '[' → logprob: -4.887025833129883
    6. '_' → logprob: -5.137025833129883
    7. '[:]' → logprob: -5.387025833129883
    8. ')' → logprob: -5.512025833129883
    9. '.startswith' → logprob: -5.887025833129883
    10. ''s' → logprob: -6.387025833129883

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.22545354068279266
    2. 'input' → logprob: -1.600453495979309
    3. ' ' → logprob: -10.72545337677002
    4. ' f' → logprob: -12.22545337677002
    5. '=input' → logprob: -12.22545337677002
    6. ' readline' → logprob: -13.22545337677002
    7. ' file' → logprob: -13.47545337677002
    8. 'file' → logprob: -14.10045337677002
    9. '   ' → logprob: -14.22545337677002
    10. ' s' → logprob: -14.47545337677002

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029071082826703787
    2. '('' → logprob: -6.5029072761535645
    3. '()' → logprob: -7.0029072761535645
    4. '("("' → logprob: -8.377906799316406
    5. ''' → logprob: -9.502906799316406
    6. '```' → logprob: -9.627906799316406
    7. ')' → logprob: -10.377906799316406
    8. '(
' → logprob: -10.877906799316406
    9. '("")' → logprob: -11.252906799316406
    10. ''s' → logprob: -11.627906799316406

Token 8: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1267133951187134
    2. '<|end|>' → logprob: -1.1267133951187134
    3. ' ' → logprob: -1.7517133951187134
    4. '   ' → logprob: -2.376713275909424
    5. '    ' → logprob: -4.001713275909424
    6. '.' → logprob: -4.501713275909424
    7. '.strip' → logprob: -4.626713275909424
    8. '<|end|>' → logprob: -4.626713275909424
    9. 'if' → logprob: -5.126713275909424
    10. '\n' → logprob: -5.251713275909424

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07125309854745865
    2. '   ' → logprob: -3.4462530612945557
    3. 'if' (adapté à ' if') → logprob: -4.071253299713135
    4. ' ' → logprob: -4.446253299713135
    5. '    ' → logprob: -5.071253299713135
    6. '```' → logprob: -7.821253299713135
    7. '  ' → logprob: -8.196252822875977
    8. '\n' → logprob: -8.571252822875977
    9. '<|end|>' → logprob: -8.696252822875977
    10. '    
' → logprob: -9.321252822875977

Token 10: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14371758699417114
    2. ' line' → logprob: -2.0187175273895264
    3. ' ' → logprob: -7.5187177658081055
    4. 'not' → logprob: -8.143717765808105
    5. 'line' → logprob: -8.643717765808105
    6. ' lines' → logprob: -11.268717765808105
    7. ' len' → logprob: -11.643717765808105
    8. '  ' → logprob: -13.018717765808105
    9. '(line' → logprob: -13.268717765808105
    10. '[line' → logprob: -13.643717765808105

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15226173400878906
    2. '.' → logprob: -2.652261734008789
    3. '.startswith' → logprob: -3.527261734008789
    4. ' ' → logprob: -4.152261734008789
    5. '==' → logprob: -4.402261734008789
    6. '.strip' → logprob: -5.277261734008789
    7. '<|end|>' → logprob: -6.027261734008789
    8. ' .' → logprob: -6.277261734008789
    9. ' !=' → logprob: -7.027261734008789
    10. '<|end|>' → logprob: -7.152261734008789

Token 12: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.383322149515152
    2. ''' → logprob: -1.8833221197128296
    3. '""' → logprob: -2.133322238922119
    4. '''' → logprob: -3.258322238922119
    5. ' ""' → logprob: -5.758322238922119
    6. ' "' → logprob: -5.883322238922119
    7. ' ''' → logprob: -6.508322238922119
    8. ' '' → logprob: -6.758322238922119
    9. '"":' → logprob: -8.008321762084961
    10. ' ' → logprob: -8.383321762084961

Token 13: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5463233590126038
    2. '"' → logprob: -1.546323299407959
    3. 'exit' → logprob: -2.171323299407959
    4. 'quit' → logprob: -2.421323299407959
    5. 'break' → logprob: -6.421323299407959
    6. 'stop' → logprob: -6.421323299407959
    7. 'end' → logprob: -7.921323299407959
    8. '"":' → logprob: -8.421323776245117
    9. ' quit' → logprob: -8.671323776245117
    10. '"):' → logprob: -8.796323776245117

Token 14: ' ' (ID: 220)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.12846212089061737
    2. '"' → logprob: -2.128462076187134
    3. '"):' → logprob: -7.253462314605713
    4. '":
' → logprob: -7.753462314605713
    5. '\n' → logprob: -8.628461837768555
    6. '":
' → logprob: -9.753461837768555
    7. '0' → logprob: -9.878461837768555
    8. '")' → logprob: -10.503461837768555
    9. ':' → logprob: -11.003461837768555
    10. ' "' → logprob: -11.628461837768555

Token 15: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.13358809053897858
    2. '"' → logprob: -2.8835880756378174
    3. '0' → logprob: -3.3835880756378174
    4. ' ' → logprob: -3.6335880756378174
    5. ' "' → logprob: -5.7585883140563965
    6. ' ":' → logprob: -5.7585883140563965
    7. '":
' → logprob: -6.6335883140563965
    8. '":
' → logprob: -7.7585883140563965
    9. '\n' → logprob: -8.383587837219238
    10. '"):' → logprob: -8.758587837219238

Token 16: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.008626160211861134
    2. '"' → logprob: -5.0086259841918945
    3. '\n' → logprob: -7.0086259841918945
    4. ':' → logprob: -7.2586259841918945
    5. '":
' → logprob: -8.758625984191895
    6. '"):' → logprob: -10.008625984191895
    7. '":
' → logprob: -10.883625984191895
    8. ' ":' → logprob: -11.258625984191895
    9. '```' → logprob: -11.383625984191895
    10. ' "' → logprob: -11.508625984191895

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049692741595208645
    2. ':' → logprob: -6.379969120025635
    3. ' break' → logprob: -6.379969120025635
    4. '\n' → logprob: -7.504969120025635
    5. '   ' → logprob: -7.754969120025635
    6. '
' → logprob: -9.379969596862793
    7. '     ' → logprob: -9.629969596862793
    8. '        
' → logprob: -9.754969596862793
    9. ':
' → logprob: -9.754969596862793
    10. '    ' → logprob: -9.879969596862793

Token 18: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5789609551429749
    2. ' break' → logprob: -0.8289609551429749
    3. 'break' (adapté à ' break') → logprob: -6.07896089553833
    4. '   ' → logprob: -7.57896089553833
    5. '	break' → logprob: -8.703961372375488
    6. '\n' → logprob: -10.953961372375488
    7. '           ' → logprob: -11.703961372375488
    8. '_break' → logprob: -12.453961372375488
    9. '```' → logprob: -12.578961372375488
    10. '    ' → logprob: -12.578961372375488

Token 19: '
' (ID: 198)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.0450087785720825
    2. '   ' → logprob: -1.1700087785720825
    3. '
' → logprob: -1.4200087785720825
    4. '\n' → logprob: -2.670008659362793
    5. '  
' → logprob: -4.045008659362793
    6. '   
' → logprob: -5.920008659362793
    7. ' 
' → logprob: -6.295008659362793
    8. '<|end|>' → logprob: -6.545008659362793
    9. '\' → logprob: -7.420008659362793
    10. '        
' → logprob: -7.795008659362793

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06802447140216827
    2. '    
' → logprob: -3.0680243968963623
    3. '\n' → logprob: -5.068024635314941
    4. '
' → logprob: -5.193024635314941
    5. '  
' → logprob: -5.818024635314941
    6. '   
' → logprob: -6.568024635314941
    7. '<|end|>' → logprob: -7.443024635314941
    8. '  ' → logprob: -7.568024635314941
    9. ' ' → logprob: -7.818024635314941
    10. 'n' → logprob: -8.068024635314941

Token 21: ' h' (ID: 312)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.49805402755737305
    2. '   ' → logprob: -1.373054027557373
    3. '
' → logprob: -3.123054027557373
    4. '  
' → logprob: -3.248054027557373
    5. '\n' → logprob: -4.248054027557373
    6. ' 
' → logprob: -4.248054027557373
    7. '   
' → logprob: -4.373054027557373
    8. 'n' → logprob: -5.373054027557373
    9. ' ' → logprob: -6.498054027557373
    10. '<|end|>' → logprob: -6.873054027557373

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0261269211769104
    2. ' ,' → logprob: -3.9011268615722656
    3. ' =' → logprob: -6.151126861572266
    4. 'eight' → logprob: -6.401126861572266
    5. ',w' → logprob: -7.401126861572266
    6. 'ight' → logprob: -8.276126861572266
    7. 'e' → logprob: -8.526126861572266
    8. '   ' → logprob: -8.776126861572266
    9. ',e' → logprob: -9.151126861572266
    10. '=' → logprob: -9.276126861572266

Token 23: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.6382743716239929
    2. 'w' → logprob: -0.7632743716239929
    3. 'm' → logprob: -5.763274192810059
    4. 's' → logprob: -7.388274192810059
    5. ' m' → logprob: -7.388274192810059
    6. ' t' → logprob: -8.263274192810059
    7. ' s' → logprob: -8.388274192810059
    8. 'd' → logprob: -8.513274192810059
    9. 't' → logprob: -8.763274192810059
    10. 'n' → logprob: -9.513274192810059

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054968833923339844
    2. '=' → logprob: -2.92996883392334
    3. ',' → logprob: -9.42996883392334
    4. ' ' → logprob: -12.80496883392334
    5. ' ,' → logprob: -13.55496883392334
    6. ')' → logprob: -13.92996883392334
    7. '    ' → logprob: -15.30496883392334
    8. '   ' → logprob: -16.054969787597656
    9. '=line' → logprob: -16.179969787597656
    10. ' =
' → logprob: -16.304969787597656

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11412757635116577
    2. 'map' → logprob: -2.2391276359558105
    3. ' line' → logprob: -6.7391276359558105
    4. 'line' → logprob: -9.364127159118652
    5. '   ' → logprob: -11.239127159118652
    6. '[' → logprob: -12.114127159118652
    7. ' ' → logprob: -12.489127159118652
    8. ' [' → logprob: -12.614127159118652
    9. '	map' → logprob: -12.989127159118652
    10. ' list' → logprob: -13.114127159118652

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019420842872932553
    2. '(' → logprob: -6.501942157745361
    3. '(lambda' → logprob: -8.126941680908203
    4. '(str' → logprob: -9.001941680908203
    5. 'int' → logprob: -11.251941680908203
    6. '<int' → logprob: -12.751941680908203
    7. '[int' → logprob: -13.126941680908203
    8. '=int' → logprob: -14.376941680908203
    9. ',int' → logprob: -14.376941680908203
    10. 'lambda' → logprob: -14.751941680908203

Token 27: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.12284326553344727
    2. ',' → logprob: -2.3728432655334473
    3. ',line' → logprob: -4.497843265533447
    4. ')' → logprob: -4.622843265533447
    5. '(' → logprob: -7.372843265533447
    6. ' line' → logprob: -8.872842788696289
    7. '(input' → logprob: -8.872842788696289
    8. '[line' → logprob: -8.997842788696289
    9. 'line' → logprob: -8.997842788696289
    10. '=line' → logprob: -9.872842788696289

Token 28: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.38711729645729065
    2. 'line' → logprob: -1.1371172666549683
    3. ')' → logprob: -9.512117385864258
    4. '	line' → logprob: -9.512117385864258
    5. '(line' → logprob: -10.012117385864258
    6. '[line' → logprob: -10.512117385864258
    7. '   ' → logprob: -11.887117385864258
    8. ',line' → logprob: -12.137117385864258
    9. '=line' → logprob: -12.387117385864258
    10. '#line' → logprob: -12.387117385864258

Token 29: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.47617387771606445
    2. '.split' → logprob: -0.9761738777160645
    3. '.strip' → logprob: -6.3511738777160645
    4. ' .' → logprob: -8.726173400878906
    5. '().' → logprob: -8.851173400878906
    6. ')' → logprob: -10.726173400878906
    7. '.rstrip' → logprob: -12.101173400878906
    8. '.readline' → logprob: -12.226173400878906
    9. '   ' → logprob: -12.476173400878906
    10. ').' → logprob: -12.476173400878906

Token 30: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5878735184669495
    2. '('' → logprob: -0.8378735184669495
    3. '()' → logprob: -4.587873458862305
    4. '("' → logprob: -7.337873458862305
    5. '()))' → logprob: -7.837873458862305
    6. '(' → logprob: -8.087873458862305
    7. '(','' → logprob: -8.837873458862305
    8. ')' → logprob: -9.712873458862305
    9. '("("' → logprob: -9.712873458862305
    10. '())
' → logprob: -10.962873458862305

Token 31: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0358338356018066
    2. '\n' → logprob: -1.4108338356018066
    3. '   ' → logprob: -1.6608338356018066
    4. '<|end|>' → logprob: -2.5358338356018066
    5. ')' → logprob: -3.0358338356018066
    6. ':' → logprob: -3.6608338356018066
    7. '    
' → logprob: -4.160833835601807
    8. '  
' → logprob: -4.785833835601807
    9. '<|end|>' → logprob: -5.285833835601807
    10. ' ' → logprob: -5.285833835601807

Token 32: ' d' (ID: 272)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.889379620552063
    2. 'field' → logprob: -2.0143795013427734
    3. '   ' → logprob: -2.2643795013427734
    4. '#' → logprob: -2.5143795013427734
    5. 'matrix' → logprob: -2.8893795013427734
    6. '    
' → logprob: -3.2643795013427734
    7. ' ' → logprob: -3.2643795013427734
    8. 'grid' → logprob: -3.3893795013427734
    9. 'for' → logprob: -3.3893795013427734
    10. 'print' → logprob: -3.8893795013427734

Token 33: '_sq' (ID: 125541)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.1325598806142807
    2. ' =' → logprob: -3.3825597763061523
    3. 'e' → logprob: -4.257559776306152
    4. '=' → logprob: -4.382559776306152
    5. 'ungeon' → logprob: -4.382559776306152
    6. 'o' → logprob: -4.757559776306152
    7. '=[]' → logprob: -4.882559776306152
    8. 'p' → logprob: -5.257559776306152
    9. 'eep' → logprob: -5.632559776306152
    10. 'ef' → logprob: -5.757559776306152

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7945287227630615
    2. '=' → logprob: -0.9195287227630615
    3. 'u' → logprob: -1.9195287227630615
    4. 'ist' → logprob: -7.044528961181641
    5. ' ' → logprob: -7.794528961181641
    6. ' u' → logprob: -8.29452896118164
    7. 'uer' → logprob: -8.54452896118164
    8. '=u' → logprob: -8.66952896118164
    9. 'istance' → logprob: -8.79452896118164
    10. 'uar' → logprob: -9.16952896118164

Token 35: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20827241241931915
    2. ' h' → logprob: -1.9582724571228027
    3. '(h' → logprob: -3.5832724571228027
    4. ' (' → logprob: -4.458272457122803
    5. '(' → logprob: -5.458272457122803
    6. 'w' → logprob: -6.708272457122803
    7. ' ' → logprob: -7.583272457122803
    8. '   ' → logprob: -7.833272457122803
    9. ' w' → logprob: -8.333271980285645
    10. '100' → logprob: -9.083271980285645

Token 36: '*h' (ID: 139295)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14773346483707428
    2. '*' → logprob: -2.272733449935913
    3. ' **' → logprob: -4.022733688354492
    4. ' *' → logprob: -4.147733688354492
    5. '2' → logprob: -8.272733688354492
    6. '*w' → logprob: -8.772733688354492
    7. ' ' → logprob: -9.272733688354492
    8. '+' → logprob: -10.272733688354492
    9. '***' → logprob: -10.897733688354492
    10. ' +' → logprob: -11.647733688354492

Token 37: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5232980847358704
    2. '+' → logprob: -0.8982980847358704
    3. '+w' → logprob: -9.898298263549805
    4. '<|end|>' → logprob: -10.898298263549805
    5. ' ' → logprob: -11.023298263549805
    6. ')' → logprob: -11.648298263549805
    7. '*' → logprob: -11.648298263549805
    8. '[' → logprob: -11.898298263549805
    9. '-' → logprob: -11.898298263549805
    10. ' -' → logprob: -12.023298263549805

Token 38: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2812884747982025
    2. ' w' → logprob: -1.406288504600525
    3. ' ' → logprob: -9.906288146972656
    4. '   ' → logprob: -10.031288146972656
    5. '<|end|>' → logprob: -10.656288146972656
    6. '	w' → logprob: -11.531288146972656
    7. '  ' → logprob: -12.531288146972656
    8. '    ' → logprob: -13.406288146972656
    9. '<w' → logprob: -13.906288146972656
    10. '&w' → logprob: -14.406288146972656

Token 39: '*w' (ID: 147727)
  Prédit: '*w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*w' → logprob: -0.16027753055095673
    2. '*' → logprob: -1.9102774858474731
    3. ' *' → logprob: -10.410277366638184
    4. '**' → logprob: -11.535277366638184
    5. 'w' → logprob: -12.660277366638184
    6. ''*' → logprob: -13.410277366638184
    7. '*\' → logprob: -13.910277366638184
    8. '***' → logprob: -14.160277366638184
    9. '```' → logprob: -14.285277366638184
    10. '*u' → logprob: -14.535277366638184

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0514451265335083
    2. ' ' → logprob: -4.301445007324219
    3. '    
' → logprob: -5.051445007324219
    4. '\n' → logprob: -5.301445007324219
    5. '
' → logprob: -5.801445007324219
    6. ' 
' → logprob: -5.926445007324219
    7. '*' → logprob: -6.176445007324219
    8. ')' → logprob: -6.301445007324219
    9. '    ' → logprob: -6.426445007324219
    10. '+' → logprob: -6.551445007324219

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5503506064414978
    2. '\n' → logprob: -2.5503506660461426
    3. ' ' → logprob: -2.9253506660461426
    4. ' if' → logprob: -3.3003506660461426
    5. '    
' → logprob: -3.3003506660461426
    6. 'if' → logprob: -3.3003506660461426
    7. ' 
' → logprob: -3.4253506660461426
    8. '\' → logprob: -3.5503506660461426
    9. ' \' → logprob: -4.300350666046143
    10. '   
' → logprob: -4.675350666046143

Token 42: ' found' (ID: 2491)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.182501196861267
    2. '   ' → logprob: -1.432501196861267
    3. 'i' → logprob: -2.6825013160705566
    4. 'd' → logprob: -2.6825013160705566
    5. ' if' → logprob: -3.1825013160705566
    6. 's' → logprob: -3.3075013160705566
    7. 'h' → logprob: -3.4325013160705566
    8. 'l' → logprob: -3.8075013160705566
    9. 'n' → logprob: -3.9325013160705566
    10. 'r' → logprob: -4.057501316070557

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04087652266025543
    2. '=' → logprob: -3.790876626968384
    3. '_' → logprob: -4.290876388549805
    4. ' ' → logprob: -5.665876388549805
    5. '_space' → logprob: -8.915876388549805
    6. ':' → logprob: -10.165876388549805
    7. ',' → logprob: -10.915876388549805
    8. ' _' → logprob: -10.915876388549805
    9. '_=' → logprob: -11.040876388549805
    10. 'space' → logprob: -11.665876388549805

Token 44: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.016983892768621445
    2. 'False' → logprob: -4.141983985900879
    3. ' True' → logprob: -7.141983985900879
    4. ' ' → logprob: -9.016983985900879
    5. ' []' → logprob: -11.391983985900879
    6. ' None' → logprob: -11.641983985900879
    7. 'True' → logprob: -12.516983985900879
    8. '0' → logprob: -12.766983985900879
    9. '(False' → logprob: -13.016983985900879
    10. '[]' → logprob: -13.391983985900879

Token 45: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7235209345817566
    2. '<|end|>' → logprob: -1.4735209941864014
    3. '    
' → logprob: -2.5985209941864014
    4. ' 
' → logprob: -2.8485209941864014
    5. '\n' → logprob: -3.2235209941864014
    6. ':' → logprob: -3.3485209941864014
    7. '  
' → logprob: -3.9735209941864014
    8. ' ' → logprob: -4.098520755767822
    9. '
' → logprob: -4.348520755767822
    10. '\' → logprob: -4.848520755767822

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10776125639677048
    2. '    
' → logprob: -3.6077611446380615
    3. ' ' → logprob: -3.7327611446380615
    4. '<|end|>' → logprob: -4.107761383056641
    5. ' 
' → logprob: -4.607761383056641
    6. '  
' → logprob: -5.107761383056641
    7. '\n' → logprob: -5.732761383056641
    8. ':' → logprob: -5.732761383056641
    9. '    ' → logprob: -5.857761383056641
    10. ' for' → logprob: -6.232761383056641

Token 47: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04704182595014572
    2. 'for' (adapté à ' for') → logprob: -4.297041893005371
    3. ' for' → logprob: -4.422041893005371
    4. '    
' → logprob: -5.047041893005371
    5. ' ' → logprob: -5.672041893005371
    6. ' 
' → logprob: -5.922041893005371
    7. '    ' → logprob: -6.297041893005371
    8. '\n' → logprob: -6.422041893005371
    9. '<|end|>' → logprob: -7.297041893005371
    10. '  ' → logprob: -7.547041893005371

Token 48: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05502050742506981
    2. ' h' → logprob: -4.180020332336426
    3. ' a' → logprob: -4.430020332336426
    4. ' ' → logprob: -4.555020332336426
    5. ' x' → logprob: -4.805020332336426
    6. ' range' → logprob: -6.555020332336426
    7. 'i' → logprob: -6.805020332336426
    8. ' r' → logprob: -7.180020332336426
    9. ' y' → logprob: -7.430020332336426
    10. ' l' → logprob: -7.555020332336426

Token 49: '2' (ID: 17)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02199460007250309
    2. ' ' → logprob: -4.646994590759277
    3. 'in' → logprob: -5.771994590759277
    4. '_' → logprob: -6.146994590759277
    5. 'i' → logprob: -6.771994590759277
    6. ' i' → logprob: -6.896994590759277
    7. 'x' → logprob: -7.146994590759277
    8. '_sq' → logprob: -7.146994590759277
    9. ',' → logprob: -7.521994590759277
    10. 'istance' → logprob: -7.771994590759277

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022102000191807747
    2. 'in' → logprob: -4.022101879119873
    3. ',' → logprob: -6.022101879119873
    4. ' ' → logprob: -6.772101879119873
    5. '2' → logprob: -8.772102355957031
    6. 'x' → logprob: -9.522102355957031
    7. '  ' → logprob: -10.522102355957031
    8. '<|end|>' → logprob: -11.022102355957031
    9. 'o' → logprob: -11.397102355957031
    10. 's' → logprob: -11.522102355957031

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01820262521505356
    2. 'range' → logprob: -4.018202781677246
    3. ' ' → logprob: -10.893202781677246
    4. '	range' → logprob: -11.393202781677246
    5. ' xrange' → logprob: -11.643202781677246
    6. '  ' → logprob: -12.393202781677246
    7. '(range' → logprob: -12.643202781677246
    8. '[' → logprob: -13.018202781677246
    9. '   ' → logprob: -13.518202781677246
    10. ' ' → logprob: -14.518202781677246

Token 52: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001762286527082324
    2. '(d' → logprob: -7.251762390136719
    3. ' (' → logprob: -7.376762390136719
    4. '(h' → logprob: -8.126762390136719
    5. '1' → logprob: -10.376762390136719
    6. '((' → logprob: -10.626762390136719
    7. '(w' → logprob: -11.001762390136719
    8. ')' → logprob: -11.626762390136719
    9. '(min' → logprob: -11.751762390136719
    10. '   ' → logprob: -11.876762390136719

Token 53: '_sq' (ID: 125541)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3553107678890228
    2. '_sq' → logprob: -1.2303107976913452
    3. '*' → logprob: -6.230310916900635
    4. '+' → logprob: -6.480310916900635
    5. '1' → logprob: -7.230310916900635
    6. '_' → logprob: -7.230310916900635
    7. '**' → logprob: -7.855310916900635
    8. ' ' → logprob: -8.730310440063477
    9. ')' → logprob: -8.980310440063477
    10. '-' → logprob: -9.105310440063477

Token 54: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4589766263961792
    2. '+' → logprob: -1.0839766263961792
    3. '):' → logprob: -3.7089767456054688
    4. ',' → logprob: -6.083976745605469
    5. ' ):' → logprob: -6.958976745605469
    6. ' ' → logprob: -7.458976745605469
    7. '-' → logprob: -8.083976745605469
    8. ' ,' → logprob: -8.083976745605469
    9. '   ' → logprob: -8.208976745605469
    10. '):
' → logprob: -8.458976745605469

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016038941219449043
    2. ' ' → logprob: -4.14103889465332
    3. ')' → logprob: -13.39103889465332
    4. '2' → logprob: -13.89103889465332
    5. '  ' → logprob: -14.76603889465332
    6. '   ' → logprob: -15.26603889465332
    7. '0' → logprob: -15.26603889465332
    8. ',' → logprob: -15.26603889465332
    9. '-' → logprob: -15.39103889465332
    10. '+' → logprob: -15.64103889465332

Token 56: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000739707553293556
    2. '):
' → logprob: -7.375739574432373
    3. ' ):' → logprob: -9.625740051269531
    4. ':' → logprob: -10.125740051269531
    5. ')' → logprob: -12.625740051269531
    6. '):
' → logprob: -13.875740051269531
    7. ',' → logprob: -13.875740051269531
    8. '}:' → logprob: -14.375740051269531
    9. ' ' → logprob: -15.000740051269531
    10. ']:' → logprob: -15.875740051269531

Token 57: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2701606750488281
    2. ' (' → logprob: -1.8951606750488281
    3. '100' → logprob: -2.020160675048828
    4. 'd' → logprob: -2.145160675048828
    5. '10' → logprob: -2.395160675048828
    6. '(' → logprob: -2.895160675048828
    7. ' d' → logprob: -3.020160675048828
    8. '2' → logprob: -3.020160675048828
    9. 'h' → logprob: -3.770160675048828
    10. ' h' → logprob: -4.270160675048828

Token 58: '150' (ID: 5215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6808051466941833
    2. 'd' → logprob: -2.055805206298828
    3. '100' → logprob: -2.305805206298828
    4. '(' → logprob: -2.430805206298828
    5. '10' → logprob: -2.930805206298828
    6. 'h' → logprob: -2.930805206298828
    7. '200' → logprob: -3.930805206298828
    8. '(h' → logprob: -3.930805206298828
    9. '(d' → logprob: -4.930805206298828
    10. '((' → logprob: -5.555805206298828

Token 59: '*' (ID: 9)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -1.4205548763275146
    2. '000' → logprob: -1.5455548763275146
    3. '):' → logprob: -1.7955548763275146
    4. '001' → logprob: -1.7955548763275146
    5. '1' → logprob: -2.1705548763275146
    6. '00' → logprob: -3.0455548763275146
    7. '0' → logprob: -3.2955548763275146
    8. '*' → logprob: -5.170555114746094
    9. ')' → logprob: -5.670555114746094
    10. '**' → logprob: -6.295555114746094

Token 60: '150' (ID: 5215)
  Prédit: '150'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '150' → logprob: -0.5247371792793274
    2. '*' → logprob: -1.7747371196746826
    3. '1' → logprob: -2.3997371196746826
    4. '151' → logprob: -3.0247371196746826
    5. '0' → logprob: -3.2747371196746826
    6. '**' → logprob: -3.3997371196746826
    7. '000' → logprob: -4.899737358093262
    8. '001' → logprob: -5.149737358093262
    9. '+' → logprob: -5.274737358093262
    10. ' ' → logprob: -6.149737358093262

Token 61: '*' (ID: 9)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21263264119625092
    2. '+' → logprob: -1.712632656097412
    3. ' +' → logprob: -5.087632656097412
    4. '):
' → logprob: -6.087632656097412
    5. ' ):' → logprob: -6.087632656097412
    6. ')' → logprob: -8.712632179260254
    7. ':' → logprob: -9.587632179260254
    8. ',' → logprob: -9.962632179260254
    9. '+:' → logprob: -10.712632179260254
    10. '1' → logprob: -10.712632179260254

Token 62: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7812272906303406
    2. '2' → logprob: -1.0312273502349854
    3. '+' → logprob: -2.2812273502349854
    4. ' +' → logprob: -3.1562273502349854
    5. ' ' → logprob: -3.5312273502349854
    6. '):' → logprob: -4.656227111816406
    7. '):
' → logprob: -8.031227111816406
    8. ')' → logprob: -8.031227111816406
    9. ' ):' → logprob: -8.031227111816406
    10. '   ' → logprob: -8.656227111816406

Token 63: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0818515419960022
    2. '+' → logprob: -2.8318514823913574
    3. ' ):' → logprob: -4.206851482391357
    4. ':' → logprob: -5.956851482391357
    5. ' +' → logprob: -6.581851482391357
    6. '):
' → logprob: -7.456851482391357
    7. ' :' → logprob: -9.706851959228516
    8. '+:' → logprob: -9.831851959228516
    9. ')' → logprob: -10.081851959228516
    10. ' ):
' → logprob: -10.456851959228516

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004636011086404324
    2. ' ' → logprob: -5.379635810852051
    3. '   ' → logprob: -11.75463581085205
    4. '2' → logprob: -12.87963581085205
    5. '  ' → logprob: -13.25463581085205
    6. ')' → logprob: -14.62963581085205
    7. '

' → logprob: -15.06713581085205
    8. '```' → logprob: -15.06713581085205
    9. ' ' → logprob: -15.06713581085205
    10. '    ' → logprob: -15.12963581085205

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0055528320372104645
    2. '):
' → logprob: -5.380552768707275
    3. ':' → logprob: -7.755552768707275
    4. ' ):' → logprob: -7.755552768707275
    5. ')' → logprob: -10.380553245544434
    6. ',' → logprob: -10.630553245544434
    7. ' ):
' → logprob: -12.380553245544434
    8. '):
' → logprob: -12.505553245544434
    9. '   ' → logprob: -12.755553245544434
    10. '):

' → logprob: -12.755553245544434

Token 66: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.039658188819885254
    2. '<|end|>' → logprob: -3.6646580696105957
    3. '       ' → logprob: -5.289658069610596
    4. ',' → logprob: -6.164658069610596
    5. '   ' → logprob: -6.289658069610596
    6. ' :' → logprob: -6.664658069610596
    7. ':
' → logprob: -7.289658069610596
    8. ' ' → logprob: -7.414658069610596
    9. '):' → logprob: -7.664658069610596
    10. '<|end|>' → logprob: -7.914658069610596

Token 67: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5692718625068665
    2. '<|end|>' → logprob: -2.0692718029022217
    3. ' ' → logprob: -2.1942718029022217
    4. ':' → logprob: -2.4442718029022217
    5. '    ' → logprob: -3.5692718029022217
    6. 'if' → logprob: -3.6942718029022217
    7. ',' → logprob: -4.944272041320801
    8. ' for' → logprob: -5.069272041320801
    9. '   ' → logprob: -5.194272041320801
    10. ')' → logprob: -5.319272041320801

Token 68: ' nh' (ID: 5467)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.534436047077179
    2. ' b' → logprob: -1.9094359874725342
    3. ' x' → logprob: -2.534435987472534
    4. ' c' → logprob: -3.284435987472534
    5. ' i' → logprob: -3.534435987472534
    6. ' w' → logprob: -3.784435987472534
    7. 'a' → logprob: -3.909435987472534
    8. ' h' → logprob: -3.909435987472534
    9. ' d' → logprob: -4.159436225891113
    10. ' y' → logprob: -5.034436225891113

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14286521077156067
    2. ',' → logprob: -2.1428651809692383
    3. 'in' → logprob: -4.267865180969238
    4. '<|end|>' → logprob: -6.642865180969238
    5. ' ' → logprob: -8.767865180969238
    6. ' ,' → logprob: -9.267865180969238
    7. ',n' → logprob: -9.267865180969238
    8. '   ' → logprob: -10.392865180969238
    9. '  ' → logprob: -10.642865180969238
    10. '```' → logprob: -11.017865180969238

Token 70: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011073057539761066
    2. 'range' → logprob: -4.511073112487793
    3. ' in' → logprob: -11.136073112487793
    4. '   ' → logprob: -12.886073112487793
    5. '  ' → logprob: -13.261073112487793
    6. 'ange' → logprob: -13.386073112487793
    7. '	range' → logprob: -13.511073112487793
    8. ' ' → logprob: -13.511073112487793
    9. '(range' → logprob: -14.261073112487793
    10. 'in' → logprob: -15.636073112487793

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18266619741916656
    2. '(h' → logprob: -1.8076661825180054
    3. '(w' → logprob: -6.432666301727295
    4. '(min' → logprob: -7.682666301727295
    5. '(max' → logprob: -7.932666301727295
    6. '1' → logprob: -8.557665824890137
    7. '(-' → logprob: -8.682665824890137
    8. '(int' → logprob: -9.807665824890137
    9. '(d' → logprob: -10.557665824890137
    10. '((' → logprob: -11.182665824890137

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2718759775161743
    2. 'h' → logprob: -1.5218759775161743
    3. '0' → logprob: -4.896875858306885
    4. 'w' → logprob: -5.396875858306885
    5. ' ' → logprob: -6.021875858306885
    6. ' h' → logprob: -6.271875858306885
    7. '150' → logprob: -7.021875858306885
    8. 'max' → logprob: -7.771875858306885
    9. 'min' → logprob: -7.896875858306885
    10. '51' → logprob: -8.646876335144043

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026872646412812173
    2. ',h' → logprob: -8.625268936157227
    3. ' ,' → logprob: -10.000268936157227
    4. ',w' → logprob: -10.500268936157227
    5. ',d' → logprob: -11.625268936157227
    6. ',
' → logprob: -13.250268936157227
    7. ',int' → logprob: -13.375268936157227
    8. '   ' → logprob: -14.250268936157227
    9. '<|end|>' → logprob: -14.625268936157227
    10. ',

' → logprob: -14.875268936157227

Token 74: ' ' (ID: 220)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3590848743915558
    2. '150' → logprob: -2.2340848445892334
    3. '151' → logprob: -2.2340848445892334
    4. 'd' → logprob: -3.1090848445892334
    5. ' h' → logprob: -4.3590850830078125
    6. '101' → logprob: -4.7340850830078125
    7. ' ' → logprob: -5.2340850830078125
    8. 'int' → logprob: -5.4840850830078125
    9. '149' → logprob: -5.4840850830078125
    10. 'w' → logprob: -6.2340850830078125

Token 75: '151' (ID: 17395)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.624450147151947
    2. '150' → logprob: -1.6244502067565918
    3. '151' → logprob: -1.7494502067565918
    4. 'd' → logprob: -2.624450206756592
    5. '101' → logprob: -5.249450206756592
    6. '149' → logprob: -5.874450206756592
    7. '1' → logprob: -5.999450206756592
    8. 'w' → logprob: -5.999450206756592
    9. 'int' → logprob: -6.374450206756592
    10. '100' → logprob: -6.999450206756592

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869381546974182
    2. '):
' → logprob: -1.1369380950927734
    3. '):
' → logprob: -10.011938095092773
    4. '):

' → logprob: -11.886938095092773
    5. ')' → logprob: -12.761938095092773
    6. '       ' → logprob: -12.761938095092773
    7. ':' → logprob: -12.886938095092773
    8. '+' → logprob: -13.011938095092773
    9. '   ' → logprob: -13.636938095092773
    10. ' ):' → logprob: -14.011938095092773

Token 77: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49939459562301636
    2. '<|end|>' → logprob: -0.9993945956230164
    3. ':' → logprob: -4.124394416809082
    4. '           ' → logprob: -5.749394416809082
    5. '<|end|>' → logprob: -5.999394416809082
    6. ' ' → logprob: -6.499394416809082
    7. ':
' → logprob: -7.999394416809082
    8. '   ' → logprob: -8.124394416809082
    9. '        ' → logprob: -8.124394416809082
    10. ',' → logprob: -8.624394416809082

Token 78: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' nw' (ID: 45462)
  Prédit: ' nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.2064410001039505
    2. 'nw' → logprob: -1.706441044807434
    3. ' ' → logprob: -6.5814409255981445
    4. '   ' → logprob: -6.7064409255981445
    5. ' nh' → logprob: -7.0814409255981445
    6. 'n' → logprob: -8.206440925598145
    7. '    ' → logprob: -8.456440925598145
    8. ' nws' → logprob: -8.456440925598145
    9. '  ' → logprob: -8.956440925598145
    10. 'w' → logprob: -9.456440925598145

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014301705174148083
    2. 'in' → logprob: -4.264301776885986
    3. '<|end|>' → logprob: -9.014301300048828
    4. ' ' → logprob: -11.764301300048828
    5. '1' → logprob: -13.389301300048828
    6. '	in' → logprob: -13.514301300048828
    7. '<|end|>' → logprob: -13.639301300048828
    8. '```' → logprob: -14.264301300048828
    9. '    ' → logprob: -14.389301300048828
    10. '   ' → logprob: -14.639301300048828

Token 81: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4800151288509369
    2. ' range' → logprob: -0.9800151586532593
    3. '(' → logprob: -5.355015277862549
    4. '(range' → logprob: -6.855015277862549
    5. ' in' → logprob: -10.10501480102539
    6. ' (' → logprob: -10.23001480102539
    7. '	range' → logprob: -10.85501480102539
    8. ' ' → logprob: -10.98001480102539
    9. '1' → logprob: -11.35501480102539
    10. '<|end|>' → logprob: -11.98001480102539

Token 82: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.641841820150148e-05
    2. ' (' → logprob: -11.00002670288086
    3. '<|end|>' → logprob: -11.62502670288086
    4. '(
' → logprob: -15.12502670288086
    5. '<|end|>' → logprob: -15.25002670288086
    6. '(n' → logprob: -16.75002670288086
    7. '((' → logprob: -17.25002670288086
    8. '(int' → logprob: -17.25002670288086
    9. '...' → logprob: -17.75002670288086
    10. '   ' → logprob: -17.87502670288086

Token 83: 'h' (ID: 71)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04376784339547157
    2. '1' → logprob: -3.5437679290771484
    3. '2' → logprob: -4.668767929077148
    4. '+' → logprob: -6.293767929077148
    5. ' ' → logprob: -7.168767929077148
    6. 'h' → logprob: -7.418767929077148
    7. '   ' → logprob: -8.418767929077148
    8. '[' → logprob: -8.668767929077148
    9. '=' → logprob: -9.293767929077148
    10. '
' → logprob: -9.418767929077148

Token 84: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13168928027153015
    2. ' +' → logprob: -2.6316893100738525
    3. ',' → logprob: -3.0066893100738525
    4. '):' → logprob: -7.131689071655273
    5. ' ,' → logprob: -7.756689071655273
    6. '-' → logprob: -8.381689071655273
    7. '+,' → logprob: -8.756689071655273
    8. '):
' → logprob: -9.506689071655273
    9. ' ' → logprob: -9.756689071655273
    10. '   ' → logprob: -10.131689071655273

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006754086818546057
    2. '0' → logprob: -5.631753921508789
    3. ',' → logprob: -6.381753921508789
    4. ' ' → logprob: -6.756753921508789
    5. '):
' → logprob: -9.506753921508789
    6. '<|end|>' → logprob: -9.881753921508789
    7. ')' → logprob: -10.131753921508789
    8. '   ' → logprob: -10.256753921508789
    9. '2' → logprob: -11.131753921508789
    10. '  ' → logprob: -11.631753921508789

Token 86: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18847616016864777
    2. '):
' → logprob: -1.8134762048721313
    3. ',' → logprob: -4.938476085662842
    4. '():' → logprob: -8.0634765625
    5. '()):
' → logprob: -8.1884765625
    6. '):

' → logprob: -8.6884765625
    7. '<|end|>' → logprob: -9.0634765625
    8. ':' → logprob: -9.4384765625
    9. '():
' → logprob: -9.4384765625
    10. ' ' → logprob: -9.5634765625

Token 87: ' ' (ID: 220)
  Prédit: '152'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '152' → logprob: -0.43823280930519104
    2. '151' → logprob: -1.5632327795028687
    3. ' ' → logprob: -1.9382327795028687
    4. '150' → logprob: -7.563232898712158
    5. '15' → logprob: -8.438232421875
    6. '16' → logprob: -9.063232421875
    7. '   ' → logprob: -9.188232421875
    8. 'w' → logprob: -9.188232421875
    9. '1' → logprob: -9.625732421875
    10. '153' → logprob: -9.688232421875

Token 88: '151' (ID: 17395)
  Prédit: '151'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '151' → logprob: -0.29422327876091003
    2. '152' → logprob: -1.4192233085632324
    3. ' ' → logprob: -4.419223308563232
    4. '150' → logprob: -7.794223308563232
    5. '15' → logprob: -8.919222831726074
    6. 'w' → logprob: -9.044222831726074
    7. '   ' → logprob: -9.231722831726074
    8. '  ' → logprob: -10.356722831726074
    9. '1' → logprob: -10.481722831726074
    10. '153' → logprob: -10.481722831726074

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018298370763659477
    2. '):
' → logprob: -4.018298149108887
    3. ':' → logprob: -9.518298149108887
    4. '):

' → logprob: -10.518298149108887
    5. '):
' → logprob: -11.393298149108887
    6. '+' → logprob: -11.518298149108887
    7. ')' → logprob: -11.643298149108887
    8. ' ):' → logprob: -12.268298149108887
    9. '           ' → logprob: -12.643298149108887
    10. '**' → logprob: -13.268298149108887

Token 90: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10788862407207489
    2. '<|end|>' → logprob: -2.607888698577881
    3. ':' → logprob: -3.982888698577881
    4. ' ' → logprob: -4.982888698577881
    5. '<|end|>' → logprob: -7.232888698577881
    6. '           ' → logprob: -7.732888698577881
    7. ' if' → logprob: -8.107888221740723
    8. '       ' → logprob: -8.232888221740723
    9. ':
' → logprob: -8.232888221740723
    10. '                ' → logprob: -8.357888221740723

Token 91: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3162626028060913
    2. ' ' → logprob: -1.9412626028060913
    3. '<|end|>' → logprob: -2.816262722015381
    4. ' if' → logprob: -3.191262722015381
    5. '   ' → logprob: -5.316262722015381
    6. '    ' → logprob: -5.441262722015381
    7. '           ' → logprob: -5.441262722015381
    8. '               ' → logprob: -6.191262722015381
    9. '<|end|>' → logprob: -6.316262722015381
    10. ' 
' → logprob: -6.691262722015381

Token 92: ' nh' (ID: 5467)
  Prédit: ' nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.1291026771068573
    2. ' nw' → logprob: -2.2541027069091797
    3. 'nh' → logprob: -5.25410270690918
    4. 'nw' → logprob: -6.00410270690918
    5. ' n' → logprob: -6.37910270690918
    6. '                   ' → logprob: -6.75410270690918
    7. ' ' → logprob: -7.25410270690918
    8. ' d' → logprob: -7.37910270690918
    9. '                                       ' → logprob: -7.75410270690918
    10. 'd' → logprob: -7.75410270690918

Token 93: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0013528565177693963
    2. '*n' → logprob: -6.751352787017822
    3. '**' → logprob: -9.75135326385498
    4. ' *' → logprob: -10.12635326385498
    5. '*>' → logprob: -10.50135326385498
    6. '*np' → logprob: -11.00135326385498
    7. '```' → logprob: -12.00135326385498
    8. '*object' → logprob: -12.12635326385498
    9. '*w' → logprob: -12.25135326385498
    10. '***' → logprob: -12.50135326385498

Token 94: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.006125021725893021
    2. 'nw' → logprob: -5.506124973297119
    3. ' nh' → logprob: -6.506124973297119
    4. '*' → logprob: -8.006125450134277
    5. 'n' → logprob: -9.131125450134277
    6. '
' → logprob: -10.631125450134277
    7. '

' → logprob: -10.881125450134277
    8. '```' → logprob: -11.631125450134277
    9. '   ' → logprob: -12.131125450134277
    10. ' ' → logprob: -12.256125450134277

Token 95: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6337906718254089
    2. '+' → logprob: -0.7587906718254089
    3. '+n' → logprob: -6.758790493011475
    4. '+w' → logprob: -11.133790969848633
    5. ' ' → logprob: -12.258790969848633
    6. '   ' → logprob: -12.883790969848633
    7. '=' → logprob: -13.258790969848633
    8. ' plus' → logprob: -13.383790969848633
    9. '>' → logprob: -14.258790969848633
    10. '*' → logprob: -14.758790969848633

Token 96: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.08929929882287979
    2. ' nw' → logprob: -2.464299201965332
    3. 'n' → logprob: -8.464299201965332
    4. ' ' → logprob: -10.089299201965332
    5. ' nws' → logprob: -10.339299201965332
    6. '<|end|>' → logprob: -10.589299201965332
    7. '   ' → logprob: -11.464299201965332
    8. '(n' → logprob: -11.964299201965332
    9. '	n' → logprob: -12.464299201965332
    10. '  ' → logprob: -12.464299201965332

Token 97: '*n' (ID: 58470)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00015550498210359365
    2. '*n' → logprob: -8.875155448913574
    3. '*w' → logprob: -11.250155448913574
    4. ' *' → logprob: -13.375155448913574
    5. '```' → logprob: -15.125155448913574
    6. '**' → logprob: -15.125155448913574
    7. '*np' → logprob: -15.625155448913574
    8. '2' → logprob: -16.12515640258789
    9. ' ' → logprob: -17.12515640258789
    10. '[n' → logprob: -17.25015640258789

Token 98: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.408677290892228e-05
    2. '*w' → logprob: -10.3750638961792
    3. 'nw' → logprob: -10.5000638961792
    4. 'n' → logprob: -12.8750638961792
    5. '2' → logprob: -13.2500638961792
    6. '	w' → logprob: -15.6250638961792
    7. ''w' → logprob: -15.7500638961792
    8. '*' → logprob: -16.000064849853516
    9. 'h' → logprob: -16.125064849853516
    10. 'ww' → logprob: -16.750064849853516

Token 99: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020571667701005936
    2. '==' → logprob: -3.895571708679199
    3. ' ' → logprob: -11.0205717086792
    4. '=' → logprob: -12.7705717086792
    5. ' >' → logprob: -12.8955717086792
    6. '>' → logprob: -13.2705717086792
    7. ' >=' → logprob: -13.3955717086792
    8. '   ' → logprob: -14.1455717086792
    9. ')' → logprob: -14.2705717086792
    10. ' !=' → logprob: -14.3955717086792

Token 100: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.31326788663864136
    2. 'd' → logprob: -1.3132679462432861
    3. ' ' → logprob: -12.563267707824707
    4. '	d' → logprob: -13.813267707824707
    5. '    ' → logprob: -14.938267707824707
    6. '   ' → logprob: -15.063267707824707
    7. ')d' → logprob: -15.313267707824707
    8. ' ' → logprob: -15.938267707824707
    9. '```' → logprob: -16.438268661499023
    10. '  ' → logprob: -16.438268661499023

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.11996734328568e-05
    2. ' ' → logprob: -10.250041007995605
    3. '_sq' → logprob: -13.250041007995605
    4. '```' → logprob: -13.937541007995605
    5. '   ' → logprob: -14.250041007995605
    6. '_' → logprob: -14.375041007995605
    7. '₂' → logprob: -14.750041007995605
    8. '  ' → logprob: -15.562541007995605
    9. '۲' → logprob: -15.562541007995605
    10. '²' → logprob: -15.687541007995605

Token 102: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5966297388076782
    2. ':' → logprob: -0.8466297388076782
    3. ':
' → logprob: -4.221629619598389
    4. 'and' → logprob: -5.221629619598389
    5. ',' → logprob: -9.721630096435547
    6. '                   ' → logprob: -9.846630096435547
    7. ' :' → logprob: -9.971630096435547
    8. ':

' → logprob: -9.971630096435547
    9. '               ' → logprob: -10.346630096435547
    10. '<|end|>' → logprob: -10.346630096435547

Token 103: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44179245829582214
    2. '                   ' → logprob: -1.3167924880981445
    3. ':' → logprob: -2.6917924880981445
    4. ':
' → logprob: -4.4417924880981445
    5. '                       ' → logprob: -4.9417924880981445
    6. '               ' → logprob: -6.8167924880981445
    7. 'and' → logprob: -7.8167924880981445
    8. ' :' → logprob: -8.941792488098145
    9. '                           ' → logprob: -9.066792488098145
    10. '<|end|>' → logprob: -9.191792488098145

Token 104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5885078310966492
    2. '                       ' → logprob: -1.088507890701294
    3. '                   ' → logprob: -2.588507890701294
    4. ' found' → logprob: -3.838507890701294
    5. ' print' → logprob: -5.088507652282715
    6. 'if' (adapté à ' if') → logprob: -6.338507652282715
    7. '               ' → logprob: -7.463507652282715
    8. ' ' → logprob: -7.588507652282715
    9. '       ' → logprob: -7.963507652282715
    10. '                           ' → logprob: -7.963507652282715

Token 105: ' nh' (ID: 5467)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.8802446722984314
    2. ' nh' → logprob: -1.0052447319030762
    3. 'h' → logprob: -3.255244731903076
    4. ' w' → logprob: -3.380244731903076
    5. ' d' → logprob: -3.380244731903076
    6. ' (' → logprob: -3.630244731903076
    7. '(h' → logprob: -3.755244731903076
    8. ' not' → logprob: -4.005244731903076
    9. 'nh' → logprob: -4.255244731903076
    10. 'w' → logprob: -5.130244731903076

Token 106: ' <' (ID: 464)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14920879900455475
    2. ' *' → logprob: -3.0242087841033936
    3. ' >' → logprob: -4.024209022521973
    4. ' <' → logprob: -4.399209022521973
    5. '*w' → logprob: -4.524209022521973
    6. '>' → logprob: -4.649209022521973
    7. '+' → logprob: -5.024209022521973
    8. '<' → logprob: -5.149209022521973
    9. ' <=' → logprob: -5.649209022521973
    10. ' ==' → logprob: -5.649209022521973

Token 107: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.007029589265584946
    2. 'w' → logprob: -5.6320295333862305
    3. ' h' → logprob: -5.8820295333862305
    4. '=' → logprob: -8.25702953338623
    5. 'max' → logprob: -9.00702953338623
    6. '=h' → logprob: -9.38202953338623
    7. 'min' → logprob: -9.88202953338623
    8. ' w' → logprob: -10.50702953338623
    9. ' ' → logprob: -11.13202953338623
    10. '150' → logprob: -11.50702953338623

Token 108: ' or' (ID: 503)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.47514331340789795
    2. ' and' → logprob: -0.975143313407898
    3. ' or' → logprob: -7.3501434326171875
    4. 'or' → logprob: -8.725143432617188
    5. '                       ' → logprob: -8.850143432617188
    6. '                   ' → logprob: -9.850143432617188
    7. '*' → logprob: -10.975143432617188
    8. '               ' → logprob: -11.850143432617188
    9. '                           ' → logprob: -11.975143432617188
    10. ':' → logprob: -12.100143432617188

Token 109: ' (' (ID: 350)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.4291154146194458
    2. ' nw' → logprob: -1.0541154146194458
    3. '   ' → logprob: -8.429115295410156
    4. 'n' → logprob: -10.304115295410156
    5. ' nh' → logprob: -10.304115295410156
    6. ' ' → logprob: -10.804115295410156
    7. '(n' → logprob: -11.054115295410156
    8. ' nws' → logprob: -11.179115295410156
    9. 'nh' → logprob: -11.304115295410156
    10. 'w' → logprob: -11.429115295410156

Token 110: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.9346377849578857
    2. ' nh' → logprob: -1.1846377849578857
    3. 'nw' → logprob: -1.4346377849578857
    4. ' nw' → logprob: -3.4346377849578857
    5. '(n' → logprob: -4.309638023376465
    6. '(' → logprob: -5.059638023376465
    7. ' (' → logprob: -5.309638023376465
    8. '   ' → logprob: -6.747138023376465
    9. 'n' → logprob: -6.934638023376465
    10. 'w' → logprob: -7.059638023376465

Token 111: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23236514627933502
    2. '==' → logprob: -1.8573651313781738
    3. ' <' → logprob: -3.232365131378174
    4. ' >' → logprob: -5.232365131378174
    5. '<' → logprob: -5.857365131378174
    6. ' <=' → logprob: -6.107365131378174
    7. '>' → logprob: -7.857365131378174
    8. ' ' → logprob: -7.857365131378174
    9. '<=' → logprob: -8.107365608215332
    10. ',' → logprob: -9.482365608215332

Token 112: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.005360990762710571
    2. ' h' → logprob: -5.255361080169678
    3. 'w' → logprob: -9.38036060333252
    4. ' ' → logprob: -10.88036060333252
    5. '   ' → logprob: -11.75536060333252
    6. '0' → logprob: -12.75536060333252
    7. ' w' → logprob: -13.38036060333252
    8. '
' → logprob: -13.38036060333252
    9. 'line' → logprob: -13.56786060333252
    10. '<|end|>' → logprob: -14.38036060333252

Token 113: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17982998490333557
    2. 'and' → logprob: -1.8048299551010132
    3. ' ' → logprob: -10.179829597473145
    4. '   ' → logprob: -10.929829597473145
    5. ')' → logprob: -12.054829597473145
    6. '
' → logprob: -12.429829597473145
    7. '    ' → logprob: -12.804829597473145
    8. '                   ' → logprob: -12.929829597473145
    9. '```' → logprob: -13.179829597473145
    10. '               ' → logprob: -13.554829597473145

Token 114: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.006727333180606365
    2. ' nw' → logprob: -5.00672721862793
    3. '   ' → logprob: -11.63172721862793
    4. 'n' → logprob: -13.00672721862793
    5. ' ' → logprob: -15.00672721862793
    6. '  ' → logprob: -15.38172721862793
    7. '    ' → logprob: -16.50672721862793
    8. '       ' → logprob: -17.13172721862793
    9. '<n' → logprob: -17.13172721862793
    10. 'w' → logprob: -17.63172721862793

Token 115: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.513390302658081
    2. '<' → logprob: -1.263390302658081
    3. ' >' → logprob: -2.638390302658081
    4. '>' → logprob: -3.763390302658081
    5. ' <=' → logprob: -3.888390302658081
    6. '<=' → logprob: -5.63839054107666
    7. '<w' → logprob: -10.13839054107666
    8. ' ' → logprob: -10.51339054107666
    9. ' >=' → logprob: -10.76339054107666
    10. '>=' → logprob: -11.63839054107666

Token 116: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023329567164182663
    2. ' w' → logprob: -3.773329496383667
    3. '   ' → logprob: -9.523329734802246
    4. ' ' → logprob: -11.898329734802246
    5. '  ' → logprob: -13.648329734802246
    6. '       ' → logprob: -14.398329734802246
    7. '    ' → logprob: -14.648329734802246
    8. '	w' → logprob: -14.773329734802246
    9. '           ' → logprob: -14.898329734802246
    10. '
' → logprob: -15.398329734802246

Token 117: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08133426308631897
    2. '):' → logprob: -2.581334352493286
    3. ' ):
' → logprob: -6.831334114074707
    4. ')' → logprob: -7.331334114074707
    5. '                   ' → logprob: -8.206334114074707
    6. '):

' → logprob: -8.456334114074707
    7. '):
' → logprob: -9.206334114074707
    8. ' ):' → logprob: -10.081334114074707
    9. '                       ' → logprob: -10.331334114074707
    10. ' and' → logprob: -11.206334114074707

Token 118: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.049676451832056046
    2. ':' → logprob: -3.4246764183044434
    3. ':
' → logprob: -5.424676418304443
    4. '                           ' → logprob: -5.799676418304443
    5. '
' → logprob: -6.049676418304443
    6. '                   ' → logprob: -6.299676418304443
    7. '                        
' → logprob: -6.924676418304443
    8. ' :' → logprob: -7.549676418304443
    9. ' continue' → logprob: -7.674676418304443
    10. '```' → logprob: -8.174676895141602

Token 119: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7272021174430847
    2. '                           ' → logprob: -1.3522021770477295
    3. ' found' → logprob: -2.1022021770477295
    4. ' continue' → logprob: -3.2272021770477295
    5. 'found' → logprob: -3.3522021770477295
    6. 'continue' (adapté à ' continue') → logprob: -3.7272021770477295
    7. '                   ' → logprob: -3.9772021770477295
    8. '                               ' → logprob: -5.60220193862915
    9. ' break' → logprob: -6.35220193862915
    10. '```' → logprob: -6.35220193862915

Token 120: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017150469357147813
    2. '
' → logprob: -7.251715183258057
    3. '                    
' → logprob: -7.626715183258057
    4. '<|end|>' → logprob: -8.376714706420898
    5. '               ' → logprob: -9.501714706420898
    6. '                        
' → logprob: -9.626714706420898
    7. '                       ' → logprob: -10.751714706420898
    8. '                    ' → logprob: -10.876714706420898
    9. '                  ' → logprob: -11.001714706420898
    10. '```' → logprob: -11.126714706420898

Token 121: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00011832444579340518
    2. '               ' → logprob: -9.875118255615234
    3. '
' → logprob: -10.750118255615234
    4. '```' → logprob: -11.375118255615234
    5. '                    
' → logprob: -11.500118255615234
    6. '           ' → logprob: -11.500118255615234
    7. 'if' → logprob: -13.125118255615234
    8. '                       ' → logprob: -13.375118255615234
    9. '<|end|>' → logprob: -13.750118255615234
    10. '       ' → logprob: -13.875118255615234

Token 122: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5737272500991821
    2. '                   ' → logprob: -1.0737272500991821
    3. ' if' → logprob: -2.6987271308898926
    4. 'print' (adapté à ' print') → logprob: -4.698727130889893
    5. 'found' → logprob: -5.198727130889893
    6. '               ' → logprob: -5.573727130889893
    7. '
' → logprob: -5.573727130889893
    8. ' found' → logprob: -6.698727130889893
    9. '```' → logprob: -7.198727130889893
    10. '   ' → logprob: -7.198727130889893

Token 123: '(n' (ID: 2406)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.9014832377433777
    2. '(n' → logprob: -1.0264832973480225
    3. '(h' → logprob: -1.6514832973480225
    4. '(' → logprob: -3.5264832973480225
    5. '("' → logprob: -4.776483058929443
    6. '(d' → logprob: -6.901483058929443
    7. '("{}' → logprob: -6.901483058929443
    8. '((' → logprob: -7.026483058929443
    9. '("("' → logprob: -7.651483058929443
    10. '("{' → logprob: -7.776483058929443

Token 124: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.31345924735069275
    2. 'w' → logprob: -1.3134592771530151
    3. 'hw' → logprob: -9.313459396362305
    4. ',' → logprob: -10.188459396362305
    5. ')' → logprob: -11.438459396362305
    6. 'd' → logprob: -11.563459396362305
    7. '   ' → logprob: -12.313459396362305
    8. '(h' → logprob: -12.313459396362305
    9. 'hs' → logprob: -12.688459396362305
    10. 'p' → logprob: -12.813459396362305

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020599730778485537
    2. ',w' → logprob: -6.5020599365234375
    3. ' ,' → logprob: -7.6270599365234375
    4. ',n' → logprob: -9.752059936523438
    5. 'w' → logprob: -12.252059936523438
    6. ',
' → logprob: -12.502059936523438
    7. ',end' → logprob: -13.877059936523438
    8. ')' → logprob: -13.877059936523438
    9. ' w' → logprob: -14.377059936523438
    10. '   ' → logprob: -14.752059936523438

Token 126: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.03805193677544594
    2. ' nw' → logprob: -3.2880518436431885
    3. 'n' → logprob: -12.66305160522461
    4. ' ' → logprob: -12.78805160522461
    5. 'w' → logprob: -13.53805160522461
    6. '   ' → logprob: -14.28805160522461
    7. '    ' → logprob: -14.78805160522461
    8. '"' → logprob: -15.41305160522461
    9. ' nws' → logprob: -15.41305160522461
    10. ')' → logprob: -15.53805160522461

Token 127: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3134101927280426
    2. ')' → logprob: -1.3134101629257202
    3. ',' → logprob: -9.563409805297852
    4. '                   ' → logprob: -9.813409805297852
    5. ')
' → logprob: -11.188409805297852
    6. ')

' → logprob: -12.813409805297852
    7. ')`
' → logprob: -13.313409805297852
    8. ' )
' → logprob: -13.563409805297852
    9. '   ' → logprob: -14.188409805297852
    10. ' )' → logprob: -14.438409805297852

Token 128: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005277725285850465
    2. ',' → logprob: -9.125527381896973
    3. '
' → logprob: -9.250527381896973
    4. '                    
' → logprob: -9.250527381896973
    5. '<|end|>' → logprob: -9.750527381896973
    6. '           ' → logprob: -10.000527381896973
    7. '               ' → logprob: -10.250527381896973
    8. '                       ' → logprob: -10.750527381896973
    9. ')' → logprob: -11.375527381896973
    10. '```' → logprob: -11.625527381896973

Token 129: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.024894889444112778
    2. ' found' → logprob: -4.024894714355469
    3. '                   ' → logprob: -5.024894714355469
    4. '
' → logprob: -9.649894714355469
    5. '   ' → logprob: -10.524894714355469
    6. 'break' → logprob: -11.274894714355469
    7. 'Found' → logprob: -11.524894714355469
    8. '	found' → logprob: -11.649894714355469
    9. 'exit' → logprob: -12.024894714355469
    10. '               ' → logprob: -12.399894714355469

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31331703066825867
    2. '=' → logprob: -1.313317060470581
    3. '=True' → logprob: -9.81331729888916
    4. ' =
' → logprob: -15.81331729888916
    5. ' ' → logprob: -16.063316345214844
    6. '<|end|>' → logprob: -16.188316345214844
    7. '=False' → logprob: -16.563316345214844
    8. '=
' → logprob: -16.938316345214844
    9. '=true' → logprob: -17.313316345214844
    10. 'True' → logprob: -17.438316345214844

Token 131: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011047814972698689
    2. ' True' → logprob: -4.511047840118408
    3. '(True' → logprob: -18.01104736328125
    4. '=True' → logprob: -18.88604736328125
    5. '   ' → logprob: -20.26104736328125
    6. 'true' → logprob: -21.13604736328125
    7. ' ' → logprob: -21.26104736328125
    8. 'Tr' → logprob: -22.38604736328125
    9. 'False' → logprob: -23.26104736328125
    10. '_true' → logprob: -23.76104736328125

Token 132: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0031118765473365784
    2. '               ' → logprob: -7.253111839294434
    3. '
' → logprob: -7.378111839294434
    4. '           ' → logprob: -7.628111839294434
    5. '                    
' → logprob: -7.628111839294434
    6. '<|end|>' → logprob: -8.503111839294434
    7. '    
' → logprob: -8.753111839294434
    8. '                       ' → logprob: -9.128111839294434
    9. '       ' → logprob: -9.253111839294434
    10. '  
' → logprob: -9.753111839294434

Token 133: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001530216890387237
    2. '               ' → logprob: -7.126530170440674
    3. '           ' → logprob: -8.376530647277832
    4. '<|end|>' → logprob: -8.876530647277832
    5. '                       ' → logprob: -9.001530647277832
    6. '                    
' → logprob: -9.876530647277832
    7. '
' → logprob: -9.876530647277832
    8. '       ' → logprob: -10.251530647277832
    9. '   ' → logprob: -10.876530647277832
    10. ',' → logprob: -11.251530647277832

Token 134: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06052173301577568
    2. '                   ' → logprob: -3.0605218410491943
    3. ' break' → logprob: -4.560521602630615
    4. '               ' → logprob: -6.935521602630615
    5. '           ' → logprob: -9.060522079467773
    6. '                       ' → logprob: -9.185522079467773
    7. '   ' → logprob: -9.185522079467773
    8. '       ' → logprob: -9.560522079467773
    9. '	break' → logprob: -10.560522079467773
    10. '                           ' → logprob: -12.435522079467773

Token 135: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41647079586982727
    2. '               ' → logprob: -1.4164707660675049
    3. '
' → logprob: -2.916470766067505
    4. '       ' → logprob: -4.791471004486084
    5. '  
' → logprob: -5.041471004486084
    6. '		' → logprob: -5.791471004486084
    7. '            
' → logprob: -5.791471004486084
    8. '                   ' → logprob: -5.916471004486084
    9. '                
' → logprob: -6.291471004486084
    10. '                    
' → logprob: -6.291471004486084

Token 136: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5015861392021179
    2. '           ' → logprob: -1.1265861988067627
    3. '       ' → logprob: -3.5015861988067627
    4. '                ' → logprob: -5.001585960388184
    5. '            ' → logprob: -5.376585960388184
    6. '
' → logprob: -5.501585960388184
    7. '		' → logprob: -5.626585960388184
    8. '<|end|>' → logprob: -6.126585960388184
    9. '          ' → logprob: -6.251585960388184
    10. '			' → logprob: -6.251585960388184

Token 137: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008381121791899204
    2. '               ' → logprob: -5.383380889892578
    3. '           ' → logprob: -6.383380889892578
    4. '        ' → logprob: -7.758380889892578
    5. '                   ' → logprob: -8.008380889892578
    6. '   ' → logprob: -8.133380889892578
    7. '         ' → logprob: -8.508380889892578
    8. '      ' → logprob: -9.008380889892578
    9. 'if' (adapté à ' if') → logprob: -9.133380889892578
    10. '                       ' → logprob: -9.133380889892578

Token 138: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.018150178715586662
    2. ' found' → logprob: -4.018150329589844
    3. '	found' → logprob: -15.893150329589844
    4. '   ' → logprob: -16.268150329589844
    5. ' ' → logprob: -18.143150329589844
    6. '(found' → logprob: -18.393150329589844
    7. '  ' → logprob: -20.018150329589844
    8. 'not' → logprob: -20.643150329589844
    9. '    ' → logprob: -21.143150329589844
    10. 'Found' → logprob: -21.768150329589844

Token 139: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.299783319234848
    2. ':
' → logprob: -2.049783229827881
    3. ':' → logprob: -2.424783229827881
    4. '                       ' → logprob: -3.799783229827881
    5. '       ' → logprob: -4.799783229827881
    6. '                   ' → logprob: -5.299783229827881
    7. '           ' → logprob: -5.799783229827881
    8. '<|end|>' → logprob: -6.924783229827881
    9. '   ' → logprob: -7.174783229827881
    10. '                               ' → logprob: -7.924783229827881

Token 140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00028660334646701813
    2. ' break' → logprob: -9.000287055969238
    3. 'break' → logprob: -9.750287055969238
    4. '                   ' → logprob: -10.000287055969238
    5. '       ' → logprob: -10.250287055969238
    6. '           ' → logprob: -11.375287055969238
    7. '                       ' → logprob: -11.625287055969238
    8. '   ' → logprob: -13.250287055969238
    9. '	break' → logprob: -14.250287055969238
    10. '			' → logprob: -15.375287055969238

Token 141: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.01726185344159603
    2. '               ' → logprob: -4.767261981964111
    3. ' break' → logprob: -4.767261981964111
    4. '           ' → logprob: -9.767261505126953
    5. '       ' → logprob: -10.642261505126953
    6. '   ' → logprob: -10.767261505126953
    7. '	break' → logprob: -13.017261505126953
    8. '                   ' → logprob: -13.142261505126953
    9. ' ' → logprob: -16.642261505126953
    10. 'Break' → logprob: -17.642261505126953

Token 142: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004037402104586363
    2. '   ' → logprob: -7.875403881072998
    3. '           ' → logprob: -11.00040340423584
    4. '    ' → logprob: -13.25040340423584
    5. '
' → logprob: -13.75040340423584
    6. '      ' → logprob: -13.75040340423584
    7. '        ' → logprob: -14.12540340423584
    8. '	' → logprob: -14.62540340423584
    9. '        
' → logprob: -14.75040340423584
    10. '<|end|>' → logprob: -15.00040340423584

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000411011598771438
    2. '           ' → logprob: -8.500411033630371
    3. '   ' → logprob: -8.500411033630371
    4. '	' → logprob: -14.125411033630371
    5. '      ' → logprob: -14.125411033630371
    6. '```' → logprob: -14.500411033630371
    7. '               ' → logprob: -14.625411033630371
    8. '    ' → logprob: -14.875411033630371
    9. '        ' → logprob: -15.125411033630371
    10. '     ' → logprob: -15.250411033630371

Token 144: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2627590298652649
    2. '       ' → logprob: -1.5127589702606201
    3. 'if' (adapté à ' if') → logprob: -4.762759208679199
    4. ' if' → logprob: -6.137759208679199
    5. '    ' → logprob: -10.2627592086792
    6. '           ' → logprob: -11.5127592086792
    7. '     ' → logprob: -11.6377592086792
    8. '  ' → logprob: -12.2627592086792
    9. ' ' → logprob: -12.5127592086792
    10. '	if' → logprob: -13.0127592086792

Token 145: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.03804171830415726
    2. ' found' → logprob: -3.288041830062866
    3. '(found' → logprob: -15.288042068481445
    4. '	found' → logprob: -16.788042068481445
    5. '   ' → logprob: -18.288042068481445
    6. 'Found' → logprob: -18.538042068481445
    7. ' ' → logprob: -19.413042068481445
    8. 'd' → logprob: -19.663042068481445
    9. 'not' → logprob: -20.413042068481445
    10. '_found' → logprob: -20.538042068481445

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21182209253311157
    2. ':
' → logprob: -1.7118220329284668
    3. '           ' → logprob: -4.586822032928467
    4. '       ' → logprob: -9.086822509765625
    5. '   ' → logprob: -11.586822509765625
    6. '):
' → logprob: -11.836822509765625
    7. '=' → logprob: -11.961822509765625
    8. '               ' → logprob: -11.961822509765625
    9. '<|end|>' → logprob: -12.336822509765625
    10. '==' → logprob: -12.461822509765625

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016383185982704163
    2. ' break' → logprob: -4.266383171081543
    3. 'break' → logprob: -6.141383171081543
    4. '               ' → logprob: -9.766383171081543
    5. '   ' → logprob: -12.766383171081543
    6. '       ' → logprob: -13.141383171081543
    7. '          ' → logprob: -13.766383171081543
    8. '	break' → logprob: -14.016383171081543
    9. '```' → logprob: -14.141383171081543
    10. '         ' → logprob: -15.891383171081543

Token 148: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.062254585325717926
    2. ' break' → logprob: -3.3122546672821045
    3. '           ' → logprob: -3.8122546672821045
    4. '   ' → logprob: -6.562254428863525
    5. '       ' → logprob: -7.937254428863525
    6. 'print' → logprob: -10.312254905700684
    7. '	break' → logprob: -11.812254905700684
    8. ' ' → logprob: -11.937254905700684
    9. '  ' → logprob: -12.937254905700684
    10. '               ' → logprob: -13.437254905700684


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 146
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 41.10%
Précision adaptée (1ère position): 43.84%
Précision (top 10): 89.04%
================================================================================
