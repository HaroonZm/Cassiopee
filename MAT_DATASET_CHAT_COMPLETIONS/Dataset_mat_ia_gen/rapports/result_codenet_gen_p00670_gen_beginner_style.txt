================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    if line == "0 0":
        break
    n, S = map(int, line.split())
    r = []
    for _ in range(n):
        r.append(int(input()))
    count = 0
    for i in range(n):
        for j in range(i + 1, n):
            if r[i] + r[j] == S:
                # 判定：ペアの2人の魔力が等しくないこと、どちらかが大きいことが必要
                if r[i] != r[j]:
                    count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14202077686786652
    2. ' ' → logprob: -3.0170207023620605
    3. '    ' → logprob: -4.1420207023620605
    4. '\' → logprob: -4.2670207023620605
    5. ' 
' → logprob: -4.5170207023620605
    6. '    
' → logprob: -4.5170207023620605
    7. '\n' → logprob: -5.0170207023620605
    8. '```' → logprob: -5.0170207023620605
    9. ':' → logprob: -5.1420207023620605
    10. '  
' → logprob: -6.5170207023620605

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7620258927345276
    2. ' =' → logprob: -0.8870258927345276
    3. 's' → logprob: -3.012025833129883
    4. '.' → logprob: -3.262025833129883
    5. '[' → logprob: -4.887025833129883
    6. '_' → logprob: -5.137025833129883
    7. '[:]' → logprob: -5.387025833129883
    8. ')' → logprob: -5.512025833129883
    9. '.startswith' → logprob: -5.887025833129883
    10. ''s' → logprob: -6.387025833129883

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25196245312690735
    2. 'input' → logprob: -1.501962423324585
    3. ' ' → logprob: -10.876962661743164
    4. '=input' → logprob: -12.251962661743164
    5. ' f' → logprob: -13.126962661743164
    6. ' readline' → logprob: -13.501962661743164
    7. '   ' → logprob: -13.751962661743164
    8. '<input' → logprob: -14.376962661743164
    9. '(input' → logprob: -14.376962661743164
    10. ' raw' → logprob: -14.751962661743164

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002882141387090087
    2. '()' → logprob: -6.25288200378418
    3. '('' → logprob: -7.37788200378418
    4. '("("' → logprob: -8.62788200378418
    5. '```' → logprob: -10.00288200378418
    6. ''' → logprob: -10.37788200378418
    7. ')' → logprob: -10.87788200378418
    8. '("")' → logprob: -11.50288200378418
    9. ''s' → logprob: -12.00288200378418
    10. '"' → logprob: -12.25288200378418

Token 8: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07125309854745865
    2. '   ' → logprob: -3.4462530612945557
    3. 'if' (adapté à ' if') → logprob: -4.071253299713135
    4. ' ' → logprob: -4.446253299713135
    5. '    ' → logprob: -5.071253299713135
    6. '```' → logprob: -7.821253299713135
    7. '  ' → logprob: -8.196252822875977
    8. '\n' → logprob: -8.571252822875977
    9. '<|end|>' → logprob: -8.696252822875977
    10. '    
' → logprob: -9.321252822875977

Token 10: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14371758699417114
    2. ' line' → logprob: -2.0187175273895264
    3. ' ' → logprob: -7.5187177658081055
    4. 'not' → logprob: -8.143717765808105
    5. 'line' → logprob: -8.643717765808105
    6. ' lines' → logprob: -11.268717765808105
    7. ' len' → logprob: -11.643717765808105
    8. '  ' → logprob: -13.018717765808105
    9. '(line' → logprob: -13.268717765808105
    10. '[line' → logprob: -13.643717765808105

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0965503677725792
    2. '.' → logprob: -2.971550464630127
    3. '.startswith' → logprob: -4.096550464630127
    4. '==' → logprob: -4.346550464630127
    5. '.strip' → logprob: -5.346550464630127
    6. ' ' → logprob: -5.721550464630127
    7. ' .' → logprob: -6.471550464630127
    8. '<|end|>' → logprob: -7.846550464630127
    9. '.endswith' → logprob: -8.596549987792969
    10. '<|end|>' → logprob: -8.596549987792969

Token 12: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.383322149515152
    2. ''' → logprob: -1.8833221197128296
    3. '""' → logprob: -2.133322238922119
    4. '''' → logprob: -3.258322238922119
    5. ' ""' → logprob: -5.758322238922119
    6. ' "' → logprob: -5.883322238922119
    7. ' ''' → logprob: -6.508322238922119
    8. ' '' → logprob: -6.758322238922119
    9. '"":' → logprob: -8.008321762084961
    10. ' ' → logprob: -8.383321762084961

Token 13: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5463233590126038
    2. '"' → logprob: -1.546323299407959
    3. 'exit' → logprob: -2.171323299407959
    4. 'quit' → logprob: -2.421323299407959
    5. 'break' → logprob: -6.421323299407959
    6. 'stop' → logprob: -6.421323299407959
    7. 'end' → logprob: -7.921323299407959
    8. '"":' → logprob: -8.421323776245117
    9. ' quit' → logprob: -8.671323776245117
    10. '"):' → logprob: -8.796323776245117

Token 14: ' ' (ID: 220)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.12747207283973694
    2. '"' → logprob: -2.127472162246704
    3. '"):' → logprob: -8.252471923828125
    4. '":
' → logprob: -8.752471923828125
    5. '\n' → logprob: -10.377471923828125
    6. '0' → logprob: -10.627471923828125
    7. ':' → logprob: -11.002471923828125
    8. '":
' → logprob: -11.252471923828125
    9. '")' → logprob: -11.627471923828125
    10. '"]:' → logprob: -12.127471923828125

Token 15: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.13358809053897858
    2. '"' → logprob: -2.8835880756378174
    3. '0' → logprob: -3.3835880756378174
    4. ' ' → logprob: -3.6335880756378174
    5. ' "' → logprob: -5.7585883140563965
    6. ' ":' → logprob: -5.7585883140563965
    7. '":
' → logprob: -6.6335883140563965
    8. '":
' → logprob: -7.7585883140563965
    9. '\n' → logprob: -8.383587837219238
    10. '"):' → logprob: -8.758587837219238

Token 16: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.016664711758494377
    2. '"' → logprob: -4.391664505004883
    3. '\n' → logprob: -6.391664505004883
    4. ':' → logprob: -6.641664505004883
    5. '":
' → logprob: -7.516664505004883
    6. '"):' → logprob: -8.391664505004883
    7. ' ":' → logprob: -8.891664505004883
    8. ' "' → logprob: -10.141664505004883
    9. '":
' → logprob: -10.141664505004883
    10. '")' → logprob: -10.391664505004883

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049692741595208645
    2. ':' → logprob: -6.379969120025635
    3. ' break' → logprob: -6.379969120025635
    4. '\n' → logprob: -7.504969120025635
    5. '   ' → logprob: -7.754969120025635
    6. '
' → logprob: -9.379969596862793
    7. '     ' → logprob: -9.629969596862793
    8. '        
' → logprob: -9.754969596862793
    9. ':
' → logprob: -9.754969596862793
    10. '    ' → logprob: -9.879969596862793

Token 18: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5789609551429749
    2. ' break' → logprob: -0.8289609551429749
    3. 'break' (adapté à ' break') → logprob: -6.07896089553833
    4. '   ' → logprob: -7.57896089553833
    5. '	break' → logprob: -8.703961372375488
    6. '\n' → logprob: -10.953961372375488
    7. '           ' → logprob: -11.703961372375488
    8. '_break' → logprob: -12.453961372375488
    9. '```' → logprob: -12.578961372375488
    10. '    ' → logprob: -12.578961372375488

Token 19: '
' (ID: 198)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.0450087785720825
    2. '   ' → logprob: -1.1700087785720825
    3. '
' → logprob: -1.4200087785720825
    4. '\n' → logprob: -2.670008659362793
    5. '  
' → logprob: -4.045008659362793
    6. '   
' → logprob: -5.920008659362793
    7. ' 
' → logprob: -6.295008659362793
    8. '<|end|>' → logprob: -6.545008659362793
    9. '\' → logprob: -7.420008659362793
    10. '        
' → logprob: -7.795008659362793

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06802447140216827
    2. '    
' → logprob: -3.0680243968963623
    3. '\n' → logprob: -5.068024635314941
    4. '
' → logprob: -5.193024635314941
    5. '  
' → logprob: -5.818024635314941
    6. '   
' → logprob: -6.568024635314941
    7. '<|end|>' → logprob: -7.443024635314941
    8. '  ' → logprob: -7.568024635314941
    9. ' ' → logprob: -7.818024635314941
    10. 'n' → logprob: -8.068024635314941

Token 21: ' n' (ID: 297)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.49805402755737305
    2. '   ' → logprob: -1.373054027557373
    3. '
' → logprob: -3.123054027557373
    4. '  
' → logprob: -3.248054027557373
    5. '\n' → logprob: -4.248054027557373
    6. ' 
' → logprob: -4.248054027557373
    7. '   
' → logprob: -4.373054027557373
    8. 'n' (adapté à ' n') → logprob: -5.373054027557373
    9. ' ' → logprob: -6.498054027557373
    10. '<|end|>' → logprob: -6.873054027557373

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026411423459649086
    2. ' ,' → logprob: -3.901411533355713
    3. ' =' → logprob: -5.401411533355713
    4. '=' → logprob: -7.651411533355713
    5. ' ' → logprob: -8.151411056518555
    6. 'um' → logprob: -8.776411056518555
    7. 'umbers' → logprob: -9.276411056518555
    8. '   ' → logprob: -10.151411056518555
    9. 'umber' → logprob: -10.401411056518555
    10. ',a' → logprob: -10.651411056518555

Token 23: ' S' (ID: 336)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8309975266456604
    2. ' m' → logprob: -0.9559975266456604
    3. ' ' → logprob: -1.8309974670410156
    4. 's' → logprob: -5.205997467041016
    5. ' k' → logprob: -5.455997467041016
    6. 'space' → logprob: -5.705997467041016
    7. ' space' → logprob: -7.205997467041016
    8. '    ' → logprob: -7.955997467041016
    9. ' =' → logprob: -7.955997467041016
    10. ' s' → logprob: -7.955997467041016

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03808211907744408
    2. '=' → logprob: -3.2880821228027344
    3. ',' → logprob: -10.663082122802734
    4. ' ' → logprob: -11.288082122802734
    5. ')' → logprob: -13.038082122802734
    6. '  ' → logprob: -14.663082122802734
    7. '=int' → logprob: -15.038082122802734
    8. '```' → logprob: -15.288082122802734
    9. '   ' → logprob: -15.538082122802734
    10. '=line' → logprob: -15.788082122802734

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006995139177888632
    2. ' line' → logprob: -5.50699520111084
    3. 'map' → logprob: -5.88199520111084
    4. 'line' → logprob: -10.00699520111084
    5. ' [' → logprob: -10.25699520111084
    6. ' list' → logprob: -10.63199520111084
    7. '[' → logprob: -11.63199520111084
    8. ' ' → logprob: -12.88199520111084
    9. '	map' → logprob: -13.38199520111084
    10. '[line' → logprob: -13.38199520111084

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0282956101000309
    2. '(' → logprob: -4.278295516967773
    3. '(str' → logprob: -4.278295516967773
    4. '(lambda' → logprob: -8.903295516967773
    5. '(input' → logprob: -11.903295516967773
    6. 'str' → logprob: -12.278295516967773
    7. '(eval' → logprob: -12.778295516967773
    8. '(list' → logprob: -12.778295516967773
    9. 'int' → logprob: -12.903295516967773
    10. '(
' → logprob: -13.028295516967773

Token 27: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.38448411226272583
    2. ',' → logprob: -1.259484052658081
    3. ',line' → logprob: -3.759484052658081
    4. ')' → logprob: -4.75948429107666
    5. ' line' → logprob: -6.50948429107666
    6. '(' → logprob: -6.63448429107666
    7. 'line' → logprob: -8.13448429107666
    8. '   ' → logprob: -9.38448429107666
    9. '	line' → logprob: -9.63448429107666
    10. '#line' → logprob: -9.88448429107666

Token 28: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.08901296555995941
    2. 'line' → logprob: -2.464012861251831
    3. ')' → logprob: -10.33901309967041
    4. '(line' → logprob: -11.08901309967041
    5. '	line' → logprob: -11.21401309967041
    6. '[line' → logprob: -12.71401309967041
    7. '=line' → logprob: -13.21401309967041
    8. '#line' → logprob: -13.33901309967041
    9. ' ' → logprob: -13.33901309967041
    10. '   ' → logprob: -13.46401309967041

Token 29: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.1639082282781601
    2. '.' → logprob: -1.9139082431793213
    3. '.strip' → logprob: -5.663908004760742
    4. ' .' → logprob: -9.538908004760742
    5. '.rstrip' → logprob: -9.788908004760742
    6. '().' → logprob: -10.413908004760742
    7. ')' → logprob: -10.663908004760742
    8. ').' → logprob: -11.163908004760742
    9. '.readline' → logprob: -11.663908004760742
    10. '.Split' → logprob: -13.913908004760742

Token 30: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2117711752653122
    2. '('' → logprob: -1.7117711305618286
    3. '()' → logprob: -4.836771011352539
    4. '("' → logprob: -7.086771011352539
    5. '(' → logprob: -7.211771011352539
    6. ')' → logprob: -7.586771011352539
    7. '()))' → logprob: -9.086771011352539
    8. '(','' → logprob: -9.086771011352539
    9. '())
' → logprob: -10.961771011352539
    10. '("("' → logprob: -11.336771011352539

Token 31: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6917699575424194
    2. '   ' → logprob: -1.8167699575424194
    3. '<|end|>' → logprob: -1.8167699575424194
    4. ')' → logprob: -1.9417699575424194
    5. '\n' → logprob: -2.066770076751709
    6. '
' → logprob: -3.691770076751709
    7. '[' → logprob: -3.816770076751709
    8. '    
' → logprob: -3.816770076751709
    9. ',' → logprob: -3.941770076751709
    10. '    ' → logprob: -4.066770076751709

Token 32: ' r' (ID: 428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1685737371444702
    2. 'n' → logprob: -1.5435737371444702
    3. '<|end|>' → logprob: -2.1685738563537598
    4. 'a' → logprob: -2.9185738563537598
    5. ' 
' → logprob: -2.9185738563537598
    6. '[' → logprob: -2.9185738563537598
    7. 's' → logprob: -3.5435738563537598
    8. ')' → logprob: -3.7935738563537598
    9. 'data' → logprob: -3.9185738563537598
    10. ' array' → logprob: -4.79357385635376

Token 33: ' =' (ID: 314)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7120622396469116
    2. ' =' → logprob: -1.7120622396469116
    3. 'ange' → logprob: -1.8370622396469116
    4. 'e' → logprob: -2.837062358856201
    5. 'a' → logprob: -3.962062358856201
    6. '=' → logprob: -3.962062358856201
    7. 'anges' → logprob: -4.337062358856201
    8. 's' → logprob: -4.462062358856201
    9. 'adius' → logprob: -4.962062358856201
    10. 'ead' → logprob: -5.337062358856201

Token 34: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8809968829154968
    2. ' S' → logprob: -1.7559969425201416
    3. ' []' → logprob: -1.7559969425201416
    4. ' ' → logprob: -2.7559969425201416
    5. '[' → logprob: -3.6309969425201416
    6. ' range' → logprob: -3.7559969425201416
    7. ' list' → logprob: -3.8809969425201416
    8. ' n' → logprob: -4.1309967041015625
    9. '0' → logprob: -4.2559967041015625
    10. 'S' → logprob: -4.3809967041015625

Token 35: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46308910846710205
    2. ' for' → logprob: -1.838089108467102
    3. '   ' → logprob: -2.4630889892578125
    4. ' ' → logprob: -3.5880889892578125
    5. '<|end|>' → logprob: -3.8380889892578125
    6. ' 
' → logprob: -3.9630889892578125
    7. '[' → logprob: -3.9630889892578125
    8. 'r' → logprob: -4.8380889892578125
    9. '    
' → logprob: -4.8380889892578125
    10. 'while' → logprob: -5.0880889892578125

Token 36: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.26806405186653137
    2. ' for' → logprob: -1.893064022064209
    3. '[' → logprob: -3.393064022064209
    4. ' ' → logprob: -3.643064022064209
    5. 'r' → logprob: -4.768064022064209
    6. 'while' → logprob: -5.643064022064209
    7. '   ' → logprob: -5.768064022064209
    8. ' 
' → logprob: -6.268064022064209
    9. ' while' → logprob: -6.768064022064209
    10. ' [' → logprob: -6.893064022064209

Token 37: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.624824583530426
    2. ' _' → logprob: -1.2498245239257812
    3. ' ' → logprob: -1.8748245239257812
    4. '_' → logprob: -3.7498245239257812
    5. ' range' → logprob: -7.499824523925781
    6. '  ' → logprob: -8.124824523925781
    7. 'i' → logprob: -8.249824523925781
    8. ' ‌' → logprob: -11.249824523925781
    9. 'range' → logprob: -11.499824523925781
    10. '_i' → logprob: -11.749824523925781

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011670070234686136
    2. 'in' → logprob: -6.876166820526123
    3. ' ' → logprob: -9.376167297363281
    4. '<|end|>' → logprob: -10.251167297363281
    5. 'range' → logprob: -11.376167297363281
    6. '  ' → logprob: -13.876167297363281
    7. '<|end|>' → logprob: -14.751167297363281
    8. ' range' → logprob: -14.751167297363281
    9. '	in' → logprob: -15.626167297363281
    10. 'n' → logprob: -15.626167297363281

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013563097454607487
    2. ' range' → logprob: -6.62635612487793
    3. 'r' → logprob: -11.62635612487793
    4. '	range' → logprob: -11.87635612487793
    5. 'ange' → logprob: -13.00135612487793
    6. 's' → logprob: -13.12635612487793
    7. 'rang' → logprob: -13.37635612487793
    8. '(range' → logprob: -13.37635612487793
    9. 'n' → logprob: -14.12635612487793
    10. '[' → logprob: -14.25135612487793

Token 40: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.19435429573059082
    2. ' n' → logprob: -1.9443542957305908
    3. '(' → logprob: -3.944354295730591
    4. ' (' → logprob: -4.694354057312012
    5. 'n' → logprob: -5.319354057312012
    6. ' ' → logprob: -9.694354057312012
    7. ' range' → logprob: -10.194354057312012
    8. '(range' → logprob: -11.319354057312012
    9. '(s' → logprob: -11.569354057312012
    10. '	n' → logprob: -11.944354057312012

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015586663503199816
    2. ')' → logprob: -7.126558780670166
    3. ' ):' → logprob: -7.626558780670166
    4. ':' → logprob: -9.126558303833008
    5. ',' → logprob: -9.626558303833008
    6. '):
' → logprob: -9.876558303833008
    7. '   ' → logprob: -10.626558303833008
    8. ' ' → logprob: -12.876558303833008
    9. ' )' → logprob: -13.126558303833008
    10. '():' → logprob: -13.501558303833008

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.776115894317627
    2. '   ' → logprob: -1.026115894317627
    3. ' ' → logprob: -2.526115894317627
    4. '    ' → logprob: -3.276115894317627
    5. ' r' → logprob: -3.276115894317627
    6. 'r' → logprob: -4.776115894317627
    7. ' 
' → logprob: -5.276115894317627
    8. '<|end|>' → logprob: -5.276115894317627
    9. '    
' → logprob: -6.151115894317627
    10. ' s' → logprob: -6.401115894317627

Token 43: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6737458109855652
    2. 'r' (adapté à ' r') → logprob: -1.42374587059021
    3. 'a' → logprob: -2.54874587059021
    4. ' a' → logprob: -2.79874587059021
    5. ' s' → logprob: -3.79874587059021
    6. ' x' → logprob: -3.79874587059021
    7. 'x' → logprob: -4.173745632171631
    8. ' l' → logprob: -4.173745632171631
    9. 's' → logprob: -5.048745632171631
    10. 'l' → logprob: -5.298745632171631

Token 44: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16052885353565216
    2. '.' → logprob: -1.9105288982391357
    3. ' .' → logprob: -9.160529136657715
    4. '.extend' → logprob: -9.910529136657715
    5. ',' → logprob: -10.285529136657715
    6. ' =' → logprob: -10.535529136657715
    7. ' +=' → logprob: -10.785529136657715
    8. '.i' → logprob: -11.035529136657715
    9. '.=' → logprob: -11.035529136657715
    10. '=' → logprob: -11.910529136657715

Token 45: '(int' (ID: 2742)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.8156206607818604
    2. '(tuple' → logprob: -1.1906206607818604
    3. '(int' → logprob: -1.5656206607818604
    4. '(' → logprob: -3.1906206607818604
    5. ' (' → logprob: -6.815620422363281
    6. '(float' → logprob: -7.690620422363281
    7. ' tuple' → logprob: -7.815620422363281
    8. 'tuple' → logprob: -7.940620422363281
    9. '(input' → logprob: -8.190620422363281
    10. '(map' → logprob: -8.190620422363281

Token 46: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04346418380737305
    2. '(' → logprob: -3.168464183807373
    3. '()' → logprob: -8.168464660644531
    4. '(
' → logprob: -9.293464660644531
    5. '(

' → logprob: -10.418464660644531
    6. '())' → logprob: -10.668464660644531
    7. ')' → logprob: -10.668464660644531
    8. ' ' → logprob: -12.793464660644531
    9. 'input' → logprob: -12.793464660644531
    10. ' (' → logprob: -13.043464660644531

Token 47: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.18188665807247162
    2. '())' → logprob: -1.8068866729736328
    3. '()' → logprob: -6.431886672973633
    4. '()))
' → logprob: -8.181886672973633
    5. '().' → logprob: -9.806886672973633
    6. '(' → logprob: -9.806886672973633
    7. '())
' → logprob: -10.181886672973633
    8. '()))

' → logprob: -10.306886672973633
    9. ' ())' → logprob: -11.056886672973633
    10. '))' → logprob: -11.681886672973633

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0722784996032715
    2. '
' → logprob: -1.3222784996032715
    3. '<|end|>' → logprob: -1.8222784996032715
    4. '    
' → logprob: -1.9472784996032715
    5. ' 
' → logprob: -3.4472784996032715
    6. '  
' → logprob: -4.5722784996032715
    7. '\n' → logprob: -4.6972784996032715
    8. ' ' → logprob: -5.0722784996032715
    9. '    ' → logprob: -5.3222784996032715
    10. 'r' → logprob: -5.6972784996032715

Token 49: ' count' (ID: 3605)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8302702307701111
    2. '   ' → logprob: -1.8302702903747559
    3. ' r' → logprob: -2.705270290374756
    4. 'sum' → logprob: -2.705270290374756
    5. '<|end|>' → logprob: -2.830270290374756
    6. 's' → logprob: -2.830270290374756
    7. ' ' → logprob: -3.705270290374756
    8. '    
' → logprob: -4.330270290374756
    9. 'dp' → logprob: -4.330270290374756
    10. 'total' → logprob: -4.455270290374756

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.994515061378479
    2. 's' → logprob: -1.119515061378479
    3. '_' → logprob: -1.869515061378479
    4. '=' → logprob: -2.3695149421691895
    5. '(' → logprob: -3.2445149421691895
    6. ' ' → logprob: -5.8695149421691895
    7. '[' → logprob: -5.9945149421691895
    8. '_map' → logprob: -6.3695149421691895
    9. '_r' → logprob: -6.3695149421691895
    10. ',' → logprob: -6.8695149421691895

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5788040161132812
    2. ' ' → logprob: -0.8288040161132812
    3. 'r' → logprob: -6.953804016113281
    4. ' r' → logprob: -7.578804016113281
    5. '{' → logprob: -7.828804016113281
    6. ' sum' → logprob: -8.078804016113281
    7. '{}' → logprob: -8.578804016113281
    8. ' {' → logprob: -8.953804016113281
    9. '[' → logprob: -9.453804016113281
    10. 'sum' → logprob: -9.578804016113281

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007017633877694607
    2. '{' → logprob: -6.257017612457275
    3. '{}' → logprob: -6.507017612457275
    4. 'sum' → logprob: -6.632017612457275
    5. '[' → logprob: -7.007017612457275
    6. 'r' → logprob: -7.382017612457275
    7. '1' → logprob: -8.007018089294434
    8. 'len' → logprob: -8.632018089294434
    9. 'dict' → logprob: -9.382018089294434
    10. 'S' → logprob: -10.632018089294434

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7215347290039062
    2. '<|end|>' → logprob: -0.7215347290039062
    3. ' 
' → logprob: -4.346534729003906
    4. ' for' → logprob: -5.096534729003906
    5. '<|end|>' → logprob: -5.596534729003906
    6. ' ' → logprob: -6.221534729003906
    7. 'for' → logprob: -6.971534729003906
    8. '    
' → logprob: -7.471534729003906
    9. '\n' → logprob: -8.221534729003906
    10. '  
' → logprob: -8.221534729003906

Token 54: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06483284384012222
    2. ' for' → logprob: -2.939832925796509
    3. 'r' → logprob: -6.06483268737793
    4. 'i' → logprob: -6.43983268737793
    5. 's' → logprob: -7.06483268737793
    6. 'sum' → logprob: -7.18983268737793
    7. '   ' → logprob: -7.31483268737793
    8. 'dp' → logprob: -7.56483268737793
    9. 'current' → logprob: -7.81483268737793
    10. 'while' → logprob: -7.81483268737793

Token 56: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07470382004976273
    2. ' r' → logprob: -3.0747039318084717
    3. ' s' → logprob: -4.824703693389893
    4. 'i' → logprob: -4.949703693389893
    5. 'r' → logprob: -5.949703693389893
    6. ' x' → logprob: -6.324703693389893
    7. ' ' → logprob: -6.324703693389893
    8. ' j' → logprob: -7.449703693389893
    9. ' range' → logprob: -7.449703693389893
    10. ' S' → logprob: -7.949703693389893

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005219413433223963
    2. ' ' → logprob: -5.505219459533691
    3. 'in' → logprob: -6.880219459533691
    4. '  ' → logprob: -9.630219459533691
    5. ',' → logprob: -11.380219459533691
    6. ' i' → logprob: -11.505219459533691
    7. 'n' → logprob: -12.005219459533691
    8. '<|end|>' → logprob: -12.505219459533691
    9. ' n' → logprob: -12.755219459533691
    10. ' range' → logprob: -12.880219459533691

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001002324279397726
    2. 'range' → logprob: -7.126002311706543
    3. ' r' → logprob: -9.001002311706543
    4. ' ' → logprob: -9.751002311706543
    5. 'r' → logprob: -12.251002311706543
    6. '   ' → logprob: -12.376002311706543
    7. '  ' → logprob: -12.626002311706543
    8. ' xrange' → logprob: -14.126002311706543
    9. '```' → logprob: -14.251002311706543
    10. '	range' → logprob: -14.376002311706543

Token 59: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.18439190089702606
    2. '(' → logprob: -1.8093918561935425
    3. ' n' → logprob: -5.559391975402832
    4. ' (' → logprob: -7.934391975402832
    5. ' ' → logprob: -8.684391975402832
    6. 'n' → logprob: -8.934391975402832
    7. '(len' → logprob: -9.184391975402832
    8. '(s' → logprob: -11.684391975402832
    9. '(range' → logprob: -12.684391975402832
    10. '(r' → logprob: -13.184391975402832

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00860984530299902
    2. '):
' → logprob: -5.508609771728516
    3. '-' → logprob: -5.633609771728516
    4. ' ):' → logprob: -8.008609771728516
    5. '+' → logprob: -8.508609771728516
    6. ')' → logprob: -8.883609771728516
    7. '   ' → logprob: -9.133609771728516
    8. ' -' → logprob: -9.258609771728516
    9. ' ' → logprob: -10.258609771728516
    10. ':' → logprob: -11.758609771728516

Token 61: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42105531692504883
    2. '<|end|>' → logprob: -1.4210553169250488
    3. '   ' → logprob: -2.796055316925049
    4. ' ' → logprob: -3.796055316925049
    5. '+' → logprob: -5.296055316925049
    6. '       ' → logprob: -5.921055316925049
    7. ' for' → logprob: -5.921055316925049
    8. ')' → logprob: -6.421055316925049
    9. ' :' → logprob: -6.671055316925049
    10. '  ' → logprob: -6.921055316925049

Token 62: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12401548773050308
    2. 'for' (adapté à ' for') → logprob: -2.3740155696868896
    3. ' if' → logprob: -4.3740153312683105
    4. '   ' → logprob: -5.1240153312683105
    5. '    ' → logprob: -6.1240153312683105
    6. 'if' → logprob: -6.8740153312683105
    7. ' ' → logprob: -7.3740153312683105
    8. '+' → logprob: -8.499015808105469
    9. ' range' → logprob: -8.499015808105469
    10. 'range' → logprob: -8.874015808105469

Token 63: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38443487882614136
    2. 'i' → logprob: -1.7594349384307861
    3. ' j' → logprob: -2.259434938430786
    4. 'j' → logprob: -3.384434938430786
    5. ' n' → logprob: -5.384434700012207
    6. 'n' → logprob: -6.259434700012207
    7. '   ' → logprob: -6.384434700012207
    8. '    ' → logprob: -8.634434700012207
    9. ' ' → logprob: -9.259434700012207
    10. '(i' → logprob: -9.384434700012207

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025157311465591192
    2. 'in' → logprob: -6.12751579284668
    3. ' range' → logprob: -9.12751579284668
    4. ' i' → logprob: -9.25251579284668
    5. 'range' → logprob: -10.00251579284668
    6. ' ' → logprob: -10.25251579284668
    7. '   ' → logprob: -10.62751579284668
    8. '    ' → logprob: -12.25251579284668
    9. '=i' → logprob: -12.87751579284668
    10. '	in' → logprob: -13.00251579284668

Token 65: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28306180238723755
    2. ' range' → logprob: -1.4080617427825928
    3. '(range' → logprob: -6.908061981201172
    4. 'i' → logprob: -7.658061981201172
    5. ' i' → logprob: -8.033061981201172
    6. '(i' → logprob: -9.783061981201172
    7. '   ' → logprob: -11.408061981201172
    8. '	range' → logprob: -11.783061981201172
    9. '(n' → logprob: -11.908061981201172
    10. 'n' → logprob: -12.033061981201172

Token 66: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2830473482608795
    2. '(n' → logprob: -1.4080473184585571
    3. '(' → logprob: -7.908047199249268
    4. ' (' → logprob: -7.908047199249268
    5. '(range' → logprob: -7.908047199249268
    6. 'i' → logprob: -8.408047676086426
    7. 'range' → logprob: -8.408047676086426
    8. ' range' → logprob: -9.033047676086426
    9. '   ' → logprob: -9.658047676086426
    10. ' i' → logprob: -9.783047676086426

Token 67: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06829117983579636
    2. ' +' → logprob: -2.943291187286377
    3. ',' → logprob: -4.443291187286377
    4. ' ,' → logprob: -6.693291187286377
    5. '   ' → logprob: -8.693290710449219
    6. ')' → logprob: -9.943290710449219
    7. '<|end|>' → logprob: -10.568290710449219
    8. ' ' → logprob: -11.068290710449219
    9. '1' → logprob: -11.193290710449219
    10. ',n' → logprob: -11.568290710449219

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015095012495294213
    2. ' ' → logprob: -6.501509666442871
    3. '2' → logprob: -12.251509666442871
    4. '   ' → logprob: -13.876509666442871
    5. '<|end|>' → logprob: -14.376509666442871
    6. '0' → logprob: -14.626509666442871
    7. ')' → logprob: -16.251508712768555
    8. '```' → logprob: -16.376508712768555
    9. '  ' → logprob: -16.501508712768555
    10. 'n' → logprob: -16.876508712768555

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016682932619005442
    2. ' ' → logprob: -8.750166893005371
    3. '   ' → logprob: -12.375166893005371
    4. '2' → logprob: -13.625166893005371
    5. '0' → logprob: -14.250166893005371
    6. '  ' → logprob: -14.312666893005371
    7. '    ' → logprob: -15.750166893005371
    8. '     ' → logprob: -15.750166893005371
    9. '       ' → logprob: -15.812666893005371
    10. 'n' → logprob: -15.812666893005371

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021435614675283432
    2. ',n' → logprob: -3.896435499191284
    3. ' ,' → logprob: -7.271435737609863
    4. 'n' → logprob: -8.896435737609863
    5. '   ' → logprob: -10.271435737609863
    6. ' n' → logprob: -11.521435737609863
    7. ' ' → logprob: -12.646435737609863
    8. '    ' → logprob: -13.396435737609863
    9. '<n' → logprob: -13.521435737609863
    10. '  ' → logprob: -13.896435737609863

Token 71: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25198179483413696
    2. ' n' → logprob: -1.5019817352294922
    3. ' ' → logprob: -10.501981735229492
    4. '   ' → logprob: -11.126981735229492
    5. '	n' → logprob: -12.251981735229492
    6. '    ' → logprob: -13.251981735229492
    7. '  ' → logprob: -13.501981735229492
    8. ')' → logprob: -14.126981735229492
    9. ')n' → logprob: -14.626981735229492
    10. '<|end|>' → logprob: -15.126981735229492

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003411201061680913
    2. '):
' → logprob: -6.253411293029785
    3. '+' → logprob: -6.628411293029785
    4. '   ' → logprob: -10.003411293029785
    5. ':' → logprob: -10.253411293029785
    6. ' ):' → logprob: -10.878411293029785
    7. ')' → logprob: -11.503411293029785
    8. '       ' → logprob: -11.753411293029785
    9. ' +' → logprob: -11.878411293029785
    10. 'n' → logprob: -12.003411293029785

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7683534622192383
    2. '       ' → logprob: -0.8933534622192383
    3. ':' → logprob: -2.3933534622192383
    4. ' ' → logprob: -4.018353462219238
    5. '<|end|>' → logprob: -5.268353462219238
    6. '   ' → logprob: -5.643353462219238
    7. ' if' → logprob: -5.893353462219238
    8. ' and' → logprob: -6.643353462219238
    9. '               ' → logprob: -7.143353462219238
    10. ',' → logprob: -7.893353462219238

Token 74: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7406312823295593
    2. ' if' → logprob: -0.8656312823295593
    3. '           ' → logprob: -2.740631341934204
    4. '               ' → logprob: -4.240631103515625
    5. '            ' → logprob: -4.365631103515625
    6. 'if' (adapté à ' if') → logprob: -4.740631103515625
    7. ' 
' → logprob: -7.740631103515625
    8. '                ' → logprob: -8.240631103515625
    9. '    ' → logprob: -8.615631103515625
    10. '  ' → logprob: -8.865631103515625

Token 75: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.029980262741446495
    2. 'r' → logprob: -3.529980182647705
    3. ' ' → logprob: -9.154980659484863
    4. ' abs' → logprob: -9.404980659484863
    5. ' S' → logprob: -11.654980659484863
    6. ' (' → logprob: -11.779980659484863
    7. 'abs' → logprob: -12.029980659484863
    8. '   ' → logprob: -12.029980659484863
    9. '    ' → logprob: -12.404980659484863
    10. '	r' → logprob: -13.154980659484863

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14289402961730957
    2. '[j' → logprob: -2.0178940296173096
    3. '[' → logprob: -8.51789379119873
    4. 'j' → logprob: -12.51789379119873
    5. '[k' → logprob: -12.51789379119873
    6. 'i' → logprob: -12.64289379119873
    7. ' [' → logprob: -13.26789379119873
    8. '[I' → logprob: -13.89289379119873
    9. '   ' → logprob: -14.01789379119873
    10. '```' → logprob: -14.39289379119873

Token 77: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34887370467185974
    2. '+' → logprob: -1.2238737344741821
    3. '>' → logprob: -9.09887409210205
    4. ' ' → logprob: -9.09887409210205
    5. ' ==' → logprob: -10.34887409210205
    6. ' <' → logprob: -10.47387409210205
    7. '<' → logprob: -10.59887409210205
    8. '+r' → logprob: -10.72387409210205
    9. ')' → logprob: -10.97387409210205
    10. ' plus' → logprob: -11.59887409210205

Token 78: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5236302614212036
    2. ' +' → logprob: -0.8986302614212036
    3. '<' → logprob: -8.648630142211914
    4. '>' → logprob: -9.148630142211914
    5. '+r' → logprob: -10.023630142211914
    6. ' <' → logprob: -10.273630142211914
    7. '==' → logprob: -10.273630142211914
    8. ' ' → logprob: -10.523630142211914
    9. ' ==' → logprob: -10.648630142211914
    10. '-' → logprob: -11.398630142211914

Token 79: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.31332069635391235
    2. 'r' → logprob: -1.3133206367492676
    3. ' ' → logprob: -10.313321113586426
    4. '    ' → logprob: -11.938321113586426
    5. '"' → logprob: -12.063321113586426
    6. '<|end|>' → logprob: -12.313321113586426
    7. '  ' → logprob: -13.438321113586426
    8. '   ' → logprob: -13.688321113586426
    9. ' "' → logprob: -13.813321113586426
    10. '<|end|>' → logprob: -14.188321113586426

Token 80: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0022187726572155952
    2. '[' → logprob: -6.127218723297119
    3. ' [' → logprob: -11.377219200134277
    4. 'j' → logprob: -12.627219200134277
    5. '[i' → logprob: -12.752219200134277
    6. '[
' → logprob: -12.752219200134277
    7. ' ' → logprob: -13.002219200134277
    8. '[js' → logprob: -13.502219200134277
    9. '   ' → logprob: -13.752219200134277
    10. '```' → logprob: -13.752219200134277

Token 81: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10738261789083481
    2. '==' → logprob: -2.8573825359344482
    3. ' <=' → logprob: -3.2323825359344482
    4. '<=' → logprob: -6.357382774353027
    5. '>' → logprob: -6.732382774353027
    6. ' >' → logprob: -7.732382774353027
    7. ' ' → logprob: -7.857382774353027
    8. ' <' → logprob: -7.982382774353027
    9. ')' → logprob: -8.107382774353027
    10. '=' → logprob: -9.357382774353027

Token 82: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13678108155727386
    2. '==' → logprob: -2.3867809772491455
    3. ' <=' → logprob: -3.5117809772491455
    4. '<=' → logprob: -5.511781215667725
    5. '<' → logprob: -7.136781215667725
    6. ' <' → logprob: -7.136781215667725
    7. ' ' → logprob: -8.511780738830566
    8. '>' → logprob: -9.261780738830566
    9. ' >' → logprob: -10.261780738830566
    10. '=' → logprob: -10.386780738830566

Token 83: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.03858989104628563
    2. 'S' → logprob: -3.2885899543762207
    3. ' ' → logprob: -7.663589954376221
    4. '    ' → logprob: -9.663589477539062
    5. ' ' → logprob: -11.913589477539062
    6. '	S' → logprob: -13.288589477539062
    7. '<|end|>' → logprob: -13.413589477539062
    8. '   ' → logprob: -13.788589477539062
    9. '  ' → logprob: -13.913589477539062
    10. 's' → logprob: -14.663589477539062

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007337473216466606
    2. ':
' → logprob: -7.250733852386475
    3. ' :' → logprob: -11.500733375549316
    4. '):' → logprob: -11.750733375549316
    5. '       ' → logprob: -12.875733375549316
    6. '           ' → logprob: -13.750733375549316
    7. '   ' → logprob: -14.750733375549316
    8. ')' → logprob: -14.750733375549316
    9. ':
' → logprob: -15.000733375549316
    10. '.' → logprob: -15.250733375549316

Token 85: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004293580132070929
    2. '           ' → logprob: -8.500429153442383
    3. '\n' → logprob: -9.875429153442383
    4. '                   ' → logprob: -10.125429153442383
    5. '                
' → logprob: -10.375429153442383
    6. '
' → logprob: -11.000429153442383
    7. '                ' → logprob: -11.125429153442383
    8. '              ' → logprob: -11.375429153442383
    9. '       ' → logprob: -11.375429153442383
    10. '             ' → logprob: -12.000429153442383

Token 86: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5171553492546082
    2. '                   ' → logprob: -1.017155408859253
    3. ' count' → logprob: -3.892155408859253
    4. 'count' → logprob: -4.017155170440674
    5. '                ' → logprob: -6.767155170440674
    6. ' ' → logprob: -6.892155170440674
    7. '           ' → logprob: -7.392155170440674
    8. '   ' → logprob: -8.767155647277832
    9. '                       ' → logprob: -8.767155647277832
    10. '              ' → logprob: -9.142155647277832

Token 87: ' 判' (ID: 178825)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.25872930884361267
    2. ' count' → logprob: -2.0087292194366455
    3. '               ' → logprob: -2.8837292194366455
    4. '                   ' → logprob: -3.3837292194366455
    5. '           ' → logprob: -6.633729457855225
    6. ' ' → logprob: -7.008729457855225
    7. '   ' → logprob: -7.508729457855225
    8. '                ' → logprob: -8.633728981018066
    9. '                       ' → logprob: -9.133728981018066
    10. '       ' → logprob: -9.383728981018066

Token 88: '定' (ID: 8745)
  Prédit: '断'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '断' → logprob: -0.29048165678977966
    2. '定' → logprob: -1.540481686592102
    3. '\xe6\x96' → logprob: -3.6654815673828125
    4. ' ' → logprob: -5.5404815673828125
    5. 'break' → logprob: -5.6654815673828125
    6. '明' → logprob: -6.1654815673828125
    7. 'り' → logprob: -7.1654815673828125
    8. '別' → logprob: -7.7904815673828125
    9. 'る' → logprob: -8.540481567382812
    10. ' break' → logprob: -8.915481567382812

Token 89: '：' (ID: 1817)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5631725788116455
    2. '               ' → logprob: -0.9381725788116455
    3. ' count' → logprob: -4.313172340393066
    4. '           ' → logprob: -4.313172340393066
    5. '                   ' → logprob: -5.063172340393066
    6. '   ' → logprob: -5.813172340393066
    7. '       ' → logprob: -6.438172340393066
    8. ' ' → logprob: -7.938172340393066
    9. '	count' → logprob: -7.938172340393066
    10. '              ' → logprob: -9.438172340393066

Token 90: 'ペ' (ID: 36454)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3710365891456604
    2. 'count' → logprob: -1.6210365295410156
    3. '               ' → logprob: -2.6210365295410156
    4. '                   ' → logprob: -3.4960365295410156
    5. '                ' → logprob: -6.246036529541016
    6. ' ' → logprob: -6.746036529541016
    7. ' break' → logprob: -6.871036529541016
    8. '   ' → logprob: -7.121036529541016
    9. '           ' → logprob: -7.121036529541016
    10. '	count' → logprob: -7.371036529541016

Token 91: 'ア' (ID: 10398)
  Prédit: 'ア'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ア' → logprob: -0.0009545749635435641
    2. '```' → logprob: -8.000954627990723
    3. 'アル' → logprob: -8.500954627990723
    4. 'ン' → logprob: -8.500954627990723
    5. '	' → logprob: -10.875954627990723
    6. '``' → logprob: -10.875954627990723
    7. 'あ' → logprob: -10.875954627990723
    8. 'a' → logprob: -11.000954627990723
    9. '
' → logprob: -11.250954627990723
    10. '
' → logprob: -11.375954627990723

Token 92: 'の' (ID: 3385)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10972860455513
    2. 'を' → logprob: -3.1097285747528076
    3. '               ' → logprob: -3.7347285747528076
    4. 'の' → logprob: -4.859728813171387
    5. ' count' → logprob: -4.859728813171387
    6. '           ' → logprob: -4.859728813171387
    7. 'が' → logprob: -6.109728813171387
    8. ' =' → logprob: -6.234728813171387
    9. '                   ' → logprob: -6.484728813171387
    10. '=' → logprob: -6.609728813171387

Token 93: '2' (ID: 17)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.28259482979774475
    2. '数' → logprob: -1.9075947999954224
    3. '重' → logprob: -3.657594919204712
    4. '存在' → logprob: -3.782594919204712
    5. 'カ' → logprob: -4.032594680786133
    6. ' count' → logprob: -6.032594680786133
    7. 'sum' → logprob: -6.032594680786133
    8. '間' → logprob: -6.282594680786133
    9. '要' → logprob: -6.532594680786133
    10. 'か' → logprob: -6.532594680786133

Token 94: '人' (ID: 1995)
  Prédit: 'つ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'つ' → logprob: -0.1878366619348526
    2. '数' → logprob: -2.0628366470336914
    3. '個' → logprob: -4.812836647033691
    4. 'の' → logprob: -4.937836647033691
    5. 'を' → logprob: -5.437836647033691
    6. '           ' → logprob: -5.437836647033691
    7. 'が' → logprob: -5.687836647033691
    8. '               ' → logprob: -5.812836647033691
    9. '人' → logprob: -5.937836647033691
    10. '回' → logprob: -6.187836647033691

Token 95: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.712781548500061
    2. '               ' → logprob: -1.837781548500061
    3. 'を' → logprob: -2.2127814292907715
    4. '                   ' → logprob: -2.5877814292907715
    5. 'count' → logprob: -2.5877814292907715
    6. 'が' → logprob: -3.2127814292907715
    7. 'は' → logprob: -4.5877814292907715
    8. '   ' → logprob: -4.8377814292907715
    9. ' の' → logprob: -5.3377814292907715
    10. ' を' → logprob: -5.5877814292907715

Token 96: '魔' (ID: 60266)
  Prédit: '年'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '年' → logprob: -0.9857384562492371
    2. '身' → logprob: -2.485738515853882
    3. '人数' → logprob: -2.610738515853882
    4. '得' → logprob: -3.110738515853882
    5. '合' → logprob: -3.235738515853882
    6. 'score' → logprob: -3.485738515853882
    7. '役' → logprob: -3.735738515853882
    8. 'count' → logprob: -3.860738515853882
    9. '体' → logprob: -3.985738515853882
    10. '性' → logprob: -4.110738277435303

Token 97: '力' (ID: 11343)
  Prédit: '法'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '法' → logprob: -0.28594109416007996
    2. '力' → logprob: -1.4109411239624023
    3. '力量' → logprob: -7.285941123962402
    4. '術' → logprob: -7.410941123962402
    5. '剤' → logprob: -7.410941123962402
    6. 'r' → logprob: -8.160941123962402
    7. '력을' → logprob: -8.160941123962402
    8. 'ジ' → logprob: -8.410941123962402
    9. '력이' → logprob: -8.410941123962402
    10. '導' → logprob: -8.535941123962402

Token 98: 'が' (ID: 6632)
  Prédit: 'が'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.41601240634918213
    2. 'の' → logprob: -2.1660122871398926
    3. 'を' → logprob: -2.4160122871398926
    4. '>' → logprob: -2.9160122871398926
    5. 'は' → logprob: -3.7910122871398926
    6. '=' → logprob: -4.166012287139893
    7. '>=' → logprob: -4.791012287139893
    8. ' >' → logprob: -5.166012287139893
    9. '<' → logprob: -5.416012287139893
    10. ' が' → logprob: -5.541012287139893

Token 99: '等' (ID: 11167)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0011547803878784
    2. '1' → logprob: -1.2511547803878784
    3. 'count' → logprob: -2.126154899597168
    4. 'r' → logprob: -2.751154899597168
    5. ' ' → logprob: -4.001154899597168
    6. '0' → logprob: -4.001154899597168
    7. 'equal' → logprob: -4.001154899597168
    8. ' S' → logprob: -4.251154899597168
    9. 'True' → logprob: -4.501154899597168
    10. '100' → logprob: -4.501154899597168

Token 100: 'しく' (ID: 68697)
  Prédit: 'しく'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'しく' → logprob: -0.617760956287384
    2. 'しい' → logprob: -0.867760956287384
    3. '=' → logprob: -3.8677608966827393
    4. 'し' → logprob: -4.242761135101318
    5. 'い' → logprob: -6.117761135101318
    6. 'く' → logprob: -6.492761135101318
    7. ' ' → logprob: -6.992761135101318
    8. 'しか' → logprob: -8.11776065826416
    9. '==' → logprob: -8.61776065826416
    10. '-' → logprob: -9.24276065826416

Token 101: 'ない' (ID: 47592)
  Prédit: 'ない'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ない' → logprob: -0.10044442862272263
    2. 'な' → logprob: -2.7254443168640137
    3. 'なら' → logprob: -4.725444316864014
    4. 'なく' → logprob: -5.225444316864014
    5. 'なる' → logprob: -5.225444316864014
    6. '0' → logprob: -6.225444316864014
    7. '、' → logprob: -6.225444316864014
    8. 'ありません' → logprob: -6.350444316864014
    9. 'True' → logprob: -7.725444316864014
    10. ' ' → logprob: -7.850444316864014

Token 102: 'こと' (ID: 53217)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1714814156293869
    2. '               ' → logprob: -1.9214813709259033
    3. ' or' → logprob: -5.546481609344482
    4. 'and' → logprob: -6.296481609344482
    5. '           ' → logprob: -6.421481609344482
    6. '                   ' → logprob: -6.546481609344482
    7. ':' → logprob: -7.421481609344482
    8. '                ' → logprob: -7.546481609344482
    9. ' if' → logprob: -8.046481132507324
    10. '<|end|>' → logprob: -8.171481132507324

Token 103: '、' (ID: 1395)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026045041158795357
    2. '               ' → logprob: -3.901045083999634
    3. 'and' → logprob: -5.401044845581055
    4. '                   ' → logprob: -8.276044845581055
    5. '                ' → logprob: -8.526044845581055
    6. ' or' → logprob: -9.151044845581055
    7. ':' → logprob: -9.276044845581055
    8. '           ' → logprob: -9.276044845581055
    9. ',' → logprob: -9.651044845581055
    10. '              ' → logprob: -10.026044845581055

Token 104: 'ど' (ID: 18524)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015421224758028984
    2. ' and' → logprob: -4.515421390533447
    3. '                ' → logprob: -6.390421390533447
    4. 'and' → logprob: -7.265421390533447
    5. ' ' → logprob: -7.890421390533447
    6. ' if' → logprob: -8.140420913696289
    7. ' continue' → logprob: -8.265420913696289
    8. '<|end|>' → logprob: -8.390420913696289
    9. ' not' → logprob: -8.515420913696289
    10. '              ' → logprob: -8.640420913696289

Token 105: 'ちら' (ID: 67637)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6070352792739868
    2. '               ' → logprob: -2.7320351600646973
    3. 'ら' → logprob: -2.7320351600646973
    4. '                   ' → logprob: -2.8570351600646973
    5. ' not' → logprob: -3.1070351600646973
    6. 'つ' → logprob: -3.9820351600646973
    7. 'が' → logprob: -4.107035160064697
    8. 'は' → logprob: -4.357035160064697
    9. '       ' → logprob: -4.482035160064697
    10. 'と' → logprob: -4.482035160064697

Token 106: 'か' (ID: 7128)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.1298013925552368
    2. 'の' → logprob: -1.7548013925552368
    3. '<|end|>' → logprob: -2.1298012733459473
    4. '!=' → logprob: -2.5048012733459473
    5. ' not' → logprob: -2.6298012733459473
    6. 'か' → logprob: -3.1298012733459473
    7. ' ' → logprob: -3.7548012733459473
    8. 'not' → logprob: -3.8798012733459473
    9. 'も' → logprob: -4.004801273345947
    10. 'から' → logprob: -4.379801273345947

Token 107: 'が' (ID: 6632)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.34187042713165283
    2. 'が' → logprob: -1.7168704271316528
    3. 'だけ' → logprob: -3.3418703079223633
    4. '   ' → logprob: -3.7168703079223633
    5. 'のみ' → logprob: -4.966870307922363
    6. 'も' → logprob: -5.216870307922363
    7. '==' → logprob: -5.341870307922363
    8. 'か' → logprob: -5.716870307922363
    9. 'は' → logprob: -5.966870307922363
    10. '0' → logprob: -6.091870307922363

Token 108: '大' (ID: 1640)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13806544244289398
    2. 'S' → logprob: -2.7630653381347656
    3. '1' → logprob: -3.5130653381347656
    4. 'r' → logprob: -5.013065338134766
    5. ' ' → logprob: -5.138065338134766
    6. '100' → logprob: -5.388065338134766
    7. ' S' → logprob: -5.388065338134766
    8. 's' → logprob: -5.888065338134766
    9. '2' → logprob: -6.513065338134766
    10. '   ' → logprob: -6.763065338134766

Token 109: 'き' (ID: 11852)
  Prédit: 'き'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.07655376195907593
    2. '切' → logprob: -3.2015538215637207
    3. '0' → logprob: -3.8265538215637207
    4. '1' → logprob: -5.326553821563721
    5. '丈夫' → logprob: -6.576553821563721
    6. 'S' → logprob: -7.201553821563721
    7. '```' → logprob: -7.326553821563721
    8. '事' → logprob: -7.576553821563721
    9. '好き' → logprob: -8.326553344726562
    10. '幅' → logprob: -8.701553344726562

Token 110: 'い' (ID: 3826)
  Prédit: 'い'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.02576230652630329
    2. 'く' → logprob: -3.7757623195648193
    3. 'な' → logprob: -7.77576208114624
    4. '0' → logprob: -7.77576208114624
    5. '1' → logprob: -7.90076208114624
    6. 'さ' → logprob: -8.025762557983398
    7. 'かった' → logprob: -8.025762557983398
    8. 'け' → logprob: -8.150762557983398
    9. '```' → logprob: -9.900762557983398
    10. ' than' → logprob: -10.025762557983398

Token 111: 'こと' (ID: 53217)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5993285179138184
    2. ' and' → logprob: -1.0993285179138184
    3. ' than' → logprob: -3.3493285179138184
    4. ',' → logprob: -3.5993285179138184
    5. ':' → logprob: -4.224328517913818
    6. '<|end|>' → logprob: -4.224328517913818
    7. ' then' → logprob: -5.099328517913818
    8. 'than' → logprob: -5.474328517913818
    9. ')' → logprob: -5.724328517913818
    10. '):' → logprob: -6.224328517913818

Token 112: 'が' (ID: 6632)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10944357514381409
    2. '               ' → logprob: -2.9844436645507812
    3. ':' → logprob: -3.7344436645507812
    4. 'and' → logprob: -3.9844436645507812
    5. '                ' → logprob: -6.234443664550781
    6. '                   ' → logprob: -6.234443664550781
    7. ',' → logprob: -6.234443664550781
    8. ' ' → logprob: -6.859443664550781
    9. '<|end|>' → logprob: -7.234443664550781
    10. '           ' → logprob: -7.609443664550781

Token 113: '必要' (ID: 125586)
  Prédit: 'ある'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ある' → logprob: -1.2189801931381226
    2. 'true' → logprob: -1.7189801931381226
    3. 'True' → logprob: -2.093980312347412
    4. '               ' → logprob: -2.593980312347412
    5. '必要' → logprob: -2.593980312347412
    6. 'あります' → logprob: -2.968980312347412
    7. '           ' → logprob: -3.468980312347412
    8. 'ない' → logprob: -3.968980312347412
    9. '条件' → logprob: -4.218980312347412
    10. '判' → logprob: -4.343980312347412

Token 114: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07865025848150253
    2. ' and' → logprob: -2.7036502361297607
    3. '                   ' → logprob: -6.32865047454834
    4. '                ' → logprob: -6.45365047454834
    5. '           ' → logprob: -6.82865047454834
    6. ' if' → logprob: -6.95365047454834
    7. ':' → logprob: -6.95365047454834
    8. 'and' → logprob: -7.07865047454834
    9. ' ' → logprob: -7.70365047454834
    10. '<|end|>' → logprob: -8.45365047454834

Token 115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009690692648291588
    2. '           ' → logprob: -6.009690761566162
    3. '                ' → logprob: -6.009690761566162
    4. '<|end|>' → logprob: -6.134690761566162
    5. ' ' → logprob: -6.884690761566162
    6. '                   ' → logprob: -7.384690761566162
    7. ' if' → logprob: -8.384690284729004
    8. '       ' → logprob: -8.509690284729004
    9. '            ' → logprob: -9.384690284729004
    10. '   ' → logprob: -9.759690284729004

Token 116: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7102896571159363
    2. 'if' (adapté à ' if') → logprob: -0.8352896571159363
    3. '               ' → logprob: -2.710289716720581
    4. 'continue' → logprob: -5.710289478302002
    5. ' continue' → logprob: -6.210289478302002
    6. 'count' → logprob: -6.210289478302002
    7. '           ' → logprob: -7.960289478302002
    8. '   ' → logprob: -8.46028995513916
    9. '       ' → logprob: -8.96028995513916
    10. ' count' → logprob: -9.46028995513916

Token 117: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.062038373202085495
    2. 'r' → logprob: -2.8120384216308594
    3. '   ' → logprob: -10.56203842163086
    4. ' ' → logprob: -11.31203842163086
    5. '                   ' → logprob: -11.93703842163086
    6. ' (' → logprob: -12.18703842163086
    7. '(r' → logprob: -12.18703842163086
    8. '    ' → logprob: -13.18703842163086
    9. ' i' → logprob: -13.31203842163086
    10. '0' → logprob: -13.56203842163086

Token 118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023882099776528776
    2. '[' → logprob: -8.875238418579102
    3. '[j' → logprob: -9.375238418579102
    4. ' [' → logprob: -12.125238418579102
    5. '[I' → logprob: -13.000238418579102
    6. '][' → logprob: -13.750238418579102
    7. '[k' → logprob: -13.875238418579102
    8. ')[' → logprob: -14.250238418579102
    9. 'i' → logprob: -14.500238418579102
    10. '[
' → logprob: -14.750238418579102

Token 119: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8232473731040955
    2. '!=' → logprob: -0.8232473731040955
    3. '>' → logprob: -2.4482474327087402
    4. ' >' → logprob: -4.19824743270874
    5. '<' → logprob: -4.32324743270874
    6. ' <' → logprob: -5.19824743270874
    7. ' ' → logprob: -7.57324743270874
    8. ']' → logprob: -7.94824743270874
    9. '<>' → logprob: -8.323246955871582
    10. ']!=' → logprob: -8.448246955871582

Token 120: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7459679841995239
    2. '!=' → logprob: -0.8709679841995239
    3. '<' → logprob: -3.1209678649902344
    4. '>' → logprob: -3.3709678649902344
    5. ' <' → logprob: -3.9959678649902344
    6. ' >' → logprob: -4.620967864990234
    7. '!' → logprob: -8.870967864990234
    8. ' ' → logprob: -9.245967864990234
    9. '<>' → logprob: -9.745967864990234
    10. ' !' → logprob: -10.995967864990234

Token 121: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008699662983417511
    2. ' r' → logprob: -4.758699893951416
    3. ' ' → logprob: -10.133699417114258
    4. 'S' → logprob: -11.008699417114258
    5. '0' → logprob: -11.133699417114258
    6. '   ' → logprob: -11.883699417114258
    7. ' S' → logprob: -13.133699417114258
    8. '  ' → logprob: -13.758699417114258
    9. '           ' → logprob: -14.446199417114258
    10. '	r' → logprob: -14.508699417114258

Token 122: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0011815387988463044
    2. 'j' → logprob: -6.751181602478027
    3. '[i' → logprob: -12.251181602478027
    4. '```' → logprob: -13.001181602478027
    5. '[' → logprob: -13.876181602478027
    6. ' [' → logprob: -14.376181602478027
    7. '	j' → logprob: -14.751181602478027
    8. ']' → logprob: -14.751181602478027
    9. ' j' → logprob: -14.876181602478027
    10. '   ' → logprob: -15.251181602478027

Token 123: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.204075425863266
    2. ' and' → logprob: -1.9540754556655884
    3. '):
' → logprob: -3.454075336456299
    4. ')' → logprob: -5.079075336456299
    5. 'and' → logprob: -5.704075336456299
    6. ':' → logprob: -7.204075336456299
    7. ' ):' → logprob: -7.954075336456299
    8. '               ' → logprob: -8.579075813293457
    9. '）' → logprob: -9.579075813293457
    10. '                   ' → logprob: -9.579075813293457

Token 124: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002575305523350835
    2. ':' → logprob: -6.877575397491455
    3. '               ' → logprob: -7.252575397491455
    4. ':
' → logprob: -7.627575397491455
    5. ' and' → logprob: -8.877574920654297
    6. '                       ' → logprob: -9.377574920654297
    7. ',' → logprob: -10.377574920654297
    8. '                  ' → logprob: -11.502574920654297
    9. 'count' → logprob: -11.502574920654297
    10. '                    
' → logprob: -11.627574920654297

Token 125: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.10158447176218033
    2. '                       ' → logprob: -2.4765844345092773
    3. ' count' → logprob: -4.976584434509277
    4. '                   ' → logprob: -5.226584434509277
    5. '               ' → logprob: -8.726584434509277
    6. '   ' → logprob: -10.726584434509277
    7. '                               ' → logprob: -10.851584434509277
    8. '       ' → logprob: -10.976584434509277
    9. '```' → logprob: -10.976584434509277
    10. ' ' → logprob: -11.476584434509277

Token 126: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.43091294169425964
    2. '+=' → logprob: -1.055912971496582
    3. '+' → logprob: -6.430912971496582
    4. '                   ' → logprob: -8.555912971496582
    5. ']+=' → logprob: -9.055912971496582
    6. '                    ' → logprob: -9.805912971496582
    7. '<|end|>' → logprob: -9.930912971496582
    8. '    ' → logprob: -10.180912971496582
    9. '   ' → logprob: -10.680912971496582
    10. '               ' → logprob: -10.805912971496582

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004324573092162609
    2. ' ' → logprob: -7.75043249130249
    3. '   ' → logprob: -14.750432014465332
    4. '                   ' → logprob: -14.750432014465332
    5. '           ' → logprob: -15.250432014465332
    6. '2' → logprob: -15.875432014465332
    7. '               ' → logprob: -16.50043296813965
    8. '                       ' → logprob: -16.62543296813965
    9. '１' → logprob: -16.62543296813965
    10. 'count' → logprob: -17.06293296813965

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. '2' → logprob: -15.375041007995605
    4. '   ' → logprob: -16.62504005432129
    5. '１' → logprob: -16.87504005432129
    6. '0' → logprob: -17.18754005432129
    7. '  ' → logprob: -18.12504005432129
    8. '!' → logprob: -18.56254005432129
    9. '.' → logprob: -18.75004005432129
    10. '3' → logprob: -18.75004005432129

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7501367926597595
    2. 'print' → logprob: -1.0001368522644043
    3. '<|end|>' → logprob: -2.7501368522644043
    4. '\n' → logprob: -3.0001368522644043
    5. '   ' → logprob: -3.8751368522644043
    6. '    
' → logprob: -5.625136852264404
    7. '<|end|>' → logprob: -5.625136852264404
    8. '  
' → logprob: -5.750136852264404
    9. ')' → logprob: -6.125136852264404
    10. ' print' → logprob: -6.125136852264404

Token 130: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019607624039053917
    2. '   ' → logprob: -4.2696075439453125
    3. ' print' → logprob: -6.2696075439453125
    4. '\n' → logprob: -6.8946075439453125
    5. '
' → logprob: -7.1446075439453125
    6. '    
' → logprob: -8.019607543945312
    7. '       ' → logprob: -8.144607543945312
    8. '               ' → logprob: -8.644607543945312
    9. '  
' → logprob: -8.644607543945312
    10. '<|end|>' → logprob: -9.269607543945312

Token 131: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004730822052806616
    2. '   ' → logprob: -5.879730701446533
    3. ' print' → logprob: -6.254730701446533
    4. '```' → logprob: -13.254731178283691
    5. ' ' → logprob: -14.629731178283691
    6. '
' → logprob: -15.129731178283691
    7. '	print' → logprob: -16.254730224609375
    8. '       ' → logprob: -16.379730224609375
    9. 'for' → logprob: -17.379730224609375
    10. '    
' → logprob: -17.629730224609375

Token 132: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38746553659439087
    2. '(count' → logprob: -1.137465476989746
    3. '()' → logprob: -7.637465476989746
    4. '('' → logprob: -10.137465476989746
    5. ' (' → logprob: -10.512465476989746
    6. '("' → logprob: -10.887465476989746
    7. '(
' → logprob: -12.137465476989746
    8. 'count' → logprob: -12.262465476989746
    9. '(len' → logprob: -12.637465476989746
    10. '((' → logprob: -12.637465476989746

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.62500286102295
    3. ')
' → logprob: -14.37500286102295
    4. ')`' → logprob: -15.00000286102295
    5. '))' → logprob: -16.500001907348633
    6. ')}' → logprob: -16.625001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '）' → logprob: -17.875001907348633
    9. '()' → logprob: -18.000001907348633
    10. '`)' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 131
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 43.51%
Précision adaptée (1ère position): 46.56%
Précision (top 10): 78.63%
================================================================================
