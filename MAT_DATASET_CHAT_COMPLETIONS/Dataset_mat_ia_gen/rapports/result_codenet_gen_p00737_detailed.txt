================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

# Directions are encoded as integers:
# 0: East, 1: South, 2: West, 3: North
# We'll represent movements accordingly.

# Movement vectors for each direction (dr, dc)
directions = [
    (0, 1),  # East
    (1, 0),  # South
    (0, -1), # West
    (-1, 0)  # North
]

def turn_from(direction, cmd):
    # Returns new direction after applying a turn command.
    # cmd: 0=Straight (no turn),
    #      1=Right (90 deg clockwise),
    #      2=Back (180 deg),
    #      3=Left (90 deg counterclockwise)
    return (direction + [0,1,2,3][cmd]) % 4

def solve():
    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    # Parse input dataset by dataset
    while True:
        if idx >= len(input_lines):
            break
        w_h = input_lines[idx].split()
        idx += 1
        if len(w_h) < 2:
            continue
        w, h = map(int, w_h)
        if w == 0 and h == 0:
            break

        # Read the board commands: h rows each with w commands
        board = []
        for _ in range(h):
            row = list(map(int, input_lines[idx].split()))
            idx += 1
            board.append(row)

        # Read costs for commands Straight, Right, Back, Left
        costs = list(map(int, input_lines[idx].split()))
        idx += 1
        # costs[i]: cost for player's explicit command i
        # commands: 0=Straight,1=Right,2=Back,3=Left

        # The robot starts at (0,0) facing east (direction 0)
        # Goal is at (h-1, w-1). Halt command at goal square.

        # We want minimum cost to reach goal (h-1, w-1),
        # possibly overriding commands assigned to squares by explicit commands with costs.
        # No explicit Halt command allowed.

        # We model the state as (row, col, direction)
        # We use Dijkstra's algorithm to find minimal cost path.

        # Priority queue elements: (total_cost, r, c, direction)
        pq = []
        heapq.heappush(pq, (0, 0, 0, 0))  # start with cost 0

        # We'll keep a distance/cost array:
        # dist[r][c][d] = minimal cost to reach (r,c) facing d
        dist = [[[float('inf')] * 4 for _ in range(w)] for __ in range(h)]
        dist[0][0][0] = 0

        while pq:
            cost, r, c, d = heapq.heappop(pq)
            if dist[r][c][d] < cost:
                # Already found better path
                continue

            # If we reached goal at (h-1,w-1) and current square command is Halt (4),
            # the robot stops here successfully
            if r == h-1 and c == w-1:
                # The problem states a Halt command is assigned to goal square.
                # Because robot executes Halt automatically unless player overrides,
                # we can stop and print minimal cost.
                # We do NOT pay anything for Halt command since player can't give it.
                # So arriving at goal means we can output the cost.
                print(cost)
                break

            # Current square assigned command
            square_cmd = board[r][c]

            # We can either:
            # 1) Execute assigned command (no cost, no override)
            # 2) Override with one of (Straight, Right, Back, Left) commands (except Halt),
            #    paying the cost of the explicit command.

            # First, try executing assigned command as is:
            if square_cmd != 4:
                # If assigned command is Halt (4) but not goal position => fail scenario, don't move
                # Robot halts before goal -> lose -> don't consider this path further.
                # So only proceed if command != Halt (4)

                nd = turn_from(d, square_cmd)
                dr, dc = directions[nd]
                nr, nc = r + dr, c + dc

                # Check bounds
                if 0 <= nr < h and 0 <= nc < w:
                    if dist[nr][nc][nd] > cost:
                        dist[nr][nc][nd] = cost
                        heapq.heappush(pq, (cost, nr, nc, nd))
                # Else out of board => lose (discard path)

            # Second, try overriding with explicit command from player (except Halt)
            for player_cmd in range(4):
                # player_cmd: 0=Straight,1=Right,2=Back,3=Left
                nd = turn_from(d, player_cmd)
                dr, dc = directions[nd]
                nr, nc = r + dr, c + dc

                if 0 <= nr < h and 0 <= nc < w:
                    # Pay cost for overriding command
                    newcost = cost + costs[player_cmd]

                    if dist[nr][nc][nd] > newcost:
                        dist[nr][nc][nd] = newcost
                        heapq.heappush(pq, (newcost, nr, nc, nd))
                # else: out of board => lose

# Run the solver function
if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16543753445148468
    2. '\n' → logprob: -2.1654374599456787
    3. '<|end|>' → logprob: -4.290437698364258
    4. '\' → logprob: -4.665437698364258
    5. 'newline' → logprob: -5.415437698364258
    6. '```' → logprob: -6.165437698364258
    7. 'import' → logprob: -6.290437698364258
    8. '<|end|>' → logprob: -6.540437698364258
    9. '' → logprob: -7.040437698364258
    10. '
' → logprob: -7.290437698364258

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8444881536415778e-05
    2. '.' → logprob: -10.750028610229492
    3. '#' → logprob: -13.875028610229492
    4. '_' → logprob: -14.000028610229492
    5. 'ify' → logprob: -14.500028610229492
    6. 'space' → logprob: -14.500028610229492
    7. 's' → logprob: -14.750028610229492
    8. ')' → logprob: -14.875028610229492
    9. '

' → logprob: -15.000028610229492
    10. 'queue' → logprob: -15.000028610229492

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21456386148929596
    2. '
' → logprob: -2.4645638465881348
    3. '\n' → logprob: -3.2145638465881348
    4. '\' → logprob: -3.7145638465881348
    5. '<|end|>' → logprob: -4.589563846588135
    6. '.
' → logprob: -4.964563846588135
    7. '

' → logprob: -4.964563846588135
    8. 'import' → logprob: -5.339563846588135
    9. '' → logprob: -5.464563846588135
    10. '```' → logprob: -5.714563846588135

Token 7: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4816220998764038
    2. '
' → logprob: -1.9816220998764038
    3. '\' → logprob: -2.7316222190856934
    4. '\n' → logprob: -2.8566222190856934
    5. 'def' → logprob: -3.1066222190856934
    6. '```' → logprob: -3.6066222190856934
    7. '.
' → logprob: -4.231622219085693
    8. 'import' → logprob: -4.356622219085693
    9. '' → logprob: -5.481622219085693
    10. 'from' → logprob: -5.481622219085693

Token 8: ' Directions' (ID: 85422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003975105006247759
    2. ' #' → logprob: -7.128974914550781
    3. ' class' → logprob: -7.128974914550781
    4. 'def' → logprob: -8.003974914550781
    5. ' 

' → logprob: -8.253974914550781
    6. ' def' → logprob: -8.503974914550781
    7. 'd' → logprob: -9.003974914550781
    8. 'A' → logprob: -9.503974914550781
    9. '#' → logprob: -9.628974914550781
    10. 'class' → logprob: -9.628974914550781

Token 9: ' are' (ID: 553)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05270145460963249
    2. ' =' → logprob: -3.177701473236084
    3. ' :' → logprob: -5.052701473236084
    4. '=' → logprob: -6.552701473236084
    5. '#' → logprob: -8.052700996398926
    6. '```' → logprob: -8.427700996398926
    7. ':
' → logprob: -8.552700996398926
    8. '_' → logprob: -9.052700996398926
    9. '[:]' → logprob: -9.177700996398926
    10. 'D' → logprob: -9.177700996398926

Token 10: ' encoded' (ID: 41096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030254634097218513
    2. ':' → logprob: -4.53025484085083
    3. ' ' → logprob: -4.78025484085083
    4. ' :' → logprob: -5.40525484085083
    5. ' represented' → logprob: -6.78025484085083
    6. ' [' → logprob: -7.03025484085083
    7. ' defined' → logprob: -7.15525484085083
    8. ' #' → logprob: -7.40525484085083
    9. ' (' → logprob: -8.030254364013672
    10. '[' → logprob: -8.030254364013672

Token 11: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.009606271982192993
    2. 'as' → logprob: -4.88460636138916
    3. ' in' → logprob: -7.25960636138916
    4. ' =' → logprob: -7.38460636138916
    5. ':' → logprob: -7.75960636138916
    6. '_' → logprob: -9.50960636138916
    7. '=' → logprob: -10.75960636138916
    8. '_as' → logprob: -10.75960636138916
    9. 'in' → logprob: -11.00960636138916
    10. '```' → logprob: -11.13460636138916

Token 12: ' integers' (ID: 54912)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.7343353033065796
    2. ' vectors' → logprob: -0.9843353033065796
    3. ' (' → logprob: -3.234335422515869
    4. ' integers' → logprob: -3.359335422515869
    5. ' a' → logprob: -4.109335422515869
    6. ' follows' → logprob: -4.359335422515869
    7. ' up' → logprob: -4.484335422515869
    8. ' ' → logprob: -4.609335422515869
    9. 'vectors' → logprob: -5.359335422515869
    10. '(' → logprob: -5.484335422515869

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1723182052373886
    2. 'D' → logprob: -3.42231822013855
    3. '```' → logprob: -3.42231822013855
    4. '0' → logprob: -3.67231822013855
    5. '#' → logprob: -4.047317981719971
    6. '.' → logprob: -4.422317981719971
    7. ',' → logprob: -4.672317981719971
    8. ':
' → logprob: -5.297317981719971
    9. '_D' → logprob: -5.672317981719971
    10. '`' → logprob: -5.797317981719971

Token 14: '#' (ID: 2)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16511821746826172
    2. 'UP' → logprob: -2.9151182174682617
    3. ' UP' → logprob: -3.0401182174682617
    4. '#' → logprob: -3.7901182174682617
    5. ' ' → logprob: -4.165118217468262
    6. '```' → logprob: -5.790118217468262
    7. 'D' → logprob: -6.165118217468262
    8. 'DOWN' → logprob: -6.415118217468262
    9. '_UP' → logprob: -6.915118217468262
    10. '`' → logprob: -7.165118217468262

Token 15: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39741235971450806
    2. 'UP' → logprob: -1.5224123001098633
    3. ' UP' → logprob: -3.1474123001098633
    4. '#' → logprob: -3.6474123001098633
    5. ' ' → logprob: -4.147412300109863
    6. 'D' → logprob: -4.272412300109863
    7. 'U' → logprob: -5.647412300109863
    8. ' U' → logprob: -6.522412300109863
    9. '```' → logprob: -6.522412300109863
    10. '_UP' → logprob: -7.272412300109863

Token 16: '0' (ID: 15)
  Prédit: 'UP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UP' → logprob: -0.401785284280777
    2. '0' → logprob: -1.1517852544784546
    3. '#' → logprob: -4.526785373687744
    4. 'N' → logprob: -6.651785373687744
    5. 'RIGHT' → logprob: -6.901785373687744
    6. 'up' → logprob: -7.401785373687744
    7. 'U' → logprob: -7.901785373687744
    8. 'DOWN' → logprob: -8.901784896850586
    9. 'LEFT' → logprob: -9.026784896850586
    10. 'D' → logprob: -9.026784896850586

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01923828385770321
    2. ' =' → logprob: -4.394238471984863
    3. ',' → logprob: -6.144238471984863
    4. ' :' → logprob: -6.269238471984863
    5. '=' → logprob: -6.394238471984863
    6. '.' → logprob: -8.394238471984863
    7. '<|end|>' → logprob: -8.769238471984863
    8. ')' → logprob: -8.894238471984863
    9. ' is' → logprob: -9.144238471984863
    10. ' ' → logprob: -9.269238471984863

Token 18: ' East' (ID: 10809)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.6259310245513916
    2. ' up' → logprob: -1.0009310245513916
    3. 'UP' → logprob: -3.3759310245513916
    4. ' UP' → logprob: -4.2509307861328125
    5. 'north' → logprob: -4.2509307861328125
    6. 'Up' → logprob: -4.5009307861328125
    7. ' north' → logprob: -4.8759307861328125
    8. ' North' → logprob: -5.5009307861328125
    9. ' Up' → logprob: -5.8759307861328125
    10. 'North' → logprob: -6.1259307861328125

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5782573223114014
    2. '0' → logprob: -2.0782573223114014
    3. '\n' → logprob: -2.5782573223114014
    4. '```' → logprob: -2.5782573223114014
    5. '#' → logprob: -2.8282573223114014
    6. '<|end|>' → logprob: -3.3282573223114014
    7. '
' → logprob: -4.2032575607299805
    8. '\' → logprob: -4.3282575607299805
    9. '1' → logprob: -4.4532575607299805
    10. ',
' → logprob: -4.7032575607299805

Token 20: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1274811029434204
    2. ' ' → logprob: -2.127480983734131
    3. '<|end|>' → logprob: -8.752481460571289
    4. '```' → logprob: -9.002481460571289
    5. ' ' → logprob: -9.252481460571289
    6. '#' → logprob: -9.877481460571289
    7. ' #' → logprob: -10.377481460571289
    8. ',' → logprob: -11.002481460571289
    9. ' ,' → logprob: -11.377481460571289
    10. '<|end|>' → logprob: -11.377481460571289

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003188524628058076
    2. ' ' → logprob: -5.753188610076904
    3. '```' → logprob: -11.753188133239746
    4. '`' → logprob: -14.378188133239746
    5. '#' → logprob: -14.503188133239746
    6. ' ' → logprob: -15.128188133239746
    7. '<|end|>' → logprob: -15.128188133239746
    8. ' #' → logprob: -15.503188133239746
    9. ',' → logprob: -15.628188133239746
    10. '  ' → logprob: -16.003189086914062

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011248565278947353
    2. ' :' → logprob: -7.251124858856201
    3. ',' → logprob: -8.251124382019043
    4. 'North' → logprob: -10.376124382019043
    5. 'West' → logprob: -10.501124382019043
    6. ' ' → logprob: -10.626124382019043
    7. ' West' → logprob: -11.251124382019043
    8. '#' → logprob: -11.376124382019043
    9. ' North' → logprob: -11.751124382019043
    10. 'South' → logprob: -12.001124382019043

Token 23: ' South' (ID: 6800)
  Prédit: ' North'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' North' → logprob: -0.9127630591392517
    2. 'North' → logprob: -1.5377631187438965
    3. ' West' → logprob: -1.5377631187438965
    4. 'West' → logprob: -2.6627631187438965
    5. ' South' → logprob: -2.9127631187438965
    6. 'South' → logprob: -3.7877631187438965
    7. 'N' → logprob: -4.0377631187438965
    8. ' Northeast' → logprob: -5.9127631187438965
    9. ' Southeast' → logprob: -6.9127631187438965
    10. 'S' → logprob: -8.037762641906738

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009971394203603268
    2. '2' → logprob: -4.634971618652344
    3. ' ,' → logprob: -8.884971618652344
    4. '```' → logprob: -10.384971618652344
    5. ',
' → logprob: -10.509971618652344
    6. '#' → logprob: -11.634971618652344
    7. '0' → logprob: -12.509971618652344
    8. 'import' → logprob: -13.509971618652344
    9. ' ' → logprob: -13.634971618652344
    10. ',#' → logprob: -14.259971618652344

Token 25: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08896052092313766
    2. ' ' → logprob: -2.4639604091644287
    3. '```' → logprob: -11.088960647583008
    4. ' ' → logprob: -12.963960647583008
    5. 'import' → logprob: -14.338960647583008
    6. ' and' → logprob: -14.838960647583008
    7. '#' → logprob: -14.963960647583008
    8. 'west' → logprob: -14.963960647583008
    9. '<|end|>' → logprob: -15.213960647583008
    10. ' #' → logprob: -15.463960647583008

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.976922744186595e-05
    2. ' ' → logprob: -11.000040054321289
    3. 'west' → logprob: -11.000040054321289
    4. 'West' → logprob: -13.375040054321289
    5. ' west' → logprob: -13.500040054321289
    6. ' West' → logprob: -13.625040054321289
    7. '0' → logprob: -14.125040054321289
    8. '```' → logprob: -14.125040054321289
    9. 'import' → logprob: -15.625040054321289
    10. '#' → logprob: -15.750040054321289

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011115610599517822
    2. ',' → logprob: -4.511115550994873
    3. ' :' → logprob: -10.261116027832031
    4. 'West' → logprob: -10.886116027832031
    5. ' West' → logprob: -11.886116027832031
    6. 'west' → logprob: -12.886116027832031
    7. ',:' → logprob: -13.761116027832031
    8. ' ,' → logprob: -13.886116027832031
    9. '3' → logprob: -14.511116027832031
    10. ' west' → logprob: -15.011116027832031

Token 28: ' West' (ID: 6029)
  Prédit: 'West'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'West' → logprob: -0.5760467052459717
    2. ' West' → logprob: -0.8260467052459717
    3. 'North' → logprob: -9.70104694366455
    4. ' North' → logprob: -11.07604694366455
    5. 'west' → logprob: -11.45104694366455
    6. 'South' → logprob: -11.45104694366455
    7. '3' → logprob: -12.95104694366455
    8. 'W' → logprob: -13.20104694366455
    9. ' South' → logprob: -13.32604694366455
    10. '0' → logprob: -14.07604694366455

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007360752206295729
    2. '```' → logprob: -5.632360935211182
    3. '3' → logprob: -6.007360935211182
    4. '\n' → logprob: -7.882360935211182
    5. '#' → logprob: -8.007360458374023
    6. ',
' → logprob: -8.257360458374023
    7. '0' → logprob: -9.382360458374023
    8. '\' → logprob: -9.507360458374023
    9. 'import' → logprob: -9.632360458374023
    10. '``' → logprob: -10.257360458374023

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759624242782593
    2. '3' → logprob: -0.8259624242782593
    3. ' ' → logprob: -11.57596206665039
    4. '```' → logprob: -11.57596206665039
    5. ' and' → logprob: -13.95096206665039
    6. '`' → logprob: -14.20096206665039
    7. '0' → logprob: -14.57596206665039
    8. 'and' → logprob: -14.70096206665039
    9. 'or' → logprob: -15.20096206665039
    10. 'import' → logprob: -15.20096206665039

Token 31: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.061969365924596786
    2. ' ' → logprob: -2.81196928024292
    3. '```' → logprob: -14.186969757080078
    4. 'and' → logprob: -15.061969757080078
    5. ' and' → logprob: -15.186969757080078
    6. '0' → logprob: -15.561969757080078
    7. ' ' → logprob: -16.436969757080078
    8. '`' → logprob: -16.686969757080078
    9. 'or' → logprob: -16.811969757080078
    10. '``' → logprob: -17.186969757080078

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007501865038648248
    2. ' :' → logprob: -7.2507500648498535
    3. ',' → logprob: -10.500750541687012
    4. ':#' → logprob: -13.250750541687012
    5. '#:' → logprob: -13.625750541687012
    6. ':return' → logprob: -13.625750541687012
    7. ',:' → logprob: -13.750750541687012
    8. ':def' → logprob: -14.000750541687012
    9. '```' → logprob: -14.375750541687012
    10. '#' → logprob: -14.500750541687012

Token 33: ' North' (ID: 7180)
  Prédit: ' North'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' North' → logprob: -0.10022197663784027
    2. 'North' → logprob: -2.350221872329712
    3. ' ' → logprob: -11.725221633911133
    4. 'north' → logprob: -12.475221633911133
    5. ' north' → logprob: -13.725221633911133
    6. ' ' → logprob: -13.850221633911133
    7. '0' → logprob: -14.850221633911133
    8. 'N' → logprob: -14.975221633911133
    9. '北' → logprob: -15.725221633911133
    10. '1' → logprob: -16.100221633911133

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9775722622871399
    2. '\' → logprob: -1.1025722026824951
    3. '\n' → logprob: -1.4775722026824951
    4. '```' → logprob: -3.352572202682495
    5. '

' → logprob: -4.727572441101074
    6. 'd' → logprob: -5.227572441101074
    7. 'dire' → logprob: -5.727572441101074
    8. '#' → logprob: -6.227572441101074
    9. 'newline' → logprob: -6.227572441101074
    10. '' → logprob: -6.477572441101074

Token 35: '#' (ID: 2)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.6401199102401733
    2. 'dire' → logprob: -1.6401199102401733
    3. 'd' → logprob: -2.015120029449463
    4. '
' → logprob: -2.140120029449463
    5. 'class' → logprob: -2.390120029449463
    6. '\' → logprob: -2.515120029449463
    7. 'def' → logprob: -2.640120029449463
    8. '```' → logprob: -3.140120029449463
    9. 'direction' → logprob: -3.765120029449463
    10. '\n' → logprob: -3.890120029449463

Token 36: ' We'll' (ID: 46830)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.0221949815750122
    2. 'class' → logprob: -1.0221949815750122
    3. 'def' → logprob: -1.7721949815750122
    4. 'dire' → logprob: -2.6471948623657227
    5. ' class' → logprob: -4.272194862365723
    6. 'direction' → logprob: -4.772194862365723
    7. '#' → logprob: -5.522194862365723
    8. ' directions' → logprob: -5.772194862365723
    9. '```' → logprob: -6.397194862365723
    10. 'DIR' → logprob: -6.897194862365723

Token 37: ' represent' (ID: 5188)
  Prédit: ' define'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' define' → logprob: -1.09955632686615
    2. ' use' → logprob: -1.22455632686615
    3. ' continue' → logprob: -1.84955632686615
    4. ' implement' → logprob: -2.7245564460754395
    5. ' add' → logprob: -2.8495564460754395
    6. ' explore' → logprob: -4.3495564460754395
    7. ' keep' → logprob: -4.4745564460754395
    8. ' assume' → logprob: -4.8495564460754395
    9. 'define' → logprob: -4.9745564460754395
    10. ' store' → logprob: -5.2245564460754395

Token 38: ' movements' (ID: 33806)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2852867841720581
    2. ' directions' → logprob: -2.1602869033813477
    3. ' each' → logprob: -2.9102869033813477
    4. 'the' → logprob: -3.7852869033813477
    5. ' direction' → logprob: -4.160286903381348
    6. ' a' → logprob: -4.535286903381348
    7. ' movement' → logprob: -5.535286903381348
    8. 'dire' → logprob: -5.910286903381348
    9. ' turning' → logprob: -5.972786903381348
    10. ' turns' → logprob: -6.160286903381348

Token 39: ' accordingly' (ID: 44041)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.034490589052438736
    2. 'as' → logprob: -3.4094905853271484
    3. ' with' → logprob: -7.909490585327148
    4. ' in' → logprob: -8.909490585327148
    5. ' by' → logprob: -9.159490585327148
    6. ' using' → logprob: -9.409490585327148
    7. 'with' → logprob: -10.284490585327148
    8. ' =' → logprob: -10.534490585327148
    9. 'in' → logprob: -10.534490585327148
    10. 'using' → logprob: -10.659490585327148

Token 40: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5538337230682373
    2. 'dire' → logprob: -2.0538337230682373
    3. '\' → logprob: -2.5538337230682373
    4. '```' → logprob: -2.8038337230682373
    5. '\n' → logprob: -3.5538337230682373
    6. 'd' → logprob: -3.6788337230682373
    7. '

' → logprob: -3.9288337230682373
    8. '
' → logprob: -4.678833961486816
    9. ':' → logprob: -4.678833961486816
    10. 'direction' → logprob: -4.678833961486816

Token 41: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7378354668617249
    2. 'class' → logprob: -0.8628354668617249
    3. 'dire' → logprob: -3.61283540725708
    4. '```' → logprob: -3.73783540725708
    5. '
' → logprob: -3.86283540725708
    6. 'D' → logprob: -4.61283540725708
    7. '\' → logprob: -4.98783540725708
    8. '

' → logprob: -5.36283540725708
    9. 'd' → logprob: -6.23783540725708
    10. 'direction' → logprob: -6.48783540725708

Token 42: ' Movement' (ID: 52469)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6217052340507507
    2. 'def' → logprob: -0.9967052340507507
    3. ' class' → logprob: -2.4967052936553955
    4. 'D' → logprob: -5.371705055236816
    5. 'dire' → logprob: -5.621705055236816
    6. ' def' → logprob: -6.371705055236816
    7. '#' → logprob: -7.871705055236816
    8. ' directions' → logprob: -8.621705055236816
    9. '```' → logprob: -8.996705055236816
    10. 'direction' → logprob: -8.996705055236816

Token 43: ' vectors' (ID: 52254)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11413808912038803
    2. '_d' → logprob: -2.864138126373291
    3. '_offsets' → logprob: -3.739138126373291
    4. '_vectors' → logprob: -4.489138126373291
    5. ' =' → logprob: -4.739138126373291
    6. 'S' → logprob: -6.864138126373291
    7. 'd' → logprob: -6.989138126373291
    8. ' vectors' → logprob: -7.239138126373291
    9. '_DE' → logprob: -7.489138126373291
    10. '_' → logprob: -7.489138126373291

Token 44: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025491682812571526
    2. 'dire' → logprob: -4.650491714477539
    3. '=' → logprob: -5.275491714477539
    4. 'dx' → logprob: -6.025491714477539
    5. ':' → logprob: -6.275491714477539
    6. ' =
' → logprob: -6.775491714477539
    7. 'd' → logprob: -7.025491714477539
    8. 'D' → logprob: -7.025491714477539
    9. 'moves' → logprob: -7.525491714477539
    10. ' directions' → logprob: -7.900491714477539

Token 45: ' each' (ID: 2454)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.5551311373710632
    2. ' east' → logprob: -1.555131196975708
    3. ' East' → logprob: -1.805131196975708
    4. 'east' → logprob: -4.180130958557129
    5. 'dire' → logprob: -4.680130958557129
    6. ' [' → logprob: -5.055130958557129
    7. ' each' → logprob: -5.055130958557129
    8. '[' → logprob: -5.555130958557129
    9. 'East' → logprob: -5.930130958557129
    10. ' the' → logprob: -6.305130958557129

Token 46: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.026697926223278046
    2. 'direction' → logprob: -3.651697874069214
    3. '_direction' → logprob: -8.901698112487793
    4. 'dire' → logprob: -9.151698112487793
    5. ' directions' → logprob: -9.151698112487793
    6. 'd' → logprob: -11.526698112487793
    7. ':' → logprob: -12.026698112487793
    8. ' =' → logprob: -12.651698112487793
    9. '方向' → logprob: -12.776698112487793
    10. '(direction' → logprob: -12.901698112487793

Token 47: ' (' (ID: 350)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.12195958942174911
    2. ' =' → logprob: -3.121959686279297
    3. ' directions' → logprob: -3.871959686279297
    4. 'direction' → logprob: -4.246959686279297
    5. 'D' → logprob: -5.121959686279297
    6. 'moves' → logprob: -5.371959686279297
    7. 'MOV' → logprob: -5.746959686279297
    8. 'dir' → logprob: -5.871959686279297
    9. '_d' → logprob: -5.996959686279297
    10. 'DIR' → logprob: -6.121959686279297

Token 48: 'dr' (ID: 4541)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.43560364842414856
    2. ' directions' → logprob: -1.3106036186218262
    3. ')' → logprob: -3.935603618621826
    4. 'dx' → logprob: -4.185603618621826
    5. 'direction' → logprob: -4.310603618621826
    6. ')
' → logprob: -4.560603618621826
    7. ' direction' → logprob: -5.060603618621826
    8. '):
' → logprob: -5.435603618621826
    9. '[
' → logprob: -5.560603618621826
    10. '[' → logprob: -6.185603618621826

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0200482290238142
    2. 'ows' → logprob: -4.270048141479492
    3. ' =' → logprob: -6.395048141479492
    4. 's' → logprob: -6.770048141479492
    5. '[' → logprob: -7.145048141479492
    6. ' ,' → logprob: -7.270048141479492
    7. 'ow' → logprob: -7.520048141479492
    8. 'aw' → logprob: -8.520048141479492
    9. '=' → logprob: -8.895048141479492
    10. ',)' → logprob: -9.020048141479492

Token 50: ' dc' (ID: 37843)
  Prédit: ' dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dc' → logprob: -0.38687121868133545
    2. 'dc' → logprob: -1.1368712186813354
    3. '_dc' → logprob: -15.761871337890625
    4. '.dc' → logprob: -17.761871337890625
    5. '(dc' → logprob: -18.636871337890625
    6. ' ' → logprob: -18.636871337890625
    7. ' DC' → logprob: -19.886871337890625
    8. '   ' → logprob: -19.886871337890625
    9. 'dcc' → logprob: -20.886871337890625
    10. '

' → logprob: -21.511871337890625

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004702338483184576
    2. ')=' → logprob: -8.500470161437988
    3. ' =' → logprob: -9.000470161437988
    4. '):' → logprob: -9.500470161437988
    5. ' )' → logprob: -10.125470161437988
    6. ']' → logprob: -11.250470161437988
    7. '=' → logprob: -12.125470161437988
    8. '[' → logprob: -13.125470161437988
    9. 's' → logprob: -13.250470161437988
    10. '):
' → logprob: -13.250470161437988

Token 52: 'dire' (ID: 57765)
  Prédit: 'dire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.07175663113594055
    2. 'dr' → logprob: -3.196756601333618
    3. ' directions' → logprob: -4.696756839752197
    4. ' =' → logprob: -5.071756839752197
    5. 'direction' → logprob: -5.321756839752197
    6. 'D' → logprob: -5.571756839752197
    7. 'DR' → logprob: -6.571756839752197
    8. 'moves' → logprob: -7.196756839752197
    9. 'dir' → logprob: -7.821756839752197
    10. 'movement' → logprob: -8.071756362915039

Token 53: 'ctions' (ID: 2620)
  Prédit: 'ctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctions' → logprob: -0.0002445317804813385
    2. 'CTIONS' → logprob: -9.000244140625
    3. 'ction' → logprob: -9.125244140625
    4. 'c' → logprob: -12.000244140625
    5. 'ct' → logprob: -13.500244140625
    6. '=' → logprob: -13.500244140625
    7. '```' → logprob: -13.750244140625
    8. 'cts' → logprob: -14.125244140625
    9. ' =' → logprob: -14.625244140625
    10. '[' → logprob: -14.750244140625

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000636904442217201
    2. '=' → logprob: -7.375637054443359
    3. ' =[' → logprob: -12.00063705444336
    4. ' ' → logprob: -13.37563705444336
    5. 's' → logprob: -13.62563705444336
    6. '[' → logprob: -14.37563705444336
    7. ':' → logprob: -15.12563705444336
    8. '=[' → logprob: -15.50063705444336
    9. '```' → logprob: -16.00063705444336
    10. '[:]' → logprob: -16.50063705444336

Token 55: ' [
' (ID: 4240)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.20876440405845642
    2. '[(' → logprob: -1.7087644338607788
    3. ' [' → logprob: -5.583764553070068
    4. '[' → logprob: -6.333764553070068
    5. ' [
' → logprob: -6.583764553070068
    6. '[
' → logprob: -7.833764553070068
    7. ' [

' → logprob: -12.45876407623291
    8. ' ' → logprob: -12.83376407623291
    9. ' [
' → logprob: -13.08376407623291
    10. '[((' → logprob: -13.95876407623291

Token 56: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47412294149398804
    2. ' (' → logprob: -0.974122941493988
    3. '   ' → logprob: -10.224123001098633
    4. '(-' → logprob: -11.849123001098633
    5. ' (-' → logprob: -13.099123001098633
    6. ' ' → logprob: -15.349123001098633
    7. '[' → logprob: -16.224123001098633
    8. ' (+' → logprob: -17.349123001098633
    9. ')' → logprob: -17.474123001098633
    10. ',' → logprob: -17.599123001098633

Token 57: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -0.04859134554862976
    2. ' (' → logprob: -3.048591375350952
    3. ' ' → logprob: -13.423591613769531
    4. '(-' → logprob: -13.673591613769531
    5. '   ' → logprob: -14.048591613769531
    6. '0' → logprob: -14.673591613769531
    7. '[' → logprob: -16.92359161376953
    8. ' (-' → logprob: -17.42359161376953
    9. '  ' → logprob: -17.79859161376953
    10. ' ' → logprob: -18.79859161376953

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036023214925080538
    2. ' ' → logprob: -5.628602504730225
    3. '(' → logprob: -13.878602027893066
    4. '   ' → logprob: -14.253602027893066
    5. '1' → logprob: -15.003602027893066
    6. ' (' → logprob: -15.628602027893066
    7. '  ' → logprob: -15.628602027893066
    8. '-' → logprob: -17.566102981567383
    9. ')' → logprob: -17.628602981567383
    10. ' ' → logprob: -18.003602981567383

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.749814019713085e-06
    2. ' ,' → logprob: -12.000006675720215
    3. ',
' → logprob: -15.500006675720215
    4. ',)' → logprob: -16.25000762939453
    5. '1' → logprob: -16.75000762939453
    6. ',

' → logprob: -17.00000762939453
    7. ')' → logprob: -18.00000762939453
    8. ',),' → logprob: -18.12500762939453
    9. '),' → logprob: -18.75000762939453
    10. ',+' → logprob: -19.75000762939453

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.126930832862854
    2. ' ' → logprob: -2.1269307136535645
    3. ')' → logprob: -13.626931190490723
    4. '+' → logprob: -14.251931190490723
    5. '  ' → logprob: -15.251931190490723
    6. '   ' → logprob: -15.501931190490723
    7. '-' → logprob: -16.189430236816406
    8. '0' → logprob: -16.376930236816406
    9. ' +' → logprob: -16.876930236816406
    10. ',' → logprob: -17.251930236816406

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013267839094623923
    2. ' ' → logprob: -6.626326560974121
    3. '  ' → logprob: -15.376326560974121
    4. ')' → logprob: -15.626326560974121
    5. '+' → logprob: -15.626326560974121
    6. '   ' → logprob: -15.876326560974121
    7. '-' → logprob: -16.251327514648438
    8. '```' → logprob: -17.626327514648438
    9. '0' → logprob: -18.063827514648438
    10. ',' → logprob: -18.501327514648438

Token 62: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00955691747367382
    2. '),
' → logprob: -5.134556770324707
    3. ')' → logprob: -5.634556770324707
    4. '   ' → logprob: -10.509556770324707
    5. '),

' → logprob: -11.134556770324707
    6. '),(' → logprob: -12.884556770324707
    7. ' ),' → logprob: -12.884556770324707
    8. '),
' → logprob: -13.509556770324707
    9. ',' → logprob: -14.884556770324707
    10. ' ' → logprob: -15.134556770324707

Token 63: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008845837786793709
    2. ' (' → logprob: -4.758845806121826
    3. '(' → logprob: -8.508846282958984
    4. '<|end|>' → logprob: -11.758846282958984
    5. '    ' → logprob: -12.008846282958984
    6. ' ' → logprob: -12.008846282958984
    7. '0' → logprob: -12.383846282958984
    8. '  ' → logprob: -13.508846282958984
    9. '
' → logprob: -14.383846282958984
    10. '\n' → logprob: -14.508846282958984

Token 64: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6003506779670715
    2. '(' → logprob: -0.8503506779670715
    3. ' (' → logprob: -3.7253506183624268
    4. '  ' → logprob: -12.725350379943848
    5. '0' → logprob: -12.850350379943848
    6. ' ' → logprob: -12.975350379943848
    7. '    ' → logprob: -13.600350379943848
    8. '1' → logprob: -15.100350379943848
    9. '\' → logprob: -15.100350379943848
    10. '    
' → logprob: -15.100350379943848

Token 65: ' East' (ID: 10809)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5953763127326965
    2. ' ' → logprob: -1.0953762531280518
    3. ' East' → logprob: -2.5953762531280518
    4. 'East' → logprob: -3.4703762531280518
    5. ' east' → logprob: -5.470376491546631
    6. 'east' → logprob: -5.720376491546631
    7. ')' → logprob: -7.345376491546631
    8. '#' → logprob: -9.595376014709473
    9. '1' → logprob: -9.720376014709473
    10. 'E' → logprob: -9.845376014709473

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44632697105407715
    2. ',' → logprob: -1.0713269710540771
    3. ',
' → logprob: -4.071327209472656
    4. ')' → logprob: -8.446327209472656
    5. ' ,' → logprob: -9.446327209472656
    6. ']' → logprob: -10.196327209472656
    7. ',(' → logprob: -10.696327209472656
    8. '(' → logprob: -11.071327209472656
    9. '),' → logprob: -11.446327209472656
    10. ' (' → logprob: -11.821327209472656

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025414172559976578
    2. ' (' → logprob: -3.775414228439331
    3. '(' → logprob: -6.150413990020752
    4. '    ' → logprob: -10.77541446685791
    5. '    
' → logprob: -12.27541446685791
    6. '   ' → logprob: -13.27541446685791
    7. '\n' → logprob: -13.65041446685791
    8. '  ' → logprob: -14.02541446685791
    9. ' ' → logprob: -14.02541446685791
    10. '```' → logprob: -14.27541446685791

Token 68: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8627520203590393
    2. ' (' → logprob: -0.8627520203590393
    3. '(' (adapté à ' (') → logprob: -1.8627519607543945
    4. '1' → logprob: -7.3627519607543945
    5. '    ' → logprob: -9.487751960754395
    6. ' ' → logprob: -10.362751960754395
    7. '  ' → logprob: -12.487751960754395
    8. '<|end|>' → logprob: -12.987751960754395
    9. '   ' → logprob: -13.112751960754395
    10. '	' → logprob: -13.487751960754395

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -17.375139236450195
    4. '   ' → logprob: -18.375139236450195
    5. '0' → logprob: -18.750139236450195
    6. '  ' → logprob: -19.187639236450195
    7. ')' → logprob: -19.562639236450195
    8. '-' → logprob: -19.562639236450195
    9. '+' → logprob: -19.562639236450195
    10. '۱' → logprob: -19.875139236450195

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044103997061029077
    2. ' ,' → logprob: -7.750441074371338
    3. '   ' → logprob: -11.87544059753418
    4. '0' → logprob: -13.12544059753418
    5. '<|end|>' → logprob: -14.37544059753418
    6. ')' → logprob: -15.00044059753418
    7. ' ' → logprob: -15.50044059753418
    8. '),' → logprob: -16.62544059753418
    9. '‌,' → logprob: -16.75044059753418
    10. ',
' → logprob: -17.37544059753418

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141500234603882
    2. ' ' → logprob: -1.7014150619506836
    3. '   ' → logprob: -14.451415061950684
    4. '<|end|>' → logprob: -15.326415061950684
    5. ')' → logprob: -15.513915061950684
    6. '  ' → logprob: -15.638915061950684
    7. ',' → logprob: -15.763915061950684
    8. '```' → logprob: -16.326414108276367
    9. ' ' → logprob: -16.576414108276367
    10. '۰' → logprob: -16.763914108276367

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -16.875017166137695
    4. '   ' → logprob: -17.625017166137695
    5. '```' → logprob: -17.750017166137695
    6. ')' → logprob: -18.812517166137695
    7. '  ' → logprob: -18.812517166137695
    8. '-' → logprob: -19.187517166137695
    9. '０' → logprob: -19.375017166137695
    10. ',' → logprob: -20.000017166137695

Token 73: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00010068230039905757
    2. ')' → logprob: -10.125101089477539
    3. '),
' → logprob: -10.375101089477539
    4. ' ),' → logprob: -10.750101089477539
    5. '   ' → logprob: -11.875101089477539
    6. '],' → logprob: -15.250101089477539
    7. ',' → logprob: -15.250101089477539
    8. '),(' → logprob: -15.875101089477539
    9. '),

' → logprob: -15.875101089477539
    10. ' ' → logprob: -16.62510108947754

Token 74: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008624501526355743
    2. ' (' → logprob: -5.25862455368042
    3. '(' → logprob: -5.75862455368042
    4. '    ' → logprob: -8.633624076843262
    5. ' ' → logprob: -10.383624076843262
    6. '  ' → logprob: -11.008624076843262
    7. ')' → logprob: -13.508624076843262
    8. ',' → logprob: -14.008624076843262
    9. '#' → logprob: -14.758624076843262
    10. ']' → logprob: -14.883624076843262

Token 75: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055153295397758484
    2. '(' → logprob: -3.0551533699035645
    3. ' (' → logprob: -5.0551533699035645
    4. '#' → logprob: -10.180152893066406
    5. ' ' → logprob: -10.305152893066406
    6. ')' → logprob: -10.430152893066406
    7. ',' → logprob: -10.805152893066406
    8. '    ' → logprob: -10.930152893066406
    9. '  ' → logprob: -10.930152893066406
    10. '0' → logprob: -12.680152893066406

Token 76: ' South' (ID: 6800)
  Prédit: 'West'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'West' → logprob: -0.5759637355804443
    2. ' West' → logprob: -0.8259637355804443
    3. 'west' → logprob: -11.325963973999023
    4. 'South' → logprob: -11.950963973999023
    5. ' west' → logprob: -12.825963973999023
    6. ' South' → logprob: -13.075963973999023
    7. ' ' → logprob: -14.950963973999023
    8. '1' → logprob: -15.450963973999023
    9. '0' → logprob: -15.575963973999023
    10. '西' → logprob: -15.950963973999023

Token 77: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7917004823684692
    2. '),' → logprob: -0.7917004823684692
    3. ',' → logprob: -2.4167003631591797
    4. ')' → logprob: -5.79170036315918
    5. '),
' → logprob: -6.79170036315918
    6. ',
' → logprob: -8.66670036315918
    7. '],' → logprob: -9.66670036315918
    8. '```' → logprob: -9.66670036315918
    9. ' ),' → logprob: -9.91670036315918
    10. ' ,' → logprob: -10.79170036315918

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018607446923851967
    2. '(' → logprob: -4.0186076164245605
    3. ' (' → logprob: -7.7686076164245605
    4. '0' → logprob: -10.643607139587402
    5. '    ' → logprob: -12.518607139587402
    6. ')' → logprob: -12.893607139587402
    7. '  ' → logprob: -13.518607139587402
    8. '(-' → logprob: -13.768607139587402
    9. '2' → logprob: -14.518607139587402
    10. ' ' → logprob: -14.768607139587402

Token 79: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -0.7642131447792053
    2. '   ' → logprob: -1.0142130851745605
    3. ' (' → logprob: -1.7642130851745605
    4. '0' → logprob: -9.389213562011719
    5. ' ' → logprob: -9.639213562011719
    6. '    ' → logprob: -9.764213562011719
    7. ',' → logprob: -10.514213562011719
    8. '  ' → logprob: -10.639213562011719
    9. ')' → logprob: -11.514213562011719
    10. '2' → logprob: -11.764213562011719

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010932506993412971
    2. '-' → logprob: -5.135932445526123
    3. '1' → logprob: -6.010932445526123
    4. ' ' → logprob: -6.010932445526123
    5. ' -' → logprob: -9.760932922363281
    6. '2' → logprob: -11.010932922363281
    7. ')' → logprob: -11.885932922363281
    8. '   ' → logprob: -12.885932922363281
    9. '```' → logprob: -13.385932922363281
    10. ',' → logprob: -13.760932922363281

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001278534036828205
    2. ',-' → logprob: -9.125127792358398
    3. ' ,' → logprob: -11.250127792358398
    4. '-' → logprob: -12.250127792358398
    5. ' -' → logprob: -14.125127792358398
    6. '   ' → logprob: -16.3751277923584
    7. ' ,-' → logprob: -16.5001277923584
    8. ')' → logprob: -17.1251277923584
    9. '```' → logprob: -17.5001277923584
    10. '‌,' → logprob: -17.6251277923584

Token 82: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.547789674485102e-05
    2. ' -' → logprob: -10.250035285949707
    3. ' ' → logprob: -18.125036239624023
    4. '1' → logprob: -19.250036239624023
    5. '   ' → logprob: -19.500036239624023
    6. ')' → logprob: -20.750036239624023
    7. '0' → logprob: -20.875036239624023
    8. '  ' → logprob: -21.375036239624023
    9. ',' → logprob: -21.500036239624023
    10. '−' → logprob: -21.750036239624023

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. ')' → logprob: -15.250005722045898
    4. '   ' → logprob: -18.1250057220459
    5. '```' → logprob: -18.2500057220459
    6. '  ' → logprob: -19.0000057220459
    7. '<|end|>' → logprob: -19.2500057220459
    8. ',' → logprob: -19.8750057220459
    9. '),' → logprob: -20.1875057220459
    10. '0' → logprob: -20.7500057220459

Token 84: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.048965662717819214
    2. ')' → logprob: -3.0489656925201416
    3. ' ),' → logprob: -8.548965454101562
    4. '   ' → logprob: -8.798965454101562
    5. '),
' → logprob: -10.798965454101562
    6. ' ' → logprob: -12.173965454101562
    7. ' )' → logprob: -12.298965454101562
    8. ')]' → logprob: -13.673965454101562
    9. '),(' → logprob: -14.173965454101562
    10. ')],' → logprob: -14.673965454101562

Token 85: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013233166188001633
    2. ' (' → logprob: -4.513233184814453
    3. '(' → logprob: -6.513233184814453
    4. ']' → logprob: -8.388233184814453
    5. '    ' → logprob: -8.763233184814453
    6. ' ' → logprob: -8.888233184814453
    7. ' ]' → logprob: -9.138233184814453
    8. '  ' → logprob: -10.013233184814453
    9. ')' → logprob: -10.888233184814453
    10. '       ' → logprob: -14.138233184814453

Token 86: ' West' (ID: 6029)
  Prédit: 'North'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'North' → logprob: -0.03805479779839516
    2. ' North' → logprob: -3.2880547046661377
    3. 'West' → logprob: -11.538054466247559
    4. 'north' → logprob: -13.038054466247559
    5. '3' → logprob: -14.788054466247559
    6. ' West' → logprob: -15.038054466247559
    7. '1' → logprob: -15.288054466247559
    8. ' ' → logprob: -15.413054466247559
    9. 'N' → logprob: -15.788054466247559
    10. ' north' → logprob: -15.913054466247559

Token 87: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3111077547073364
    2. '   ' → logprob: -1.5611077547073364
    3. ')' → logprob: -3.311107635498047
    4. ']' → logprob: -4.311107635498047
    5. ',
' → logprob: -5.186107635498047
    6. '),' → logprob: -6.436107635498047
    7. '],' → logprob: -9.061107635498047
    8. ' ' → logprob: -10.186107635498047
    9. ' ,' → logprob: -10.311107635498047
    10. '```' → logprob: -10.311107635498047

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01734996773302555
    2. '(' → logprob: -4.142350196838379
    3. '(-' → logprob: -7.392350196838379
    4. ' (' → logprob: -7.517350196838379
    5. ' (-' → logprob: -9.142350196838379
    6. '    ' → logprob: -10.767350196838379
    7. '  ' → logprob: -11.267350196838379
    8. ')' → logprob: -12.017350196838379
    9. ' ' → logprob: -12.392350196838379
    10. '   ' → logprob: -13.267350196838379

Token 89: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' (adapté à ' (-') → logprob: -0.0023842109367251396
    2. '   ' → logprob: -6.752384185791016
    3. ' (-' → logprob: -7.252384185791016
    4. '(' → logprob: -8.127384185791016
    5. '-' → logprob: -8.502384185791016
    6. '  ' → logprob: -13.127384185791016
    7. ' ' → logprob: -13.252384185791016
    8. ')' → logprob: -13.627384185791016
    9. ' -' → logprob: -14.127384185791016
    10. '(
' → logprob: -15.502384185791016

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. ')' → logprob: -22.5
    4. '   ' → logprob: -22.75
    5. '１' → logprob: -23.0
    6. '-' → logprob: -23.625
    7. '

' → logprob: -23.75
    8. '0' → logprob: -24.0
    9. '2' → logprob: -24.0
    10. '```' → logprob: -24.0

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.975612187583465e-05
    2. ' ,' → logprob: -10.625029563903809
    3. '0' → logprob: -12.125029563903809
    4. ')' → logprob: -18.000030517578125
    5. ',
' → logprob: -18.875030517578125
    6. ' ' → logprob: -19.000030517578125
    7. '1' → logprob: -19.125030517578125
    8. '`,' → logprob: -19.375030517578125
    9. '   ' → logprob: -20.000030517578125
    10. '```' → logprob: -20.000030517578125

Token 92: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.575941264629364
    2. ' ' → logprob: -0.825941264629364
    3. ')' → logprob: -14.07594108581543
    4. ',' → logprob: -14.57594108581543
    5. ' )' → logprob: -15.70094108581543
    6. ' ,' → logprob: -16.07594108581543
    7. '   ' → logprob: -16.51344108581543
    8. ' ' → logprob: -16.51344108581543
    9. '  ' → logprob: -16.76344108581543
    10. '<|end|>' → logprob: -17.01344108581543

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. ')' → logprob: -16.376325607299805
    4. ',' → logprob: -18.501325607299805
    5. '   ' → logprob: -18.626325607299805
    6. ' )' → logprob: -19.876325607299805
    7. '```' → logprob: -20.001325607299805
    8. '  ' → logprob: -20.251325607299805
    9. '۰' → logprob: -20.626325607299805
    10. ')
' → logprob: -21.001325607299805

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006938552018254995
    2. '),' → logprob: -5.256938457489014
    3. ')
' → logprob: -6.881938457489014
    4. ')]' → logprob: -7.506938457489014
    5. ' )' → logprob: -9.756938934326172
    6. '   ' → logprob: -10.381938934326172
    7. '),
' → logprob: -10.506938934326172
    8. ']' → logprob: -11.756938934326172
    9. ')#' → logprob: -14.506938934326172
    10. ')],' → logprob: -14.631938934326172

Token 95: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3154153525829315
    2. ']' → logprob: -1.315415382385254
    3. ')]' → logprob: -6.440415382385254
    4. '),' → logprob: -9.065415382385254
    5. ']
' → logprob: -9.065415382385254
    6. ' ]' → logprob: -9.190415382385254
    7. '   ' → logprob: -9.315415382385254
    8. ')
' → logprob: -9.815415382385254
    9. ' )' → logprob: -10.190415382385254
    10. '],' → logprob: -11.190415382385254

Token 96: ' #' (ID: 1069)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1273101270198822
    2. ')' → logprob: -2.127310037612915
    3. ')]' → logprob: -8.127309799194336
    4. ']
' → logprob: -10.627309799194336
    5. ' ]' → logprob: -11.002309799194336
    6. '   ' → logprob: -11.002309799194336
    7. '],' → logprob: -11.252309799194336
    8. '),' → logprob: -11.502309799194336
    9. '}' → logprob: -13.002309799194336
    10. ' )' → logprob: -14.127309799194336

Token 97: ' North' (ID: 7180)
  Prédit: 'North'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'North' → logprob: -0.31337594985961914
    2. ' North' → logprob: -1.3133759498596191
    3. ' ' → logprob: -9.813375473022461
    4. 'N' → logprob: -10.313375473022461
    5. ')' → logprob: -10.938375473022461
    6. 'north' → logprob: -12.688375473022461
    7. ' north' → logprob: -12.813375473022461
    8. '1' → logprob: -13.938375473022461
    9. ''' → logprob: -14.438375473022461
    10. '0' → logprob: -14.938375473022461

Token 98: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018186114728450775
    2. ')' → logprob: -4.018186092376709
    3. ']
' → logprob: -11.768186569213867
    4. ')]' → logprob: -11.768186569213867
    5. ' ]' → logprob: -11.893186569213867
    6. ']

' → logprob: -12.143186569213867
    7. '```' → logprob: -12.643186569213867
    8. '}' → logprob: -12.768186569213867
    9. '   ' → logprob: -14.143186569213867
    10. '])' → logprob: -14.268186569213867

Token 99: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032018350902944803
    2. ')' → logprob: -5.753201961517334
    3. ']

' → logprob: -12.003201484680176
    4. '```' → logprob: -12.253201484680176
    5. '}' → logprob: -12.378201484680176
    6. ' ]' → logprob: -12.378201484680176
    7. ']
' → logprob: -12.753201484680176
    8. '#' → logprob: -14.503201484680176
    9. '']' → logprob: -14.753201484680176
    10. ')]' → logprob: -14.878201484680176

Token 100: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1403614580631256
    2. '

' → logprob: -2.6403615474700928
    3. '
' → logprob: -3.0153615474700928
    4. '```' → logprob: -5.265361309051514
    5. 'class' → logprob: -5.765361309051514
    6. '\' → logprob: -7.015361309051514
    7. '\n' → logprob: -7.640361309051514
    8. '#' → logprob: -8.140361785888672
    9. 'd' → logprob: -8.390361785888672
    10. '' → logprob: -9.640361785888672

Token 101: ' turn' (ID: 3716)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.21596600115299225
    2. ' find' → logprob: -2.340965986251831
    3. ' d' → logprob: -3.340965986251831
    4. ' solve' → logprob: -3.465965986251831
    5. ' min' → logprob: -5.09096622467041
    6. ' bfs' → logprob: -5.59096622467041
    7. ' robot' → logprob: -5.71596622467041
    8. ' minimal' → logprob: -5.71596622467041
    9. ' ast' → logprob: -6.46596622467041
    10. ' main' → logprob: -6.84096622467041

Token 102: '_from' (ID: 12526)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.30583763122558594
    2. '_' → logprob: -1.555837631225586
    3. '(' → logprob: -3.305837631225586
    4. '_right' → logprob: -4.305837631225586
    5. '_direction' → logprob: -7.055837631225586
    6. ' (' → logprob: -7.555837631225586
    7. 'left' → logprob: -7.930837631225586
    8. '(direction' → logprob: -9.305837631225586
    9. '_(' → logprob: -9.805837631225586
    10. ' _' → logprob: -9.805837631225586

Token 103: '(direction' (ID: 97422)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.45172369480133057
    2. '_' → logprob: -1.4517236948013306
    3. '(' → logprob: -3.201723575592041
    4. '_to' → logprob: -3.701723575592041
    5. '(direction' → logprob: -3.951723575592041
    6. '_dir' → logprob: -4.076723575592041
    7. '_current' → logprob: -4.951723575592041
    8. '_d' → logprob: -5.076723575592041
    9. '_left' → logprob: -5.826723575592041
    10. '(current' → logprob: -6.076723575592041

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005021584220230579
    2. ' ,' → logprob: -7.625502109527588
    3. ',d' → logprob: -11.875502586364746
    4. ':' → logprob: -13.125502586364746
    5. '):' → logprob: -13.750502586364746
    6. ',current' → logprob: -14.000502586364746
    7. ',to' → logprob: -14.125502586364746
    8. ',int' → logprob: -14.125502586364746
    9. '_,' → logprob: -14.875502586364746
    10. ':int' → logprob: -15.000502586364746

Token 105: ' cmd' (ID: 11704)
  Prédit: ' turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.37161338329315186
    2. ' new' → logprob: -2.3716135025024414
    3. ' target' → logprob: -2.9966135025024414
    4. ' command' → logprob: -3.1216135025024414
    5. ' desired' → logprob: -3.4966135025024414
    6. 'turn' → logprob: -3.6216135025024414
    7. ' next' → logprob: -4.121613502502441
    8. ' action' → logprob: -4.496613502502441
    9. 'new' → logprob: -5.371613502502441
    10. ' to' → logprob: -5.496613502502441

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04695277661085129
    2. '):
' → logprob: -3.171952724456787
    3. ')' → logprob: -5.546952724456787
    4. ' ):' → logprob: -11.171953201293945
    5. '):
' → logprob: -11.546953201293945
    6. '):

' → logprob: -11.796953201293945
    7. ':' → logprob: -12.546953201293945
    8. ')：' → logprob: -12.921953201293945
    9. '_' → logprob: -13.171953201293945
    10. ')=' → logprob: -14.046953201293945

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21050086617469788
    2. ' ' → logprob: -2.210500955581665
    3. ':' → logprob: -2.835500955581665
    4. '    ' → logprob: -4.335500717163086
    5. ' :' → logprob: -5.710500717163086
    6. '  ' → logprob: -6.085500717163086
    7. ''' → logprob: -7.960500717163086
    8. '(' → logprob: -8.085500717163086
    9. '#' → logprob: -8.210500717163086
    10. '<|end|>' → logprob: -8.335500717163086

Token 108: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16489119827747345
    2. ' ' → logprob: -2.164891242980957
    3. '    ' → logprob: -4.039891242980957
    4. ' if' → logprob: -4.289891242980957
    5. '  ' → logprob: -6.789891242980957
    6. ':' → logprob: -6.914891242980957
    7. ' ' → logprob: -7.914891242980957
    8. ' i' → logprob: -8.289891242980957
    9. ' :' → logprob: -8.414891242980957
    10. '  ' → logprob: -8.539891242980957

Token 109: ' Returns' (ID: 9609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02459076978266239
    2. 'if' → logprob: -3.7745907306671143
    3. ' direction' → logprob: -7.649590969085693
    4. '   ' → logprob: -7.899590969085693
    5. ' new' → logprob: -8.524590492248535
    6. ' dir' → logprob: -9.524590492248535
    7. ' current' → logprob: -9.774590492248535
    8. 'If' → logprob: -10.149590492248535
    9. 'direction' → logprob: -10.774590492248535
    10. ' #' → logprob: -10.899590492248535

Token 110: ' new' (ID: 620)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04103591665625572
    2. ' direction' → logprob: -3.6660358905792236
    3. '(direction' → logprob: -4.916036128997803
    4. 'direction' → logprob: -5.791036128997803
    5. ' new' → logprob: -6.041036128997803
    6. ' ' → logprob: -6.916036128997803
    7. ' (
' → logprob: -7.541036128997803
    8. '(' → logprob: -8.666035652160645
    9. ' directions' → logprob: -10.041035652160645
    10. 'new' → logprob: -10.416035652160645

Token 111: ' direction' (ID: 9262)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.11496080458164215
    2. '_' → logprob: -2.2399609088897705
    3. ' _' → logprob: -7.239960670471191
    4. ' direction' → logprob: -7.489960670471191
    5. '_d' → logprob: -7.614960670471191
    6. ' ' → logprob: -8.489960670471191
    7. 'direction' → logprob: -8.989960670471191
    8. '_DIRECTION' → logprob: -10.739960670471191
    9. '_direct' → logprob: -12.489960670471191
    10. '_dir' → logprob: -13.239960670471191

Token 112: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9260956645011902
    2. '=' → logprob: -1.176095724105835
    3. ':' → logprob: -1.676095724105835
    4. ',' → logprob: -3.301095724105835
    5. '   ' → logprob: -3.801095724105835
    6. ' ' → logprob: -4.551095485687256
    7. '    ' → logprob: -4.676095485687256
    8. '(' → logprob: -4.926095485687256
    9. '(direction' → logprob: -5.551095485687256
    10. ' (' → logprob: -5.676095485687256

Token 113: ' applying' (ID: 24667)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4085044264793396
    2. ' turning' → logprob: -2.4085044860839844
    3. 'turn' → logprob: -3.0335044860839844
    4. ' ' → logprob: -3.4085044860839844
    5. ' direction' → logprob: -3.6585044860839844
    6. ' turn' → logprob: -3.9085044860839844
    7. '_turn' → logprob: -3.9085044860839844
    8. '(' → logprob: -4.283504486083984
    9. '_direction' → logprob: -4.408504486083984
    10. 'direction' → logprob: -4.658504486083984

Token 114: ' a' (ID: 261)
  Prédit: ' cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.41164711117744446
    2. 'cmd' → logprob: -2.036647081375122
    3. ' a' → logprob: -2.536647081375122
    4. ''' → logprob: -3.411647081375122
    5. ' (' → logprob: -4.036647319793701
    6. '(cmd' → logprob: -4.036647319793701
    7. ' '' → logprob: -4.161647319793701
    8. ' ' → logprob: -4.786647319793701
    9. ' the' → logprob: -5.036647319793701
    10. ' turn' → logprob: -5.161647319793701

Token 115: ' turn' (ID: 3716)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03891729936003685
    2. ' turn' → logprob: -4.288917064666748
    3. ' command' → logprob: -4.913917064666748
    4. ' direction' → logprob: -5.038917064666748
    5. ' space' → logprob: -5.663917064666748
    6. '_' → logprob: -5.788917064666748
    7. ' '' → logprob: -7.038917064666748
    8. 'space' → logprob: -7.788917064666748
    9. 'direction' → logprob: -7.913917064666748
    10. ' "' → logprob: -8.163917541503906

Token 116: ' command' (ID: 6348)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9531710743904114
    2. ':' → logprob: -1.2031710147857666
    3. '(direction' → logprob: -1.7031710147857666
    4. '(' → logprob: -2.8281710147857666
    5. ' (' → logprob: -3.9531710147857666
    6. ',' → logprob: -4.078171253204346
    7. 'def' → logprob: -4.328171253204346
    8. ' ' → logprob: -5.953171253204346
    9. ' =' → logprob: -5.953171253204346
    10. ' :' → logprob: -6.078171253204346

Token 117: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005239921621978283
    2. ':' → logprob: -5.880239963531494
    3. '(direction' → logprob: -6.755239963531494
    4. '_' → logprob: -7.380239963531494
    5. ',' → logprob: -8.380239486694336
    6. '(
' → logprob: -9.130239486694336
    7. ' (' → logprob: -9.630239486694336
    8. '   ' → logprob: -10.130239486694336
    9. '(d' → logprob: -10.130239486694336
    10. '[' → logprob: -10.255239486694336

Token 118: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2581489682197571
    2. '   ' → logprob: -1.6331489086151123
    3. ' 
' → logprob: -4.133149147033691
    4. '(' → logprob: -5.133149147033691
    5. ' return' → logprob: -6.258149147033691
    6. ')' → logprob: -6.258149147033691
    7. '    ' → logprob: -7.133149147033691
    8. 'def' → logprob: -7.133149147033691
    9. ' (' → logprob: -7.508149147033691
    10. '  ' → logprob: -7.508149147033691

Token 119: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3100735545158386
    2. ' if' → logprob: -2.0600736141204834
    3. ' 
' → logprob: -2.5600736141204834
    4. ' return' → logprob: -3.3100736141204834
    5. ' ' → logprob: -4.685073375701904
    6. '    ' → logprob: -5.185073375701904
    7. ' i' → logprob: -5.310073375701904
    8. '    
' → logprob: -5.685073375701904
    9. 'if' → logprob: -8.060073852539062
    10. '  
' → logprob: -8.185073852539062

Token 120: ' cmd' (ID: 11704)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02097776159644127
    2. 'if' → logprob: -4.145977973937988
    3. ' new' → logprob: -6.395977973937988
    4. '   ' → logprob: -6.395977973937988
    5. ' i' → logprob: -7.395977973937988
    6. ' direction' → logprob: -8.020977973937988
    7. ' next' → logprob: -8.520977973937988
    8. ' return' → logprob: -9.020977973937988
    9. ' n' → logprob: -10.020977973937988
    10. 'n' → logprob: -10.145977973937988

Token 121: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6231856346130371
    2. ' ' → logprob: -0.9981856346130371
    3. '=' → logprob: -2.623185634613037
    4. ')' → logprob: -4.498185634613037
    5. ' ==' → logprob: -4.998185634613037
    6. ' in' → logprob: -6.748185634613037
    7. ' )' → logprob: -6.873185634613037
    8. '_' → logprob: -6.998185634613037
    9. '  ' → logprob: -7.873185634613037
    10. ' is' → logprob: -8.498186111450195

Token 122: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16166481375694275
    2. ' '' → logprob: -2.1616647243499756
    3. ''L' → logprob: -4.286664962768555
    4. ''l' → logprob: -4.536664962768555
    5. '"' → logprob: -5.286664962768555
    6. '"L' → logprob: -7.036664962768555
    7. ' "' → logprob: -7.036664962768555
    8. ''a' → logprob: -7.536664962768555
    9. ''s' → logprob: -7.911664962768555
    10. ' ' → logprob: -8.286664962768555

Token 123: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7692701816558838
    2. ''L' → logprob: -0.8942701816558838
    3. ' '' → logprob: -2.894270181655884
    4. ''l' → logprob: -3.144270181655884
    5. '"L' → logprob: -4.519269943237305
    6. '"' → logprob: -5.269269943237305
    7. ''r' → logprob: -5.894269943237305
    8. ''T' → logprob: -6.394269943237305
    9. ''s' → logprob: -6.394269943237305
    10. ''t' → logprob: -6.519269943237305

Token 124: '=' (ID: 28)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8949050903320312
    2. ')' → logprob: -1.1449050903320312
    3. '<|end|>' → logprob: -2.1449050903320312
    4. ':' → logprob: -3.2699050903320312
    5. ' #' → logprob: -3.2699050903320312
    6. ' if' → logprob: -3.7699050903320312
    7. ',' → logprob: -4.519905090332031
    8. ' (' → logprob: -4.519905090332031
    9. ' =' → logprob: -4.644905090332031
    10. ' )' → logprob: -4.769905090332031

Token 125: 'Straight' (ID: 129322)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.6854657530784607
    2. 'left' → logprob: -1.1854658126831055
    3. ' turn' → logprob: -2.6854658126831055
    4. ' straight' → logprob: -3.6854658126831055
    5. ' '' → logprob: -3.9354658126831055
    6. ''' → logprob: -4.1854658126831055
    7. ' no' → logprob: -4.4354658126831055
    8. ' ' → logprob: -5.0604658126831055
    9. 'straight' → logprob: -5.0604658126831055
    10. '"' → logprob: -5.1854658126831055

Token 126: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01887056976556778
    2. ' ,' → logprob: -4.3938703536987305
    3. ',
' → logprob: -5.6438703536987305
    4. '+' → logprob: -6.3938703536987305
    5. ' ' → logprob: -8.51887035369873
    6. '
' → logprob: -8.64387035369873
    7. ')' → logprob: -8.89387035369873
    8. ' +' → logprob: -8.89387035369873
    9. ' if' → logprob: -8.89387035369873
    10. '<|end|>' → logprob: -9.26887035369873

Token 127: 'no' (ID: 1750)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.025692475959658623
    2. ' ),' → logprob: -3.9006924629211426
    3. ')' → logprob: -6.275692462921143
    4. ' no' → logprob: -6.900692462921143
    5. ''),' → logprob: -7.275692462921143
    6. '0' → logprob: -7.400692462921143
    7. ' ' → logprob: -8.7756929397583
    8. 'no' → logprob: -9.0256929397583
    9. 'None' → logprob: -9.4006929397583
    10. '1' → logprob: -9.5256929397583

Token 128: ' turn' (ID: 3716)
  Prédit: ' turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.4641948342323303
    2. ' change' → logprob: -1.0891947746276855
    3. 'turn' → logprob: -4.0891947746276855
    4. 'change' → logprob: -4.3391947746276855
    5. '_turn' → logprob: -6.2141947746276855
    6. ')' → logprob: -6.8391947746276855
    7. '_change' → logprob: -6.8391947746276855
    8. ' ' → logprob: -8.089195251464844
    9. '_' → logprob: -8.339195251464844
    10. ' )' → logprob: -8.464195251464844

Token 129: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0009632694418542087
    2. ')' → logprob: -7.37596321105957
    3. ' ),' → logprob: -8.25096321105957
    4. '),
' → logprob: -10.37596321105957
    5. '+' → logprob: -11.12596321105957
    6. ',' → logprob: -11.50096321105957
    7. ''),' → logprob: -12.12596321105957
    8. ' ' → logprob: -13.00096321105957
    9. ')
' → logprob: -13.12596321105957
    10. '   ' → logprob: -13.12596321105957

Token 130: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08913183957338333
    2. '1' → logprob: -2.4641318321228027
    3. ',' → logprob: -9.464132308959961
    4. '    ' → logprob: -9.714132308959961
    5. ' ,' → logprob: -10.464132308959961
    6. '   ' → logprob: -11.589132308959961
    7. '  ' → logprob: -12.214132308959961
    8. ' 
' → logprob: -13.214132308959961
    9. '  
' → logprob: -14.089132308959961
    10. ')' → logprob: -14.339132308959961

Token 131: ' #' (ID: 1069)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20156624913215637
    2. ' ' → logprob: -1.701566219329834
    3. '#' (adapté à ' #') → logprob: -9.826566696166992
    4. ' #' → logprob: -10.326566696166992
    5. '    ' → logprob: -11.076566696166992
    6. '   ' → logprob: -11.201566696166992
    7. ',' → logprob: -11.826566696166992
    8. '  ' → logprob: -12.076566696166992
    9. ' '' → logprob: -12.639066696166992
    10. ''' → logprob: -12.764066696166992

Token 132: '     ' (ID: 530)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326351761817932
    2. '1' → logprob: -0.7576351761817932
    3. '90' → logprob: -11.632635116577148
    4. ',' → logprob: -11.757635116577148
    5. ' -' → logprob: -12.320135116577148
    6. ')' → logprob: -13.382635116577148
    7. ' ,' → logprob: -13.757635116577148
    8. '+' → logprob: -13.945135116577148
    9. ' ' → logprob: -14.007635116577148
    10. ' 
' → logprob: -14.132635116577148

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06794975697994232
    2. ' ' → logprob: -3.0679497718811035
    3. '-' → logprob: -4.0679497718811035
    4. ' -' → logprob: -6.1929497718811035
    5. '+' → logprob: -11.630449295043945
    6. '90' → logprob: -13.130449295043945
    7. ')' → logprob: -13.880449295043945
    8. ',' → logprob: -14.630449295043945
    9. '{' → logprob: -14.692949295043945
    10. '  ' → logprob: -14.755449295043945

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2043401449918747
    2. ' ' → logprob: -1.7043401002883911
    3. '-' → logprob: -6.204339981079102
    4. ' -' → logprob: -7.079339981079102
    5. '+' → logprob: -10.204339981079102
    6. ' +' → logprob: -12.329339981079102
    7. '90' → logprob: -12.579339981079102
    8. ',' → logprob: -13.204339981079102
    9. '0' → logprob: -13.204339981079102
    10. ')' → logprob: -13.829339981079102

Token 135: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16052144765853882
    2. ' =' → logprob: -1.9105215072631836
    3. ')' → logprob: -9.035521507263184
    4. ',' → logprob: -10.035521507263184
    5. ' ' → logprob: -10.535521507263184
    6. ' (' → logprob: -10.785521507263184
    7. ' =(' → logprob: -11.285521507263184
    8. ':' → logprob: -11.410521507263184
    9. '='' → logprob: -11.785521507263184
    10. ')=' → logprob: -12.035521507263184

Token 136: 'Right' (ID: 8627)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9182001948356628
    2. 'Right' → logprob: -1.9182002544403076
    3. 'Left' → logprob: -1.9182002544403076
    4. ' ' → logprob: -2.4182002544403076
    5. ' Left' → logprob: -2.4182002544403076
    6. ' Right' → logprob: -3.2932002544403076
    7. ''' → logprob: -3.9182002544403076
    8. ' left' → logprob: -3.9182002544403076
    9. 'left' → logprob: -4.4182000160217285
    10. ' right' → logprob: -4.6682000160217285

Token 137: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10684208571910858
    2. ')' → logprob: -2.481842041015625
    3. ',
' → logprob: -4.606842041015625
    4. ' ,' → logprob: -5.856842041015625
    5. '<|end|>' → logprob: -5.981842041015625
    6. '),' → logprob: -6.231842041015625
    7. ' )' → logprob: -9.606842041015625
    8. ',

' → logprob: -9.606842041015625
    9. ' ,
' → logprob: -10.106842041015625
    10. '+' → logprob: -10.481842041015625

Token 138: '90' (ID: 2744)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6212624907493591
    2. '+' → logprob: -1.371262550354004
    3. ' +' → logprob: -2.246262550354004
    4. '1' → logprob: -2.996262550354004
    5. ' ' → logprob: -3.496262550354004
    6. '),' → logprob: -4.496262550354004
    7. ' clockwise' → logprob: -5.496262550354004
    8. ' )' → logprob: -5.746262550354004
    9. '+)' → logprob: -7.621262550354004
    10. ')
' → logprob: -7.746262550354004

Token 139: ' deg' (ID: 5597)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003639511065557599
    2. ' )' → logprob: -6.7536396980285645
    3. '),' → logprob: -7.1286396980285645
    4. '<|end|>' → logprob: -7.8786396980285645
    5. ')
' → logprob: -8.003639221191406
    6. ' clockwise' → logprob: -8.128639221191406
    7. ' ' → logprob: -9.128639221191406
    8. ' degrees' → logprob: -9.378639221191406
    9. '-degree' → logprob: -9.753639221191406
    10. '90' → logprob: -9.878639221191406

Token 140: ' clockwise' (ID: 141888)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049470897763967514
    2. '),' → logprob: -3.174470901489258
    3. ' )' → logprob: -6.049470901489258
    4. ' clockwise' → logprob: -6.424470901489258
    5. '),
' → logprob: -6.674470901489258
    6. ' ),' → logprob: -7.049470901489258
    7. '),

' → logprob: -9.299470901489258
    8. ' turn' → logprob: -10.424470901489258
    9. 'clock' → logprob: -10.424470901489258
    10. ' ),
' → logprob: -10.424470901489258

Token 141: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6821239590644836
    2. '),
' → logprob: -0.8071239590644836
    3. ')' → logprob: -3.057123899459839
    4. '),

' → logprob: -7.682124137878418
    5. ' ),
' → logprob: -8.057124137878418
    6. ' ),' → logprob: -8.057124137878418
    7. '),
' → logprob: -9.182124137878418
    8. ')
' → logprob: -9.682124137878418
    9. ' )' → logprob: -11.182124137878418
    10. '   ' → logprob: -12.557124137878418

Token 142: '   ' (ID: 271)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05296649783849716
    2. ' ' → logprob: -3.302966594696045
    3. '   ' → logprob: -5.177966594696045
    4. ')' → logprob: -5.302966594696045
    5. '    ' → logprob: -5.677966594696045
    6. '1' → logprob: -8.052966117858887
    7. ' )' → logprob: -8.302966117858887
    8. '#' → logprob: -10.427966117858887
    9. ' 
' → logprob: -10.677966117858887
    10. ',' → logprob: -10.802966117858887

Token 143: ' #' (ID: 1069)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6353288888931274
    2. ' ' → logprob: -0.7603288888931274
    3. '    ' → logprob: -6.135328769683838
    4. '   ' → logprob: -7.760328769683838
    5. '     ' → logprob: -9.760329246520996
    6. ')' → logprob: -10.385329246520996
    7. '  ' → logprob: -10.760329246520996
    8. '#' (adapté à ' #') → logprob: -12.635329246520996
    9. '-' → logprob: -12.885329246520996
    10. '      ' → logprob: -13.010329246520996

Token 144: '     ' (ID: 530)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47582417726516724
    2. ' ' → logprob: -0.9758241772651672
    3. '    ' → logprob: -6.475824356079102
    4. '   ' → logprob: -8.975824356079102
    5. '     ' → logprob: -10.975824356079102
    6. '  ' → logprob: -11.100824356079102
    7. '-' → logprob: -11.225824356079102
    8. ')' → logprob: -11.975824356079102
    9. ' -' → logprob: -12.475824356079102
    10. ',' → logprob: -12.600824356079102

Token 145: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16105158627033234
    2. '2' → logprob: -1.911051630973816
    3. ' -' → logprob: -7.4110517501831055
    4. '-' → logprob: -8.536051750183105
    5. ')' → logprob: -11.286051750183105
    6. ' )' → logprob: -12.911051750183105
    7. '   ' → logprob: -13.348551750183105
    8. '    ' → logprob: -13.598551750183105
    9. ' def' → logprob: -14.098551750183105
    10. '1' → logprob: -14.161051750183105

Token 146: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5527660846710205
    2. '2' → logprob: -1.0527660846710205
    3. ' -' → logprob: -2.9277660846710205
    4. '-' → logprob: -3.9277660846710205
    5. ')' → logprob: -6.677765846252441
    6. '3' → logprob: -7.177765846252441
    7. ' )' → logprob: -8.552765846252441
    8. '   ' → logprob: -10.302765846252441
    9. '  ' → logprob: -10.365265846252441
    10. ')
' → logprob: -10.740265846252441

Token 147: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.9186317482963204e-05
    2. ' =' → logprob: -10.000049591064453
    3. ' ' → logprob: -13.625049591064453
    4. '=(' → logprob: -14.750049591064453
    5. ' Left' → logprob: -15.000049591064453
    6. '=C' → logprob: -15.500049591064453
    7. '=
' → logprob: -16.250049591064453
    8. 'Left' → logprob: -16.250049591064453
    9. '=None' → logprob: -16.375049591064453
    10. '=

' → logprob: -16.375049591064453

Token 148: 'Back' (ID: 4933)
  Prédit: 'Left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.04438677430152893
    2. ' Left' → logprob: -3.544386863708496
    3. '2' → logprob: -4.419386863708496
    4. ' ' → logprob: -7.044386863708496
    5. '180' → logprob: -7.294386863708496
    6. ' left' → logprob: -8.044386863708496
    7. 'left' → logprob: -8.169386863708496
    8. '-' → logprob: -9.794386863708496
    9. ' U' → logprob: -9.919386863708496
    10. '_left' → logprob: -10.169386863708496

Token 149: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047370001673698425
    2. 'ward' → logprob: -3.297369956970215
    3. 'wards' → logprob: -5.922369956970215
    4. ' ' → logprob: -6.422369956970215
    5. '   ' → logprob: -6.672369956970215
    6. '(' → logprob: -7.047369956970215
    7. ' )' → logprob: -7.172369956970215
    8. 'space' → logprob: -7.547369956970215
    9. ' (' → logprob: -8.297369956970215
    10. '=' → logprob: -8.297369956970215

Token 150: '180' (ID: 7521)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7170916795730591
    2. '2' → logprob: -0.9670916795730591
    3. '180' → logprob: -2.2170915603637695
    4. ')' → logprob: -3.9670915603637695
    5. '90' → logprob: -6.0920915603637695
    6. '270' → logprob: -7.8420915603637695
    7. '```' → logprob: -8.34209156036377
    8. '1' → logprob: -8.71709156036377
    9. ' )' → logprob: -8.96709156036377
    10. ' (' → logprob: -9.21709156036377

Token 151: ' deg' (ID: 5597)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.168507382273674
    2. ')' → logprob: -2.6685073375701904
    3. ' ),' → logprob: -2.6685073375701904
    4. '),
' → logprob: -5.5435075759887695
    5. ' ' → logprob: -5.7935075759887695
    6. '),

' → logprob: -5.7935075759887695
    7. '   ' → logprob: -6.4185075759887695
    8. ' )' → logprob: -6.6685075759887695
    9. ' ),
' → logprob: -7.1685075759887695
    10. 'deg' → logprob: -7.2935075759887695

Token 152: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04174206778407097
    2. ')' → logprob: -3.6667420864105225
    3. '),
' → logprob: -5.041741847991943
    4. 'deg' → logprob: -6.041741847991943
    5. '),

' → logprob: -6.291741847991943
    6. ' ),' → logprob: -6.541741847991943
    7. ' clockwise' → logprob: -7.291741847991943
    8. 'degrees' → logprob: -7.791741847991943
    9. 'turn' → logprob: -8.041742324829102
    10. 'clock' → logprob: -8.166742324829102

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14516587555408478
    2. '3' → logprob: -2.6451659202575684
    3. ' ' → logprob: -3.5201659202575684
    4. '1' → logprob: -4.145165920257568
    5. '#' → logprob: -4.270165920257568
    6. ')' → logprob: -6.520165920257568
    7. '    ' → logprob: -6.770165920257568
    8. '2' → logprob: -7.145165920257568
    9. '4' → logprob: -7.145165920257568
    10. '  ' → logprob: -8.39516544342041

Token 154: ' #' (ID: 1069)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.406361848115921
    2. '   ' → logprob: -1.2813618183135986
    3. '1' → logprob: -3.0313618183135986
    4. ' ' → logprob: -5.031362056732178
    5. '#' (adapté à ' #') → logprob: -6.906362056732178
    6. ')' → logprob: -8.65636157989502
    7. '  ' → logprob: -9.15636157989502
    8. '    ' → logprob: -9.28136157989502
    9. '2' → logprob: -9.53136157989502
    10. '4' → logprob: -10.90636157989502

Token 155: '     ' (ID: 530)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11798708140850067
    2. '     ' → logprob: -3.2429871559143066
    3. '    ' → logprob: -3.3679871559143066
    4. ' ' → logprob: -3.6179871559143066
    5. '   ' → logprob: -4.867987155914307
    6. '1' → logprob: -5.992987155914307
    7. '      ' → logprob: -8.367986679077148
    8. '  ' → logprob: -8.617986679077148
    9. ')' → logprob: -8.992986679077148
    10. '        ' → logprob: -9.867986679077148

Token 156: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03805939108133316
    2. ' ' → logprob: -3.2880594730377197
    3. '   ' → logprob: -11.78805923461914
    4. '1' → logprob: -12.28805923461914
    5. ')' → logprob: -12.97555923461914
    6. '    ' → logprob: -14.47555923461914
    7. '  ' → logprob: -14.85055923461914
    8. '```' → logprob: -15.22555923461914
    9. ' -' → logprob: -15.35055923461914
    10. '     ' → logprob: -15.53805923461914

Token 157: '3' (ID: 18)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3871648907661438
    2. '3' → logprob: -1.137164831161499
    3. '   ' → logprob: -9.262165069580078
    4. '     ' → logprob: -9.262165069580078
    5. '    ' → logprob: -10.262165069580078
    6. ')' → logprob: -10.387165069580078
    7. '  ' → logprob: -11.012165069580078
    8. '1' → logprob: -11.387165069580078
    9. ' ' → logprob: -13.137165069580078
    10. '      ' → logprob: -13.324665069580078

Token 158: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.438573680294212e-06
    2. ' =' → logprob: -12.375005722045898
    3. '=

' → logprob: -15.375005722045898
    4. '=None' → logprob: -15.500005722045898
    5. ')' → logprob: -15.625005722045898
    6. ')=' → logprob: -16.2500057220459
    7. '=S' → logprob: -16.7500057220459
    8. '==' → logprob: -17.0000057220459
    9. '=(' → logprob: -17.2500057220459
    10. '=lambda' → logprob: -17.2500057220459

Token 159: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.00023214559769257903
    2. ' Left' → logprob: -8.500231742858887
    3. '1' → logprob: -11.625231742858887
    4. 'Right' → logprob: -11.625231742858887
    5. 'left' → logprob: -12.375231742858887
    6. '_Left' → logprob: -12.500231742858887
    7. '_left' → logprob: -13.625231742858887
    8. ' ' → logprob: -14.750231742858887
    9. ' left' → logprob: -14.875231742858887
    10. '0' → logprob: -15.750231742858887

Token 160: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020444484427571297
    2. ' )' → logprob: -4.520444393157959
    3. '(direction' → logprob: -5.145444393157959
    4. ' (' → logprob: -6.270444393157959
    5. '):' → logprob: -7.645444393157959
    6. ')
' → logprob: -8.270444869995117
    7. 'direction' → logprob: -8.395444869995117
    8. '):
' → logprob: -8.520444869995117
    9. 'def' → logprob: -9.395444869995117
    10. '(' → logprob: -9.395444869995117

Token 161: '90' (ID: 2744)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6203187704086304
    2. '90' → logprob: -0.9953187704086304
    3. '1' → logprob: -2.49531888961792
    4. ')' → logprob: -5.12031888961792
    5. '270' → logprob: -5.62031888961792
    6. ' -' → logprob: -8.870318412780762
    7. '3' → logprob: -9.120318412780762
    8. '  ' → logprob: -9.495318412780762
    9. ' )' → logprob: -9.870318412780762
    10. '   ' → logprob: -10.620318412780762

Token 162: ' deg' (ID: 5597)
  Prédit: ' deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.06427015364170074
    2. ' counter' → logprob: -2.939270257949829
    3. 'deg' → logprob: -5.31427001953125
    4. ' ' → logprob: -6.56427001953125
    5. ')' → logprob: -6.93927001953125
    6. ' antic' → logprob: -7.18927001953125
    7. 'counter' → logprob: -7.31427001953125
    8. ' ' → logprob: -8.81427001953125
    9. ' )' → logprob: -9.06427001953125
    10. 'Counter' → logprob: -9.68927001953125

Token 163: ' counter' (ID: 9446)
  Prédit: ' counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.2617590129375458
    2. ')' → logprob: -1.7617590427398682
    3. 'counter' → logprob: -3.511759042739868
    4. ' antic' → logprob: -3.761759042739868
    5. 'antic' → logprob: -6.511758804321289
    6. ' )' → logprob: -7.261758804321289
    7. ' ' → logprob: -7.261758804321289
    8. '),' → logprob: -7.511758804321289
    9. ' clockwise' → logprob: -7.761758804321289
    10. '_counter' → logprob: -7.886758804321289

Token 164: 'clock' (ID: 34421)
  Prédit: 'clock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.0005599428550340235
    2. '-clock' → logprob: -8.00055980682373
    3. ' clockwise' → logprob: -8.75055980682373
    4. '_clock' → logprob: -9.75055980682373
    5. ')' → logprob: -12.62555980682373
    6. '(clock' → logprob: -13.50055980682373
    7. 'counter' → logprob: -14.25055980682373
    8. 'cl' → logprob: -14.50055980682373
    9. 'clk' → logprob: -14.62555980682373
    10. ''clock' → logprob: -15.37555980682373

Token 165: 'wise' (ID: 7480)
  Prédit: 'ock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ock' → logprob: -0.44505855441093445
    2. 'lock' → logprob: -1.8200585842132568
    3. 'wise' → logprob: -2.195058584213257
    4. 'clock' → logprob: -2.570058584213257
    5. ')' → logprob: -5.445058345794678
    6. 'ok' → logprob: -7.320058345794678
    7. '   ' → logprob: -7.445058345794678
    8. ')
' → logprob: -7.570058345794678
    9. 'oc' → logprob: -8.070058822631836
    10. 'ck' → logprob: -8.070058822631836

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07978449016809464
    2. '):' → logprob: -2.579784393310547
    3. '):
' → logprob: -7.079784393310547
    4. ')
' → logprob: -11.079784393310547
    5. ' )' → logprob: -11.079784393310547
    6. '):

' → logprob: -11.329784393310547
    7. '),' → logprob: -12.829784393310547
    8. '):
' → logprob: -12.954784393310547
    9. ' ):' → logprob: -13.454784393310547
    10. '   ' → logprob: -13.829784393310547

Token 167: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14119580388069153
    2. '   ' → logprob: -2.141195774078369
    3. ':
' → logprob: -4.766195774078369
    4. '):' → logprob: -5.641195774078369
    5. ')' → logprob: -6.891195774078369
    6. '):
' → logprob: -7.766195774078369
    7. ' :' → logprob: -8.391196250915527
    8. ':return' → logprob: -8.641196250915527
    9. ',' → logprob: -9.766196250915527
    10. ' :
' → logprob: -10.266196250915527

Token 168: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014740417711436749
    2. ' return' → logprob: -4.514740467071533
    3. '
' → logprob: -6.639740467071533
    4. 'return' (adapté à ' return') → logprob: -7.264740467071533
    5. ' direction' → logprob: -7.389740467071533
    6. ' new' → logprob: -8.264739990234375
    7. ' 
' → logprob: -8.264739990234375
    8. '    
' → logprob: -8.764739990234375
    9. '    ' → logprob: -8.889739990234375
    10. 'direction' → logprob: -9.764739990234375

Token 169: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0005750744021497667
    2. '(direction' → logprob: -8.000575065612793
    3. '(d' → logprob: -8.375575065612793
    4. ' ' → logprob: -12.000575065612793
    5. '(dir' → logprob: -13.500575065612793
    6. '(' → logprob: -14.750575065612793
    7. ' directions' → logprob: -15.625575065612793
    8. ' ' → logprob: -15.625575065612793
    9. '(de' → logprob: -16.12557601928711
    10. '(s' → logprob: -16.12557601928711

Token 170: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.038217052817344666
    2. ' direction' → logprob: -3.288217067718506
    3. '(direction' → logprob: -8.663216590881348
    4. '   ' → logprob: -13.038216590881348
    5. ' (' → logprob: -15.538216590881348
    6. 'dire' → logprob: -15.788216590881348
    7. '_direction' → logprob: -16.038217544555664
    8. ' ' → logprob: -16.788217544555664
    9. '.direction' → logprob: -17.288217544555664
    10. 'directory' → logprob: -17.788217544555664

Token 171: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.009757863357663155
    2. '+' → logprob: -4.634757995605469
    3. ' ' → logprob: -13.509757995605469
    4. ' ' → logprob: -15.259757995605469
    5. ' +
' → logprob: -16.00975799560547
    6. ' plus' → logprob: -16.50975799560547
    7. ' +(' → logprob: -16.88475799560547
    8. '+(' → logprob: -18.25975799560547
    9. ')' → logprob: -18.50975799560547
    10. ' (+' → logprob: -18.88475799560547

Token 172: ' [' (ID: 723)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.01439337246119976
    2. ' cmd' → logprob: -4.264393329620361
    3. '(cmd' → logprob: -8.38939380645752
    4. '{' → logprob: -13.63939380645752
    5. '	cmd' → logprob: -14.51439380645752
    6. '[' → logprob: -14.63939380645752
    7. '{
' → logprob: -15.51439380645752
    8. ' (' → logprob: -15.76439380645752
    9. '_cmd' → logprob: -15.88939380645752
    10. '.cmd' → logprob: -17.264392852783203

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.762356209335849e-05
    2. ' ' → logprob: -10.37503719329834
    3. '   ' → logprob: -12.87503719329834
    4. 'cmd' → logprob: -13.62503719329834
    5. '```' → logprob: -14.50003719329834
    6. '
' → logprob: -14.75003719329834
    7. '1' → logprob: -15.12503719329834
    8. '  ' → logprob: -15.50003719329834
    9. '{' → logprob: -15.81253719329834
    10. ']' → logprob: -15.93753719329834

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.240481914370321e-05
    2. ' ,' → logprob: -10.250052452087402
    3. ',
' → logprob: -11.625052452087402
    4. '0' → logprob: -11.750052452087402
    5. '1' → logprob: -16.625051498413086
    6. ',
' → logprob: -17.500051498413086
    7. '   ' → logprob: -17.625051498413086
    8. ',int' → logprob: -17.750051498413086
    9. ',None' → logprob: -17.875051498413086
    10. ',

' → logprob: -18.375051498413086

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '-' → logprob: -16.12520408630371
    4. '
' → logprob: -16.31270408630371
    5. '3' → logprob: -16.43770408630371
    6. '   ' → logprob: -16.81270408630371
    7. '

' → logprob: -16.93770408630371
    8. '  ' → logprob: -17.62520408630371
    9. '```' → logprob: -17.93770408630371
    10. '0' → logprob: -18.00020408630371

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000556012790184468
    2. ' ,' → logprob: -8.125555992126465
    3. '2' → logprob: -8.375555992126465
    4. ',-' → logprob: -10.625555992126465
    5. ' ' → logprob: -12.750555992126465
    6. '3' → logprob: -13.500555992126465
    7. ',
' → logprob: -14.500555992126465
    8. ' ,-' → logprob: -15.750555992126465
    9. '   ' → logprob: -16.50055694580078
    10. '-' → logprob: -16.62555694580078

Token 177: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001589618914294988
    2. ' ' → logprob: -8.75015926361084
    3. '3' → logprob: -15.87515926361084
    4. '۲' → logprob: -16.750158309936523
    5. '   ' → logprob: -16.812658309936523
    6. '
' → logprob: -17.250158309936523
    7. '```' → logprob: -17.375158309936523
    8. '[' → logprob: -17.687658309936523
    9. '  ' → logprob: -17.875158309936523
    10. '２' → logprob: -18.000158309936523

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015157493180595338
    2. '3' → logprob: -8.875151634216309
    3. ' ,' → logprob: -11.375151634216309
    4. ' ' → logprob: -16.500150680541992
    5. ',-' → logprob: -16.750150680541992
    6. ',
' → logprob: -17.250150680541992
    7. ']' → logprob: -19.062650680541992
    8. '[' → logprob: -19.437650680541992
    9. '```' → logprob: -19.875150680541992
    10. '   ' → logprob: -20.000150680541992

Token 179: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00026217024424113333
    2. ' ' → logprob: -8.250262260437012
    3. '-' → logprob: -14.250262260437012
    4. ' -' → logprob: -16.125261306762695
    5. '   ' → logprob: -16.750261306762695
    6. '```' → logprob: -17.625261306762695
    7. '
' → logprob: -17.750261306762695
    8. '  ' → logprob: -18.250261306762695
    9. '۳' → logprob: -18.375261306762695
    10. ',' → logprob: -19.437761306762695

Token 180: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00012487331696320325
    2. ' ][' → logprob: -9.75012493133545
    3. '[' → logprob: -10.37512493133545
    4. ']' → logprob: -10.75012493133545
    5. '])[' → logprob: -11.87512493133545
    6. '])' → logprob: -12.75012493133545
    7. ')[' → logprob: -13.37512493133545
    8. '   ' → logprob: -14.25012493133545
    9. 'cmd' → logprob: -14.50012493133545
    10. '].' → logprob: -14.87512493133545

Token 181: 'cmd' (ID: 18804)
  Prédit: 'cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.00010044389637187123
    2. ' cmd' → logprob: -9.250100135803223
    3. '(cmd' → logprob: -12.375100135803223
    4. 'cm' → logprob: -17.75010108947754
    5. '	cmd' → logprob: -18.12510108947754
    6. '_cmd' → logprob: -19.00010108947754
    7. '   ' → logprob: -19.87510108947754
    8. '.cmd' → logprob: -20.62510108947754
    9. 'c' → logprob: -20.75010108947754
    10. '
' → logprob: -21.12510108947754

Token 182: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005815077456645668
    2. ')' → logprob: -7.500581741333008
    3. ']' → logprob: -11.250581741333008
    4. ' ])' → logprob: -11.250581741333008
    5. '))' → logprob: -13.750581741333008
    6. ')%' → logprob: -14.875581741333008
    7. ']))' → logprob: -15.250581741333008
    8. ' )' → logprob: -15.375581741333008
    9. '})' → logprob: -15.375581741333008
    10. '   ' → logprob: -16.500581741333008

Token 183: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.021173158660531044
    2. '%' → logprob: -4.146173000335693
    3. ')' → logprob: -5.396173000335693
    4. ' ' → logprob: -8.396173477172852
    5. '<|end|>' → logprob: -8.771173477172852
    6. ' )' → logprob: -9.396173477172852
    7. ')%' → logprob: -9.396173477172852
    8. ' ' → logprob: -10.271173477172852
    9. ' %)' → logprob: -13.146173477172852
    10. ']' → logprob: -13.896173477172852

Token 184: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -20.501928329467773
    4. '```' → logprob: -20.501928329467773
    5. ' ' → logprob: -21.126928329467773
    6. '' → logprob: -21.751928329467773
    7. '  ' → logprob: -21.876928329467773
    8. '۴' → logprob: -22.126928329467773
    9. '`' → logprob: -22.126928329467773
    10. '٤' → logprob: -22.501928329467773

Token 185: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۴' → logprob: -20.875
    4. 'len' → logprob: -21.625
    5. '４' → logprob: -21.875
    6. '٤' → logprob: -22.375
    7. '' → logprob: -22.5
    8. '```' → logprob: -23.0
    9. '৪' → logprob: -23.375
    10. '४' → logprob: -23.5

Token 186: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5467719435691833
    2. '<|end|>' → logprob: -1.0467720031738281
    3. 'def' → logprob: -2.921772003173828
    4. '

' → logprob: -4.296772003173828
    5. '<|end|>' → logprob: -6.796772003173828
    6. '```' → logprob: -7.796772003173828
    7. '
' → logprob: -8.171772003173828
    8. 'newline' → logprob: -8.546772003173828
    9. '#' → logprob: -8.921772003173828
    10. '\n' → logprob: -9.296772003173828

Token 187: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3361683785915375
    2. '
' → logprob: -1.5861684083938599
    3. '

' → logprob: -2.5861682891845703
    4. '<|end|>' → logprob: -5.33616828918457
    5. '
' → logprob: -8.71116828918457
    6. ' def' → logprob: -9.21116828918457
    7. '<|end|>' → logprob: -9.46116828918457
    8. '```' → logprob: -9.58616828918457
    9. '  
' → logprob: -9.96116828918457
    10. '#' → logprob: -10.21116828918457

Token 188: ' solve' (ID: 17722)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.781946063041687
    2. ' shortest' → logprob: -1.156946063041687
    3. ' solve' → logprob: -2.2819461822509766
    4. ' find' → logprob: -3.6569461822509766
    5. ' ast' → logprob: -3.6569461822509766
    6. ' min' → logprob: -4.156946182250977
    7. 'd' → logprob: -4.156946182250977
    8. ' main' → logprob: -4.281946182250977
    9. ' minimum' → logprob: -4.906946182250977
    10. ' minimal' → logprob: -5.656946182250977

Token 189: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6125394105911255
    2. '(' → logprob: -1.1125394105911255
    3. '(grid' → logprob: -2.612539291381836
    4. ' ():' → logprob: -4.237539291381836
    5. ' (' → logprob: -4.362539291381836
    6. '(n' → logprob: -4.737539291381836
    7. '(rows' → logprob: -5.612539291381836
    8. '(row' → logprob: -5.987539291381836
    9. '(N' → logprob: -6.112539291381836
    10. '(m' → logprob: -6.237539291381836

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023254600819200277
    2. ' import' → logprob: -6.502325534820557
    3. ' n' → logprob: -7.752325534820557
    4. ' input' → logprob: -8.627325057983398
    5. 'import' → logprob: -9.127325057983398
    6. 'n' → logprob: -9.877325057983398
    7. '    ' → logprob: -11.127325057983398
    8. ' readline' → logprob: -11.127325057983398
    9. ' line' → logprob: -12.377325057983398
    10. ' sys' → logprob: -12.502325057983398

Token 191: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16597843170166016
    2. 'n' → logprob: -2.91597843170166
    3. '   ' → logprob: -3.29097843170166
    4. ' input' → logprob: -3.41597843170166
    5. ' import' → logprob: -3.66597843170166
    6. 'import' → logprob: -6.79097843170166
    7. ' T' → logprob: -7.41597843170166
    8. ' t' → logprob: -7.79097843170166
    9. ' N' → logprob: -8.04097843170166
    10. 'input' (adapté à ' input') → logprob: -8.41597843170166

Token 192: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007923753000795841
    2. '_line' → logprob: -5.507923603057861
    3. '_data' → logprob: -6.132923603057861
    4. ' =' → logprob: -6.757923603057861
    5. '_lines' → logprob: -9.00792407989502
    6. '=' → logprob: -9.13292407989502
    7. '().' → logprob: -9.13292407989502
    8. '_' → logprob: -9.50792407989502
    9. 'data' → logprob: -10.38292407989502
    10. '(' → logprob: -11.25792407989502

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7590008974075317
    2. '=' → logprob: -0.8840008974075317
    3. '()' → logprob: -2.134000778198242
    4. '=[]' → logprob: -8.759000778198242
    5. '=sys' → logprob: -9.509000778198242
    6. '().' → logprob: -9.884000778198242
    7. '[]' → logprob: -11.009000778198242
    8. '   ' → logprob: -11.134000778198242
    9. ' ()' → logprob: -11.759000778198242
    10. '.' → logprob: -12.259000778198242

Token 194: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3868744373321533
    2. ' sys' → logprob: -1.1368744373321533
    3. '	sys' → logprob: -13.136874198913574
    4. '=sys' → logprob: -14.386874198913574
    5. '(sys' → logprob: -15.011874198913574
    6. '[' → logprob: -15.011874198913574
    7. ' [' → logprob: -15.511874198913574
    8. 'list' → logprob: -17.01187515258789
    9. ' ' → logprob: -17.76187515258789
    10. ' list' → logprob: -18.76187515258789

Token 195: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004469964769668877
    2. '.' → logprob: -7.875446796417236
    3. '.readline' → logprob: -9.750447273254395
    4. '.stdout' → logprob: -12.750447273254395
    5. '.argv' → logprob: -12.875447273254395
    6. '().' → logprob: -13.625447273254395
    7. '.std' → logprob: -13.875447273254395
    8. 'stdin' → logprob: -15.125447273254395
    9. ' .' → logprob: -15.625447273254395
    10. '.st' → logprob: -15.875447273254395

Token 196: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002923160558566451
    2. '.readlines' → logprob: -5.877923011779785
    3. '.' → logprob: -10.127923011779785
    4. '.read' → logprob: -10.252923011779785
    5. 'read' → logprob: -10.502923011779785
    6. ' readline' → logprob: -11.127923011779785
    7. 'buffer' → logprob: -14.877923011779785
    8. '_read' → logprob: -15.252923011779785
    9. '.buffer' → logprob: -15.502923011779785
    10. '_buffer' → logprob: -17.0029239654541

Token 197: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002476604888215661
    2. '()' → logprob: -6.002476692199707
    3. '(' → logprob: -14.502476692199707
    4. ' ().' → logprob: -16.00247573852539
    5. '()).' → logprob: -16.12747573852539
    6. '()

' → logprob: -16.25247573852539
    7. '()
' → logprob: -16.37747573852539
    8. '()`' → logprob: -17.75247573852539
    9. '())' → logprob: -18.37747573852539
    10. ' ()' → logprob: -18.87747573852539

Token 198: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.25193166732788086
    2. 'split' → logprob: -1.5019316673278809
    3. 'decode' → logprob: -13.251932144165039
    4. 'rstrip' → logprob: -14.376932144165039
    5. ' split' → logprob: -15.626932144165039
    6. ' strip' → logprob: -16.25193214416504
    7. 'str' → logprob: -18.00193214416504
    8. '(split' → logprob: -18.62693214416504
    9. 'read' → logprob: -20.00193214416504
    10. '(strip' → logprob: -20.12693214416504

Token 199: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015041481237858534
    2. '()' → logprob: -6.501503944396973
    3. '(' → logprob: -13.626503944396973
    4. '()
' → logprob: -15.376503944396973
    5. ' ().' → logprob: -15.501503944396973
    6. 'split' → logprob: -15.626503944396973
    7. '()

' → logprob: -17.75150489807129
    8. '.split' → logprob: -18.00150489807129
    9. '('' → logprob: -18.37650489807129
    10. '().'' → logprob: -18.75150489807129

Token 200: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.25
    3. '(split' → logprob: -16.625
    4. '```' → logprob: -18.125
    5. 'replace' → logprob: -19.75
    6. 'decode' → logprob: -19.875
    7. 'plit' → logprob: -20.5
    8. '.split' → logprob: -20.5
    9. 'strip' → logprob: -20.75
    10. ' ' → logprob: -21.25

Token 201: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.016119297593832016
    2. '()' → logprob: -4.266119480133057
    3. 'lines' → logprob: -6.516119480133057
    4. '("\' → logprob: -8.391119003295898
    5. '('' → logprob: -8.891119003295898
    6. '(' → logprob: -9.141119003295898
    7. '()\' → logprob: -13.141119003295898
    8. '()
' → logprob: -15.016119003295898
    9. '()[' → logprob: -15.641119003295898
    10. '(\' → logprob: -16.1411190032959

Token 202: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.372294698550832e-06
    2. '\n' → logprob: -11.625009536743164
    3. '
' → logprob: -15.625009536743164
    4. ' n' → logprob: -15.750009536743164
    5. 'lines' → logprob: -17.625009536743164
    6. '

' → logprob: -17.875009536743164
    7. 'newline' → logprob: -18.250009536743164
    8. '\' → logprob: -18.375009536743164
    9. '	n' → logprob: -18.375009536743164
    10. ')n' → logprob: -18.750009536743164

Token 203: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004306922201067209
    2. '')' → logprob: -5.504306793212891
    3. ')
' → logprob: -9.00430679321289
    4. '   ' → logprob: -9.37930679321289
    5. '")' → logprob: -12.37930679321289
    6. ' )' → logprob: -12.50430679321289
    7. ']' → logprob: -12.87930679321289
    8. '')
' → logprob: -13.00430679321289
    9. ')

' → logprob: -13.62930679321289
    10. '()' → logprob: -13.75430679321289

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15155029296875
    2. 'n' → logprob: -2.40155029296875
    3. ' n' → logprob: -3.02655029296875
    4. 'i' → logprob: -7.40155029296875
    5. 'idx' → logprob: -8.02655029296875
    6. 'N' → logprob: -8.65155029296875
    7. ' idx' → logprob: -8.77655029296875
    8. ' i' → logprob: -9.27655029296875
    9. '    
' → logprob: -10.27655029296875
    10. ' for' → logprob: -10.52655029296875

Token 205: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.844556450843811
    2. 't' → logprob: -1.219556450843811
    3. 'T' → logprob: -1.594556450843811
    4. '   ' → logprob: -3.7195563316345215
    5. 'N' → logprob: -3.8445563316345215
    6. 'idx' (adapté à ' idx') → logprob: -4.4695563316345215
    7. 'H' → logprob: -4.9695563316345215
    8. 'num' → logprob: -6.5945563316345215
    9. 'h' → logprob: -6.7195563316345215
    10. 'i' → logprob: -6.8445563316345215

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02976194955408573
    2. '=' → logprob: -3.529762029647827
    3. ' ' → logprob: -11.904762268066406
    4. ' +=' → logprob: -12.654762268066406
    5. ')' → logprob: -14.404762268066406
    6. ',' → logprob: -15.654762268066406
    7. '   ' → logprob: -15.904762268066406
    8. 's' → logprob: -16.154762268066406
    9. ' =
' → logprob: -16.279762268066406
    10. '  ' → logprob: -16.529762268066406

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015381926205009222
    2. ' ' → logprob: -7.001538276672363
    3. '1' → logprob: -7.376538276672363
    4. '2' → logprob: -14.376538276672363
    5. '   ' → logprob: -17.001537322998047
    6. 'int' → logprob: -17.376537322998047
    7. '3' → logprob: -17.751537322998047
    8. '  ' → logprob: -18.689037322998047
    9. '=' → logprob: -19.126537322998047
    10. '4' → logprob: -19.126537322998047

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035929924342781305
    2. '1' → logprob: -8.000359535217285
    3. ' ' → logprob: -10.750359535217285
    4. '2' → logprob: -13.000359535217285
    5. '3' → logprob: -16.87535858154297
    6. '   ' → logprob: -17.68785858154297
    7. '4' → logprob: -18.12535858154297
    8. '```' → logprob: -18.25035858154297
    9. '-' → logprob: -18.31285858154297
    10. '=' → logprob: -18.43785858154297

Token 209: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8369177579879761
    2. ' while' → logprob: -1.086917757987976
    3. 'while' → logprob: -1.586917757987976
    4. 'n' → logprob: -4.336917877197266
    5. '
' → logprob: -4.961917877197266
    6. '    
' → logprob: -5.711917877197266
    7. '<|end|>' → logprob: -7.836917877197266
    8. '	while' → logprob: -8.336917877197266
    9. ' n' → logprob: -8.586917877197266
    10. 't' → logprob: -8.586917877197266

Token 210: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6051469445228577
    2. '   ' → logprob: -1.355146884918213
    3. 'n' → logprob: -2.355146884918213
    4. ' while' → logprob: -2.355146884918213
    5. 't' → logprob: -6.230146884918213
    6. ' n' → logprob: -7.105146884918213
    7. 'N' → logprob: -7.355146884918213
    8. '<|end|>' → logprob: -7.355146884918213
    9. 'T' → logprob: -7.605146884918213
    10. ',' → logprob: -7.605146884918213

Token 211: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.022557014599442482
    2. ' while' → logprob: -4.022556781768799
    3. 'n' → logprob: -6.522556781768799
    4. 't' → logprob: -6.647556781768799
    5. 'T' → logprob: -6.647556781768799
    6. '   ' → logprob: -8.397557258605957
    7. ' T' → logprob: -10.022557258605957
    8. 'w' → logprob: -10.772557258605957
    9. 'N' → logprob: -11.397557258605957
    10. ' t' → logprob: -11.897557258605957

Token 212: ' Parse' (ID: 26701)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00863324198871851
    2. ' while' → logprob: -5.008633136749268
    3. 'n' → logprob: -6.883633136749268
    4. 'T' → logprob: -7.508633136749268
    5. 't' → logprob: -8.133633613586426
    6. 'N' → logprob: -11.508633613586426
    7. ' T' → logprob: -11.883633613586426
    8. 'w' → logprob: -11.883633613586426
    9. 'results' → logprob: -12.508633613586426
    10. 'num' → logprob: -12.633633613586426

Token 213: ' input' (ID: 3422)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.02424156665802
    2. 't' → logprob: -1.27424156665802
    3. ' T' → logprob: -1.77424156665802
    4. 'T' → logprob: -2.2742414474487305
    5. 'n' → logprob: -3.8992414474487305
    6. ' n' → logprob: -4.0242414474487305
    7. ' while' → logprob: -4.1492414474487305
    8. 'while' → logprob: -4.1492414474487305
    9. '   ' → logprob: -4.3992414474487305
    10. 'num' → logprob: -6.6492414474487305

Token 214: ' dataset' (ID: 20830)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8528420925140381
    2. ' while' → logprob: -1.102842092514038
    3. 'n' → logprob: -1.727842092514038
    4. '   ' → logprob: -3.477842092514038
    5. ' n' → logprob: -4.102842330932617
    6. 'N' → logprob: -5.227842330932617
    7. 't' → logprob: -5.852842330932617
    8. ',' → logprob: -6.352842330932617
    9. 'T' → logprob: -6.477842330932617
    10. 'H' → logprob: -6.727842330932617

Token 215: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2511792778968811
    2. 'while' → logprob: -2.5011792182922363
    3. ' while' → logprob: -2.7511792182922363
    4. 'n' → logprob: -2.7511792182922363
    5. 't' → logprob: -5.501179218292236
    6. ' n' → logprob: -6.001179218292236
    7. 'T' → logprob: -6.251179218292236
    8. ' T' → logprob: -6.376179218292236
    9. ',' → logprob: -7.126179218292236
    10. 'N' → logprob: -7.751179218292236

Token 216: ' dataset' (ID: 20830)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9297125935554504
    2. 'while' → logprob: -1.4297125339508057
    3. ' while' → logprob: -1.6797125339508057
    4. ' idx' → logprob: -2.8047125339508057
    5. ' line' → logprob: -3.4297125339508057
    6. '1' → logprob: -3.6797125339508057
    7. 'idx' → logprob: -3.9297125339508057
    8. '2' → logprob: -4.304712772369385
    9. 'line' → logprob: -4.429712772369385
    10. '4' → logprob: -5.054712772369385

Token 217: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07958712428808212
    2. ' while' → logprob: -2.57958722114563
    3. '   ' → logprob: -7.454586982727051
    4. '
' → logprob: -10.07958698272705
    5. '<|end|>' → logprob: -10.32958698272705
    6. '	while' → logprob: -10.82958698272705
    7. ',' → logprob: -11.82958698272705
    8. 'n' → logprob: -12.07958698272705
    9. 'While' → logprob: -12.82958698272705
    10. '    
' → logprob: -13.20458698272705

Token 218: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6114505529403687
    2. 'while' → logprob: -0.8614505529403687
    3. '   ' → logprob: -3.361450672149658
    4. 'n' → logprob: -8.9864501953125
    5. '	while' → logprob: -10.3614501953125
    6. ' n' → logprob: -10.8614501953125
    7. '
' → logprob: -11.6114501953125
    8. '    
' → logprob: -12.3614501953125
    9. '```' → logprob: -12.4864501953125
    10. 't' → logprob: -12.8614501953125

Token 219: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.03488495573401451
    2. ' while' → logprob: -3.4098849296569824
    3. 'n' → logprob: -6.909884929656982
    4. '   ' → logprob: -9.03488540649414
    5. 't' → logprob: -9.90988540649414
    6. 'T' → logprob: -10.15988540649414
    7. ' n' → logprob: -11.15988540649414
    8. ' T' → logprob: -12.03488540649414
    9. 'N' → logprob: -12.40988540649414
    10. 'num' → logprob: -13.03488540649414

Token 220: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.08746834844350815
    2. ' True' → logprob: -3.212468385696411
    3. 'idx' → logprob: -3.337468385696411
    4. 'True' → logprob: -4.837468147277832
    5. '	idx' → logprob: -11.087468147277832
    6. '(idx' → logprob: -11.212468147277832
    7. '(True' → logprob: -11.837468147277832
    8. '   ' → logprob: -13.337468147277832
    9. ' ' → logprob: -13.962468147277832
    10. '[idx' → logprob: -14.337468147277832

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036472335923463106
    2. ':
' → logprob: -5.878647327423096
    3. '   ' → logprob: -7.628647327423096
    4. '       ' → logprob: -9.253646850585938
    5. ',' → logprob: -9.378646850585938
    6. '<|end|>' → logprob: -10.128646850585938
    7. '):' → logprob: -10.253646850585938
    8. ' and' → logprob: -10.378646850585938
    9. ' :' → logprob: -11.128646850585938
    10. '.' → logprob: -11.628646850585938

Token 222: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5275889039039612
    2. '       ' → logprob: -0.9025889039039612
    3. ' if' → logprob: -5.777588844299316
    4. 'n' → logprob: -8.652588844299316
    5. 'if' → logprob: -8.652588844299316
    6. '    ' → logprob: -8.902588844299316
    7. '<|end|>' → logprob: -8.902588844299316
    8. ',' → logprob: -9.152588844299316
    9. ' line' → logprob: -9.402588844299316
    10. ' ' → logprob: -9.402588844299316

Token 223: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7396540641784668
    2. 'H' → logprob: -1.9896540641784668
    3. ' if' → logprob: -2.114654064178467
    4. 'R' → logprob: -2.614654064178467
    5. 'W' → logprob: -3.114654064178467
    6. '   ' → logprob: -3.239654064178467
    7. 'line' → logprob: -3.739654064178467
    8. 'h' → logprob: -3.864654064178467
    9. 'w' → logprob: -4.364654064178467
    10. 'n' → logprob: -4.364654064178467

Token 224: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.02977907471358776
    2. 'idx' → logprob: -3.5297789573669434
    3. '	idx' → logprob: -10.529779434204102
    4. '   ' → logprob: -13.654779434204102
    5. '(idx' → logprob: -15.029779434204102
    6. '_idx' → logprob: -15.654779434204102
    7. '[idx' → logprob: -16.0297794342041
    8. '.idx' → logprob: -17.4047794342041
    9. 'Idx' → logprob: -17.9047794342041
    10. ' not' → logprob: -18.0297794342041

Token 225: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.12701021134853363
    2. ' >=' → logprob: -2.1270101070404053
    3. ']>=' → logprob: -10.002010345458984
    4. '==' → logprob: -10.877010345458984
    5. ')>=' → logprob: -11.252010345458984
    6. ' ' → logprob: -13.502010345458984
    7. ' ==' → logprob: -13.502010345458984
    8. '=' → logprob: -14.252010345458984
    9. '[' → logprob: -14.752010345458984
    10. ')' → logprob: -15.127010345458984

Token 226: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.15310683415737e-05
    2. ' len' → logprob: -10.750021934509277
    3. '(len' → logprob: -18.25002098083496
    4. '=len' → logprob: -18.37502098083496
    5. '	len' → logprob: -20.12502098083496
    6. '<len' → logprob: -20.12502098083496
    7. ',len' → logprob: -20.12502098083496
    8. 'length' → logprob: -20.25002098083496
    9. '[len' → logprob: -20.50002098083496
    10. '   ' → logprob: -20.75002098083496

Token 227: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.754368223482743e-05
    2. 'input' → logprob: -9.750067710876465
    3. ' input' → logprob: -11.750067710876465
    4. '(' → logprob: -13.750067710876465
    5. ' (' → logprob: -15.875067710876465
    6. '=input' → logprob: -16.62506675720215
    7. ',input' → logprob: -17.75006675720215
    8. '<input' → logprob: -19.50006675720215
    9. '_input' → logprob: -19.62506675720215
    10. '[input' → logprob: -19.87506675720215

Token 228: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.125
    3. 'lines' → logprob: -17.375
    4. '_LINES' → logprob: -17.875
    5. ')' → logprob: -18.25
    6. ')_' → logprob: -19.375
    7. '_line' → logprob: -19.375
    8. '_tokens' → logprob: -19.5
    9. '_links' → logprob: -20.25
    10. 'Lines' → logprob: -20.25

Token 229: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5776684284210205
    2. '):' → logprob: -1.4526684284210205
    3. '):
' → logprob: -2.2026684284210205
    4. ')' → logprob: -2.9526684284210205
    5. ':' → logprob: -3.5776684284210205
    6. ':
' → logprob: -4.327668190002441
    7. 'or' → logprob: -7.827668190002441
    8. '       ' → logprob: -8.327668190002441
    9. '   ' → logprob: -8.327668190002441
    10. ' and' → logprob: -11.077668190002441

Token 230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001341792638413608
    2. '       ' → logprob: -7.251341819763184
    3. ':' → logprob: -7.751341819763184
    4. ':
' → logprob: -9.251341819763184
    5. '   ' → logprob: -9.876341819763184
    6. '		' → logprob: -11.501341819763184
    7. '          ' → logprob: -12.001341819763184
    8. ' break' → logprob: -12.126341819763184
    9. ',' → logprob: -12.251341819763184
    10. 'break' → logprob: -12.501341819763184

Token 231: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4226441979408264
    2. 'return' → logprob: -1.5476441383361816
    3. 'break' (adapté à ' break') → logprob: -2.4226441383361816
    4. ' return' → logprob: -3.6726441383361816
    5. ' break' → logprob: -4.047644138336182
    6. '       ' → logprob: -8.92264461517334
    7. '
' → logprob: -9.42264461517334
    8. '   ' → logprob: -9.79764461517334
    9. '               ' → logprob: -10.17264461517334
    10. '```' → logprob: -10.54764461517334

Token 232: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3026614487171173
    2. '        
' → logprob: -2.177661418914795
    3. '
' → logprob: -2.427661418914795
    4. '  
' → logprob: -3.802661418914795
    5. '<|end|>' → logprob: -3.802661418914795
    6. '    
' → logprob: -5.177661418914795
    7. '\n' → logprob: -5.552661418914795
    8. '   ' → logprob: -6.552661418914795
    9. ' 
' → logprob: -6.927661418914795
    10. '       
' → logprob: -8.177661895751953

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04463145136833191
    2. '        
' → logprob: -3.5446314811706543
    3. ' ' → logprob: -5.544631481170654
    4. '
' → logprob: -6.044631481170654
    5. '  
' → logprob: -6.169631481170654
    6. '   ' → logprob: -6.294631481170654
    7. '<|end|>' → logprob: -6.544631481170654
    8. '    
' → logprob: -7.169631481170654
    9. ' 
' → logprob: -7.544631481170654
    10. ',' → logprob: -7.544631481170654

Token 234: ' w' (ID: 286)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.0846874713897705
    2. ' line' → logprob: -2.2096874713897705
    3. 'line' → logprob: -2.2096874713897705
    4. ' n' → logprob: -2.5846874713897705
    5. ' W' → logprob: -2.7096874713897705
    6. 'W' → logprob: -2.7096874713897705
    7. 'w' (adapté à ' w') → logprob: -2.8346874713897705
    8. 'R' → logprob: -2.8346874713897705
    9. ' H' → logprob: -3.0846874713897705
    10. ' R' → logprob: -3.0846874713897705

Token 235: '_h' (ID: 3434)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6279221177101135
    2. ',' → logprob: -1.0029220581054688
    3. '=' → logprob: -2.3779220581054688
    4. ' ,' → logprob: -5.502922058105469
    5. ' ' → logprob: -6.127922058105469
    6. 'hile' → logprob: -8.377922058105469
    7. '   ' → logprob: -9.502922058105469
    8. 'idth' → logprob: -9.627922058105469
    9. ',h' → logprob: -11.002922058105469
    10. ')' → logprob: -11.127922058105469

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3138009309768677
    2. ' =' → logprob: -1.3138009309768677
    3. ',' → logprob: -7.563800811767578
    4. '=line' → logprob: -11.313800811767578
    5. '=int' → logprob: -13.313800811767578
    6. ' ,' → logprob: -13.688800811767578
    7. ' ' → logprob: -13.813800811767578
    8. '=input' → logprob: -14.313800811767578
    9. '=

' → logprob: -14.688800811767578
    10. '=w' → logprob: -15.063800811767578

Token 237: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03663789480924606
    2. ' input' → logprob: -3.536637783050537
    3. 'list' → logprob: -5.036637783050537
    4. ' list' → logprob: -7.911637783050537
    5. '[input' → logprob: -13.911638259887695
    6. '   ' → logprob: -15.161638259887695
    7. 'tuple' → logprob: -15.786638259887695
    8. '[' → logprob: -15.911638259887695
    9. '(input' → logprob: -16.161638259887695
    10. '=input' → logprob: -16.536638259887695

Token 238: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0017472924664616585
    2. 'lines' → logprob: -6.626747131347656
    3. 'Lines' → logprob: -7.876747131347656
    4. '_' → logprob: -11.626747131347656
    5. 's' → logprob: -12.001747131347656
    6. '```' → logprob: -12.251747131347656
    7. '_tokens' → logprob: -12.751747131347656
    8. '_LINES' → logprob: -13.001747131347656
    9. '=' → logprob: -13.251747131347656
    10. ' =' → logprob: -13.501747131347656

Token 239: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.750004768371582
    3. 'idx' → logprob: -14.625004768371582
    4. ' [' → logprob: -15.250004768371582
    5. ')[' → logprob: -15.250004768371582
    6. '[id' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.250003814697266
    8. '```' → logprob: -16.250003814697266
    9. '][' → logprob: -16.875003814697266
    10. '\[' → logprob: -17.000003814697266

Token 240: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00033903829171322286
    2. '.split' → logprob: -8.50033950805664
    3. ']' → logprob: -9.37533950805664
    4. ' ].' → logprob: -10.00033950805664
    5. '.strip' → logprob: -13.37533950805664
    6. ']
' → logprob: -13.87533950805664
    7. 'split' → logprob: -14.12533950805664
    8. ').' → logprob: -14.37533950805664
    9. ''].' → logprob: -14.62533950805664
    10. '.' → logprob: -15.12533950805664

Token 241: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.029750484973192215
    2. 'strip' → logprob: -3.5297505855560303
    3. ' split' → logprob: -18.90475082397461
    4. 'rstrip' → logprob: -19.40475082397461
    5. 'spl' → logprob: -20.15475082397461
    6. '(split' → logprob: -21.52975082397461
    7. '_split' → logprob: -22.77975082397461
    8. '.split' → logprob: -23.02975082397461
    9. 's' → logprob: -23.15475082397461
    10. ' strip' → logprob: -23.27975082397461

Token 242: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06328021734952927
    2. '('' → logprob: -2.8132801055908203
    3. '(' → logprob: -6.68828010559082
    4. '()
' → logprob: -10.43828010559082
    5. '("' → logprob: -11.81328010559082
    6. '("("' → logprob: -12.06328010559082
    7. '())' → logprob: -12.43828010559082
    8. '()]' → logprob: -12.68828010559082
    9. '('.')' → logprob: -12.68828010559082
    10. '()[' → logprob: -12.68828010559082

Token 243: '       ' (ID: 309)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.2775588929653168
    2. '       ' → logprob: -2.2775588035583496
    3. 'idx' → logprob: -2.6525588035583496
    4. '<|end|>' → logprob: -3.4025588035583496
    5. '[' → logprob: -4.02755880355835
    6. '```' → logprob: -5.77755880355835
    7. '        
' → logprob: -5.90255880355835
    8. '   ' → logprob: -6.77755880355835
    9. ' ' → logprob: -7.15255880355835
    10. '    ' → logprob: -7.15255880355835

Token 244: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.471330463886261
    2. 'w' → logprob: -1.2213304042816162
    3. ' idx' → logprob: -3.596330404281616
    4. 'if' → logprob: -3.971330404281616
    5. ' if' → logprob: -4.096330642700195
    6. ' w' → logprob: -4.096330642700195
    7. '       ' → logprob: -7.346330642700195
    8. '[idx' → logprob: -7.971330642700195
    9. '	idx' → logprob: -8.721330642700195
    10. '        
' → logprob: -9.721330642700195

Token 245: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38760504126548767
    2. '+=' → logprob: -1.13760507106781
    3. '+' → logprob: -7.2626051902771
    4. '++' → logprob: -11.137604713439941
    5. ' +' → logprob: -11.887604713439941
    6. ']+=' → logprob: -12.637604713439941
    7. '[' → logprob: -13.012604713439941
    8. '+="' → logprob: -13.387604713439941
    9. '```' → logprob: -13.637604713439941
    10. '+='' → logprob: -13.887604713439941

Token 246: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -19.500001907348633
    4. '2' → logprob: -20.625001907348633
    5. '   ' → logprob: -21.250001907348633
    6. '１' → logprob: -21.750001907348633
    7. 'w' → logprob: -21.750001907348633
    8. '`' → logprob: -23.000001907348633
    9. '  ' → logprob: -23.125001907348633
    10. '0' → logprob: -23.250001907348633

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -17.875
    4. '0' → logprob: -18.75
    5. 'w' → logprob: -19.5
    6. '１' → logprob: -19.625
    7. '   ' → logprob: -19.9375
    8. '2' → logprob: -20.0
    9. '
' → logprob: -20.6875
    10. '`' → logprob: -21.1875

Token 248: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08281668275594711
    2. ' if' → logprob: -2.8328166007995605
    3. 'w' → logprob: -4.8328166007995605
    4. '<|end|>' → logprob: -5.3328166007995605
    5. ' w' → logprob: -5.8328166007995605
    6. 'if' → logprob: -6.0828166007995605
    7. '        
' → logprob: -6.4578166007995605
    8. '[' → logprob: -8.582817077636719
    9. ' ' → logprob: -9.082817077636719
    10. ' 
' → logprob: -9.332817077636719

Token 249: '       ' (ID: 309)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.41672101616859436
    2. 'if' → logprob: -1.416720986366272
    3. ' if' → logprob: -2.4167211055755615
    4. ' w' → logprob: -5.166720867156982
    5. '       ' → logprob: -5.791720867156982
    6. '```' → logprob: -8.29172134399414
    7. '   ' → logprob: -9.91672134399414
    8. 'width' → logprob: -12.54172134399414
    9. '``' → logprob: -13.04172134399414
    10. 'If' → logprob: -13.16672134399414

Token 250: ' if' (ID: 538)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3304760158061981
    2. 'if' (adapté à ' if') → logprob: -1.3304760456085205
    3. ' if' → logprob: -4.080475807189941
    4. ' w' → logprob: -8.830475807189941
    5. '       ' → logprob: -10.955475807189941
    6. 'W' → logprob: -13.455475807189941
    7. '```' → logprob: -13.580475807189941
    8. 'If' → logprob: -15.080475807189941
    9. 'width' → logprob: -15.205475807189941
    10. '        
' → logprob: -15.705475807189941

Token 251: ' len' (ID: 4631)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5563387274742126
    2. ' w' → logprob: -0.9313387274742126
    3. ' not' → logprob: -3.6813387870788574
    4. ' len' → logprob: -5.181338787078857
    5. 'len' → logprob: -6.431338787078857
    6. 'not' → logprob: -8.4313383102417
    7. '   ' → logprob: -11.4313383102417
    8. ' ' → logprob: -11.4313383102417
    9. ''w' → logprob: -12.4313383102417
    10. ''' → logprob: -14.0563383102417

Token 252: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00011081460979767144
    2. 'w' → logprob: -9.125110626220703
    3. '(' → logprob: -13.375110626220703
    4. '<w' → logprob: -16.750110626220703
    5. '	w' → logprob: -16.750110626220703
    6. '(
' → logprob: -17.125110626220703
    7. ' w' → logprob: -17.125110626220703
    8. ' (' → logprob: -17.500110626220703
    9. '_w' → logprob: -18.625110626220703
    10. '[w' → logprob: -19.000110626220703

Token 253: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00043138445471413434
    2. '_' → logprob: -8.250431060791016
    3. '_w' → logprob: -9.375431060791016
    4. ')' → logprob: -10.250431060791016
    5. '==' → logprob: -10.750431060791016
    6. '=' → logprob: -12.375431060791016
    7. ')==' → logprob: -12.500431060791016
    8. '<' → logprob: -12.625431060791016
    9. 'w' → logprob: -13.125431060791016
    10. '_a' → logprob: -13.375431060791016

Token 254: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21273750066757202
    2. ')' → logprob: -2.087737560272217
    3. ' ==' → logprob: -3.337737560272217
    4. ')==' → logprob: -3.462737560272217
    5. '[' → logprob: -8.212737083435059
    6. ']==' → logprob: -8.962737083435059
    7. '()==' → logprob: -9.087737083435059
    8. '<' → logprob: -9.087737083435059
    9. '=' → logprob: -9.837737083435059
    10. '0' → logprob: -10.712737083435059

Token 255: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09016977995634079
    2. ' ==' → logprob: -2.465169668197632
    3. '<' → logprob: -7.590169906616211
    4. '=' → logprob: -8.465169906616211
    5. '!=' → logprob: -8.840169906616211
    6. '[' → logprob: -9.215169906616211
    7. ')==' → logprob: -9.340169906616211
    8. '0' → logprob: -10.215169906616211
    9. ')' → logprob: -10.340169906616211
    10. ']==' → logprob: -10.590169906616211

Token 256: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001963605172932148
    2. '1' → logprob: -6.3769636154174805
    3. ' ' → logprob: -8.25196361541748
    4. '=' → logprob: -14.50196361541748
    5. '>' → logprob: -16.376962661743164
    6. ')' → logprob: -16.751962661743164
    7. '```' → logprob: -17.376962661743164
    8. 'or' → logprob: -17.501962661743164
    9. ',' → logprob: -18.376962661743164
    10. ' =' → logprob: -18.626962661743164

Token 257: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006277294596657157
    2. '1' → logprob: -7.375627517700195
    3. ' ' → logprob: -13.625627517700195
    4. ')' → logprob: -17.750627517700195
    5. '3' → logprob: -18.250627517700195
    6. '```' → logprob: -18.250627517700195
    7. '>' → logprob: -19.625627517700195
    8. '   ' → logprob: -20.250627517700195
    9. '=' → logprob: -20.250627517700195
    10. 'w' → logprob: -21.188127517700195

Token 258: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4672318994998932
    2. ' or' → logprob: -1.0922318696975708
    3. ':
' → logprob: -3.5922319889068604
    4. '           ' → logprob: -4.842231750488281
    5. '       ' → logprob: -7.217231750488281
    6. ' and' → logprob: -7.342231750488281
    7. ':return' → logprob: -7.967231750488281
    8. ',' → logprob: -8.092231750488281
    9. '   ' → logprob: -9.342231750488281
    10. 'and' → logprob: -10.217231750488281

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8908587662735954e-05
    2. ',' → logprob: -12.250019073486328
    3. ' break' → logprob: -12.500019073486328
    4. '   ' → logprob: -13.250019073486328
    5. '       ' → logprob: -13.375019073486328
    6. '		' → logprob: -13.625019073486328
    7. ' or' → logprob: -13.625019073486328
    8. '          ' → logprob: -13.750019073486328
    9. '	       ' → logprob: -14.125019073486328
    10. '```' → logprob: -14.500019073486328

Token 260: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4922562539577484
    2. '           ' → logprob: -1.4922562837600708
    3. ' break' → logprob: -2.3672561645507812
    4. 'continue' (adapté à ' continue') → logprob: -2.7422561645507812
    5. ' continue' → logprob: -5.367256164550781
    6. 'return' → logprob: -7.117256164550781
    7. '	break' → logprob: -8.867256164550781
    8. '       ' → logprob: -9.867256164550781
    9. '```' → logprob: -11.367256164550781
    10. '               ' → logprob: -11.492256164550781

Token 261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044068231363780797
    2. ' w' → logprob: -8.25044059753418
    3. 'w' → logprob: -9.25044059753418
    4. '        
' → logprob: -10.25044059753418
    5. ',' → logprob: -11.50044059753418
    6. '<|end|>' → logprob: -11.50044059753418
    7. '
' → logprob: -11.87544059753418
    8. '   ' → logprob: -12.12544059753418
    9. 'n' → logprob: -12.62544059753418
    10. '```' → logprob: -13.12544059753418

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36742541193962097
    2. 'w' → logprob: -1.2424254417419434
    3. ' w' → logprob: -3.9924254417419434
    4. '```' → logprob: -8.617424964904785
    5. '   ' → logprob: -9.742424964904785
    6. 'n' → logprob: -10.492424964904785
    7. '        
' → logprob: -10.992424964904785
    8. '<|end|>' → logprob: -11.617424964904785
    9. ' ' → logprob: -11.742424964904785
    10. 'W' → logprob: -11.992424964904785

Token 263: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.006784050725400448
    2. 'W' → logprob: -5.006783962249756
    3. ' w' → logprob: -9.631784439086914
    4. ' W' → logprob: -13.381784439086914
    5. '       ' → logprob: -13.881784439086914
    6. 'width' → logprob: -14.881784439086914
    7. '   ' → logprob: -16.756784439086914
    8. 'if' → logprob: -16.756784439086914
    9. '```' → logprob: -16.881784439086914
    10. '_w' → logprob: -17.006784439086914

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027206414961256087
    2. '=' → logprob: -9.125271797180176
    3. ' ,' → logprob: -9.750271797180176
    4. ' =' → logprob: -10.250271797180176
    5. ',w' → logprob: -10.625271797180176
    6. '<|end|>' → logprob: -11.625271797180176
    7. ',
' → logprob: -12.000271797180176
    8. ',int' → logprob: -12.125271797180176
    9. ',n' → logprob: -12.625271797180176
    10. '=int' → logprob: -13.125271797180176

Token 265: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.06200499087572098
    2. 'h' → logprob: -2.812005043029785
    3. 'int' → logprob: -10.312005043029785
    4. ' int' → logprob: -12.937005043029785
    5. ',h' → logprob: -14.187005043029785
    6. ' =' → logprob: -14.812005043029785
    7. '=int' → logprob: -15.062005043029785
    8. '_h' → logprob: -16.31200408935547
    9. ' ' → logprob: -16.43700408935547
    10. '=h' → logprob: -16.93700408935547

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132754862308502
    2. ' =' → logprob: -1.3132754564285278
    3. '=int' → logprob: -11.688275337219238
    4. ',' → logprob: -12.313275337219238
    5. ')' → logprob: -15.063275337219238
    6. '=

' → logprob: -15.813275337219238
    7. ' ' → logprob: -16.313276290893555
    8. ')=' → logprob: -16.563276290893555
    9. '=
' → logprob: -16.563276290893555
    10. '<|end|>' → logprob: -17.563276290893555

Token 267: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37917646765708923
    2. 'map' → logprob: -1.3791764974594116
    3. ' map' → logprob: -2.879176378250122
    4. ' int' → logprob: -4.879176616668701
    5. '   ' → logprob: -12.379176139831543
    6. ' ' → logprob: -15.004176139831543
    7. '[int' → logprob: -15.254176139831543
    8. '  ' → logprob: -15.879176139831543
    9. '(map' → logprob: -17.62917709350586
    10. '(int' → logprob: -17.62917709350586

Token 268: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015056940028443933
    2. 'int' → logprob: -6.5015058517456055
    3. '(' → logprob: -13.376505851745605
    4. '=int' → logprob: -14.126505851745605
    5. '[int' → logprob: -14.251505851745605
    6. '<int' → logprob: -15.751505851745605
    7. ']int' → logprob: -15.876505851745605
    8. ',int' → logprob: -16.00150489807129
    9. ' int' → logprob: -16.12650489807129
    10. ':int' → logprob: -17.00150489807129

Token 269: ',' (ID: 11)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.10060980170965195
    2. ',' → logprob: -3.10060977935791
    3. '(input' → logprob: -3.60060977935791
    4. ')' → logprob: -3.97560977935791
    5. '(' → logprob: -6.22560977935791
    6. ' (' → logprob: -6.85060977935791
    7. ',w' → logprob: -7.22560977935791
    8. ',input' → logprob: -7.60060977935791
    9. 'input' → logprob: -9.35060977935791
    10. 'w' → logprob: -9.60060977935791

Token 270: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0015045057516545057
    2. ' w' → logprob: -6.501504421234131
    3. '[w' → logprob: -13.251504898071289
    4. '(w' → logprob: -15.001504898071289
    5. ')' → logprob: -17.87650489807129
    6. ' ' → logprob: -18.50150489807129
    7. '[' → logprob: -18.62650489807129
    8. '	w' → logprob: -18.75150489807129
    9. '   ' → logprob: -19.00150489807129
    10. '<w' → logprob: -20.25150489807129

Token 271: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.020869774743914604
    2. '[' → logprob: -4.645869731903076
    3. '[h' → logprob: -5.895869731903076
    4. ')' → logprob: -6.020869731903076
    5. '_w' → logprob: -6.270869731903076
    6. '[w' → logprob: -7.270869731903076
    7. 'w' → logprob: -7.645869731903076
    8. 'lines' → logprob: -7.645869731903076
    9. '(w' → logprob: -7.770869731903076
    10. '   ' → logprob: -8.645870208740234

Token 272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. ')
' → logprob: -13.000009536743164
    3. '[' → logprob: -13.125009536743164
    4. ' )' → logprob: -13.500009536743164
    5. ');' → logprob: -13.875009536743164
    6. 'def' → logprob: -14.375009536743164
    7. ')`' → logprob: -14.750009536743164
    8. ')#' → logprob: -15.250009536743164
    9. '),' → logprob: -15.375009536743164
    10. '   ' → logprob: -15.625009536743164

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026224588975310326
    2. '        
' → logprob: -4.026224613189697
    3. '
' → logprob: -5.901224613189697
    4. ' if' → logprob: -6.151224613189697
    5. 'if' → logprob: -6.401224613189697
    6. '```' → logprob: -7.901224613189697
    7. '    
' → logprob: -8.026224136352539
    8. '<|end|>' → logprob: -8.151224136352539
    9. '  
' → logprob: -8.651224136352539
    10. '   ' → logprob: -8.901224136352539

Token 274: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6072746515274048
    2. 'if' (adapté à ' if') → logprob: -0.8572746515274048
    3. '       ' → logprob: -3.4822745323181152
    4. 'n' → logprob: -10.732275009155273
    5. '#' → logprob: -10.857275009155273
    6. 'd' → logprob: -11.357275009155273
    7. '   ' → logprob: -11.732275009155273
    8. 'r' → logprob: -12.107275009155273
    9. '[' → logprob: -12.232275009155273
    10. 'm' → logprob: -12.482275009155273

Token 275: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.054932497441768646
    2. ' w' → logprob: -2.9299325942993164
    3. '(w' → logprob: -10.054932594299316
    4. '(' → logprob: -12.679932594299316
    5. ' (' → logprob: -13.179932594299316
    6. '	w' → logprob: -14.429932594299316
    7. '[w' → logprob: -15.304932594299316
    8. '   ' → logprob: -15.429932594299316
    9. '[' → logprob: -15.554932594299316
    10. ' ' → logprob: -15.554932594299316

Token 276: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0125176552683115
    2. '==' → logprob: -4.38751745223999
    3. ' =' → logprob: -12.887517929077148
    4. '=' → logprob: -13.012517929077148
    5. ' <=' → logprob: -13.262517929077148
    6. ' ' → logprob: -14.512517929077148
    7. '```' → logprob: -15.637517929077148
    8. ' ===' → logprob: -15.887517929077148
    9. ')==' → logprob: -16.01251792907715
    10. '0' → logprob: -16.01251792907715

Token 277: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.753177642822266
    4. '۰' → logprob: -19.128177642822266
    5. '```' → logprob: -19.503177642822266
    6. '  ' → logprob: -19.503177642822266
    7. '   ' → logprob: -19.753177642822266
    8. '=' → logprob: -20.128177642822266
    9. '_' → logprob: -21.128177642822266
    10. '٠' → logprob: -21.315677642822266

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.250001907348633
    4. '۰' → logprob: -18.062501907348633
    5. 'end' → logprob: -19.062501907348633
    6. '-' → logprob: -19.125001907348633
    7. '

' → logprob: -19.250001907348633
    8. '`' → logprob: -19.437501907348633
    9. '
' → logprob: -19.625001907348633
    10. 'w' → logprob: -19.750001907348633

Token 279: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0789119303226471
    2. 'and' → logprob: -2.5789120197296143
    3. ' or' → logprob: -10.828911781311035
    4. ' ' → logprob: -13.203911781311035
    5. '	and' → logprob: -15.453911781311035
    6. 'or' → logprob: -15.828911781311035
    7. ':' → logprob: -16.95391273498535
    8. '0' → logprob: -16.95391273498535
    9. '```' → logprob: -16.95391273498535
    10. ' и' → logprob: -17.20391273498535

Token 280: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.3868711292743683
    2. 'h' → logprob: -1.136871099472046
    3. '	h' → logprob: -16.636871337890625
    4. ' ' → logprob: -17.136871337890625
    5. ' ' → logprob: -19.011871337890625
    6. '   ' → logprob: -19.386871337890625
    7. '_h' → logprob: -19.886871337890625
    8. ',h' → logprob: -20.261871337890625
    9. '<h' → logprob: -20.761871337890625
    10. '  ' → logprob: -20.761871337890625

Token 281: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14292855560779572
    2. '==' → logprob: -2.0179286003112793
    3. '0' → logprob: -8.642928123474121
    4. ' ' → logprob: -10.517928123474121
    5. '=' → logprob: -11.017928123474121
    6. ')==' → logprob: -11.142928123474121
    7. ']==' → logprob: -12.392928123474121
    8. ' =' → logprob: -12.392928123474121
    9. '()==' → logprob: -13.267928123474121
    10. '```' → logprob: -13.392928123474121

Token 282: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. ' ' → logprob: -19.625431060791016
    4. '۰' → logprob: -20.687931060791016
    5. '<|end|>' → logprob: -20.875431060791016
    6. '=' → logprob: -21.187931060791016
    7. '  ' → logprob: -21.437931060791016
    8. '```' → logprob: -21.875431060791016
    9. '   ' → logprob: -22.312931060791016
    10. '<|end|>' → logprob: -22.437931060791016

Token 283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '۰' → logprob: -18.625019073486328
    4. '<|end|>' → logprob: -19.687519073486328
    5. ')' → logprob: -20.250019073486328
    6. '```' → logprob: -20.500019073486328
    7. '০' → logprob: -20.625019073486328
    8. ' ' → logprob: -20.625019073486328
    9. 'import' → logprob: -21.125019073486328
    10. '=' → logprob: -21.312519073486328

Token 284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2617541551589966
    2. ':
' → logprob: -1.5117541551589966
    3. '           ' → logprob: -4.636754035949707
    4. '       ' → logprob: -9.636754035949707
    5. '   ' → logprob: -12.261754035949707
    6. ',' → logprob: -12.261754035949707
    7. '):
' → logprob: -12.636754035949707
    8. ':return' → logprob: -13.136754035949707
    9. ':
' → logprob: -13.511754035949707
    10. ' :' → logprob: -13.886754035949707

Token 285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046296243090182543
    2. ':' → logprob: -7.750463008880615
    3. ':
' → logprob: -10.625462532043457
    4. '          ' → logprob: -12.750462532043457
    5. '		' → logprob: -13.500462532043457
    6. '       ' → logprob: -13.625462532043457
    7. '               ' → logprob: -14.375462532043457
    8. ',' → logprob: -14.375462532043457
    9. ' break' → logprob: -14.625462532043457
    10. '	       ' → logprob: -15.250462532043457

Token 286: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43449699878692627
    2. 'break' (adapté à ' break') → logprob: -1.4344969987869263
    3. ' break' → logprob: -2.1844968795776367
    4. 'return' → logprob: -6.559496879577637
    5. ' return' → logprob: -8.809496879577637
    6. '               ' → logprob: -10.309496879577637
    7. '	break' → logprob: -10.559496879577637
    8. '		' → logprob: -11.934496879577637
    9. '       ' → logprob: -12.559496879577637
    10. '	       ' → logprob: -13.434496879577637

Token 287: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03515614941716194
    2. '        
' → logprob: -4.03515625
    3. '<|end|>' → logprob: -4.28515625
    4. '
' → logprob: -5.91015625
    5. ',' → logprob: -9.41015625
    6. '```' → logprob: -9.66015625
    7. '<|end|>' → logprob: -9.78515625
    8. '    
' → logprob: -10.16015625
    9. '            
' → logprob: -10.28515625
    10. '  
' → logprob: -10.53515625

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1133350357413292
    2. 'grid' → logprob: -3.238335132598877
    3. ' grid' → logprob: -3.488335132598877
    4. '   ' → logprob: -3.613335132598877
    5. '        
' → logprob: -5.113335132598877
    6. ' walls' → logprob: -6.738335132598877
    7. '    
' → logprob: -7.988335132598877
    8. '	grid' → logprob: -8.113334655761719
    9. ' obstacles' → logprob: -8.238334655761719
    10. ' wall' → logprob: -8.238334655761719

Token 289: ' #' (ID: 1069)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.12339968234300613
    2. 'board' → logprob: -2.9983997344970703
    3. 'maze' → logprob: -3.4983997344970703
    4. 'walls' → logprob: -4.62339973449707
    5. 'field' → logprob: -4.99839973449707
    6. 'map' → logprob: -5.62339973449707
    7. 'wall' → logprob: -6.12339973449707
    8. 'ob' → logprob: -6.12339973449707
    9. '#' (adapté à ' #') → logprob: -6.37339973449707
    10. 'start' → logprob: -6.74839973449707

Token 290: ' Read' (ID: 5405)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.19166123867034912
    2. 'board' → logprob: -2.1916613578796387
    3. 'maze' → logprob: -3.6916613578796387
    4. 'field' → logprob: -4.691661357879639
    5. 'start' → logprob: -5.441661357879639
    6. 'map' → logprob: -5.441661357879639
    7. 'walls' → logprob: -6.066661357879639
    8. ' grid' → logprob: -6.066661357879639
    9. 'ob' → logprob: -6.191661357879639
    10. '#' → logprob: -6.191661357879639

Token 291: ' the' (ID: 290)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.14129063487052917
    2. 'board' → logprob: -3.0162906646728516
    3. ' grid' → logprob: -3.1412906646728516
    4. 'maze' → logprob: -3.8912906646728516
    5. 'field' → logprob: -5.516290664672852
    6. 'map' → logprob: -5.766290664672852
    7. 'wall' → logprob: -6.391290664672852
    8. 'walls' → logprob: -6.516290664672852
    9. 'ob' → logprob: -6.766290664672852
    10. 'room' → logprob: -6.766290664672852

Token 292: ' board' (ID: 6796)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.5276449918746948
    2. ' grid' → logprob: -1.6526449918746948
    3. 'board' → logprob: -2.2776451110839844
    4. 'map' → logprob: -3.2776451110839844
    5. 'maze' → logprob: -3.4026451110839844
    6. 'field' → logprob: -4.652645111083984
    7. ' board' → logprob: -4.777645111083984
    8. ' map' → logprob: -5.152645111083984
    9. ' maze' → logprob: -5.277645111083984
    10. 'walls' → logprob: -6.027645111083984

Token 293: ' commands' (ID: 23877)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03654584288597107
    2. 'board' → logprob: -3.911545753479004
    3. ' board' → logprob: -4.411545753479004
    4. 'grid' → logprob: -5.911545753479004
    5. 'map' → logprob: -8.036545753479004
    6. ' grid' → logprob: -8.536545753479004
    7. '_board' → logprob: -8.911545753479004
    8. '(board' → logprob: -9.911545753479004
    9. '	board' → logprob: -9.911545753479004
    10. ',' → logprob: -10.161545753479004

Token 294: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0053985766135156155
    2. 'board' → logprob: -5.755398750305176
    3. ' board' → logprob: -6.630398750305176
    4. 'grid' → logprob: -7.380398750305176
    5. ' grid' → logprob: -9.005398750305176
    6. 'map' → logprob: -10.130398750305176
    7. ' lines' → logprob: -10.755398750305176
    8. ',' → logprob: -11.255398750305176
    9. 'commands' → logprob: -11.255398750305176
    10. '        
' → logprob: -11.755398750305176

Token 295: ' h' (ID: 312)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.8276723027229309
    2. ' board' → logprob: -0.8276723027229309
    3. '       ' → logprob: -2.327672243118286
    4. ' grid' → logprob: -4.077672481536865
    5. 'grid' → logprob: -4.577672481536865
    6. 'commands' → logprob: -8.452672004699707
    7. ' commands' → logprob: -8.827672004699707
    8. '	board' → logprob: -8.952672004699707
    9. ' lines' → logprob: -9.327672004699707
    10. 'map' → logprob: -9.577672004699707

Token 296: ' rows' (ID: 13585)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8693541884422302
    2. ' lines' → logprob: -1.494354248046875
    3. 'rows' → logprob: -1.869354248046875
    4. '       ' → logprob: -2.744354248046875
    5. '=' → logprob: -3.494354248046875
    6. '_lines' → logprob: -3.744354248046875
    7. 'lines' → logprob: -3.869354248046875
    8. 'board' → logprob: -4.494354248046875
    9. '   ' → logprob: -4.619354248046875
    10. 'ows' → logprob: -4.744354248046875

Token 297: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031282080453820527
    2. ',' → logprob: -9.125312805175781
    3. 'board' → logprob: -10.000312805175781
    4. 'grid' → logprob: -10.250312805175781
    5. 'commands' → logprob: -10.500312805175781
    6. ' board' → logprob: -11.125312805175781
    7. ' lines' → logprob: -11.125312805175781
    8. '        
' → logprob: -11.500312805175781
    9. 'rows' → logprob: -11.625312805175781
    10. 'boards' → logprob: -11.875312805175781

Token 298: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008482075296342373
    2. 'board' → logprob: -5.883481979370117
    3. ',' → logprob: -6.508481979370117
    4. 'rows' → logprob: -6.633481979370117
    5. 'boards' → logprob: -7.758481979370117
    6. 'for' → logprob: -8.133481979370117
    7. 'commands' → logprob: -8.133481979370117
    8. ' of' → logprob: -8.383481979370117
    9. 'grid' → logprob: -8.883481979370117
    10. ' for' → logprob: -9.258481979370117

Token 299: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.007724452763795853
    2. ' w' → logprob: -4.882724285125732
    3. 'list' → logprob: -9.75772476196289
    4. '[' → logprob: -10.75772476196289
    5. '[w' → logprob: -10.75772476196289
    6. '1' → logprob: -12.25772476196289
    7. '4' → logprob: -12.75772476196289
    8. ' list' → logprob: -12.88272476196289
    9. 'input' → logprob: -13.13272476196289
    10. ' [' → logprob: -13.38272476196289

Token 300: ' commands' (ID: 23877)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.09291768074035645
    2. ' commands' → logprob: -2.8429176807403564
    3. 'commands' → logprob: -4.467917442321777
    4. 'inte' → logprob: -4.967917442321777
    5. ' elements' → logprob: -5.467917442321777
    6. ' numbers' → logprob: -6.342917442321777
    7. ' codes' → logprob: -6.592917442321777
    8. ' tokens' → logprob: -6.717917442321777
    9. 'ints' → logprob: -6.842917442321777
    10. 'tokens' → logprob: -6.967917442321777

Token 301: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.217951886355877e-05
    2. ',' → logprob: -11.375061988830566
    3. '        
' → logprob: -11.375061988830566
    4. 'commands' → logprob: -12.000061988830566
    5. 'grid' → logprob: -12.125061988830566
    6. 'rows' → logprob: -12.625061988830566
    7. '           ' → logprob: -13.125061988830566
    8. 'board' → logprob: -13.125061988830566
    9. 'map' → logprob: -13.250061988830566
    10. '   ' → logprob: -13.500061988830566

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002028251619776711
    2. 'board' → logprob: -9.375203132629395
    3. 'grid' → logprob: -9.875203132629395
    4. 'commands' → logprob: -10.875203132629395
    5. ' board' → logprob: -11.000203132629395
    6. ',' → logprob: -12.375203132629395
    7. '        
' → logprob: -12.500203132629395
    8. ' grid' → logprob: -12.750203132629395
    9. ' lines' → logprob: -12.875203132629395
    10. ' commands' → logprob: -13.125203132629395

Token 303: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.005140069406479597
    2. 'commands' → logprob: -6.38014030456543
    3. '       ' → logprob: -6.63014030456543
    4. 'grid' → logprob: -6.88014030456543
    5. ' board' → logprob: -7.00514030456543
    6. 'cmd' → logprob: -9.63014030456543
    7. 'command' → logprob: -9.75514030456543
    8. ' commands' → logprob: -11.25514030456543
    9. 'boards' → logprob: -11.63014030456543
    10. '	board' → logprob: -12.00514030456543

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740784466266632
    2. '=' → logprob: -0.9740784168243408
    3. '=[]' → logprob: -13.724078178405762
    4. '=[]
' → logprob: -16.099079132080078
    5. '   ' → logprob: -17.224079132080078
    6. ' =
' → logprob: -17.349079132080078
    7. ',' → logprob: -17.349079132080078
    8. ' ' → logprob: -17.599079132080078
    9. '=[' → logprob: -17.724079132080078
    10. '=
' → logprob: -18.224079132080078

Token 305: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07328163087368011
    2. '[input' → logprob: -3.0732815265655518
    3. '[]' → logprob: -4.323281764984131
    4. '[]
' → logprob: -5.073281764984131
    5. ' [' → logprob: -5.573281764984131
    6. '[array' → logprob: -8.073281288146973
    7. '[line' → logprob: -8.573281288146973
    8. '[
' → logprob: -9.323281288146973
    9. '[int' → logprob: -9.698281288146973
    10. ' []' → logprob: -9.948281288146973

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00922235194593668
    2. ' for' → logprob: -4.884222507476807
    3. '<|end|>' → logprob: -7.009222507476807
    4. 'for' → logprob: -7.759222507476807
    5. '	' → logprob: -9.384222030639648
    6. '	for' → logprob: -10.009222030639648
    7. '<|end|>' → logprob: -10.134222030639648
    8. '	   ' → logprob: -10.634222030639648
    9. '        
' → logprob: -10.884222030639648
    10. ',' → logprob: -11.009222030639648

Token 307: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04048507660627365
    2. ' for' → logprob: -3.540485143661499
    3. '       ' → logprob: -4.54048490524292
    4. '	for' → logprob: -11.915485382080078
    5. '   ' → logprob: -13.415485382080078
    6. 'while' → logprob: -14.915485382080078
    7. ' ' → logprob: -15.790485382080078
    8. ' ' → logprob: -16.540485382080078
    9. '
' → logprob: -17.165485382080078
    10. '	' → logprob: -17.165485382080078

Token 308: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0023084578569978476
    2. ' _' → logprob: -6.252308368682861
    3. '_i' → logprob: -8.25230884552002
    4. '_row' → logprob: -9.25230884552002
    5. 'i' → logprob: -11.87730884552002
    6. ' i' → logprob: -12.00230884552002
    7. '_r' → logprob: -12.87730884552002
    8. '_range' → logprob: -13.12730884552002
    9. '_h' → logprob: -14.12730884552002
    10. 'r' → logprob: -14.12730884552002

Token 309: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005273838527500629
    2. ' in' → logprob: -6.130273818969727
    3. 'in' → logprob: -6.130273818969727
    4. ' range' → logprob: -7.005273818969727
    5. ' ' → logprob: -14.630273818969727
    6. '(range' → logprob: -15.630273818969727
    7. '  ' → logprob: -16.005273818969727
    8. 'h' → logprob: -16.505273818969727
    9. '	range' → logprob: -16.505273818969727
    10. '
' → logprob: -17.005273818969727

Token 310: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001601539261173457
    2. ' range' → logprob: -8.750160217285156
    3. 'ange' → logprob: -13.500160217285156
    4. '(range' → logprob: -16.000160217285156
    5. '   ' → logprob: -16.375160217285156
    6. '	range' → logprob: -17.125160217285156
    7. ' ' → logprob: -17.625160217285156
    8. ')' → logprob: -17.750160217285156
    9. '  ' → logprob: -18.125160217285156
    10. 'rang' → logprob: -18.875160217285156

Token 311: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.12127808178775e-05
    2. 'h' → logprob: -10.125051498413086
    3. ' h' → logprob: -11.625051498413086
    4. ' (' → logprob: -13.500051498413086
    5. '(' → logprob: -14.500051498413086
    6. '   ' → logprob: -16.500051498413086
    7. '	h' → logprob: -16.500051498413086
    8. 'range' → logprob: -17.750051498413086
    9. '(H' → logprob: -18.000051498413086
    10. '<h' → logprob: -18.500051498413086

Token 312: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18005093932151794
    2. '):' → logprob: -1.8050509691238403
    3. '):
' → logprob: -8.30505084991455
    4. '   ' → logprob: -11.18005084991455
    5. '       ' → logprob: -11.18005084991455
    6. ':
' → logprob: -11.43005084991455
    7. ':' → logprob: -11.80505084991455
    8. ')' → logprob: -12.30505084991455
    9. '           ' → logprob: -13.05505084991455
    10. '():
' → logprob: -13.43005084991455

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016097202897071838
    2. '   ' → logprob: -7.501609802246094
    3. '	       ' → logprob: -7.876609802246094
    4. '    	   ' → logprob: -8.626609802246094
    5. '	   ' → logprob: -9.251609802246094
    6. '		   ' → logprob: -9.501609802246094
    7. '<|end|>' → logprob: -9.876609802246094
    8. ',' → logprob: -10.001609802246094
    9. '<|end|>' → logprob: -10.251609802246094
    10. '       ' → logprob: -10.251609802246094

Token 314: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.5967891216278076
    2. 'board' → logprob: -1.5967891216278076
    3. 'row' (adapté à ' row') → logprob: -1.9717891216278076
    4. ' board' → logprob: -3.2217891216278076
    5. ' line' → logprob: -3.8467891216278076
    6. 'line' → logprob: -3.9717891216278076
    7. ' commands' → logprob: -4.721789360046387
    8. 'commands' → logprob: -4.971789360046387
    9. '           ' → logprob: -5.096789360046387
    10. ' cmds' → logprob: -5.596789360046387

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694133818149567
    2. '=' → logprob: -2.126941442489624
    3. '.append' → logprob: -12.001941680908203
    4. '=line' → logprob: -12.626941680908203
    5. '   ' → logprob: -14.126941680908203
    6. ',' → logprob: -14.376941680908203
    7. '=input' → logprob: -14.501941680908203
    8. ')' → logprob: -14.751941680908203
    9. ' ' → logprob: -14.751941680908203
    10. '=row' → logprob: -15.251941680908203

Token 316: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08751291036605835
    2. 'input' → logprob: -2.962512969970703
    3. ' list' → logprob: -3.462512969970703
    4. ' input' → logprob: -7.212512969970703
    5. '[' → logprob: -11.962512969970703
    6. '[input' → logprob: -12.087512969970703
    7. '[list' → logprob: -13.712512969970703
    8. ' [' → logprob: -14.087512969970703
    9. 'tuple' → logprob: -14.337512969970703
    10. '(list' → logprob: -15.212512969970703

Token 317: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0015272404998540878
    2. '(input' → logprob: -6.501527309417725
    3. '(' → logprob: -11.001526832580566
    4. 'map' → logprob: -12.001526832580566
    5. '(int' → logprob: -13.376526832580566
    6. 'input' → logprob: -15.501526832580566
    7. ' map' → logprob: -16.876527786254883
    8. '(sys' → logprob: -17.126527786254883
    9. '(
' → logprob: -17.501527786254883
    10. '(range' → logprob: -17.626527786254883

Token 318: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008968125330284238
    2. '(str' → logprob: -7.37589693069458
    3. 'int' → logprob: -8.250896453857422
    4. '(' → logprob: -12.750896453857422
    5. 'str' → logprob: -12.875896453857422
    6. ' int' → logprob: -13.625896453857422
    7. ',int' → logprob: -14.000896453857422
    8. '
' → logprob: -14.875896453857422
    9. '[int' → logprob: -15.625896453857422
    10. '(lambda' → logprob: -15.625896453857422

Token 319: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5665435194969177
    2. ',' → logprob: -1.3165435791015625
    3. '(input' → logprob: -1.8165435791015625
    4. '(sys' → logprob: -7.0665435791015625
    5. 'input' → logprob: -7.4415435791015625
    6. '(' → logprob: -8.191543579101562
    7. 'sys' → logprob: -9.691543579101562
    8. ' (' → logprob: -10.191543579101562
    9. ' ,' → logprob: -10.691543579101562
    10. ' input' → logprob: -12.066543579101562

Token 320: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001033999491482973
    2. ' input' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.376033782958984
    4. '(input' → logprob: -15.626033782958984
    5. 'sys' → logprob: -16.126033782958984
    6. 'list' → logprob: -16.251033782958984
    7. ' ' → logprob: -16.501033782958984
    8. '           ' → logprob: -17.126033782958984
    9. '    ' → logprob: -17.751033782958984
    10. ')' → logprob: -18.001033782958984

Token 321: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.7788878679275513
    2. '().' → logprob: -1.1538878679275513
    3. ',' → logprob: -2.9038877487182617
    4. 'input' → logprob: -3.0288877487182617
    5. '(input' → logprob: -3.2788877487182617
    6. ',input' → logprob: -3.2788877487182617
    7. ')' → logprob: -4.278887748718262
    8. '.readline' → logprob: -4.778887748718262
    9. '(' → logprob: -4.903887748718262
    10. '))' → logprob: -5.653887748718262

Token 322: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.438573680294212e-06
    2. 'idx' → logprob: -12.375005722045898
    3. '[' → logprob: -14.000005722045898
    4. ' [' → logprob: -16.5000057220459
    5. '[
' → logprob: -16.5000057220459
    6. '   ' → logprob: -16.6250057220459
    7. '[id' → logprob: -16.7500057220459
    8. '(idx' → logprob: -16.7500057220459
    9. ' idx' → logprob: -17.1250057220459
    10. '```' → logprob: -17.7500057220459

Token 323: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00013321757433004677
    2. '[idx' → logprob: -9.750133514404297
    3. '][' → logprob: -9.875133514404297
    4. ' ].' → logprob: -11.125133514404297
    5. ']' → logprob: -12.250133514404297
    6. '.split' → logprob: -13.375133514404297
    7. 'idx' → logprob: -14.375133514404297
    8. '           ' → logprob: -14.625133514404297
    9. '.strip' → logprob: -15.500133514404297
    10. '   ' → logprob: -15.500133514404297

Token 324: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20141518115997314
    2. 'strip' → logprob: -1.7014151811599731
    3. 'rstrip' → logprob: -13.451415061950684
    4. ' split' → logprob: -15.076415061950684
    5. ' strip' → logprob: -16.576416015625
    6. '.strip' → logprob: -17.201416015625
    7. '.split' → logprob: -18.326416015625
    8. '(split' → logprob: -18.826416015625
    9. '_split' → logprob: -21.076416015625
    10. '(strip' → logprob: -21.826416015625

Token 325: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.33696267008781433
    2. '()))
' → logprob: -1.4619626998901367
    3. '()' → logprob: -2.9619626998901367
    4. '))' → logprob: -6.336962699890137
    5. '()
' → logprob: -7.961962699890137
    6. '))
' → logprob: -9.211962699890137
    7. '()));' → logprob: -9.211962699890137
    8. '()))
' → logprob: -9.461962699890137
    9. '()))

' → logprob: -9.711962699890137
    10. '(' → logprob: -10.461962699890137

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12766198813915253
    2. 'idx' → logprob: -3.127661943435669
    3. '<|end|>' → logprob: -3.752661943435669
    4. '[idx' → logprob: -4.002662181854248
    5. '	idx' → logprob: -4.752662181854248
    6. '       ' → logprob: -4.877662181854248
    7. '
' → logprob: -5.127662181854248
    8. '		' → logprob: -6.002662181854248
    9. '<|end|>' → logprob: -6.252662181854248
    10. ' idx' → logprob: -6.377662181854248

Token 327: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.001732775242999196
    2. ' idx' → logprob: -6.50173282623291
    3. '       ' → logprob: -9.00173282623291
    4. '	idx' → logprob: -9.37673282623291
    5. '   ' → logprob: -10.87673282623291
    6. '_idx' → logprob: -12.87673282623291
    7. '[idx' → logprob: -14.25173282623291
    8. '           ' → logprob: -15.00173282623291
    9. '
' → logprob: -15.87673282623291
    10. '	   ' → logprob: -17.001731872558594

Token 328: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20141948759555817
    2. ' +=' → logprob: -1.701419472694397
    3. ']+=' → logprob: -12.201419830322266
    4. '+' → logprob: -14.576419830322266
    5. '```' → logprob: -15.701419830322266
    6. '   ' → logprob: -15.826419830322266
    7. '+="' → logprob: -16.701419830322266
    8. '	' → logprob: -16.701419830322266
    9. '++' → logprob: -16.826419830322266
    10. '+='' → logprob: -17.201419830322266

Token 329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.500009536743164
    4. '```' → logprob: -18.875009536743164
    5. 'w' → logprob: -19.250009536743164
    6. '           ' → logprob: -19.812509536743164
    7. ')' → logprob: -19.937509536743164
    8. '0' → logprob: -20.062509536743164
    9. '
' → logprob: -20.187509536743164
    10. '(' → logprob: -20.250009536743164

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. 'w' → logprob: -15.875000953674316
    4. '(' → logprob: -19.5
    5. '   ' → logprob: -19.75
    6. '0' → logprob: -20.0
    7. 'h' → logprob: -20.5
    8. '```' → logprob: -20.875
    9. '１' → logprob: -21.125
    10. '4' → logprob: -21.75

Token 331: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010909239063039422
    2. '       ' → logprob: -7.501091003417969
    3. '   ' → logprob: -8.376091003417969
    4. '<|end|>' → logprob: -8.501091003417969
    5. ',' → logprob: -10.251091003417969
    6. '          ' → logprob: -11.126091003417969
    7. '               ' → logprob: -11.626091003417969
    8. ')' → logprob: -12.001091003417969
    9. '<|end|>' → logprob: -12.001091003417969
    10. '#' → logprob: -12.001091003417969

Token 332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005554959177970886
    2. '       ' → logprob: -5.380555152893066
    3. '   ' → logprob: -7.005555152893066
    4. 'board' → logprob: -10.880555152893066
    5. ' ' → logprob: -13.630555152893066
    6. '#' → logprob: -13.755555152893066
    7. '         ' → logprob: -13.880555152893066
    8. '          ' → logprob: -14.005555152893066
    9. '               ' → logprob: -14.005555152893066
    10. '<|end|>' → logprob: -14.255555152893066

Token 333: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.004241993185132742
    2. ' board' → logprob: -5.504241943359375
    3. '           ' → logprob: -9.379241943359375
    4. '       ' → logprob: -10.004241943359375
    5. 'row' → logprob: -10.754241943359375
    6. '   ' → logprob: -12.004241943359375
    7. '	board' → logprob: -13.254241943359375
    8. 'assert' → logprob: -13.629241943359375
    9. ' ' → logprob: -13.879241943359375
    10. 'for' → logprob: -14.254241943359375

Token 334: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.8087270038668066e-05
    2. '.' → logprob: -10.500027656555176
    3. '.extend' → logprob: -15.000027656555176
    4. '.app' → logprob: -15.875027656555176
    5. 'append' → logprob: -17.125028610229492
    6. '.ap' → logprob: -17.375028610229492
    7. ' .' → logprob: -19.625028610229492
    8. '.Append' → logprob: -20.375028610229492
    9. '.insert' → logprob: -20.500028610229492
    10. '.add' → logprob: -20.750028610229492

Token 335: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.003181159496307373
    2. 'row' → logprob: -5.753180980682373
    3. '(' → logprob: -12.878181457519531
    4. ' row' → logprob: -14.253181457519531
    5. ',row' → logprob: -16.37818145751953
    6. '[row' → logprob: -16.62818145751953
    7. '=row' → logprob: -16.87818145751953
    8. '	row' → logprob: -17.87818145751953
    9. '(
' → logprob: -18.87818145751953
    10. '(ro' → logprob: -19.75318145751953

Token 336: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003391574718989432
    2. '       ' → logprob: -8.00033950805664
    3. ')
' → logprob: -12.87533950805664
    4. ')

' → logprob: -13.87533950805664
    5. ' )' → logprob: -15.62533950805664
    6. '))' → logprob: -17.25033950805664
    7. ')`' → logprob: -17.25033950805664
    8. '   ' → logprob: -17.75033950805664
    9. ')}' → logprob: -18.62533950805664
    10. '
' → logprob: -19.12533950805664

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06617478281259537
    2. '
' → logprob: -2.9411747455596924
    3. '        
' → logprob: -5.0661749839782715
    4. '<|end|>' → logprob: -5.6911749839782715
    5. 'visited' → logprob: -8.191174507141113
    6. '#' → logprob: -8.316174507141113
    7. '   ' → logprob: -8.691174507141113
    8. 'distance' → logprob: -8.816174507141113
    9. 'import' → logprob: -9.066174507141113
    10. '```' → logprob: -9.066174507141113

Token 338: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.47661036252975464
    2. 'dist' → logprob: -1.6016104221343994
    3. '       ' → logprob: -2.6016104221343994
    4. '
' → logprob: -3.6016104221343994
    5. 'visited' → logprob: -3.7266104221343994
    6. 'import' → logprob: -4.22661018371582
    7. 'from' → logprob: -4.60161018371582
    8. 'dp' → logprob: -4.97661018371582
    9. 'distance' → logprob: -5.35161018371582
    10. 'INF' → logprob: -5.35161018371582

Token 339: ' Read' (ID: 5405)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3169609606266022
    2. '#' → logprob: -1.5669609308242798
    3. 'INF' → logprob: -4.19196081161499
    4. 'visited' → logprob: -4.31696081161499
    5. 'dp' → logprob: -4.44196081161499
    6. ' dist' → logprob: -5.06696081161499
    7. 'import' → logprob: -5.56696081161499
    8. 'from' → logprob: -5.81696081161499
    9. 'distance' → logprob: -5.94196081161499
    10. '       ' → logprob: -6.06696081161499

Token 340: ' costs' (ID: 8959)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1656968593597412
    2. ' start' → logprob: -2.665696859359741
    3. 's' → logprob: -4.29069709777832
    4. 'sr' → logprob: -4.66569709777832
    5. 'the' → logprob: -4.66569709777832
    6. 'sx' → logprob: -4.66569709777832
    7. 'sy' → logprob: -5.04069709777832
    8. ' the' → logprob: -5.54069709777832
    9. '#' → logprob: -5.66569709777832
    10. 'st' → logprob: -5.79069709777832

Token 341: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07282963395118713
    2. 'straight' → logprob: -4.072829723358154
    3. ' =' → logprob: -4.197829723358154
    4. 'cost' → logprob: -4.947829723358154
    5. '=' → logprob: -5.322829723358154
    6. 's' → logprob: -5.822829723358154
    7. ':' → logprob: -5.822829723358154
    8. ' straight' → logprob: -6.072829723358154
    9. 'for' → logprob: -6.322829723358154
    10. ' costs' → logprob: -6.447829723358154

Token 342: ' commands' (ID: 23877)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.7372283935546875
    2. 'straight' → logprob: -1.2372283935546875
    3. 'moves' → logprob: -3.1122283935546875
    4. 'move' → logprob: -3.4872283935546875
    5. '0' → logprob: -3.8622283935546875
    6. 'moving' → logprob: -4.1122283935546875
    7. 'dire' → logprob: -4.2372283935546875
    8. 'commands' → logprob: -4.3622283935546875
    9. '#' → logprob: -4.6122283935546875
    10. ' straight' → logprob: -4.8622283935546875

Token 343: ' Straight' (ID: 77801)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.23401881754398346
    2. '       ' → logprob: -1.7340188026428223
    3. ' costs' → logprob: -4.234018802642822
    4. 'straight' → logprob: -4.984018802642822
    5. 'c' → logprob: -6.109018802642822
    6. 'turn' → logprob: -6.234018802642822
    7. '
' → logprob: -6.609018802642822
    8. ' cost' → logprob: -7.109018802642822
    9. 'cmd' → logprob: -7.359018802642822
    10. ' straight' → logprob: -7.984018802642822

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23279905319213867
    2. ' =' → logprob: -1.9827990531921387
    3. ' and' → logprob: -3.2327990531921387
    4. 'and' → logprob: -4.232799053192139
    5. ' ,' → logprob: -5.357799053192139
    6. '=' → logprob: -5.857799053192139
    7. '   ' → logprob: -6.607799053192139
    8. '[' → logprob: -7.357799053192139
    9. '_,' → logprob: -7.357799053192139
    10. 'cost' → logprob: -7.607799053192139

Token 345: ' Right' (ID: 16354)
  Prédit: 'Right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -0.0005917556118220091
    2. ' Right' → logprob: -8.250592231750488
    3. '#' → logprob: -8.500592231750488
    4. 'Turn' → logprob: -9.375592231750488
    5. 'Left' → logprob: -10.875592231750488
    6. 'right' → logprob: -11.250592231750488
    7. '   ' → logprob: -12.750592231750488
    8. '_Right' → logprob: -13.875592231750488
    9. ' ' → logprob: -14.000592231750488
    10. ' right' → logprob: -14.250592231750488

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003277887124568224
    2. ' ,' → logprob: -5.878277778625488
    3. ' =' → logprob: -8.878277778625488
    4. ' and' → logprob: -9.003277778625488
    5. 'and' → logprob: -9.128277778625488
    6. '=' → logprob: -10.003277778625488
    7. '   ' → logprob: -11.628277778625488
    8. 'Turn' → logprob: -11.753277778625488
    9. ',left' → logprob: -12.503277778625488
    10. 'Left' → logprob: -12.503277778625488

Token 347: ' Back' (ID: 9793)
  Prédit: 'Back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Back' → logprob: -0.0008432185277342796
    2. 'Left' → logprob: -7.625843048095703
    3. ' Back' → logprob: -8.125843048095703
    4. '#' → logprob: -10.250843048095703
    5. 'Backward' → logprob: -11.000843048095703
    6. 'B' → logprob: -13.250843048095703
    7. 'back' → logprob: -13.750843048095703
    8. '   ' → logprob: -13.875843048095703
    9. ' ' → logprob: -14.250843048095703
    10. '       ' → logprob: -14.375843048095703

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028110871091485023
    2. ' =' → logprob: -3.903110980987549
    3. '=' → logprob: -5.653110980987549
    4. '       ' → logprob: -7.028110980987549
    5. ' ,' → logprob: -7.028110980987549
    6. ' and' → logprob: -7.153110980987549
    7. '(' → logprob: -7.903110980987549
    8. 'and' → logprob: -8.15311050415039
    9. '   ' → logprob: -9.02811050415039
    10. 'Straight' → logprob: -9.15311050415039

Token 349: ' Left' (ID: 26982)
  Prédit: 'Left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.011214752681553364
    2. ' Left' → logprob: -4.511214733123779
    3. ' and' → logprob: -9.511215209960938
    4. 'and' → logprob: -9.511215209960938
    5. 'left' → logprob: -12.261215209960938
    6. '_Left' → logprob: -12.261215209960938
    7. ' left' → logprob: -12.636215209960938
    8. ' ' → logprob: -12.636215209960938
    9. '_left' → logprob: -13.761215209960938
    10. 'Straight' → logprob: -14.386215209960938

Token 350: '
' (ID: 198)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.774665892124176
    2. '       ' → logprob: -1.0246658325195312
    3. ' costs' → logprob: -2.1496658325195312
    4. '
' → logprob: -3.1496658325195312
    5. 'c' → logprob: -5.149665832519531
    6. 'straight' → logprob: -5.524665832519531
    7. ',' → logprob: -5.899665832519531
    8. ' =' → logprob: -6.649665832519531
    9. ' cost' → logprob: -6.774665832519531
    10. 'line' → logprob: -7.524665832519531

Token 351: '       ' (ID: 309)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1463720202445984
    2. '       ' → logprob: -2.521372079849243
    3. ' costs' → logprob: -3.646372079849243
    4. '
' → logprob: -4.021371841430664
    5. 'c' → logprob: -5.396371841430664
    6. 'straight' → logprob: -5.646371841430664
    7. 'line' → logprob: -7.646371841430664
    8. '        
' → logprob: -7.771371841430664
    9. '(cost' → logprob: -7.771371841430664
    10. ' cost' → logprob: -8.021371841430664

Token 352: ' costs' (ID: 8959)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0032378402538597584
    2. ' costs' → logprob: -6.128237724304199
    3. 'straight' → logprob: -7.253237724304199
    4. ' cost' → logprob: -8.8782377243042
    5. 'c' → logprob: -9.6282377243042
    6. 'st' → logprob: -10.1282377243042
    7. 'stra' → logprob: -10.8782377243042
    8. '   ' → logprob: -11.0032377243042
    9. 'line' → logprob: -11.2532377243042
    10. 'cmd' → logprob: -11.5032377243042

Token 353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759409070014954
    2. ' =' → logprob: -0.8259409070014954
    3. '   ' → logprob: -14.07594108581543
    4. '=line' → logprob: -15.45094108581543
    5. ' ' → logprob: -15.70094108581543
    6. ',' → logprob: -16.20094108581543
    7. 's' → logprob: -17.07594108581543
    8. '=
' → logprob: -17.32594108581543
    9. '=list' → logprob: -17.57594108581543
    10. 'line' → logprob: -17.57594108581543

Token 354: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.615255839889869e-05
    2. ' list' → logprob: -9.250096321105957
    3. '	list' → logprob: -20.25009536743164
    4. '=list' → logprob: -20.75009536743164
    5. 'tuple' → logprob: -21.00009536743164
    6. '   ' → logprob: -21.12509536743164
    7. '[list' → logprob: -21.50009536743164
    8. 'lis' → logprob: -21.62509536743164
    9. '(list' → logprob: -21.87509536743164
    10. '[' → logprob: -22.12509536743164

Token 355: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.147740689106286e-05
    2. 'map' → logprob: -9.75007152557373
    3. '(' → logprob: -11.25007152557373
    4. '()' → logprob: -17.125070571899414
    5. ' map' → logprob: -17.125070571899414
    6. '(
' → logprob: -17.625070571899414
    7. '	map' → logprob: -18.000070571899414
    8. ' (' → logprob: -18.125070571899414
    9. '   ' → logprob: -18.750070571899414
    10. ',map' → logprob: -18.750070571899414

Token 356: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002285694790771231
    2. 'int' → logprob: -8.500228881835938
    3. '(' → logprob: -10.875228881835938
    4. '[int' → logprob: -12.875228881835938
    5. '=int' → logprob: -13.875228881835938
    6. ']int' → logprob: -14.125228881835938
    7. ',int' → logprob: -14.375228881835938
    8. '<int' → logprob: -14.500228881835938
    9. ' int' → logprob: -15.250228881835938
    10. '(lambda' → logprob: -15.250228881835938

Token 357: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.029425861313939095
    2. ',input' → logprob: -3.904425859451294
    3. ',' → logprob: -4.779426097869873
    4. '(' → logprob: -8.404425621032715
    5. '(sys' → logprob: -9.029425621032715
    6. ' (' → logprob: -9.654425621032715
    7. 'input' → logprob: -11.404425621032715
    8. '=input' → logprob: -11.654425621032715
    9. '[input' → logprob: -12.404425621032715
    10. ' input' → logprob: -12.404425621032715

Token 358: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014164102263748646
    2. ' input' → logprob: -4.264163970947266
    3. '(input' → logprob: -14.514163970947266
    4. 'sys' → logprob: -17.139163970947266
    5. '   ' → logprob: -18.389163970947266
    6. '	input' → logprob: -18.514163970947266
    7. ',input' → logprob: -18.514163970947266
    8. '[input' → logprob: -18.764163970947266
    9. '=input' → logprob: -19.139163970947266
    10. '_input' → logprob: -19.389163970947266

Token 359: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.012412875890731812
    2. '.readline' → logprob: -5.512413024902344
    3. '(input' → logprob: -6.137413024902344
    4. '().' → logprob: -6.262413024902344
    5. 'input' → logprob: -6.387413024902344
    6. 'lines' → logprob: -7.012413024902344
    7. '[input' → logprob: -7.637413024902344
    8. 'Lines' → logprob: -8.262413024902344
    9. '()' → logprob: -8.887413024902344
    10. ')' → logprob: -9.137413024902344

Token 360: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00029720881138928235
    2. '[input' → logprob: -8.375297546386719
    3. '(idx' → logprob: -9.750297546386719
    4. '(input' → logprob: -12.750297546386719
    5. '()[' → logprob: -13.250297546386719
    6. '[' → logprob: -13.500297546386719
    7. 'idx' → logprob: -14.625297546386719
    8. '[in' → logprob: -15.000297546386719
    9. 'input' → logprob: -15.000297546386719
    10. '[line' → logprob: -15.125297546386719

Token 361: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.08117149025201797
    2. '.split' → logprob: -2.5811715126037598
    3. '().' → logprob: -6.20617151260376
    4. '.' → logprob: -9.581171035766602
    5. '[idx' → logprob: -9.706171035766602
    6. ''].' → logprob: -10.081171035766602
    7. '.strip' → logprob: -10.081171035766602
    8. ' .' → logprob: -11.331171035766602
    9. ']' → logprob: -11.706171035766602
    10. ' ].' → logprob: -12.081171035766602

Token 362: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.862962229410186e-05
    2. 'strip' → logprob: -9.500078201293945
    3. ' split' → logprob: -12.500078201293945
    4. 'rstrip' → logprob: -19.500078201293945
    5. '.split' → logprob: -19.625078201293945
    6. '(split' → logprob: -20.375078201293945
    7. 'spl' → logprob: -20.375078201293945
    8. ' strip' → logprob: -20.500078201293945
    9. '_split' → logprob: -22.750078201293945
    10. 's' → logprob: -23.000078201293945

Token 363: '()))
' (ID: 24521)
  Prédit: '()))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))
' → logprob: -0.23523029685020447
    2. '))
' → logprob: -1.8602303266525269
    3. '()))' → logprob: -4.110230445861816
    4. '))' → logprob: -4.235230445861816
    5. '()' → logprob: -4.360230445861816
    6. '()
' → logprob: -4.610230445861816
    7. '()));' → logprob: -8.735230445861816
    8. '()))
' → logprob: -10.360230445861816
    9. '(' → logprob: -10.610230445861816
    10. '       ' → logprob: -10.735230445861816

Token 364: '       ' (ID: 309)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.017680400982499123
    2. '	idx' → logprob: -5.1426801681518555
    3. ' idx' → logprob: -5.3926801681518555
    4. '[idx' → logprob: -5.3926801681518555
    5. '
' → logprob: -6.3926801681518555
    6. '   ' → logprob: -8.142680168151855
    7. '       ' → logprob: -8.267680168151855
    8. '(idx' → logprob: -9.142680168151855
    9. '```' → logprob: -9.642680168151855
    10. '_idx' → logprob: -9.642680168151855

Token 365: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -8.387458365177736e-05
    2. ' idx' → logprob: -9.500083923339844
    3. '	idx' → logprob: -11.875083923339844
    4. '[idx' → logprob: -14.125083923339844
    5. '_idx' → logprob: -14.375083923339844
    6. '   ' → logprob: -14.625083923339844
    7. '(idx' → logprob: -16.125083923339844
    8. '
' → logprob: -16.750083923339844
    9. 'index' → logprob: -17.875083923339844
    10. '       ' → logprob: -18.000083923339844

Token 366: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760013461112976
    2. ' +=' → logprob: -0.8260013461112976
    3. '+' → logprob: -9.951001167297363
    4. ']+=' → logprob: -11.701001167297363
    5. '=' → logprob: -13.201001167297363
    6. '```' → logprob: -13.326001167297363
    7. '   ' → logprob: -13.826001167297363
    8. '+='' → logprob: -14.576001167297363
    9. '++' → logprob: -14.951001167297363
    10. '+="' → logprob: -16.20100212097168

Token 367: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.50002670288086
    4. '
' → logprob: -18.25002670288086
    5. '```' → logprob: -18.50002670288086
    6. '１' → logprob: -19.56252670288086
    7. '4' → logprob: -20.06252670288086
    8. '`' → logprob: -20.18752670288086
    9. ' ' → logprob: -20.56252670288086
    10. '0' → logprob: -20.81252670288086

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '4' → logprob: -13.250001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '0' → logprob: -18.125001907348633
    6. '１' → logprob: -19.000001907348633
    7. '```' → logprob: -19.625001907348633
    8. '
' → logprob: -19.750001907348633
    9. '(' → logprob: -19.937501907348633
    10. '3' → logprob: -20.125001907348633

Token 369: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32968923449516296
    2. '       ' → logprob: -2.0796892642974854
    3. '        
' → logprob: -3.0796892642974854
    4. 'distance' → logprob: -3.5796892642974854
    5. 'start' → logprob: -3.8296892642974854
    6. '<|end|>' → logprob: -3.8296892642974854
    7. '#' → logprob: -4.579689025878906
    8. 'visited' → logprob: -4.829689025878906
    9. 'dist' → logprob: -4.829689025878906
    10. 'states' → logprob: -6.579689025878906

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09386765211820602
    2. '
' → logprob: -3.093867540359497
    3. '        
' → logprob: -4.093867778778076
    4. 'dist' → logprob: -4.718867778778076
    5. 'distance' → logprob: -5.343867778778076
    6. 'start' → logprob: -5.343867778778076
    7. 'import' → logprob: -6.218867778778076
    8. 'visited' → logprob: -6.218867778778076
    9. '#' → logprob: -6.968867778778076
    10. '   ' → logprob: -7.093867778778076

Token 371: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6969051957130432
    2. 'INF' → logprob: -1.3219051361083984
    3. 'dist' → logprob: -2.1969051361083984
    4. 'start' → logprob: -3.4469051361083984
    5. 'import' → logprob: -3.6969051361083984
    6. '       ' → logprob: -4.071905136108398
    7. '
' → logprob: -4.196905136108398
    8. 'from' → logprob: -4.821905136108398
    9. 'visited' → logprob: -4.821905136108398
    10. 'n' → logprob: -5.571905136108398

Token 372: ' costs' (ID: 8959)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27201732993125916
    2. 'start' → logprob: -2.272017240524292
    3. 'dist' → logprob: -3.022017240524292
    4. 'INF' → logprob: -3.272017240524292
    5. '
' → logprob: -4.147017478942871
    6. '       ' → logprob: -4.897017478942871
    7. 'import' → logprob: -5.022017478942871
    8. 'from' → logprob: -5.397017478942871
    9. 'visited' → logprob: -5.897017478942871
    10. 'n' → logprob: -5.897017478942871

Token 373: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20715756714344025
    2. '=' → logprob: -1.8321576118469238
    3. ',' → logprob: -4.582157611846924
    4. '[' → logprob: -5.582157611846924
    5. '=[' → logprob: -5.957157611846924
    6. ')' → logprob: -6.082157611846924
    7. '#' → logprob: -6.207157611846924
    8. '0' → logprob: -6.707157611846924
    9. '
' → logprob: -7.582157611846924
    10. 'def' → logprob: -7.957157611846924

Token 374: ']:' (ID: 12433)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4379265010356903
    2. '=' → logprob: -1.6879265308380127
    3. ')' → logprob: -3.0629265308380127
    4. ']' → logprob: -3.4379265308380127
    5. ' represents' → logprob: -3.9379265308380127
    6. '#' → logprob: -4.187926292419434
    7. 'def' → logprob: -4.437926292419434
    8. ':' → logprob: -4.687926292419434
    9. '[' → logprob: -5.062926292419434
    10. ' is' → logprob: -5.562926292419434

Token 375: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.053969744592905045
    2. 'Straight' → logprob: -3.9289698600769043
    3. '#' → logprob: -4.678969860076904
    4. ' cost' → logprob: -5.053969860076904
    5. 'The' → logprob: -5.553969860076904
    6. ' costs' → logprob: -5.678969860076904
    7. 'i' → logprob: -6.178969860076904
    8. 'Cost' → logprob: -6.178969860076904
    9. 'Costs' → logprob: -6.678969860076904
    10. 'straight' → logprob: -6.928969860076904

Token 376: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1385025978088379
    2. ' for' → logprob: -2.388502597808838
    3. '#' → logprob: -3.888502597808838
    4. ' =' → logprob: -5.638502597808838
    5. '       ' → logprob: -5.763502597808838
    6. '=' → logprob: -6.138502597808838
    7. 'def' → logprob: -6.263502597808838
    8. ' of' → logprob: -6.388502597808838
    9. 'of' → logprob: -6.513502597808838
    10. 'to' → logprob: -7.013502597808838

Token 377: ' player's' (ID: 107234)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.7822075486183167
    2. 'i' → logprob: -1.7822074890136719
    3. 'turn' → logprob: -2.157207489013672
    4. 'commands' → logprob: -2.282207489013672
    5. 'cmd' → logprob: -2.782207489013672
    6. '[i' → logprob: -3.532207489013672
    7. 'going' → logprob: -4.157207489013672
    8. 'Straight' → logprob: -4.407207489013672
    9. 'straight' → logprob: -4.532207489013672
    10. ' command' → logprob: -4.907207489013672

Token 378: ' explicit' (ID: 23141)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.8952178359031677
    2. 'movement' → logprob: -2.1452178955078125
    3. 'next' → logprob: -2.3952178955078125
    4. 'commands' → logprob: -2.5202178955078125
    5. ' next' → logprob: -2.6452178955078125
    6. 'move' → logprob: -3.1452178955078125
    7. 'command' → logprob: -3.2702178955078125
    8. ' movement' → logprob: -3.3952178955078125
    9. ' turn' → logprob: -3.7702178955078125
    10. ' command' → logprob: -4.1452178955078125

Token 379: ' command' (ID: 6348)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -1.3071556091308594
    2. ' turn' → logprob: -2.0571556091308594
    3. '[i' → logprob: -2.0571556091308594
    4. 'commands' → logprob: -2.1821556091308594
    5. ' commands' → logprob: -2.4321556091308594
    6. ' command' → logprob: -2.8071556091308594
    7. ' move' → logprob: -3.0571556091308594
    8. 'command' → logprob: -3.4321556091308594
    9. 'move' → logprob: -3.4321556091308594
    10. ' turns' → logprob: -3.6821556091308594

Token 380: ' i' (ID: 575)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6560622453689575
    2. '       ' → logprob: -0.9060622453689575
    3. '        
' → logprob: -2.781062126159668
    4. '#' → logprob: -4.531062126159668
    5. '<|end|>' → logprob: -6.406062126159668
    6. ',' → logprob: -7.156062126159668
    7. '  
' → logprob: -7.906062126159668
    8. '    
' → logprob: -8.406062126159668
    9. '   ' → logprob: -9.031062126159668
    10. '

' → logprob: -9.156062126159668

Token 383: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.15756584703922272
    2. '       ' → logprob: -2.6575658321380615
    3. 'INF' → logprob: -3.2825658321380615
    4. '
' → logprob: -4.157566070556641
    5. 'dist' → logprob: -4.907566070556641
    6. 'start' → logprob: -6.282566070556641
    7. 'import' → logprob: -6.282566070556641
    8. '   ' → logprob: -6.532566070556641
    9. 'inf' → logprob: -6.657566070556641
    10. '        
' → logprob: -6.657566070556641

Token 384: ' commands' (ID: 23877)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19788271188735962
    2. 'dist' → logprob: -2.947882652282715
    3. '       ' → logprob: -3.572882652282715
    4. 'visited' → logprob: -3.572882652282715
    5. 'INF' → logprob: -3.822882652282715
    6. 'start' → logprob: -4.447882652282715
    7. 'dp' → logprob: -4.947882652282715
    8. 'inf' → logprob: -5.572882652282715
    9. 'cost' → logprob: -5.572882652282715
    10. 'import' → logprob: -5.822882652282715

Token 385: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05624956637620926
    2. '=' → logprob: -3.1812496185302734
    3. '_allowed' → logprob: -5.556249618530273
    4. '_possible' → logprob: -5.681249618530273
    5. '_cost' → logprob: -6.056249618530273
    6. '_to' → logprob: -8.431249618530273
    7. '_available' → logprob: -8.431249618530273
    8. ' are' → logprob: -8.556249618530273
    9. 'cost' → logprob: -8.556249618530273
    10. ':' → logprob: -8.556249618530273

Token 386: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012203158810734749
    2. ' [' → logprob: -4.762203216552734
    3. '0' → logprob: -5.762203216552734
    4. 'range' → logprob: -9.012203216552734
    5. '#' → logprob: -10.262203216552734
    6. ' ' → logprob: -10.387203216552734
    7. '   ' → logprob: -10.637203216552734
    8. '[i' → logprob: -10.762203216552734
    9. '[S' → logprob: -10.762203216552734
    10. 'Straight' → logprob: -10.887203216552734

Token 387: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005514891818165779
    2. '0' → logprob: -5.255515098571777
    3. 'range' → logprob: -9.005515098571777
    4. '["' → logprob: -9.755515098571777
    5. '['' → logprob: -10.005515098571777
    6. '[
' → logprob: -11.005515098571777
    7. '(' → logprob: -11.880515098571777
    8. '#' → logprob: -12.005515098571777
    9. '[(' → logprob: -12.380515098571777
    10. '[-' → logprob: -12.630515098571777

Token 388: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2798630893230438
    2. '=' → logprob: -1.5298631191253662
    3. ' =' → logprob: -5.279862880706787
    4. ' (' → logprob: -5.654862880706787
    5. ':' → logprob: -5.779862880706787
    6. ' to' → logprob: -5.779862880706787
    7. '(S' → logprob: -5.779862880706787
    8. 'to' → logprob: -6.654862880706787
    9. '-' → logprob: -6.779862880706787
    10. '#' → logprob: -7.029862880706787

Token 389: 'Straight' (ID: 129322)
  Prédit: 'Straight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Straight' → logprob: -0.0034244931302964687
    2. 'straight' → logprob: -5.753424644470215
    3. ' Straight' → logprob: -9.128424644470215
    4. '0' → logprob: -10.003424644470215
    5. ' straight' → logprob: -10.378424644470215
    6. 'Stra' → logprob: -11.378424644470215
    7. 'S' → logprob: -11.503424644470215
    8. 'STRA' → logprob: -11.753424644470215
    9. 'Forward' → logprob: -12.253424644470215
    10. ' ' → logprob: -12.753424644470215

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030738191679120064
    2. '       ' → logprob: -3.780738115310669
    3. ',
' → logprob: -5.780738353729248
    4. ' ,' → logprob: -6.405738353729248
    5. '<|end|>' → logprob: -6.905738353729248
    6. '   ' → logprob: -8.03073787689209
    7. '
' → logprob: -8.53073787689209
    8. ' ' → logprob: -8.53073787689209
    9. '<|end|>' → logprob: -8.65573787689209
    10. '0' → logprob: -9.03073787689209

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003440176835283637
    2. ' ' → logprob: -6.0034403800964355
    3. '#' → logprob: -7.0034403800964355
    4. ' #' → logprob: -10.003439903259277
    5. '   ' → logprob: -12.378439903259277
    6. '
' → logprob: -12.753439903259277
    7. '       ' → logprob: -14.378439903259277
    8. '<|end|>' → logprob: -14.503439903259277
    9. '```' → logprob: -15.503439903259277
    10. '0' → logprob: -15.628439903259277

Token 392: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009352823253720999
    2. ',' → logprob: -7.000935077667236
    3. 'Right' → logprob: -11.625935554504395
    4. ' =' → logprob: -11.750935554504395
    5. ':' → logprob: -13.250935554504395
    6. '   ' → logprob: -14.125935554504395
    7. '=True' → logprob: -14.125935554504395
    8. '=None' → logprob: -14.875935554504395
    9. '4' → logprob: -15.000935554504395
    10. '_Right' → logprob: -15.000935554504395

Token 393: 'Right' (ID: 8627)
  Prédit: 'Right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -2.8206473871250637e-05
    2. ' Right' → logprob: -11.125028610229492
    3. '1' → logprob: -11.625028610229492
    4. 'right' → logprob: -13.125028610229492
    5. '_Right' → logprob: -14.125028610229492
    6. '
' → logprob: -14.625028610229492
    7. 'Rig' → logprob: -15.750028610229492
    8. '_right' → logprob: -15.875028610229492
    9. '2' → logprob: -15.875028610229492
    10. ' right' → logprob: -15.875028610229492

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010261393617838621
    2. '2' → logprob: -7.126026153564453
    3. '<|end|>' → logprob: -9.251026153564453
    4. ' ,' → logprob: -9.626026153564453
    5. ',
' → logprob: -10.376026153564453
    6. '   ' → logprob: -11.376026153564453
    7. '<|end|>' → logprob: -12.251026153564453
    8. ' ' → logprob: -12.751026153564453
    9. ')' → logprob: -13.126026153564453
    10. '4' → logprob: -13.751026153564453

Token 395: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020425561524461955
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.250204086303711
    4. '  ' → logprob: -15.875204086303711
    5. '
' → logprob: -16.00020408630371
    6. ',' → logprob: -16.12520408630371
    7. '    ' → logprob: -17.62520408630371
    8. '#' → logprob: -18.25020408630371
    9. '```' → logprob: -18.50020408630371
    10. '     ' → logprob: -18.75020408630371

Token 396: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.57634037733078
    2. ',' → logprob: -0.82634037733078
    3. '3' → logprob: -7.951340198516846
    4. ' =' → logprob: -11.701340675354004
    5. '4' → logprob: -11.826340675354004
    6. ' ' → logprob: -12.326340675354004
    7. '2' → logprob: -12.451340675354004
    8. ' ,' → logprob: -12.451340675354004
    9. '0' → logprob: -12.826340675354004
    10. '=True' → logprob: -13.076340675354004

Token 397: 'Back' (ID: 4933)
  Prédit: 'Back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Back' → logprob: -1.6240566083070007e-06
    2. '2' → logprob: -14.250001907348633
    3. 'Backward' → logprob: -14.250001907348633
    4. '3' → logprob: -15.500001907348633
    5. ' Back' → logprob: -17.500001907348633
    6. 'back' → logprob: -17.500001907348633
    7. ' back' → logprob: -18.500001907348633
    8. '_back' → logprob: -18.625001907348633
    9. 'Left' → logprob: -19.875001907348633
    10. '_Back' → logprob: -20.500001907348633

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014386092312633991
    2. '3' → logprob: -4.264386177062988
    3. ' ,' → logprob: -9.639386177062988
    4. '       ' → logprob: -10.139386177062988
    5. '4' → logprob: -10.264386177062988
    6. ' ' → logprob: -10.764386177062988
    7. '<|end|>' → logprob: -11.139386177062988
    8. '   ' → logprob: -11.389386177062988
    9. '2' → logprob: -12.014386177062988
    10. '#' → logprob: -12.139386177062988

Token 399: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '
' → logprob: -20.750001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '```' → logprob: -21.125001907348633
    6. '' → logprob: -21.625001907348633
    7. ',' → logprob: -21.625001907348633
    8. '2' → logprob: -22.250001907348633
    9. '３' → logprob: -22.625001907348633
    10. '  ' → logprob: -22.875001907348633

Token 400: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.65707261255011e-06
    2. ',' → logprob: -11.750008583068848
    3. ')' → logprob: -15.500008583068848
    4. ' =' → logprob: -15.500008583068848
    5. ')=' → logprob: -16.750009536743164
    6. '3' → logprob: -17.625009536743164
    7. '4' → logprob: -17.625009536743164
    8. '=True' → logprob: -18.375009536743164
    9. ']=' → logprob: -18.375009536743164
    10. '=int' → logprob: -18.500009536743164

Token 401: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.00020127551397308707
    2. '3' → logprob: -9.250201225280762
    3. ' Left' → logprob: -9.250201225280762
    4. '2' → logprob: -12.375201225280762
    5. '_Left' → logprob: -13.500201225280762
    6. '_left' → logprob: -14.000201225280762
    7. 'Straight' → logprob: -14.125201225280762
    8. 'left' → logprob: -14.250201225280762
    9. '.Left' → logprob: -14.750201225280762
    10. '4' → logprob: -15.375201225280762

Token 402: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30128905177116394
    2. '
' → logprob: -1.4262890815734863
    3. '        
' → logprob: -4.426289081573486
    4. 'distance' → logprob: -5.926289081573486
    5. 'dist' → logprob: -6.051289081573486
    6. '#' → logprob: -7.426289081573486
    7. 'visited' → logprob: -7.801289081573486
    8. 'dp' → logprob: -8.176288604736328
    9. 'state' → logprob: -8.426288604736328
    10. 'states' → logprob: -8.551288604736328

Token 403: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3502830266952515
    2. 'dist' → logprob: -1.3502830266952515
    3. 'INF' → logprob: -1.4752830266952515
    4. '   ' → logprob: -2.350283145904541
    5. '       ' → logprob: -3.225283145904541
    6. 'start' → logprob: -3.475283145904541
    7. 'import' → logprob: -3.850283145904541
    8. 'visited' → logprob: -4.100283145904541
    9. 'distance' → logprob: -4.475283145904541
    10. 'dp' → logprob: -4.475283145904541

Token 404: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8619692325592041
    2. 'INF' → logprob: -0.9869692325592041
    3. '#' (adapté à ' #') → logprob: -1.986969232559204
    4. 'import' → logprob: -3.736969232559204
    5. 'dp' → logprob: -4.361968994140625
    6. '       ' → logprob: -4.986968994140625
    7. '
' → logprob: -5.111968994140625
    8. 'from' → logprob: -5.361968994140625
    9. 'visited' → logprob: -5.361968994140625
    10. 'inf' → logprob: -6.111968994140625

Token 405: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7625914216041565
    2. 'dist' → logprob: -0.8875914216041565
    3. 'INF' → logprob: -2.6375913619995117
    4. 'visited' → logprob: -3.8875913619995117
    5. 'dp' → logprob: -4.387591361999512
    6. 'import' → logprob: -4.887591361999512
    7. 'from' → logprob: -6.012591361999512
    8. 'start' → logprob: -6.012591361999512
    9. 'distance' → logprob: -6.387591361999512
    10. 'cost' → logprob: -7.512591361999512

Token 406: ' robot' (ID: 20808)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3216704726219177
    2. 'start' → logprob: -1.6966705322265625
    3. 'dist' → logprob: -3.3216705322265625
    4. ' start' → logprob: -3.9466705322265625
    5. ' #' → logprob: -5.3216705322265625
    6. ' dist' → logprob: -5.3216705322265625
    7. 'dp' → logprob: -5.4466705322265625
    8. 'player' → logprob: -5.4466705322265625
    9. 'from' → logprob: -5.6966705322265625
    10. 'visited' → logprob: -5.6966705322265625

Token 407: ' starts' (ID: 13217)
  Prédit: ' starts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' starts' → logprob: -0.87075275182724
    2. 'starts' → logprob: -1.1207528114318848
    3. 'can' → logprob: -2.3707528114318848
    4. ''s' → logprob: -2.8707528114318848
    5. ' can' → logprob: -3.4957528114318848
    6. '#' → logprob: -3.9957528114318848
    7. 'start' → logprob: -4.120752811431885
    8. 'initial' → logprob: -4.745752811431885
    9. 's' → logprob: -5.120752811431885
    10. 'is' → logprob: -5.620752811431885

Token 408: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.621899425983429
    2. ' at' → logprob: -1.3718993663787842
    3. 'row' → logprob: -2.621899366378784
    4. '_row' → logprob: -3.246899366378784
    5. 'r' → logprob: -3.746899366378784
    6. '_pos' → logprob: -3.996899366378784
    7. '_r' → logprob: -4.121899604797363
    8. 'from' → logprob: -4.496899604797363
    9. '_position' → logprob: -4.996899604797363
    10. 'direction' → logprob: -5.621899604797363

Token 409: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006384352687746286
    2. '0' → logprob: -5.381384372711182
    3. 'r' → logprob: -7.756384372711182
    4. 'position' → logprob: -7.881384372711182
    5. ' (' → logprob: -8.006383895874023
    6. 'row' → logprob: -8.256383895874023
    7. 'start' → logprob: -8.256383895874023
    8. '(r' → logprob: -10.881383895874023
    9. 'sr' → logprob: -10.881383895874023
    10. 'the' → logprob: -11.381383895874023

Token 410: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11580173671245575
    2. 'h' → logprob: -2.2408018112182617
    3. ' ' → logprob: -6.490801811218262
    4. ' h' → logprob: -7.365801811218262
    5. '1' → logprob: -7.615801811218262
    6. ')' → logprob: -8.865801811218262
    7. 'r' → logprob: -10.240801811218262
    8. '(h' → logprob: -10.365801811218262
    9. '(' → logprob: -10.803301811218262
    10. 'row' → logprob: -11.053301811218262

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002334568416699767
    2. '0' → logprob: -9.00023365020752
    3. ' ,' → logprob: -9.25023365020752
    4. ')' → logprob: -12.00023365020752
    5. ',
' → logprob: -12.25023365020752
    6. '),' → logprob: -14.75023365020752
    7. ' ' → logprob: -14.75023365020752
    8. '
' → logprob: -15.00023365020752
    9. '#' → logprob: -15.25023365020752
    10. '```' → logprob: -15.43773365020752

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002477796748280525
    2. ' ' → logprob: -6.002477645874023
    3. ')' → logprob: -14.252477645874023
    4. 'h' → logprob: -14.502477645874023
    5. ',' → logprob: -14.627477645874023
    6. '       ' → logprob: -15.877477645874023
    7. '1' → logprob: -16.127477645874023
    8. '   ' → logprob: -16.377477645874023
    9. ' h' → logprob: -17.314977645874023
    10. '  ' → logprob: -17.314977645874023

Token 413: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.537386417388916
    2. ')' → logprob: -0.912386417388916
    3. '),' → logprob: -4.412386417388916
    4. ' with' → logprob: -7.037386417388916
    5. ' ,' → logprob: -7.662386417388916
    6. ' )' → logprob: -8.162385940551758
    7. 'with' → logprob: -8.912385940551758
    8. '(' → logprob: -9.912385940551758
    9. ')
' → logprob: -10.037385940551758
    10. ',)' → logprob: -10.412385940551758

Token 414: ' facing' (ID: 20511)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3141559958457947
    2. ' with' → logprob: -1.6891560554504395
    3. '       ' → logprob: -3.1891560554504395
    4. ' and' → logprob: -3.9391560554504395
    5. 'with' → logprob: -4.9391560554504395
    6. '
' → logprob: -5.0641560554504395
    7. 'start' → logprob: -5.6891560554504395
    8. ',
' → logprob: -6.1891560554504395
    9. ' ,' → logprob: -6.9391560554504395
    10. ' start' → logprob: -7.4391560554504395

Token 415: ' east' (ID: 23557)
  Prédit: 'East'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'East' → logprob: -0.2701338827610016
    2. 'east' → logprob: -1.8951338529586792
    3. '0' → logprob: -3.2701339721679688
    4. ' East' → logprob: -3.3951339721679688
    5. ' east' → logprob: -4.270133972167969
    6. ' ' → logprob: -8.270133972167969
    7. '1' → logprob: -8.520133972167969
    8. 'E' → logprob: -8.645133972167969
    9. '>' → logprob: -9.145133972167969
    10. '```' → logprob: -10.145133972167969

Token 416: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5843703150749207
    2. 'start' → logprob: -1.0843703746795654
    3. ',' → logprob: -3.3343703746795654
    4. '   ' → logprob: -4.084370136260986
    5. ' (' → logprob: -4.709370136260986
    6. '
' → logprob: -4.709370136260986
    7. ' start' → logprob: -4.709370136260986
    8. 'distance' → logprob: -4.959370136260986
    9. 'state' → logprob: -5.459370136260986
    10. 'initial' → logprob: -6.209370136260986

Token 417: 'direction' (ID: 43278)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001140453852713108
    2. ')' → logprob: -6.876140594482422
    3. 'direction' → logprob: -9.501140594482422
    4. ' ' → logprob: -10.751140594482422
    5. '   ' → logprob: -13.001140594482422
    6. 'east' → logprob: -13.251140594482422
    7. ')
' → logprob: -13.376140594482422
    8. '
' → logprob: -13.751140594482422
    9. ' )' → logprob: -14.126140594482422
    10. '```' → logprob: -14.251140594482422

Token 418: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3336274027824402
    2. '0' → logprob: -1.583627462387085
    3. '=' → logprob: -2.958627462387085
    4. ' =' → logprob: -4.208627223968506
    5. ')
' → logprob: -5.583627223968506
    6. '4' → logprob: -5.958627223968506
    7. '3' → logprob: -6.458627223968506
    8. ' ' → logprob: -6.958627223968506
    9. ',' → logprob: -7.083627223968506
    10. ' )' → logprob: -8.083627700805664

Token 419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05038991943001747
    2. '=' → logprob: -3.6753900051116943
    3. ')' → logprob: -3.8003900051116943
    4. ' =' → logprob: -7.175389766693115
    5. ' ' → logprob: -7.925389766693115
    6. ')
' → logprob: -9.050390243530273
    7. ',' → logprob: -9.675390243530273
    8. '3' → logprob: -10.050390243530273
    9. ' )' → logprob: -10.800390243530273
    10. '[' → logprob: -11.175390243530273

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01679975911974907
    2. ')
' → logprob: -4.1417999267578125
    3. ').' → logprob: -8.141799926757812
    4. '       ' → logprob: -8.516799926757812
    5. ',' → logprob: -8.641799926757812
    6. ' )' → logprob: -10.516799926757812
    7. ')

' → logprob: -10.641799926757812
    8. '),' → logprob: -10.891799926757812
    9. ')
' → logprob: -11.766799926757812
    10. '   ' → logprob: -12.141799926757812

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02541440725326538
    2. '
' → logprob: -4.15041446685791
    3. '        
' → logprob: -5.40041446685791
    4. 'distance' → logprob: -6.02541446685791
    5. 'dist' → logprob: -7.15041446685791
    6. 'import' → logprob: -7.40041446685791
    7. '   ' → logprob: -8.40041446685791
    8. 'visited' → logprob: -8.90041446685791
    9. ',' → logprob: -9.02541446685791
    10. 'dp' → logprob: -9.40041446685791

Token 422: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.33927997946739197
    2. 'import' → logprob: -1.8392800092697144
    3. 'start' → logprob: -2.714279890060425
    4. '       ' → logprob: -3.714279890060425
    5. 'dp' → logprob: -4.339280128479004
    6. 'distance' → logprob: -5.214280128479004
    7. 'h' → logprob: -5.339280128479004
    8. 'heap' → logprob: -5.964280128479004
    9. 'visited' → logprob: -5.964280128479004
    10. ' dist' → logprob: -6.214280128479004

Token 423: ' Goal' (ID: 67160)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.34470421075820923
    2. 'import' → logprob: -1.9697041511535645
    3. 'start' → logprob: -2.5947041511535645
    4. '#' → logprob: -4.0947041511535645
    5. '       ' → logprob: -4.2197041511535645
    6. 'dp' → logprob: -4.3447041511535645
    7. 'h' → logprob: -5.0947041511535645
    8. 'INF' → logprob: -5.2197041511535645
    9. 'visited' → logprob: -5.7197041511535645
    10. 'distance' → logprob: -5.8447041511535645

Token 424: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39662107825279236
    2. ' =' → logprob: -1.5216211080551147
    3. 'is' → logprob: -2.396620988845825
    4. ' is' → logprob: -4.521621227264404
    5. 'at' → logprob: -5.396621227264404
    6. '=(' → logprob: -7.521621227264404
    7. 'pos' → logprob: -7.896621227264404
    8. 'x' → logprob: -8.146620750427246
    9. ':' → logprob: -8.271620750427246
    10. 'row' → logprob: -8.521620750427246

Token 425: ' at' (ID: 540)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7753452062606812
    2. 'to' → logprob: -1.4003452062606812
    3. ' (' → logprob: -2.0253453254699707
    4. ' to' → logprob: -2.0253453254699707
    5. '(h' → logprob: -3.9003453254699707
    6. '(w' → logprob: -5.150345325469971
    7. ' at' → logprob: -6.400345325469971
    8. 'at' → logprob: -7.900345325469971
    9. 'h' → logprob: -8.025344848632812
    10. '       ' → logprob: -8.025344848632812

Token 426: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0032070616725832224
    2. ' (' → logprob: -5.753207206726074
    3. 'h' → logprob: -11.253207206726074
    4. '   ' → logprob: -12.128207206726074
    5. '(' → logprob: -12.378207206726074
    6. '(r' → logprob: -13.003207206726074
    7. '(w' → logprob: -13.628207206726074
    8. ' h' → logprob: -13.628207206726074
    9. '       ' → logprob: -14.378207206726074
    10. '[h' → logprob: -15.128207206726074

Token 427: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.018222637474536896
    2. ' h' → logprob: -4.018222808837891
    3. '(h' → logprob: -11.14322280883789
    4. '
' → logprob: -11.14322280883789
    5. '	h' → logprob: -11.39322280883789
    6. ')' → logprob: -11.64322280883789
    7. '   ' → logprob: -11.64322280883789
    8. ',h' → logprob: -12.64322280883789
    9. '<h' → logprob: -13.39322280883789
    10. 'w' → logprob: -13.64322280883789

Token 428: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016063697636127472
    2. ' -' → logprob: -4.141063690185547
    3. ',' → logprob: -10.641063690185547
    4. ' ' → logprob: -13.141063690185547
    5. ' ,' → logprob: -13.266063690185547
    6. '-
' → logprob: -15.266063690185547
    7. ')' → logprob: -15.516063690185547
    8. '   ' → logprob: -15.641063690185547
    9. '1' → logprob: -15.766063690185547
    10. '-,' → logprob: -16.016063690185547

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3795937522663735e-05
    2. ' ' → logprob: -10.75002384185791
    3. ',' → logprob: -13.25002384185791
    4. '   ' → logprob: -15.25002384185791
    5. '
' → logprob: -15.50002384185791
    6. '       ' → logprob: -16.625022888183594
    7. '2' → logprob: -16.750022888183594
    8. ' ,' → logprob: -17.000022888183594
    9. ')' → logprob: -17.125022888183594
    10. '-' → logprob: -17.750022888183594

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017831178847700357
    2. ',w' → logprob: -6.5017828941345215
    3. ' ,' → logprob: -8.75178337097168
    4. ',h' → logprob: -10.25178337097168
    5. ',n' → logprob: -11.25178337097168
    6. ',
' → logprob: -11.37678337097168
    7. ',j' → logprob: -12.00178337097168
    8. '   ' → logprob: -12.12678337097168
    9. '-' → logprob: -12.25178337097168
    10. ',row' → logprob: -12.37678337097168

Token 431: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10027643293142319
    2. ' w' → logprob: -2.350276470184326
    3. '0' → logprob: -9.600275993347168
    4. ',w' → logprob: -14.100275993347168
    5. ' ' → logprob: -14.350275993347168
    6. '	w' → logprob: -15.100275993347168
    7. '<w' → logprob: -15.850275993347168
    8. '   ' → logprob: -15.975275993347168
    9. '(w' → logprob: -16.975276947021484
    10. ',' → logprob: -17.100276947021484

Token 432: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007104054093360901
    2. ' -' → logprob: -7.250710487365723
    3. '1' → logprob: -15.250710487365723
    4. ')' → logprob: -16.375709533691406
    5. ' ' → logprob: -17.125709533691406
    6. '   ' → logprob: -17.250709533691406
    7. ')-' → logprob: -17.375709533691406
    8. '),' → logprob: -17.625709533691406
    9. '```' → logprob: -18.625709533691406
    10. '−' → logprob: -18.875709533691406

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '-' → logprob: -15.750004768371582
    4. '```' → logprob: -16.500003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '2' → logprob: -17.187503814697266
    7. ')' → logprob: -17.500003814697266
    8. '
' → logprob: -17.937503814697266
    9. 'h' → logprob: -18.000003814697266
    10. '4' → logprob: -18.937503814697266

Token 434: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009898217394948006
    2. ')
' → logprob: -4.7598981857299805
    3. ',' → logprob: -7.7598981857299805
    4. ').' → logprob: -8.13489818572998
    5. ' )' → logprob: -8.50989818572998
    6. '       ' → logprob: -8.75989818572998
    7. '),' → logprob: -9.00989818572998
    8. ')

' → logprob: -10.13489818572998
    9. ')
' → logprob: -10.88489818572998
    10. '   ' → logprob: -12.50989818572998

Token 435: ' Halt' (ID: 120259)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2679915726184845
    2. '       ' → logprob: -2.392991542816162
    3. 'import' → logprob: -2.642991542816162
    4. '   ' → logprob: -3.767991542816162
    5. '        
' → logprob: -4.392991542816162
    6. 'dp' → logprob: -4.642991542816162
    7. 'distance' → logprob: -4.642991542816162
    8. 'dist' → logprob: -5.017991542816162
    9. 'from' → logprob: -5.892991542816162
    10. 'visited' → logprob: -6.392991542816162

Token 436: ' command' (ID: 6348)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8045201301574707
    2. '       ' → logprob: -1.6795201301574707
    3. 'while' → logprob: -2.1795201301574707
    4. '=' → logprob: -2.9295201301574707
    5. '.' → logprob: -3.3045201301574707
    6. '#' → logprob: -3.4295201301574707
    7. ' at' → logprob: -3.5545201301574707
    8. 'at' → logprob: -4.429520130157471
    9. 'for' → logprob: -4.679520130157471
    10. '   ' → logprob: -4.679520130157471

Token 437: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12271147221326828
    2. '=' → logprob: -2.247711420059204
    3. '_idx' → logprob: -5.997711658477783
    4. 'found' → logprob: -6.622711658477783
    5. 'cost' → logprob: -6.872711658477783
    6. ',' → logprob: -7.122711658477783
    7. '_cost' → logprob: -7.622711658477783
    8. '_found' → logprob: -7.747711658477783
    9. 'idx' → logprob: -7.872711658477783
    10. '_index' → logprob: -7.872711658477783

Token 438: ' goal' (ID: 8583)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.5373594164848328
    2. 'that' → logprob: -1.4123594760894775
    3. 'the' → logprob: -2.7873594760894775
    4. '(board' → logprob: -3.4123594760894775
    5. '(h' → logprob: -3.7873594760894775
    6. '(' → logprob: -4.037359237670898
    7. 'goal' → logprob: -4.287359237670898
    8. ' that' → logprob: -5.287359237670898
    9. 'target' → logprob: -6.037359237670898
    10. 'this' → logprob: -6.162359237670898

Token 439: ' square' (ID: 13749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09957288950681686
    2. '
' → logprob: -3.0995728969573975
    3. '        
' → logprob: -3.5995728969573975
    4. '<|end|>' → logprob: -3.9745728969573975
    5. ',' → logprob: -6.474572658538818
    6. '.' → logprob: -8.349573135375977
    7. ')' → logprob: -8.724573135375977
    8. 'distance' → logprob: -8.849573135375977
    9. 'def' → logprob: -9.099573135375977
    10. '<|end|>' → logprob: -9.224573135375977

Token 440: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24815021455287933
    2. '
' → logprob: -1.8731502294540405
    3. '<|end|>' → logprob: -2.998150110244751
    4. '        
' → logprob: -4.24815034866333
    5. ',' → logprob: -7.49815034866333
    6. '<|end|>' → logprob: -8.373149871826172
    7. 'import' → logprob: -8.748149871826172
    8. '  
' → logprob: -8.998149871826172
    9. ')' → logprob: -9.248149871826172
    10. '   ' → logprob: -9.373149871826172

Token 441: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.30892524123191833
    2. '       ' → logprob: -2.433925151824951
    3. 'distance' → logprob: -2.933925151824951
    4. 'import' → logprob: -3.058925151824951
    5. 'visited' → logprob: -3.058925151824951
    6. ' dist' → logprob: -3.933925151824951
    7. 'dp' → logprob: -5.308925151824951
    8. '
' → logprob: -6.558925151824951
    9. '        
' → logprob: -6.683925151824951
    10. '#' → logprob: -7.058925151824951

Token 442: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4340612292289734
    2. 'INF' → logprob: -2.184061288833618
    3. 'dp' → logprob: -2.309061288833618
    4. 'import' → logprob: -2.559061288833618
    5. '#' (adapté à ' #') → logprob: -3.309061288833618
    6. '       ' → logprob: -3.934061288833618
    7. '   ' → logprob: -6.559061050415039
    8. 'from' → logprob: -6.809061050415039
    9. 'visited' → logprob: -7.184061050415039
    10. 'distance' → logprob: -7.184061050415039

Token 443: ' We' (ID: 1416)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23368310928344727
    2. 'import' → logprob: -2.6086831092834473
    3. '#' → logprob: -3.2336831092834473
    4. 'INF' → logprob: -3.2336831092834473
    5. 'visited' → logprob: -4.233683109283447
    6. 'dp' → logprob: -4.233683109283447
    7. 'start' → logprob: -4.483683109283447
    8. 'from' → logprob: -5.108683109283447
    9. 'distance' → logprob: -5.608683109283447
    10. 'heap' → logprob: -6.233683109283447

Token 444: ' want' (ID: 1682)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7740040421485901
    2. '#' → logprob: -2.2740039825439453
    3. 'dist' → logprob: -2.3990039825439453
    4. ' will' → logprob: -2.8990039825439453
    5. ' need' → logprob: -2.8990039825439453
    6. 'visited' → logprob: -3.3990039825439453
    7. ''ll' → logprob: -3.5240039825439453
    8. ' import' → logprob: -3.6490039825439453
    9. ' can' → logprob: -3.8990039825439453
    10. 'from' → logprob: -4.024003982543945

Token 445: ' minimum' (ID: 11085)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5285323262214661
    2. 'to' → logprob: -0.9035323262214661
    3. 'def' → logprob: -5.5285325050354
    4. '   ' → logprob: -7.6535325050354
    5. 'import' → logprob: -8.528532028198242
    6. 'distance' → logprob: -8.653532028198242
    7. 'dist' → logprob: -8.903532028198242
    8. 't' → logprob: -9.278532028198242
    9. 'min' → logprob: -9.278532028198242
    10. '       ' → logprob: -9.778532028198242

Token 446: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.11617984622716904
    2. ' cost' → logprob: -2.366179943084717
    3. '_cost' → logprob: -4.616179943084717
    4. 'distance' → logprob: -6.116179943084717
    5. 'total' → logprob: -6.741179943084717
    6. 'time' → logprob: -6.991179943084717
    7. ' total' → logprob: -7.491179943084717
    8. 'energy' → logprob: -8.116179466247559
    9. ' distance' → logprob: -9.116179466247559
    10. ' energy' → logprob: -9.241179466247559

Token 447: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4526824951171875
    2. '       ' → logprob: -2.0776824951171875
    3. '   ' → logprob: -2.3276824951171875
    4. 'import' → logprob: -2.7026824951171875
    5. 'distance' → logprob: -3.3276824951171875
    6. ' dist' → logprob: -4.2026824951171875
    7. ' to' → logprob: -4.8276824951171875
    8. 'dp' → logprob: -5.3276824951171875
    9. 'heap' → logprob: -5.8276824951171875
    10. 'from' → logprob: -6.4526824951171875

Token 448: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.1923801302909851
    2. ' reach' → logprob: -1.8173801898956299
    3. 'get' → logprob: -5.442379951477051
    4. 'go' → logprob: -5.817379951477051
    5. 'move' → logprob: -6.192379951477051
    6. ' get' → logprob: -7.067379951477051
    7. 'turn' → logprob: -7.692379951477051
    8. ' move' → logprob: -8.06737995147705
    9. 'navigate' → logprob: -8.19237995147705
    10. '   ' → logprob: -8.44237995147705

Token 449: ' goal' (ID: 8583)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.22300678491592407
    2. 'the' → logprob: -1.9730067253112793
    3. 'goal' → logprob: -2.9730067253112793
    4. '       ' → logprob: -5.598006725311279
    5. ' (' → logprob: -6.348006725311279
    6. '(' → logprob: -6.348006725311279
    7. ' the' → logprob: -6.973006725311279
    8. '(goal' → logprob: -7.223006725311279
    9. 'h' → logprob: -7.848006725311279
    10. ' goal' → logprob: -9.848007202148438

Token 450: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5656077861785889
    2. '       ' → logprob: -2.065607786178589
    3. '
' → logprob: -2.190607786178589
    4. ',' → logprob: -2.440607786178589
    5. 'import' → logprob: -2.815607786178589
    6. 'dist' → logprob: -4.065608024597168
    7. 'from' → logprob: -4.940608024597168
    8. ',
' → logprob: -4.940608024597168
    9. '.' → logprob: -5.565608024597168
    10. ' from' → logprob: -6.440608024597168

Token 451: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.003856370458379388
    2. ' h' → logprob: -6.128856182098389
    3. '(h' → logprob: -7.753856182098389
    4. '
' → logprob: -7.878856182098389
    5. ',' → logprob: -7.878856182098389
    6. ',h' → logprob: -8.503856658935547
    7. ')' → logprob: -8.628856658935547
    8. ' (' → logprob: -10.378856658935547
    9. '0' → logprob: -10.628856658935547
    10. '           ' → logprob: -11.628856658935547

Token 452: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00035870319698005915
    2. ' -' → logprob: -8.000358581542969
    3. ',' → logprob: -10.875358581542969
    4. '   ' → logprob: -13.500358581542969
    5. '-
' → logprob: -14.000358581542969
    6. '       ' → logprob: -14.000358581542969
    7. ')' → logprob: -15.125358581542969
    8. ' ' → logprob: -15.375358581542969
    9. ')-' → logprob: -15.500358581542969
    10. '-,' → logprob: -15.750358581542969

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -11.125021934509277
    3. '-' → logprob: -12.250021934509277
    4. '   ' → logprob: -13.875021934509277
    5. '
' → logprob: -14.000021934509277
    6. ',' → logprob: -14.750021934509277
    7. 'w' → logprob: -16.250022888183594
    8. ')' → logprob: -16.375022888183594
    9. '       ' → logprob: -16.500022888183594
    10. '```' → logprob: -16.625022888183594

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008457217481918633
    2. ',w' → logprob: -7.125845909118652
    3. ' ,' → logprob: -10.625845909118652
    4. ',
' → logprob: -11.500845909118652
    5. ',j' → logprob: -14.000845909118652
    6. ',h' → logprob: -14.125845909118652
    7. ',

' → logprob: -14.250845909118652
    8. ')' → logprob: -14.250845909118652
    9. ',n' → logprob: -14.375845909118652
    10. ',y' → logprob: -14.625845909118652

Token 455: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10020969063043594
    2. ' w' → logprob: -2.3502097129821777
    3. '   ' → logprob: -13.60020923614502
    4. ' ' → logprob: -13.85020923614502
    5. '    ' → logprob: -15.10020923614502
    6. '	w' → logprob: -15.72520923614502
    7. '  ' → logprob: -16.225210189819336
    8. ',w' → logprob: -16.600210189819336
    9. '<w' → logprob: -16.725210189819336
    10. '
' → logprob: -16.850210189819336

Token 456: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.836499985889532e-05
    2. ' -' → logprob: -9.7500581741333
    3. '       ' → logprob: -18.000059127807617
    4. '1' → logprob: -18.125059127807617
    5. '   ' → logprob: -18.250059127807617
    6. '-
' → logprob: -18.375059127807617
    7. ')' → logprob: -18.500059127807617
    8. ')-' → logprob: -19.000059127807617
    9. '−' → logprob: -19.125059127807617
    10. ',' → logprob: -19.125059127807617

Token 457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023488728038500994
    2. ' ' → logprob: -8.375234603881836
    3. '-' → logprob: -13.000234603881836
    4. '   ' → logprob: -13.750234603881836
    5. 'w' → logprob: -14.250234603881836
    6. ' w' → logprob: -16.000234603881836
    7. '```' → logprob: -16.000234603881836
    8. '  ' → logprob: -17.375234603881836
    9. '2' → logprob: -17.375234603881836
    10. ')' → logprob: -17.500234603881836

Token 458: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21078306436538696
    2. ',' → logprob: -1.7107830047607422
    3. ')
' → logprob: -5.710783004760742
    4. ' )' → logprob: -6.710783004760742
    5. ' with' → logprob: -6.835783004760742
    6. '   ' → logprob: -6.960783004760742
    7. 'from' → logprob: -7.210783004760742
    8. ' from' → logprob: -7.585783004760742
    9. '),' → logprob: -7.710783004760742
    10. '       ' → logprob: -7.960783004760742

Token 459: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4369005858898163
    2. '       ' → logprob: -1.0619006156921387
    3. ' with' → logprob: -5.936900615692139
    4. ' considering' → logprob: -6.186900615692139
    5. 'with' → logprob: -7.311900615692139
    6. 'from' → logprob: -7.686900615692139
    7. ' #' → logprob: -7.686900615692139
    8. ' starting' → logprob: -8.06190013885498
    9. 'starting' → logprob: -8.43690013885498
    10. 'consider' → logprob: -8.43690013885498

Token 460: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0635226964950562
    2. '       ' → logprob: -1.1885226964950562
    3. ' considering' → logprob: -2.1885228157043457
    4. 'direction' → logprob: -3.4385228157043457
    5. 'including' → logprob: -3.4385228157043457
    6. ' with' → logprob: -3.5635228157043457
    7. ' including' → logprob: -3.5635228157043457
    8. 'consider' → logprob: -3.6885228157043457
    9. ' direction' → logprob: -3.9385228157043457
    10. 'with' → logprob: -4.188522815704346

Token 461: ' possibly' (ID: 14836)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1720171570777893
    2. '       ' → logprob: -2.9220170974731445
    3. 'including' → logprob: -3.2970170974731445
    4. 'consider' → logprob: -3.4220170974731445
    5. 'with' → logprob: -4.2970170974731445
    6. 'f' → logprob: -4.9220170974731445
    7. 'starting' → logprob: -5.0470170974731445
    8. 'direction' → logprob: -6.0470170974731445
    9. 'from' → logprob: -7.1720170974731445
    10. 'taking' → logprob: -7.1720170974731445

Token 462: ' overriding' (ID: 151187)
  Prédit: 'using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'using' → logprob: -0.926255464553833
    2. 'with' → logprob: -1.426255464553833
    3. 'consider' → logprob: -2.676255464553833
    4. 'including' → logprob: -2.801255464553833
    5. '#' → logprob: -2.801255464553833
    6. '   ' → logprob: -3.301255464553833
    7. 'continu' → logprob: -3.426255464553833
    8. 'allow' → logprob: -3.801255464553833
    9. 'by' → logprob: -4.426255226135254
    10. 'turn' → logprob: -4.801255226135254

Token 463: ' commands' (ID: 23877)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7821847796440125
    2. 'the' → logprob: -0.9071847796440125
    3. 'board' → logprob: -3.0321848392486572
    4. 'commands' → logprob: -3.6571848392486572
    5. 'default' → logprob: -3.9071848392486572
    6. ' default' → logprob: -5.032184600830078
    7. 'robot' → logprob: -5.032184600830078
    8. ' commands' → logprob: -5.157184600830078
    9. ' robot' → logprob: -5.407184600830078
    10. '#' → logprob: -6.157184600830078

Token 464: ' assigned' (ID: 21482)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0780777558684349
    2. '
' → logprob: -2.828077793121338
    3. 'import' → logprob: -5.203077793121338
    4. 'dist' → logprob: -5.203077793121338
    5. 'distance' → logprob: -6.078077793121338
    6. '        
' → logprob: -6.703077793121338
    7. '#' → logprob: -7.703077793121338
    8. '   ' → logprob: -8.45307731628418
    9. 'dp' → logprob: -8.95307731628418
    10. '
' → logprob: -9.20307731628418

Token 465: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2927338480949402
    2. ',' → logprob: -3.042733907699585
    3. '.' → logprob: -3.167733907699585
    4. '   ' → logprob: -3.292733907699585
    5. ' at' → logprob: -3.542733907699585
    6. ' with' → logprob: -3.667733907699585
    7. ' to' → logprob: -4.292733669281006
    8. '
' → logprob: -4.417733669281006
    9. 'with' → logprob: -4.792733669281006
    10. '#' → logprob: -4.917733669281006

Token 466: ' squares' (ID: 57269)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.9565222263336182
    2. 'each' → logprob: -1.0815222263336182
    3. 'board' → logprob: -1.9565222263336182
    4. 'the' → logprob: -2.206522226333618
    5. 's' → logprob: -4.831521987915039
    6. 'move' → logprob: -6.206521987915039
    7. 'robot' → logprob: -6.331521987915039
    8. 'all' → logprob: -6.456521987915039
    9. ' squares' → logprob: -6.581521987915039
    10. ' cells' → logprob: -6.581521987915039

Token 467: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09411267936229706
    2. '
' → logprob: -3.3441126346588135
    3. 'dist' → logprob: -3.3441126346588135
    4. 'import' → logprob: -4.719112873077393
    5. '        
' → logprob: -5.469112873077393
    6. 'distance' → logprob: -5.844112873077393
    7. '   ' → logprob: -6.719112873077393
    8. '#' → logprob: -7.344112873077393
    9. 'visited' → logprob: -8.094112396240234
    10. 'dp' → logprob: -8.219112396240234

Token 468: ' explicit' (ID: 23141)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43826404213905334
    2. 'using' → logprob: -2.1882641315460205
    3. 'changing' → logprob: -2.1882641315460205
    4. 'turn' → logprob: -3.4382641315460205
    5. 'explicit' → logprob: -3.8132641315460205
    6. 'the' → logprob: -4.438263893127441
    7. 'over' → logprob: -4.563263893127441
    8. 'cho' → logprob: -4.813263893127441
    9. 'app' → logprob: -4.938263893127441
    10. 'adding' → logprob: -5.563263893127441

Token 469: ' commands' (ID: 23877)
  Prédit: 'commands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'commands' → logprob: -0.26571863889694214
    2. ' commands' → logprob: -2.015718698501587
    3. ' turns' → logprob: -3.515718698501587
    4. 'turn' → logprob: -3.765718698501587
    5. 'command' → logprob: -4.140718460083008
    6. ' command' → logprob: -4.765718460083008
    7. 'moves' → logprob: -5.265718460083008
    8. '#' → logprob: -5.515718460083008
    9. 'player' → logprob: -5.515718460083008
    10. ' turn' → logprob: -6.265718460083008

Token 470: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5515120029449463
    2. '
' → logprob: -1.8015120029449463
    3. 'dist' → logprob: -2.3015120029449463
    4. '       ' → logprob: -2.4265120029449463
    5. 'import' → logprob: -3.5515120029449463
    6. 'distance' → logprob: -3.8015120029449463
    7. 'visited' → logprob: -5.051511764526367
    8. '        
' → logprob: -5.551511764526367
    9. 'INF' → logprob: -6.301511764526367
    10. '    
' → logprob: -6.426511764526367

Token 471: ' costs' (ID: 8959)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'different' → logprob: -1.6542257070541382
    2. 'a' → logprob: -2.2792258262634277
    3. 'cost' → logprob: -2.2792258262634277
    4. 'custom' → logprob: -2.4042258262634277
    5. 'over' → logprob: -2.9042258262634277
    6. 'the' → logprob: -3.0292258262634277
    7. 'some' → logprob: -3.0292258262634277
    8. 'additional' → logprob: -3.2792258262634277
    9. 'turn' → logprob: -3.4042258262634277
    10. 'override' → logprob: -3.7792258262634277

Token 472: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8066946268081665
    2. '
' → logprob: -1.0566946268081665
    3. 'dist' → logprob: -2.181694507598877
    4. '   ' → logprob: -3.181694507598877
    5. 'import' → logprob: -3.431694507598877
    6. 'distance' → logprob: -4.556694507598877
    7. '        
' → logprob: -5.806694507598877
    8. 'dp' → logprob: -6.556694507598877
    9. 'visited' → logprob: -6.931694507598877
    10. '#' → logprob: -7.056694507598877

Token 473: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14435631036758423
    2. '       ' → logprob: -2.5193562507629395
    3. 'import' → logprob: -3.7693562507629395
    4. '
' → logprob: -4.6443562507629395
    5. '   ' → logprob: -4.8943562507629395
    6. 'dp' → logprob: -5.0193562507629395
    7. '#' → logprob: -6.2693562507629395
    8. 'distance' → logprob: -6.3943562507629395
    9. ' dist' → logprob: -6.6443562507629395
    10. 'INF' → logprob: -7.5193562507629395

Token 474: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20242060720920563
    2. '   ' → logprob: -2.702420711517334
    3. 'import' → logprob: -3.202420711517334
    4. 'INF' → logprob: -3.452420711517334
    5. '       ' → logprob: -4.077420711517334
    6. 'dp' → logprob: -4.327420711517334
    7. '
' → logprob: -5.577420711517334
    8. '#' (adapté à ' #') → logprob: -5.827420711517334
    9. 'distance' → logprob: -6.452420711517334
    10. ' dist' → logprob: -6.577420711517334

Token 475: ' No' (ID: 3004)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12802515923976898
    2. 'INF' → logprob: -2.3780250549316406
    3. 'dp' → logprob: -4.378025054931641
    4. 'import' → logprob: -4.753025054931641
    5. '   ' → logprob: -6.003025054931641
    6. '       ' → logprob: -6.503025054931641
    7. '#' → logprob: -7.253025054931641
    8. 'inf' → logprob: -7.878025054931641
    9. 'visited' → logprob: -8.00302505493164
    10. 'from' → logprob: -8.25302505493164

Token 476: ' explicit' (ID: 23141)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1757449358701706
    2. '       ' → logprob: -2.4257450103759766
    3. '#' → logprob: -3.8007450103759766
    4. '
' → logprob: -4.675745010375977
    5. ' import' → logprob: -4.800745010375977
    6. 'visited' → logprob: -5.175745010375977
    7. 'rows' → logprob: -5.925745010375977
    8. '   ' → logprob: -6.050745010375977
    9. 'def' → logprob: -6.300745010375977
    10. '        
' → logprob: -6.300745010375977

Token 477: ' Halt' (ID: 120259)
  Prédit: 'commands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'commands' → logprob: -0.8801572918891907
    2. 'state' → logprob: -2.630157232284546
    3. 'command' → logprob: -2.630157232284546
    4. ' commands' → logprob: -3.005157232284546
    5. 'override' → logprob: -3.255157232284546
    6. '
' → logprob: -3.380157232284546
    7. ' command' → logprob: -3.380157232284546
    8. 'movement' → logprob: -3.380157232284546
    9. '#' → logprob: -3.880157232284546
    10. '       ' → logprob: -4.005157470703125

Token 478: ' command' (ID: 6348)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.707808256149292
    2. '
' → logprob: -0.832808256149292
    3. '        
' → logprob: -3.707808256149292
    4. 'dist' → logprob: -4.957808494567871
    5. '   ' → logprob: -5.082808494567871
    6. '.' → logprob: -5.332808494567871
    7. 'distance' → logprob: -5.332808494567871
    8. '

' → logprob: -5.457808494567871
    9. ',' → logprob: -5.457808494567871
    10. '#' → logprob: -5.957808494567871

Token 479: ' allowed' (ID: 9279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30948367714881897
    2. '       ' → logprob: -1.9344836473464966
    3. 'distance' → logprob: -2.934483766555786
    4. 'dist' → logprob: -3.059483766555786
    5. 'import' → logprob: -4.934483528137207
    6. '        
' → logprob: -5.684483528137207
    7. ',' → logprob: -6.434483528137207
    8. '

' → logprob: -6.434483528137207
    9. '#' → logprob: -6.684483528137207
    10. '   ' → logprob: -6.809483528137207

Token 480: '.

' (ID: 364)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5366480946540833
    2. '       ' → logprob: -1.4116480350494385
    3. '
' → logprob: -2.4116480350494385
    4. 'distance' → logprob: -3.2866480350494385
    5. 'import' → logprob: -3.5366480350494385
    6. '        
' → logprob: -5.286648273468018
    7. '   ' → logprob: -6.161648273468018
    8. '#' → logprob: -6.286648273468018
    9. 'visited' → logprob: -6.286648273468018
    10. 'dp' → logprob: -6.786648273468018

Token 481: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.054262351244688034
    2. 'INF' → logprob: -3.929262399673462
    3. 'import' → logprob: -4.429262161254883
    4. '#' → logprob: -4.429262161254883
    5. 'dp' → logprob: -5.804262161254883
    6. '       ' → logprob: -6.554262161254883
    7. 'distance' → logprob: -6.554262161254883
    8. 'visited' → logprob: -7.054262161254883
    9. 'max' → logprob: -7.554262161254883
    10. 'heap' → logprob: -7.804262161254883

Token 482: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23663441836833954
    2. 'INF' → logprob: -1.986634373664856
    3. 'import' → logprob: -3.3616344928741455
    4. 'dp' → logprob: -4.111634254455566
    5. '#' (adapté à ' #') → logprob: -4.486634254455566
    6. '       ' → logprob: -5.736634254455566
    7. '   ' → logprob: -6.361634254455566
    8. 'from' → logprob: -6.486634254455566
    9. 'visited' → logprob: -6.736634254455566
    10. 'inf' → logprob: -6.986634254455566

Token 483: ' We' (ID: 1416)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2437073141336441
    2. 'INF' → logprob: -1.868707299232483
    3. '#' → logprob: -3.4937074184417725
    4. 'dp' → logprob: -3.9937074184417725
    5. 'import' → logprob: -4.868707180023193
    6. '       ' → logprob: -6.618707180023193
    7. 'distance' → logprob: -7.368707180023193
    8. 'from' → logprob: -7.368707180023193
    9. 'visited' → logprob: -7.493707180023193
    10. 'start' → logprob: -7.743707180023193

Token 484: ' model' (ID: 2359)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6309060454368591
    2. 'dist' → logprob: -1.880906105041504
    3. '       ' → logprob: -2.630906105041504
    4. 'def' → logprob: -2.755906105041504
    5. 'visited' → logprob: -3.005906105041504
    6. ' need' → logprob: -3.505906105041504
    7. 'need' → logprob: -3.755906105041504
    8. '#' → logprob: -4.505906105041504
    9. ' will' → logprob: -4.505906105041504
    10. '   ' → logprob: -4.755906105041504

Token 485: ' the' (ID: 290)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.2912057042121887
    2. 'states' → logprob: -2.166205644607544
    3. ' the' → logprob: -2.541205644607544
    4. 'dist' → logprob: -3.541205644607544
    5. ' distances' → logprob: -4.791205883026123
    6. 'the' → logprob: -5.041205883026123
    7. ' a' → logprob: -5.666205883026123
    8. ' dist' → logprob: -5.916205883026123
    9. 'state' → logprob: -6.166205883026123
    10. 'd' → logprob: -6.416205883026123

Token 486: ' state' (ID: 2608)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.563602089881897
    2. 'state' → logprob: -1.188602089881897
    3. 'states' → logprob: -2.1886019706726074
    4. ' problem' → logprob: -5.063601970672607
    5. 'search' → logprob: -5.438601970672607
    6. ' states' → logprob: -6.438601970672607
    7. 'remaining' → logprob: -7.688601970672607
    8. ' state' → logprob: -7.688601970672607
    9. 'rest' → logprob: -8.438602447509766
    10. 'visited' → logprob: -8.813602447509766

Token 487: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.38606172800064087
    2. ' =' → logprob: -1.386061668395996
    3. ':' → logprob: -3.636061668395996
    4. '=' → logprob: -4.636061668395996
    5. ' space' → logprob: -4.636061668395996
    6. ' (' → logprob: -5.636061668395996
    7. 'as' → logprob: -5.761061668395996
    8. 'space' → logprob: -5.761061668395996
    9. '#' → logprob: -5.886061668395996
    10. '   ' → logprob: -6.011061668395996

Token 488: ' (' (ID: 350)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.5421324968338013
    2. '(r' → logprob: -1.6671324968338013
    3. ' (' → logprob: -1.9171324968338013
    4. '(h' → logprob: -2.7921323776245117
    5. '(position' → logprob: -4.542132377624512
    6. 'position' → logprob: -5.792132377624512
    7. ' a' → logprob: -6.167132377624512
    8. 'row' → logprob: -6.667132377624512
    9. '(x' → logprob: -6.667132377624512
    10. '(rows' → logprob: -7.542132377624512

Token 489: 'row' (ID: 843)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40028080344200134
    2. 'row' → logprob: -1.6502808332443237
    3. 'h' → logprob: -2.525280714035034
    4. 'cost' → logprob: -3.275280714035034
    5. ' r' → logprob: -4.525280952453613
    6. ' row' → logprob: -5.525280952453613
    7. ' cost' → logprob: -6.150280952453613
    8. ' h' → logprob: -6.775280952453613
    9. '   ' → logprob: -7.400280952453613
    10. 'x' → logprob: -7.650280952453613

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004770445637404919
    2. ',row' → logprob: -5.629770278930664
    3. '<|end|>' → logprob: -7.254770278930664
    4. ')' → logprob: -9.504770278930664
    5. ' ,' → logprob: -9.629770278930664
    6. ',
' → logprob: -10.004770278930664
    7. ',column' → logprob: -10.504770278930664
    8. '<|end|>' → logprob: -10.504770278930664
    9. '[row' → logprob: -10.629770278930664
    10. ',state' → logprob: -10.754770278930664

Token 491: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.16220977902412415
    2. ' col' → logprob: -1.9122097492218018
    3. 'column' → logprob: -6.412209987640381
    4. ' column' → logprob: -8.037209510803223
    5. ',' → logprob: -11.787209510803223
    6. ')' → logprob: -12.787209510803223
    7. ',col' → logprob: -12.912209510803223
    8. '	col' → logprob: -13.287209510803223
    9. '   ' → logprob: -13.537209510803223
    10. '
' → logprob: -14.662209510803223

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.811348480870947e-05
    2. ' ,' → logprob: -10.62504768371582
    3. ')' → logprob: -11.50004768371582
    4. ',row' → logprob: -12.37504768371582
    5. ',
' → logprob: -12.50004768371582
    6. '),' → logprob: -13.50004768371582
    7. '   ' → logprob: -13.62504768371582
    8. ',state' → logprob: -13.75004768371582
    9. ',d' → logprob: -14.50004768371582
    10. '_,' → logprob: -15.37504768371582

Token 493: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.2466840296983719
    2. 'dir' → logprob: -2.1216840744018555
    3. ' direction' → logprob: -2.3716840744018555
    4. ' dir' → logprob: -5.2466840744018555
    5. 'd' → logprob: -8.871684074401855
    6. 'dire' → logprob: -10.996684074401855
    7. ' ' → logprob: -11.621684074401855
    8. '   ' → logprob: -11.996684074401855
    9. 'orientation' → logprob: -12.246684074401855
    10. ' d' → logprob: -12.746684074401855

Token 494: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016372637823224068
    2. ',' → logprob: -4.1413726806640625
    3. ')
' → logprob: -8.141372680664062
    4. '),' → logprob: -10.766372680664062
    5. ' )' → logprob: -11.516372680664062
    6. '   ' → logprob: -12.516372680664062
    7. ')
' → logprob: -13.766372680664062
    8. ' ,' → logprob: -13.766372680664062
    9. '       ' → logprob: -13.891372680664062
    10. '):
' → logprob: -13.891372680664062

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06333471834659576
    2. 'dist' → logprob: -3.3133347034454346
    3. 'import' → logprob: -4.313334941864014
    4. '
' → logprob: -5.313334941864014
    5. 'distance' → logprob: -5.688334941864014
    6. '   ' → logprob: -6.938334941864014
    7. 'dp' → logprob: -7.063334941864014
    8. '        
' → logprob: -7.938334941864014
    9. 'visited' → logprob: -8.188334465026855
    10. ',' → logprob: -8.188334465026855

Token 496: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7043436765670776
    2. 'import' → logprob: -0.9543436765670776
    3. '       ' → logprob: -2.454343795776367
    4. '   ' → logprob: -3.954343795776367
    5. 'dp' → logprob: -5.329343795776367
    6. 'distance' → logprob: -5.454343795776367
    7. 'from' → logprob: -6.204343795776367
    8. 'INF' → logprob: -6.329343795776367
    9. ' dist' → logprob: -7.204343795776367
    10. '
' → logprob: -7.829343795776367

Token 497: ' We' (ID: 1416)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05605054274201393
    2. 'import' → logprob: -3.5560505390167236
    3. '       ' → logprob: -4.181050777435303
    4. 'dp' → logprob: -5.056050777435303
    5. 'INF' → logprob: -6.056050777435303
    6. 'distance' → logprob: -6.806050777435303
    7. 'from' → logprob: -8.056050300598145
    8. '   ' → logprob: -8.431050300598145
    9. 'inf' → logprob: -10.056050300598145
    10. 'max' → logprob: -10.181050300598145

Token 498: ' use' (ID: 1199)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3985162675380707
    2. 'dist' → logprob: -2.1485161781311035
    3. 'visited' → logprob: -3.0235161781311035
    4. ')' → logprob: -3.5235161781311035
    5. ''ll' → logprob: -3.7735161781311035
    6. ' will' → logprob: -3.8985161781311035
    7. '   ' → logprob: -4.5235161781311035
    8. 'heap' → logprob: -4.7735161781311035
    9. 'distance' → logprob: -4.8985161781311035
    10. ' use' → logprob: -5.1485161781311035

Token 499: ' D' (ID: 415)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.10142312198877335
    2. 'a' → logprob: -2.6014230251312256
    3. 'import' → logprob: -4.726423263549805
    4. ' a' → logprob: -4.851423263549805
    5. ' heap' → logprob: -5.601423263549805
    6. 'd' → logprob: -6.476423263549805
    7. 'dist' → logprob: -9.226423263549805
    8. 'def' → logprob: -9.726423263549805
    9. '```' → logprob: -9.726423263549805
    10. '   ' → logprob: -10.601423263549805

Token 500: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.3605852425098419
    2. 'ist' → logprob: -1.3605852127075195
    3. 'istance' → logprob: -4.2355852127075195
    4. 'ijk' → logprob: -4.3605852127075195
    5. 'p' → logprob: -4.9855852127075195
    6. '[i' → logprob: -6.2355852127075195
    7. '```' → logprob: -6.2355852127075195
    8. 'ists' → logprob: -6.4855852127075195
    9. 'i' → logprob: -6.6105852127075195
    10. 'P' → logprob: -6.6105852127075195

Token 501: ''s' (ID: 885)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.9672598838806152
    2. '   ' → logprob: -2.0922598838806152
    3. 'import' → logprob: -2.5922598838806152
    4. ')' → logprob: -2.5922598838806152
    5. '(
' → logprob: -2.7172598838806152
    6. ':' → logprob: -2.7172598838806152
    7. '       ' → logprob: -2.9672598838806152
    8. 'q' → logprob: -2.9672598838806152
    9. '(' → logprob: -2.9672598838806152
    10. '(queue' → logprob: -3.0922598838806152

Token 502: ' algorithm' (ID: 22184)
  Prédit: ' algorithm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' algorithm' → logprob: -0.4304826557636261
    2. 'algorithm' → logprob: -1.0554826259613037
    3. '```' → logprob: -7.555482864379883
    4. '_algorithm' → logprob: -7.680482864379883
    5. '(' → logprob: -8.930482864379883
    6. '(heap' → logprob: -8.930482864379883
    7. 'import' → logprob: -9.305482864379883
    8. ' (' → logprob: -9.555482864379883
    9. '(queue' → logprob: -9.555482864379883
    10. ' for' → logprob: -9.930482864379883

Token 503: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26703667640686035
    2. '   ' → logprob: -1.8920366764068604
    3. '
' → logprob: -3.0170366764068604
    4. 'dist' → logprob: -4.267036437988281
    5. ',' → logprob: -4.892036437988281
    6. '        
' → logprob: -5.642036437988281
    7. 'distance' → logprob: -6.267036437988281
    8. 'import' → logprob: -6.392036437988281
    9. ':' → logprob: -6.767036437988281
    10. ' to' → logprob: -7.017036437988281

Token 504: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.6619715094566345
    2. ' find' → logprob: -1.0369715690612793
    3. 'dist' → logprob: -2.6619715690612793
    4. 'import' → logprob: -3.5369715690612793
    5. '   ' → logprob: -4.786971569061279
    6. 'solve' → logprob: -4.911971569061279
    7. 'continue' → logprob: -5.411971569061279
    8. '
' → logprob: -6.411971569061279
    9. 'search' → logprob: -6.536971569061279
    10. '       ' → logprob: -6.661971569061279

Token 505: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2737601399421692
    2. ' the' → logprob: -1.5237600803375244
    3. 'minimum' → logprob: -5.1487603187561035
    4. 'minimal' → logprob: -5.5237603187561035
    5. 'import' → logprob: -5.6487603187561035
    6. ' shortest' → logprob: -6.5237603187561035
    7. 'dist' → logprob: -6.6487603187561035
    8. ' minimal' → logprob: -6.8987603187561035
    9. 'min' → logprob: -7.1487603187561035
    10. 'distance' → logprob: -7.3987603187561035

Token 506: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8950899839401245
    2. '_cost' → logprob: -1.5200899839401245
    3. ' cost' → logprob: -1.8950899839401245
    4. 'dist' → logprob: -2.145090103149414
    5. '_' → logprob: -3.020090103149414
    6. 'distance' → logprob: -4.270090103149414
    7. '_dist' → logprob: -4.395090103149414
    8. ')' → logprob: -4.520090103149414
    9. '_distance' → logprob: -5.270090103149414
    10. '   ' → logprob: -5.645090103149414

Token 507: ' path' (ID: 3104)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22719131410121918
    2. '   ' → logprob: -1.9771913290023804
    3. '       ' → logprob: -3.227191209793091
    4. ' dist' → logprob: -4.60219144821167
    5. ' distances' → logprob: -4.97719144821167
    6. 'import' → logprob: -5.85219144821167
    7. 'distance' → logprob: -6.10219144821167
    8. '(dist' → logprob: -6.97719144821167
    9. '_dist' → logprob: -7.10219144821167
    10. ':' → logprob: -8.227190971374512

Token 508: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25009995698928833
    2. '   ' → logprob: -2.3750998973846436
    3. 'dist' → logprob: -2.6250998973846436
    4. '
' → logprob: -3.0000998973846436
    5. '        
' → logprob: -6.250100135803223
    6. 'distance' → logprob: -6.625100135803223
    7. 'import' → logprob: -6.875100135803223
    8. '```' → logprob: -7.625100135803223
    9. '    
' → logprob: -8.125100135803223
    10. ',' → logprob: -8.625100135803223

Token 509: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03597031906247139
    2. '   ' → logprob: -3.7859702110290527
    3. 'import' → logprob: -5.160970211029053
    4. '       ' → logprob: -5.410970211029053
    5. 'distance' → logprob: -6.285970211029053
    6. ' dist' → logprob: -8.535970687866211
    7. 'dp' → logprob: -8.660970687866211
    8. '
' → logprob: -9.785970687866211
    9. 'INF' → logprob: -10.160970687866211
    10. 'from' → logprob: -10.660970687866211

Token 510: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013277288526296616
    2. 'import' → logprob: -4.888277053833008
    3. '   ' → logprob: -6.263277053833008
    4. '       ' → logprob: -6.513277053833008
    5. 'INF' → logprob: -6.763277053833008
    6. 'distance' → logprob: -7.763277053833008
    7. 'dp' → logprob: -8.013277053833008
    8. ' dist' → logprob: -8.888277053833008
    9. 'from' → logprob: -10.138277053833008
    10. 'DIST' → logprob: -10.513277053833008

Token 511: ' Priority' (ID: 54625)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0023940829560160637
    2. 'import' → logprob: -7.127394199371338
    3. '       ' → logprob: -7.752394199371338
    4. 'INF' → logprob: -7.752394199371338
    5. 'distance' → logprob: -8.37739372253418
    6. 'dp' → logprob: -8.50239372253418
    7. '   ' → logprob: -9.37739372253418
    8. ' dist' → logprob: -9.50239372253418
    9. '#' → logprob: -10.12739372253418
    10. '
' → logprob: -10.25239372253418

Token 512: ' queue' (ID: 13661)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.4700485169887543
    2. 'queue' → logprob: -1.3450485467910767
    3. 'q' → logprob: -3.220048427581787
    4. ' queue' → logprob: -3.345048427581787
    5. ' =' → logprob: -3.720048427581787
    6. '=' → logprob: -5.220048427581787
    7. '_' → logprob: -5.595048427581787
    8. ' ' → logprob: -5.720048427581787
    9. ',' → logprob: -7.470048427581787
    10. 'que' → logprob: -7.470048427581787

Token 513: ' elements' (ID: 8632)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044948432594537735
    2. '=' → logprob: -3.1699483394622803
    3. 'pq' → logprob: -7.044948577880859
    4. 'q' → logprob: -7.544948577880859
    5. 'heap' → logprob: -8.29494857788086
    6. '=[]' → logprob: -9.54494857788086
    7. ',' → logprob: -10.04494857788086
    8. 'queue' → logprob: -10.29494857788086
    9. ' queue' → logprob: -10.29494857788086
    10. ' pq' → logprob: -10.29494857788086

Token 514: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2403707355260849
    2. '=' → logprob: -1.615370750427246
    3. '=[]' → logprob: -4.240370750427246
    4. 'q' → logprob: -9.365370750427246
    5. '=[]
' → logprob: -9.490370750427246
    6. 'heap' → logprob: -9.615370750427246
    7. ',' → logprob: -9.615370750427246
    8. '   ' → logprob: -10.740370750427246
    9. 'pq' → logprob: -10.865370750427246
    10. '=[' → logprob: -10.990370750427246

Token 515: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05420871451497078
    2. '(heap' → logprob: -3.929208755493164
    3. ' []' → logprob: -4.554208755493164
    4. '[]' → logprob: -4.554208755493164
    5. '(w' → logprob: -5.179208755493164
    6. '   ' → logprob: -6.304208755493164
    7. '(r' → logprob: -6.554208755493164
    8. '(' → logprob: -7.429208755493164
    9. '(cost' → logprob: -7.804208755493164
    10. '([]' → logprob: -8.054208755493164

Token 516: 'total' (ID: 9577)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0021923754829913378
    2. ' cost' → logprob: -6.377192497253418
    3. 'total' → logprob: -8.377192497253418
    4. 'current' → logprob: -8.877192497253418
    5. 'curr' → logprob: -10.002192497253418
    6. 'dist' → logprob: -10.377192497253418
    7. 'cur' → logprob: -11.502192497253418
    8. 'acc' → logprob: -12.002192497253418
    9. ' total' → logprob: -12.252192497253418
    10. '0' → logprob: -12.252192497253418

Token 517: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00048715711454860866
    2. ',' → logprob: -8.250487327575684
    3. 'cost' → logprob: -8.625487327575684
    4. '_' → logprob: -11.125487327575684
    5. ')' → logprob: -11.250487327575684
    6. ' cost' → logprob: -11.875487327575684
    7. '_,' → logprob: -12.250487327575684
    8. ' ,' → logprob: -13.125487327575684
    9. '   ' → logprob: -13.625487327575684
    10. 'Cost' → logprob: -14.625487327575684

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.27099974633893e-05
    2. ' ,' → logprob: -11.875012397766113
    3. ',
' → logprob: -12.500012397766113
    4. ',row' → logprob: -14.250012397766113
    5. '   ' → logprob: -15.375012397766113
    6. ',current' → logprob: -15.750012397766113
    7. ',n' → logprob: -15.875012397766113
    8. ')' → logprob: -16.00001335144043
    9. ',next' → logprob: -16.25001335144043
    10. ',user' → logprob: -16.75001335144043

Token 519: ' r' (ID: 428)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5397248864173889
    2. ' row' → logprob: -1.1647248268127441
    3. 'r' → logprob: -2.414724826812744
    4. ' r' → logprob: -4.164724826812744
    5. '   ' → logprob: -9.539725303649902
    6. ')' → logprob: -10.664725303649902
    7. 'h' → logprob: -11.539725303649902
    8. ' ' → logprob: -11.789725303649902
    9. 'rows' → logprob: -12.289725303649902
    10. ' (' → logprob: -12.539725303649902

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ' ,' → logprob: -10.87502384185791
    3. ',
' → logprob: -13.12502384185791
    4. ',c' → logprob: -13.25002384185791
    5. ')' → logprob: -15.37502384185791
    6. '   ' → logprob: -15.87502384185791
    7. ',row' → logprob: -16.125022888183594
    8. '  ' → logprob: -16.500022888183594
    9. ',col' → logprob: -16.625022888183594
    10. ' ' → logprob: -17.000022888183594

Token 521: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004084808751940727
    2. ' c' → logprob: -5.504084587097168
    3. '   ' → logprob: -12.629084587097168
    4. '	c' → logprob: -14.254084587097168
    5. '       ' → logprob: -14.254084587097168
    6. ',' → logprob: -14.879084587097168
    7. '
' → logprob: -15.254084587097168
    8. ')c' → logprob: -15.379084587097168
    9. '    ' → logprob: -15.504084587097168
    10. '           ' → logprob: -16.004085540771484

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6047699318733066e-05
    2. ' ,' → logprob: -11.875016212463379
    3. ',
' → logprob: -12.000016212463379
    4. ')' → logprob: -13.250016212463379
    5. ',d' → logprob: -14.000016212463379
    6. '   ' → logprob: -16.875015258789062
    7. '  ' → logprob: -17.875015258789062
    8. '_,' → logprob: -17.875015258789062
    9. '),' → logprob: -18.000015258789062
    10. 'direction' → logprob: -18.125015258789062

Token 523: ' direction' (ID: 9262)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07489274442195892
    2. 'dir' → logprob: -2.69989275932312
    3. 'direction' → logprob: -5.449892520904541
    4. ' d' → logprob: -7.699892520904541
    5. ' dir' → logprob: -8.6998929977417
    6. ' direction' → logprob: -11.0748929977417
    7. '   ' → logprob: -12.6998929977417
    8. 'dire' → logprob: -12.9498929977417
    9. 'ndir' → logprob: -13.8248929977417
    10. '	d' → logprob: -14.0748929977417

Token 524: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003047186473850161
    2. ')
' → logprob: -8.12530517578125
    3. ' )' → logprob: -12.37530517578125
    4. ')
' → logprob: -13.12530517578125
    5. '   ' → logprob: -13.87530517578125
    6. ')`' → logprob: -14.62530517578125
    7. ',' → logprob: -15.37530517578125
    8. ')

' → logprob: -15.62530517578125
    9. '))' → logprob: -16.00030517578125
    10. '),' → logprob: -16.25030517578125

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2010602504014969
    2. 'pq' → logprob: -2.2010602951049805
    3. 'queue' → logprob: -3.5760602951049805
    4. 'heap' → logprob: -4.4510602951049805
    5. 'dist' → logprob: -4.5760602951049805
    6. 'import' → logprob: -4.5760602951049805
    7. '   ' → logprob: -5.5760602951049805
    8. '
' → logprob: -6.2010602951049805
    9. 'q' → logprob: -6.3260602951049805
    10. 'visited' → logprob: -7.0760602951049805

Token 526: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' (adapté à ' pq') → logprob: -0.01972697302699089
    2. 'heap' → logprob: -5.019726753234863
    3. 'queue' → logprob: -5.269726753234863
    4. 'import' → logprob: -5.269726753234863
    5. '       ' → logprob: -6.519726753234863
    6. ' pq' → logprob: -7.519726753234863
    7. 'q' → logprob: -8.144726753234863
    8. '   ' → logprob: -8.269726753234863
    9. 'dist' → logprob: -10.519726753234863
    10. 'hq' → logprob: -10.519726753234863

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10032723098993301
    2. '=' → logprob: -2.350327253341675
    3. '=[]' → logprob: -9.725327491760254
    4. ',' → logprob: -10.225327491760254
    5. ')' → logprob: -10.975327491760254
    6. '.' → logprob: -13.475327491760254
    7. '=[]
' → logprob: -13.725327491760254
    8. ' ' → logprob: -13.850327491760254
    9. ' =
' → logprob: -14.600327491760254
    10. 'import' → logprob: -14.600327491760254

Token 528: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.04418319836258888
    2. ' [(' → logprob: -3.5441832542419434
    3. '[]' → logprob: -4.294183254241943
    4. ' []' → logprob: -7.294183254241943
    5. '[]
' → logprob: -13.919182777404785
    6. '[' → logprob: -14.294182777404785
    7. '[],' → logprob: -16.2941837310791
    8. ' [' → logprob: -16.5441837310791
    9. ' []
' → logprob: -16.9191837310791
    10. '[]

' → logprob: -17.2941837310791

Token 529: '       ' (ID: 309)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.36003559827804565
    2. '       ' → logprob: -1.6100356578826904
    3. ' heap' → logprob: -2.3600356578826904
    4. 'import' → logprob: -5.360035419464111
    5. '(heap' → logprob: -6.235035419464111
    6. ',' → logprob: -7.485035419464111
    7. 'he' → logprob: -8.23503589630127
    8. ')' → logprob: -8.61003589630127
    9. '.heap' → logprob: -9.23503589630127
    10. '```' → logprob: -9.86003589630127

Token 530: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.030169976875185966
    2. ' heap' → logprob: -3.65516996383667
    3. 'import' → logprob: -5.65516996383667
    4. 'visited' → logprob: -8.405170440673828
    5. '       ' → logprob: -9.655170440673828
    6. 'dist' → logprob: -10.030170440673828
    7. 'distance' → logprob: -11.155170440673828
    8. 'cost' → logprob: -12.780170440673828
    9. '   ' → logprob: -13.155170440673828
    10. 'state' → logprob: -13.280170440673828

Token 531: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.339278580620885e-06
    2. '.he' → logprob: -13.250001907348633
    3. '.push' → logprob: -15.625001907348633
    4. '.heap' → logprob: -16.625001907348633
    5. '.' → logprob: -16.875001907348633
    6. 'push' → logprob: -17.000001907348633
    7. 'p' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.500001907348633
    9. '```' → logprob: -17.625001907348633
    10. 'he' → logprob: -17.875001907348633

Token 532: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00013321757433004677
    2. '.' → logprob: -9.375133514404297
    3. '.heap' → logprob: -10.000133514404297
    4. '.push' → logprob: -13.500133514404297
    5. ' .' → logprob: -14.750133514404297
    6. ').' → logprob: -14.750133514404297
    7. 'he' → logprob: -15.000133514404297
    8. ' he' → logprob: -15.875133514404297
    9. '.He' → logprob: -16.625133514404297
    10. '.h' → logprob: -16.750133514404297

Token 533: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0007361313910223544
    2. 'pp' → logprob: -7.250736236572266
    3. 'push' → logprob: -10.750736236572266
    4. 'q' → logprob: -12.750736236572266
    5. 'ap' → logprob: -14.000736236572266
    6. 'p' → logprob: -14.500736236572266
    7. '```' → logprob: -15.875736236572266
    8. 'appen' → logprob: -16.125736236572266
    9. '[' → logprob: -16.375736236572266
    10. 'qp' → logprob: -16.875736236572266

Token 534: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.9888433093437925e-05
    2. 'push' → logprob: -10.375040054321289
    3. 'q' → logprob: -12.375040054321289
    4. 'op' → logprob: -13.625040054321289
    5. 'u' → logprob: -13.750040054321289
    6. 'ut' → logprob: -14.000040054321289
    7. 'uf' → logprob: -14.500040054321289
    8. 'p' → logprob: -15.125040054321289
    9. 'le' → logprob: -15.750040054321289
    10. 'ort' → logprob: -16.75004005432129

Token 535: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.37500286102295
    3. '(' → logprob: -14.62500286102295
    4. '   ' → logprob: -14.62500286102295
    5. '(q' → logprob: -17.000001907348633
    6. '(
' → logprob: -17.250001907348633
    7. '       ' → logprob: -18.625001907348633
    8. ',' → logprob: -19.000001907348633
    9. '((' → logprob: -19.000001907348633
    10. '```' → logprob: -19.500001907348633

Token 536: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.91732100979425e-05
    2. '(p' → logprob: -10.625039100646973
    3. 'pq' → logprob: -11.625039100646973
    4. 'Q' → logprob: -13.000039100646973
    5. '(q' → logprob: -13.250039100646973
    6. ' pq' → logprob: -14.000039100646973
    7. ',q' → logprob: -15.500039100646973
    8. '?q' → logprob: -15.750039100646973
    9. 'p' → logprob: -16.00004005432129
    10. ' q' → logprob: -16.25004005432129

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04578561335802078
    2. '(p' → logprob: -3.545785665512085
    3. '(' → logprob: -4.670785427093506
    4. ',(' → logprob: -5.295785427093506
    5. '((' → logprob: -7.170785427093506
    6. ' ,' → logprob: -8.170785903930664
    7. ' (' → logprob: -8.420785903930664
    8. ',p' → logprob: -8.920785903930664
    9. '   ' → logprob: -9.920785903930664
    10. '       ' → logprob: -10.670785903930664

Token 538: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019030878320336342
    2. '0' → logprob: -8.750190734863281
    3. ' (' → logprob: -10.375190734863281
    4. '   ' → logprob: -14.875190734863281
    5. ')' → logprob: -15.625190734863281
    6. ' ' → logprob: -16.12519073486328
    7. '[' → logprob: -17.75019073486328
    8. '
' → logprob: -18.87519073486328
    9. '(
' → logprob: -19.37519073486328
    10. '       ' → logprob: -19.62519073486328

Token 539: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.625
    4. '(' → logprob: -18.125
    5. ')' → logprob: -19.25
    6. '-' → logprob: -20.0
    7. '۰' → logprob: -20.0
    8. '[' → logprob: -20.125
    9. '000' → logprob: -20.75
    10. '1' → logprob: -21.0625

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',
' → logprob: -14.625004768371582
    4. '0' → logprob: -14.750004768371582
    5. '```' → logprob: -17.375003814697266
    6. '
' → logprob: -17.625003814697266
    7. '‌,' → logprob: -17.625003814697266
    8. '   ' → logprob: -17.875003814697266
    9. '<|end|>' → logprob: -18.000003814697266
    10. ')' → logprob: -18.125003814697266

Token 541: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005535095697268844
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.750553131103516
    4. ')' → logprob: -17.625553131103516
    5. '(' → logprob: -17.625553131103516
    6. '    ' → logprob: -17.875553131103516
    7. ',' → logprob: -18.125553131103516
    8. '       ' → logprob: -18.125553131103516
    9. '  ' → logprob: -18.625553131103516
    10. '۰' → logprob: -18.750553131103516

Token 542: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.00000762939453
    4. ')' → logprob: -18.62500762939453
    5. '00' → logprob: -19.50000762939453
    6. '  ' → logprob: -20.00000762939453
    7. '۰' → logprob: -20.12500762939453
    8. '    ' → logprob: -20.43750762939453
    9. '=' → logprob: -20.56250762939453
    10. '(' → logprob: -20.62500762939453

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.815280696377158e-05
    2. ' ,' → logprob: -9.500078201293945
    3. '0' → logprob: -13.375078201293945
    4. ',
' → logprob: -13.875078201293945
    5. ')' → logprob: -15.000078201293945
    6. '   ' → logprob: -15.875078201293945
    7. '<|end|>' → logprob: -16.000078201293945
    8. ' ' → logprob: -16.375078201293945
    9. '```' → logprob: -16.625078201293945
    10. '
' → logprob: -17.125078201293945

Token 544: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. ')' → logprob: -17.250158309936523
    4. '<|end|>' → logprob: -17.250158309936523
    5. ',' → logprob: -17.375158309936523
    6. '   ' → logprob: -17.500158309936523
    7. '  ' → logprob: -17.875158309936523
    8. '    ' → logprob: -18.750158309936523
    9. '     ' → logprob: -19.250158309936523
    10. '```' → logprob: -19.687658309936523

Token 545: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. ',' → logprob: -17.500015258789062
    4. ')' → logprob: -17.875015258789062
    5. '   ' → logprob: -17.875015258789062
    6. '  ' → logprob: -18.812515258789062
    7. '۰' → logprob: -19.687515258789062
    8. '     ' → logprob: -20.125015258789062
    9. '    ' → logprob: -20.125015258789062
    10. '```' → logprob: -20.250015258789062

Token 546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001713590754661709
    2. '0' → logprob: -8.875171661376953
    3. ' ,' → logprob: -10.375171661376953
    4. ')' → logprob: -16.750171661376953
    5. ',
' → logprob: -16.875171661376953
    6. '```' → logprob: -17.750171661376953
    7. '   ' → logprob: -17.875171661376953
    8. '3' → logprob: -18.000171661376953
    9. '4' → logprob: -18.500171661376953
    10. '1' → logprob: -18.625171661376953

Token 547: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -17.8750057220459
    4. '۰' → logprob: -17.8750057220459
    5. '   ' → logprob: -18.2500057220459
    6. '))' → logprob: -20.3125057220459
    7. '(' → logprob: -20.5000057220459
    8. '    ' → logprob: -20.6250057220459
    9. '1' → logprob: -20.6250057220459
    10. '[' → logprob: -20.7500057220459

Token 548: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '۰' → logprob: -19.125
    4. ')' → logprob: -21.125
    5. '０' → logprob: -21.875
    6. '০' → logprob: -22.1875
    7. '   ' → logprob: -22.1875
    8. '))' → logprob: -22.3125
    9. 'direction' → logprob: -22.3125
    10. '०' → logprob: -22.6875

Token 549: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010568885772954673
    2. ')' → logprob: -9.250105857849121
    3. '))
' → logprob: -11.625105857849121
    4. ')))' → logprob: -15.500105857849121
    5. '));' → logprob: -15.750105857849121
    6. ' ))' → logprob: -15.875105857849121
    7. '))

' → logprob: -16.625104904174805
    8. '))
' → logprob: -17.625104904174805
    9. ')
' → logprob: -18.000104904174805
    10. '),' → logprob: -18.375104904174805

Token 550: ' ' (ID: 220)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5933390259742737
    2. 'dist' → logprob: -0.8433390259742737
    3. 'distance' → logprob: -4.968338966369629
    4. '
' → logprob: -5.343338966369629
    5. '       ' → logprob: -6.218338966369629
    6. '   ' → logprob: -6.843338966369629
    7. 'cost' → logprob: -7.093338966369629
    8. 'seen' → logprob: -7.843338966369629
    9. 'while' → logprob: -8.093338966369629
    10. ')' → logprob: -8.468338966369629

Token 551: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3230619728565216
    2. 'dist' → logprob: -1.3230619430541992
    3. 'distance' → logprob: -4.948061943054199
    4. '
' → logprob: -6.823061943054199
    5. 'seen' → logprob: -7.573061943054199
    6. 'cost' → logprob: -7.698061943054199
    7. ')' → logprob: -8.3230619430542
    8. 'while' → logprob: -8.4480619430542
    9. ' visited' → logprob: -10.5730619430542
    10. ' distances' → logprob: -11.1980619430542

Token 552: ' start' (ID: 1604)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.11506111919879913
    2. 'while' → logprob: -3.115061044692993
    3. 'dist' → logprob: -3.865061044692993
    4. '#' → logprob: -3.865061044692993
    5. '0' → logprob: -4.740061283111572
    6. 'seen' → logprob: -5.365061283111572
    7. 'distance' → logprob: -5.740061283111572
    8. ')' → logprob: -6.240061283111572
    9. 'cost' → logprob: -6.490061283111572
    10. '
' → logprob: -6.740061283111572

Token 553: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004334460478276014
    2. '<|end|>' → logprob: -5.879334449768066
    3. ')' → logprob: -7.379334449768066
    4. '
' → logprob: -7.754334449768066
    5. 'while' → logprob: -8.629334449768066
    6. ' 
' → logprob: -10.254334449768066
    7. ')
' → logprob: -10.254334449768066
    8. '  
' → logprob: -10.254334449768066
    9. '       ' → logprob: -10.379334449768066
    10. '<|end|>' → logprob: -10.504334449768066

Token 554: ' cost' (ID: 3097)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045838307589292526
    2. ')' → logprob: -3.1708383560180664
    3. '(' → logprob: -6.545838356018066
    4. '<|end|>' → logprob: -6.670838356018066
    5. ' ' → logprob: -9.920838356018066
    6. 'total' → logprob: -11.045838356018066
    7. 'direction' → logprob: -11.545838356018066
    8. ' (' → logprob: -11.670838356018066
    9. 'cost' → logprob: -11.795838356018066
    10. '[' → logprob: -12.045838356018066

Token 555: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24171966314315796
    2. ',' → logprob: -1.9917197227478027
    3. '0' → logprob: -3.2417197227478027
    4. ')' → logprob: -3.4917197227478027
    5. '<|end|>' → logprob: -4.991719722747803
    6. ' =' → logprob: -7.241719722747803
    7. ' ' → logprob: -8.116719245910645
    8. ' ,' → logprob: -8.491719245910645
    9. '(' → logprob: -8.866719245910645
    10. '<|end|>' → logprob: -8.991719245910645

Token 556: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012831227853894234
    2. ',' → logprob: -4.512831211090088
    3. '=' → logprob: -6.387831211090088
    4. ')' → logprob: -10.012831687927246
    5. ' ' → logprob: -10.262831687927246
    6. '(' → logprob: -12.012831687927246
    7. ' ,' → logprob: -12.262831687927246
    8. ',
' → logprob: -12.762831687927246
    9. ' at' → logprob: -13.137831687927246
    10. ' =' → logprob: -13.512831687927246

Token 557: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5503274202346802
    2. ')' → logprob: -1.6753274202346802
    3. '<|end|>' → logprob: -1.8003274202346802
    4. 'while' → logprob: -3.0503273010253906
    5. ',' → logprob: -4.300327301025391
    6. ' while' → logprob: -5.300327301025391
    7. '<|end|>' → logprob: -7.175327301025391
    8. ',
' → logprob: -7.175327301025391
    9. '\n' → logprob: -7.300327301025391
    10. ')
' → logprob: -7.300327301025391

Token 558: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03866387531161308
    2. 'visited' → logprob: -3.288663864135742
    3. 'distance' → logprob: -8.413663864135742
    4. '       ' → logprob: -8.663663864135742
    5. '```' → logprob: -9.413663864135742
    6. 'cost' → logprob: -9.663663864135742
    7. 'dp' → logprob: -10.163663864135742
    8. 'seen' → logprob: -10.913663864135742
    9. ' dist' → logprob: -11.413663864135742
    10. ' visited' → logprob: -12.038663864135742

Token 559: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07387246936559677
    2. 'INF' → logprob: -3.0738725662231445
    3. 'visited' → logprob: -4.0738725662231445
    4. '#' (adapté à ' #') → logprob: -5.0738725662231445
    5. 'import' → logprob: -7.0738725662231445
    6. 'inf' → logprob: -8.698872566223145
    7. 'max' → logprob: -8.698872566223145
    8. 'cost' → logprob: -8.823872566223145
    9. 'dp' → logprob: -9.073872566223145
    10. 'distance' → logprob: -9.198872566223145

Token 560: ' We'll' (ID: 46830)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011227606795728207
    2. 'visited' → logprob: -5.011227607727051
    3. 'INF' → logprob: -5.761227607727051
    4. '#' → logprob: -6.761227607727051
    5. 'distance' → logprob: -9.51122760772705
    6. 'dp' → logprob: -10.13622760772705
    7. 'cost' → logprob: -10.38622760772705
    8. 'DIST' → logprob: -10.88622760772705
    9. 'max' → logprob: -11.63622760772705
    10. 'import' → logprob: -11.76122760772705

Token 561: ' keep' (ID: 3357)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.039118967950344086
    2. 'visited' → logprob: -3.414119005203247
    3. '#' → logprob: -6.164118766784668
    4. 'import' → logprob: -6.289118766784668
    5. 'distance' → logprob: -7.039118766784668
    6. 'cost' → logprob: -8.789118766784668
    7. 'visit' → logprob: -9.539118766784668
    8. 'INF' → logprob: -9.539118766784668
    9. 'seen' → logprob: -9.664118766784668
    10. ' dist' → logprob: -10.039118766784668

Token 562: ' a' (ID: 261)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0012543961638584733
    2. 'visited' → logprob: -7.376254558563232
    3. 'distance' → logprob: -7.501254558563232
    4. 'dp' → logprob: -10.626254081726074
    5. ' dist' → logprob: -10.751254081726074
    6. 'cost' → logprob: -11.626254081726074
    7. 'seen' → logprob: -11.876254081726074
    8. '   ' → logprob: -11.876254081726074
    9. '#' → logprob: -13.626254081726074
    10. ' distances' → logprob: -13.626254081726074

Token 563: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0006534627173095942
    2. 'visited' → logprob: -7.500653266906738
    3. 'cost' → logprob: -10.000653266906738
    4. 'distance' → logprob: -10.000653266906738
    5. ' dist' → logprob: -12.125653266906738
    6. 'dp' → logprob: -13.000653266906738
    7. 'import' → logprob: -14.125653266906738
    8. 'seen' → logprob: -14.500653266906738
    9. 'INF' → logprob: -15.625653266906738
    10. ' visited' → logprob: -15.750653266906738

Token 564: '/c' (ID: 4308)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3210444450378418
    2. '=' → logprob: -1.3210444450378418
    3. 'dist' → logprob: -5.571044445037842
    4. 'array' → logprob: -6.571044445037842
    5. '_dist' → logprob: -7.446044445037842
    6. '   ' → logprob: -7.696044445037842
    7. '=[]' → logprob: -8.071044921875
    8. 'matrix' → logprob: -8.571044921875
    9. 'distance' → logprob: -8.946044921875
    10. '=[' → logprob: -9.321044921875

Token 565: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0013277375837787986
    2. '#' → logprob: -7.5013275146484375
    3. 'dist' → logprob: -7.6263275146484375
    4. 'distance' → logprob: -9.626327514648438
    5. '   ' → logprob: -10.251327514648438
    6. 'st' → logprob: -10.251327514648438
    7. 'cost' → logprob: -10.376327514648438
    8. '[[' → logprob: -10.876327514648438
    9. 'olor' → logprob: -11.001327514648438
    10. '{
' → logprob: -11.126327514648438

Token 566: ' array' (ID: 2644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2329494059085846
    2. '=' → logprob: -2.4829494953155518
    3. 'array' → logprob: -2.6079494953155518
    4. 'dist' → logprob: -3.7329494953155518
    5. 'matrix' → logprob: -4.482949256896973
    6. ' array' → logprob: -5.357949256896973
    7. '_dist' → logprob: -5.607949256896973
    8. ' ' → logprob: -7.107949256896973
    9. ' matrix' → logprob: -7.357949256896973
    10. 'distance' → logprob: -7.357949256896973

Token 567: ':
' (ID: 734)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1430211365222931
    2. ' =' → logprob: -3.0180211067199707
    3. 'distance' → logprob: -3.8930211067199707
    4. '       ' → logprob: -4.143021106719971
    5. '   ' → logprob: -4.393021106719971
    6. ' dist' → logprob: -4.393021106719971
    7. '=' → logprob: -4.643021106719971
    8. 'dp' → logprob: -5.018021106719971
    9. ',' → logprob: -6.018021106719971
    10. ' distances' → logprob: -6.018021106719971

Token 568: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01315258163958788
    2. ' dist' → logprob: -4.888152599334717
    3. '       ' → logprob: -5.763152599334717
    4. 'distance' → logprob: -6.138152599334717
    5. 'dp' → logprob: -9.138152122497559
    6. ' distances' → logprob: -10.263152122497559
    7. ' distance' → logprob: -10.388152122497559
    8. 'import' → logprob: -10.388152122497559
    9. 'd' → logprob: -11.888152122497559
    10. 'dis' → logprob: -12.013152122497559

Token 569: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.7146746763028204e-05
    2. 'distance' → logprob: -10.50003719329834
    3. ' dist' → logprob: -12.25003719329834
    4. 'INF' → logprob: -12.50003719329834
    5. 'import' → logprob: -14.25003719329834
    6. 'cost' → logprob: -16.000036239624023
    7. 'dp' → logprob: -16.125036239624023
    8. 'd' → logprob: -16.500036239624023
    9. 'DIST' → logprob: -16.750036239624023
    10. 'inf' → logprob: -17.875036239624023

Token 570: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -7.171581091824919e-05
    2. 'distance' → logprob: -9.75007152557373
    3. 'INF' → logprob: -11.75007152557373
    4. ' dist' → logprob: -13.00007152557373
    5. 'cost' → logprob: -13.62507152557373
    6. 'dp' → logprob: -14.25007152557373
    7. 'import' → logprob: -14.62507152557373
    8. '#' → logprob: -15.00007152557373
    9. 'd' → logprob: -15.00007152557373
    10. 'DIST' → logprob: -16.375072479248047

Token 571: '[r' (ID: 33265)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759734511375427
    2. '=' → logprob: -0.8259734511375427
    3. '=[[' → logprob: -11.075973510742188
    4. '=[' → logprob: -11.200973510742188
    5. ' ' → logprob: -14.075973510742188
    6. '   ' → logprob: -14.075973510742188
    7. '=
' → logprob: -14.200973510742188
    8. '=[]' → logprob: -14.450973510742188
    9. '[' → logprob: -14.450973510742188
    10. ' =[' → logprob: -14.700973510742188

Token 572: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01259206049144268
    2. ']' → logprob: -4.38759183883667
    3. ',' → logprob: -10.137592315673828
    4. ']=' → logprob: -11.137592315673828
    5. '][]' → logprob: -11.637592315673828
    6. ' ][' → logprob: -11.887592315673828
    7. '=' → logprob: -13.262592315673828
    8. 'ow' → logprob: -13.512592315673828
    9. 'h' → logprob: -13.762592315673828
    10. ',h' → logprob: -13.887592315673828

Token 573: 'c' (ID: 66)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6333634257316589
    2. 'c' → logprob: -0.7583634257316589
    3. 'h' → logprob: -7.883363246917725
    4. '][' → logprob: -9.008363723754883
    5. ' w' → logprob: -9.133363723754883
    6. '   ' → logprob: -9.633363723754883
    7. ' c' → logprob: -10.008363723754883
    8. ']' → logprob: -11.758363723754883
    9. 'col' → logprob: -12.008363723754883
    10. '
' → logprob: -12.133363723754883

Token 574: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020642325282096863
    2. ']' → logprob: -3.8956422805786133
    3. ']=' → logprob: -9.770642280578613
    4. '=' → logprob: -11.270642280578613
    5. '][]' → logprob: -11.395642280578613
    6. ' ][' → logprob: -12.520642280578613
    7. '[' → logprob: -12.645642280578613
    8. ']={' → logprob: -12.895642280578613
    9. 'd' → logprob: -13.145642280578613
    10. '   ' → logprob: -13.270642280578613

Token 575: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2994877099990845
    2. '4' → logprob: -1.5494877099990845
    3. 'direction' → logprob: -3.174487590789795
    4. 'dir' → logprob: -5.424487590789795
    5. ']' → logprob: -9.424488067626953
    6. 'dire' → logprob: -10.049488067626953
    7. ' direction' → logprob: -10.924488067626953
    8. 'i' → logprob: -11.174488067626953
    9. ' d' → logprob: -11.299488067626953
    10. ' ' → logprob: -12.174488067626953

Token 576: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000504658033605665
    2. ' ]' → logprob: -7.750504493713379
    3. ']=' → logprob: -9.750504493713379
    4. '][' → logprob: -11.625504493713379
    5. '][]' → logprob: -13.000504493713379
    6. ']={' → logprob: -13.500504493713379
    7. '],' → logprob: -14.500504493713379
    8. '=' → logprob: -14.750504493713379
    9. '   ' → logprob: -15.000504493713379
    10. 's' → logprob: -15.250504493713379

Token 577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25195810198783875
    2. ' =' → logprob: -1.5019581317901611
    3. ']' → logprob: -11.251957893371582
    4. '=[' → logprob: -11.376957893371582
    5. ']=' → logprob: -13.001957893371582
    6. ')' → logprob: -14.376957893371582
    7. '=
' → logprob: -14.626957893371582
    8. '=[[' → logprob: -14.751957893371582
    9. '=[]' → logprob: -14.876957893371582
    10. '=[]
' → logprob: -16.2519588470459

Token 578: ' minimal' (ID: 19957)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.081584716506768e-05
    2. 'None' → logprob: -11.000020980834961
    3. '10' → logprob: -13.250020980834961
    4. ' float' → logprob: -13.875020980834961
    5. 'int' → logprob: -14.750020980834961
    6. 'inf' → logprob: -15.000020980834961
    7. 'sys' → logprob: -15.125020980834961
    8. 'False' → logprob: -16.12502098083496
    9. '   ' → logprob: -16.75002098083496
    10. '[' → logprob: -16.75002098083496

Token 579: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3147117793560028
    2. ' cost' → logprob: -1.3147118091583252
    3. '_cost' → logprob: -6.814711570739746
    4. 'distance' → logprob: -8.564711570739746
    5. ')' → logprob: -9.564711570739746
    6. '=' → logprob: -10.939711570739746
    7. ' =' → logprob: -11.189711570739746
    8. ' distance' → logprob: -11.189711570739746
    9. 'dist' → logprob: -12.314711570739746
    10. ']' → logprob: -12.314711570739746

Token 580: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48698487877845764
    2. ' for' → logprob: -2.486984968185425
    3. '=' → logprob: -2.736984968185425
    4. ']' → logprob: -2.736984968185425
    5. 'for' → logprob: -2.861984968185425
    6. '   ' → logprob: -3.111984968185425
    7. '       ' → logprob: -3.236984968185425
    8. ')' → logprob: -4.986984729766846
    9. 'import' → logprob: -5.111984729766846
    10. '<|end|>' → logprob: -5.611984729766846

Token 581: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.003988523501902819
    2. 'get' → logprob: -6.128988742828369
    3. ' reach' → logprob: -6.628988742828369
    4. 'arr' → logprob: -8.253988265991211
    5. '
' → logprob: -9.253988265991211
    6. 'r' → logprob: -9.378988265991211
    7. 'be' → logprob: -10.753988265991211
    8. '   ' → logprob: -13.003988265991211
    9. ' get' → logprob: -13.003988265991211
    10. ' ' → logprob: -13.003988265991211

Token 582: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47231653332710266
    2. '[r' → logprob: -1.3473165035247803
    3. 'dist' → logprob: -2.2223165035247803
    4. ' r' → logprob: -5.472316741943359
    5. ' dist' → logprob: -6.722316741943359
    6. '(r' → logprob: -7.722316741943359
    7. '][' → logprob: -7.972316741943359
    8. '   ' → logprob: -7.972316741943359
    9. ']' → logprob: -8.09731674194336
    10. 'd' → logprob: -8.47231674194336

Token 583: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000556843588128686
    2. 'h' → logprob: -7.625556945800781
    3. ' r' → logprob: -10.250556945800781
    4. ')' → logprob: -11.125556945800781
    5. '][' → logprob: -11.750556945800781
    6. ']' → logprob: -12.125556945800781
    7. 'd' → logprob: -12.875556945800781
    8. '[r' → logprob: -14.500556945800781
    9. '=' → logprob: -15.125556945800781
    10. '   ' → logprob: -15.125556945800781

Token 584: ',c' (ID: 22261)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004101792816072702
    2. ')][' → logprob: -5.629101753234863
    3. ')[' → logprob: -8.254101753234863
    4. ')' → logprob: -9.004101753234863
    5. ']' → logprob: -9.879101753234863
    6. '   ' → logprob: -10.879101753234863
    7. ',' → logprob: -11.004101753234863
    8. 'd' → logprob: -12.004101753234863
    9. ' ][' → logprob: -12.504101753234863
    10. '[r' → logprob: -13.129101753234863

Token 585: ')' (ID: 8)
  Prédit: ',d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.2766617238521576
    2. ',' → logprob: -2.1516616344451904
    3. ')[' → logprob: -2.7766616344451904
    4. ')' → logprob: -3.1516616344451904
    5. '][' → logprob: -4.0266618728637695
    6. '[d' → logprob: -7.1516618728637695
    7. ' with' → logprob: -7.2766618728637695
    8. 'd' → logprob: -8.15166187286377
    9. 'with' → logprob: -8.15166187286377
    10. ')d' → logprob: -8.52666187286377

Token 586: ' facing' (ID: 20511)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0936700105667114
    2. 'with' → logprob: -1.8436700105667114
    3. '][' → logprob: -2.218669891357422
    4. ' in' → logprob: -2.593669891357422
    5. ' with' → logprob: -2.593669891357422
    6. 'for' → logprob: -2.718669891357422
    7. '[d' → logprob: -2.843669891357422
    8. ',' → logprob: -3.468669891357422
    9. 'in' → logprob: -3.718669891357422
    10. ' for' → logprob: -3.843669891357422

Token 587: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0026056256610900164
    2. ' d' → logprob: -6.002605438232422
    3. 'direction' → logprob: -9.002605438232422
    4. ' direction' → logprob: -12.627605438232422
    5. ')' → logprob: -13.377605438232422
    6. ')d' → logprob: -14.752605438232422
    7. '	d' → logprob: -14.877605438232422
    8. '
' → logprob: -15.502605438232422
    9. ' ' → logprob: -15.502605438232422
    10. '   ' → logprob: -15.627605438232422

Token 588: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05032145231962204
    2. ' =' → logprob: -3.800321340560913
    3. 'for' → logprob: -4.925321578979492
    4. ' for' → logprob: -5.300321578979492
    5. '=' → logprob: -5.425321578979492
    6. '   ' → logprob: -5.925321578979492
    7. ' ]' → logprob: -6.050321578979492
    8. '][' → logprob: -7.050321578979492
    9. 'dist' → logprob: -7.050321578979492
    10. ',' → logprob: -7.175321578979492

Token 589: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.387439489364624
    2. '```' → logprob: -1.512439489364624
    3. 'dist' → logprob: -2.137439489364624
    4. '[' → logprob: -2.137439489364624
    5. '       ' → logprob: -2.762439489364624
    6. '   ' → logprob: -2.887439489364624
    7. ']' → logprob: -3.012439489364624
    8. '\' → logprob: -3.887439489364624
    9. ',' → logprob: -4.137439727783203
    10. '[
' → logprob: -4.137439727783203

Token 590: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0025674565695226192
    2. 'd' → logprob: -6.752567291259766
    3. ' dist' → logprob: -7.002567291259766
    4. '       ' → logprob: -8.377567291259766
    5. '   ' → logprob: -9.002567291259766
    6. '[' → logprob: -9.252567291259766
    7. '```' → logprob: -10.752567291259766
    8. '`' → logprob: -12.127567291259766
    9. '	dist' → logprob: -12.877567291259766
    10. '_dist' → logprob: -13.377567291259766

Token 591: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688910007476807
    2. '=' → logprob: -1.136889100074768
    3. '=[' → logprob: -11.261889457702637
    4. '[' → logprob: -13.136889457702637
    5. ' =[' → logprob: -13.761889457702637
    6. '=[[' → logprob: -14.261889457702637
    7. ',' → logprob: -14.636889457702637
    8. '=[]' → logprob: -15.386889457702637
    9. ' ' → logprob: -15.386889457702637
    10. '   ' → logprob: -15.886889457702637

Token 592: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0020573579240590334
    2. '[' → logprob: -6.5020575523376465
    3. ' [[[' → logprob: -7.5020575523376465
    4. '[
' → logprob: -12.877057075500488
    5. ' [[' → logprob: -15.877057075500488
    6. ' [' → logprob: -16.002058029174805
    7. '   ' → logprob: -16.377058029174805
    8. '[['' → logprob: -16.377058029174805
    9. '[int' → logprob: -18.752058029174805
    10. '[(' → logprob: -19.127058029174805

Token 593: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0001238004770129919
    2. '10' → logprob: -9.000123977661133
    3. '-' → logprob: -16.000123977661133
    4. ' float' → logprob: -16.375123977661133
    5. 'None' → logprob: -16.500123977661133
    6. '1' → logprob: -16.625123977661133
    7. 'sys' → logprob: -16.875123977661133
    8. 'int' → logprob: -17.000123977661133
    9. '999' → logprob: -17.750123977661133
    10. '100' → logprob: -19.500123977661133

Token 594: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.20890873670578003
    2. '('' → logprob: -1.7089087963104248
    3. ''' → logprob: -5.208908557891846
    4. ''ex' → logprob: -8.083909034729004
    5. ''inc' → logprob: -8.208909034729004
    6. 'inf' → logprob: -8.958909034729004
    7. ''s' → logprob: -8.958909034729004
    8. ''on' → logprob: -9.083909034729004
    9. ''ins' → logprob: -9.208909034729004
    10. ''as' → logprob: -9.333909034729004

Token 595: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -9.088346359931165e-07
    2. ''' → logprob: -14.000000953674316
    3. ''in' → logprob: -17.25
    4. 'Inf' → logprob: -19.25
    5. 'in' → logprob: -19.375
    6. ' inf' → logprob: -19.5
    7. 'INF' → logprob: -20.25
    8. '_inf' → logprob: -20.25
    9. 'info' → logprob: -20.375
    10. '('' → logprob: -21.375

Token 596: '')]' (ID: 94377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31590354442596436
    2. ')]' → logprob: -1.3159035444259644
    3. '')]' → logprob: -6.440903663635254
    4. '')' → logprob: -6.940903663635254
    5. ' )' → logprob: -10.315903663635254
    6. ']' → logprob: -10.315903663635254
    7. '']' → logprob: -13.315903663635254
    8. ')
' → logprob: -13.440903663635254
    9. ')'' → logprob: -13.440903663635254
    10. ')])' → logprob: -13.815903663635254

Token 597: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47669968008995056
    2. 'for' → logprob: -0.976699709892273
    3. ')' → logprob: -6.7266998291015625
    4. ']' → logprob: -7.1016998291015625
    5. '   ' → logprob: -8.226699829101562
    6. ',' → logprob: -8.976699829101562
    7. '           ' → logprob: -9.476699829101562
    8. '	for' → logprob: -9.976699829101562
    9. '       ' → logprob: -10.851699829101562
    10. ']*' → logprob: -11.351699829101562

Token 598: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -20.5
    4. 'w' → logprob: -20.625
    5. '
' → logprob: -22.5
    6. '=' → logprob: -22.875
    7. '(' → logprob: -23.125
    8. '۴' → logprob: -23.125
    9. '４' → logprob: -23.75
    10. 'len' → logprob: -24.0

Token 599: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. 'w' → logprob: -18.0
    4. '=' → logprob: -19.125
    5. '۴' → logprob: -19.5
    6. 'len' → logprob: -19.75
    7. '```' → logprob: -20.125
    8. '   ' → logprob: -20.25
    9. '' → logprob: -20.25
    10. 'for' → logprob: -20.625

Token 600: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10024204105138779
    2. 'for' → logprob: -2.3502421379089355
    3. ')' → logprob: -11.225241661071777
    4. ']' → logprob: -11.850241661071777
    5. '	for' → logprob: -11.975241661071777
    6. '   ' → logprob: -12.975241661071777
    7. ' ' → logprob: -13.350241661071777
    8. '           ' → logprob: -13.850241661071777
    9. '    ' → logprob: -14.100241661071777
    10. '       ' → logprob: -14.475241661071777

Token 601: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002899497514590621
    2. ' _' → logprob: -6.127899646759033
    3. '_c' → logprob: -7.377899646759033
    4. ' in' → logprob: -10.877899169921875
    5. '_in' → logprob: -11.502899169921875
    6. '_col' → logprob: -11.627899169921875
    7. '_j' → logprob: -11.877899169921875
    8. '_range' → logprob: -11.877899169921875
    9. '<|end|>' → logprob: -12.002899169921875
    10. 'c' → logprob: -12.127899169921875

Token 602: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18013885617256165
    2. 'in' → logprob: -1.8051388263702393
    3. '_' → logprob: -8.30513858795166
    4. 'range' → logprob: -9.05513858795166
    5. ' ' → logprob: -11.43013858795166
    6. 'c' → logprob: -12.18013858795166
    7. ' range' → logprob: -12.30513858795166
    8. '_in' → logprob: -13.18013858795166
    9. '<|end|>' → logprob: -13.80513858795166
    10. '_range' → logprob: -13.93013858795166

Token 603: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019289902411401272
    2. ' range' → logprob: -6.251928806304932
    3. '_range' → logprob: -15.00192928314209
    4. '_' → logprob: -16.751928329467773
    5. '	range' → logprob: -17.751928329467773
    6. '   ' → logprob: -18.001928329467773
    7. '(range' → logprob: -18.626928329467773
    8. ' ' → logprob: -19.126928329467773
    9. 'in' → logprob: -20.001928329467773
    10. '
' → logprob: -20.126928329467773

Token 604: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.700132997939363e-05
    2. 'w' → logprob: -11.000017166137695
    3. ' (' → logprob: -15.750017166137695
    4. '(' → logprob: -16.250017166137695
    5. '	w' → logprob: -18.625017166137695
    6. ' w' → logprob: -19.250017166137695
    7. '   ' → logprob: -19.625017166137695
    8. '(range' → logprob: -20.375017166137695
    9. '(width' → logprob: -20.500017166137695
    10. '=w' → logprob: -20.625017166137695

Token 605: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.1756367712223437e-05
    2. ')' → logprob: -11.750011444091797
    3. ' )' → logprob: -12.625011444091797
    4. ']' → logprob: -15.250011444091797
    5. '   ' → logprob: -16.375011444091797
    6. ' ' → logprob: -17.625011444091797
    7. ' ]' → logprob: -17.750011444091797
    8. ')],' → logprob: -17.875011444091797
    9. ')]
' → logprob: -18.000011444091797
    10. ')])' → logprob: -18.000011444091797

Token 606: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00040886594797484577
    2. ' for' → logprob: -8.625409126281738
    3. ' ]' → logprob: -8.750409126281738
    4. '   ' → logprob: -10.375409126281738
    5. '       ' → logprob: -10.750409126281738
    6. 'for' → logprob: -11.250409126281738
    7. ' ' → logprob: -13.250409126281738
    8. '],' → logprob: -14.000409126281738
    9. '           ' → logprob: -14.625409126281738
    10. ')' → logprob: -14.875409126281738

Token 607: ' __' (ID: 2516)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31327179074287415
    2. ' range' → logprob: -1.3132717609405518
    3. ' in' → logprob: -12.563271522521973
    4. '_range' → logprob: -13.188271522521973
    5. '_' → logprob: -13.438271522521973
    6. '(range' → logprob: -13.438271522521973
    7. 'in' → logprob: -13.563271522521973
    8. '	range' → logprob: -15.313271522521973
    9. 'h' → logprob: -15.938271522521973
    10. '_h' → logprob: -17.43827247619629

Token 608: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29202184081077576
    2. 'in' → logprob: -1.5420218706130981
    3. 'range' → logprob: -3.4170217514038086
    4. ' range' → logprob: -5.042021751403809
    5. '_' → logprob: -11.417021751403809
    6. ' ' → logprob: -11.542021751403809
    7. '(range' → logprob: -12.292021751403809
    8. '_range' → logprob: -13.542021751403809
    9. '   ' → logprob: -14.417021751403809
    10. '	range' → logprob: -14.667021751403809

Token 609: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -18.75002670288086
    4. '[' → logprob: -21.00002670288086
    5. '	range' → logprob: -22.25002670288086
    6. '   ' → logprob: -23.87502670288086
    7. ' ' → logprob: -24.50002670288086
    8. '(' → logprob: -24.75002670288086
    9. '_range' → logprob: -25.00002670288086
    10. 'ran' → logprob: -25.25002670288086

Token 610: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00196645874530077
    2. 'range' → logprob: -6.25196647644043
    3. '(h' → logprob: -10.25196647644043
    4. ' h' → logprob: -13.75196647644043
    5. '[h' → logprob: -14.00196647644043
    6. ' range' → logprob: -14.37696647644043
    7. '(range' → logprob: -16.62696647644043
    8. '	h' → logprob: -20.00196647644043
    9. '<h' → logprob: -20.25196647644043
    10. ',h' → logprob: -20.50196647644043

Token 611: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.5597102396423e-05
    2. ']' → logprob: -10.375035285949707
    3. '       ' → logprob: -13.375035285949707
    4. ')' → logprob: -13.625035285949707
    5. '])]' → logprob: -14.375035285949707
    6. ')],' → logprob: -15.000035285949707
    7. '   ' → logprob: -15.625035285949707
    8. ']]' → logprob: -16.000036239624023
    9. ')])' → logprob: -16.250036239624023
    10. '])' → logprob: -16.250036239624023

Token 612: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0007344625773839653
    2. '       ' → logprob: -7.250734329223633
    3. ' dist' → logprob: -11.250734329223633
    4. '```' → logprob: -12.125734329223633
    5. '	dist' → logprob: -12.750734329223633
    6. 'Dist' → logprob: -13.875734329223633
    7. '_dist' → logprob: -14.125734329223633
    8. '<|end|>' → logprob: -14.375734329223633
    9. '        
' → logprob: -15.125734329223633
    10. '(dist' → logprob: -15.500734329223633

Token 613: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -7.636475493200123e-05
    2. '       ' → logprob: -9.500076293945312
    3. ' dist' → logprob: -13.625076293945312
    4. '	dist' → logprob: -15.750076293945312
    5. '```' → logprob: -17.125076293945312
    6. '        
' → logprob: -17.625076293945312
    7. '_dist' → logprob: -17.875076293945312
    8. '   ' → logprob: -18.750076293945312
    9. '.dist' → logprob: -19.375076293945312
    10. '(dist' → logprob: -19.500076293945312

Token 614: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.125
    3. '][' → logprob: -16.125
    4. '```' → logprob: -17.75
    5. '[
' → logprob: -18.625
    6. ' [' → logprob: -18.875
    7. 's' → logprob: -19.0
    8. ')[' → logprob: -19.0
    9. '=' → logprob: -19.75
    10. '\[' → logprob: -20.0

Token 615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. ' ' → logprob: -15.875
    4. '   ' → logprob: -20.0
    5. '][' → logprob: -20.125
    6. '000' → logprob: -20.125
    7. '۰' → logprob: -20.125
    8. '(' → logprob: -20.5
    9. '=' → logprob: -20.5
    10. '00' → logprob: -20.875

Token 616: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001490716531407088
    2. '[' → logprob: -8.87514877319336
    3. ']' → logprob: -11.62514877319336
    4. '"][' → logprob: -16.25014877319336
    5. '0' → logprob: -16.37514877319336
    6. ' ][' → logprob: -16.75014877319336
    7. ''][' → logprob: -16.87514877319336
    8. '()][' → logprob: -18.25014877319336
    9. ']][' → logprob: -18.75014877319336
    10. '```' → logprob: -19.12514877319336

Token 617: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '][' → logprob: -18.125
    4. '[' → logprob: -18.25
    5. '۰' → logprob: -19.125
    6. '   ' → logprob: -19.875
    7. '<|end|>' → logprob: -20.0
    8. ',' → logprob: -20.25
    9. '```' → logprob: -21.0
    10. '০' → logprob: -21.0625

Token 618: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001593195047462359
    2. '[' → logprob: -8.75015926361084
    3. ']' → logprob: -14.75015926361084
    4. '0' → logprob: -15.62515926361084
    5. ' ][' → logprob: -15.62515926361084
    6. ''][' → logprob: -17.125160217285156
    7. '"][' → logprob: -17.375160217285156
    8. '()][' → logprob: -18.750160217285156
    9. '```' → logprob: -19.500160217285156
    10. ']][' → logprob: -19.625160217285156

Token 619: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '۰' → logprob: -18.625
    4. '   ' → logprob: -20.875
    5. '০' → logprob: -20.875
    6. '[' → logprob: -21.625
    7. '０' → logprob: -22.25
    8. '```' → logprob: -22.5
    9. 'direction' → logprob: -22.5625
    10. '०' → logprob: -22.625

Token 620: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.4121114822482923e-06
    2. ']=' → logprob: -12.875003814697266
    3. ' ]' → logprob: -14.125003814697266
    4. '`]' → logprob: -19.000003814697266
    5. '=' → logprob: -19.625003814697266
    6. ']==' → logprob: -20.625003814697266
    7. '[' → logprob: -21.000003814697266
    8. '0' → logprob: -21.375003814697266
    9. '']' → logprob: -21.500003814697266
    10. ')' → logprob: -22.125003814697266

Token 621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002481008181348443
    2. ' =' → logprob: -6.002480983734131
    3. ']=' → logprob: -12.377481460571289
    4. ']' → logprob: -13.752481460571289
    5. '[' → logprob: -16.87748146057129
    6. ')=' → logprob: -17.00248146057129
    7. ')' → logprob: -17.87748146057129
    8. '＝' → logprob: -19.25248146057129
    9. '.=' → logprob: -19.75248146057129
    10. '=}' → logprob: -20.12748146057129

Token 622: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '۰' → logprob: -22.625
    4. '   ' → logprob: -24.0
    5. '00' → logprob: -24.125
    6. '```' → logprob: -24.375
    7. '000' → logprob: -25.125
    8. '０' → logprob: -25.625
    9. '=' → logprob: -25.625
    10. 's' → logprob: -25.9375

Token 623: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '۰' → logprob: -23.625
    4. '   ' → logprob: -23.75
    5. '00' → logprob: -24.375
    6. '000' → logprob: -24.625
    7. '```' → logprob: -25.875
    8. '０' → logprob: -26.25
    9. '=' → logprob: -26.375
    10. '০' → logprob: -26.5625

Token 624: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7671542167663574
    2. '<|end|>' → logprob: -1.5171542167663574
    3. '       ' → logprob: -2.2671542167663574
    4. ' while' → logprob: -2.3921542167663574
    5. '
' → logprob: -2.5171542167663574
    6. '   ' → logprob: -4.267154216766357
    7. '	while' → logprob: -4.767154216766357
    8. '        
' → logprob: -4.892154216766357
    9. '```' → logprob: -5.017154216766357
    10. '    
' → logprob: -6.642154216766357

Token 625: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0664902776479721
    2. ' while' → logprob: -3.4414901733398438
    3. '```' → logprob: -3.9414901733398438
    4. '   ' → logprob: -5.191490173339844
    5. '	while' → logprob: -5.691490173339844
    6. '       ' → logprob: -6.191490173339844
    7. '<|end|>' → logprob: -6.566490173339844
    8. 'While' → logprob: -7.691490173339844
    9. '``' → logprob: -11.191490173339844
    10. ' While' → logprob: -12.191490173339844

Token 626: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.7120533811976202e-05
    2. '       ' → logprob: -11.250017166137695
    3. ' while' → logprob: -12.500017166137695
    4. 'While' → logprob: -16.375017166137695
    5. '	while' → logprob: -16.500017166137695
    6. '```' → logprob: -17.375017166137695
    7. '   ' → logprob: -17.500017166137695
    8. '        
' → logprob: -19.375017166137695
    9. 'from' → logprob: -21.375017166137695
    10. '
' → logprob: -21.500017166137695

Token 627: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.018192199990153313
    2. ' pq' → logprob: -4.018192291259766
    3. 'len' → logprob: -10.143192291259766
    4. 'p' → logprob: -13.018192291259766
    5. ' len' → logprob: -14.768192291259766
    6. 'q' → logprob: -15.268192291259766
    7. 'PQ' → logprob: -16.393192291259766
    8. '   ' → logprob: -17.143192291259766
    9. '	p' → logprob: -17.268192291259766
    10. ' ' → logprob: -17.518192291259766

Token 628: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009373087668791413
    2. ':
' → logprob: -7.250937461853027
    3. ' and' → logprob: -9.375937461853027
    4. '.' → logprob: -9.875937461853027
    5. 'and' → logprob: -10.125937461853027
    6. '[' → logprob: -10.250937461853027
    7. '):' → logprob: -12.125937461853027
    8. '.pop' → logprob: -12.625937461853027
    9. ',' → logprob: -13.500937461853027
    10. ':**' → logprob: -13.750937461853027

Token 629: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025459355674684048
    2. 'cost' → logprob: -6.1275458335876465
    3. ',' → logprob: -9.252546310424805
    4. 'total' → logprob: -9.502546310424805
    5. '```' → logprob: -9.627546310424805
    6. '(cost' → logprob: -10.002546310424805
    7. '       ' → logprob: -10.627546310424805
    8. ' cost' → logprob: -11.127546310424805
    9. '   ' → logprob: -11.502546310424805
    10. '               ' → logprob: -12.377546310424805

Token 630: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.0078028724528849125
    2. 'cur' → logprob: -5.007802963256836
    3. 'curr' → logprob: -7.507802963256836
    4. 'total' → logprob: -8.007802963256836
    5. 'current' → logprob: -9.007802963256836
    6. '(cost' → logprob: -9.507802963256836
    7. ' cost' → logprob: -12.382802963256836
    8. 'c' → logprob: -12.632802963256836
    9. '   ' → logprob: -14.507802963256836
    10. '(cur' → logprob: -16.007802963256836

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ' ,' → logprob: -13.87500286102295
    3. ',
' → logprob: -14.50000286102295
    4. ',c' → logprob: -15.00000286102295
    5. ',current' → logprob: -15.62500286102295
    6. ',next' → logprob: -15.75000286102295
    7. ',n' → logprob: -15.87500286102295
    8. ',user' → logprob: -16.500001907348633
    9. ',num' → logprob: -16.625001907348633
    10. ',p' → logprob: -16.750001907348633

Token 632: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00033546582562848926
    2. ' r' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.250335693359375
    4. '	r' → logprob: -19.750335693359375
    5. '_r' → logprob: -23.125335693359375
    6. '```' → logprob: -23.375335693359375
    7. '    ' → logprob: -23.625335693359375
    8. '(r' → logprob: -23.625335693359375
    9. 'row' → logprob: -24.125335693359375
    10. ' ' → logprob: -24.250335693359375

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010163593105971813
    2. ' ,' → logprob: -9.250102043151855
    3. ',c' → logprob: -12.250102043151855
    4. '           ' → logprob: -15.375102043151855
    5. ',
' → logprob: -15.375102043151855
    6. '_,' → logprob: -16.62510108947754
    7. ',n' → logprob: -17.75010108947754
    8. '<|end|>' → logprob: -17.75010108947754
    9. ',d' → logprob: -17.87510108947754
    10. '‌,' → logprob: -18.50010108947754

Token 634: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014025058771949261
    2. ' c' → logprob: -8.875140190124512
    3. '           ' → logprob: -15.375140190124512
    4. '   ' → logprob: -16.625141143798828
    5. '       ' → logprob: -17.500141143798828
    6. ',' → logprob: -17.625141143798828
    7. '	c' → logprob: -17.750141143798828
    8. '    ' → logprob: -18.250141143798828
    9. ',c' → logprob: -18.750141143798828
    10. '            ' → logprob: -19.125141143798828

Token 635: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3782830137643032e-05
    2. ' ,' → logprob: -11.62501335144043
    3. ',d' → logprob: -12.25001335144043
    4. 'd' → logprob: -17.25001335144043
    5. ',
' → logprob: -18.50001335144043
    6. '_,' → logprob: -19.37501335144043
    7. '           ' → logprob: -20.50001335144043
    8. '‌,' → logprob: -20.62501335144043
    9. '،' → logprob: -21.87501335144043
    10. '=' → logprob: -22.00001335144043

Token 636: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.576873758807778e-05
    2. 'dir' → logprob: -9.750075340270996
    3. ' d' → logprob: -11.000075340270996
    4. 'direction' → logprob: -14.125075340270996
    5. ' dir' → logprob: -18.625076293945312
    6. '	d' → logprob: -20.250076293945312
    7. 'dire' → logprob: -20.375076293945312
    8. '```' → logprob: -21.375076293945312
    9. ' direction' → logprob: -21.750076293945312
    10. 'dr' → logprob: -22.250076293945312

Token 637: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132888972759247
    2. '=' → logprob: -1.313288927078247
    3. ')' → logprob: -10.563288688659668
    4. ')=' → logprob: -14.188288688659668
    5. '   ' → logprob: -15.313288688659668
    6. ' ' → logprob: -15.688288688659668
    7. ' =
' → logprob: -16.188289642333984
    8. ']' → logprob: -16.938289642333984
    9. '=
' → logprob: -17.188289642333984
    10. ',' → logprob: -17.188289642333984

Token 638: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -2.935296834039036e-06
    2. ' heap' → logprob: -12.75000286102295
    3. 'he' → logprob: -18.500003814697266
    4. '(heap' → logprob: -22.125003814697266
    5. '.heap' → logprob: -22.500003814697266
    6. '_heap' → logprob: -23.500003814697266
    7. '   ' → logprob: -24.125003814697266
    8. 'Heap' → logprob: -24.625003814697266
    9. 'hep' → logprob: -25.125003814697266
    10. 'queue' → logprob: -25.375003814697266

Token 639: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.610702363715973e-06
    2. 'op' → logprob: -12.250009536743164
    3. 'app' → logprob: -12.750009536743164
    4. 'pop' → logprob: -14.250009536743164
    5. 'p' → logprob: -15.375009536743164
    6. '   ' → logprob: -15.500009536743164
    7. '           ' → logprob: -15.875009536743164
    8. '       ' → logprob: -16.125009536743164
    9. '=' → logprob: -16.250009536743164
    10. '.he' → logprob: -16.375009536743164

Token 640: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.06307172030210495
    2. 'q' → logprob: -2.8130717277526855
    3. 'app' → logprob: -7.5630717277526855
    4. 'he' → logprob: -7.9380717277526855
    5. ' he' → logprob: -8.688071250915527
    6. '```' → logprob: -11.188071250915527
    7. '[' → logprob: -11.438071250915527
    8. '   ' → logprob: -11.688071250915527
    9. '.heap' → logprob: -11.938071250915527
    10. 'op' → logprob: -12.688071250915527

Token 641: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.0445127372804563e-05
    2. 'pp' → logprob: -11.50001049041748
    3. 'ap' → logprob: -15.87501049041748
    4. '[' → logprob: -16.000009536743164
    5. '```' → logprob: -17.500009536743164
    6. 'q' → logprob: -18.125009536743164
    7. 'appe' → logprob: -18.125009536743164
    8. 'pop' → logprob: -19.250009536743164
    9. 'appen' → logprob: -19.250009536743164
    10. 'App' → logprob: -19.625009536743164

Token 642: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.13833549618721008
    2. 'app' → logprob: -2.1383354663848877
    3. 'ush' → logprob: -4.513335704803467
    4. 'pop' → logprob: -8.763335227966309
    5. 'pp' → logprob: -8.763335227966309
    6. 'ap' → logprob: -11.263335227966309
    7. 'he' → logprob: -11.513335227966309
    8. 'p' → logprob: -11.763335227966309
    9. '```' → logprob: -12.013335227966309
    10. 'q' → logprob: -12.138335227966309

Token 643: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.2020991056924686e-05
    2. '(' → logprob: -10.375032424926758
    3. '(q' → logprob: -15.125032424926758
    4. ' (' → logprob: -15.250032424926758
    5. '(
' → logprob: -16.250032424926758
    6. 'pq' → logprob: -16.375032424926758
    7. 'p' → logprob: -18.000032424926758
    8. ' pq' → logprob: -18.750032424926758
    9. '(queue' → logprob: -18.750032424926758
    10. '(pr' → logprob: -18.875032424926758

Token 644: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -14.875001907348633
    3. ')' → logprob: -15.125001907348633
    4. ',' → logprob: -15.375001907348633
    5. '
' → logprob: -15.875001907348633
    6. ',q' → logprob: -16.125001907348633
    7. '```' → logprob: -16.375001907348633
    8. '	q' → logprob: -16.625001907348633
    9. '(q' → logprob: -16.750001907348633
    10. ' q' → logprob: -16.875001907348633

Token 645: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004093835595995188
    2. ')
' → logprob: -5.629093647003174
    3. '           ' → logprob: -7.629093647003174
    4. '<|end|>' → logprob: -12.879094123840332
    5. '       ' → logprob: -13.629094123840332
    6. '),' → logprob: -14.004094123840332
    7. '
' → logprob: -14.754094123840332
    8. '   ' → logprob: -14.879094123840332
    9. ')
' → logprob: -14.879094123840332
    10. '            
' → logprob: -15.254094123840332

Token 646: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000982435536570847
    2. 'if' → logprob: -7.125982284545898
    3. '       ' → logprob: -9.000982284545898
    4. '```' → logprob: -10.750982284545898
    5. ' if' → logprob: -11.125982284545898
    6. '   ' → logprob: -11.500982284545898
    7. '            
' → logprob: -12.250982284545898
    8. '<|end|>' → logprob: -13.000982284545898
    9. '        
' → logprob: -15.125982284545898
    10. '               ' → logprob: -15.500982284545898

Token 647: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.029830902814865112
    2. '           ' → logprob: -3.5298309326171875
    3. ' if' → logprob: -9.529830932617188
    4. '            
' → logprob: -12.154830932617188
    5. '       ' → logprob: -13.154830932617188
    6. '#' → logprob: -15.279830932617188
    7. '        
' → logprob: -16.404830932617188
    8. 'If' → logprob: -16.654830932617188
    9. '```' → logprob: -16.904830932617188
    10. '	if' → logprob: -17.279830932617188

Token 648: ' dist' (ID: 3601)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009028141386806965
    2. '(r' → logprob: -4.75902795791626
    3. ' r' → logprob: -8.884028434753418
    4. 'dist' → logprob: -9.134028434753418
    5. 'cost' → logprob: -9.634028434753418
    6. ' (' → logprob: -10.134028434753418
    7. '(cost' → logprob: -10.634028434753418
    8. '(' → logprob: -10.759028434753418
    9. '(dist' → logprob: -11.259028434753418
    10. ' dist' → logprob: -13.384028434753418

Token 649: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.125001907348633
    3. 'r' → logprob: -14.250001907348633
    4. '][' → logprob: -16.250001907348633
    5. '```' → logprob: -16.500001907348633
    6. '[d' → logprob: -17.250001907348633
    7. '[u' → logprob: -17.250001907348633
    8. '[t' → logprob: -17.625001907348633
    9. ' [' → logprob: -18.125001907348633
    10. '[s' → logprob: -18.250001907348633

Token 650: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001443035143893212
    2. '[r' → logprob: -9.250144004821777
    3. '[d' → logprob: -10.625144004821777
    4. '[c' → logprob: -11.500144004821777
    5. ']' → logprob: -11.750144004821777
    6. '[' → logprob: -13.500144004821777
    7. '>[' → logprob: -13.875144004821777
    8. ' ][' → logprob: -14.000144004821777
    9. '}[' → logprob: -14.125144004821777
    10. '"][' → logprob: -14.500144004821777

Token 651: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6240566083070007e-06
    2. '][' → logprob: -13.875001907348633
    3. ' c' → logprob: -15.125001907348633
    4. '[c' → logprob: -15.500001907348633
    5. '	c' → logprob: -15.750001907348633
    6. '
' → logprob: -18.250001907348633
    7. '```' → logprob: -18.500001907348633
    8. 'с' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '[' → logprob: -19.625001907348633

Token 652: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.029848605394363403
    2. '[d' → logprob: -3.529848575592041
    3. 'd' → logprob: -9.5298490524292
    4. '[' → logprob: -10.9048490524292
    5. ']' → logprob: -12.6548490524292
    6. ' ][' → logprob: -13.7798490524292
    7. '"][' → logprob: -14.4048490524292
    8. '[r' → logprob: -14.9048490524292
    9. '```' → logprob: -14.9048490524292
    10. ''][' → logprob: -15.0298490524292

Token 653: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5048530030981055e-06
    2. ' d' → logprob: -13.500001907348633
    3. '[d' → logprob: -18.250001907348633
    4. '	d' → logprob: -18.375001907348633
    5. '
' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.500001907348633
    7. ')d' → logprob: -19.750001907348633
    8. ' ' → logprob: -20.125001907348633
    9. '```' → logprob: -20.500001907348633
    10. ']' → logprob: -20.500001907348633

Token 654: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.005806379020214081
    2. '!=' → logprob: -6.0058064460754395
    3. ' <' → logprob: -6.6308064460754395
    4. ']<' → logprob: -7.0058064460754395
    5. ']' → logprob: -7.2558064460754395
    6. ']!=' → logprob: -8.505805969238281
    7. ' !=' → logprob: -10.130805969238281
    8. '<int' → logprob: -10.755805969238281
    9. '<n' → logprob: -10.880805969238281
    10. '<len' → logprob: -11.005805969238281

Token 655: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0034633444156497717
    2. ' <' → logprob: -5.878463268280029
    3. '!=' → logprob: -7.628463268280029
    4. '<int' → logprob: -10.128463745117188
    5. '<c' → logprob: -10.878463745117188
    6. '<n' → logprob: -11.003463745117188
    7. '<len' → logprob: -11.003463745117188
    8. '<v' → logprob: -11.378463745117188
    9. '<p' → logprob: -11.378463745117188
    10. '<w' → logprob: -12.003463745117188

Token 656: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -7.493430894101039e-05
    2. ' cost' → logprob: -9.500075340270996
    3. '(cost' → logprob: -21.00007438659668
    4. '_cost' → logprob: -22.12507438659668
    5. 'Cost' → logprob: -23.75007438659668
    6. '-cost' → logprob: -24.12507438659668
    7. '.cost' → logprob: -24.25007438659668
    8. ' ' → logprob: -25.25007438659668
    9. 'cos' → logprob: -25.25007438659668
    10. '   ' → logprob: -26.12507438659668

Token 657: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11551990360021591
    2. '           ' → logprob: -3.2405200004577637
    3. '               ' → logprob: -3.4905200004577637
    4. ':
' → logprob: -3.6155200004577637
    5. ' continue' → logprob: -5.115520000457764
    6. 'continue' → logprob: -5.615520000457764
    7. '   ' → logprob: -6.490520000457764
    8. '	continue' → logprob: -7.240520000457764
    9. '       ' → logprob: -7.615520000457764
    10. '_continue' → logprob: -9.615519523620605

Token 658: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0227374155074358
    2. '           ' → logprob: -3.897737503051758
    3. ' continue' → logprob: -6.647737503051758
    4. 'continue' → logprob: -7.397737503051758
    5. ':' → logprob: -8.522737503051758
    6. ':
' → logprob: -10.022737503051758
    7. '	continue' → logprob: -11.147737503051758
    8. '   ' → logprob: -11.772737503051758
    9. '                   ' → logprob: -12.272737503051758
    10. '       ' → logprob: -12.397737503051758

Token 659: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.006661131512373686
    2. '           ' → logprob: -5.7566609382629395
    3. ' continue' → logprob: -6.0066609382629395
    4. '               ' → logprob: -7.0066609382629395
    5. '	continue' → logprob: -9.256661415100098
    6. '   ' → logprob: -12.006661415100098
    7. '_continue' → logprob: -12.256661415100098
    8. 'contin' → logprob: -13.756661415100098
    9. '		' → logprob: -14.381661415100098
    10. '                   ' → logprob: -14.631661415100098

Token 660: ' Already' (ID: 72560)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0004740447038784623
    2. ' continue' → logprob: -7.750473976135254
    3. '           ' → logprob: -10.250473976135254
    4. '               ' → logprob: -12.000473976135254
    5. '	continue' → logprob: -13.500473976135254
    6. 'contin' → logprob: -15.375473976135254
    7. 'continu' → logprob: -15.625473976135254
    8. '_continue' → logprob: -15.625473976135254
    9. '   ' → logprob: -17.75047492980957
    10. 'continued' → logprob: -17.87547492980957

Token 661: ' found' (ID: 2491)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.002454964676871896
    2. ' continue' → logprob: -6.12745475769043
    3. '           ' → logprob: -8.62745475769043
    4. '               ' → logprob: -10.25245475769043
    5. '	continue' → logprob: -10.50245475769043
    6. '_continue' → logprob: -10.62745475769043
    7. '```' → logprob: -14.12745475769043
    8. 'contin' → logprob: -14.50245475769043
    9. 'continued' → logprob: -14.62745475769043
    10. '                   ' → logprob: -15.00245475769043

Token 662: ' better' (ID: 3432)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1709648072719574
    2. 'continue' → logprob: -1.9209648370742798
    3. '           ' → logprob: -5.17096471786499
    4. ' continue' → logprob: -5.42096471786499
    5. ' a' → logprob: -8.795965194702148
    6. 'a' → logprob: -8.795965194702148
    7. 'better' → logprob: -9.670965194702148
    8. '                   ' → logprob: -9.670965194702148
    9. '   ' → logprob: -10.170965194702148
    10. '	continue' → logprob: -10.920965194702148

Token 663: ' path' (ID: 3104)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7408751845359802
    2. '               ' → logprob: -1.115875244140625
    3. 'continue' → logprob: -1.865875244140625
    4. ' continue' → logprob: -4.865875244140625
    5. '
' → logprob: -5.365875244140625
    6. ')' → logprob: -5.490875244140625
    7. '_continue' → logprob: -5.865875244140625
    8. '                   ' → logprob: -5.990875244140625
    9. '                
' → logprob: -5.990875244140625
    10. 'cost' → logprob: -6.115875244140625

Token 664: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6613710522651672
    2. 'continue' → logprob: -1.4113709926605225
    3. '           ' → logprob: -1.9113709926605225
    4. ' continue' → logprob: -2.4113709926605225
    5. '	continue' → logprob: -6.911371231079102
    6. '                   ' → logprob: -7.786371231079102
    7. '   ' → logprob: -7.911371231079102
    8. ':' → logprob: -8.286371231079102
    9. ':
' → logprob: -8.786371231079102
    10. '_continue' → logprob: -9.036371231079102

Token 665: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0331566259264946
    2. '           ' → logprob: -3.658156633377075
    3. ' continue' → logprob: -5.658156394958496
    4. 'continue' → logprob: -5.783156394958496
    5. '       ' → logprob: -9.033156394958496
    6. '   ' → logprob: -10.033156394958496
    7. '	continue' → logprob: -10.158156394958496
    8. '                   ' → logprob: -10.658156394958496
    9. '			' → logprob: -11.658156394958496
    10. '		' → logprob: -12.033156394958496

Token 666: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.005052302032709122
    2. ' continue' → logprob: -5.755052089691162
    3. '           ' → logprob: -6.505052089691162
    4. '               ' → logprob: -8.50505256652832
    5. '	continue' → logprob: -8.75505256652832
    6. '_continue' → logprob: -11.88005256652832
    7. '		' → logprob: -12.25505256652832
    8. 'contin' → logprob: -13.25505256652832
    9. '   ' → logprob: -13.63005256652832
    10. '       ' → logprob: -14.13005256652832

Token 667: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018969867378473282
    2. '            
' → logprob: -6.876896858215332
    3. '<|end|>' → logprob: -7.876896858215332
    4. '
' → logprob: -8.126896858215332
    5. 'if' → logprob: -9.751896858215332
    6. '       ' → logprob: -10.501896858215332
    7. '    
' → logprob: -10.626896858215332
    8. '  
' → logprob: -11.251896858215332
    9. '          ' → logprob: -11.376896858215332
    10. '   ' → logprob: -11.626896858215332

Token 668: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010748189873993397
    2. 'if' → logprob: -4.635748386383057
    3. '            
' → logprob: -7.385748386383057
    4. ' if' → logprob: -8.760747909545898
    5. '```' → logprob: -9.260747909545898
    6. 'command' → logprob: -9.760747909545898
    7. '       ' → logprob: -11.135747909545898
    8. 'cmd' → logprob: -11.635747909545898
    9. '          ' → logprob: -12.010747909545898
    10. 'current' → logprob: -12.260747909545898

Token 669: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12267519533634186
    2. '           ' → logprob: -2.2476751804351807
    3. 'cmd' → logprob: -4.99767541885376
    4. '#' (adapté à ' #') → logprob: -6.24767541885376
    5. 'curr' → logprob: -8.122674942016602
    6. 'cur' → logprob: -8.372674942016602
    7. 'command' → logprob: -8.622674942016602
    8. 'current' → logprob: -8.997674942016602
    9. ' if' → logprob: -8.997674942016602
    10. 'board' → logprob: -9.622674942016602

Token 670: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009443559683859348
    2. '#' → logprob: -4.884443759918213
    3. 'cmd' → logprob: -7.259443759918213
    4. 'current' → logprob: -7.759443759918213
    5. 'board' → logprob: -8.384443283081055
    6. 'curr' → logprob: -8.509443283081055
    7. 'cur' → logprob: -9.009443283081055
    8. 'command' → logprob: -9.634443283081055
    9. 'cell' → logprob: -9.759443283081055
    10. 'square' → logprob: -11.634443283081055

Token 671: ' we' (ID: 581)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01267810259014368
    2. '(r' → logprob: -4.387678146362305
    3. ' r' → logprob: -8.762678146362305
    4. ' (' → logprob: -11.512678146362305
    5. '(' → logprob: -13.512678146362305
    6. '   ' → logprob: -15.012678146362305
    7. '	r' → logprob: -16.012678146362305
    8. '_r' → logprob: -16.512678146362305
    9. '[r' → logprob: -16.762678146362305
    10. ' ' → logprob: -17.137678146362305

Token 672: ' reached' (ID: 15237)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.24280788004398346
    2. '==' → logprob: -2.1178078651428223
    3. ' ==' → logprob: -2.4928078651428223
    4. ' r' → logprob: -5.367807865142822
    5. '           ' → logprob: -5.492807865142822
    6. '(r' → logprob: -6.367807865142822
    7. '[r' → logprob: -7.867807865142822
    8. 'have' → logprob: -7.867807865142822
    9. ' have' → logprob: -8.11780834197998
    10. ' are' → logprob: -8.61780834197998

Token 673: ' goal' (ID: 8583)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006745093036442995
    2. ' r' → logprob: -5.006744861602783
    3. '(r' → logprob: -10.506745338439941
    4. ' (' → logprob: -13.006745338439941
    5. '   ' → logprob: -16.006744384765625
    6. ' ' → logprob: -17.631744384765625
    7. '```' → logprob: -17.881744384765625
    8. 'h' → logprob: -18.006744384765625
    9. '(' → logprob: -18.256744384765625
    10. 'c' → logprob: -18.881744384765625

Token 674: ' at' (ID: 540)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3189373314380646
    2. 'and' → logprob: -1.3189373016357422
    3. '           ' → logprob: -5.193937301635742
    4. '               ' → logprob: -10.318937301635742
    5. ' (' → logprob: -10.943937301635742
    6. '            ' → logprob: -11.568937301635742
    7. ',' → logprob: -11.943937301635742
    8. ':' → logprob: -12.193937301635742
    9. 'if' → logprob: -12.193937301635742
    10. ' if' → logprob: -12.318937301635742

Token 675: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.41643139719963074
    2. 'h' → logprob: -1.1664314270019531
    3. '(h' → logprob: -3.666431427001953
    4. '(r' → logprob: -6.791431427001953
    5. ' (' → logprob: -6.791431427001953
    6. ' h' → logprob: -7.291431427001953
    7. ' r' → logprob: -7.416431427001953
    8. '```' → logprob: -11.541431427001953
    9. '   ' → logprob: -11.666431427001953
    10. '(' → logprob: -12.541431427001953

Token 676: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00039289999403990805
    2. ' h' → logprob: -7.875392913818359
    3. 'r' → logprob: -11.37539291381836
    4. ')' → logprob: -14.25039291381836
    5. '(h' → logprob: -14.87539291381836
    6. '   ' → logprob: -16.12539291381836
    7. '           ' → logprob: -16.75039291381836
    8. ',h' → logprob: -17.62539291381836
    9. ' (' → logprob: -17.87539291381836
    10. ',' → logprob: -18.12539291381836

Token 677: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011726059019565582
    2. ' -' → logprob: -6.7511725425720215
    3. '           ' → logprob: -13.00117301940918
    4. '1' → logprob: -15.87617301940918
    5. '–' → logprob: -17.25117301940918
    6. '−' → logprob: -18.25117301940918
    7. '               ' → logprob: -18.62617301940918
    8. ' ' → logprob: -19.12617301940918
    9. '   ' → logprob: -19.12617301940918
    10. '       ' → logprob: -19.25117301940918

Token 678: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024768433067947626
    2. '-' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.627476692199707
    4. '```' → logprob: -15.002476692199707
    5. ' -' → logprob: -15.877476692199707
    6. '   ' → logprob: -16.002477645874023
    7. '
' → logprob: -16.502477645874023
    8. '`' → logprob: -16.877477645874023
    9. '           ' → logprob: -17.377477645874023
    10. ')' → logprob: -17.502477645874023

Token 679: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002335332101210952
    2. ',c' → logprob: -6.127335548400879
    3. ' ,' → logprob: -9.627335548400879
    4. ',r' → logprob: -10.377335548400879
    5. ')' → logprob: -11.627335548400879
    6. ',n' → logprob: -11.627335548400879
    7. '           ' → logprob: -12.377335548400879
    8. ',j' → logprob: -12.502335548400879
    9. ',k' → logprob: -12.627335548400879
    10. ',h' → logprob: -12.627335548400879

Token 680: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.180258191714529e-06
    2. ' -' → logprob: -11.750008583068848
    3. '1' → logprob: -15.500008583068848
    4. ',' → logprob: -16.75000762939453
    5. ')' → logprob: -18.75000762939453
    6. '−' → logprob: -19.37500762939453
    7. '),' → logprob: -19.75000762939453
    8. '```' → logprob: -19.87500762939453
    9. ' ' → logprob: -20.12500762939453
    10. ')-' → logprob: -20.87500762939453

Token 681: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '   ' → logprob: -18.5
    5. '```' → logprob: -19.25
    6. 'c' → logprob: -19.375
    7. '
' → logprob: -20.875
    8. '`' → logprob: -21.125
    9. ')' → logprob: -21.375
    10. '2' → logprob: -22.0625

Token 682: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006434691604226828
    2. ' and' → logprob: -5.256434917449951
    3. 'and' → logprob: -7.381434917449951
    4. ',' → logprob: -7.756434917449951
    5. '           ' → logprob: -10.131434440612793
    6. '):' → logprob: -10.506434440612793
    7. '),' → logprob: -10.631434440612793
    8. '):
' → logprob: -10.881434440612793
    9. ' )' → logprob: -11.131434440612793
    10. '               ' → logprob: -11.756434440612793

Token 683: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5046576261520386
    2. ' and' → logprob: -1.0046576261520386
    3. '           ' → logprob: -3.504657745361328
    4. ',' → logprob: -10.004657745361328
    5. '               ' → logprob: -12.254657745361328
    6. 'if' → logprob: -12.879657745361328
    7. ' if' → logprob: -13.004657745361328
    8. ' with' → logprob: -13.254657745361328
    9. 'with' → logprob: -13.504657745361328
    10. '```' → logprob: -14.129657745361328

Token 684: ' current' (ID: 2208)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.20969825983047485
    2. 'd' → logprob: -1.70969820022583
    3. ' board' → logprob: -5.45969820022583
    4. '(board' → logprob: -6.45969820022583
    5. ' d' → logprob: -7.08469820022583
    6. 'dire' → logprob: -7.58469820022583
    7. 'r' → logprob: -7.95969820022583
    8. 'c' → logprob: -8.584698677062988
    9. 'dist' → logprob: -9.084698677062988
    10. 'direction' → logprob: -9.209698677062988

Token 685: ' square' (ID: 13749)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03986027464270592
    2. 'direction' → logprob: -3.914860248565674
    3. ' d' → logprob: -4.164860248565674
    4. ' direction' → logprob: -5.914860248565674
    5. '_direction' → logprob: -8.039860725402832
    6. '_d' → logprob: -8.789860725402832
    7. '
' → logprob: -9.789860725402832
    8. 'r' → logprob: -9.789860725402832
    9. 'command' → logprob: -10.039860725402832
    10. 'token' → logprob: -10.039860725402832

Token 686: ' command' (ID: 6348)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.29260751605033875
    2. ' ==' → logprob: -1.6676075458526611
    3. '[' → logprob: -3.167607545852661
    4. '==(' → logprob: -4.917607307434082
    5. ')==' → logprob: -5.542607307434082
    6. '[r' → logprob: -5.542607307434082
    7. '```' → logprob: -6.042607307434082
    8. ']==' → logprob: -6.167607307434082
    9. ')' → logprob: -6.792607307434082
    10. '[c' → logprob: -8.167607307434082

Token 687: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10120100528001785
    2. ' ==' → logprob: -2.351201057434082
    3. '[r' → logprob: -8.351201057434082
    4. '()==' → logprob: -8.351201057434082
    5. 'board' → logprob: -9.101201057434082
    6. '[' → logprob: -9.226201057434082
    7. '==-' → logprob: -9.726201057434082
    8. '()' → logprob: -10.101201057434082
    9. '```' → logprob: -10.476201057434082
    10. 'is' → logprob: -10.476201057434082

Token 688: ' Halt' (ID: 120259)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00485646165907383
    2. '5' → logprob: -6.004856586456299
    3. '0' → logprob: -7.629856586456299
    4. '3' → logprob: -7.629856586456299
    5. '=' → logprob: -8.12985610961914
    6. '99' → logprob: -8.37985610961914
    7. '6' → logprob: -8.87985610961914
    8. '2' → logprob: -8.87985610961914
    9. '1' → logprob: -9.00485610961914
    10. '-' → logprob: -9.00485610961914

Token 689: ' (' (ID: 350)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6240217089653015
    2. ' ==' → logprob: -1.1240217685699463
    3. ' and' → logprob: -2.3740217685699463
    4. 'and' → logprob: -3.7490217685699463
    5. ':' → logprob: -4.874021530151367
    6. '           ' → logprob: -5.124021530151367
    7. '[' → logprob: -6.124021530151367
    8. ' (' → logprob: -6.374021530151367
    9. '=' → logprob: -7.374021530151367
    10. '0' → logprob: -7.374021530151367

Token 690: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6123490929603577
    2. 'board' → logprob: -1.612349033355713
    3. '0' → logprob: -2.612349033355713
    4. '99' → logprob: -2.737349033355713
    5. '1' → logprob: -3.362349033355713
    6. '5' → logprob: -3.612349033355713
    7. '2' → logprob: -3.737349033355713
    8. '-' → logprob: -4.237349033355713
    9. '3' → logprob: -5.112349033355713
    10. '6' → logprob: -5.612349033355713

Token 691: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4766504764556885
    2. '):' → logprob: -1.7266504764556885
    3. '):
' → logprob: -2.3516504764556885
    4. ' and' → logprob: -2.4766504764556885
    5. 'and' → logprob: -4.226650238037109
    6. '),' → logprob: -5.476650238037109
    7. ' or' → logprob: -6.476650238037109
    8. 'if' → logprob: -8.10165023803711
    9. ':' → logprob: -8.10165023803711
    10. '):

' → logprob: -8.22665023803711

Token 692: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14310245215892792
    2. '           ' → logprob: -2.0181024074554443
    3. ' and' → logprob: -8.893102645874023
    4. ' if' → logprob: -9.143102645874023
    5. 'and' → logprob: -9.893102645874023
    6. ' or' → logprob: -10.518102645874023
    7. ' continue' → logprob: -10.518102645874023
    8. '                   ' → logprob: -10.768102645874023
    9. '```' → logprob: -11.018102645874023
    10. '              ' → logprob: -11.518102645874023

Token 693: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4027954339981079
    2. 'if' → logprob: -1.402795433998108
    3. ' if' → logprob: -2.5277953147888184
    4. '               ' → logprob: -5.152795314788818
    5. '   ' → logprob: -11.277795791625977
    6. '            ' → logprob: -13.152795791625977
    7. '       ' → logprob: -13.277795791625977
    8. '                   ' → logprob: -13.277795791625977
    9. '          ' → logprob: -13.402795791625977
    10. '              ' → logprob: -14.027795791625977

Token 694: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07250716537237167
    2. '           ' → logprob: -3.32250714302063
    3. ' if' → logprob: -3.69750714302063
    4. 'break' → logprob: -5.322507381439209
    5. '               ' → logprob: -5.697507381439209
    6. '#' → logprob: -7.572507381439209
    7. 'return' → logprob: -8.32250690460205
    8. ' break' → logprob: -9.69750690460205
    9. '   ' → logprob: -10.69750690460205
    10. ' #' → logprob: -12.82250690460205

Token 695: ' robot' (ID: 20808)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2983664274215698
    2. 'break' → logprob: -1.5483664274215698
    3. ' if' → logprob: -3.4233665466308594
    4. 'return' → logprob: -5.173366546630859
    5. ' break' → logprob: -5.548366546630859
    6. '           ' → logprob: -6.173366546630859
    7. '#' → logprob: -7.423366546630859
    8. '       ' → logprob: -8.92336654663086
    9. '               ' → logprob: -9.17336654663086
    10. '   ' → logprob: -9.29836654663086

Token 696: ' stops' (ID: 29924)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25644558668136597
    2. ' can' → logprob: -2.1314456462860107
    3. ' must' → logprob: -3.3814456462860107
    4. ' should' → logprob: -4.506445407867432
    5. 'must' → logprob: -4.506445407867432
    6. '#' → logprob: -4.756445407867432
    7. ' is' → logprob: -5.131445407867432
    8. ' has' → logprob: -5.131445407867432
    9. 'can' → logprob: -5.131445407867432
    10. ' if' → logprob: -5.256445407867432

Token 697: ' here' (ID: 2105)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01660984195768833
    2. ' and' → logprob: -4.7666096687316895
    3. 'and' → logprob: -5.1416096687316895
    4. ' if' → logprob: -6.7666096687316895
    5. ',' → logprob: -7.3916096687316895
    6. 'if' → logprob: -8.266610145568848
    7. '               ' → logprob: -9.766610145568848
    8. '.' → logprob: -11.391610145568848
    9. ':' → logprob: -12.016610145568848
    10. '       ' → logprob: -12.766610145568848

Token 698: ' successfully' (ID: 12836)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005228889058344066
    2. ' if' → logprob: -8.00052261352539
    3. ',' → logprob: -9.50052261352539
    4. 'if' → logprob: -9.50052261352539
    5. ' and' → logprob: -11.00052261352539
    6. 'and' → logprob: -12.37552261352539
    7. '.' → logprob: -12.50052261352539
    8. '               ' → logprob: -12.50052261352539
    9. '       ' → logprob: -12.87552261352539
    10. '          ' → logprob: -12.87552261352539

Token 699: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.129266067640856e-05
    2. ',' → logprob: -11.375020980834961
    3. ' if' → logprob: -12.500020980834961
    4. 'if' → logprob: -13.250020980834961
    5. '          ' → logprob: -13.625020980834961
    6. '<|end|>' → logprob: -13.750020980834961
    7. '       ' → logprob: -14.875020980834961
    8. '.' → logprob: -15.250020980834961
    9. '		' → logprob: -15.375020980834961
    10. 'and' → logprob: -15.625020980834961

Token 700: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.375538163818419e-05
    2. ' if' → logprob: -10.500083923339844
    3. '       ' → logprob: -10.750083923339844
    4. '```' → logprob: -11.250083923339844
    5. ',' → logprob: -12.125083923339844
    6. 'if' → logprob: -12.375083923339844
    7. '          ' → logprob: -12.875083923339844
    8. '               ' → logprob: -13.000083923339844
    9. '   ' → logprob: -13.125083923339844
    10. ' and' → logprob: -13.125083923339844

Token 701: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2538597583770752
    2. '           ' → logprob: -1.5038597583770752
    3. ' if' → logprob: -6.253859519958496
    4. '       ' → logprob: -12.503859519958496
    5. '          ' → logprob: -14.503859519958496
    6. '```' → logprob: -14.503859519958496
    7. '		' → logprob: -15.128859519958496
    8. '	if' → logprob: -15.378859519958496
    9. 'If' → logprob: -16.128860473632812
    10. '               ' → logprob: -16.253860473632812

Token 702: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00021688752167392522
    2. '(r' → logprob: -8.875216484069824
    3. ' r' → logprob: -9.500216484069824
    4. ' (' → logprob: -13.625216484069824
    5. '   ' → logprob: -14.625216484069824
    6. '(' → logprob: -15.250216484069824
    7. '	r' → logprob: -15.750216484069824
    8. 'board' → logprob: -16.87521743774414
    9. ' ' → logprob: -17.37521743774414
    10. ' ' → logprob: -18.12521743774414

Token 703: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08895255625247955
    2. '==' → logprob: -2.4639525413513184
    3. '==(' → logprob: -11.713953018188477
    4. ']==' → logprob: -13.338953018188477
    5. ')==' → logprob: -13.713953018188477
    6. '=' → logprob: -14.463953018188477
    7. ',' → logprob: -15.088953018188477
    8. '	' → logprob: -15.088953018188477
    9. '==
' → logprob: -15.213953018188477
    10. ' =' → logprob: -15.838953018188477

Token 704: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0011876109056174755
    2. ' h' → logprob: -6.751187801361084
    3. '(h' → logprob: -11.001187324523926
    4. ' (' → logprob: -15.001187324523926
    5. '           ' → logprob: -15.876187324523926
    6. '	h' → logprob: -16.001188278198242
    7. '   ' → logprob: -16.501188278198242
    8. '[h' → logprob: -17.251188278198242
    9. '<h' → logprob: -17.626188278198242
    10. '       ' → logprob: -18.501188278198242

Token 705: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010328111238777637
    2. ' -' → logprob: -6.876032829284668
    3. '1' → logprob: -17.12603187561035
    4. '–' → logprob: -18.12603187561035
    5. '−' → logprob: -18.87603187561035
    6. '()-' → logprob: -19.75103187561035
    7. '           ' → logprob: -20.12603187561035
    8. '       ' → logprob: -20.50103187561035
    9. '   ' → logprob: -20.62603187561035
    10. ' ' → logprob: -20.75103187561035

Token 706: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '-' → logprob: -18.875
    4. '   ' → logprob: -20.625
    5. '```' → logprob: -20.75
    6. '
' → logprob: -21.0
    7. '

' → logprob: -22.0
    8. '۱' → logprob: -22.5
    9. '2' → logprob: -22.5625
    10. ' ' → logprob: -23.3125

Token 707: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0485946387052536
    2. 'and' → logprob: -3.0485947132110596
    3. '	and' → logprob: -12.17359447479248
    4. '           ' → logprob: -14.04859447479248
    5. ',' → logprob: -15.17359447479248
    6. '       ' → logprob: -15.29859447479248
    7. ' и' → logprob: -15.79859447479248
    8. '&&' → logprob: -16.173595428466797
    9. '<|end|>' → logprob: -16.298595428466797
    10. '   ' → logprob: -16.298595428466797

Token 708: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019286326132714748
    2. ' c' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.626928329467773
    4. '	c' → logprob: -17.751928329467773
    5. '    ' → logprob: -20.626928329467773
    6. '       ' → logprob: -21.251928329467773
    7. '           ' → logprob: -21.251928329467773
    8. '     ' → logprob: -21.626928329467773
    9. '               ' → logprob: -22.376928329467773
    10. ' ' → logprob: -22.376928329467773

Token 709: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10075456649065018
    2. ' ==' → logprob: -2.350754499435425
    3. '==(' → logprob: -7.600754737854004
    4. ']==' → logprob: -10.600754737854004
    5. ')==' → logprob: -10.975754737854004
    6. '==
' → logprob: -13.225754737854004
    7. '()==' → logprob: -13.475754737854004
    8. '```' → logprob: -14.350754737854004
    9. '']==' → logprob: -14.725754737854004
    10. '===' → logprob: -14.725754737854004

Token 710: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00029923528200015426
    2. ' w' → logprob: -8.125299453735352
    3. '(w' → logprob: -12.750299453735352
    4. '   ' → logprob: -15.125299453735352
    5. '	w' → logprob: -17.50029945373535
    6. ' ' → logprob: -17.87529945373535
    7. '       ' → logprob: -18.50029945373535
    8. '           ' → logprob: -18.62529945373535
    9. '    ' → logprob: -19.00029945373535
    10. '  ' → logprob: -19.25029945373535

Token 711: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.6550729419104755e-05
    2. ' -' → logprob: -10.250036239624023
    3. 'and' → logprob: -14.500036239624023
    4. ' and' → logprob: -16.125036239624023
    5. '[-' → logprob: -16.125036239624023
    6. '[' → logprob: -16.375036239624023
    7. '1' → logprob: -16.625036239624023
    8. '   ' → logprob: -16.875036239624023
    9. '```' → logprob: -17.375036239624023
    10. '()-' → logprob: -17.625036239624023

Token 712: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '-' → logprob: -16.062501907348633
    4. '2' → logprob: -17.125001907348633
    5. '```' → logprob: -17.687501907348633
    6. '۱' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.062501907348633
    8. '１' → logprob: -18.187501907348633
    9. '11' → logprob: -18.312501907348633
    10. '
' → logprob: -18.312501907348633

Token 713: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2520172894001007
    2. 'and' → logprob: -1.5020172595977783
    3. '           ' → logprob: -9.5020170211792
    4. '               ' → logprob: -12.3770170211792
    5. '   ' → logprob: -12.5020170211792
    6. '       ' → logprob: -12.8770170211792
    7. ':
' → logprob: -13.7520170211792
    8. '          ' → logprob: -14.1270170211792
    9. '                   ' → logprob: -15.6270170211792
    10. ' ' → logprob: -15.7520170211792

Token 714: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07920723408460617
    2. ' and' → logprob: -2.579207181930542
    3. 'and' → logprob: -8.829207420349121
    4. '           ' → logprob: -9.329207420349121
    5. ' if' → logprob: -9.829207420349121
    6. '                   ' → logprob: -11.704207420349121
    7. ',' → logprob: -12.704207420349121
    8. '                
' → logprob: -12.954207420349121
    9. '              ' → logprob: -13.079207420349121
    10. ' ' → logprob: -13.579207420349121

Token 715: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05147535726428032
    2. '               ' → logprob: -3.0514752864837646
    3. ' if' → logprob: -5.926475524902344
    4. '           ' → logprob: -8.551475524902344
    5. '                   ' → logprob: -11.176475524902344
    6. 'break' → logprob: -12.176475524902344
    7. 'print' → logprob: -13.426475524902344
    8. '   ' → logprob: -13.926475524902344
    9. 'return' → logprob: -14.551475524902344
    10. 'import' → logprob: -15.551475524902344

Token 716: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010909045115113258
    2. 'print' → logprob: -4.760909080505371
    3. 'return' → logprob: -6.385909080505371
    4. '           ' → logprob: -7.885909080505371
    5. 'break' → logprob: -8.635909080505371
    6. '               ' → logprob: -10.260909080505371
    7. ' if' → logprob: -11.510909080505371
    8. 'command' → logprob: -12.760909080505371
    9. '#' → logprob: -12.885909080505371
    10. '       ' → logprob: -13.510909080505371

Token 717: ' problem' (ID: 4792)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002731644082814455
    2. 'board' → logprob: -6.627731800079346
    3. 'cmd' → logprob: -7.502731800079346
    4. 'command' → logprob: -8.252731323242188
    5. 'square' → logprob: -8.377731323242188
    6. 'current' → logprob: -8.627731323242188
    7. 'cell' → logprob: -9.627731323242188
    8. ' if' → logprob: -9.752731323242188
    9. 'curr' → logprob: -10.627731323242188
    10. '#' → logprob: -11.002731323242188

Token 718: ' states' (ID: 9407)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1618044674396515
    2. 'if' → logprob: -2.786804437637329
    3. ' if' → logprob: -2.911804437637329
    4. '               ' → logprob: -4.036804676055908
    5. '#' → logprob: -6.661804676055908
    6. '==' → logprob: -6.786804676055908
    7. '       ' → logprob: -6.911804676055908
    8. ':' → logprob: -6.911804676055908
    9. '[' → logprob: -6.911804676055908
    10. '   ' → logprob: -6.911804676055908

Token 719: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8337650299072266
    2. '               ' → logprob: -0.8337650299072266
    3. 'break' → logprob: -2.3337650299072266
    4. 'board' → logprob: -3.5837650299072266
    5. '                   ' → logprob: -6.208765029907227
    6. ' if' → logprob: -6.208765029907227
    7. 'that' → logprob: -6.333765029907227
    8. '           ' → logprob: -8.208765029907227
    9. 'return' → logprob: -8.958765029907227
    10. ' that' → logprob: -9.708765029907227

Token 720: ' Halt' (ID: 120259)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.3713089227676392
    2. 'b' → logprob: -1.4963089227676392
    3. 'if' → logprob: -1.7463089227676392
    4. '4' → logprob: -2.1213088035583496
    5. 's' → logprob: -2.7463088035583496
    6. 'd' → logprob: -2.7463088035583496
    7. '           ' → logprob: -3.7463088035583496
    8. 'continue' → logprob: -4.37130880355835
    9. ' if' → logprob: -4.62130880355835
    10. 'return' → logprob: -4.62130880355835

Token 721: ' command' (ID: 6348)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.4825555980205536
    2. ' command' → logprob: -0.982555627822876
    3. '           ' → logprob: -5.857555389404297
    4. '<|end|>' → logprob: -6.357555389404297
    5. '               ' → logprob: -7.232555389404297
    6. '_command' → logprob: -7.857555389404297
    7. '(command' → logprob: -7.857555389404297
    8. 'if' → logprob: -7.982555389404297
    9. 'break' → logprob: -8.607555389404297
    10. '
' → logprob: -8.732555389404297

Token 722: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6435539126396179
    2. ' ==' → logprob: -1.7685539722442627
    3. ' in' → logprob: -2.8935539722442627
    4. 'if' → logprob: -3.0185539722442627
    5. ' if' → logprob: -3.1435539722442627
    6. ' is' → logprob: -3.3935539722442627
    7. ':' → logprob: -4.268553733825684
    8. 'in' → logprob: -4.393553733825684
    9. '           ' → logprob: -4.393553733825684
    10. '=' → logprob: -4.643553733825684

Token 723: ' assigned' (ID: 21482)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.18624520301818848
    2. '4' → logprob: -1.8112452030181885
    3. ' board' → logprob: -5.561244964599609
    4. '(board' → logprob: -7.811244964599609
    5. ' ' → logprob: -8.06124496459961
    6. '#' → logprob: -8.06124496459961
    7. '   ' → logprob: -8.43624496459961
    8. '```' → logprob: -8.81124496459961
    9. 'allowed' → logprob: -8.93624496459961
    10. 'present' → logprob: -8.93624496459961

Token 724: ' to' (ID: 316)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.24849985539913177
    2. 'to' → logprob: -2.248499870300293
    3. ' and' → logprob: -2.498499870300293
    4. '           ' → logprob: -4.498499870300293
    5. '               ' → logprob: -4.623499870300293
    6. ' to' → logprob: -4.748499870300293
    7. '==' → logprob: -6.998499870300293
    8. 'if' → logprob: -8.373499870300293
    9. ',' → logprob: -8.623499870300293
    10. 'only' → logprob: -8.623499870300293

Token 725: ' goal' (ID: 8583)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.28702929615974426
    2. '4' → logprob: -1.4120292663574219
    3. 'the' → logprob: -5.287029266357422
    4. 'this' → logprob: -8.662029266357422
    5. ' board' → logprob: -8.662029266357422
    6. 'that' → logprob: -8.662029266357422
    7. 'square' → logprob: -9.287029266357422
    8. ' ' → logprob: -9.662029266357422
    9. '   ' → logprob: -10.662029266357422
    10. '(board' → logprob: -10.787029266357422

Token 726: ' square' (ID: 13749)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0955452919006348
    2. 'and' → logprob: -1.0955452919006348
    3. '           ' → logprob: -1.3455452919006348
    4. '               ' → logprob: -3.5955452919006348
    5. 'square' → logprob: -4.220545291900635
    6. ' if' → logprob: -5.095545291900635
    7. 'cell' → logprob: -5.220545291900635
    8. ',' → logprob: -5.470545291900635
    9. ' square' → logprob: -5.720545291900635
    10. 'if' → logprob: -5.845545291900635

Token 727: '.
' (ID: 558)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14422443509101868
    2. 'and' → logprob: -2.6442244052886963
    3. '           ' → logprob: -2.8942244052886963
    4. '               ' → logprob: -5.019224643707275
    5. ':' → logprob: -7.894224643707275
    6. ':
' → logprob: -7.894224643707275
    7. ',' → logprob: -8.144224166870117
    8. ' if' → logprob: -8.769224166870117
    9. '                   ' → logprob: -10.644224166870117
    10. ' or' → logprob: -11.394224166870117

Token 728: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4454813301563263
    2. 'if' → logprob: -1.195481300354004
    3. '           ' → logprob: -3.070481300354004
    4. ' if' → logprob: -4.570481300354004
    5. 'break' → logprob: -9.820481300354004
    6. '                   ' → logprob: -9.945481300354004
    7. 'return' → logprob: -9.945481300354004
    8. 'print' → logprob: -11.320481300354004
    9. '#' → logprob: -12.695481300354004
    10. '   ' → logprob: -12.820481300354004

Token 729: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23236806690692902
    2. '               ' → logprob: -1.9823681116104126
    3. 'return' → logprob: -3.232367992401123
    4. ' if' → logprob: -4.357367992401123
    5. 'break' → logprob: -4.607367992401123
    6. '           ' → logprob: -4.982367992401123
    7. '                   ' → logprob: -8.607368469238281
    8. ' return' → logprob: -8.732368469238281
    9. 'print' → logprob: -9.607368469238281
    10. ' break' → logprob: -10.607368469238281

Token 730: ' Because' (ID: 13602)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002895571291446686
    2. 'break' → logprob: -6.377895355224609
    3. '               ' → logprob: -7.002895355224609
    4. '#' → logprob: -9.25289535522461
    5. '           ' → logprob: -9.37789535522461
    6. ' if' → logprob: -9.75289535522461
    7. 'return' → logprob: -10.50289535522461
    8. 'print' → logprob: -11.50289535522461
    9. '                   ' → logprob: -12.75289535522461
    10. 'If' → logprob: -13.37789535522461

Token 731: ' robot' (ID: 20808)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.00015562419139314443
    2. ' board' → logprob: -9.750155448913574
    3. '4' → logprob: -10.125155448913574
    4. '(board' → logprob: -11.250155448913574
    5. '   ' → logprob: -11.500155448913574
    6. '#' → logprob: -12.000155448913574
    7. 'True' → logprob: -12.125155448913574
    8. 'False' → logprob: -12.375155448913574
    9. 'r' → logprob: -12.500155448913574
    10. 'command' → logprob: -13.500155448913574

Token 732: ' executes' (ID: 119297)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.7281489372253418
    2. 'st' → logprob: -1.7281489372253418
    3. 'can' → logprob: -2.728148937225342
    4. ' must' → logprob: -2.853148937225342
    5. 'commands' → logprob: -2.978148937225342
    6. ' can' → logprob: -3.978148937225342
    7. ' stops' → logprob: -3.978148937225342
    8. '               ' → logprob: -4.353148937225342
    9. 'is' → logprob: -4.353148937225342
    10. 'should' → logprob: -4.478148937225342

Token 733: ' Halt' (ID: 120259)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.48389923572540283
    2. 'the' → logprob: -1.8588992357254028
    3. '4' → logprob: -2.8588991165161133
    4. 'commands' → logprob: -2.8588991165161133
    5. 'break' → logprob: -3.2338991165161133
    6. 'only' → logprob: -4.483899116516113
    7. 'command' → logprob: -4.858899116516113
    8. 'all' → logprob: -4.858899116516113
    9. '0' → logprob: -4.983899116516113
    10. 'continue' → logprob: -4.983899116516113

Token 734: ' automatically' (ID: 14188)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'command' → logprob: -1.1321115493774414
    2. ' here' → logprob: -1.3821115493774414
    3. ',' → logprob: -1.5071115493774414
    4. ' command' → logprob: -2.3821115493774414
    5. '               ' → logprob: -2.8821115493774414
    6. '           ' → logprob: -3.6321115493774414
    7. 'here' → logprob: -4.632111549377441
    8. ' immediately' → logprob: -5.382111549377441
    9. 'im' → logprob: -5.882111549377441
    10. ':
' → logprob: -6.132111549377441

Token 735: ' unless' (ID: 12604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3611980676651001
    2. ',' → logprob: -1.2361980676651
    3. ' and' → logprob: -5.7361979484558105
    4. ' at' → logprob: -6.2361979484558105
    5. 'and' → logprob: -6.2361979484558105
    6. ' if' → logprob: -6.3611979484558105
    7. '                   ' → logprob: -6.7361979484558105
    8. 'if' → logprob: -7.1111979484558105
    9. 'return' → logprob: -7.3611979484558105
    10. '.' → logprob: -7.8611979484558105

Token 736: ' player' (ID: 5033)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.1764034032821655
    2. 'board' → logprob: -1.4264034032821655
    3. 'dist' → logprob: -1.9264034032821655
    4. 'False' → logprob: -2.551403522491455
    5. 'c' → logprob: -2.676403522491455
    6. 'd' → logprob: -3.301403522491455
    7. 'not' → logprob: -3.426403522491455
    8. 'turn' → logprob: -4.051403522491455
    9. 'r' → logprob: -4.176403522491455
    10. 'commands' → logprob: -4.551403522491455

Token 737: ' overrides' (ID: 69813)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.11053255945444107
    2. ' overrides' → logprob: -3.360532522201538
    3. 'explicit' → logprob: -4.110532760620117
    4. 'changes' → logprob: -4.735532760620117
    5. 'commands' → logprob: -4.860532760620117
    6. 'dec' → logprob: -4.985532760620117
    7. ' explicitly' → logprob: -5.610532760620117
    8. ' chooses' → logprob: -5.735532760620117
    9. 'inter' → logprob: -5.985532760620117
    10. 'provid' → logprob: -6.235532760620117

Token 738: ',
' (ID: 412)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.103635311126709
    2. ',' → logprob: -1.728635311126709
    3. ' with' → logprob: -1.728635311126709
    4. '           ' → logprob: -1.853635311126709
    5. ':
' → logprob: -3.103635311126709
    6. ' and' → logprob: -3.353635311126709
    7. 'with' → logprob: -3.978635311126709
    8. ' if' → logprob: -3.978635311126709
    9. ',
' → logprob: -5.228635311126709
    10. ' by' → logprob: -5.228635311126709

Token 739: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011616658419370651
    2. ' continue' → logprob: -5.6366167068481445
    3. '           ' → logprob: -5.7616167068481445
    4. 'continue' → logprob: -5.7616167068481445
    5. '#' → logprob: -7.1366167068481445
    6. '                   ' → logprob: -7.8866167068481445
    7. ' if' → logprob: -8.511616706848145
    8. 'if' → logprob: -9.011616706848145
    9. 'return' → logprob: -9.761616706848145
    10. 'break' → logprob: -10.761616706848145

Token 740: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6382136940956116
    2. 'continue' → logprob: -1.1382136344909668
    3. '               ' → logprob: -2.013213634490967
    4. '#' (adapté à ' #') → logprob: -4.513213634490967
    5. 'break' → logprob: -5.763213634490967
    6. '                   ' → logprob: -6.513213634490967
    7. '           ' → logprob: -7.013213634490967
    8. ' break' → logprob: -7.388213634490967
    9. ' if' → logprob: -8.513214111328125
    10. 'if' → logprob: -8.763214111328125

Token 741: ' we' (ID: 581)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.031751278787851334
    2. 'if' → logprob: -4.5317511558532715
    3. 'return' → logprob: -4.5317511558532715
    4. '               ' → logprob: -5.1567511558532715
    5. 'break' → logprob: -6.1567511558532715
    6. '#' → logprob: -6.7817511558532715
    7. '           ' → logprob: -7.4067511558532715
    8. ' print' → logprob: -9.65675163269043
    9. ' if' → logprob: -11.03175163269043
    10. '#print' → logprob: -11.65675163269043

Token 742: ' can' (ID: 665)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0028936786111444235
    2. ' print' → logprob: -6.377893447875977
    3. 'can' → logprob: -7.502893447875977
    4. 'return' → logprob: -7.877893447875977
    5. ' can' → logprob: -8.627893447875977
    6. 'break' → logprob: -10.002893447875977
    7. '#print' → logprob: -11.377893447875977
    8. '               ' → logprob: -11.877893447875977
    9. 'output' → logprob: -12.252893447875977
    10. 'should' → logprob: -12.502893447875977

Token 743: ' stop' (ID: 5666)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5706624388694763
    2. 'return' → logprob: -0.9456624388694763
    3. 'break' → logprob: -3.445662498474121
    4. 'output' → logprob: -4.695662498474121
    5. ' return' → logprob: -6.320662498474121
    6. 'continue' → logprob: -7.070662498474121
    7. 'stop' → logprob: -7.695662498474121
    8. '```' → logprob: -7.820662498474121
    9. ' print' → logprob: -8.445662498474121
    10. ' break' → logprob: -8.445662498474121

Token 744: ' and' (ID: 326)
  Prédit: 'here'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'here' → logprob: -0.9868330359458923
    2. '               ' → logprob: -1.361833095550537
    3. ' here' → logprob: -1.736833095550537
    4. '           ' → logprob: -2.611833095550537
    5. 'return' → logprob: -2.861833095550537
    6. 'break' → logprob: -3.611833095550537
    7. '.' → logprob: -3.986833095550537
    8. 'and' → logprob: -4.861833095550537
    9. 'print' → logprob: -5.611833095550537
    10. '                   ' → logprob: -6.611833095550537

Token 745: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029843976721167564
    2. 'return' → logprob: -3.529844045639038
    3. 'break' → logprob: -9.279844284057617
    4. ' print' → logprob: -15.779844284057617
    5. '           ' → logprob: -16.279844284057617
    6. ' return' → logprob: -17.279844284057617
    7. '```' → logprob: -18.904844284057617
    8. '               ' → logprob: -19.404844284057617
    9. '       ' → logprob: -19.529844284057617
    10. '
' → logprob: -19.904844284057617

Token 746: ' minimal' (ID: 19957)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.07890499383211136
    2. '(cost' → logprob: -2.5789051055908203
    3. ' cost' → logprob: -11.20390510559082
    4. 'dist' → logprob: -13.70390510559082
    5. '
' → logprob: -15.95390510559082
    6. 'print' → logprob: -16.20390510559082
    7. 'str' → logprob: -16.45390510559082
    8. '(str' → logprob: -16.82890510559082
    9. '   ' → logprob: -17.20390510559082
    10. '(dist' → logprob: -17.70390510559082

Token 747: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.01772163063287735
    2. '(cost' → logprob: -4.142721652984619
    3. ' cost' → logprob: -6.642721652984619
    4. 'print' → logprob: -7.892721652984619
    5. 'result' → logprob: -13.392721176147461
    6. '(' → logprob: -13.642721176147461
    7. '   ' → logprob: -13.767721176147461
    8. '
' → logprob: -14.017721176147461
    9. '_cost' → logprob: -14.017721176147461
    10. '           ' → logprob: -14.267721176147461

Token 748: '.
' (ID: 558)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.5367313027381897
    2. '           ' → logprob: -0.9117313027381897
    3. '(' → logprob: -5.286731243133545
    4. '               ' → logprob: -5.411731243133545
    5. ',' → logprob: -5.786731243133545
    6. '       ' → logprob: -8.536731719970703
    7. 'cost' → logprob: -8.661731719970703
    8. 'print' → logprob: -8.911731719970703
    9. '                   ' → logprob: -9.286731719970703
    10. '(c' → logprob: -9.911731719970703

Token 749: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31463369727134705
    2. 'print' → logprob: -1.3146337270736694
    3. '               ' → logprob: -7.189633846282959
    4. 'return' → logprob: -8.0646333694458
    5. '       ' → logprob: -8.8146333694458
    6. '
' → logprob: -9.6896333694458
    7. '```' → logprob: -9.9396333694458
    8. ' print' → logprob: -10.5646333694458
    9. '                   ' → logprob: -12.1896333694458
    10. '            
' → logprob: -12.6896333694458

Token 750: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7120533811976202e-05
    2. '           ' → logprob: -11.000017166137695
    3. ' print' → logprob: -16.000017166137695
    4. '               ' → logprob: -16.250017166137695
    5. 'break' → logprob: -17.000017166137695
    6. '```' → logprob: -17.750017166137695
    7. '       ' → logprob: -17.875017166137695
    8. 'if' → logprob: -19.375017166137695
    9. 'return' → logprob: -19.875017166137695
    10. '            
' → logprob: -20.125017166137695

Token 751: ' We' (ID: 1416)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001266613689949736
    2. '           ' → logprob: -9.000126838684082
    3. 'if' → logprob: -12.750126838684082
    4. ' print' → logprob: -15.625126838684082
    5. '               ' → logprob: -15.750126838684082
    6. 'break' → logprob: -17.875125885009766
    7. '       ' → logprob: -18.875125885009766
    8. '```' → logprob: -18.875125885009766
    9. '#print' → logprob: -18.875125885009766
    10. '                   ' → logprob: -20.375125885009766

Token 752: ' do' (ID: 621)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2828969955444336
    2. '               ' → logprob: -1.6578969955444336
    3. 'print' → logprob: -3.2828969955444336
    4. 'break' → logprob: -5.032896995544434
    5. '                   ' → logprob: -5.782896995544434
    6. '
' → logprob: -6.157896995544434
    7. '       ' → logprob: -6.407896995544434
    8. 'return' → logprob: -6.407896995544434
    9. ' break' → logprob: -7.407896995544434
    10. 'continue' → logprob: -7.657896995544434

Token 753: ' NOT' (ID: 7116)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35293206572532654
    2. 'not' → logprob: -1.727932095527649
    3. '           ' → logprob: -2.9779319763183594
    4. 'break' → logprob: -2.9779319763183594
    5. ' not' → logprob: -4.977931976318359
    6. 'if' → logprob: -5.602931976318359
    7. '               ' → logprob: -6.227931976318359
    8. 'n't' → logprob: -6.852931976318359
    9. ' print' → logprob: -7.102931976318359
    10. '```' → logprob: -7.852931976318359

Token 754: ' pay' (ID: 2777)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006998073076829314
    2. ' print' → logprob: -7.750699996948242
    3. 'return' → logprob: -9.000699996948242
    4. '           ' → logprob: -9.500699996948242
    5. 'break' → logprob: -10.125699996948242
    6. '```' → logprob: -11.000699996948242
    7. '
' → logprob: -12.625699996948242
    8. 'import' → logprob: -13.000699996948242
    9. '   ' → logprob: -13.000699996948242
    10. '               ' → logprob: -13.250699996948242

Token 755: ' anything' (ID: 6137)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5738863945007324
    2. 'print' → logprob: -1.0738863945007324
    3. '0' → logprob: -2.5738863945007324
    4. '
' → logprob: -4.948886394500732
    5. ' cost' → logprob: -5.198886394500732
    6. 'break' → logprob: -6.323886394500732
    7. 'for' → logprob: -7.073886394500732
    8. ' ' → logprob: -7.198886394500732
    9. '(cost' → logprob: -7.573886394500732
    10. ' print' → logprob: -7.698886394500732

Token 756: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18502449989318848
    2. '               ' → logprob: -1.8100244998931885
    3. '.' → logprob: -6.810024261474609
    4. 'print' → logprob: -6.935024261474609
    5. '                   ' → logprob: -7.185024261474609
    6. '(' → logprob: -7.935024261474609
    7. '       ' → logprob: -7.935024261474609
    8. ',' → logprob: -8.06002426147461
    9. ')' → logprob: -8.68502426147461
    10. 'return' → logprob: -9.06002426147461

Token 757: ' Halt' (ID: 120259)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.560077428817749
    2. 'print' → logprob: -2.310077428817749
    3. ' the' → logprob: -2.435077428817749
    4. 'over' → logprob: -2.685077428817749
    5. '0' → logprob: -3.435077428817749
    6. 'breaking' → logprob: -3.685077428817749
    7. 'explicit' → logprob: -4.060077667236328
    8. 'break' → logprob: -4.060077667236328
    9. 'printing' → logprob: -4.185077667236328
    10. 'this' → logprob: -4.310077667236328

Token 758: ' command' (ID: 6348)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22899048030376434
    2. '               ' → logprob: -2.3539905548095703
    3. 'print' → logprob: -2.9789905548095703
    4. '
' → logprob: -3.2289905548095703
    5. '       ' → logprob: -5.10399055480957
    6. 'return' → logprob: -6.10399055480957
    7. ')' → logprob: -6.22899055480957
    8. '                   ' → logprob: -6.35399055480957
    9. ':
' → logprob: -6.60399055480957
    10. '(' → logprob: -7.22899055480957

Token 759: ' since' (ID: 3630)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026994242798537016
    2. '               ' → logprob: -6.127699375152588
    3. 'print' → logprob: -8.127699851989746
    4. '
' → logprob: -9.377699851989746
    5. ',' → logprob: -10.252699851989746
    6. '       ' → logprob: -10.377699851989746
    7. '                   ' → logprob: -11.377699851989746
    8. '            
' → logprob: -11.377699851989746
    9. 'return' → logprob: -11.752699851989746
    10. ' and' → logprob: -12.127699851989746

Token 760: ' player' (ID: 5033)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.46465691924095154
    2. 'board' → logprob: -1.214656949043274
    3. '4' → logprob: -3.4646568298339844
    4. 'the' → logprob: -3.8396568298339844
    5. ' True' → logprob: -4.714656829833984
    6. 'it' → logprob: -4.964656829833984
    7. 'cost' → logprob: -6.464656829833984
    8. 'command' → logprob: -7.089656829833984
    9. 'False' → logprob: -7.339656829833984
    10. '#' → logprob: -7.339656829833984

Token 761: ' can't' (ID: 8535)
  Prédit: 'does'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'does' → logprob: -1.2578691244125366
    2. 'must' → logprob: -2.007869243621826
    3. 'can' → logprob: -2.382869243621826
    4. ' must' → logprob: -2.507869243621826
    5. 'print' → logprob: -2.632869243621826
    6. ' can' → logprob: -2.757869243621826
    7. ' does' → logprob: -2.757869243621826
    8. 'should' → logprob: -3.757869243621826
    9. ' only' → logprob: -3.757869243621826
    10. 'cannot' → logprob: -4.132869243621826

Token 762: ' give' (ID: 3644)
  Prédit: 'override'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'override' → logprob: -0.0015478298300877213
    2. ' override' → logprob: -7.876547813415527
    3. 'change' → logprob: -8.126547813415527
    4. 'explicit' → logprob: -8.376547813415527
    5. 'overwrite' → logprob: -8.876547813415527
    6. 'apply' → logprob: -9.126547813415527
    7. 'issue' → logprob: -9.376547813415527
    8. 'command' → logprob: -9.501547813415527
    9. 'modify' → logprob: -10.126547813415527
    10. 'input' → logprob: -10.126547813415527

Token 763: ' it' (ID: 480)
  Prédit: 'explicit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'explicit' → logprob: -0.03878578543663025
    2. 'an' → logprob: -4.163785934448242
    3. ' explicit' → logprob: -4.288785934448242
    4. 'any' → logprob: -5.163785934448242
    5. 'a' → logprob: -6.788785934448242
    6. ' an' → logprob: -7.538785934448242
    7. 'commands' → logprob: -8.038785934448242
    8. 'extra' → logprob: -8.163785934448242
    9. 'override' → logprob: -8.413785934448242
    10. 'additional' → logprob: -8.538785934448242

Token 764: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6957531571388245
    2. 'print' → logprob: -0.6957531571388245
    3. '
' → logprob: -6.44575309753418
    4. '       ' → logprob: -7.19575309753418
    5. '```' → logprob: -9.19575309753418
    6. ' print' → logprob: -9.82075309753418
    7. '               ' → logprob: -9.82075309753418
    8. 'return' → logprob: -10.82075309753418
    9. '            
' → logprob: -11.07075309753418
    10. '        
' → logprob: -12.32075309753418

Token 765: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1331954151391983
    2. 'print' → logprob: -2.133195400238037
    3. 'return' → logprob: -5.383195400238037
    4. '               ' → logprob: -6.633195400238037
    5. '
' → logprob: -8.883195877075195
    6. '       ' → logprob: -9.508195877075195
    7. '            
' → logprob: -10.258195877075195
    8. '```' → logprob: -10.383195877075195
    9. '                   ' → logprob: -11.133195877075195
    10. ' return' → logprob: -11.508195877075195

Token 766: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.961759259458631e-06
    2. '           ' → logprob: -12.250004768371582
    3. '               ' → logprob: -16.5000057220459
    4. '       ' → logprob: -18.2500057220459
    5. 'break' → logprob: -18.3750057220459
    6. ' print' → logprob: -18.5000057220459
    7. '```' → logprob: -19.1250057220459
    8. 'if' → logprob: -19.8750057220459
    9. '                   ' → logprob: -20.1250057220459
    10. '   ' → logprob: -20.2500057220459

Token 767: ' So' (ID: 2632)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003461905289441347
    2. '           ' → logprob: -8.000346183776855
    3. 'if' → logprob: -11.750346183776855
    4. '               ' → logprob: -13.125346183776855
    5. '       ' → logprob: -14.500346183776855
    6. ' print' → logprob: -15.125346183776855
    7. 'break' → logprob: -17.000347137451172
    8. '                   ' → logprob: -17.250347137451172
    9. '   ' → logprob: -17.375347137451172
    10. '                       ' → logprob: -19.125347137451172

Token 768: ' arriving' (ID: 53419)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006567967939190567
    2. '           ' → logprob: -7.875656604766846
    3. 'if' → logprob: -8.750657081604004
    4. '               ' → logprob: -9.375657081604004
    5. ' print' → logprob: -10.500657081604004
    6. 'break' → logprob: -13.125657081604004
    7. '
' → logprob: -13.750657081604004
    8. '                   ' → logprob: -13.875657081604004
    9. 'return' → logprob: -14.500657081604004
    10. ' if' → logprob: -14.625657081604004

Token 769: ' at' (ID: 540)
  Prédit: ' here'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' here' → logprob: -0.9718411564826965
    2. 'at' → logprob: -1.3468410968780518
    3. ' at' → logprob: -1.3468410968780518
    4. 'here' → logprob: -2.3468410968780518
    5. 'and' → logprob: -6.471841335296631
    6. '               ' → logprob: -7.346841335296631
    7. ' and' → logprob: -7.471841335296631
    8. '_here' → logprob: -7.721841335296631
    9. '<|end|>' → logprob: -7.846841335296631
    10. '
' → logprob: -8.096840858459473

Token 770: ' goal' (ID: 8583)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18329846858978271
    2. 'h' → logprob: -2.4332985877990723
    3. '(h' → logprob: -3.1832985877990723
    4. 'goal' → logprob: -3.4332985877990723
    5. '(r' → logprob: -5.308298587799072
    6. ' (' → logprob: -8.308298110961914
    7. ' r' → logprob: -8.433298110961914
    8. 'the' → logprob: -8.683298110961914
    9. 'this' → logprob: -9.558298110961914
    10. ' goal' → logprob: -9.683298110961914

Token 771: ' means' (ID: 4748)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8210832476615906
    2. '           ' → logprob: -1.3210833072662354
    3. '               ' → logprob: -2.3210833072662354
    4. ' and' → logprob: -2.4460833072662354
    5. ':' → logprob: -3.3210833072662354
    6. 'and' → logprob: -3.3210833072662354
    7. '                   ' → logprob: -4.446083068847656
    8. ' is' → logprob: -5.196083068847656
    9. '                       ' → logprob: -5.321083068847656
    10. ' at' → logprob: -6.071083068847656

Token 772: ' we' (ID: 581)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003381260670721531
    2. '               ' → logprob: -5.753381252288818
    3. 'break' → logprob: -9.503381729125977
    4. '           ' → logprob: -9.503381729125977
    5. ' print' → logprob: -10.128381729125977
    6. 'return' → logprob: -12.128381729125977
    7. '                   ' → logprob: -12.253381729125977
    8. '```' → logprob: -12.878381729125977
    9. '                       ' → logprob: -14.628381729125977
    10. '
' → logprob: -15.003381729125977

Token 773: ' can' (ID: 665)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003027386963367462
    2. '           ' → logprob: -6.003027439117432
    3. ' print' → logprob: -7.753027439117432
    4. '               ' → logprob: -9.628026962280273
    5. 'return' → logprob: -11.003026962280273
    6. '       ' → logprob: -11.253026962280273
    7. '```' → logprob: -11.503026962280273
    8. '#print' → logprob: -12.128026962280273
    9. '
' → logprob: -12.503026962280273
    10. 'break' → logprob: -13.003026962280273

Token 774: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005265804938971996
    2. 'return' → logprob: -7.750526428222656
    3. 'break' → logprob: -9.500526428222656
    4. ' print' → logprob: -11.500526428222656
    5. '           ' → logprob: -11.625526428222656
    6. '               ' → logprob: -13.750526428222656
    7. '```' → logprob: -14.500526428222656
    8. '                       ' → logprob: -16.000526428222656
    9. '                   ' → logprob: -16.250526428222656
    10. '
' → logprob: -16.375526428222656

Token 775: ' the' (ID: 290)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.003824775805696845
    2. '
' → logprob: -5.753824710845947
    3. 'print' → logprob: -7.503824710845947
    4. '(cost' → logprob: -10.003825187683105
    5. ' cost' → logprob: -10.253825187683105
    6. '   ' → logprob: -12.253825187683105
    7. '
' → logprob: -13.003825187683105
    8. '               ' → logprob: -13.003825187683105
    9. '    
' → logprob: -13.378825187683105
    10. '           ' → logprob: -13.628825187683105

Token 776: ' cost' (ID: 3097)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6932342648506165
    2. 'cost' → logprob: -0.6932342648506165
    3. '```' → logprob: -10.19323444366455
    4. '
' → logprob: -11.19323444366455
    5. ' cost' → logprob: -11.31823444366455
    6. '{' → logprob: -12.06823444366455
    7. '`' → logprob: -12.31823444366455
    8. ' print' → logprob: -12.81823444366455
    9. 'printf' → logprob: -13.44323444366455
    10. 'result' → logprob: -13.69323444366455

Token 777: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020164288580417633
    2. '               ' → logprob: -6.377016544342041
    3. ' and' → logprob: -9.377016067504883
    4. ',' → logprob: -10.127016067504883
    5. 'return' → logprob: -10.502016067504883
    6. ')' → logprob: -10.502016067504883
    7. '                   ' → logprob: -10.752016067504883
    8. '
' → logprob: -11.002016067504883
    9. '.' → logprob: -11.127016067504883
    10. '       ' → logprob: -11.377016067504883

Token 778: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010320117697119713
    2. 'print' → logprob: -4.63532018661499
    3. '               ' → logprob: -7.76032018661499
    4. 'return' → logprob: -9.260319709777832
    5. '       ' → logprob: -10.760319709777832
    6. '
' → logprob: -11.760319709777832
    7. '```' → logprob: -12.385319709777832
    8. ' print' → logprob: -12.885319709777832
    9. 'break' → logprob: -13.010319709777832
    10. '   ' → logprob: -13.385319709777832

Token 779: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003360582049936056
    2. '           ' → logprob: -8.000335693359375
    3. ' print' → logprob: -14.500335693359375
    4. '               ' → logprob: -15.875335693359375
    5. 'return' → logprob: -17.625335693359375
    6. '       ' → logprob: -17.875335693359375
    7. '```' → logprob: -18.250335693359375
    8. '#print' → logprob: -19.500335693359375
    9. 'break' → logprob: -19.750335693359375
    10. '            
' → logprob: -20.125335693359375

Token 780: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -8.2994620242971e-06
    2. 'cost' → logprob: -11.750008583068848
    3. '(' → logprob: -14.875008583068848
    4. ' cost' → logprob: -19.62500762939453
    5. '(c' → logprob: -20.00000762939453
    6. '(co' → logprob: -21.25000762939453
    7. '(price' → logprob: -21.37500762939453
    8. '(int' → logprob: -21.62500762939453
    9. '((' → logprob: -21.87500762939453
    10. '(
' → logprob: -22.37500762939453

Token 781: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47916170954704285
    2. ')' → logprob: -0.9791617393493652
    3. '               ' → logprob: -5.354161739349365
    4. ')
' → logprob: -8.479161262512207
    5. '           ' → logprob: -9.354161262512207
    6. ')return' → logprob: -10.604161262512207
    7. '                   ' → logprob: -10.979161262512207
    8. '       ' → logprob: -12.854161262512207
    9. ')`
' → logprob: -13.604161262512207
    10. 'return' → logprob: -13.854161262512207

Token 782: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07154324650764465
    2. '           ' → logprob: -3.0715432167053223
    3. 'return' → logprob: -3.8215432167053223
    4. ' return' → logprob: -7.821543216705322
    5. '                   ' → logprob: -8.07154369354248
    6. '<|end|>' → logprob: -10.44654369354248
    7. '	return' → logprob: -11.32154369354248
    8. '                       ' → logprob: -11.44654369354248
    9. '       ' → logprob: -11.82154369354248
    10. '```' → logprob: -12.19654369354248

Token 783: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0003598952607717365
    2. '               ' → logprob: -8.875359535217285
    3. ' return' → logprob: -9.000359535217285
    4. 'break' (adapté à ' break') → logprob: -9.375359535217285
    5. '           ' → logprob: -11.375359535217285
    6. '	return' → logprob: -15.750359535217285
    7. ':return' → logprob: -16.2503604888916
    8. '       ' → logprob: -17.0003604888916
    9. '{return' → logprob: -17.1253604888916
    10. '```' → logprob: -17.2503604888916

Token 784: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043591417488642037
    2. '       ' → logprob: -8.375435829162598
    3. 'for' → logprob: -9.375435829162598
    4. '            
' → logprob: -9.625435829162598
    5. '#' → logprob: -11.000435829162598
    6. '   ' → logprob: -12.000435829162598
    7. '
' → logprob: -12.125435829162598
    8. 'continue' → logprob: -12.500435829162598
    9. '          ' → logprob: -12.625435829162598
    10. '```' → logprob: -12.625435829162598

Token 785: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003213960910215974
    2. '       ' → logprob: -5.878213882446289
    3. 'for' → logprob: -8.003213882446289
    4. '```' → logprob: -10.378213882446289
    5. 'else' → logprob: -11.378213882446289
    6. '   ' → logprob: -11.378213882446289
    7. ' for' → logprob: -12.003213882446289
    8. '            
' → logprob: -12.753213882446289
    9. '#' → logprob: -13.003213882446289
    10. '          ' → logprob: -13.378213882446289

Token 786: ' #' (ID: 1069)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -1.265326976776123
    2. 'cur' → logprob: -1.390326976776123
    3. 'for' → logprob: -1.640326976776123
    4. 'current' → logprob: -2.015326976776123
    5. 'curr' → logprob: -2.265326976776123
    6. 'board' → logprob: -4.140326976776123
    7. '#' (adapté à ' #') → logprob: -5.140326976776123
    8. 'command' → logprob: -5.515326976776123
    9. 'square' → logprob: -5.515326976776123
    10. 'orig' → logprob: -6.265326976776123

Token 787: ' Current' (ID: 14536)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.5962726473808289
    2. 'cur' → logprob: -1.7212727069854736
    3. 'for' → logprob: -2.2212727069854736
    4. 'curr' → logprob: -2.9712727069854736
    5. 'current' → logprob: -3.3462727069854736
    6. 'board' → logprob: -3.5962727069854736
    7. '#' → logprob: -3.8462727069854736
    8. 'base' → logprob: -4.4712724685668945
    9. 'command' → logprob: -5.3462724685668945
    10. 'square' → logprob: -6.0962724685668945

Token 788: ' square' (ID: 13749)
  Prédit: '_cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -0.0811983197927475
    2. '_command' → logprob: -3.081198215484619
    3. 'cmd' → logprob: -3.831198215484619
    4. 'r' → logprob: -5.581198215484619
    5. '_r' → logprob: -6.456198215484619
    6. 'command' → logprob: -6.456198215484619
    7. '_square' → logprob: -6.831198215484619
    8. '           ' → logprob: -6.956198215484619
    9. '_board' → logprob: -7.956198215484619
    10. '_sq' → logprob: -8.581198692321777

Token 789: ' assigned' (ID: 21482)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.2142600566148758
    2. 'command' → logprob: -2.4642601013183594
    3. '_cmd' → logprob: -2.9642601013183594
    4. '           ' → logprob: -3.3392601013183594
    5. '_command' → logprob: -4.214260101318359
    6. ',' → logprob: -6.464260101318359
    7. ' cmd' → logprob: -6.589260101318359
    8. 'commands' → logprob: -6.589260101318359
    9. ' command' → logprob: -6.839260101318359
    10. ' =' → logprob: -8.58926010131836

Token 790: ' command' (ID: 6348)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.023074837401509285
    2. '_cmd' → logprob: -4.273074626922607
    3. 'command' → logprob: -4.773074626922607
    4. '_command' → logprob: -7.898074626922607
    5. ' cmd' → logprob: -10.273075103759766
    6. ' command' → logprob: -12.898075103759766
    7. 'commands' → logprob: -13.273075103759766
    8. '           ' → logprob: -13.398075103759766
    9. '   ' → logprob: -13.648075103759766
    10. 'c' → logprob: -14.023075103759766

Token 791: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5285620093345642
    2. '=' → logprob: -0.9035620093345642
    3. '           ' → logprob: -5.528562068939209
    4. 'cmd' → logprob: -6.653562068939209
    5. 'command' → logprob: -10.02856159210205
    6. '_cmd' → logprob: -10.27856159210205
    7. '               ' → logprob: -11.15356159210205
    8. 'assigned' → logprob: -11.52856159210205
    9. 'current' → logprob: -11.90356159210205
    10. ',' → logprob: -12.02856159210205

Token 792: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018385091796517372
    2. '=' → logprob: -4.01838493347168
    3. 'cmd' → logprob: -8.76838493347168
    4. '_cmd' → logprob: -9.76838493347168
    5. '   ' → logprob: -12.14338493347168
    6. 'command' → logprob: -12.64338493347168
    7. '_command' → logprob: -13.01838493347168
    8. ',' → logprob: -13.39338493347168
    9. '           ' → logprob: -13.39338493347168
    10. ' is' → logprob: -13.51838493347168

Token 793: ' square' (ID: 13749)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.4556628465652466
    2. 'cur' → logprob: -1.2056628465652466
    3. 'curr' → logprob: -3.080662727355957
    4. 'current' → logprob: -4.455662727355957
    5. 'assigned' → logprob: -5.955662727355957
    6. ' cmd' → logprob: -6.705662727355957
    7. 'sq' → logprob: -6.830662727355957
    8. 'command' → logprob: -6.955662727355957
    9. 'cc' → logprob: -7.455662727355957
    10. 'base' → logprob: -7.955662727355957

Token 794: '_cmd' (ID: 26337)
  Prédit: '_cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -0.003323865123093128
    2. '_command' → logprob: -5.753324031829834
    3. ' =' → logprob: -9.128323554992676
    4. '=' → logprob: -10.878323554992676
    5. 'cmd' → logprob: -11.003323554992676
    6. 'Cmd' → logprob: -14.753323554992676
    7. '   ' → logprob: -14.753323554992676
    8. 'command' → logprob: -14.878323554992676
    9. '_CMD' → logprob: -15.628323554992676
    10. '_commands' → logprob: -15.753323554992676

Token 795: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407785058021545
    2. ' =' → logprob: -0.9740778207778931
    3. '   ' → logprob: -14.474078178405762
    4. '=s' → logprob: -15.974078178405762
    5. ',' → logprob: -16.599077224731445
    6. 'square' → logprob: -16.974077224731445
    7. ' ' → logprob: -17.849077224731445
    8. 's' → logprob: -18.224077224731445
    9. '=line' → logprob: -18.349077224731445
    10. '=
' → logprob: -18.599077224731445

Token 796: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0013286912580952048
    2. ' board' → logprob: -6.626328468322754
    3. '   ' → logprob: -12.876328468322754
    4. '	board' → logprob: -16.25132942199707
    5. '(board' → logprob: -17.12632942199707
    6. ' ' → logprob: -17.62632942199707
    7. 'box' → logprob: -18.75132942199707
    8. 'block' → logprob: -18.75132942199707
    9. '  ' → logprob: -19.12632942199707
    10. '       ' → logprob: -19.12632942199707

Token 797: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.5491004129871726e-05
    2. 'r' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.750045776367188
    4. '```' → logprob: -18.250045776367188
    5. '       ' → logprob: -18.625045776367188
    6. '[' → logprob: -18.750045776367188
    7. '
' → logprob: -19.875045776367188
    8. ' [' → logprob: -20.000045776367188
    9. '][' → logprob: -20.000045776367188
    10. '           ' → logprob: -20.000045776367188

Token 798: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.9027791495318525e-05
    2. ']' → logprob: -11.250019073486328
    3. '[c' → logprob: -12.875019073486328
    4. ' ][' → logprob: -13.500019073486328
    5. '[' → logprob: -13.625019073486328
    6. '[r' → logprob: -15.375019073486328
    7. '   ' → logprob: -15.875019073486328
    8. '"][' → logprob: -16.375019073486328
    9. '       ' → logprob: -17.000019073486328
    10. ''][' → logprob: -17.125019073486328

Token 799: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1472419600977446e-06
    2. ' c' → logprob: -14.250000953674316
    3. '][' → logprob: -15.875000953674316
    4. '	c' → logprob: -16.000001907348633
    5. '[c' → logprob: -16.250001907348633
    6. ')c' → logprob: -16.375001907348633
    7. '(c' → logprob: -18.000001907348633
    8. ',c' → logprob: -18.000001907348633
    9. '
' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.125001907348633

Token 800: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029815176501870155
    2. '][' → logprob: -3.779815196990967
    3. '[d' → logprob: -5.154815196990967
    4. '[' → logprob: -7.404815196990967
    5. ' ]' → logprob: -10.029814720153809
    6. 'd' → logprob: -10.404814720153809
    7. '[r' → logprob: -10.529814720153809
    8. '])' → logprob: -10.654814720153809
    9. ']>' → logprob: -11.654814720153809
    10. '[s' → logprob: -11.779814720153809

Token 801: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03301512449979782
    2. 'for' → logprob: -3.658015012741089
    3. ' for' → logprob: -5.283015251159668
    4. 'if' → logprob: -6.908015251159668
    5. '```' → logprob: -8.783015251159668
    6. '            
' → logprob: -8.908015251159668
    7. ' if' → logprob: -9.033015251159668
    8. '#' → logprob: -9.283015251159668
    9. '       ' → logprob: -11.158015251159668
    10. '	       ' → logprob: -11.158015251159668

Token 802: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015259700827300549
    2. '           ' → logprob: -4.640259742736816
    3. ' for' → logprob: -5.765259742736816
    4. '#' (adapté à ' #') → logprob: -6.140259742736816
    5. 'if' → logprob: -8.640259742736816
    6. 'next' → logprob: -12.015259742736816
    7. '            
' → logprob: -12.765259742736816
    8. '```' → logprob: -12.765259742736816
    9. ' #' → logprob: -13.015259742736816
    10. '   ' → logprob: -13.265259742736816

Token 803: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011465457268059254
    2. '#' → logprob: -4.511465549468994
    3. 'if' → logprob: -8.011465072631836
    4. '           ' → logprob: -10.136465072631836
    5. 'possible' → logprob: -11.011465072631836
    6. ' for' → logprob: -11.386465072631836
    7. 'next' → logprob: -11.636465072631836
    8. 'allowed' → logprob: -12.636465072631836
    9. 'commands' → logprob: -14.011465072631836
    10. '            
' → logprob: -14.261465072631836

Token 804: ' can' (ID: 665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8304533958435059
    2. '           ' → logprob: -1.0804533958435059
    3. ' for' → logprob: -2.080453395843506
    4. '#' → logprob: -3.080453395843506
    5. ' can' → logprob: -3.330453395843506
    6. ' #' → logprob: -4.580453395843506
    7. '       ' → logprob: -6.455453395843506
    8. '            
' → logprob: -6.580453395843506
    9. ' =' → logprob: -6.705453395843506
    10. '=' → logprob: -6.830453395843506

Token 805: ' either' (ID: 4784)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.04216593876481056
    2. 'execute' → logprob: -4.417165756225586
    3. ' try' → logprob: -4.917165756225586
    4. 'consider' → logprob: -5.167165756225586
    5. 'for' → logprob: -5.792165756225586
    6. 'continue' → logprob: -6.042165756225586
    7. 'use' → logprob: -6.417165756225586
    8. 'take' → logprob: -6.792165756225586
    9. 'choose' → logprob: -6.917165756225586
    10. 'override' → logprob: -7.042165756225586

Token 806: ':
' (ID: 734)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3036925792694092
    2. 'try' → logprob: -1.3036925792694092
    3. 'follow' → logprob: -1.5536925792694092
    4. 'use' → logprob: -2.678692579269409
    5. 'go' → logprob: -3.428692579269409
    6. 'execute' → logprob: -3.553692579269409
    7. 'continue' → logprob: -3.928692579269409
    8. 'take' → logprob: -3.928692579269409
    9. 'do' → logprob: -4.053692817687988
    10. ' follow' → logprob: -4.178692817687988

Token 807: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004577174549922347
    2. ' continue' → logprob: -8.750457763671875
    3. ' for' → logprob: -9.250457763671875
    4. '               ' → logprob: -9.625457763671875
    5. '            
' → logprob: -9.875457763671875
    6. '#' → logprob: -10.500457763671875
    7. ' #' → logprob: -11.125457763671875
    8. '
' → logprob: -11.250457763671875
    9. '            ' → logprob: -12.125457763671875
    10. '   ' → logprob: -12.750457763671875

Token 808: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02389635145664215
    2. ' continue' → logprob: -4.523896217346191
    3. '#' (adapté à ' #') → logprob: -5.398896217346191
    4. 'for' → logprob: -6.398896217346191
    5. 'continue' → logprob: -6.398896217346191
    6. ' for' → logprob: -6.523896217346191
    7. ' #' → logprob: -6.523896217346191
    8. '               ' → logprob: -7.398896217346191
    9. ' take' → logprob: -8.648896217346191
    10. '   ' → logprob: -8.898896217346191

Token 809: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04505384713411331
    2. '           ' → logprob: -3.2950539588928223
    3. 'for' → logprob: -5.420053958892822
    4. '1' → logprob: -7.045053958892822
    5. 'if' → logprob: -7.295053958892822
    6. ' #' → logprob: -7.795053958892822
    7. '   ' → logprob: -9.295053482055664
    8. 'execute' → logprob: -9.295053482055664
    9. '-' → logprob: -9.670053482055664
    10. '
' → logprob: -9.920053482055664

Token 810: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10779090970754623
    2. 'for' → logprob: -2.357790946960449
    3. 'if' → logprob: -5.607790946960449
    4. 'execute' → logprob: -7.232790946960449
    5. 'go' → logprob: -7.357790946960449
    6. 'override' → logprob: -7.732790946960449
    7. 'move' → logprob: -8.10779094696045
    8. '           ' → logprob: -8.10779094696045
    9. 'use' → logprob: -8.23279094696045
    10. 'continue' → logprob: -8.23279094696045

Token 811: ')' (ID: 8)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1969166249036789
    2. ' =' → logprob: -2.8219165802001953
    3. 'for' → logprob: -3.3219165802001953
    4. ':' → logprob: -3.6969165802001953
    5. ' for' → logprob: -3.8219165802001953
    6. ')' → logprob: -4.571916580200195
    7. '=' → logprob: -4.821916580200195
    8. '#' → logprob: -4.946916580200195
    9. ',' → logprob: -5.821916580200195
    10. '.' → logprob: -6.446916580200195

Token 812: ' Execute' (ID: 43223)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06535022705793381
    2. 'follow' → logprob: -3.190350294113159
    3. 'execute' → logprob: -5.31535005569458
    4. 'continue' → logprob: -5.44035005569458
    5. 'use' → logprob: -5.44035005569458
    6. 'try' → logprob: -5.69035005569458
    7. 'for' → logprob: -6.56535005569458
    8. ' follow' → logprob: -7.56535005569458
    9. 'accept' → logprob: -7.56535005569458
    10. 'take' → logprob: -7.69035005569458

Token 813: ' assigned' (ID: 21482)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.4989550709724426
    2. ' square' → logprob: -0.9989550709724426
    3. ' the' → logprob: -4.248955249786377
    4. 'the' → logprob: -5.623955249786377
    5. '   ' → logprob: -6.123955249786377
    6. '(square' → logprob: -6.248955249786377
    7. ' current' → logprob: -7.623955249786377
    8. ' (' → logprob: -7.998955249786377
    9. '(s' → logprob: -8.123954772949219
    10. '0' → logprob: -8.498954772949219

Token 814: ' command' (ID: 6348)
  Prédit: '_cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -0.3064301013946533
    2. ' square' → logprob: -1.8064301013946533
    3. 'square' → logprob: -3.0564301013946533
    4. ' command' → logprob: -3.9314301013946533
    5. '_command' → logprob: -3.9314301013946533
    6. 'command' → logprob: -5.431429862976074
    7. ' ' → logprob: -5.431429862976074
    8. 'cmd' → logprob: -6.681429862976074
    9. ')' → logprob: -7.181429862976074
    10. '_commands' → logprob: -7.556429862976074

Token 815: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6263707280158997
    2. '           ' → logprob: -1.1263706684112549
    3. 'if' → logprob: -2.251370668411255
    4. ' or' → logprob: -3.626370668411255
    5. '
' → logprob: -6.001370906829834
    6. ',' → logprob: -6.126370906829834
    7. '            
' → logprob: -7.126370906829834
    8. '               ' → logprob: -7.626370906829834
    9. 'or' → logprob: -7.751370906829834
    10. ' (' → logprob: -8.126370429992676

Token 816: 'no' (ID: 1750)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.667241096496582
    2. 'next' → logprob: -2.167241096496582
    3. 'new' → logprob: -2.417241096496582
    4. 'nc' → logprob: -2.792241096496582
    5. 'cmd' → logprob: -3.042241096496582
    6. ')' → logprob: -3.292241096496582
    7. ' if' → logprob: -3.417241096496582
    8. 'nr' → logprob: -4.042241096496582
    9. 'curr' → logprob: -4.292241096496582
    10. ' new' → logprob: -4.542241096496582

Token 817: ' cost' (ID: 3097)
  Prédit: ' additional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' additional' → logprob: -0.7573767304420471
    2. ' extra' → logprob: -1.2573766708374023
    3. 'extra' → logprob: -2.1323766708374023
    4. 'additional' → logprob: -2.2573766708374023
    5. ' cost' → logprob: -4.632376670837402
    6. 'cost' → logprob: -4.757376670837402
    7. '_extra' → logprob: -6.507376670837402
    8. ' added' → logprob: -6.632376670837402
    9. ')' → logprob: -7.132376670837402
    10. 'change' → logprob: -8.007376670837402

Token 818: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29619017243385315
    2. ')
' → logprob: -1.4211901426315308
    3. '):
' → logprob: -5.42119026184082
    4. '),' → logprob: -5.54619026184082
    5. ' )' → logprob: -6.42119026184082
    6. ' )
' → logprob: -6.54619026184082
    7. '):' → logprob: -7.29619026184082
    8. ' if' → logprob: -7.42119026184082
    9. ')

' → logprob: -7.67119026184082
    10. ',' → logprob: -7.67119026184082

Token 819: ' no' (ID: 860)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.5809212923049927
    2. '           ' → logprob: -1.9559212923049927
    3. 'dr' → logprob: -1.9559212923049927
    4. ' dr' → logprob: -2.205921173095703
    5. 'nr' → logprob: -2.330921173095703
    6. ' nr' → logprob: -2.455921173095703
    7. ' if' → logprob: -3.205921173095703
    8. 'new' → logprob: -3.205921173095703
    9. ')' → logprob: -3.830921173095703
    10. ' move' → logprob: -3.955921173095703

Token 820: ' override' (ID: 5888)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.4969083368778229
    2. ' turn' → logprob: -1.7469083070755005
    3. 'change' → logprob: -1.8719083070755005
    4. ' change' → logprob: -3.24690842628479
    5. 'direction' → logprob: -4.746908187866211
    6. 'override' → logprob: -5.621908187866211
    7. ' direction' → logprob: -5.996908187866211
    8. ')' → logprob: -6.121908187866211
    9. ' override' → logprob: -6.371908187866211
    10. ' explicit' → logprob: -7.121908187866211

Token 821: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1153365820646286
    2. ')
' → logprob: -2.2403366565704346
    3. '),' → logprob: -6.3653364181518555
    4. '           ' → logprob: -8.615336418151855
    5. ')

' → logprob: -8.615336418151855
    6. '):
' → logprob: -8.740336418151855
    7. '):' → logprob: -9.615336418151855
    8. ').' → logprob: -10.115336418151855
    9. ')
' → logprob: -10.240336418151855
    10. ' )' → logprob: -10.240336418151855

Token 822: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05420826002955437
    2. '
' → logprob: -3.554208278656006
    3. '\n' → logprob: -4.679208278656006
    4. '            
' → logprob: -4.679208278656006
    5. ' or' → logprob: -6.304208278656006
    6. ')' → logprob: -6.554208278656006
    7. ' if' → logprob: -7.304208278656006
    8. ')
' → logprob: -7.679208278656006
    9. ',' → logprob: -8.679207801818848
    10. '  
' → logprob: -8.804207801818848

Token 823: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.051922742277383804
    2. 'if' → logprob: -4.051922798156738
    3. ' if' → logprob: -4.176922798156738
    4. '            
' → logprob: -4.676922798156738
    5. '
' → logprob: -4.926922798156738
    6. ')' → logprob: -7.801922798156738
    7. '    
' → logprob: -9.426922798156738
    8. '#' (adapté à ' #') → logprob: -9.426922798156738
    9. ',' → logprob: -9.551922798156738
    10. '   ' → logprob: -9.989422798156738

Token 824: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5772841572761536
    2. ' dr' → logprob: -1.9522840976715088
    3. 'if' → logprob: -2.702284097671509
    4. ' for' → logprob: -2.702284097671509
    5. 'for' → logprob: -2.702284097671509
    6. ' if' → logprob: -2.952284097671509
    7. 'dr' → logprob: -3.827284097671509
    8. '
' → logprob: -5.702284336090088
    9. 'next' → logprob: -5.702284336090088
    10. ' next' → logprob: -5.702284336090088

Token 825: '2' (ID: 17)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0180189609527588
    2. 'dr' → logprob: -1.3930189609527588
    3. 'nr' → logprob: -1.5180189609527588
    4. '#' → logprob: -3.393018960952759
    5. 'r' → logprob: -3.643018960952759
    6. '           ' → logprob: -3.768018960952759
    7. 'elif' → logprob: -3.768018960952759
    8. 'for' → logprob: -4.14301872253418
    9. '   ' → logprob: -4.39301872253418
    10. 'else' → logprob: -4.64301872253418

Token 826: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002541417023167014
    2. '           ' → logprob: -6.377541542053223
    3. ' )' → logprob: -8.377541542053223
    4. 'for' → logprob: -8.627541542053223
    5. ' for' → logprob: -9.002541542053223
    6. '   ' → logprob: -9.377541542053223
    7. '       ' → logprob: -10.127541542053223
    8. ':' → logprob: -10.252541542053223
    9. '#' → logprob: -10.502541542053223
    10. ')#' → logprob: -10.502541542053223

Token 827: ' Override' (ID: 87603)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009664955548942089
    2. '#' → logprob: -4.759665012359619
    3. ' for' → logprob: -7.384665012359619
    4. '           ' → logprob: -7.884665012359619
    5. '
' → logprob: -10.759664535522461
    6. 'For' → logprob: -11.384664535522461
    7. ' #' → logprob: -11.509664535522461
    8. 'execute' → logprob: -13.009664535522461
    9. '```' → logprob: -13.259664535522461
    10. 'from' → logprob: -14.134664535522461

Token 828: ' with' (ID: 483)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2818388044834137
    2. 'for' → logprob: -1.4068387746810913
    3. ' with' → logprob: -7.781838893890381
    4. '   ' → logprob: -9.531838417053223
    5. '           ' → logprob: -9.906838417053223
    6. 'with' → logprob: -9.906838417053223
    7. '
' → logprob: -10.406838417053223
    8. '       ' → logprob: -11.031838417053223
    9. '#' → logprob: -11.406838417053223
    10. ' #' → logprob: -11.906838417053223

Token 829: ' one' (ID: 1001)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.48803994059562683
    2. 'for' → logprob: -1.9880399703979492
    3. 'one' → logprob: -2.488039970397949
    4. 'each' → logprob: -2.738039970397949
    5. 'an' → logprob: -3.113039970397949
    6. 'a' → logprob: -3.863039970397949
    7. 'all' → logprob: -4.488039970397949
    8. '0' → logprob: -4.613039970397949
    9. 'explicit' → logprob: -5.363039970397949
    10. 'player' → logprob: -6.113039970397949

Token 830: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.21348202228546143
    2. ' of' → logprob: -2.213481903076172
    3. 'for' → logprob: -2.588481903076172
    4. ' for' → logprob: -4.963481903076172
    5. '   ' → logprob: -7.963481903076172
    6. ' in' → logprob: -8.838481903076172
    7. 'from' → logprob: -8.963481903076172
    8. 'in' → logprob: -9.338481903076172
    9. '
' → logprob: -10.838481903076172
    10. 'range' → logprob: -11.338481903076172

Token 831: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02869856171309948
    2. 'the' → logprob: -3.778698444366455
    3. 'range' → logprob: -5.653698444366455
    4. '(' → logprob: -7.153698444366455
    5. '4' → logprob: -7.403698444366455
    6. ' [' → logprob: -8.278698921203613
    7. ' the' → logprob: -9.278698921203613
    8. '0' → logprob: -9.528698921203613
    9. ' range' → logprob: -10.278698921203613
    10. '```' → logprob: -10.778698921203613

Token 832: 'Straight' (ID: 129322)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1216997504234314
    2. '0' → logprob: -2.371699810028076
    3. 'range' → logprob: -3.996699810028076
    4. '4' → logprob: -6.746699810028076
    5. '(' → logprob: -6.996699810028076
    6. ' [' → logprob: -8.121699333190918
    7. ' range' → logprob: -8.246699333190918
    8. '   ' → logprob: -9.496699333190918
    9. ')' → logprob: -10.121699333190918
    10. '(range' → logprob: -10.496699333190918

Token 833: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004833425919059664
    2. ' ,' → logprob: -7.750483512878418
    3. '   ' → logprob: -10.625483512878418
    4. '0' → logprob: -11.375483512878418
    5. ' ' → logprob: -12.750483512878418
    6. '),' → logprob: -13.250483512878418
    7. 'Right' → logprob: -13.375483512878418
    8. ',right' → logprob: -13.750483512878418
    9. '=' → logprob: -13.875483512878418
    10. ',
' → logprob: -14.000483512878418

Token 834: ' Right' (ID: 16354)
  Prédit: 'Right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -0.1536685973405838
    2. ' Right' → logprob: -2.0286686420440674
    3. '1' → logprob: -4.528668403625488
    4. ' right' → logprob: -9.903668403625488
    5. ' ' → logprob: -10.278668403625488
    6. ')' → logprob: -11.028668403625488
    7. '   ' → logprob: -11.528668403625488
    8. ',' → logprob: -11.778668403625488
    9. '_Right' → logprob: -11.903668403625488
    10. 'right' → logprob: -12.903668403625488

Token 835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.519893501419574e-05
    2. ' ,' → logprob: -9.37509536743164
    3. '),' → logprob: -12.87509536743164
    4. ',
' → logprob: -13.00009536743164
    5. ')' → logprob: -13.12509536743164
    6. '0' → logprob: -14.00009536743164
    7. '   ' → logprob: -14.50009536743164
    8. ',None' → logprob: -14.75009536743164
    9. '```' → logprob: -15.25009536743164
    10. ' or' → logprob: -15.25009536743164

Token 836: ' Back' (ID: 9793)
  Prédit: 'Back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Back' → logprob: -0.029055848717689514
    2. ' Back' → logprob: -4.029056072235107
    3. '2' → logprob: -4.529056072235107
    4. ' ' → logprob: -10.27905559539795
    5. 'Backward' → logprob: -10.90405559539795
    6. ' back' → logprob: -13.65405559539795
    7. '   ' → logprob: -13.77905559539795
    8. 'Left' → logprob: -15.27905559539795
    9. 'back' → logprob: -15.90405559539795
    10. '  ' → logprob: -16.404056549072266

Token 837: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.551721889991313e-05
    2. ' ,' → logprob: -9.875065803527832
    3. ' or' → logprob: -12.125065803527832
    4. 'or' → logprob: -12.875065803527832
    5. '   ' → logprob: -14.000065803527832
    6. '0' → logprob: -14.125065803527832
    7. ',
' → logprob: -14.125065803527832
    8. '3' → logprob: -14.375065803527832
    9. '4' → logprob: -15.000065803527832
    10. ')' → logprob: -15.000065803527832

Token 838: ' Left' (ID: 26982)
  Prédit: 'Left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.00028016636497341096
    2. ' Left' → logprob: -8.500280380249023
    3. '3' → logprob: -9.500280380249023
    4. '   ' → logprob: -13.875280380249023
    5. ' ' → logprob: -14.625280380249023
    6. '4' → logprob: -16.000280380249023
    7. '_Left' → logprob: -16.000280380249023
    8. 'LEFT' → logprob: -16.250280380249023
    9. 'left' → logprob: -17.250280380249023
    10. '  ' → logprob: -17.500280380249023

Token 839: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5216460227966309
    2. ')' → logprob: -1.7716460227966309
    3. '):' → logprob: -2.146646022796631
    4. ')
' → logprob: -2.146646022796631
    5. ',' → logprob: -7.396646022796631
    6. '   ' → logprob: -7.521646022796631
    7. '):
' → logprob: -8.271646499633789
    8. ' )
' → logprob: -8.396646499633789
    9. '):

' → logprob: -8.646646499633789
    10. ' ):
' → logprob: -8.771646499633789

Token 840: ' commands' (ID: 23877)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09823325276374817
    2. '
' → logprob: -2.473233222961426
    3. ' for' → logprob: -5.598233222961426
    4. '            
' → logprob: -6.473233222961426
    5. 'for' → logprob: -6.723233222961426
    6. '   ' → logprob: -7.098233222961426
    7. '       ' → logprob: -7.473233222961426
    8. '\n' → logprob: -7.723233222961426
    9. '    
' → logprob: -7.973233222961426
    10. '#' → logprob: -9.348233222961426

Token 841: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06071312353014946
    2. '
' → logprob: -3.185713052749634
    3. ' for' → logprob: -4.810713291168213
    4. '            
' → logprob: -5.185713291168213
    5. '    
' → logprob: -7.310713291168213
    6. 'for' → logprob: -7.435713291168213
    7. '       ' → logprob: -8.435712814331055
    8. '#' → logprob: -8.435712814331055
    9. '  
' → logprob: -8.435712814331055
    10. '<|end|>' → logprob: -8.435712814331055

Token 842: 'except' (ID: 25035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2791704535484314
    2. '):' → logprob: -2.029170513153076
    3. '):
' → logprob: -2.529170513153076
    4. ')
' → logprob: -3.904170513153076
    5. 'for' → logprob: -4.654170513153076
    6. ' for' → logprob: -6.904170513153076
    7. ':' → logprob: -7.154170513153076
    8. ' )' → logprob: -7.654170513153076
    9. '   ' → logprob: -9.154170036315918
    10. '):
' → logprob: -9.279170036315918

Token 843: ' Halt' (ID: 120259)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.005627035163342953
    2. ' ' → logprob: -5.880627155303955
    3. 'H' → logprob: -6.505627155303955
    4. '3' → logprob: -6.755627155303955
    5. ' H' → logprob: -10.380626678466797
    6. 'for' → logprob: -10.505626678466797
    7. '#' → logprob: -10.755626678466797
    8. ' for' → logprob: -11.255626678466797
    9. '
' → logprob: -11.755626678466797
    10. '`' → logprob: -11.755626678466797

Token 844: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3220160901546478
    2. '):
' → logprob: -2.3220160007476807
    3. '):' → logprob: -2.4470160007476807
    4. ')
' → logprob: -2.4470160007476807
    5. '           ' → logprob: -6.44701623916626
    6. ')
' → logprob: -7.57201623916626
    7. '):
' → logprob: -7.69701623916626
    8. ':' → logprob: -7.69701623916626
    9. ' )' → logprob: -7.94701623916626
    10. '):

' → logprob: -8.822015762329102

Token 845: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007908092229627073
    2. '		' → logprob: -8.6257905960083
    3. '            
' → logprob: -8.6257905960083
    4. '               ' → logprob: -9.1257905960083
    5. ' for' → logprob: -9.7507905960083
    6. '	       ' → logprob: -10.0007905960083
    7. '   ' → logprob: -10.5007905960083
    8. '       ' → logprob: -10.7507905960083
    9. ' ' → logprob: -10.8757905960083
    10. '            ' → logprob: -10.8757905960083

Token 846: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0488665103912354
    2. '           ' → logprob: -1.0488665103912354
    3. '   ' → logprob: -3.0488665103912354
    4. '            
' → logprob: -3.0488665103912354
    5. '0' → logprob: -3.1738665103912354
    6. '#' (adapté à ' #') → logprob: -3.2988665103912354
    7. ' ' → logprob: -3.7988665103912354
    8. ' 
' → logprob: -3.9238665103912354
    9. '               ' → logprob: -4.423866271972656
    10. ' continue' → logprob: -4.673866271972656

Token 847: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06530299037694931
    2. ' for' → logprob: -2.940303087234497
    3. 'for' → logprob: -5.565302848815918
    4. '#' → logprob: -6.190302848815918
    5. '
' → logprob: -6.190302848815918
    6. '		' → logprob: -7.440302848815918
    7. '            
' → logprob: -7.565302848815918
    8. ' #' → logprob: -8.315302848815918
    9. '               ' → logprob: -8.940302848815918
    10. '   ' → logprob: -9.065302848815918

Token 848: ' paying' (ID: 17623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25864487886428833
    2. ' for' → logprob: -1.5086448192596436
    3. '#' → logprob: -6.008645057678223
    4. '           ' → logprob: -6.258645057678223
    5. '
' → logprob: -6.883645057678223
    6. '   ' → logprob: -7.883645057678223
    7. '               ' → logprob: -8.633645057678223
    8. '	for' → logprob: -9.133645057678223
    9. ':' → logprob: -9.258645057678223
    10. ')' → logprob: -9.758645057678223

Token 849: ' the' (ID: 290)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3638579547405243
    2. ' costs' → logprob: -1.2388579845428467
    3. ' the' → logprob: -5.488857746124268
    4. ' cost' → logprob: -5.863857746124268
    5. '(cost' → logprob: -5.863857746124268
    6. 'the' → logprob: -6.363857746124268
    7. '
' → logprob: -6.738857746124268
    8. ')' → logprob: -7.613857746124268
    9. ' a' → logprob: -8.113858222961426
    10. 'for' → logprob: -8.363858222961426

Token 850: ' cost' (ID: 3097)
  Prédit: ' costs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.6334348320960999
    2. 'cost' → logprob: -0.8834348320960999
    3. ' cost' → logprob: -3.008434772491455
    4. 'space' → logprob: -6.008434772491455
    5. ' ' → logprob: -7.633434772491455
    6. ''' → logprob: -7.883434772491455
    7. '"' → logprob: -7.883434772491455
    8. ' space' → logprob: -8.008435249328613
    9. '1' → logprob: -8.383435249328613
    10. ' 
' → logprob: -8.508435249328613

Token 851: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2197640985250473
    2. '
' → logprob: -2.094763994216919
    3. ' for' → logprob: -3.094763994216919
    4. '            
' → logprob: -4.219764232635498
    5. ' 
' → logprob: -5.094764232635498
    6. '       ' → logprob: -6.219764232635498
    7. '    
' → logprob: -6.344764232635498
    8. '  
' → logprob: -6.844764232635498
    9. '        
' → logprob: -7.469764232635498
    10. '               ' → logprob: -7.844764232635498

Token 852: ' the' (ID: 290)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5277388095855713
    2. 'the' → logprob: -1.6527388095855713
    3. 'that' → logprob: -2.9027388095855713
    4. 'over' → logprob: -3.0277388095855713
    5. 'commands' → logprob: -3.1527388095855713
    6. ' costs' → logprob: -3.6527388095855713
    7. 'cmd' → logprob: -4.402738571166992
    8. 'override' → logprob: -4.777738571166992
    9. 'each' → logprob: -5.027738571166992
    10. 'one' → logprob: -5.152738571166992

Token 853: ' explicit' (ID: 23141)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.4825202524662018
    2. 'cost' → logprob: -2.232520341873169
    3. 'commands' → logprob: -2.732520341873169
    4. 'i' → logprob: -3.107520341873169
    5. 'command' → logprob: -3.107520341873169
    6. 'override' → logprob: -3.107520341873169
    7. 'cmd' → logprob: -4.23252010345459
    8. '[i' → logprob: -4.35752010345459
    9. '[' → logprob: -4.48252010345459
    10. 'square' → logprob: -5.23252010345459

Token 854: ' command' (ID: 6348)
  Prédit: ' command'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' command' → logprob: -0.18176430463790894
    2. 'command' → logprob: -2.0567643642425537
    3. 'cmd' → logprob: -3.8067643642425537
    4. ' commands' → logprob: -4.806764125823975
    5. ' cmd' → logprob: -5.431764125823975
    6. 'commands' → logprob: -5.931764125823975
    7. '_cmd' → logprob: -8.306764602661133
    8. ' ' → logprob: -9.056764602661133
    9. '_command' → logprob: -9.306764602661133
    10. ')' → logprob: -9.806764602661133

Token 855: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02136816829442978
    2. '
' → logprob: -4.146368026733398
    3. '            
' → logprob: -5.396368026733398
    4. ' for' → logprob: -8.396368026733398
    5. '<|end|>' → logprob: -8.771368026733398
    6. ',' → logprob: -9.771368026733398
    7. '    
' → logprob: -9.771368026733398
    8. '  
' → logprob: -10.021368026733398
    9. 'for' → logprob: -10.021368026733398
    10. '<|end|>' → logprob: -10.271368026733398

Token 856: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14083002507686615
    2. ' for' → logprob: -2.6408300399780273
    3. 'for' → logprob: -3.0158300399780273
    4. '
' → logprob: -5.140830039978027
    5. '#' → logprob: -7.015830039978027
    6. '            
' → logprob: -7.140830039978027
    7. '       ' → logprob: -7.265830039978027
    8. ' next' → logprob: -7.265830039978027
    9. 'next' → logprob: -7.265830039978027
    10. '   ' → logprob: -8.265830039978027

Token 857: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11560476571321487
    2. '#' (adapté à ' #') → logprob: -2.615604877471924
    3. 'if' → logprob: -3.490604877471924
    4. 'orig' → logprob: -6.615604877471924
    5. 'assigned' → logprob: -6.990604877471924
    6. 'current' → logprob: -7.240604877471924
    7. 'curr' → logprob: -7.365604877471924
    8. 'base' → logprob: -7.490604877471924
    9. 'cur' → logprob: -7.615604877471924
    10. 'next' → logprob: -7.615604877471924

Token 858: ' First' (ID: 8338)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.272522509098053
    2. '           ' → logprob: -1.7725224494934082
    3. '#' → logprob: -2.772522449493408
    4. ' for' → logprob: -6.272522449493408
    5. 'dr' → logprob: -6.772522449493408
    6. 'if' → logprob: -7.397522449493408
    7. 'assigned' → logprob: -7.522522449493408
    8. ' #' → logprob: -8.147522926330566
    9. 'next' → logprob: -8.272522926330566
    10. 'current' → logprob: -8.397522926330566

Token 859: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5725598335266113
    2. '#' → logprob: -1.0725598335266113
    3. ',' → logprob: -3.5725598335266113
    4. 'if' → logprob: -4.072559833526611
    5. 'for' → logprob: -4.197559833526611
    6. '=' → logprob: -4.322559833526611
    7. '
' → logprob: -5.322559833526611
    8. ':' → logprob: -5.447559833526611
    9. ')' → logprob: -6.197559833526611
    10. 'cmd' → logprob: -6.322559833526611

Token 860: ' try' (ID: 2075)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23162412643432617
    2. 'dr' → logprob: -1.8566241264343262
    3. 'nr' → logprob: -3.481624126434326
    4. 'for' → logprob: -4.231624126434326
    5. 'cmd' → logprob: -6.856624126434326
    6. 'assigned' → logprob: -7.356624126434326
    7. ' #' → logprob: -7.481624126434326
    8. 'move' → logprob: -7.981624126434326
    9. ' dr' → logprob: -8.231624603271484
    10. 'sr' → logprob: -8.481624603271484

Token 861: ' executing' (ID: 58913)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6243821978569031
    2. '#' → logprob: -1.4993822574615479
    3. 'execut' → logprob: -1.8743822574615479
    4. 'to' → logprob: -3.499382257461548
    5. ':' → logprob: -3.749382257461548
    6. '           ' → logprob: -4.499382019042969
    7. '{
' → logprob: -4.999382019042969
    8. '   ' → logprob: -5.249382019042969
    9. 'assigned' → logprob: -5.249382019042969
    10. ' executing' → logprob: -6.499382019042969

Token 862: ' assigned' (ID: 21482)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.013826489448547363
    2. 'assigned' → logprob: -5.263826370239258
    3. '#' → logprob: -6.138826370239258
    4. '{
' → logprob: -6.388826370239258
    5. '(square' → logprob: -6.638826370239258
    6. ' square' → logprob: -6.763826370239258
    7. '   ' → logprob: -7.888826370239258
    8. '[
' → logprob: -8.013826370239258
    9. '(' → logprob: -8.513826370239258
    10. 'for' → logprob: -8.513826370239258

Token 863: ' command' (ID: 6348)
  Prédit: '_cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -0.3354397714138031
    2. 'cmd' → logprob: -1.4604398012161255
    3. 'command' → logprob: -3.335439682006836
    4. '_command' → logprob: -4.210439682006836
    5. 'if' → logprob: -6.460439682006836
    6. ' command' → logprob: -7.710439682006836
    7. 'square' → logprob: -9.335439682006836
    8. 'for' → logprob: -10.085439682006836
    9. '#' → logprob: -10.210439682006836
    10. '           ' → logprob: -10.210439682006836

Token 864: ' as' (ID: 472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05626016482710838
    2. 'if' → logprob: -3.056260108947754
    3. ' if' → logprob: -5.556260108947754
    4. '
' → logprob: -6.681260108947754
    5. 'cmd' → logprob: -6.931260108947754
    6. '            
' → logprob: -7.556260108947754
    7. '#' → logprob: -7.806260108947754
    8. 'next' → logprob: -8.556260108947754
    9. 'for' → logprob: -9.431260108947754
    10. ',' → logprob: -10.181260108947754

Token 865: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.12034592032432556
    2. 'next' → logprob: -3.1203458309173584
    3. 'if' → logprob: -3.6203458309173584
    4. 'curr' → logprob: -3.7453458309173584
    5. 'cur' → logprob: -4.9953460693359375
    6. 'cmd' → logprob: -5.2453460693359375
    7. ' is' → logprob: -5.9953460693359375
    8. '#' → logprob: -6.3703460693359375
    9. '           ' → logprob: -6.8703460693359375
    10. 'current' → logprob: -8.245346069335938

Token 866: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016658145934343338
    2. '
' → logprob: -4.266658306121826
    3. '            
' → logprob: -6.516658306121826
    4. ' if' → logprob: -7.766658306121826
    5. 'if' → logprob: -8.516657829284668
    6. ':' → logprob: -8.891657829284668
    7. ',' → logprob: -9.641657829284668
    8. ':
' → logprob: -10.516657829284668
    9. '.' → logprob: -10.766657829284668
    10. '#' → logprob: -10.766657829284668

Token 867: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0723415613174438
    2. 'nr' → logprob: -1.1973415613174438
    3. 'if' → logprob: -1.3223415613174438
    4. 'dr' → logprob: -2.8223414421081543
    5. '#' → logprob: -4.947341442108154
    6. 'new' → logprob: -5.072341442108154
    7. 'next' → logprob: -5.572341442108154
    8. 'cmd' → logprob: -5.697341442108154
    9. 'for' → logprob: -5.697341442108154
    10. 'nd' → logprob: -6.072341442108154

Token 868: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09052667021751404
    2. 'nr' → logprob: -3.090526580810547
    3. '           ' → logprob: -3.840526580810547
    4. 'dr' → logprob: -4.715526580810547
    5. 'for' → logprob: -5.465526580810547
    6. 'next' → logprob: -6.215526580810547
    7. 'cmd' → logprob: -6.215526580810547
    8. '#' → logprob: -7.090526580810547
    9. 'new' → logprob: -7.590526580810547
    10. 'nd' → logprob: -8.090526580810547

Token 869: ' square' (ID: 13749)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' → logprob: -2.7610454708337784e-05
    2. '0' → logprob: -11.125027656555176
    3. ' square' → logprob: -11.625027656555176
    4. '(square' → logprob: -13.250027656555176
    5. 'r' → logprob: -14.000027656555176
    6. '   ' → logprob: -14.500027656555176
    7. 'board' → logprob: -15.375027656555176
    8. ' ' → logprob: -15.750027656555176
    9. '1' → logprob: -15.875027656555176
    10. 'sq' → logprob: -15.875027656555176

Token 870: '_cmd' (ID: 26337)
  Prédit: '_cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -5.512236498361744e-07
    2. ' _' → logprob: -15.375000953674316
    3. '_' → logprob: -16.625
    4. 'cmd' → logprob: -16.75
    5. '[_' → logprob: -16.875
    6. '_cm' → logprob: -17.75
    7. 'Cmd' → logprob: -18.0
    8. '\' → logprob: -18.25
    9. '_command' → logprob: -18.25
    10. '##_' → logprob: -18.25

Token 871: ' !=' (ID: 1666)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4749864637851715
    2. 'in' → logprob: -1.9749864339828491
    3. '!=' → logprob: -2.4749865531921387
    4. ' !=' → logprob: -2.9749865531921387
    5. '>=' → logprob: -3.0999865531921387
    6. '<' → logprob: -3.4749865531921387
    7. '<=' → logprob: -4.099986553192139
    8. '==' → logprob: -4.974986553192139
    9. ' >=' → logprob: -6.099986553192139
    10. ' <' → logprob: -6.849986553192139

Token 872: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.875003814697266
    4. '
' → logprob: -17.875003814697266
    5. '  ' → logprob: -18.750003814697266
    6. '=' → logprob: -18.875003814697266
    7. '```' → logprob: -19.000003814697266
    8. '0' → logprob: -19.437503814697266
    9. '۴' → logprob: -19.500003814697266
    10. '' → logprob: -19.625003814697266

Token 873: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۴' → logprob: -17.3750057220459
    4. '   ' → logprob: -17.5625057220459
    5. '  ' → logprob: -18.4375057220459
    6. '৪' → logprob: -18.8125057220459
    7. '４' → logprob: -19.0625057220459
    8. '=' → logprob: -19.3750057220459
    9. '४' → logprob: -19.4375057220459
    10. '' → logprob: -19.6250057220459

Token 874: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47441989183425903
    2. ':' → logprob: -0.974419891834259
    3. ' and' → logprob: -8.349419593811035
    4. 'and' → logprob: -9.599419593811035
    5. '):
' → logprob: -11.224419593811035
    6. ':
' → logprob: -11.849419593811035
    7. '           ' → logprob: -12.224419593811035
    8. ':

' → logprob: -12.474419593811035
    9. '):' → logprob: -12.724419593811035
    10. '   ' → logprob: -13.349419593811035

Token 875: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3945203423500061
    2. 'nr' → logprob: -1.2695202827453613
    3. ' nr' → logprob: -4.019520282745361
    4. 'dr' → logprob: -5.144520282745361
    5. ' dr' → logprob: -5.144520282745361
    6. 'new' → logprob: -5.519520282745361
    7. ' new' → logprob: -6.019520282745361
    8. '#' → logprob: -6.394520282745361
    9. 'next' → logprob: -6.519520282745361
    10. 'ndr' → logprob: -6.769520282745361

Token 876: ' #' (ID: 1069)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.4552075266838074
    2. 'nr' → logprob: -1.0802075862884521
    3. '           ' → logprob: -5.080207347869873
    4. '#' (adapté à ' #') → logprob: -5.205207347869873
    5. 'nd' → logprob: -5.705207347869873
    6. 'if' → logprob: -5.705207347869873
    7. 'new' → logprob: -6.455207347869873
    8. 'cmd' → logprob: -6.705207347869873
    9. 'ndr' → logprob: -6.705207347869873
    10. 'next' → logprob: -6.830207347869873

Token 877: ' If' (ID: 1843)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.08355526626110077
    2. 'dr' → logprob: -3.333555221557617
    3. 'nd' → logprob: -3.458555221557617
    4. 'new' → logprob: -5.083555221557617
    5. 'ndr' → logprob: -5.958555221557617
    6. '#' → logprob: -6.083555221557617
    7. 'next' → logprob: -7.458555221557617
    8. 'ndir' → logprob: -7.708555221557617
    9. '   ' → logprob: -8.333555221557617
    10. 'if' → logprob: -8.833555221557617

Token 878: ' assigned' (ID: 21482)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.014291257597506046
    2. ' square' → logprob: -4.514291286468506
    3. 'dire' → logprob: -6.014291286468506
    4. 'True' → logprob: -7.764291286468506
    5. ' ' → logprob: -10.139290809631348
    6. 'sq' → logprob: -10.139290809631348
    7. ' directions' → logprob: -10.139290809631348
    8. 'dr' → logprob: -10.389290809631348
    9. '(square' → logprob: -10.389290809631348
    10. '0' → logprob: -10.389290809631348

Token 879: ' command' (ID: 6348)
  Prédit: '_cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -0.041863832622766495
    2. 'cmd' → logprob: -4.416863918304443
    3. '_dir' → logprob: -4.541863918304443
    4. '_command' → logprob: -5.541863918304443
    5. '_direction' → logprob: -5.541863918304443
    6. '_d' → logprob: -5.916863918304443
    7. 'direction' → logprob: -6.666863918304443
    8. ' !=' → logprob: -6.666863918304443
    9. '==' → logprob: -6.916863918304443
    10. '!=' → logprob: -7.166863918304443

Token 880: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06723566353321075
    2. ' ==' → logprob: -3.4422357082366943
    3. 'in' → logprob: -3.8172357082366943
    4. '<=' → logprob: -5.192235469818115
    5. ' in' → logprob: -5.567235469818115
    6. '>=' → logprob: -7.067235469818115
    7. '<' → logprob: -7.817235469818115
    8. '!=' → logprob: -8.942235946655273
    9. 'is' → logprob: -9.192235946655273
    10. ' <=' → logprob: -9.692235946655273

Token 881: ' Halt' (ID: 120259)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019646668806672096
    2. 'in' → logprob: -4.769646644592285
    3. 'square' → logprob: -5.144646644592285
    4. '4' → logprob: -5.644646644592285
    5. 'not' → logprob: -7.644646644592285
    6. '3' → logprob: -7.894646644592285
    7. 'None' → logprob: -8.019646644592285
    8. '<=' → logprob: -8.644646644592285
    9. '-' → logprob: -9.894646644592285
    10. '<' → logprob: -10.144646644592285

Token 882: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6397990584373474
    2. ':
' → logprob: -0.8897990584373474
    3. ' and' → logprob: -3.139799118041992
    4. ' or' → logprob: -4.764799118041992
    5. 'and' → logprob: -5.264799118041992
    6. '               ' → logprob: -6.514799118041992
    7. ',' → logprob: -6.764799118041992
    8. '                   ' → logprob: -7.139799118041992
    9. '==' → logprob: -7.264799118041992
    10. 'or' → logprob: -8.764799118041992

Token 883: '4' (ID: 19)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5013072490692139
    2. '):' → logprob: -1.5013072490692139
    3. ' or' → logprob: -1.6263072490692139
    4. '4' → logprob: -2.001307249069214
    5. ')' → logprob: -2.376307249069214
    6. '):
' → logprob: -3.751307249069214
    7. '),' → logprob: -3.876307249069214
    8. 'or' → logprob: -4.001307487487793
    9. '   ' → logprob: -4.876307487487793
    10. ' and' → logprob: -5.001307487487793

Token 884: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.106103777885437
    2. '):
' → logprob: -1.481103777885437
    3. '),' → logprob: -1.856103777885437
    4. ' or' → logprob: -1.981103777885437
    5. ':' → logprob: -3.2311038970947266
    6. 'or' → logprob: -3.6061038970947266
    7. ')' → logprob: -3.7311038970947266
    8. ':
' → logprob: -4.106103897094727
    9. '==' → logprob: -4.606103897094727
    10. ',' → logprob: -4.606103897094727

Token 885: ' but' (ID: 889)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1895187348127365
    2. ' or' → logprob: -2.814518690109253
    3. ' and' → logprob: -2.814518690109253
    4. ':
' → logprob: -3.314518690109253
    5. 'and' → logprob: -5.189518928527832
    6. '==' → logprob: -5.439518928527832
    7. 'or' → logprob: -6.564518928527832
    8. ',' → logprob: -6.814518928527832
    9. ' ==' → logprob: -7.189518928527832
    10. '   ' → logprob: -7.564518928527832

Token 886: ' not' (ID: 625)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.7813124656677246
    2. 'square' → logprob: -0.9063124656677246
    3. 'r' → logprob: -2.6563124656677246
    4. 'not' → logprob: -3.9063124656677246
    5. ' False' → logprob: -4.281312465667725
    6. ' not' → logprob: -4.406312465667725
    7. ' square' → logprob: -4.906312465667725
    8. ' r' → logprob: -5.156312465667725
    9. '(square' → logprob: -5.656312465667725
    10. 'True' → logprob: -6.906312465667725

Token 887: ' goal' (ID: 8583)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.6703345775604248
    2. 'at' → logprob: -0.7953345775604248
    3. '(goal' → logprob: -4.295334815979004
    4. 'r' → logprob: -4.795334815979004
    5. ' at' → logprob: -5.170334815979004
    6. 'goal' → logprob: -5.295334815979004
    7. ' (' → logprob: -6.545334815979004
    8. '(' → logprob: -6.795334815979004
    9. '(h' → logprob: -7.545334815979004
    10. '(at' → logprob: -8.045334815979004

Token 888: ' position' (ID: 4010)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47082436084747314
    2. ':' → logprob: -1.9708243608474731
    3. ' and' → logprob: -2.3458242416381836
    4. ' or' → logprob: -2.9708242416381836
    5. '               ' → logprob: -3.4708242416381836
    6. 'and' → logprob: -3.5958242416381836
    7. '                   ' → logprob: -4.345824241638184
    8. 'or' → logprob: -4.720824241638184
    9. '           ' → logprob: -6.095824241638184
    10. 'else' → logprob: -6.095824241638184

Token 889: ' =>' (ID: 871)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2799757122993469
    2. ':' → logprob: -1.7799756526947021
    3. '               ' → logprob: -3.154975652694702
    4. ' and' → logprob: -4.154975891113281
    5. ' or' → logprob: -5.154975891113281
    6. ',' → logprob: -6.029975891113281
    7. '                   ' → logprob: -6.154975891113281
    8. 'and' → logprob: -6.279975891113281
    9. '           ' → logprob: -6.529975891113281
    10. '==' → logprob: -7.279975891113281

Token 890: ' fail' (ID: 7111)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.04322846606373787
    2. ' continue' → logprob: -3.5432283878326416
    3. '#' → logprob: -4.543228626251221
    4. 'pass' → logprob: -6.168228626251221
    5. '               ' → logprob: -8.168228149414062
    6. ' #' → logprob: -8.918228149414062
    7. ' pass' → logprob: -9.418228149414062
    8. '   ' → logprob: -9.918228149414062
    9. 'break' → logprob: -10.043228149414062
    10. '                   ' → logprob: -10.793228149414062

Token 891: ' scenario' (ID: 25697)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27975305914878845
    2. ':' → logprob: -2.5297529697418213
    3. ':
' → logprob: -2.5297529697418213
    4. ' or' → logprob: -3.0297529697418213
    5. '           ' → logprob: -3.9047529697418213
    6. ' and' → logprob: -5.1547532081604
    7. ',' → logprob: -5.6547532081604
    8. '                   ' → logprob: -6.1547532081604
    9. '\n' → logprob: -6.6547532081604
    10. '                
' → logprob: -7.0297532081604

Token 892: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4447232484817505
    2. '               ' → logprob: -1.5697232484817505
    3. ':
' → logprob: -1.9447232484817505
    4. ' or' → logprob: -5.944723129272461
    5. '                   ' → logprob: -6.444723129272461
    6. ' and' → logprob: -6.819723129272461
    7. '\n' → logprob: -7.069723129272461
    8. '           ' → logprob: -7.944723129272461
    9. ',' → logprob: -7.944723129272461
    10. ' continue' → logprob: -8.319723129272461

Token 893: ' don't' (ID: 4128)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38073042035102844
    2. ' continue' → logprob: -2.130730390548706
    3. 'continue' → logprob: -2.380730390548706
    4. '                   ' → logprob: -2.630730390548706
    5. 'pass' → logprob: -4.380730628967285
    6. ' pass' → logprob: -4.630730628967285
    7. '#' → logprob: -5.630730628967285
    8. ':' → logprob: -6.255730628967285
    9. '   ' → logprob: -6.630730628967285
    10. 'if' → logprob: -6.880730628967285

Token 894: ' move' (ID: 5275)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0020747212693095207
    2. 'expand' → logprob: -7.127074718475342
    3. 'push' → logprob: -7.752074718475342
    4. 'pro' → logprob: -8.0020751953125
    5. 'process' → logprob: -8.5020751953125
    6. 'consider' → logprob: -9.6270751953125
    7. 'enqueue' → logprob: -9.7520751953125
    8. 'add' → logprob: -10.6270751953125
    9. 'expl' → logprob: -10.8770751953125
    10. ' continue' → logprob: -11.1270751953125

Token 895: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.005600929260254
    2. 'else' → logprob: -1.755600929260254
    3. '
' → logprob: -2.005600929260254
    4. '\n' → logprob: -2.130600929260254
    5. '           ' → logprob: -2.505600929260254
    6. ' else' → logprob: -3.255600929260254
    7. ':
' → logprob: -3.505600929260254
    8. ':' → logprob: -4.255600929260254
    9. '                
' → logprob: -4.880600929260254
    10. ' or' → logprob: -5.005600929260254

Token 896: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05487336590886116
    2. '\n' → logprob: -3.554873466491699
    3. '           ' → logprob: -4.054873466491699
    4. '
' → logprob: -6.429873466491699
    5. '                
' → logprob: -6.429873466491699
    6. ':' → logprob: -6.804873466491699
    7. '                   ' → logprob: -7.054873466491699
    8. ':
' → logprob: -8.1798734664917
    9. '\' → logprob: -8.4298734664917
    10. '' → logprob: -8.5548734664917

Token 897: ' #' (ID: 1069)
  Prédit: ' dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dr' → logprob: -1.6361936330795288
    2. '               ' → logprob: -1.7611936330795288
    3. 'dr' → logprob: -1.7611936330795288
    4. 'if' → logprob: -2.0111937522888184
    5. ' if' → logprob: -2.0111937522888184
    6. '           ' → logprob: -3.2611937522888184
    7. ' next' → logprob: -3.8861937522888184
    8. ' for' → logprob: -4.011193752288818
    9. 'for' → logprob: -4.136193752288818
    10. 'next' → logprob: -4.136193752288818

Token 898: ' Robot' (ID: 48818)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8138771653175354
    2. 'nr' → logprob: -1.1888771057128906
    3. 'dr' → logprob: -2.3138771057128906
    4. 'else' → logprob: -2.6888771057128906
    5. 'nd' → logprob: -2.8138771057128906
    6. 'new' → logprob: -4.688877105712891
    7. 'next' → logprob: -4.938877105712891
    8. 'ndr' → logprob: -5.813877105712891
    9. '#' → logprob: -6.063877105712891
    10. 'for' → logprob: -6.938877105712891

Token 899: ' hal' (ID: 4039)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dr' → logprob: -1.9927747249603271
    2. '_moves' → logprob: -1.9927747249603271
    3. '#' → logprob: -2.367774724960327
    4. 'moves' → logprob: -2.617774724960327
    5. '_dir' → logprob: -2.742774724960327
    6. ' can' → logprob: -2.992774724960327
    7. '           ' → logprob: -3.242774724960327
    8. 'can' → logprob: -3.492774724960327
    9. 'if' → logprob: -3.617774724960327
    10. '_cmd' → logprob: -3.742774724960327

Token 900: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.014167269691824913
    2. 't' → logprob: -4.264167308807373
    3. '#' → logprob: -13.764166831970215
    4. 'ting' → logprob: -14.139166831970215
    5. 'ves' → logprob: -14.764166831970215
    6. '           ' → logprob: -14.764166831970215
    7. 'td' → logprob: -15.639166831970215
    8. '   ' → logprob: -16.01416778564453
    9. 'т' → logprob: -16.01416778564453
    10. '               ' → logprob: -16.13916778564453

Token 901: ' before' (ID: 2254)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20338335633277893
    2. '               ' → logprob: -2.578383445739746
    3. ' if' → logprob: -3.203383445739746
    4. '
' → logprob: -3.203383445739746
    5. '            
' → logprob: -4.703383445739746
    6. 'if' → logprob: -5.828383445739746
    7. 'elif' → logprob: -5.953383445739746
    8. 'else' → logprob: -6.328383445739746
    9. '                
' → logprob: -6.453383445739746
    10. '<|end|>' → logprob: -6.578383445739746

Token 902: ' goal' (ID: 8583)
  Prédit: 'moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moving' → logprob: -0.0035353288985788822
    2. 'continu' → logprob: -6.753535270690918
    3. 'next' → logprob: -7.503535270690918
    4. 'if' → logprob: -7.878535270690918
    5. 'movement' → logprob: -8.003535270690918
    6. 'execut' → logprob: -8.753535270690918
    7. 'trying' → logprob: -8.753535270690918
    8. 'continue' → logprob: -8.878535270690918
    9. ' moving' → logprob: -9.128535270690918
    10. 'the' → logprob: -9.128535270690918

Token 903: ' ->' (ID: 2747)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1397947072982788
    2. '
' → logprob: -2.6397948265075684
    3. '           ' → logprob: -3.5147948265075684
    4. '                
' → logprob: -4.139794826507568
    5. '            
' → logprob: -5.764794826507568
    6. '  
' → logprob: -6.014794826507568
    7. '\n' → logprob: -6.264794826507568
    8. ' 
' → logprob: -6.889794826507568
    9. '    
' → logprob: -7.014794826507568
    10. ',' → logprob: -7.264794826507568

Token 904: ' lose' (ID: 12577)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.013205880299210548
    2. ' continue' → logprob: -4.5132060050964355
    3. 'pass' → logprob: -6.2632060050964355
    4. '               ' → logprob: -8.888205528259277
    5. ' pass' → logprob: -10.013205528259277
    6. '                   ' → logprob: -10.388205528259277
    7. '   ' → logprob: -11.138205528259277
    8. '           ' → logprob: -11.263205528259277
    9. 'return' → logprob: -11.888205528259277
    10. '                       ' → logprob: -14.638205528259277

Token 905: ' ->' (ID: 2747)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.032063379883766174
    2. '           ' → logprob: -4.1570634841918945
    3. '
' → logprob: -5.5320634841918945
    4. '\n' → logprob: -5.7820634841918945
    5. ' continue' → logprob: -5.9070634841918945
    6. '                
' → logprob: -6.2820634841918945
    7. 'continue' → logprob: -6.6570634841918945
    8. 'else' → logprob: -7.1570634841918945
    9. '                   ' → logprob: -7.7820634841918945
    10. '  
' → logprob: -8.032063484191895

Token 906: ' don't' (ID: 4128)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00043555660522542894
    2. ' continue' → logprob: -7.7504353523254395
    3. 'pass' → logprob: -12.625435829162598
    4. '   ' → logprob: -13.750435829162598
    5. 'return' → logprob: -15.125435829162598
    6. '           ' → logprob: -15.750435829162598
    7. '	continue' → logprob: -16.87543487548828
    8. '       ' → logprob: -17.37543487548828
    9. '               ' → logprob: -17.37543487548828
    10. '```' → logprob: -17.75043487548828

Token 907: ' consider' (ID: 3331)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0034104858059436083
    2. 'move' → logprob: -7.128410339355469
    3. '           ' → logprob: -7.253410339355469
    4. ' continue' → logprob: -7.253410339355469
    5. '```' → logprob: -7.253410339355469
    6. '               ' → logprob: -8.753410339355469
    7. '
' → logprob: -9.628410339355469
    8. '   ' → logprob: -10.253410339355469
    9. '       ' → logprob: -10.253410339355469
    10. 'pass' → logprob: -10.503410339355469

Token 908: ' this' (ID: 495)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9466487169265747
    2. '\n' → logprob: -1.0716487169265747
    3. '           ' → logprob: -1.9466487169265747
    4. '               ' → logprob: -2.196648597717285
    5. '            
' → logprob: -4.946648597717285
    6. '                
' → logprob: -6.321648597717285
    7. '  
' → logprob: -6.446648597717285
    8. '    
' → logprob: -6.946648597717285
    9. ' continue' → logprob: -7.196648597717285
    10. '' → logprob: -7.196648597717285

Token 909: ' path' (ID: 3104)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4315800070762634
    2. '               ' → logprob: -1.9315800666809082
    3. '           ' → logprob: -2.306580066680908
    4. '            
' → logprob: -3.681580066680908
    5. '\n' → logprob: -3.931580066680908
    6. '                
' → logprob: -4.306580066680908
    7. ' 
' → logprob: -4.556580066680908
    8. '' → logprob: -4.681580066680908
    9. '  
' → logprob: -4.806580066680908
    10. '    
' → logprob: -5.306580066680908

Token 910: ' further' (ID: 6544)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.595180332660675
    2. '               ' → logprob: -1.0951802730560303
    3. '                
' → logprob: -3.3451802730560303
    4. '\n' → logprob: -3.4701802730560303
    5. '           ' → logprob: -3.9701802730560303
    6. '            
' → logprob: -4.720180511474609
    7. '  
' → logprob: -5.095180511474609
    8. '    
' → logprob: -5.095180511474609
    9. ' 
' → logprob: -5.970180511474609
    10. 'else' → logprob: -6.970180511474609

Token 911: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06844024360179901
    2. '
' → logprob: -3.9434401988983154
    3. '           ' → logprob: -4.1934404373168945
    4. '                
' → logprob: -4.1934404373168945
    5. '\n' → logprob: -4.6934404373168945
    6. '            
' → logprob: -5.9434404373168945
    7. '    
' → logprob: -6.9434404373168945
    8. '  
' → logprob: -7.0684404373168945
    9. ' 
' → logprob: -7.6934404373168945
    10. ' continue' → logprob: -7.9434404373168945

Token 912: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040173765271902084
    2. '            
' → logprob: -4.790173530578613
    3. 'else' → logprob: -4.915173530578613
    4. '
' → logprob: -5.290173530578613
    5. '               ' → logprob: -5.415173530578613
    6. '\n' → logprob: -5.790173530578613
    7. ' else' → logprob: -6.040173530578613
    8. '```' → logprob: -6.165173530578613
    9. ' if' → logprob: -6.540173530578613
    10. 'if' → logprob: -7.040173530578613

Token 913: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0754705667495728
    2. ' else' → logprob: -1.7004705667495728
    3. ' if' → logprob: -1.8254705667495728
    4. 'else' → logprob: -2.075470447540283
    5. '               ' → logprob: -2.325470447540283
    6. 'if' → logprob: -2.825470447540283
    7. ' continue' → logprob: -4.700470447540283
    8. ' pass' → logprob: -5.325470447540283
    9. ' for' → logprob: -5.825470447540283
    10. 'continue' → logprob: -5.825470447540283

Token 914: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39606818556785583
    2. 'dr' → logprob: -1.2710682153701782
    3. '           ' → logprob: -3.8960680961608887
    4. 'else' → logprob: -4.021068096160889
    5. '               ' → logprob: -5.771068096160889
    6. '#' → logprob: -6.771068096160889
    7. 'nr' → logprob: -7.021068096160889
    8. 'move' → logprob: -7.271068096160889
    9. ' dr' → logprob: -8.021068572998047
    10. ' if' → logprob: -8.146068572998047

Token 915: ' only' (ID: 1606)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14184285700321198
    2. 'pass' → logprob: -2.516842842102051
    3. ' if' → logprob: -3.266842842102051
    4. ' pass' → logprob: -5.266842842102051
    5. 'continue' → logprob: -6.016842842102051
    6. '           ' → logprob: -6.516842842102051
    7. '               ' → logprob: -6.766842842102051
    8. '   ' → logprob: -7.141842842102051
    9. '                   ' → logprob: -7.391842842102051
    10. '
' → logprob: -7.516842842102051

Token 916: ' proceed' (ID: 18988)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10480112582445145
    2. 'consider' → logprob: -2.4798011779785156
    3. 'continue' → logprob: -4.604801177978516
    4. 'pro' → logprob: -7.104801177978516
    5. 'elif' → logprob: -7.229801177978516
    6. 'try' → logprob: -7.479801177978516
    7. 'process' → logprob: -7.479801177978516
    8. 'else' → logprob: -7.604801177978516
    9. ' if' → logprob: -7.729801177978516
    10. 'the' → logprob: -7.854801177978516

Token 917: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6003259420394897
    2. ' if' → logprob: -0.8503259420394897
    3. 'if' → logprob: -3.9753260612487793
    4. '               ' → logprob: -5.475326061248779
    5. '            
' → logprob: -7.600326061248779
    6. ' with' → logprob: -9.600325584411621
    7. ' for' → logprob: -9.975325584411621
    8. '       ' → logprob: -10.100325584411621
    9. '            ' → logprob: -10.225325584411621
    10. ' to' → logprob: -10.225325584411621

Token 918: ' command' (ID: 6348)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.004271665588021278
    2. ' square' → logprob: -5.879271507263184
    3. '(square' → logprob: -7.254271507263184
    4. 'r' → logprob: -7.879271507263184
    5. 'True' → logprob: -8.379271507263184
    6. '0' → logprob: -9.629271507263184
    7. '(r' → logprob: -11.254271507263184
    8. 'not' → logprob: -11.254271507263184
    9. '(' → logprob: -11.379271507263184
    10. 'sq' → logprob: -11.754271507263184

Token 919: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.23256070911884308
    2. '!=' → logprob: -1.6075607538223267
    3. '<=' → logprob: -6.107560634613037
    4. ' in' → logprob: -6.482560634613037
    5. ' <=' → logprob: -6.607560634613037
    6. ' is' → logprob: -7.607560634613037
    7. ' ==' → logprob: -7.982560634613037
    8. '==' → logprob: -7.982560634613037
    9. '<' → logprob: -8.607561111450195
    10. ' <' → logprob: -8.982561111450195

Token 920: ' Halt' (ID: 120259)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00015955790877342224
    2. ' ' → logprob: -8.75015926361084
    3. '0' → logprob: -14.87515926361084
    4. '۴' → logprob: -15.87515926361084
    5. '   ' → logprob: -16.375160217285156
    6. '=' → logprob: -17.187660217285156
    7. '' → logprob: -17.187660217285156
    8. '  ' → logprob: -17.250160217285156
    9. '٤' → logprob: -17.312660217285156
    10. 'square' → logprob: -17.375160217285156

Token 921: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7985207438468933
    2. ' or' → logprob: -1.673520803451538
    3. ':' → logprob: -1.798520803451538
    4. ':
' → logprob: -2.673520803451538
    5. '           ' → logprob: -2.798520803451538
    6. ' and' → logprob: -3.798520803451538
    7. '
' → logprob: -4.173520565032959
    8. '\n' → logprob: -4.173520565032959
    9. '                
' → logprob: -5.798520565032959
    10. '            
' → logprob: -6.298520565032959

Token 922: '4' (ID: 19)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022135471925139427
    2. ' or' → logprob: -4.647135257720947
    3. '):' → logprob: -5.397135257720947
    4. 'or' → logprob: -5.522135257720947
    5. '):
' → logprob: -6.272135257720947
    6. ')
' → logprob: -6.897135257720947
    7. '               ' → logprob: -7.772135257720947
    8. ').' → logprob: -8.772135734558105
    9. ' )' → logprob: -9.022135734558105
    10. '):

' → logprob: -10.022135734558105

Token 923: ')

' (ID: 1029)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5562402009963989
    2. ')' → logprob: -1.306240200996399
    3. '):' → logprob: -2.4312400817871094
    4. ')
' → logprob: -3.5562400817871094
    5. '               ' → logprob: -4.181240081787109
    6. ' or' → logprob: -4.556240081787109
    7. '):

' → logprob: -4.931240081787109
    8. '):
' → logprob: -5.431240081787109
    9. '           ' → logprob: -7.306240081787109
    10. ')

' → logprob: -8.05624008178711

Token 924: '               ' (ID: 506)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.36203208565711975
    2. 'dr' → logprob: -1.8620320558547974
    3. '           ' → logprob: -2.612032175064087
    4. 'if' → logprob: -3.362032175064087
    5. 'nd' → logprob: -3.987032175064087
    6. 'new' → logprob: -4.737031936645508
    7. 'ndr' → logprob: -5.487031936645508
    8. 'next' → logprob: -5.737031936645508
    9. 'move' → logprob: -6.612031936645508
    10. 'cmd' → logprob: -6.737031936645508

Token 925: ' nd' (ID: 5914)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.2377951592206955
    2. 'dr' → logprob: -2.612795114517212
    3. 'nd' (adapté à ' nd') → logprob: -2.987795114517212
    4. 'if' → logprob: -3.362795114517212
    5. 'new' → logprob: -3.487795114517212
    6. 'next' → logprob: -4.862795352935791
    7. 'ndr' → logprob: -5.612795352935791
    8. 'for' → logprob: -5.737795352935791
    9. '#' → logprob: -6.112795352935791
    10. 'ndir' → logprob: -6.612795352935791

Token 926: ' =' (ID: 314)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.6727746725082397
    2. ' =' → logprob: -1.1727746725082397
    3. '=' → logprob: -1.9227746725082397
    4. 'irection' → logprob: -3.7977747917175293
    5. 'r' → logprob: -4.797774791717529
    6. '_r' → logprob: -6.047774791717529
    7. ',' → logprob: -8.547774314880371
    8. 'irections' → logprob: -8.797774314880371
    9. '_direction' → logprob: -9.422774314880371
    10. '=r' → logprob: -9.547774314880371

Token 927: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.02072698064148426
    2. ' turn' → logprob: -3.8957269191741943
    3. '(turn' → logprob: -9.145727157592773
    4. '   ' → logprob: -9.645727157592773
    5. ' ' → logprob: -12.645727157592773
    6. '(' → logprob: -12.770727157592773
    7. '  ' → logprob: -13.145727157592773
    8. ' (' → logprob: -13.645727157592773
    9. 'direction' → logprob: -13.645727157592773
    10. 'd' → logprob: -14.520727157592773

Token 928: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.02225077524781227
    2. '(d' → logprob: -4.522250652313232
    3. 'from' → logprob: -4.647250652313232
    4. 'd' → logprob: -7.272250652313232
    5. '=' → logprob: -8.39725112915039
    6. '[d' → logprob: -8.77225112915039
    7. '=d' → logprob: -9.27225112915039
    8. ' d' → logprob: -9.77225112915039
    9. 'From' → logprob: -10.14725112915039
    10. ')' → logprob: -10.14725112915039

Token 929: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00022535098833031952
    2. 'd' → logprob: -8.750225067138672
    3. '(' → logprob: -9.625225067138672
    4. '(
' → logprob: -15.250225067138672
    5. ' (' → logprob: -15.375225067138672
    6. ')d' → logprob: -16.000225067138672
    7. '[d' → logprob: -16.875225067138672
    8. ')' → logprob: -16.875225067138672
    9. ' d' → logprob: -17.000225067138672
    10. '
' → logprob: -17.375225067138672

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012072573881596327
    2. ',s' → logprob: -6.75120735168457
    3. 'square' → logprob: -11.50120735168457
    4. ' ,' → logprob: -11.87620735168457
    5. ',d' → logprob: -12.12620735168457
    6. ',
' → logprob: -12.50120735168457
    7. '[' → logprob: -13.12620735168457
    8. ')' → logprob: -13.25120735168457
    9. ',n' → logprob: -13.25120735168457
    10. ',r' → logprob: -13.50120735168457

Token 931: ' square' (ID: 13749)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.0011229529045522213
    2. ' square' → logprob: -7.001122951507568
    3. 'board' → logprob: -8.751123428344727
    4. '   ' → logprob: -10.001123428344727
    5. '       ' → logprob: -12.876123428344727
    6. '           ' → logprob: -13.626123428344727
    7. '(square' → logprob: -14.001123428344727
    8. ' ' → logprob: -14.251123428344727
    9. '    ' → logprob: -14.626123428344727
    10. ')' → logprob: -14.876123428344727

Token 932: '_cmd' (ID: 26337)
  Prédit: '_cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -0.00033784625702537596
    2. 'cmd' → logprob: -8.000337600708008
    3. 'Cmd' → logprob: -13.250337600708008
    4. '_' → logprob: -16.000337600708008
    5. '_cm' → logprob: -16.500337600708008
    6. '
' → logprob: -16.875337600708008
    7. 'd' → logprob: -16.875337600708008
    8. '[' → logprob: -17.125337600708008
    9. '`' → logprob: -17.250337600708008
    10. '	cmd' → logprob: -17.375337600708008

Token 933: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014221448451280594
    2. ')
' → logprob: -4.264221668243408
    3. ')
' → logprob: -9.88922119140625
    4. ')`
' → logprob: -13.13922119140625
    5. ')`' → logprob: -13.38922119140625
    6. '           ' → logprob: -13.76422119140625
    7. ' )' → logprob: -13.76422119140625
    8. ')

' → logprob: -14.63922119140625
    9. '       ' → logprob: -15.63922119140625
    10. ']' → logprob: -15.63922119140625

Token 934: '               ' (ID: 506)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.16984780132770538
    2. '           ' → logprob: -2.7948477268218994
    3. ' nr' → logprob: -2.9198477268218994
    4. 'dr' → logprob: -3.2948477268218994
    5. '
' → logprob: -6.5448479652404785
    6. ' dr' → logprob: -7.1698479652404785
    7. '               ' → logprob: -7.6698479652404785
    8. '```' → logprob: -7.7948479652404785
    9. ',' → logprob: -8.29484748840332
    10. '            
' → logprob: -9.16984748840332

Token 935: ' dr' (ID: 1498)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.4744018018245697
    2. 'dr' (adapté à ' dr') → logprob: -0.9744018316268921
    3. ' nr' → logprob: -8.099401473999023
    4. '   ' → logprob: -11.349401473999023
    5. ' dr' → logprob: -12.724401473999023
    6. 'rr' → logprob: -13.349401473999023
    7. '       ' → logprob: -13.474401473999023
    8. 'new' → logprob: -13.599401473999023
    9. '
' → logprob: -14.599401473999023
    10. '```' → logprob: -14.724401473999023

Token 936: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015031944494694471
    2. ',n' → logprob: -7.376502990722656
    3. ',d' → logprob: -7.876502990722656
    4. ',r' → logprob: -8.251502990722656
    5. ' ,' → logprob: -8.876502990722656
    6. '=' → logprob: -9.501502990722656
    7. ',w' → logprob: -12.751502990722656
    8. ',
' → logprob: -12.751502990722656
    9. ',row' → logprob: -12.876502990722656
    10. ',c' → logprob: -13.126502990722656

Token 937: ' dc' (ID: 37843)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.00861468818038702
    2. ' dc' → logprob: -4.758614540100098
    3. '_dc' → logprob: -16.508615493774414
    4. 'dcc' → logprob: -17.258615493774414
    5. '(dc' → logprob: -17.258615493774414
    6. '.dc' → logprob: -17.383615493774414
    7. '
' → logprob: -18.508615493774414
    8. '   ' → logprob: -18.758615493774414
    9. ',' → logprob: -19.008615493774414
    10. 'dire' → logprob: -20.633615493774414

Token 938: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003420183784328401
    2. ' =' → logprob: -8.00034236907959
    3. '=d' → logprob: -12.00034236907959
    4. 'dire' → logprob: -15.87534236907959
    5. '=
' → logprob: -16.000341415405273
    6. '=s' → logprob: -16.125341415405273
    7. ')' → logprob: -18.625341415405273
    8. ' directions' → logprob: -18.750341415405273
    9. '=user' → logprob: -18.875341415405273
    10. ')=' → logprob: -19.000341415405273

Token 939: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.0002613358374219388
    2. ' directions' → logprob: -8.250261306762695
    3. '   ' → logprob: -20.000261306762695
    4. 'direction' → logprob: -20.250261306762695
    5. 'directories' → logprob: -20.750261306762695
    6. 'dimensions' → logprob: -22.500261306762695
    7. '-dire' → logprob: -22.625261306762695
    8. 'd' → logprob: -23.125261306762695
    9. 'Directions' → logprob: -23.375261306762695
    10. 'irections' → logprob: -24.000261306762695

Token 940: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.137130498653278e-05
    2. 'nd' → logprob: -9.500081062316895
    3. '[n' → logprob: -12.875081062316895
    4. ' nd' → logprob: -13.000081062316895
    5. '(nd' → logprob: -14.000081062316895
    6. ' [' → logprob: -14.875081062316895
    7. '[d' → logprob: -15.625081062316895
    8. '
' → logprob: -16.50008201599121
    9. '[
' → logprob: -16.87508201599121
    10. '[ind' → logprob: -17.37508201599121

Token 941: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0018585572252050042
    2. 'd' → logprob: -6.876858711242676
    3. ' nd' → logprob: -7.126858711242676
    4. '(nd' → logprob: -11.626858711242676
    5. '[' → logprob: -12.001858711242676
    6. '
' → logprob: -13.501858711242676
    7. '   ' → logprob: -13.626858711242676
    8. '_nd' → logprob: -14.001858711242676
    9. ']' → logprob: -14.626858711242676
    10. '[d' → logprob: -14.751858711242676

Token 942: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2521175444126129
    2. ']
' → logprob: -1.5021175146102905
    3. ']
' → logprob: -9.877117156982422
    4. '][' → logprob: -9.877117156982422
    5. '       ' → logprob: -10.127117156982422
    6. '[' → logprob: -11.502117156982422
    7. '           ' → logprob: -12.002117156982422
    8. '[
' → logprob: -12.377117156982422
    9. '[r' → logprob: -12.377117156982422
    10. '   ' → logprob: -12.502117156982422

Token 943: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6906660795211792
    2. 'nr' → logprob: -1.4406660795211792
    3. ' nr' → logprob: -1.6906660795211792
    4. 'n' → logprob: -3.6906661987304688
    5. ' n' → logprob: -3.6906661987304688
    6. ' r' → logprob: -4.440666198730469
    7. 'r' → logprob: -4.940666198730469
    8. ' new' → logprob: -5.190666198730469
    9. '\n' → logprob: -7.440666198730469
    10. '               ' → logprob: -7.440666198730469

Token 944: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' (adapté à ' nr') → logprob: -0.029767731204628944
    2. ' nr' → logprob: -3.5297677516937256
    3. 'new' → logprob: -11.029767990112305
    4. '_nr' → logprob: -14.404767990112305
    5. 'r' → logprob: -15.779767990112305
    6. ' new' → logprob: -15.904767990112305
    7. '.nr' → logprob: -16.279767990112305
    8. '   ' → logprob: -16.654767990112305
    9. 'rr' → logprob: -16.654767990112305
    10. 'rn' → logprob: -17.029767990112305

Token 945: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7046994566917419
    2. ' =' → logprob: -0.9546994566917419
    3. '+' → logprob: -2.3296995162963867
    4. ',' → logprob: -4.079699516296387
    5. ' +' → logprob: -5.829699516296387
    6. ' +=' → logprob: -6.454699516296387
    7. '+=' → logprob: -7.204699516296387
    8. '=n' → logprob: -7.954699516296387
    9. '<|end|>' → logprob: -8.204699516296387
    10. '=r' → logprob: -8.954699516296387

Token 946: ' nc' (ID: 39841)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005236479919403791
    2. ' r' → logprob: -5.255236625671387
    3. '   ' → logprob: -13.130236625671387
    4. ' =' → logprob: -14.880236625671387
    5. '=' → logprob: -16.00523567199707
    6. '	r' → logprob: -16.50523567199707
    7. '    ' → logprob: -16.88023567199707
    8. '=r' → logprob: -17.00523567199707
    9. '  ' → logprob: -17.63023567199707
    10. ' ' → logprob: -17.75523567199707

Token 947: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014242559671402
    2. ' =' → logprob: -1.701424241065979
    3. '=r' → logprob: -11.951424598693848
    4. '=n' → logprob: -13.076424598693848
    5. ',' → logprob: -13.951424598693848
    6. '	' → logprob: -14.076424598693848
    7. '+=' → logprob: -15.826424598693848
    8. '+' → logprob: -16.20142364501953
    9. ' ' → logprob: -16.57642364501953
    10. '   ' → logprob: -16.95142364501953

Token 948: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00017994173686020076
    2. ' r' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.5001802444458
    4. '	r' → logprob: -15.7501802444458
    5. '(r' → logprob: -17.125179290771484
    6. '=r' → logprob: -20.125179290771484
    7. '_r' → logprob: -20.250179290771484
    8. '
' → logprob: -20.750179290771484
    9. '[r' → logprob: -20.875179290771484
    10. '    ' → logprob: -21.000179290771484

Token 949: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16040091216564178
    2. ' +' → logprob: -1.9104008674621582
    3. '+r' → logprob: -8.910401344299316
    4. '+d' → logprob: -11.035401344299316
    5. ',' → logprob: -11.160401344299316
    6. '+n' → logprob: -12.410401344299316
    7. '+s' → logprob: -13.410401344299316
    8. '+c' → logprob: -13.660401344299316
    9. '+,' → logprob: -13.910401344299316
    10. '+
' → logprob: -14.035401344299316

Token 950: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -1.6240566083070007e-06
    2. ' dr' → logprob: -13.375001907348633
    3. '	dr' → logprob: -17.875001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '
' → logprob: -19.625001907348633
    6. '(dr' → logprob: -19.875001907348633
    7. '_dr' → logprob: -20.250001907348633
    8. 'd' → logprob: -20.375001907348633
    9. '1' → logprob: -20.375001907348633
    10. ' ' → logprob: -20.500001907348633

Token 951: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.612634362885728e-05
    2. ',n' → logprob: -10.250076293945312
    3. ' ,' → logprob: -10.500076293945312
    4. ',c' → logprob: -11.375076293945312
    5. ',
' → logprob: -14.000076293945312
    6. '<|end|>' → logprob: -14.625076293945312
    7. ',d' → logprob: -15.125076293945312
    8. ',w' → logprob: -17.875076293945312
    9. ',user' → logprob: -18.000076293945312
    10. '_,' → logprob: -18.125076293945312

Token 952: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04859646037220955
    2. ' c' → logprob: -3.0485963821411133
    3. '   ' → logprob: -11.673596382141113
    4. '	c' → logprob: -15.048596382141113
    5. '    ' → logprob: -16.29859733581543
    6. '       ' → logprob: -16.92359733581543
    7. '  ' → logprob: -17.17359733581543
    8. ' ' → logprob: -17.42359733581543
    9. '           ' → logprob: -17.67359733581543
    10. '     ' → logprob: -19.04859733581543

Token 953: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008962692692875862
    2. ' +' → logprob: -4.758962631225586
    3. 'c' → logprob: -8.133962631225586
    4. '+c' → logprob: -10.258962631225586
    5. 'dc' → logprob: -11.258962631225586
    6. '   ' → logprob: -12.258962631225586
    7. '+d' → logprob: -14.133962631225586
    8. ' ' → logprob: -14.633962631225586
    9. ' dc' → logprob: -15.383962631225586
    10. '  ' → logprob: -15.633962631225586

Token 954: ' dc' (ID: 37843)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.0005536287208087742
    2. ' dc' → logprob: -7.500553607940674
    3. '1' → logprob: -14.750554084777832
    4. '(dc' → logprob: -15.625554084777832
    5. ' ' → logprob: -16.000553131103516
    6. '   ' → logprob: -17.625553131103516
    7. '  ' → logprob: -18.750553131103516
    8. '0' → logprob: -19.000553131103516
    9. '_dc' → logprob: -19.750553131103516
    10. '
' → logprob: -20.000553131103516

Token 955: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6492376327514648
    2. '               ' → logprob: -1.5242376327514648
    3. '<|end|>' → logprob: -1.5242376327514648
    4. '<|end|>' → logprob: -4.649237632751465
    5. '
' → logprob: -4.899237632751465
    6. '            
' → logprob: -5.149237632751465
    7. ')' → logprob: -5.274237632751465
    8. ' if' → logprob: -6.399237632751465
    9. ',' → logprob: -6.649237632751465
    10. '```' → logprob: -6.899237632751465

Token 956: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24966540932655334
    2. ' if' → logprob: -2.2496654987335205
    3. 'if' → logprob: -2.4996654987335205
    4. '               ' → logprob: -3.4996654987335205
    5. '            
' → logprob: -6.874665260314941
    6. '```' → logprob: -6.999665260314941
    7. '                   ' → logprob: -7.999665260314941
    8. '            ' → logprob: -8.374665260314941
    9. '       ' → logprob: -8.624665260314941
    10. '                
' → logprob: -8.874665260314941

Token 957: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.061054359131958e-06
    2. ' if' → logprob: -11.750007629394531
    3. '           ' → logprob: -15.875007629394531
    4. '               ' → logprob: -16.87500762939453
    5. '                   ' → logprob: -20.37500762939453
    6. '```' → logprob: -21.75000762939453
    7. '#' (adapté à ' #') → logprob: -22.00000762939453
    8. 'If' → logprob: -22.00000762939453
    9. '	if' → logprob: -22.00000762939453
    10. '            
' → logprob: -22.37500762939453

Token 958: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.318681188422488e-05
    2. ' if' → logprob: -11.25001335144043
    3. '           ' → logprob: -16.12501335144043
    4. '               ' → logprob: -17.87501335144043
    5. '```' → logprob: -18.75001335144043
    6. '#' → logprob: -18.87501335144043
    7. '   ' → logprob: -19.00001335144043
    8. '0' → logprob: -19.00001335144043
    9. 'If' → logprob: -19.25001335144043
    10. '       ' → logprob: -20.37501335144043

Token 959: ' bounds' (ID: 30227)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005436050705611706
    2. ' ' → logprob: -5.380435943603516
    3. 'nr' → logprob: -7.755435943603516
    4. ' nr' → logprob: -9.005435943603516
    5. 'if' → logprob: -9.255435943603516
    6. ' if' → logprob: -9.630435943603516
    7. ' (' → logprob: -10.005435943603516
    8. '(' → logprob: -10.505435943603516
    9. '   ' → logprob: -10.880435943603516
    10. '(n' → logprob: -12.130435943603516

Token 960: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5327175259590149
    2. '           ' → logprob: -1.2827174663543701
    3. 'if' → logprob: -2.28271746635437
    4. '               ' → logprob: -3.40771746635437
    5. ' and' → logprob: -8.53271770477295
    6. 'and' → logprob: -9.40771770477295
    7. '            ' → logprob: -9.53271770477295
    8. '       ' → logprob: -9.78271770477295
    9. '                   ' → logprob: -9.78271770477295
    10. '<|end|>' → logprob: -10.40771770477295

Token 961: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7626499533653259
    2. '               ' → logprob: -1.5126500129699707
    3. 'if' → logprob: -1.7626500129699707
    4. ' if' → logprob: -2.5126500129699707
    5. 'and' → logprob: -3.2626500129699707
    6. ' and' → logprob: -3.8876500129699707
    7. '                   ' → logprob: -7.512650012969971
    8. '       ' → logprob: -8.012649536132812
    9. '```' → logprob: -8.012649536132812
    10. '            ' → logprob: -8.887649536132812

Token 962: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07915591448545456
    2. ' if' → logprob: -2.579155921936035
    3. '0' → logprob: -8.329155921936035
    4. '               ' → logprob: -10.704155921936035
    5. ' ' → logprob: -13.579155921936035
    6. '           ' → logprob: -13.954155921936035
    7. '   ' → logprob: -17.20415496826172
    8. '                   ' → logprob: -17.20415496826172
    9. '	if' → logprob: -17.45415496826172
    10. 'If' → logprob: -17.57915496826172

Token 963: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003884894831571728
    2. ' ' → logprob: -7.8753886222839355
    3. 'nr' → logprob: -12.250388145446777
    4. '(' → logprob: -14.000388145446777
    5. '   ' → logprob: -14.000388145446777
    6. '               ' → logprob: -14.250388145446777
    7. '                   ' → logprob: -15.125388145446777
    8. ' (' → logprob: -15.375388145446777
    9. ' nr' → logprob: -15.375388145446777
    10. '           ' → logprob: -15.625388145446777

Token 964: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.630610641877865e-06
    2. 'nr' → logprob: -12.625006675720215
    3. ' ' → logprob: -13.000006675720215
    4. '(' → logprob: -14.125006675720215
    5. '
' → logprob: -17.0000057220459
    6. '   ' → logprob: -17.5000057220459
    7. ' ' → logprob: -17.5000057220459
    8. '```' → logprob: -18.0000057220459
    9. '۰' → logprob: -18.1250057220459
    10. ' nr' → logprob: -18.5000057220459

Token 965: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2811744511127472
    2. '<=' → logprob: -1.4061744213104248
    3. ' <' → logprob: -12.156174659729004
    4. '<' → logprob: -12.656174659729004
    5. ')<=' → logprob: -12.906174659729004
    6. '   ' → logprob: -13.031174659729004
    7. ',' → logprob: -13.031174659729004
    8. ' ' → logprob: -13.656174659729004
    9. ')' → logprob: -14.406174659729004
    10. '[' → logprob: -14.531174659729004

Token 966: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -7.941850526549388e-06
    2. ' nr' → logprob: -11.750007629394531
    3. 'n' → logprob: -18.12500762939453
    4. '_nr' → logprob: -18.87500762939453
    5. '.nr' → logprob: -20.87500762939453
    6. 'Nr' → logprob: -21.37500762939453
    7. '   ' → logprob: -21.37500762939453
    8. '	n' → logprob: -22.25000762939453
    9. '
' → logprob: -22.75000762939453
    10. 'nx' → logprob: -22.87500762939453

Token 967: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02457762509584427
    2. ' <' → logprob: -3.7745776176452637
    3. '<n' → logprob: -6.774577617645264
    4. 'and' → logprob: -9.024578094482422
    5. ' and' → logprob: -9.774578094482422
    6. '<N' → logprob: -12.774578094482422
    7. '<w' → logprob: -13.399578094482422
    8. '<len' → logprob: -13.524578094482422
    9. '<size' → logprob: -13.649578094482422
    10. '<num' → logprob: -14.524578094482422

Token 968: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.5491004129871726e-05
    2. ' h' → logprob: -10.000045776367188
    3. '	h' → logprob: -17.375045776367188
    4. '   ' → logprob: -19.625045776367188
    5. '
' → logprob: -19.625045776367188
    6. '<h' → logprob: -21.500045776367188
    7. '(h' → logprob: -22.125045776367188
    8. '=h' → logprob: -22.125045776367188
    9. '"h' → logprob: -22.250045776367188
    10. ',h' → logprob: -22.375045776367188

Token 969: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889044284820557
    2. 'and' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.328890800476074
    4. '	and' → logprob: -16.078889846801758
    5. '               ' → logprob: -16.203889846801758
    6. '           ' → logprob: -16.453889846801758
    7. 'andr' → logprob: -17.328889846801758
    8. ' ' → logprob: -17.703889846801758
    9. '        ' → logprob: -18.203889846801758
    10. '0' → logprob: -18.203889846801758

Token 970: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019418458687141538
    2. ' ' → logprob: -6.251941680908203
    3. 'nc' → logprob: -11.376941680908203
    4. 'nr' → logprob: -14.501941680908203
    5. '   ' → logprob: -14.626941680908203
    6. ' nc' → logprob: -14.626941680908203
    7. ' ' → logprob: -15.251941680908203
    8. '  ' → logprob: -16.126941680908203
    9. '
' → logprob: -17.251941680908203
    10. '_nc' → logprob: -17.751941680908203

Token 971: '0' (ID: 15)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.48224154114723206
    2. 'nc' → logprob: -0.9822415113449097
    3. 'wc' → logprob: -4.982241630554199
    4. ' nc' → logprob: -6.982241630554199
    5. ' w' → logprob: -8.3572416305542
    6. '0' → logprob: -9.7322416305542
    7. 'nw' → logprob: -10.9822416305542
    8. '   ' → logprob: -11.4822416305542
    9. 'wn' → logprob: -11.8572416305542
    10. ' wc' → logprob: -12.1072416305542

Token 972: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4257391393184662
    2. ' <' → logprob: -1.3007391691207886
    3. 'nc' → logprob: -3.050739049911499
    4. 'c' → logprob: -4.300739288330078
    5. 'w' → logprob: -5.300739288330078
    6. ' nc' → logprob: -5.550739288330078
    7. 'n' → logprob: -7.050739288330078
    8. ' ' → logprob: -7.175739288330078
    9. 'and' → logprob: -7.425739288330078
    10. ' and' → logprob: -7.675739288330078

Token 973: ' nc' (ID: 39841)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0005536287208087742
    2. ' w' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.875554084777832
    4. 'wc' → logprob: -16.250553131103516
    5. '	w' → logprob: -16.375553131103516
    6. '
' → logprob: -17.000553131103516
    7. ' ' → logprob: -17.500553131103516
    8. '(w' → logprob: -17.625553131103516
    9. '    ' → logprob: -17.875553131103516
    10. 'nc' → logprob: -18.250553131103516

Token 974: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.055587977170944214
    2. '<' → logprob: -2.9305880069732666
    3. '<w' → logprob: -7.6805877685546875
    4. 'w' → logprob: -8.430587768554688
    5. '<n' → logprob: -10.930587768554688
    6. '<|end|>' → logprob: -13.055587768554688
    7. '[' → logprob: -14.180587768554688
    8. ' ' → logprob: -14.180587768554688
    9. '<len' → logprob: -14.805587768554688
    10. ' w' → logprob: -14.805587768554688

Token 975: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0002613358374219388
    2. ' w' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.250261306762695
    4. '	w' → logprob: -18.375261306762695
    5. ' ' → logprob: -21.250261306762695
    6. '  ' → logprob: -21.750261306762695
    7. '_w' → logprob: -21.875261306762695
    8. '
' → logprob: -22.000261306762695
    9. '    ' → logprob: -22.125261306762695
    10. ' ' → logprob: -22.125261306762695

Token 976: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18678206205368042
    2. ' and' → logprob: -2.061782121658325
    3. ':
' → logprob: -3.186782121658325
    4. 'and' → logprob: -6.811781883239746
    5. '               ' → logprob: -7.811781883239746
    6. '                   ' → logprob: -9.061781883239746
    7. ',' → logprob: -9.186781883239746
    8. '           ' → logprob: -10.311781883239746
    9. ':

' → logprob: -11.061781883239746
    10. '                       ' → logprob: -11.186781883239746

Token 977: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5896371603012085
    2. '               ' → logprob: -0.8396371603012085
    3. ' if' → logprob: -4.589637279510498
    4. 'if' → logprob: -5.839637279510498
    5. '                       ' → logprob: -8.46463680267334
    6. '   ' → logprob: -8.83963680267334
    7. ' for' → logprob: -10.46463680267334
    8. '                ' → logprob: -10.58963680267334
    9. '           ' → logprob: -10.83963680267334
    10. '                
' → logprob: -10.96463680267334

Token 978: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.560330867767334
    2. 'new' → logprob: -0.935330867767334
    3. 'nd' → logprob: -3.685330867767334
    4. 'n' → logprob: -4.560330867767334
    5. 'next' → logprob: -7.935330867767334
    6. '                   ' → logprob: -9.060331344604492
    7. 'ndir' → logprob: -9.060331344604492
    8. '               ' → logprob: -9.435331344604492
    9. '           ' → logprob: -9.435331344604492
    10. 'nc' → logprob: -9.810331344604492

Token 979: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007715705316513777
    2. 'cost' → logprob: -4.882715702056885
    3. ' dist' → logprob: -9.257716178894043
    4. '   ' → logprob: -11.382716178894043
    5. ' cost' → logprob: -13.882716178894043
    6. '(dist' → logprob: -14.257716178894043
    7. '	dist' → logprob: -14.632716178894043
    8. '  ' → logprob: -15.757716178894043
    9. '    ' → logprob: -16.257715225219727
    10. 'Dist' → logprob: -16.382715225219727

Token 980: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -12.250009536743164
    3. ' [' → logprob: -13.625009536743164
    4. '][' → logprob: -14.125009536743164
    5. '   ' → logprob: -14.875009536743164
    6. '[
' → logprob: -15.250009536743164
    7. '                   ' → logprob: -15.250009536743164
    8. ')[' → logprob: -15.500009536743164
    9. 'nr' → logprob: -16.000009536743164
    10. '
' → logprob: -16.125009536743164

Token 981: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00013166792632546276
    2. 'nr' → logprob: -9.875131607055664
    3. '][' → logprob: -10.500131607055664
    4. '[' → logprob: -10.625131607055664
    5. '[r' → logprob: -11.000131607055664
    6. '[n' → logprob: -13.250131607055664
    7. ']' → logprob: -13.375131607055664
    8. '   ' → logprob: -14.000131607055664
    9. '                   ' → logprob: -14.125131607055664
    10. '```' → logprob: -14.125131607055664

Token 982: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008771865628659725
    2. '[n' → logprob: -4.758771896362305
    3. '[' → logprob: -9.008771896362305
    4. '[r' → logprob: -12.008771896362305
    5. '   ' → logprob: -12.258771896362305
    6. '"][' → logprob: -12.633771896362305
    7. '[c' → logprob: -12.633771896362305
    8. '                   ' → logprob: -12.883771896362305
    9. ']' → logprob: -13.258771896362305
    10. ''][' → logprob: -13.383771896362305

Token 983: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -1.6240566083070007e-06
    2. 'c' → logprob: -14.250001907348633
    3. ' nc' → logprob: -14.250001907348633
    4. '_nc' → logprob: -16.000001907348633
    5. '.nc' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '
' → logprob: -18.875001907348633
    8. 'n' → logprob: -19.375001907348633
    9. 'Nc' → logprob: -19.375001907348633
    10. '[' → logprob: -20.625001907348633

Token 984: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005080414470285177
    2. '[n' → logprob: -5.880080223083496
    3. '[' → logprob: -7.505080223083496
    4. ']' → logprob: -7.755080223083496
    5. ']>' → logprob: -7.880080223083496
    6. '>[' → logprob: -8.005080223083496
    7. '[d' → logprob: -8.130080223083496
    8. '>' → logprob: -8.630080223083496
    9. '[r' → logprob: -10.255080223083496
    10. '   ' → logprob: -10.755080223083496

Token 985: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.3856492842023727e-06
    2. ' nd' → logprob: -14.125000953674316
    3. '(nd' → logprob: -14.500000953674316
    4. '
' → logprob: -16.625001907348633
    5. 'nt' → logprob: -17.125001907348633
    6. '_nd' → logprob: -17.625001907348633
    7. 'n' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '(' → logprob: -18.500001907348633
    10. 'd' → logprob: -19.125001907348633

Token 986: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005579386837780476
    2. ']>' → logprob: -5.255579471588135
    3. '>' → logprob: -8.005578994750977
    4. ' ]' → logprob: -12.130578994750977
    5. ' >' → logprob: -13.130578994750977
    6. '[' → logprob: -13.630578994750977
    7. '   ' → logprob: -13.880578994750977
    8. '```' → logprob: -14.755578994750977
    9. ']==' → logprob: -14.880578994750977
    10. ']>
' → logprob: -14.880578994750977

Token 987: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0013332172529771924
    2. ' >' → logprob: -6.626333236694336
    3. ']>' → logprob: -13.001333236694336
    4. ']' → logprob: -13.001333236694336
    5. '[' → logprob: -13.876333236694336
    6. '   ' → logprob: -13.876333236694336
    7. '">' → logprob: -15.376333236694336
    8. '```' → logprob: -15.376333236694336
    9. '>`' → logprob: -16.126333236694336
    10. ' ' → logprob: -16.376333236694336

Token 988: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -5.836499985889532e-05
    2. ' cost' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.500059127807617
    4. '(cost' → logprob: -19.875059127807617
    5. '_cost' → logprob: -21.000059127807617
    6. 'dist' → logprob: -21.500059127807617
    7. ' ' → logprob: -21.500059127807617
    8. 'Cost' → logprob: -21.750059127807617
    9. '
' → logprob: -22.625059127807617
    10. '-cost' → logprob: -23.125059127807617

Token 989: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0905042514204979
    2. ':
' → logprob: -2.4655041694641113
    3. '):' → logprob: -7.840504169464111
    4. '):
' → logprob: -8.09050464630127
    5. '                       ' → logprob: -8.34050464630127
    6. '=' → logprob: -8.96550464630127
    7. '                   ' → logprob: -8.96550464630127
    8. ')' → logprob: -9.21550464630127
    9. '               ' → logprob: -10.09050464630127
    10. '                           ' → logprob: -10.34050464630127

Token 990: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05996156111359596
    2. 'heap' → logprob: -2.9349615573883057
    3. '                   ' → logprob: -5.809961795806885
    4. '```' → logprob: -7.309961795806885
    5. ' heap' → logprob: -7.559961795806885
    6. '                           ' → logprob: -7.809961795806885
    7. '(heap' → logprob: -8.684961318969727
    8. '                               ' → logprob: -9.684961318969727
    9. '                        
' → logprob: -9.934961318969727
    10. '               ' → logprob: -10.559961318969727

Token 991: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.006732660811394453
    2. ' dist' → logprob: -5.25673246383667
    3. '                       ' → logprob: -6.50673246383667
    4. '                   ' → logprob: -13.631732940673828
    5. '                           ' → logprob: -13.756732940673828
    6. '```' → logprob: -14.256732940673828
    7. '               ' → logprob: -14.631732940673828
    8. '	dist' → logprob: -15.131732940673828
    9. '           ' → logprob: -15.256732940673828
    10. '_dist' → logprob: -15.631732940673828

Token 992: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.375000953674316
    3. '```' → logprob: -16.0
    4. '\[' → logprob: -17.5
    5. '[
' → logprob: -17.75
    6. '   ' → logprob: -17.75
    7. '
' → logprob: -18.125
    8. '``' → logprob: -18.375
    9. '[num' → logprob: -18.5
    10. ' [' → logprob: -19.125

Token 993: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001453090226277709
    2. '[n' → logprob: -6.751452922821045
    3. '[r' → logprob: -8.376453399658203
    4. 'nr' → logprob: -10.251453399658203
    5. '[' → logprob: -11.501453399658203
    6. 'n' → logprob: -12.751453399658203
    7. '_nr' → logprob: -14.376453399658203
    8. '{' → logprob: -14.376453399658203
    9. '```' → logprob: -14.876453399658203
    10. '   ' → logprob: -15.126453399658203

Token 994: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.07911670207977295
    2. '][' → logprob: -2.5791168212890625
    3. '[' → logprob: -10.079116821289062
    4. '                   ' → logprob: -10.329116821289062
    5. '                       ' → logprob: -10.454116821289062
    6. '                           ' → logprob: -11.204116821289062
    7. '               ' → logprob: -11.204116821289062
    8. '"][' → logprob: -11.454116821289062
    9. ' [' → logprob: -11.579116821289062
    10. '           ' → logprob: -11.704116821289062

Token 995: 'nc' (ID: 24825)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.0002456046058796346
    2. 'nc' → logprob: -9.000246047973633
    3. '[n' → logprob: -9.375246047973633
    4. 'n' → logprob: -10.375246047973633
    5. ' nr' → logprob: -12.875246047973633
    6. '(n' → logprob: -13.375246047973633
    7. '
' → logprob: -14.250246047973633
    8. '_nr' → logprob: -14.875246047973633
    9. '{' → logprob: -15.625246047973633
    10. 'nb' → logprob: -16.250246047973633

Token 996: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.1803664118051529
    2. '][' → logprob: -1.8053663969039917
    3. '[' → logprob: -7.680366516113281
    4. '
' → logprob: -10.930366516113281
    5. '}[' → logprob: -10.930366516113281
    6. '       ' → logprob: -11.305366516113281
    7. '```' → logprob: -11.305366516113281
    8. '   ' → logprob: -11.430366516113281
    9. '[r' → logprob: -11.555366516113281
    10. '\[' → logprob: -11.680366516113281

Token 997: 'nd' (ID: 301)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.26394468545913696
    2. 'nd' → logprob: -1.5139446258544922
    3. '[' → logprob: -5.263944625854492
    4. 'cost' → logprob: -5.263944625854492
    5. '[d' → logprob: -8.013944625854492
    6. '
' → logprob: -8.638944625854492
    7. '{' → logprob: -8.638944625854492
    8. '[c' → logprob: -8.888944625854492
    9. 'nc' → logprob: -9.138944625854492
    10. 'dist' → logprob: -9.388944625854492

Token 998: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01608598604798317
    2. ' =' → logprob: -4.141086101531982
    3. ']=' → logprob: -10.516085624694824
    4. ']' → logprob: -10.766085624694824
    5. '=
' → logprob: -13.391085624694824
    6. ')' → logprob: -13.641085624694824
    7. ')=' → logprob: -15.016085624694824
    8. '<|end|>' → logprob: -15.641085624694824
    9. ' =
' → logprob: -16.01608657836914
    10. '=

' → logprob: -16.76608657836914

Token 999: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '＝' → logprob: -19.51104736328125
    4. '=
' → logprob: -19.51104736328125
    5. '.=' → logprob: -19.63604736328125
    6. '[' → logprob: -20.51104736328125
    7. '=

' → logprob: -21.01104736328125
    8. ']=' → logprob: -21.76104736328125
    9. ')' → logprob: -21.88604736328125
    10. '   ' → logprob: -22.01104736328125

Token 1000: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0031777136027812958
    2. ' cost' → logprob: -5.753177642822266
    3. '(cost' → logprob: -20.003177642822266
    4. '_cost' → logprob: -21.503177642822266
    5. 'Cost' → logprob: -21.878177642822266
    6. '
' → logprob: -22.003177642822266
    7. 'code' → logprob: -22.128177642822266
    8. 'price' → logprob: -22.753177642822266
    9. '   ' → logprob: -22.878177642822266
    10. 'count' → logprob: -23.503177642822266

Token 1001: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005824991036206484
    2. 'heap' → logprob: -5.505825042724609
    3. '```' → logprob: -7.005825042724609
    4. ',' → logprob: -8.13082504272461
    5. '               ' → logprob: -9.25582504272461
    6. '<|end|>' → logprob: -9.25582504272461
    7. '(heap' → logprob: -9.75582504272461
    8. '           ' → logprob: -9.88082504272461
    9. '                   ' → logprob: -9.88082504272461
    10. '                           ' → logprob: -10.00582504272461

Token 1002: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0021874953527003527
    2. '```' → logprob: -7.002187728881836
    3. 'heap' → logprob: -7.377187728881836
    4. '                        
' → logprob: -8.252187728881836
    5. '<|end|>' → logprob: -8.627187728881836
    6. '                           ' → logprob: -10.127187728881836
    7. ',' → logprob: -10.252187728881836
    8. '               ' → logprob: -10.502187728881836
    9. '(heap' → logprob: -10.627187728881836
    10. '                   ' → logprob: -11.002187728881836

Token 1003: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.00012833021173719317
    2. ' heap' → logprob: -9.000128746032715
    3. '                       ' → logprob: -12.500128746032715
    4. '           ' → logprob: -14.500128746032715
    5. '```' → logprob: -15.125128746032715
    6. '                   ' → logprob: -15.625128746032715
    7. '                           ' → logprob: -16.3751277923584
    8. '               ' → logprob: -16.8751277923584
    9. 'he' → logprob: -17.8751277923584
    10. '(heap' → logprob: -18.8751277923584

Token 1004: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2664456789934775e-06
    2. 'app' → logprob: -14.625000953674316
    3. '```' → logprob: -15.500000953674316
    4. 'p' → logprob: -15.625000953674316
    5. '.he' → logprob: -16.625001907348633
    6. 'push' → logprob: -16.875001907348633
    7. 'h' → logprob: -17.250001907348633
    8. '           ' → logprob: -17.625001907348633
    9. 'pq' → logprob: -17.625001907348633
    10. 'heap' → logprob: -17.750001907348633

Token 1005: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.7729658540920354e-05
    2. '.heap' → logprob: -10.875027656555176
    3. 'he' → logprob: -11.750027656555176
    4. '.push' → logprob: -14.750027656555176
    5. ' he' → logprob: -16.250028610229492
    6. '.' → logprob: -16.250028610229492
    7. '.h' → logprob: -16.500028610229492
    8. 'q' → logprob: -16.625028610229492
    9. 'heap' → logprob: -17.375028610229492
    10. 'push' → logprob: -17.500028610229492

Token 1006: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0001249925117008388
    2. 'pp' → logprob: -9.00012493133545
    3. 'push' → logprob: -13.50012493133545
    4. '```' → logprob: -16.625125885009766
    5. 'ap' → logprob: -16.750125885009766
    6. 'ush' → logprob: -18.250125885009766
    7. 'p' → logprob: -18.625125885009766
    8. 'appen' → logprob: -18.875125885009766
    9. 'App' → logprob: -19.375125885009766
    10. 'APP' → logprob: -19.750125885009766

Token 1007: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.6087021473795176e-05
    2. 'push' → logprob: -10.000045776367188
    3. 'op' → logprob: -14.875045776367188
    4. 'app' → logprob: -15.625045776367188
    5. 'pp' → logprob: -16.875045776367188
    6. 'p' → logprob: -17.125045776367188
    7. 'sh' → logprob: -17.625045776367188
    8. 'usp' → logprob: -18.875045776367188
    9. '```' → logprob: -19.625045776367188
    10. 'us' → logprob: -19.750045776367188

Token 1008: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. 'pq' → logprob: -16.125
    4. '(
' → logprob: -17.875
    5. 'p' → logprob: -18.0
    6. '(q' → logprob: -18.25
    7. ' (' → logprob: -19.5
    8. '```' → logprob: -20.0
    9. '   ' → logprob: -21.75
    10. '<p' → logprob: -22.375

Token 1009: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.5776860184123507e-06
    2. '(q' → logprob: -13.50000286102295
    3. '(p' → logprob: -13.75000286102295
    4. 'pq' → logprob: -17.125001907348633
    5. ' q' → logprob: -17.500001907348633
    6. '	q' → logprob: -17.625001907348633
    7. 'p' → logprob: -18.125001907348633
    8. '(' → logprob: -18.500001907348633
    9. '[q' → logprob: -18.625001907348633
    10. '   ' → logprob: -19.000001907348633

Token 1010: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00028255043434910476
    2. '(' → logprob: -8.875282287597656
    3. ',' → logprob: -9.625282287597656
    4. '((' → logprob: -10.625282287597656
    5. '                       ' → logprob: -11.125282287597656
    6. '           ' → logprob: -12.125282287597656
    7. ',p' → logprob: -12.250282287597656
    8. ' (' → logprob: -12.250282287597656
    9. ')' → logprob: -12.375282287597656
    10. '                   ' → logprob: -12.625282287597656

Token 1011: ' (' (ID: 350)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.004508681129664183
    2. ' (' → logprob: -5.5045084953308105
    3. '(' → logprob: -7.7545084953308105
    4. '                       ' → logprob: -14.379508972167969
    5. '   ' → logprob: -15.004508972167969
    6. '                           ' → logprob: -15.504508972167969
    7. '(c' → logprob: -15.879508972167969
    8. '                               ' → logprob: -17.25450897216797
    9. '(co' → logprob: -17.75450897216797
    10. '                        ' → logprob: -17.75450897216797

Token 1012: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.676292231422849e-05
    2. ' cost' → logprob: -11.000017166137695
    3. '(cost' → logprob: -18.250017166137695
    4. '_cost' → logprob: -23.625017166137695
    5. '   ' → logprob: -23.750017166137695
    6. 'Cost' → logprob: -24.375017166137695
    7. 'dist' → logprob: -24.500017166137695
    8. '
' → logprob: -25.375017166137695
    9. '-cost' → logprob: -25.625017166137695
    10. 'code' → logprob: -25.875017166137695

Token 1013: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01108495518565178
    2. ',n' → logprob: -4.511085033416748
    3. ' ,' → logprob: -10.88608455657959
    4. '(n' → logprob: -11.63608455657959
    5. ',
' → logprob: -12.38608455657959
    6. ',p' → logprob: -13.88608455657959
    7. '       ' → logprob: -14.51108455657959
    8. '                           ' → logprob: -14.63608455657959
    9. '                               ' → logprob: -14.88608455657959
    10. '   ' → logprob: -15.13608455657959

Token 1014: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -7.493430894101039e-05
    2. ' nr' → logprob: -9.500075340270996
    3. '_nr' → logprob: -18.25007438659668
    4. '   ' → logprob: -19.62507438659668
    5. 'n' → logprob: -20.00007438659668
    6. '.nr' → logprob: -20.37507438659668
    7. '
' → logprob: -20.75007438659668
    8. '
' → logprob: -21.37507438659668
    9. 'Nr' → logprob: -21.75007438659668
    10. 'NR' → logprob: -22.12507438659668

Token 1015: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0339118093252182
    2. ',n' → logprob: -3.40891170501709
    3. ',c' → logprob: -9.15891170501709
    4. ' ,' → logprob: -9.53391170501709
    5. ',
' → logprob: -10.65891170501709
    6. '[n' → logprob: -11.53391170501709
    7. '<|end|>' → logprob: -11.65891170501709
    8. ',next' → logprob: -12.15891170501709
    9. '[' → logprob: -12.28391170501709
    10. '```' → logprob: -12.78391170501709

Token 1016: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -1.7432603272027336e-06
    2. ' nc' → logprob: -13.375001907348633
    3. '_nc' → logprob: -17.250001907348633
    4. 'n' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '
' → logprob: -18.500001907348633
    7. '.nc' → logprob: -18.750001907348633
    8. '
' → logprob: -19.750001907348633
    9. '```' → logprob: -20.250001907348633
    10. 'NC' → logprob: -20.375001907348633

Token 1017: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017161124851554632
    2. ',n' → logprob: -6.376716136932373
    3. ',
' → logprob: -11.751715660095215
    4. ' ,' → logprob: -12.251715660095215
    5. ',c' → logprob: -13.876715660095215
    6. 'n' → logprob: -16.62671661376953
    7. ',d' → logprob: -17.00171661376953
    8. '(n' → logprob: -17.62671661376953
    9. ',num' → logprob: -17.75171661376953
    10. ',np' → logprob: -17.75171661376953

Token 1018: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -9.088346359931165e-07
    2. ' nd' → logprob: -14.000000953674316
    3. '(nd' → logprob: -19.75
    4. '   ' → logprob: -19.875
    5. '
' → logprob: -20.375
    6. '_nd' → logprob: -21.875
    7. '```' → logprob: -22.375
    8. 'nds' → logprob: -22.75
    9. 'nt' → logprob: -22.875
    10. 'rd' → logprob: -22.875

Token 1019: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00033284336677752435
    2. '                       ' → logprob: -8.375332832336426
    3. '))
' → logprob: -9.250332832336426
    4. '                   ' → logprob: -13.000332832336426
    5. ')' → logprob: -13.125332832336426
    6. '               ' → logprob: -14.875332832336426
    7. '                           ' → logprob: -14.875332832336426
    8. ' ))' → logprob: -14.875332832336426
    9. '           ' → logprob: -15.000332832336426
    10. ')))' → logprob: -15.250332832336426

Token 1020: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011772511061280966
    2. '
' → logprob: -7.6261773109436035
    3. '```' → logprob: -7.6261773109436035
    4. '            
' → logprob: -9.126176834106445
    5. '               ' → logprob: -9.876176834106445
    6. '       ' → logprob: -10.626176834106445
    7. '        
' → logprob: -12.251176834106445
    8. 'for' → logprob: -12.376176834106445
    9. '                   ' → logprob: -13.001176834106445
    10. '                
' → logprob: -14.001176834106445

Token 1021: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16047006845474243
    2. '
' → logprob: -1.9104700088500977
    3. '            
' → logprob: -8.660470008850098
    4. '       ' → logprob: -10.535470008850098
    5. '```' → logprob: -10.910470008850098
    6. '#' (adapté à ' #') → logprob: -11.160470008850098
    7. 'for' → logprob: -12.160470008850098
    8. '        
' → logprob: -12.910470008850098
    9. '               ' → logprob: -13.660470008850098
    10. '
' → logprob: -13.660470008850098

Token 1022: ' Else' (ID: 42978)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5930656790733337
    2. 'for' → logprob: -1.3430657386779785
    3. '#' → logprob: -1.8430657386779785
    4. '
' → logprob: -3.5930657386779785
    5. '            
' → logprob: -9.34306526184082
    6. 'else' → logprob: -9.34306526184082
    7. '       ' → logprob: -9.34306526184082
    8. '               ' → logprob: -9.46806526184082
    9. 'continue' → logprob: -9.59306526184082
    10. '```' → logprob: -10.59306526184082

Token 1023: ' out' (ID: 842)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5111651420593262
    2. ':
' → logprob: -2.011165142059326
    3. ' continue' → logprob: -2.136165142059326
    4. ':' → logprob: -2.136165142059326
    5. '#' → logprob: -4.636165142059326
    6. 'pass' → logprob: -5.011165142059326
    7. 'if' → logprob: -5.261165142059326
    8. '           ' → logprob: -5.761165142059326
    9. '               ' → logprob: -6.136165142059326
    10. ' pass' → logprob: -7.261165142059326

Token 1024: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.41167137026786804
    2. ' of' → logprob: -1.4116714000701904
    3. '_of' → logprob: -2.5366714000701904
    4. '-of' → logprob: -5.036671161651611
    5. '               ' → logprob: -5.536671161651611
    6. '           ' → logprob: -5.786671161651611
    7. 'Of' → logprob: -7.161671161651611
    8. '            ' → logprob: -10.16167163848877
    9. '                   ' → logprob: -10.41167163848877
    10. '	of' → logprob: -10.41167163848877

Token 1025: ' board' (ID: 6796)
  Prédit: 'bounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bounds' → logprob: -0.0005495758377946913
    2. 'board' → logprob: -8.00054931640625
    3. 'bound' → logprob: -8.50054931640625
    4. 'range' → logprob: -11.75054931640625
    5. 'b' → logprob: -13.50054931640625
    6. 'boundary' → logprob: -14.00054931640625
    7. 'grid' → logprob: -14.62554931640625
    8. '_bounds' → logprob: -16.37554931640625
    9. ' bounds' → logprob: -16.37554931640625
    10. 'boards' → logprob: -17.25054931640625

Token 1026: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39607131481170654
    2. '               ' → logprob: -1.5210713148117065
    3. 'continue' → logprob: -3.271071434020996
    4. 'else' → logprob: -3.771071434020996
    5. '<|end|>' → logprob: -4.146071434020996
    6. ' continue' → logprob: -4.396071434020996
    7. ' else' → logprob: -4.521071434020996
    8. '<|end|>' → logprob: -5.896071434020996
    9. '.' → logprob: -6.521071434020996
    10. ',' → logprob: -7.146071434020996

Token 1027: ' lose' (ID: 12577)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.021479839459061623
    2. 'continue' → logprob: -4.021479606628418
    3. '#' → logprob: -5.771479606628418
    4. ' pass' → logprob: -9.021479606628418
    5. 'skip' → logprob: -9.896479606628418
    6. '               ' → logprob: -10.646479606628418
    7. 'ignore' → logprob: -12.146479606628418
    8. '                   ' → logprob: -12.771479606628418
    9. ' continue' → logprob: -13.146479606628418
    10. ' #' → logprob: -13.521479606628418

Token 1028: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037363029550760984
    2. '
' → logprob: -6.37873649597168
    3. '            
' → logprob: -6.37873649597168
    4. '               ' → logprob: -8.75373649597168
    5. '<|end|>' → logprob: -9.75373649597168
    6. 'else' → logprob: -10.37873649597168
    7. '       ' → logprob: -10.75373649597168
    8. '```' → logprob: -11.12873649597168
    9. '    
' → logprob: -11.50373649597168
    10. '  
' → logprob: -11.75373649597168

Token 1029: 'discard' (ID: 170880)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05192726477980614
    2. ' continue' → logprob: -4.051927089691162
    3. 'pass' → logprob: -4.176927089691162
    4. ')' → logprob: -5.301927089691162
    5. '                   ' → logprob: -5.301927089691162
    6. '```' → logprob: -5.301927089691162
    7. '               ' → logprob: -6.176927089691162
    8. ' pass' → logprob: -8.05192756652832
    9. '#' → logprob: -8.30192756652832
    10. '                       ' → logprob: -9.30192756652832

Token 1030: ' path' (ID: 3104)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009780287509784102
    2. '               ' → logprob: -8.000978469848633
    3. '
' → logprob: -8.250978469848633
    4. 'continue' → logprob: -9.000978469848633
    5. ' )' → logprob: -9.375978469848633
    6. '           ' → logprob: -9.750978469848633
    7. '                   ' → logprob: -10.875978469848633
    8. 'the' → logprob: -11.375978469848633
    9. '```' → logprob: -11.500978469848633
    10. ')
' → logprob: -11.750978469848633

Token 1031: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019411690533161163
    2. '               ' → logprob: -4.144411563873291
    3. '           ' → logprob: -5.769411563873291
    4. ')
' → logprob: -8.51941204071045
    5. '                   ' → logprob: -10.89441204071045
    6. '<|end|>' → logprob: -12.01941204071045
    7. 'continue' → logprob: -12.51941204071045
    8. ').' → logprob: -12.64441204071045
    9. '       ' → logprob: -12.76941204071045
    10. '`)' → logprob: -13.01941204071045

Token 1032: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035798799945041537
    2. '```' → logprob: -8.125357627868652
    3. '
' → logprob: -10.500357627868652
    4. '            
' → logprob: -11.000357627868652
    5. '       ' → logprob: -11.250357627868652
    6. '#' → logprob: -12.750357627868652
    7. '               ' → logprob: -14.500357627868652
    8. '        
' → logprob: -15.125357627868652
    9. 'else' → logprob: -15.125357627868652
    10. 'for' → logprob: -15.250357627868652

Token 1033: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018354326486587524
    2. '#' (adapté à ' #') → logprob: -4.018354415893555
    3. 'for' → logprob: -9.143354415893555
    4. '       ' → logprob: -9.643354415893555
    5. '
' → logprob: -10.643354415893555
    6. '            
' → logprob: -12.268354415893555
    7. '```' → logprob: -13.143354415893555
    8. ' #' → logprob: -14.518354415893555
    9. '               ' → logprob: -14.643354415893555
    10. '   ' → logprob: -14.768354415893555

Token 1034: ' Second' (ID: 16652)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5766000747680664
    2. 'for' → logprob: -0.8266000747680664
    3. '           ' → logprob: -7.326600074768066
    4. '       ' → logprob: -13.451600074768066
    5. ' for' → logprob: -14.701600074768066
    6. ' #' → logprob: -15.576600074768066
    7. '
' → logprob: -15.826600074768066
    8. 'For' → logprob: -16.07659912109375
    9. '   ' → logprob: -16.45159912109375
    10. '```' → logprob: -16.57659912109375

Token 1035: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023706546053290367
    2. ':' → logprob: -6.252370834350586
    3. '           ' → logprob: -8.002370834350586
    4. ',
' → logprob: -10.127370834350586
    5. 'for' → logprob: -11.002370834350586
    6. ' ,' → logprob: -11.127370834350586
    7. ':
' → logprob: -11.252370834350586
    8. '       ' → logprob: -12.127370834350586
    9. '   ' → logprob: -12.252370834350586
    10. '#' → logprob: -12.627370834350586

Token 1036: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2524796426296234
    2. ' for' → logprob: -1.5024796724319458
    3. '           ' → logprob: -8.127479553222656
    4. ' #' → logprob: -9.502479553222656
    5. '
' → logprob: -9.627479553222656
    6. '#' → logprob: -9.877479553222656
    7. ' try' → logprob: -10.127479553222656
    8. 'try' → logprob: -10.877479553222656
    9. '            
' → logprob: -13.502479553222656
    10. '               ' → logprob: -13.752479553222656

Token 1037: ' overriding' (ID: 151187)
  Prédit: ' overriding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overriding' → logprob: -0.25989261269569397
    2. 'over' → logprob: -2.384892702102661
    3. 'explicit' → logprob: -3.634892702102661
    4. ' all' → logprob: -3.634892702102661
    5. 'all' → logprob: -3.884892702102661
    6. 'override' → logprob: -4.134892463684082
    7. ' explicit' → logprob: -4.384892463684082
    8. ' overrides' → logprob: -4.634892463684082
    9. 'commands' → logprob: -5.259892463684082
    10. ' commands' → logprob: -5.259892463684082

Token 1038: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.543197751045227
    2. ' for' → logprob: -1.668197751045227
    3. 'for' → logprob: -2.2931976318359375
    4. 'with' → logprob: -2.4181976318359375
    5. '           ' → logprob: -4.0431976318359375
    6. ' commands' → logprob: -4.6681976318359375
    7. 'commands' → logprob: -5.7931976318359375
    8. ' all' → logprob: -6.0431976318359375
    9. 'all' → logprob: -6.4181976318359375
    10. '   ' → logprob: -6.5431976318359375

Token 1039: ' explicit' (ID: 23141)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47941985726356506
    2. 'range' → logprob: -1.8544198274612427
    3. '[' → logprob: -2.6044199466705322
    4. '4' → logprob: -2.8544199466705322
    5. ' range' → logprob: -3.9794199466705322
    6. 'all' → logprob: -4.229419708251953
    7. ' for' → logprob: -4.479419708251953
    8. 'explicit' → logprob: -4.479419708251953
    9. 'cmd' → logprob: -4.979419708251953
    10. '0' → logprob: -5.104419708251953

Token 1040: ' command' (ID: 6348)
  Prédit: 'commands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'commands' → logprob: -0.8703881502151489
    2. ' commands' → logprob: -1.370388150215149
    3. 'command' → logprob: -1.995388150215149
    4. 'for' → logprob: -2.6203880310058594
    5. '0' → logprob: -3.3703880310058594
    6. 'cmd' → logprob: -3.4953880310058594
    7. ' command' → logprob: -3.4953880310058594
    8. ' for' → logprob: -4.370388031005859
    9. ' ' → logprob: -5.870388031005859
    10. '_cmd' → logprob: -6.495388031005859

Token 1041: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7678042650222778
    2. 'for' → logprob: -0.7678042650222778
    3. '           ' → logprob: -2.6428041458129883
    4. ':' → logprob: -7.517804145812988
    5. '
' → logprob: -9.017804145812988
    6. '               ' → logprob: -10.892804145812988
    7. ':
' → logprob: -11.017804145812988
    8. ' in' → logprob: -11.142804145812988
    9. ' (' → logprob: -11.142804145812988
    10. '```' → logprob: -11.642804145812988

Token 1042: ' player' (ID: 5033)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16072386503219604
    2. '[' → logprob: -2.035723924636841
    3. '0' → logprob: -4.285723686218262
    4. ' range' → logprob: -5.785723686218262
    5. '(' → logprob: -6.910723686218262
    6. ' [' → logprob: -10.910723686218262
    7. '(range' → logprob: -11.035723686218262
    8. '```' → logprob: -12.160723686218262
    9. 'for' → logprob: -12.660723686218262
    10. 'enumer' → logprob: -12.910723686218262

Token 1043: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18122981488704681
    2. ' for' → logprob: -2.431229829788208
    3. '           ' → logprob: -2.556229829788208
    4. '
' → logprob: -9.306229591369629
    5. ':' → logprob: -9.431229591369629
    6. '0' → logprob: -10.806229591369629
    7. '   ' → logprob: -11.556229591369629
    8. '       ' → logprob: -11.681229591369629
    9. '               ' → logprob: -11.931229591369629
    10. ':
' → logprob: -12.431229591369629

Token 1044: 'except' (ID: 25035)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21637770533561707
    2. ' for' → logprob: -2.4663777351379395
    3. '0' → logprob: -2.8413777351379395
    4. ' range' → logprob: -3.7163777351379395
    5. 'range' → logprob: -3.7163777351379395
    6. '1' → logprob: -6.2163777351379395
    7. ')' → logprob: -7.5913777351379395
    8. '   ' → logprob: -10.091377258300781
    9. ' ' → logprob: -10.216377258300781
    10. '```' → logprob: -10.466377258300781

Token 1045: ' Halt' (ID: 120259)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0020938764791935682
    2. 'H' → logprob: -6.87709379196167
    3. ' ' → logprob: -7.25209379196167
    4. '#' → logprob: -8.502094268798828
    5. '```' → logprob: -10.627094268798828
    6. ')' → logprob: -10.752094268798828
    7. 'square' → logprob: -11.002094268798828
    8. '[' → logprob: -11.127094268798828
    9. ' H' → logprob: -11.377094268798828
    10. '
' → logprob: -11.377094268798828

Token 1046: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.21127218008041382
    2. '):' → logprob: -1.9612722396850586
    3. '),' → logprob: -4.211272239685059
    4. '           ' → logprob: -4.461272239685059
    5. '),
' → logprob: -4.711272239685059
    6. '):

' → logprob: -5.461272239685059
    7. ')' → logprob: -6.086272239685059
    8. '(' → logprob: -6.336272239685059
    9. '=' → logprob: -6.461272239685059
    10. ',' → logprob: -6.461272239685059

Token 1047: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012715430930256844
    2. 'for' → logprob: -6.751271724700928
    3. ' for' → logprob: -9.37627124786377
    4. '       ' → logprob: -11.12627124786377
    5. '               ' → logprob: -13.62627124786377
    6. '	       ' → logprob: -15.62627124786377
    7. '		' → logprob: -15.75127124786377
    8. '```' → logprob: -15.75127124786377
    9. '   ' → logprob: -15.87627124786377
    10. '          ' → logprob: -18.001272201538086

Token 1048: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5839270949363708
    2. '           ' → logprob: -0.8339270949363708
    3. ' for' → logprob: -4.833927154541016
    4. '               ' → logprob: -15.208927154541016
    5. '       ' → logprob: -16.083927154541016
    6. '	for' → logprob: -16.958927154541016
    7. '```' → logprob: -17.083927154541016
    8. '
' → logprob: -17.208927154541016
    9. '		' → logprob: -17.458927154541016
    10. '	       ' → logprob: -17.708927154541016

Token 1049: ' player' (ID: 5033)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.12306422740221024
    2. 'override' → logprob: -2.4980642795562744
    3. 'explicit' → logprob: -3.6230642795562744
    4. 'i' → logprob: -5.873064041137695
    5. 'player' → logprob: -6.498064041137695
    6. 'c' → logprob: -7.373064041137695
    7. 'command' → logprob: -7.623064041137695
    8. 'over' → logprob: -7.873064041137695
    9. 'new' → logprob: -8.123064041137695
    10. ' cmd' → logprob: -8.498064041137695

Token 1050: '_cmd' (ID: 26337)
  Prédit: '_cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -0.006934878882020712
    2. '_command' → logprob: -5.006934642791748
    3. 'cmd' → logprob: -8.506935119628906
    4. 'command' → logprob: -12.256935119628906
    5. '_c' → logprob: -12.506935119628906
    6. 'Cmd' → logprob: -12.631935119628906
    7. '	cmd' → logprob: -13.506935119628906
    8. ' in' → logprob: -14.131935119628906
    9. ' command' → logprob: -14.131935119628906
    10. '_CMD' → logprob: -14.631935119628906

Token 1051: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17992189526557922
    2. 'in' → logprob: -1.8049218654632568
    3. ' ' → logprob: -9.304922103881836
    4. '	in' → logprob: -10.304922103881836
    5. '_in' → logprob: -11.054922103881836
    6. ',' → logprob: -11.304922103881836
    7. ')' → logprob: -12.304922103881836
    8. 's' → logprob: -12.429922103881836
    9. '<|end|>' → logprob: -12.429922103881836
    10. 'i' → logprob: -13.304922103881836

Token 1052: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003977362532168627
    2. ' range' → logprob: -6.003977298736572
    3. '[' → logprob: -6.503977298736572
    4. '(' → logprob: -13.37897777557373
    5. '(range' → logprob: -13.62897777557373
    6. '0' → logprob: -15.00397777557373
    7. ' [' → logprob: -17.003976821899414
    8. '	range' → logprob: -17.253976821899414
    9. '   ' → logprob: -19.128976821899414
    10. 'Range' → logprob: -20.003976821899414

Token 1053: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.22583366930484772
    2. '(' → logprob: -1.6008336544036865
    3. ' ' → logprob: -8.350833892822266
    4. '1' → logprob: -8.975833892822266
    5. '0' → logprob: -10.350833892822266
    6. ' (' → logprob: -11.225833892822266
    7. '(
' → logprob: -12.475833892822266
    8. '   ' → logprob: -12.975833892822266
    9. '[' → logprob: -13.225833892822266
    10. ')' → logprob: -13.725833892822266

Token 1054: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '0' → logprob: -19.25
    3. '' → logprob: -21.125
    4. '   ' → logprob: -21.875
    5. ' ' → logprob: -22.375
    6. 'len' → logprob: -23.0
    7. '۴' → logprob: -23.75
    8. '４' → logprob: -23.75
    9. '```' → logprob: -23.75
    10. '٤' → logprob: -23.875

Token 1055: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04303356260061264
    2. '):' → logprob: -3.1680335998535156
    3. '):
' → logprob: -11.043033599853516
    4. ':
' → logprob: -12.418033599853516
    5. ':' → logprob: -12.668033599853516
    6. '):

' → logprob: -12.793033599853516
    7. '               ' → logprob: -13.168033599853516
    8. ' ):
' → logprob: -13.293033599853516
    9. ')' → logprob: -13.543033599853516
    10. '           ' → logprob: -13.543033599853516

Token 1056: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021066018380224705
    2. '```' → logprob: -7.502106666564941
    3. '<|end|>' → logprob: -7.752106666564941
    4. '                
' → logprob: -8.377106666564941
    5. '[' → logprob: -8.752106666564941
    6. '	           ' → logprob: -9.377106666564941
    7. '   ' → logprob: -9.502106666564941
    8. '           ' → logprob: -9.502106666564941
    9. ',' → logprob: -9.627106666564941
    10. '                               ' → logprob: -9.877106666564941

Token 1057: ' #' (ID: 1069)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.07837121933698654
    2. 'if' → logprob: -3.203371286392212
    3. '               ' → logprob: -4.328371047973633
    4. ' nd' → logprob: -5.078371047973633
    5. '                   ' → logprob: -5.203371047973633
    6. '   ' → logprob: -5.453371047973633
    7. 'new' → logprob: -5.578371047973633
    8. ' if' → logprob: -7.203371047973633
    9. '           ' → logprob: -8.578371047973633
    10. '#' (adapté à ' #') → logprob: -8.703371047973633

Token 1058: ' player' (ID: 5033)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.004401632584631443
    2. 'if' → logprob: -5.754401683807373
    3. 'override' → logprob: -7.754401683807373
    4. '#' → logprob: -8.504401206970215
    5. '   ' → logprob: -8.629401206970215
    6. 'new' → logprob: -8.754401206970215
    7. '       ' → logprob: -9.754401206970215
    8. 'over' → logprob: -9.879401206970215
    9. ' nd' → logprob: -9.879401206970215
    10. '           ' → logprob: -10.379401206970215

Token 1059: '_cmd' (ID: 26337)
  Prédit: '_cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -0.006027626805007458
    2. '_cost' → logprob: -5.256027698516846
    3. '_command' → logprob: -8.506027221679688
    4. '_' → logprob: -8.881027221679688
    5. ' _' → logprob: -9.506027221679688
    6. '_commands' → logprob: -9.756027221679688
    7. 'cmd' → logprob: -10.131027221679688
    8. 'cost' → logprob: -10.381027221679688
    9. '```' → logprob: -10.631027221679688
    10. '
' → logprob: -10.631027221679688

Token 1060: ':' (ID: 25)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.11989694088697433
    2. ' ==' → logprob: -2.61989688873291
    3. ' =' → logprob: -3.61989688873291
    4. '!=' → logprob: -5.24489688873291
    5. '=' → logprob: -5.86989688873291
    6. ' ' → logprob: -6.49489688873291
    7. ')' → logprob: -6.74489688873291
    8. '==' → logprob: -6.99489688873291
    9. '_space' → logprob: -8.49489688873291
    10. ' )' → logprob: -8.99489688873291

Token 1061: ' ' (ID: 220)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.5920786261558533
    2. ' player' → logprob: -0.8420786261558533
    3. '(player' → logprob: -5.092078685760498
    4. ' square' → logprob: -5.717078685760498
    5. 'square' → logprob: -6.092078685760498
    6. '1' → logprob: -6.717078685760498
    7. ' (' → logprob: -6.842078685760498
    8. '0' → logprob: -7.717078685760498
    9. ' ' → logprob: -7.842078685760498
    10. ' if' → logprob: -8.21707820892334

Token 1062: '0' (ID: 15)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.13292044401168823
    2. '(player' → logprob: -2.757920503616333
    3. 'square' → logprob: -3.257920503616333
    4. 'turn' → logprob: -4.507920265197754
    5. '0' → logprob: -5.757920265197754
    6. '(square' → logprob: -5.757920265197754
    7. '(' → logprob: -6.132920265197754
    8. '[player' → logprob: -6.632920265197754
    9. 'board' → logprob: -8.132920265197754
    10. '[' → logprob: -8.132920265197754

Token 1063: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11960950493812561
    2. '<|end|>' → logprob: -2.9946095943450928
    3. '=' → logprob: -3.6196095943450928
    4. ')' → logprob: -4.494609355926514
    5. '==' → logprob: -4.994609355926514
    6. ' ==' → logprob: -5.494609355926514
    7. ' =' → logprob: -5.494609355926514
    8. '<|end|>' → logprob: -5.869609355926514
    9. ' ,' → logprob: -6.119609355926514
    10. ':' → logprob: -7.244609355926514

Token 1064: 'Straight' (ID: 129322)
  Prédit: 'Straight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Straight' → logprob: -0.0028456486761569977
    2. 'player' → logprob: -6.127845764160156
    3. '0' → logprob: -7.627845764160156
    4. 'straight' → logprob: -8.752845764160156
    5. ' Straight' → logprob: -12.127845764160156
    6. 'Stra' → logprob: -12.877845764160156
    7. ')' → logprob: -13.252845764160156
    8. '(player' → logprob: -13.377845764160156
    9. '[player' → logprob: -13.377845764160156
    10. ' straight' → logprob: -14.627845764160156

Token 1065: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007550546899437904
    2. ',
' → logprob: -5.6325507164001465
    3. ' ,' → logprob: -5.7575507164001465
    4. ')' → logprob: -8.007550239562988
    5. '               ' → logprob: -8.132550239562988
    6. '
' → logprob: -10.007550239562988
    7. '                   ' → logprob: -11.007550239562988
    8. '),' → logprob: -11.007550239562988
    9. ' ' → logprob: -11.507550239562988
    10. '```' → logprob: -11.882550239562988

Token 1066: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006514362758025527
    2. ' ' → logprob: -7.3756513595581055
    3. 'player' → logprob: -11.875651359558105
    4. ',' → logprob: -12.000651359558105
    5. '               ' → logprob: -12.375651359558105
    6. 'cost' → logprob: -12.625651359558105
    7. '                   ' → logprob: -13.250651359558105
    8. '   ' → logprob: -14.625651359558105
    9. '#' → logprob: -14.875651359558105
    10. '4' → logprob: -14.875651359558105

Token 1067: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026306336745619774
    2. ',' → logprob: -3.651306390762329
    3. ' =' → logprob: -12.77630615234375
    4. ')' → logprob: -13.90130615234375
    5. ' ,' → logprob: -14.65130615234375
    6. ')=' → logprob: -15.15130615234375
    7. ',
' → logprob: -15.15130615234375
    8. '=True' → logprob: -15.40130615234375
    9. ':' → logprob: -15.52630615234375
    10. '=int' → logprob: -16.02630615234375

Token 1068: 'Right' (ID: 8627)
  Prédit: 'Right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -0.0003528622619342059
    2. ' Right' → logprob: -8.62535285949707
    3. '2' → logprob: -9.25035285949707
    4. '1' → logprob: -9.87535285949707
    5. 'right' → logprob: -11.50035285949707
    6. ' right' → logprob: -11.75035285949707
    7. ' ' → logprob: -12.37535285949707
    8. '_Right' → logprob: -13.50035285949707
    9. '_right' → logprob: -14.75035285949707
    10. ',' → logprob: -14.75035285949707

Token 1069: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016206118743866682
    2. ',
' → logprob: -9.750162124633789
    3. '2' → logprob: -9.875162124633789
    4. '               ' → logprob: -10.125162124633789
    5. ' ,' → logprob: -11.750162124633789
    6. '                   ' → logprob: -13.250162124633789
    7. ')' → logprob: -14.500162124633789
    8. '```' → logprob: -14.750162124633789
    9. '
' → logprob: -15.250162124633789
    10. ' ' → logprob: -15.500162124633789

Token 1070: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.553032628493384e-05
    2. ' ' → logprob: -9.500075340270996
    3. ',' → logprob: -14.625075340270996
    4. ' ,' → logprob: -16.000076293945312
    5. '```' → logprob: -17.875076293945312
    6. '
' → logprob: -18.000076293945312
    7. ' #' → logprob: -18.375076293945312
    8. '   ' → logprob: -18.625076293945312
    9. '               ' → logprob: -19.000076293945312
    10. ')' → logprob: -19.625076293945312

Token 1071: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03121854178607464
    2. '=' → logprob: -3.5312185287475586
    3. ')' → logprob: -6.906218528747559
    4. ' ,' → logprob: -9.031218528747559
    5. '<|end|>' → logprob: -9.156218528747559
    6. ',
' → logprob: -9.406218528747559
    7. '```' → logprob: -10.281218528747559
    8. ' =' → logprob: -10.656218528747559
    9. ' ' → logprob: -11.156218528747559
    10. '(' → logprob: -11.156218528747559

Token 1072: 'Back' (ID: 4933)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.14999446272850037
    2. 'Back' → logprob: -2.024994373321533
    3. ' ' → logprob: -5.899994373321533
    4. 'player' → logprob: -6.399994373321533
    5. '2' → logprob: -6.524994373321533
    6. '1' → logprob: -7.774994373321533
    7. ',' → logprob: -8.774994850158691
    8. 'back' → logprob: -8.774994850158691
    9. 'Straight' → logprob: -8.899994850158691
    10. 'Backward' → logprob: -8.899994850158691

Token 1073: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35168302059173584
    2. ',' → logprob: -1.2266830205917358
    3. ',
' → logprob: -6.726683139801025
    4. '                   ' → logprob: -7.726683139801025
    5. ')' → logprob: -7.851683139801025
    6. '):
' → logprob: -8.726682662963867
    7. ' ,' → logprob: -8.726682662963867
    8. '              ' → logprob: -8.976682662963867
    9. '                
' → logprob: -9.101682662963867
    10. '                ' → logprob: -9.226682662963867

Token 1074: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00024013224174268544
    2. ' ' → logprob: -8.375240325927734
    3. ',' → logprob: -13.250240325927734
    4. '2' → logprob: -13.500240325927734
    5. 'cost' → logprob: -13.500240325927734
    6. '```' → logprob: -14.000240325927734
    7. '   ' → logprob: -14.375240325927734
    8. ')' → logprob: -14.375240325927734
    9. '               ' → logprob: -14.500240325927734
    10. '
' → logprob: -14.500240325927734

Token 1075: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010119688231498003
    2. ')' → logprob: -7.626011848449707
    3. ',' → logprob: -7.751011848449707
    4. ')=' → logprob: -9.626011848449707
    5. ']=' → logprob: -12.001011848449707
    6. '[' → logprob: -12.251011848449707
    7. '=[' → logprob: -12.501011848449707
    8. '```' → logprob: -13.001011848449707
    9. '):
' → logprob: -13.251011848449707
    10. ' =' → logprob: -13.626011848449707

Token 1076: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.023285429924726486
    2. '3' → logprob: -3.773285388946533
    3. '4' → logprob: -10.898285865783691
    4. '_Left' → logprob: -11.898285865783691
    5. 'Straight' → logprob: -11.898285865783691
    6. ' Left' → logprob: -12.523285865783691
    7. 'left' → logprob: -13.398285865783691
    8. '_left' → logprob: -13.648285865783691
    9. '.Left' → logprob: -14.398285865783691
    10. 'Right' → logprob: -15.273285865783691

Token 1077: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04955960810184479
    2. '                   ' → logprob: -3.5495595932006836
    3. ',' → logprob: -5.424559593200684
    4. '
' → logprob: -5.424559593200684
    5. ':
' → logprob: -5.549559593200684
    6. ':' → logprob: -6.049559593200684
    7. '                
' → logprob: -6.924559593200684
    8. '):
' → logprob: -7.049559593200684
    9. 'nd' → logprob: -7.174559593200684
    10. '                    
' → logprob: -7.924559593200684

Token 1078: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2739114463329315
    2. '                   ' → logprob: -1.523911476135254
    3. '```' → logprob: -5.148911476135254
    4. '   ' → logprob: -5.648911476135254
    5. '                
' → logprob: -6.023911476135254
    6. '                    
' → logprob: -6.523911476135254
    7. ',' → logprob: -6.648911476135254
    8. '<|end|>' → logprob: -6.773911476135254
    9. '                ' → logprob: -6.898911476135254
    10. '           ' → logprob: -7.648911476135254

Token 1079: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.18717649579048157
    2. ' nd' → logprob: -1.8121764659881592
    3. '                   ' → logprob: -6.187176704406738
    4. '               ' → logprob: -6.562176704406738
    5. 'new' → logprob: -6.562176704406738
    6. 'if' → logprob: -6.937176704406738
    7. ' if' → logprob: -7.437176704406738
    8. ' new' → logprob: -7.812176704406738
    9. 'cost' → logprob: -8.187176704406738
    10. 'override' → logprob: -10.062176704406738

Token 1080: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197250634431839
    2. ' =' → logprob: -2.8119726181030273
    3. ')' → logprob: -12.436972618103027
    4. ',' → logprob: -15.061972618103027
    5. '=
' → logprob: -15.811972618103027
    6. 'space' → logprob: -15.936972618103027
    7. ')=' → logprob: -16.18697166442871
    8. ']' → logprob: -16.56197166442871
    9. '.' → logprob: -17.68697166442871
    10. ']=' → logprob: -17.93697166442871

Token 1081: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.02169554866850376
    2. ' turn' → logprob: -4.021695613861084
    3. '(turn' → logprob: -5.646695613861084
    4. '(' → logprob: -11.896695137023926
    5. ' (' → logprob: -13.396695137023926
    6. '   ' → logprob: -13.521695137023926
    7. '_turn' → logprob: -16.021696090698242
    8. ' ' → logprob: -16.271696090698242
    9. '.turn' → logprob: -16.646696090698242
    10. '  ' → logprob: -17.021696090698242

Token 1082: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.00011546355381142348
    2. 'from' → logprob: -9.250115394592285
    3. '_' → logprob: -11.375115394592285
    4. '(' → logprob: -13.500115394592285
    5. '_From' → logprob: -13.625115394592285
    6. '(d' → logprob: -13.750115394592285
    7. '_for' → logprob: -13.875115394592285
    8. 'From' → logprob: -14.375115394592285
    9. ')' → logprob: -14.500115394592285
    10. '   ' → logprob: -15.000115394592285

Token 1083: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0011734402505680919
    2. '(d' → logprob: -7.001173496246338
    3. ' d' → logprob: -8.25117301940918
    4. '	d' → logprob: -15.00117301940918
    5. '(' → logprob: -15.12617301940918
    6. ')d' → logprob: -15.12617301940918
    7. ',d' → logprob: -17.12617301940918
    8. '   ' → logprob: -17.25117301940918
    9. '[d' → logprob: -17.50117301940918
    10. ' (' → logprob: -17.75117301940918

Token 1084: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002661039761733264
    2. ',d' → logprob: -9.000266075134277
    3. '[' → logprob: -9.125266075134277
    4. ' ,' → logprob: -11.625266075134277
    5. ',[' → logprob: -11.875266075134277
    6. 'd' → logprob: -12.500266075134277
    7. '`,' → logprob: -12.875266075134277
    8. '(' → logprob: -13.000266075134277
    9. ',
' → logprob: -13.000266075134277
    10. ',n' → logprob: -13.125266075134277

Token 1085: ' player' (ID: 5033)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.5253867506980896
    2. 'd' → logprob: -0.9003867506980896
    3. 'nd' → logprob: -7.275386810302734
    4. ' player' → logprob: -7.400386810302734
    5. ' d' → logprob: -8.525386810302734
    6. '0' → logprob: -8.525386810302734
    7. 'square' → logprob: -8.525386810302734
    8. '4' → logprob: -9.275386810302734
    9. '[player' → logprob: -9.525386810302734
    10. '(player' → logprob: -9.900386810302734

Token 1086: '_cmd' (ID: 26337)
  Prédit: '_cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -6.630610641877865e-06
    2. ' _' → logprob: -12.750006675720215
    3. '_cm' → logprob: -14.000006675720215
    4. '_' → logprob: -14.250006675720215
    5. 'cmd' → logprob: -14.625006675720215
    6. ''_' → logprob: -14.875006675720215
    7. ')_' → logprob: -15.875006675720215
    8. ',' → logprob: -16.1250057220459
    9. ',_' → logprob: -16.2500057220459
    10. ')' → logprob: -16.2500057220459

Token 1087: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008249913225881755
    2. ')
' → logprob: -7.125824928283691
    3. '               ' → logprob: -11.000824928283691
    4. '           ' → logprob: -14.125824928283691
    5. ',' → logprob: -14.500824928283691
    6. ')`' → logprob: -14.625824928283691
    7. ')
' → logprob: -14.750824928283691
    8. '                   ' → logprob: -15.000824928283691
    9. ')

' → logprob: -15.125824928283691
    10. '),' → logprob: -15.125824928283691

Token 1088: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018500959500670433
    2. '	dr' → logprob: -5.268500804901123
    3. '```' → logprob: -5.393500804901123
    4. '			' → logprob: -5.643500804901123
    5. '                ' → logprob: -6.893500804901123
    6. 'dr' → logprob: -7.143500804901123
    7. '                   ' → logprob: -7.143500804901123
    8. '\t' → logprob: -7.893500804901123
    9. '[' → logprob: -7.893500804901123
    10. '\x' → logprob: -7.893500804901123

Token 1089: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' (adapté à ' dr') → logprob: -1.8908587662735954e-05
    2. '               ' → logprob: -11.250019073486328
    3. ' dr' → logprob: -12.125019073486328
    4. '	dr' → logprob: -15.125019073486328
    5. '           ' → logprob: -16.000019073486328
    6. '                   ' → logprob: -17.500019073486328
    7. '(dr' → logprob: -18.000019073486328
    8. '_dr' → logprob: -18.625019073486328
    9. 'Dr' → logprob: -20.375019073486328
    10. '             ' → logprob: -20.375019073486328

Token 1090: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009924377081915736
    2. ',n' → logprob: -7.500992298126221
    3. ',d' → logprob: -7.875992298126221
    4. '<|end|>' → logprob: -11.000992774963379
    5. '[' → logprob: -11.250992774963379
    6. ',
' → logprob: -12.125992774963379
    7. ' ,' → logprob: -13.000992774963379
    8. '[n' → logprob: -13.000992774963379
    9. '   ' → logprob: -13.125992774963379
    10. '=' → logprob: -13.125992774963379

Token 1091: ' dc' (ID: 37843)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.02209967002272606
    2. ' dc' → logprob: -3.897099733352661
    3. ' directions' → logprob: -7.522099494934082
    4. 'dire' → logprob: -7.772099494934082
    5. '_dc' → logprob: -8.022099494934082
    6. '0' → logprob: -8.772099494934082
    7. ',' → logprob: -10.272099494934082
    8. '<|end|>' → logprob: -10.647099494934082
    9. '.dc' → logprob: -11.522099494934082
    10. '=' → logprob: -11.522099494934082

Token 1092: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1128455176949501
    2. ' =' → logprob: -2.2378454208374023
    3. '=d' → logprob: -11.862845420837402
    4. '<|end|>' → logprob: -12.237845420837402
    5. '[' → logprob: -12.612845420837402
    6. '[n' → logprob: -13.237845420837402
    7. '=n' → logprob: -13.487845420837402
    8. '=
' → logprob: -13.737845420837402
    9. ')' → logprob: -13.737845420837402
    10. '=user' → logprob: -14.737845420837402

Token 1093: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.0019286326132714748
    2. ' directions' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.751928329467773
    4. 'direction' → logprob: -19.376928329467773
    5. '-dire' → logprob: -20.626928329467773
    6. 'directories' → logprob: -21.751928329467773
    7. 'irections' → logprob: -22.126928329467773
    8. 'd' → logprob: -22.126928329467773
    9. '0' → logprob: -22.251928329467773
    10. 'direct' → logprob: -22.376928329467773

Token 1094: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. 'nd' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.375
    4. '```' → logprob: -17.0
    5. '(nd' → logprob: -17.625
    6. '[
' → logprob: -18.125
    7. ' [' → logprob: -18.25
    8. '[n' → logprob: -18.5
    9. ')[' → logprob: -19.5
    10. '       ' → logprob: -19.625

Token 1095: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.1606573760509491
    2. 'd' → logprob: -1.9106574058532715
    3. '[' → logprob: -8.535656929016113
    4. ' nd' → logprob: -9.285656929016113
    5. '[d' → logprob: -9.410656929016113
    6. '(nd' → logprob: -9.910656929016113
    7. ' d' → logprob: -12.285656929016113
    8. '
' → logprob: -12.660656929016113
    9. '_nd' → logprob: -13.535656929016113
    10. '   ' → logprob: -14.535656929016113

Token 1096: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7450694441795349
    2. ']
' → logprob: -0.7450694441795349
    3. '               ' → logprob: -2.9950695037841797
    4. '           ' → logprob: -7.87006950378418
    5. ']
' → logprob: -8.99506950378418
    6. ')' → logprob: -11.37006950378418
    7. '                   ' → logprob: -11.49506950378418
    8. '       ' → logprob: -11.87006950378418
    9. ')
' → logprob: -12.24506950378418
    10. ']

' → logprob: -12.74506950378418

Token 1097: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03727252408862114
    2. ' nr' → logprob: -3.9122724533081055
    3. 'nr' → logprob: -4.1622724533081055
    4. 'n' → logprob: -8.287272453308105
    5. '	n' → logprob: -8.662272453308105
    6. '                ' → logprob: -9.162272453308105
    7. ' ' → logprob: -9.412272453308105
    8. '			' → logprob: -9.537272453308105
    9. ' n' → logprob: -9.912272453308105
    10. '(n' → logprob: -10.037272453308105

Token 1098: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' (adapté à ' nr') → logprob: -0.0011709370883181691
    2. ' nr' → logprob: -6.751171112060547
    3. '               ' → logprob: -14.501171112060547
    4. '_nr' → logprob: -16.126171112060547
    5. 'n' → logprob: -16.251171112060547
    6. '                   ' → logprob: -17.376171112060547
    7. '
' → logprob: -18.501171112060547
    8. '.nr' → logprob: -18.626171112060547
    9. '   ' → logprob: -18.751171112060547
    10. ' ' → logprob: -19.251171112060547

Token 1099: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044603630900382996
    2. ' =' → logprob: -3.4196035861968994
    3. '=' → logprob: -5.5446038246154785
    4. ' ,' → logprob: -5.7946038246154785
    5. '<|end|>' → logprob: -6.9196038246154785
    6. '               ' → logprob: -7.0446038246154785
    7. ' +' → logprob: -7.4196038246154785
    8. ',n' → logprob: -8.16960334777832
    9. ' ' → logprob: -8.79460334777832
    10. ')' → logprob: -8.91960334777832

Token 1100: ' nc' (ID: 39841)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005234121344983578
    2. ' r' → logprob: -5.255234241485596
    3. 'c' → logprob: -15.630233764648438
    4. '   ' → logprob: -16.630233764648438
    5. '	r' → logprob: -17.130233764648438
    6. '=r' → logprob: -17.255233764648438
    7. '(r' → logprob: -18.380233764648438
    8. ' =' → logprob: -18.380233764648438
    9. '_r' → logprob: -18.630233764648438
    10. '=' → logprob: -19.130233764648438

Token 1101: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14268136024475098
    2. ' =' → logprob: -2.017681360244751
    3. '=
' → logprob: -13.267681121826172
    4. '<|end|>' → logprob: -13.642681121826172
    5. ',' → logprob: -14.392681121826172
    6. '	' → logprob: -14.517681121826172
    7. '=n' → logprob: -15.142681121826172
    8. '        ' → logprob: -15.267681121826172
    9. ' =
' → logprob: -15.392681121826172
    10. ' ' → logprob: -15.517681121826172

Token 1102: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02975199744105339
    2. ' r' → logprob: -3.529752016067505
    3. '   ' → logprob: -14.154751777648926
    4. '	r' → logprob: -14.654751777648926
    5. '(r' → logprob: -15.529751777648926
    6. '[r' → logprob: -17.404752731323242
    7. '=r' → logprob: -17.404752731323242
    8. ' ' → logprob: -18.404752731323242
    9. '_r' → logprob: -18.654752731323242
    10. ' р' → logprob: -18.904752731323242

Token 1103: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.523200511932373
    2. ' +' → logprob: -0.898200511932373
    3. '<|end|>' → logprob: -9.898200988769531
    4. '[' → logprob: -11.773200988769531
    5. '+
' → logprob: -12.148200988769531
    6. ' +
' → logprob: -12.773200988769531
    7. '+r' → logprob: -13.023200988769531
    8. '<|end|>' → logprob: -13.898200988769531
    9. ')' → logprob: -14.023200988769531
    10. '```' → logprob: -14.148200988769531

Token 1104: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -3.810037742368877e-05
    2. '(dr' → logprob: -10.500038146972656
    3. ' dr' → logprob: -11.500038146972656
    4. 'd' → logprob: -15.500038146972656
    5. '0' → logprob: -15.875038146972656
    6. '	dr' → logprob: -16.625038146972656
    7. '   ' → logprob: -17.375038146972656
    8. ' ' → logprob: -18.500038146972656
    9. '(' → logprob: -19.125038146972656
    10. '_dr' → logprob: -19.250038146972656

Token 1105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006565337534993887
    2. '<|end|>' → logprob: -5.631565570831299
    3. ',n' → logprob: -5.881565570831299
    4. ',
' → logprob: -9.88156509399414
    5. ' ,' → logprob: -9.88156509399414
    6. '<|end|>' → logprob: -10.50656509399414
    7. '[' → logprob: -11.50656509399414
    8. '[n' → logprob: -12.75656509399414
    9. '=' → logprob: -12.88156509399414
    10. '```' → logprob: -13.25656509399414

Token 1106: ' c' (ID: 274)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.38698622584342957
    2. ' dc' → logprob: -1.136986255645752
    3. 'c' → logprob: -9.386985778808594
    4. ' c' → logprob: -11.261985778808594
    5. '(dc' → logprob: -12.636985778808594
    6. '   ' → logprob: -12.761985778808594
    7. '_dc' → logprob: -12.761985778808594
    8. 'd' → logprob: -12.886985778808594
    9. ' ' → logprob: -13.136985778808594
    10. '0' → logprob: -13.386985778808594

Token 1107: ' +' (ID: 659)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.9009330868721008
    2. '+' → logprob: -1.025933027267456
    3. ' dc' → logprob: -2.525933027267456
    4. 'c' → logprob: -2.525933027267456
    5. ' ' → logprob: -3.650933027267456
    6. '0' → logprob: -4.150933265686035
    7. '   ' → logprob: -4.650933265686035
    8. ',' → logprob: -4.900933265686035
    9. '[' → logprob: -5.775933265686035
    10. ' +' → logprob: -6.025933265686035

Token 1108: ' dc' (ID: 37843)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.00024882311117835343
    2. '0' → logprob: -9.000248908996582
    3. ' dc' → logprob: -9.000248908996582
    4. '(dc' → logprob: -13.625248908996582
    5. 'c' → logprob: -15.125248908996582
    6. ' ' → logprob: -15.375248908996582
    7. '1' → logprob: -15.625248908996582
    8. '```' → logprob: -16.875247955322266
    9. '_dc' → logprob: -17.125247955322266
    10. '   ' → logprob: -17.375247955322266

Token 1109: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.044217079877853394
    2. '<|end|>' → logprob: -3.669217109680176
    3. ' if' → logprob: -4.919217109680176
    4. '           ' → logprob: -6.294217109680176
    5. 'if' → logprob: -6.419217109680176
    6. '                
' → logprob: -6.794217109680176
    7. '[' → logprob: -6.919217109680176
    8. '  
' → logprob: -7.044217109680176
    9. '       ' → logprob: -7.669217109680176
    10. '```' → logprob: -7.794217109680176

Token 1110: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00029267906211316586
    2. '           ' → logprob: -8.625292778015137
    3. '                   ' → logprob: -10.375292778015137
    4. '```' → logprob: -10.500292778015137
    5. '<|end|>' → logprob: -10.625292778015137
    6. '                ' → logprob: -12.125292778015137
    7. '              ' → logprob: -12.250292778015137
    8. '                
' → logprob: -12.375292778015137
    9. 'if' → logprob: -12.625292778015137
    10. '       ' → logprob: -13.000292778015137

Token 1111: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12925761938095093
    2. '               ' → logprob: -2.1292576789855957
    3. ' if' → logprob: -6.129257678985596
    4. '                   ' → logprob: -9.254257202148438
    5. '           ' → logprob: -10.254257202148438
    6. 'for' → logprob: -12.129257202148438
    7. '                ' → logprob: -12.629257202148438
    8. '              ' → logprob: -13.129257202148438
    9. '                       ' → logprob: -13.504257202148438
    10. '
' → logprob: -13.754257202148438

Token 1112: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42870765924453735
    2. ' ' → logprob: -1.0537075996398926
    3. ' ' → logprob: -12.30370807647705
    4. '(' → logprob: -14.05370807647705
    5. ' (' → logprob: -14.30370807647705
    6. '  ' → logprob: -15.05370807647705
    7. '   ' → logprob: -15.17870807647705
    8. '    ' → logprob: -16.303707122802734
    9. ' not' → logprob: -16.678707122802734
    10. '
' → logprob: -16.991207122802734

Token 1113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.625027656555176
    3. '(' → logprob: -13.625027656555176
    4. 'nr' → logprob: -14.250027656555176
    5. '   ' → logprob: -14.625027656555176
    6. '               ' → logprob: -15.250027656555176
    7. '           ' → logprob: -15.625027656555176
    8. '
' → logprob: -15.625027656555176
    9. '                   ' → logprob: -16.125028610229492
    10. '       ' → logprob: -16.500028610229492

Token 1114: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.024059297516942024
    2. ' <' → logprob: -4.274059295654297
    3. '<=' → logprob: -4.649059295654297
    4. '<' → logprob: -8.774059295654297
    5. ' >=' → logprob: -9.649059295654297
    6. ' ' → logprob: -10.524059295654297
    7. '        ' → logprob: -11.899059295654297
    8. '    ' → logprob: -12.024059295654297
    9. '   ' → logprob: -12.524059295654297
    10. '>=' → logprob: -12.899059295654297

Token 1115: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -7.505351095460355e-05
    2. ' nr' → logprob: -9.500075340270996
    3. 'n' → logprob: -16.62507438659668
    4. '_nr' → logprob: -18.50007438659668
    5. '
' → logprob: -18.87507438659668
    6. 'nm' → logprob: -19.87507438659668
    7. 'Nr' → logprob: -20.00007438659668
    8. '.nr' → logprob: -20.12507438659668
    9. 'ny' → logprob: -20.37507438659668
    10. 'nt' → logprob: -20.37507438659668

Token 1116: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05175771564245224
    2. ' <' → logprob: -3.3017578125
    3. '<n' → logprob: -4.3017578125
    4. ' and' → logprob: -10.8017578125
    5. '<N' → logprob: -11.1767578125
    6. 'and' → logprob: -11.6767578125
    7. '<num' → logprob: -11.6767578125
    8. '<
' → logprob: -12.1767578125
    9. '<len' → logprob: -12.3017578125
    10. '<size' → logprob: -12.4267578125

Token 1117: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0009114635176956654
    2. ' h' → logprob: -7.000911235809326
    3. '	h' → logprob: -19.125911712646484
    4. '   ' → logprob: -20.000911712646484
    5. '[h' → logprob: -20.250911712646484
    6. '
' → logprob: -20.250911712646484
    7. '<h' → logprob: -21.000911712646484
    8. '(h' → logprob: -21.375911712646484
    9. '"h' → logprob: -21.750911712646484
    10. ' ' → logprob: -21.875911712646484

Token 1118: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012510710395872593
    2. 'and' → logprob: -4.387510776519775
    3. ' ' → logprob: -14.887510299682617
    4. ' и' → logprob: -16.512510299682617
    5. ' ' → logprob: -16.637510299682617
    6. ',' → logprob: -16.637510299682617
    7. '        ' → logprob: -16.637510299682617
    8. '	and' → logprob: -16.637510299682617
    9. '<|end|>' → logprob: -17.262510299682617
    10. '            ' → logprob: -17.637510299682617

Token 1119: ' ' (ID: 220)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.20151527225971222
    2. ' nc' → logprob: -1.7015153169631958
    3. 'nr' → logprob: -9.951515197753906
    4. '_nc' → logprob: -10.826515197753906
    5. '   ' → logprob: -11.951515197753906
    6. '.nc' → logprob: -12.826515197753906
    7. ' nr' → logprob: -12.826515197753906
    8. 'n' → logprob: -12.951515197753906
    9. '    ' → logprob: -12.951515197753906
    10. ' ' → logprob: -13.076515197753906

Token 1120: '0' (ID: 15)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -6.027225754223764e-05
    2. ' nc' → logprob: -9.750060081481934
    3. 'nr' → logprob: -13.250060081481934
    4. '_nc' → logprob: -16.62506103515625
    5. 'n' → logprob: -17.75006103515625
    6. '.nc' → logprob: -18.12506103515625
    7. '   ' → logprob: -18.50006103515625
    8. 'hc' → logprob: -19.12506103515625
    9. '
' → logprob: -19.50006103515625
    10. 'cn' → logprob: -19.87506103515625

Token 1121: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.043966133147478104
    2. ' <' → logprob: -3.168966054916382
    3. '<n' → logprob: -7.793966293334961
    4. ' and' → logprob: -8.043966293334961
    5. 'and' → logprob: -9.043966293334961
    6. 'nc' → logprob: -10.418966293334961
    7. 'c' → logprob: -11.043966293334961
    8. '                   ' → logprob: -11.918966293334961
    9. '               ' → logprob: -12.043966293334961
    10. ',' → logprob: -12.168966293334961

Token 1122: ' nc' (ID: 39841)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4749722480773926
    2. 'nc' → logprob: -0.9749722480773926
    3. 'nr' → logprob: -7.724972248077393
    4. 'wc' → logprob: -8.099971771240234
    5. ' nc' → logprob: -9.349971771240234
    6. ' w' → logprob: -10.724971771240234
    7. 'nw' → logprob: -11.724971771240234
    8. 'c' → logprob: -11.849971771240234
    9. '   ' → logprob: -12.099971771240234
    10. 'cn' → logprob: -12.224971771240234

Token 1123: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5419463515281677
    2. ' and' → logprob: -1.0419464111328125
    3. '<' → logprob: -3.0419464111328125
    4. 'and' → logprob: -4.2919464111328125
    5. '<n' → logprob: -5.5419464111328125
    6. '<w' → logprob: -9.291946411132812
    7. '<|end|>' → logprob: -10.791946411132812
    8. '<c' → logprob: -10.916946411132812
    9. '               ' → logprob: -11.041946411132812
    10. '           ' → logprob: -11.166946411132812

Token 1124: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0019699118565768003
    2. 'h' → logprob: -6.251969814300537
    3. ' w' → logprob: -10.126970291137695
    4. '   ' → logprob: -14.251970291137695
    5. 'c' → logprob: -15.626970291137695
    6. '       ' → logprob: -16.126970291137695
    7. ' h' → logprob: -16.126970291137695
    8. '(w' → logprob: -16.501970291137695
    9. '
' → logprob: -16.751970291137695
    10. 'wc' → logprob: -16.751970291137695

Token 1125: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18854054808616638
    2. '                   ' → logprob: -2.063540458679199
    3. 'and' → logprob: -3.688540458679199
    4. ':' → logprob: -4.563540458679199
    5. ':
' → logprob: -5.438540458679199
    6. '               ' → logprob: -5.813540458679199
    7. '                       ' → logprob: -6.313540458679199
    8. '           ' → logprob: -9.0635404586792
    9. ',' → logprob: -10.1885404586792
    10. '                           ' → logprob: -10.3135404586792

Token 1126: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00032521432149223983
    2. '                       ' → logprob: -8.750325202941895
    3. '               ' → logprob: -9.750325202941895
    4. '```' → logprob: -9.750325202941895
    5. '   ' → logprob: -11.375325202941895
    6. '                  ' → logprob: -11.625325202941895
    7. 'if' → logprob: -12.250325202941895
    8. '                    ' → logprob: -12.250325202941895
    9. ' if' → logprob: -12.625325202941895
    10. '           ' → logprob: -12.875325202941895

Token 1127: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.045266684144735336
    2. 'if' → logprob: -3.920266628265381
    3. '                   ' → logprob: -4.295266628265381
    4. 'next' → logprob: -5.420266628265381
    5. '                       ' → logprob: -5.420266628265381
    6. 'total' → logprob: -7.545266628265381
    7. 'cost' → logprob: -7.545266628265381
    8. ' new' → logprob: -7.795266628265381
    9. ' if' → logprob: -8.670267105102539
    10. '               ' → logprob: -9.795267105102539

Token 1128: ' Pay' (ID: 11961)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004428339656442404
    2. 'next' → logprob: -6.379428386688232
    3. 'n' → logprob: -6.629428386688232
    4. 'nc' → logprob: -7.129428386688232
    5. '                   ' → logprob: -8.504427909851074
    6. 'total' → logprob: -9.129427909851074
    7. 'if' → logprob: -9.254427909851074
    8. 'override' → logprob: -9.504427909851074
    9. '               ' → logprob: -10.504427909851074
    10. 'nt' → logprob: -10.629427909851074

Token 1129: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.025297829881310463
    2. ' cost' → logprob: -3.7752978801727295
    3. '                   ' → logprob: -7.27529764175415
    4. '(cost' → logprob: -7.40029764175415
    5. ' costs' → logprob: -8.275298118591309
    6. '                       ' → logprob: -8.275298118591309
    7. 'if' → logprob: -9.525298118591309
    8. ' =' → logprob: -10.025298118591309
    9. '               ' → logprob: -10.400298118591309
    10. '=' → logprob: -10.400298118591309

Token 1130: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1227439641952515
    2. ' =' → logprob: -1.3727439641952515
    3. '                   ' → logprob: -1.9977439641952515
    4. '+' → logprob: -2.497744083404541
    5. '               ' → logprob: -3.247744083404541
    6. 'if' → logprob: -3.372744083404541
    7. ' +' → logprob: -3.372744083404541
    8. 'new' → logprob: -3.997744083404541
    9. 'cost' → logprob: -4.247744083404541
    10. ',' → logprob: -4.372744083404541

Token 1131: ' overriding' (ID: 151187)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.5181506276130676
    2. 'cost' → logprob: -1.0181505680084229
    3. ' costs' → logprob: -3.518150568008423
    4. ' player' → logprob: -4.768150806427002
    5. 'over' → logprob: -6.018150806427002
    6. 'explicit' → logprob: -7.393150806427002
    7. 'the' → logprob: -7.518150806427002
    8. 'commands' → logprob: -8.018150329589844
    9. '1' → logprob: -8.768150329589844
    10. ' cost' → logprob: -8.893150329589844

Token 1132: ' command' (ID: 6348)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.655026376247406
    2. 'override' → logprob: -1.6550264358520508
    3. '+' → logprob: -1.9050264358520508
    4. ' +' → logprob: -2.780026435852051
    5. ' new' → logprob: -3.905026435852051
    6. '                   ' → logprob: -4.155026435852051
    7. '               ' → logprob: -4.780026435852051
    8. ' =' → logprob: -5.030026435852051
    9. 'next' → logprob: -5.280026435852051
    10. 'if' → logprob: -5.280026435852051

Token 1133: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.224379062652588
    2. ' if' → logprob: -1.599379062652588
    3. 'if' → logprob: -1.974379062652588
    4. ',' → logprob: -2.349379062652588
    5. 'new' → logprob: -2.724379062652588
    6. '                       ' → logprob: -2.974379062652588
    7. '+' → logprob: -3.474379062652588
    8. ' new' → logprob: -3.599379062652588
    9. '
' → logprob: -4.224379062652588
    10. '               ' → logprob: -4.224379062652588

Token 1134: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2021249532699585
    2. '                       ' → logprob: -1.8271249532699585
    3. ',' → logprob: -4.827125072479248
    4. '               ' → logprob: -5.452125072479248
    5. '+' → logprob: -5.702125072479248
    6. ' +' → logprob: -6.452125072479248
    7. ' if' → logprob: -6.452125072479248
    8. ' =' → logprob: -7.577125072479248
    9. ' for' → logprob: -7.827125072479248
    10. '           ' → logprob: -8.32712459564209

Token 1135: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.02260047383606434
    2. 'override' → logprob: -4.3976006507873535
    3. ' new' → logprob: -5.1476006507873535
    4. 'next' → logprob: -6.2726006507873535
    5. 'total' → logprob: -6.3976006507873535
    6. 'if' → logprob: -8.147600173950195
    7. '                   ' → logprob: -9.522600173950195
    8. ' override' → logprob: -9.647600173950195
    9. 'over' → logprob: -9.647600173950195
    10. 'nc' → logprob: -9.897600173950195

Token 1136: 'cost' (ID: 33457)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0003975416184403002
    2. 'cost' → logprob: -7.875397682189941
    3. '_' → logprob: -11.625397682189941
    4. '_c' → logprob: -12.125397682189941
    5. ' =' → logprob: -13.750397682189941
    6. '=' → logprob: -14.750397682189941
    7. ' _' → logprob: -15.250397682189941
    8. '   ' → logprob: -15.625397682189941
    9. '_COST' → logprob: -15.625397682189941
    10. '_cos' → logprob: -15.875397682189941

Token 1137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329724192619324
    2. '=' → logprob: -1.3132972717285156
    3. ' +' → logprob: -10.938297271728516
    4. '+' → logprob: -11.188297271728516
    5. ')' → logprob: -13.938297271728516
    6. ',' → logprob: -14.188297271728516
    7. 'cost' → logprob: -14.563297271728516
    8. ' +=' → logprob: -14.688297271728516
    9. ' ' → logprob: -15.313297271728516
    10. ' =
' → logprob: -15.563297271728516

Token 1138: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0007099286303855479
    2. ' cost' → logprob: -7.2507100105285645
    3. '   ' → logprob: -20.250709533691406
    4. '(cost' → logprob: -20.500709533691406
    5. '               ' → logprob: -21.500709533691406
    6. '           ' → logprob: -22.125709533691406
    7. '                   ' → logprob: -22.125709533691406
    8. '_cost' → logprob: -22.875709533691406
    9. ' ' → logprob: -23.125709533691406
    10. 'code' → logprob: -23.750709533691406

Token 1139: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141461491584778
    2. '+' → logprob: -1.7014145851135254
    3. '+c' → logprob: -14.826415061950684
    4. ' +
' → logprob: -15.451415061950684
    5. '                    ' → logprob: -15.701415061950684
    6. '+
' → logprob: -15.701415061950684
    7. ' ' → logprob: -16.576414108276367
    8. '＋' → logprob: -16.826414108276367
    9. '                   ' → logprob: -17.076414108276367
    10. '                       ' → logprob: -17.076414108276367

Token 1140: ' costs' (ID: 8959)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.339278580620885e-06
    2. ' costs' → logprob: -13.000001907348633
    3. '(cost' → logprob: -20.125001907348633
    4. ' cost' → logprob: -20.625001907348633
    5. '   ' → logprob: -22.000001907348633
    6. '```' → logprob: -22.750001907348633
    7. '_cost' → logprob: -23.000001907348633
    8. '           ' → logprob: -23.125001907348633
    9. 'Costs' → logprob: -23.875001907348633
    10. '               ' → logprob: -24.125001907348633

Token 1141: '[player' (ID: 111929)
  Prédit: '[player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[player' → logprob: -1.5048530030981055e-06
    2. 'player' → logprob: -14.250001907348633
    3. '[' → logprob: -14.375001907348633
    4. '[
' → logprob: -16.000001907348633
    5. '[user' → logprob: -16.500001907348633
    6. '(player' → logprob: -16.875001907348633
    7. ' [' → logprob: -18.875001907348633
    8. '               ' → logprob: -20.000001907348633
    9. ' player' → logprob: -20.125001907348633
    10. '                   ' → logprob: -20.500001907348633

Token 1142: '_cmd' (ID: 26337)
  Prédit: '_cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cmd' → logprob: -1.580929347255733e-05
    2. 'cmd' → logprob: -11.375016212463379
    3. '[' → logprob: -12.750016212463379
    4. '_ctrl' → logprob: -15.375016212463379
    5. ']' → logprob: -16.000015258789062
    6. '_comm' → logprob: -16.125015258789062
    7. '```' → logprob: -16.375015258789062
    8. '_cnt' → logprob: -16.625015258789062
    9. '_command' → logprob: -16.625015258789062
    10. 'Cmd' → logprob: -16.625015258789062

Token 1143: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4934389889240265
    2. '                   ' → logprob: -1.618438959121704
    3. ']' → logprob: -2.493438959121704
    4. '               ' → logprob: -2.618438959121704
    5. '<|end|>' → logprob: -3.618438959121704
    6. '<|end|>' → logprob: -5.993439197540283
    7. ')
' → logprob: -6.243439197540283
    8. '                       ' → logprob: -6.993439197540283
    9. ']
' → logprob: -7.368439197540283
    10. '           ' → logprob: -7.743439197540283

Token 1144: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008458409574814141
    2. '               ' → logprob: -8.125845909118652
    3. '                       ' → logprob: -8.875845909118652
    4. '                    
' → logprob: -9.375845909118652
    5. '   ' → logprob: -9.625845909118652
    6. '           ' → logprob: -9.875845909118652
    7. '       ' → logprob: -10.250845909118652
    8. '				' → logprob: -10.250845909118652
    9. 'if' → logprob: -10.500845909118652
    10. '                    ' → logprob: -11.125845909118652

Token 1145: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03949318453669548
    2. '                   ' → logprob: -3.2894930839538574
    3. ' if' → logprob: -6.539493083953857
    4. '                       ' → logprob: -12.789493560791016
    5. '               ' → logprob: -13.414493560791016
    6. '   ' → logprob: -14.414493560791016
    7. '
' → logprob: -15.414493560791016
    8. '           ' → logprob: -15.914493560791016
    9. '                    
' → logprob: -15.914493560791016
    10. '                  ' → logprob: -17.039493560791016

Token 1146: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004438971809577197
    2. ' dist' → logprob: -7.750443935394287
    3. 'new' → logprob: -11.250443458557129
    4. '   ' → logprob: -15.625443458557129
    5. ' new' → logprob: -16.875444412231445
    6. '	dist' → logprob: -17.375444412231445
    7. '(dist' → logprob: -18.250444412231445
    8. '           ' → logprob: -18.375444412231445
    9. '               ' → logprob: -19.000444412231445
    10. '       ' → logprob: -19.000444412231445

Token 1147: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.796184723294573e-06
    2. '[
' → logprob: -13.125005722045898
    3. '
' → logprob: -13.500005722045898
    4. 'nr' → logprob: -13.750005722045898
    5. '[' → logprob: -14.375005722045898
    6. '```' → logprob: -15.250005722045898
    7. '   ' → logprob: -15.375005722045898
    8. ' [' → logprob: -17.5000057220459
    9. '

' → logprob: -17.5000057220459
    10. ')' → logprob: -17.5000057220459

Token 1148: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05688459798693657
    2. 'nr' → logprob: -3.056884527206421
    3. '[n' → logprob: -4.806884765625
    4. '[r' → logprob: -10.056884765625
    5. '[' → logprob: -10.806884765625
    6. 'n' → logprob: -11.056884765625
    7. ' nr' → logprob: -12.306884765625
    8. '_nr' → logprob: -12.681884765625
    9. 'rn' → logprob: -14.556884765625
    10. '.nr' → logprob: -14.681884765625

Token 1149: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004134203307330608
    2. '[n' → logprob: -5.504134178161621
    3. '[' → logprob: -10.504134178161621
    4. '"][' → logprob: -11.754134178161621
    5. '[r' → logprob: -12.004134178161621
    6. ']' → logprob: -12.129134178161621
    7. ''][' → logprob: -12.629134178161621
    8. ']][' → logprob: -14.004134178161621
    9. '>[' → logprob: -14.379134178161621
    10. ' ][' → logprob: -14.629134178161621

Token 1150: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -1.0087516784551553e-05
    2. 'nr' → logprob: -12.12501049041748
    3. ' nc' → logprob: -12.87501049041748
    4. 'c' → logprob: -13.75001049041748
    5. '_nc' → logprob: -14.75001049041748
    6. '   ' → logprob: -15.75001049041748
    7. '.nc' → logprob: -16.000009536743164
    8. 'n' → logprob: -16.000009536743164
    9. 'Nc' → logprob: -16.500009536743164
    10. '
' → logprob: -16.625009536743164

Token 1151: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.429149866104126
    2. '[n' → logprob: -1.054149866104126
    3. '[' → logprob: -8.179149627685547
    4. '[r' → logprob: -11.054149627685547
    5. '   ' → logprob: -11.304149627685547
    6. '                           ' → logprob: -11.429149627685547
    7. '>[' → logprob: -11.429149627685547
    8. '"][' → logprob: -11.429149627685547
    9. '           ' → logprob: -11.554149627685547
    10. '                   ' → logprob: -11.679149627685547

Token 1152: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0011734402505680919
    2. 'd' → logprob: -6.751173496246338
    3. 'nr' → logprob: -13.87617301940918
    4. ' nd' → logprob: -14.37617301940918
    5. '[' → logprob: -14.62617301940918
    6. 'n' → logprob: -15.00117301940918
    7. '   ' → logprob: -15.00117301940918
    8. '(nd' → logprob: -15.37617301940918
    9. 'rd' → logprob: -16.00117301940918
    10. '
' → logprob: -16.12617301940918

Token 1153: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013911888236179948
    2. ']>' → logprob: -6.626391410827637
    3. '>' → logprob: -10.126391410827637
    4. ' ]' → logprob: -11.126391410827637
    5. ' >' → logprob: -12.001391410827637
    6. '[' → logprob: -13.126391410827637
    7. '']' → logprob: -13.501391410827637
    8. '"]' → logprob: -15.251391410827637
    9. '   ' → logprob: -15.751391410827637
    10. '                   ' → logprob: -15.876391410827637

Token 1154: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2519419491291046
    2. '>' → logprob: -1.5019419193267822
    3. '[' → logprob: -11.626941680908203
    4. '">' → logprob: -14.001941680908203
    5. ')' → logprob: -14.876941680908203
    6. '                           ' → logprob: -15.126941680908203
    7. ']>' → logprob: -15.251941680908203
    8. ')>' → logprob: -15.251941680908203
    9. ']' → logprob: -15.376941680908203
    10. '   ' → logprob: -15.501941680908203

Token 1155: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0001234428636962548
    2. ' new' → logprob: -9.000123023986816
    3. '                   ' → logprob: -19.000123977661133
    4. '                       ' → logprob: -21.000123977661133
    5. '               ' → logprob: -21.500123977661133
    6. '	new' → logprob: -21.875123977661133
    7. '_new' → logprob: -22.125123977661133
    8. 'New' → logprob: -22.875123977661133
    9. '[new' → logprob: -23.875123977661133
    10. '```' → logprob: -24.000123977661133

Token 1156: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -5.512236498361744e-07
    2. 'new' → logprob: -15.625000953674316
    3. ' cost' → logprob: -15.625000953674316
    4. '_cost' → logprob: -16.25
    5. 'cast' → logprob: -17.75
    6. '
' → logprob: -18.125
    7. 'const' → logprob: -18.25
    8. '```' → logprob: -18.75
    9. 'cos' → logprob: -18.875
    10. 'dist' → logprob: -19.25

Token 1157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1928047239780426
    2. ':
' → logprob: -2.0678048133850098
    3. '                       ' → logprob: -4.19280481338501
    4. '<|end|>' → logprob: -4.19280481338501
    5. ')' → logprob: -5.19280481338501
    6. '):
' → logprob: -5.69280481338501
    7. '):' → logprob: -5.94280481338501
    8. '                           ' → logprob: -6.31780481338501
    9. '```' → logprob: -6.44280481338501
    10. '                   ' → logprob: -7.56780481338501

Token 1158: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.009082729928195477
    2. '                           ' → logprob: -5.134082794189453
    3. '                        ' → logprob: -7.009082794189453
    4. '                   ' → logprob: -7.259082794189453
    5. '                               ' → logprob: -7.634082794189453
    6. '                        
' → logprob: -7.759082794189453
    7. '```' → logprob: -9.259082794189453
    8. '                    ' → logprob: -9.509082794189453
    9. '               ' → logprob: -9.634082794189453
    10. '           ' → logprob: -9.759082794189453

Token 1159: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.000868944451212883
    2. '                       ' → logprob: -7.750868797302246
    3. ' dist' → logprob: -7.750868797302246
    4. '                           ' → logprob: -11.875868797302246
    5. '                               ' → logprob: -15.000868797302246
    6. '```' → logprob: -15.125868797302246
    7. '                   ' → logprob: -15.750868797302246
    8. '               ' → logprob: -16.500869750976562
    9. '                        ' → logprob: -17.000869750976562
    10. '           ' → logprob: -17.500869750976562

Token 1160: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.25000286102295
    3. '[
' → logprob: -15.25000286102295
    4. '```' → logprob: -15.50000286102295
    5. '
' → logprob: -16.250001907348633
    6. '[num' → logprob: -17.125001907348633
    7. '\[' → logprob: -17.875001907348633
    8. '[[' → logprob: -18.125001907348633
    9. ' [' → logprob: -18.375001907348633
    10. '	n' → logprob: -18.500001907348633

Token 1161: 'r' (ID: 81)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.010777676478028297
    2. 'r' → logprob: -5.260777473449707
    3. 'n' → logprob: -5.385777473449707
    4. 'nr' → logprob: -7.010777473449707
    5. '[' → logprob: -11.760777473449707
    6. '   ' → logprob: -11.885777473449707
    7. '       ' → logprob: -11.885777473449707
    8. '
' → logprob: -12.135777473449707
    9. '```' → logprob: -12.885777473449707
    10. '[r' → logprob: -13.135777473449707

Token 1162: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0017269416712224483
    2. '][' → logprob: -6.376727104187012
    3. '                       ' → logprob: -12.376727104187012
    4. '                           ' → logprob: -12.501727104187012
    5. '       ' → logprob: -12.751727104187012
    6. '[' → logprob: -13.126727104187012
    7. '   ' → logprob: -13.251727104187012
    8. '                   ' → logprob: -13.376727104187012
    9. '           ' → logprob: -13.626727104187012
    10. '               ' → logprob: -13.626727104187012

Token 1163: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.1431906670331955
    2. 'nr' → logprob: -2.018190622329712
    3. 'c' → logprob: -8.893190383911133
    4. 'cn' → logprob: -9.518190383911133
    5. '
' → logprob: -9.768190383911133
    6. 'n' → logprob: -9.893190383911133
    7. '[n' → logprob: -10.018190383911133
    8. '   ' → logprob: -10.768190383911133
    9. '(n' → logprob: -10.768190383911133
    10. 'r' → logprob: -11.643190383911133

Token 1164: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.31435883045196533
    2. '][' → logprob: -1.3143588304519653
    3. '[' → logprob: -7.564358711242676
    4. '                           ' → logprob: -8.689358711242676
    5. '                       ' → logprob: -8.814358711242676
    6. '                               ' → logprob: -9.064358711242676
    7. '                   ' → logprob: -10.814358711242676
    8. '               ' → logprob: -10.939358711242676
    9. '
' → logprob: -11.314358711242676
    10. '       ' → logprob: -11.314358711242676

Token 1165: 'nd' (ID: 301)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00010068230039905757
    2. '(new' → logprob: -10.125101089477539
    3. ' new' → logprob: -10.375101089477539
    4. '[new' → logprob: -10.875101089477539
    5. 'nr' → logprob: -11.625101089477539
    6. 'nd' → logprob: -14.750101089477539
    7. 'cost' → logprob: -15.875101089477539
    8. 'nc' → logprob: -16.12510108947754
    9. '   ' → logprob: -16.12510108947754
    10. '       ' → logprob: -16.25010108947754

Token 1166: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018490897491574287
    2. ' =' → logprob: -4.018490791320801
    3. ']' → logprob: -8.5184907913208
    4. ']=' → logprob: -8.8934907913208
    5. '                           ' → logprob: -12.7684907913208
    6. ')' → logprob: -14.8934907913208
    7. '                       ' → logprob: -15.1434907913208
    8. ')=' → logprob: -15.7684907913208
    9. '=
' → logprob: -16.268491744995117
    10. '                        ' → logprob: -17.018491744995117

Token 1167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858794063329697
    2. ' =' → logprob: -3.0485880374908447
    3. '                           ' → logprob: -15.673587799072266
    4. '=n' → logprob: -15.673587799072266
    5. '=
' → logprob: -16.548587799072266
    6. '=new' → logprob: -16.673587799072266
    7. '＝' → logprob: -17.423587799072266
    8. ']=' → logprob: -17.548587799072266
    9. '                       ' → logprob: -18.173587799072266
    10. ']' → logprob: -18.798587799072266

Token 1168: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.547789674485102e-05
    2. ' new' → logprob: -10.250035285949707
    3. '                       ' → logprob: -21.000036239624023
    4. '                   ' → logprob: -21.500036239624023
    5. '
' → logprob: -21.875036239624023
    6. '_new' → logprob: -22.000036239624023
    7. '	new' → logprob: -22.125036239624023
    8. 'New' → logprob: -22.250036239624023
    9. '$new' → logprob: -23.125036239624023
    10. '               ' → logprob: -23.500036239624023

Token 1169: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.02324652671813965
    2. 'new' → logprob: -3.7732465267181396
    3. ' new' → logprob: -14.773246765136719
    4. ' cost' → logprob: -15.023246765136719
    5. '_cost' → logprob: -15.773246765136719
    6. 'const' → logprob: -16.64824676513672
    7. '
' → logprob: -17.39824676513672
    8. '```' → logprob: -17.77324676513672
    9. 'cos' → logprob: -18.02324676513672
    10. '   ' → logprob: -18.02324676513672

Token 1170: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0024219141341745853
    2. '```' → logprob: -7.002421855926514
    3. '					' → logprob: -7.752421855926514
    4. '<|end|>' → logprob: -8.377422332763672
    5. '               ' → logprob: -8.627422332763672
    6. '                        
' → logprob: -8.877422332763672
    7. '           ' → logprob: -9.002422332763672
    8. '                           ' → logprob: -9.502422332763672
    9. '                   ' → logprob: -9.502422332763672
    10. 'heap' → logprob: -9.877422332763672

Token 1171: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08828815817832947
    2. '```' → logprob: -2.7132880687713623
    3. '                           ' → logprob: -4.588288307189941
    4. '                        
' → logprob: -6.588288307189941
    5. '                        ' → logprob: -6.713288307189941
    6. '                   ' → logprob: -6.963288307189941
    7. '<|end|>' → logprob: -6.963288307189941
    8. '					' → logprob: -7.338288307189941
    9. '                               ' → logprob: -7.588288307189941
    10. '               ' → logprob: -7.838288307189941

Token 1172: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.320199877838604e-07
    2. ' heap' → logprob: -14.75
    3. '```' → logprob: -22.25
    4. 'he' → logprob: -22.5
    5. '                       ' → logprob: -22.75
    6. '           ' → logprob: -23.875
    7. '.heap' → logprob: -23.875
    8. '(heap' → logprob: -24.125
    9. '                           ' → logprob: -24.625
    10. '_heap' → logprob: -24.75

Token 1173: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. '.he' → logprob: -16.5
    3. '.heap' → logprob: -18.75
    4. '```' → logprob: -18.75
    5. 'p' → logprob: -19.0
    6. '                       ' → logprob: -20.0
    7. 'h' → logprob: -20.5
    8. 'he' → logprob: -20.625
    9. 'qq' → logprob: -20.625
    10. '           ' → logprob: -20.625

Token 1174: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0007174347410909832
    2. 'he' → logprob: -7.250717639923096
    3. '.heap' → logprob: -12.375717163085938
    4. 'heap' → logprob: -13.000717163085938
    5. 'q' → logprob: -15.125717163085938
    6. '.' → logprob: -15.250717163085938
    7. '```' → logprob: -16.000717163085938
    8. '_he' → logprob: -16.625717163085938
    9. ' he' → logprob: -16.875717163085938
    10. '   ' → logprob: -17.125717163085938

Token 1175: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.005079229362308979
    2. 'pp' → logprob: -6.00507926940918
    3. 'ush' → logprob: -6.00507926940918
    4. 'push' → logprob: -9.50507926940918
    5. 'ap' → logprob: -9.88007926940918
    6. 'q' → logprob: -13.13007926940918
    7. 'p' → logprob: -13.25507926940918
    8. '```' → logprob: -13.25507926940918
    9. 'op' → logprob: -14.00507926940918
    10. 'App' → logprob: -15.00507926940918

Token 1176: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0037472255062311888
    2. 'op' → logprob: -6.128747463226318
    3. 'app' → logprob: -6.753747463226318
    4. 'push' → logprob: -8.75374698638916
    5. 'pp' → logprob: -9.12874698638916
    6. 'q' → logprob: -9.37874698638916
    7. 'ap' → logprob: -11.12874698638916
    8. 'p' → logprob: -11.37874698638916
    9. '.push' → logprob: -12.37874698638916
    10. '       ' → logprob: -13.50374698638916

Token 1177: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.500006675720215
    4. '(
' → logprob: -15.625006675720215
    5. '(q' → logprob: -15.750006675720215
    6. '```' → logprob: -16.37500762939453
    7. 'pq' → logprob: -16.50000762939453
    8. ',p' → logprob: -17.75000762939453
    9. '       ' → logprob: -18.37500762939453
    10. '(P' → logprob: -18.37500762939453

Token 1178: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.14608973264694214
    2. '(p' → logprob: -2.021089792251587
    3. 'pq' → logprob: -5.771089553833008
    4. '(q' → logprob: -8.896089553833008
    5. 'p' → logprob: -10.521089553833008
    6. 'dq' → logprob: -10.771089553833008
    7. '```' → logprob: -10.771089553833008
    8. '[p' → logprob: -11.271089553833008
    9. '   ' → logprob: -11.396089553833008
    10. ')' → logprob: -11.396089553833008

Token 1179: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.03393958881497383
    2. ',' → logprob: -3.5339395999908447
    3. ',p' → logprob: -5.533939361572266
    4. '(' → logprob: -8.658939361572266
    5. ')' → logprob: -10.908939361572266
    6. 'pq' → logprob: -11.908939361572266
    7. ' (' → logprob: -12.283939361572266
    8. ',(' → logprob: -12.408939361572266
    9. '```' → logprob: -12.408939361572266
    10. '(q' → logprob: -12.908939361572266

Token 1180: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0002128382766386494
    2. ' (' → logprob: -8.750212669372559
    3. '(p' → logprob: -10.000212669372559
    4. '(' → logprob: -12.250212669372559
    5. 'new' → logprob: -13.250212669372559
    6. '(n' → logprob: -13.625212669372559
    7. 'pq' → logprob: -14.625212669372559
    8. ' new' → logprob: -15.000212669372559
    9. '   ' → logprob: -16.125213623046875
    10. '((' → logprob: -16.750213623046875

Token 1181: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.006228336598724127
    2. 'pq' → logprob: -5.131228446960449
    3. '(new' → logprob: -8.50622844696045
    4. 'nr' → logprob: -9.63122844696045
    5. 'p' → logprob: -11.13122844696045
    6. ' new' → logprob: -12.00622844696045
    7. '(p' → logprob: -12.00622844696045
    8. '(n' → logprob: -13.13122844696045
    9. ' pq' → logprob: -14.00622844696045
    10. '[new' → logprob: -14.75622844696045

Token 1182: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.008992933668196201
    2. '(n' → logprob: -4.758993148803711
    3. '[n' → logprob: -8.883993148803711
    4. '(cost' → logprob: -9.258993148803711
    5. '_cost' → logprob: -9.883993148803711
    6. '(r' → logprob: -11.258993148803711
    7. ')' → logprob: -11.383993148803711
    8. '(' → logprob: -11.758993148803711
    9. 'cot' → logprob: -12.008993148803711
    10. 'q' → logprob: -12.383993148803711

Token 1183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009032421512529254
    2. ',n' → logprob: -7.125903129577637
    3. '(n' → logprob: -9.375903129577637
    4. '(' → logprob: -12.250903129577637
    5. ',(' → logprob: -12.625903129577637
    6. ' ,' → logprob: -13.500903129577637
    7. ')' → logprob: -13.750903129577637
    8. ',
' → logprob: -14.000903129577637
    9. ',p' → logprob: -14.750903129577637
    10. '                               ' → logprob: -14.875903129577637

Token 1184: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -5.836499985889532e-05
    2. ' nr' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.250059127807617
    4. '_nr' → logprob: -18.125059127807617
    5. 'n' → logprob: -18.250059127807617
    6. '
' → logprob: -19.875059127807617
    7. '.nr' → logprob: -19.875059127807617
    8. ')' → logprob: -20.375059127807617
    9. '
' → logprob: -20.625059127807617
    10. 'Nr' → logprob: -20.875059127807617

Token 1185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003554847207851708
    2. ',n' → logprob: -8.50035572052002
    3. ',c' → logprob: -9.62535572052002
    4. ' ,' → logprob: -10.50035572052002
    5. '<|end|>' → logprob: -11.00035572052002
    6. ',
' → logprob: -11.50035572052002
    7. '[' → logprob: -12.00035572052002
    8. ')' → logprob: -12.62535572052002
    9. '                       ' → logprob: -12.87535572052002
    10. '       ' → logprob: -13.12535572052002

Token 1186: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -7.107425062713446e-06
    2. ' nc' → logprob: -12.000006675720215
    3. '_nc' → logprob: -14.500006675720215
    4. '   ' → logprob: -15.625006675720215
    5. 'n' → logprob: -15.875006675720215
    6. '.nc' → logprob: -16.75000762939453
    7. '
' → logprob: -17.37500762939453
    8. 'nr' → logprob: -17.87500762939453
    9. 'new' → logprob: -18.62500762939453
    10. '    ' → logprob: -18.87500762939453

Token 1187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002259806264191866
    2. ',n' → logprob: -6.127259731292725
    3. 'nr' → logprob: -10.002260208129883
    4. ' ,' → logprob: -11.377260208129883
    5. '(n' → logprob: -11.377260208129883
    6. '[n' → logprob: -13.252260208129883
    7. 'n' → logprob: -13.502260208129883
    8. ',
' → logprob: -13.752260208129883
    9. 'nc' → logprob: -13.752260208129883
    10. '```' → logprob: -15.002260208129883

Token 1188: ' nd' (ID: 5914)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nr' → logprob: -1.7120533811976202e-05
    2. ' nr' → logprob: -11.000017166137695
    3. 'n' → logprob: -15.875017166137695
    4. '   ' → logprob: -16.375017166137695
    5. 'nc' → logprob: -16.625017166137695
    6. '
' → logprob: -16.875017166137695
    7. '```' → logprob: -17.500017166137695
    8. 'nt' → logprob: -17.875017166137695
    9. '  ' → logprob: -18.500017166137695
    10. '
' → logprob: -18.625017166137695

Token 1189: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06268059462308884
    2. ')' → logprob: -2.81268048286438
    3. '               ' → logprob: -8.4376802444458
    4. '))
' → logprob: -8.5626802444458
    5. '           ' → logprob: -9.1876802444458
    6. '                   ' → logprob: -9.3126802444458
    7. '                       ' → logprob: -9.3126802444458
    8. ')
' → logprob: -11.5626802444458
    9. ')))' → logprob: -12.0626802444458
    10. '       ' → logprob: -12.8126802444458

Token 1190: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1191: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1192: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1193: ':' (ID: 25)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.13810479640960693
    2. 'continue' → logprob: -2.5131049156188965
    3. '                   ' → logprob: -3.6381049156188965
    4. '               ' → logprob: -4.1381049156188965
    5. '   ' → logprob: -6.0131049156188965
    6. ':' → logprob: -6.3881049156188965
    7. '           ' → logprob: -7.5131049156188965
    8. '	continue' → logprob: -8.263104438781738
    9. ' pass' → logprob: -8.763104438781738
    10. '                       ' → logprob: -8.763104438781738

Token 1194: ' out' (ID: 842)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.608016312122345
    2. 'continue' → logprob: -0.858016312122345
    3. ' continue' → logprob: -4.733016490936279
    4. ' pass' → logprob: -4.858016490936279
    5. '               ' → logprob: -4.983016490936279
    6. '                   ' → logprob: -5.233016490936279
    7. '#' → logprob: -6.233016490936279
    8. '   ' → logprob: -7.358016490936279
    9. '	continue' → logprob: -10.108016014099121
    10. '           ' → logprob: -10.233016014099121

Token 1195: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.44895055890083313
    2. 'of' → logprob: -1.4489505290985107
    3. ' of' → logprob: -2.0739505290985107
    4. 'Of' → logprob: -7.19895076751709
    5. '-of' → logprob: -8.32395076751709
    6. '#' → logprob: -9.44895076751709
    7. '	of' → logprob: -9.69895076751709
    8. '               ' → logprob: -10.44895076751709
    9. '_' → logprob: -11.94895076751709
    10. '=' → logprob: -12.44895076751709

Token 1196: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.00015920029545668513
    2. 'bounds' → logprob: -8.75015926361084
    3. 'bound' → logprob: -14.25015926361084
    4. 'boards' → logprob: -16.625158309936523
    5. 'range' → logprob: -16.875158309936523
    6. ' board' → logprob: -17.625158309936523
    7. '_board' → logprob: -18.125158309936523
    8. 'bord' → logprob: -18.500158309936523
    9. '-board' → logprob: -18.500158309936523
    10. 'b' → logprob: -18.750158309936523

Token 1197: ' =>' (ID: 871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1198: ' lose' (ID: 12577)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.8980834484100342
    2. ' continue' → logprob: -1.1480834484100342
    3. 'continue' → logprob: -1.6480834484100342
    4. 'pass' → logprob: -2.523083448410034
    5. 'discard' → logprob: -7.398083686828613
    6. ' discard' → logprob: -7.523083686828613
    7. ' #' → logprob: -7.523083686828613
    8. ' None' → logprob: -8.148083686828613
    9. '               ' → logprob: -8.648083686828613
    10. '#' → logprob: -8.648083686828613

Token 1199: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1200: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1201: ' Run' (ID: 14581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011646468192338943
    2. '<|end|>' → logprob: -5.386646270751953
    3. 'solve' → logprob: -5.636646270751953
    4. '
' → logprob: -5.886646270751953
    5. '```' → logprob: -8.261646270751953
    6. '#' → logprob: -8.511646270751953
    7. ' if' → logprob: -9.511646270751953
    8. ' solve' → logprob: -10.636646270751953
    9. '__' → logprob: -10.636646270751953
    10. '\' → logprob: -11.386646270751953

Token 1202: ' the' (ID: 290)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.25193649530410767
    2. 'if' → logprob: -1.501936435699463
    3. '```' → logprob: -12.001936912536621
    4. ' if' → logprob: -14.126936912536621
    5. '__' → logprob: -15.001936912536621
    6. ' solve' → logprob: -15.501936912536621
    7. '.solve' → logprob: -18.001935958862305
    8. 'resolve' → logprob: -18.001935958862305
    9. '
' → logprob: -18.126935958862305
    10. 'try' → logprob: -18.376935958862305

Token 1203: ' solver' (ID: 63271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005626562051475048
    2. 'solve' → logprob: -5.255626678466797
    3. '__' → logprob: -7.880626678466797
    4. '```' → logprob: -11.255626678466797
    5. ' if' → logprob: -14.130626678466797
    6. 'main' → logprob: -14.630626678466797
    7. '#' → logprob: -15.755626678466797
    8. '`' → logprob: -16.005626678466797
    9. 'solution' → logprob: -16.005626678466797
    10. '{
' → logprob: -16.380626678466797

Token 1204: ' function' (ID: 1114)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.030558176338672638
    2. 'if' → logprob: -3.5305581092834473
    3. '```' → logprob: -7.405558109283447
    4. '
' → logprob: -8.655558586120605
    5. ' solve' → logprob: -12.155558586120605
    6. '.solve' → logprob: -12.280558586120605
    7. '\
' → logprob: -12.280558586120605
    8. '``' → logprob: -12.530558586120605
    9. '{
' → logprob: -13.655558586120605
    10. '(s' → logprob: -13.780558586120605

Token 1205: '
' (ID: 198)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.20149382948875427
    2. 'if' → logprob: -1.7014938592910767
    3. '
' → logprob: -10.076494216918945
    4. '```' → logprob: -10.326494216918945
    5. ' solve' → logprob: -12.701494216918945
    6. '.solve' → logprob: -13.701494216918945
    7. ' if' → logprob: -14.576494216918945
    8. '\
' → logprob: -14.826494216918945
    9. '``' → logprob: -15.576494216918945
    10. '\' → logprob: -15.701494216918945

Token 1206: 'if' (ID: 366)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -9.627176768844947e-05
    2. 'if' → logprob: -9.250096321105957
    3. ' solve' → logprob: -16.50009536743164
    4. '```' → logprob: -17.00009536743164
    5. '.solve' → logprob: -19.87509536743164
    6. 'resolve' → logprob: -20.25009536743164
    7. ' if' → logprob: -22.62509536743164
    8. '
' → logprob: -22.75009536743164
    9. '`' → logprob: -23.00009536743164
    10. '\' → logprob: -23.25009536743164

Token 1207: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03804849088191986
    2. ' __' → logprob: -3.288048505783081
    3. 'name' → logprob: -12.66304874420166
    4. '_name' → logprob: -13.28804874420166
    5. '___' → logprob: -13.66304874420166
    6. '_' → logprob: -14.41304874420166
    7. '____' → logprob: -15.91304874420166
    8. ' ' → logprob: -16.288047790527344
    9. 'Name' → logprob: -16.913047790527344
    10. ''' → logprob: -17.038047790527344

Token 1208: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008519897237420082
    2. ' ==' → logprob: -5.383520126342773
    3. '==' → logprob: -6.008520126342773
    4. '_' → logprob: -7.133520126342773
    5. ' __' → logprob: -8.258520126342773
    6. 'name' → logprob: -8.508520126342773
    7. '=' → logprob: -10.633520126342773
    8. '___' → logprob: -10.883520126342773
    9. '[' → logprob: -11.008520126342773
    10. '_name' → logprob: -11.133520126342773

Token 1209: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.3954463510308415e-05
    2. '==' → logprob: -10.125054359436035
    3. '__.__' → logprob: -11.625054359436035
    4. '__
' → logprob: -13.250054359436035
    5. '```' → logprob: -14.250054359436035
    6. '___' → logprob: -14.250054359436035
    7. '_' → logprob: -14.750054359436035
    8. '=="' → logprob: -15.125054359436035
    9. '__[' → logprob: -15.125054359436035
    10. '____' → logprob: -15.375054359436035

Token 1210: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0022665897849947214
    2. '==' → logprob: -6.1272664070129395
    3. '=="' → logprob: -10.377266883850098
    4. ' ==' → logprob: -11.127266883850098
    5. '__.__' → logprob: -11.127266883850098
    6. '=='' → logprob: -11.377266883850098
    7. '=' → logprob: -13.377266883850098
    8. '___' → logprob: -13.627266883850098
    9. '```' → logprob: -13.877266883850098
    10. '_' → logprob: -13.877266883850098

Token 1211: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01819724030792713
    2. ''' → logprob: -4.018197059631348
    3. '__' → logprob: -10.018197059631348
    4. ' "__' → logprob: -13.143197059631348
    5. '"user' → logprob: -15.268197059631348
    6. '"name' → logprob: -16.643198013305664
    7. ''"' → logprob: -16.893198013305664
    8. ' '__' → logprob: -17.143198013305664
    9. '"log' → logprob: -17.393198013305664
    10. ''m' → logprob: -17.518198013305664

Token 1212: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008636554703116417
    2. '__' → logprob: -4.758636474609375
    3. '"' → logprob: -11.008636474609375
    4. 'name' → logprob: -12.758636474609375
    5. ''' → logprob: -13.383636474609375
    6. '_main' → logprob: -14.258636474609375
    7. ' main' → logprob: -15.508636474609375
    8. ' "__' → logprob: -16.633636474609375
    9. '__
' → logprob: -17.133636474609375
    10. '___' → logprob: -17.258636474609375

Token 1213: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.007534579373896122
    2. '__' → logprob: -5.007534503936768
    3. '__':
' → logprob: -7.132534503936768
    4. '__["' → logprob: -11.757534980773926
    5. '__:' → logprob: -13.132534980773926
    6. '__()
' → logprob: -13.257534980773926
    7. '">
' → logprob: -13.382534980773926
    8. '__
' → logprob: -13.882534980773926
    9. '__.' → logprob: -14.257534980773926
    10. '__);
' → logprob: -14.382534980773926

Token 1214: '   ' (ID: 271)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.33051037788391113
    2. '   ' → logprob: -1.3305103778839111
    3. ' solve' → logprob: -4.080510139465332
    4. '.solve' → logprob: -9.080510139465332
    5. '```' → logprob: -9.705510139465332
    6. '	s' → logprob: -10.830510139465332
    7. '    
' → logprob: -12.580510139465332
    8. '(s' → logprob: -13.705510139465332
    9. 's' → logprob: -14.830510139465332
    10. '_s' → logprob: -15.205510139465332

Token 1215: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -4.320199877838604e-07
    2. ' solve' → logprob: -15.0
    3. '   ' → logprob: -17.0
    4. '.solve' → logprob: -17.625
    5. '```' → logprob: -20.625
    6. 'resolve' → logprob: -21.375
    7. 'simulate' → logprob: -23.5
    8. 'solver' → logprob: -23.875
    9. 'try' → logprob: -24.375
    10. 'save' → logprob: -24.625

Token 1216: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01013450138270855
    2. '<|end|>' → logprob: -5.135134696960449
    3. '(' → logprob: -6.385134696960449
    4. '
' → logprob: -6.885134696960449
    5. '()
' → logprob: -7.010134696960449
    6. '```' → logprob: -8.01013469696045
    7. '();' → logprob: -9.88513469696045
    8. '(
' → logprob: -10.51013469696045
    9. ')' → logprob: -10.88513469696045
    10. '#' → logprob: -10.88513469696045


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1214
Tokens correctement prédits (1ère position, stricte): 397
Tokens correctement prédits (1ère position, avec adaptation): 439
Tokens correctement prédits (top 10): 864
Précision stricte (1ère position): 32.70%
Précision adaptée (1ère position): 36.16%
Précision (top 10): 71.17%
================================================================================
