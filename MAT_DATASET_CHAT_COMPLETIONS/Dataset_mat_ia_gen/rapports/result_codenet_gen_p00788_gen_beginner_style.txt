================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import sys

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

for line in sys.stdin:
    p, n = map(int, line.split())
    if p == 0 and n == 0:
        break
    sqrt_p = math.sqrt(p)
    rationals = []
    for y in range(1, n+1):
        for x in range(1, n+1):
            g = gcd(x, y)
            if g == 1:
                val = x / y
                rationals.append((val, x, y))
    rationals = list(set(rationals))
    rationals.sort(key=lambda t: t[0])
    # find two rationals u/v < sqrt_p < x/y with no rational in between
    left = None
    right = None
    for i in range(len(rationals)):
        if rationals[i][0] > sqrt_p:
            right = rationals[i]
            left = rationals[i-1]
            break
    print(f"{right[1]}/{right[2]} {left[1]}/{left[2]}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007084279786795378
    2. '\n' → logprob: -6.257084369659424
    3. 'import' → logprob: -6.632084369659424
    4. '\' → logprob: -7.007084369659424
    5. '```' → logprob: -7.007084369659424
    6. '<|end|>' → logprob: -7.257084369659424
    7. '.pi' → logprob: -8.007083892822266
    8. '.e' → logprob: -9.257083892822266
    9. 'newline' → logprob: -9.257083892822266
    10. 'def' → logprob: -9.632083892822266

Token 4: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.4802461266517639
    2. ' sys' → logprob: -0.9802461266517639
    3. ' numpy' → logprob: -5.605246067047119
    4. ' random' → logprob: -7.230246067047119
    5. ' ' → logprob: -7.355246067047119
    6. 'os' → logprob: -7.980246067047119
    7. ' re' → logprob: -8.355246543884277
    8. 'sys' → logprob: -8.605246543884277
    9. ' statistics' → logprob: -9.105246543884277
    10. '_' → logprob: -9.605246543884277

Token 5: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7739914059638977
    2. '<|end|>' → logprob: -1.773991346359253
    3. '.' → logprob: -2.148991346359253
    4. '

' → logprob: -2.398991346359253
    5. '\n' → logprob: -2.398991346359253
    6. 'import' → logprob: -3.648991346359253
    7. '```' → logprob: -4.148991584777832
    8. '\' → logprob: -4.648991584777832
    9. '<|end|>' → logprob: -4.898991584777832
    10. 'newline' → logprob: -5.398991584777832

Token 6: 'def' (ID: 1314)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0810941457748413
    2. 'def' → logprob: -1.2060941457748413
    3. '.' → logprob: -1.7060941457748413
    4. '#' → logprob: -2.831094264984131
    5. '\n' → logprob: -3.581094264984131
    6. '```' → logprob: -3.831094264984131
    7. '
' → logprob: -3.956094264984131
    8. 'import' → logprob: -4.331094264984131
    9. '

' → logprob: -4.706094264984131
    10. '`' → logprob: -5.081094264984131

Token 7: ' gcd' (ID: 106918)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03147975355386734
    2. ' calculate' → logprob: -3.906479835510254
    3. ' factorial' → logprob: -5.781479835510254
    4. ' math' → logprob: -6.156479835510254
    5. ' space' → logprob: -6.406479835510254
    6. '_' → logprob: -6.531479835510254
    7. ' f' → logprob: -7.531479835510254
    8. ' ' → logprob: -7.906479835510254
    9. ' sqrt' → logprob: -8.281479835510254
    10. ' compute' → logprob: -8.531479835510254

Token 8: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013963071396574378
    2. '_' → logprob: -7.251396179199219
    3. '(a' → logprob: -8.626396179199219
    4. ' (' → logprob: -9.001396179199219
    5. '<|end|>' → logprob: -9.001396179199219
    6. '<|end|>' → logprob: -9.376396179199219
    7. '(x' → logprob: -10.001396179199219
    8. '(
' → logprob: -10.876396179199219
    9. '```' → logprob: -11.251396179199219
    10. ')' → logprob: -11.501396179199219

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006043838220648468
    2. ',b' → logprob: -8.250604629516602
    3. ' ,' → logprob: -8.375604629516602
    4. ',)' → logprob: -9.625604629516602
    5. ',a' → logprob: -10.500604629516602
    6. ')' → logprob: -11.375604629516602
    7. ',g' → logprob: -13.875604629516602
    8. ',int' → logprob: -14.125604629516602
    9. ',
' → logprob: -14.375604629516602
    10. '_,' → logprob: -14.500604629516602

Token 10: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10021314769983292
    2. 'b' → logprob: -2.350213050842285
    3. ' ' → logprob: -12.350213050842285
    4. ',b' → logprob: -14.225213050842285
    5. ' ,' → logprob: -14.350213050842285
    6. ',' → logprob: -15.100213050842285
    7. ' ' → logprob: -15.350213050842285
    8. '>b' → logprob: -16.4752140045166
    9. ')b' → logprob: -16.4752140045166
    10. '<|end|>' → logprob: -16.8502140045166

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022031900007277727
    2. ')' → logprob: -6.127202987670898
    3. '):
' → logprob: -11.502202987670898
    4. ' ):' → logprob: -13.002202987670898
    5. ':' → logprob: -13.252202987670898
    6. ',' → logprob: -14.252202987670898
    7. '   ' → logprob: -14.252202987670898
    8. ')：' → logprob: -15.002202987670898
    9. '),' → logprob: -15.127202987670898
    10. '):
' → logprob: -15.377202987670898

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16659744083881378
    2. ':' → logprob: -1.9165974855422974
    3. '):' → logprob: -6.041597366333008
    4. ' :' → logprob: -6.166597366333008
    5. ':return' → logprob: -8.041597366333008
    6. ' return' → logprob: -8.041597366333008
    7. ' if' → logprob: -8.416597366333008
    8. '	return' → logprob: -8.541597366333008
    9. ' ' → logprob: -8.666597366333008
    10. ':
' → logprob: -8.666597366333008

Token 13: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39261096715927124
    2. ' if' → logprob: -1.892611026763916
    3. '    ' → logprob: -2.642611026763916
    4. ' return' → logprob: -3.017611026763916
    5. ' while' → logprob: -3.392611026763916
    6. ' ' → logprob: -4.767611026763916
    7. ' 
' → logprob: -5.892611026763916
    8. '    
' → logprob: -6.392611026763916
    9. 'return' → logprob: -6.517611026763916
    10. 'if' → logprob: -6.642611026763916

Token 14: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03446812182664871
    2. 'a' → logprob: -3.409468173980713
    3. ' b' → logprob: -7.284468173980713
    4. ' ' → logprob: -9.534467697143555
    5. 'b' → logprob: -9.784467697143555
    6. '(a' → logprob: -12.534467697143555
    7. ' not' → logprob: -13.909467697143555
    8. '	a' → logprob: -13.909467697143555
    9. ' (' → logprob: -14.159467697143555
    10. '   ' → logprob: -14.784467697143555

Token 15: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.18790008127689362
    2. ':' → logprob: -1.8129000663757324
    3. ' >' → logprob: -5.437900066375732
    4. '!=' → logprob: -6.687900066375732
    5. '>' → logprob: -6.937900066375732
    6. ' :' → logprob: -7.312900066375732
    7. ' ' → logprob: -7.812900066375732
    8. ' and' → logprob: -8.06290054321289
    9. ':
' → logprob: -10.68790054321289
    10. '  ' → logprob: -10.93790054321289

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12100554257631302
    2. '    ' → logprob: -2.8710055351257324
    3. 'a' → logprob: -3.4960055351257324
    4. '=' → logprob: -5.246005535125732
    5. 'return' → logprob: -5.371005535125732
    6. ' =' → logprob: -5.371005535125732
    7. '   ' → logprob: -5.621005535125732
    8. ' a' → logprob: -6.121005535125732
    9. ' return' → logprob: -6.121005535125732
    10. '     ' → logprob: -6.496005535125732

Token 17: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6333473324775696
    2. 'a' (adapté à ' a') → logprob: -0.7583473324775696
    3. '    ' → logprob: -8.008347511291504
    4. '       ' → logprob: -8.508347511291504
    5. ' ' → logprob: -9.883347511291504
    6. '```' → logprob: -9.883347511291504
    7. '   ' → logprob: -10.508347511291504
    8. '	a' → logprob: -10.883347511291504
    9. '        ' → logprob: -11.383347511291504
    10. 'r' → logprob: -12.133347511291504

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005879256408661604
    2. '%' → logprob: -5.5058794021606445
    3. ' %=' → logprob: -7.3808794021606445
    4. ' ,' → logprob: -7.7558794021606445
    5. '%,' → logprob: -8.005879402160645
    6. ' %' → logprob: -8.380879402160645
    7. '%=' → logprob: -8.880879402160645
    8. '%b' → logprob: -11.130879402160645
    9. ' %,' → logprob: -11.505879402160645
    10. '=' → logprob: -11.630879402160645

Token 19: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38692259788513184
    2. 'b' → logprob: -1.1369225978851318
    3. '<|end|>' → logprob: -10.261922836303711
    4. ' ' → logprob: -11.136922836303711
    5. '<|end|>' → logprob: -14.261922836303711
    6. ' ' → logprob: -14.761922836303711
    7. 's' → logprob: -15.136922836303711
    8. '>b' → logprob: -15.886922836303711
    9. 'space' → logprob: -16.13692283630371
    10. '%b' → logprob: -16.26192283630371

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740775227546692
    2. '=' → logprob: -0.9740775227546692
    3. ',' → logprob: -15.474077224731445
    4. '   ' → logprob: -15.849077224731445
    5. ' ' → logprob: -16.349077224731445
    6. '<|end|>' → logprob: -16.849077224731445
    7. '＝' → logprob: -17.974077224731445
    8. '    ' → logprob: -17.974077224731445
    9. '=}' → logprob: -18.099077224731445
    10. '```' → logprob: -18.099077224731445

Token 21: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.016039295122027397
    2. 'b' → logprob: -4.1410393714904785
    3. ' ' → logprob: -13.01603889465332
    4. ' ' → logprob: -14.39103889465332
    5. '<|end|>' → logprob: -14.51603889465332
    6. '```' → logprob: -14.89103889465332
    7. '<|end|>' → logprob: -15.51603889465332
    8. ' (' → logprob: -15.70353889465332
    9. ',' → logprob: -15.95353889465332
    10. '0' → logprob: -16.39103889465332

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000563042180147022
    2. ' ,' → logprob: -7.500563144683838
    3. '<|end|>' → logprob: -12.50056266784668
    4. ',
' → logprob: -13.25056266784668
    5. ',a' → logprob: -13.50056266784668
    6. 'a' → logprob: -13.50056266784668
    7. ' ' → logprob: -13.87556266784668
    8. '<|end|>' → logprob: -15.62556266784668
    9. '```' → logprob: -15.87556266784668
    10. ' a' → logprob: -16.37556266784668

Token 23: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1426837295293808
    2. 'a' → logprob: -2.017683744430542
    3. ' ' → logprob: -11.767683982849121
    4. '	a' → logprob: -14.392683982849121
    5. ' ' → logprob: -16.142683029174805
    6. '>a' → logprob: -16.767683029174805
    7. 'math' → logprob: -17.267683029174805
    8. '  ' → logprob: -17.517683029174805
    9. '<|end|>' → logprob: -17.955183029174805
    10. ' math' → logprob: -18.080183029174805

Token 24: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20217521488666534
    2. '%' → logprob: -1.702175259590149
    3. ' ' → logprob: -7.202175140380859
    4. ' %
' → logprob: -12.07717514038086
    5. ' %=' → logprob: -12.82717514038086
    6. ' ' → logprob: -13.45217514038086
    7. 'a' → logprob: -13.82717514038086
    8. '<|end|>' → logprob: -13.82717514038086
    9. '%b' → logprob: -14.95217514038086
    10. '  ' → logprob: -14.95217514038086

Token 25: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233763717114925
    2. ' b' → logprob: -5.2552337646484375
    3. ' ' → logprob: -18.255233764648438
    4. '	b' → logprob: -19.630233764648438
    5. '%b' → logprob: -21.130233764648438
    6. '  ' → logprob: -21.130233764648438
    7. ')b' → logprob: -21.130233764648438
    8. '_b' → logprob: -21.255233764648438
    9. '```' → logprob: -21.380233764648438
    10. '<|end|>' → logprob: -21.505233764648438

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2089896947145462
    2. ' return' → logprob: -1.8339897394180298
    3. 'return' (adapté à ' return') → logprob: -3.5839896202087402
    4. ' ' → logprob: -7.70898962020874
    5. ':return' → logprob: -8.833990097045898
    6. '    ' → logprob: -9.208990097045898
    7. '```' → logprob: -9.708990097045898
    8. '    
' → logprob: -9.708990097045898
    9. ' 
' → logprob: -10.083990097045898
    10. ' a' → logprob: -10.083990097045898

Token 29: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31326404213905334
    2. ' a' → logprob: -1.313264012336731
    3. ' ' → logprob: -14.063263893127441
    4. '	a' → logprob: -14.563263893127441
    5. 'space' → logprob: -14.813263893127441
    6. '_a' → logprob: -15.813263893127441
    7. 's' → logprob: -16.188264846801758
    8. '   ' → logprob: -16.313264846801758
    9. ''a' → logprob: -17.063264846801758
    10. '`' → logprob: -17.063264846801758

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2172008901834488
    2. '

' → logprob: -1.9672008752822876
    3. 'def' → logprob: -3.717200994491577
    4. '<|end|>' → logprob: -4.592200756072998
    5. '```' → logprob: -4.717200756072998
    6. '\n' → logprob: -4.842200756072998
    7. '
' → logprob: -6.967200756072998
    8. 'n' → logprob: -7.092200756072998
    9. 'newline' → logprob: -7.842200756072998
    10. '  
' → logprob: -8.342201232910156

Token 31: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0049747284501791
    2. '
' → logprob: -5.879974842071533
    3. '

' → logprob: -6.754974842071533
    4. '```' → logprob: -7.504974842071533
    5. '\n' → logprob: -9.129974365234375
    6. '\' → logprob: -9.629974365234375
    7. 'class' → logprob: -9.879974365234375
    8. '  
' → logprob: -10.129974365234375
    9. 'n' → logprob: -10.129974365234375
    10. 'd' → logprob: -10.254974365234375

Token 32: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.035972390323877335
    2. ' i' → logprob: -3.4109723567962646
    3. ' number' → logprob: -7.285972595214844
    4. ' num' → logprob: -7.410972595214844
    5. ' item' → logprob: -7.535972595214844
    6. ' x' → logprob: -8.410972595214844
    7. ' n' → logprob: -9.535972595214844
    8. '  ' → logprob: -9.910972595214844
    9. ' space' → logprob: -10.660972595214844
    10. ' value' → logprob: -11.035972595214844

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033895451575517654
    2. 'in' → logprob: -3.408895492553711
    3. ' ' → logprob: -8.533895492553711
    4. '  ' → logprob: -11.783895492553711
    5. 's' → logprob: -12.033895492553711
    6. '[' → logprob: -12.158895492553711
    7. '```' → logprob: -12.283895492553711
    8. ' =' → logprob: -12.408895492553711
    9. '_' → logprob: -12.533895492553711
    10. '(' → logprob: -13.283895492553711

Token 34: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38688236474990845
    2. ' sys' → logprob: -1.1368823051452637
    3. '=sys' → logprob: -12.136882781982422
    4. '	sys' → logprob: -12.386882781982422
    5. '(sys' → logprob: -13.636882781982422
    6. 'stdin' → logprob: -14.636882781982422
    7. 's' → logprob: -16.261882781982422
    8. ' ' → logprob: -17.011882781982422
    9. 'input' → logprob: -17.261882781982422
    10. '```' → logprob: -17.636882781982422

Token 35: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002019907406065613
    2. '.argv' → logprob: -9.000202178955078
    3. ' .' → logprob: -10.125202178955078
    4. '.' → logprob: -11.375202178955078
    5. '.stdout' → logprob: -11.750202178955078
    6. '.readline' → logprob: -11.875202178955078
    7. ' stdin' → logprob: -12.125202178955078
    8. 'stdin' → logprob: -12.875202178955078
    9. '.std' → logprob: -13.000202178955078
    10. '.input' → logprob: -13.625202178955078

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031282827258110046
    2. '.readline' → logprob: -5.8781280517578125
    3. '.strip' → logprob: -8.878128051757812
    4. '.readlines' → logprob: -9.753128051757812
    5. ' :' → logprob: -9.878128051757812
    6. ':
' → logprob: -10.378128051757812
    7. '.' → logprob: -11.753128051757812
    8. '.rstrip' → logprob: -11.878128051757812
    9. ':**' → logprob: -12.378128051757812
    10. '.split' → logprob: -12.503128051757812

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0162783432751894
    2. '    
' → logprob: -4.641278266906738
    3. ' line' → logprob: -5.891278266906738
    4. '    ' → logprob: -6.891278266906738
    5. ' readline' → logprob: -7.766278266906738
    6. ' if' → logprob: -8.016278266906738
    7. ' data' → logprob: -8.141278266906738
    8. ' tokens' → logprob: -8.641278266906738
    9. '     
' → logprob: -8.766278266906738
    10. ' 
' → logprob: -9.016278266906738

Token 38: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47854381799697876
    2. ' line' → logprob: -1.978543758392334
    3. ' n' → logprob: -2.103543758392334
    4. ' numbers' → logprob: -3.228543758392334
    5. 'n' → logprob: -3.478543758392334
    6. ' data' → logprob: -3.978543758392334
    7. ' parts' → logprob: -4.853543758392334
    8. 'data' → logprob: -5.353543758392334
    9. ' nums' → logprob: -5.603543758392334
    10. ' values' → logprob: -5.603543758392334

Token 39: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1862984299659729
    2. 'r' → logprob: -2.436298370361328
    3. '=' → logprob: -3.436298370361328
    4. ',' → logprob: -3.811298370361328
    5. 'ar' → logprob: -4.936298370361328
    6. 'iece' → logprob: -5.561298370361328
    7. ' ' → logprob: -5.811298370361328
    8. 'ieces' → logprob: -5.811298370361328
    9. 'arts' → logprob: -6.061298370361328
    10. 'art' → logprob: -6.311298370361328

Token 40: ' n' (ID: 297)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0807318463921547
    2. ' q' → logprob: -2.5807318687438965
    3. 'n' → logprob: -7.5807318687438965
    4. 'k' → logprob: -8.205731391906738
    5. 'd' → logprob: -8.455731391906738
    6. ' ' → logprob: -8.705731391906738
    7. ' n' → logprob: -9.330731391906738
    8. 'w' → logprob: -9.580731391906738
    9. 'c' → logprob: -9.580731391906738
    10. 'm' → logprob: -9.830731391906738

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14271897077560425
    2. '=' → logprob: -2.017719030380249
    3. ',' → logprob: -10.517719268798828
    4. ' ' → logprob: -11.642719268798828
    5. ')' → logprob: -12.392719268798828
    6. '  ' → logprob: -14.267719268798828
    7. '=int' → logprob: -14.267719268798828
    8. 'p' → logprob: -14.267719268798828
    9. '   ' → logprob: -14.517719268798828
    10. '```' → logprob: -15.517719268798828

Token 42: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1505763679742813
    2. 'map' → logprob: -2.15057635307312
    3. ' line' → logprob: -3.90057635307312
    4. 'line' → logprob: -5.775576591491699
    5. ' ' → logprob: -11.1505765914917
    6. '[line' → logprob: -11.7755765914917
    7. '[' → logprob: -12.2755765914917
    8. ' [' → logprob: -12.7755765914917
    9. '(map' → logprob: -13.0255765914917
    10. ' ' → logprob: -13.4005765914917

Token 43: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015287866117432714
    2. '(' → logprob: -6.501528739929199
    3. '(lambda' → logprob: -11.2515287399292
    4. '(str' → logprob: -11.7515287399292
    5. 'int' → logprob: -13.3765287399292
    6. '<int' → logprob: -13.6265287399292
    7. '[int' → logprob: -13.6265287399292
    8. '=int' → logprob: -15.2515287399292
    9. '(in' → logprob: -15.3765287399292
    10. ' (' → logprob: -15.3765287399292

Token 44: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.012517188675701618
    2. ')' → logprob: -5.012516975402832
    3. ',' → logprob: -5.887516975402832
    4. ',line' → logprob: -6.262516975402832
    5. '(' → logprob: -7.012516975402832
    6. ' line' → logprob: -9.137516975402832
    7. 'line' → logprob: -10.512516975402832
    8. '[line' → logprob: -11.012516975402832
    9. '=line' → logprob: -11.512516975402832
    10. '#line' → logprob: -11.637516975402832

Token 45: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.11296498775482178
    2. ' line' → logprob: -2.2379651069641113
    3. '(line' → logprob: -9.612964630126953
    4. ')' → logprob: -9.862964630126953
    5. '	line' → logprob: -11.862964630126953
    6. '=line' → logprob: -11.987964630126953
    7. '[line' → logprob: -12.112964630126953
    8. ' ' → logprob: -13.612964630126953
    9. ',line' → logprob: -13.612964630126953
    10. '   ' → logprob: -13.737964630126953

Token 46: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.2584710121154785
    2. '.split' → logprob: -1.5084710121154785
    3. '.' → logprob: -5.2584710121154785
    4. '().' → logprob: -6.7584710121154785
    5. '.rstrip' → logprob: -9.00847053527832
    6. ' .' → logprob: -11.13347053527832
    7. ').' → logprob: -11.88347053527832
    8. '.readline' → logprob: -12.13347053527832
    9. 'split' → logprob: -13.00847053527832
    10. 'strip' → logprob: -13.13347053527832

Token 47: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.050871774554252625
    2. '('' → logprob: -3.3008718490600586
    3. ')' → logprob: -5.050871849060059
    4. '()' → logprob: -5.300871849060059
    5. '(' → logprob: -6.925871849060059
    6. '()))' → logprob: -8.675871849060059
    7. '(','' → logprob: -9.175871849060059
    8. '))' → logprob: -10.675871849060059
    9. ' ())' → logprob: -10.675871849060059
    10. '())
' → logprob: -10.925871849060059

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3934091031551361
    2. '<|end|>' → logprob: -2.393409013748169
    3. '
' → logprob: -2.893409013748169
    4. ',' → logprob: -2.893409013748169
    5. '    
' → logprob: -3.393409013748169
    6. ' if' → logprob: -3.768409013748169
    7. ':' → logprob: -4.518409252166748
    8. ' 
' → logprob: -4.518409252166748
    9. '   
' → logprob: -4.643409252166748
    10. ' ' → logprob: -5.018409252166748

Token 49: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1791696548461914
    2. 'g' → logprob: -1.6791696548461914
    3. ' if' → logprob: -1.6791696548461914
    4. 'if' (adapté à ' if') → logprob: -2.6791696548461914
    5. 'l' → logprob: -3.1791696548461914
    6. 'result' → logprob: -3.3041696548461914
    7. 'm' → logprob: -3.8041696548461914
    8. ' result' → logprob: -3.9291696548461914
    9. ' g' → logprob: -3.9291696548461914
    10. ' l' → logprob: -4.304169654846191

Token 50: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4179065227508545
    2. ' n' → logprob: -1.1679065227508545
    3. 'p' → logprob: -3.9179065227508545
    4. 'n' → logprob: -4.667906761169434
    5. ' math' → logprob: -7.167906761169434
    6. ' ' → logprob: -8.667906761169434
    7. ' gcd' → logprob: -9.167906761169434
    8. ' not' → logprob: -9.917906761169434
    9. ' g' → logprob: -10.292906761169434
    10. ' (' → logprob: -10.417906761169434

Token 51: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.40612778067588806
    2. '==' → logprob: -2.156127691268921
    3. ' >' → logprob: -2.406127691268921
    4. '%' → logprob: -3.281127691268921
    5. ' %' → logprob: -3.281127691268921
    6. '>' → logprob: -3.406127691268921
    7. ' <=' → logprob: -5.0311279296875
    8. ' <' → logprob: -5.5311279296875
    9. ' >=' → logprob: -6.0311279296875
    10. ' ' → logprob: -6.6561279296875

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03860503062605858
    2. ' ' → logprob: -3.288604974746704
    3. 'n' → logprob: -8.288604736328125
    4. '-' → logprob: -8.913604736328125
    5. '1' → logprob: -9.163604736328125
    6. ' n' → logprob: -10.288604736328125
    7. ' -' → logprob: -11.288604736328125
    8. '   ' → logprob: -12.038604736328125
    9. '  ' → logprob: -12.163604736328125
    10. '100' → logprob: -13.663604736328125

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00517434673383832
    2. 'n' → logprob: -6.130174160003662
    3. '-' → logprob: -6.255174160003662
    4. ' ' → logprob: -7.130174160003662
    5. '1' → logprob: -8.50517463684082
    6. ' -' → logprob: -11.69267463684082
    7. '-n' → logprob: -11.69267463684082
    8. '2' → logprob: -12.00517463684082
    9. ' n' → logprob: -12.06767463684082
    10. 'p' → logprob: -12.31767463684082

Token 54: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024083036929368973
    2. ' and' → logprob: -3.774083137512207
    3. 'and' → logprob: -8.274083137512207
    4. ' :' → logprob: -8.399083137512207
    5. '   ' → logprob: -8.649083137512207
    6. ':
' → logprob: -8.899083137512207
    7. ' or' → logprob: -10.774083137512207
    8. ' ' → logprob: -11.149083137512207
    9. '  ' → logprob: -12.899083137512207
    10. ':return' → logprob: -13.149083137512207

Token 55: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1269560307264328
    2. 'n' → logprob: -2.126955986022949
    3. '   ' → logprob: -11.12695598602295
    4. '	n' → logprob: -12.25195598602295
    5. ' ' → logprob: -12.50195598602295
    6. '  ' → logprob: -12.75195598602295
    7. '    ' → logprob: -14.12695598602295
    8. ' ' → logprob: -14.37695598602295
    9. ' н' → logprob: -15.93945598602295
    10. '<|end|>' → logprob: -16.251956939697266

Token 56: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47415003180503845
    2. ' ==' → logprob: -0.9741500616073608
    3. '<|end|>' → logprob: -10.099149703979492
    4. '0' → logprob: -11.724149703979492
    5. ' ' → logprob: -11.849149703979492
    6. '=' → logprob: -11.974149703979492
    7. '<|end|>' → logprob: -12.974149703979492
    8. ' ' → logprob: -13.099149703979492
    9. '  ' → logprob: -13.474149703979492
    10. '===' → logprob: -14.224149703979492

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012513537891209126
    2. ' ' → logprob: -4.387513637542725
    3. '   ' → logprob: -13.387513160705566
    4. '  ' → logprob: -13.637513160705566
    5. '<|end|>' → logprob: -15.200013160705566
    6. '۰' → logprob: -15.887513160705566
    7. ' ' → logprob: -16.012514114379883
    8. '1' → logprob: -16.512514114379883
    9. '```' → logprob: -16.575014114379883
    10. '    ' → logprob: -16.575014114379883

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004935794277116656
    2. ' ' → logprob: -7.62549352645874
    3. '1' → logprob: -13.312994003295898
    4. '  ' → logprob: -13.562994003295898
    5. '   ' → logprob: -14.312994003295898
    6. '```' → logprob: -15.187994003295898
    7. '-' → logprob: -15.250494003295898
    8. '۰' → logprob: -15.437994003295898
    9. '    ' → logprob: -16.2504940032959
    10. '०' → logprob: -16.6254940032959

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005255933851003647
    2. ':
' → logprob: -5.505255699157715
    3. '   ' → logprob: -7.005255699157715
    4. '       ' → logprob: -8.255255699157715
    5. ' :' → logprob: -12.505255699157715
    6. '.' → logprob: -13.505255699157715
    7. '    ' → logprob: -14.005255699157715
    8. '  ' → logprob: -14.630255699157715
    9. '     ' → logprob: -14.630255699157715
    10. ':return' → logprob: -14.630255699157715

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043076153844594955
    2. '   ' → logprob: -3.1680760383605957
    3. ':' → logprob: -10.168076515197754
    4. '	break' → logprob: -11.543076515197754
    5. ' break' → logprob: -11.668076515197754
    6. '     ' → logprob: -12.168076515197754
    7. '	' → logprob: -13.043076515197754
    8. '   ' → logprob: -13.293076515197754
    9. '	   ' → logprob: -13.543076515197754
    10. '      ' → logprob: -13.668076515197754

Token 61: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.05742759630084038
    2. 'break' (adapté à ' break') → logprob: -3.1824276447296143
    3. '       ' → logprob: -4.432427406311035
    4. '   ' → logprob: -6.057427406311035
    5. '	break' → logprob: -9.307427406311035
    6. '```' → logprob: -12.682427406311035
    7. ' ' → logprob: -13.682427406311035
    8. '_break' → logprob: -13.932427406311035
    9. '-break' → logprob: -14.057427406311035
    10. 'Break' → logprob: -14.682427406311035

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7149850130081177
    2. '   ' → logprob: -0.9649850130081177
    3. '    
' → logprob: -2.089984893798828
    4. '<|end|>' → logprob: -6.339984893798828
    5. '  
' → logprob: -7.214984893798828
    6. '   
' → logprob: -7.214984893798828
    7. '```' → logprob: -7.339984893798828
    8. 'print' → logprob: -7.839984893798828
    9. '\n' → logprob: -8.339984893798828
    10. ' 
' → logprob: -8.339984893798828

Token 63: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.247104674577713
    2. '   ' → logprob: -1.7471046447753906
    3. '    
' → logprob: -3.2471046447753906
    4. 'print' → logprob: -6.497104644775391
    5. '  
' → logprob: -6.997104644775391
    6. '   
' → logprob: -6.997104644775391
    7. '<|end|>' → logprob: -7.497104644775391
    8. '
' → logprob: -8.12210464477539
    9. '```' → logprob: -8.24710464477539
    10. '

' → logprob: -8.24710464477539

Token 64: ' sqrt' (ID: 44237)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17099696397781372
    2. ' l' → logprob: -3.170996904373169
    3. ' g' → logprob: -3.795996904373169
    4. 'g' → logprob: -3.920996904373169
    5. '    
' → logprob: -4.045997142791748
    6. ' gcd' → logprob: -4.920997142791748
    7. 'l' → logprob: -5.045997142791748
    8. ' result' → logprob: -5.170997142791748
    9. 'result' → logprob: -5.795997142791748
    10. '```' → logprob: -6.045997142791748

Token 65: '_p' (ID: 1359)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.3040398359298706
    2. '_' → logprob: -2.17903995513916
    3. '_val' → logprob: -2.92903995513916
    4. '_p' → logprob: -3.42903995513916
    5. '(' → logprob: -3.42903995513916
    6. '(n' → logprob: -4.80403995513916
    7. 'n' → logprob: -5.05403995513916
    8. 't' → logprob: -5.92903995513916
    9. '_value' → logprob: -6.17903995513916
    10. 'p' → logprob: -6.30403995513916

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11605735868215561
    2. '=' → logprob: -2.2410573959350586
    3. '_' → logprob: -6.366057395935059
    4. 'r' → logprob: -7.741057395935059
    5. '_root' → logprob: -7.991057395935059
    6. ' ' → logprob: -8.116057395935059
    7. 'root' → logprob: -8.741057395935059
    8. '_s' → logprob: -9.491057395935059
    9. 'p' → logprob: -9.991057395935059
    10. '_val' → logprob: -10.866057395935059

Token 67: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1621495634317398
    2. 'math' → logprob: -2.412149667739868
    3. ' int' → logprob: -3.287149667739868
    4. 'int' → logprob: -3.787149667739868
    5. ' ' → logprob: -10.787149429321289
    6. ' p' → logprob: -11.287149429321289
    7. '(math' → logprob: -12.662149429321289
    8. 'p' → logprob: -13.287149429321289
    9. '.math' → logprob: -13.912149429321289
    10. '   ' → logprob: -14.287149429321289

Token 68: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0008197537390515208
    2. '.' → logprob: -7.250819683074951
    3. '.is' → logprob: -9.75082015991211
    4. '.s' → logprob: -10.00082015991211
    5. '.ceil' → logprob: -13.37582015991211
    6. '.floor' → logprob: -13.37582015991211
    7. '.Sqrt' → logprob: -13.37582015991211
    8. '.pow' → logprob: -14.25082015991211
    9. 'sqrt' → logprob: -14.87582015991211
    10. ' .' → logprob: -15.37582015991211

Token 69: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.02977687679231167
    2. '(' → logprob: -3.5297768115997314
    3. 'p' → logprob: -11.279776573181152
    4. ' (' → logprob: -12.279776573181152
    5. '(
' → logprob: -12.654776573181152
    6. '(n' → logprob: -12.904776573181152
    7. '(s' → logprob: -13.654776573181152
    8. '(

' → logprob: -14.279776573181152
    9. '(P' → logprob: -15.279776573181152
    10. ' p' → logprob: -15.529776573181152

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11728714406490326
    2. ')
' → logprob: -2.2422871589660645
    3. '   ' → logprob: -5.7422871589660645
    4. ')
' → logprob: -7.2422871589660645
    5. ' )' → logprob: -8.367286682128906
    6. ' )
' → logprob: -9.617286682128906
    7. '*' → logprob: -9.742286682128906
    8. ')

' → logprob: -9.742286682128906
    9. '**' → logprob: -10.367286682128906
    10. ' ' → logprob: -10.992286682128906

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2635284960269928
    2. '
' → logprob: -2.38852858543396
    3. '    
' → logprob: -2.76352858543396
    4. ' if' → logprob: -3.88852858543396
    5. '   
' → logprob: -4.388528347015381
    6. '     
' → logprob: -4.638528347015381
    7. '```' → logprob: -5.013528347015381
    8. 'if' → logprob: -5.138528347015381
    9. '    ' → logprob: -5.513528347015381
    10. ' 
' → logprob: -5.763528347015381

Token 72: ' ration' (ID: 74749)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0242120027542114
    2. ' if' → logprob: -1.1492120027542114
    3. '     
' → logprob: -2.524211883544922
    4. 'if' → logprob: -3.024211883544922
    5. ' 
' → logprob: -3.399211883544922
    6. '    ' → logprob: -3.399211883544922
    7. '    
' → logprob: -3.524211883544922
    8. '   
' → logprob: -4.149211883544922
    9. ' for' → logprob: -4.274211883544922
    10. 'n' → logprob: -4.524211883544922

Token 73: 'als' (ID: 1288)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.013249987736344337
    2. 'ale' → logprob: -4.38824987411499
    3. 'a' → logprob: -7.76324987411499
    4. 'ality' → logprob: -9.263250350952148
    5. 'als' → logprob: -9.388250350952148
    6. 'e' → logprob: -9.638250350952148
    7. 'o' → logprob: -11.263250350952148
    8. 'ales' → logprob: -11.888250350952148
    9. '   ' → logprob: -12.013250350952148
    10. 'g' → logprob: -12.138250350952148

Token 74: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.49865543842315674
    2. 'als' → logprob: -1.7486554384231567
    3. ' =' → logprob: -2.123655319213867
    4. '=' → logprob: -2.373655319213867
    5. 'l' → logprob: -6.998655319213867
    6. '_' → logprob: -6.998655319213867
    7. 'a' → logprob: -7.873655319213867
    8. 'ales' → logprob: -7.998655319213867
    9. 'ale' → logprob: -8.373655319213867
    10. '   ' → logprob: -8.373655319213867

Token 75: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.15855281054973602
    2. ' []' → logprob: -2.533552885055542
    3. '0' → logprob: -3.658552885055542
    4. '[int' → logprob: -4.408552646636963
    5. '[' → logprob: -4.783552646636963
    6. ' [' → logprob: -4.908552646636963
    7. '[p' → logprob: -5.283552646636963
    8. ' ' → logprob: -6.033552646636963
    9. '[]
' → logprob: -6.533552646636963
    10. 'int' → logprob: -6.783552646636963

Token 76: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8870506286621094
    2. '   ' → logprob: -1.0120506286621094
    3. ' for' → logprob: -1.5120506286621094
    4. ' ' → logprob: -5.887050628662109
    5. '  ' → logprob: -7.887050628662109
    6. '    ' → logprob: -8.88705062866211
    7. 'if' → logprob: -9.13705062866211
    8. '[]' → logprob: -9.26205062866211
    9. ',' → logprob: -9.38705062866211
    10. '[' → logprob: -9.63705062866211

Token 77: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6832726001739502
    2. ' for' → logprob: -0.8082726001739502
    3. '   ' → logprob: -3.05827260017395
    4. ' ' → logprob: -7.183272361755371
    5. 'n' → logprob: -8.308272361755371
    6. 'if' → logprob: -8.558272361755371
    7. 'i' → logprob: -8.808272361755371
    8. '    ' → logprob: -8.808272361755371
    9. 'x' → logprob: -8.933272361755371
    10. '  ' → logprob: -9.058272361755371

Token 78: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3598620891571045
    2. 'i' → logprob: -1.9848620891571045
    3. ' x' → logprob: -3.2348620891571045
    4. ' d' → logprob: -3.3598620891571045
    5. ' r' → logprob: -4.109862327575684
    6. ' k' → logprob: -4.359862327575684
    7. 'x' → logprob: -4.359862327575684
    8. 'd' → logprob: -4.609862327575684
    9. ' q' → logprob: -4.859862327575684
    10. 'r' → logprob: -5.234862327575684

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014238136820495129
    2. 'in' → logprob: -4.264238357543945
    3. ' ' → logprob: -10.514238357543945
    4. 'n' → logprob: -12.014238357543945
    5. 'range' → logprob: -12.014238357543945
    6. 'y' → logprob: -12.139238357543945
    7. 's' → logprob: -12.514238357543945
    8. ',' → logprob: -12.639238357543945
    9. '<|end|>' → logprob: -12.889238357543945
    10. '0' → logprob: -13.264238357543945

Token 80: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22545820474624634
    2. ' range' → logprob: -1.6004581451416016
    3. ' ' → logprob: -10.850458145141602
    4. '	range' → logprob: -11.475458145141602
    5. '  ' → logprob: -12.850458145141602
    6. 'rang' → logprob: -12.975458145141602
    7. '(range' → logprob: -13.225458145141602
    8. ' xrange' → logprob: -13.225458145141602
    9. '   ' → logprob: -13.475458145141602
    10. 'r' → logprob: -13.725458145141602

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12319618463516235
    2. '(n' → logprob: -2.2481961250305176
    3. '(int' → logprob: -4.873196125030518
    4. '(-' → logprob: -6.248196125030518
    5. ' (' → logprob: -8.123196601867676
    6. '(p' → logprob: -8.373196601867676
    7. '(s' → logprob: -9.623196601867676
    8. ' ' → logprob: -10.248196601867676
    9. '1' → logprob: -10.373196601867676
    10. '(y' → logprob: -10.873196601867676

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8523365259170532
    2. 'n' → logprob: -1.2273365259170532
    3. 'int' → logprob: -1.3523365259170532
    4. '-' → logprob: -5.227336406707764
    5. ' int' → logprob: -5.227336406707764
    6. '0' → logprob: -5.602336406707764
    7. 'p' → logprob: -6.602336406707764
    8. ' n' → logprob: -6.602336406707764
    9. '-n' → logprob: -6.852336406707764
    10. ' ' → logprob: -7.102336406707764

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030087267514318228
    2. ' ,' → logprob: -6.253008842468262
    3. ',n' → logprob: -7.128008842468262
    4. ',p' → logprob: -9.128008842468262
    5. ',y' → logprob: -9.253008842468262
    6. ',int' → logprob: -10.253008842468262
    7. 'y' → logprob: -11.378008842468262
    8. 'p' → logprob: -12.253008842468262
    9. 'n' → logprob: -12.253008842468262
    10. ',
' → logprob: -12.378008842468262

Token 84: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0373790264129639
    2. ' n' → logprob: -1.0373790264129639
    3. ' int' → logprob: -1.6623790264129639
    4. 'int' → logprob: -2.412379026412964
    5. ' p' → logprob: -5.037379264831543
    6. 'p' → logprob: -6.037379264831543
    7. ' ' → logprob: -6.537379264831543
    8. '   ' → logprob: -7.912379264831543
    9. ' min' → logprob: -8.662379264831543
    10. '100' → logprob: -9.037379264831543

Token 85: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.037587970495224
    2. ' +' → logprob: -3.537587881088257
    3. '):' → logprob: -4.912588119506836
    4. '):
' → logprob: -8.162588119506836
    5. '   ' → logprob: -10.162588119506836
    6. ' ):' → logprob: -10.412588119506836
    7. '//' → logprob: -10.787588119506836
    8. '-' → logprob: -11.037588119506836
    9. ' ' → logprob: -11.412588119506836
    10. ')' → logprob: -11.537588119506836

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004952482995577157
    2. ' ' → logprob: -7.625495433807373
    3. '   ' → logprob: -12.750494956970215
    4. '2' → logprob: -13.250494956970215
    5. '):
' → logprob: -13.875494956970215
    6. '  ' → logprob: -14.625494956970215
    7. '):' → logprob: -15.625494956970215
    8. '    ' → logprob: -15.625494956970215
    9. ')' → logprob: -15.875494956970215
    10. '```' → logprob: -15.875494956970215

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06323479115962982
    2. '):
' → logprob: -2.813234806060791
    3. ':' → logprob: -7.438234806060791
    4. ' ):' → logprob: -7.938234806060791
    5. '):
' → logprob: -9.188234329223633
    6. '   ' → logprob: -9.563234329223633
    7. ' ):
' → logprob: -10.063234329223633
    8. ')' → logprob: -10.063234329223633
    9. ',' → logprob: -10.188234329223633
    10. '       ' → logprob: -12.188234329223633

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052959490567445755
    2. '<|end|>' → logprob: -3.177959442138672
    3. '   ' → logprob: -5.677959442138672
    4. ':' → logprob: -6.052959442138672
    5. ' ' → logprob: -6.177959442138672
    6. '    ' → logprob: -7.552959442138672
    7. '<|end|>' → logprob: -7.802959442138672
    8. ',' → logprob: -8.177959442138672
    9. ':
' → logprob: -8.552959442138672
    10. ')' → logprob: -9.177959442138672

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.44420328736305237
    2. '       ' → logprob: -1.56920325756073
    3. ' x' → logprob: -2.9442033767700195
    4. 'for' (adapté à ' for') → logprob: -3.0692033767700195
    5. ' if' → logprob: -3.8192033767700195
    6. '    ' → logprob: -4.8192033767700195
    7. 'x' → logprob: -5.1942033767700195
    8. '        ' → logprob: -5.5692033767700195
    9. '   ' → logprob: -5.6942033767700195
    10. ' ' → logprob: -5.8192033767700195

Token 90: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003229994559660554
    2. ' x' → logprob: -5.753230094909668
    3. 'y' → logprob: -11.003230094909668
    4. ' ' → logprob: -12.003230094909668
    5. 'a' → logprob: -12.128230094909668
    6. 'q' → logprob: -12.690730094909668
    7. 'z' → logprob: -12.753230094909668
    8. 'p' → logprob: -12.878230094909668
    9. '   ' → logprob: -13.315730094909668
    10. 'b' → logprob: -13.378230094909668

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022674205247312784
    2. 'in' → logprob: -6.752267360687256
    3. '<|end|>' → logprob: -6.877267360687256
    4. ' ' → logprob: -10.127267837524414
    5. '<|end|>' → logprob: -11.002267837524414
    6. 'range' → logprob: -12.877267837524414
    7. '   ' → logprob: -13.752267837524414
    8. '=' → logprob: -14.377267837524414
    9. 's' → logprob: -14.502267837524414
    10. '    ' → logprob: -14.502267837524414

Token 92: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6329894065856934
    2. 'range' → logprob: -0.7579894065856934
    3. '(range' → logprob: -8.507989883422852
    4. '<|end|>' → logprob: -9.257989883422852
    5. '	range' → logprob: -10.507989883422852
    6. ' xrange' → logprob: -10.757989883422852
    7. ' ' → logprob: -11.382989883422852
    8. ')' → logprob: -11.882989883422852
    9. '1' → logprob: -12.632989883422852
    10. '[' → logprob: -12.757989883422852

Token 93: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.515961285913363e-05
    2. ' (' → logprob: -10.500064849853516
    3. '1' → logprob: -11.250064849853516
    4. '(y' → logprob: -11.375064849853516
    5. 'y' → logprob: -12.500064849853516
    6. '   ' → logprob: -12.750064849853516
    7. '<|end|>' → logprob: -12.875064849853516
    8. '(n' → logprob: -14.000064849853516
    9. ')' → logprob: -14.500064849853516
    10. '(x' → logprob: -15.125064849853516

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05287491902709007
    2. 'y' → logprob: -3.052874803543091
    3. 'p' → logprob: -6.42787504196167
    4. ' y' → logprob: -7.17787504196167
    5. ' ' → logprob: -7.17787504196167
    6. 'n' → logprob: -7.92787504196167
    7. '0' → logprob: -8.302874565124512
    8. 'int' → logprob: -9.052874565124512
    9. 'sqrt' → logprob: -9.052874565124512
    10. '   ' → logprob: -9.302874565124512

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048048171447589993
    2. ' ,' → logprob: -7.875480651855469
    3. ',n' → logprob: -9.750480651855469
    4. ',y' → logprob: -10.875480651855469
    5. '<|end|>' → logprob: -11.250480651855469
    6. '   ' → logprob: -13.000480651855469
    7. 'y' → logprob: -13.375480651855469
    8. ' ' → logprob: -13.500480651855469
    9. ',x' → logprob: -14.250480651855469
    10. '    ' → logprob: -14.375480651855469

Token 96: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3855459988117218
    2. 'y' → logprob: -1.3855459690093994
    3. ' y' → logprob: -3.2605459690093994
    4. ' n' → logprob: -3.6355459690093994
    5. 'int' → logprob: -5.7605462074279785
    6. ' int' → logprob: -7.3855462074279785
    7. 'p' → logprob: -7.5105462074279785
    8. ' ' → logprob: -8.76054573059082
    9. '   ' → logprob: -8.88554573059082
    10. ' p' → logprob: -9.01054573059082

Token 97: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001875671005109325
    2. ' +' → logprob: -8.625187873840332
    3. '   ' → logprob: -13.000187873840332
    4. '+y' → logprob: -13.500187873840332
    5. '+x' → logprob: -13.750187873840332
    6. '1' → logprob: -14.375187873840332
    7. ')+' → logprob: -14.625187873840332
    8. '<|end|>' → logprob: -14.875187873840332
    9. 'y' → logprob: -15.125187873840332
    10. ')' → logprob: -15.250187873840332

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7372048862162046e-05
    2. ' ' → logprob: -11.375027656555176
    3. '+' → logprob: -11.500027656555176
    4. 'y' → logprob: -12.625027656555176
    5. '2' → logprob: -14.000027656555176
    6. 'x' → logprob: -14.500027656555176
    7. '   ' → logprob: -14.750027656555176
    8. ' y' → logprob: -16.12502670288086
    9. ')' → logprob: -16.31252670288086
    10. '```' → logprob: -16.43752670288086

Token 99: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12708674371242523
    2. '):' → logprob: -2.127086639404297
    3. '):
' → logprob: -9.502086639404297
    4. ':' → logprob: -9.877086639404297
    5. '       ' → logprob: -11.627086639404297
    6. '           ' → logprob: -12.127086639404297
    7. '():
' → logprob: -12.252086639404297
    8. ' ):
' → logprob: -12.377086639404297
    9. '):

' → logprob: -12.627086639404297
    10. ':
' → logprob: -12.752086639404297

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2033682018518448
    2. '       ' → logprob: -1.7033681869506836
    3. '<|end|>' → logprob: -6.578368186950684
    4. '	       ' → logprob: -9.203368186950684
    5. '```' → logprob: -9.203368186950684
    6. '        ' → logprob: -9.578368186950684
    7. '               ' → logprob: -9.828368186950684
    8. '          ' → logprob: -10.078368186950684
    9. ':' → logprob: -10.203368186950684
    10. ' if' → logprob: -10.328368186950684

Token 101: ' g' (ID: 329)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3180472254753113
    2. '               ' → logprob: -1.443047285079956
    3. ' if' → logprob: -3.443047285079956
    4. '           ' → logprob: -5.943047046661377
    5. 'if' → logprob: -7.318047046661377
    6. ' ' → logprob: -8.568047523498535
    7. '   ' → logprob: -9.193047523498535
    8. '                
' → logprob: -9.443047523498535
    9. '        ' → logprob: -9.568047523498535
    10. ' 
' → logprob: -9.818047523498535

Token 102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.037327419966459274
    2. 'cd' → logprob: -3.662327527999878
    3. ' =' → logprob: -4.912327289581299
    4. '=g' → logprob: -5.787327289581299
    5. '=int' → logprob: -8.787327766418457
    6. 'if' → logprob: -9.412327766418457
    7. 'c' → logprob: -10.162327766418457
    8. '=c' → logprob: -10.287327766418457
    9. '=f' → logprob: -10.787327766418457
    10. '==' → logprob: -10.912327766418457

Token 103: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.003668367862701416
    2. ' gcd' → logprob: -5.628668308258057
    3. 'math' → logprob: -10.128668785095215
    4. '   ' → logprob: -10.753668785095215
    5. '       ' → logprob: -13.253668785095215
    6. '	g' → logprob: -13.753668785095215
    7. ' math' → logprob: -13.753668785095215
    8. 'x' → logprob: -13.878668785095215
    9. ' ' → logprob: -14.378668785095215
    10. 'm' → logprob: -15.253668785095215

Token 104: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007711800746619701
    2. '(' → logprob: -4.882711887359619
    3. 'x' → logprob: -9.632711410522461
    4. '(y' → logprob: -11.007711410522461
    5. ' (' → logprob: -11.132711410522461
    6. '(
' → logprob: -12.632711410522461
    7. '<|end|>' → logprob: -13.382711410522461
    8. ')' → logprob: -13.632711410522461
    9. '(abs' → logprob: -13.757711410522461
    10. '(s' → logprob: -14.882711410522461

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00515323132276535
    2. ',y' → logprob: -5.380153179168701
    3. ' ,' → logprob: -7.755153179168701
    4. 'y' → logprob: -9.25515365600586
    5. '   ' → logprob: -13.00515365600586
    6. ',x' → logprob: -13.25515365600586
    7. ' y' → logprob: -14.13015365600586
    8. '           ' → logprob: -14.38015365600586
    9. ',n' → logprob: -14.50515365600586
    10. 'x' → logprob: -14.50515365600586

Token 106: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00018125296628568321
    2. ' y' → logprob: -8.625181198120117
    3. '           ' → logprob: -14.375181198120117
    4. '   ' → logprob: -14.500181198120117
    5. 'x' → logprob: -15.125181198120117
    6. ')' → logprob: -16.500181198120117
    7. '       ' → logprob: -16.750181198120117
    8. '	y' → logprob: -16.750181198120117
    9. ' ' → logprob: -17.000181198120117
    10. ')y' → logprob: -17.500181198120117

Token 107: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3868987262248993
    2. ')' → logprob: -1.1368987560272217
    3. ')
' → logprob: -11.0118989944458
    4. ')

' → logprob: -12.1368989944458
    5. '           ' → logprob: -12.6368989944458
    6. '       ' → logprob: -13.2618989944458
    7. ' )
' → logprob: -15.3868989944458
    8. '   ' → logprob: -15.8868989944458
    9. '               ' → logprob: -16.636898040771484
    10. ')`
' → logprob: -17.011898040771484

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007283953949809074
    2. '<|end|>' → logprob: -5.132284164428711
    3. '       ' → logprob: -7.007284164428711
    4. '   ' → logprob: -8.882284164428711
    5. '<|end|>' → logprob: -9.757284164428711
    6. ' if' → logprob: -9.757284164428711
    7. '```' → logprob: -9.882284164428711
    8. '            
' → logprob: -10.132284164428711
    9. '          ' → logprob: -10.507284164428711
    10. '               ' → logprob: -10.882284164428711

Token 109: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.60771644115448
    2. 'if' (adapté à ' if') → logprob: -1.48271644115448
    3. ' if' → logprob: -1.48271644115448
    4. '   ' → logprob: -6.9827165603637695
    5. '       ' → logprob: -8.35771656036377
    6. '```' → logprob: -9.35771656036377
    7. ' ' → logprob: -9.60771656036377
    8. 'x' → logprob: -11.73271656036377
    9. '  ' → logprob: -12.10771656036377
    10. ' x' → logprob: -12.73271656036377

Token 110: ' g' (ID: 329)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9200733304023743
    2. ' x' → logprob: -1.2950732707977295
    3. 'g' → logprob: -1.7950732707977295
    4. ' g' → logprob: -2.7950732707977295
    5. ' y' → logprob: -3.5450732707977295
    6. ' abs' → logprob: -3.7950732707977295
    7. 'y' → logprob: -3.9200732707977295
    8. ' math' → logprob: -4.795073509216309
    9. 'abs' → logprob: -5.045073509216309
    10. ' (' → logprob: -5.795073509216309

Token 111: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08921371400356293
    2. '==' → logprob: -2.4642136096954346
    3. ')' → logprob: -9.714213371276855
    4. '=' → logprob: -9.714213371276855
    5. ' !=' → logprob: -9.839213371276855
    6. ')==' → logprob: -9.964213371276855
    7. ' ' → logprob: -11.214213371276855
    8. '>' → logprob: -11.214213371276855
    9. ' >' → logprob: -12.089213371276855
    10. ' =' → logprob: -12.714213371276855

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001051984610967338
    2. ' ' → logprob: -6.876051902770996
    3. 'x' → logprob: -11.751051902770996
    4. 'y' → logprob: -11.751051902770996
    5. '0' → logprob: -13.126051902770996
    6. 'g' → logprob: -14.563551902770996
    7. ' y' → logprob: -14.938551902770996
    8. ' x' → logprob: -15.938551902770996
    9. '=' → logprob: -16.063552856445312
    10. '   ' → logprob: -16.751052856445312

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.629921436891891e-05
    2. 'y' → logprob: -11.25002670288086
    3. 'x' → logprob: -11.37502670288086
    4. ' ' → logprob: -13.50002670288086
    5. '0' → logprob: -16.00002670288086
    6. 'g' → logprob: -16.56252670288086
    7. 'n' → logprob: -16.81252670288086
    8. ' y' → logprob: -16.87502670288086
    9. '2' → logprob: -17.56252670288086
    10. '```' → logprob: -17.75002670288086

Token 114: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0029479898512363434
    2. ':' → logprob: -6.502947807312012
    3. 'and' → logprob: -7.127947807312012
    4. ':
' → logprob: -7.627947807312012
    5. '           ' → logprob: -9.002947807312012
    6. '               ' → logprob: -10.877947807312012
    7. ',' → logprob: -13.127947807312012
    8. ' ' → logprob: -13.252947807312012
    9. '            ' → logprob: -13.252947807312012
    10. ':

' → logprob: -13.627947807312012

Token 115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018816387746483088
    2. '           ' → logprob: -6.5018815994262695
    3. '                
' → logprob: -9.37688159942627
    4. '<|end|>' → logprob: -9.62688159942627
    5. '       ' → logprob: -10.00188159942627
    6. '              ' → logprob: -10.12688159942627
    7. ' and' → logprob: -10.25188159942627
    8. '                   ' → logprob: -10.62688159942627
    9. '```' → logprob: -11.00188159942627
    10. ' if' → logprob: -11.37688159942627

Token 116: ' val' (ID: 1459)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1388118267059326
    2. ' if' → logprob: -1.5138118267059326
    3. ' value' → logprob: -1.5138118267059326
    4. ' val' → logprob: -2.1388118267059326
    5. 'value' → logprob: -2.8888118267059326
    6. 'if' → logprob: -3.6388118267059326
    7. 'val' (adapté à ' val') → logprob: -4.513812065124512
    8. '               ' → logprob: -4.763812065124512
    9. ' fraction' → logprob: -5.263812065124512
    10. ' ratio' → logprob: -5.763812065124512

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759798288345337
    2. '=' → logprob: -0.8259798288345337
    3. '   ' → logprob: -10.575980186462402
    4. 's' → logprob: -12.825980186462402
    5. '       ' → logprob: -13.200980186462402
    6. 'ues' → logprob: -13.325980186462402
    7. 'uate' → logprob: -13.450980186462402
    8. 'uation' → logprob: -13.700980186462402
    9. 'ue' → logprob: -13.700980186462402
    10. '=float' → logprob: -13.825980186462402

Token 118: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10601072758436203
    2. 'abs' → logprob: -2.856010675430298
    3. '(x' → logprob: -4.231010913848877
    4. 'math' → logprob: -4.356010913848877
    5. 'float' → logprob: -4.981010913848877
    6. '(abs' → logprob: -6.231010913848877
    7. 'y' → logprob: -6.356010913848877
    8. '(' → logprob: -6.481010913848877
    9. '(math' → logprob: -7.356010913848877
    10. ' abs' → logprob: -7.606010913848877

Token 119: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.34883913397789
    2. ' /' → logprob: -1.2238391637802124
    3. '*' → logprob: -8.848838806152344
    4. '**' → logprob: -9.098838806152344
    5. '/math' → logprob: -9.973838806152344
    6. ' *' → logprob: -9.973838806152344
    7. '/s' → logprob: -11.223838806152344
    8. '+' → logprob: -11.723838806152344
    9. '/y' → logprob: -11.848838806152344
    10. ' +' → logprob: -11.848838806152344

Token 120: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.4121114822482923e-06
    2. ' y' → logprob: -12.625003814697266
    3. 'math' → logprob: -16.375003814697266
    4. 'sqrt' → logprob: -18.000003814697266
    5. 'x' → logprob: -19.000003814697266
    6. 'y's' → logprob: -19.125003814697266
    7. ' ' → logprob: -19.375003814697266
    8. '(' → logprob: -19.625003814697266
    9. '   ' → logprob: -19.875003814697266
    10. 'p' → logprob: -20.000003814697266

Token 121: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06929919868707657
    2. '<|end|>' → logprob: -2.8192992210388184
    3. '                
' → logprob: -5.819299221038818
    4. '           ' → logprob: -6.569299221038818
    5. ',' → logprob: -7.694299221038818
    6. ' if' → logprob: -7.944299221038818
    7. '<|end|>' → logprob: -7.944299221038818
    8. '       ' → logprob: -8.19429874420166
    9. '                ' → logprob: -8.31929874420166
    10. '              ' → logprob: -8.69429874420166

Token 122: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000709332583937794
    2. '<|end|>' → logprob: -8.125709533691406
    3. '           ' → logprob: -8.500709533691406
    4. '       ' → logprob: -9.750709533691406
    5. '                
' → logprob: -9.875709533691406
    6. ',' → logprob: -10.000709533691406
    7. '              ' → logprob: -11.250709533691406
    8. ' if' → logprob: -11.500709533691406
    9. '                   ' → logprob: -12.250709533691406
    10. '   ' → logprob: -12.250709533691406

Token 123: ' ration' (ID: 74749)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18824589252471924
    2. ' if' → logprob: -1.8132458925247192
    3. '                   ' → logprob: -5.06324577331543
    4. '               ' → logprob: -7.18824577331543
    5. ' ration' → logprob: -7.18824577331543
    6. 'ration' (adapté à ' ration') → logprob: -8.18824577331543
    7. '   ' → logprob: -9.06324577331543
    8. 'import' → logprob: -10.06324577331543
    9. '                    
' → logprob: -10.31324577331543
    10. '
' → logprob: -11.18824577331543

Token 124: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -2.2200749754119897e-06
    2. ' als' → logprob: -14.375001907348633
    3. 'al' → logprob: -14.625001907348633
    4. 's' → logprob: -15.250001907348633
    5. 'a' → logprob: -15.375001907348633
    6. '[' → logprob: -16.250001907348633
    7. '**' → logprob: -16.375001907348633
    8. '```' → logprob: -16.500001907348633
    9. 'Als' → logprob: -16.625001907348633
    10. '   ' → logprob: -16.750001907348633

Token 125: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008640335872769356
    2. '.' → logprob: -4.758640289306641
    3. '<|end|>' → logprob: -11.75864028930664
    4. ' .' → logprob: -12.13364028930664
    5. '.app' → logprob: -12.38364028930664
    6. 'append' → logprob: -13.38364028930664
    7. '.Append' → logprob: -13.38364028930664
    8. '.setdefault' → logprob: -13.50864028930664
    9. '.extend' → logprob: -14.00864028930664
    10. '.ap' → logprob: -14.13364028930664

Token 126: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.25954535603523254
    2. '(val' → logprob: -1.5095453262329102
    3. '(' → logprob: -4.88454532623291
    4. '(
' → logprob: -11.13454532623291
    5. ' (' → logprob: -13.38454532623291
    6. '(round' → logprob: -13.50954532623291
    7. '(((' → logprob: -13.63454532623291
    8. 'val' → logprob: -14.13454532623291
    9. '(

' → logprob: -14.25954532623291
    10. '(('' → logprob: -14.25954532623291

Token 127: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.005727555602788925
    2. 'abs' → logprob: -5.255727767944336
    3. 'sqrt' → logprob: -8.755727767944336
    4. ' val' → logprob: -9.255727767944336
    5. 'x' → logprob: -9.380727767944336
    6. 'y' → logprob: -9.755727767944336
    7. 'math' → logprob: -10.130727767944336
    8. '   ' → logprob: -11.255727767944336
    9. '(val' → logprob: -12.005727767944336
    10. 'float' → logprob: -12.005727767944336

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.102680633077398e-05
    2. ',x' → logprob: -9.875090599060059
    3. ' ,' → logprob: -10.375090599060059
    4. '   ' → logprob: -12.625090599060059
    5. '))' → logprob: -12.875090599060059
    6. ')' → logprob: -14.750090599060059
    7. ',
' → logprob: -14.875090599060059
    8. ',y' → logprob: -15.000090599060059
    9. 'x' → logprob: -15.125090599060059
    10. ',(' → logprob: -15.875090599060059

Token 129: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02278578095138073
    2. ' x' → logprob: -3.8977856636047363
    3. '(x' → logprob: -6.647785663604736
    4. ' (' → logprob: -7.772785663604736
    5. 'y' → logprob: -7.897785663604736
    6. '(' → logprob: -9.647786140441895
    7. ' y' → logprob: -10.147786140441895
    8. '   ' → logprob: -11.397786140441895
    9. 'f' → logprob: -12.022786140441895
    10. ')' → logprob: -12.397786140441895

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.825890159234405e-05
    2. ',y' → logprob: -10.250068664550781
    3. ' ,' → logprob: -10.625068664550781
    4. '))' → logprob: -12.750068664550781
    5. '<|end|>' → logprob: -13.125068664550781
    6. ',
' → logprob: -13.375068664550781
    7. ')' → logprob: -14.375068664550781
    8. ')))' → logprob: -14.500068664550781
    9. ',

' → logprob: -15.875068664550781
    10. '   ' → logprob: -16.00006866455078

Token 131: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008618000894784927
    2. ' y' → logprob: -4.758617877960205
    3. ')' → logprob: -13.633618354797363
    4. '<|end|>' → logprob: -13.883618354797363
    5. ')y' → logprob: -15.133618354797363
    6. '   ' → logprob: -15.258618354797363
    7. ' ' → logprob: -15.508618354797363
    8. ',' → logprob: -16.133617401123047
    9. ''y' → logprob: -16.633617401123047
    10. 'x' → logprob: -16.758617401123047

Token 132: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004745060577988625
    2. '))
' → logprob: -5.379745006561279
    3. ',' → logprob: -9.754745483398438
    4. '))

' → logprob: -10.129745483398438
    5. '   ' → logprob: -11.629745483398438
    6. '       ' → logprob: -12.504745483398438
    7. '           ' → logprob: -12.629745483398438
    8. '               ' → logprob: -12.754745483398438
    9. ')))' → logprob: -12.754745483398438
    10. ' ))' → logprob: -13.129745483398438

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2708517909049988
    2. 'ration' → logprob: -1.5208518505096436
    3. ' ration' → logprob: -4.2708516120910645
    4. '
' → logprob: -6.5208516120910645
    5. '    
' → logprob: -6.8958516120910645
    6. 'r' → logprob: -7.0208516120910645
    7. '```' → logprob: -7.8958516120910645
    8. 'rat' → logprob: -8.270852088928223
    9. '

' → logprob: -9.145852088928223
    10. ' rational' → logprob: -9.270852088928223

Token 134: ' ration' (ID: 74749)
  Prédit: 'ration'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ration' (adapté à ' ration') → logprob: -0.03897027671337128
    2. '   ' → logprob: -3.6639702320098877
    3. ' ration' → logprob: -5.038970470428467
    4. 'r' → logprob: -5.788970470428467
    5. 'rat' → logprob: -6.288970470428467
    6. '    
' → logprob: -7.788970470428467
    7. '
' → logprob: -8.413969993591309
    8. ' rational' → logprob: -8.663969993591309
    9. 'ratio' → logprob: -9.288969993591309
    10. '

' → logprob: -9.913969993591309

Token 135: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -7.3458322731312364e-06
    2. 'ats' → logprob: -13.000007629394531
    3. 'a' → logprob: -13.625007629394531
    4. ' als' → logprob: -14.250007629394531
    5. 'ls' → logprob: -14.375007629394531
    6. 'al' → logprob: -14.500007629394531
    7. '_' → logprob: -14.625007629394531
    8. 's' → logprob: -15.000007629394531
    9. '[' → logprob: -15.750007629394531
    10. '(' → logprob: -16.00000762939453

Token 136: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0006091519608162344
    2. '.' → logprob: -7.500608921051025
    3. '=' → logprob: -10.125609397888184
    4. 'sort' → logprob: -12.500609397888184
    5. '.extend' → logprob: -12.625609397888184
    6. '.append' → logprob: -12.750609397888184
    7. '<|end|>' → logprob: -13.125609397888184
    8. ' =' → logprob: -13.250609397888184
    9. '_sorted' → logprob: -13.500609397888184
    10. ' .' → logprob: -14.750609397888184

Token 137: ' list' (ID: 1562)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00038825106457807124
    2. 'list' → logprob: -8.000388145446777
    3. ' sorted' → logprob: -9.875388145446777
    4. '(sorted' → logprob: -14.750388145446777
    5. '[' → logprob: -14.875388145446777
    6. '.sorted' → logprob: -15.625388145446777
    7. 'set' → logprob: -16.625389099121094
    8. 'sort' → logprob: -17.000389099121094
    9. '   ' → logprob: -17.375389099121094
    10. 'Sorted' → logprob: -17.500389099121094

Token 138: '(set' (ID: 25904)
  Prédit: '(filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(filter' → logprob: -0.2602388262748718
    2. '(set' → logprob: -1.7602388858795166
    3. '(sorted' → logprob: -3.0102388858795166
    4. '(' → logprob: -5.2602386474609375
    5. 'sorted' → logprob: -6.8852386474609375
    6. 'filter' → logprob: -7.7602386474609375
    7. 'set' → logprob: -7.7602386474609375
    8. '(dict' → logprob: -7.8852386474609375
    9. '(sort' → logprob: -8.260238647460938
    10. 'sort' → logprob: -10.010238647460938

Token 139: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.500003814697266
    3. ' (' → logprob: -14.250003814697266
    4. ')' → logprob: -14.375003814697266
    5. 'ration' → logprob: -15.000003814697266
    6. '((' → logprob: -15.500003814697266
    7. 'r' → logprob: -16.375003814697266
    8. ')(' → logprob: -16.625003814697266
    9. '(
' → logprob: -17.250003814697266
    10. '))' → logprob: -17.250003814697266

Token 140: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.00029506313148885965
    2. 'ration' → logprob: -9.12529468536377
    3. 'at' → logprob: -9.25029468536377
    4. 'tion' → logprob: -10.62529468536377
    5. 'ational' → logprob: -10.75029468536377
    6. '(' → logprob: -10.87529468536377
    7. 'r' → logprob: -11.62529468536377
    8. 'ations' → logprob: -12.50029468536377
    9. '(r' → logprob: -12.75029468536377
    10. '[' → logprob: -12.87529468536377

Token 141: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.000241801084484905
    2. 's' → logprob: -8.875242233276367
    3. 'ls' → logprob: -9.750242233276367
    4. 'ials' → logprob: -11.500242233276367
    5. '(r' → logprob: -12.000242233276367
    6. '**' → logprob: -12.500242233276367
    7. '(' → logprob: -12.500242233276367
    8. '[' → logprob: -12.625242233276367
    9. 'ats' → logprob: -13.000242233276367
    10. '   ' → logprob: -13.250242233276367

Token 142: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12709157168865204
    2. ')' → logprob: -2.127091646194458
    3. '))
' → logprob: -9.002091407775879
    4. ')))' → logprob: -10.877091407775879
    5. ')
' → logprob: -11.377091407775879
    6. ' ))' → logprob: -12.252091407775879
    7. ' )' → logprob: -13.752091407775879
    8. '))

' → logprob: -14.127091407775879
    9. '),' → logprob: -14.502091407775879
    10. '   ' → logprob: -14.752091407775879

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4390314221382141
    2. 'ration' → logprob: -1.0640313625335693
    3. ' ration' → logprob: -4.814031600952148
    4. 'r' → logprob: -6.314031600952148
    5. 'rat' → logprob: -8.814031600952148
    6. '
' → logprob: -9.689031600952148
    7. '    
' → logprob: -9.939031600952148
    8. ' rational' → logprob: -10.314031600952148
    9. '<|end|>' → logprob: -11.689031600952148
    10. 'RATION' → logprob: -12.189031600952148

Token 144: ' ration' (ID: 74749)
  Prédit: 'ration'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ration' (adapté à ' ration') → logprob: -0.004043733235448599
    2. 'rat' → logprob: -6.0040435791015625
    3. ' ration' → logprob: -7.3790435791015625
    4. '   ' → logprob: -7.5040435791015625
    5. 'r' → logprob: -8.129043579101562
    6. '    
' → logprob: -10.754043579101562
    7. ' rational' → logprob: -11.129043579101562
    8. 'RATION' → logprob: -11.379043579101562
    9. '.sort' → logprob: -11.629043579101562
    10. ')' → logprob: -11.879043579101562

Token 145: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -1.4021237802808173e-05
    2. 's' → logprob: -12.125014305114746
    3. 'ats' → logprob: -13.000014305114746
    4. '_' → logprob: -13.250014305114746
    5. 'ls' → logprob: -13.875014305114746
    6. 'ials' → logprob: -14.125014305114746
    7. 'ation' → logprob: -14.750014305114746
    8. '   ' → logprob: -15.625014305114746
    9. 'els' → logprob: -15.750014305114746
    10. 'mals' → logprob: -15.750014305114746

Token 146: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -2.6537622034084052e-05
    2. '.' → logprob: -11.37502670288086
    3. '<|end|>' → logprob: -11.37502670288086
    4. 'sort' → logprob: -13.00002670288086
    5. '   ' → logprob: -15.37502670288086
    6. ' .' → logprob: -15.75002670288086
    7. '_sorted' → logprob: -15.75002670288086
    8. '<|end|>' → logprob: -15.75002670288086
    9. '.remove' → logprob: -15.87502670288086
    10. '	sort' → logprob: -16.12502670288086

Token 147: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.06775112450122833
    2. '()' → logprob: -2.942751169204712
    3. '(reverse' → logprob: -5.442750930786133
    4. '()
' → logprob: -6.067750930786133
    5. 'key' → logprob: -6.067750930786133
    6. '(' → logprob: -6.192750930786133
    7. '(lambda' → logprob: -6.567750930786133
    8. 'def' → logprob: -9.067750930786133
    9. ',key' → logprob: -9.692750930786133
    10. '   ' → logprob: -9.942750930786133

Token 148: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -7.493430894101039e-05
    2. '=' → logprob: -9.500075340270996
    3. '=_' → logprob: -19.25007438659668
    4. 'lambda' → logprob: -20.12507438659668
    5. '=
' → logprob: -20.62507438659668
    6. ' =' → logprob: -20.62507438659668
    7. '=len' → logprob: -21.37507438659668
    8. '=l' → logprob: -21.87507438659668
    9. '(lambda' → logprob: -22.25007438659668
    10. '=

' → logprob: -22.25007438659668

Token 149: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016713829711079597
    2. ' x' → logprob: -4.516713619232178
    3. 'r' → logprob: -5.516713619232178
    4. 'lambda' → logprob: -6.641713619232178
    5. 't' → logprob: -8.516714096069336
    6. 'item' → logprob: -10.391714096069336
    7. ' r' → logprob: -10.391714096069336
    8. 'a' → logprob: -11.266714096069336
    9. ' lambda' → logprob: -11.266714096069336
    10. 'e' → logprob: -11.766714096069336

Token 150: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.97155623533763e-05
    2. ':t' → logprob: -9.625089645385742
    3. 't' → logprob: -10.750089645385742
    4. ' :' → logprob: -13.125089645385742
    5. ' t' → logprob: -16.375089645385742
    6. ':
' → logprob: -17.500089645385742
    7. '_:' → logprob: -19.375089645385742
    8. ':int' → logprob: -19.500089645385742
    9. '[' → logprob: -19.625089645385742
    10. '[t' → logprob: -20.000089645385742

Token 151: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0028763189911842346
    2. ' t' → logprob: -5.877876281738281
    3. 'abs' → logprob: -9.752876281738281
    4. '(t' → logprob: -11.627876281738281
    5. ' abs' → logprob: -13.877876281738281
    6. 'float' → logprob: -14.002876281738281
    7. '   ' → logprob: -14.252876281738281
    8. 'math' → logprob: -14.252876281738281
    9. '(abs' → logprob: -15.377876281738281
    10. '(' → logprob: -15.502876281738281

Token 152: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.042758114635944366
    2. '0' → logprob: -3.2927582263946533
    3. ':' → logprob: -6.042757987976074
    4. 't' → logprob: -6.667757987976074
    5. ' ' → logprob: -8.042757987976074
    6. 'val' → logprob: -8.917757987976074
    7. '1' → logprob: -8.917757987976074
    8. ' [' → logprob: -9.167757987976074
    9. '(' → logprob: -9.292757987976074
    10. ')' → logprob: -9.292757987976074

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.215330409351736e-05
    2. '1' → logprob: -11.125041961669922
    3. '2' → logprob: -11.875041961669922
    4. 'val' → logprob: -12.250041961669922
    5. ' ' → logprob: -12.250041961669922
    6. ':' → logprob: -13.000041961669922
    7. '[' → logprob: -13.187541961669922
    8. '
' → logprob: -14.000041961669922
    9. 'value' → logprob: -14.375041961669922
    10. '   ' → logprob: -14.375041961669922

Token 154: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031818498973734677
    2. '))' → logprob: -8.62531852722168
    3. ' )' → logprob: -9.12531852722168
    4. '])' → logprob: -11.37531852722168
    5. ')
' → logprob: -11.87531852722168
    6. '})' → logprob: -12.12531852722168
    7. ')`' → logprob: -13.75031852722168
    8. '),' → logprob: -13.87531852722168
    9. '>)' → logprob: -14.37531852722168
    10. ')#' → logprob: -14.50031852722168

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4818163514137268
    2. 'for' → logprob: -1.731816291809082
    3. ' for' → logprob: -1.856816291809082
    4. 'if' → logprob: -4.606816291809082
    5. 'idx' → logprob: -5.106816291809082
    6. 'index' → logprob: -5.606816291809082
    7. ' if' → logprob: -5.606816291809082
    8. 'print' → logprob: -5.856816291809082
    9. 'import' → logprob: -6.106816291809082
    10. 'target' → logprob: -6.231816291809082

Token 156: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2923930883407593
    2. 'idx' → logprob: -1.2923930883407593
    3. 'index' → logprob: -2.042393207550049
    4. 'import' → logprob: -2.792393207550049
    5. 'prev' → logprob: -2.917393207550049
    6. 'if' → logprob: -3.042393207550049
    7. 'result' → logprob: -3.792393207550049
    8. 'i' → logprob: -3.792393207550049
    9. 'target' → logprob: -4.042393207550049
    10. 'left' → logprob: -4.792393207550049

Token 157: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6871086955070496
    2. ' for' → logprob: -1.5621087551116943
    3. 'prev' → logprob: -2.6871087551116943
    4. 'if' → logprob: -3.4371087551116943
    5. 'result' → logprob: -3.5621087551116943
    6. 'print' → logprob: -3.9371087551116943
    7. 'start' → logprob: -4.187108516693115
    8. ' prev' → logprob: -4.437108516693115
    9. 'count' → logprob: -4.937108516693115
    10. 'target' → logprob: -5.062108516693115

Token 158: ' two' (ID: 1920)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14058105647563934
    2. ' index' → logprob: -2.7655811309814453
    3. 'the' → logprob: -3.3905811309814453
    4. 'index' → logprob: -4.765581130981445
    5. ' closest' → logprob: -5.890581130981445
    6. ' next' → logprob: -5.890581130981445
    7. ' left' → logprob: -6.015581130981445
    8. ' idx' → logprob: -6.140581130981445
    9. 'left' → logprob: -6.265581130981445
    10. '   ' → logprob: -6.765581130981445

Token 159: ' ration' (ID: 74749)
  Prédit: 'closest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'closest' → logprob: -1.4246751070022583
    2. 'indices' → logprob: -2.1746749877929688
    3. 'values' → logprob: -2.4246749877929688
    4. 'vals' → logprob: -2.6746749877929688
    5. 'ration' → logprob: -2.6746749877929688
    6. 'index' → logprob: -2.9246749877929688
    7. ' closest' → logprob: -2.9246749877929688
    8. 'val' → logprob: -3.2996749877929688
    9. 'i' → logprob: -3.5496749877929688
    10. 'nearest' → logprob: -3.5496749877929688

Token 160: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.0013333364622667432
    2. 'al' → logprob: -7.251333236694336
    3. 'on' → logprob: -7.751333236694336
    4. 'ons' → logprob: -9.001333236694336
    5. 'vals' → logprob: -10.501333236694336
    6. 'onal' → logprob: -11.876333236694336
    7. '```' → logprob: -12.126333236694336
    8. '   ' → logprob: -12.501333236694336
    9. '**' → logprob: -12.751333236694336
    10. 'ion' → logprob: -12.876333236694336

Token 161: ' u' (ID: 337)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.170628309249878
    2. 'closest' → logprob: -1.670628309249878
    3. ' with' → logprob: -1.920628309249878
    4. ' that' → logprob: -1.920628309249878
    5. ' closest' → logprob: -2.420628309249878
    6. 'with' → logprob: -3.295628309249878
    7. ' for' → logprob: -4.045628547668457
    8. ',' → logprob: -4.170628547668457
    9. 'that' → logprob: -4.420628547668457
    10. '<|end|>' → logprob: -5.170628547668457

Token 162: '/v' (ID: 10315)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004042902495712042
    2. ' ,' → logprob: -6.379043102264404
    3. ' and' → logprob: -7.379043102264404
    4. ' =' → logprob: -7.754043102264404
    5. '=' → logprob: -8.504042625427246
    6. '_,' → logprob: -8.629042625427246
    7. ',val' → logprob: -9.129042625427246
    8. '_val' → logprob: -9.129042625427246
    9. '[' → logprob: -9.254042625427246
    10. '<|end|>' → logprob: -9.254042625427246

Token 163: ' <' (ID: 464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03634699061512947
    2. '   ' → logprob: -4.786346912384033
    3. ' and' → logprob: -4.786346912384033
    4. 'and' → logprob: -5.786346912384033
    5. ' ,' → logprob: -5.911346912384033
    6. ' that' → logprob: -6.161346912384033
    7. '#' → logprob: -6.161346912384033
    8. 'for' → logprob: -6.661346912384033
    9. ' for' → logprob: -6.786346912384033
    10. ' =' → logprob: -7.036346912384033

Token 164: ' sqrt' (ID: 44237)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6732137799263
    2. ' w' → logprob: -1.5482137203216553
    3. ' u' → logprob: -2.4232137203216553
    4. 'u' → logprob: -2.5482137203216553
    5. '<|end|>' → logprob: -3.9232137203216553
    6. '=' → logprob: -4.173213958740234
    7. ' =' → logprob: -4.298213958740234
    8. ' ' → logprob: -4.673213958740234
    9. ' p' → logprob: -4.923213958740234
    10. '<|end|>' → logprob: -5.173213958740234

Token 165: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0005778160993941128
    2. '_' → logprob: -8.500577926635742
    3. 'p' → logprob: -8.500577926635742
    4. '(' → logprob: -8.875577926635742
    5. '```' → logprob: -11.500577926635742
    6. '(p' → logprob: -12.250577926635742
    7. ')' → logprob: -12.625577926635742
    8. '(_' → logprob: -12.875577926635742
    9. '_val' → logprob: -13.250577926635742
    10. '_)' → logprob: -14.625577926635742

Token 166: ' <' (ID: 464)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03423072770237923
    2. 'i' → logprob: -4.784230709075928
    3. ',' → logprob: -4.909230709075928
    4. ' for' → logprob: -5.284230709075928
    5. 'for' → logprob: -5.409230709075928
    6. ' i' → logprob: -6.159230709075928
    7. 'index' → logprob: -6.534230709075928
    8. 'idx' → logprob: -6.909230709075928
    9. ' and' → logprob: -7.034230709075928
    10. '
' → logprob: -7.909230709075928

Token 167: ' x' (ID: 1215)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1320897340774536
    2. ' w' → logprob: -2.132089614868164
    3. '=' → logprob: -6.382089614868164
    4. 'x' → logprob: -6.882089614868164
    5. '=w' → logprob: -7.382089614868164
    6. 's' → logprob: -7.882089614868164
    7. 'r' → logprob: -7.882089614868164
    8. ' x' → logprob: -8.382089614868164
    9. '(w' → logprob: -8.632089614868164
    10. ' ' → logprob: -9.382089614868164

Token 168: '/y' (ID: 52534)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10910788178443909
    2. '_val' → logprob: -3.3591079711914062
    3. 's' → logprob: -3.8591079711914062
    4. '=' → logprob: -4.859107971191406
    5. 'val' → logprob: -4.984107971191406
    6. ' =' → logprob: -5.109107971191406
    7. '_vals' → logprob: -5.234107971191406
    8. '_,' → logprob: -5.359107971191406
    9. '_values' → logprob: -6.109107971191406
    10. ',val' → logprob: -6.234107971191406

Token 169: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.627906322479248
    2. '   ' → logprob: -1.627906322479248
    3. ' for' → logprob: -2.752906322479248
    4. 'for' → logprob: -2.752906322479248
    5. 'i' → logprob: -3.252906322479248
    6. 'left' → logprob: -3.377906322479248
    7. ',' → logprob: -4.252906322479248
    8. 'idx' → logprob: -4.252906322479248
    9. 'found' → logprob: -4.877906322479248
    10. 'index' → logprob: -5.002906322479248

Token 170: ' no' (ID: 860)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.23856791853904724
    2. 'x' → logprob: -3.11356782913208
    3. 'prev' → logprob: -3.86356782913208
    4. ' u' → logprob: -4.11356782913208
    5. 'abs' → logprob: -4.36356782913208
    6. '0' → logprob: -4.61356782913208
    7. 'difference' → logprob: -4.61356782913208
    8. '#' → logprob: -4.86356782913208
    9. 'diff' → logprob: -5.11356782913208
    10. 'i' → logprob: -5.11356782913208

Token 171: ' rational' (ID: 43286)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.34733614325523376
    2. 'other' → logprob: -2.7223360538482666
    3. ' intermediate' → logprob: -2.8473360538482666
    4. ' other' → logprob: -3.5973360538482666
    5. 'r' → logprob: -3.9723360538482666
    6. 't' → logprob: -3.9723360538482666
    7. '(' → logprob: -4.097336292266846
    8. 'in' → logprob: -4.347336292266846
    9. 'ration' → logprob: -4.347336292266846
    10. '#' → logprob: -4.597336292266846

Token 172: ' in' (ID: 306)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -1.1601941585540771
    2. 's' → logprob: -1.2851941585540771
    3. ' in' → logprob: -1.7851941585540771
    4. 'between' → logprob: -2.535194158554077
    5. '<|end|>' → logprob: -2.785194158554077
    6. 'in' → logprob: -3.285194158554077
    7. '_between' → logprob: -4.785194396972656
    8. ')' → logprob: -5.035194396972656
    9. ' number' → logprob: -5.535194396972656
    10. 'r' → logprob: -5.660194396972656

Token 173: ' between' (ID: 2870)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.00860251672565937
    2. ' between' → logprob: -6.258602619171143
    3. '-between' → logprob: -6.258602619171143
    4. 'ration' → logprob: -6.383602619171143
    5. 'r' → logprob: -6.508602619171143
    6. '```' → logprob: -7.633602619171143
    7. 'the' → logprob: -8.258602142333984
    8. '[' → logprob: -8.258602142333984
    9. '   ' → logprob: -8.633602142333984
    10. '-' → logprob: -9.758602142333984

Token 174: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6050805449485779
    2. 'for' → logprob: -1.9800806045532227
    3. 'u' → logprob: -2.4800806045532227
    4. 'i' → logprob: -2.6050806045532227
    5. 'low' → logprob: -2.8550806045532227
    6. '#' → logprob: -3.8550806045532227
    7. '
' → logprob: -3.9800806045532227
    8. 'l' → logprob: -3.9800806045532227
    9. 'found' → logprob: -4.730080604553223
    10. 'index' → logprob: -5.230080604553223

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6709443926811218
    2. 'for' → logprob: -1.7959444522857666
    3. 'i' → logprob: -2.1709444522857666
    4. ' for' → logprob: -2.9209444522857666
    5. 'left' → logprob: -3.1709444522857666
    6. 'found' → logprob: -3.4209444522857666
    7. 'prev' → logprob: -4.1709442138671875
    8. 'low' → logprob: -4.4209442138671875
    9. 'idx' → logprob: -5.0459442138671875
    10. 'u' → logprob: -5.1709442138671875

Token 176: ' left' (ID: 3561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31908515095710754
    2. 'left' (adapté à ' left') → logprob: -1.5690851211547852
    3. 'low' → logprob: -3.819085121154785
    4. 'found' → logprob: -4.069085121154785
    5. 'idx' → logprob: -4.944085121154785
    6. 'index' → logprob: -5.069085121154785
    7. 'i' → logprob: -5.819085121154785
    8. 'l' → logprob: -6.069085121154785
    9. 'prev' → logprob: -6.444085121154785
    10. 'pos' → logprob: -6.694085121154785

Token 177: ' =' (ID: 314)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.5196090936660767
    2. '_idx' → logprob: -1.7696090936660767
    3. ',' → logprob: -1.8946090936660767
    4. ' =' → logprob: -2.519608974456787
    5. '=' → logprob: -5.769608974456787
    6. 'index' → logprob: -8.519609451293945
    7. '_i' → logprob: -8.769609451293945
    8. 'Index' → logprob: -9.019609451293945
    9. '_ix' → logprob: -9.394609451293945
    10. '_ind' → logprob: -10.269609451293945

Token 178: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004741383716464043
    2. '-' → logprob: -5.629741191864014
    3. 'None' → logprob: -6.879741191864014
    4. ' ' → logprob: -9.254741668701172
    5. ' -' → logprob: -12.254741668701172
    6. ' None' → logprob: -12.504741668701172
    7. 'len' → logprob: -13.379741668701172
    8. '[' → logprob: -13.754741668701172
    9. '(None' → logprob: -13.754741668701172
    10. '(' → logprob: -14.004741668701172

Token 179: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0691593661904335
    2. ' right' → logprob: -3.6941592693328857
    3. '   ' → logprob: -4.069159507751465
    4. 'for' → logprob: -4.319159507751465
    5. ',right' → logprob: -5.819159507751465
    6. '<|end|>' → logprob: -5.819159507751465
    7. ' for' → logprob: -6.319159507751465
    8. ',' → logprob: -6.569159507751465
    9. '[right' → logprob: -7.444159507751465
    10. '
' → logprob: -7.819159507751465

Token 180: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014133892022073269
    2. ' right' → logprob: -4.764133930206299
    3. '   ' → logprob: -5.389133930206299
    4. 'for' → logprob: -7.264133930206299
    5. ',right' → logprob: -9.26413345336914
    6. ',' → logprob: -10.01413345336914
    7. ' for' → logprob: -10.13913345336914
    8. '	right' → logprob: -10.51413345336914
    9. '.right' → logprob: -11.88913345336914
    10. '[right' → logprob: -12.13913345336914

Token 181: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.002187852980569005
    2. 'for' → logprob: -6.127187728881836
    3. ' right' → logprob: -13.002187728881836
    4. 'found' → logprob: -15.377187728881836
    5. 'left' → logprob: -16.627187728881836
    6. '	right' → logprob: -17.002187728881836
    7. ' for' → logprob: -17.252187728881836
    8. '    
' → logprob: -17.377187728881836
    9. 'Right' → logprob: -17.377187728881836
    10. 'middle' → logprob: -17.377187728881836

Token 182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815614476799965
    2. ' =' → logprob: -4.018156051635742
    3. '=None' → logprob: -12.018156051635742
    4. '<|end|>' → logprob: -16.143156051635742
    5. ')' → logprob: -16.268156051635742
    6. '=

' → logprob: -16.893156051635742
    7. ' ' → logprob: -17.768156051635742
    8. ',' → logprob: -17.768156051635742
    9. '=}' → logprob: -17.768156051635742
    10. ' None' → logprob: -18.643156051635742

Token 183: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0003969455719925463
    2. '(None' → logprob: -8.500396728515625
    3. ' None' → logprob: -9.250396728515625
    4. 'ration' → logprob: -9.750396728515625
    5. 'len' → logprob: -11.000396728515625
    6. '0' → logprob: -11.375396728515625
    7. 'float' → logprob: -12.375396728515625
    8. '(' → logprob: -12.500396728515625
    9. 'math' → logprob: -13.500396728515625
    10. '1' → logprob: -14.625396728515625

Token 184: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32962119579315186
    2. '   ' → logprob: -1.9546211957931519
    3. ' for' → logprob: -2.2046213150024414
    4. '
' → logprob: -3.5796213150024414
    5. '<|end|>' → logprob: -7.579621315002441
    6. '    
' → logprob: -8.079621315002441
    7. 'i' → logprob: -9.829621315002441
    8. '```' → logprob: -10.329621315002441
    9. '  
' → logprob: -10.954621315002441
    10. ',' → logprob: -11.079621315002441

Token 185: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018905073404312134
    2. ' for' → logprob: -4.143905162811279
    3. '   ' → logprob: -6.518905162811279
    4. 'i' → logprob: -6.893905162811279
    5. 'n' → logprob: -9.393904685974121
    6. '```' → logprob: -9.393904685974121
    7. '<|end|>' → logprob: -9.643904685974121
    8. '
' → logprob: -10.143904685974121
    9. 'left' → logprob: -10.518904685974121
    10. 'found' → logprob: -11.018904685974121

Token 186: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.060365608893335e-05
    2. 'i' → logprob: -10.875041007995605
    3. 'found' → logprob: -11.375041007995605
    4. 'low' → logprob: -12.500041007995605
    5. ' for' → logprob: -12.875041007995605
    6. 'l' → logprob: -13.125041007995605
    7. 'left' → logprob: -14.000041007995605
    8. 'prev' → logprob: -14.000041007995605
    9. 'start' → logprob: -16.62504005432129
    10. 'best' → logprob: -17.62504005432129

Token 187: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21203234791755676
    2. 'val' → logprob: -1.8370323181152344
    3. ' i' → logprob: -3.7120323181152344
    4. ' val' → logprob: -5.212032318115234
    5. 'idx' → logprob: -8.087032318115234
    6. '(i' → logprob: -8.212032318115234
    7. 't' → logprob: -8.212032318115234
    8. '(val' → logprob: -8.462032318115234
    9. 'r' → logprob: -8.587032318115234
    10. '_,' → logprob: -9.087032318115234

Token 188: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062092941254377365
    2. 'in' → logprob: -2.8120930194854736
    3. ',' → logprob: -9.437092781066895
    4. ' ' → logprob: -10.187092781066895
    5. '	in' → logprob: -12.812092781066895
    6. ' ,' → logprob: -14.562092781066895
    7. '+' → logprob: -14.562092781066895
    8. ')' → logprob: -14.687092781066895
    9. '  ' → logprob: -14.687092781066895
    10. 'n' → logprob: -14.812092781066895

Token 189: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '(range' → logprob: -18.875911712646484
    4. '   ' → logprob: -19.375911712646484
    5. ' ' → logprob: -19.875911712646484
    6. '  ' → logprob: -20.875911712646484
    7. '	range' → logprob: -20.875911712646484
    8. '
' → logprob: -22.000911712646484
    9. '```' → logprob: -22.375911712646484
    10. '

' → logprob: -22.625911712646484

Token 190: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38697725534439087
    2. '(len' → logprob: -1.136977195739746
    3. 'len' → logprob: -9.261977195739746
    4. '1' → logprob: -11.886977195739746
    5. ' len' → logprob: -12.761977195739746
    6. '   ' → logprob: -14.386977195739746
    7. ' ' → logprob: -14.511977195739746
    8. ' (' → logprob: -15.636977195739746
    9. '[len' → logprob: -16.386978149414062
    10. '(n' → logprob: -16.886978149414062

Token 191: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.750000953674316
    3. 'ration' → logprob: -14.750000953674316
    4. 'r' → logprob: -15.750000953674316
    5. ' (' → logprob: -16.500001907348633
    6. ')' → logprob: -16.875001907348633
    7. '(s' → logprob: -17.750001907348633
    8. '

' → logprob: -18.250001907348633
    9. 's' → logprob: -18.750001907348633
    10. '   ' → logprob: -18.750001907348633

Token 192: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.00020103710994590074
    2. 'ration' → logprob: -9.125201225280762
    3. 'at' → logprob: -10.750201225280762
    4. 'ations' → logprob: -10.750201225280762
    5. 'tion' → logprob: -10.875201225280762
    6. 'ational' → logprob: -11.125201225280762
    7. '   ' → logprob: -12.625201225280762
    8. ')' → logprob: -12.750201225280762
    9. 'ati' → logprob: -13.875201225280762
    10. 'r' → logprob: -13.875201225280762

Token 193: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.0016466111410409212
    2. 'ation' → logprob: -7.626646518707275
    3. 's' → logprob: -7.751646518707275
    4. 'ls' → logprob: -8.001646995544434
    5. 'ials' → logprob: -9.251646995544434
    6. 'r' → logprob: -9.376646995544434
    7. '[' → logprob: -10.626646995544434
    8. '**' → logprob: -10.626646995544434
    9. 'tion' → logprob: -10.626646995544434
    10. 'ration' → logprob: -10.751646995544434

Token 194: ')):
' (ID: 22530)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3929668366909027
    2. '-' → logprob: -1.142966866493225
    3. ')' → logprob: -5.1429667472839355
    4. ')-' → logprob: -9.267967224121094
    5. '   ' → logprob: -10.142967224121094
    6. ' ' → logprob: -10.392967224121094
    7. ')):
' → logprob: -10.892967224121094
    8. '()' → logprob: -10.892967224121094
    9. '):
' → logprob: -11.642967224121094
    10. '):' → logprob: -11.892967224121094

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01331481896340847
    2. '   ' → logprob: -4.638314723968506
    3. ' if' → logprob: -6.138314723968506
    4. ':' → logprob: -7.138314723968506
    5. 'if' → logprob: -8.638315200805664
    6. ',' → logprob: -8.888315200805664
    7. '<|end|>' → logprob: -9.138315200805664
    8. ':
' → logprob: -10.638315200805664
    9. '):
' → logprob: -10.763315200805664
    10. '    ' → logprob: -10.763315200805664

Token 196: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6092052459716797
    2. '       ' → logprob: -1.4842052459716797
    3. ' if' → logprob: -1.6092052459716797
    4. 'val' → logprob: -3.7342052459716797
    5. ' val' → logprob: -5.73420524597168
    6. '   ' → logprob: -6.10920524597168
    7. 'v' → logprob: -10.35920524597168
    8. ',' → logprob: -11.10920524597168
    9. 'value' → logprob: -11.10920524597168
    10. '	if' → logprob: -11.48420524597168

Token 197: ' ration' (ID: 74749)
  Prédit: 'ration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ration' → logprob: -0.31596705317497253
    2. ' ration' → logprob: -1.315967082977295
    3. 'rat' → logprob: -6.940967082977295
    4. 'r' → logprob: -7.690967082977295
    5. ' rational' → logprob: -7.690967082977295
    6. 'i' → logprob: -7.815967082977295
    7. ' i' → logprob: -9.190966606140137
    8. '   ' → logprob: -9.440966606140137
    9. ' ' → logprob: -9.565966606140137
    10. 'ratio' → logprob: -10.065966606140137

Token 198: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.00019126241386402398
    2. 'ats' → logprob: -9.750191688537598
    3. '[' → logprob: -9.875191688537598
    4. 'ials' → logprob: -11.250191688537598
    5. '**' → logprob: -11.625191688537598
    6. 'r' → logprob: -12.000191688537598
    7. '   ' → logprob: -12.125191688537598
    8. 's' → logprob: -12.125191688537598
    9. 'ation' → logprob: -12.250191688537598
    10. '>' → logprob: -12.375191688537598

Token 199: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.011373155459296e-05
    2. '[' → logprob: -10.625030517578125
    3. ' [' → logprob: -12.500030517578125
    4. '[I' → logprob: -13.875030517578125
    5. ')[' → logprob: -14.750030517578125
    6. '\[' → logprob: -15.500030517578125
    7. '[
' → logprob: -16.375030517578125
    8. '```' → logprob: -16.625030517578125
    9. '
' → logprob: -17.000030517578125
    10. '][' → logprob: -17.250030517578125

Token 200: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35196182131767273
    2. '][' → logprob: -1.2269618511199951
    3. ')[' → logprob: -5.726961612701416
    4. '>[' → logprob: -9.351962089538574
    5. '0' → logprob: -10.226962089538574
    6. ' [' → logprob: -10.601962089538574
    7. ' ][' → logprob: -10.726962089538574
    8. '}[' → logprob: -11.101962089538574
    9. '
' → logprob: -11.601962089538574
    10. '   ' → logprob: -11.601962089538574

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003529814421199262
    2. '1' → logprob: -8.12535285949707
    3. '2' → logprob: -10.00035285949707
    4. '
' → logprob: -12.37535285949707
    5. '-' → logprob: -13.25035285949707
    6. '```' → logprob: -14.12535285949707
    7. ' ' → logprob: -14.18785285949707
    8. '

' → logprob: -14.18785285949707
    9. '   ' → logprob: -14.68785285949707
    10. '[' → logprob: -14.93785285949707

Token 202: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11386281996965408
    2. ')' → logprob: -3.2388627529144287
    3. '<' → logprob: -3.2388627529144287
    4. ' >' → logprob: -3.9888627529144287
    5. '>' → logprob: -4.738862991333008
    6. ' >=' → logprob: -6.863862991333008
    7. '>=' → logprob: -8.238862991333008
    8. ')<' → logprob: -8.613862991333008
    9. ')>' → logprob: -9.488862991333008
    10. ' ' → logprob: -9.488862991333008

Token 203: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.23003876209259033
    2. ' <' → logprob: -1.6050387620925903
    3. '<s' → logprob: -5.980038642883301
    4. '>=' → logprob: -6.855038642883301
    5. '>' → logprob: -7.730038642883301
    6. '<p' → logprob: -8.7300386428833
    7. ' >=' → logprob: -8.9800386428833
    8. '==' → logprob: -9.6050386428833
    9. ')' → logprob: -10.2300386428833
    10. ' >' → logprob: -10.3550386428833

Token 204: ' sqrt' (ID: 44237)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.10021336376667023
    2. ' sqrt' → logprob: -2.3502132892608643
    3. '   ' → logprob: -13.600213050842285
    4. 's' → logprob: -13.725213050842285
    5. ' ' → logprob: -13.850213050842285
    6. 'math' → logprob: -14.100213050842285
    7. '.sqrt' → logprob: -14.350213050842285
    8. 'qrt' → logprob: -14.475213050842285
    9. '=s' → logprob: -14.725213050842285
    10. '	s' → logprob: -15.225213050842285

Token 205: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.9361264946837764e-07
    2. 'p' → logprob: -17.0
    3. '_' → logprob: -18.0
    4. '\' → logprob: -18.75
    5. '_q' → logprob: -19.5
    6. ' _' → logprob: -19.625
    7. '```' → logprob: -19.625
    8. '_r' → logprob: -19.875
    9. '_i' → logprob: -20.0
    10. '   ' → logprob: -20.625

Token 206: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43681880831718445
    2. ':' → logprob: -1.0618188381195068
    3. ' and' → logprob: -4.936818599700928
    4. '):
' → logprob: -7.936818599700928
    5. '       ' → logprob: -8.061819076538086
    6. 'and' → logprob: -9.561819076538086
    7. '           ' → logprob: -10.436819076538086
    8. ' :
' → logprob: -10.561819076538086
    9. ':

' → logprob: -10.686819076538086
    10. '   ' → logprob: -10.811819076538086

Token 207: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7286482453346252
    2. ':' → logprob: -1.4786481857299805
    3. ':
' → logprob: -1.8536481857299805
    4. ' and' → logprob: -2.6036481857299805
    5. '           ' → logprob: -2.8536481857299805
    6. '   ' → logprob: -7.9786481857299805
    7. '):
' → logprob: -8.22864818572998
    8. 'and' → logprob: -8.72864818572998
    9. ',' → logprob: -9.35364818572998
    10. ' :
' → logprob: -9.72864818572998

Token 208: ' right' (ID: 1849)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.07463368028402328
    2. ' left' → logprob: -3.1996335983276367
    3. 'right' (adapté à ' right') → logprob: -4.074633598327637
    4. '           ' → logprob: -4.699633598327637
    5. '       ' → logprob: -6.074633598327637
    6. '   ' → logprob: -6.574633598327637
    7. ' right' → logprob: -7.199633598327637
    8. '	left' → logprob: -7.824633598327637
    9. '               ' → logprob: -9.699633598327637
    10. 'if' → logprob: -9.824633598327637

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975245751440525
    2. '=' → logprob: -3.529752492904663
    3. ',' → logprob: -14.154752731323242
    4. ')' → logprob: -14.779752731323242
    5. ' ' → logprob: -15.029752731323242
    6. ' =)' → logprob: -16.029752731323242
    7. '   ' → logprob: -16.154752731323242
    8. '<|end|>' → logprob: -16.404752731323242
    9. '    ' → logprob: -16.904752731323242
    10. ' =
' → logprob: -16.904752731323242

Token 210: ' ration' (ID: 74749)
  Prédit: 'ration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ration' → logprob: -0.02983645536005497
    2. ' ration' → logprob: -3.529836416244507
    3. 'rat' → logprob: -9.779836654663086
    4. 'r' → logprob: -11.029836654663086
    5. ' rational' → logprob: -11.904836654663086
    6. 'i' → logprob: -12.779836654663086
    7. 'ratio' → logprob: -13.029836654663086
    8. ' ' → logprob: -14.654836654663086
    9. '(r' → logprob: -15.904836654663086
    10. '   ' → logprob: -15.904836654663086

Token 211: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -6.392202976712724e-06
    2. 's' → logprob: -13.750006675720215
    3. 'ats' → logprob: -13.750006675720215
    4. 'ols' → logprob: -13.875006675720215
    5. '[' → logprob: -14.250006675720215
    6. 'ls' → logprob: -14.500006675720215
    7. '(' → logprob: -15.000006675720215
    8. '**' → logprob: -15.125006675720215
    9. 'ation' → logprob: -15.750006675720215
    10. 'c' → logprob: -15.750006675720215

Token 212: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.214019307051785e-05
    2. '[' → logprob: -10.625032424926758
    3. '```' → logprob: -13.375032424926758
    4. '[
' → logprob: -13.500032424926758
    5. '[(' → logprob: -14.375032424926758
    6. '(i' → logprob: -14.375032424926758
    7. 's' → logprob: -14.375032424926758
    8. '[[' → logprob: -14.875032424926758
    9. ')[' → logprob: -14.875032424926758
    10. 'i' → logprob: -14.875032424926758

Token 213: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35998642444610596
    2. ']
' → logprob: -1.234986424446106
    3. ')' → logprob: -4.734986305236816
    4. ')
' → logprob: -6.359986305236816
    5. '])' → logprob: -8.109986305236816
    6. ']

' → logprob: -8.109986305236816
    7. ')]' → logprob: -9.484986305236816
    8. ']
' → logprob: -9.609986305236816
    9. ' ]' → logprob: -10.234986305236816
    10. '-' → logprob: -10.234986305236816

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005474337958730757
    2. '       ' → logprob: -7.625547409057617
    3. 'left' → logprob: -10.750547409057617
    4. ',' → logprob: -11.500547409057617
    5. '		' → logprob: -12.125547409057617
    6. ' left' → logprob: -12.250547409057617
    7. '   ' → logprob: -12.375547409057617
    8. 'break' → logprob: -13.250547409057617
    9. 'and' → logprob: -13.375547409057617
    10. ' and' → logprob: -13.500547409057617

Token 215: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.06824930012226105
    2. ' left' → logprob: -3.068249225616455
    3. 'if' → logprob: -4.068249225616455
    4. ' if' → logprob: -6.443249225616455
    5. '   ' → logprob: -8.068249702453613
    6. '           ' → logprob: -8.693249702453613
    7. '       ' → logprob: -9.318249702453613
    8. 'break' → logprob: -9.818249702453613
    9. '	left' → logprob: -9.943249702453613
    10. 'for' → logprob: -10.318249702453613

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42876264452934265
    2. '=' → logprob: -1.053762674331665
    3. '<|end|>' → logprob: -10.428762435913086
    4. ' ' → logprob: -11.178762435913086
    5. ')' → logprob: -11.553762435913086
    6. 's' → logprob: -13.553762435913086
    7. '<|end|>' → logprob: -13.928762435913086
    8. '=i' → logprob: -13.928762435913086
    9. ',' → logprob: -14.053762435913086
    10. ' =)' → logprob: -14.678762435913086

Token 217: ' ration' (ID: 74749)
  Prédit: 'ration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ration' → logprob: -0.00045807508286088705
    2. ' ration' → logprob: -7.875458240509033
    3. 'r' → logprob: -9.500457763671875
    4. '(r' → logprob: -13.500457763671875
    5. ' rational' → logprob: -14.500457763671875
    6. 'rat' → logprob: -14.750457763671875
    7. '(' → logprob: -15.000457763671875
    8. 'ratio' → logprob: -15.875457763671875
    9. ' ' → logprob: -16.250457763671875
    10. 'RATION' → logprob: -16.375457763671875

Token 218: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.3402700424194336
    2. '[i' → logprob: -2.2152700424194336
    3. 'ration' → logprob: -2.9652700424194336
    4. '[' → logprob: -3.0902700424194336
    5. 'r' → logprob: -3.5902700424194336
    6. 'i' → logprob: -4.590270042419434
    7. '[-' → logprob: -4.965270042419434
    8. '-' → logprob: -5.090270042419434
    9. 'or' → logprob: -5.340270042419434
    10. 'ors' → logprob: -5.340270042419434

Token 219: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.750007629394531
    3. 'i' → logprob: -12.875007629394531
    4. ' [' → logprob: -13.750007629394531
    5. '[
' → logprob: -15.250007629394531
    6. '
' → logprob: -15.625007629394531
    7. '][' → logprob: -16.25000762939453
    8. '[I' → logprob: -17.12500762939453
    9. '[int' → logprob: -17.50000762939453
    10. ' i' → logprob: -17.50000762939453

Token 220: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001512004528194666
    2. ' -' → logprob: -6.501512050628662
    3. '[' → logprob: -11.751511573791504
    4. '1' → logprob: -14.126511573791504
    5. 'index' → logprob: -15.376511573791504
    6. '–' → logprob: -15.376511573791504
    7. '[-' → logprob: -15.501511573791504
    8. '−' → logprob: -16.37651252746582
    9. 'i' → logprob: -16.50151252746582
    10. 'x' → logprob: -17.50151252746582

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -19.3125
    5. '۱' → logprob: -20.0625
    6. ']' → logprob: -20.125
    7. ')' → logprob: -20.3125
    8. '-' → logprob: -20.6875
    9. '2' → logprob: -20.75
    10. '
' → logprob: -20.875

Token 222: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018033420201390982
    2. ']' → logprob: -7.126803398132324
    3. ')' → logprob: -7.501803398132324
    4. '<|end|>' → logprob: -8.126803398132324
    5. '       ' → logprob: -9.751803398132324
    6. '               ' → logprob: -10.501803398132324
    7. '          ' → logprob: -11.626803398132324
    8. ')
' → logprob: -11.876803398132324
    9. '            
' → logprob: -12.001803398132324
    10. '<|end|>' → logprob: -12.251803398132324

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.2961512513575144e-05
    2. '       ' → logprob: -11.625022888183594
    3. '<|end|>' → logprob: -11.750022888183594
    4. '   ' → logprob: -13.250022888183594
    5. '<|end|>' → logprob: -13.625022888183594
    6. ',' → logprob: -14.000022888183594
    7. '		' → logprob: -14.375022888183594
    8. '	       ' → logprob: -14.625022888183594
    9. '            
' → logprob: -14.875022888183594
    10. '               ' → logprob: -15.125022888183594

Token 224: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2861346900463104
    2. 'break' (adapté à ' break') → logprob: -2.036134719848633
    3. ' break' → logprob: -2.661134719848633
    4. '       ' → logprob: -3.161134719848633
    5. '   ' → logprob: -5.161134719848633
    6. '	break' → logprob: -8.161134719848633
    7. '
' → logprob: -10.536134719848633
    8. '               ' → logprob: -12.411134719848633
    9. '     ' → logprob: -13.286134719848633
    10. '	       ' → logprob: -13.786134719848633

Token 225: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061185057274997234
    2. 'print' → logprob: -5.256118297576904
    3. '
' → logprob: -8.506118774414062
    4. 'for' → logprob: -8.756118774414062
    5. 'u' → logprob: -9.006118774414062
    6. '    
' → logprob: -9.256118774414062
    7. '       ' → logprob: -9.631118774414062
    8. 'if' → logprob: -9.631118774414062
    9. 'result' → logprob: -10.131118774414062
    10. 'while' → logprob: -10.381118774414062

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3649338483810425
    2. 'print' → logprob: -1.2399338483810425
    3. 'for' → logprob: -5.614933967590332
    4. 'u' → logprob: -5.739933967590332
    5. 'left' → logprob: -5.989933967590332
    6. 'next' → logprob: -6.614933967590332
    7. '       ' → logprob: -6.739933967590332
    8. 'while' → logprob: -6.864933967590332
    9. 'if' → logprob: -7.114933967590332
    10. ' print' → logprob: -7.739933967590332

Token 227: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.27729278802871704
    2. 'u' → logprob: -2.1522927284240723
    3. '   ' → logprob: -2.6522927284240723
    4. 'if' → logprob: -3.9022927284240723
    5. 'num' → logprob: -4.902292728424072
    6. 'left' → logprob: -4.902292728424072
    7. 'numer' → logprob: -5.152292728424072
    8. 'best' → logprob: -5.402292728424072
    9. 'l' → logprob: -6.027292728424072
    10. 'x' → logprob: -6.277292728424072

Token 228: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.6933770775794983
    2. '(left' → logprob: -0.6933770775794983
    3. '(' → logprob: -9.193377494812012
    4. 'left' → logprob: -10.318377494812012
    5. '("{}' → logprob: -10.568377494812012
    6. '("{' → logprob: -10.818377494812012
    7. '(int' → logprob: -11.068377494812012
    8. 'f' → logprob: -11.318377494812012
    9. '((' → logprob: -11.818377494812012
    10. '(str' → logprob: -12.193377494812012

Token 229: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.0048889582976698875
    2. '"' → logprob: -6.129889011383057
    3. ''{' → logprob: -6.504889011383057
    4. '{' → logprob: -6.754889011383057
    5. '("{' → logprob: -10.754888534545898
    6. '({' → logprob: -12.004888534545898
    7. '")' → logprob: -13.754888534545898
    8. '(' → logprob: -13.754888534545898
    9. '"The' → logprob: -13.754888534545898
    10. ''' → logprob: -13.879888534545898

Token 230: 'right' (ID: 2460)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -2.2961512513575144e-05
    2. 'int' → logprob: -11.625022888183594
    3. 'right' → logprob: -11.750022888183594
    4. ' left' → logprob: -13.125022888183594
    5. '{' → logprob: -13.875022888183594
    6. 'r' → logprob: -14.375022888183594
    7. '[left' → logprob: -14.375022888183594
    8. '(left' → logprob: -14.625022888183594
    9. 'math' → logprob: -15.125022888183594
    10. '}' → logprob: -15.250022888183594

Token 231: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3544423381972592e-05
    2. '}[' → logprob: -12.12501335144043
    3. '}' → logprob: -12.25001335144043
    4. ' [' → logprob: -13.25001335144043
    5. '   ' → logprob: -15.37501335144043
    6. '```' → logprob: -15.50001335144043
    7. '0' → logprob: -15.62501335144043
    8. ':' → logprob: -16.12501335144043
    9. ' ' → logprob: -16.37501335144043
    10. 'x' → logprob: -16.62501335144043

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.813969957875088e-05
    2. 'x' → logprob: -10.125067710876465
    3. '0' → logprob: -11.250067710876465
    4. '2' → logprob: -11.750067710876465
    5. '
' → logprob: -12.937567710876465
    6. '[' → logprob: -13.750067710876465
    7. '

' → logprob: -14.437567710876465
    8. '```' → logprob: -14.875067710876465
    9. '
' → logprob: -15.187567710876465
    10. '   ' → logprob: -15.312567710876465

Token 233: ']' (ID: 60)
  Prédit: '}/{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}/{' → logprob: -0.039061300456523895
    2. '}' → logprob: -3.4140613079071045
    3. '}/' → logprob: -5.664061069488525
    4. '}{' → logprob: -6.664061069488525
    5. '/' → logprob: -8.664061546325684
    6. '},{' → logprob: -9.039061546325684
    7. '}:{' → logprob: -9.039061546325684
    8. ' }' → logprob: -9.789061546325684
    9. '}")' → logprob: -10.164061546325684
    10. '}/${' → logprob: -10.414061546325684

Token 234: '}/{' (ID: 46407)
  Prédit: '}/{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}/{' → logprob: -0.20883211493492126
    2. '}' → logprob: -1.7088321447372437
    3. '}{' → logprob: -5.583832263946533
    4. '/' → logprob: -6.083832263946533
    5. '}/' → logprob: -6.958832263946533
    6. ' /' → logprob: -9.083831787109375
    7. ' }' → logprob: -9.083831787109375
    8. '}")' → logprob: -9.083831787109375
    9. '}:{' → logprob: -11.583831787109375
    10. '},{' → logprob: -11.708831787109375

Token 235: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02325037121772766
    2. '{' → logprob: -3.7732503414154053
    3. ' right' → logprob: -12.898250579833984
    4. '}{' → logprob: -14.023250579833984
    5. '[right' → logprob: -14.148250579833984
    6. 'left' → logprob: -15.273250579833984
    7. '}' → logprob: -15.273250579833984
    8. '	right' → logprob: -15.523250579833984
    9. ' {' → logprob: -15.773250579833984
    10. '"{' → logprob: -17.023250579833984

Token 236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.034592388459714e-06
    2. '```' → logprob: -13.125005722045898
    3. '}[' → logprob: -14.000005722045898
    4. '}' → logprob: -14.000005722045898
    5. '{' → logprob: -14.125005722045898
    6. '2' → logprob: -14.750005722045898
    7. ')}' → logprob: -15.625005722045898
    8. '   ' → logprob: -15.625005722045898
    9. '1' → logprob: -16.0000057220459
    10. '<|end|>' → logprob: -16.5000057220459

Token 237: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.525848925113678
    2. '2' → logprob: -0.900848925113678
    3. '0' → logprob: -6.400848865509033
    4. '[' → logprob: -7.025848865509033
    5. 'right' → logprob: -9.025849342346191
    6. '   ' → logprob: -10.900849342346191
    7. '```' → logprob: -11.650849342346191
    8. ' ' → logprob: -11.900849342346191
    9. '{' → logprob: -12.400849342346191
    10. '
' → logprob: -12.525849342346191

Token 238: ']}' (ID: 28000)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.010457555763423443
    2. '}' → logprob: -4.885457515716553
    3. ']}' → logprob: -5.885457515716553
    4. ')}' → logprob: -11.135457992553711
    5. ' }' → logprob: -11.385457992553711
    6. '}}' → logprob: -11.510457992553711
    7. '")}' → logprob: -12.260457992553711
    8. '"}' → logprob: -12.385457992553711
    9. '}")
' → logprob: -12.385457992553711
    10. ']' → logprob: -12.510457992553711

Token 239: ' {' (ID: 354)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.1952158212661743
    2. ' {' → logprob: -1.3202158212661743
    3. ' <' → logprob: -2.1952157020568848
    4. '{' → logprob: -2.4452157020568848
    5. '}")' → logprob: -2.5702157020568848
    6. '}' → logprob: -2.6952157020568848
    7. ' -' → logprob: -2.8202157020568848
    8. '-' → logprob: -4.570215702056885
    9. '>' → logprob: -5.570215702056885
    10. ' >' → logprob: -5.820215702056885

Token 240: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.048658449202775955
    2. 'f' → logprob: -3.0486583709716797
    3. '}{' → logprob: -10.04865837097168
    4. '}' → logprob: -11.29865837097168
    5. '[left' → logprob: -11.92365837097168
    6. ' left' → logprob: -12.17365837097168
    7. ' f' → logprob: -13.04865837097168
    8. 'print' → logprob: -14.92365837097168
    9. '{' → logprob: -15.04865837097168
    10. '	left' → logprob: -15.17365837097168

Token 241: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.375538163818419e-05
    2. '}[' → logprob: -9.500083923339844
    3. ')[' → logprob: -12.500083923339844
    4. ' [' → logprob: -13.250083923339844
    5. '}' → logprob: -13.875083923339844
    6. '][' → logprob: -14.500083923339844
    7. '   ' → logprob: -14.875083923339844
    8. '```' → logprob: -15.000083923339844
    9. ')}' → logprob: -15.250083923339844
    10. '[
' → logprob: -15.625083923339844

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '0' → logprob: -12.500003814697266
    3. ' ' → logprob: -14.750003814697266
    4. '[' → logprob: -16.750003814697266
    5. '
' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '```' → logprob: -18.125003814697266
    8. '][' → logprob: -18.250003814697266
    9. ']' → logprob: -19.500003814697266
    10. '``' → logprob: -20.187503814697266

Token 243: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00032509511220268905
    2. ']}' → logprob: -8.875325202941895
    3. ']/' → logprob: -9.125325202941895
    4. '"]' → logprob: -10.375325202941895
    5. '}/{' → logprob: -11.250325202941895
    6. '[' → logprob: -11.625325202941895
    7. '][' → logprob: -12.125325202941895
    8. ' ]' → logprob: -12.125325202941895
    9. '']' → logprob: -12.750325202941895
    10. ']}"' → logprob: -13.000325202941895

Token 244: '}/{' (ID: 46407)
  Prédit: '}/{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}/{' → logprob: -0.6838462948799133
    2. '/' → logprob: -1.1838462352752686
    3. '}/' → logprob: -1.6838462352752686
    4. '}' → logprob: -6.058846473693848
    5. ')' → logprob: -8.308846473693848
    6. '}/${' → logprob: -8.808846473693848
    7. '}{' → logprob: -8.933846473693848
    8. ''' → logprob: -9.058846473693848
    9. ')/' → logprob: -9.058846473693848
    10. '"/' → logprob: -9.308846473693848

Token 245: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -7.226628895296017e-06
    2. ' left' → logprob: -11.875007629394531
    3. '[left' → logprob: -15.375007629394531
    4. '(left' → logprob: -17.50000762939453
    5. '	left' → logprob: -17.50000762939453
    6. 'right' → logprob: -18.62500762939453
    7. '.left' → logprob: -18.87500762939453
    8. ':left' → logprob: -19.37500762939453
    9. '<|end|>' → logprob: -19.62500762939453
    10. ',left' → logprob: -19.75000762939453

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.225525364279747
    2. '2' → logprob: -1.6005253791809082
    3. ']' → logprob: -9.47552490234375
    4. '1' → logprob: -11.10052490234375
    5. '}' → logprob: -12.60052490234375
    6. '```' → logprob: -12.72552490234375
    7. '   ' → logprob: -12.85052490234375
    8. '][' → logprob: -12.97552490234375
    9. '[
' → logprob: -12.97552490234375
    10. '(' → logprob: -13.60052490234375

Token 247: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00044127836008556187
    2. '1' → logprob: -7.750441074371338
    3. '0' → logprob: -11.625441551208496
    4. '[' → logprob: -14.250441551208496
    5. ' ' → logprob: -14.875441551208496
    6. '```' → logprob: -15.000441551208496
    7. '   ' → logprob: -16.12544059753418
    8. '
' → logprob: -16.25044059753418
    9. '-' → logprob: -16.25044059753418
    10. ']' → logprob: -17.62544059753418

Token 248: ']}' (ID: 28000)
  Prédit: ']}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']}' → logprob: -0.2835124433040619
    2. '}")' → logprob: -1.4085124731063843
    3. '}' → logprob: -6.283512592315674
    4. ']' → logprob: -8.033512115478516
    5. ')}' → logprob: -9.658512115478516
    6. ']}"' → logprob: -9.908512115478516
    7. '}}' → logprob: -11.283512115478516
    8. '}]' → logprob: -11.533512115478516
    9. '")}' → logprob: -12.033512115478516
    10. '>}' → logprob: -12.158512115478516

Token 249: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.012733307667076588
    2. ')' → logprob: -4.387733459472656
    3. '}")' → logprob: -9.262733459472656
    4. ')")' → logprob: -9.637733459472656
    5. ' ")' → logprob: -10.262733459472656
    6. '<|end|>' → logprob: -11.262733459472656
    7. '")}' → logprob: -12.512733459472656
    8. '}' → logprob: -12.762733459472656
    9. '")
' → logprob: -13.012733459472656
    10. '')' → logprob: -13.262733459472656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 247
Tokens correctement prédits (1ère position, stricte): 119
Tokens correctement prédits (1ère position, avec adaptation): 127
Tokens correctement prédits (top 10): 215
Précision stricte (1ère position): 48.18%
Précision adaptée (1ère position): 51.42%
Précision (top 10): 87.04%
================================================================================
