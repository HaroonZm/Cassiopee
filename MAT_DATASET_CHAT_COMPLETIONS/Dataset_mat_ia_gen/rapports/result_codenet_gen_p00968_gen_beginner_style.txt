================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s0 = input()

def tokenize(s):
    tokens = []
    i = 0
    while i < len(s):
        if s[i].isdigit():
            num_start = i
            while i < len(s) and s[i].isdigit():
                i += 1
            tokens.append(int(s[num_start:i]))
        else:
            tokens.append(s[i])
            i += 1
    return tokens

def compare_tokens(a, b):
    la = len(a)
    lb = len(b)
    for i in range(min(la, lb)):
        if type(a[i]) == int and type(b[i]) == int:
            if a[i] < b[i]:
                return -1
            elif a[i] > b[i]:
                return 1
        elif type(a[i]) == int and type(b[i]) == str:
            return -1
        elif type(a[i]) == str and type(b[i]) == int:
            return 1
        else:
            if a[i] < b[i]:
                return -1
            elif a[i] > b[i]:
                return 1
    # all matched so far, shorter comes first
    if la < lb:
        return -1
    elif la > lb:
        return 1
    else:
        return 0

s0_tokens = tokenize(s0)

for _ in range(n):
    s = input()
    s_tokens = tokenize(s)
    c = compare_tokens(s_tokens, s0_tokens)
    if c == -1:
        print("-")
    else:
        print("+")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000133098365040496
    2. '(n' → logprob: -10.000133514404297
    3. '```' → logprob: -10.750133514404297
    4. '`' → logprob: -10.875133514404297
    5. '(input' → logprob: -11.125133514404297
    6. ''' → logprob: -11.750133514404297
    7. '('' → logprob: -11.875133514404297
    8. '(
' → logprob: -12.625133514404297
    9. '()' → logprob: -12.875133514404297
    10. '("("' → logprob: -13.250133514404297

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12178683280944824
    2. ')' → logprob: -2.3717868328094482
    3. '()' → logprob: -4.121787071228027
    4. '())' → logprob: -5.621787071228027
    5. '(
' → logprob: -7.746787071228027
    6. '('' → logprob: -8.746787071228027
    7. '```' → logprob: -8.746787071228027
    8. '(()' → logprob: -9.121787071228027
    9. '("("' → logprob: -9.246787071228027
    10. '(

' → logprob: -9.746787071228027

Token 5: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9201469421386719
    2. 'if' → logprob: -1.1701469421386719
    3. 'for' → logprob: -2.295146942138672
    4. 's' → logprob: -2.420146942138672
    5. ' ' → logprob: -3.795146942138672
    6. ''' → logprob: -4.420146942138672
    7. 'x' → logprob: -4.670146942138672
    8. ')' → logprob: -4.920146942138672
    9. 'a' → logprob: -5.045146942138672
    10. '`' → logprob: -5.295146942138672

Token 6: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3957578241825104
    2. '.' → logprob: -2.0207579135894775
    3. 'um' → logprob: -2.7707579135894775
    4. ' =' → logprob: -3.3957579135894775
    5. 'trip' → logprob: -3.5207579135894775
    6. 'tr' → logprob: -4.145757675170898
    7. '=' → logprob: -4.770757675170898
    8. 't' → logprob: -5.270757675170898
    9. '+' → logprob: -5.645757675170898
    10. '[i' → logprob: -5.645757675170898

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008477824740111828
    2. '+' → logprob: -6.133477687835693
    3. 's' → logprob: -6.258477687835693
    4. '=' → logprob: -6.758477687835693
    5. '[]' → logprob: -6.883477687835693
    6. '[:]' → logprob: -8.008478164672852
    7. '(' → logprob: -8.133478164672852
    8. '[s' → logprob: -8.758478164672852
    9. ' =' → logprob: -8.758478164672852
    10. '\[' → logprob: -8.758478164672852

Token 8: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0344709157943726
    2. 'input' → logprob: -1.1594709157943726
    3. '""' → logprob: -2.159471035003662
    4. ' ""' → logprob: -2.909471035003662
    5. '"' → logprob: -3.159471035003662
    6. ' ' → logprob: -3.659471035003662
    7. '0' → logprob: -3.909471035003662
    8. ' ''' → logprob: -4.034471035003662
    9. ' "' → logprob: -4.159471035003662
    10. ''' → logprob: -4.159471035003662

Token 9: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014433091506361961
    2. '()' → logprob: -5.389432907104492
    3. ''' → logprob: -5.764432907104492
    4. '('' → logprob: -5.889432907104492
    5. '"' → logprob: -6.389432907104492
    6. ')' → logprob: -7.014432907104492
    7. '`' → logprob: -8.014432907104492
    8. '("("' → logprob: -8.264432907104492
    9. '(
' → logprob: -8.764432907104492
    10. '```' → logprob: -8.889432907104492

Token 10: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07937154173851013
    2. 'if' → logprob: -3.829371452331543
    3. 'for' → logprob: -3.954371452331543
    4. 'i' → logprob: -4.204371452331543
    5. 'd' → logprob: -5.454371452331543
    6. 'f' → logprob: -5.704371452331543
    7. 'count' → logprob: -5.954371452331543
    8. 'n' → logprob: -6.079371452331543
    9. 'dp' → logprob: -6.579371452331543
    10. 'p' → logprob: -6.704371452331543

Token 11: ' tokenize' (ID: 192720)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20217590034008026
    2. ' s' → logprob: -2.3271758556365967
    3. '_' → logprob: -2.9521758556365967
    4. ' _' → logprob: -3.9521758556365967
    5. ' f' → logprob: -5.452176094055176
    6. ' space' → logprob: -5.577176094055176
    7. 's' → logprob: -6.702176094055176
    8. '_s' → logprob: -7.577176094055176
    9. '(' → logprob: -7.827176094055176
    10. ' solve' → logprob: -7.827176094055176

Token 12: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000913370808120817
    2. '_' → logprob: -7.125913143157959
    3. '(s' → logprob: -9.875913619995117
    4. 's' → logprob: -10.375913619995117
    5. '('' → logprob: -12.000913619995117
    6. '_(' → logprob: -12.500913619995117
    7. ' (' → logprob: -12.750913619995117
    8. '(_' → logprob: -13.250913619995117
    9. '_s' → logprob: -13.375913619995117
    10. '("("' → logprob: -13.500913619995117

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002023804932832718
    2. ')' → logprob: -6.252023696899414
    3. '):
' → logprob: -9.752023696899414
    4. ' ):' → logprob: -11.502023696899414
    5. ',' → logprob: -11.627023696899414
    6. ':' → logprob: -11.752023696899414
    7. 's' → logprob: -12.252023696899414
    8. ')：' → logprob: -13.877023696899414
    9. ''):' → logprob: -14.502023696899414
    10. '[' → logprob: -14.752023696899414

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00784805603325367
    2. 'tokens' → logprob: -5.257848262786865
    3. ' tokens' → logprob: -6.257848262786865
    4. ' return' → logprob: -8.382847785949707
    5. '```' → logprob: -8.632847785949707
    6. 'return' → logprob: -9.632847785949707
    7. '    ' → logprob: -9.757847785949707
    8. '_tokens' → logprob: -10.382847785949707
    9. '    
' → logprob: -10.632847785949707
    10. ' ' → logprob: -10.632847785949707

Token 15: ' tokens' (ID: 20290)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.092355728149414
    2. ' tokens' → logprob: -1.092355728149414
    3. '   ' → logprob: -1.842355728149414
    4. 'tokens' (adapté à ' tokens') → logprob: -2.217355728149414
    5. 'return' → logprob: -2.842355728149414
    6. ' for' → logprob: -7.217355728149414
    7. ' import' → logprob: -7.467355728149414
    8. ' i' → logprob: -7.592355728149414
    9. '    
' → logprob: -8.092355728149414
    10. '    ' → logprob: -8.217355728149414

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017759765032678843
    2. '=' → logprob: -6.376775741577148
    3. ' ' → logprob: -10.501775741577148
    4. ')' → logprob: -10.751775741577148
    5. '=[]' → logprob: -12.126775741577148
    6. '_' → logprob: -12.376775741577148
    7. 's' → logprob: -12.751775741577148
    8. '[:]' → logprob: -13.251775741577148
    9. '   ' → logprob: -13.376775741577148
    10. ',' → logprob: -13.626775741577148

Token 17: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4778359830379486
    2. ' []' → logprob: -0.977836012840271
    3. 's' → logprob: -5.8528361320495605
    4. ' s' → logprob: -7.1028361320495605
    5. '[s' → logprob: -10.602835655212402
    6. '[]}' → logprob: -11.727835655212402
    7. ' ' → logprob: -11.977835655212402
    8. '[])' → logprob: -12.352835655212402
    9. '[' → logprob: -12.602835655212402
    10. '   ' → logprob: -12.852835655212402

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.603803277015686
    2. '    ' → logprob: -1.353803277015686
    3. ' ' → logprob: -2.6038031578063965
    4. '    
' → logprob: -3.1038031578063965
    5. '     
' → logprob: -3.6038031578063965
    6. ' for' → logprob: -4.4788031578063965
    7. 'i' → logprob: -4.7288031578063965
    8. ' i' → logprob: -4.8538031578063965
    9. ' 
' → logprob: -5.3538031578063965
    10. 'for' → logprob: -5.6038031578063965

Token 19: ' i' (ID: 575)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.771499514579773
    2. ' current' → logprob: -1.521499514579773
    3. 'for' → logprob: -2.3964996337890625
    4. 'i' (adapté à ' i') → logprob: -2.5214996337890625
    5. ' for' → logprob: -2.6464996337890625
    6. ' i' → logprob: -2.8964996337890625
    7. '   ' → logprob: -5.1464996337890625
    8. 'word' → logprob: -5.2714996337890625
    9. 'token' → logprob: -5.2714996337890625
    10. 'pos' → logprob: -6.1464996337890625

Token 20: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.25256243348121643
    2. '=' → logprob: -1.877562403678894
    3. 'n' → logprob: -3.5025625228881836
    4. ' =' → logprob: -4.127562522888184
    5. 's' → logprob: -4.627562522888184
    6. '<|end|>' → logprob: -5.252562522888184
    7. ' ' → logprob: -5.877562522888184
    8. '+' → logprob: -6.252562522888184
    9. ' +=' → logprob: -6.877562522888184
    10. 'nt' → logprob: -7.002562522888184

Token 21: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889176905155182
    2. ' ' → logprob: -2.5788917541503906
    3. '1' → logprob: -13.32889175415039
    4. '۰' → logprob: -17.07889175415039
    5. ' ' → logprob: -17.26639175415039
    6. ')' → logprob: -17.32889175415039
    7. '2' → logprob: -17.51639175415039
    8. '=' → logprob: -17.82889175415039
    9. 'int' → logprob: -17.95389175415039
    10. '```' → logprob: -17.95389175415039

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.612634362885728e-05
    2. ' ' → logprob: -9.500076293945312
    3. '1' → logprob: -13.875076293945312
    4. '=' → logprob: -17.000076293945312
    5. '```' → logprob: -17.250076293945312
    6. 'int' → logprob: -17.875076293945312
    7. '[' → logprob: -17.937576293945312
    8. 's' → logprob: -17.937576293945312
    9. '   ' → logprob: -17.937576293945312
    10. '`' → logprob: -17.937576293945312

Token 23: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.3602628707885742
    2. '   ' → logprob: -1.4852628707885742
    3. 'while' → logprob: -1.6102628707885742
    4. ' ' → logprob: -1.6102628707885742
    5. '<|end|>' → logprob: -2.360262870788574
    6. '  ' → logprob: -5.110262870788574
    7. '<|end|>' → logprob: -5.610262870788574
    8. '	while' → logprob: -5.860262870788574
    9. ')' → logprob: -5.860262870788574
    10. '    ' → logprob: -6.110262870788574

Token 25: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.12736009061336517
    2. ' while' → logprob: -2.1273601055145264
    3. '```' → logprob: -8.627360343933105
    4. '   ' → logprob: -9.002360343933105
    5. 'n' → logprob: -9.752360343933105
    6. 'While' → logprob: -10.252360343933105
    7. '	while' → logprob: -11.502360343933105
    8. ' ' → logprob: -12.002360343933105
    9. '<|end|>' → logprob: -12.252360343933105
    10. 'length' → logprob: -12.877360343933105

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07889232039451599
    2. 'i' → logprob: -2.578892230987549
    3. ' ' → logprob: -13.328892707824707
    4. ' True' → logprob: -14.953892707824707
    5. '	i' → logprob: -15.328892707824707
    6. '(i' → logprob: -16.20389175415039
    7. '  ' → logprob: -16.32889175415039
    8. 'True' → logprob: -16.45389175415039
    9. '   ' → logprob: -17.32889175415039
    10. '    ' → logprob: -17.57889175415039

Token 27: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.35243743658065796
    2. '<' → logprob: -1.2274374961853027
    3. '<len' → logprob: -5.602437496185303
    4. '<n' → logprob: -9.227437019348145
    5. ' ' → logprob: -9.602437019348145
    6. '<=' → logprob: -10.477437019348145
    7. ' <=' → logprob: -10.852437019348145
    8. '<size' → logprob: -10.977437019348145
    9. '<int' → logprob: -11.227437019348145
    10. '<class' → logprob: -11.977437019348145

Token 28: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5759428143501282
    2. 'len' → logprob: -0.8259428143501282
    3. '=len' → logprob: -13.325942993164062
    4. '(len' → logprob: -13.825942993164062
    5. '	len' → logprob: -15.325942993164062
    6. '<len' → logprob: -15.450942993164062
    7. '[len' → logprob: -15.700942993164062
    8. ',len' → logprob: -17.200942993164062
    9. '   ' → logprob: -17.325942993164062
    10. 'n' → logprob: -18.325942993164062

Token 29: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006311862962320447
    2. '(' → logprob: -7.375631332397461
    3. 's' → logprob: -12.500631332397461
    4. ')' → logprob: -14.375631332397461
    5. '(tokens' → logprob: -15.750631332397461
    6. '(n' → logprob: -16.75063133239746
    7. ' (' → logprob: -17.62563133239746
    8. '(
' → logprob: -17.75063133239746
    9. '(token' → logprob: -18.37563133239746
    10. '(i' → logprob: -18.50063133239746

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06109335646033287
    2. ')' → logprob: -3.186093330383301
    3. '):
' → logprob: -4.061093330383301
    4. ' and' → logprob: -7.686093330383301
    5. ' ):' → logprob: -9.4360933303833
    6. 'and' → logprob: -9.5610933303833
    7. ':' → logprob: -10.0610933303833
    8. '   ' → logprob: -11.3110933303833
    9. '):
' → logprob: -11.4360933303833
    10. '):

' → logprob: -11.8110933303833

Token 31: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1862887442111969
    2. '    ' → logprob: -2.936288833618164
    3. ' if' → logprob: -2.936288833618164
    4. '       ' → logprob: -3.186288833618164
    5. '   ' → logprob: -4.561288833618164
    6. 'if' → logprob: -5.061288833618164
    7. '  ' → logprob: -6.311288833618164
    8. '<|end|>' → logprob: -6.811288833618164
    9. '     ' → logprob: -7.686288833618164
    10. 's' → logprob: -7.686288833618164

Token 32: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3397138714790344
    2. 'if' (adapté à ' if') → logprob: -1.5897138118743896
    3. ' ' → logprob: -2.8397138118743896
    4. '   ' → logprob: -4.839714050292969
    5. '    ' → logprob: -5.089714050292969
    6. 'c' → logprob: -5.339714050292969
    7. '       ' → logprob: -6.339714050292969
    8. ' c' → logprob: -6.464714050292969
    9. '  ' → logprob: -6.964714050292969
    10. 't' → logprob: -7.714714050292969

Token 33: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03366044908761978
    2. 's' → logprob: -3.408660411834717
    3. ' ' → logprob: -11.408660888671875
    4. ' not' → logprob: -12.658660888671875
    5. '	s' → logprob: -16.033660888671875
    6. ' ' → logprob: -16.408660888671875
    7. ''s' → logprob: -16.658660888671875
    8. '(s' → logprob: -17.158660888671875
    9. 'not' → logprob: -17.408660888671875
    10. '<|end|>' → logprob: -17.408660888671875

Token 34: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.73183855926618e-05
    2. '[' → logprob: -9.500077247619629
    3. ' [' → logprob: -14.750077247619629
    4. 'i' → logprob: -14.750077247619629
    5. '[int' → logprob: -15.000077247619629
    6. '```' → logprob: -15.375077247619629
    7. '[
' → logprob: -16.000078201293945
    8. '[in' → logprob: -16.000078201293945
    9. '.' → logprob: -16.125078201293945
    10. '[index' → logprob: -16.250078201293945

Token 35: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.46491560339927673
    2. '.is' → logprob: -1.0899156332015991
    3. ' ==' → logprob: -3.8399155139923096
    4. ' in' → logprob: -4.964915752410889
    5. '==' → logprob: -5.839915752410889
    6. ' .' → logprob: -6.839915752410889
    7. 'isdigit' → logprob: -6.839915752410889
    8. ' is' → logprob: -7.464915752410889
    9. 'is' → logprob: -7.589915752410889
    10. 'iss' → logprob: -8.21491527557373

Token 36: 'isdigit' (ID: 187412)
  Prédit: 'iss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.0141125014051795
    2. 'isdigit' → logprob: -4.51411247253418
    3. 'isal' → logprob: -6.26411247253418
    4. 'is' → logprob: -6.76411247253418
    5. ' is' → logprob: -13.88911247253418
    6. 'isas' → logprob: -14.63911247253418
    7. 'isl' → logprob: -14.88911247253418
    8. 'strip' → logprob: -16.01411247253418
    9. 'isd' → logprob: -16.01411247253418
    10. 'startswith' → logprob: -16.38911247253418

Token 37: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.033729955554008484
    2. '()' → logprob: -3.4087300300598145
    3. '(' → logprob: -10.158729553222656
    4. '():
' → logprob: -10.533729553222656
    5. '())' → logprob: -12.283729553222656
    6. '()==' → logprob: -12.408729553222656
    7. '):' → logprob: -12.783729553222656
    8. ' ():' → logprob: -13.033729553222656
    9. '()>' → logprob: -13.658729553222656
    10. '()):
' → logprob: -13.908729553222656

Token 38: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39606809616088867
    2. '       ' → logprob: -1.5210680961608887
    3. ' tokens' → logprob: -3.6460680961608887
    4. '        ' → logprob: -3.8960680961608887
    5. ')' → logprob: -4.021068096160889
    6. 'tokens' → logprob: -4.396068096160889
    7. ' ' → logprob: -5.271068096160889
    8. ' token' → logprob: -5.396068096160889
    9. 'token' → logprob: -5.646068096160889
    10. '            ' → logprob: -6.021068096160889

Token 39: ' num' (ID: 2269)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.8882580995559692
    2. ' num' → logprob: -1.1382580995559692
    3. 'num' (adapté à ' num') → logprob: -2.1382579803466797
    4. 'j' → logprob: -2.7632579803466797
    5. ' start' → logprob: -3.3882579803466797
    6. '           ' → logprob: -3.6382579803466797
    7. ' number' → logprob: -4.13825798034668
    8. 'start' → logprob: -5.51325798034668
    9. ' token' → logprob: -6.01325798034668
    10. 'number' → logprob: -6.76325798034668

Token 40: '_start' (ID: 10949)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7279508709907532
    2. ' =' → logprob: -0.7279508709907532
    3. 's' → logprob: -3.9779508113861084
    4. '_start' → logprob: -5.2279510498046875
    5. '_str' → logprob: -6.3529510498046875
    6. '_token' → logprob: -6.4779510498046875
    7. '=""' → logprob: -6.8529510498046875
    8. '  ' → logprob: -6.8529510498046875
    9. '_len' → logprob: -7.3529510498046875
    10. 'start' → logprob: -7.7279510498046875

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3485430181026459
    2. ' =' → logprob: -1.2235430479049683
    3. '=i' → logprob: -9.473543167114258
    4. ' ' → logprob: -11.223543167114258
    5. ')' → logprob: -12.973543167114258
    6. '   ' → logprob: -14.098543167114258
    7. '=
' → logprob: -14.473543167114258
    8. '=int' → logprob: -14.473543167114258
    9. 'i' → logprob: -14.723543167114258
    10. '<|end|>' → logprob: -15.223543167114258

Token 42: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0788901224732399
    2. ' i' → logprob: -2.578890085220337
    3. '	i' → logprob: -15.828889846801758
    4. ' ' → logprob: -16.453889846801758
    5. '   ' → logprob: -17.828889846801758
    6. '```' → logprob: -18.078889846801758
    7. ')i' → logprob: -18.453889846801758
    8. '(i' → logprob: -19.078889846801758
    9. '=i' → logprob: -19.453889846801758
    10. 'I' → logprob: -19.703889846801758

Token 43: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5043578147888184
    2. 'i' → logprob: -1.5043578147888184
    3. 'while' → logprob: -2.8793578147888184
    4. '       ' → logprob: -3.1293578147888184
    5. '<|end|>' → logprob: -4.004357814788818
    6. ' while' → logprob: -4.129357814788818
    7. ' i' → logprob: -4.129357814788818
    8. '<|end|>' → logprob: -4.254357814788818
    9. '
' → logprob: -6.129357814788818
    10. ' ' → logprob: -6.379357814788818

Token 44: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05379601567983627
    2. 'i' → logprob: -3.5537960529327393
    3. 'while' → logprob: -4.42879581451416
    4. ' while' → logprob: -4.92879581451416
    5. '       ' → logprob: -6.05379581451416
    6. ' i' → logprob: -6.55379581451416
    7. '            
' → logprob: -7.80379581451416
    8. '   ' → logprob: -9.05379581451416
    9. '+' → logprob: -9.80379581451416
    10. '
' → logprob: -10.55379581451416

Token 45: ' while' (ID: 2049)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3721241056919098
    2. ' while' → logprob: -2.122124195098877
    3. '           ' → logprob: -2.247124195098877
    4. 'while' (adapté à ' while') → logprob: -2.747124195098877
    5. ' i' → logprob: -3.872124195098877
    6. '       ' → logprob: -9.122123718261719
    7. ' ' → logprob: -9.497123718261719
    8. '   ' → logprob: -10.622123718261719
    9. '            
' → logprob: -10.872123718261719
    10. '	while' → logprob: -10.872123718261719

Token 46: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6932744383811951
    2. ' i' → logprob: -0.6932744383811951
    3. 's' → logprob: -9.56827449798584
    4. ' s' → logprob: -10.31827449798584
    5. ' ' → logprob: -11.19327449798584
    6. '   ' → logprob: -13.19327449798584
    7. '	i' → logprob: -13.19327449798584
    8. 'isdigit' → logprob: -13.19327449798584
    9. '(i' → logprob: -13.31827449798584
    10. ' (' → logprob: -13.94327449798584

Token 47: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08984609693288803
    2. '<' → logprob: -2.839846134185791
    3. '+' → logprob: -4.089846134185791
    4. '<len' → logprob: -4.714846134185791
    5. '<n' → logprob: -6.964846134185791
    6. ' +' → logprob: -8.214845657348633
    7. '<s' → logprob: -8.714845657348633
    8. ' ' → logprob: -8.839845657348633
    9. '[' → logprob: -9.214845657348633
    10. '<i' → logprob: -10.589845657348633

Token 48: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16022737324237823
    2. ' len' → logprob: -1.9102274179458618
    3. '(len' → logprob: -13.78522777557373
    4. '<len' → logprob: -14.03522777557373
    5. '=len' → logprob: -14.91022777557373
    6. ' ' → logprob: -14.91022777557373
    7. '	len' → logprob: -15.03522777557373
    8. '[len' → logprob: -15.91022777557373
    9. '<|end|>' → logprob: -16.285226821899414
    10. 'length' → logprob: -16.785226821899414

Token 49: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.014176673255860806
    2. 's' → logprob: -4.264176845550537
    3. '(' → logprob: -11.514176368713379
    4. ' s' → logprob: -13.014176368713379
    5. ' (' → logprob: -14.764176368713379
    6. ')' → logprob: -15.389176368713379
    7. '```' → logprob: -16.514177322387695
    8. ' ' → logprob: -16.764177322387695
    9. 'and' → logprob: -16.889177322387695
    10. 'n' → logprob: -17.514177322387695

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053745854645967484
    2. 'and' → logprob: -3.303745746612549
    3. ' and' → logprob: -4.178745746612549
    4. 's' → logprob: -9.053746223449707
    5. ' )' → logprob: -9.053746223449707
    6. '[' → logprob: -11.803746223449707
    7. ' ' → logprob: -12.303746223449707
    8. '")' → logprob: -12.303746223449707
    9. '   ' → logprob: -13.178746223449707
    10. '')' → logprob: -13.303746223449707

Token 51: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5759434103965759
    2. ' and' → logprob: -0.8259434103965759
    3. ' ' → logprob: -12.700942993164062
    4. '   ' → logprob: -14.575942993164062
    5. '	and' → logprob: -15.450942993164062
    6. '    ' → logprob: -17.075942993164062
    7. '        ' → logprob: -17.575942993164062
    8. ' и' → logprob: -17.575942993164062
    9. '-' → logprob: -17.700942993164062
    10. '```' → logprob: -17.825942993164062

Token 52: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2519335150718689
    2. ' s' → logprob: -1.5019335746765137
    3. '(s' → logprob: -12.751933097839355
    4. ' (' → logprob: -15.126933097839355
    5. '<s' → logprob: -15.126933097839355
    6. ' ' → logprob: -15.251933097839355
    7. '	s' → logprob: -15.876933097839355
    8. '>s' → logprob: -16.001934051513672
    9. 'isdigit' → logprob: -16.376934051513672
    10. '   ' → logprob: -16.626934051513672

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.750003814697266
    3. '[num' → logprob: -16.125003814697266
    4. 'i' → logprob: -16.625003814697266
    5. '[index' → logprob: -17.250003814697266
    6. '[
' → logprob: -17.250003814697266
    7. '```' → logprob: -17.375003814697266
    8. '[I' → logprob: -17.750003814697266
    9. 'isdigit' → logprob: -18.375003814697266
    10. '[ind' → logprob: -19.000003814697266

Token 54: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.667155921459198
    2. '].' → logprob: -1.0421559810638428
    3. '.is' → logprob: -2.0421559810638428
    4. ').' → logprob: -5.917155742645264
    5. 'isdigit' → logprob: -7.042155742645264
    6. ' .' → logprob: -7.667155742645264
    7. '>.' → logprob: -9.167156219482422
    8. '}.' → logprob: -9.417156219482422
    9. '[' → logprob: -9.792156219482422
    10. '   ' → logprob: -10.792156219482422

Token 55: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -1.9361264946837764e-07
    2. 'isd' → logprob: -16.75
    3. 'digit' → logprob: -18.375
    4. ' is' → logprob: -19.875
    5. 'iss' → logprob: -20.875
    6. 'isal' → logprob: -22.25
    7. 'rstrip' → logprob: -22.75
    8. '```' → logprob: -22.875
    9. 'startswith' → logprob: -23.5
    10. '.' → logprob: -23.625

Token 56: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007755214814096689
    2. '()' → logprob: -5.007755279541016
    3. '():
' → logprob: -6.882755279541016
    4. '()):
' → logprob: -12.507755279541016
    5. '():
' → logprob: -12.757755279541016
    6. '():

' → logprob: -13.257755279541016
    7. ' ():' → logprob: -14.007755279541016
    8. '()>' → logprob: -14.132755279541016
    9. '()==' → logprob: -14.382755279541016
    10. ':' → logprob: -14.632755279541016

Token 57: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14816518127918243
    2. '           ' → logprob: -2.398165225982666
    3. ' i' → logprob: -3.648165225982666
    4. 'i' → logprob: -4.023165225982666
    5. '   ' → logprob: -6.148165225982666
    6. '       ' → logprob: -8.273164749145508
    7. '                   ' → logprob: -9.023164749145508
    8. ',i' → logprob: -9.773164749145508
    9. ' ' → logprob: -10.148164749145508
    10. ',' → logprob: -10.523164749145508

Token 58: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.3869073987007141
    2. ' i' → logprob: -1.1369073390960693
    3. '               ' → logprob: -11.136907577514648
    4. '           ' → logprob: -11.636907577514648
    5. '   ' → logprob: -11.886907577514648
    6. ' ' → logprob: -12.886907577514648
    7. '                   ' → logprob: -13.136907577514648
    8. '	i' → logprob: -13.886907577514648
    9. ',i' → logprob: -16.13690757751465
    10. '```' → logprob: -16.13690757751465

Token 59: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20221689343452454
    2. ' +=' → logprob: -1.7022168636322021
    3. '+' → logprob: -7.202217102050781
    4. '=' → logprob: -10.452217102050781
    5. ']+=' → logprob: -11.827217102050781
    6. '+='' → logprob: -12.327217102050781
    7. ')' → logprob: -12.827217102050781
    8. 'i' → logprob: -13.327217102050781
    9. '```' → logprob: -13.327217102050781
    10. '<|end|>' → logprob: -13.327217102050781

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07888989895582199
    2. ' ' → logprob: -2.578889846801758
    3. '<|end|>' → logprob: -16.578889846801758
    4. '```' → logprob: -16.953889846801758
    5. '   ' → logprob: -17.078889846801758
    6. '<|end|>' → logprob: -18.703889846801758
    7. '  ' → logprob: -19.016389846801758
    8. 's' → logprob: -19.266389846801758
    9. '+' → logprob: -19.453889846801758
    10. ' ' → logprob: -19.641389846801758

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -21.125
    4. '１' → logprob: -22.375
    5. '   ' → logprob: -22.375
    6. '۱' → logprob: -22.8125
    7. '१' → logprob: -23.4375
    8. '১' → logprob: -23.4375
    9. '0' → logprob: -23.9375
    10. '  ' → logprob: -24.0625

Token 62: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00942596048116684
    2. ' tokens' → logprob: -5.134426116943359
    3. 'tokens' → logprob: -6.259426116943359
    4. ')' → logprob: -6.884426116943359
    5. '       ' → logprob: -8.13442611694336
    6. '               ' → logprob: -9.50942611694336
    7. '            ' → logprob: -10.75942611694336
    8. '(tokens' → logprob: -10.88442611694336
    9. '.tokens' → logprob: -11.00942611694336
    10. '
' → logprob: -11.00942611694336

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007857873104512691
    2. ' tokens' → logprob: -5.507857799530029
    3. '       ' → logprob: -6.257857799530029
    4. 'tokens' → logprob: -6.382857799530029
    5. '               ' → logprob: -10.007858276367188
    6. ')' → logprob: -10.507858276367188
    7. '            
' → logprob: -11.382858276367188
    8. '          ' → logprob: -11.757858276367188
    9. '<|end|>' → logprob: -11.757858276367188
    10. '```' → logprob: -12.007858276367188

Token 64: ' tokens' (ID: 20290)
  Prédit: ' tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.08295318484306335
    2. 'tokens' (adapté à ' tokens') → logprob: -3.0829532146453857
    3. '           ' → logprob: -3.4579532146453857
    4. ' num' → logprob: -7.332952976226807
    5. 'num' → logprob: -7.332952976226807
    6. '       ' → logprob: -7.582952976226807
    7. ' token' → logprob: -8.707953453063965
    8. 'token' → logprob: -9.207953453063965
    9. '               ' → logprob: -9.582953453063965
    10. '            
' → logprob: -10.707953453063965

Token 65: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011983246076852083
    2. '.' → logprob: -6.7511982917785645
    3. 'append' → logprob: -11.376198768615723
    4. '.Append' → logprob: -12.001198768615723
    5. '.extend' → logprob: -12.251198768615723
    6. ' .' → logprob: -13.376198768615723
    7. '.app' → logprob: -13.501198768615723
    8. ').' → logprob: -14.251198768615723
    9. 'Append' → logprob: -14.376198768615723
    10. '_append' → logprob: -14.876198768615723

Token 66: '(int' (ID: 2742)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.04110914468765259
    2. '(int' → logprob: -3.291109085083008
    3. '(' → logprob: -5.791109085083008
    4. '((' → logprob: -13.041109085083008
    5. 's' → logprob: -13.041109085083008
    6. ' (' → logprob: -13.291109085083008
    7. '('' → logprob: -13.541109085083008
    8. 'int' → logprob: -14.916109085083008
    9. '(float' → logprob: -15.666109085083008
    10. '(i' → logprob: -15.791109085083008

Token 67: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0010494812158867717
    2. '(' → logprob: -6.876049518585205
    3. 's' → logprob: -11.126049041748047
    4. ')' → logprob: -13.626049041748047
    5. ' (' → logprob: -15.001049041748047
    6. '(
' → logprob: -15.376049041748047
    7. '(

' → logprob: -16.626049041748047
    8. '('' → logprob: -16.876049041748047
    9. ')s' → logprob: -17.376049041748047
    10. ')(' → logprob: -18.126049041748047

Token 68: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -2.045823566731997e-05
    2. '[s' → logprob: -11.125020027160645
    3. '[' → logprob: -12.625020027160645
    4. 'num' → logprob: -13.375020027160645
    5. '```' → logprob: -15.750020027160645
    6. '[token' → logprob: -16.00002098083496
    7. ' [' → logprob: -16.12502098083496
    8. ' num' → logprob: -16.62502098083496
    9. '	num' → logprob: -17.00002098083496
    10. 's' → logprob: -17.00002098083496

Token 69: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.5451681974809617e-05
    2. 'start' → logprob: -11.375015258789062
    3. '[start' → logprob: -12.750015258789062
    4. 'Start' → logprob: -14.500015258789062
    5. '_START' → logprob: -14.750015258789062
    6. '[i' → logprob: -17.375015258789062
    7. '_tokens' → logprob: -17.375015258789062
    8. '```' → logprob: -17.500015258789062
    9. '_' → logprob: -17.625015258789062
    10. '[' → logprob: -17.750015258789062

Token 70: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.005844412371516228
    2. ' :' → logprob: -5.755844593048096
    3. ':' → logprob: -6.130844593048096
    4. 'i' → logprob: -8.255844116210938
    5. ' i' → logprob: -8.505844116210938
    6. ' ' → logprob: -11.380844116210938
    7. ',i' → logprob: -11.880844116210938
    8. ';i' → logprob: -13.255844116210938
    9. ',' → logprob: -13.630844116210938
    10. '	i' → logprob: -13.755844116210938

Token 71: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.476752907037735
    2. '))' → logprob: -1.1017528772354126
    3. ')))' → logprob: -3.476752996444702
    4. ')' → logprob: -4.226752758026123
    5. ']' → logprob: -7.976752758026123
    6. ']))
' → logprob: -8.101753234863281
    7. ')])' → logprob: -8.101753234863281
    8. '])' → logprob: -8.351753234863281
    9. '']))' → logprob: -9.726753234863281
    10. '))
' → logprob: -10.226753234863281

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010934273712337017
    2. ')' → logprob: -4.885934352874756
    3. '           ' → logprob: -5.885934352874756
    4. 'else' → logprob: -8.760933876037598
    5. '<|end|>' → logprob: -9.010933876037598
    6. '   ' → logprob: -9.260933876037598
    7. 'elif' → logprob: -10.385933876037598
    8. ' else' → logprob: -10.510933876037598
    9. '```' → logprob: -11.010933876037598
    10. '               ' → logprob: -11.135933876037598

Token 73: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15783749520778656
    2. 'elif' → logprob: -2.907837390899658
    3. 'else' (adapté à ' else') → logprob: -2.907837390899658
    4. ' else' → logprob: -3.532837390899658
    5. ' elif' → logprob: -4.907837390899658
    6. '   ' → logprob: -9.282837867736816
    7. '	elif' → logprob: -9.782837867736816
    8. '```' → logprob: -11.282837867736816
    9. '           ' → logprob: -11.532837867736816
    10. ')' → logprob: -11.532837867736816

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03009791299700737
    2. ':
' → logprob: -3.5300979614257812
    3. '       ' → logprob: -9.655097961425781
    4. ' if' → logprob: -9.780097961425781
    5. ' :' → logprob: -9.780097961425781
    6. '           ' → logprob: -10.155097961425781
    7. 'if' → logprob: -10.405097961425781
    8. '   ' → logprob: -11.280097961425781
    9. '<|end|>' → logprob: -11.280097961425781
    10. ',' → logprob: -11.405097961425781

Token 75: '           ' (ID: 352)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.7361428141593933
    2. '           ' → logprob: -1.736142873764038
    3. ' tokens' → logprob: -1.861142873764038
    4. '        ' → logprob: -1.861142873764038
    5. '       ' → logprob: -3.611142873764038
    6. '    ' → logprob: -6.236142635345459
    7. '            ' → logprob: -6.361142635345459
    8. '```' → logprob: -7.361142635345459
    9. ' if' → logprob: -7.486142635345459
    10. '   ' → logprob: -7.611142635345459

Token 76: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.062267690896987915
    2. ' tokens' → logprob: -2.812267780303955
    3. '           ' → logprob: -8.187267303466797
    4. 'token' → logprob: -12.312267303466797
    5. '            ' → logprob: -12.437267303466797
    6. '```' → logprob: -13.437267303466797
    7. '            
' → logprob: -13.562267303466797
    8. '   ' → logprob: -13.562267303466797
    9. '               ' → logprob: -13.562267303466797
    10. 'if' → logprob: -13.687267303466797

Token 77: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007655369583517313
    2. '.' → logprob: -4.882655143737793
    3. '.Append' → logprob: -10.882655143737793
    4. '.app' → logprob: -11.632655143737793
    5. '.extend' → logprob: -11.757655143737793
    6. 'append' → logprob: -12.507655143737793
    7. ' .' → logprob: -13.007655143737793
    8. ').' → logprob: -13.382655143737793
    9. '].' → logprob: -13.632655143737793
    10. '+.' → logprob: -14.257655143737793

Token 78: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009983942145481706
    2. 's' → logprob: -7.000998497009277
    3. '(' → logprob: -9.375998497009277
    4. '('' → logprob: -13.250998497009277
    5. '((' → logprob: -15.000998497009277
    6. '(
' → logprob: -17.00099754333496
    7. '("("' → logprob: -17.00099754333496
    8. '(i' → logprob: -19.12599754333496
    9. '(ord' → logprob: -19.62599754333496
    10. ' (' → logprob: -19.75099754333496

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. 'i' → logprob: -17.5
    4. ')' → logprob: -18.375
    5. '[I' → logprob: -18.625
    6. ')i' → logprob: -21.5
    7. '```' → logprob: -21.875
    8. '[
' → logprob: -22.0
    9. ')[' → logprob: -22.375
    10. '[s' → logprob: -22.75

Token 80: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2551361620426178
    2. ')' → logprob: -1.5051361322402954
    3. '])
' → logprob: -6.505136013031006
    4. ')
' → logprob: -6.755136013031006
    5. ']' → logprob: -7.755136013031006
    6. ''])' → logprob: -10.130136489868164
    7. '))' → logprob: -10.380136489868164
    8. ')])' → logprob: -10.880136489868164
    9. ')]' → logprob: -12.130136489868164
    10. ' ])' → logprob: -12.255136489868164

Token 81: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3587746322154999
    2. '       ' → logprob: -1.2337746620178223
    3. 'i' → logprob: -6.108774662017822
    4. '   ' → logprob: -6.358774662017822
    5. '        
' → logprob: -6.608774662017822
    6. '```' → logprob: -6.858774662017822
    7. '<|end|>' → logprob: -7.108774662017822
    8. '            
' → logprob: -7.358774662017822
    9. ')' → logprob: -7.733774662017822
    10. '    
' → logprob: -7.733774662017822

Token 82: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.12693166732788086
    2. ' i' → logprob: -2.126931667327881
    3. '```' → logprob: -13.626932144165039
    4. ' 
' → logprob: -14.001932144165039
    5. '	i' → logprob: -14.126932144165039
    6. '_i' → logprob: -15.126932144165039
    7. '   ' → logprob: -15.751932144165039
    8. '
' → logprob: -16.12693214416504
    9. '\n' → logprob: -16.50193214416504
    10. ',i' → logprob: -16.75193214416504

Token 83: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24133457243442535
    2. '+=' → logprob: -1.7413345575332642
    3. ' +=' → logprob: -3.2413346767425537
    4. ' +' → logprob: -11.741334915161133
    5. '++' → logprob: -12.241334915161133
    6. '=' → logprob: -12.991334915161133
    7. '<|end|>' → logprob: -12.991334915161133
    8. '+="' → logprob: -13.116334915161133
    9. '+='' → logprob: -13.366334915161133
    10. '+++' → logprob: -14.241334915161133

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '```' → logprob: -18.876928329467773
    4. ' ' → logprob: -20.501928329467773
    5. '１' → logprob: -21.126928329467773
    6. '   ' → logprob: -21.501928329467773
    7. '۱' → logprob: -21.751928329467773
    8. '0' → logprob: -22.126928329467773
    9. '2' → logprob: -22.751928329467773
    10. '3' → logprob: -23.251928329467773

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -20.875
    5. '１' → logprob: -21.25
    6. '۱' → logprob: -21.4375
    7. '১' → logprob: -22.375
    8. '१' → logprob: -22.375
    9. '  ' → logprob: -22.5
    10. '' → logprob: -22.5

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5283510088920593
    2. '
' → logprob: -1.528351068496704
    3. 'return' → logprob: -1.903351068496704
    4. ' return' → logprob: -3.778351068496704
    5. ' ' → logprob: -5.278350830078125
    6. '	return' → logprob: -5.653350830078125
    7. '    
' → logprob: -5.778350830078125
    8. '<|end|>' → logprob: -5.778350830078125
    9. ':return' → logprob: -6.278350830078125
    10. '\n' → logprob: -6.903350830078125

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03879815712571144
    2. 'return' → logprob: -4.0387983322143555
    3. ' return' → logprob: -4.0387983322143555
    4. ' ' → logprob: -6.6637983322143555
    5. '	return' → logprob: -7.5387983322143555
    6. '    
' → logprob: -7.7887983322143555
    7. '
' → logprob: -8.913798332214355
    8. '       ' → logprob: -8.913798332214355
    9. ':return' → logprob: -9.038798332214355
    10. '<|end|>' → logprob: -10.038798332214355

Token 88: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26592719554901123
    2. 'return' (adapté à ' return') → logprob: -1.5159271955490112
    3. ' return' → logprob: -4.515927314758301
    4. '	return' → logprob: -7.015927314758301
    5. ' ' → logprob: -7.140927314758301
    6. ')' → logprob: -7.890927314758301
    7. '```' → logprob: -8.1409273147583
    8. '       ' → logprob: -8.3909273147583
    9. '    
' → logprob: -9.2659273147583
    10. '
' → logprob: -9.7659273147583

Token 89: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.06198830157518387
    2. ' tokens' → logprob: -2.811988353729248
    3. '(tokens' → logprob: -10.81198787689209
    4. 'token' → logprob: -14.81198787689209
    5. 't' → logprob: -17.186988830566406
    6. '.tokens' → logprob: -17.436988830566406
    7. '_tokens' → logprob: -17.936988830566406
    8. 'to' → logprob: -19.186988830566406
    9. 'Tokens' → logprob: -19.311988830566406
    10. 'tok' → logprob: -19.561988830566406

Token 90: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7856020927429199
    2. 'n' → logprob: -1.91060209274292
    3. 'tokens' → logprob: -2.16060209274292
    4. 's' → logprob: -2.28560209274292
    5. 'for' → logprob: -3.03560209274292
    6. '#' → logprob: -3.66060209274292
    7. 'result' → logprob: -3.66060209274292
    8. '```' → logprob: -4.16060209274292
    9. '(' → logprob: -4.53560209274292
    10. 't' → logprob: -5.03560209274292

Token 91: 'def' (ID: 1314)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.398241400718689
    2. 'for' → logprob: -1.523241400718689
    3. 's' → logprob: -1.648241400718689
    4. 'def' → logprob: -2.3982415199279785
    5. 'n' → logprob: -2.6482415199279785
    6. 'result' → logprob: -2.7732415199279785
    7. 't' → logprob: -3.8982415199279785
    8. 'token' → logprob: -4.3982415199279785
    9. 'print' → logprob: -4.3982415199279785
    10. 'results' → logprob: -5.0232415199279785

Token 92: ' compare' (ID: 12221)
  Prédit: ' evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.7323211431503296
    2. ' parse' → logprob: -1.3573211431503296
    3. ' calculate' → logprob: -2.732321262359619
    4. ' process' → logprob: -2.857321262359619
    5. ' solve' → logprob: -2.857321262359619
    6. ' tokenize' → logprob: -3.857321262359619
    7. ' s' → logprob: -4.357321262359619
    8. ' calc' → logprob: -4.857321262359619
    9. ' eval' → logprob: -4.982321262359619
    10. ' main' → logprob: -5.232321262359619

Token 93: '_tokens' (ID: 65830)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.8172377943992615
    2. '(' → logprob: -1.6922378540039062
    3. '_tokens' → logprob: -1.6922378540039062
    4. '(a' → logprob: -1.8172378540039062
    5. '_strings' → logprob: -4.942237854003906
    6. '(_' → logprob: -4.942237854003906
    7. 's' → logprob: -5.567237854003906
    8. '_' → logprob: -6.442237854003906
    9. '_lists' → logprob: -6.817237854003906
    10. '_(' → logprob: -7.317237854003906

Token 94: '(a' (ID: 6271)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.32955455780029297
    2. '(a' → logprob: -1.329554557800293
    3. '(tokens' → logprob: -4.829554557800293
    4. '(s' → logprob: -5.079554557800293
    5. '(token' → logprob: -6.954554557800293
    6. '(tok' → logprob: -8.079554557800293
    7. '(' → logprob: -8.579554557800293
    8. '(ts' → logprob: -8.704554557800293
    9. '(lhs' → logprob: -8.829554557800293
    10. ' (' → logprob: -9.704554557800293

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005942588322795928
    2. ' ,' → logprob: -7.750594139099121
    3. ',b' → logprob: -9.500594139099121
    4. '_tokens' → logprob: -9.875594139099121
    5. ',a' → logprob: -11.375594139099121
    6. 's' → logprob: -11.375594139099121
    7. '[],' → logprob: -12.750594139099121
    8. '_,' → logprob: -13.000594139099121
    9. '[' → logprob: -13.125594139099121
    10. '):' → logprob: -13.875594139099121

Token 96: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08894547075033188
    2. ' b' → logprob: -2.4639453887939453
    3. ' ' → logprob: -13.088945388793945
    4. '   ' → logprob: -13.213945388793945
    5. '    ' → logprob: -14.088945388793945
    6. ')b' → logprob: -14.463945388793945
    7. '	b' → logprob: -15.213945388793945
    8. '  ' → logprob: -15.588945388793945
    9. ')' → logprob: -15.713945388793945
    10. 'a' → logprob: -17.213945388793945

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012267775600776076
    2. '):
' → logprob: -6.751226902008057
    3. ')' → logprob: -9.876226425170898
    4. ' ):' → logprob: -13.126226425170898
    5. ':' → logprob: -13.376226425170898
    6. '):
' → logprob: -14.001226425170898
    7. '[]):' → logprob: -16.0012264251709
    8. '):

' → logprob: -16.2512264251709
    9. ')):' → logprob: -16.8762264251709
    10. '}:' → logprob: -16.8762264251709

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05106934905052185
    2. ' for' → logprob: -3.3010692596435547
    3. 'for' → logprob: -4.551069259643555
    4. ' i' → logprob: -6.426069259643555
    5. 'i' → logprob: -7.301069259643555
    6. '
' → logprob: -10.551069259643555
    7. '    ' → logprob: -11.176069259643555
    8. '    
' → logprob: -11.301069259643555
    9. ' if' → logprob: -11.676069259643555
    10. '  ' → logprob: -11.676069259643555

Token 99: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37559208273887634
    2. 'if' → logprob: -1.3755921125411987
    3. 'i' → logprob: -3.125591993331909
    4. ' for' → logprob: -4.750592231750488
    5. 'min' → logprob: -5.500592231750488
    6. ' if' → logprob: -6.500592231750488
    7. '   ' → logprob: -6.500592231750488
    8. ' i' → logprob: -7.375592231750488
    9. 'return' → logprob: -9.625592231750488
    10. ' min' → logprob: -10.500592231750488

Token 100: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1429288685321808
    2. ' =' → logprob: -2.0179288387298584
    3. '=len' → logprob: -9.017929077148438
    4. 'en' → logprob: -9.392929077148438
    5. 'n' → logprob: -11.142929077148438
    6. 'b' → logprob: -11.267929077148438
    7. '   ' → logprob: -12.142929077148438
    8. ',' → logprob: -12.267929077148438
    9. ' ' → logprob: -12.892929077148438
    10. 'ng' → logprob: -13.517929077148438

Token 101: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00015860427811276168
    2. ' len' → logprob: -8.750158309936523
    3. 'min' → logprob: -16.625158309936523
    4. '[len' → logprob: -17.000158309936523
    5. '(len' → logprob: -17.750158309936523
    6. '=len' → logprob: -19.375158309936523
    7. '	len' → logprob: -19.500158309936523
    8. '<len' → logprob: -19.625158309936523
    9. '   ' → logprob: -19.750158309936523
    10. ' ' → logprob: -20.125158309936523

Token 102: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.2166411478538066e-05
    2. '(' → logprob: -9.875052452087402
    3. 'a' → logprob: -14.250052452087402
    4. '(ai' → logprob: -17.125051498413086
    5. '(b' → logprob: -17.875051498413086
    6. '(A' → logprob: -18.000051498413086
    7. '(
' → logprob: -18.625051498413086
    8. '(an' → logprob: -18.875051498413086
    9. ' (' → logprob: -19.125051498413086
    10. '(s' → logprob: -19.250051498413086

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16030089557170868
    2. ')
' → logprob: -1.910300850868225
    3. ' )' → logprob: -10.035301208496094
    4. ' )
' → logprob: -10.910301208496094
    5. ')
' → logprob: -12.285301208496094
    6. '),' → logprob: -12.410301208496094
    7. ',' → logprob: -13.660301208496094
    8. ')b' → logprob: -13.660301208496094
    9. ')a' → logprob: -14.035301208496094
    10. ')

' → logprob: -14.160301208496094

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5774827003479004
    2. 'lb' → logprob: -1.2024827003479004
    3. ' lb' → logprob: -2.3274827003479004
    4. ',' → logprob: -4.2024827003479
    5. ' ' → logprob: -4.2024827003479
    6. '(lb' → logprob: -5.0774827003479
    7. '_lb' → logprob: -6.7024827003479
    8. '  ' → logprob: -7.2024827003479
    9. 'b' → logprob: -7.3274827003479
    10. ':' → logprob: -7.9524827003479

Token 105: ' lb' (ID: 32474)
  Prédit: 'lb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lb' (adapté à ' lb') → logprob: -0.04858975484967232
    2. ' lb' → logprob: -3.0485897064208984
    3. ' ' → logprob: -14.673589706420898
    4. '(lb' → logprob: -14.923589706420898
    5. 'lbl' → logprob: -15.173589706420898
    6. 'lab' → logprob: -15.298589706420898
    7. '   ' → logprob: -15.298589706420898
    8. '```' → logprob: -15.423589706420898
    9. 'll' → logprob: -15.673589706420898
    10. 'l' → logprob: -15.798589706420898

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133251368999481
    2. '=' → logprob: -1.3133251667022705
    3. ' ==' → logprob: -11.063324928283691
    4. ')' → logprob: -11.063324928283691
    5. ' ' → logprob: -11.313324928283691
    6. '   ' → logprob: -11.438324928283691
    7. '==' → logprob: -12.938324928283691
    8. ',' → logprob: -13.313324928283691
    9. '>' → logprob: -13.813324928283691
    10. '<|end|>' → logprob: -13.938324928283691

Token 107: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018170194700360298
    2. ' len' → logprob: -4.018170356750488
    3. '(len' → logprob: -11.018170356750488
    4. '=len' → logprob: -13.143170356750488
    5. '[len' → logprob: -13.393170356750488
    6. '<len' → logprob: -15.518170356750488
    7. '	len' → logprob: -15.768170356750488
    8. ',len' → logprob: -16.518169403076172
    9. '   ' → logprob: -17.268169403076172
    10. 'l' → logprob: -17.518169403076172

Token 108: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.2729995988775045e-06
    2. 'b' → logprob: -12.125006675720215
    3. '(' → logprob: -14.125006675720215
    4. '(
' → logprob: -17.7500057220459
    5. ' (' → logprob: -17.8750057220459
    6. ')' → logprob: -18.8750057220459
    7. ')b' → logprob: -18.8750057220459
    8. '=b' → logprob: -19.2500057220459
    9. ' b' → logprob: -19.2500057220459
    10. '```' → logprob: -19.3750057220459

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005970153957605362
    2. ')
' → logprob: -5.130970001220703
    3. '   ' → logprob: -10.630970001220703
    4. ' )' → logprob: -11.630970001220703
    5. 'def' → logprob: -12.380970001220703
    6. ')
' → logprob: -14.630970001220703
    7. 'if' → logprob: -14.755970001220703
    8. ')

' → logprob: -14.880970001220703
    9. ',' → logprob: -15.005970001220703
    10. '):
' → logprob: -15.130970001220703

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42953333258628845
    2. ' for' → logprob: -1.5545333623886108
    3. '
' → logprob: -2.0545332431793213
    4. 'for' → logprob: -5.4295334815979
    5. ' i' → logprob: -5.8045334815979
    6. '    
' → logprob: -6.5545334815979
    7. 'i' → logprob: -8.304533004760742
    8. ' if' → logprob: -8.429533004760742
    9. ' 
' → logprob: -9.054533004760742
    10. '```' → logprob: -9.054533004760742

Token 111: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3886520564556122
    2. 'for' (adapté à ' for') → logprob: -1.7636520862579346
    3. ' for' → logprob: -2.7636520862579346
    4. ' i' → logprob: -3.0136520862579346
    5. 'min' → logprob: -3.3886520862579346
    6. '   ' → logprob: -6.1386518478393555
    7. ' min' → logprob: -6.8886518478393555
    8. 'l' → logprob: -7.7636518478393555
    9. 'mi' → logprob: -8.138651847839355
    10. 'm' → logprob: -8.263651847839355

Token 112: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00039588010986335576
    2. 'i' → logprob: -7.875395774841309
    3. ' ' → logprob: -11.625395774841309
    4. ' range' → logprob: -12.625395774841309
    5. ' idx' → logprob: -14.000395774841309
    6. 'range' → logprob: -14.375395774841309
    7. ' _' → logprob: -14.500395774841309
    8. ' j' → logprob: -14.625395774841309
    9. ' ' → logprob: -15.000395774841309
    10. ' index' → logprob: -15.875395774841309

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01106079202145338
    2. 'in' → logprob: -4.51106071472168
    3. ' ' → logprob: -11.51106071472168
    4. ',' → logprob: -13.13606071472168
    5. '	in' → logprob: -15.26106071472168
    6. '0' → logprob: -16.13606071472168
    7. '  ' → logprob: -16.26106071472168
    8. '=' → logprob: -16.51106071472168
    9. '```' → logprob: -16.51106071472168
    10. 'range' → logprob: -16.76106071472168

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759409070014954
    2. ' range' → logprob: -0.8259409070014954
    3. ' ' → logprob: -13.82594108581543
    4. '	range' → logprob: -15.07594108581543
    5. '   ' → logprob: -16.32594108581543
    6. '(range' → logprob: -16.57594108581543
    7. '  ' → logprob: -17.20094108581543
    8. ' xrange' → logprob: -17.57594108581543
    9. '```' → logprob: -18.70094108581543
    10. '0' → logprob: -19.32594108581543

Token 115: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0025385632179677486
    2. '(' → logprob: -6.002538681030273
    3. '(max' → logprob: -10.377538681030273
    4. ' (' → logprob: -11.377538681030273
    5. '(len' → logprob: -11.502538681030273
    6. '(l' → logprob: -12.127538681030273
    7. 'min' → logprob: -12.627538681030273
    8. ' min' → logprob: -13.627538681030273
    9. '(mi' → logprob: -15.752538681030273
    10. '(ma' → logprob: -16.377538681030273

Token 116: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.180258191714529e-06
    2. '(len' → logprob: -11.750008583068848
    3. ' (' → logprob: -16.75000762939453
    4. '(li' → logprob: -17.37500762939453
    5. '(lo' → logprob: -18.87500762939453
    6. 'la' → logprob: -19.00000762939453
    7. '(i' → logprob: -19.12500762939453
    8. '(l' → logprob: -19.37500762939453
    9. '((' → logprob: -19.50000762939453
    10. '(ll' → logprob: -19.62500762939453

Token 117: 'la' (ID: 1675)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014174441806972027
    2. 'la' → logprob: -4.264174461364746
    3. '(len' → logprob: -12.389174461364746
    4. ' la' → logprob: -13.264174461364746
    5. 'len' → logprob: -13.889174461364746
    6. ')' → logprob: -14.264174461364746
    7. 'La' → logprob: -14.264174461364746
    8. '/la' → logprob: -14.389174461364746
    9. '{' → logprob: -14.889174461364746
    10. '_la' → logprob: -14.889174461364746

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017278951418120414
    2. ' ,' → logprob: -8.75017261505127
    3. ',l' → logprob: -12.12517261505127
    4. ',b' → logprob: -12.25017261505127
    5. ',ll' → logprob: -12.75017261505127
    6. ',
' → logprob: -14.75017261505127
    7. ',len' → logprob: -15.25017261505127
    8. ',int' → logprob: -15.75017261505127
    9. ',n' → logprob: -16.375173568725586
    10. ',i' → logprob: -16.500173568725586

Token 119: ' lb' (ID: 32474)
  Prédit: 'lb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lb' → logprob: -0.10022488981485367
    2. ' lb' → logprob: -2.3502249717712402
    3. ' ' → logprob: -11.600224494934082
    4. '(lb' → logprob: -11.725224494934082
    5. '   ' → logprob: -15.100224494934082
    6. '
' → logprob: -15.975224494934082
    7. '_lb' → logprob: -16.2252254486084
    8. ' ' → logprob: -16.8502254486084
    9. '

' → logprob: -16.8502254486084
    10. 'ib' → logprob: -16.9752254486084

Token 120: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.45615318417549133
    2. ')):' → logprob: -1.081153154373169
    3. '):' → logprob: -4.331153392791748
    4. '):
' → logprob: -4.331153392791748
    5. '))' → logprob: -8.08115291595459
    6. ')' → logprob: -8.45615291595459
    7. ')):
' → logprob: -9.45615291595459
    8. ' ' → logprob: -9.83115291595459
    9. ' ):' → logprob: -10.08115291595459
    10. ':' → logprob: -10.95615291595459

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002431428525596857
    2. ':' → logprob: -6.252431392669678
    3. ',' → logprob: -8.377431869506836
    4. ' if' → logprob: -9.252431869506836
    5. '   ' → logprob: -10.002431869506836
    6. ':
' → logprob: -10.002431869506836
    7. '```' → logprob: -11.252431869506836
    8. '  
' → logprob: -11.377431869506836
    9. '<|end|>' → logprob: -11.502431869506836
    10. '        
' → logprob: -11.752431869506836

Token 122: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.41449257731437683
    2. ' if' → logprob: -1.1644926071166992
    3. '       ' → logprob: -3.664492607116699
    4. '   ' → logprob: -6.664492607116699
    5. 'ai' → logprob: -9.2894926071167
    6. '```' → logprob: -9.2894926071167
    7. '
' → logprob: -9.9144926071167
    8. 'a' → logprob: -10.0394926071167
    9. '	if' → logprob: -10.4144926071167
    10. '           ' → logprob: -11.9144926071167

Token 123: ' type' (ID: 1490)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4135547876358032
    2. 'a' → logprob: -1.1635547876358032
    3. ' isinstance' → logprob: -3.9135546684265137
    4. ' type' → logprob: -5.288554668426514
    5. 'type' → logprob: -6.663554668426514
    6. 'is' → logprob: -11.413555145263672
    7. '(a' → logprob: -11.788555145263672
    8. '	a' → logprob: -11.913555145263672
    9. 'typeof' → logprob: -12.663555145263672
    10. '(type' → logprob: -13.288555145263672

Token 124: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -10.875019073486328
    3. 'a' → logprob: -16.000019073486328
    4. ' (' → logprob: -16.750019073486328
    5. '(ai' → logprob: -17.250019073486328
    6. '(tokens' → logprob: -17.875019073486328
    7. '(i' → logprob: -18.250019073486328
    8. '((' → logprob: -18.875019073486328
    9. '(token' → logprob: -19.000019073486328
    10. '(
' → logprob: -19.000019073486328

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.5358694731257856e-05
    2. '(i' → logprob: -11.125035285949707
    3. '[a' → logprob: -11.375035285949707
    4. ')' → logprob: -12.500035285949707
    5. '[' → logprob: -12.625035285949707
    6. '(a' → logprob: -13.625035285949707
    7. ')[' → logprob: -14.750035285949707
    8. '```' → logprob: -15.500035285949707
    9. 'a' → logprob: -17.125036239624023
    10. ')i' → logprob: -17.625036239624023

Token 126: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002168221166357398
    2. '])' → logprob: -6.25216817855835
    3. ')!=' → logprob: -9.502168655395508
    4. ' )' → logprob: -9.752168655395508
    5. ')==' → logprob: -10.502168655395508
    6. '）' → logprob: -10.877168655395508
    7. '})' → logprob: -11.752168655395508
    8. '[])' → logprob: -11.877168655395508
    9. '())' → logprob: -11.877168655395508
    10. '{})' → logprob: -12.127168655395508

Token 127: ' ==' (ID: 951)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.259235143661499
    2. '==' → logprob: -1.509235143661499
    3. '!=' → logprob: -5.384235382080078
    4. ' is' → logprob: -6.759235382080078
    5. ' ==' → logprob: -7.009235382080078
    6. '```' → logprob: -7.884235382080078
    7. ' !=' → logprob: -9.384235382080078
    8. ')' → logprob: -9.759235382080078
    9. '=' → logprob: -10.509235382080078
    10. '()==' → logprob: -11.259235382080078

Token 128: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005993809318169951
    2. ' int' → logprob: -7.500599384307861
    3. 'str' → logprob: -10.000598907470703
    4. ' ' → logprob: -15.250598907470703
    5. 'type' → logprob: -15.375598907470703
    6. ' str' → logprob: -15.500598907470703
    7. '```' → logprob: -15.625598907470703
    8. 'list' → logprob: -16.375598907470703
    9. '	int' → logprob: -16.875598907470703
    10. '(int' → logprob: -16.875598907470703

Token 129: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20178470015525818
    2. 'and' → logprob: -1.7017847299575806
    3. ' ' → logprob: -8.07678508758545
    4. ':' → logprob: -10.07678508758545
    5. ' or' → logprob: -12.07678508758545
    6. ')' → logprob: -12.45178508758545
    7. '<|end|>' → logprob: -13.07678508758545
    8. ':
' → logprob: -13.70178508758545
    9. '  ' → logprob: -13.95178508758545
    10. '   ' → logprob: -14.20178508758545

Token 130: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.03370171785354614
    2. ' type' → logprob: -3.4087016582489014
    3. '   ' → logprob: -10.03370189666748
    4. '  ' → logprob: -12.15870189666748
    5. ' ' → logprob: -12.90870189666748
    6. '    ' → logprob: -13.78370189666748
    7. '       ' → logprob: -13.90870189666748
    8. '	type' → logprob: -14.28370189666748
    9. '           ' → logprob: -14.53370189666748
    10. '     ' → logprob: -15.28370189666748

Token 131: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.021785834804177284
    2. '(a' → logprob: -4.271785736083984
    3. '(' → logprob: -4.896785736083984
    4. ' (' → logprob: -9.396785736083984
    5. 'b' → logprob: -10.271785736083984
    6. 'a' → logprob: -13.896785736083984
    7. '<|end|>' → logprob: -14.021785736083984
    8. '(s' → logprob: -14.271785736083984
    9. '(type' → logprob: -14.521785736083984
    10. ' ' → logprob: -14.521785736083984

Token 132: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8759976625442505
    2. '(a' → logprob: -1.2509976625442505
    3. '(i' → logprob: -1.2509976625442505
    4. ')' → logprob: -4.750997543334961
    5. '[a' → logprob: -7.000997543334961
    6. '[' → logprob: -7.250997543334961
    7. '(' → logprob: -8.625997543334961
    8. 'a' → logprob: -8.750997543334961
    9. '<|end|>' → logprob: -9.125997543334961
    10. ' (' → logprob: -9.750997543334961

Token 133: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030270826071500778
    2. '])' → logprob: -3.53027081489563
    3. ')==' → logprob: -7.905271053314209
    4. '==' → logprob: -9.65527057647705
    5. '）' → logprob: -10.90527057647705
    6. ']==' → logprob: -11.53027057647705
    7. ' )' → logprob: -11.53027057647705
    8. '`)' → logprob: -11.65527057647705
    9. ']' → logprob: -11.78027057647705
    10. '[])' → logprob: -11.90527057647705

Token 134: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10249683260917664
    2. ' ==' → logprob: -2.352496862411499
    3. ')' → logprob: -6.22749662399292
    4. ')==' → logprob: -8.352497100830078
    5. ']==' → logprob: -10.227497100830078
    6. 'is' → logprob: -11.602497100830078
    7. '```' → logprob: -11.977497100830078
    8. ']' → logprob: -12.227497100830078
    9. ' )' → logprob: -12.352497100830078
    10. '!=' → logprob: -12.727497100830078

Token 135: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004994167247787118
    2. ' int' → logprob: -7.875499248504639
    3. 'str' → logprob: -9.125499725341797
    4. ' ' → logprob: -12.375499725341797
    5. '<int' → logprob: -13.375499725341797
    6. ' str' → logprob: -13.750499725341797
    7. 'list' → logprob: -14.000499725341797
    8. '<|end|>' → logprob: -14.125499725341797
    9. '[int' → logprob: -14.375499725341797
    10. '  ' → logprob: -15.125499725341797

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03880457952618599
    2. ' and' → logprob: -3.663804531097412
    3. ':
' → logprob: -4.538804531097412
    4. 'and' → logprob: -6.538804531097412
    5. '):' → logprob: -8.91380500793457
    6. ' :' → logprob: -9.53880500793457
    7. ':

' → logprob: -10.03880500793457
    8. '):
' → logprob: -11.28880500793457
    9. ')' → logprob: -11.78880500793457
    10. '<|end|>' → logprob: -11.78880500793457

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08208008855581284
    2. ':' → logprob: -3.082080125808716
    3. ' and' → logprob: -4.082079887390137
    4. ':
' → logprob: -4.332079887390137
    5. '<|end|>' → logprob: -6.957079887390137
    6. '               ' → logprob: -7.832079887390137
    7. '
' → logprob: -8.082079887390137
    8. ',' → logprob: -8.082079887390137
    9. '<|end|>' → logprob: -8.707079887390137
    10. '```' → logprob: -8.832079887390137

Token 138: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2914181649684906
    2. '           ' → logprob: -1.791418194770813
    3. 'if' (adapté à ' if') → logprob: -2.6664180755615234
    4. '
' → logprob: -4.291418075561523
    5. '               ' → logprob: -6.041418075561523
    6. ' 
' → logprob: -8.666418075561523
    7. ':
' → logprob: -9.791418075561523
    8. '            ' → logprob: -10.166418075561523
    9. ' ' → logprob: -10.291418075561523
    10. ':' → logprob: -10.541418075561523

Token 139: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759462714195251
    2. ' a' → logprob: -0.8259462714195251
    3. '	a' → logprob: -12.700945854187012
    4. '   ' → logprob: -13.325945854187012
    5. '(a' → logprob: -13.450945854187012
    6. ' ' → logprob: -15.325945854187012
    7. ' ' → logprob: -15.325945854187012
    8. '_a' → logprob: -16.075946807861328
    9. '[a' → logprob: -16.575946807861328
    10. '    ' → logprob: -17.450946807861328

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -11.875007629394531
    3. '[I' → logprob: -15.625007629394531
    4. '<|end|>' → logprob: -17.37500762939453
    5. '[a' → logprob: -18.12500762939453
    6. '```' → logprob: -18.37500762939453
    7. '[
' → logprob: -18.37500762939453
    8. '[j' → logprob: -18.75000762939453
    9. 'i' → logprob: -19.12500762939453
    10. '[idx' → logprob: -19.37500762939453

Token 141: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.13131262362003326
    2. '<' → logprob: -2.256312608718872
    3. ' >' → logprob: -4.506312847137451
    4. '>' → logprob: -5.881312847137451
    5. ' !=' → logprob: -5.881312847137451
    6. ']' → logprob: -7.006312847137451
    7. '[' → logprob: -8.256312370300293
    8. '!=' → logprob: -8.506312370300293
    9. ' ' → logprob: -8.631312370300293
    10. '<|end|>' → logprob: -10.506312370300293

Token 142: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.26133155822753906
    2. '<' → logprob: -1.511331558227539
    3. ' >' → logprob: -5.261331558227539
    4. ' !=' → logprob: -6.136331558227539
    5. '>' → logprob: -6.511331558227539
    6. '!=' → logprob: -8.011331558227539
    7. ' ' → logprob: -9.636331558227539
    8. '<int' → logprob: -10.136331558227539
    9. '[' → logprob: -11.011331558227539
    10. '<|end|>' → logprob: -11.136331558227539

Token 143: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740777611732483
    2. ' b' → logprob: -0.9740777611732483
    3. ' ' → logprob: -14.724078178405762
    4. '	b' → logprob: -15.974078178405762
    5. '=' → logprob: -16.849077224731445
    6. ')b' → logprob: -16.974077224731445
    7. '>b' → logprob: -17.099077224731445
    8. '>' → logprob: -18.099077224731445
    9. '```' → logprob: -18.474077224731445
    10. '(b' → logprob: -18.599077224731445

Token 144: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0021866646129637957
    2. '[' → logprob: -6.1271867752075195
    3. '[j' → logprob: -14.37718677520752
    4. '[
' → logprob: -14.50218677520752
    5. '<|end|>' → logprob: -16.002185821533203
    6. '```' → logprob: -16.252185821533203
    7. '[I' → logprob: -16.377185821533203
    8. 'i' → logprob: -16.502185821533203
    9. '[int' → logprob: -17.002185821533203
    10. ']' → logprob: -17.752185821533203

Token 145: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.36459439992904663
    2. ']:
' → logprob: -1.2395944595336914
    3. ':' → logprob: -4.614594459533691
    4. ']' → logprob: -6.114594459533691
    5. ':
' → logprob: -6.489594459533691
    6. '):' → logprob: -7.864594459533691
    7. '):
' → logprob: -7.864594459533691
    8. ']:
' → logprob: -7.989594459533691
    9. '       ' → logprob: -8.239594459533691
    10. ':return' → logprob: -8.239594459533691

Token 146: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01050203014165163
    2. ':
' → logprob: -5.385501861572266
    3. 'return' → logprob: -6.510501861572266
    4. ' return' → logprob: -6.510501861572266
    5. ':return' → logprob: -6.510501861572266
    6. ':' → logprob: -6.635501861572266
    7. ',' → logprob: -11.010501861572266
    8. '):
' → logprob: -11.010501861572266
    9. '           ' → logprob: -11.760501861572266
    10. ' :' → logprob: -11.885501861572266

Token 147: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13071157038211823
    2. 'return' (adapté à ' return') → logprob: -2.755711555480957
    3. '                   ' → logprob: -3.255711555480957
    4. '               ' → logprob: -4.005711555480957
    5. ' 
' → logprob: -6.630711555480957
    6. '
' → logprob: -8.005711555480957
    7. '           ' → logprob: -8.880711555480957
    8. ':return' → logprob: -9.255711555480957
    9. '                ' → logprob: -9.380711555480957
    10. ' ' → logprob: -9.880711555480957

Token 148: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0063972617499530315
    2. ' -' → logprob: -5.381397247314453
    3. 'True' → logprob: -6.756397247314453
    4. ' True' → logprob: -7.506397247314453
    5. '1' → logprob: -9.881397247314453
    6. ' ' → logprob: -11.756397247314453
    7. 'true' → logprob: -13.881397247314453
    8. '   ' → logprob: -14.131397247314453
    9. ' true' → logprob: -14.506397247314453
    10. '"' → logprob: -14.506397247314453

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -18.5000057220459
    4. '0' → logprob: -19.2500057220459
    5. '```' → logprob: -19.3750057220459
    6. '       ' → logprob: -20.0000057220459
    7. '   ' → logprob: -20.1250057220459
    8. '  ' → logprob: -20.1250057220459
    9. ',' → logprob: -20.2500057220459
    10. '.' → logprob: -20.3750057220459

Token 150: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012269807979464531
    2. '       ' → logprob: -5.512269973754883
    3. 'elif' → logprob: -5.762269973754883
    4. ' elif' → logprob: -6.387269973754883
    5. '
' → logprob: -6.512269973754883
    6. '<|end|>' → logprob: -7.012269973754883
    7. '            
' → logprob: -8.512269973754883
    8. '               ' → logprob: -8.637269973754883
    9. '\n' → logprob: -9.137269973754883
    10. ')' → logprob: -9.637269973754883

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04149668663740158
    2. '       ' → logprob: -4.166496753692627
    3. 'elif' → logprob: -4.166496753692627
    4. ' elif' → logprob: -5.166496753692627
    5. '<|end|>' → logprob: -5.666496753692627
    6. '               ' → logprob: -9.416496276855469
    7. ')' → logprob: -9.416496276855469
    8. '	elif' → logprob: -9.541496276855469
    9. '<|end|>' → logprob: -9.541496276855469
    10. ',' → logprob: -9.791496276855469

Token 152: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04224730283021927
    2. 'elif' (adapté à ' elif') → logprob: -3.5422472953796387
    3. ' elif' → logprob: -5.042247295379639
    4. '       ' → logprob: -5.167247295379639
    5. '          ' → logprob: -9.667247772216797
    6. '               ' → logprob: -9.667247772216797
    7. '         ' → logprob: -10.917247772216797
    8. '	elif' → logprob: -11.042247772216797
    9. ')' → logprob: -11.292247772216797
    10. '<|end|>' → logprob: -11.417247772216797

Token 153: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2519305646419525
    2. 'a' → logprob: -1.501930594444275
    3. '	a' → logprob: -14.876930236816406
    4. '(a' → logprob: -15.126930236816406
    5. ' ' → logprob: -16.001930236816406
    6. ' ' → logprob: -16.251930236816406
    7. '>a' → logprob: -16.251930236816406
    8. '           ' → logprob: -16.376930236816406
    9. 'type' → logprob: -16.751930236816406
    10. 's' → logprob: -16.751930236816406

Token 154: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -15.000009536743164
    4. 'i' → logprob: -16.875009536743164
    5. '<|end|>' → logprob: -17.875009536743164
    6. '[user' → logprob: -17.875009536743164
    7. '[
' → logprob: -18.125009536743164
    8. ')' → logprob: -18.250009536743164
    9. 'user' → logprob: -18.500009536743164
    10. ' [' → logprob: -18.625009536743164

Token 155: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.007933685556054115
    2. '>' → logprob: -4.882933616638184
    3. '[i' → logprob: -8.507933616638184
    4. ' ' → logprob: -9.507933616638184
    5. '[' → logprob: -11.382933616638184
    6. ']>' → logprob: -11.382933616638184
    7. '<|end|>' → logprob: -11.757933616638184
    8. ']' → logprob: -11.882933616638184
    9. ' <' → logprob: -12.007933616638184
    10. '">' → logprob: -13.507933616638184

Token 156: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.016060879454016685
    2. '>' → logprob: -4.141060829162598
    3. ' ' → logprob: -11.016060829162598
    4. '[i' → logprob: -12.516060829162598
    5. ' <' → logprob: -13.141060829162598
    6. ' ' → logprob: -13.391060829162598
    7. '[' → logprob: -13.516060829162598
    8. '">' → logprob: -15.516060829162598
    9. ']>' → logprob: -15.641060829162598
    10. ' >
' → logprob: -16.391061782836914

Token 157: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1602906435728073
    2. 'b' → logprob: -1.9102905988693237
    3. '1' → logprob: -10.285290718078613
    4. ' ' → logprob: -10.535290718078613
    5. '0' → logprob: -12.410290718078613
    6. '<|end|>' → logprob: -13.660290718078613
    7. ')b' → logprob: -15.910290718078613
    8. ' -' → logprob: -16.535289764404297
    9. '	b' → logprob: -16.660289764404297
    10. ' б' → logprob: -16.910289764404297

Token 158: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -11.625009536743164
    3. '```' → logprob: -17.125009536743164
    4. 'i' → logprob: -17.500009536743164
    5. '[int' → logprob: -17.625009536743164
    6. '[
' → logprob: -18.750009536743164
    7. ')' → logprob: -18.750009536743164
    8. ']' → logprob: -18.875009536743164
    9. '   ' → logprob: -19.000009536743164
    10. '(i' → logprob: -19.375009536743164

Token 159: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4239329695701599
    2. ':
' → logprob: -1.5489330291748047
    3. '               ' → logprob: -2.2989330291748047
    4. ']:
' → logprob: -4.048933029174805
    5. ']:' → logprob: -4.798933029174805
    6. '):
' → logprob: -5.923933029174805
    7. '):' → logprob: -6.673933029174805
    8. ':return' → logprob: -6.923933029174805
    9. '           ' → logprob: -7.048933029174805
    10. '       ' → logprob: -8.173933029174805

Token 160: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.046434447169303894
    2. '1' → logprob: -3.1714344024658203
    3. '0' → logprob: -6.29643440246582
    4. ' ' → logprob: -7.17143440246582
    5. ' return' → logprob: -8.42143440246582
    6. ':
' → logprob: -8.54643440246582
    7. 'return' → logprob: -8.79643440246582
    8. ':' → logprob: -9.42143440246582
    9. '```' → logprob: -10.04643440246582
    10. ':return' → logprob: -10.17143440246582

Token 161: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003512287512421608
    2. ' ' → logprob: -5.753512382507324
    3. 'return' (adapté à ' return') → logprob: -8.753512382507324
    4. ' return' → logprob: -9.128512382507324
    5. '               ' → logprob: -9.628512382507324
    6. '0' → logprob: -13.253512382507324
    7. '           ' → logprob: -16.128511428833008
    8. '                ' → logprob: -16.503511428833008
    9. '                   ' → logprob: -16.753511428833008
    10. '+' → logprob: -16.753511428833008

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -19.500709533691406
    4. '+' → logprob: -19.750709533691406
    5. ' ' → logprob: -21.000709533691406
    6. '```' → logprob: -21.375709533691406
    7. '0' → logprob: -21.500709533691406
    8. '  ' → logprob: -21.625709533691406
    9. '
' → logprob: -23.000709533691406
    10. '-' → logprob: -23.250709533691406

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.375001907348633
    4. '+' → logprob: -20.500001907348633
    5. '   ' → logprob: -20.750001907348633
    6. '  ' → logprob: -21.875001907348633
    7. '۱' → logprob: -22.750001907348633
    8. '１' → logprob: -22.750001907348633
    9. '`' → logprob: -23.500001907348633
    10. '
' → logprob: -23.875001907348633

Token 164: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00886900071054697
    2. '           ' → logprob: -4.883869171142578
    3. 'elif' → logprob: -7.008869171142578
    4. '
' → logprob: -8.508869171142578
    5. ' elif' → logprob: -10.008869171142578
    6. 'else' → logprob: -10.133869171142578
    7. '   ' → logprob: -10.883869171142578
    8. ' else' → logprob: -11.508869171142578
    9. '<|end|>' → logprob: -11.883869171142578
    10. '	elif' → logprob: -12.133869171142578

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006400037091225386
    2. '           ' → logprob: -7.750639915466309
    3. 'elif' → logprob: -8.875639915466309
    4. '   ' → logprob: -10.500639915466309
    5. ' elif' → logprob: -11.250639915466309
    6. 'else' → logprob: -11.875639915466309
    7. '
' → logprob: -12.500639915466309
    8. ',' → logprob: -12.625639915466309
    9. 'continue' → logprob: -12.875639915466309
    10. '               ' → logprob: -13.500639915466309

Token 166: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23646390438079834
    2. 'elif' (adapté à ' elif') → logprob: -1.7364639043807983
    3. 'else' → logprob: -3.736464023590088
    4. ' elif' → logprob: -4.736464023590088
    5. ' else' → logprob: -6.861464023590088
    6. '   ' → logprob: -7.986464023590088
    7. '           ' → logprob: -8.11146354675293
    8. 'if' → logprob: -9.11146354675293
    9. '```' → logprob: -11.61146354675293
    10. '     ' → logprob: -12.11146354675293

Token 167: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.11747732013463974
    2. ' type' → logprob: -2.2424774169921875
    3. ' isinstance' → logprob: -5.9924774169921875
    4. 'is' → logprob: -6.3674774169921875
    5. 'a' → logprob: -8.492477416992188
    6. '(type' → logprob: -8.742477416992188
    7. ' a' → logprob: -10.617477416992188
    8. ' ' → logprob: -11.117477416992188
    9. '   ' → logprob: -11.742477416992188
    10. 'typeof' → logprob: -12.742477416992188

Token 168: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. 'a' → logprob: -18.125001907348633
    4. ' (' → logprob: -18.500001907348633
    5. '(b' → logprob: -18.750001907348633
    6. '((' → logprob: -19.250001907348633
    7. '(
' → logprob: -19.500001907348633
    8. '```' → logprob: -19.500001907348633
    9. '
' → logprob: -20.875001907348633
    10. '\(' → logprob: -21.000001907348633

Token 169: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00041982904076576233
    2. '(i' → logprob: -8.500419616699219
    3. ')' → logprob: -8.875419616699219
    4. '(a' → logprob: -10.125419616699219
    5. '[a' → logprob: -10.375419616699219
    6. '[' → logprob: -13.000419616699219
    7. 'a' → logprob: -13.750419616699219
    8. '   ' → logprob: -13.875419616699219
    9. ')[' → logprob: -14.500419616699219
    10. ')==' → logprob: -15.750419616699219

Token 170: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9623810658231378e-05
    2. ')==' → logprob: -11.750020027160645
    3. ' )' → logprob: -11.750020027160645
    4. '())' → logprob: -13.750020027160645
    5. '])' → logprob: -14.125020027160645
    6. '）' → logprob: -14.375020027160645
    7. ']' → logprob: -15.500020027160645
    8. '```' → logprob: -15.500020027160645
    9. '`)' → logprob: -15.625020027160645
    10. ')!=' → logprob: -15.750020027160645

Token 171: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24378328025341034
    2. ' ==' → logprob: -1.6187832355499268
    3. 'is' → logprob: -5.118783473968506
    4. ' !=' → logprob: -5.243783473968506
    5. ' is' → logprob: -5.493783473968506
    6. '!=' → logprob: -6.118783473968506
    7. ' ' → logprob: -7.493783473968506
    8. '```' → logprob: -11.118782997131348
    9. ')' → logprob: -11.243782997131348
    10. '=' → logprob: -11.493782997131348

Token 172: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.44015881419181824
    2. 'str' → logprob: -1.0651588439941406
    3. ' str' → logprob: -5.065158843994141
    4. ' int' → logprob: -5.315158843994141
    5. 'type' → logprob: -9.31515884399414
    6. 'list' → logprob: -10.44015884399414
    7. ' ' → logprob: -10.44015884399414
    8. '   ' → logprob: -12.81515884399414
    9. ' type' → logprob: -12.81515884399414
    10. '  ' → logprob: -13.19015884399414

Token 173: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0568019337952137
    2. 'and' → logprob: -2.9318020343780518
    3. ' or' → logprob: -6.806801795959473
    4. ':' → logprob: -7.556801795959473
    5. ' <' → logprob: -9.681801795959473
    6. ' else' → logprob: -10.056801795959473
    7. ',' → logprob: -10.181801795959473
    8. ' ' → logprob: -10.556801795959473
    9. 'else' → logprob: -10.556801795959473
    10. '>' → logprob: -11.181801795959473

Token 174: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.17981283366680145
    2. ' type' → logprob: -1.8048127889633179
    3. ' isinstance' → logprob: -9.80481243133545
    4. 'not' → logprob: -11.80481243133545
    5. ' not' → logprob: -12.92981243133545
    6. '(type' → logprob: -13.55481243133545
    7. 'is' → logprob: -14.05481243133545
    8. ' ' → logprob: -15.30481243133545
    9. 'b' → logprob: -15.92981243133545
    10. '	type' → logprob: -16.054813385009766

Token 175: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -9.088346359931165e-07
    2. 'b' → logprob: -14.125000953674316
    3. ' (' → logprob: -16.375
    4. '(' → logprob: -19.0
    5. ' b' → logprob: -19.75
    6. '[b' → logprob: -19.875
    7. '

' → logprob: -20.375
    8. '	b' → logprob: -20.375
    9. ' ' → logprob: -20.625
    10. '```' → logprob: -21.0

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017982310382649302
    2. ')' → logprob: -6.376798152923584
    3. '[b' → logprob: -9.876798629760742
    4. 'b' → logprob: -11.251798629760742
    5. '[' → logprob: -11.376798629760742
    6. '[a' → logprob: -11.876798629760742
    7. ']' → logprob: -12.751798629760742
    8. '[j' → logprob: -12.876798629760742
    9. '(i' → logprob: -13.501798629760742
    10. 'a' → logprob: -13.751798629760742

Token 177: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009820780251175165
    2. '])' → logprob: -8.000982284545898
    3. ')==' → logprob: -8.625982284545898
    4. '==' → logprob: -8.750982284545898
    5. '`)' → logprob: -9.625982284545898
    6. ' )' → logprob: -9.625982284545898
    7. '")' → logprob: -10.375982284545898
    8. '）' → logprob: -10.625982284545898
    9. '')' → logprob: -11.000982284545898
    10. '```' → logprob: -11.000982284545898

Token 178: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6178684830665588
    2. ' ==' → logprob: -0.8678684830665588
    3. ' !=' → logprob: -3.492868423461914
    4. '!=' → logprob: -4.742868423461914
    5. 'is' → logprob: -6.367868423461914
    6. ' is' → logprob: -8.992868423461914
    7. ' ' → logprob: -10.367868423461914
    8. '```' → logprob: -10.617868423461914
    9. ')' → logprob: -11.242868423461914
    10. '=' → logprob: -11.992868423461914

Token 179: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0019313741941004992
    2. ' str' → logprob: -6.251931190490723
    3. 'list' → logprob: -12.876931190490723
    4. ' ' → logprob: -16.12693214416504
    5. '	str' → logprob: -16.25193214416504
    6. '
' → logprob: -17.12693214416504
    7. '(str' → logprob: -17.37693214416504
    8. '[str' → logprob: -17.75193214416504
    9. '   ' → logprob: -18.25193214416504
    10. '```' → logprob: -18.25193214416504

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3488894999027252
    2. ':
' → logprob: -1.2238894701004028
    3. ':return' → logprob: -8.598889350891113
    4. ' :' → logprob: -9.723889350891113
    5. ':

' → logprob: -9.973889350891113
    6. '):
' → logprob: -10.098889350891113
    7. '       ' → logprob: -10.223889350891113
    8. ' :
' → logprob: -10.598889350891113
    9. '):' → logprob: -11.098889350891113
    10. ')' → logprob: -11.723889350891113

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8255959749221802
    2. 'return' → logprob: -1.0755959749221802
    3. '       ' → logprob: -1.7005959749221802
    4. ' return' → logprob: -3.4505958557128906
    5. '               ' → logprob: -5.200595855712891
    6. ':return' → logprob: -7.450595855712891
    7. '   ' → logprob: -8.57559585571289
    8. '	return' → logprob: -8.95059585571289
    9. '
' → logprob: -9.95059585571289
    10. '<|end|>' → logprob: -10.45059585571289

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008987867273390293
    2. ' return' → logprob: -4.758987903594971
    3. '           ' → logprob: -8.133987426757812
    4. '               ' → logprob: -9.633987426757812
    5. '       ' → logprob: -11.758987426757812
    6. '	return' → logprob: -13.133987426757812
    7. '
' → logprob: -13.133987426757812
    8. '   ' → logprob: -13.758987426757812
    9. ':return' → logprob: -14.383987426757812
    10. 'eturn' → logprob: -14.758987426757812

Token 183: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001503313542343676
    2. '1' → logprob: -6.5015034675598145
    3. ' -' → logprob: -13.876502990722656
    4. '−' → logprob: -17.626502990722656
    5. '```' → logprob: -17.751502990722656
    6. '0' → logprob: -18.501502990722656
    7. '\-' → logprob: -18.876502990722656
    8. '-
' → logprob: -19.126502990722656
    9. '–' → logprob: -19.251502990722656
    10. '

' → logprob: -19.501502990722656

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '2' → logprob: -19.0
    4. '-' → logprob: -19.5
    5. '１' → logprob: -20.0
    6. '```' → logprob: -20.0625
    7. '0' → logprob: -20.1875
    8. '   ' → logprob: -21.0
    9. '3' → logprob: -21.375
    10. '۱' → logprob: -21.875

Token 185: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003431858029216528
    2. 'elif' → logprob: -6.128431797027588
    3. '<|end|>' → logprob: -7.628431797027588
    4. ' elif' → logprob: -7.753431797027588
    5. '
' → logprob: -9.253432273864746
    6. '        
' → logprob: -9.378432273864746
    7. ',' → logprob: -10.378432273864746
    8. ')' → logprob: -10.628432273864746
    9. '	elif' → logprob: -10.753432273864746
    10. ' else' → logprob: -11.628432273864746

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003186863148584962
    2. 'elif' → logprob: -5.8781867027282715
    3. ' elif' → logprob: -7.8781867027282715
    4. '	elif' → logprob: -13.87818717956543
    5. '        
' → logprob: -14.12818717956543
    6. ',' → logprob: -14.50318717956543
    7. '<|end|>' → logprob: -15.12818717956543
    8. '      ' → logprob: -15.87818717956543
    9. '```' → logprob: -16.25318717956543
    10. '	' → logprob: -16.50318717956543

Token 187: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3224393427371979
    2. '       ' → logprob: -1.3224393129348755
    3. ' elif' → logprob: -4.697439193725586
    4. '	elif' → logprob: -11.697439193725586
    5. '   ' → logprob: -12.072439193725586
    6. ' ' → logprob: -13.947439193725586
    7. '     ' → logprob: -14.447439193725586
    8. 'elseif' → logprob: -15.197439193725586
    9. '      ' → logprob: -15.322439193725586
    10. '```' → logprob: -15.447439193725586

Token 188: ' type' (ID: 1490)
  Prédit: ' type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.6326205730438232
    2. 'type' → logprob: -0.7576205730438232
    3. '(type' → logprob: -11.882620811462402
    4. '   ' → logprob: -12.132620811462402
    5. ' ' → logprob: -12.382620811462402
    6. ' isinstance' → logprob: -13.382620811462402
    7. '  ' → logprob: -13.632620811462402
    8. '    ' → logprob: -14.132620811462402
    9. '	type' → logprob: -14.632620811462402
    10. '[type' → logprob: -15.007620811462402

Token 189: '(a' (ID: 6271)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.3868741989135742
    2. '(a' → logprob: -1.1368741989135742
    3. 'a' → logprob: -13.011874198913574
    4. '(' → logprob: -14.511874198913574
    5. 'b' → logprob: -15.136874198913574
    6. '(str' → logprob: -16.63687515258789
    7. '(s' → logprob: -16.88687515258789
    8. ' (' → logprob: -18.13687515258789
    9. '(o' → logprob: -19.88687515258789
    10. '((' → logprob: -19.88687515258789

Token 190: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. '[j' → logprob: -12.125008583068848
    3. '[' → logprob: -14.000008583068848
    4. ')' → logprob: -14.250008583068848
    5. 'i' → logprob: -14.250008583068848
    6. '(i' → logprob: -15.750008583068848
    7. '[a' → logprob: -16.00000762939453
    8. ']' → logprob: -16.62500762939453
    9. '[b' → logprob: -16.62500762939453
    10. '   ' → logprob: -17.12500762939453

Token 191: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008490558248013258
    2. '==' → logprob: -7.75084924697876
    3. ')==' → logprob: -8.750848770141602
    4. '])' → logprob: -9.125848770141602
    5. ']' → logprob: -10.125848770141602
    6. '）' → logprob: -10.625848770141602
    7. ' ==' → logprob: -10.625848770141602
    8. ' )' → logprob: -10.875848770141602
    9. 'a' → logprob: -11.500848770141602
    10. '[' → logprob: -12.500848770141602

Token 192: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023285686969757
    2. '==' → logprob: -1.9102329015731812
    3. ' ' → logprob: -12.410232543945312
    4. 'is' → logprob: -13.535232543945312
    5. ' is' → logprob: -13.785232543945312
    6. ')' → logprob: -13.910232543945312
    7. '=' → logprob: -14.535232543945312
    8. '```' → logprob: -15.785232543945312
    9. '==
' → logprob: -16.285232543945312
    10. ')==' → logprob: -16.285232543945312

Token 193: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.02054562419652939
    2. ' str' → logprob: -3.895545721054077
    3. 'int' → logprob: -13.270545959472656
    4. '	str' → logprob: -14.145545959472656
    5. '[str' → logprob: -14.520545959472656
    6. ' ' → logprob: -15.770545959472656
    7. 's' → logprob: -16.020545959472656
    8. 'list' → logprob: -16.020545959472656
    9. 'stri' → logprob: -16.270545959472656
    10. '   ' → logprob: -16.520545959472656

Token 194: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023277394473552704
    2. 'and' → logprob: -3.7732772827148438
    3. ' ' → logprob: -10.398277282714844
    4. '    ' → logprob: -14.898277282714844
    5. ' и' → logprob: -15.273277282714844
    6. '        ' → logprob: -15.648277282714844
    7. '   ' → logprob: -16.148277282714844
    8. '<|end|>' → logprob: -16.398277282714844
    9. '	and' → logprob: -16.398277282714844
    10. ')' → logprob: -16.523277282714844

Token 195: ' type' (ID: 1490)
  Prédit: ' type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.6931573748588562
    2. 'type' → logprob: -0.6931573748588562
    3. ' isinstance' → logprob: -11.693157196044922
    4. '(type' → logprob: -13.943157196044922
    5. ' ' → logprob: -15.068157196044922
    6. '  ' → logprob: -15.068157196044922
    7. '   ' → logprob: -15.693157196044922
    8. '	type' → logprob: -17.068157196044922
    9. '    ' → logprob: -17.443157196044922
    10. 'typeof' → logprob: -17.818157196044922

Token 196: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.3464544432936236e-05
    2. 'b' → logprob: -10.250043869018555
    3. '(a' → logprob: -12.625043869018555
    4. ' (' → logprob: -12.750043869018555
    5. 'a' → logprob: -13.875043869018555
    6. '[b' → logprob: -14.500043869018555
    7. '(' → logprob: -16.250043869018555
    8. ' ' → logprob: -16.375043869018555
    9. '```' → logprob: -16.375043869018555
    10. '   ' → logprob: -16.750043869018555

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00024382755509577692
    2. 'b' → logprob: -8.875244140625
    3. '(i' → logprob: -10.250244140625
    4. 'i' → logprob: -10.500244140625
    5. '[b' → logprob: -10.500244140625
    6. ')' → logprob: -12.250244140625
    7. '[' → logprob: -13.250244140625
    8. 'int' → logprob: -13.375244140625
    9. 'a' → logprob: -13.625244140625
    10. '[int' → logprob: -14.125244140625

Token 198: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4845786690711975
    2. ']' → logprob: -1.2345786094665527
    3. '])' → logprob: -2.6095786094665527
    4. ']==' → logprob: -4.359578609466553
    5. '==' → logprob: -5.359578609466553
    6. ')==' → logprob: -7.359578609466553
    7. ' ==' → logprob: -7.859578609466553
    8. '[' → logprob: -8.109579086303711
    9. '[i' → logprob: -8.359579086303711
    10. '）' → logprob: -8.484579086303711

Token 199: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4287968575954437
    2. ' ==' → logprob: -1.0537968873977661
    3. ')' → logprob: -10.178796768188477
    4. ' ' → logprob: -11.553796768188477
    5. ')==' → logprob: -11.553796768188477
    6. ']==' → logprob: -11.803796768188477
    7. '=' → logprob: -11.928796768188477
    8. '=="' → logprob: -12.303796768188477
    9. '=='' → logprob: -12.303796768188477
    10. '==-' → logprob: -12.428796768188477

Token 200: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00023441045777872205
    2. ' int' → logprob: -8.375234603881836
    3. 'str' → logprob: -13.000234603881836
    4. ' ' → logprob: -14.000234603881836
    5. '[int' → logprob: -15.125234603881836
    6. '   ' → logprob: -15.625234603881836
    7. '<int' → logprob: -16.250234603881836
    8. '(int' → logprob: -16.500234603881836
    9. '=int' → logprob: -16.500234603881836
    10. ' str' → logprob: -17.125234603881836

Token 201: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6538660526275635
    2. ':' → logprob: -0.7788660526275635
    3. '           ' → logprob: -3.9038660526275635
    4. ':return' → logprob: -7.903865814208984
    5. ':

' → logprob: -8.903865814208984
    6. '):
' → logprob: -8.903865814208984
    7. '       ' → logprob: -10.153865814208984
    8. '):' → logprob: -10.153865814208984
    9. ' :' → logprob: -10.528865814208984
    10. ' :
' → logprob: -10.903865814208984

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31551066040992737
    2. '1' → logprob: -1.315510630607605
    3. ' ' → logprob: -6.4405107498168945
    4. 'return' → logprob: -7.8155107498168945
    5. ' return' → logprob: -8.565510749816895
    6. '
' → logprob: -11.065510749816895
    7. '	       ' → logprob: -11.815510749816895
    8. '		' → logprob: -11.940510749816895
    9. '       ' → logprob: -12.190510749816895
    10. '   ' → logprob: -12.315510749816895

Token 203: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2941213846206665
    2. 'return' (adapté à ' return') → logprob: -1.7941213846206665
    3. '           ' → logprob: -3.169121265411377
    4. ' return' → logprob: -3.544121265411377
    5. ' ' → logprob: -4.044121265411377
    6. '-' → logprob: -10.544121742248535
    7. '               ' → logprob: -10.919121742248535
    8. '
' → logprob: -11.294121742248535
    9. '   ' → logprob: -12.169121742248535
    10. '            ' → logprob: -12.669121742248535

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269417703151703
    2. '-' → logprob: -2.126941680908203
    3. ' ' → logprob: -11.751941680908203
    4. ' -' → logprob: -12.126941680908203
    5. '   ' → logprob: -15.501941680908203
    6. '```' → logprob: -16.626941680908203
    7. '−' → logprob: -17.751941680908203
    8. '  ' → logprob: -18.001941680908203
    9. '+' → logprob: -18.876941680908203
    10. '(' → logprob: -18.876941680908203

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '-' → logprob: -12.250004768371582
    3. ' ' → logprob: -14.875004768371582
    4. '```' → logprob: -17.5000057220459
    5. ' -' → logprob: -18.8750057220459
    6. '   ' → logprob: -19.0000057220459
    7. '  ' → logprob: -19.7500057220459
    8. '<|end|>' → logprob: -20.1250057220459
    9. '+' → logprob: -21.0000057220459
    10. '۱' → logprob: -21.3750057220459

Token 206: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001188445370644331
    2. 'elif' → logprob: -7.251188278198242
    3. '   ' → logprob: -7.876188278198242
    4. ' elif' → logprob: -9.626188278198242
    5. 'else' → logprob: -11.376188278198242
    6. '           ' → logprob: -12.251188278198242
    7. ' else' → logprob: -12.376188278198242
    8. '	' → logprob: -13.251188278198242
    9. '	elif' → logprob: -13.376188278198242
    10. '     ' → logprob: -13.376188278198242

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035049226135015488
    2. 'elif' → logprob: -5.878504753112793
    3. ' elif' → logprob: -7.503504753112793
    4. '   ' → logprob: -9.253504753112793
    5. 'else' → logprob: -10.753504753112793
    6. ' else' → logprob: -11.378504753112793
    7. '	' → logprob: -11.878504753112793
    8. '	elif' → logprob: -12.128504753112793
    9. ' ' → logprob: -13.503504753112793
    10. '<|end|>' → logprob: -13.628504753112793

Token 208: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.1391294151544571
    2. '       ' → logprob: -3.014129400253296
    3. ' elif' → logprob: -3.139129400253296
    4. 'else' (adapté à ' else') → logprob: -3.389129400253296
    5. ' else' → logprob: -6.014129638671875
    6. '   ' → logprob: -6.764129638671875
    7. '	elif' → logprob: -9.014129638671875
    8. ' ' → logprob: -11.764129638671875
    9. '     ' → logprob: -12.889129638671875
    10. '           ' → logprob: -13.139129638671875

Token 209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8272815942764282
    2. '       ' → logprob: -1.0772815942764282
    3. '           ' → logprob: -2.0772814750671387
    4. ' if' → logprob: -2.4522814750671387
    5. ':
' → logprob: -4.827281475067139
    6. 'if' → logprob: -6.202281475067139
    7. '        ' → logprob: -8.202281951904297
    8. '   ' → logprob: -8.827281951904297
    9. ' :' → logprob: -8.952281951904297
    10. '      ' → logprob: -9.577281951904297

Token 210: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4967317581176758
    2. '           ' → logprob: -1.9967317581176758
    3. '       ' → logprob: -1.9967317581176758
    4. ' if' → logprob: -2.121731758117676
    5. '   ' → logprob: -9.496731758117676
    6. '	if' → logprob: -12.371731758117676
    7. '        ' → logprob: -12.621731758117676
    8. '               ' → logprob: -12.621731758117676
    9. '     ' → logprob: -12.996731758117676
    10. '	       ' → logprob: -13.246731758117676

Token 211: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014290554448962212
    2. ' if' → logprob: -4.2642903327941895
    3. '           ' → logprob: -9.014290809631348
    4. '       ' → logprob: -12.264290809631348
    5. 'return' → logprob: -15.764290809631348
    6. '```' → logprob: -16.26428985595703
    7. '          ' → logprob: -16.38928985595703
    8. '   ' → logprob: -16.38928985595703
    9. '        ' → logprob: -16.51428985595703
    10. '	if' → logprob: -16.88928985595703

Token 212: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3132631182670593
    2. ' a' → logprob: -1.313263177871704
    3. '   ' → logprob: -14.188262939453125
    4. '	a' → logprob: -14.688262939453125
    5. ' ' → logprob: -16.063262939453125
    6. '(a' → logprob: -16.438262939453125
    7. '    ' → logprob: -17.688262939453125
    8. ' ' → logprob: -18.188262939453125
    9. '_a' → logprob: -18.313262939453125
    10. '  ' → logprob: -18.438262939453125

Token 213: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. ' ' → logprob: -19.625
    4. '[a' → logprob: -19.625
    5. '[I' → logprob: -19.75
    6. '```' → logprob: -19.75
    7. ')' → logprob: -20.25
    8. 'i' → logprob: -20.5
    9. ')[' → logprob: -20.875
    10. '[j' → logprob: -21.0

Token 214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009412388317286968
    2. ']<' → logprob: -7.500941276550293
    3. '[i' → logprob: -8.250941276550293
    4. '<' → logprob: -9.500941276550293
    5. '[' → logprob: -11.000941276550293
    6. ']!=' → logprob: -11.000941276550293
    7. '][' → logprob: -12.000941276550293
    8. ' ]' → logprob: -12.250941276550293
    9. ' <' → logprob: -13.125941276550293
    10. '```' → logprob: -13.500941276550293

Token 215: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2524172067642212
    2. ' <' → logprob: -1.5024172067642212
    3. '[' → logprob: -8.25241756439209
    4. ' !=' → logprob: -9.25241756439209
    5. '!=' → logprob: -9.75241756439209
    6. ' ' → logprob: -10.00241756439209
    7. '```' → logprob: -12.00241756439209
    8. ']' → logprob: -12.37741756439209
    9. '[i' → logprob: -13.00241756439209
    10. '<len' → logprob: -13.62741756439209

Token 216: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2519325911998749
    2. ' b' → logprob: -1.5019326210021973
    3. ' ' → logprob: -12.626932144165039
    4. '	b' → logprob: -16.12693214416504
    5. '  ' → logprob: -17.25193214416504
    6. '   ' → logprob: -17.37693214416504
    7. '=' → logprob: -18.00193214416504
    8. '    ' → logprob: -18.12693214416504
    9. '=b' → logprob: -18.50193214416504
    10. ')b' → logprob: -18.87693214416504

Token 217: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. 'i' → logprob: -16.5
    4. '(i' → logprob: -17.0
    5. '```' → logprob: -18.5
    6. '{i' → logprob: -20.125
    7. '<|end|>' → logprob: -20.125
    8. ' i' → logprob: -20.25
    9. '[
' → logprob: -20.375
    10. '[I' → logprob: -20.625

Token 218: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8603984117507935
    2. '<|end|>' → logprob: -1.7353984117507935
    3. '):' → logprob: -1.9853984117507935
    4. ']:' → logprob: -2.610398292541504
    5. '):
' → logprob: -2.610398292541504
    6. ']:
' → logprob: -3.360398292541504
    7. ':
' → logprob: -3.360398292541504
    8. '       ' → logprob: -3.735398292541504
    9. ':return' → logprob: -4.985398292541504
    10. '           ' → logprob: -5.735398292541504

Token 219: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009583894861862063
    2. ' return' → logprob: -7.500958442687988
    3. 'return' → logprob: -8.000958442687988
    4. ':return' → logprob: -10.250958442687988
    5. ':
' → logprob: -11.375958442687988
    6. '           ' → logprob: -12.125958442687988
    7. '<|end|>' → logprob: -12.625958442687988
    8. '
' → logprob: -13.000958442687988
    9. '              ' → logprob: -13.250958442687988
    10. ',' → logprob: -13.375958442687988

Token 220: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5797773003578186
    2. ' return' → logprob: -0.8297773003578186
    3. '               ' → logprob: -5.579777240753174
    4. '           ' → logprob: -10.454777717590332
    5. '                   ' → logprob: -11.954777717590332
    6. '
' → logprob: -12.079777717590332
    7. '   ' → logprob: -12.329777717590332
    8. '	return' → logprob: -12.704777717590332
    9. ':return' → logprob: -13.079777717590332
    10. '1' → logprob: -13.329777717590332

Token 221: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38687121868133545
    2. ' -' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.636871337890625
    4. '           ' → logprob: -17.136871337890625
    5. '```' → logprob: -17.511871337890625
    6. '   ' → logprob: -17.636871337890625
    7. '1' → logprob: -17.886871337890625
    8. '               ' → logprob: -19.261871337890625
    9. '(-' → logprob: -19.261871337890625
    10. '	' → logprob: -19.636871337890625

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '<|end|>' → logprob: -17.375
    4. '```' → logprob: -18.75
    5. '...' → logprob: -19.875
    6. '0' → logprob: -20.1875
    7. '<|end|>' → logprob: -20.5
    8. '-' → logprob: -20.625
    9. '   ' → logprob: -20.875
    10. 'continue' → logprob: -20.9375

Token 223: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.743758760625497e-05
    2. '       ' → logprob: -10.500077247619629
    3. 'elif' → logprob: -10.750077247619629
    4. '
' → logprob: -10.875077247619629
    5. ' elif' → logprob: -12.625077247619629
    6. '               ' → logprob: -13.750077247619629
    7. '```' → logprob: -14.000077247619629
    8. '		' → logprob: -14.000077247619629
    9. '          ' → logprob: -14.375077247619629
    10. '<|end|>' → logprob: -14.500077247619629

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.717296517104842e-05
    2. '       ' → logprob: -10.625057220458984
    3. 'elif' → logprob: -10.750057220458984
    4. ' elif' → logprob: -11.875057220458984
    5. '               ' → logprob: -13.000057220458984
    6. '          ' → logprob: -14.250057220458984
    7. '		' → logprob: -14.875057220458984
    8. '   ' → logprob: -15.500057220458984
    9. '<|end|>' → logprob: -15.500057220458984
    10. ',' → logprob: -16.125057220458984

Token 225: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15343762934207916
    2. ' elif' → logprob: -2.528437614440918
    3. 'elif' (adapté à ' elif') → logprob: -2.778437614440918
    4. '       ' → logprob: -8.528437614440918
    5. '	elif' → logprob: -9.403437614440918
    6. '   ' → logprob: -11.778437614440918
    7. '		' → logprob: -11.778437614440918
    8. '               ' → logprob: -11.903437614440918
    9. '          ' → logprob: -12.528437614440918
    10. '```' → logprob: -13.028437614440918

Token 226: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38687190413475037
    2. ' a' → logprob: -1.1368719339370728
    3. '	a' → logprob: -14.261872291564941
    4. '   ' → logprob: -16.636871337890625
    5. ' ' → logprob: -16.761871337890625
    6. '>a' → logprob: -17.011871337890625
    7. '_a' → logprob: -17.761871337890625
    8. '(a' → logprob: -17.886871337890625
    9. ')a' → logprob: -18.136871337890625
    10. 's' → logprob: -18.136871337890625

Token 227: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00038586699520237744
    2. 'a' → logprob: -8.250386238098145
    3. 'i' → logprob: -9.250386238098145
    4. ' a' → logprob: -11.500386238098145
    5. '```' → logprob: -11.750386238098145
    6. ' i' → logprob: -12.375386238098145
    7. ' ' → logprob: -13.625386238098145
    8. '   ' → logprob: -13.750386238098145
    9. 's' → logprob: -13.875386238098145
    10. '``' → logprob: -14.875386238098145

Token 228: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07653156667947769
    2. '>' → logprob: -3.4515316486358643
    3. '[i' → logprob: -3.7015316486358643
    4. ']>' → logprob: -4.076531410217285
    5. ' >' → logprob: -8.201531410217285
    6. '][' → logprob: -10.576531410217285
    7. '[' → logprob: -10.951531410217285
    8. ' ]' → logprob: -13.326531410217285
    9. '>[' → logprob: -13.451531410217285
    10. '+' → logprob: -13.826531410217285

Token 229: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20436611771583557
    2. '>' → logprob: -1.7043660879135132
    3. '[i' → logprob: -5.829366207122803
    4. '[' → logprob: -12.954365730285645
    5. ' ' → logprob: -13.204365730285645
    6. '>a' → logprob: -14.079365730285645
    7. '>[' → logprob: -14.329365730285645
    8. '[a' → logprob: -14.579365730285645
    9. ']>' → logprob: -14.829365730285645
    10. '>b' → logprob: -15.079365730285645

Token 230: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16022513806819916
    2. 'b' → logprob: -1.9102251529693604
    3. ' ' → logprob: -14.285224914550781
    4. '	b' → logprob: -16.41022491455078
    5. 'a' → logprob: -16.66022491455078
    6. ')b' → logprob: -16.78522491455078
    7. '   ' → logprob: -17.41022491455078
    8. '>b' → logprob: -17.66022491455078
    9. ' a' → logprob: -17.78522491455078
    10. '1' → logprob: -17.91022491455078

Token 231: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.875003814697266
    3. 'i' → logprob: -14.250003814697266
    4. ')' → logprob: -14.250003814697266
    5. '(i' → logprob: -14.375003814697266
    6. ']' → logprob: -15.500003814697266
    7. '>' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.625003814697266
    9. '```' → logprob: -16.875003814697266
    10. ''i' → logprob: -17.125003814697266

Token 232: ']:
' (ID: 22152)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3421323001384735
    2. ']:
' → logprob: -2.092132329940796
    3. '1' → logprob: -2.717132329940796
    4. '):
' → logprob: -3.092132329940796
    5. ':
' → logprob: -3.592132329940796
    6. ':' → logprob: -4.467132091522217
    7. '           ' → logprob: -5.467132091522217
    8. ']:' → logprob: -5.842132091522217
    9. ':return' → logprob: -6.217132091522217
    10. '0' → logprob: -6.592132091522217

Token 233: '               ' (ID: 506)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014472603797912598
    2. ' ' → logprob: -6.7514472007751465
    3. '               ' → logprob: -8.251447677612305
    4. '           ' → logprob: -11.376447677612305
    5. '0' → logprob: -13.501447677612305
    6. 'return' → logprob: -13.876447677612305
    7. '```' → logprob: -14.376447677612305
    8. '   ' → logprob: -14.501447677612305
    9. ' return' → logprob: -14.626447677612305
    10. '                   ' → logprob: -15.001447677612305

Token 234: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019797838758677244
    2. ' ' → logprob: -6.251979827880859
    3. 'return' (adapté à ' return') → logprob: -10.25197982788086
    4. ' return' → logprob: -11.75197982788086
    5. '               ' → logprob: -11.87697982788086
    6. '           ' → logprob: -14.25197982788086
    7. '0' → logprob: -15.87697982788086
    8. '   ' → logprob: -16.50197982788086
    9. '                   ' → logprob: -16.87697982788086
    10. '```' → logprob: -17.75197982788086

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -19.25004005432129
    4. '  ' → logprob: -21.12504005432129
    5. '```' → logprob: -21.12504005432129
    6. ' ' → logprob: -22.12504005432129
    7. '           ' → logprob: -22.87504005432129
    8. '
' → logprob: -23.12504005432129
    9. '１' → logprob: -23.50004005432129
    10. '۱' → logprob: -23.87504005432129

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -21.375
    4. '
' → logprob: -21.75
    5. '   ' → logprob: -21.75
    6. '+' → logprob: -23.125
    7. '  ' → logprob: -23.5
    8. '１' → logprob: -23.75
    9. ' ' → logprob: -24.0
    10. '           ' → logprob: -24.125

Token 237: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.380904672667384e-05
    2. '       ' → logprob: -10.750033378601074
    3. '    
' → logprob: -12.250033378601074
    4. 'return' → logprob: -12.500033378601074
    5. '```' → logprob: -13.625033378601074
    6. '
' → logprob: -14.125033378601074
    7. ' return' → logprob: -14.625033378601074
    8. '#' → logprob: -15.000033378601074
    9. '        
' → logprob: -15.125033378601074
    10. 'continue' → logprob: -15.750033378601074

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.7133641196996905e-05
    2. '       ' → logprob: -11.37502670288086
    3. 'return' → logprob: -11.62502670288086
    4. ' return' → logprob: -12.12502670288086
    5. '
' → logprob: -14.75002670288086
    6. 'if' → logprob: -15.37502670288086
    7. '    
' → logprob: -15.62502670288086
    8. '```' → logprob: -16.12502670288086
    9. '#' → logprob: -16.87502670288086
    10. ' if' → logprob: -17.00002670288086

Token 239: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00019865304057020694
    2. '   ' → logprob: -9.000198364257812
    3. 'return' → logprob: -10.000198364257812
    4. ' if' → logprob: -10.500198364257812
    5. '
' → logprob: -13.250198364257812
    6. '```' → logprob: -14.500198364257812
    7. '    
' → logprob: -17.250198364257812
    8. '       ' → logprob: -18.000198364257812
    9. '	if' → logprob: -18.125198364257812
    10. 'for' → logprob: -18.875198364257812

Token 240: ' all' (ID: 722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004377022560220212
    2. ' if' → logprob: -7.7504377365112305
    3. 'return' → logprob: -12.12543773651123
    4. '   ' → logprob: -14.25043773651123
    5. 'If' → logprob: -14.25043773651123
    6. '#' → logprob: -15.00043773651123
    7. 'elif' → logprob: -18.000436782836914
    8. ' return' → logprob: -18.375436782836914
    9. '	if' → logprob: -18.500436782836914
    10. '```' → logprob: -18.625436782836914

Token 241: ' matched' (ID: 31366)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.43391579389572144
    2. ' tokens' → logprob: -1.6839158535003662
    3. 'if' → logprob: -1.9339158535003662
    4. '_tokens' → logprob: -5.433915615081787
    5. ' if' → logprob: -5.683915615081787
    6. 'elif' → logprob: -5.933915615081787
    7. 'elements' → logprob: -6.308915615081787
    8. ' elements' → logprob: -6.558915615081787
    9. 'for' → logprob: -6.683915615081787
    10. '   ' → logprob: -6.808915615081787

Token 242: ' so' (ID: 813)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30054807662963867
    2. 'if' → logprob: -1.5505480766296387
    3. '   ' → logprob: -3.0505480766296387
    4. '       ' → logprob: -9.300548553466797
    5. 'for' → logprob: -11.800548553466797
    6. ' for' → logprob: -11.925548553466797
    7. ',' → logprob: -12.050548553466797
    8. '	if' → logprob: -12.800548553466797
    9. '  ' → logprob: -13.175548553466797
    10. ' ' → logprob: -13.175548553466797

Token 243: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.0004534334584604949
    2. ' far' → logprob: -8.000452995300293
    3. 'r' → logprob: -9.750452995300293
    4. '   ' → logprob: -10.125452995300293
    5. 'f' → logprob: -12.000452995300293
    6. '_far' → logprob: -12.125452995300293
    7. ' ' → logprob: -12.750452995300293
    8. '  ' → logprob: -13.625452995300293
    9. 'ur' → logprob: -14.000452995300293
    10. 'Far' → logprob: -14.125452995300293

Token 244: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22783896327018738
    2. '   ' → logprob: -1.9778389930725098
    3. ' if' → logprob: -2.7278389930725098
    4. '
' → logprob: -11.727838516235352
    5. '	if' → logprob: -12.852838516235352
    6. 'If' → logprob: -12.852838516235352
    7. '       ' → logprob: -13.102838516235352
    8. 'return' → logprob: -13.477838516235352
    9. '    
' → logprob: -14.477838516235352
    10. '  ' → logprob: -14.477838516235352

Token 245: ' shorter' (ID: 37168)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03830081969499588
    2. ' if' → logprob: -3.2883007526397705
    3. '   ' → logprob: -8.288300514221191
    4. 'return' → logprob: -11.913300514221191
    5. ' return' → logprob: -13.788300514221191
    6. '	if' → logprob: -16.663301467895508
    7. '       ' → logprob: -17.288301467895508
    8. ' ' → logprob: -18.038301467895508
    9. '  ' → logprob: -19.163301467895508
    10. '#' → logprob: -19.288301467895508

Token 246: ' comes' (ID: 5124)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20239996910095215
    2. ' if' → logprob: -1.7023999691009521
    3. 'return' → logprob: -7.702400207519531
    4. '<' → logprob: -9.202400207519531
    5. '   ' → logprob: -9.202400207519531
    6. 'a' → logprob: -9.702400207519531
    7. ' return' → logprob: -9.952400207519531
    8. 's' → logprob: -10.077400207519531
    9. ' <' → logprob: -10.202400207519531
    10. '<len' → logprob: -10.577400207519531

Token 247: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.028412409126758575
    2. 'before' → logprob: -3.653412342071533
    3. ' first' → logprob: -6.778412342071533
    4. '-' → logprob: -7.278412342071533
    5. 'next' → logprob: -9.278412818908691
    6. '_first' → logprob: -10.153412818908691
    7. '-before' → logprob: -10.278412818908691
    8. '   ' → logprob: -10.778412818908691
    9. '-first' → logprob: -10.903412818908691
    10. 'last' → logprob: -11.278412818908691

Token 248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006756932940334082
    2. ' if' → logprob: -5.381756782531738
    3. 'if' → logprob: -6.756756782531738
    4. '
' → logprob: -7.381756782531738
    5. '  
' → logprob: -8.381756782531738
    6. '    
' → logprob: -9.881756782531738
    7. ' ' → logprob: -10.756756782531738
    8. '       ' → logprob: -11.256756782531738
    9. '  ' → logprob: -11.881756782531738
    10. '<|end|>' → logprob: -12.256756782531738

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002622862346470356
    2. ' if' → logprob: -6.252623081207275
    3. '  
' → logprob: -8.502622604370117
    4. '       ' → logprob: -8.752622604370117
    5. 'if' → logprob: -8.877622604370117
    6. '
' → logprob: -9.627622604370117
    7. '    
' → logprob: -9.752622604370117
    8. ' ' → logprob: -10.502622604370117
    9. ',' → logprob: -11.627622604370117
    10. '<|end|>' → logprob: -12.127622604370117

Token 250: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1967720091342926
    2. ' if' → logprob: -2.1967720985412598
    3. '   ' → logprob: -2.6967720985412598
    4. 'return' → logprob: -10.321771621704102
    5. '	if' → logprob: -13.821771621704102
    6. '       ' → logprob: -13.821771621704102
    7. ' return' → logprob: -13.946771621704102
    8. ' ' → logprob: -14.071771621704102
    9. '```' → logprob: -14.446771621704102
    10. '  ' → logprob: -15.321771621704102

Token 251: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.20141607522964478
    2. ' la' → logprob: -1.701416015625
    3. 'len' → logprob: -13.576416015625
    4. '   ' → logprob: -14.451416015625
    5. '_la' → logprob: -14.951416015625
    6. ' ' → logprob: -15.201416015625
    7. '.la' → logprob: -16.576416015625
    8. '  ' → logprob: -16.576416015625
    9. '(' → logprob: -16.951416015625
    10. 'La' → logprob: -17.451416015625

Token 252: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.428724080324173
    2. '<' → logprob: -1.0537240505218506
    3. ' ' → logprob: -11.30372428894043
    4. '<|end|>' → logprob: -12.80372428894043
    5. '<len' → logprob: -13.17872428894043
    6. '<n' → logprob: -13.55372428894043
    7. '<size' → logprob: -13.92872428894043
    8. '<int' → logprob: -14.17872428894043
    9. '```' → logprob: -14.67872428894043
    10. '()<' → logprob: -14.92872428894043

Token 253: ' lb' (ID: 32474)
  Prédit: 'lb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lb' → logprob: -0.0297523383051157
    2. ' lb' → logprob: -3.529752254486084
    3. '(lb' → logprob: -13.654752731323242
    4. ' ' → logprob: -14.279752731323242
    5. 'len' → logprob: -17.404752731323242
    6. '.lb' → logprob: -18.279752731323242
    7. 'lbs' → logprob: -18.279752731323242
    8. '   ' → logprob: -18.279752731323242
    9. '_lb' → logprob: -18.404752731323242
    10. 'l' → logprob: -19.029752731323242

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12778495252132416
    2. ':
' → logprob: -2.1277849674224854
    3. ':return' → logprob: -7.377784729003906
    4. '   ' → logprob: -9.127784729003906
    5. '       ' → logprob: -9.502784729003906
    6. '):
' → logprob: -11.127784729003906
    7. '):' → logprob: -11.502784729003906
    8. ':
' → logprob: -12.252784729003906
    9. ':

' → logprob: -12.252784729003906
    10. 'return' → logprob: -12.377784729003906

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09387969225645065
    2. ' return' → logprob: -2.8438796997070312
    3. 'return' → logprob: -3.4688796997070312
    4. '
' → logprob: -8.718879699707031
    5. '   ' → logprob: -10.468879699707031
    6. '	return' → logprob: -11.093879699707031
    7. ':return' → logprob: -11.218879699707031
    8. '           ' → logprob: -11.343879699707031
    9. '0' → logprob: -12.343879699707031
    10. 'eturn' → logprob: -12.843879699707031

Token 256: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2045545130968094
    2. ' return' → logprob: -1.704554557800293
    3. '       ' → logprob: -5.829554557800293
    4. '
' → logprob: -9.329554557800293
    5. '   ' → logprob: -9.454554557800293
    6. '           ' → logprob: -11.579554557800293
    7. '	return' → logprob: -11.579554557800293
    8. ':return' → logprob: -12.454554557800293
    9. 'eturn' → logprob: -12.829554557800293
    10. ' 
' → logprob: -13.704554557800293

Token 257: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.5491004129871726e-05
    2. ' -' → logprob: -10.000045776367188
    3. '   ' → logprob: -20.250045776367188
    4. '0' → logprob: -21.750045776367188
    5. '\-' → logprob: -22.375045776367188
    6. ' ' → logprob: -22.625045776367188
    7. '```' → logprob: -23.000045776367188
    8. '−' → logprob: -23.625045776367188
    9. '
' → logprob: -23.750045776367188
    10. '-c' → logprob: -23.750045776367188

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '<|end|>' → logprob: -17.75
    4. '```' → logprob: -18.375
    5. '2' → logprob: -19.125
    6. 'len' → logprob: -19.375
    7. '0' → logprob: -19.875
    8. '-' → logprob: -20.0
    9. 'la' → logprob: -20.125
    10. '   ' → logprob: -20.25

Token 259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012078913860023022
    2. 'elif' → logprob: -4.762078762054443
    3. '<|end|>' → logprob: -6.637078762054443
    4. ' elif' → logprob: -6.887078762054443
    5. '
' → logprob: -7.512078762054443
    6. '       ' → logprob: -8.762079238891602
    7. '	elif' → logprob: -9.137079238891602
    8. '  ' → logprob: -9.262079238891602
    9. ')' → logprob: -9.887079238891602
    10. '    
' → logprob: -10.012079238891602

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006257029599510133
    2. 'elif' → logprob: -7.6256256103515625
    3. '<|end|>' → logprob: -9.250625610351562
    4. ' elif' → logprob: -11.000625610351562
    5. '  ' → logprob: -11.750625610351562
    6. 'if' → logprob: -12.125625610351562
    7. '	elif' → logprob: -12.875625610351562
    8. '       ' → logprob: -13.250625610351562
    9. '.' → logprob: -13.750625610351562
    10. ',' → logprob: -13.750625610351562

Token 261: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.015784937888383865
    2. '   ' → logprob: -4.890784740447998
    3. 'if' → logprob: -4.890784740447998
    4. ' elif' → logprob: -7.390784740447998
    5. ' if' → logprob: -12.140785217285156
    6. 'else' → logprob: -13.015785217285156
    7. ' ' → logprob: -13.515785217285156
    8. 'return' → logprob: -13.765785217285156
    9. '	elif' → logprob: -14.140785217285156
    10. '```' → logprob: -14.140785217285156

Token 262: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.006715728435665369
    2. ' la' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.506715774536133
    4. '_la' → logprob: -15.881715774536133
    5. 'lb' → logprob: -16.756715774536133
    6. 'La' → logprob: -18.256715774536133
    7. ' ' → logprob: -18.381715774536133
    8. 'ma' → logprob: -19.256715774536133
    9. '.la' → logprob: -19.256715774536133
    10. '/la' → logprob: -19.381715774536133

Token 263: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931722164154053
    2. ' >' → logprob: -0.6931722164154053
    3. '<' → logprob: -11.443172454833984
    4. ' <' → logprob: -11.568172454833984
    5. ' ' → logprob: -13.068172454833984
    6. '   ' → logprob: -14.568172454833984
    7. '<|end|>' → logprob: -14.568172454833984
    8. '()>' → logprob: -14.943172454833984
    9. ' ' → logprob: -15.193172454833984
    10. '>
' → logprob: -15.568172454833984

Token 264: ' lb' (ID: 32474)
  Prédit: 'lb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lb' → logprob: -0.07889155298471451
    2. ' lb' → logprob: -2.5788915157318115
    3. '(lb' → logprob: -13.45389175415039
    4. '   ' → logprob: -15.32889175415039
    5. ' ' → logprob: -16.32889175415039
    6. 'lbs' → logprob: -17.82889175415039
    7. '  ' → logprob: -18.07889175415039
    8. '    ' → logprob: -18.45389175415039
    9. '_lb' → logprob: -18.70389175415039
    10. 'rb' → logprob: -18.82889175415039

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2644883692264557
    2. '>' → logprob: -2.514488458633423
    3. '       ' → logprob: -2.639488458633423
    4. ':
' → logprob: -3.639488458633423
    5. '1' → logprob: -3.764488458633423
    6. '   ' → logprob: -3.889488458633423
    7. ':return' → logprob: -6.139488220214844
    8. '```' → logprob: -6.264488220214844
    9. ' ' → logprob: -6.389488220214844
    10. ' >' → logprob: -6.764488220214844

Token 266: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0669408068060875
    2. '       ' → logprob: -2.8169407844543457
    3. ' ' → logprob: -5.316940784454346
    4. 'return' → logprob: -11.066941261291504
    5. '   ' → logprob: -11.191941261291504
    6. '        ' → logprob: -11.816941261291504
    7. ' return' → logprob: -12.191941261291504
    8. '0' → logprob: -12.316941261291504
    9. '    ' → logprob: -13.316941261291504
    10. '```' → logprob: -13.566941261291504

Token 267: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013860702747479081
    2. 'return' (adapté à ' return') → logprob: -6.7513861656188965
    3. ' ' → logprob: -8.501385688781738
    4. ' return' → logprob: -11.626385688781738
    5. '   ' → logprob: -13.126385688781738
    6. '0' → logprob: -13.751385688781738
    7. '       ' → logprob: -14.251385688781738
    8. '```' → logprob: -17.751386642456055
    9. '  ' → logprob: -19.376386642456055
    10. '           ' → logprob: -19.376386642456055

Token 268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.875
    4. '```' → logprob: -20.125
    5. '  ' → logprob: -23.75
    6. '۱' → logprob: -24.375
    7. '+' → logprob: -24.625
    8. '0' → logprob: -24.75
    9. '１' → logprob: -25.25
    10. '`' → logprob: -25.375

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -20.125
    5. '  ' → logprob: -22.75
    6. '+' → logprob: -24.125
    7. '１' → logprob: -24.375
    8. '۱' → logprob: -24.625
    9. '
' → logprob: -24.75
    10. '-' → logprob: -25.5

Token 270: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032093390822410583
    2. 'return' → logprob: -3.5320932865142822
    3. ' return' → logprob: -6.532093524932861
    4. 'else' → logprob: -7.657093524932861
    5. '0' → logprob: -8.907093048095703
    6. '	return' → logprob: -9.282093048095703
    7. '    
' → logprob: -9.532093048095703
    8. ' else' → logprob: -10.032093048095703
    9. '
' → logprob: -11.032093048095703
    10. '<|end|>' → logprob: -11.032093048095703

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061837914399802685
    2. 'return' → logprob: -5.131183624267578
    3. ' return' → logprob: -8.631183624267578
    4. '0' → logprob: -10.006183624267578
    5. '	return' → logprob: -11.256183624267578
    6. 'else' → logprob: -12.256183624267578
    7. '    
' → logprob: -12.256183624267578
    8. '<|end|>' → logprob: -12.256183624267578
    9. '```' → logprob: -13.631183624267578
    10. '       ' → logprob: -13.631183624267578

Token 272: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2327498346567154
    2. 'return' → logprob: -1.6077498197555542
    3. ' return' → logprob: -5.482749938964844
    4. '0' → logprob: -6.232749938964844
    5. 'else' (adapté à ' else') → logprob: -7.357749938964844
    6. '	return' → logprob: -8.607749938964844
    7. '    
' → logprob: -8.607749938964844
    8. '<|end|>' → logprob: -9.732749938964844
    9. ' else' → logprob: -10.607749938964844
    10. '
' → logprob: -10.857749938964844

Token 273: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4998784065246582
    2. ':' → logprob: -1.3748784065246582
    3. ':
' → logprob: -1.9998784065246582
    4. ':return' → logprob: -5.624878406524658
    5. 'return' → logprob: -7.374878406524658
    6. '   ' → logprob: -7.874878406524658
    7. ' return' → logprob: -7.874878406524658
    8. '0' → logprob: -9.2498779296875
    9. '           ' → logprob: -10.8748779296875
    10. ':

' → logprob: -11.7498779296875

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06701584160327911
    2. 'return' → logprob: -3.4420158863067627
    3. '0' → logprob: -3.9420158863067627
    4. ' return' → logprob: -4.442015647888184
    5. '   ' → logprob: -6.442015647888184
    6. '	return' → logprob: -10.817015647888184
    7. '           ' → logprob: -11.192015647888184
    8. ' ' → logprob: -11.817015647888184
    9. ':return' → logprob: -13.942015647888184
    10. '<|end|>' → logprob: -14.442015647888184

Token 275: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002615742268972099
    2. ' return' → logprob: -8.250261306762695
    3. '0' → logprob: -15.625261306762695
    4. '   ' → logprob: -15.750261306762695
    5. '
' → logprob: -18.125261306762695
    6. '	return' → logprob: -20.000261306762695
    7. '       ' → logprob: -20.750261306762695
    8. ':return' → logprob: -21.375261306762695
    9. 'eturn' → logprob: -21.625261306762695
    10. '{return' → logprob: -21.750261306762695

Token 276: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '<|end|>' → logprob: -20.875
    4. '۰' → logprob: -22.25
    5. '   ' → logprob: -23.25
    6. '```' → logprob: -24.375
    7. '000' → logprob: -24.75
    8. '00' → logprob: -24.75
    9. '०' → logprob: -25.0
    10. '０' → logprob: -25.0

Token 277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.25
    3. '۰' → logprob: -21.75
    4. '   ' → logprob: -23.875
    5. '```' → logprob: -24.0
    6. '०' → logprob: -24.25
    7. '０' → logprob: -24.25
    8. '০' → logprob: -24.75
    9. '000' → logprob: -24.875
    10. '00' → logprob: -25.25

Token 278: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15133215487003326
    2. 'tokens' → logprob: -2.776332139968872
    3. '
' → logprob: -3.526332139968872
    4. 'results' → logprob: -4.901332378387451
    5. 'new' → logprob: -5.151332378387451
    6. 'import' → logprob: -5.276332378387451
    7. 's' → logprob: -5.276332378387451
    8. 'lines' → logprob: -5.276332378387451
    9. 'n' → logprob: -5.651332378387451
    10. '#' → logprob: -5.651332378387451

Token 279: 's' (ID: 82)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.4160884618759155
    2. 's' → logprob: -1.5410884618759155
    3. 'strings' → logprob: -1.7910884618759155
    4. 'results' → logprob: -2.666088581085205
    5. 'for' → logprob: -2.791088581085205
    6. 'tokens' → logprob: -2.791088581085205
    7. 'arr' → logprob: -3.166088581085205
    8. 'sorted' → logprob: -3.291088581085205
    9. 'import' → logprob: -3.666088581085205
    10. 'versions' → logprob: -4.166088581085205

Token 280: '0' (ID: 15)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8843697309494019
    2. '_tokens' → logprob: -0.8843697309494019
    3. ' =' → logprob: -2.3843698501586914
    4. '0' → logprob: -3.5093698501586914
    5. '1' → logprob: -3.7593698501586914
    6. 's' → logprob: -4.884369850158691
    7. 'tokens' → logprob: -4.884369850158691
    8. '_list' → logprob: -5.009369850158691
    9. '=' → logprob: -6.134369850158691
    10. '_=' → logprob: -6.884369850158691

Token 281: '_tokens' (ID: 65830)
  Prédit: '_tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.01007726788520813
    2. '_' → logprob: -5.760077476501465
    3. ' =' → logprob: -5.760077476501465
    4. 'tokens' → logprob: -6.010077476501465
    5. '=' → logprob: -7.635077476501465
    6. 's' → logprob: -8.135077476501465
    7. '_t' → logprob: -8.635077476501465
    8. '_token' → logprob: -9.635077476501465
    9. ')' → logprob: -10.135077476501465
    10. '.tokens' → logprob: -10.510077476501465

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07004446536302567
    2. '=' → logprob: -2.69504451751709
    3. 'tokens' → logprob: -9.69504451751709
    4. '_tokens' → logprob: -11.07004451751709
    5. '(tokens' → logprob: -11.69504451751709
    6. 's' → logprob: -12.19504451751709
    7. ')' → logprob: -12.44504451751709
    8. ',' → logprob: -12.82004451751709
    9. '[token' → logprob: -13.19504451751709
    10. '[' → logprob: -13.44504451751709

Token 283: ' tokenize' (ID: 192720)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.0001613459608051926
    2. ' tokenize' → logprob: -8.750161170959473
    3. ' token' → logprob: -12.875161170959473
    4. '(token' → logprob: -15.750161170959473
    5. '[token' → logprob: -16.12516212463379
    6. '	token' → logprob: -18.12516212463379
    7. '.token' → logprob: -18.25016212463379
    8. '/token' → logprob: -18.87516212463379
    9. 'tokens' → logprob: -19.12516212463379
    10. '_token' → logprob: -19.50016212463379

Token 284: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00020377879263833165
    2. '(' → logprob: -8.500204086303711
    3. 's' → logprob: -16.50020408630371
    4. '(n' → logprob: -16.75020408630371
    5. ' (' → logprob: -17.12520408630371
    6. '(
' → logprob: -17.62520408630371
    7. '(S' → logprob: -19.12520408630371
    8. '('' → logprob: -19.12520408630371
    9. '(ss' → logprob: -19.25020408630371
    10. '((' → logprob: -19.50020408630371

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00104614719748497
    2. '(s' → logprob: -6.876046180725098
    3. '(' → logprob: -11.376046180725098
    4. ')' → logprob: -13.501046180725098
    5. 'o' → logprob: -14.626046180725098
    6. '```' → logprob: -17.37604522705078
    7. 's' → logprob: -17.50104522705078
    8. '۰' → logprob: -17.87604522705078
    9. '[' → logprob: -17.87604522705078
    10. ')(' → logprob: -18.62604522705078

Token 286: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.125001907348633
    3. ' )' → logprob: -16.625001907348633
    4. ')

' → logprob: -16.875001907348633
    5. '))' → logprob: -18.125001907348633
    6. ')`' → logprob: -18.500001907348633
    7. ')s' → logprob: -18.625001907348633
    8. ')#' → logprob: -18.625001907348633
    9. ')n' → logprob: -19.500001907348633
    10. '),' → logprob: -20.125001907348633

Token 287: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11828504502773285
    2. 'result' → logprob: -3.1182849407196045
    3. 'results' → logprob: -3.1182849407196045
    4. 'res' → logprob: -4.118285179138184
    5. 'best' → logprob: -5.743285179138184
    6. 'ans' → logprob: -6.743285179138184
    7. 'answers' → logprob: -7.868285179138184
    8. 'min' → logprob: -7.993285179138184
    9. 'count' → logprob: -7.993285179138184
    10. 's' → logprob: -8.243285179138184

Token 288: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07891049981117249
    2. '_' → logprob: -2.5789105892181396
    3. ' i' → logprob: -11.078910827636719
    4. '_range' → logprob: -12.953910827636719
    5. ' range' → logprob: -13.828910827636719
    6. ' ' → logprob: -14.328910827636719
    7. '_i' → logprob: -14.703910827636719
    8. 'range' → logprob: -15.453910827636719
    9. ' ' → logprob: -15.578910827636719
    10. ' in' → logprob: -15.828910827636719

Token 289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012521425262093544
    2. 'in' → logprob: -4.387521266937256
    3. ' ' → logprob: -12.012521743774414
    4. 'range' → logprob: -13.262521743774414
    5. 's' → logprob: -13.762521743774414
    6. '_' → logprob: -14.012521743774414
    7. '	in' → logprob: -14.637521743774414
    8. 'n' → logprob: -15.012521743774414
    9. ' _' → logprob: -15.262521743774414
    10. 'import' → logprob: -15.387521743774414

Token 290: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692853808403015
    2. ' range' → logprob: -2.1269285678863525
    3. ' ' → logprob: -16.001928329467773
    4. '	range' → logprob: -16.126928329467773
    5. '(range' → logprob: -16.376928329467773
    6. 'n' → logprob: -16.751928329467773
    7. '_' → logprob: -17.376928329467773
    8. '  ' → logprob: -17.876928329467773
    9. '   ' → logprob: -18.126928329467773
    10. 'rang' → logprob: -18.376928329467773

Token 291: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011048642918467522
    2. '(' → logprob: -4.511048793792725
    3. 'n' → logprob: -14.886048316955566
    4. '1' → logprob: -15.011048316955566
    5. ' (' → logprob: -16.886049270629883
    6. '(
' → logprob: -17.011049270629883
    7. ' n' → logprob: -17.636049270629883
    8. '((' → logprob: -18.136049270629883
    9. '(int' → logprob: -18.761049270629883
    10. '(N' → logprob: -19.261049270629883

Token 292: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0486837700009346
    2. '):
' → logprob: -3.0486838817596436
    3. ' ):' → logprob: -9.673684120178223
    4. '):
' → logprob: -11.423684120178223
    5. ',' → logprob: -11.548684120178223
    6. ':' → logprob: -12.423684120178223
    7. ')' → logprob: -12.923684120178223
    8. '-' → logprob: -13.173684120178223
    9. '   ' → logprob: -13.298684120178223
    10. ' ):
' → logprob: -13.548684120178223

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012702584266662598
    2. ' s' → logprob: -4.387702465057373
    3. '    
' → logprob: -9.387702941894531
    4. '	s' → logprob: -10.137702941894531
    5. 's' → logprob: -10.762702941894531
    6. '<|end|>' → logprob: -11.512702941894531
    7. '
' → logprob: -11.637702941894531
    8. '   ' → logprob: -11.887702941894531
    9. '```' → logprob: -12.387702941894531
    10. ' 
' → logprob: -12.637702941894531

Token 294: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.5051372647285461
    2. ' s' → logprob: -1.1301372051239014
    3. '   ' → logprob: -2.6301372051239014
    4. ' line' → logprob: -7.3801374435424805
    5. 'line' → logprob: -7.7551374435424805
    6. '    
' → logprob: -9.13013744354248
    7. 'si' → logprob: -9.38013744354248
    8. 't' → logprob: -9.63013744354248
    9. ' ' → logprob: -10.00513744354248
    10. ' si' → logprob: -10.63013744354248

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07378765195608139
    2. '_' → logprob: -3.1987876892089844
    3. '=' → logprob: -3.5737876892089844
    4. '_=' → logprob: -6.948787689208984
    5. ' ' → logprob: -8.073787689208984
    6. 's' → logprob: -8.073787689208984
    7. '_line' → logprob: -9.323787689208984
    8. '   ' → logprob: -9.448787689208984
    9. 'i' → logprob: -9.948787689208984
    10. '1' → logprob: -10.073787689208984

Token 296: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519298195838928
    2. ' input' → logprob: -1.501929759979248
    3. '=input' → logprob: -14.626930236816406
    4. '(input' → logprob: -15.501930236816406
    5. '	input' → logprob: -16.751930236816406
    6. ',input' → logprob: -17.626930236816406
    7. ' ' → logprob: -17.751930236816406
    8. '   ' → logprob: -17.876930236816406
    9. 'int' → logprob: -18.251930236816406
    10. '<input' → logprob: -18.376930236816406

Token 297: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001992490579141304
    2. '()
' → logprob: -8.625199317932129
    3. '())' → logprob: -11.500199317932129
    4. ')' → logprob: -12.625199317932129
    5. '(' → logprob: -12.875199317932129
    6. '()`' → logprob: -13.500199317932129
    7. '().' → logprob: -13.625199317932129
    8. '()

' → logprob: -14.750199317932129
    9. ' ()' → logprob: -15.375199317932129
    10. '_' → logprob: -16.000198364257812

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02655920572578907
    2. 's' → logprob: -4.401559352874756
    3. 'tokens' → logprob: -4.526559352874756
    4. '_tokens' → logprob: -6.151559352874756
    5. '<|end|>' → logprob: -7.901559352874756
    6. ' s' → logprob: -8.151558876037598
    7. '    
' → logprob: -9.151558876037598
    8. ' tokens' → logprob: -9.151558876037598
    9. '
' → logprob: -10.526558876037598
    10. ',' → logprob: -11.401558876037598

Token 299: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.06530656665563583
    2. '   ' → logprob: -3.5653066635131836
    3. 'tokens' → logprob: -3.5653066635131836
    4. ' s' → logprob: -5.190306663513184
    5. 't' → logprob: -7.440306663513184
    6. ' tokens' → logprob: -7.940306663513184
    7. '_tokens' → logprob: -9.690306663513184
    8. 'b' → logprob: -10.940306663513184
    9. ' ' → logprob: -11.065306663513184
    10. 'token' → logprob: -11.690306663513184

Token 300: '_tokens' (ID: 65830)
  Prédit: '_tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.625000953674316
    3. 'tokens' → logprob: -15.625000953674316
    4. '_token' → logprob: -15.625000953674316
    5. '_t' → logprob: -16.250001907348633
    6. ''_' → logprob: -18.125001907348633
    7. 'okens' → logprob: -18.250001907348633
    8. '_s' → logprob: -18.375001907348633
    9. ' =' → logprob: -18.375001907348633
    10. '"_' → logprob: -18.625001907348633

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ')' → logprob: -16.974077224731445
    4. 's' → logprob: -17.099077224731445
    5. '＝' → logprob: -17.099077224731445
    6. 'tokens' → logprob: -17.349077224731445
    7. ',' → logprob: -18.599077224731445
    8. ' =)' → logprob: -18.724077224731445
    9. ' ' → logprob: -19.099077224731445
    10. '=}' → logprob: -19.349077224731445

Token 302: ' tokenize' (ID: 192720)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.0041307611390948296
    2. ' tokenize' → logprob: -5.504130840301514
    3. ' token' → logprob: -9.879130363464355
    4. '(token' → logprob: -14.129130363464355
    5. '[token' → logprob: -15.754130363464355
    6. 'tokens' → logprob: -16.254131317138672
    7. '_token' → logprob: -16.629131317138672
    8. '	token' → logprob: -16.879131317138672
    9. '.token' → logprob: -17.129131317138672
    10. '-token' → logprob: -18.379131317138672

Token 303: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.375012397766113
    3. 's' → logprob: -14.125012397766113
    4. ' (' → logprob: -17.625011444091797
    5. ' s' → logprob: -20.375011444091797
    6. '(
' → logprob: -21.125011444091797
    7. ')s' → logprob: -21.125011444091797
    8. ')' → logprob: -21.250011444091797
    9. '=s' → logprob: -21.500011444091797
    10. ')(' → logprob: -21.500011444091797

Token 304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012487331696320325
    2. ')
' → logprob: -9.00012493133545
    3. ' )' → logprob: -13.75012493133545
    4. '   ' → logprob: -15.12512493133545
    5. ')
' → logprob: -17.750123977661133
    6. ')

' → logprob: -18.125123977661133
    7. '))' → logprob: -18.125123977661133
    8. ' ' → logprob: -18.375123977661133
    9. ')#' → logprob: -20.375123977661133
    10. '),' → logprob: -20.500123977661133

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21590566635131836
    2. '
' → logprob: -2.9659056663513184
    3. ' if' → logprob: -3.2159056663513184
    4. 'result' → logprob: -3.4659056663513184
    5. 'if' → logprob: -3.9659056663513184
    6. 'res' → logprob: -4.090905666351318
    7. ' res' → logprob: -4.090905666351318
    8. ' result' → logprob: -4.840905666351318
    9. 'cmp' → logprob: -5.465905666351318
    10. ' cmp' → logprob: -5.465905666351318

Token 306: ' c' (ID: 274)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9300823211669922
    2. 'print' → logprob: -1.4300823211669922
    3. 'result' → logprob: -1.6800823211669922
    4. 'if' → logprob: -1.9300823211669922
    5. 'cmp' → logprob: -3.805082321166992
    6. 'comp' → logprob: -4.555082321166992
    7. '   ' → logprob: -6.555082321166992
    8. 'r' → logprob: -8.430082321166992
    9. 'c' (adapté à ' c') → logprob: -9.305082321166992
    10. '    
' → logprob: -9.555082321166992

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48774001002311707
    2. 'mp' → logprob: -0.9877400398254395
    3. 'omp' → logprob: -4.9877400398254395
    4. '=' → logprob: -5.2377400398254395
    5. 'om' → logprob: -6.7377400398254395
    6. '_result' → logprob: -8.987739562988281
    7. 'result' → logprob: -9.237739562988281
    8. 'cmp' → logprob: -11.487739562988281
    9. '=result' → logprob: -12.112739562988281
    10. 'r' → logprob: -12.862739562988281

Token 308: ' compare' (ID: 12221)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.04858827963471413
    2. ' compare' → logprob: -3.048588275909424
    3. '(compare' → logprob: -13.923588752746582
    4. '   ' → logprob: -18.048587799072266
    5. '.compare' → logprob: -18.298587799072266
    6. '_compare' → logprob: -20.798587799072266
    7. ' ' → logprob: -21.173587799072266
    8. 'cmp' → logprob: -22.173587799072266
    9. '  ' → logprob: -22.798587799072266
    10. '
' → logprob: -22.923587799072266

Token 309: '_tokens' (ID: 65830)
  Prédit: '_tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -7.822646693966817e-06
    2. 'tokens' → logprob: -12.125007629394531
    3. '(s' → logprob: -14.000007629394531
    4. '_s' → logprob: -14.125007629394531
    5. 's' → logprob: -14.625007629394531
    6. 'Tokens' → logprob: -15.625007629394531
    7. ' s' → logprob: -17.75000762939453
    8. '```' → logprob: -18.00000762939453
    9. '_' → logprob: -18.12500762939453
    10. '(tokens' → logprob: -18.25000762939453

Token 310: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.470901229884475e-05
    2. 's' → logprob: -9.50008487701416
    3. '(' → logprob: -11.62508487701416
    4. '(a' → logprob: -15.12508487701416
    5. 'tokens' → logprob: -15.50008487701416
    6. '(c' → logprob: -16.000083923339844
    7. ' (' → logprob: -16.750083923339844
    8. '(tokens' → logprob: -16.750083923339844
    9. '(
' → logprob: -17.875083923339844
    10. '((' → logprob: -18.375083923339844

Token 311: '_tokens' (ID: 65830)
  Prédit: '_tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -4.656383680412546e-05
    2. 'tokens' → logprob: -10.500046730041504
    3. '0' → logprob: -11.500046730041504
    4. 's' → logprob: -12.125046730041504
    5. 'okens' → logprob: -13.250046730041504
    6. '[' → logprob: -14.500046730041504
    7. '[_' → logprob: -15.125046730041504
    8. '```' → logprob: -15.375046730041504
    9. 'Tokens' → logprob: -16.125045776367188
    10. ')_' → logprob: -16.375045776367188

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009826739551499486
    2. ' ,' → logprob: -7.375982761383057
    3. 's' → logprob: -8.125982284545898
    4. ',s' → logprob: -9.750982284545898
    5. ' s' → logprob: -13.625982284545898
    6. ',
' → logprob: -14.000982284545898
    7. '_,' → logprob: -17.8759822845459
    8. '   ' → logprob: -18.0009822845459
    9. ' ' → logprob: -18.2509822845459
    10. '```' → logprob: -18.2509822845459

Token 313: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.061967913061380386
    2. ' s' → logprob: -2.8119678497314453
    3. ')' → logprob: -16.186967849731445
    4. ' ' → logprob: -16.686967849731445
    5. '   ' → logprob: -16.811967849731445
    6. '[s' → logprob: -17.311967849731445
    7. '`s' → logprob: -17.436967849731445
    8. '(s' → logprob: -17.436967849731445
    9. ')s' → logprob: -17.561967849731445
    10. '	s' → logprob: -17.686967849731445

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502717612311244
    2. '_tokens' → logprob: -6.501502513885498
    3. '```' → logprob: -15.626502990722656
    4. 'o' → logprob: -15.876502990722656
    5. 'tokens' → logprob: -15.876502990722656
    6. 'okens' → logprob: -17.501502990722656
    7. '_' → logprob: -17.751502990722656
    8. ')' → logprob: -18.376502990722656
    9. 's' → logprob: -18.626502990722656
    10. 'Tokens' → logprob: -18.876502990722656

Token 315: '_tokens' (ID: 65830)
  Prédit: '_tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -1.9361264946837764e-07
    2. 'tokens' → logprob: -15.75
    3. ' tokens' → logprob: -20.0
    4. '_token' → logprob: -20.125
    5. 'okens' → logprob: -20.75
    6. 'Tokens' → logprob: -21.0
    7. '_t' → logprob: -22.125
    8. '.tokens' → logprob: -22.75
    9. '_to' → logprob: -22.875
    10. ')_' → logprob: -23.375

Token 316: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20198450982570648
    2. ')' → logprob: -1.7019845247268677
    3. '   ' → logprob: -7.576984405517578
    4. ' )
' → logprob: -10.076984405517578
    5. ' )' → logprob: -11.951984405517578
    6. ')
' → logprob: -11.951984405517578
    7. ')

' → logprob: -12.951984405517578
    8. ')==' → logprob: -15.076984405517578
    9. '<|end|>' → logprob: -15.326984405517578
    10. ')<' → logprob: -15.451984405517578

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021386018488556147
    2. '<|end|>' → logprob: -6.502138614654541
    3. ' if' → logprob: -7.627138614654541
    4. 'if' → logprob: -9.377138137817383
    5. '
' → logprob: -10.752138137817383
    6. '    
' → logprob: -11.502138137817383
    7. '```' → logprob: -11.752138137817383
    8. 'print' → logprob: -11.752138137817383
    9. '<|end|>' → logprob: -12.752138137817383
    10. '	if' → logprob: -12.877138137817383

Token 318: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0940321683883667
    2. ' if' → logprob: -2.5940322875976562
    3. '   ' → logprob: -4.344032287597656
    4. 'print' → logprob: -6.219032287597656
    5. ' print' → logprob: -10.469032287597656
    6. '	if' → logprob: -11.219032287597656
    7. '
' → logprob: -11.844032287597656
    8. ' 
' → logprob: -13.469032287597656
    9. '    ' → logprob: -13.969032287597656
    10. '    
' → logprob: -14.344032287597656

Token 319: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.04300239682197571
    2. 'c' → logprob: -3.1680023670196533
    3. ' ' → logprob: -13.418002128601074
    4. '   ' → logprob: -13.918002128601074
    5. '	c' → logprob: -14.418002128601074
    6. '    ' → logprob: -15.418002128601074
    7. '  ' → logprob: -16.41800308227539
    8. ' ' → logprob: -18.04300308227539
    9. '(c' → logprob: -18.54300308227539
    10. '
' → logprob: -18.54300308227539

Token 320: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7145004272460938
    2. ' ==' → logprob: -0.8395004272460938
    3. '<' → logprob: -2.9645004272460938
    4. '==' → logprob: -4.339500427246094
    5. ' <=' → logprob: -4.589500427246094
    6. '==-' → logprob: -6.464500427246094
    7. ' >' → logprob: -7.089500427246094
    8. '<=' → logprob: -7.839500427246094
    9. ' ' → logprob: -7.964500427246094
    10. '>' → logprob: -8.214500427246094

Token 321: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003680836409330368
    2. '0' → logprob: -6.00368070602417
    3. '1' → logprob: -7.25368070602417
    4. ' -' → logprob: -7.75368070602417
    5. ' ' → logprob: -9.628681182861328
    6. '<' → logprob: -14.378681182861328
    7. '   ' → logprob: -15.128681182861328
    8. '-
' → logprob: -15.253681182861328
    9. '2' → logprob: -15.878681182861328
    10. '  ' → logprob: -15.878681182861328

Token 322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '<' → logprob: -17.4375
    4. '2' → logprob: -17.5625
    5. '```' → logprob: -17.9375
    6. ')' → logprob: -18.375
    7. '">' → logprob: -19.3125
    8. '   ' → logprob: -19.625
    9. '<|end|>' → logprob: -19.8125
    10. '`' → logprob: -20.0

Token 323: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00601222226396203
    2. ':
' → logprob: -5.256012439727783
    3. ' or' → logprob: -7.256012439727783
    4. '   ' → logprob: -10.006011962890625
    5. ' and' → logprob: -11.381011962890625
    6. ' :' → logprob: -11.756011962890625
    7. '       ' → logprob: -12.506011962890625
    8. ',' → logprob: -14.131011962890625
    9. ' :
' → logprob: -14.381011962890625
    10. '):' → logprob: -14.381011962890625

Token 324: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46150729060173035
    2. 'print' → logprob: -1.2115073204040527
    3. '       ' → logprob: -2.8365073204040527
    4. ' print' → logprob: -4.336507320404053
    5. '	print' → logprob: -10.211506843566895
    6. '  ' → logprob: -10.586506843566895
    7. ' ' → logprob: -10.836506843566895
    8. '           ' → logprob: -11.086506843566895
    9. '
' → logprob: -11.336506843566895
    10. '<' → logprob: -11.336506843566895

Token 325: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.758300438988954e-05
    2. '   ' → logprob: -9.625097274780273
    3. 'break' → logprob: -10.750097274780273
    4. ' print' → logprob: -12.375097274780273
    5. 'continue' → logprob: -12.500097274780273
    6. 'pr' → logprob: -14.375097274780273
    7. 's' → logprob: -14.625097274780273
    8. '       ' → logprob: -14.750097274780273
    9. 'prin' → logprob: -15.625097274780273
    10. 'pass' → logprob: -16.000097274780273

Token 326: '("-' (ID: 27133)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12301520258188248
    2. '"<' → logprob: -2.8730151653289795
    3. '"' → logprob: -3.8730151653289795
    4. '<' → logprob: -3.9980151653289795
    5. '-' → logprob: -5.248015403747559
    6. 'Yes' → logprob: -5.623015403747559
    7. 'less' → logprob: -5.998015403747559
    8. '<s' → logprob: -6.498015403747559
    9. '("<' → logprob: -6.748015403747559
    10. '(s' → logprob: -6.873015403747559

Token 327: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12885014712810516
    2. '1' → logprob: -2.128850221633911
    3. ')' → logprob: -7.253849983215332
    4. 'less' → logprob: -7.878849983215332
    5. '"' → logprob: -8.128849983215332
    6. '")
' → logprob: -8.253849983215332
    7. '">' → logprob: -10.378849983215332
    8. '<' → logprob: -10.378849983215332
    9. '2' → logprob: -10.503849983215332
    10. '")}' → logprob: -11.253849983215332

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04902786388993263
    2. 'elif' → logprob: -3.049027919769287
    3. '<|end|>' → logprob: -8.299027442932129
    4. '	elif' → logprob: -9.049027442932129
    5. 'else' → logprob: -10.674027442932129
    6. ' elif' → logprob: -11.299027442932129
    7. '```' → logprob: -11.924027442932129
    8. '...' → logprob: -12.049027442932129
    9. '       ' → logprob: -12.174027442932129
    10. '  ' → logprob: -12.174027442932129

Token 329: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0003488129877950996
    2. 'else' (adapté à ' else') → logprob: -8.500349044799805
    3. '   ' → logprob: -9.375349044799805
    4. ' elif' → logprob: -9.750349044799805
    5. '	elif' → logprob: -13.500349044799805
    6. ')' → logprob: -14.500349044799805
    7. ' else' → logprob: -16.500349044799805
    8. 'if' → logprob: -17.125349044799805
    9. 'el' → logprob: -17.125349044799805
    10. ' ' → logprob: -17.125349044799805

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05477755144238472
    2. '       ' → logprob: -3.0547776222229004
    3. 'if' → logprob: -6.0547776222229
    4. ' if' → logprob: -6.3047776222229
    5. ':
' → logprob: -6.8047776222229
    6. '   ' → logprob: -7.1797776222229
    7. ' :' → logprob: -9.304777145385742
    8. '{' → logprob: -11.304777145385742
    9. '.' → logprob: -12.304777145385742
    10. '    ' → logprob: -12.804777145385742

Token 331: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10612233728170395
    2. '       ' → logprob: -2.7311222553253174
    3. '   ' → logprob: -3.3561222553253174
    4. ' print' → logprob: -7.4811224937438965
    5. '+' → logprob: -9.481122016906738
    6. ' ' → logprob: -11.606122016906738
    7. '	print' → logprob: -12.106122016906738
    8. 'if' → logprob: -13.106122016906738
    9. '     ' → logprob: -13.481122016906738
    10. '           ' → logprob: -13.481122016906738

Token 332: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.3213025744771585e-05
    2. '   ' → logprob: -10.500033378601074
    3. ' print' → logprob: -12.625033378601074
    4. '+' → logprob: -13.375033378601074
    5. '       ' → logprob: -15.625033378601074
    6. '	print' → logprob: -16.000032424926758
    7. 'pass' → logprob: -16.000032424926758
    8. 'continue' → logprob: -16.250032424926758
    9. 'if' → logprob: -16.625032424926758
    10. 'break' → logprob: -17.375032424926758

Token 333: '("+' (ID: 68159)
  Prédit: '"+"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"+"' → logprob: -0.4410655200481415
    2. '"+' → logprob: -1.1910655498504639
    3. '("+' → logprob: -3.191065549850464
    4. '+' → logprob: -4.816065311431885
    5. '">' → logprob: -6.191065311431885
    6. '(' → logprob: -6.941065311431885
    7. 's' → logprob: -8.566065788269043
    8. '(">' → logprob: -8.816065788269043
    9. '""' → logprob: -10.316065788269043
    10. '("="' → logprob: -10.816065788269043

Token 334: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00030042731668800116
    2. ')' → logprob: -8.125300407409668
    3. '")
' → logprob: -13.750300407409668
    4. '"' → logprob: -14.000300407409668
    5. '```' → logprob: -14.375300407409668
    6. ')")' → logprob: -14.625300407409668
    7. ' ")' → logprob: -14.875300407409668
    8. '')' → logprob: -15.000300407409668
    9. '<|end|>' → logprob: -15.125300407409668
    10. '");' → logprob: -15.500300407409668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 332
Tokens correctement prédits (1ère position, stricte): 140
Tokens correctement prédits (1ère position, avec adaptation): 159
Tokens correctement prédits (top 10): 311
Précision stricte (1ère position): 42.17%
Précision adaptée (1ère position): 47.89%
Précision (top 10): 93.67%
================================================================================
