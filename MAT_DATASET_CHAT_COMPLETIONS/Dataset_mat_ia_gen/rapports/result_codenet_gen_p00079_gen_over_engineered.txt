================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Tuple
import sys

class Point:
    def __init__(self, x: float, y: float):
        self.x = x
        self.y = y

    def __repr__(self):
        return f"Point({self.x}, {self.y})"

class Polygon(ABC):
    def __init__(self, vertices: List[Point]):
        if not 3 <= len(vertices) <= 20:
            raise ValueError("Number of vertices must be between 3 and 20")
        self.vertices = vertices
    
    @abstractmethod
    def area(self) -> float:
        pass
    
    def edges(self) -> List[Tuple[Point, Point]]:
        return [(self.vertices[i], self.vertices[(i+1) % len(self.vertices)]) for i in range(len(self.vertices))]

class ConvexPolygon(Polygon):
    def area(self) -> float:
        # Using shoelace formula which works for convex polygons
        n = len(self.vertices)
        # Abstracted accumulator
        def accumulator():
            sum1 = 0.0
            sum2 = 0.0
            for i in range(n):
                x_i, y_i = self.vertices[i].x, self.vertices[i].y
                x_next, y_next = self.vertices[(i+1) % n].x, self.vertices[(i+1) % n].y
                sum1 += x_i * y_next
                sum2 += y_i * x_next
            return abs(sum1 - sum2) / 2
        return accumulator()

class InputParser(ABC):
    @abstractmethod
    def parse(self, input_lines: List[str]) -> List[Point]:
        pass

class CsvPointInputParser(InputParser):
    def parse(self, input_lines: List[str]) -> List[Point]:
        points: List[Point] = []
        for line in input_lines:
            line = line.strip()
            if not line:
                continue
            x_str, y_str = line.split(',')
            x = float(x_str.strip())
            y = float(y_str.strip())
            points.append(Point(x, y))
        return points

class AreaCalculator:
    def __init__(self, polygon_class: type):
        self.polygon_class = polygon_class
    def compute_area(self, points: List[Point]) -> float:
        polygon = self.polygon_class(points)
        return polygon.area()

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    parser = CsvPointInputParser()
    points = parser.parse(input_lines)
    calculator = AreaCalculator(ConvexPolygon)
    area = calculator.compute_area(points)
    print(f"{area:.6f}")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1270483285188675
    2. 'ABC' → logprob: -2.1270482540130615
    3. 'AB' → logprob: -10.00204849243164
    4. ' A' → logprob: -10.37704849243164
    5. 'ABCDE' → logprob: -11.25204849243164
    6. 'abc' → logprob: -11.75204849243164
    7. 'abstract' → logprob: -12.25204849243164
    8. 'A' → logprob: -12.37704849243164
    9. ' ' → logprob: -12.75204849243164
    10. ' ' → logprob: -12.75204849243164

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4467898905277252
    2. ',' → logprob: -1.0717898607254028
    3. 'import' → logprob: -4.821789741516113
    4. '<|end|>' → logprob: -5.946789741516113
    5. ':' → logprob: -6.071789741516113
    6. '```' → logprob: -6.446789741516113
    7. ' ,' → logprob: -7.321789741516113
    8. ' .' → logprob: -7.696789741516113
    9. ' import' → logprob: -8.321789741516113
    10. '.I' → logprob: -8.571789741516113

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5769391059875488
    2. 'abstract' → logprob: -0.8269391059875488
    3. 'Abstract' → logprob: -7.076939105987549
    4. ' ' → logprob: -9.70193862915039
    5. '.abstract' → logprob: -10.82693862915039
    6. ' ABC' → logprob: -11.32693862915039
    7. '```' → logprob: -11.32693862915039
    8. ' A' → logprob: -11.32693862915039
    9. '123' → logprob: -12.45193862915039
    10. 'AB' → logprob: -12.57693862915039

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -9.805981972021982e-05
    2. 'classmethod' → logprob: -10.00009822845459
    3. 'm' → logprob: -11.00009822845459
    4. '_method' → logprob: -12.00009822845459
    5. 'meth' → logprob: -12.00009822845459
    6. 'staticmethod' → logprob: -12.25009822845459
    7. ' method' → logprob: -12.50009822845459
    8. 'abstract' → logprob: -12.75009822845459
    9. 'import' → logprob: -13.37509822845459
    10. 'ethod' → logprob: -13.37509822845459

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48189130425453186
    2. '```' → logprob: -1.4818912744522095
    3. 'class' → logprob: -2.356891393661499
    4. '

' → logprob: -4.23189115524292
    5. '<|end|>' → logprob: -4.35689115524292
    6. '' → logprob: -4.60689115524292
    7. '\n' → logprob: -4.85689115524292
    8. ' class' → logprob: -5.98189115524292
    9. '\' → logprob: -6.10689115524292
    10. '
' → logprob: -6.10689115524292

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08355175703763962
    2. '

' → logprob: -3.4585516452789307
    3. 'class' → logprob: -3.8335516452789307
    4. '
' → logprob: -4.83355188369751
    5. '```' → logprob: -4.83355188369751
    6. '' → logprob: -5.08355188369751
    7. '\n' → logprob: -6.20855188369751
    8. ' 

' → logprob: -7.45855188369751
    9. ' 
' → logprob: -7.45855188369751
    10. '``' → logprob: -8.208551406860352

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.08172421902418137
    2. ' collections' → logprob: -2.956724166870117
    3. ' dat' → logprob: -4.706724166870117
    4. ' abc' → logprob: -5.331724166870117
    5. ' sys' → logprob: -5.956724166870117
    6. 'typing' → logprob: -6.081724166870117
    7. ' os' → logprob: -6.206724166870117
    8. 'collections' → logprob: -6.581724166870117
    9. ' io' → logprob: -6.831724166870117
    10. ' math' → logprob: -7.706724166870117

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5059148073196411
    2. 'import' → logprob: -1.2559148073196411
    3. '.' → logprob: -2.2559146881103516
    4. '.import' → logprob: -6.005914688110352
    5. '<|end|>' → logprob: -6.755914688110352
    6. ' ' → logprob: -7.005914688110352
    7. '```' → logprob: -7.380914688110352
    8. '[' → logprob: -7.505914688110352
    9. ' .' → logprob: -8.130914688110352
    10. '.space' → logprob: -8.505914688110352

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.5475577116012573
    2. ' Union' → logprob: -1.6725577116012573
    3. ' List' → logprob: -2.047557830810547
    4. 'Any' → logprob: -2.547557830810547
    5. ' Optional' → logprob: -5.047557830810547
    6. ' Callable' → logprob: -5.172557830810547
    7. 'Union' → logprob: -5.797557830810547
    8. 'List' → logprob: -5.797557830810547
    9. ' Protocol' → logprob: -6.047557830810547
    10. ' ' → logprob: -6.047557830810547

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4726979434490204
    2. '
' → logprob: -1.2226979732513428
    3. '```' → logprob: -2.8476979732513428
    4. 'class' → logprob: -3.9726979732513428
    5. '``' → logprob: -6.347697734832764
    6. '\n' → logprob: -6.722697734832764
    7. '<|end|>' → logprob: -6.972697734832764
    8. '


' → logprob: -7.597697734832764
    9. ' class' → logprob: -8.222698211669922
    10. '
' → logprob: -8.472698211669922

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4373971223831177
    2. 'Optional' → logprob: -1.5623971223831177
    3. ' Union' → logprob: -1.6873971223831177
    4. 'Any' → logprob: -1.6873971223831177
    5. ' Any' → logprob: -2.437397003173828
    6. 'Union' → logprob: -3.312397003173828
    7. ' Callable' → logprob: -3.437397003173828
    8. 'Callable' → logprob: -4.812397003173828
    9. 'Tuple' → logprob: -5.062397003173828
    10. 'Iterable' → logprob: -5.437397003173828

Token 14: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4518669545650482
    2. '

' → logprob: -1.5768669843673706
    3. '
' → logprob: -1.9518669843673706
    4. '```' → logprob: -4.57686710357666
    5. '\n' → logprob: -5.70186710357666
    6. '``' → logprob: -7.82686710357666
    7. ' class' → logprob: -7.95186710357666
    8. '


' → logprob: -8.45186710357666
    9. '
' → logprob: -9.20186710357666
    10. '<class' → logprob: -9.45186710357666

Token 15: 'import' (ID: 561)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09027870744466782
    2. '
' → logprob: -2.5902786254882812
    3. '```' → logprob: -4.840278625488281
    4. '

' → logprob: -6.090278625488281
    5. '\n' → logprob: -7.340278625488281
    6. '``' → logprob: -8.465278625488281
    7. '
' → logprob: -8.840278625488281
    8. ' class' → logprob: -9.465278625488281
    9. '<class' → logprob: -10.465278625488281
    10. '  
' → logprob: -11.965278625488281

Token 16: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.04720582067966461
    2. ' typing' → logprob: -4.172205924987793
    3. ' numpy' → logprob: -4.422205924987793
    4. ' abc' → logprob: -5.422205924987793
    5. ' math' → logprob: -5.672205924987793
    6. ' sys' → logprob: -6.047205924987793
    7. ' pandas' → logprob: -6.047205924987793
    8. ' random' → logprob: -6.672205924987793
    9. ' ' → logprob: -6.672205924987793
    10. ' re' → logprob: -7.047205924987793

Token 17: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9727416634559631
    2. '
' → logprob: -1.0977416038513184
    3. '

' → logprob: -1.3477416038513184
    4. '```' → logprob: -3.8477416038513184
    5. '\n' → logprob: -5.222741603851318
    6. ' class' → logprob: -7.597741603851318
    7. '``' → logprob: -7.972741603851318
    8. '
' → logprob: -8.222742080688477
    9. '<class' → logprob: -8.972742080688477
    10. '


' → logprob: -9.222742080688477

Token 18: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011894920840859413
    2. '
' → logprob: -5.136894702911377
    3. 'c' → logprob: -5.386894702911377
    4. '\n' → logprob: -7.136894702911377
    5. '```' → logprob: -8.511895179748535
    6. '

' → logprob: -8.761895179748535
    7. '' → logprob: -10.011895179748535
    8. '  
' → logprob: -10.636895179748535
    9. 'clas' → logprob: -10.636895179748535
    10. ' class' → logprob: -10.761895179748535

Token 19: ' Point' (ID: 9971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0418437160551548
    2. ' Abstract' → logprob: -3.5418436527252197
    3. ' Basic' → logprob: -5.916843891143799
    4. ' My' → logprob: -6.291843891143799
    5. ' ABC' → logprob: -6.791843891143799
    6. ' Space' → logprob: -7.166843891143799
    7. ' System' → logprob: -7.291843891143799
    8. ' Object' → logprob: -7.416843891143799
    9. ' Base' → logprob: -7.541843891143799
    10. ' Serializer' → logprob: -7.666843891143799

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055745165795087814
    2. '(' → logprob: -2.9307451248168945
    3. '<|end|>' → logprob: -7.8057451248168945
    4. '):' → logprob: -8.680745124816895
    5. '(Abstract' → logprob: -9.180745124816895
    6. '():' → logprob: -9.555745124816895
    7. '(Point' → logprob: -10.555745124816895
    8. ':
' → logprob: -11.055745124816895
    9. ':**' → logprob: -11.555745124816895
    10. ')' → logprob: -11.680745124816895

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6886973977088928
    2. ' ' → logprob: -1.313697338104248
    3. '<|end|>' → logprob: -1.813697338104248
    4. ':' → logprob: -3.938697338104248
    5. '    ' → logprob: -4.188697338104248
    6. ')' → logprob: -5.313697338104248
    7. '    
' → logprob: -5.438697338104248
    8. '(' → logprob: -5.438697338104248
    9. ' 
' → logprob: -5.563697338104248
    10. '  ' → logprob: -5.688697338104248

Token 22: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.37816962599754333
    2. '   ' → logprob: -1.3781696557998657
    3. 'def' (adapté à ' def') → logprob: -3.503169536590576
    4. '    ' → logprob: -4.003169536590576
    5. ' x' → logprob: -4.753169536590576
    6. ' ' → logprob: -5.878169536590576
    7. 'x' → logprob: -6.878169536590576
    8. ' (' → logprob: -7.253169536590576
    9. 'class' → logprob: -8.253170013427734
    10. ' __' → logprob: -8.753170013427734

Token 23: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.38095754384994507
    2. ' def' → logprob: -2.63095760345459
    3. ' x' → logprob: -3.13095760345459
    4. 'init' → logprob: -3.50595760345459
    5. '__' → logprob: -3.63095760345459
    6. '_init' → logprob: -3.75595760345459
    7. '_' → logprob: -4.00595760345459
    8. 'def' → logprob: -4.00595760345459
    9. 't' → logprob: -4.13095760345459
    10. 'itialize' → logprob: -4.25595760345459

Token 24: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.088346359931165e-07
    2. 'ini' → logprob: -14.000000953674316
    3. ' init' → logprob: -17.25
    4. 'in' → logprob: -17.625
    5. 'int' → logprob: -17.75
    6. 'inite' → logprob: -18.375
    7. '_init' → logprob: -19.125
    8. 'inti' → logprob: -19.75
    9. '	init' → logprob: -20.375
    10. 'i' → logprob: -21.375

Token 25: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07127197831869125
    2. '(' → logprob: -3.0712718963623047
    3. '(self' → logprob: -4.446271896362305
    4. '__' → logprob: -5.071271896362305
    5. '__(
' → logprob: -6.571271896362305
    6. '<|end|>' → logprob: -6.696271896362305
    7. ' (' → logprob: -7.196271896362305
    8. 'self' → logprob: -7.821271896362305
    9. '__((' → logprob: -8.446271896362305
    10. '_self' → logprob: -9.446271896362305

Token 26: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011773703154176474
    2. ' self' → logprob: -6.7511773109436035
    3. 'x' → logprob: -11.876177787780762
    4. '(self' → logprob: -16.751176834106445
    5. '	self' → logprob: -17.001176834106445
    6. '0' → logprob: -17.251176834106445
    7. ' ' → logprob: -18.001176834106445
    8. '   ' → logprob: -19.501176834106445
    9. ')' → logprob: -19.751176834106445
    10. '_self' → logprob: -19.876176834106445

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17993304133415222
    2. ' ,' → logprob: -1.8049330711364746
    3. 'self' → logprob: -9.429932594299316
    4. ',x' → logprob: -10.804932594299316
    5. 'coordinates' → logprob: -10.929932594299316
    6. '_coordinates' → logprob: -11.179932594299316
    7. ' ' → logprob: -11.429932594299316
    8. ' )' → logprob: -11.929932594299316
    9. ' x' → logprob: -12.054932594299316
    10. '<|end|>' → logprob: -12.054932594299316

Token 28: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02995886653661728
    2. ' x' → logprob: -3.529958963394165
    3. 'self' → logprob: -8.529958724975586
    4. ' self' → logprob: -11.529958724975586
    5. ')x' → logprob: -14.779958724975586
    6. '	x' → logprob: -15.279958724975586
    7. ' ' → logprob: -15.404958724975586
    8. '   ' → logprob: -15.779958724975586
    9. '```' → logprob: -17.029958724975586
    10. '_x' → logprob: -17.279958724975586

Token 29: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005962691269814968
    2. ':' → logprob: -5.38096284866333
    3. ':int' → logprob: -7.25596284866333
    4. ')' → logprob: -8.255962371826172
    5. ' ,' → logprob: -8.255962371826172
    6. ',int' → logprob: -9.880962371826172
    7. '<|end|>' → logprob: -10.880962371826172
    8. '):' → logprob: -11.255962371826172
    9. '<|end|>' → logprob: -11.255962371826172
    10. '=' → logprob: -12.255962371826172

Token 30: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.3287492096424103
    2. 'float' → logprob: -1.578749179840088
    3. 'int' → logprob: -3.078749179840088
    4. ' int' → logprob: -3.578749179840088
    5. '=float' → logprob: -11.953749656677246
    6. '	float' → logprob: -13.078749656677246
    7. ' ' → logprob: -13.078749656677246
    8. 'flo' → logprob: -13.328749656677246
    9. '(float' → logprob: -13.953749656677246
    10. '<float' → logprob: -14.078749656677246

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014299227041192353
    2. ' ,' → logprob: -9.000143051147461
    3. '<|end|>' → logprob: -11.375143051147461
    4. ')' → logprob: -13.000143051147461
    5. '<|end|>' → logprob: -13.375143051147461
    6. ',float' → logprob: -13.875143051147461
    7. '):' → logprob: -14.250143051147461
    8. '‌,' → logprob: -14.250143051147461
    9. ',int' → logprob: -14.625143051147461
    10. ',x' → logprob: -15.250143051147461

Token 32: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20141392946243286
    2. 'y' → logprob: -1.701413869857788
    3. ' ' → logprob: -14.951414108276367
    4. '	y' → logprob: -15.701414108276367
    5. ' ' → logprob: -16.576414108276367
    6. ',' → logprob: -18.076414108276367
    7. '<|end|>' → logprob: -18.451414108276367
    8. ',y' → logprob: -18.701414108276367
    9. '‘y' → logprob: -19.326414108276367
    10. '    ' → logprob: -19.451414108276367

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2094743847846985
    2. '):' → logprob: -1.7094743251800537
    3. ')' → logprob: -4.834474563598633
    4. ' ):' → logprob: -10.959474563598633
    5. '<|end|>' → logprob: -11.084474563598633
    6. ',' → logprob: -11.334474563598633
    7. '<|end|>' → logprob: -11.834474563598633
    8. '):
' → logprob: -12.209474563598633
    9. ' :' → logprob: -12.209474563598633
    10. ':int' → logprob: -12.334474563598633

Token 34: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.023912182077765465
    2. 'float' → logprob: -3.773912191390991
    3. ' ' → logprob: -7.898911952972412
    4. '=float' → logprob: -9.14891242980957
    5. ')' → logprob: -9.27391242980957
    6. ' )' → logprob: -9.64891242980957
    7. '	float' → logprob: -11.52391242980957
    8. ',float' → logprob: -11.77391242980957
    9. '<float' → logprob: -12.89891242980957
    10. '(float' → logprob: -12.89891242980957

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006728634238243103
    2. ')' → logprob: -5.006728649139404
    3. ':' → logprob: -11.881728172302246
    4. ' ):' → logprob: -12.381728172302246
    5. '):
' → logprob: -13.506728172302246
    6. ',' → logprob: -14.756728172302246
    7. ' ' → logprob: -15.881728172302246
    8. '   ' → logprob: -16.381729125976562
    9. '),' → logprob: -16.381729125976562
    10. ' )' → logprob: -17.131729125976562

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025429049506783485
    2. ' )' → logprob: -5.0254292488098145
    3. ')' → logprob: -5.2754292488098145
    4. ' ' → logprob: -5.7754292488098145
    5. '        ' → logprob: -5.9004292488098145
    6. '    ' → logprob: -6.0254292488098145
    7. '   ' → logprob: -6.2754292488098145
    8. 'x' → logprob: -6.7754292488098145
    9. 'self' → logprob: -7.6504292488098145
    10. '```' → logprob: -7.9004292488098145

Token 37: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06208767741918564
    2. ' self' → logprob: -2.8120877742767334
    3. '       ' → logprob: -9.062088012695312
    4. 'x' → logprob: -13.312088012695312
    5. ' ' → logprob: -13.812088012695312
    6. 's' → logprob: -14.562088012695312
    7. '   ' → logprob: -14.562088012695312
    8. ' ' → logprob: -15.562088012695312
    9. '        ' → logprob: -16.562088012695312
    10. '	self' → logprob: -17.312088012695312

Token 38: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03368166461586952
    2. '.x' → logprob: -3.408681631088257
    3. ' .' → logprob: -10.658681869506836
    4. '.y' → logprob: -12.783681869506836
    5. '.user' → logprob: -13.908681869506836
    6. '<|end|>' → logprob: -13.908681869506836
    7. '.)' → logprob: -14.033681869506836
    8. ' ' → logprob: -14.283681869506836
    9. '.py' → logprob: -14.283681869506836
    10. '.i' → logprob: -14.408681869506836

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08961626887321472
    2. ' =' → logprob: -2.464616298675537
    3. '<|end|>' → logprob: -7.589616298675537
    4. ' ' → logprob: -9.964615821838379
    5. ',' → logprob: -10.089615821838379
    6. ')' → logprob: -10.589615821838379
    7. '<|end|>' → logprob: -10.589615821838379
    8. '_' → logprob: -11.964615821838379
    9. '.' → logprob: -12.089615821838379
    10. ' =)' → logprob: -12.214615821838379

Token 40: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868713080883026
    2. ' x' → logprob: -1.136871337890625
    3. '	x' → logprob: -16.261871337890625
    4. ' ' → logprob: -16.761871337890625
    5. ' ' → logprob: -17.261871337890625
    6. ')x' → logprob: -18.011871337890625
    7. '(x' → logprob: -19.261871337890625
    8. '$x' → logprob: -19.886871337890625
    9. '_x' → logprob: -20.136871337890625
    10. '"x' → logprob: -20.636871337890625

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30665287375450134
    2. '
' → logprob: -1.9316529035568237
    3. 'self' (adapté à ' self') → logprob: -2.931652784347534
    4. 'y' → logprob: -3.806652784347534
    5. '<|end|>' → logprob: -4.181653022766113
    6. '        
' → logprob: -4.556653022766113
    7. ',' → logprob: -5.306653022766113
    8. '    
' → logprob: -6.056653022766113
    9. ')' → logprob: -6.181653022766113
    10. ' ' → logprob: -6.681653022766113

Token 44: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00031270162435248494
    2. ')' → logprob: -9.500312805175781
    3. '<|end|>' → logprob: -9.500312805175781
    4. '.y' → logprob: -10.000312805175781
    5. '<|end|>' → logprob: -10.125312805175781
    6. '.x' → logprob: -10.625312805175781
    7. ',' → logprob: -11.000312805175781
    8. ' .' → logprob: -11.875312805175781
    9. 'y' → logprob: -11.875312805175781
    10. '=' → logprob: -12.000312805175781

Token 45: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16022422909736633
    2. 'y' → logprob: -1.910224199295044
    3. '	y' → logprob: -16.91022491455078
    4. ' ' → logprob: -18.03522491455078
    5. ' ' → logprob: -18.78522491455078
    6. ')y' → logprob: -19.53522491455078
    7. '‘y' → logprob: -20.03522491455078
    8. '(y' → logprob: -20.03522491455078
    9. '_y' → logprob: -20.78522491455078
    10. '0' → logprob: -20.91022491455078

Token 47: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013451489619910717
    2. '   ' → logprob: -5.38845157623291
    3. '    
' → logprob: -5.63845157623291
    4. '

' → logprob: -6.63845157623291
    5. '\n' → logprob: -6.76345157623291
    6. '```' → logprob: -6.88845157623291
    7. '<|end|>' → logprob: -7.13845157623291
    8. ' 
' → logprob: -7.76345157623291
    9. '' → logprob: -9.01345157623291
    10. '  
' → logprob: -9.63845157623291

Token 48: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.194845512509346
    2. '

' → logprob: -2.31984543800354
    3. 'class' → logprob: -2.56984543800354
    4. '```' → logprob: -6.819845676422119
    5. '\n' → logprob: -7.194845676422119
    6. '
' → logprob: -9.694845199584961
    7. '' → logprob: -9.819845199584961
    8. ' class' → logprob: -10.069845199584961
    9. '    
' → logprob: -10.069845199584961
    10. '
    
' → logprob: -10.444845199584961

Token 49: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.044456321746110916
    2. '
' → logprob: -3.4194562435150146
    3. '    
' → logprob: -5.419456481933594
    4. '   ' → logprob: -5.794456481933594
    5. ' def' → logprob: -6.294456481933594
    6. ' 
' → logprob: -7.419456481933594
    7. '```' → logprob: -8.669456481933594
    8. '  
' → logprob: -8.794456481933594
    9. ' ' → logprob: -9.419456481933594
    10. '

' → logprob: -9.544456481933594

Token 50: ' __' (ID: 2516)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.7855163812637329
    2. '_distance' → logprob: -1.035516381263733
    3. 'distance' → logprob: -2.0355162620544434
    4. '_' → logprob: -3.7855162620544434
    5. ' ' → logprob: -4.660516262054443
    6. ' __' → logprob: -4.910516262054443
    7. ' distances' → logprob: -5.660516262054443
    8. ' def' → logprob: -5.660516262054443
    9. '_repr' → logprob: -6.285516262054443
    10. '.distance' → logprob: -6.535516262054443

Token 51: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.5863057971000671
    2. 'repr' → logprob: -0.8363057971000671
    3. 'str' → logprob: -4.586305618286133
    4. 'init' → logprob: -9.211305618286133
    5. 'add' → logprob: -10.961305618286133
    6. 'lt' → logprob: -12.711305618286133
    7. 'hash' → logprob: -14.336305618286133
    8. 'sub' → logprob: -15.461305618286133
    9. 'iter' → logprob: -15.586305618286133
    10. 'rep' → logprob: -15.711305618286133

Token 52: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.25510290265083313
    2. '__' → logprob: -1.5051028728485107
    3. '__(
' → logprob: -6.25510311126709
    4. '__('' → logprob: -7.00510311126709
    5. '__((' → logprob: -8.75510311126709
    6. '(' → logprob: -9.38010311126709
    7. '__("' → logprob: -10.00510311126709
    8. '(self' → logprob: -10.75510311126709
    9. '_' → logprob: -11.50510311126709
    10. '__(*' → logprob: -11.63010311126709

Token 53: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018041854491457343
    2. ')' → logprob: -8.6251802444458
    3. ' self' → logprob: -15.0001802444458
    4. 'Self' → logprob: -16.250181198120117
    5. '(self' → logprob: -16.500181198120117
    6. '_self' → logprob: -16.625181198120117
    7. 'sel' → logprob: -17.250181198120117
    8. '<|end|>' → logprob: -17.500181198120117
    9. ' )' → logprob: -17.625181198120117
    10. '

' → logprob: -17.875181198120117

Token 54: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05986669659614563
    2. '):' → logprob: -3.3098666667938232
    3. ',' → logprob: -3.9348666667938232
    4. 'self' → logprob: -6.684866905212402
    5. ' ' → logprob: -9.059866905212402
    6. ' )' → logprob: -9.059866905212402
    7. '):
' → logprob: -9.434866905212402
    8. '<|end|>' → logprob: -9.434866905212402
    9. ')return' → logprob: -10.184866905212402
    10. '   ' → logprob: -10.309866905212402

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26328766345977783
    2. 'f' → logprob: -1.5132876634597778
    3. 'return' → logprob: -4.638287544250488
    4. ' f' → logprob: -6.513287544250488
    5. ' return' → logprob: -9.263287544250488
    6. '   ' → logprob: -10.513287544250488
    7. '           ' → logprob: -12.138287544250488
    8. '      ' → logprob: -12.888287544250488
    9. '     ' → logprob: -13.763287544250488
    10. ''' → logprob: -13.888287544250488

Token 56: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2723984122276306
    2. 'f' → logprob: -2.0223984718322754
    3. '       ' → logprob: -2.2723984718322754
    4. ' return' → logprob: -6.147398471832275
    5. ' f' → logprob: -7.397398471832275
    6. '   ' → logprob: -8.272397994995117
    7. '           ' → logprob: -10.522397994995117
    8. '{return' → logprob: -12.772397994995117
    9. '     ' → logprob: -12.897397994995117
    10. '    ' → logprob: -13.397397994995117

Token 57: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.4741056561470032
    2. 'f' → logprob: -0.9741056561470032
    3. ''f' → logprob: -10.974105834960938
    4. ' ' → logprob: -12.224105834960938
    5. ''' → logprob: -12.849105834960938
    6. '	f' → logprob: -13.474105834960938
    7. '"' → logprob: -13.599105834960938
    8. '(f' → logprob: -14.599105834960938
    9. 'F' → logprob: -14.974105834960938
    10. ' ' → logprob: -15.724105834960938

Token 58: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.019483357667922974
    2. ''' → logprob: -4.01948356628418
    3. 'Point' → logprob: -7.51948356628418
    4. '(Point' → logprob: -7.76948356628418
    5. 'f' → logprob: -8.14448356628418
    6. '<Point' → logprob: -10.39448356628418
    7. '"P' → logprob: -10.64448356628418
    8. ''f' → logprob: -12.26948356628418
    9. '("' → logprob: -12.89448356628418
    10. '	Point' → logprob: -12.89448356628418

Token 59: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0006446453626267612
    2. '(Point' → logprob: -7.375644683837891
    3. '<Point' → logprob: -11.12564468383789
    4. ' Point' → logprob: -13.87564468383789
    5. '.Point' → logprob: -14.00064468383789
    6. 'P' → logprob: -15.12564468383789
    7. 'Points' → logprob: -15.37564468383789
    8. '	Point' → logprob: -15.37564468383789
    9. '_Point' → logprob: -15.62564468383789
    10. '('' → logprob: -16.25064468383789

Token 60: '({' (ID: 3972)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12409656494855881
    2. '({' → logprob: -2.499096632003784
    3. '(x' → logprob: -3.374096632003784
    4. '(
' → logprob: -9.499096870422363
    5. '{' → logprob: -9.749096870422363
    6. '(Point' → logprob: -10.124096870422363
    7. '(f' → logprob: -10.249096870422363
    8. '{x' → logprob: -10.874096870422363
    9. '(

' → logprob: -11.249096870422363
    10. '(({' → logprob: -11.249096870422363

Token 61: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2961512513575144e-05
    2. ' self' → logprob: -10.875022888183594
    3. '{' → logprob: -12.500022888183594
    4. 'sel' → logprob: -17.250022888183594
    5. '(self' → logprob: -17.875022888183594
    6. 'repr' → logprob: -18.000022888183594
    7. ' ' → logprob: -18.375022888183594
    8. ')' → logprob: -18.375022888183594
    9. ',self' → logprob: -18.750022888183594
    10. '	self' → logprob: -18.875022888183594

Token 62: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.029773399233818054
    2. '.' → logprob: -3.529773473739624
    3. ' .' → logprob: -11.029773712158203
    4. ').' → logprob: -13.404773712158203
    5. ',' → logprob: -13.904773712158203
    6. '.s' → logprob: -14.029773712158203
    7. ')' → logprob: -14.529773712158203
    8. '.i' → logprob: -14.779773712158203
    9. '.y' → logprob: -14.779773712158203
    10. '.)' → logprob: -15.279773712158203

Token 63: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034023032640106976
    2. '},' → logprob: -8.750340461730957
    3. ' ,' → logprob: -8.750340461730957
    4. '}' → logprob: -11.750340461730957
    5. ',
' → logprob: -11.875340461730957
    6. ')' → logprob: -12.750340461730957
    7. '),' → logprob: -13.000340461730957
    8. ',

' → logprob: -14.000340461730957
    9. '<|end|>' → logprob: -14.000340461730957
    10. ',f' → logprob: -15.000340461730957

Token 64: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.47469326853752136
    2. '{' → logprob: -0.9746932983398438
    3. 'self' → logprob: -7.599693298339844
    4. ' self' → logprob: -9.099693298339844
    5. ' ' → logprob: -13.474693298339844
    6. ' ' → logprob: -13.599693298339844
    7. '{return' → logprob: -15.224693298339844
    8. '{x' → logprob: -15.474693298339844
    9. '{s' → logprob: -15.724693298339844
    10. ',' → logprob: -15.849693298339844

Token 65: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.165027217415627e-05
    2. ' self' → logprob: -10.750021934509277
    3. '	self' → logprob: -17.00002098083496
    4. ' ' → logprob: -18.62502098083496
    5. '<|end|>' → logprob: -18.87502098083496
    6. '   ' → logprob: -19.37502098083496
    7. '$self' → logprob: -20.12502098083496
    8. '  ' → logprob: -20.12502098083496
    9. '{' → logprob: -20.25002098083496
    10. '<|end|>' → logprob: -20.50002098083496

Token 66: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.1002482995390892
    2. '.' → logprob: -2.350248336791992
    3. '.x' → logprob: -10.475248336791992
    4. ' .' → logprob: -12.350248336791992
    5. '}' → logprob: -12.600248336791992
    6. ')' → logprob: -12.975248336791992
    7. 'y' → logprob: -14.100248336791992
    8. '}.' → logprob: -14.100248336791992
    9. ').' → logprob: -14.600248336791992
    10. ',' → logprob: -15.100248336791992

Token 67: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.011453083716332912
    2. ')' → logprob: -4.511453151702881
    3. '})' → logprob: -8.261452674865723
    4. ')")' → logprob: -9.636452674865723
    5. ')}' → logprob: -10.261452674865723
    6. '}"' → logprob: -10.761452674865723
    7. '")' → logprob: -11.511452674865723
    8. ')">' → logprob: -12.261452674865723
    9. '}")' → logprob: -12.636452674865723
    10. ')`' → logprob: -12.761452674865723

Token 68: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0023733926936984062
    2. ')"' → logprob: -6.627373218536377
    3. '")' → logprob: -7.502373218536377
    4. ')' → logprob: -7.877373218536377
    5. '"""' → logprob: -9.627373695373535
    6. '```' → logprob: -10.502373695373535
    7. '"
' → logprob: -11.252373695373535
    8. '}"' → logprob: -13.002373695373535
    9. '\n' → logprob: -13.002373695373535
    10. '"}' → logprob: -13.502373695373535

Token 69: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6943146586418152
    2. '
' → logprob: -0.9443146586418152
    3. '

' → logprob: -2.19431471824646
    4. '
' → logprob: -8.944314956665039
    5. '```' → logprob: -10.194314956665039
    6. ' class' → logprob: -11.194314956665039
    7. '


' → logprob: -11.319314956665039
    8. '
    
' → logprob: -13.569314956665039
    9. '\n' → logprob: -13.694314956665039
    10. '<class' → logprob: -13.944314956665039

Token 70: ' Polygon' (ID: 96494)
  Prédit: ' Shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Shape' → logprob: -0.005803893320262432
    2. ' Polygon' → logprob: -5.380804061889648
    3. ' ' → logprob: -7.880804061889648
    4. 'Shape' → logprob: -8.380804061889648
    5. ' Abstract' → logprob: -8.880804061889648
    6. ' Ge' → logprob: -9.005804061889648
    7. ' Curve' → logprob: -9.255804061889648
    8. ' Geometry' → logprob: -9.505804061889648
    9. ' Line' → logprob: -10.505804061889648
    10. ' Poly' → logprob: -11.255804061889648

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.551721889991313e-05
    2. '(Abstract' → logprob: -10.250065803527832
    3. ':' → logprob: -10.875065803527832
    4. ' (' → logprob: -11.500065803527832
    5. 'Abstract' → logprob: -15.000065803527832
    6. '```' → logprob: -16.125064849853516
    7. '\(' → logprob: -16.250064849853516
    8. '<|end|>' → logprob: -16.750064849853516
    9. ' :' → logprob: -16.875064849853516
    10. '(QWidget' → logprob: -17.000064849853516

Token 72: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.018154622986912727
    2. ' ABC' → logprob: -4.018154621124268
    3. 'AB' → logprob: -12.893155097961426
    4. 'ABCDE' → logprob: -14.268155097961426
    5. ' ' → logprob: -14.518155097961426
    6. ')' → logprob: -14.518155097961426
    7. 'Abstract' → logprob: -15.268155097961426
    8. 'A' → logprob: -16.51815414428711
    9. 'abc' → logprob: -16.89315414428711
    10. '   ' → logprob: -17.01815414428711

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019889144459739327
    2. ')' → logprob: -8.750199317932129
    3. ':' → logprob: -10.625199317932129
    4. '):
' → logprob: -11.500199317932129
    5. ',' → logprob: -12.625199317932129
    6. ' ):' → logprob: -13.125199317932129
    7. '):

' → logprob: -15.250199317932129
    8. '():' → logprob: -16.125198364257812
    9. '):
' → logprob: -16.250198364257812
    10. '```' → logprob: -17.125198364257812

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06020796298980713
    2. ':' → logprob: -3.0602078437805176
    3. '<|end|>' → logprob: -5.935207843780518
    4. ' def' → logprob: -6.060207843780518
    5. '    
' → logprob: -6.060207843780518
    6. '
' → logprob: -6.935207843780518
    7. '    ' → logprob: -7.185207843780518
    8. 'def' → logprob: -7.435207843780518
    9. '  ' → logprob: -7.810207843780518
    10. ' :' → logprob: -8.060208320617676

Token 75: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020037129521369934
    2. ' @' → logprob: -5.0200371742248535
    3. ' def' → logprob: -5.2700371742248535
    4. '@' → logprob: -5.6450371742248535
    5. 'def' (adapté à ' def') → logprob: -5.6450371742248535
    6. '    
' → logprob: -7.3950371742248535
    7. '
' → logprob: -8.145036697387695
    8. ' 
' → logprob: -9.520036697387695
    9. '    ' → logprob: -11.145036697387695
    10. '```' → logprob: -12.270036697387695

Token 76: ' __' (ID: 2516)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.395573228597641
    2. 'nit' → logprob: -2.145573139190674
    3. ' __' → logprob: -3.020573139190674
    4. ' def' → logprob: -3.520573139190674
    5. ' ' → logprob: -3.645573139190674
    6. ' init' → logprob: -3.895573139190674
    7. '_init' → logprob: -4.020573139190674
    8. 'init' → logprob: -4.020573139190674
    9. ' abstract' → logprob: -4.520573139190674
    10. '   ' → logprob: -4.645573139190674

Token 77: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00226635136641562
    2. 'nit' → logprob: -6.1272664070129395
    3. 'abstract' → logprob: -9.877265930175781
    4. 'n' → logprob: -10.752265930175781
    5. 'abc' → logprob: -12.127265930175781
    6. 'in' → logprob: -13.877265930175781
    7. 'int' → logprob: -15.127265930175781
    8. 'ait' → logprob: -15.377265930175781
    9. 'abs' → logprob: -15.627265930175781
    10. ' init' → logprob: -15.627265930175781

Token 78: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0044802045449614525
    2. '__' → logprob: -5.629480361938477
    3. '__(
' → logprob: -7.129480361938477
    4. '(self' → logprob: -10.004480361938477
    5. '__((' → logprob: -10.629480361938477
    6. '(' → logprob: -12.879480361938477
    7. '__('' → logprob: -13.379480361938477
    8. '__(*' → logprob: -13.629480361938477
    9. '_(' → logprob: -14.004480361938477
    10. '_' → logprob: -14.379480361938477

Token 79: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009200031869113445
    2. ' self' → logprob: -4.759200096130371
    3. ')' → logprob: -7.509200096130371
    4. 'points' → logprob: -11.509200096130371
    5. ' ' → logprob: -12.009200096130371
    6. '(self' → logprob: -12.384200096130371
    7. '	self' → logprob: -12.884200096130371
    8. ' )' → logprob: -13.259200096130371
    9. 'List' → logprob: -13.509200096130371
    10. '   ' → logprob: -13.759200096130371

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001346423290669918
    2. ' ,' → logprob: -6.626346588134766
    3. 'self' → logprob: -11.251346588134766
    4. ')' → logprob: -12.876346588134766
    5. '_points' → logprob: -13.751346588134766
    6. ' ' → logprob: -13.751346588134766
    7. ' )' → logprob: -14.501346588134766
    8. ',
' → logprob: -15.126346588134766
    9. '_,' → logprob: -15.126346588134766
    10. '‌,' → logprob: -15.626346588134766

Token 81: ' vertices' (ID: 38360)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.22597232460975647
    2. 'points' → logprob: -2.4759724140167236
    3. 'self' → logprob: -2.9759724140167236
    4. ' self' → logprob: -3.1009724140167236
    5. ' vertices' → logprob: -3.9759724140167236
    6. 'vertices' → logprob: -5.7259721755981445
    7. '	points' → logprob: -10.225972175598145
    8. ')' → logprob: -10.350972175598145
    9. ' corners' → logprob: -11.350972175598145
    10. 's' → logprob: -11.725972175598145

Token 82: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3856492842023727e-06
    2. '):' → logprob: -14.000000953674316
    3. ' :' → logprob: -15.250000953674316
    4. '_:' → logprob: -16.125001907348633
    5. ')' → logprob: -16.375001907348633
    6. ':list' → logprob: -18.250001907348633
    7. ' ):' → logprob: -19.000001907348633
    8. '__:' → logprob: -19.375001907348633
    9. '```' → logprob: -19.625001907348633
    10. '}:' → logprob: -20.125001907348633

Token 83: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.01815333589911461
    2. 'List' → logprob: -4.018153190612793
    3. '[List' → logprob: -12.768153190612793
    4. '	List' → logprob: -14.893153190612793
    5. ')' → logprob: -16.01815414428711
    6. ' )' → logprob: -16.64315414428711
    7. ' list' → logprob: -17.76815414428711
    8. ' ' → logprob: -17.89315414428711
    9. ',List' → logprob: -18.01815414428711
    10. ' ' → logprob: -18.01815414428711

Token 84: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016480287013109773
    2. '<Point' → logprob: -8.750164985656738
    3. 'Point' → logprob: -13.250164985656738
    4. '[
' → logprob: -13.500164985656738
    5. '(Point' → logprob: -14.250164985656738
    6. '```' → logprob: -14.250164985656738
    7. ')' → logprob: -14.250164985656738
    8. '	Point' → logprob: -14.500164985656738
    9. ' [' → logprob: -15.125164985656738
    10. '[List' → logprob: -15.375164985656738

Token 85: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0002043748099822551
    2. ' Point' → logprob: -8.500204086303711
    3. '	Point' → logprob: -14.125204086303711
    4. 'Tuple' → logprob: -16.37520408630371
    5. '_Point' → logprob: -18.37520408630371
    6. '<Point' → logprob: -18.75020408630371
    7. '(Point' → logprob: -19.75020408630371
    8. ')' → logprob: -20.37520408630371
    9. ' ' → logprob: -20.50020408630371
    10. '[' → logprob: -20.62520408630371

Token 86: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.20644061267375946
    2. ']' → logprob: -2.4564406871795654
    3. '])' → logprob: -2.5814406871795654
    4. ')' → logprob: -4.331440448760986
    5. '):' → logprob: -4.581440448760986
    6. ']:' → logprob: -6.831440448760986
    7. ']):
' → logprob: -7.706440448760986
    8. '],' → logprob: -9.081440925598145
    9. ' ' → logprob: -11.206440925598145
    10. '>):' → logprob: -11.456440925598145

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028885968029499054
    2. ' ' → logprob: -4.278885841369629
    3. ')' → logprob: -5.778885841369629
    4. '<|end|>' → logprob: -5.778885841369629
    5. '    ' → logprob: -5.903885841369629
    6. '   ' → logprob: -6.653885841369629
    7. '        ' → logprob: -6.653885841369629
    8. ' )' → logprob: -7.278885841369629
    9. '      ' → logprob: -7.403885841369629
    10. ':' → logprob: -7.778885841369629

Token 88: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.201555535197258
    2. ' self' → logprob: -1.7015554904937744
    3. '       ' → logprob: -8.951555252075195
    4. 'super' → logprob: -11.451555252075195
    5. '   ' → logprob: -13.951555252075195
    6. ' super' → logprob: -14.451555252075195
    7. '	self' → logprob: -15.451555252075195
    8. ' ' → logprob: -15.701555252075195
    9. ' ' → logprob: -16.826555252075195
    10. '    ' → logprob: -17.826555252075195

Token 89: ' not' (ID: 625)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06334657222032547
    2. ' not' → logprob: -2.8133466243743896
    3. 'len' → logprob: -6.6883463859558105
    4. 'not' → logprob: -9.938346862792969
    5. ' vertices' → logprob: -10.063346862792969
    6. ' any' → logprob: -10.688346862792969
    7. ' all' → logprob: -11.938346862792969
    8. ' ' → logprob: -12.563346862792969
    9. 'vertices' → logprob: -12.813346862792969
    10. '(len' → logprob: -13.313346862792969

Token 90: ' ' (ID: 220)
  Prédit: ' vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertices' → logprob: -0.04213736206293106
    2. 'vertices' → logprob: -3.417137384414673
    3. ' all' → logprob: -5.417137145996094
    4. ' isinstance' → logprob: -5.667137145996094
    5. 'all' → logprob: -8.042137145996094
    6. ' len' → logprob: -9.042137145996094
    7. '(vertices' → logprob: -10.229637145996094
    8. 'len' → logprob: -11.292137145996094
    9. ' hasattr' → logprob: -11.479637145996094
    10. ' ' → logprob: -11.604637145996094

Token 91: '3' (ID: 18)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.001486535300500691
    2. 'all' → logprob: -7.001486301422119
    3. ' vertices' → logprob: -7.876486301422119
    4. 'is' → logprob: -8.751486778259277
    5. '(vertices' → logprob: -10.876486778259277
    6. 'len' → logprob: -11.876486778259277
    7. ' isinstance' → logprob: -13.251486778259277
    8. ' all' → logprob: -13.626486778259277
    9. '   ' → logprob: -13.751486778259277
    10. 'self' → logprob: -14.126486778259277

Token 92: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0005608965293504298
    2. '<=' → logprob: -7.625560760498047
    3. ' ' → logprob: -10.000560760498047
    4. ' <' → logprob: -11.250560760498047
    5. '  ' → logprob: -12.500560760498047
    6. '.' → logprob: -12.875560760498047
    7. ' >=' → logprob: -13.125560760498047
    8. ' in' → logprob: -13.250560760498047
    9. '<|end|>' → logprob: -13.875560760498047
    10. ' ≤' → logprob: -14.375560760498047

Token 93: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.16022524237632751
    2. 'len' → logprob: -1.91022527217865
    3. '(len' → logprob: -14.410224914550781
    4. '=len' → logprob: -14.660224914550781
    5. '	len' → logprob: -16.16022491455078
    6. ' ' → logprob: -16.66022491455078
    7. ',len' → logprob: -16.91022491455078
    8. '[len' → logprob: -17.16022491455078
    9. '<len' → logprob: -17.53522491455078
    10. 'Len' → logprob: -19.28522491455078

Token 94: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -0.0010654398938640952
    2. '(' → logprob: -6.876065254211426
    3. '(
' → logprob: -11.626065254211426
    4. 'vertices' → logprob: -11.751065254211426
    5. '(points' → logprob: -12.501065254211426
    6. '<|end|>' → logprob: -12.876065254211426
    7. '(v' → logprob: -13.126065254211426
    8. '(vertex' → logprob: -13.251065254211426
    9. ' (' → logprob: -13.501065254211426
    10. '(self' → logprob: -14.126065254211426

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006655449979007244
    2. ' )' → logprob: -5.256655216217041
    3. '):' → logprob: -7.256655216217041
    4. ')<=' → logprob: -7.631655216217041
    5. '<|end|>' → logprob: -9.6316556930542
    6. ' <=' → logprob: -9.8816556930542
    7. '):
' → logprob: -10.0066556930542
    8. ' ' → logprob: -11.1316556930542
    9. '<|end|>' → logprob: -11.2566556930542
    10. ')<' → logprob: -11.8816556930542

Token 96: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2580540180206299
    2. '<|end|>' → logprob: -1.7580540180206299
    3. '<=' → logprob: -3.13305401802063
    4. '<|end|>' → logprob: -5.383053779602051
    5. ':' → logprob: -5.633053779602051
    6. ' ' → logprob: -6.133053779602051
    7. '[' → logprob: -8.88305377960205
    8. ' <' → logprob: -9.13305377960205
    9. '):' → logprob: -9.13305377960205
    10. ')<=' → logprob: -9.25805377960205

Token 97: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22746141254901886
    2. 'sys' → logprob: -2.477461338043213
    3. '100' → logprob: -2.977461338043213
    4. ' ' → logprob: -3.602461338043213
    5. '20' → logprob: -4.102461338043213
    6. ' sys' → logprob: -4.727461338043213
    7. '7' → logprob: -5.227461338043213
    8. '6' → logprob: -5.477461338043213
    9. '8' → logprob: -5.727461338043213
    10. '12' → logprob: -6.352461338043213

Token 98: '20' (ID: 455)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04537046700716019
    2. 'sys' → logprob: -3.545370578765869
    3. '100' → logprob: -4.420370578765869
    4. '6' → logprob: -6.795370578765869
    5. '8' → logprob: -7.170370578765869
    6. '7' → logprob: -7.420370578765869
    7. '20' → logprob: -7.795370578765869
    8. '12' → logprob: -8.795370101928711
    9. ' sys' → logprob: -8.920370101928711
    10. '5' → logprob: -9.295370101928711

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015999639872461557
    2. ' :' → logprob: -7.0015997886657715
    3. ':
' → logprob: -7.7515997886657715
    4. '):' → logprob: -8.50160026550293
    5. ' and' → logprob: -10.25160026550293
    6. ' :
' → logprob: -12.12660026550293
    7. ',' → logprob: -12.37660026550293
    8. ' or' → logprob: -12.62660026550293
    9. '):
' → logprob: -13.62660026550293
    10. ')' → logprob: -13.75160026550293

Token 100: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.168076291680336
    2. ':
' → logprob: -2.168076276779175
    3. '           ' → logprob: -3.793076276779175
    4. ' :' → logprob: -4.793076515197754
    5. ' :
' → logprob: -5.293076515197754
    6. ' or' → logprob: -6.418076515197754
    7. ',' → logprob: -7.418076515197754
    8. '            ' → logprob: -7.543076515197754
    9. ' and' → logprob: -7.668076515197754
    10. '       ' → logprob: -7.793076515197754

Token 101: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.02103390544652939
    2. 'raise' (adapté à ' raise') → logprob: -3.896034002304077
    3. '           ' → logprob: -8.646034240722656
    4. '            ' → logprob: -8.646034240722656
    5. '
' → logprob: -10.146034240722656
    6. ' 
' → logprob: -10.271034240722656
    7. ' ' → logprob: -10.646034240722656
    8. ' sys' → logprob: -10.896034240722656
    9. '        ' → logprob: -12.021034240722656
    10. '	raise' → logprob: -12.021034240722656

Token 102: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.00034142236108891666
    2. 'Value' → logprob: -8.000341415405273
    3. ' ' → logprob: -12.500341415405273
    4. '	Value' → logprob: -13.375341415405273
    5. ' Val' → logprob: -15.625341415405273
    6. ' ' → logprob: -16.250341415405273
    7. '```' → logprob: -16.375341415405273
    8. '(Value' → logprob: -16.375341415405273
    9. '_Value' → logprob: -16.500341415405273
    10. ' value' → logprob: -17.000341415405273

Token 103: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.01108542736619711
    2. 'rror' → logprob: -4.511085510253906
    3. 'ror' → logprob: -10.636085510253906
    4. 'r' → logprob: -11.386085510253906
    5. 'error' → logprob: -13.636085510253906
    6. 'Value' → logprob: -14.761085510253906
    7. 'Er' → logprob: -15.261085510253906
    8. 'or' → logprob: -16.761085510253906
    9. 'SError' → logprob: -16.761085510253906
    10. 'LError' → logprob: -16.761085510253906

Token 104: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.006093862000852823
    2. '(' → logprob: -5.131093978881836
    3. '(
' → logprob: -8.756093978881836
    4. '('' → logprob: -12.131093978881836
    5. '"' → logprob: -13.881093978881836
    6. '(f' → logprob: -14.256093978881836
    7. '(

' → logprob: -14.506093978881836
    8. '(
' → logprob: -16.506093978881836
    9. '("'' → logprob: -16.756093978881836
    10. '(",' → logprob: -16.881093978881836

Token 105: 'Number' (ID: 3695)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0265876054763794
    2. 'Number' → logprob: -1.0265876054763794
    3. 'Polygon' → logprob: -2.27658748626709
    4. ' Number' → logprob: -2.40158748626709
    5. 'Pol' → logprob: -3.52658748626709
    6. ' A' → logprob: -3.77658748626709
    7. ' Polygon' → logprob: -3.90158748626709
    8. ' Pol' → logprob: -4.52658748626709
    9. 'At' → logprob: -6.65158748626709
    10. 'Vertices' → logprob: -6.65158748626709

Token 106: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0011605772888287902
    2. 'of' → logprob: -6.876160621643066
    3. ' ' → logprob: -9.126160621643066
    4. '  ' → logprob: -11.001160621643066
    5. '_of' → logprob: -14.251160621643066
    6. '	of' → logprob: -14.376160621643066
    7. '   ' → logprob: -14.876160621643066
    8. 's' → logprob: -15.251160621643066
    9. ' o' → logprob: -16.00115966796875
    10. '    ' → logprob: -16.62615966796875

Token 107: ' vertices' (ID: 38360)
  Prédit: ' vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertices' → logprob: -0.0021098130382597446
    2. ' ' → logprob: -6.877110004425049
    3. 'vertices' → logprob: -7.002110004425049
    4. '_vertices' → logprob: -9.75210952758789
    5. ' points' → logprob: -9.87710952758789
    6. '<|end|>' → logprob: -11.37710952758789
    7. ' sides' → logprob: -11.50210952758789
    8. '(vertices' → logprob: -11.75210952758789
    9. 's' → logprob: -12.50210952758789
    10. ' vertex' → logprob: -12.62710952758789

Token 108: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0005997385596856475
    2. 'must' → logprob: -7.6255998611450195
    3. ' should' → logprob: -9.12559986114502
    4. ' ' → logprob: -13.62559986114502
    5. ' not' → logprob: -14.37559986114502
    6. 'should' → logprob: -15.50059986114502
    7. ' is' → logprob: -16.250598907470703
    8. ' between' → logprob: -16.250598907470703
    9. ' has' → logprob: -16.250598907470703
    10. ' needs' → logprob: -16.375598907470703

Token 109: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -3.6550729419104755e-05
    2. ' ' → logprob: -10.875036239624023
    3. ' not' → logprob: -11.875036239624023
    4. ' between' → logprob: -12.125036239624023
    5. '<|end|>' → logprob: -12.375036239624023
    6. ' continue' → logprob: -15.625036239624023
    7. ' have' → logprob: -15.750036239624023
    8. ' to' → logprob: -16.500036239624023
    9. 'be' → logprob: -16.625036239624023
    10. '	be' → logprob: -16.625036239624023

Token 110: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.0015769980382174253
    2. 'between' → logprob: -6.501576900482178
    3. ' ' → logprob: -10.251577377319336
    4. '3' → logprob: -10.251577377319336
    5. ' at' → logprob: -12.626577377319336
    6. '```' → logprob: -14.626577377319336
    7. ' in' → logprob: -16.376577377319336
    8. '   ' → logprob: -16.501577377319336
    9. ' bet' → logprob: -17.001577377319336
    10. 'Between' → logprob: -17.126577377319336

Token 111: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.42870569229125977
    2. ' ' → logprob: -1.0537056922912598
    3. '```' → logprob: -13.303705215454102
    4. '   ' → logprob: -13.678705215454102
    5. ' ' → logprob: -13.678705215454102
    6. '    ' → logprob: -15.616205215454102
    7. '1' → logprob: -16.1787052154541
    8. '  ' → logprob: -16.4287052154541
    9. '`' → logprob: -16.6162052154541
    10. ' three' → logprob: -16.8037052154541

Token 112: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.625
    4. '   ' → logprob: -17.875
    5. '۳' → logprob: -19.9375
    6. '`' → logprob: -20.125
    7. 'three' → logprob: -20.125
    8. '３' → logprob: -20.625
    9. '٣' → logprob: -20.9375
    10. '' → logprob: -21.0

Token 113: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00046332005877047777
    2. 'and' → logprob: -8.000463485717773
    3. ' ' → logprob: -9.000463485717773
    4. ',' → logprob: -13.125463485717773
    5. '    ' → logprob: -14.625463485717773
    6. ' )' → logprob: -14.625463485717773
    7. ' ,' → logprob: -14.875463485717773
    8. '   ' → logprob: -15.000463485717773
    9. ')' → logprob: -15.250463485717773
    10. ' a' → logprob: -15.750463485717773

Token 114: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.08894339203834534
    2. ' ' → logprob: -2.4639434814453125
    3. '   ' → logprob: -13.713943481445312
    4. '  ' → logprob: -14.463943481445312
    5. '```' → logprob: -14.526443481445312
    6. '2' → logprob: -14.651443481445312
    7. ' ' → logprob: -15.151443481445312
    8. '1' → logprob: -15.838943481445312
    9. '
' → logprob: -15.838943481445312
    10. '30' → logprob: -16.026443481445312

Token 115: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.500011444091797
    3. '2' → logprob: -14.750011444091797
    4. '
' → logprob: -14.750011444091797
    5. '```' → logprob: -15.375011444091797
    6. '

' → logprob: -15.875011444091797
    7. '   ' → logprob: -15.875011444091797
    8. '  ' → logprob: -16.750011444091797
    9. '1' → logprob: -17.000011444091797
    10. '3' → logprob: -17.062511444091797

Token 116: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08329392224550247
    2. ')")' → logprob: -2.958293914794922
    3. '.")' → logprob: -3.958293914794922
    4. '")
' → logprob: -5.458293914794922
    5. ')' → logprob: -6.083293914794922
    6. ' )' → logprob: -6.833293914794922
    7. ')")
' → logprob: -7.333293914794922
    8. '.")
' → logprob: -8.208293914794922
    9. ' ")' → logprob: -8.333293914794922
    10. '")
' → logprob: -10.708293914794922

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007641059812158346
    2. '
' → logprob: -5.007640838623047
    3. '        
' → logprob: -7.257640838623047
    4. '<|end|>' → logprob: -9.257640838623047
    5. ' self' → logprob: -10.882640838623047
    6. '    
' → logprob: -10.882640838623047
    7. '  
' → logprob: -10.882640838623047
    8. '   ' → logprob: -10.882640838623047
    9. 'self' → logprob: -11.632640838623047
    10. '           ' → logprob: -12.007640838623047

Token 118: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09804132580757141
    2. ' self' → logprob: -2.473041296005249
    3. 'self' (adapté à ' self') → logprob: -4.848041534423828
    4. '        
' → logprob: -7.848041534423828
    5. ' ' → logprob: -8.223041534423828
    6. ' 
' → logprob: -8.973041534423828
    7. '   ' → logprob: -9.223041534423828
    8. '
' → logprob: -9.598041534423828
    9. ' ' → logprob: -9.723041534423828
    10. '  
' → logprob: -10.098041534423828

Token 119: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.02371486835181713
    2. '.' → logprob: -3.773714780807495
    3. ' .' → logprob: -8.398715019226074
    4. '.points' → logprob: -9.023715019226074
    5. '.v' → logprob: -9.898715019226074
    6. 'vertices' → logprob: -11.023715019226074
    7. '.edges' → logprob: -12.023715019226074
    8. '.faces' → logprob: -12.148715019226074
    9. '.vert' → logprob: -12.273715019226074
    10. '.ve' → logprob: -12.273715019226074

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020849853754044
    2. '=' → logprob: -2.3502085208892822
    3. ' ' → logprob: -13.600208282470703
    4. ' =
' → logprob: -15.475208282470703
    5. '.' → logprob: -15.850208282470703
    6. 's' → logprob: -16.475208282470703
    7. ' ' → logprob: -16.600208282470703
    8. ')' → logprob: -17.100208282470703
    9. '  ' → logprob: -17.600208282470703
    10. '.extend' → logprob: -17.600208282470703

Token 121: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.47408339381217957
    2. ' vertices' → logprob: -0.974083423614502
    3. '(vertices' → logprob: -12.349082946777344
    4. '.vertices' → logprob: -13.974082946777344
    5. '_vertices' → logprob: -14.724082946777344
    6. '   ' → logprob: -15.849082946777344
    7. ' ' → logprob: -15.849082946777344
    8. ' ' → logprob: -16.099082946777344
    9. 'Vertices' → logprob: -16.099082946777344
    10. 'vertex' → logprob: -16.349082946777344

Token 122: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013526413589715958
    2. '

' → logprob: -4.638526439666748
    3. '<|end|>' → logprob: -6.013526439666748
    4. '   ' → logprob: -7.263526439666748
    5. '    
' → logprob: -8.38852596282959
    6. '
    
' → logprob: -9.13852596282959
    7. '<|end|>' → logprob: -9.76352596282959
    8. ' 
' → logprob: -9.88852596282959
    9. '  
' → logprob: -10.26352596282959
    10. '


' → logprob: -10.63852596282959

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41272541880607605
    2. '
' → logprob: -1.7877254486083984
    3. '    
' → logprob: -1.7877254486083984
    4. ' 
' → logprob: -7.037725448608398
    5. '  
' → logprob: -7.162725448608398
    6. '

' → logprob: -7.412725448608398
    7. '        
' → logprob: -7.537725448608398
    8. '
    
' → logprob: -8.412725448608398
    9. ' ' → logprob: -9.162725448608398
    10. '   
' → logprob: -9.537725448608398

Token 124: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.004444601014256477
    2. '   ' → logprob: -5.629444599151611
    3. ' @' → logprob: -8.00444507598877
    4. '    
' → logprob: -8.37944507598877
    5. '@property' → logprob: -8.50444507598877
    6. '
' → logprob: -9.87944507598877
    7. 'def' → logprob: -11.50444507598877
    8. '@
' → logprob: -12.87944507598877
    9. '@index' → logprob: -12.87944507598877
    10. ' 
' → logprob: -13.75444507598877

Token 125: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -2.5941604690160602e-05
    2. 'property' → logprob: -10.875025749206543
    3. 'ab' → logprob: -12.125025749206543
    4. 'abs' → logprob: -14.250025749206543
    5. 'abc' → logprob: -14.875025749206543
    6. ' abstract' → logprob: -15.250025749206543
    7. 'staticmethod' → logprob: -15.375025749206543
    8. '.abstract' → logprob: -16.37502670288086
    9. 'classmethod' → logprob: -17.12502670288086
    10. 'a' → logprob: -18.62502670288086

Token 126: 'method' (ID: 8697)
  Prédit: '_method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_method' → logprob: -0.4744791090488434
    2. 'method' → logprob: -0.974479079246521
    3. '_' → logprob: -8.349478721618652
    4. '_m' → logprob: -9.849478721618652
    5. 'meth' → logprob: -10.099478721618652
    6. 'm' → logprob: -10.224478721618652
    7. 'def' → logprob: -11.349478721618652
    8. 'classmethod' → logprob: -12.349478721618652
    9. 'ethod' → logprob: -12.599478721618652
    10. 'staticmethod' → logprob: -12.849478721618652

Token 127: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009579946286976337
    2. 'def' → logprob: -4.759580135345459
    3. '    
' → logprob: -7.384580135345459
    4. '  
' → logprob: -9.7595796585083
    5. '<|end|>' → logprob: -9.7595796585083
    6. ' def' → logprob: -10.0095796585083
    7. 'method' → logprob: -10.3845796585083
    8. '(
' → logprob: -10.5095796585083
    9. ' 
' → logprob: -10.8845796585083
    10. '
' → logprob: -11.0095796585083

Token 128: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20647580921649933
    2. '
' → logprob: -1.706475853919983
    3. ' def' → logprob: -5.456475734710693
    4. '	def' → logprob: -8.331476211547852
    5. '    
' → logprob: -9.081476211547852
    6. '   ' → logprob: -9.206476211547852
    7. '\' → logprob: -9.206476211547852
    8. 'method' → logprob: -9.706476211547852
    9. ' 
' → logprob: -9.831476211547852
    10. '  
' → logprob: -9.956476211547852

Token 129: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00023762896307744086
    2. ' def' → logprob: -9.000237464904785
    3. 'property' → logprob: -9.250237464904785
    4. 'classmethod' → logprob: -11.750237464904785
    5. 'staticmethod' → logprob: -12.250237464904785
    6. '
' → logprob: -12.375237464904785
    7. 'method' → logprob: -14.250237464904785
    8. '```' → logprob: -16.5002384185791
    9. '	def' → logprob: -16.6252384185791
    10. '  
' → logprob: -16.8752384185791

Token 130: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.013167999684810638
    2. ' calculate' → logprob: -5.263167858123779
    3. 'area' → logprob: -5.263167858123779
    4. ' perimeter' → logprob: -6.638167858123779
    5. ' ' → logprob: -7.513167858123779
    6. '_area' → logprob: -7.763167858123779
    7. ' get' → logprob: -8.638168334960938
    8. ' compute' → logprob: -9.138168334960938
    9. '   ' → logprob: -10.013168334960938
    10. '  ' → logprob: -10.138168334960938

Token 131: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001399164437316358
    2. '(' → logprob: -6.751399040222168
    3. '()' → logprob: -8.501399040222168
    4. 'self' → logprob: -11.126399040222168
    5. '(s' → logprob: -12.251399040222168
    6. '(
' → logprob: -13.126399040222168
    7. ')' → logprob: -13.626399040222168
    8. '   ' → logprob: -14.001399040222168
    9. ' (' → logprob: -14.376399040222168
    10. 's' → logprob: -15.001399040222168

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47749945521354675
    2. '):' → logprob: -0.9774994850158691
    3. '):
' → logprob: -6.352499485015869
    4. 'self' → logprob: -6.477499485015869
    5. ')
' → logprob: -10.227499008178711
    6. ':' → logprob: -10.602499008178711
    7. '(self' → logprob: -11.227499008178711
    8. ',' → logprob: -11.352499008178711
    9. '):

' → logprob: -11.602499008178711
    10. ')->' → logprob: -11.727499008178711

Token 133: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6160368919372559
    2. '(self' → logprob: -0.9910368919372559
    3. ':' → logprob: -2.491036891937256
    4. '():' → logprob: -5.616036891937256
    5. ')' → logprob: -6.991036891937256
    6. 'self' → logprob: -7.241036891937256
    7. '(
' → logprob: -8.116037368774414
    8. '()' → logprob: -9.616037368774414
    9. '):' → logprob: -9.991037368774414
    10. '   ' → logprob: -10.116037368774414

Token 134: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.4740939140319824
    2. 'float' → logprob: -0.9740939140319824
    3. '	float' → logprob: -12.09909439086914
    4. ' ' → logprob: -12.34909439086914
    5. 'flo' → logprob: -12.97409439086914
    6. '```' → logprob: -13.72409439086914
    7. 'f' → logprob: -13.97409439086914
    8. '   ' → logprob: -14.22409439086914
    9. '(float' → logprob: -14.59909439086914
    10. '=float' → logprob: -14.84909439086914

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07204718887805939
    2. '<|end|>' → logprob: -2.697047233581543
    3. ':
' → logprob: -7.447047233581543
    4. '
' → logprob: -7.822047233581543
    5. '<|end|>' → logprob: -7.822047233581543
    6. ':return' → logprob: -8.572047233581543
    7. ')' → logprob: -8.822047233581543
    8. '():' → logprob: -9.447047233581543
    9. '   ' → logprob: -10.322047233581543
    10. '```' → logprob: -10.322047233581543

Token 136: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.13463033735752106
    2. 'pass' (adapté à ' pass') → logprob: -2.2596304416656494
    3. '       ' → logprob: -4.00963020324707
    4. ' ' → logprob: -6.00963020324707
    5. '    ' → logprob: -7.75963020324707
    6. '        ' → logprob: -9.25963020324707
    7. '   ' → logprob: -9.38463020324707
    8. ' raise' → logprob: -9.38463020324707
    9. '...' → logprob: -9.75963020324707
    10. '  ' → logprob: -9.88463020324707

Token 138: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07175707072019577
    2. '

' → logprob: -2.8217570781707764
    3. '<|end|>' → logprob: -5.446756839752197
    4. ' 
' → logprob: -5.821756839752197
    5. '    
' → logprob: -7.071756839752197
    6. '


' → logprob: -7.821756839752197
    7. '  
' → logprob: -8.196757316589355
    8. '   ' → logprob: -8.571757316589355
    9. '\n' → logprob: -8.696757316589355
    10. '
    
' → logprob: -9.196757316589355

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00962706096470356
    2. 'class' → logprob: -5.259626865386963
    3. 'def' → logprob: -6.259626865386963
    4. '    
' → logprob: -6.509626865386963
    5. '
' → logprob: -7.009626865386963
    6. '    ' → logprob: -10.884627342224121
    7. '

' → logprob: -11.134627342224121
    8. ' def' → logprob: -11.384627342224121
    9. ' 
' → logprob: -11.509627342224121
    10. '  
' → logprob: -12.509627342224121

Token 140: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003142658621072769
    2. '@' → logprob: -6.003142833709717
    3. 'class' → logprob: -8.003142356872559
    4. ' def' → logprob: -8.753142356872559
    5. '@property' → logprob: -9.253142356872559
    6. '   ' → logprob: -9.503142356872559
    7. ' @' → logprob: -14.378142356872559
    8. '@dat' → logprob: -14.378142356872559
    9. '@class' → logprob: -14.878142356872559
    10. '@end' → logprob: -15.128142356872559

Token 141: ' edges' (ID: 22569)
  Prédit: ' perimeter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' perimeter' → logprob: -0.002448542509227991
    2. '_per' → logprob: -7.002448558807373
    3. ' def' → logprob: -7.127448558807373
    4. '_' → logprob: -8.502448081970215
    5. ' ' → logprob: -8.502448081970215
    6. ' _' → logprob: -8.877448081970215
    7. ' __' → logprob: -9.752448081970215
    8. 'per' → logprob: -10.252448081970215
    9. ' perí' → logprob: -10.877448081970215
    10. 'def' → logprob: -11.252448081970215

Token 142: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015979631280060858
    2. '(' → logprob: -8.875160217285156
    3. ' (' → logprob: -11.250160217285156
    4. 'self' → logprob: -12.875160217285156
    5. 'length' → logprob: -14.000160217285156
    6. 's' → logprob: -14.125160217285156
    7. '   ' → logprob: -14.250160217285156
    8. ' self' → logprob: -14.250160217285156
    9. '_length' → logprob: -15.125160217285156
    10. '(
' → logprob: -15.250160217285156

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1981242597103119
    2. '):' → logprob: -2.0731241703033447
    3. '):
' → logprob: -3.8231241703033447
    4. '(self' → logprob: -3.9481241703033447
    5. 'self' → logprob: -4.448124408721924
    6. '   ' → logprob: -7.698124408721924
    7. '):

' → logprob: -8.198123931884766
    8. '       ' → logprob: -9.198123931884766
    9. '):
' → logprob: -9.823123931884766
    10. ')->' → logprob: -9.948123931884766

Token 144: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00024096666311379522
    2. '(' → logprob: -8.50024127960205
    3. ' (' → logprob: -10.50024127960205
    4. 'self' → logprob: -12.37524127960205
    5. ':' → logprob: -13.50024127960205
    6. '   ' → logprob: -13.87524127960205
    7. ')' → logprob: -14.00024127960205
    8. '(s' → logprob: -14.37524127960205
    9. ' ->' → logprob: -14.37524127960205
    10. ' self' → logprob: -15.00024127960205

Token 145: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.28680142760276794
    2. ' List' → logprob: -1.9118014574050903
    3. 'int' → logprob: -2.536801338195801
    4. ' int' → logprob: -4.161801338195801
    5. '[List' → logprob: -5.661801338195801
    6. '[int' → logprob: -6.036801338195801
    7. 'len' → logprob: -7.911801338195801
    8. '[]' → logprob: -8.4118013381958
    9. ' len' → logprob: -9.0368013381958
    10. '[' → logprob: -9.6618013381958

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01547299511730671
    2. '[int' → logprob: -4.265472888946533
    3. '[List' → logprob: -6.640472888946533
    4. '[(' → logprob: -14.765473365783691
    5. ' [' → logprob: -15.015473365783691
    6. '[Int' → logprob: -15.140473365783691
    7. '[
' → logprob: -15.140473365783691
    8. 'int' → logprob: -15.390473365783691
    9. '```' → logprob: -15.515473365783691
    10. '   ' → logprob: -15.640473365783691

Token 147: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0008957397076301277
    2. ' Tuple' → logprob: -7.125895977020264
    3. 'float' → logprob: -9.500895500183105
    4. 'Point' → logprob: -12.125895500183105
    5. 'Tu' → logprob: -12.250895500183105
    6. '[' → logprob: -12.875895500183105
    7. 'int' → logprob: -13.000895500183105
    8. '   ' → logprob: -14.750895500183105
    9. 'List' → logprob: -15.500895500183105
    10. ' float' → logprob: -15.875895500183105

Token 148: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.12258882028982e-05
    2. '[int' → logprob: -10.12506103515625
    3. 'Point' → logprob: -11.00006103515625
    4. '(Point' → logprob: -13.12506103515625
    5. ']' → logprob: -13.75006103515625
    6. '[
' → logprob: -15.00006103515625
    7. ',' → logprob: -15.12506103515625
    8. ' Point' → logprob: -15.50006103515625
    9. '	Point' → logprob: -15.87506103515625
    10. '<Point' → logprob: -16.00006103515625

Token 149: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.758300438988954e-05
    2. ' Point' → logprob: -9.250097274780273
    3. '	Point' → logprob: -13.875097274780273
    4. '[' → logprob: -14.875097274780273
    5. 'int' → logprob: -17.375097274780273
    6. '(Point' → logprob: -18.250097274780273
    7. '_Point' → logprob: -18.500097274780273
    8. '   ' → logprob: -18.625097274780273
    9. 'float' → logprob: -18.875097274780273
    10. '_point' → logprob: -19.750097274780273

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4736459888808895e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',List' → logprob: -13.875014305114746
    4. ']]' → logprob: -15.250014305114746
    5. ',int' → logprob: -15.750014305114746
    6. ',float' → logprob: -16.125015258789062
    7. '‌,' → logprob: -16.500015258789062
    8. ',
' → logprob: -16.625015258789062
    9. '   ' → logprob: -16.750015258789062
    10. '[' → logprob: -17.000015258789062

Token 151: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.6931781768798828
    2. ' Point' → logprob: -0.6931781768798828
    3. '	Point' → logprob: -10.568178176879883
    4. '_Point' → logprob: -13.443178176879883
    5. ' ' → logprob: -13.568178176879883
    6. '(Point' → logprob: -14.068178176879883
    7. '.Point' → logprob: -14.193178176879883
    8. '<Point' → logprob: -14.568178176879883
    9. '_point' → logprob: -15.568178176879883
    10. ' ' → logprob: -15.943178176879883

Token 152: ']]:
' (ID: 183340)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4011114239692688
    2. ')' → logprob: -1.276111364364624
    3. ']' → logprob: -3.401111364364624
    4. ']]' → logprob: -4.401111602783203
    5. ']:' → logprob: -5.901111602783203
    6. ']):' → logprob: -6.401111602783203
    7. '):' → logprob: -7.276111602783203
    8. ']]:
' → logprob: -8.151111602783203
    9. '>' → logprob: -8.526111602783203
    10. ':' → logprob: -10.026111602783203

Token 153: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5450316071510315
    2. '       ' → logprob: -0.9200316071510315
    3. ':
' → logprob: -4.920031547546387
    4. '   ' → logprob: -5.170031547546387
    5. '        
' → logprob: -6.420031547546387
    6. '
' → logprob: -6.670031547546387
    7. '):' → logprob: -6.795031547546387
    8. '    
' → logprob: -6.920031547546387
    9. '<|end|>' → logprob: -7.170031547546387
    10. ' 
' → logprob: -7.545031547546387

Token 154: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9678683876991272
    2. '       ' → logprob: -1.2178683280944824
    3. ' return' → logprob: -2.4678683280944824
    4. '[' → logprob: -2.7178683280944824
    5. ' edges' → logprob: -2.7178683280944824
    6. 'edges' → logprob: -3.0928683280944824
    7. '[(' → logprob: -3.5928683280944824
    8. ' [' → logprob: -3.9678683280944824
    9. '[]' → logprob: -5.092868328094482
    10. ' [(' → logprob: -5.592868328094482

Token 155: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6952525973320007
    2. ' [(' → logprob: -0.6952525973320007
    3. ' [' → logprob: -6.820252418518066
    4. '[' → logprob: -7.820252418518066
    5. '[
' → logprob: -8.070252418518066
    6. ' [
' → logprob: -8.195252418518066
    7. ' ' → logprob: -11.570252418518066
    8. '[((' → logprob: -11.695252418518066
    9. ' [

' → logprob: -13.945252418518066
    10. '[self' → logprob: -14.320252418518066

Token 156: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010541265364736319
    2. ' self' → logprob: -6.876054286956787
    3. '(self' → logprob: -10.876053810119629
    4. '[self' → logprob: -14.001053810119629
    5. '	self' → logprob: -14.501053810119629
    6. ')' → logprob: -15.001053810119629
    7. '   ' → logprob: -15.126053810119629
    8. '=self' → logprob: -16.626054763793945
    9. ',self' → logprob: -16.751054763793945
    10. '       ' → logprob: -16.876054763793945

Token 157: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -9.639096970204264e-05
    2. ').' → logprob: -10.750096321105957
    3. '[i' → logprob: -10.750096321105957
    4. '.points' → logprob: -11.000096321105957
    5. '.' → logprob: -11.375096321105957
    6. 'vertices' → logprob: -11.500096321105957
    7. ' .' → logprob: -12.375096321105957
    8. '.v' → logprob: -13.125096321105957
    9. '].' → logprob: -13.750096321105957
    10. '.edges' → logprob: -13.750096321105957

Token 158: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[j' → logprob: -18.75
    3. '[n' → logprob: -20.0
    4. '[k' → logprob: -20.0
    5. '[index' → logprob: -20.625
    6. '[idx' → logprob: -20.875
    7. 'i' → logprob: -21.0
    8. '[' → logprob: -21.0
    9. ' [' → logprob: -21.0
    10. '[
' → logprob: -21.0

Token 159: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0862809270620346
    2. '],' → logprob: -2.5862808227539062
    3. ' ,' → logprob: -4.961280822753906
    4. ' ],' → logprob: -8.836280822753906
    5. '),' → logprob: -9.211280822753906
    6. ' ' → logprob: -10.336280822753906
    7. '%' → logprob: -11.086280822753906
    8. '   ' → logprob: -11.336280822753906
    9. '>,' → logprob: -11.836280822753906
    10. ',
' → logprob: -11.961280822753906

Token 160: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.023886919021606445
    2. 'self' → logprob: -3.7738869190216064
    3. ' ' → logprob: -7.398886680603027
    4. ' ' → logprob: -11.273886680603027
    5. ' )' → logprob: -12.148886680603027
    6. ')' → logprob: -12.773886680603027
    7. ' 
' → logprob: -13.023886680603027
    8. '    ' → logprob: -13.273886680603027
    9. '	self' → logprob: -13.398886680603027
    10. '(self' → logprob: -14.898886680603027

Token 161: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.0001601539261173457
    2. '.' → logprob: -9.500160217285156
    3. ' .' → logprob: -9.500160217285156
    4. '.points' → logprob: -13.000160217285156
    5. '.
' → logprob: -13.125160217285156
    6. 'vertices' → logprob: -13.750160217285156
    7. '.edges' → logprob: -13.875160217285156
    8. '
' → logprob: -14.000160217285156
    9. ' vertices' → logprob: -14.125160217285156
    10. ' ' → logprob: -14.375160217285156

Token 162: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.044291213154792786
    2. '[i' → logprob: -3.1692912578582764
    3. '+' → logprob: -8.169291496276855
    4. '[' → logprob: -8.294291496276855
    5. '[
' → logprob: -8.544291496276855
    6. '(i' → logprob: -8.919291496276855
    7. '((' → logprob: -9.044291496276855
    8. ' (' → logprob: -9.294291496276855
    9. ' [(' → logprob: -9.794291496276855
    10. ' ' → logprob: -10.294291496276855

Token 163: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.611323624383658e-05
    2. '(i' → logprob: -10.000065803527832
    3. ' i' → logprob: -10.875065803527832
    4. '   ' → logprob: -14.125065803527832
    5. ' (' → logprob: -14.500065803527832
    6. '
' → logprob: -16.12506675720215
    7. '{i' → logprob: -16.25006675720215
    8. '```' → logprob: -16.50006675720215
    9. '           ' → logprob: -16.62506675720215
    10. '_i' → logprob: -16.75006675720215

Token 164: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023246755823493004
    2. ' +' → logprob: -3.7732467651367188
    3. '+i' → logprob: -13.898246765136719
    4. '1' → logprob: -14.898246765136719
    5. '+
' → logprob: -17.14824676513672
    6. ' ' → logprob: -18.52324676513672
    7. ' +
' → logprob: -19.02324676513672
    8. '＋' → logprob: -19.77324676513672
    9. '0' → logprob: -20.14824676513672
    10. ' ' → logprob: -20.27324676513672

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -15.750015258789062
    4. '```' → logprob: -15.750015258789062
    5. '
' → logprob: -16.250015258789062
    6. '   ' → logprob: -16.375015258789062
    7. ']' → logprob: -17.875015258789062
    8. '])' → logprob: -18.125015258789062
    9. '``' → logprob: -18.875015258789062
    10. 'def' → logprob: -18.875015258789062

Token 166: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020681554451584816
    2. ')])' → logprob: -4.145681381225586
    3. ')%' → logprob: -5.395681381225586
    4. ' )' → logprob: -10.020681381225586
    5. ']' → logprob: -10.270681381225586
    6. '])' → logprob: -12.020681381225586
    7. ']])' → logprob: -12.270681381225586
    8. ')])
' → logprob: -13.145681381225586
    9. '%' → logprob: -13.270681381225586
    10. ')]' → logprob: -13.395681381225586

Token 167: ' %' (ID: 1851)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07890686392784119
    2. ' %' → logprob: -3.078906774520874
    3. ')])' → logprob: -3.828906774520874
    4. '%' → logprob: -5.828907012939453
    5. '])]' → logprob: -5.953907012939453
    6. ' ])' → logprob: -6.578907012939453
    7. ')' → logprob: -7.328907012939453
    8. ']])' → logprob: -8.328907012939453
    9. '%i' → logprob: -9.828907012939453
    10. ']' → logprob: -10.078907012939453

Token 168: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.47408005595207214
    2. ' len' → logprob: -0.9740800857543945
    3. '(len' → logprob: -13.349080085754395
    4. ' ' → logprob: -14.724080085754395
    5. '   ' → logprob: -15.349080085754395
    6. '```' → logprob: -15.974080085754395
    7. '=len' → logprob: -15.974080085754395
    8. '	len' → logprob: -16.099079132080078
    9. ',len' → logprob: -16.224079132080078
    10. ' ]' → logprob: -16.974079132080078

Token 169: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016074994346126914
    2. 'self' → logprob: -8.875161170959473
    3. '(' → logprob: -10.875161170959473
    4. ' self' → logprob: -14.625161170959473
    5. '(vertices' → logprob: -14.750161170959473
    6. '(
' → logprob: -15.000161170959473
    7. ' (' → logprob: -16.000160217285156
    8. 'vertices' → logprob: -16.000160217285156
    9. '```' → logprob: -16.625160217285156
    10. ')' → logprob: -16.750160217285156

Token 170: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.00012821101699955761
    2. 'vertices' → logprob: -9.125127792358398
    3. '.' → logprob: -12.500127792358398
    4. ')])' → logprob: -12.750127792358398
    5. '(vertices' → logprob: -13.000127792358398
    6. ')' → logprob: -13.250127792358398
    7. ' .' → logprob: -13.375127792358398
    8. '].' → logprob: -13.625127792358398
    9. '.points' → logprob: -13.750127792358398
    10. ')]' → logprob: -14.125127792358398

Token 171: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.009551373310387135
    2. '])]' → logprob: -5.009551525115967
    3. '])' → logprob: -6.009551525115967
    4. ')]' → logprob: -8.384551048278809
    5. ']])' → logprob: -9.509551048278809
    6. ')' → logprob: -10.384551048278809
    7. ']))' → logprob: -10.384551048278809
    8. ')])
' → logprob: -12.259551048278809
    9. ' ])' → logprob: -12.884551048278809
    10. ' )' → logprob: -13.384551048278809

Token 172: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.037177421152591705
    2. 'for' → logprob: -3.662177324295044
    3. ')' → logprob: -4.787177562713623
    4. '       ' → logprob: -6.287177562713623
    5. '   ' → logprob: -8.287177085876465
    6. ']' → logprob: -8.662177085876465
    7. ' )' → logprob: -9.912177085876465
    8. '           ' → logprob: -9.912177085876465
    9. '        ' → logprob: -10.412177085876465
    10. '    ' → logprob: -11.412177085876465

Token 173: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.45334771275520325
    2. ' i' → logprob: -1.0783476829528809
    3. 'range' → logprob: -3.953347682952881
    4. 'i' → logprob: -5.453347682952881
    5. ' ' → logprob: -7.078347682952881
    6. ' xrange' → logprob: -11.953348159790039
    7. '  ' → logprob: -12.078348159790039
    8. '	range' → logprob: -12.578348159790039
    9. '   ' → logprob: -12.828348159790039
    10. '(range' → logprob: -12.828348159790039

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06537334620952606
    2. ' range' → logprob: -2.815373420715332
    3. 'range' → logprob: -6.565373420715332
    4. ' ' → logprob: -6.815373420715332
    5. 'in' → logprob: -7.315373420715332
    6. '<|end|>' → logprob: -8.940373420715332
    7. '(range' → logprob: -9.815373420715332
    8. ' xrange' → logprob: -10.565373420715332
    9. ' i' → logprob: -12.565373420715332
    10. '	range' → logprob: -12.690373420715332

Token 175: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868713080883026
    2. 'range' → logprob: -1.136871337890625
    3. ' ' → logprob: -15.261871337890625
    4. '	range' → logprob: -17.511871337890625
    5. '(range' → logprob: -17.636871337890625
    6. ' len' → logprob: -18.761871337890625
    7. ' xrange' → logprob: -19.136871337890625
    8. 'len' → logprob: -20.011871337890625
    9. '  ' → logprob: -20.011871337890625
    10. '   ' → logprob: -20.136871337890625

Token 176: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.75001049041748
    3. 'len' → logprob: -13.50001049041748
    4. ' (' → logprob: -14.12501049041748
    5. ' len' → logprob: -14.50001049041748
    6. ',len' → logprob: -18.875011444091797
    7. '	len' → logprob: -19.250011444091797
    8. '<len' → logprob: -19.625011444091797
    9. '[len' → logprob: -19.750011444091797
    10. '=len' → logprob: -20.000011444091797

Token 177: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011117222311440855
    2. '(' → logprob: -9.12511157989502
    3. 'self' → logprob: -13.37511157989502
    4. '(s' → logprob: -15.25011157989502
    5. '(vertices' → logprob: -15.62511157989502
    6. '(this' → logprob: -15.75011157989502
    7. '(
' → logprob: -16.250110626220703
    8. ' (' → logprob: -17.000110626220703
    9. ')' → logprob: -17.500110626220703
    10. ' self' → logprob: -17.625110626220703

Token 178: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -1.4378848391061183e-05
    2. '.' → logprob: -12.125014305114746
    3. ' .' → logprob: -12.875014305114746
    4. '(vertices' → logprob: -13.000014305114746
    5. 'vertices' → logprob: -13.125014305114746
    6. '))' → logprob: -14.375014305114746
    7. '.points' → logprob: -14.625014305114746
    8. ')' → logprob: -15.125014305114746
    9. '.edges' → logprob: -15.625014305114746
    10. ')))' → logprob: -15.875014305114746

Token 179: '))' (ID: 915)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.08061659336090088
    2. '))' → logprob: -2.5806164741516113
    3. ')])' → logprob: -6.580616474151611
    4. '])]' → logprob: -8.70561695098877
    5. ' )' → logprob: -9.33061695098877
    6. ')' → logprob: -10.20561695098877
    7. ' ))' → logprob: -10.70561695098877
    8. '])' → logprob: -11.58061695098877
    9. ']' → logprob: -11.83061695098877
    10. ')))' → logprob: -12.95561695098877

Token 180: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0067858281545341015
    2. ')]' → logprob: -5.006785869598389
    3. ')' → logprob: -10.25678539276123
    4. ' ]' → logprob: -10.50678539276123
    5. ']
' → logprob: -12.38178539276123
    6. '])' → logprob: -12.75678539276123
    7. '`]' → logprob: -15.25678539276123
    8. '   ' → logprob: -15.38178539276123
    9. '])]' → logprob: -15.88178539276123
    10. '()]' → logprob: -16.131786346435547

Token 181: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12766198813915253
    2. '    
' → logprob: -3.127661943435669
    3. '   ' → logprob: -3.377661943435669
    4. 'class' → logprob: -3.752661943435669
    5. ' 
' → logprob: -4.877662181854248
    6. '<|end|>' → logprob: -5.252662181854248
    7. '  
' → logprob: -6.252662181854248
    8. '

' → logprob: -6.877662181854248
    9. '\n' → logprob: -6.877662181854248
    10. ' ' → logprob: -8.12766170501709

Token 182: ' Conv' (ID: 52133)
  Prédit: ' Triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Triangle' → logprob: -0.007630296517163515
    2. ' Rectangle' → logprob: -5.257630348205566
    3. 'Triangle' → logprob: -6.257630348205566
    4. ' Tri' → logprob: -8.757630348205566
    5. ' Square' → logprob: -9.257630348205566
    6. ' Conv' → logprob: -9.382630348205566
    7. 'Rectangle' → logprob: -9.882630348205566
    8. ' Quadr' → logprob: -10.632630348205566
    9. ' Polygon' → logprob: -10.632630348205566
    10. ' Regular' → logprob: -10.882630348205566

Token 183: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -5.037835580878891e-05
    2. 'exp' → logprob: -10.12505054473877
    3. 'exit' → logprob: -13.00005054473877
    4. 'exe' → logprob: -13.25005054473877
    5. 'er' → logprob: -13.37505054473877
    6. 'e' → logprob: -13.37505054473877
    7. 'ext' → logprob: -13.75005054473877
    8. 'exc' → logprob: -15.12505054473877
    9. 'ol' → logprob: -15.37505054473877
    10. 'EX' → logprob: -15.62505054473877

Token 184: 'Polygon' (ID: 48860)
  Prédit: 'Polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Polygon' → logprob: -5.455048449221067e-05
    2. 'Pol' → logprob: -10.375054359436035
    3. 'Poly' → logprob: -11.875054359436035
    4. ' Polygon' → logprob: -12.125054359436035
    5. 'Hull' → logprob: -12.375054359436035
    6. 'Quadr' → logprob: -12.625054359436035
    7. 'Polynomial' → logprob: -14.250054359436035
    8. 'Polyline' → logprob: -14.375054359436035
    9. 'Regular' → logprob: -14.875054359436035
    10. '

' → logprob: -15.250054359436035

Token 185: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.613945101387799e-05
    2. ' (' → logprob: -9.500085830688477
    3. '(P' → logprob: -11.500085830688477
    4. '(Abstract' → logprob: -15.125085830688477
    5. '((' → logprob: -15.500085830688477
    6. 'Polygon' → logprob: -15.875085830688477
    7. '(Point' → logprob: -16.500085830688477
    8. '   ' → logprob: -17.000085830688477
    9. ':' → logprob: -17.125085830688477
    10. ' :' → logprob: -17.375085830688477

Token 186: 'Polygon' (ID: 48860)
  Prédit: 'Polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Polygon' → logprob: -0.013634123839437962
    2. ' Polygon' → logprob: -4.388634204864502
    3. 'Pol' → logprob: -6.888634204864502
    4. 'Poly' → logprob: -10.513633728027344
    5. ')' → logprob: -10.638633728027344
    6. 'Polynomial' → logprob: -11.138633728027344
    7. ',' → logprob: -11.388633728027344
    8. 'Polyline' → logprob: -11.763633728027344
    9. '
' → logprob: -12.513633728027344
    10. 'Po' → logprob: -12.513633728027344

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006788432132452726
    2. '):
' → logprob: -5.00678825378418
    3. ')' → logprob: -9.75678825378418
    4. ' ):' → logprob: -12.38178825378418
    5. ':' → logprob: -12.50678825378418
    6. '):

' → logprob: -12.75678825378418
    7. '   ' → logprob: -13.13178825378418
    8. '):
' → logprob: -13.75678825378418
    9. ',' → logprob: -14.50678825378418
    10. ']:' → logprob: -15.88178825378418

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029294362291693687
    2. ':' → logprob: -3.65429425239563
    3. ' def' → logprob: -6.904294490814209
    4. ':
' → logprob: -7.029294490814209
    5. ')' → logprob: -8.02929401397705
    6. '):
' → logprob: -8.40429401397705
    7. '    
' → logprob: -8.90429401397705
    8. '
' → logprob: -8.90429401397705
    9. '):' → logprob: -9.15429401397705
    10. 'def' → logprob: -10.02929401397705

Token 189: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0075009786523878574
    2. 'def' (adapté à ' def') → logprob: -5.382501125335693
    3. '   ' → logprob: -5.882501125335693
    4. '    ' → logprob: -9.757500648498535
    5. '    
' → logprob: -11.632500648498535
    6. '
' → logprob: -11.757500648498535
    7. ' ' → logprob: -12.007500648498535
    8. ' 
' → logprob: -12.132500648498535
    9. '  ' → logprob: -14.257500648498535
    10. '	def' → logprob: -14.382500648498535

Token 190: ' area' (ID: 3624)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0011666493955999613
    2. 'def' → logprob: -6.876166820526123
    3. ' __' → logprob: -9.126166343688965
    4. ' ' → logprob: -11.251166343688965
    5. ' init' → logprob: -12.376166343688965
    6. '   ' → logprob: -12.876166343688965
    7. ' _' → logprob: -13.251166343688965
    8. ' area' → logprob: -14.501166343688965
    9. '_def' → logprob: -14.501166343688965
    10. '_' → logprob: -14.751166343688965

Token 191: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003448792558629066
    2. '(' → logprob: -8.000345230102539
    3. ' (' → logprob: -12.125345230102539
    4. 'self' → logprob: -14.000345230102539
    5. '   ' → logprob: -14.125345230102539
    6. '(s' → logprob: -14.125345230102539
    7. '(
' → logprob: -14.750345230102539
    8. ' self' → logprob: -15.250345230102539
    9. ' ' → logprob: -15.375345230102539
    10. 's' → logprob: -16.00034523010254

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14124135673046112
    2. '):' → logprob: -2.2662413120269775
    3. '):
' → logprob: -3.6412413120269775
    4. ' )' → logprob: -7.266241550445557
    5. ' ):' → logprob: -7.516241550445557
    6. '   ' → logprob: -8.891241073608398
    7. '()' → logprob: -9.141241073608398
    8. 'self' → logprob: -9.266241073608398
    9. ' ):
' → logprob: -9.766241073608398
    10. '):
' → logprob: -10.141241073608398

Token 193: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11555209010839462
    2. ' :' → logprob: -2.2405521869659424
    3. '):' → logprob: -7.240551948547363
    4. ')' → logprob: -7.490551948547363
    5. ' ->' → logprob: -8.115551948547363
    6. '   ' → logprob: -8.240551948547363
    7. '():' → logprob: -8.365551948547363
    8. ':
' → logprob: -8.490551948547363
    9. '       ' → logprob: -8.740551948547363
    10. ' :
' → logprob: -8.990551948547363

Token 194: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.0032215642277151346
    2. 'float' → logprob: -5.75322151184082
    3. ' ' → logprob: -10.12822151184082
    4. '(float' → logprob: -12.75322151184082
    5. '	float' → logprob: -15.37822151184082
    6. ' flo' → logprob: -15.75322151184082
    7. ' abs' → logprob: -16.12822151184082
    8. ' (' → logprob: -16.50322151184082
    9. ' None' → logprob: -16.50322151184082
    10. ' ' → logprob: -16.62822151184082

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2017541080713272
    2. ':
' → logprob: -1.701754093170166
    3. '       ' → logprob: -9.076754570007324
    4. ':
' → logprob: -9.326754570007324
    5. '(self' → logprob: -9.951754570007324
    6. ' :' → logprob: -10.326754570007324
    7. ':self' → logprob: -10.951754570007324
    8. ' :
' → logprob: -11.076754570007324
    9. '   ' → logprob: -11.451754570007324
    10. '):' → logprob: -12.826754570007324

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003622793301474303
    2. '0' → logprob: -8.625362396240234
    3. '        ' → logprob: -9.750362396240234
    4. '        
' → logprob: -10.875362396240234
    5. '      ' → logprob: -11.000362396240234
    6. '    ' → logprob: -11.125362396240234
    7. '
' → logprob: -11.500362396240234
    8. '   ' → logprob: -11.625362396240234
    9. '    
' → logprob: -11.750362396240234
    10. 'n' → logprob: -12.000362396240234

Token 197: ' #' (ID: 1069)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.6143386363983154
    2. '       ' → logprob: -1.3643386363983154
    3. 'n' → logprob: -1.6143386363983154
    4. '   ' → logprob: -6.7393388748168945
    5. 'result' → logprob: -7.1143388748168945
    6. 'sum' → logprob: -7.2393388748168945
    7. 's' → logprob: -7.4893388748168945
    8. ' area' → logprob: -7.7393388748168945
    9. 'total' → logprob: -8.364338874816895
    10. 'a' → logprob: -8.364338874816895

Token 198: ' Using' (ID: 17511)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2583686411380768
    2. 'area' → logprob: -1.5083686113357544
    3. 'result' → logprob: -5.883368492126465
    4. '   ' → logprob: -6.883368492126465
    5. 'total' → logprob: -7.008368492126465
    6. 'def' → logprob: -7.758368492126465
    7. '       ' → logprob: -7.883368492126465
    8. 'sum' → logprob: -8.508368492126465
    9. 'x' → logprob: -8.633368492126465
    10. ' n' → logprob: -9.133368492126465

Token 199: ' sho' (ID: 113644)
  Prédit: ' sho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sho' → logprob: -1.1310817003250122
    2. 'abs' → logprob: -1.3810817003250122
    3. '0' → logprob: -1.7560817003250122
    4. 'sho' → logprob: -2.7560815811157227
    5. ' abs' → logprob: -3.2560815811157227
    6. 'self' → logprob: -3.2560815811157227
    7. 'the' → logprob: -3.5060815811157227
    8. ' ' → logprob: -3.5060815811157227
    9. ' the' → logprob: -3.8810815811157227
    10. ' self' → logprob: -4.631081581115723

Token 200: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.00018530222587287426
    2. 'e' → logprob: -9.125185012817383
    3. 'w' → logprob: -10.125185012817383
    4. ' el' → logprob: -12.000185012817383
    5. 'emake' → logprob: -12.000185012817383
    6. 'ele' → logprob: -12.625185012817383
    7. 'elif' → logprob: -12.625185012817383
    8. 'elem' → logprob: -13.125185012817383
    9. '```' → logprob: -13.125185012817383
    10. 'eland' → logprob: -13.250185012817383

Token 201: 'ace' (ID: 675)
  Prédit: 'ace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ace' → logprob: -0.0002516839886084199
    2. 'aces' → logprob: -9.500251770019531
    3. 'ac' → logprob: -9.625251770019531
    4. 'acey' → logprob: -10.000251770019531
    5. 'acy' → logprob: -10.250251770019531
    6. ' ace' → logprob: -11.500251770019531
    7. 'a' → logprob: -11.500251770019531
    8. 'y' → logprob: -13.625251770019531
    9. 'ay' → logprob: -13.750251770019531
    10. 'acem' → logprob: -14.000251770019531

Token 202: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.000726252153981477
    2. 'formula' → logprob: -7.875726222991943
    3. '_formula' → logprob: -8.000726699829102
    4. ' method' → logprob: -12.125726699829102
    5. ' ' → logprob: -12.625726699829102
    6. ' theorem' → logprob: -14.750726699829102
    7. '```' → logprob: -15.000726699829102
    8. '_' → logprob: -15.000726699829102
    9. ' for' → logprob: -15.625726699829102
    10. ' fórmula' → logprob: -15.750726699829102

Token 203: ' which' (ID: 1118)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03096778318285942
    2. '
' → logprob: -3.5309677124023438
    3. ':' → logprob: -8.155967712402344
    4. '        
' → logprob: -8.155967712402344
    5. '\n' → logprob: -8.905967712402344
    6. 'n' → logprob: -9.280967712402344
    7. '\' → logprob: -9.530967712402344
    8. '    
' → logprob: -9.905967712402344
    9. '  
' → logprob: -10.405967712402344
    10. '\
' → logprob: -10.530967712402344

Token 204: ' works' (ID: 5882)
  Prédit: ' calculates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculates' → logprob: -0.8112920522689819
    2. 'calcul' → logprob: -1.811292052268982
    3. ' is' → logprob: -2.3112921714782715
    4. ' works' → logprob: -2.3112921714782715
    5. 'is' → logprob: -3.1862921714782715
    6. 'def' → logprob: -3.3112921714782715
    7. ' computes' → logprob: -3.9362921714782715
    8. ' returns' → logprob: -4.1862921714782715
    9. 'returns' → logprob: -4.4362921714782715
    10. ' applies' → logprob: -4.9362921714782715

Token 205: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34729015827178955
    2. 'for' → logprob: -1.3472901582717896
    3. ' correctly' → logprob: -3.5972900390625
    4. 'correct' → logprob: -5.5972900390625
    5. ' only' → logprob: -7.2222900390625
    6. ' well' → logprob: -7.3472900390625
    7. '   ' → logprob: -8.4722900390625
    8. 'only' → logprob: -8.5972900390625
    9. ' correct' → logprob: -9.2222900390625
    10. '       ' → logprob: -9.2222900390625

Token 206: ' convex' (ID: 142423)
  Prédit: ' convex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.2914089262485504
    2. 'conv' → logprob: -1.541408896446228
    3. ' any' → logprob: -3.4164090156555176
    4. ' all' → logprob: -5.916409015655518
    5. 'any' → logprob: -6.416409015655518
    6. ' simple' → logprob: -7.541409015655518
    7. 'all' → logprob: -7.916409015655518
    8. ' conv' → logprob: -8.66640853881836
    9. 'Conv' → logprob: -9.04140853881836
    10. ' a' → logprob: -9.54140853881836

Token 207: ' polygons' (ID: 169724)
  Prédit: ' polygons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' polygons' → logprob: -0.699837863445282
    2. ' and' → logprob: -1.4498379230499268
    3. 'pol' → logprob: -1.8248379230499268
    4. 'and' → logprob: -2.4498379230499268
    5. ' or' → logprob: -4.324837684631348
    6. ' pol' → logprob: -5.699837684631348
    7. 'or' → logprob: -6.324837684631348
    8. '   ' → logprob: -7.199837684631348
    9. ' polygon' → logprob: -7.699837684631348
    10. '<|end|>' → logprob: -7.824837684631348

Token 208: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000982435536570847
    2. '
' → logprob: -7.750982284545898
    3. ':' → logprob: -8.125982284545898
    4. ':
' → logprob: -9.250982284545898
    5. ',' → logprob: -9.875982284545898
    6. 'n' → logprob: -10.250982284545898
    7. '        
' → logprob: -10.750982284545898
    8. '   ' → logprob: -11.750982284545898
    9. '    
' → logprob: -12.125982284545898
    10. '           ' → logprob: -12.375982284545898

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.228561349213123e-05
    2. 'n' → logprob: -11.125052452087402
    3. 'result' → logprob: -11.750052452087402
    4. '```' → logprob: -12.125052452087402
    5. 's' → logprob: -12.625052452087402
    6. 'sum' → logprob: -12.750052452087402
    7. '        ' → logprob: -12.875052452087402
    8. '           ' → logprob: -13.000052452087402
    9. 'return' → logprob: -13.125052452087402
    10. '      ' → logprob: -13.125052452087402

Token 210: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5572130084037781
    2. 'area' → logprob: -1.0572130680084229
    3. '       ' → logprob: -2.557213068008423
    4. ' n' → logprob: -7.182212829589844
    5. 'result' → logprob: -7.807212829589844
    6. 's' → logprob: -8.307212829589844
    7. 'sum' → logprob: -8.307212829589844
    8. ' area' → logprob: -8.432212829589844
    9. 'total' → logprob: -8.807212829589844
    10. '   ' → logprob: -9.057212829589844

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005258303135633469
    2. '=' → logprob: -5.255258083343506
    3. '=len' → logprob: -11.255258560180664
    4. '       ' → logprob: -11.880258560180664
    5. '        ' → logprob: -13.255258560180664
    6. ' ' → logprob: -13.380258560180664
    7. '   ' → logprob: -15.005258560180664
    8. '    ' → logprob: -15.255258560180664
    9. ',' → logprob: -15.630258560180664
    10. '=int' → logprob: -16.380258560180664

Token 212: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2519334554672241
    2. 'len' → logprob: -1.5019334554672241
    3. '(len' → logprob: -12.501933097839355
    4. '=len' → logprob: -14.876933097839355
    5. '       ' → logprob: -15.876933097839355
    6. '	len' → logprob: -16.251934051513672
    7. '[len' → logprob: -16.501934051513672
    8. ',len' → logprob: -17.876934051513672
    9. '```' → logprob: -18.001934051513672
    10. 'self' → logprob: -18.126934051513672

Token 213: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.522638169466518e-05
    2. '(' → logprob: -10.625024795532227
    3. 'self' → logprob: -14.000024795532227
    4. '(this' → logprob: -17.875024795532227
    5. ' (' → logprob: -18.000024795532227
    6. '(
' → logprob: -18.000024795532227
    7. ' self' → logprob: -18.375024795532227
    8. '(s' → logprob: -19.375024795532227
    9. '[self' → logprob: -19.875024795532227
    10. 's' → logprob: -20.000024795532227

Token 214: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.0001475220051361248
    2. ' .' → logprob: -9.750147819519043
    3. '(vertices' → logprob: -10.375147819519043
    4. '.' → logprob: -10.625147819519043
    5. 'vertices' → logprob: -11.000147819519043
    6. ').' → logprob: -12.125147819519043
    7. '.points' → logprob: -12.750147819519043
    8. '.edges' → logprob: -13.000147819519043
    9. ' vertices' → logprob: -13.250147819519043
    10. ')' → logprob: -14.875147819519043

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870229125022888
    2. ')
' → logprob: -1.1370229721069336
    3. ')
' → logprob: -9.512022972106934
    4. '       ' → logprob: -9.887022972106934
    5. ' )
' → logprob: -11.262022972106934
    6. ' )' → logprob: -11.512022972106934
    7. ')

' → logprob: -13.137022972106934
    8. '   ' → logprob: -13.887022972106934
    9. '```' → logprob: -15.137022972106934
    10. ')`
' → logprob: -15.512022972106934

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001048646867275238
    2. 'area' → logprob: -7.126048564910889
    3. 's' → logprob: -8.751049041748047
    4. 'result' → logprob: -10.501049041748047
    5. ' area' → logprob: -10.751049041748047
    6. 'sum' → logprob: -11.626049041748047
    7. '   ' → logprob: -11.751049041748047
    8. ' s' → logprob: -12.501049041748047
    9. '        
' → logprob: -12.751049041748047
    10. 'total' → logprob: -12.751049041748047

Token 217: ' #' (ID: 1069)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.00040517066372558475
    2. '       ' → logprob: -8.500405311584473
    3. 'result' → logprob: -9.750405311584473
    4. 'sum' → logprob: -9.875405311584473
    5. ' area' → logprob: -10.250405311584473
    6. 'total' → logprob: -11.000405311584473
    7. 'a' → logprob: -11.000405311584473
    8. 's' → logprob: -11.125405311584473
    9. '   ' → logprob: -12.250405311584473
    10. '_area' → logprob: -13.375405311584473

Token 218: ' Abstract' (ID: 17413)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.011021764948964119
    2. 'sum' → logprob: -5.136021614074707
    3. 'total' → logprob: -6.636021614074707
    4. 's' → logprob: -6.886021614074707
    5. 'result' → logprob: -6.886021614074707
    6. ' area' → logprob: -6.886021614074707
    7. '       ' → logprob: -7.636021614074707
    8. '   ' → logprob: -9.636021614074707
    9. 'acc' → logprob: -9.636021614074707
    10. 'double' → logprob: -10.386021614074707

Token 219: 'ed' (ID: 295)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -1.0173929929733276
    2. ' s' → logprob: -1.5173929929733276
    3. ' area' → logprob: -1.6423929929733276
    4. 'sum' → logprob: -2.517393112182617
    5. '       ' → logprob: -2.892393112182617
    6. 's' → logprob: -3.017393112182617
    7. ' sum' → logprob: -4.392393112182617
    8. 'result' → logprob: -4.642393112182617
    9. 'x' → logprob: -4.892393112182617
    10. ' result' → logprob: -5.142393112182617

Token 220: ' accumulator' (ID: 118458)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.7084388732910156
    2. 'area' → logprob: -0.8334388732910156
    3. '       ' → logprob: -3.3334388732910156
    4. ' s' → logprob: -3.8334388732910156
    5. 's' → logprob: -4.583438873291016
    6. 'sum' → logprob: -6.458438873291016
    7. 'a' → logprob: -7.208438873291016
    8. ' sum' → logprob: -7.208438873291016
    9. 'result' → logprob: -7.583438873291016
    10. ' result' → logprob: -7.583438873291016

Token 221: '
' (ID: 198)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.7675861716270447
    2. '       ' → logprob: -1.8925862312316895
    3. '=' → logprob: -2.2675862312316895
    4. 's' → logprob: -2.3925862312316895
    5. 'sum' → logprob: -2.8925862312316895
    6. ' area' → logprob: -3.1425862312316895
    7. 'total' → logprob: -3.7675862312316895
    8. 'acc' → logprob: -4.1425862312316895
    9. 'result' → logprob: -4.2675862312316895
    10. ' =' → logprob: -4.3925862312316895

Token 222: '       ' (ID: 309)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.1962953358888626
    2. 'acc' → logprob: -2.5712952613830566
    3. 'sum' → logprob: -3.3212952613830566
    4. '       ' → logprob: -3.5712952613830566
    5. 's' → logprob: -3.6962952613830566
    6. ' area' → logprob: -4.946295261383057
    7. 'total' → logprob: -5.696295261383057
    8. 'result' → logprob: -7.071295261383057
    9. ' acc' → logprob: -7.571295261383057
    10. ' s' → logprob: -8.196295738220215

Token 223: ' def' (ID: 1056)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.07651323825120926
    2. 'acc' → logprob: -2.7015132904052734
    3. 'sum' → logprob: -5.951513290405273
    4. 's' → logprob: -6.951513290405273
    5. 'total' → logprob: -6.951513290405273
    6. 'result' → logprob: -7.326513290405273
    7. ' area' → logprob: -7.576513290405273
    8. '   ' → logprob: -8.076513290405273
    9. '_area' → logprob: -8.576513290405273
    10. 'a' → logprob: -8.701513290405273

Token 224: ' accumulator' (ID: 118458)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.3313816785812378
    2. ' sho' → logprob: -2.0813817977905273
    3. ' accumulate' → logprob: -2.0813817977905273
    4. ' acc' → logprob: -2.2063817977905273
    5. ' cross' → logprob: -2.4563817977905273
    6. '_' → logprob: -3.0813817977905273
    7. ' accumulator' → logprob: -3.2063817977905273
    8. ' sum' → logprob: -3.5813817977905273
    9. 'sum' → logprob: -3.9563817977905273
    10. '_acc' → logprob: -4.081381797790527

Token 225: '():
' (ID: 8595)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.35430797934532166
    2. '():' → logprob: -2.1043078899383545
    3. '():
' → logprob: -3.2293078899383545
    4. '(s' → logprob: -3.3543078899383545
    5. '(a' → logprob: -3.6043078899383545
    6. '(sum' → logprob: -3.8543078899383545
    7. '(i' → logprob: -4.104308128356934
    8. '(x' → logprob: -4.104308128356934
    9. '(total' → logprob: -4.854308128356934
    10. '(prev' → logprob: -5.979308128356934

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034282929264009
    2. '       ' → logprob: -6.7534284591674805
    3. '         ' → logprob: -7.2534284591674805
    4. '   ' → logprob: -8.87842845916748
    5. 'sum' → logprob: -8.87842845916748
    6. 'result' → logprob: -9.00342845916748
    7. '        ' → logprob: -9.00342845916748
    8. 's' → logprob: -9.12842845916748
    9. '          ' → logprob: -9.12842845916748
    10. ' for' → logprob: -9.37842845916748

Token 227: ' sum' (ID: 4215)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6084824204444885
    2. ' acc' → logprob: -1.3584823608398438
    3. 's' → logprob: -2.9834823608398438
    4. '       ' → logprob: -2.9834823608398438
    5. 'total' → logprob: -3.2334823608398438
    6. ' total' → logprob: -3.9834823608398438
    7. ' s' → logprob: -4.733482360839844
    8. 'result' → logprob: -5.108482360839844
    9. 'sum' (adapté à ' sum') → logprob: -5.233482360839844
    10. 'for' → logprob: -5.233482360839844

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9307039380073547
    2. '_' → logprob: -1.18070387840271
    3. ' =' → logprob: -1.55570387840271
    4. '=' → logprob: -3.30570387840271
    5. '_=' → logprob: -3.43070387840271
    6. '_x' → logprob: -4.555704116821289
    7. '_a' → logprob: -6.430704116821289
    8. '+=' → logprob: -6.930704116821289
    9. ' +=' → logprob: -7.180704116821289
    10. 's' → logprob: -7.180704116821289

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37571981549263
    2. ' =' → logprob: -1.2507197856903076
    3. '+=' → logprob: -4.375720024108887
    4. ' +=' → logprob: -4.500720024108887
    5. '()' → logprob: -7.375720024108887
    6. ':' → logprob: -7.625720024108887
    7. '+' → logprob: -7.625720024108887
    8. ' ' → logprob: -7.875720024108887
    9. '():' → logprob: -8.125720024108887
    10. ',' → logprob: -8.250720024108887

Token 230: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0125663997605443
    2. ' ' → logprob: -4.387566566467285
    3. ' sum' → logprob: -10.262566566467285
    4. 'sum' → logprob: -11.262566566467285
    5. ' self' → logprob: -12.762566566467285
    6. '   ' → logprob: -13.262566566467285
    7. 'self' → logprob: -13.512566566467285
    8. '  ' → logprob: -14.387566566467285
    9. ' float' → logprob: -15.262566566467285
    10. 'float' → logprob: -15.387566566467285

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.87508487701416
    3. 'sum' → logprob: -10.37508487701416
    4. ' sum' → logprob: -14.00008487701416
    5. 'float' → logprob: -14.68758487701416
    6. '   ' → logprob: -15.37508487701416
    7. '
' → logprob: -15.37508487701416
    8. 'self' → logprob: -15.75008487701416
    9. 'x' → logprob: -16.312585830688477
    10. '  ' → logprob: -16.500085830688477

Token 232: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3420164883136749
    2. '<|end|>' → logprob: -2.3420164585113525
    3. '<|end|>' → logprob: -2.5920164585113525
    4. '       ' → logprob: -2.5920164585113525
    5. '           ' → logprob: -3.7170164585113525
    6. ' for' → logprob: -4.842016696929932
    7. 'for' → logprob: -5.092016696929932
    8. '   ' → logprob: -6.592016696929932
    9. '        ' → logprob: -7.717016696929932
    10. '               ' → logprob: -8.092016220092773

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10995301604270935
    2. '5' → logprob: -3.609952926635742
    3. ' for' → logprob: -3.859952926635742
    4. ' ' → logprob: -4.359952926635742
    5. '.' → logprob: -4.859952926635742
    6. 'for' → logprob: -5.109952926635742
    7. '    ' → logprob: -5.609952926635742
    8. 'range' → logprob: -5.609952926635742
    9. '  ' → logprob: -5.734952926635742
    10. ',' → logprob: -5.984952926635742

Token 234: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037028323858976364
    2. '<|end|>' → logprob: -3.7870283126831055
    3. '
' → logprob: -5.2870283126831055
    4. ' for' → logprob: -5.9120283126831055
    5. '       ' → logprob: -5.9120283126831055
    6. '<|end|>' → logprob: -6.5370283126831055
    7. ',' → logprob: -8.037028312683105
    8. 'for' → logprob: -8.037028312683105
    9. '               ' → logprob: -8.162028312683105
    10. '	       ' → logprob: -8.537028312683105

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010073020122945309
    2. '<|end|>' → logprob: -5.510073184967041
    3. '
' → logprob: -6.010073184967041
    4. '       ' → logprob: -7.010073184967041
    5. '<|end|>' → logprob: -7.010073184967041
    6. ' for' → logprob: -7.635073184967041
    7. '	       ' → logprob: -7.885073184967041
    8. '               ' → logprob: -9.010072708129883
    9. 'for' → logprob: -9.010072708129883
    10. ',' → logprob: -9.135072708129883

Token 236: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.7825672626495361
    2. ' sum' → logprob: -1.4075672626495361
    3. 'for' → logprob: -1.9075672626495361
    4. ' for' → logprob: -2.407567262649536
    5. '           ' → logprob: -2.907567262649536
    6. '       ' → logprob: -6.032567024230957
    7. '        ' → logprob: -7.282567024230957
    8. '   ' → logprob: -7.532567024230957
    9. '            ' → logprob: -8.157567024230957
    10. ' ' → logprob: -8.657567024230957

Token 237: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001446611131541431
    2. '_' → logprob: -9.250144958496094
    3. '1' → logprob: -10.875144958496094
    4. '=' → logprob: -11.250144958496094
    5. ' ' → logprob: -11.625144958496094
    6. '+=' → logprob: -13.500144958496094
    7. '   ' → logprob: -14.000144958496094
    8. '```' → logprob: -14.375144958496094
    9. ')' → logprob: -14.750144958496094
    10. '₂' → logprob: -14.875144958496094

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026304826140403748
    2. '=' → logprob: -3.6513047218322754
    3. ' ' → logprob: -12.651305198669434
    4. '<|end|>' → logprob: -15.026305198669434
    5. '           ' → logprob: -15.526305198669434
    6. '    ' → logprob: -15.776305198669434
    7. '        ' → logprob: -15.901305198669434
    8. '   ' → logprob: -16.151304244995117
    9. '       ' → logprob: -16.276304244995117
    10. ' =
' → logprob: -16.651304244995117

Token 239: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1426979899406433
    2. ' ' → logprob: -2.017698049545288
    3. '   ' → logprob: -11.767698287963867
    4. '       ' → logprob: -12.705198287963867
    5. '  ' → logprob: -13.267698287963867
    6. '           ' → logprob: -13.267698287963867
    7. ' ' → logprob: -13.892698287963867
    8. '
' → logprob: -14.142698287963867
    9. '<|end|>' → logprob: -14.455198287963867
    10. '1' → logprob: -14.455198287963867

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'float' → logprob: -16.000051498413086
    4. '   ' → logprob: -16.375051498413086
    5. '.' → logprob: -17.000051498413086
    6. '  ' → logprob: -17.500051498413086
    7. '=' → logprob: -17.812551498413086
    8. '1' → logprob: -18.062551498413086
    9. '2' → logprob: -18.875051498413086
    10. ',' → logprob: -19.062551498413086

Token 241: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.264322317088954e-05
    2. '
' → logprob: -11.000052452087402
    3. '0' → logprob: -11.250052452087402
    4. '       ' → logprob: -11.250052452087402
    5. '           ' → logprob: -13.250052452087402
    6. '1' → logprob: -13.500052452087402
    7. '   ' → logprob: -13.750052452087402
    8. ' .' → logprob: -13.875052452087402
    9. '.
' → logprob: -14.250052452087402
    10. ' ' → logprob: -14.625052452087402

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -13.250003814697266
    3. 'float' → logprob: -13.375003814697266
    4. '   ' → logprob: -15.500003814697266
    5. 'return' → logprob: -16.375003814697266
    6. 'sum' → logprob: -16.687503814697266
    7. '```' → logprob: -16.750003814697266
    8. 'for' → logprob: -17.687503814697266
    9. '       ' → logprob: -17.750003814697266
    10. '
' → logprob: -17.812503814697266

Token 243: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003410647332202643
    2. '       ' → logprob: -9.125341415405273
    3. ' for' → logprob: -9.750341415405273
    4. '<|end|>' → logprob: -9.750341415405273
    5. ',' → logprob: -10.500341415405273
    6. 'for' → logprob: -11.000341415405273
    7. '
' → logprob: -11.125341415405273
    8. '            
' → logprob: -11.625341415405273
    9. '   ' → logprob: -11.875341415405273
    10. '<|end|>' → logprob: -11.875341415405273

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017551444470882416
    2. '       ' → logprob: -4.267551422119141
    3. ' for' → logprob: -6.017551422119141
    4. 'for' → logprob: -8.14255142211914
    5. '	       ' → logprob: -8.76755142211914
    6. '<|end|>' → logprob: -9.14255142211914
    7. '   ' → logprob: -9.26755142211914
    8. ',' → logprob: -9.76755142211914
    9. '		' → logprob: -10.14255142211914
    10. '               ' → logprob: -10.26755142211914

Token 245: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45041364431381226
    2. 'for' (adapté à ' for') → logprob: -1.450413703918457
    3. ' for' → logprob: -2.075413703918457
    4. '       ' → logprob: -6.075413703918457
    5. '   ' → logprob: -8.700413703918457
    6. '
' → logprob: -9.200413703918457
    7. '         ' → logprob: -11.200413703918457
    8. ' ' → logprob: -11.325413703918457
    9. '               ' → logprob: -11.450413703918457
    10. '          ' → logprob: -11.950413703918457

Token 246: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12693744897842407
    2. ' i' → logprob: -2.1269373893737793
    3. ' ' → logprob: -12.501937866210938
    4. '	i' → logprob: -12.876937866210938
    5. '   ' → logprob: -13.001937866210938
    6. '  ' → logprob: -15.001937866210938
    7. '    ' → logprob: -16.001937866210938
    8. ' ' → logprob: -16.251937866210938
    9. ')' → logprob: -16.501937866210938
    10. 'I' → logprob: -17.251937866210938

Token 247: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015261677326634526
    2. 'in' → logprob: -6.501526355743408
    3. ' ' → logprob: -11.25152587890625
    4. 'range' → logprob: -12.87652587890625
    5. ',' → logprob: -13.25152587890625
    6. 'n' → logprob: -13.50152587890625
    7. '+' → logprob: -13.50152587890625
    8. '```' → logprob: -14.37652587890625
    9. ')' → logprob: -14.50152587890625
    10. '  ' → logprob: -14.75152587890625

Token 248: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2811845541000366
    2. ' range' → logprob: -1.4061845541000366
    3. ' ' → logprob: -11.031184196472168
    4. '   ' → logprob: -11.781184196472168
    5. '	range' → logprob: -13.031184196472168
    6. '  ' → logprob: -13.156184196472168
    7. '(range' → logprob: -13.531184196472168
    8. ')' → logprob: -13.906184196472168
    9. '```' → logprob: -14.031184196472168
    10. '    ' → logprob: -14.031184196472168

Token 249: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002828650176525116
    2. 'n' → logprob: -5.877828598022461
    3. '(' → logprob: -10.752828598022461
    4. ' n' → logprob: -13.502828598022461
    5. ' (' → logprob: -15.127828598022461
    6. '	n' → logprob: -15.502828598022461
    7. '(
' → logprob: -15.627828598022461
    8. '(len' → logprob: -16.50282859802246
    9. '<n' → logprob: -16.75282859802246
    10. ')n' → logprob: -16.75282859802246

Token 250: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04799579456448555
    2. '):
' → logprob: -3.1729958057403564
    3. ' ):' → logprob: -5.672995567321777
    4. '       ' → logprob: -7.047995567321777
    5. '-' → logprob: -8.672995567321777
    6. ' ):
' → logprob: -9.047995567321777
    7. ')' → logprob: -9.172995567321777
    8. ' -' → logprob: -9.422995567321777
    9. '           ' → logprob: -9.797995567321777
    10. ':' → logprob: -10.172995567321777

Token 251: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015098480507731438
    2. '           ' → logprob: -4.265098571777344
    3. '<|end|>' → logprob: -7.890098571777344
    4. ',' → logprob: -9.265098571777344
    5. ' ' → logprob: -9.390098571777344
    6. ')' → logprob: -9.515098571777344
    7. ' sum' → logprob: -9.890098571777344
    8. ' x' → logprob: -10.265098571777344
    9. '   ' → logprob: -10.265098571777344
    10. '       ' → logprob: -10.640098571777344

Token 252: ' x' (ID: 1215)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.3456362783908844
    2. 'sum' → logprob: -2.2206363677978516
    3. '               ' → logprob: -2.3456363677978516
    4. ' x' → logprob: -3.2206363677978516
    5. '                   ' → logprob: -3.7206363677978516
    6. 'x' (adapté à ' x') → logprob: -4.345636367797852
    7. '   ' → logprob: -5.720636367797852
    8. '           ' → logprob: -5.970636367797852
    9. ' p' → logprob: -6.220636367797852
    10. ' ' → logprob: -6.720636367797852

Token 253: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08279199153184891
    2. '=' → logprob: -2.957792043685913
    3. ',' → logprob: -5.582791805267334
    4. '<|end|>' → logprob: -5.582791805267334
    5. '           ' → logprob: -5.707791805267334
    6. ':' → logprob: -6.332791805267334
    7. ')' → logprob: -6.332791805267334
    8. ' *' → logprob: -6.332791805267334
    9. '   ' → logprob: -6.832791805267334
    10. ' ' → logprob: -6.957791805267334

Token 254: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14816415309906006
    2. '=' → logprob: -2.1481642723083496
    3. ',' → logprob: -4.27316427230835
    4. ' *' → logprob: -5.39816427230835
    5. '*' → logprob: -6.52316427230835
    6. ')' → logprob: -8.148163795471191
    7. ' ' → logprob: -8.523163795471191
    8. '       ' → logprob: -8.773163795471191
    9. '   ' → logprob: -9.273163795471191
    10. '        ' → logprob: -9.648163795471191

Token 255: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3870258629322052
    2. ' y' → logprob: -1.1370258331298828
    3. ' =' → logprob: -9.512025833129883
    4. '                ' → logprob: -10.387025833129883
    5. ' ' → logprob: -11.137025833129883
    6. '               ' → logprob: -11.637025833129883
    7. '	y' → logprob: -12.137025833129883
    8. '=' → logprob: -13.262025833129883
    9. '_y' → logprob: -13.262025833129883
    10. '    ' → logprob: -13.262025833129883

Token 256: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6156843900680542
    2. '_i' → logprob: -1.4906843900680542
    3. '_' → logprob: -1.7406843900680542
    4. '=' → logprob: -2.9906845092773438
    5. '<|end|>' → logprob: -5.990684509277344
    6. '_=' → logprob: -6.240684509277344
    7. '<|end|>' → logprob: -6.365684509277344
    8. 'i' → logprob: -7.365684509277344
    9. '    ' → logprob: -7.615684509277344
    10. ' ' → logprob: -7.740684509277344

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11316557228565216
    2. '=' → logprob: -2.2381656169891357
    3. ',' → logprob: -8.113165855407715
    4. ' ' → logprob: -10.988165855407715
    5. ')' → logprob: -11.488165855407715
    6. '        ' → logprob: -12.738165855407715
    7. '<|end|>' → logprob: -12.863165855407715
    8. '       ' → logprob: -13.113165855407715
    9. '    ' → logprob: -13.238165855407715
    10. '           ' → logprob: -13.738165855407715

Token 258: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.033722925931215286
    2. ' self' → logprob: -3.4087228775024414
    3. '(self' → logprob: -9.533722877502441
    4. '   ' → logprob: -13.783722877502441
    5. '           ' → logprob: -13.908722877502441
    6. ' ' → logprob: -14.533722877502441
    7. '
' → logprob: -15.033722877502441
    8. '	self' → logprob: -15.033722877502441
    9. '=self' → logprob: -15.283722877502441
    10. '    ' → logprob: -15.408722877502441

Token 259: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.000275040598353371
    2. '.' → logprob: -8.750274658203125
    3. 'vertices' → logprob: -9.250274658203125
    4. ' .' → logprob: -11.875274658203125
    5. '.points' → logprob: -12.500274658203125
    6. '.edges' → logprob: -12.625274658203125
    7. ' vertices' → logprob: -13.625274658203125
    8. ').' → logprob: -14.125274658203125
    9. '.variables' → logprob: -14.500274658203125
    10. '(vertices' → logprob: -14.750274658203125

Token 260: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.250001907348633
    3. 'i' → logprob: -14.500001907348633
    4. '[
' → logprob: -15.375001907348633
    5. '```' → logprob: -15.750001907348633
    6. '           ' → logprob: -16.750001907348633
    7. ')[' → logprob: -16.875001907348633
    8. '               ' → logprob: -16.875001907348633
    9. '                   ' → logprob: -17.500001907348633
    10. '
' → logprob: -17.625001907348633

Token 261: '].' (ID: 1651)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.12896835803985596
    2. '.' → logprob: -2.1289682388305664
    3. ' .' → logprob: -6.628968238830566
    4. ').' → logprob: -7.503968238830566
    5. '].' → logprob: -10.253968238830566
    6. '       ' → logprob: -10.753968238830566
    7. '           ' → logprob: -11.003968238830566
    8. '.y' → logprob: -11.003968238830566
    9. ')' → logprob: -11.128968238830566
    10. '   ' → logprob: -11.253968238830566

Token 262: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3425219549390022e-05
    2. ' x' → logprob: -11.25001335144043
    3. '.x' → logprob: -15.75001335144043
    4. ' ' → logprob: -16.62501335144043
    5. '```' → logprob: -16.75001335144043
    6. 'y' → logprob: -17.68751335144043
    7. '
' → logprob: -18.00001335144043
    8. ',' → logprob: -18.12501335144043
    9. '1' → logprob: -18.12501335144043
    10. ')' → logprob: -18.25001335144043

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035274302354082465
    2. ' ,' → logprob: -8.25035285949707
    3. ',y' → logprob: -10.25035285949707
    4. ',
' → logprob: -10.62535285949707
    5. '               ' → logprob: -11.12535285949707
    6. ',x' → logprob: -12.12535285949707
    7. '<|end|>' → logprob: -12.37535285949707
    8. '           ' → logprob: -13.62535285949707
    9. ' ' → logprob: -13.75035285949707
    10. '‌,' → logprob: -14.12535285949707

Token 264: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28115907311439514
    2. ' self' → logprob: -1.4061590433120728
    3. ' ' → logprob: -12.906159400939941
    4. '(self' → logprob: -13.406159400939941
    5. ' ' → logprob: -13.781159400939941
    6. '	self' → logprob: -14.031159400939941
    7. '_self' → logprob: -14.531159400939941
    8. '=self' → logprob: -14.906159400939941
    9. '<|end|>' → logprob: -15.031159400939941
    10. '[self' → logprob: -15.156159400939941

Token 265: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.6718987226486206
    2. 'vertices' → logprob: -0.7968987226486206
    3. '[i' → logprob: -3.92189884185791
    4. 'i' → logprob: -4.29689884185791
    5. '.y' → logprob: -6.42189884185791
    6. ' vertices' → logprob: -6.92189884185791
    7. ' i' → logprob: -8.04689884185791
    8. '.' → logprob: -8.04689884185791
    9. '.i' → logprob: -8.04689884185791
    10. '
' → logprob: -8.29689884185791

Token 266: '[i' (ID: 1768)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.4202595055103302
    2. '[i' → logprob: -1.5452594757080078
    3. '.i' → logprob: -2.545259475708008
    4. 'i' → logprob: -3.420259475708008
    5. '.' → logprob: -4.670259475708008
    6. 'y' → logprob: -4.920259475708008
    7. ')' → logprob: -7.420259475708008
    8. '_i' → logprob: -7.920259475708008
    9. '(i' → logprob: -8.670259475708008
    10. ' .' → logprob: -8.795259475708008

Token 267: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.014250943437218666
    2. '.y' → logprob: -4.389250755310059
    3. ').' → logprob: -7.264250755310059
    4. '.' → logprob: -7.389250755310059
    5. '.i' → logprob: -8.139250755310059
    6. ']' → logprob: -9.639250755310059
    7. ' ].' → logprob: -11.139250755310059
    8. '.x' → logprob: -11.389250755310059
    9. ' ' → logprob: -12.014250755310059
    10. '   ' → logprob: -12.139250755310059

Token 268: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.4849443838757e-06
    2. ' y' → logprob: -12.375004768371582
    3. 'x' → logprob: -16.125003814697266
    4. '
' → logprob: -17.000003814697266
    5. '	y' → logprob: -17.375003814697266
    6. ' ' → logprob: -17.500003814697266
    7. '  ' → logprob: -17.750003814697266
    8. '   ' → logprob: -17.750003814697266
    9. '.y' → logprob: -17.875003814697266
    10. '_y' → logprob: -18.500003814697266

Token 269: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.047528475522994995
    2. '<|end|>' → logprob: -3.4225285053253174
    3. ',' → logprob: -5.297528266906738
    4. '                
' → logprob: -5.422528266906738
    5. '           ' → logprob: -6.547528266906738
    6. ')' → logprob: -7.172528266906738
    7. '  
' → logprob: -8.422528266906738
    8. ' 
' → logprob: -8.422528266906738
    9. ' ' → logprob: -8.547528266906738
    10. '<|end|>' → logprob: -8.672528266906738

Token 270: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010490469634532928
    2. '<|end|>' → logprob: -4.760490417480469
    3. '           ' → logprob: -7.510490417480469
    4. ',' → logprob: -7.885490417480469
    5. ' ' → logprob: -8.135490417480469
    6. '                
' → logprob: -9.010490417480469
    7. ' x' → logprob: -9.260490417480469
    8. '<|end|>' → logprob: -9.385490417480469
    9. '                ' → logprob: -9.885490417480469
    10. 'x' → logprob: -10.010490417480469

Token 271: ' x' (ID: 1215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1891280859708786
    2. ' x' → logprob: -2.5641281604766846
    3. ' sum' → logprob: -2.9391281604766846
    4. '           ' → logprob: -4.4391279220581055
    5. 'sum' → logprob: -4.4391279220581055
    6. 'x' (adapté à ' x') → logprob: -4.5641279220581055
    7. '                ' → logprob: -5.4391279220581055
    8. ' ' → logprob: -6.1891279220581055
    9. '            ' → logprob: -7.6891279220581055
    10. ' y' → logprob: -8.189127922058105

Token 272: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.09680090844631195
    2. '_j' → logprob: -2.8468008041381836
    3. '_i' → logprob: -3.9718008041381836
    4. '_ip' → logprob: -4.846800804138184
    5. 'next' → logprob: -5.596800804138184
    6. '_' → logprob: -6.096800804138184
    7. '_n' → logprob: -7.471800804138184
    8. '_prev' → logprob: -8.096800804138184
    9. 'j' → logprob: -8.846800804138184
    10. '_{' → logprob: -8.971800804138184

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19934794306755066
    2. ' =' → logprob: -1.949347972869873
    3. '=' → logprob: -3.699347972869873
    4. ' ,' → logprob: -4.324347972869873
    5. ' ' → logprob: -8.074347496032715
    6. '<|end|>' → logprob: -10.324347496032715
    7. ')' → logprob: -11.074347496032715
    8. ' )' → logprob: -12.824347496032715
    9. ',x' → logprob: -12.949347496032715
    10. '  ' → logprob: -12.949347496032715

Token 274: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.02983703836798668
    2. 'y' → logprob: -3.529837131500244
    3. ' ' → logprob: -9.904836654663086
    4. ' =' → logprob: -10.904836654663086
    5. '<|end|>' → logprob: -11.529836654663086
    6. ' ' → logprob: -12.654836654663086
    7. ' 
' → logprob: -13.404836654663086
    8. '=' → logprob: -14.279836654663086
    9. '
' → logprob: -14.404836654663086
    10. ',' → logprob: -14.654836654663086

Token 275: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.010458491742610931
    2. '_' → logprob: -4.635458469390869
    3. '_=' → logprob: -8.510458946228027
    4. 'next' → logprob: -8.510458946228027
    5. '_i' → logprob: -9.135458946228027
    6. 'Next' → logprob: -10.010458946228027
    7. '=' → logprob: -10.135458946228027
    8. '<|end|>' → logprob: -10.510458946228027
    9. ' =' → logprob: -10.885458946228027
    10. '_NEXT' → logprob: -11.010458946228027

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04303412884473801
    2. '=' → logprob: -3.168034076690674
    3. ' ' → logprob: -10.668034553527832
    4. ')' → logprob: -11.918034553527832
    5. '<|end|>' → logprob: -13.793034553527832
    6. ',' → logprob: -14.043034553527832
    7. '  ' → logprob: -14.543034553527832
    8. '   ' → logprob: -14.793034553527832
    9. '```' → logprob: -14.793034553527832
    10. ' ' → logprob: -15.043034553527832

Token 277: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1426878571510315
    2. ' self' → logprob: -2.0176877975463867
    3. '(self' → logprob: -12.517687797546387
    4. ' ' → logprob: -13.392687797546387
    5. '           ' → logprob: -13.642687797546387
    6. '	self' → logprob: -13.767687797546387
    7. '=self' → logprob: -14.017687797546387
    8. '       ' → logprob: -14.142687797546387
    9. '               ' → logprob: -14.142687797546387
    10. '   ' → logprob: -14.642687797546387

Token 278: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.0003528622619342059
    2. 'vertices' → logprob: -8.00035285949707
    3. '.' → logprob: -11.87535285949707
    4. '.points' → logprob: -12.75035285949707
    5. ' .' → logprob: -12.87535285949707
    6. '.edges' → logprob: -13.12535285949707
    7. ' vertices' → logprob: -13.87535285949707
    8. 'self' → logprob: -14.87535285949707
    9. '(vertices' → logprob: -15.00035285949707
    10. '.variables' → logprob: -15.62535285949707

Token 279: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.002395986346527934
    2. '[i' → logprob: -6.127396106719971
    3. '(i' → logprob: -8.502395629882812
    4. '[
' → logprob: -12.752395629882812
    5. '[' → logprob: -12.877395629882812
    6. '[self' → logprob: -14.252395629882812
    7. '   ' → logprob: -14.877395629882812
    8. '((' → logprob: -15.127395629882812
    9. '(self' → logprob: -15.252395629882812
    10. '[((' → logprob: -15.627395629882812

Token 280: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0032187069300562143
    2. '(i' → logprob: -5.753218650817871
    3. ' (' → logprob: -11.378218650817871
    4. ' i' → logprob: -11.503218650817871
    5. '{i' → logprob: -11.878218650817871
    6. '   ' → logprob: -12.878218650817871
    7. '[i' → logprob: -13.003218650817871
    8. '```' → logprob: -13.253218650817871
    9. '
' → logprob: -13.878218650817871
    10. ')i' → logprob: -14.378218650817871

Token 281: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028363727033138275
    2. ' +' → logprob: -5.877836227416992
    3. '1' → logprob: -10.627836227416992
    4. '+i' → logprob: -12.752836227416992
    5. '(' → logprob: -13.377836227416992
    6. '()+' → logprob: -14.127836227416992
    7. ' ' → logprob: -14.127836227416992
    8. '   ' → logprob: -14.877836227416992
    9. '(i' → logprob: -15.377836227416992
    10. '
' → logprob: -15.377836227416992

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3557529857498594e-05
    2. ' ' → logprob: -11.12502384185791
    3. '+' → logprob: -12.75002384185791
    4. '(' → logprob: -12.75002384185791
    5. '```' → logprob: -14.43752384185791
    6. 'n' → logprob: -14.87502384185791
    7. '
' → logprob: -15.06252384185791
    8. ' (' → logprob: -15.43752384185791
    9. '[' → logprob: -16.250022888183594
    10. '(n' → logprob: -16.312522888183594

Token 283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00780559191480279
    2. ')%' → logprob: -5.382805824279785
    3. ')].' → logprob: -5.882805824279785
    4. ').' → logprob: -8.632805824279785
    5. '%' → logprob: -9.257805824279785
    6. ']' → logprob: -9.882805824279785
    7. ' )' → logprob: -10.757805824279785
    8. ')]' → logprob: -11.132805824279785
    9. ')
' → logprob: -11.507805824279785
    10. ' %' → logprob: -11.882805824279785

Token 284: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0821864604949951
    2. ')' → logprob: -1.0821864604949951
    3. ' %' → logprob: -1.2071864604949951
    4. ')%' → logprob: -4.082186698913574
    5. ']' → logprob: -5.582186698913574
    6. '%n' → logprob: -6.707186698913574
    7. ').' → logprob: -7.332186698913574
    8. ' ' → logprob: -8.582186698913574
    9. ']%' → logprob: -8.707186698913574
    10. ' )' → logprob: -9.457186698913574

Token 285: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018151935189962387
    2. ' n' → logprob: -4.018151760101318
    3. '(n' → logprob: -14.268152236938477
    4. ')n' → logprob: -15.143152236938477
    5. '	n' → logprob: -15.268152236938477
    6. '```' → logprob: -15.643152236938477
    7. ' ' → logprob: -15.893152236938477
    8. ')' → logprob: -15.893152236938477
    9. 'len' → logprob: -16.518152236938477
    10. '   ' → logprob: -16.643152236938477

Token 286: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00018041854491457343
    2. ']' → logprob: -9.3751802444458
    3. ').' → logprob: -9.6251802444458
    4. ' ].' → logprob: -11.0001802444458
    5. ')].' → logprob: -12.0001802444458
    6. '   ' → logprob: -13.5001802444458
    7. ']
' → logprob: -13.7501802444458
    8. '],' → logprob: -14.5001802444458
    9. '.' → logprob: -14.5001802444458
    10. ']).' → logprob: -14.6251802444458

Token 287: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004630553536117077
    2. 'y' → logprob: -5.3796305656433105
    3. ' x' → logprob: -12.004630088806152
    4. '.x' → logprob: -13.504630088806152
    5. '```' → logprob: -13.879630088806152
    6. ' y' → logprob: -14.254630088806152
    7. '
' → logprob: -15.442130088806152
    8. '"x' → logprob: -16.31713104248047
    9. ''x' → logprob: -16.37963104248047
    10. '.y' → logprob: -16.44213104248047

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014299978502094746
    2. ' ,' → logprob: -6.626430034637451
    3. ',
' → logprob: -10.001429557800293
    4. ',y' → logprob: -10.376429557800293
    5. ')' → logprob: -11.626429557800293
    6. '<|end|>' → logprob: -11.626429557800293
    7. ' ' → logprob: -12.751429557800293
    8. '               ' → logprob: -13.001429557800293
    9. ' y' → logprob: -14.251429557800293
    10. '),' → logprob: -14.501429557800293

Token 289: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08900348097085953
    2. 'self' → logprob: -2.464003562927246
    3. ' ' → logprob: -10.714003562927246
    4. ' ' → logprob: -10.964003562927246
    5. '(self' → logprob: -11.964003562927246
    6. '<|end|>' → logprob: -12.089003562927246
    7. '	self' → logprob: -13.089003562927246
    8. ' y' → logprob: -13.339003562927246
    9. ')' → logprob: -13.589003562927246
    10. '_self' → logprob: -13.714003562927246

Token 290: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.20872803032398224
    2. '_vertices' → logprob: -2.083728075027466
    3. 'vertices' → logprob: -3.083728075027466
    4. 'self' → logprob: -4.208727836608887
    5. '(self' → logprob: -7.083727836608887
    6. '(vertices' → logprob: -7.458727836608887
    7. '[(' → logprob: -7.833727836608887
    8. '_next' → logprob: -8.083727836608887
    9. '.next' → logprob: -8.208727836608887
    10. '[self' → logprob: -8.583727836608887

Token 291: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0004641544655896723
    2. '[i' → logprob: -7.750463962554932
    3. '[
' → logprob: -10.87546443939209
    4. '[' → logprob: -11.62546443939209
    5. ')' → logprob: -13.62546443939209
    6. '((' → logprob: -14.00046443939209
    7. 'y' → logprob: -14.25046443939209
    8. '.y' → logprob: -14.37546443939209
    9. '.next' → logprob: -14.50046443939209
    10. '
' → logprob: -15.00046443939209

Token 292: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12862606346607208
    2. '(i' → logprob: -2.1286261081695557
    3. 'n' → logprob: -6.878625869750977
    4. ' (' → logprob: -8.628625869750977
    5. '(n' → logprob: -8.753625869750977
    6. '(' → logprob: -9.753625869750977
    7. ')' → logprob: -9.753625869750977
    8. '
' → logprob: -9.878625869750977
    9. ' i' → logprob: -10.128625869750977
    10. '(
' → logprob: -11.253625869750977

Token 293: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.114600834436715e-05
    2. ' +' → logprob: -10.250091552734375
    3. '1' → logprob: -10.625091552734375
    4. 'Next' → logprob: -11.375091552734375
    5. 'i' → logprob: -12.250091552734375
    6. '+i' → logprob: -12.750091552734375
    7. '_next' → logprob: -13.000091552734375
    8. ')' → logprob: -13.375091552734375
    9. 'next' → logprob: -13.500091552734375
    10. '(' → logprob: -13.500091552734375

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009784658439457417
    2. 'n' → logprob: -4.634784698486328
    3. '+' → logprob: -11.759784698486328
    4. ' ' → logprob: -12.259784698486328
    5. '
' → logprob: -12.884784698486328
    6. ')' → logprob: -13.009784698486328
    7. '```' → logprob: -13.009784698486328
    8. 'i' → logprob: -13.384784698486328
    9. ' n' → logprob: -13.822284698486328
    10. 'next' → logprob: -14.134784698486328

Token 295: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015286672860383987
    2. ')%' → logprob: -6.751528739929199
    3. '%' → logprob: -8.1265287399292
    4. ')
' → logprob: -11.1265287399292
    5. ' )' → logprob: -11.3765287399292
    6. '%n' → logprob: -12.0015287399292
    7. ')n' → logprob: -12.1265287399292
    8. 'n' → logprob: -12.1265287399292
    9. ']' → logprob: -12.6265287399292
    10. ' %' → logprob: -12.8765287399292

Token 296: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5877128839492798
    2. '%' → logprob: -0.9627128839492798
    3. ')' → logprob: -2.9627127647399902
    4. '%n' → logprob: -4.96271276473999
    5. ')%' → logprob: -5.83771276473999
    6. 'n' → logprob: -7.96271276473999
    7. ']' → logprob: -8.337713241577148
    8. ' ' → logprob: -9.462713241577148
    9. '%i' → logprob: -9.587713241577148
    10. ']%' → logprob: -9.962713241577148

Token 297: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004096923861652613
    2. ' n' → logprob: -5.504096984863281
    3. '```' → logprob: -11.879096984863281
    4. ')' → logprob: -12.629096984863281
    5. ')n' → logprob: -13.379096984863281
    6. ' ' → logprob: -13.504096984863281
    7. '	n' → logprob: -13.504096984863281
    8. '   ' → logprob: -14.629096984863281
    9. ']' → logprob: -15.004096984863281
    10. '(n' → logprob: -15.066596984863281

Token 298: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.22945892810821533
    2. 'n' → logprob: -1.8544589281082153
    3. ').' → logprob: -3.104458808898926
    4. ')' → logprob: -6.229458808898926
    5. ']' → logprob: -7.104458808898926
    6. ')].' → logprob: -7.729458808898926
    7. ')]' → logprob: -8.354458808898926
    8. ' n' → logprob: -10.479458808898926
    9. ')n' → logprob: -10.479458808898926
    10. '```' → logprob: -10.604458808898926

Token 299: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002394170151092112
    2. 'n' → logprob: -8.500239372253418
    3. ' y' → logprob: -10.500239372253418
    4. '```' → logprob: -13.125239372253418
    5. ' ' → logprob: -13.500239372253418
    6. 'vertices' → logprob: -13.750239372253418
    7. '1' → logprob: -14.000239372253418
    8. 'x' → logprob: -14.250239372253418
    9. '   ' → logprob: -15.125239372253418
    10. '
' → logprob: -15.375239372253418

Token 300: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008354776655323803
    2. '
' → logprob: -7.875835418701172
    3. '           ' → logprob: -8.125835418701172
    4. '                
' → logprob: -9.250835418701172
    5. ',' → logprob: -11.250835418701172
    6. '  
' → logprob: -11.375835418701172
    7. '<|end|>' → logprob: -11.625835418701172
    8. '    
' → logprob: -12.375835418701172
    9. '            
' → logprob: -12.375835418701172
    10. '              ' → logprob: -12.625835418701172

Token 301: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45483946800231934
    2. '           ' → logprob: -1.0798394680023193
    3. '
' → logprob: -3.7048394680023193
    4. '            
' → logprob: -8.204839706420898
    5. '                   ' → logprob: -8.829839706420898
    6. '  
' → logprob: -9.079839706420898
    7. '       ' → logprob: -9.204839706420898
    8. '                
' → logprob: -9.204839706420898
    9. '    
' → logprob: -9.329839706420898
    10. '   ' → logprob: -9.954839706420898

Token 302: ' sum' (ID: 4215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08305960893630981
    2. '           ' → logprob: -2.958059549331665
    3. 'sum' (adapté à ' sum') → logprob: -3.708059549331665
    4. ' sum' → logprob: -5.958059787750244
    5. '   ' → logprob: -8.458059310913086
    6. '       ' → logprob: -8.833059310913086
    7. '
' → logprob: -9.083059310913086
    8. ' ' → logprob: -9.208059310913086
    9. '                   ' → logprob: -10.958059310913086
    10. '```' → logprob: -10.958059310913086

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -14.250001907348633
    3. '+=' → logprob: -14.250001907348633
    4. ' +=' → logprob: -15.625001907348633
    5. '```' → logprob: -15.875001907348633
    6. '
' → logprob: -16.125001907348633
    7. '' → logprob: -17.500001907348633
    8. ' ' → logprob: -17.562501907348633
    9. 'sum' → logprob: -17.750001907348633
    10. '１' → logprob: -18.562501907348633

Token 304: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20153847336769104
    2. '+=' → logprob: -1.7015384435653687
    3. '+' → logprob: -9.2015380859375
    4. '+=(' → logprob: -10.9515380859375
    5. ']+=' → logprob: -12.8265380859375
    6. '   ' → logprob: -13.8265380859375
    7. '=' → logprob: -13.9515380859375
    8. '    ' → logprob: -14.7015380859375
    9. ' ' → logprob: -14.9515380859375
    10. '```' → logprob: -15.5765380859375

Token 305: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003357006062287837
    2. ' x' → logprob: -8.000335693359375
    3. '(x' → logprob: -15.125335693359375
    4. '	x' → logprob: -19.250335693359375
    5. '```' → logprob: -21.250335693359375
    6. '
' → logprob: -21.375335693359375
    7. '"x' → logprob: -21.375335693359375
    8. '(' → logprob: -21.375335693359375
    9. ' ' → logprob: -21.625335693359375
    10. ' (' → logprob: -21.750335693359375

Token 306: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -2.7491250875755213e-05
    2. '_' → logprob: -11.125027656555176
    3. '_next' → logprob: -12.000027656555176
    4. 'i' → logprob: -12.750027656555176
    5. '[i' → logprob: -12.750027656555176
    6. '[_' → logprob: -16.25002670288086
    7. ')' → logprob: -16.25002670288086
    8. ' _' → logprob: -16.50002670288086
    9. '*_' → logprob: -16.62502670288086
    10. '[' → logprob: -16.87502670288086

Token 307: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04858827963471413
    2. '*' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.423588752746582
    4. ' ' → logprob: -15.798588752746582
    5. '*y' → logprob: -15.923588752746582
    6. ' *
' → logprob: -18.798587799072266
    7. '```' → logprob: -19.048587799072266
    8. '*
' → logprob: -19.173587799072266
    9. '**' → logprob: -19.298587799072266
    10. '*object' → logprob: -19.673587799072266

Token 308: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0485873706638813
    2. ' y' → logprob: -3.0485873222351074
    3. ' ' → logprob: -17.298587799072266
    4. '	y' → logprob: -18.173587799072266
    5. 'yb' → logprob: -19.798587799072266
    6. 'yj' → logprob: -20.048587799072266
    7. 'next' → logprob: -20.173587799072266
    8. '<|end|>' → logprob: -20.298587799072266
    9. '(y' → logprob: -20.548587799072266
    10. 'x' → logprob: -20.798587799072266

Token 309: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.0280383548888494e-06
    2. 'next' → logprob: -14.625000953674316
    3. '[next' → logprob: -14.875000953674316
    4. '_' → logprob: -16.375001907348633
    5. '_NEXT' → logprob: -17.000001907348633
    6. 'Next' → logprob: -17.625001907348633
    7. '_{' → logprob: -18.750001907348633
    8. ' next' → logprob: -19.000001907348633
    9. ' _' → logprob: -19.875001907348633
    10. '_
' → logprob: -20.000001907348633

Token 310: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043579451739788055
    2. ' 
' → logprob: -4.293579578399658
    3. '
' → logprob: -4.418579578399658
    4. ' ' → logprob: -5.293579578399658
    5. '\n' → logprob: -5.918579578399658
    6. '           ' → logprob: -5.918579578399658
    7. '                
' → logprob: -6.168579578399658
    8. '<|end|>' → logprob: -6.293579578399658
    9. '            
' → logprob: -7.668579578399658
    10. '                ' → logprob: -7.793579578399658

Token 312: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5810519456863403
    2. 'sum' (adapté à ' sum') → logprob: -1.0810519456863403
    3. '               ' → logprob: -2.331051826477051
    4. '                ' → logprob: -6.831051826477051
    5. ' 
' → logprob: -7.081051826477051
    6. ' ' → logprob: -7.206051826477051
    7. '
' → logprob: -7.831051826477051
    8. '                
' → logprob: -8.08105182647705
    9. '\n' → logprob: -8.33105182647705
    10. '           ' → logprob: -8.83105182647705

Token 313: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028111785650253296
    2. '_' → logprob: -6.002810955047607
    3. '_next' → logprob: -9.877811431884766
    4. '1' → logprob: -10.002811431884766
    5. ' _' → logprob: -10.002811431884766
    6. ' ' → logprob: -10.127811431884766
    7. '```' → logprob: -10.252811431884766
    8. '  ' → logprob: -10.502811431884766
    9. '   ' → logprob: -10.627811431884766
    10. '.' → logprob: -11.377811431884766

Token 314: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01733730547130108
    2. ' -=' → logprob: -4.267337322235107
    3. '+=' → logprob: -5.767337322235107
    4. ' +' → logprob: -10.89233684539795
    5. ' -' → logprob: -11.39233684539795
    6. '+' → logprob: -13.01733684539795
    7. '-=' → logprob: -13.14233684539795
    8. ' ' → logprob: -13.14233684539795
    9. ' ' → logprob: -13.26733684539795
    10. '-' → logprob: -13.64233684539795

Token 315: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001577236340381205
    2. ' y' → logprob: -6.501577377319336
    3. 'x' → logprob: -9.501577377319336
    4. '	y' → logprob: -16.001577377319336
    5. '(y' → logprob: -18.001577377319336
    6. ' x' → logprob: -18.001577377319336
    7. ' ' → logprob: -19.126577377319336
    8. '   ' → logprob: -19.376577377319336
    9. ')y' → logprob: -19.501577377319336
    10. '<|end|>' → logprob: -19.501577377319336

Token 316: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.981667537620524e-06
    2. '[i' → logprob: -13.875001907348633
    3. 'i' → logprob: -14.750001907348633
    4. '_' → logprob: -15.125001907348633
    5. '[' → logprob: -15.750001907348633
    6. '_next' → logprob: -16.250001907348633
    7. '[_' → logprob: -18.000001907348633
    8. '```' → logprob: -18.500001907348633
    9. '_[' → logprob: -19.000001907348633
    10. '_
' → logprob: -19.000001907348633

Token 317: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0021860685665160418
    2. '*' → logprob: -6.127186298370361
    3. ' ' → logprob: -14.002185821533203
    4. ' ' → logprob: -17.252185821533203
    5. '**' → logprob: -17.502185821533203
    6. '`' → logprob: -18.252185821533203
    7. ' *
' → logprob: -18.377185821533203
    8. ' **' → logprob: -18.752185821533203
    9. '```' → logprob: -19.002185821533203
    10. ')' → logprob: -19.502185821533203

Token 318: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4740773141384125
    2. ' x' → logprob: -0.9740773439407349
    3. '_x' → logprob: -15.974077224731445
    4. '	x' → logprob: -16.349077224731445
    5. ' ' → logprob: -16.474077224731445
    6. '   ' → logprob: -17.974077224731445
    7. '(x' → logprob: -18.224077224731445
    8. '```' → logprob: -18.349077224731445
    9. '{x' → logprob: -19.286577224731445
    10. ')x' → logprob: -19.411577224731445

Token 319: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -8.911954500945285e-05
    2. 'next' → logprob: -9.375088691711426
    3. '_' → logprob: -13.000088691711426
    4. '[next' → logprob: -13.500088691711426
    5. 'Next' → logprob: -15.125088691711426
    6. '_i' → logprob: -15.750088691711426
    7. '_NEXT' → logprob: -17.000089645385742
    8. '_n' → logprob: -17.125089645385742
    9. '```' → logprob: -17.125089645385742
    10. '_{' → logprob: -17.500089645385742

Token 320: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03469359874725342
    2. '
' → logprob: -3.409693717956543
    3. '       ' → logprob: -8.159693717956543
    4. ' return' → logprob: -8.159693717956543
    5. 'return' → logprob: -8.284693717956543
    6. '    
' → logprob: -9.659693717956543
    7. '            
' → logprob: -10.159693717956543
    8. '        
' → logprob: -10.409693717956543
    9. '
' → logprob: -10.909693717956543
    10. '  
' → logprob: -11.034693717956543

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007191036129370332
    2. '       ' → logprob: -7.50071907043457
    3. 'return' → logprob: -9.50071907043457
    4. 'yield' → logprob: -10.50071907043457
    5. '
' → logprob: -10.75071907043457
    6. '   ' → logprob: -11.25071907043457
    7. ' return' → logprob: -11.50071907043457
    8. '               ' → logprob: -12.37571907043457
    9. ' yield' → logprob: -12.75071907043457
    10. '```' → logprob: -13.00071907043457

Token 322: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49646079540252686
    2. '       ' → logprob: -0.9964607954025269
    3. 'return' (adapté à ' return') → logprob: -4.496460914611816
    4. ' return' → logprob: -4.871460914611816
    5. '   ' → logprob: -6.246460914611816
    6. 'yield' → logprob: -7.121460914611816
    7. ' yield' → logprob: -7.746460914611816
    8. '               ' → logprob: -9.996460914611816
    9. ' ' → logprob: -10.871460914611816
    10. '
' → logprob: -11.246460914611816

Token 323: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.4341319501399994
    2. 'abs' → logprob: -1.0591319799423218
    3. '0' → logprob: -5.809132099151611
    4. ' ' → logprob: -6.684132099151611
    5. '(abs' → logprob: -7.059132099151611
    6. ' sum' → logprob: -8.684131622314453
    7. ' (' → logprob: -9.684131622314453
    8. 'sum' → logprob: -9.684131622314453
    9. '   ' → logprob: -12.559131622314453
    10. '(sum' → logprob: -12.934131622314453

Token 324: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.020832877606153488
    2. '((' → logprob: -4.2708330154418945
    3. '(' → logprob: -5.0208330154418945
    4. '(s' → logprob: -10.520833015441895
    5. 'sum' → logprob: -11.770833015441895
    6. ' (' → logprob: -11.770833015441895
    7. '(
' → logprob: -12.395833015441895
    8. '(

' → logprob: -14.395833015441895
    9. ' sum' → logprob: -16.145832061767578
    10. '(((' → logprob: -16.395832061767578

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.812500953674316
    3. '(sum' → logprob: -16.0625
    4. '
' → logprob: -16.25
    5. '2' → logprob: -16.625
    6. '_' → logprob: -16.9375
    7. '```' → logprob: -17.0
    8. ' ' → logprob: -17.1875
    9. ')' → logprob: -17.9375
    10. '(s' → logprob: -18.125

Token 326: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008634308353066444
    2. '-' → logprob: -4.758634090423584
    3. ' ' → logprob: -11.008634567260742
    4. ' ' → logprob: -12.758634567260742
    5. '-s' → logprob: -15.633634567260742
    6. ' -
' → logprob: -16.758634567260742
    7. '−' → logprob: -17.133634567260742
    8. 'sum' → logprob: -17.508634567260742
    9. ' −' → logprob: -17.508634567260742
    10. ',' → logprob: -17.633634567260742

Token 327: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06197025999426842
    2. ' sum' → logprob: -2.8119702339172363
    3. '	sum' → logprob: -13.811970710754395
    4. '(sum' → logprob: -14.061970710754395
    5. ' ' → logprob: -14.561970710754395
    6. '<|end|>' → logprob: -16.561969757080078
    7. 'summ' → logprob: -17.061969757080078
    8. '.sum' → logprob: -17.311969757080078
    9. '  ' → logprob: -17.436969757080078
    10. '           ' → logprob: -17.686969757080078

Token 328: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '_' → logprob: -16.000001907348633
    4. ')' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '```' → logprob: -17.625001907348633
    7. '２' → logprob: -18.375001907348633
    8. '۲' → logprob: -18.437501907348633
    9. '₂' → logprob: -18.437501907348633
    10. 's' → logprob: -18.562501907348633

Token 329: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013588056899607182
    2. ' )' → logprob: -6.626358985900879
    3. ' /' → logprob: -10.876358985900879
    4. ')/' → logprob: -11.626358985900879
    5. '       ' → logprob: -12.876358985900879
    6. '   ' → logprob: -14.001358985900879
    7. ' ' → logprob: -15.001358985900879
    8. '/' → logprob: -15.376358985900879
    9. ']' → logprob: -15.751358985900879
    10. ',' → logprob: -15.876358985900879

Token 330: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.009363018907606602
    2. '       ' → logprob: -5.384363174438477
    3. '/' → logprob: -6.009363174438477
    4. ')' → logprob: -7.134363174438477
    5. ' *' → logprob: -7.509363174438477
    6. ' ' → logprob: -7.884363174438477
    7. '           ' → logprob: -9.384363174438477
    8. '2' → logprob: -9.759363174438477
    9. '   ' → logprob: -9.884363174438477
    10. ',' → logprob: -9.884363174438477

Token 331: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021857109386473894
    2. ' ' → logprob: -6.127185821533203
    3. '   ' → logprob: -15.502185821533203
    4. '
' → logprob: -15.752185821533203
    5. '```' → logprob: -16.252185821533203
    6. ' ' → logprob: -17.002185821533203
    7. ',' → logprob: -17.252185821533203
    8. '.' → logprob: -17.502185821533203
    9. '  ' → logprob: -17.564685821533203
    10. '２' → logprob: -18.502185821533203

Token 332: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.500001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '
' → logprob: -19.500001907348633
    6. '２' → logprob: -19.625001907348633
    7. '  ' → logprob: -20.875001907348633
    8. '{' → logprob: -21.000001907348633
    9. '۲' → logprob: -21.000001907348633
    10. '.' → logprob: -21.312501907348633

Token 333: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06296170502901077
    2. '
' → logprob: -3.0629618167877197
    3. '<|end|>' → logprob: -4.437961578369141
    4. '()' → logprob: -6.937961578369141
    5. '<|end|>' → logprob: -7.937961578369141
    6. 'return' → logprob: -8.06296157836914
    7. '   ' → logprob: -8.81296157836914
    8. '        
' → logprob: -8.81296157836914
    9. '	' → logprob: -9.06296157836914
    10. ')' → logprob: -9.31296157836914

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018699751235544682
    2. '
' → logprob: -7.501870155334473
    3. 'return' → logprob: -7.626870155334473
    4. '()' → logprob: -8.251870155334473
    5. '   ' → logprob: -8.876870155334473
    6. '        
' → logprob: -9.126870155334473
    7. '<|end|>' → logprob: -9.501870155334473
    8. ' return' → logprob: -9.626870155334473
    9. '    
' → logprob: -10.001870155334473
    10. '	' → logprob: -10.001870155334473

Token 335: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049205828458070755
    2. 'return' (adapté à ' return') → logprob: -3.174205780029297
    3. ' return' → logprob: -5.174205780029297
    4. '   ' → logprob: -8.674205780029297
    5. 'result' → logprob: -9.549205780029297
    6. '	' → logprob: -9.799205780029297
    7. '        
' → logprob: -9.799205780029297
    8. '	return' → logprob: -10.299205780029297
    9. '
' → logprob: -10.424205780029297
    10. '' → logprob: -10.799205780029297

Token 336: ' accumulator' (ID: 118458)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.04858884960412979
    2. ' accumulator' → logprob: -3.048588752746582
    3. '(acc' → logprob: -13.798588752746582
    4. ' accum' → logprob: -15.673588752746582
    5. '	acc' → logprob: -16.2985897064209
    6. '_acc' → logprob: -16.7985897064209
    7. 'self' → logprob: -16.7985897064209
    8. '   ' → logprob: -16.9235897064209
    9. ' acc' → logprob: -16.9235897064209
    10. 'Accumulator' → logprob: -17.7985897064209

Token 337: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -3.9054008084349334e-05
    2. '().' → logprob: -10.875039100646973
    3. '()
' → logprob: -11.750039100646973
    4. ' ()' → logprob: -12.000039100646973
    5. '()(' → logprob: -12.875039100646973
    6. '`()' → logprob: -13.875039100646973
    7. ']()' → logprob: -14.500039100646973
    8. '().__' → logprob: -15.000039100646973
    9. '|()
' → logprob: -15.250039100646973
    10. '(' → logprob: -15.500039100646973

Token 338: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: ' Input' (ID: 10090)
  Prédit: ' Conc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Conc' → logprob: -0.6473859548568726
    2. 'Conc' → logprob: -0.8973859548568726
    3. ' Triangle' → logprob: -3.397386074066162
    4. ' Point' → logprob: -4.022386074066162
    5. 'Triangle' → logprob: -5.522386074066162
    6. 'Point' → logprob: -6.147386074066162
    7. ' Non' → logprob: -6.522386074066162
    8. ' conc' → logprob: -6.522386074066162
    9. ' Polygon' → logprob: -6.647386074066162
    10. ' Star' → logprob: -6.647386074066162

Token 340: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.1673709750175476
    2. 'Reader' → logprob: -2.2923710346221924
    3. 'Parser' → logprob: -3.7923710346221924
    4. 'Processor' → logprob: -4.042370796203613
    5. 'Polygon' → logprob: -5.167370796203613
    6. 'Validator' → logprob: -5.667370796203613
    7. 'Manager' → logprob: -6.792370796203613
    8. 'Error' → logprob: -7.292370796203613
    9. 'Buffer' → logprob: -8.042370796203613
    10. 'Point' → logprob: -8.417370796203613

Token 341: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000331055314745754
    2. ':
' → logprob: -8.250330924987793
    3. '(' → logprob: -9.750330924987793
    4. '(Abstract' → logprob: -12.125330924987793
    5. ' :' → logprob: -13.000330924987793
    6. '():' → logprob: -13.500330924987793
    7. ':

' → logprob: -13.875330924987793
    8. '(object' → logprob: -15.375330924987793
    9. '(Parser' → logprob: -15.625330924987793
    10. '):' → logprob: -15.750330924987793

Token 342: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.036370325833559036
    2. '):' → logprob: -4.036370277404785
    3. 'object' → logprob: -4.411370277404785
    4. ')' → logprob: -5.661370277404785
    5. '):
' → logprob: -6.161370277404785
    6. ' ABC' → logprob: -9.411370277404785
    7. 'abc' → logprob: -9.661370277404785
    8. 'AB' → logprob: -10.161370277404785
    9. 'Object' → logprob: -10.411370277404785
    10. 'Abstract' → logprob: -10.536370277404785

Token 343: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16079014539718628
    2. '):
' → logprob: -1.910790205001831
    3. '):
' → logprob: -7.535789966583252
    4. ':' → logprob: -11.41079044342041
    5. ')' → logprob: -11.53579044342041
    6. '):

' → logprob: -11.66079044342041
    7. '   ' → logprob: -14.66079044342041
    8. ' ):' → logprob: -14.66079044342041
    9. '):

' → logprob: -14.66079044342041
    10. '```' → logprob: -15.16079044342041

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015514022670686245
    2. ':' → logprob: -6.751551628112793
    3. '<|end|>' → logprob: -9.251551628112793
    4. '    
' → logprob: -9.376551628112793
    5. ':
' → logprob: -9.501551628112793
    6. ')' → logprob: -10.001551628112793
    7. '):
' → logprob: -10.626551628112793
    8. '  ' → logprob: -11.126551628112793
    9. '
' → logprob: -11.376551628112793
    10. 'def' → logprob: -12.001551628112793

Token 345: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1488628089427948
    2. ' def' → logprob: -2.023862838745117
    3. 'def' → logprob: -5.273862838745117
    4. ' @' → logprob: -7.773862838745117
    5. '    
' → logprob: -8.523862838745117
    6. '    ' → logprob: -8.648862838745117
    7. '  ' → logprob: -9.523862838745117
    8. ' ' → logprob: -9.898862838745117
    9. '
' → logprob: -10.523862838745117
    10. '@' (adapté à ' @') → logprob: -10.523862838745117

Token 346: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.002022497123107314
    2. 'staticmethod' → logprob: -6.2520222663879395
    3. 'classmethod' → logprob: -9.377022743225098
    4. 'property' → logprob: -12.252022743225098
    5. 'abc' → logprob: -13.252022743225098
    6. 'static' → logprob: -13.752022743225098
    7. ' abstract' → logprob: -13.877022743225098
    8. 'ab' → logprob: -14.627022743225098
    9. 'abs' → logprob: -16.25202178955078
    10. 'class' → logprob: -16.75202178955078

Token 347: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -1.5094070477061905e-05
    2. '_method' → logprob: -11.375015258789062
    3. 'classmethod' → logprob: -13.125015258789062
    4. 'meth' → logprob: -13.875015258789062
    5. ' method' → logprob: -15.625015258789062
    6. 'abstract' → logprob: -15.750015258789062
    7. 'def' → logprob: -15.750015258789062
    8. 'staticmethod' → logprob: -16.125015258789062
    9. 'met' → logprob: -16.875015258789062
    10. 'ethod' → logprob: -17.625015258789062

Token 348: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03495794162154198
    2. '
' → logprob: -3.5349578857421875
    3. ' def' → logprob: -5.2849578857421875
    4. '   ' → logprob: -9.659957885742188
    5. '    
' → logprob: -9.909957885742188
    6. '\' → logprob: -12.409957885742188
    7. '  
' → logprob: -12.909957885742188
    8. '```' → logprob: -13.659957885742188
    9. '<|end|>' → logprob: -14.034957885742188
    10. '\
' → logprob: -14.159957885742188

Token 349: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004099773708730936
    2. ' def' → logprob: -5.5040998458862305
    3. '   ' → logprob: -11.12909984588623
    4. '
' → logprob: -12.00409984588623
    5. 'method' → logprob: -16.004098892211914
    6. '	def' → logprob: -16.129098892211914
    7. 'classmethod' → logprob: -16.254098892211914
    8. '    
' → logprob: -17.129098892211914
    9. 'staticmethod' → logprob: -17.379098892211914
    10. '  ' → logprob: -17.629098892211914

Token 350: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.11602488905191422
    2. 'staticmethod' → logprob: -2.616024971008301
    3. 'classmethod' → logprob: -3.741024971008301
    4. 'method' → logprob: -4.491024971008301
    5. 'abstract' → logprob: -6.616024971008301
    6. ' def' → logprob: -9.6160249710083
    7. 'property' → logprob: -9.7410249710083
    8. 'abc' → logprob: -10.1160249710083
    9. '
' → logprob: -12.3660249710083
    10. 'token' → logprob: -13.8660249710083

Token 351: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.048645615577697754
    2. ' parse' → logprob: -3.048645496368408
    3. 'read' → logprob: -9.923645973205566
    4. ' read' → logprob: -12.048645973205566
    5. 'def' → logprob: -13.548645973205566
    6. '	parse' → logprob: -14.798645973205566
    7. 'decode' → logprob: -15.173645973205566
    8. 'input' → logprob: -15.298645973205566
    9. 'par' → logprob: -16.04864501953125
    10. 'process' → logprob: -16.17364501953125

Token 352: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010306637705070898
    2. '(' → logprob: -10.125102996826172
    3. 'self' → logprob: -10.875102996826172
    4. '(s' → logprob: -10.875102996826172
    5. '_input' → logprob: -11.000102996826172
    6. '_line' → logprob: -13.250102996826172
    7. '_point' → logprob: -13.375102996826172
    8. '(
' → logprob: -13.500102996826172
    9. '(sel' → logprob: -14.000102996826172
    10. ' (' → logprob: -14.375102996826172

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035124069545418024
    2. 'self' → logprob: -6.753512382507324
    3. ')' → logprob: -6.878512382507324
    4. '):' → logprob: -7.003512382507324
    5. '_input' → logprob: -8.753512382507324
    6. ',input' → logprob: -9.378512382507324
    7. ' ,' → logprob: -10.003512382507324
    8. '_line' → logprob: -10.253512382507324
    9. 'input' → logprob: -10.503512382507324
    10. ',line' → logprob: -11.378512382507324

Token 354: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5171265602111816
    2. 'self' → logprob: -1.0171265602111816
    3. 'data' → logprob: -4.142126560211182
    4. ' input' → logprob: -4.392126560211182
    5. ' self' → logprob: -5.017126560211182
    6. ')' → logprob: -6.017126560211182
    7. 'text' → logprob: -6.642126560211182
    8. 'raw' → logprob: -6.892126560211182
    9. 'line' → logprob: -7.267126560211182
    10. 'lines' → logprob: -7.267126560211182

Token 355: '_lines' (ID: 42980)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.26023927330970764
    2. ':' → logprob: -1.7602392435073853
    3. '_data' → logprob: -3.885239362716675
    4. '_string' → logprob: -4.010239124298096
    5. '_line' → logprob: -4.385239124298096
    6. '_text' → logprob: -6.010239124298096
    7. ':str' → logprob: -6.260239124298096
    8. 'str' → logprob: -7.010239124298096
    9. ')' → logprob: -7.760239124298096
    10. '_:' → logprob: -9.260239601135254

Token 356: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.64708495605737e-05
    2. ')' → logprob: -9.875066757202148
    3. '):' → logprob: -11.250066757202148
    4. ' :' → logprob: -14.000066757202148
    5. '   ' → logprob: -15.125066757202148
    6. 'self' → logprob: -15.500066757202148
    7. '```' → logprob: -15.625066757202148
    8. ':str' → logprob: -16.37506675720215
    9. '):
' → logprob: -16.50006675720215
    10. '_:' → logprob: -16.50006675720215

Token 357: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0005947356694377959
    2. ' List' → logprob: -7.500594615936279
    3. ')' → logprob: -10.125595092773438
    4. '[List' → logprob: -14.125595092773438
    5. 'list' → logprob: -14.500595092773438
    6. 'str' → logprob: -15.000595092773438
    7. '	List' → logprob: -16.250595092773438
    8. '_list' → logprob: -18.125595092773438
    9. ' ' → logprob: -18.500595092773438
    10. '   ' → logprob: -18.500595092773438

Token 358: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -5.512236498361744e-07
    2. 'str' → logprob: -14.625000953674316
    3. ')' → logprob: -18.0
    4. '[' → logprob: -18.5
    5. '[
' → logprob: -20.75
    6. '[int' → logprob: -20.875
    7. ' str' → logprob: -21.125
    8. '(str' → logprob: -21.375
    9. '[String' → logprob: -21.5
    10. ':str' → logprob: -21.5

Token 359: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10023114830255508
    2. ')' → logprob: -2.350231170654297
    3. ' ])' → logprob: -11.350231170654297
    4. ']' → logprob: -12.850231170654297
    5. ''])' → logprob: -12.975231170654297
    6. ' )' → logprob: -13.475231170654297
    7. '）' → logprob: -13.850231170654297
    8. '"])' → logprob: -13.975231170654297
    9. '`)' → logprob: -13.975231170654297
    10. '   ' → logprob: -14.100231170654297

Token 360: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.18037189543247223
    2. '->' → logprob: -1.805371880531311
    3. ':' → logprob: -8.18037223815918
    4. ')' → logprob: -8.30537223815918
    5. ')->' → logprob: -10.05537223815918
    6. '   ' → logprob: -10.93037223815918
    7. '-' → logprob: -11.18037223815918
    8. '->[' → logprob: -11.18037223815918
    9. ' )->' → logprob: -13.18037223815918
    10. ' ' → logprob: -13.43037223815918

Token 361: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.24298815429210663
    2. 'Polygon' → logprob: -2.242988109588623
    3. ' List' → logprob: -2.367988109588623
    4. ' Polygon' → logprob: -4.367988109588623
    5. 'None' → logprob: -5.992988109588623
    6. ' None' → logprob: -8.367988586425781
    7. 'Conv' → logprob: -8.617988586425781
    8. 'Tuple' → logprob: -9.617988586425781
    9. 'list' → logprob: -9.617988586425781
    10. 'Point' → logprob: -9.992988586425781

Token 362: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.077528764260933e-05
    2. '[int' → logprob: -10.000081062316895
    3. '[List' → logprob: -11.000081062316895
    4. '[
' → logprob: -11.125081062316895
    5. '[str' → logprob: -14.500081062316895
    6. '[(' → logprob: -14.625081062316895
    7. 'Polygon' → logprob: -14.625081062316895
    8. ' [' → logprob: -15.125081062316895
    9. '<Point' → logprob: -15.500081062316895
    10. '[...]' → logprob: -15.500081062316895

Token 363: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.22953037917613983
    2. 'Polygon' → logprob: -2.2295303344726562
    3. 'float' → logprob: -2.9795303344726562
    4. 'Tuple' → logprob: -3.1045303344726562
    5. 'Conv' → logprob: -6.729530334472656
    6. 'List' → logprob: -8.229530334472656
    7. 'str' → logprob: -8.604530334472656
    8. 'int' → logprob: -10.479530334472656
    9. 'tuple' → logprob: -10.604530334472656
    10. ' float' → logprob: -10.979530334472656

Token 364: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.021297911182045937
    2. '):' → logprob: -4.396297931671143
    3. ']' → logprob: -4.896297931671143
    4. ']>' → logprob: -7.771297931671143
    5. ']):' → logprob: -8.146297454833984
    6. ']:
' → logprob: -8.521297454833984
    7. ':' → logprob: -8.521297454833984
    8. '   ' → logprob: -9.271297454833984
    9. '"]:' → logprob: -11.271297454833984
    10. ']:
' → logprob: -11.396297454833984

Token 365: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5988837480545044
    2. '<|end|>' → logprob: -0.8488837480545044
    3. '       ' → logprob: -4.223883628845215
    4. ' pass' → logprob: -5.723883628845215
    5. '    ' → logprob: -6.348883628845215
    6. ' ' → logprob: -6.723883628845215
    7. '  ' → logprob: -7.723883628845215
    8. '<|end|>' → logprob: -8.223883628845215
    9. '    
' → logprob: -8.348883628845215
    10. '...' → logprob: -8.348883628845215

Token 366: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21276813745498657
    2. ' pass' → logprob: -1.7127680778503418
    3. 'pass' (adapté à ' pass') → logprob: -4.587768077850342
    4. '   ' → logprob: -7.462768077850342
    5. '...' → logprob: -8.3377685546875
    6. ' ' → logprob: -9.3377685546875
    7. '    ' → logprob: -9.3377685546875
    8. '      ' → logprob: -10.3377685546875
    9. '	pass' → logprob: -10.4627685546875
    10. '  ' → logprob: -10.7127685546875

Token 367: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.043362703174352646
    2. '
' → logprob: -3.168362617492676
    3. '

' → logprob: -8.293362617492676
    4. '<|end|>' → logprob: -9.418362617492676
    5. ' class' → logprob: -10.668362617492676
    6. '<class' → logprob: -12.918362617492676
    7. '```' → logprob: -13.543362617492676
    8. '<|end|>' → logprob: -13.793362617492676
    9. '
' → logprob: -14.043362617492676
    10. '    
' → logprob: -14.168362617492676

Token 368: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0010931886499747634
    2. '
' → logprob: -7.50109338760376
    3. '<|end|>' → logprob: -7.62609338760376
    4. ' class' → logprob: -10.126092910766602
    5. '```' → logprob: -12.001092910766602
    6. '<class' → logprob: -12.626092910766602
    7. '

' → logprob: -13.876092910766602
    8. '<|end|>' → logprob: -14.126092910766602
    9. '"class' → logprob: -15.126092910766602
    10. '  
' → logprob: -15.251092910766602

Token 369: ' Csv' (ID: 158753)
  Prédit: 'CSV'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CSV' → logprob: -0.5764772295951843
    2. 'Simple' → logprob: -1.451477289199829
    3. 'Coordinate' → logprob: -2.576477289199829
    4. 'Cartesian' → logprob: -3.826477289199829
    5. ' CSV' → logprob: -3.951477289199829
    6. 'Text' → logprob: -4.20147705078125
    7. 'Point' → logprob: -4.45147705078125
    8. 'List' → logprob: -4.57647705078125
    9. ' Simple' → logprob: -4.57647705078125
    10. 'Csv' → logprob: -5.07647705078125

Token 370: 'Point' (ID: 4219)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.47409185767173767
    2. 'Parser' → logprob: -0.9740918874740601
    3. 'Point' → logprob: -11.474091529846191
    4. 'Line' → logprob: -13.349091529846191
    5. 'Reader' → logprob: -13.724091529846191
    6. 'Parse' → logprob: -13.974091529846191
    7. 'File' → logprob: -14.599091529846191
    8. ' Input' → logprob: -16.349092483520508
    9. 'Csv' → logprob: -17.224092483520508
    10. ' Parser' → logprob: -17.224092483520508

Token 371: 'Input' (ID: 3275)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.001171652227640152
    2. 'Input' → logprob: -6.751171588897705
    3. 'Reader' → logprob: -14.126172065734863
    4. 's' → logprob: -15.376172065734863
    5. 'Parse' → logprob: -15.501172065734863
    6. 'Point' → logprob: -15.501172065734863
    7. 'parser' → logprob: -17.376171112060547
    8. '_parser' → logprob: -18.126171112060547
    9. ' Parser' → logprob: -18.251171112060547
    10. 'Csv' → logprob: -18.251171112060547

Token 372: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.007381339557468891
    2. 'Input' → logprob: -5.507381439208984
    3. '(Input' → logprob: -5.757381439208984
    4. 'Reader' → logprob: -9.507381439208984
    5. '(Parser' → logprob: -10.132381439208984
    6. '(' → logprob: -11.507381439208984
    7. 'Processor' → logprob: -12.382381439208984
    8. 'Format' → logprob: -12.882381439208984
    9. 'Handler' → logprob: -13.382381439208984
    10. 'Formatter' → logprob: -13.882381439208984

Token 373: '(Input' (ID: 52522)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004353336524218321
    2. '(' → logprob: -6.0043535232543945
    3. '(Abstract' → logprob: -7.2543535232543945
    4. '(Input' → logprob: -7.7543535232543945
    5. ' :' → logprob: -7.8793535232543945
    6. '():' → logprob: -8.129353523254395
    7. '(C' → logprob: -10.379353523254395
    8. '(Parser' → logprob: -11.504353523254395
    9. '(I' → logprob: -12.379353523254395
    10. ':
' → logprob: -12.754353523254395

Token 374: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.008617881685495377
    2. 'Point' → logprob: -4.758617877960205
    3. 'parser' → logprob: -14.008618354797363
    4. '   ' → logprob: -14.633618354797363
    5. 'Points' → logprob: -14.883618354797363
    6. '_parser' → logprob: -15.133618354797363
    7. ')' → logprob: -15.133618354797363
    8. 'P' → logprob: -15.133618354797363
    9. 'Processor' → logprob: -15.508618354797363
    10. '```' → logprob: -15.758618354797363

Token 375: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001215475145727396
    2. '):
' → logprob: -6.75121545791626
    3. ':' → logprob: -10.751215934753418
    4. ')' → logprob: -11.001215934753418
    5. '   ' → logprob: -12.751215934753418
    6. ' ):' → logprob: -13.376215934753418
    7. '):
' → logprob: -13.501215934753418
    8. '():' → logprob: -14.376215934753418
    9. '):

' → logprob: -15.501215934753418
    10. ']:' → logprob: -16.3762149810791

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016555091366171837
    2. ' def' → logprob: -4.641555309295654
    3. 'def' → logprob: -5.016555309295654
    4. '    
' → logprob: -9.766554832458496
    5. '    ' → logprob: -10.141554832458496
    6. '
' → logprob: -10.266554832458496
    7. '	def' → logprob: -11.766554832458496
    8. '  ' → logprob: -12.516554832458496
    9. '```' → logprob: -13.766554832458496
    10. ':' → logprob: -13.891554832458496

Token 377: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2519422471523285
    2. ' def' → logprob: -1.5019422769546509
    3. '   ' → logprob: -11.25194263458252
    4. '	def' → logprob: -15.50194263458252
    5. '
' → logprob: -17.876941680908203
    6. '    ' → logprob: -19.376941680908203
    7. ' ' → logprob: -19.626941680908203
    8. 'class' → logprob: -20.001941680908203
    9. 'de' → logprob: -20.376941680908203
    10. '  ' → logprob: -21.001941680908203

Token 378: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.003578810952603817
    2. ' def' → logprob: -5.8785786628723145
    3. 'parse' → logprob: -7.2535786628723145
    4. ' ' → logprob: -9.753579139709473
    5. 'def' → logprob: -12.128579139709473
    6. ' ' → logprob: -13.753579139709473
    7. '_parse' → logprob: -14.503579139709473
    8. ' define' → logprob: -15.003579139709473
    9. '  ' → logprob: -16.253578186035156
    10. '_' → logprob: -16.503578186035156

Token 379: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.762356209335849e-05
    2. '(' → logprob: -10.37503719329834
    3. ' (' → logprob: -12.00003719329834
    4. 'self' → logprob: -15.87503719329834
    5. '   ' → logprob: -17.250038146972656
    6. '(s' → logprob: -17.750038146972656
    7. ' ' → logprob: -17.875038146972656
    8. '(
' → logprob: -18.000038146972656
    9. '(Self' → logprob: -18.375038146972656
    10. ' self' → logprob: -18.625038146972656

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007665063603781164
    2. ' ,' → logprob: -7.625766277313232
    3. 'self' → logprob: -8.37576675415039
    4. '       ' → logprob: -11.12576675415039
    5. '(self' → logprob: -11.75076675415039
    6. '   ' → logprob: -12.12576675415039
    7. ',self' → logprob: -12.12576675415039
    8. ')' → logprob: -12.25076675415039
    9. '_,' → logprob: -12.62576675415039
    10. ' self' → logprob: -13.50076675415039

Token 381: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3887287378311157
    2. 'input' → logprob: -1.1387287378311157
    3. 'self' → logprob: -6.763728618621826
    4. ' self' → logprob: -7.263728618621826
    5. ' ' → logprob: -15.388729095458984
    6. 'Input' → logprob: -16.263729095458984
    7. '_input' → logprob: -16.638729095458984
    8. '	input' → logprob: -16.888729095458984
    9. '   ' → logprob: -17.013729095458984
    10. 'inputs' → logprob: -17.513729095458984

Token 382: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -5.512236498361744e-07
    2. '_line' → logprob: -15.500000953674316
    3. '_' → logprob: -16.75
    4. '_strings' → logprob: -17.0
    5. '_points' → logprob: -17.375
    6. ')_' → logprob: -17.5
    7. ' _' → logprob: -17.5
    8. 'lines' → logprob: -17.75
    9. '```' → logprob: -18.625
    10. '_lin' → logprob: -18.625

Token 383: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10956932604312897
    2. ')' → logprob: -2.4845693111419678
    3. 'self' → logprob: -4.734569549560547
    4. '(self' → logprob: -5.109569549560547
    5. '):' → logprob: -5.859569549560547
    6. ' self' → logprob: -6.609569549560547
    7. '):
' → logprob: -7.984569549560547
    8. '   ' → logprob: -8.109569549560547
    9. '[self' → logprob: -8.359569549560547
    10. '       ' → logprob: -8.484569549560547

Token 384: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.04871999844908714
    2. ' List' → logprob: -3.048719882965088
    3. 'self' → logprob: -9.048720359802246
    4. '[List' → logprob: -11.423720359802246
    5. ' self' → logprob: -13.048720359802246
    6. ')' → logprob: -13.298720359802246
    7. 'list' → logprob: -15.423720359802246
    8. ' list' → logprob: -16.54871940612793
    9. '[self' → logprob: -17.79871940612793
    10. ' ' → logprob: -17.79871940612793

Token 385: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. ' [' → logprob: -17.0
    4. ')' → logprob: -17.25
    5. '   ' → logprob: -17.75
    6. 'str' → logprob: -18.625
    7. '[
' → logprob: -18.625
    8. '[String' → logprob: -18.875
    9. '[[' → logprob: -19.5
    10. '
' → logprob: -19.625

Token 386: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005363515811040998
    2. ')' → logprob: -7.6255364418029785
    3. ' ])' → logprob: -10.25053596496582
    4. '[str' → logprob: -12.00053596496582
    5. ']' → logprob: -12.25053596496582
    6. ']):' → logprob: -14.37553596496582
    7. ']):
' → logprob: -15.12553596496582
    8. '[' → logprob: -15.50053596496582
    9. '   ' → logprob: -15.62553596496582
    10. ']])' → logprob: -15.75053596496582

Token 387: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.3726799488067627
    2. '->' → logprob: -1.7476799488067627
    3. ':' → logprob: -1.9976799488067627
    4. ')' → logprob: -6.997679710388184
    5. ':
' → logprob: -8.872679710388184
    6. ')->' → logprob: -9.122679710388184
    7. '->[' → logprob: -9.872679710388184
    8. '   ' → logprob: -10.247679710388184
    9. '[' → logprob: -11.997679710388184
    10. ' :' → logprob: -12.622679710388184

Token 388: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0619816891849041
    2. ' List' → logprob: -2.811981678009033
    3. '[List' → logprob: -11.186982154846191
    4. '	List' → logprob: -16.936981201171875
    5. '[' → logprob: -17.186981201171875
    6. '   ' → logprob: -17.436981201171875
    7. ' ' → logprob: -17.686981201171875
    8. '(List' → logprob: -17.811981201171875
    9. '<List' → logprob: -18.436981201171875
    10. '_list' → logprob: -18.811981201171875

Token 389: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018155796453356743
    2. '[str' → logprob: -4.018155574798584
    3. '[List' → logprob: -12.768156051635742
    4. '<Point' → logprob: -13.393156051635742
    5. '[
' → logprob: -13.768156051635742
    6. 'Point' → logprob: -15.643156051635742
    7. ' [' → logprob: -16.018156051635742
    8. '(Point' → logprob: -16.018156051635742
    9. '[String' → logprob: -17.643156051635742
    10. '```' → logprob: -17.893156051635742

Token 390: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.9743012671824545e-05
    2. 'str' → logprob: -10.875020027160645
    3. 'float' → logprob: -14.750020027160645
    4. ' Point' → logprob: -15.125020027160645
    5. '	Point' → logprob: -18.125019073486328
    6. 'point' → logprob: -18.250019073486328
    7. 'Points' → logprob: -18.875019073486328
    8. '_Point' → logprob: -19.250019073486328
    9. '_point' → logprob: -19.625019073486328
    10. '(Point' → logprob: -19.750019073486328

Token 391: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6762253642082214
    2. ':' → logprob: -1.3012254238128662
    3. ']:' → logprob: -1.6762254238128662
    4. '):
' → logprob: -3.926225423812866
    5. ':
' → logprob: -5.176225185394287
    6. ']:
' → logprob: -6.051225185394287
    7. ')' → logprob: -6.051225185394287
    8. ']' → logprob: -6.551225185394287
    9. '   ' → logprob: -7.926225185394287
    10. '):
' → logprob: -8.676225662231445

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053668245673179626
    2. 'points' → logprob: -3.428668260574341
    3. ' points' → logprob: -3.928668260574341
    4. 'result' → logprob: -9.053668022155762
    5. '	points' → logprob: -11.678668022155762
    6. ' result' → logprob: -11.928668022155762
    7. 'vertices' → logprob: -12.678668022155762
    8. 'tokens' → logprob: -12.678668022155762
    9. 'parsed' → logprob: -12.928668022155762
    10. '(points' → logprob: -13.303668022155762

Token 393: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.03003510646522045
    2. ' points' → logprob: -3.5300350189208984
    3. '       ' → logprob: -8.780035018920898
    4. 'result' → logprob: -9.030035018920898
    5. 'vertices' → logprob: -12.280035018920898
    6. ' result' → logprob: -12.655035018920898
    7. '	points' → logprob: -13.905035018920898
    8. 'point' → logprob: -14.280035018920898
    9. 'return' → logprob: -14.530035018920898
    10. 'pts' → logprob: -15.530035018920898

Token 394: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47414126992225647
    2. '=' → logprob: -0.9741412401199341
    3. '=[]' → logprob: -10.099141120910645
    4. ':' → logprob: -10.724141120910645
    5. '=[]
' → logprob: -14.849141120910645
    6. ' ' → logprob: -15.474141120910645
    7. '.' → logprob: -16.09914207458496
    8. '[:]' → logprob: -16.09914207458496
    9. '   ' → logprob: -16.59914207458496
    10. '	' → logprob: -16.59914207458496

Token 395: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.4867739677429199
    2. '[]' → logprob: -0.9867739677429199
    3. ' []' → logprob: -4.73677396774292
    4. ' List' → logprob: -5.98677396774292
    5. '[List' → logprob: -6.73677396774292
    6. '=[]' → logprob: -8.986774444580078
    7. '=' → logprob: -11.736774444580078
    8. '[' → logprob: -11.986774444580078
    9. '[]=' → logprob: -12.611774444580078
    10. '[]
' → logprob: -12.861774444580078

Token 396: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.619311974034645e-05
    2. '=' → logprob: -10.375036239624023
    3. ' =' → logprob: -12.500036239624023
    4. '<Point' → logprob: -14.500036239624023
    5. 'Point' → logprob: -14.875036239624023
    6. '[
' → logprob: -16.000036239624023
    7. '=[]' → logprob: -16.375036239624023
    8. '(Point' → logprob: -17.625036239624023
    9. '=[]
' → logprob: -17.875036239624023
    10. ']' → logprob: -17.875036239624023

Token 397: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.1472419600977446e-06
    2. ' Point' → logprob: -13.750000953674316
    3. '	Point' → logprob: -20.125001907348633
    4. 'float' → logprob: -21.500001907348633
    5. '<Point' → logprob: -22.125001907348633
    6. '_point' → logprob: -22.125001907348633
    7. '_Point' → logprob: -22.625001907348633
    8. 'point' → logprob: -23.125001907348633
    9. '.Point' → logprob: -23.500001907348633
    10. ']' → logprob: -23.625001907348633

Token 398: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.9650025428272784e-05
    2. ']=' → logprob: -10.250040054321289
    3. '=' → logprob: -12.625040054321289
    4. ' ]' → logprob: -14.250040054321289
    5. ' =' → logprob: -15.250040054321289
    6. ')' → logprob: -17.62504005432129
    7. '[]' → logprob: -17.87504005432129
    8. '`]' → logprob: -18.25004005432129
    9. '[' → logprob: -18.37504005432129
    10. '']' → logprob: -19.25004005432129

Token 399: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193095207214355
    2. ' =' → logprob: -1.5019309520721436
    3. '=[]' → logprob: -13.626931190490723
    4. ' ' → logprob: -14.501931190490723
    5. '.clear' → logprob: -15.876931190490723
    6. '   ' → logprob: -17.251930236816406
    7. '=[]
' → logprob: -17.251930236816406
    8. '	' → logprob: -17.501930236816406
    9. '[]' → logprob: -17.876930236816406
    10. '  ' → logprob: -18.751930236816406

Token 400: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07931427657604218
    2. '[]
' → logprob: -2.5793142318725586
    3. ' []' → logprob: -8.079314231872559
    4. ' []
' → logprob: -9.079314231872559
    5. '[' → logprob: -15.204314231872559
    6. '[]

' → logprob: -15.204314231872559
    7. '[])' → logprob: -17.204315185546875
    8. '[])
' → logprob: -17.704315185546875
    9. '[]}' → logprob: -17.829315185546875
    10. '[
' → logprob: -18.079315185546875

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024096666311379522
    2. ' for' → logprob: -8.50024127960205
    3. 'for' → logprob: -10.25024127960205
    4. '   ' → logprob: -13.62524127960205
    5. '	for' → logprob: -14.62524127960205
    6. '	   ' → logprob: -15.12524127960205
    7. '	' → logprob: -15.50024127960205
    8. '      ' → logprob: -17.125240325927734
    9. '	       ' → logprob: -17.500240325927734
    10. '           ' → logprob: -17.625240325927734

Token 402: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001070323633030057
    2. '       ' → logprob: -7.001070499420166
    3. ' for' → logprob: -8.751070022583008
    4. '
' → logprob: -15.376070022583008
    5. '	for' → logprob: -15.626070022583008
    6. '   ' → logprob: -16.501070022583008
    7. '```' → logprob: -17.501070022583008
    8. '           ' → logprob: -19.751070022583008
    9. 'try' → logprob: -20.001070022583008
    10. ' ' → logprob: -20.251070022583008

Token 403: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.023245712742209435
    2. ' line' → logprob: -3.7732458114624023
    3. '	line' → logprob: -15.898245811462402
    4. '   ' → logprob: -17.273244857788086
    5. '(line' → logprob: -18.523244857788086
    6. ' ' → logprob: -18.523244857788086
    7. 'Line' → logprob: -18.648244857788086
    8. '_line' → logprob: -19.023244857788086
    9. '```' → logprob: -19.023244857788086
    10. '
' → logprob: -20.148244857788086

Token 404: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019313741941004992
    2. 'in' → logprob: -6.251931190490723
    3. ' ' → logprob: -14.376931190490723
    4. '	in' → logprob: -14.626931190490723
    5. 'import' → logprob: -15.126931190490723
    6. '       ' → logprob: -15.501931190490723
    7. '_in' → logprob: -15.501931190490723
    8. 's' → logprob: -15.876931190490723
    9. 'line' → logprob: -16.00193214416504
    10. '   ' → logprob: -16.12693214416504

Token 405: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889000326395035
    2. ' input' → logprob: -2.578890085220337
    3. '   ' → logprob: -16.328889846801758
    4. '	input' → logprob: -17.078889846801758
    5. ' ' → logprob: -17.578889846801758
    6. '(input' → logprob: -18.453889846801758
    7. '[input' → logprob: -18.828889846801758
    8. 'output' → logprob: -18.953889846801758
    9. '<input' → logprob: -18.953889846801758
    10. '=input' → logprob: -19.328889846801758

Token 406: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.664371848164592e-05
    2. 'lines' → logprob: -11.750016212463379
    3. '_' → logprob: -12.500016212463379
    4. '_line' → logprob: -13.250016212463379
    5. '_LINES' → logprob: -14.250016212463379
    6. '_.' → logprob: -14.250016212463379
    7. 'Lines' → logprob: -14.750016212463379
    8. '_
' → logprob: -15.000016212463379
    9. '.lines' → logprob: -15.125016212463379
    10. '_points' → logprob: -15.625016212463379

Token 407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029864808544516563
    2. ':
' → logprob: -4.27986478805542
    3. '.strip' → logprob: -4.27986478805542
    4. '.split' → logprob: -6.77986478805542
    5. '.' → logprob: -8.654865264892578
    6. '           ' → logprob: -8.904865264892578
    7. '       ' → logprob: -9.029865264892578
    8. ',' → logprob: -9.529865264892578
    9. '.rstrip' → logprob: -9.779865264892578
    10. '   ' → logprob: -12.029865264892578

Token 408: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.372294698550832e-06
    2. '            
' → logprob: -12.875009536743164
    3. 'tokens' → logprob: -13.500009536743164
    4. '          ' → logprob: -13.750009536743164
    5. ' parts' → logprob: -14.250009536743164
    6. '	       ' → logprob: -14.750009536743164
    7. '   ' → logprob: -14.875009536743164
    8. 'try' → logprob: -15.000009536743164
    9. 'parts' → logprob: -15.000009536743164
    10. 'strip' → logprob: -15.000009536743164

Token 409: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -1.072813868522644
    2. 'parts' → logprob: -1.322813868522644
    3. 'x' → logprob: -1.822813868522644
    4. ' parts' → logprob: -2.4478139877319336
    5. ' line' → logprob: -2.6978139877319336
    6. 'try' → logprob: -3.4478139877319336
    7. '           ' → logprob: -3.5728139877319336
    8. ' stripped' → logprob: -5.447813987731934
    9. ' x' → logprob: -5.947813987731934
    10. 'if' → logprob: -5.947813987731934

Token 410: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2018072009086609
    2. ' =' → logprob: -1.7018072605133057
    3. '.strip' → logprob: -8.576807022094727
    4. '=line' → logprob: -8.826807022094727
    5. '_strip' → logprob: -9.951807022094727
    6. '_str' → logprob: -12.951807022094727
    7. '.=' → logprob: -12.951807022094727
    8. '=str' → logprob: -13.701807022094727
    9. '_parts' → logprob: -13.826807022094727
    10. 'strip' → logprob: -14.201807022094727

Token 411: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01815006136894226
    2. ' line' → logprob: -4.0181498527526855
    3. '	line' → logprob: -16.643150329589844
    4. '=line' → logprob: -17.518150329589844
    5. '#line' → logprob: -18.143150329589844
    6. 'lin' → logprob: -18.643150329589844
    7. '(line' → logprob: -18.893150329589844
    8. ' ' → logprob: -19.518150329589844
    9. '[line' → logprob: -19.518150329589844
    10. 'Line' → logprob: -20.893150329589844

Token 412: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0007160080131143332
    2. '.' → logprob: -7.250716209411621
    3. 'strip' → logprob: -12.875716209411621
    4. '.rstrip' → logprob: -12.875716209411621
    5. '.trim' → logprob: -14.625716209411621
    6. ' .' → logprob: -15.125716209411621
    7. '.replace' → logprob: -15.750716209411621
    8. '.split' → logprob: -17.250715255737305
    9. '.l' → logprob: -17.500715255737305
    10. ' strip' → logprob: -19.125715255737305

Token 413: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5759782791137695
    2. '()
' → logprob: -0.8259782791137695
    3. '()

' → logprob: -10.95097827911377
    4. '()
' → logprob: -10.95097827911377
    5. '()\' → logprob: -13.32597827911377
    6. '           ' → logprob: -14.82597827911377
    7. '       ' → logprob: -15.07597827911377
    8. '())' → logprob: -15.45097827911377
    9. ' ()
' → logprob: -15.57597827911377
    10. '(),' → logprob: -15.70097827911377

Token 414: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1046876534819603
    2. 'if' → logprob: -2.3546876907348633
    3. ' if' → logprob: -5.479687690734863
    4. ',' → logprob: -8.479687690734863
    5. '            
' → logprob: -10.229687690734863
    6. 'tokens' → logprob: -10.479687690734863
    7. 'try' → logprob: -11.354687690734863
    8. 'parts' → logprob: -11.979687690734863
    9. 'points' → logprob: -13.354687690734863
    10. '          ' → logprob: -13.604687690734863

Token 415: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002238013403257355
    2. 'parts' → logprob: -8.875224113464355
    3. 'x' → logprob: -10.500224113464355
    4. ' if' → logprob: -10.750224113464355
    5. 'try' → logprob: -11.250224113464355
    6. 'coords' → logprob: -11.750224113464355
    7. '           ' → logprob: -12.125224113464355
    8. 'values' → logprob: -12.500224113464355
    9. '       ' → logprob: -13.000224113464355
    10. '   ' → logprob: -14.625224113464355

Token 416: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04318222403526306
    2. 'not' → logprob: -3.168182134628296
    3. ' line' → logprob: -9.043182373046875
    4. 'line' → logprob: -9.668182373046875
    5. ' ' → logprob: -14.543182373046875
    6. ' len' → logprob: -15.293182373046875
    7. 'len' → logprob: -15.418182373046875
    8. '	not' → logprob: -15.543182373046875
    9. 'n't' → logprob: -16.293182373046875
    10. ',' → logprob: -16.418182373046875

Token 417: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.38687291741371155
    2. ' line' → logprob: -1.1368728876113892
    3. '	line' → logprob: -14.011873245239258
    4. ' ' → logprob: -14.886873245239258
    5. 'Line' → logprob: -15.636873245239258
    6. '#line' → logprob: -16.011873245239258
    7. '(line' → logprob: -16.011873245239258
    8. 'li' → logprob: -17.261873245239258
    9. ' lin' → logprob: -17.261873245239258
    10. 'lin' → logprob: -17.386873245239258

Token 418: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.046684082597494125
    2. ' or' → logprob: -3.2966840267181396
    3. ':
' → logprob: -4.796684265136719
    4. 'or' → logprob: -8.421684265136719
    5. ':return' → logprob: -9.671684265136719
    6. '.' → logprob: -10.296684265136719
    7. '<|end|>' → logprob: -11.171684265136719
    8. '.startswith' → logprob: -11.796684265136719
    9. 'continue' → logprob: -13.046684265136719
    10. ' :' → logprob: -13.421684265136719

Token 419: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2686525583267212
    2. ':' → logprob: -2.0186524391174316
    3. 'continue' → logprob: -2.7686524391174316
    4. ' continue' → logprob: -3.5186524391174316
    5. ':
' → logprob: -4.768652439117432
    6. ' or' → logprob: -7.143652439117432
    7. '           ' → logprob: -7.268652439117432
    8. '	continue' → logprob: -9.39365291595459
    9. '   ' → logprob: -9.51865291595459
    10. ' continues' → logprob: -9.64365291595459

Token 420: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.011152983643114567
    2. ' continue' → logprob: -4.511153221130371
    3. '               ' → logprob: -9.261153221130371
    4. 'break' → logprob: -12.386153221130371
    5. '	continue' → logprob: -13.011153221130371
    6. '                   ' → logprob: -13.261153221130371
    7. '           ' → logprob: -13.511153221130371
    8. '_continue' → logprob: -15.386153221130371
    9. 'continu' → logprob: -15.511153221130371
    10. 'contin' → logprob: -15.511153221130371

Token 421: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1848050057888031
    2. ',' → logprob: -2.559804916381836
    3. '            
' → logprob: -3.059804916381836
    4. '
' → logprob: -3.309804916381836
    5. ',
' → logprob: -5.059804916381836
    6. '    
' → logprob: -7.934804916381836
    7. '        
' → logprob: -7.934804916381836
    8. ' 
' → logprob: -8.309804916381836
    9. '  
' → logprob: -8.934804916381836
    10. ' ,' → logprob: -9.184804916381836

Token 422: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012277275091037154
    2. ',' → logprob: -6.876227855682373
    3. '            
' → logprob: -8.751227378845215
    4. 'try' → logprob: -11.501227378845215
    5. ' ,' → logprob: -12.126227378845215
    6. ' try' → logprob: -12.501227378845215
    7. 'tokens' → logprob: -12.876227378845215
    8. '       ' → logprob: -13.126227378845215
    9. '          ' → logprob: -13.501227378845215
    10. ',
' → logprob: -13.626227378845215

Token 423: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.7640590667724609
    2. 'parts' → logprob: -0.7640590667724609
    3. 'try' → logprob: -2.764059066772461
    4. 'coords' → logprob: -5.639059066772461
    5. ' parts' → logprob: -7.139059066772461
    6. 'tokens' → logprob: -7.389059066772461
    7. '           ' → logprob: -8.889059066772461
    8. 'values' → logprob: -9.014059066772461
    9. 'components' → logprob: -9.764059066772461
    10. '            
' → logprob: -10.514059066772461

Token 424: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010036318562924862
    2. ',y' → logprob: -7.251003742218018
    3. ',x' → logprob: -8.62600326538086
    4. ' ,' → logprob: -11.00100326538086
    5. ',s' → logprob: -11.12600326538086
    6. ',value' → logprob: -11.25100326538086
    7. ',user' → logprob: -11.87600326538086
    8. '_str' → logprob: -12.00100326538086
    9. '_,' → logprob: -12.00100326538086
    10. '<|end|>' → logprob: -12.12600326538086

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003491705865599215
    2. ',x' → logprob: -8.125349044799805
    3. ' ,' → logprob: -10.625349044799805
    4. ',y' → logprob: -11.500349044799805
    5. '=' → logprob: -12.375349044799805
    6. ',s' → logprob: -13.000349044799805
    7. ',user' → logprob: -13.500349044799805
    8. ',value' → logprob: -13.625349044799805
    9. ',line' → logprob: -14.125349044799805
    10. ',b' → logprob: -14.500349044799805

Token 426: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47408509254455566
    2. ' y' → logprob: -0.9740850925445557
    3. '<|end|>' → logprob: -12.599084854125977
    4. ' ' → logprob: -12.724084854125977
    5. ',y' → logprob: -13.599084854125977
    6. '	y' → logprob: -14.974084854125977
    7. ')y' → logprob: -16.724084854125977
    8. '‘y' → logprob: -16.849084854125977
    9. '*y' → logprob: -17.349084854125977
    10. ''y' → logprob: -18.349084854125977

Token 427: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.26792383193969727
    2. ',' → logprob: -1.7679238319396973
    3. '_' → logprob: -3.2679238319396973
    4. '<|end|>' → logprob: -3.8929238319396973
    5. '_,' → logprob: -6.017923831939697
    6. ',_' → logprob: -6.517923831939697
    7. '=' → logprob: -7.267923831939697
    8. '<|end|>' → logprob: -8.142923355102539
    9. '_split' → logprob: -8.767923355102539
    10. '_token' → logprob: -9.017923355102539

Token 428: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004886920796707273
    2. ' =' → logprob: -7.625488758087158
    3. '=line' → logprob: -14.25048828125
    4. ',' → logprob: -17.37548828125
    5. '=
' → logprob: -17.37548828125
    6. '=

' → logprob: -17.50048828125
    7. '=user' → logprob: -19.25048828125
    8. '＝' → logprob: -19.37548828125
    9. ' ' → logprob: -19.50048828125
    10. '=}' → logprob: -19.75048828125

Token 429: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.47407835721969604
    2. 'line' → logprob: -0.974078357219696
    3. '[line' → logprob: -14.349078178405762
    4. '	line' → logprob: -15.224078178405762
    5. '=line' → logprob: -15.224078178405762
    6. 'map' → logprob: -16.724079132080078
    7. '(line' → logprob: -16.849079132080078
    8. ' ' → logprob: -16.974079132080078
    9. ' map' → logprob: -17.349079132080078
    10. '#line' → logprob: -17.849079132080078

Token 430: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00016885579680092633
    2. ' =' → logprob: -8.750168800354004
    3. '.split' → logprob: -12.000168800354004
    4. 'split' → logprob: -13.125168800354004
    5. '.=' → logprob: -13.750168800354004
    6. '=line' → logprob: -15.000168800354004
    7. '.' → logprob: -15.125168800354004
    8. ',' → logprob: -15.750168800354004
    9. '=
' → logprob: -16.00016975402832
    10. '=s' → logprob: -16.12516975402832

Token 431: '(',')
' (ID: 161318)
  Prédit: '(','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(',' → logprob: -0.11739972978830338
    2. '(' → logprob: -2.9923996925354004
    3. '(",' → logprob: -3.3673996925354004
    4. '(','' → logprob: -3.8673996925354004
    5. ',' → logprob: -5.6173996925354
    6. '(',',' → logprob: -6.7423996925354
    7. '(',')
' → logprob: -8.117400169372559
    8. '','' → logprob: -10.242400169372559
    9. '(","' → logprob: -10.617400169372559
    10. '(",",' → logprob: -11.117400169372559

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8533697724342346
    2. ' ' → logprob: -1.1033697128295898
    3. '            ' → logprob: -1.6033697128295898
    4. '               ' → logprob: -4.72836971282959
    5. '                ' → logprob: -5.22836971282959
    6. '            
' → logprob: -5.22836971282959
    7. '        ' → logprob: -5.60336971282959
    8. '    ' → logprob: -5.85336971282959
    9. ',' → logprob: -5.97836971282959
    10. ')' → logprob: -6.22836971282959

Token 433: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14703939855098724
    2. 'x' (adapté à ' x') → logprob: -2.0220394134521484
    3. ' points' → logprob: -6.397039413452148
    4. '           ' → logprob: -7.022039413452148
    5. ' try' → logprob: -7.147039413452148
    6. '       ' → logprob: -7.897039413452148
    7. 'points' → logprob: -7.897039413452148
    8. '        ' → logprob: -8.772039413452148
    9. 'try' → logprob: -9.647039413452148
    10. ' point' → logprob: -11.522039413452148

Token 434: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0029942207038402557
    2. ' =' → logprob: -6.127994060516357
    3. '=float' → logprob: -7.127994060516357
    4. ',' → logprob: -12.752994537353516
    5. '=int' → logprob: -13.627994537353516
    6. '=
' → logprob: -14.127994537353516
    7. '=

' → logprob: -14.752994537353516
    8. '_=' → logprob: -15.127994537353516
    9. '_float' → logprob: -16.002994537353516
    10. ')' → logprob: -16.127994537353516

Token 435: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00033546582562848926
    2. ' float' → logprob: -8.000335693359375
    3. '	float' → logprob: -19.250335693359375
    4. '   ' → logprob: -19.375335693359375
    5. '=float' → logprob: -19.875335693359375
    6. '(float' → logprob: -20.500335693359375
    7. 'flo' → logprob: -20.875335693359375
    8. '```' → logprob: -21.000335693359375
    9. '<float' → logprob: -21.750335693359375
    10. ',float' → logprob: -22.500335693359375

Token 436: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.662937372922897e-05
    2. 'x' → logprob: -9.500096321105957
    3. '(' → logprob: -10.750096321105957
    4. '(
' → logprob: -15.125096321105957
    5. ' x' → logprob: -18.625097274780273
    6. ' (' → logprob: -19.250097274780273
    7. '(trim' → logprob: -22.000097274780273
    8. '(

' → logprob: -22.125097274780273
    9. '(strip' → logprob: -22.125097274780273
    10. '((' → logprob: -22.250097274780273

Token 437: '_str' (ID: 6182)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006654949975199997
    2. 'x' → logprob: -8.000665664672852
    3. '(' → logprob: -8.250665664672852
    4. ')' → logprob: -10.625665664672852
    5. ' (' → logprob: -10.625665664672852
    6. '_str' → logprob: -11.125665664672852
    7. ')(' → logprob: -13.500665664672852
    8. ' x' → logprob: -14.250665664672852
    9. '(
' → logprob: -14.250665664672852
    10. '```' → logprob: -14.625665664672852

Token 438: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008881522342562675
    2. '.strip' → logprob: -4.758881568908691
    3. '(' → logprob: -9.258881568908691
    4. ')
' → logprob: -10.258881568908691
    5. ')x' → logprob: -10.508881568908691
    6. '<|end|>' → logprob: -10.508881568908691
    7. '(x' → logprob: -11.008881568908691
    8. '(strip' → logprob: -11.383881568908691
    9. '.trim' → logprob: -11.508881568908691
    10. ' )' → logprob: -11.758881568908691

Token 439: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0036105208564549685
    2. '())
' → logprob: -6.003610610961914
    3. '()' → logprob: -7.378610610961914
    4. ')' → logprob: -7.628610610961914
    5. '(' → logprob: -11.128610610961914
    6. '())

' → logprob: -12.253610610961914
    7. ' ())' → logprob: -13.628610610961914
    8. '()
' → logprob: -13.878610610961914
    9. '())
' → logprob: -14.128610610961914
    10. ' )' → logprob: -14.628610610961914

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6243838667869568
    2. 'y' → logprob: -0.9993838667869568
    3. ' y' → logprob: -2.3743839263916016
    4. '            ' → logprob: -6.124383926391602
    5. ' ' → logprob: -7.749383926391602
    6. ' ' → logprob: -7.749383926391602
    7. '               ' → logprob: -9.999383926391602
    8. '        ' → logprob: -10.624383926391602
    9. '          ' → logprob: -10.874383926391602
    10. '       ' → logprob: -11.249383926391602

Token 441: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.004078878089785576
    2. ' y' → logprob: -5.5040788650512695
    3. '           ' → logprob: -15.00407886505127
    4. '	y' → logprob: -16.504079818725586
    5. ' ' → logprob: -19.254079818725586
    6. '   ' → logprob: -19.379079818725586
    7. '       ' → logprob: -19.504079818725586
    8. '            ' → logprob: -20.004079818725586
    9. '               ' → logprob: -20.254079818725586
    10. '    ' → logprob: -20.254079818725586

Token 442: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10033595561981201
    2. ' =' → logprob: -2.3503360748291016
    3. '=float' → logprob: -9.725336074829102
    4. '<|end|>' → logprob: -9.725336074829102
    5. ' ' → logprob: -12.600336074829102
    6. '=str' → logprob: -13.100336074829102
    7. '=_' → logprob: -14.100336074829102
    8. '=int' → logprob: -14.350336074829102
    9. '=
' → logprob: -15.225336074829102
    10. '_=' → logprob: -15.350336074829102

Token 443: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00317783304490149
    2. ' float' → logprob: -5.753177642822266
    3. '=float' → logprob: -17.378177642822266
    4. '(float' → logprob: -17.503177642822266
    5. '<float' → logprob: -17.753177642822266
    6. '	float' → logprob: -18.378177642822266
    7. '_float' → logprob: -20.128177642822266
    8. ',float' → logprob: -20.253177642822266
    9. '.float' → logprob: -20.628177642822266
    10. 'Float' → logprob: -20.878177642822266

Token 444: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4018101096153259
    2. '(y' → logprob: -1.7768101692199707
    3. ' y' → logprob: -2.0268101692199707
    4. 'float' → logprob: -3.7768101692199707
    5. '(float' → logprob: -5.026810169219971
    6. ' float' → logprob: -8.901809692382812
    7. '(' → logprob: -9.151809692382812
    8. ' (' → logprob: -9.151809692382812
    9. '(
' → logprob: -10.276809692382812
    10. '<|end|>' → logprob: -10.276809692382812

Token 445: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -7.231182826217264e-05
    2. '_' → logprob: -10.125072479248047
    3. 'str' → logprob: -10.875072479248047
    4. 'Str' → logprob: -12.625072479248047
    5. '<|end|>' → logprob: -12.875072479248047
    6. ')' → logprob: -13.375072479248047
    7. 's' → logprob: -13.375072479248047
    8. '.strip' → logprob: -13.875072479248047
    9. '.strptime' → logprob: -14.250072479248047
    10. '_STR' → logprob: -14.375072479248047

Token 446: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0012860676506534219
    2. '.' → logprob: -6.751286029815674
    3. ' .' → logprob: -9.751286506652832
    4. ').' → logprob: -11.001286506652832
    5. '_str' → logprob: -11.251286506652832
    6. '.strptime' → logprob: -12.001286506652832
    7. 'strip' → logprob: -12.126286506652832
    8. ')' → logprob: -12.376286506652832
    9. '.trim' → logprob: -12.501286506652832
    10. '().' → logprob: -13.251286506652832

Token 447: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003520277969073504
    2. ')
' → logprob: -8.000351905822754
    3. '()' → logprob: -12.000351905822754
    4. '())' → logprob: -12.125351905822754
    5. ' )' → logprob: -12.375351905822754
    6. ')
' → logprob: -15.625351905822754
    7. '))' → logprob: -16.12535285949707
    8. '       ' → logprob: -16.37535285949707
    9. ')`' → logprob: -16.37535285949707
    10. ')

' → logprob: -16.75035285949707

Token 448: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.0590548703912646e-05
    2. ' points' → logprob: -11.000030517578125
    3. 'points' → logprob: -12.500030517578125
    4. '       ' → logprob: -12.875030517578125
    5. ',' → logprob: -13.625030517578125
    6. '<|end|>' → logprob: -13.625030517578125
    7. '
' → logprob: -13.750030517578125
    8. '            
' → logprob: -13.875030517578125
    9. '	points' → logprob: -14.375030517578125
    10. '               ' → logprob: -14.750030517578125

Token 449: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.02326202020049095
    2. ' points' → logprob: -3.7732620239257812
    3. '           ' → logprob: -11.273262023925781
    4. 'point' → logprob: -12.648262023925781
    5. '	points' → logprob: -15.148262023925781
    6. '       ' → logprob: -15.898262023925781
    7. 'p' → logprob: -16.39826202392578
    8. '
' → logprob: -17.52326202392578
    9. ' point' → logprob: -17.77326202392578
    10. '(points' → logprob: -18.14826202392578

Token 450: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.8789383830153383e-05
    2. '.' → logprob: -11.000019073486328
    3. '.ap' → logprob: -14.250019073486328
    4. '.app' → logprob: -14.375019073486328
    5. '.add' → logprob: -14.625019073486328
    6. '.push' → logprob: -15.375019073486328
    7. '.extend' → logprob: -16.375019073486328
    8. ').' → logprob: -17.125019073486328
    9. '.Append' → logprob: -18.125019073486328
    10. '.py' → logprob: -18.875019073486328

Token 451: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: 0.0
    2. '(' → logprob: -17.5
    3. 'Point' → logprob: -17.5
    4. ' Point' → logprob: -19.0
    5. '	Point' → logprob: -21.5
    6. '(P' → logprob: -22.25
    7. '(
' → logprob: -22.875
    8. '.Point' → logprob: -24.125
    9. ' (' → logprob: -24.5
    10. '(Person' → logprob: -24.625

Token 452: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006843122653663158
    2. '(' → logprob: -5.006843090057373
    3. 'x' → logprob: -9.131843566894531
    4. '(
' → logprob: -10.881843566894531
    5. ')' → logprob: -15.006843566894531
    6. ')x' → logprob: -15.131843566894531
    7. ' (' → logprob: -15.756843566894531
    8. '(

' → logprob: -17.38184356689453
    9. '(
' → logprob: -17.88184356689453
    10. '	x' → logprob: -18.25684356689453

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027301779482513666
    2. ',y' → logprob: -8.250272750854492
    3. ' ,' → logprob: -11.750272750854492
    4. ',
' → logprob: -12.625272750854492
    5. ',x' → logprob: -15.250272750854492
    6. ',

' → logprob: -16.375272750854492
    7. '<|end|>' → logprob: -17.125272750854492
    8. ')' → logprob: -17.250272750854492
    9. '‌,' → logprob: -17.250272750854492
    10. 'y' → logprob: -17.750272750854492

Token 454: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1002068892121315
    2. ' y' → logprob: -2.3502068519592285
    3. '	y' → logprob: -15.975207328796387
    4. ')y' → logprob: -16.22520637512207
    5. ' ' → logprob: -18.10020637512207
    6. '    ' → logprob: -18.85020637512207
    7. '   ' → logprob: -19.22520637512207
    8. '
' → logprob: -19.35020637512207
    9. '<|end|>' → logprob: -19.47520637512207
    10. ' ' → logprob: -19.97520637512207

Token 455: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005164555623196065
    2. ')' → logprob: -8.000516891479492
    3. '))
' → logprob: -8.625516891479492
    4. ' ))' → logprob: -14.125516891479492
    5. ')
' → logprob: -15.000516891479492
    6. '),' → logprob: -16.000516891479492
    7. '));' → logprob: -16.000516891479492
    8. ')))' → logprob: -16.125516891479492
    9. '))

' → logprob: -16.250516891479492
    10. ' ' → logprob: -18.000516891479492

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013291679788380861
    2. 'return' → logprob: -7.001328945159912
    3. ' return' → logprob: -7.876328945159912
    4. '	' → logprob: -11.37632942199707
    5. '
' → logprob: -11.50132942199707
    6. '   ' → logprob: -11.75132942199707
    7. '	return' → logprob: -12.25132942199707
    8. '        
' → logprob: -13.37632942199707
    9. '      ' → logprob: -14.12632942199707
    10. '<|end|>' → logprob: -14.62632942199707

Token 457: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2661020755767822
    2. 'return' (adapté à ' return') → logprob: -1.5161020755767822
    3. ' return' → logprob: -4.266101837158203
    4. '   ' → logprob: -10.766101837158203
    5. '	return' → logprob: -11.391101837158203
    6. '
' → logprob: -13.266101837158203
    7. '	' → logprob: -13.391101837158203
    8. '        
' → logprob: -15.141101837158203
    9. '      ' → logprob: -15.641101837158203
    10. '```' → logprob: -15.891101837158203

Token 458: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.029750484973192215
    2. ' points' → logprob: -3.5297505855560303
    3. 'point' → logprob: -17.40475082397461
    4. '	points' → logprob: -17.77975082397461
    5. '(points' → logprob: -18.02975082397461
    6. 'Points' → logprob: -19.27975082397461
    7. '_points' → logprob: -22.02975082397461
    8. '.points' → logprob: -22.15475082397461
    9. 'oints' → logprob: -22.27975082397461
    10. 'p' → logprob: -22.90475082397461

Token 459: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6979017853736877
    2. '<|end|>' → logprob: -0.6979017853736877
    3. '
' → logprob: -5.822901725769043
    4. '```' → logprob: -7.072901725769043
    5. '<|end|>' → logprob: -7.822901725769043
    6. '#' → logprob: -8.197901725769043
    7. ' class' → logprob: -9.072901725769043
    8. 'import' → logprob: -10.697901725769043
    9. '<class' → logprob: -10.822901725769043
    10. 'from' → logprob: -11.072901725769043

Token 460: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0016941038193181157
    2. '<|end|>' → logprob: -6.501694202423096
    3. ' class' → logprob: -9.501693725585938
    4. '```' → logprob: -9.751693725585938
    5. '
' → logprob: -11.001693725585938
    6. '<|end|>' → logprob: -11.626693725585938
    7. '<class' → logprob: -11.751693725585938
    8. '#' → logprob: -12.001693725585938
    9. 'import' → logprob: -12.251693725585938
    10. 'def' → logprob: -12.376693725585938

Token 461: ' Area' (ID: 17049)
  Prédit: 'Json'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Json' → logprob: -0.33439183235168457
    2. ' Json' → logprob: -1.5843918323516846
    3. 'Polygon' → logprob: -3.7093918323516846
    4. 'Text' → logprob: -4.5843915939331055
    5. 'Txt' → logprob: -4.8343915939331055
    6. ' Txt' → logprob: -4.9593915939331055
    7. ' Polygon' → logprob: -5.3343915939331055
    8. 'Std' → logprob: -5.4593915939331055
    9. 'Sys' → logprob: -5.4593915939331055
    10. 'Space' → logprob: -6.3343915939331055

Token 462: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.0036890320479869843
    2. 'Computer' → logprob: -5.628688812255859
    3. 'Estimator' → logprob: -10.00368881225586
    4. 'Polygon' → logprob: -11.37868881225586
    5. 'Evaluator' → logprob: -11.50368881225586
    6. 'Command' → logprob: -12.12868881225586
    7. 'Printer' → logprob: -12.87868881225586
    8. 'Calc' → logprob: -13.37868881225586
    9. 'Finder' → logprob: -13.37868881225586
    10. 'Calcul' → logprob: -13.37868881225586

Token 463: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5772031545639038
    2. ':' → logprob: -0.8272031545639038
    3. ':
' → logprob: -7.202203273773193
    4. '(Abstract' → logprob: -7.702203273773193
    5. '(P' → logprob: -10.827202796936035
    6. '(C' → logprob: -11.702202796936035
    7. ' :' → logprob: -12.077202796936035
    8. '(Collider' → logprob: -12.327202796936035
    9. '():' → logprob: -13.077202796936035
    10. '(Constructor' → logprob: -13.202202796936035

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031039085239171982
    2. ' def' → logprob: -3.531038999557495
    3. 'def' → logprob: -6.656039237976074
    4. '	def' → logprob: -13.656039237976074
    5. '   ' → logprob: -15.906039237976074
    6. '```' → logprob: -16.656038284301758
    7. ' ' → logprob: -17.281038284301758
    8. '    
' → logprob: -17.531038284301758
    9. '    ' → logprob: -17.781038284301758
    10. '  ' → logprob: -18.156038284301758

Token 465: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12721386551856995
    2. ' def' → logprob: -2.127213954925537
    3. '   ' → logprob: -8.252213478088379
    4. '@' → logprob: -10.627213478088379
    5. ' @' → logprob: -14.377213478088379
    6. '	def' → logprob: -15.877213478088379
    7. ' ' → logprob: -16.252214431762695
    8. 'class' → logprob: -17.002214431762695
    9. '__' → logprob: -17.127214431762695
    10. '@property' → logprob: -17.752214431762695

Token 466: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.5857870578765869
    2. ' __' → logprob: -0.8357870578765869
    3. ' init' → logprob: -5.085786819458008
    4. '__' → logprob: -5.710786819458008
    5. ' def' → logprob: -8.710786819458008
    6. 'def' → logprob: -9.585786819458008
    7. '_init' → logprob: -10.085786819458008
    8. 'staticmethod' → logprob: -10.585786819458008
    9. 'classmethod' → logprob: -14.335786819458008
    10. ' _' → logprob: -14.460786819458008

Token 467: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'call' → logprob: -16.25
    3. ' init' → logprob: -18.25
    4. 'new' → logprob: -18.5
    5. '_init' → logprob: -18.75
    6. '   ' → logprob: -20.0
    7. '```' → logprob: -20.0
    8. 'def' → logprob: -20.5
    9. '	init' → logprob: -21.375
    10. 'int' → logprob: -21.5

Token 468: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.42705056071281433
    2. '__(' → logprob: -1.4270505905151367
    3. '(' → logprob: -2.3020505905151367
    4. ' (' → logprob: -5.677050590515137
    5. '__(
' → logprob: -6.052050590515137
    6. 'self' → logprob: -7.177050590515137
    7. '<|end|>' → logprob: -8.177050590515137
    8. '__' → logprob: -8.427050590515137
    9. ' ' → logprob: -9.052050590515137
    10. '(
' → logprob: -9.677050590515137

Token 469: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.339278580620885e-06
    2. ' self' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '       ' → logprob: -15.500001907348633
    5. ')' → logprob: -15.625001907348633
    6. '
' → logprob: -15.750001907348633
    7. 'parser' → logprob: -17.750001907348633
    8. '(self' → logprob: -18.125001907348633
    9. '	self' → logprob: -19.375001907348633
    10. '0' → logprob: -19.500001907348633

Token 470: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5386103391647339
    2. ',' → logprob: -1.0386103391647339
    3. '(self' → logprob: -2.7886104583740234
    4. ' self' → logprob: -7.663610458374023
    5. ' (' → logprob: -8.288610458374023
    6. '__(' → logprob: -8.788610458374023
    7. ',self' → logprob: -9.788610458374023
    8. '(' → logprob: -11.038610458374023
    9. '   ' → logprob: -11.288610458374023
    10. '
' → logprob: -11.788610458374023

Token 471: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.3005371391773224
    2. 'parser' → logprob: -1.425537109375
    3. ' parser' → logprob: -4.675537109375
    4. ' polygon' → logprob: -5.175537109375
    5. 'pol' → logprob: -6.300537109375
    6. 'input' → logprob: -6.425537109375
    7. 'point' → logprob: -8.300537109375
    8. 'points' → logprob: -8.425537109375
    9. ' polygons' → logprob: -8.425537109375
    10. ' input' → logprob: -9.925537109375

Token 472: '_class' (ID: 10602)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026346342638134956
    2. '):' → logprob: -6.002634525299072
    3. ')' → logprob: -9.75263500213623
    4. '_:' → logprob: -10.37763500213623
    5. '_class' → logprob: -11.12763500213623
    6. '_type' → logprob: -11.12763500213623
    7. ' :' → logprob: -11.12763500213623
    8. '_cls' → logprob: -11.87763500213623
    9. ' ):' → logprob: -12.12763500213623
    10. '_factory' → logprob: -12.62763500213623

Token 473: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011335222981870174
    2. ':' → logprob: -4.886335372924805
    3. ')' → logprob: -6.136335372924805
    4. '):
' → logprob: -6.511335372924805
    5. ' ):' → logprob: -10.636335372924805
    6. '=' → logprob: -10.886335372924805
    7. ',' → logprob: -11.136335372924805
    8. ' :' → logprob: -12.386335372924805
    9. '):
' → logprob: -12.886335372924805
    10. ' ' → logprob: -12.886335372924805

Token 474: ' type' (ID: 1490)
  Prédit: 'Conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Conv' → logprob: -0.043199919164180756
    2. 'Polygon' → logprob: -3.5432000160217285
    3. 'type' → logprob: -4.7932000160217285
    4. ' Conv' → logprob: -5.4182000160217285
    5. ' type' → logprob: -7.9182000160217285
    6. 'Type' → logprob: -9.04319953918457
    7. ' Polygon' → logprob: -9.16819953918457
    8. ')' → logprob: -10.66819953918457
    9. 'conv' → logprob: -12.04319953918457
    10. 'Callable' → logprob: -12.16819953918457

Token 475: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11733029037714005
    2. '):
' → logprob: -2.242330312728882
    3. ')' → logprob: -5.492330074310303
    4. '[' → logprob: -8.742330551147461
    5. ',' → logprob: -8.992330551147461
    6. '):

' → logprob: -10.742330551147461
    7. ' ):' → logprob: -10.867330551147461
    8. '):
' → logprob: -10.992330551147461
    9. '(' → logprob: -11.367330551147461
    10. '=' → logprob: -11.742330551147461

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035963427275419235
    2. ',' → logprob: -4.035963535308838
    3. 'self' → logprob: -5.160963535308838
    4. '   ' → logprob: -5.660963535308838
    5. ' self' → logprob: -5.660963535308838
    6. ':' → logprob: -6.160963535308838
    7. '(self' → logprob: -7.160963535308838
    8. '(' → logprob: -7.660963535308838
    9. ')' → logprob: -7.660963535308838
    10. ' (' → logprob: -8.41096305847168

Token 477: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011916247196495533
    2. '       ' → logprob: -5.011916160583496
    3. ' self' → logprob: -5.261916160583496
    4. '   ' → logprob: -13.261916160583496
    5. '	self' → logprob: -15.136916160583496
    6. '(self' → logprob: -17.261917114257812
    7. ' ' → logprob: -17.261917114257812
    8. '     ' → logprob: -18.761917114257812
    9. '=self' → logprob: -19.136917114257812
    10. '           ' → logprob: -19.261917114257812

Token 478: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0034002673346549273
    2. '.pol' → logprob: -6.3784003257751465
    3. '.' → logprob: -6.5034003257751465
    4. 'polygon' → logprob: -9.003399848937988
    5. ' .' → logprob: -10.253399848937988
    6. '   ' → logprob: -11.503399848937988
    7. '.poly' → logprob: -11.503399848937988
    8. ' polygon' → logprob: -11.628399848937988
    9. '._' → logprob: -12.628399848937988
    10. '_polygon' → logprob: -13.378399848937988

Token 479: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -4.723352049040841e-06
    2. 'ol' → logprob: -13.125004768371582
    3. 'polygon' → logprob: -13.500004768371582
    4. 'oly' → logprob: -13.875004768371582
    5. '_polygon' → logprob: -15.125004768371582
    6. 'o' → logprob: -18.375003814697266
    7. ' polygon' → logprob: -18.375003814697266
    8. '   ' → logprob: -18.750003814697266
    9. '```' → logprob: -19.250003814697266
    10. '_' → logprob: -19.375003814697266

Token 480: '_class' (ID: 10602)
  Prédit: '_class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -6.704273118884885e-07
    2. '_cls' → logprob: -15.125000953674316
    3. 'class' → logprob: -15.625000953674316
    4. '_' → logprob: -16.0
    5. '_type' → logprob: -17.0
    6. 'Class' → logprob: -17.875
    7. '_classes' → logprob: -18.75
    8. '<class' → logprob: -18.875
    9. '_Class' → logprob: -19.25
    10. '   ' → logprob: -19.375

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889232039451599
    2. ' =' → logprob: -2.578892230987549
    3. ' ' → logprob: -12.953892707824707
    4. '   ' → logprob: -15.578892707824707
    5. ',' → logprob: -17.07889175415039
    6. '=self' → logprob: -17.20389175415039
    7. '=p' → logprob: -17.32889175415039
    8. '  ' → logprob: -17.45389175415039
    9. '    ' → logprob: -17.95389175415039
    10. '=
' → logprob: -18.07889175415039

Token 482: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.0031804447062313557
    2. ' polygon' → logprob: -5.753180503845215
    3. 'pol' → logprob: -13.503180503845215
    4. 'poly' → logprob: -13.503180503845215
    5. '_polygon' → logprob: -17.7531795501709
    6. 'polar' → logprob: -18.3781795501709
    7. 'Polygon' → logprob: -19.1281795501709
    8. 'olygon' → logprob: -20.8781795501709
    9. 'p' → logprob: -22.0031795501709
    10. ' polygons' → logprob: -22.0031795501709

Token 483: '_class' (ID: 10602)
  Prédit: '_class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -13.000004768371582
    3. 'class' → logprob: -13.125004768371582
    4. 'Class' → logprob: -15.500004768371582
    5. ')' → logprob: -16.1250057220459
    6. '<class' → logprob: -16.3750057220459
    7. '_CLASS' → logprob: -16.8750057220459
    8. '_classes' → logprob: -17.0000057220459
    9. '_Class' → logprob: -17.0000057220459
    10. 'classmethod' → logprob: -18.1250057220459

Token 484: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6434721350669861
    2. '   ' → logprob: -1.0184721946716309
    3. '    
' → logprob: -2.643472194671631
    4. '<|end|>' → logprob: -3.643472194671631
    5. 'def' → logprob: -4.768472194671631
    6. '  
' → logprob: -5.643472194671631
    7. '<|end|>' → logprob: -6.768472194671631
    8. ' def' → logprob: -6.893472194671631
    9. ' 
' → logprob: -7.393472194671631
    10. '

' → logprob: -7.893472194671631

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03608565405011177
    2. 'def' → logprob: -4.161085605621338
    3. '
' → logprob: -4.661085605621338
    4. '    
' → logprob: -5.286085605621338
    5. '<|end|>' → logprob: -5.536085605621338
    6. ' def' → logprob: -7.036085605621338
    7. '<|end|>' → logprob: -8.786086082458496
    8. '  
' → logprob: -9.036086082458496
    9. '        
' → logprob: -9.536086082458496
    10. '	def' → logprob: -10.161086082458496

Token 486: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02095780521631241
    2. '
' → logprob: -4.645957946777344
    3. ' def' → logprob: -5.145957946777344
    4. '   ' → logprob: -5.270957946777344
    5. '    
' → logprob: -9.145957946777344
    6. '	def' → logprob: -11.145957946777344
    7. '

' → logprob: -11.770957946777344
    8. '        
' → logprob: -11.770957946777344
    9. ':' → logprob: -11.895957946777344
    10. ' ' → logprob: -12.020957946777344

Token 487: ' compute' (ID: 23864)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.581870973110199
    2. 'calculate' → logprob: -0.831870973110199
    3. ' compute' → logprob: -5.331871032714844
    4. 'compute' → logprob: -6.831871032714844
    5. 'calc' → logprob: -16.956871032714844
    6. '.calculate' → logprob: -17.956871032714844
    7. 'read' → logprob: -18.206871032714844
    8. 'run' → logprob: -18.581871032714844
    9. ' run' → logprob: -18.581871032714844
    10. '__' → logprob: -19.081871032714844

Token 488: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.006751970387995243
    2. '(self' → logprob: -5.006752014160156
    3. 'area' → logprob: -10.506752014160156
    4. '(' → logprob: -12.256752014160156
    5. 'Area' → logprob: -13.631752014160156
    6. ' area' → logprob: -13.756752014160156
    7. '(area' → logprob: -13.881752014160156
    8. '_' → logprob: -14.006752014160156
    9. '_AREA' → logprob: -16.256752014160156
    10. 'self' → logprob: -16.381752014160156

Token 489: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.3596853831550106e-05
    2. '(' → logprob: -10.000053405761719
    3. ' (' → logprob: -11.750053405761719
    4. 'self' → logprob: -16.00005340576172
    5. '(
' → logprob: -16.00005340576172
    6. '(s' → logprob: -16.87505340576172
    7. '   ' → logprob: -17.62505340576172
    8. ' self' → logprob: -18.12505340576172
    9. '(sel' → logprob: -18.50005340576172
    10. ' ' → logprob: -19.50005340576172

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.76628842484206e-05
    2. 'self' → logprob: -9.750067710876465
    3. ' ,' → logprob: -11.750067710876465
    4. ',self' → logprob: -13.750067710876465
    5. ',input' → logprob: -15.875067710876465
    6. '(self' → logprob: -16.62506675720215
    7. ',p' → logprob: -17.12506675720215
    8. 'from' → logprob: -17.87506675720215
    9. ',line' → logprob: -18.00006675720215
    10. '_,' → logprob: -18.37506675720215

Token 491: ' points' (ID: 5571)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.119851253926754
    2. 'points' → logprob: -2.6198513507843018
    3. ' self' → logprob: -3.6198513507843018
    4. ' points' → logprob: -4.494851112365723
    5. 'vertices' → logprob: -6.244851112365723
    6. ' vertices' → logprob: -9.244851112365723
    7. 'input' → logprob: -9.494851112365723
    8. 'coordinates' → logprob: -10.744851112365723
    9. ' input' → logprob: -11.619851112365723
    10. '(self' → logprob: -11.994851112365723

Token 492: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006742015480995178
    2. '):' → logprob: -5.006742000579834
    3. ')' → logprob: -10.881742477416992
    4. ' ):' → logprob: -12.256742477416992
    5. ' :' → logprob: -13.631742477416992
    6. '):
' → logprob: -13.881742477416992
    7. ' )' → logprob: -15.381742477416992
    8. '}:' → logprob: -16.131742477416992
    9. '：' → logprob: -16.256742477416992
    10. '```' → logprob: -16.381742477416992

Token 493: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.011147208511829376
    2. ' List' → logprob: -4.5111470222473145
    3. ')' → logprob: -9.261147499084473
    4. 'list' → logprob: -13.261147499084473
    5. '[List' → logprob: -13.261147499084473
    6. ' list' → logprob: -15.261147499084473
    7. ' )' → logprob: -15.636147499084473
    8. 'self' → logprob: -15.761147499084473
    9. '_list' → logprob: -16.261146545410156
    10. '	List' → logprob: -16.636146545410156

Token 494: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. 'Point' → logprob: -15.625000953674316
    3. ')' → logprob: -16.0
    4. '[
' → logprob: -16.625
    5. '<Point' → logprob: -16.875
    6. '```' → logprob: -18.0
    7. '
' → logprob: -18.75
    8. ']' → logprob: -19.0
    9. '):
' → logprob: -19.25
    10. '(Point' → logprob: -19.25

Token 495: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.9361264946837764e-07
    2. ' Point' → logprob: -16.125
    3. '[' → logprob: -19.625
    4. '	Point' → logprob: -19.875
    5. '<Point' → logprob: -21.5
    6. '(Point' → logprob: -23.25
    7. '.Point' → logprob: -23.375
    8. '_Point' → logprob: -23.625
    9. 'Points' → logprob: -24.0
    10. 'float' → logprob: -24.125

Token 496: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003595376620069146
    2. '):' → logprob: -8.000359535217285
    3. ' )' → logprob: -11.250359535217285
    4. '):
' → logprob: -12.000359535217285
    5. '   ' → logprob: -12.750359535217285
    6. ')->' → logprob: -13.250359535217285
    7. ':' → logprob: -16.6253604888916
    8. '       ' → logprob: -17.1253604888916
    9. ' ):' → logprob: -17.1253604888916
    10. '`)' → logprob: -17.1253604888916

Token 497: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008713211864233017
    2. ':
' → logprob: -7.250871181488037
    3. '->' → logprob: -9.125871658325195
    4. ' ->' → logprob: -10.625871658325195
    5. '):' → logprob: -11.125871658325195
    6. ')' → logprob: -12.375871658325195
    7. '       ' → logprob: -13.250871658325195
    8. ':return' → logprob: -13.250871658325195
    9. ' :' → logprob: -13.500871658325195
    10. '   ' → logprob: -13.625871658325195

Token 498: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02630506083369255
    2. ' float' → logprob: -3.6513049602508545
    3. '	float' → logprob: -13.901305198669434
    4. '(float' → logprob: -14.026305198669434
    5. 'None' → logprob: -14.151305198669434
    6. 'flo' → logprob: -14.526305198669434
    7. '   ' → logprob: -14.651305198669434
    8. '       ' → logprob: -15.026305198669434
    9. '```' → logprob: -15.776305198669434
    10. 'self' → logprob: -15.776305198669434

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06200510635972023
    2. ':
' → logprob: -2.812005043029785
    3. '       ' → logprob: -10.562005043029785
    4. ':
' → logprob: -12.062005043029785
    5. '):
' → logprob: -13.187005043029785
    6. '):' → logprob: -13.937005043029785
    7. ':

' → logprob: -14.062005043029785
    8. '():
' → logprob: -14.562005043029785
    9. '   ' → logprob: -14.687005043029785
    10. ':return' → logprob: -14.687005043029785

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.301394023466855e-05
    2. '   ' → logprob: -10.750062942504883
    3. '        
' → logprob: -11.625062942504883
    4. ' return' → logprob: -12.000062942504883
    5. '    ' → logprob: -12.000062942504883
    6. '      ' → logprob: -12.500062942504883
    7. ':' → logprob: -12.750062942504883
    8. '     ' → logprob: -13.375062942504883
    9. '           ' → logprob: -13.500062942504883
    10. ' ' → logprob: -13.500062942504883

Token 501: ' polygon' (ID: 65081)
  Prédit: ' polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' polygon' → logprob: -0.504637598991394
    2. 'polygon' (adapté à ' polygon') → logprob: -1.004637598991394
    3. '       ' → logprob: -3.5046377182006836
    4. 'poly' → logprob: -11.754637718200684
    5. 'pol' → logprob: -11.754637718200684
    6. 'return' → logprob: -12.004637718200684
    7. ' if' → logprob: -12.004637718200684
    8. ' return' → logprob: -12.504637718200684
    9. 'if' → logprob: -13.004637718200684
    10. '_polygon' → logprob: -13.504637718200684

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759397745132446
    2. '=' → logprob: -0.8259397745132446
    3. '   ' → logprob: -15.575940132141113
    4. '=self' → logprob: -16.325939178466797
    5. '_instance' → logprob: -16.700939178466797
    6. ' ' → logprob: -16.825939178466797
    7. '_class' → logprob: -17.825939178466797
    8. '=p' → logprob: -18.450939178466797
    9. '  ' → logprob: -18.575939178466797
    10. '    ' → logprob: -18.825939178466797

Token 503: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132617771625519
    2. 'self' → logprob: -1.3132617473602295
    3. '	self' → logprob: -16.938261032104492
    4. '       ' → logprob: -17.188261032104492
    5. '(self' → logprob: -18.188261032104492
    6. ' ' → logprob: -20.563261032104492
    7. '[self' → logprob: -20.688261032104492
    8. '=self' → logprob: -20.688261032104492
    9. '        ' → logprob: -21.313261032104492
    10. ' ' → logprob: -22.313261032104492

Token 504: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.1472419600977446e-06
    2. 'polygon' → logprob: -14.250000953674316
    3. '.pol' → logprob: -15.000000953674316
    4. '.' → logprob: -17.625001907348633
    5. ' polygon' → logprob: -17.625001907348633
    6. '_polygon' → logprob: -19.000001907348633
    7. 'olygon' → logprob: -19.250001907348633
    8. '.poly' → logprob: -19.375001907348633
    9. ' .' → logprob: -19.750001907348633
    10. '	p' → logprob: -20.750001907348633

Token 505: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.00014132341311778873
    2. 'ol' → logprob: -9.750141143798828
    3. 'polygon' → logprob: -9.750141143798828
    4. 'oly' → logprob: -10.625141143798828
    5. '_polygon' → logprob: -15.500141143798828
    6. 'ly' → logprob: -16.750141143798828
    7. 'p' → logprob: -17.875141143798828
    8. ' polygon' → logprob: -18.000141143798828
    9. 'o' → logprob: -18.250141143798828
    10. '   ' → logprob: -18.250141143798828

Token 506: '_class' (ID: 10602)
  Prédit: '_class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -2.7968066206085496e-05
    2. 'class' → logprob: -10.500027656555176
    3. 'Class' → logprob: -15.125027656555176
    4. 'self' → logprob: -17.500028610229492
    5. '<class' → logprob: -18.500028610229492
    6. ' class' → logprob: -19.375028610229492
    7. '_CLASS' → logprob: -19.625028610229492
    8. '   ' → logprob: -19.750028610229492
    9. '._' → logprob: -19.875028610229492
    10. 'classmethod' → logprob: -20.125028610229492

Token 507: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. '(vertices' → logprob: -16.375
    4. 'points' → logprob: -18.5
    5. '(point' → logprob: -18.5
    6. '(p' → logprob: -19.0
    7. ' (' → logprob: -19.75
    8. '(parts' → logprob: -20.375
    9. ' points' → logprob: -20.75
    10. '(
' → logprob: -21.375

Token 508: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.500003814697266
    3. ' )' → logprob: -16.125003814697266
    4. ')

' → logprob: -18.000003814697266
    5. ')return' → logprob: -18.625003814697266
    6. ')
' → logprob: -19.125003814697266
    7. ')`' → logprob: -19.125003814697266
    8. '))' → logprob: -19.375003814697266
    9. '),' → logprob: -20.250003814697266
    10. ' ' → logprob: -20.625003814697266

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011284325737506151
    2. 'return' → logprob: -7.001128196716309
    3. ' return' → logprob: -8.876128196716309
    4. '
' → logprob: -9.626128196716309
    5. '	return' → logprob: -12.876128196716309
    6. '.return' → logprob: -13.251128196716309
    7. '	' → logprob: -13.376128196716309
    8. ')return' → logprob: -13.751128196716309
    9. '   ' → logprob: -14.001128196716309
    10. '.' → logprob: -14.376128196716309

Token 510: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.77627644513268e-06
    2. ' return' → logprob: -12.000008583068848
    3. '       ' → logprob: -13.500008583068848
    4. '
' → logprob: -13.750008583068848
    5. '	return' → logprob: -18.625009536743164
    6. '
' → logprob: -19.000009536743164
    7. '        
' → logprob: -19.125009536743164
    8. 'area' → logprob: -19.250009536743164
    9. 'result' → logprob: -19.375009536743164
    10. '```' → logprob: -21.125009536743164

Token 511: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.474078506231308
    2. ' polygon' → logprob: -0.9740785360336304
    3. 'poly' → logprob: -13.974078178405762
    4. 'pol' → logprob: -14.349078178405762
    5. ' polygons' → logprob: -18.474079132080078
    6. '_polygon' → logprob: -18.474079132080078
    7. 'polar' → logprob: -18.849079132080078
    8. 'olygon' → logprob: -19.099079132080078
    9. 'Polygon' → logprob: -19.724079132080078
    10. ' poly' → logprob: -20.474079132080078

Token 512: '.area' (ID: 78128)
  Prédit: '.area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.area' → logprob: -7.493430894101039e-05
    2. '.' → logprob: -9.500075340270996
    3. ' .' → logprob: -17.37507438659668
    4. '.Area' → logprob: -17.62507438659668
    5. 'area' → logprob: -18.37507438659668
    6. '.are' → logprob: -19.62507438659668
    7. ' area' → logprob: -20.12507438659668
    8. ').' → logprob: -20.37507438659668
    9. '.angle' → logprob: -21.75007438659668
    10. '.amount' → logprob: -21.75007438659668

Token 513: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10103680938482285
    2. '<|end|>' → logprob: -2.351036787033081
    3. '\n' → logprob: -8.35103702545166
    4. '

' → logprob: -8.47603702545166
    5. '<|end|>' → logprob: -8.85103702545166
    6. '```' → logprob: -9.10103702545166
    7. '#' → logprob: -10.72603702545166
    8. '    
' → logprob: -10.85103702545166
    9. '
    
' → logprob: -10.97603702545166
    10. '   ' → logprob: -10.97603702545166

Token 514: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4534049928188324
    2. 'class' → logprob: -1.7034050226211548
    3. 'def' → logprob: -1.7034050226211548
    4. 'import' → logprob: -8.203405380249023
    5. '#' → logprob: -9.578405380249023
    6. ' if' → logprob: -10.328405380249023
    7. '```' → logprob: -10.953405380249023
    8. '
' → logprob: -11.703405380249023
    9. 'input' → logprob: -11.828405380249023
    10. 'from' → logprob: -12.953405380249023

Token 515: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.000712074339389801
    2. 'main' → logprob: -7.250711917877197
    3. ' parse' → logprob: -13.875712394714355
    4. ' read' → logprob: -15.125712394714355
    5. '	main' → logprob: -15.125712394714355
    6. ' run' → logprob: -15.250712394714355
    7. '__' → logprob: -16.25071144104004
    8. ' __' → logprob: -16.37571144104004
    9. '_main' → logprob: -16.62571144104004
    10. ' calculate' → logprob: -16.87571144104004

Token 516: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.1054253011243418e-05
    2. ' ():' → logprob: -11.250020980834961
    3. '():
' → logprob: -12.000020980834961
    4. '()' → logprob: -13.625020980834961
    5. '(argv' → logprob: -15.375020980834961
    6. '(' → logprob: -15.375020980834961
    7. '(args' → logprob: -16.37502098083496
    8. '():
' → logprob: -17.12502098083496
    9. '_' → logprob: -18.62502098083496
    10. '(argc' → logprob: -19.25002098083496

Token 517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05290928855538368
    2. ' import' → logprob: -3.4279093742370605
    3. 'import' → logprob: -4.0529093742370605
    4. ' input' → logprob: -6.8029093742370605
    5. 'input' → logprob: -8.177908897399902
    6. ' try' → logprob: -8.927908897399902
    7. 'try' → logprob: -10.052908897399902
    8. ' lines' → logprob: -10.177908897399902
    9. '```' → logprob: -10.677908897399902
    10. '   ' → logprob: -11.052908897399902

Token 518: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.3317282795906067
    2. ' input' → logprob: -1.331728219985962
    3. ' lines' → logprob: -4.831728458404541
    4. '   ' → logprob: -4.956728458404541
    5. 'lines' → logprob: -6.581728458404541
    6. 'if' → logprob: -6.831728458404541
    7. 'import' → logprob: -7.706728458404541
    8. ' if' → logprob: -8.206727981567383
    9. ' import' → logprob: -9.956727981567383
    10. ' parser' → logprob: -11.331727981567383

Token 519: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00016825977945700288
    2. '_data' → logprob: -8.875167846679688
    3. '_' → logprob: -11.125167846679688
    4. '_text' → logprob: -12.875167846679688
    5. '_line' → logprob: -12.875167846679688
    6. ' =' → logprob: -13.000167846679688
    7. '_points' → logprob: -13.375167846679688
    8. 'lines' → logprob: -13.500167846679688
    9. '=_' → logprob: -14.125167846679688
    10. '=' → logprob: -14.125167846679688

Token 520: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014186978340149
    2. '=' → logprob: -1.7014186382293701
    3. '=sys' → logprob: -13.45141887664795
    4. '=[]' → logprob: -13.82641887664795
    5. ' ' → logprob: -14.07641887664795
    6. '   ' → logprob: -14.45141887664795
    7. '_' → logprob: -14.82641887664795
    8. '[:]' → logprob: -15.20141887664795
    9. ':' → logprob: -15.45141887664795
    10. '	' → logprob: -15.57641887664795

Token 521: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4742163419723511
    2. ' sys' → logprob: -0.9742163419723511
    3. '[' → logprob: -9.22421646118164
    4. ' [' → logprob: -10.22421646118164
    5. '	sys' → logprob: -12.84921646118164
    6. '(sys' → logprob: -13.84921646118164
    7. '=sys' → logprob: -14.59921646118164
    8. ' ' → logprob: -15.84921646118164
    9. '   ' → logprob: -15.97421646118164
    10. '[]' → logprob: -16.59921646118164

Token 522: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.869639476761222e-05
    2. '.argv' → logprob: -10.375039100646973
    3. '.' → logprob: -11.875039100646973
    4. '.std' → logprob: -16.125038146972656
    5. '.stdout' → logprob: -16.125038146972656
    6. 'stdin' → logprob: -16.875038146972656
    7. '._' → logprob: -17.500038146972656
    8. ' .' → logprob: -17.750038146972656
    9. '.st' → logprob: -18.000038146972656
    10. '.stderr' → logprob: -18.375038146972656

Token 523: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.01490074023604393
    2. '.read' → logprob: -4.2649006843566895
    3. '.readline' → logprob: -7.2649006843566895
    4. '.' → logprob: -10.514901161193848
    5. 'read' → logprob: -11.514901161193848
    6. '().' → logprob: -17.01490020751953
    7. ' .' → logprob: -17.13990020751953
    8. '```' → logprob: -17.76490020751953
    9. '_read' → logprob: -18.38990020751953
    10. '	read' → logprob: -18.38990020751953

Token 524: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00026181264547631145
    2. '()' → logprob: -8.250262260437012
    3. 'lines' → logprob: -15.375262260437012
    4. '(' → logprob: -15.875262260437012
    5. ' ().' → logprob: -16.500261306762695
    6. '_lines' → logprob: -16.500261306762695
    7. '()
' → logprob: -17.875261306762695
    8. '.split' → logprob: -18.125261306762695
    9. '()

' → logprob: -19.750261306762695
    10. '()`' → logprob: -19.750261306762695

Token 525: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07889936864376068
    2. 'split' → logprob: -2.578899383544922
    3. 'decode' → logprob: -11.953899383544922
    4. 'rstrip' → logprob: -12.828899383544922
    5. 'read' → logprob: -15.453899383544922
    6. 'lines' → logprob: -16.078899383544922
    7. '```' → logprob: -16.078899383544922
    8. '(split' → logprob: -17.203899383544922
    9. 'trip' → logprob: -18.078899383544922
    10. '(strip' → logprob: -18.078899383544922

Token 526: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003179855877533555
    2. '()' → logprob: -5.753180027008057
    3. '()
' → logprob: -13.128179550170898
    4. '()

' → logprob: -16.8781795501709
    5. ' ().' → logprob: -16.8781795501709
    6. '()\' → logprob: -17.5031795501709
    7. '(' → logprob: -17.7531795501709
    8. '()`' → logprob: -18.0031795501709
    9. 'split' → logprob: -18.1281795501709
    10. '.' → logprob: -18.8781795501709

Token 527: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.75
    3. 'spl' → logprob: -18.875
    4. '(split' → logprob: -19.5
    5. 'sp' → logprob: -20.625
    6. 's' → logprob: -21.75
    7. '.split' → logprob: -22.0
    8. '```' → logprob: -22.25
    9. 'strip' → logprob: -22.375
    10. '   ' → logprob: -23.125

Token 528: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.023448003455996513
    2. 'lines' → logprob: -3.7734479904174805
    3. '("\' → logprob: -8.52344799041748
    4. '()' → logprob: -13.02344799041748
    5. '('' → logprob: -13.64844799041748
    6. '(' → logprob: -14.89844799041748
    7. '()\' → logprob: -18.023448944091797
    8. ''\' → logprob: -18.148448944091797
    9. '(\' → logprob: -19.023448944091797
    10. '()
' → logprob: -19.023448944091797

Token 529: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2664456789934775e-06
    2. '\n' → logprob: -13.625000953674316
    3. 'newline' → logprob: -19.500001907348633
    4. 'lines' → logprob: -19.875001907348633
    5. '\' → logprob: -20.125001907348633
    6. ' n' → logprob: -20.125001907348633
    7. '
' → logprob: -20.625001907348633
    8. ''\' → logprob: -21.625001907348633
    9. '```' → logprob: -22.125001907348633
    10. '	n' → logprob: -22.375001907348633

Token 530: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.023275645449757576
    2. ')' → logprob: -3.77327561378479
    3. '")' → logprob: -10.898275375366211
    4. ']' → logprob: -12.148275375366211
    5. '')
' → logprob: -12.398275375366211
    6. '')"' → logprob: -14.398275375366211
    7. ''' → logprob: -15.023275375366211
    8. '   ' → logprob: -15.023275375366211
    9. '']' → logprob: -15.273275375366211
    10. '')
' → logprob: -15.398275375366211

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033860031981021166
    2. 'parser' → logprob: -5.7533860206604
    3. ' parser' → logprob: -8.753385543823242
    4. 'points' → logprob: -11.128385543823242
    5. 'try' → logprob: -11.378385543823242
    6. '	parser' → logprob: -11.503385543823242
    7. '    
' → logprob: -12.253385543823242
    8. 'if' → logprob: -12.878385543823242
    9. '_parser' → logprob: -13.253385543823242
    10. '   ' → logprob: -13.378385543823242

Token 532: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.00010115911572938785
    2. 'try' → logprob: -9.375101089477539
    3. 'if' → logprob: -12.000101089477539
    4. ' parser' → logprob: -12.125101089477539
    5. 'csv' → logprob: -13.000101089477539
    6. '
' → logprob: -14.250101089477539
    7. 'points' → logprob: -14.500101089477539
    8. 'input' → logprob: -14.750101089477539
    9. '   ' → logprob: -14.875101089477539
    10. 'point' → logprob: -15.500101089477539

Token 533: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004620353225618601
    2. '=' → logprob: -5.379620552062988
    3. ' =
' → logprob: -17.379619598388672
    4. ' ' → logprob: -18.129619598388672
    5. ':' → logprob: -18.504619598388672
    6. '<|end|>' → logprob: -18.879619598388672
    7. ' =
' → logprob: -19.129619598388672
    8. ' ' → logprob: -19.504619598388672
    9. '_' → logprob: -19.629619598388672
    10. 's' → logprob: -19.754619598388672

Token 534: ' Csv' (ID: 158753)
  Prédit: 'Csv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Csv' → logprob: -9.615255839889869e-05
    2. ' Csv' → logprob: -9.250096321105957
    3. 'CSV' → logprob: -17.50009536743164
    4. 'Cv' → logprob: -19.00009536743164
    5. '   ' → logprob: -19.75009536743164
    6. 'Css' → logprob: -21.25009536743164
    7. 'csv' → logprob: -21.37509536743164
    8. 'Conv' → logprob: -21.50009536743164
    9. 'Cs' → logprob: -21.75009536743164
    10. '
' → logprob: -21.87509536743164

Token 535: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. 'Poi' → logprob: -19.875
    3. '<Point' → logprob: -20.0
    4. ' Point' → logprob: -20.125
    5. '.Point' → logprob: -20.125
    6. '	Point' → logprob: -20.5
    7. 'Po' → logprob: -20.5
    8. '_point' → logprob: -20.75
    9. '_Point' → logprob: -20.75
    10. 'Points' → logprob: -21.0

Token 536: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. 'Point' → logprob: -16.875
    3. '	Input' → logprob: -19.375
    4. 'Inp' → logprob: -19.875
    5. '<Input' → logprob: -20.125
    6. ' Input' → logprob: -20.125
    7. '_input' → logprob: -20.75
    8. '\Input' → logprob: -21.5
    9. 'In' → logprob: -21.625
    10. '_INPUT' → logprob: -21.75

Token 537: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -4.320199877838604e-07
    2. 'parser' → logprob: -15.0
    3. '_parser' → logprob: -19.25
    4. 'Processor' → logprob: -20.75
    5. '-parser' → logprob: -21.125
    6. ' Parser' → logprob: -21.25
    7. ' parser' → logprob: -21.375
    8. 'Parse' → logprob: -22.25
    9. '   ' → logprob: -22.375
    10. '.Parser' → logprob: -22.875

Token 538: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01711210235953331
    2. '   ' → logprob: -4.3921122550964355
    3. '()
' → logprob: -5.3921122550964355
    4. '(points' → logprob: -11.267111778259277
    5. '()
' → logprob: -11.392111778259277
    6. ' points' → logprob: -12.267111778259277
    7. '()\' → logprob: -12.517111778259277
    8. 'points' → logprob: -14.017111778259277
    9. '  ' → logprob: -14.142111778259277
    10. '    
' → logprob: -14.267111778259277

Token 539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18590019643306732
    2. 'points' → logprob: -1.9359002113342285
    3. ' points' → logprob: -3.6859002113342285
    4. '	points' → logprob: -8.68589973449707
    5. '    
' → logprob: -9.56089973449707
    6. '
' → logprob: -10.81089973449707
    7. '(points' → logprob: -12.68589973449707
    8. '_points' → logprob: -12.68589973449707
    9. '       ' → logprob: -12.81089973449707
    10. '   ' → logprob: -13.18589973449707

Token 540: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -1.5451681974809617e-05
    2. ' points' → logprob: -11.250015258789062
    3. 'try' → logprob: -13.250015258789062
    4. '	points' → logprob: -15.125015258789062
    5. 'vertices' → logprob: -15.375015258789062
    6. '   ' → logprob: -16.875015258789062
    7. '_points' → logprob: -17.125015258789062
    8. '    
' → logprob: -18.000015258789062
    9. '(points' → logprob: -18.500015258789062
    10. 'Points' → logprob: -18.875015258789062

Token 541: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196768581867218
    2. '=' → logprob: -2.811967611312866
    3. '＝' → logprob: -17.811967849731445
    4. ' =)' → logprob: -18.186967849731445
    5. '.' → logprob: -18.436967849731445
    6. '=parse' → logprob: -19.061967849731445
    7. ' ' → logprob: -19.061967849731445
    8. ' =
' → logprob: -19.061967849731445
    9. '.=' → logprob: -19.561967849731445
    10. ')' → logprob: -19.686967849731445

Token 542: ' parser' (ID: 14216)
  Prédit: ' parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.5759397745132446
    2. 'parser' → logprob: -0.8259397745132446
    3. '(parser' → logprob: -15.575940132141113
    4. '	parser' → logprob: -15.950940132141113
    5. 'parse' → logprob: -18.700939178466797
    6. '.parser' → logprob: -19.075939178466797
    7. '   ' → logprob: -19.950939178466797
    8. 'Parser' → logprob: -20.700939178466797
    9. '/parser' → logprob: -21.325939178466797
    10. '_parser' → logprob: -21.825939178466797

Token 543: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -1.723973582556937e-05
    2. '.' → logprob: -11.000017166137695
    3. 'parse' → logprob: -14.750017166137695
    4. ' .' → logprob: -16.750017166137695
    5. '=parse' → logprob: -17.250017166137695
    6. '.Parse' → logprob: -18.500017166137695
    7. ' parse' → logprob: -20.000017166137695
    8. '_parse' → logprob: -20.125017166137695
    9. '.par' → logprob: -20.750017166137695
    10. '.decode' → logprob: -21.375017166137695

Token 544: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -16.25
    4. '(in' → logprob: -18.375
    5. '(output' → logprob: -18.75
    6. '(
' → logprob: -19.125
    7. '(import' → logprob: -19.625
    8. ',input' → logprob: -19.625
    9. '(inputs' → logprob: -20.125
    10. '(inp' → logprob: -20.25

Token 545: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -12.375005722045898
    3. ')_' → logprob: -15.375005722045898
    4. '_points' → logprob: -15.500005722045898
    5. '```' → logprob: -15.750005722045898
    6. ' _' → logprob: -16.1250057220459
    7. 's' → logprob: -16.1250057220459
    8. '   ' → logprob: -16.2500057220459
    9. 'lines' → logprob: -16.6250057220459
    10. ')' → logprob: -17.2500057220459

Token 546: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.625
    5. '))' → logprob: -18.75
    6. ')

' → logprob: -20.25
    7. ')`' → logprob: -20.25
    8. '),' → logprob: -21.0
    9. ' ' → logprob: -21.125
    10. '())' → logprob: -21.125

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06431116908788681
    2. 'calculator' → logprob: -3.0643112659454346
    3. 'area' → logprob: -5.6893110275268555
    4. '
' → logprob: -5.6893110275268555
    5. ' calculator' → logprob: -5.9393110275268555
    6. ' if' → logprob: -6.3143110275268555
    7. ' area' → logprob: -6.3143110275268555
    8. 'calc' → logprob: -6.5643110275268555
    9. ' calc' → logprob: -7.9393110275268555
    10. 'if' → logprob: -8.564311027526855

Token 548: ' calculator' (ID: 44484)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' (adapté à ' calculator') → logprob: -0.00047654795343987644
    2. ' calculator' → logprob: -8.000476837158203
    3. 'calc' → logprob: -9.000476837158203
    4. 'area' → logprob: -11.375476837158203
    5. 'if' → logprob: -12.375476837158203
    6. '   ' → logprob: -13.500476837158203
    7. 'Calculator' → logprob: -15.500476837158203
    8. ' if' → logprob: -15.625476837158203
    9. 'calcul' → logprob: -16.250476837158203
    10. ' calc' → logprob: -16.500476837158203

Token 549: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004083385691046715
    2. '=' → logprob: -5.504083156585693
    3. '.' → logprob: -12.254083633422852
    4. '.=' → logprob: -16.37908363342285
    5. '.calculate' → logprob: -18.25408363342285
    6. ' ' → logprob: -18.25408363342285
    7. ' =)' → logprob: -19.00408363342285
    8. ' =
' → logprob: -19.12908363342285
    9. '   ' → logprob: -19.25408363342285
    10. ')' → logprob: -19.25408363342285

Token 550: ' Area' (ID: 17049)
  Prédit: ' Area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Area' → logprob: -0.16022412478923798
    2. 'Area' → logprob: -1.9102240800857544
    3. ' ' → logprob: -19.16022491455078
    4. ' area' → logprob: -19.41022491455078
    5. 'Areas' → logprob: -22.16022491455078
    6. ' Areas' → logprob: -22.28522491455078
    7. 'area' → logprob: -22.66022491455078
    8. ' ' → logprob: -22.78522491455078
    9. 'A' → logprob: -22.91022491455078
    10. '   ' → logprob: -23.03522491455078

Token 551: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: 0.0
    2. ' Calculator' → logprob: -17.5
    3. 'calculator' → logprob: -18.25
    4. 'Calculate' → logprob: -20.5
    5. 'Calcul' → logprob: -20.5
    6. 'culator' → logprob: -20.875
    7. 'Calc' → logprob: -21.25
    8. 'Cal' → logprob: -21.5
    9. '(' → logprob: -22.0
    10. ' calculator' → logprob: -22.25

Token 552: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016142464010044932
    2. '(
' → logprob: -6.501614093780518
    3. 'Conv' → logprob: -9.251614570617676
    4. '(C' → logprob: -11.876614570617676
    5. '(conv' → logprob: -12.501614570617676
    6. ' Conv' → logprob: -12.751614570617676
    7. '(

' → logprob: -13.376614570617676
    8. '(Console' → logprob: -15.501614570617676
    9. '((' → logprob: -16.25161361694336
    10. '(
' → logprob: -16.25161361694336

Token 553: 'Conv' (ID: 47862)
  Prédit: 'Conv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Conv' → logprob: -2.339278580620885e-06
    2. ' Conv' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.750001907348633
    4. 'Con' → logprob: -20.125001907348633
    5. 'Conc' → logprob: -21.000001907348633
    6. 'Cov' → logprob: -21.500001907348633
    7. 'conv' → logprob: -22.250001907348633
    8. '
' → logprob: -22.500001907348633
    9. '.Conv' → logprob: -23.250001907348633
    10. 'Const' → logprob: -23.500001907348633

Token 554: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: 0.0
    2. 'EX' → logprob: -20.625
    3. 'exp' → logprob: -20.75
    4. 'Ex' → logprob: -20.75
    5. 'exc' → logprob: -20.875
    6. 'Conv' → logprob: -21.5
    7. '```' → logprob: -22.5
    8. 'ext' → logprob: -22.875
    9. '	ex' → logprob: -23.625
    10. 'екс' → logprob: -23.75

Token 555: 'Polygon' (ID: 48860)
  Prédit: 'Polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Polygon' → logprob: -3.128163257315464e-07
    2. ' Polygon' → logprob: -15.375
    3. 'Polynomial' → logprob: -17.375
    4. 'Pol' → logprob: -17.875
    5. 'Polyline' → logprob: -19.5
    6. 'Poly' → logprob: -20.0
    7. '_polygon' → logprob: -20.625
    8. 'Polar' → logprob: -21.25
    9. ' polygon' → logprob: -21.5
    10. 'olygon' → logprob: -21.5

Token 556: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010986098641296849
    2. ')
' → logprob: -9.125109672546387
    3. '(points' → logprob: -15.250109672546387
    4. ')
' → logprob: -15.375109672546387
    5. ' )' → logprob: -15.500109672546387
    6. ')

' → logprob: -15.750109672546387
    7. '(' → logprob: -17.000110626220703
    8. '))' → logprob: -17.625110626220703
    9. ')`' → logprob: -17.750110626220703
    10. ' ' → logprob: -18.125110626220703

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038978219963610172
    2. 'area' → logprob: -5.628897666931152
    3. 'result' → logprob: -8.878897666931152
    4. ' area' → logprob: -9.003897666931152
    5. '    
' → logprob: -11.128897666931152
    6. '
' → logprob: -11.878897666931152
    7. '```' → logprob: -11.878897666931152
    8. ' result' → logprob: -12.628897666931152
    9. 'print' → logprob: -13.378897666931152
    10. '_area' → logprob: -14.878897666931152

Token 558: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.0007585270795971155
    2. 'print' → logprob: -7.250758647918701
    3. ' area' → logprob: -10.250758171081543
    4. 'result' → logprob: -11.250758171081543
    5. '   ' → logprob: -15.375758171081543
    6. ' print' → logprob: -17.25075912475586
    7. 'try' → logprob: -17.50075912475586
    8. '    
' → logprob: -18.00075912475586
    9. '_area' → logprob: -18.37575912475586
    10. 'Area' → logprob: -18.75075912475586

Token 559: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197911128401756
    2. '=' → logprob: -2.811979055404663
    3. '_' → logprob: -11.811979293823242
    4. ')' → logprob: -13.811979293823242
    5. '.' → logprob: -13.936979293823242
    6. ' ' → logprob: -14.811979293823242
    7. '(' → logprob: -14.936979293823242
    8. '   ' → logprob: -15.311979293823242
    9. 'calculate' → logprob: -16.061979293823242
    10. '_cal' → logprob: -16.186979293823242

Token 560: ' calculator' (ID: 44484)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' → logprob: -0.014163628220558167
    2. ' calculator' → logprob: -4.264163494110107
    3. 'cal' → logprob: -16.139163970947266
    4. 'calc' → logprob: -18.889163970947266
    5. 'Calculator' → logprob: -19.139163970947266
    6. 'calcul' → logprob: -19.139163970947266
    7. 'calculate' → logprob: -19.514163970947266
    8. 'calendar' → logprob: -19.639163970947266
    9. '   ' → logprob: -22.014163970947266
    10. ' ' → logprob: -22.389163970947266

Token 561: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.006815185304731131
    2. '.' → logprob: -5.006814956665039
    3. '.calculate' → logprob: -9.256814956665039
    4. ' .' → logprob: -12.381814956665039
    5. 'compute' → logprob: -16.00681495666504
    6. '.calc' → logprob: -17.63181495666504
    7. '   ' → logprob: -18.00681495666504
    8. '._' → logprob: -18.50681495666504
    9. '\.' → logprob: -18.75681495666504
    10. '_compute' → logprob: -18.75681495666504

Token 562: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.500000953674316
    3. '_are' → logprob: -18.25
    4. ' _' → logprob: -19.25
    5. '_AREA' → logprob: -19.25
    6. 'area' → logprob: -19.625
    7. '(area' → logprob: -20.5
    8. '_a' → logprob: -21.0
    9. '_point' → logprob: -21.25
    10. '_amount' → logprob: -21.375

Token 563: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. ' (' → logprob: -18.125
    4. '(point' → logprob: -19.375
    5. 'points' → logprob: -20.125
    6. '(parts' → logprob: -20.25
    7. '	points' → logprob: -21.125
    8. ' points' → logprob: -21.25
    9. '(
' → logprob: -21.875
    10. '(Point' → logprob: -22.125

Token 564: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002432256937027
    2. ')
' → logprob: -2.350243330001831
    3. '()' → logprob: -10.72524356842041
    4. '   ' → logprob: -11.72524356842041
    5. ')
' → logprob: -13.22524356842041
    6. '()
' → logprob: -13.35024356842041
    7. '())
' → logprob: -14.10024356842041
    8. '())' → logprob: -14.22524356842041
    9. ')

' → logprob: -14.22524356842041
    10. ' )' → logprob: -14.97524356842041

Token 565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023431815207004547
    2. 'print' → logprob: -3.7734317779541016
    3. '```' → logprob: -9.273431777954102
    4. ' print' → logprob: -9.773431777954102
    5. '
' → logprob: -10.898431777954102
    6. '	print' → logprob: -11.523431777954102
    7. '    
' → logprob: -12.773431777954102
    8. '<|end|>' → logprob: -13.023431777954102
    9. '#print' → logprob: -14.898431777954102
    10. '(print' → logprob: -15.023431777954102

Token 566: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. '   ' → logprob: -16.75
    3. ' print' → logprob: -18.25
    4. '```' → logprob: -19.5
    5. '
' → logprob: -22.75
    6. 'printf' → logprob: -22.875
    7. '#print' → logprob: -23.625
    8. 'println' → logprob: -24.375
    9. '    
' → logprob: -24.5
    10. '	print' → logprob: -25.25

Token 567: '(f' (ID: 1526)
  Prédit: '(area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.038365285843610764
    2. '(f' → logprob: -3.288365364074707
    3. '(' → logprob: -8.163365364074707
    4. '(round' → logprob: -10.413365364074707
    5. '()' → logprob: -12.413365364074707
    6. 'area' → logprob: -12.663365364074707
    7. 'f' → logprob: -13.788365364074707
    8. '((' → logprob: -15.788365364074707
    9. '(abs' → logprob: -15.788365364074707
    10. ' (' → logprob: -16.28836441040039

Token 568: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.707359790802002
    2. '"{' → logprob: -0.707359790802002
    3. '"' → logprob: -4.707359790802002
    4. 'Area' → logprob: -5.582359790802002
    5. '"The' → logprob: -6.707359790802002
    6. ''{' → logprob: -9.707359313964844
    7. 'The' → logprob: -10.457359313964844
    8. 'area' → logprob: -12.957359313964844
    9. '0' → logprob: -13.332359313964844
    10. 'AREA' → logprob: -13.957359313964844

Token 569: 'area' (ID: 7502)
  Prédit: 'area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: 0.0
    2. ' area' → logprob: -18.75
    3. '.area' → logprob: -22.5
    4. '-area' → logprob: -22.75
    5. 'round' → logprob: -23.625
    6. '(area' → logprob: -23.75
    7. '{' → logprob: -24.125
    8. 'angle' → logprob: -24.75
    9. 'abs' → logprob: -25.125
    10. 'Area' → logprob: -25.625

Token 570: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.0009976790752261877
    2. '}")' → logprob: -7.000997543334961
    3. '():' → logprob: -9.875997543334961
    4. ':' → logprob: -10.500997543334961
    5. '()}' → logprob: -12.000997543334961
    6. '}' → logprob: -14.000997543334961
    7. ' :.' → logprob: -16.50099754333496
    8. '()' → logprob: -16.50099754333496
    9. '")' → logprob: -17.25099754333496
    10. ':f' → logprob: -18.25099754333496

Token 571: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6984384655952454
    2. '6' → logprob: -0.6984384655952454
    3. '4' → logprob: -5.94843864440918
    4. '3' → logprob: -6.19843864440918
    5. '5' → logprob: -7.44843864440918
    6. '8' → logprob: -10.57343864440918
    7. '10' → logprob: -11.44843864440918
    8. '1' → logprob: -11.94843864440918
    9. '7' → logprob: -12.32343864440918
    10. '9' → logprob: -12.57343864440918

Token 572: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. '}' → logprob: -17.625
    3. 'g' → logprob: -18.375
    4. '}")' → logprob: -19.5
    5. 'e' → logprob: -19.75
    6. '6' → logprob: -20.5
    7. '2' → logprob: -21.375
    8. 'lf' → logprob: -21.75
    9. '```' → logprob: -22.25
    10. '
' → logprob: -22.375

Token 573: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -6.869017852295656e-06
    2. '")' → logprob: -12.875006675720215
    3. '}")
' → logprob: -13.000006675720215
    4. ')")' → logprob: -13.250006675720215
    5. '}")
' → logprob: -15.875006675720215
    6. ' }' → logprob: -16.12500762939453
    7. '}")

' → logprob: -16.62500762939453
    8. '}"' → logprob: -17.25000762939453
    9. '})' → logprob: -17.62500762939453
    10. '}' → logprob: -17.75000762939453

Token 574: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.062044430524110794
    2. '
' → logprob: -2.812044382095337
    3. ' if' → logprob: -10.187044143676758
    4. '```' → logprob: -10.812044143676758
    5. '\n' → logprob: -11.687044143676758
    6. '<|end|>' → logprob: -12.437044143676758
    7. '

' → logprob: -13.187044143676758
    8. '  
' → logprob: -13.937044143676758
    9. '\' → logprob: -14.062044143676758
    10. '\
' → logprob: -14.187044143676758

Token 575: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.576172947883606
    2. '__' → logprob: -0.826172947883606
    3. '_' → logprob: -8.576172828674316
    4. '_name' → logprob: -10.826172828674316
    5. '___' → logprob: -11.201172828674316
    6. ' ' → logprob: -11.826172828674316
    7. 'name' → logprob: -12.951172828674316
    8. ' ___' → logprob: -15.076172828674316
    9. '​' → logprob: -15.201172828674316
    10. '____' → logprob: -15.326172828674316

Token 576: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00828701350837946
    2. '==' → logprob: -4.883286952972412
    3. '=="' → logprob: -8.25828742980957
    4. ' ==' → logprob: -8.63328742980957
    5. '__.__' → logprob: -9.75828742980957
    6. '=='' → logprob: -9.88328742980957
    7. '.__' → logprob: -10.13328742980957
    8. '[' → logprob: -10.38328742980957
    9. '__[' → logprob: -11.13328742980957
    10. '__.' → logprob: -11.50828742980957

Token 577: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.9153885558771435e-06
    2. '==' → logprob: -12.250005722045898
    3. '__.__' → logprob: -14.250005722045898
    4. ' ==' → logprob: -15.625005722045898
    5. '___' → logprob: -15.625005722045898
    6. '____' → logprob: -16.6250057220459
    7. '=="' → logprob: -16.8750057220459
    8. '__
' → logprob: -17.2500057220459
    9. '__.' → logprob: -18.0000057220459
    10. '__["' → logprob: -18.6250057220459

Token 578: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7063402533531189
    2. '__' → logprob: -0.7063402533531189
    3. ' ==' → logprob: -4.456340312957764
    4. '=="' → logprob: -6.581340312957764
    5. '=='' → logprob: -9.456339836120605
    6. '=' → logprob: -10.581339836120605
    7. '===' → logprob: -12.706339836120605
    8. '_' → logprob: -12.956339836120605
    9. '==
' → logprob: -12.956339836120605
    10. '__.__' → logprob: -13.581339836120605

Token 579: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0003404687449801713
    2. ''' → logprob: -8.000340461730957
    3. ' "__' → logprob: -12.250340461730957
    4. '__' → logprob: -15.500340461730957
    5. '"name' → logprob: -17.000341415405273
    6. '"user' → logprob: -17.250341415405273
    7. '("__' → logprob: -18.875341415405273
    8. ''"' → logprob: -19.000341415405273
    9. '"class' → logprob: -19.500341415405273
    10. ' '__' → logprob: -19.500341415405273

Token 580: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0006866985349915922
    2. '__' → logprob: -7.8756866455078125
    3. 'name' → logprob: -8.250686645507812
    4. '"' → logprob: -10.250686645507812
    5. '_main' → logprob: -12.625686645507812
    6. ' main' → logprob: -13.500686645507812
    7. ''' → logprob: -13.625686645507812
    8. 'built' → logprob: -13.625686645507812
    9. 'm' → logprob: -14.625686645507812
    10. '__":
' → logprob: -14.750686645507812

Token 581: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.25228938460350037
    2. '__' → logprob: -1.5022894144058228
    3. '__':
' → logprob: -8.127289772033691
    4. '__.__' → logprob: -10.752289772033691
    5. '__.' → logprob: -10.877289772033691
    6. '__["' → logprob: -11.252289772033691
    7. '__
' → logprob: -12.502289772033691
    8. '__:' → logprob: -12.627289772033691
    9. '__",' → logprob: -13.752289772033691
    10. '__
' → logprob: -13.752289772033691

Token 582: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.029173608869314194
    2. '"' → logprob: -4.029173374176025
    3. '__' → logprob: -4.529173374176025
    4. ''' → logprob: -8.904173851013184
    5. ' main' → logprob: -10.529173851013184
    6. '   ' → logprob: -11.779173851013184
    7. '_main' → logprob: -13.779173851013184
    8. '____' → logprob: -14.529173851013184
    9. ' "__' → logprob: -14.654173851013184
    10. '___' → logprob: -14.779173851013184

Token 583: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.7697225252486533e-06
    2. ' main' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.875003814697266
    4. '	main' → logprob: -20.000003814697266
    5. '(main' → logprob: -23.750003814697266
    6. 'import' → logprob: -24.250003814697266
    7. '.main' → logprob: -24.500003814697266
    8. '_main' → logprob: -24.750003814697266
    9. '
' → logprob: -25.625003814697266
    10. '  ' → logprob: -26.625003814697266

Token 584: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005433320067822933
    2. '
' → logprob: -6.005433082580566
    3. '<|end|>' → logprob: -6.380433082580566
    4. '()
' → logprob: -7.255433082580566
    5. '(' → logprob: -8.005433082580566
    6. '```' → logprob: -9.505433082580566
    7. '\n' → logprob: -9.755433082580566
    8. '()\' → logprob: -10.505433082580566
    9. ')' → logprob: -11.380433082580566
    10. '(
' → logprob: -11.505433082580566


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 582
Tokens correctement prédits (1ère position, stricte): 321
Tokens correctement prédits (1ère position, avec adaptation): 351
Tokens correctement prédits (top 10): 542
Précision stricte (1ère position): 55.15%
Précision adaptée (1ère position): 60.31%
Précision (top 10): 93.13%
================================================================================
