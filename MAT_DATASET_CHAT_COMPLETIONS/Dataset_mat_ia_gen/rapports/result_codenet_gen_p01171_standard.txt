================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def prime_factors(n):
    factors = set()
    while n % 2 == 0:
        factors.add(2)
        n //= 2
    f = 3
    while f * f <= n:
        while n % f == 0:
            factors.add(f)
            n //= f
        f += 2
    if n > 1:
        factors.add(n)
    return factors

def key_number(n):
    factors = prime_factors(n)
    max_factor = max(factors)
    total_others = sum(factors) - max_factor
    return max_factor - total_others

for line in sys.stdin:
    a,b = map(int,line.split())
    if a == 0 and b == 0:
        break
    print('a' if key_number(a) > key_number(b) else 'b')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3441300094127655
    2. '.' → logprob: -1.594130039215088
    3. '<|end|>' → logprob: -2.969130039215088
    4. '\' → logprob: -4.469130039215088
    5. 'import' → logprob: -5.094130039215088
    6. 'newline' → logprob: -5.094130039215088
    7. '' → logprob: -5.844130039215088
    8. '<|end|>' → logprob: -5.969130039215088
    9. '\r' → logprob: -6.094130039215088
    10. '
' → logprob: -6.344130039215088

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00016110755677800626
    2. 'os' → logprob: -8.750161170959473
    3. ' math' → logprob: -13.625161170959473
    4. '"os' → logprob: -14.875161170959473
    5. ' re' → logprob: -15.250161170959473
    6. ' o' → logprob: -15.625161170959473
    7. ' ' → logprob: -15.875161170959473
    8. ' json' → logprob: -16.000160217285156
    9. '	os' → logprob: -16.125160217285156
    10. '_os' → logprob: -16.750160217285156

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2897878587245941
    2. 'import' → logprob: -2.539787769317627
    3. '\n' → logprob: -2.664787769317627
    4. '\' → logprob: -3.164787769317627
    5. '```' → logprob: -3.914787769317627
    6. '
' → logprob: -4.039787769317627
    7. '<|end|>' → logprob: -4.664787769317627
    8. ',' → logprob: -5.289787769317627
    9. '

' → logprob: -5.664787769317627
    10. '<|end|>' → logprob: -6.914787769317627

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.054233431816101
    2. '\' → logprob: -1.429233431816101
    3. 'import' → logprob: -2.1792335510253906
    4. '\n' → logprob: -2.1792335510253906
    5. '```' → logprob: -2.4292335510253906
    6. 'def' → logprob: -3.4292335510253906
    7. '
' → logprob: -4.179233551025391
    8. ',' → logprob: -4.679233551025391
    9. '`' → logprob: -4.929233551025391
    10. '*' → logprob: -4.929233551025391

Token 7: ' prime' (ID: 9197)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022814787924289703
    2. ' calculate' → logprob: -4.272814750671387
    3. ' factorial' → logprob: -5.897814750671387
    4. ' space' → logprob: -6.147814750671387
    5. '_' → logprob: -7.022814750671387
    6. ' math' → logprob: -7.647814750671387
    7. ' e' → logprob: -7.897814750671387
    8. ' compute' → logprob: -7.897814750671387
    9. ' my' → logprob: -8.897814750671387
    10. ' calc' → logprob: -9.022814750671387

Token 8: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1138649582862854
    2. '(' → logprob: -2.9888648986816406
    3. 's' → logprob: -2.9888648986816406
    4. '_s' → logprob: -5.613864898681641
    5. '_(' → logprob: -6.488864898681641
    6. '(_' → logprob: -7.238864898681641
    7. '_factor' → logprob: -8.23886489868164
    8. 'r' → logprob: -8.48886489868164
    9. '```' → logprob: -8.98886489868164
    10. '(n' → logprob: -9.48886489868164

Token 9: 'actors' (ID: 37126)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.04424673691391945
    2. 'i' → logprob: -3.9192466735839844
    3. 'acto' → logprob: -4.544246673583984
    4. 'actors' → logprob: -5.169246673583984
    5. 'a' → logprob: -5.419246673583984
    6. 'inder' → logprob: -6.919246673583984
    7. '```' → logprob: -8.169246673583984
    8. '_' → logprob: -8.169246673583984
    9. 'actory' → logprob: -8.419246673583984
    10. 'unction' → logprob: -8.419246673583984

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00032759839086793363
    2. ' (' → logprob: -8.500328063964844
    3. '(n' → logprob: -10.125328063964844
    4. '_' → logprob: -10.875328063964844
    5. '```' → logprob: -11.625328063964844
    6. '("("' → logprob: -11.750328063964844
    7. '(x' → logprob: -12.000328063964844
    8. '('' → logprob: -12.500328063964844
    9. '(user' → logprob: -12.625328063964844
    10. ':' → logprob: -12.750328063964844

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002577205654233694
    2. ')' → logprob: -6.002577304840088
    3. ' ):' → logprob: -9.87757682800293
    4. ':' → logprob: -10.87757682800293
    5. '(' → logprob: -11.25257682800293
    6. '(n' → logprob: -11.50257682800293
    7. '):
' → logprob: -13.50257682800293
    8. '   ' → logprob: -13.62757682800293
    9. '[' → logprob: -13.62757682800293
    10. ',' → logprob: -14.00257682800293

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20828743278980255
    2. '   ' → logprob: -2.583287477493286
    3. ' :' → logprob: -2.833287477493286
    4. ' ' → logprob: -4.083287239074707
    5. '```' → logprob: -4.333287239074707
    6. '    ' → logprob: -5.333287239074707
    7. '):' → logprob: -5.583287239074707
    8. '[' → logprob: -6.208287239074707
    9. ' 
' → logprob: -6.458287239074707
    10. ':
' → logprob: -6.583287239074707

Token 13: ' factors' (ID: 11652)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4176301062107086
    2. '    ' → logprob: -2.167630195617676
    3. '   ' → logprob: -2.292630195617676
    4. ''' → logprob: -3.792630195617676
    5. ':' → logprob: -3.917630195617676
    6. '```' → logprob: -3.917630195617676
    7. ' :' → logprob: -4.542630195617676
    8. ' []' → logprob: -4.792630195617676
    9. '"' → logprob: -5.042630195617676
    10. ' 
' → logprob: -5.542630195617676

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07023683935403824
    2. '=' → logprob: -2.820236921310425
    3. ' ' → logprob: -5.320236682891846
    4. '.append' → logprob: -6.695236682891846
    5. '.' → logprob: -7.195236682891846
    6. '[:]' → logprob: -8.320237159729004
    7. '   ' → logprob: -8.445237159729004
    8. '_' → logprob: -8.695237159729004
    9. ')' → logprob: -8.820237159729004
    10. '=[]' → logprob: -9.070237159729004

Token 15: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0015089125372469425
    2. '[]' → logprob: -6.501508712768555
    3. ' ' → logprob: -12.376508712768555
    4. ' []
' → logprob: -13.251508712768555
    5. ' {}' → logprob: -15.751508712768555
    6. ' [' → logprob: -15.876508712768555
    7. ' []

' → logprob: -16.126508712768555
    8. ' set' → logprob: -16.501508712768555
    9. '   ' → logprob: -17.251508712768555
    10. ' []
' → logprob: -17.876508712768555

Token 16: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2821867763996124
    2. '()' → logprob: -1.40718674659729
    3. '([' → logprob: -7.907186985015869
    4. '([(' → logprob: -8.407186508178711
    5. '([]' → logprob: -8.907186508178711
    6. '((' → logprob: -8.907186508178711
    7. '('' → logprob: -10.532186508178711
    8. '(f' → logprob: -10.907186508178711
    9. '([...' → logprob: -10.907186508178711
    10. ' ()' → logprob: -11.032186508178711

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40555480122566223
    2. '    ' → logprob: -1.2805547714233398
    3. ' ' → logprob: -3.53055477142334
    4. '    
' → logprob: -4.78055477142334
    5. '     
' → logprob: -5.53055477142334
    6. ' for' → logprob: -5.65555477142334
    7. '  ' → logprob: -6.15555477142334
    8. ' while' → logprob: -6.28055477142334
    9. ' 
' → logprob: -6.65555477142334
    10. '<|end|>' → logprob: -7.40555477142334

Token 18: ' while' (ID: 2049)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6011838316917419
    2. ' while' → logprob: -0.9761838316917419
    3. '   ' → logprob: -3.4761838912963867
    4. 'i' → logprob: -3.9761838912963867
    5. ' for' → logprob: -3.9761838912963867
    6. 'while' (adapté à ' while') → logprob: -5.976183891296387
    7. ' ' → logprob: -6.726183891296387
    8. 'for' → logprob: -6.976183891296387
    9. ' if' → logprob: -6.976183891296387
    10. '    ' → logprob: -7.351183891296387

Token 19: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0004976287018507719
    2. 'n' → logprob: -7.625497817993164
    3. ' ' → logprob: -11.750497817993164
    4. ' (' → logprob: -14.125497817993164
    5. ' ' → logprob: -15.125497817993164
    6. '(n' → logprob: -15.250497817993164
    7. '```' → logprob: -15.875497817993164
    8. '	n' → logprob: -16.250497817993164
    9. ' math' → logprob: -17.000497817993164
    10. '_' → logprob: -17.250497817993164

Token 20: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.002213777042925358
    2. '%' → logprob: -6.127213954925537
    3. ' ' → logprob: -10.502213478088379
    4. ' >' → logprob: -14.627213478088379
    5. '%i' → logprob: -14.877213478088379
    6. '>' → logprob: -15.502213478088379
    7. ' ' → logprob: -16.252214431762695
    8. '%s' → logprob: -18.002214431762695
    9. '   ' → logprob: -18.127214431762695
    10. '```' → logprob: -18.502214431762695

Token 21: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42870157957077026
    2. ' ' → logprob: -1.053701639175415
    3. '```' → logprob: -15.741201400756836
    4. '  ' → logprob: -16.053701400756836
    5. '   ' → logprob: -16.116201400756836
    6. 'import' → logprob: -16.178701400756836
    7. ' ' → logprob: -16.241201400756836
    8. '1' → logprob: -16.678701400756836
    9. '    ' → logprob: -17.178701400756836
    10. '۲' → logprob: -17.491201400756836

Token 22: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -21.0
    4. '```' → logprob: -21.25
    5. '２' → logprob: -21.5
    6. '۲' → logprob: -22.0
    7. '

' → logprob: -23.125
    8. '²' → logprob: -23.125
    9. '  ' → logprob: -23.125
    10. '₂' → logprob: -23.5

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026355454698204994
    2. '==' → logprob: -3.651355504989624
    3. ' ' → logprob: -10.401355743408203
    4. '=' → logprob: -11.026355743408203
    5. ' =' → logprob: -12.651355743408203
    6. ' ===' → logprob: -13.151355743408203
    7. '===' → logprob: -13.401355743408203
    8. ')==' → logprob: -14.401355743408203
    9. ' ' → logprob: -15.026355743408203
    10. ']==' → logprob: -15.401355743408203

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38687121868133545
    2. ' ' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.386871337890625
    4. '  ' → logprob: -17.261871337890625
    5. '   ' → logprob: -17.261871337890625
    6. '```' → logprob: -18.511871337890625
    7. '    ' → logprob: -19.886871337890625
    8. '=' → logprob: -20.011871337890625
    9. '1' → logprob: -20.386871337890625
    10. '۰' → logprob: -20.636871337890625

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -20.375051498413086
    4. '۰' → logprob: -21.750051498413086
    5. '2' → logprob: -22.000051498413086
    6. '   ' → logprob: -22.250051498413086
    7. ' ' → logprob: -22.375051498413086
    8. '00' → logprob: -22.500051498413086
    9. '1' → logprob: -22.500051498413086
    10. '

' → logprob: -22.875051498413086

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009308716980740428
    2. ' :' → logprob: -7.5009307861328125
    3. ':
' → logprob: -8.750930786132812
    4. '):' → logprob: -8.875930786132812
    5. '       ' → logprob: -10.000930786132812
    6. '   ' → logprob: -10.750930786132812
    7. ':**' → logprob: -13.000930786132812
    8. '<|end|>' → logprob: -13.250930786132812
    9. ':return' → logprob: -13.375930786132812
    10. ' :
' → logprob: -13.750930786132812

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006994081195443869
    2. '    ' → logprob: -5.881994247436523
    3. '   ' → logprob: -6.256994247436523
    4. ' ' → logprob: -7.006994247436523
    5. 'n' → logprob: -7.131994247436523
    6. ' n' → logprob: -8.256994247436523
    7. ' factors' → logprob: -9.506994247436523
    8. '```' → logprob: -10.256994247436523
    9. '     ' → logprob: -10.381994247436523
    10. '        
' → logprob: -10.631994247436523

Token 28: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.0029462052043527365
    2. 'f' → logprob: -6.627946376800537
    3. '       ' → logprob: -6.752946376800537
    4. '    ' → logprob: -8.252945899963379
    5. '   ' → logprob: -9.627945899963379
    6. 'Factors' → logprob: -10.127945899963379
    7. '        ' → logprob: -10.377945899963379
    8. '```' → logprob: -11.502945899963379
    9. ' ' → logprob: -11.627945899963379
    10. ' f' → logprob: -11.752945899963379

Token 29: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16025103628635406
    2. '.add' → logprob: -1.9102510213851929
    3. ' .' → logprob: -10.660250663757324
    4. '.update' → logprob: -13.785250663757324
    5. '.Add' → logprob: -13.910250663757324
    6. '.append' → logprob: -14.660250663757324
    7. ' add' → logprob: -15.160250663757324
    8. 'add' → logprob: -15.535250663757324
    9. '.remove' → logprob: -16.03525161743164
    10. '.insert' → logprob: -16.41025161743164

Token 30: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -14.625000953674316
    3. '('' → logprob: -16.625
    4. '(
' → logprob: -17.0
    5. ' (' → logprob: -17.75
    6. ' ' → logprob: -17.875
    7. '((' → logprob: -19.125
    8. '(

' → logprob: -19.5
    9. '("' → logprob: -19.75
    10. '()' → logprob: -20.75

Token 31: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014164329506456852
    2. ' ' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.514163970947266
    4. ''' → logprob: -15.764163970947266
    5. ')' → logprob: -16.639163970947266
    6. ' ' → logprob: -17.264163970947266
    7. '`' → logprob: -18.264163970947266
    8. ' )' → logprob: -18.264163970947266
    9. '    ' → logprob: -18.389163970947266
    10. '"' → logprob: -18.389163970947266

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.209963900502771e-05
    2. ')
' → logprob: -9.625092506408691
    3. ' )' → logprob: -11.250092506408691
    4. '   ' → logprob: -11.875092506408691
    5. '       ' → logprob: -12.500092506408691
    6. ')n' → logprob: -13.875092506408691
    7. ')`' → logprob: -15.250092506408691
    8. '),' → logprob: -15.250092506408691
    9. ')

' → logprob: -16.000091552734375
    10. '))' → logprob: -16.250091552734375

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09410388767719269
    2. 'n' → logprob: -2.7191038131713867
    3. '        
' → logprob: -4.094103813171387
    4. '   ' → logprob: -6.219103813171387
    5. '    
' → logprob: -6.594103813171387
    6. '\' → logprob: -7.094103813171387
    7. ' 
' → logprob: -7.469103813171387
    8. '    ' → logprob: -7.844103813171387
    9. '\n' → logprob: -7.844103813171387
    10. ' ' → logprob: -8.094103813171387

Token 34: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759458541870117
    2. 'n' (adapté à ' n') → logprob: -0.8259458541870117
    3. '   ' → logprob: -12.950945854187012
    4. '    ' → logprob: -13.950945854187012
    5. '	n' → logprob: -14.200945854187012
    6. ' ' → logprob: -14.450945854187012
    7. '       ' → logprob: -14.575945854187012
    8. '_n' → logprob: -15.075945854187012
    9. ')n' → logprob: -15.075945854187012
    10. ' 
' → logprob: -15.575945854187012

Token 35: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.18636393547058105
    2. ' //' → logprob: -1.811363935470581
    3. '=' → logprob: -5.31136417388916
    4. '//' → logprob: -7.06136417388916
    5. ' =' → logprob: -7.81136417388916
    6. ' /=' → logprob: -7.93636417388916
    7. '/=' → logprob: -10.43636417388916
    8. '/' → logprob: -12.31136417388916
    9. ' ' → logprob: -12.93636417388916
    10. ' ' → logprob: -13.06136417388916

Token 36: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9361264946837764e-07
    2. '=}' → logprob: -15.75
    3. '=

' → logprob: -17.375
    4. '2' → logprob: -19.25
    5. '='' → logprob: -19.625
    6. '=*/' → logprob: -20.375
    7. '=`' → logprob: -20.5
    8. '=
' → logprob: -20.5
    9. '=.' → logprob: -21.0
    10. '=_' → logprob: -21.25

Token 37: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '```' → logprob: -17.50023078918457
    4. '   ' → logprob: -19.00023078918457
    5. '۲' → logprob: -21.00023078918457
    6. '  ' → logprob: -21.00023078918457
    7. '２' → logprob: -21.12523078918457
    8. ' ' → logprob: -21.62523078918457
    9. '    ' → logprob: -22.00023078918457
    10. '`' → logprob: -22.12523078918457

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.000003814697266
    4. '   ' → logprob: -20.250003814697266
    5. '۲' → logprob: -20.750003814697266
    6. '２' → logprob: -21.125003814697266
    7. '  ' → logprob: -21.500003814697266
    8. ' ' → logprob: -22.312503814697266
    9. '٢' → logprob: -22.500003814697266
    10. '	' → logprob: -22.687503814697266

Token 39: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.15851669013500214
    2. '    
' → logprob: -3.2835166454315186
    3. '   ' → logprob: -3.4085166454315186
    4. '   
' → logprob: -3.5335166454315186
    5. '
' → logprob: -4.158516883850098
    6. ' ' → logprob: -4.658516883850098
    7. '\n' → logprob: -4.783516883850098
    8. '  
' → logprob: -4.908516883850098
    9. '\' → logprob: -6.783516883850098
    10. 'n' → logprob: -7.158516883850098

Token 40: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.015781300142407417
    2. '   
' → logprob: -5.765781402587891
    3. '    
' → logprob: -5.765781402587891
    4. '
' → logprob: -5.890781402587891
    5. '\n' → logprob: -6.265781402587891
    6. '  
' → logprob: -6.640781402587891
    7. '   ' → logprob: -7.015781402587891
    8. '```' → logprob: -7.140781402587891
    9. ' \' → logprob: -7.640781402587891
    10. ' ' → logprob: -8.01578140258789

Token 41: ' f' (ID: 285)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6650678515434265
    2. ' while' → logprob: -1.5400679111480713
    3. '   ' → logprob: -2.6650679111480713
    4. 'while' → logprob: -2.7900679111480713
    5. '```' → logprob: -3.1650679111480713
    6. ' ' → logprob: -3.2900679111480713
    7. '    
' → logprob: -3.9150679111480713
    8. ' \' → logprob: -5.415067672729492
    9. ' ```' → logprob: -5.540067672729492
    10. '   
' → logprob: -5.665067672729492

Token 42: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.1327393501996994
    2. 'actor' → logprob: -2.132739305496216
    3. 'i' → logprob: -6.007739543914795
    4. ' or' → logprob: -6.632739543914795
    5. 'o' → logprob: -7.132739543914795
    6. 'actors' → logprob: -7.882739543914795
    7. 'r' → logprob: -8.007739067077637
    8. 'rom' → logprob: -8.757739067077637
    9. '3' → logprob: -10.007739067077637
    10. 'for' → logprob: -10.257739067077637

Token 43: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. '  ' → logprob: -18.50170135498047
    4. '2' → logprob: -18.62670135498047
    5. '   ' → logprob: -18.62670135498047
    6. '۳' → logprob: -19.12670135498047
    7. '３' → logprob: -19.75170135498047
    8. ')' → logprob: -19.87670135498047
    9. '³' → logprob: -20.25170135498047
    10. '	' → logprob: -20.75170135498047

Token 44: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -18.2500057220459
    4. '۳' → logprob: -19.8750057220459
    5. '  ' → logprob: -21.1250057220459
    6. '３' → logprob: -21.2500057220459
    7. '```' → logprob: -21.3750057220459
    8. ')' → logprob: -21.6250057220459
    9. '   ' → logprob: -21.8750057220459
    10. '³' → logprob: -22.1250057220459

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.39141517877578735
    2. ' while' → logprob: -1.3914151191711426
    3. '<|end|>' → logprob: -3.2664151191711426
    4. ' ' → logprob: -3.6414151191711426
    5. '  ' → logprob: -6.266415119171143
    6. 'While' → logprob: -6.391415119171143
    7. '   ' → logprob: -6.766415119171143
    8. '```' → logprob: -7.016415119171143
    9. '<|end|>' → logprob: -7.016415119171143
    10. ')' → logprob: -7.141415119171143

Token 48: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.18350151181221008
    2. 'f' → logprob: -2.0585014820098877
    3. ' n' → logprob: -3.3085014820098877
    4. 'n' → logprob: -5.683501720428467
    5. ' ' → logprob: -10.808501243591309
    6. ' math' → logprob: -12.058501243591309
    7. ' ' → logprob: -13.308501243591309
    8. '	f' → logprob: -13.683501243591309
    9. ' (' → logprob: -13.808501243591309
    10. 'math' → logprob: -14.683501243591309

Token 49: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.27570122480392456
    2. ' <=' → logprob: -1.5257012844085693
    3. '*' → logprob: -3.7757012844085693
    4. '<=' → logprob: -7.65070104598999
    5. ' ' → logprob: -10.025701522827148
    6. '*f' → logprob: -10.525701522827148
    7. '**' → logprob: -11.150701522827148
    8. '*i' → logprob: -12.900701522827148
    9. ' **' → logprob: -13.150701522827148
    10. '<|end|>' → logprob: -14.025701522827148

Token 50: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0028368495404720306
    2. ' f' → logprob: -5.87783670425415
    3. 'n' → logprob: -10.377837181091309
    4. ' ' → logprob: -14.877837181091309
    5. ' n' → logprob: -15.252837181091309
    6. '	f' → logprob: -16.502836227416992
    7. '<|end|>' → logprob: -17.252836227416992
    8. '<=' → logprob: -17.502836227416992
    9. '<|end|>' → logprob: -17.627836227416992
    10. '*f' → logprob: -18.377836227416992

Token 51: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04347696155309677
    2. '<=' → logprob: -3.1684770584106445
    3. '<|end|>' → logprob: -7.6684770584106445
    4. ' ' → logprob: -12.918477058410645
    5. ')<=' → logprob: -13.043477058410645
    6. ']<=' → logprob: -13.293477058410645
    7. '<|end|>' → logprob: -13.668477058410645
    8. ' <=",' → logprob: -13.793477058410645
    9. ' ≤' → logprob: -14.668477058410645
    10. '<' → logprob: -14.668477058410645

Token 52: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4740801155567169
    2. ' n' → logprob: -0.9740800857543945
    3. '	n' → logprob: -12.974080085754395
    4. ' ' → logprob: -14.724080085754395
    5. '   ' → logprob: -15.224080085754395
    6. '    ' → logprob: -16.72408103942871
    7. ' ' → logprob: -16.84908103942871
    8. ')n' → logprob: -17.97408103942871
    9. '```' → logprob: -18.34908103942871
    10. '_n' → logprob: -18.59908103942871

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003044802288059145
    2. ' :' → logprob: -8.125304222106934
    3. ':
' → logprob: -12.375304222106934
    4. ':**' → logprob: -12.625304222106934
    5. '):' → logprob: -14.500304222106934
    6. ' and' → logprob: -15.250304222106934
    7. '+:' → logprob: -16.62530517578125
    8. 'and' → logprob: -17.37530517578125
    9. '():' → logprob: -17.50030517578125
    10. '：' → logprob: -17.62530517578125

Token 54: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8095017075538635
    2. '<|end|>' → logprob: -1.5595016479492188
    3. '       ' → logprob: -2.1845016479492188
    4. ':' → logprob: -2.1845016479492188
    5. '    ' → logprob: -2.8095016479492188
    6. '   ' → logprob: -3.9345016479492188
    7. ':
' → logprob: -4.309501647949219
    8. ' :' → logprob: -4.809501647949219
    9. ' 
' → logprob: -5.684501647949219
    10. '\' → logprob: -6.059501647949219

Token 55: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06844792515039444
    2. '    ' → logprob: -3.5684478282928467
    3. '<|end|>' → logprob: -4.193448066711426
    4. '   ' → logprob: -5.443448066711426
    5. ' 
' → logprob: -5.568448066711426
    6. ' if' → logprob: -5.693448066711426
    7. '       ' → logprob: -5.818448066711426
    8. ' :' → logprob: -6.318448066711426
    9. 'if' → logprob: -6.443448066711426
    10. '  ' → logprob: -6.568448066711426

Token 56: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004620710853487253
    2. 'n' → logprob: -5.379620552062988
    3. '(n' → logprob: -15.504620552062988
    4. '	n' → logprob: -15.754620552062988
    5. ' ' → logprob: -15.879620552062988
    6. ' (' → logprob: -17.379621505737305
    7. '<|end|>' → logprob: -17.379621505737305
    8. ' н' → logprob: -17.504621505737305
    9. ')n' → logprob: -17.504621505737305
    10. ' ' → logprob: -18.004621505737305

Token 57: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.012607723474502563
    2. '%' → logprob: -4.387607574462891
    3. ' ' → logprob: -9.26260757446289
    4. ' ' → logprob: -12.88760757446289
    5. '<|end|>' → logprob: -14.76260757446289
    6. ' %
' → logprob: -16.63760757446289
    7. ' %=' → logprob: -16.76260757446289
    8. ' %#' → logprob: -17.01260757446289
    9. '%i' → logprob: -17.63760757446289
    10. '<|end|>' → logprob: -17.76260757446289

Token 58: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.008618119172751904
    2. ' f' → logprob: -4.758618354797363
    3. '<|end|>' → logprob: -12.758618354797363
    4. ' ' → logprob: -14.258618354797363
    5. '<|end|>' → logprob: -16.758617401123047
    6. '	f' → logprob: -17.133617401123047
    7. ' ' → logprob: -18.008617401123047
    8. '  ' → logprob: -18.258617401123047
    9. '3' → logprob: -18.508617401123047
    10. 'factor' → logprob: -18.633617401123047

Token 59: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06197462975978851
    2. '==' → logprob: -2.81197452545166
    3. '=' → logprob: -12.81197452545166
    4. ' ' → logprob: -12.93697452545166
    5. ')==' → logprob: -13.93697452545166
    6. ' =' → logprob: -14.81197452545166
    7. ' ' → logprob: -15.56197452545166
    8. ']==' → logprob: -15.81197452545166
    9. '===' → logprob: -16.686975479125977
    10. ' ===' → logprob: -16.811975479125977

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269282102584839
    2. ' ' → logprob: -2.1269283294677734
    3. '  ' → logprob: -16.251928329467773
    4. '۰' → logprob: -18.001928329467773
    5. ' ' → logprob: -18.251928329467773
    6. '   ' → logprob: -18.251928329467773
    7. '```' → logprob: -18.251928329467773
    8. '<|end|>' → logprob: -18.376928329467773
    9. '    ' → logprob: -19.751928329467773
    10. ' ' → logprob: -19.814428329467773

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۰' → logprob: -18.750009536743164
    4. '٠' → logprob: -20.875009536743164
    5. ' ' → logprob: -21.375009536743164
    6. '  ' → logprob: -21.375009536743164
    7. '```' → logprob: -21.500009536743164
    8. '०' → logprob: -21.875009536743164
    9. '０' → logprob: -22.312509536743164
    10. '<|end|>' → logprob: -22.312509536743164

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001572948880493641
    2. ':
' → logprob: -6.501573085784912
    3. '):' → logprob: -10.001572608947754
    4. ' :' → logprob: -11.251572608947754
    5. '       ' → logprob: -11.751572608947754
    6. '):
' → logprob: -13.751572608947754
    7. '<|end|>' → logprob: -14.626572608947754
    8. ':

' → logprob: -14.876572608947754
    9. '           ' → logprob: -14.876572608947754
    10. '{' → logprob: -15.001572608947754

Token 63: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1096942126750946
    2. '           ' → logprob: -2.484694242477417
    3. ')' → logprob: -5.359694004058838
    4. '<|end|>' → logprob: -5.734694004058838
    5. ' ' → logprob: -6.109694004058838
    6. ':' → logprob: -6.359694004058838
    7. ' factors' → logprob: -6.359694004058838
    8. '   ' → logprob: -6.484694004058838
    9. '{' → logprob: -7.109694004058838
    10. '        ' → logprob: -7.234694004058838

Token 64: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.47463271021842957
    2. ' factors' → logprob: -0.974632740020752
    3. ' f' → logprob: -8.599632263183594
    4. '           ' → logprob: -8.849632263183594
    5. '       ' → logprob: -9.224632263183594
    6. 'factor' → logprob: -10.099632263183594
    7. '{' → logprob: -10.099632263183594
    8. '   ' → logprob: -11.724632263183594
    9. 'Factors' → logprob: -11.724632263183594
    10. ' ' → logprob: -12.099632263183594

Token 65: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.061986736953258514
    2. '.' → logprob: -2.8119866847991943
    3. ' .' → logprob: -11.186986923217773
    4. '.setdefault' → logprob: -13.561986923217773
    5. '.append' → logprob: -13.811986923217773
    6. '.Add' → logprob: -14.436986923217773
    7. ').' → logprob: -14.561986923217773
    8. '.remove' → logprob: -14.811986923217773
    9. '`.' → logprob: -15.561986923217773
    10. '.update' → logprob: -15.811986923217773

Token 66: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.03804149478673935
    2. '(' → logprob: -3.288041591644287
    3. '(
' → logprob: -17.038042068481445
    4. '(

' → logprob: -18.163042068481445
    5. '(n' → logprob: -18.288042068481445
    6. '(F' → logprob: -18.413042068481445
    7. 'f' → logprob: -19.163042068481445
    8. '((' → logprob: -19.413042068481445
    9. ' (' → logprob: -19.663042068481445
    10. '('' → logprob: -19.663042068481445

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012615022249519825
    2. ')
' → logprob: -4.387615203857422
    3. '           ' → logprob: -9.512615203857422
    4. ' )' → logprob: -10.887615203857422
    5. ')
' → logprob: -12.387615203857422
    6. '               ' → logprob: -12.512615203857422
    7. '       ' → logprob: -13.637615203857422
    8. ' )
' → logprob: -13.637615203857422
    9. '),' → logprob: -14.762615203857422
    10. ')

' → logprob: -14.887615203857422

Token 68: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00640377402305603
    2. '               ' → logprob: -5.631403923034668
    3. '            ' → logprob: -6.881403923034668
    4. '            
' → logprob: -7.506403923034668
    5. 'n' → logprob: -8.131403923034668
    6. '       ' → logprob: -8.381403923034668
    7. ')' → logprob: -8.756403923034668
    8. '<|end|>' → logprob: -9.006403923034668
    9. '             ' → logprob: -10.006403923034668
    10. '*' → logprob: -10.131403923034668

Token 69: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3133316934108734
    2. ' n' → logprob: -1.3133317232131958
    3. '           ' → logprob: -10.563331604003906
    4. '            ' → logprob: -10.563331604003906
    5. '               ' → logprob: -11.313331604003906
    6. '	n' → logprob: -13.438331604003906
    7. ' ' → logprob: -13.688331604003906
    8. '```' → logprob: -13.813331604003906
    9. ' 
' → logprob: -14.063331604003906
    10. '``' → logprob: -15.063331604003906

Token 70: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.016934439539909363
    2. ' //' → logprob: -4.266934394836426
    3. '//' → logprob: -5.891934394836426
    4. '/=' → logprob: -12.266934394836426
    5. ' /=' → logprob: -14.391934394836426
    6. '```' → logprob: -16.641935348510742
    7. ' ' → logprob: -16.891935348510742
    8. '=' → logprob: -16.891935348510742
    9. '/' → logprob: -17.016935348510742
    10. ' ' → logprob: -17.391935348510742

Token 71: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.320199877838604e-07
    2. '/=' → logprob: -16.375
    3. '=

' → logprob: -16.5
    4. '=/' → logprob: -17.25
    5. '=
' → logprob: -17.5
    6. '=f' → logprob: -17.625
    7. '=_' → logprob: -17.75
    8. '_=' → logprob: -18.0
    9. '=}' → logprob: -18.0
    10. '%=' → logprob: -18.875

Token 72: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04858759790658951
    2. ' f' → logprob: -3.0485875606536865
    3. '	f' → logprob: -16.298587799072266
    4. ' ' → logprob: -16.673587799072266
    5. ' ' → logprob: -18.923587799072266
    6. ' ф' → logprob: -19.298587799072266
    7. '_f' → logprob: -19.298587799072266
    8. '<|end|>' → logprob: -19.673587799072266
    9. '```' → logprob: -19.923587799072266
    10. '*f' → logprob: -20.048587799072266

Token 73: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37268659472465515
    2. ''' → logprob: -2.4976866245269775
    3. ' f' → logprob: -2.4976866245269775
    4. 'f' → logprob: -2.4976866245269775
    5. '       ' → logprob: -4.872686386108398
    6. '    ' → logprob: -4.872686386108398
    7. ')' → logprob: -4.872686386108398
    8. '3' → logprob: -5.122686386108398
    9. ' 
' → logprob: -5.247686386108398
    10. '"' → logprob: -5.372686386108398

Token 74: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33761754631996155
    2. '       ' → logprob: -1.4626175165176392
    3. '    ' → logprob: -4.21261739730835
    4. '        ' → logprob: -4.71261739730835
    5. '   ' → logprob: -4.83761739730835
    6. '  ' → logprob: -5.46261739730835
    7. ' f' → logprob: -5.58761739730835
    8. ' 
' → logprob: -6.08761739730835
    9. ''' → logprob: -6.46261739730835
    10. 'f' → logprob: -6.58761739730835

Token 75: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19023138284683228
    2. '+' → logprob: -2.3152313232421875
    3. '   ' → logprob: -3.5652313232421875
    4. ' f' → logprob: -4.3152313232421875
    5. '       ' → logprob: -5.3152313232421875
    6. ' 
' → logprob: -5.3152313232421875
    7. 'f' (adapté à ' f') → logprob: -5.4402313232421875
    8. '  ' → logprob: -5.5652313232421875
    9. ' +' → logprob: -5.6902313232421875
    10. '    ' → logprob: -5.8152313232421875

Token 76: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.21639671921730042
    2. '+' → logprob: -1.716396689414978
    3. ' +=' → logprob: -4.216396808624268
    4. '=' → logprob: -9.34139633178711
    5. '+='' → logprob: -11.21639633178711
    6. '+="' → logprob: -11.71639633178711
    7. ' +' → logprob: -12.71639633178711
    8. '++' → logprob: -12.84139633178711
    9. ' ' → logprob: -13.09139633178711
    10. ']+=' → logprob: -13.84139633178711

Token 77: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -16.500335693359375
    4. '1' → logprob: -17.125335693359375
    5. '۲' → logprob: -17.625335693359375
    6. '  ' → logprob: -18.062835693359375
    7. '<|end|>' → logprob: -18.312835693359375
    8. '   ' → logprob: -18.625335693359375
    9. '२' → logprob: -19.000335693359375
    10. '２' → logprob: -19.062835693359375

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -16.250017166137695
    4. '```' → logprob: -17.937517166137695
    5. '۲' → logprob: -18.062517166137695
    6. '२' → logprob: -19.062517166137695
    7. '<|end|>' → logprob: -19.125017166137695
    8. '  ' → logprob: -19.125017166137695
    9. '٢' → logprob: -19.187517166137695
    10. '6' → logprob: -19.437517166137695

Token 79: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.04826686158776283
    2. '   ' → logprob: -4.173266887664795
    3. '
' → logprob: -4.298266887664795
    4. '    
' → logprob: -5.048266887664795
    5. '  
' → logprob: -5.173266887664795
    6. ' ' → logprob: -6.048266887664795
    7. '   
' → logprob: -6.673266887664795
    8. '\n' → logprob: -7.298266887664795
    9. '\' → logprob: -7.548266887664795
    10. '<|end|>' → logprob: -8.173266410827637

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27718237042427063
    2. ' 
' → logprob: -2.1521823406219482
    3. ' ' → logprob: -2.7771823406219482
    4. '    
' → logprob: -3.7771823406219482
    5. '
' → logprob: -4.152182579040527
    6. '  
' → logprob: -4.402182579040527
    7. ' if' → logprob: -5.902182579040527
    8. '   
' → logprob: -6.027182579040527
    9. ' return' → logprob: -6.152182579040527
    10. '  ' → logprob: -6.777182579040527

Token 81: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6403300166130066
    2. 'if' (adapté à ' if') → logprob: -1.6403300762176514
    3. '   ' → logprob: -1.8903300762176514
    4. ' 
' → logprob: -2.5153300762176514
    5. '```' → logprob: -3.8903300762176514
    6. ' ' → logprob: -4.515329837799072
    7. 'i' → logprob: -5.515329837799072
    8. '
' → logprob: -6.015329837799072
    9. ' i' → logprob: -6.390329837799072
    10. 'return' → logprob: -6.765329837799072

Token 82: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0004309076175559312
    2. 'n' → logprob: -7.750431060791016
    3. ' ' → logprob: -16.125431060791016
    4. ' ' → logprob: -17.000431060791016
    5. '	n' → logprob: -17.375431060791016
    6. ' ' → logprob: -20.625431060791016
    7. ' ‌' → logprob: -20.750431060791016
    8. '<|end|>' → logprob: -20.750431060791016
    9. ' н' → logprob: -21.000431060791016
    10. '>' → logprob: -21.625431060791016

Token 83: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07891258597373962
    2. '>' → logprob: -2.5789124965667725
    3. ' ' → logprob: -11.203912734985352
    4. ' ' → logprob: -12.328912734985352
    5. '">' → logprob: -13.453912734985352
    6. ' >

' → logprob: -13.828912734985352
    7. '&gt' → logprob: -13.953912734985352
    8. '1' → logprob: -15.703912734985352
    9. ' />' → logprob: -15.703912734985352
    10. ' !=' → logprob: -15.703912734985352

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020589184015989304
    2. ' ' → logprob: -3.8955891132354736
    3. '2' → logprob: -10.020588874816895
    4. '<|end|>' → logprob: -13.145588874816895
    5. ' ' → logprob: -15.020588874816895
    6. '```' → logprob: -15.895588874816895
    7. '>' → logprob: -16.64558982849121
    8. '۱' → logprob: -17.02058982849121
    9. '  ' → logprob: -17.14558982849121
    10. '<|end|>' → logprob: -17.58308982849121

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043221889063715935
    2. '2' → logprob: -7.750432014465332
    3. ' ' → logprob: -13.500432014465332
    4. '<|end|>' → logprob: -16.37543296813965
    5. '۱' → logprob: -18.12543296813965
    6. '```' → logprob: -18.25043296813965
    7. '>' → logprob: -18.37543296813965
    8. '１' → logprob: -18.75043296813965
    9. '१' → logprob: -18.87543296813965
    10. '[' → logprob: -19.56293296813965

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4140441635390744e-05
    2. ':
' → logprob: -11.625014305114746
    3. ' :' → logprob: -12.750014305114746
    4. '):' → logprob: -14.125014305114746
    5. ':return' → logprob: -14.375014305114746
    6. ':**' → logprob: -14.875014305114746
    7. '.' → logprob: -15.500014305114746
    8. '():' → logprob: -16.37501335144043
    9. ':add' → logprob: -17.25001335144043
    10. ':def' → logprob: -17.50001335144043

Token 87: '       ' (ID: 309)
  Prédit: ' factors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.03260387107729912
    2. '       ' → logprob: -3.5326039791107178
    3. '   ' → logprob: -6.282603740692139
    4. '    ' → logprob: -8.032604217529297
    5. 'f' → logprob: -8.282604217529297
    6. ' ' → logprob: -8.407604217529297
    7. ' f' → logprob: -9.407604217529297
    8. ' factores' → logprob: -10.782604217529297
    9. '     ' → logprob: -11.532604217529297
    10. '	f' → logprob: -11.532604217529297

Token 88: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.00408884696662426
    2. 'f' → logprob: -5.504088878631592
    3. '   ' → logprob: -12.754088401794434
    4. ' factores' → logprob: -12.879088401794434
    5. 'Factors' → logprob: -13.379088401794434
    6. ' f' → logprob: -13.629088401794434
    7. ' facteurs' → logprob: -14.629088401794434
    8. 'factor' → logprob: -14.754088401794434
    9. '       ' → logprob: -15.129088401794434
    10. ' factoren' → logprob: -15.254088401794434

Token 89: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22547902166843414
    2. '.add' → logprob: -1.600479006767273
    3. ' .' → logprob: -10.100479125976562
    4. '.Add' → logprob: -12.225479125976562
    5. '.setdefault' → logprob: -12.350479125976562
    6. '.append' → logprob: -13.100479125976562
    7. ').' → logprob: -13.100479125976562
    8. '‌.' → logprob: -13.350479125976562
    9. 'add' → logprob: -13.600479125976562
    10. '   ' → logprob: -13.975479125976562

Token 90: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12692862749099731
    2. '(' → logprob: -2.1269285678863525
    3. '(
' → logprob: -15.376928329467773
    4. '(

' → logprob: -15.751928329467773
    5. ' (' → logprob: -16.376928329467773
    6. '("("' → logprob: -17.001928329467773
    7. '((' → logprob: -17.376928329467773
    8. '(nn' → logprob: -17.501928329467773
    9. '()' → logprob: -17.876928329467773
    10. '(int' → logprob: -18.251928329467773

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. ')
' → logprob: -11.500018119812012
    3. ' )' → logprob: -11.750018119812012
    4. ')return' → logprob: -16.125019073486328
    5. '}' → logprob: -16.625019073486328
    6. ')n' → logprob: -17.875019073486328
    7. ')#' → logprob: -18.250019073486328
    8. ')}' → logprob: -18.375019073486328
    9. ')

' → logprob: -18.375019073486328
    10. ')`' → logprob: -18.750019073486328

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04094953089952469
    2. '    
' → logprob: -4.66594934463501
    3. '
' → logprob: -5.04094934463501
    4. ' ' → logprob: -5.04094934463501
    5. ' return' → logprob: -5.04094934463501
    6. ':return' → logprob: -6.04094934463501
    7. 'return' → logprob: -6.16594934463501
    8. 'r' → logprob: -6.54094934463501
    9. ' 
' → logprob: -6.66594934463501
    10. ')' → logprob: -6.91594934463501

Token 93: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0782645121216774
    2. ' return' → logprob: -3.2032644748687744
    3. 'return' (adapté à ' return') → logprob: -4.2032647132873535
    4. ' ' → logprob: -4.9532647132873535
    5. ':return' → logprob: -5.0782647132873535
    6. ')' → logprob: -5.9532647132873535
    7. '    
' → logprob: -6.8282647132873535
    8. '    ' → logprob: -7.5782647132873535
    9. '  ' → logprob: -7.7032647132873535
    10. '	return' → logprob: -8.078264236450195

Token 94: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.34874045848846436
    2. 'f' → logprob: -1.2237404584884644
    3. ' f' → logprob: -8.848740577697754
    4. 'factor' → logprob: -8.973740577697754
    5. ' ' → logprob: -11.723740577697754
    6. ' factores' → logprob: -12.223740577697754
    7. 'fact' → logprob: -12.848740577697754
    8. 'fac' → logprob: -13.473740577697754
    9. ' ' → logprob: -13.723740577697754
    10. ' factor' → logprob: -13.723740577697754

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.048921845853328705
    2. '

' → logprob: -4.048922061920166
    3. 'def' → logprob: -4.048922061920166
    4. '<|end|>' → logprob: -5.048922061920166
    5. '```' → logprob: -6.423922061920166
    6. '\' → logprob: -6.548922061920166
    7. '\n' → logprob: -7.298922061920166
    8. '' → logprob: -7.548922061920166
    9. '  
' → logprob: -7.673922061920166
    10. ' 
' → logprob: -7.673922061920166

Token 96: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.961007833480835
    2. 'def' → logprob: -1.086007833480835
    3. 'd' → logprob: -1.336007833480835
    4. '

' → logprob: -5.211008071899414
    5. '\' → logprob: -5.711008071899414
    6. '#' → logprob: -5.836008071899414
    7. 'n' → logprob: -6.461008071899414
    8. '' → logprob: -6.836008071899414
    9. '```' → logprob: -6.836008071899414
    10. ' 
' → logprob: -8.336008071899414

Token 97: ' key' (ID: 2140)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17368058860301971
    2. ' space' → logprob: -2.048680543899536
    3. ' gcd' → logprob: -4.173680782318115
    4. ' l' → logprob: -6.048680782318115
    5. ' main' → logprob: -6.548680782318115
    6. ' factorial' → logprob: -6.673680782318115
    7. ' calculate' → logprob: -6.798680782318115
    8. ' is' → logprob: -6.923680782318115
    9. ' prime' → logprob: -6.923680782318115
    10. ' check' → logprob: -6.923680782318115

Token 98: '_number' (ID: 11733)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15494605898857117
    2. '_' → logprob: -2.1549460887908936
    3. '(x' → logprob: -4.7799458503723145
    4. '(n' → logprob: -5.2799458503723145
    5. '(a' → logprob: -6.2799458503723145
    6. '_generator' → logprob: -6.2799458503723145
    7. 'space' → logprob: -6.6549458503723145
    8. '(word' → logprob: -6.7799458503723145
    9. '_function' → logprob: -7.0299458503723145
    10. '(_' → logprob: -7.2799458503723145

Token 99: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08104453235864639
    2. '(n' → logprob: -2.5810444355010986
    3. ' (' → logprob: -6.831044673919678
    4. '():' → logprob: -7.581044673919678
    5. '(s' → logprob: -8.45604419708252
    6. '(num' → logprob: -9.20604419708252
    7. '(x' → logprob: -9.70604419708252
    8. '(a' → logprob: -10.08104419708252
    9. '()' → logprob: -10.83104419708252
    10. '(N' → logprob: -10.95604419708252

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012410636991262436
    2. ')' → logprob: -6.751241207122803
    3. ':' → logprob: -10.001240730285645
    4. ' ):' → logprob: -11.126240730285645
    5. ',' → logprob: -11.876240730285645
    6. '):
' → logprob: -12.876240730285645
    7. '=' → logprob: -15.501240730285645
    8. ' ' → logprob: -16.12624168395996
    9. '}:' → logprob: -16.25124168395996
    10. '():' → logprob: -16.25124168395996

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028103690594434738
    2. ' ' → logprob: -4.403103828430176
    3. ' return' → logprob: -5.653103828430176
    4. '    ' → logprob: -6.028103828430176
    5. 'f' → logprob: -6.653103828430176
    6. ' factors' → logprob: -6.903103828430176
    7. 'factor' → logprob: -7.153103828430176
    8. ' 
' → logprob: -7.278103828430176
    9. 's' → logprob: -7.278103828430176
    10. ':' → logprob: -7.403103828430176

Token 102: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.7980361580848694
    2. ' return' → logprob: -1.6730360984802246
    3. ' if' → logprob: -2.6730360984802246
    4. 'f' → logprob: -2.6730360984802246
    5. ' f' → logprob: -3.0480360984802246
    6. ' p' → logprob: -3.4230360984802246
    7. '   ' → logprob: -3.6730360984802246
    8. ' result' → logprob: -4.048036098480225
    9. 'if' → logprob: -4.173036098480225
    10. 'return' → logprob: -4.548036098480225

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03181398659944534
    2. '=' → logprob: -3.5318140983581543
    3. '(' → logprob: -6.281814098358154
    4. '.' → logprob: -8.781813621520996
    5. 's' → logprob: -11.656813621520996
    6. ' ' → logprob: -11.781813621520996
    7. '()' → logprob: -12.031813621520996
    8. ' (' → logprob: -12.906813621520996
    9. ' =
' → logprob: -13.156813621520996
    10. ')' → logprob: -13.156813621520996

Token 104: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.10020849853754044
    2. 'prime' → logprob: -2.3502085208892822
    3. '_prime' → logprob: -14.100208282470703
    4. 'pr' → logprob: -14.350208282470703
    5. ' ' → logprob: -15.975208282470703
    6. ' ' → logprob: -16.225208282470703
    7. ' primes' → logprob: -16.475208282470703
    8. 'prim' → logprob: -17.225208282470703
    9. '   ' → logprob: -17.350208282470703
    10. ' key' → logprob: -17.475208282470703

Token 105: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.01815626211464405
    2. '_' → logprob: -4.018156051635742
    3. '_factor' → logprob: -12.518156051635742
    4. '_fac' → logprob: -14.143156051635742
    5. 'f' → logprob: -14.393156051635742
    6. '_fact' → logprob: -15.518156051635742
    7. ' _' → logprob: -15.893156051635742
    8. '```' → logprob: -16.268156051635742
    9. '_s' → logprob: -16.393156051635742
    10. ')_' → logprob: -16.518156051635742

Token 106: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.00031305922311730683
    2. 'actor' → logprob: -9.250312805175781
    3. 'act' → logprob: -9.500312805175781
    4. 'acters' → logprob: -10.500312805175781
    5. 'ctors' → logprob: -10.750312805175781
    6. '_' → logprob: -10.875312805175781
    7. 'a' → logprob: -10.875312805175781
    8. '```' → logprob: -11.250312805175781
    9. 'f' → logprob: -11.375312805175781
    10. '_f' → logprob: -12.125312805175781

Token 107: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011049585416913033
    2. '(' → logprob: -4.511049747467041
    3. ' (' → logprob: -13.636049270629883
    4. '(
' → logprob: -14.511049270629883
    5. '((' → logprob: -16.636049270629883
    6. '(

' → logprob: -17.636049270629883
    7. '(noun' → logprob: -17.886049270629883
    8. ' ' → logprob: -18.511049270629883
    9. '(N' → logprob: -18.636049270629883
    10. '(nn' → logprob: -18.636049270629883

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.666993507067673e-05
    2. ')
' → logprob: -10.375036239624023
    3. ' )' → logprob: -13.250036239624023
    4. '()' → logprob: -13.750036239624023
    5. '(' → logprob: -14.000036239624023
    6. '())' → logprob: -14.250036239624023
    7. ')return' → logprob: -15.500036239624023
    8. '   ' → logprob: -15.625036239624023
    9. '))' → logprob: -15.875036239624023
    10. ' ' → logprob: -15.875036239624023

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00121428316924721
    2. '(' → logprob: -7.876214504241943
    3. '[' → logprob: -8.501214027404785
    4. '    
' → logprob: -8.751214027404785
    5. ' return' → logprob: -9.126214027404785
    6. ')' → logprob: -9.376214027404785
    7. '    ' → logprob: -9.626214027404785
    8. ' if' → logprob: -9.876214027404785
    9. ' ' → logprob: -9.876214027404785
    10. 'return' → logprob: -10.376214027404785

Token 110: ' max' (ID: 2999)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7273256778717041
    2. ' return' → logprob: -1.102325677871704
    3. ' if' → logprob: -2.352325677871704
    4. 'if' → logprob: -2.602325677871704
    5. '   ' → logprob: -5.227325439453125
    6. 'result' → logprob: -5.477325439453125
    7. ' ' → logprob: -6.477325439453125
    8. ' result' → logprob: -6.727325439453125
    9. 's' → logprob: -7.602325439453125
    10. 'r' → logprob: -7.602325439453125

Token 111: '_factor' (ID: 43757)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16888844966888428
    2. '_factor' → logprob: -1.9188884496688843
    3. '_f' → logprob: -5.043888568878174
    4. '(' → logprob: -7.168888568878174
    5. '_key' → logprob: -7.418888568878174
    6. '_val' → logprob: -8.543888092041016
    7. '_fact' → logprob: -9.043888092041016
    8. '_value' → logprob: -9.168888092041016
    9. 'factor' → logprob: -9.293888092041016
    10. 'f' → logprob: -9.293888092041016

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014249772764742374
    2. '=' → logprob: -4.264249801635742
    3. ' ' → logprob: -9.514249801635742
    4. '_' → logprob: -12.389249801635742
    5. '  ' → logprob: -12.514249801635742
    6. 's' → logprob: -12.764249801635742
    7. ',' → logprob: -14.389249801635742
    8. '(' → logprob: -14.889249801635742
    9. '   ' → logprob: -15.639249801635742
    10. ')' → logprob: -15.764249801635742

Token 113: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0068575735203921795
    2. 'max' → logprob: -5.006857395172119
    3. '0' → logprob: -9.131857872009277
    4. ' ' → logprob: -10.381857872009277
    5. '(max' → logprob: -13.131857872009277
    6. ' math' → logprob: -14.756857872009277
    7. ' -' → logprob: -15.756857872009277
    8. '1' → logprob: -16.00685691833496
    9. ' None' → logprob: -16.50685691833496
    10. '   ' → logprob: -16.63185691833496

Token 114: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00033546582562848926
    2. '(' → logprob: -8.000335693359375
    3. ' (' → logprob: -17.250335693359375
    4. 'f' → logprob: -17.875335693359375
    5. ' factors' → logprob: -18.625335693359375
    6. '()' → logprob: -19.250335693359375
    7. 'Factors' → logprob: -19.625335693359375
    8. '(
' → logprob: -19.875335693359375
    9. '(s' → logprob: -20.500335693359375
    10. '	f' → logprob: -20.625335693359375

Token 115: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -9.686778503237292e-05
    2. 'actor' → logprob: -10.250097274780273
    3. 'act' → logprob: -11.250097274780273
    4. ')' → logprob: -11.375097274780273
    5. 'f' → logprob: -11.625097274780273
    6. ' factors' → logprob: -12.000097274780273
    7. '```' → logprob: -12.000097274780273
    8. 'Factors' → logprob: -12.375097274780273
    9. 'acters' → logprob: -12.500097274780273
    10. '(' → logprob: -13.625097274780273

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007952730171382427
    2. ',' → logprob: -5.007952690124512
    3. ' )' → logprob: -6.882952690124512
    4. ' if' → logprob: -9.757952690124512
    5. ')+' → logprob: -9.757952690124512
    6. ' ,' → logprob: -10.007952690124512
    7. '   ' → logprob: -11.132952690124512
    8. ')
' → logprob: -11.257952690124512
    9. ' ' → logprob: -11.632952690124512
    10. '()' → logprob: -12.382952690124512

Token 117: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2395941019058228
    2. '   ' → logprob: -1.3645941019058228
    3. ' ' → logprob: -1.6145941019058228
    4. '%' → logprob: -2.989593982696533
    5. ' if' → logprob: -2.989593982696533
    6. '*' → logprob: -3.614593982696533
    7. '<|end|>' → logprob: -3.739593982696533
    8. '**' → logprob: -3.989593982696533
    9. '
' → logprob: -4.239593982696533
    10. ')' → logprob: -4.364593982696533

Token 118: ' total' (ID: 3609)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5491562485694885
    2. 'return' → logprob: -1.0491561889648438
    3. ' if' → logprob: -3.7991561889648438
    4. '   ' → logprob: -4.174156188964844
    5. ' 
' → logprob: -4.424156188964844
    6. 'if' → logprob: -4.799156188964844
    7. '    
' → logprob: -5.549156188964844
    8. '
' → logprob: -6.674156188964844
    9. ' for' → logprob: -6.924156188964844
    10. ' ' → logprob: -7.049156188964844

Token 119: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3278104364871979
    2. '=' → logprob: -1.3278104066848755
    3. '_sum' → logprob: -4.952810287475586
    4. '_' → logprob: -5.077810287475586
    5. '_factor' → logprob: -7.202810287475586
    6. '_f' → logprob: -8.577810287475586
    7. 'sum' → logprob: -9.827810287475586
    8. '=sum' → logprob: -10.827810287475586
    9. '_=' → logprob: -10.827810287475586
    10. ' ' → logprob: -10.952810287475586

Token 120: 'others' (ID: 30407)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2676544785499573
    2. 'factor' → logprob: -1.6426544189453125
    3. 'f' → logprob: -3.5176544189453125
    4. '=' → logprob: -5.7676544189453125
    5. 'count' → logprob: -6.2676544189453125
    6. 'product' → logprob: -6.5176544189453125
    7. 'digits' → logprob: -6.8926544189453125
    8. '=sum' → logprob: -7.1426544189453125
    9. 'score' → logprob: -7.5176544189453125
    10. 'div' → logprob: -7.7676544189453125

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014168446883559227
    2. '=' → logprob: -4.2641682624816895
    3. ' ' → logprob: -13.514168739318848
    4. '_' → logprob: -13.764168739318848
    5. ' +=' → logprob: -14.389168739318848
    6. 's' → logprob: -14.639168739318848
    7. '=sum' → logprob: -14.764168739318848
    8. '  ' → logprob: -15.514168739318848
    9. '_sum' → logprob: -15.639168739318848
    10. ' ' → logprob: -15.764168739318848

Token 122: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.01657877489924431
    2. 'sum' → logprob: -4.141578674316406
    3. '0' → logprob: -8.016578674316406
    4. ' ' → logprob: -8.766578674316406
    5. ' max' → logprob: -10.391578674316406
    6. '(sum' → logprob: -11.016578674316406
    7. '	sum' → logprob: -12.891578674316406
    8. ' n' → logprob: -12.891578674316406
    9. ' math' → logprob: -13.891578674316406
    10. '_sum' → logprob: -14.141578674316406

Token 123: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00016098834748845547
    2. '([' → logprob: -9.000161170959473
    3. '(' → logprob: -10.500161170959473
    4. '(x' → logprob: -12.500161170959473
    5. '(i' → logprob: -12.875161170959473
    6. 'f' → logprob: -13.375161170959473
    7. '[f' → logprob: -14.750161170959473
    8. '(k' → logprob: -14.875161170959473
    9. ' (' → logprob: -14.875161170959473
    10. '((' → logprob: -15.125161170959473

Token 124: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.208663210272789
    2. '(f' → logprob: -1.9586632251739502
    3. 'actor' → logprob: -3.20866322517395
    4. 'act' → logprob: -6.208662986755371
    5. '{' → logprob: -6.583662986755371
    6. '[f' → logprob: -6.708662986755371
    7. '(' → logprob: -7.583662986755371
    8. '[' → logprob: -7.708662986755371
    9. '(act' → logprob: -8.208662986755371
    10. '/f' → logprob: -8.208662986755371

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002529952325858176
    2. ' -' → logprob: -9.250252723693848
    3. '(f' → logprob: -9.750252723693848
    4. ')-' → logprob: -10.000252723693848
    5. '-' → logprob: -10.750252723693848
    6. ' )' → logprob: -11.000252723693848
    7. ' ' → logprob: -12.375252723693848
    8. '()' → logprob: -12.375252723693848
    9. '   ' → logprob: -13.375252723693848
    10. '{' → logprob: -13.875252723693848

Token 126: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08903031796216965
    2. '-' → logprob: -2.4640302658081055
    3. ' ' → logprob: -9.464030265808105
    4. ' ' → logprob: -11.964030265808105
    5. '<|end|>' → logprob: -13.589030265808105
    6. '()' → logprob: -13.714030265808105
    7. ' –' → logprob: -14.214030265808105
    8. ' —' → logprob: -14.339030265808105
    9. '‌' → logprob: -14.714030265808105
    10. '_' → logprob: -15.214030265808105

Token 127: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0004309076175559312
    2. ' max' → logprob: -7.750431060791016
    3. '[max' → logprob: -16.250431060791016
    4. '(max' → logprob: -17.125431060791016
    5. '	max' → logprob: -17.125431060791016
    6. '=max' → logprob: -19.125431060791016
    7. '_max' → logprob: -19.250431060791016
    8. 'maxlength' → logprob: -19.750431060791016
    9. ' ' → logprob: -20.625431060791016
    10. ':max' → logprob: -21.000431060791016

Token 128: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0009929145453497767
    2. '_' → logprob: -7.125992774963379
    3. '(' → logprob: -9.500992774963379
    4. '(f' → logprob: -9.875992774963379
    5. '(_' → logprob: -10.000992774963379
    6. '(max' → logprob: -12.250992774963379
    7. 'factor' → logprob: -12.750992774963379
    8. '```' → logprob: -13.750992774963379
    9. '_(' → logprob: -13.875992774963379
    10. '_f' → logprob: -14.000992774963379

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0440073162317276
    2. '<|end|>' → logprob: -4.044007301330566
    3. '   ' → logprob: -4.544007301330566
    4. ' 
' → logprob: -5.044007301330566
    5. ' ' → logprob: -6.044007301330566
    6. '    
' → logprob: -6.794007301330566
    7. ' return' → logprob: -7.044007301330566
    8. ')' → logprob: -7.294007301330566
    9. '  
' → logprob: -7.544007301330566
    10. '*' → logprob: -7.669007301330566

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7697173953056335
    2. '
' → logprob: -1.5197174549102783
    3. ' ' → logprob: -2.3947174549102783
    4. ' 
' → logprob: -2.6447174549102783
    5. ' return' → logprob: -2.6447174549102783
    6. ' if' → logprob: -3.6447174549102783
    7. '    
' → logprob: -4.019717216491699
    8. 'return' → logprob: -4.144717216491699
    9. 'if' → logprob: -5.019717216491699
    10. '<|end|>' → logprob: -5.769717216491699

Token 131: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6745734214782715
    2. ' 
' → logprob: -1.6745734214782715
    3. ' return' → logprob: -2.2995734214782715
    4. ' ' → logprob: -2.9245734214782715
    5. ' if' → logprob: -3.0495734214782715
    6. '   ' → logprob: -3.2995734214782715
    7. 'return' (adapté à ' return') → logprob: -4.1745734214782715
    8. ':' → logprob: -4.6745734214782715
    9. '\n' → logprob: -4.7995734214782715
    10. 'if' → logprob: -4.9245734214782715

Token 132: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6399362087249756
    2. 'max' → logprob: -0.7649362087249756
    3. '(max' → logprob: -5.639936447143555
    4. ' (' → logprob: -6.514936447143555
    5. ' ' → logprob: -7.264936447143555
    6. ' abs' → logprob: -7.889936447143555
    7. 'abs' → logprob: -8.264936447143555
    8. '(' → logprob: -8.389936447143555
    9. ''' → logprob: -9.139936447143555
    10. '[max' → logprob: -9.389936447143555

Token 133: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00033677343162707984
    2. '_' → logprob: -9.125336647033691
    3. '(' → logprob: -9.375336647033691
    4. '(_' → logprob: -10.000336647033691
    5. '(max' → logprob: -10.000336647033691
    6. '(f' → logprob: -10.500336647033691
    7. '_f' → logprob: -11.875336647033691
    8. '_fact' → logprob: -12.000336647033691
    9. '_fac' → logprob: -12.500336647033691
    10. 'factor' → logprob: -13.375336647033691

Token 134: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6442552208900452
    2. '+' → logprob: -0.7692552208900452
    3. '<|end|>' → logprob: -5.5192551612854
    4. ' ' → logprob: -5.7692551612854
    5. ' -' → logprob: -7.0192551612854
    6. ' if' → logprob: -7.0192551612854
    7. ' *' → logprob: -7.5192551612854
    8. '>' → logprob: -7.6442551612854
    9. '-' → logprob: -7.7692551612854
    10. '*' → logprob: -7.7692551612854

Token 135: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.251935213804245
    2. 'total' → logprob: -1.5019352436065674
    3. ' ' → logprob: -12.376935005187988
    4. '(total' → logprob: -14.001935005187988
    5. '	total' → logprob: -14.501935005187988
    6. '_total' → logprob: -15.626935005187988
    7. ' ' → logprob: -15.626935005187988
    8. '1' → logprob: -16.626935958862305
    9. 't' → logprob: -17.001935958862305
    10. ' t' → logprob: -17.501935958862305

Token 136: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.703443770878948e-06
    2. '_other' → logprob: -11.875007629394531
    3. ' _' → logprob: -15.000007629394531
    4. '_f' → logprob: -16.50000762939453
    5. '_factor' → logprob: -16.62500762939453
    6. '_

' → logprob: -18.00000762939453
    7. '_helpers' → logprob: -18.00000762939453
    8. '__' → logprob: -18.12500762939453
    9. '_else' → logprob: -18.62500762939453
    10. '_o' → logprob: -18.75000762939453

Token 137: 'others' (ID: 30407)
  Prédit: 'others'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'others' → logprob: -0.00034809779026545584
    2. 'other' → logprob: -8.625348091125488
    3. 'thers' → logprob: -9.000348091125488
    4. 'f' → logprob: -10.750348091125488
    5. 'oters' → logprob: -12.250348091125488
    6. 'ors' → logprob: -12.375348091125488
    7. 'oth' → logprob: -12.625348091125488
    8. 'Others' → logprob: -12.750348091125488
    9. ' others' → logprob: -13.375348091125488
    10. 'othe' → logprob: -13.875348091125488

Token 138: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19970259070396423
    2. '<|end|>' → logprob: -2.574702501296997
    3. '\n' → logprob: -2.949702501296997
    4. '(' → logprob: -3.574702501296997
    5. '\' → logprob: -4.699702739715576
    6. '(
' → logprob: -5.324702739715576
    7. '```' → logprob: -5.949702739715576
    8. '

' → logprob: -5.949702739715576
    9. '' → logprob: -7.199702739715576
    10. '<|end|>' → logprob: -7.574702739715576

Token 139: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07694568485021591
    2. '\n' → logprob: -3.4519457817077637
    3. '<|end|>' → logprob: -3.9519457817077637
    4. 'def' → logprob: -5.201945781707764
    5. '(' → logprob: -5.201945781707764
    6. '\' → logprob: -6.076945781707764
    7. '```' → logprob: -6.076945781707764
    8. '(
' → logprob: -6.576945781707764
    9. '

' → logprob: -6.951945781707764
    10. 'newline' → logprob: -7.326945781707764

Token 140: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.46984097361564636
    2. ' n' → logprob: -1.4698410034179688
    3. ' ' → logprob: -1.9698410034179688
    4. ' num' → logprob: -6.094841003417969
    5. ' number' → logprob: -6.094841003417969
    6. ' _' → logprob: -7.219841003417969
    7. 'n' → logprob: -9.594841003417969
    8. '  ' → logprob: -9.844841003417969
    9. 'i' → logprob: -10.469841003417969
    10. ' x' → logprob: -10.844841003417969

Token 141: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009333607740700245
    2. 'in' → logprob: -4.884333610534668
    3. ' ' → logprob: -6.384333610534668
    4. '  ' → logprob: -11.259333610534668
    5. '	in' → logprob: -12.259333610534668
    6. ' i' → logprob: -12.259333610534668
    7. ',' → logprob: -13.134333610534668
    8. ' ,' → logprob: -13.259333610534668
    9. ' ' → logprob: -13.384333610534668
    10. '<|end|>' → logprob: -13.509333610534668

Token 142: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2519439160823822
    2. 'sys' → logprob: -1.5019439458847046
    3. '	sys' → logprob: -11.751943588256836
    4. '=sys' → logprob: -12.501943588256836
    5. '(sys' → logprob: -12.751943588256836
    6. 'stdin' → logprob: -15.751943588256836
    7. ' ' → logprob: -16.751943588256836
    8. 's' → logprob: -17.876943588256836
    9. '```' → logprob: -17.876943588256836
    10. 'input' → logprob: -18.251943588256836

Token 143: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0009281373349949718
    2. '.' → logprob: -7.250927925109863
    3. ' .' → logprob: -9.500927925109863
    4. ' stdin' → logprob: -9.875927925109863
    5. '.readline' → logprob: -10.500927925109863
    6. 'stdin' → logprob: -10.875927925109863
    7. '.argv' → logprob: -11.000927925109863
    8. '.stdout' → logprob: -11.125927925109863
    9. '(stdin' → logprob: -12.125927925109863
    10. '.readlines' → logprob: -12.375927925109863

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1277739405632019
    2. '.readline' → logprob: -2.2527740001678467
    3. '.strip' → logprob: -4.877773761749268
    4. '.' → logprob: -5.002773761749268
    5. '.readlines' → logprob: -8.627774238586426
    6. '.rstrip' → logprob: -8.877774238586426
    7. ' :' → logprob: -9.752774238586426
    8. ':
' → logprob: -10.252774238586426
    9. '.split' → logprob: -10.502774238586426
    10. '.read' → logprob: -11.002774238586426

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036835651844739914
    2. ' n' → logprob: -3.9118356704711914
    3. 'n' → logprob: -4.161835670471191
    4. '    
' → logprob: -8.661835670471191
    5. ' if' → logprob: -8.911835670471191
    6. '(n' → logprob: -9.286835670471191
    7. ':' → logprob: -10.536835670471191
    8. '```' → logprob: -10.911835670471191
    9. '	n' → logprob: -10.911835670471191
    10. 'if' → logprob: -11.161835670471191

Token 146: ' a' (ID: 261)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16171887516975403
    2. 'n' → logprob: -1.9117188453674316
    3. ' num' → logprob: -7.536718845367432
    4. ' number' → logprob: -7.786718845367432
    5. 'num' → logprob: -7.911718845367432
    6. '   ' → logprob: -9.03671932220459
    7. ' value' → logprob: -10.78671932220459
    8. 'number' → logprob: -11.66171932220459
    9. ' if' → logprob: -12.03671932220459
    10. ' val' → logprob: -12.03671932220459

Token 147: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2343386560678482
    2. '=' → logprob: -1.609338641166687
    3. ',' → logprob: -5.359338760375977
    4. ' ' → logprob: -5.609338760375977
    5. '=int' → logprob: -9.109338760375977
    6. ',b' → logprob: -9.484338760375977
    7. '=line' → logprob: -9.484338760375977
    8. ' ,' → logprob: -9.734338760375977
    9. 'm' → logprob: -10.109338760375977
    10. 'r' → logprob: -10.609338760375977

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048591457307338715
    2. '=' → logprob: -3.048591375350952
    3. ',' → logprob: -12.923591613769531
    4. ' ' → logprob: -13.798591613769531
    5. ' ,' → logprob: -16.17359161376953
    6. '=line' → logprob: -16.29859161376953
    7. ' =
' → logprob: -16.42359161376953
    8. ')' → logprob: -16.42359161376953
    9. '=int' → logprob: -16.42359161376953
    10. ' =)' → logprob: -17.54859161376953

Token 149: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.734879732131958
    2. ' map' → logprob: -1.234879732131958
    3. 'line' → logprob: -1.859879732131958
    4. 'map' → logprob: -2.609879732131958
    5. '[line' → logprob: -8.359879493713379
    6. ' ' → logprob: -10.359879493713379
    7. '[' → logprob: -10.484879493713379
    8. ' [' → logprob: -11.234879493713379
    9. '	line' → logprob: -11.859879493713379
    10. '(line' → logprob: -12.234879493713379

Token 150: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46200641989707947
    2. '(int' → logprob: -1.3370064496994019
    3. '(lambda' → logprob: -2.4620063304901123
    4. '(str' → logprob: -3.8370063304901123
    5. '<|end|>' → logprob: -8.587006568908691
    6. '(eval' → logprob: -9.212006568908691
    7. '(line' → logprob: -9.837006568908691
    8. '(list' → logprob: -10.837006568908691
    9. '(float' → logprob: -10.962006568908691
    10. '(split' → logprob: -10.962006568908691

Token 151: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.008215012028813362
    2. ',line' → logprob: -5.008214950561523
    3. ',' → logprob: -7.133214950561523
    4. ' line' → logprob: -7.383214950561523
    5. ')' → logprob: -10.633214950561523
    6. '(' → logprob: -11.008214950561523
    7. '=line' → logprob: -11.133214950561523
    8. 'line' → logprob: -11.508214950561523
    9. '	line' → logprob: -12.258214950561523
    10. '[line' → logprob: -12.383214950561523

Token 152: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5352221727371216
    2. '.strip' → logprob: -1.0352221727371216
    3. '.split' → logprob: -2.910222053527832
    4. '.' → logprob: -5.410222053527832
    5. ' .' → logprob: -8.910222053527832
    6. '.rstrip' → logprob: -9.035222053527832
    7. '.readline' → logprob: -9.160222053527832
    8. '()' → logprob: -12.035222053527832
    9. 'split' → logprob: -12.910222053527832
    10. 'strip' → logprob: -12.910222053527832

Token 153: '())
' (ID: 4574)
  Prédit: '(',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(','' → logprob: -0.07313515245914459
    2. '())' → logprob: -3.1981351375579834
    3. '('' → logprob: -3.9481351375579834
    4. '(',' → logprob: -5.0731353759765625
    5. '()' → logprob: -6.5731353759765625
    6. ')' → logprob: -6.5731353759765625
    7. '(' → logprob: -7.1981353759765625
    8. '(","' → logprob: -8.073135375976562
    9. '(",' → logprob: -8.948135375976562
    10. '(',',' → logprob: -9.573135375976562

Token 154: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2955794334411621
    2. ' if' → logprob: -2.170579433441162
    3. ' 
' → logprob: -2.545579433441162
    4. ',' → logprob: -3.545579433441162
    5. ',
' → logprob: -4.045579433441162
    6. 'if' → logprob: -4.795579433441162
    7. '    
' → logprob: -6.170579433441162
    8. '  
' → logprob: -6.170579433441162
    9. '   
' → logprob: -6.920579433441162
    10. '   ' → logprob: -7.170579433441162

Token 155: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12760595977306366
    2. ' 
' → logprob: -3.00260591506958
    3. 'if' (adapté à ' if') → logprob: -3.37760591506958
    4. ' print' → logprob: -4.50260591506958
    5. ' result' → logprob: -5.00260591506958
    6. 'print' → logprob: -5.00260591506958
    7. '   ' → logprob: -5.50260591506958
    8. 'result' → logprob: -6.37760591506958
    9. '
' → logprob: -7.00260591506958
    10. ' ' → logprob: -7.12760591506958

Token 156: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.007649460807442665
    2. 'a' → logprob: -5.0076494216918945
    3. ' ' → logprob: -7.0076494216918945
    4. ' not' → logprob: -11.507649421691895
    5. ' (' → logprob: -11.882649421691895
    6. ' b' → logprob: -12.007649421691895
    7. '<|end|>' → logprob: -13.007649421691895
    8. '(a' → logprob: -14.007649421691895
    9. ' ' → logprob: -14.257649421691895
    10. '	a' → logprob: -14.382649421691895

Token 157: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09350977092981339
    2. ' >' → logprob: -2.9685096740722656
    3. '==' → logprob: -3.4685096740722656
    4. ' >=' → logprob: -6.343509674072266
    5. ' ' → logprob: -6.468509674072266
    6. ' <=' → logprob: -6.593509674072266
    7. ' <' → logprob: -6.968509674072266
    8. '>' → logprob: -6.968509674072266
    9. '=' → logprob: -9.968509674072266
    10. '>=' → logprob: -10.093509674072266

Token 158: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10026825219392776
    2. ' ' → logprob: -2.3502683639526367
    3. 'b' → logprob: -10.350268363952637
    4. ' b' → logprob: -10.475268363952637
    5. '  ' → logprob: -15.412768363952637
    6. ' 
' → logprob: -15.787768363952637
    7. '"' → logprob: -15.975268363952637
    8. '1' → logprob: -16.10026741027832
    9. ' ' → logprob: -16.28776741027832
    10. ' -' → logprob: -16.53776741027832

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020741254556924105
    2. ' ' → logprob: -6.252074241638184
    3. 'b' → logprob: -8.877074241638184
    4. ' b' → logprob: -12.252074241638184
    5. '  ' → logprob: -15.314574241638184
    6. '-' → logprob: -15.377074241638184
    7. '1' → logprob: -16.439573287963867
    8. '"' → logprob: -16.814573287963867
    9. '   ' → logprob: -16.877073287963867
    10. 'and' → logprob: -17.064573287963867

Token 160: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20143896341323853
    2. 'and' → logprob: -1.7014389038085938
    3. ' ' → logprob: -11.076438903808594
    4. '<|end|>' → logprob: -12.326438903808594
    5. ' or' → logprob: -12.701438903808594
    6. ' a' → logprob: -13.076438903808594
    7. 'a' → logprob: -14.951438903808594
    8. '	and' → logprob: -15.826438903808594
    9. ':' → logprob: -16.326438903808594
    10. ' an' → logprob: -17.201438903808594

Token 161: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0059290360659360886
    2. 'b' → logprob: -5.130928993225098
    3. ' ' → logprob: -15.255928993225098
    4. '	b' → logprob: -15.380928993225098
    5. '   ' → logprob: -16.755929946899414
    6. '<|end|>' → logprob: -17.380929946899414
    7. ' ' → logprob: -17.630929946899414
    8. '  ' → logprob: -18.630929946899414
    9. ' б' → logprob: -18.630929946899414
    10. '    ' → logprob: -19.130929946899414

Token 162: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09174191951751709
    2. '==' → logprob: -2.8417420387268066
    3. '<|end|>' → logprob: -3.5917420387268066
    4. ' ' → logprob: -6.841742038726807
    5. '0' → logprob: -8.091741561889648
    6. '<|end|>' → logprob: -8.216741561889648
    7. ' =' → logprob: -10.341741561889648
    8. ' ' → logprob: -10.591741561889648
    9. '=' → logprob: -10.591741561889648
    10. '  ' → logprob: -10.966741561889648

Token 163: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759406685829163
    2. '0' → logprob: -0.8259406685829163
    3. ' ' → logprob: -14.32594108581543
    4. '<|end|>' → logprob: -14.70094108581543
    5. '  ' → logprob: -15.82594108581543
    6. '۰' → logprob: -17.20094108581543
    7. '=' → logprob: -18.01344108581543
    8. '   ' → logprob: -18.20094108581543
    9. '<|end|>' → logprob: -18.26344108581543
    10. 's' → logprob: -18.32594108581543

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. '  ' → logprob: -17.250804901123047
    4. '<|end|>' → logprob: -17.875804901123047
    5. '   ' → logprob: -18.375804901123047
    6. '۰' → logprob: -18.500804901123047
    7. '```' → logprob: -18.938304901123047
    8. '０' → logprob: -20.250804901123047
    9. ''s' → logprob: -20.250804901123047
    10. '০' → logprob: -20.438304901123047

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03415354713797569
    2. ':
' → logprob: -3.409153461456299
    3. '   ' → logprob: -7.659153461456299
    4. '       ' → logprob: -10.409153938293457
    5. ':
' → logprob: -13.409153938293457
    6. ',' → logprob: -14.159153938293457
    7. ':return' → logprob: -14.159153938293457
    8. '.' → logprob: -14.409153938293457
    9. ' :' → logprob: -14.659153938293457
    10. '	break' → logprob: -14.909153938293457

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28148362040519714
    2. '   ' → logprob: -1.4064836502075195
    3. ':' → logprob: -8.28148365020752
    4. '	break' → logprob: -10.15648365020752
    5. ' break' → logprob: -11.28148365020752
    6. 'break' → logprob: -12.28148365020752
    7. ':
' → logprob: -12.78148365020752
    8. '	   ' → logprob: -12.90648365020752
    9. '	' → logprob: -12.90648365020752
    10. '     ' → logprob: -12.90648365020752

Token 167: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.4080331027507782
    2. 'break' (adapté à ' break') → logprob: -1.4080331325531006
    3. '   ' → logprob: -2.9080331325531006
    4. '       ' → logprob: -3.4080331325531006
    5. '	break' → logprob: -5.9080328941345215
    6. '_break' → logprob: -12.90803337097168
    7. ' ' → logprob: -13.40803337097168
    8. '           ' → logprob: -13.53303337097168
    9. '  ' → logprob: -13.90803337097168
    10. '    
' → logprob: -14.03303337097168

Token 168: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.063727617263794
    2. '    
' → logprob: -1.063727617263794
    3. '
' → logprob: -1.188727617263794
    4. '  
' → logprob: -6.063727378845215
    5. '   
' → logprob: -6.438727378845215
    6. ' 
' → logprob: -7.188727378845215
    7. '	
' → logprob: -9.188727378845215
    8. '     
' → logprob: -9.438727378845215
    9. '        
' → logprob: -9.813727378845215
    10. 'print' → logprob: -10.438727378845215

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031635675579309464
    2. '    
' → logprob: -4.281635761260986
    3. '
' → logprob: -4.781635761260986
    4. ' 
' → logprob: -5.156635761260986
    5. '   
' → logprob: -6.781635761260986
    6. 'print' → logprob: -7.031635761260986
    7. ' print' → logprob: -7.531635761260986
    8. '     
' → logprob: -8.531635284423828
    9. '  
' → logprob: -8.781635284423828
    10. '    ' → logprob: -8.781635284423828

Token 170: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21352343261241913
    2. '   ' → logprob: -2.0885233879089355
    3. ' 
' → logprob: -3.2135233879089355
    4. '    
' → logprob: -4.5885233879089355
    5. 'result' → logprob: -4.9635233879089355
    6. 'print' (adapté à ' print') → logprob: -5.7135233879089355
    7. ' result' → logprob: -6.7135233879089355
    8. ' for' → logprob: -6.8385233879089355
    9. '   
' → logprob: -7.0885233879089355
    10. 'n' → logprob: -7.2135233879089355

Token 171: '('' (ID: 706)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.08853759616613388
    2. '(' → logprob: -2.5885376930236816
    3. '(abs' → logprob: -4.838537693023682
    4. '(max' → logprob: -6.838537693023682
    5. '("' → logprob: -8.463537216186523
    6. '(f' → logprob: -8.963537216186523
    7. '('' → logprob: -9.588537216186523
    8. '(int' → logprob: -9.963537216186523
    9. 'abs' → logprob: -10.088537216186523
    10. 'key' → logprob: -10.338537216186523

Token 172: 'a' (ID: 64)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.02959406375885
    2. '{' → logprob: -1.52959406375885
    3. ''' → logprob: -2.1545939445495605
    4. 'max' → logprob: -2.2795939445495605
    5. 'abs' → logprob: -2.7795939445495605
    6. 'key' → logprob: -2.9045939445495605
    7. ')' → logprob: -3.1545939445495605
    8. 'min' → logprob: -4.2795939445495605
    9. '',' → logprob: -4.6545939445495605
    10. '{},' → logprob: -5.9045939445495605

Token 173: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8527253270149231
    2. ' +' → logprob: -1.8527252674102783
    3. ',b' → logprob: -2.6027252674102783
    4. '+b' → logprob: -2.9777252674102783
    5. ' ,' → logprob: -3.2277252674102783
    6. ' b' → logprob: -3.2277252674102783
    7. ' ',' → logprob: -3.4777252674102783
    8. '',' → logprob: -3.6027252674102783
    9. ':' → logprob: -3.6027252674102783
    10. ':',' → logprob: -3.9777252674102783

Token 174: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47558972239494324
    2. ' ,' → logprob: -1.4755897521972656
    3. ' +' → logprob: -2.2255897521972656
    4. '+' → logprob: -4.350589752197266
    5. ',b' → logprob: -4.475589752197266
    6. '+b' → logprob: -4.975589752197266
    7. ' *' → logprob: -5.225589752197266
    8. ' ' → logprob: -6.600589752197266
    9. '*' → logprob: -6.975589752197266
    10. ')' → logprob: -7.725589752197266

Token 175: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.04858941584825516
    2. 'key' → logprob: -3.0485894680023193
    3. '   ' → logprob: -14.173589706420898
    4. 'abs' → logprob: -14.923589706420898
    5. ' ' → logprob: -15.048589706420898
    6. ' abs' → logprob: -15.298589706420898
    7. '	key' → logprob: -15.298589706420898
    8. '(key' → logprob: -16.2985897064209
    9. '  ' → logprob: -17.7985897064209
    10. ')' → logprob: -18.0485897064209

Token 176: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00027206414961256087
    2. '_key' → logprob: -9.000271797180176
    3. '_' → logprob: -9.125271797180176
    4. '_n' → logprob: -11.125271797180176
    5. '_num' → logprob: -11.375271797180176
    6. '_numbers' → logprob: -12.625271797180176
    7. '_a' → logprob: -13.250271797180176
    8. 'number' → logprob: -13.875271797180176
    9. '_(' → logprob: -14.000271797180176
    10. '```' → logprob: -14.125271797180176

Token 177: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00016182278341148049
    2. '(' → logprob: -8.750162124633789
    3. ' (' → logprob: -13.000162124633789
    4. '(b' → logprob: -14.875162124633789
    5. 'a' → logprob: -15.125162124633789
    6. '(
' → logprob: -16.37516212463379
    7. ')(' → logprob: -16.50016212463379
    8. '((' → logprob: -16.62516212463379
    9. '(ab' → logprob: -17.37516212463379
    10. '(A' → logprob: -17.62516212463379

Token 178: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023488879669457674
    2. ' )' → logprob: -6.502348899841309
    3. ')>' → logprob: -7.252348899841309
    4. '')' → logprob: -9.377348899841309
    5. '>' → logprob: -10.877348899841309
    6. ' >' → logprob: -11.127348899841309
    7. ' ' → logprob: -12.002348899841309
    8. '>)' → logprob: -12.252348899841309
    9. ')>=' → logprob: -13.627348899841309
    10. '```' → logprob: -13.752348899841309

Token 179: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06325112283229828
    2. '>' → logprob: -2.81325101852417
    3. ' <' → logprob: -7.18825101852417
    4. ' ' → logprob: -7.81325101852417
    5. '<' → logprob: -10.188251495361328
    6. ''' → logprob: -10.688251495361328
    7. ' >=' → logprob: -10.813251495361328
    8. ')' → logprob: -11.563251495361328
    9. '()>' → logprob: -11.938251495361328
    10. '    ' → logprob: -12.438251495361328

Token 180: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.016097597777843475
    2. 'key' → logprob: -4.141097545623779
    3. ' ' → logprob: -9.891098022460938
    4. '	key' → logprob: -12.391098022460938
    5. '<|end|>' → logprob: -12.516098022460938
    6. '(key' → logprob: -13.891098022460938
    7. '_key' → logprob: -14.016098022460938
    8. ' ' → logprob: -14.016098022460938
    9. '0' → logprob: -14.641098022460938
    10. ')' → logprob: -14.641098022460938

Token 181: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.747814349073451e-05
    2. '_' → logprob: -11.875017166137695
    3. 'number' → logprob: -12.125017166137695
    4. 'Number' → logprob: -13.500017166137695
    5. '_NUMBER' → logprob: -13.625017166137695
    6. ')' → logprob: -14.875017166137695
    7. ' ' → logprob: -15.000017166137695
    8. 'b' → logprob: -15.250017166137695
    9. '_Number' → logprob: -15.375017166137695
    10. 'umber' → logprob: -15.500017166137695

Token 182: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0003850325592793524
    2. ' (' → logprob: -8.625385284423828
    3. 'b' → logprob: -9.250385284423828
    4. '(' → logprob: -9.250385284423828
    5. ' b' → logprob: -12.375385284423828
    6. ')' → logprob: -12.500385284423828
    7. ')b' → logprob: -13.000385284423828
    8. '('' → logprob: -13.375385284423828
    9. ')(' → logprob: -14.000385284423828
    10. '((' → logprob: -16.000385284423828

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04453248530626297
    2. ' else' → logprob: -3.294532537460327
    3. 'else' → logprob: -5.044532299041748
    4. ' )' → logprob: -11.419532775878906
    5. '')' → logprob: -11.544532775878906
    6. '   ' → logprob: -13.294532775878906
    7. ' ' → logprob: -13.794532775878906
    8. '    ' → logprob: -14.669532775878906
    9. '	else' → logprob: -14.669532775878906
    10. ',' → logprob: -14.919532775878906

Token 184: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02975129522383213
    2. 'else' → logprob: -3.5297513008117676
    3. ' ' → logprob: -14.40475082397461
    4. '	else' → logprob: -15.27975082397461
    5. ' els' → logprob: -17.40475082397461
    6. '_else' → logprob: -18.52975082397461
    7. '```' → logprob: -18.65475082397461
    8. ''' → logprob: -19.15475082397461
    9. 'el' → logprob: -19.52975082397461
    10. ' '' → logprob: -20.15475082397461

Token 185: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.002998977666720748
    2. ''' → logprob: -6.3779988288879395
    3. ' '' → logprob: -6.7529988288879395
    4. 'b' → logprob: -9.002999305725098
    5. ' ' → logprob: -14.127999305725098
    6. '
' → logprob: -14.252999305725098
    7. '>b' → logprob: -14.252999305725098
    8. '('' → logprob: -14.627999305725098
    9. ''\' → logprob: -14.752999305725098
    10. '	' → logprob: -14.752999305725098

Token 186: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031857939902693033
    2. ''b' → logprob: -5.753185749053955
    3. ''' → logprob: -12.253186225891113
    4. ' b' → logprob: -12.753186225891113
    5. '\b' → logprob: -16.003185272216797
    6. ')b' → logprob: -16.003185272216797
    7. '	b' → logprob: -16.503185272216797
    8. '')' → logprob: -16.628185272216797
    9. '>b' → logprob: -16.628185272216797
    10. '"' → logprob: -18.253185272216797

Token 187: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741097390651703
    2. '')' → logprob: -0.9741097688674927
    3. '")' → logprob: -11.099109649658203
    4. ''' → logprob: -12.349109649658203
    5. '}')' → logprob: -12.599109649658203
    6. '<|end|>' → logprob: -12.724109649658203
    7. ' )' → logprob: -13.974109649658203
    8. '}' → logprob: -14.224109649658203
    9. '')
' → logprob: -14.349109649658203
    10. '})' → logprob: -14.349109649658203


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 185
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 93
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 49.19%
Précision adaptée (1ère position): 50.27%
Précision (top 10): 88.11%
================================================================================
