================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

input = sys.stdin.readline
N = int(input())
t = [int(input()) for _ in range(N)]
max_t = max(t)

min_sum = float('inf')
for L in range(max_t, max_t + 10001):
    s = 0
    for x in t:
        r = L % x
        s += (0 if r == 0 else x - r)
    if s < min_sum:
        min_sum = s
print(min_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3205606937408447
    2. '.' → logprob: -1.4455606937408447
    3. '\' → logprob: -4.570560455322266
    4. 'import' → logprob: -4.570560455322266
    5. 'newline' → logprob: -5.195560455322266
    6. '<|end|>' → logprob: -5.320560455322266
    7. '
' → logprob: -6.570560455322266
    8. '```' → logprob: -7.070560455322266
    9. ',' → logprob: -7.195560455322266
    10. '\r' → logprob: -7.195560455322266

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4576877951622009
    2. '\n' → logprob: -1.8326878547668457
    3. '\' → logprob: -2.3326878547668457
    4. 'import' → logprob: -3.0826878547668457
    5. '```' → logprob: -3.8326878547668457
    6. '
' → logprob: -4.207687854766846
    7. '<|end|>' → logprob: -4.207687854766846
    8. ',' → logprob: -5.582687854766846
    9. '

' → logprob: -5.832687854766846
    10. '<|end|>' → logprob: -6.582687854766846

Token 6: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.111208438873291
    2. '\' → logprob: -1.611208438873291
    3. 'import' → logprob: -1.861208438873291
    4. '.' → logprob: -1.861208438873291
    5. '```' → logprob: -2.611208438873291
    6. 'def' → logprob: -3.361208438873291
    7. '
' → logprob: -4.111208438873291
    8. ',' → logprob: -4.611208438873291
    9. '#' → logprob: -5.236208438873291
    10. '<|end|>' → logprob: -5.361208438873291

Token 7: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5239038467407227
    2. '.' → logprob: -0.8989038467407227
    3. '()' → logprob: -8.023903846740723
    4. ')' → logprob: -9.273903846740723
    5. ',' → logprob: -9.648903846740723
    6. '(
' → logprob: -9.773903846740723
    7. '(.)' → logprob: -10.023903846740723
    8. ' (' → logprob: -10.523903846740723
    9. '_' → logprob: -10.648903846740723
    10. '[' → logprob: -10.773903846740723

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.08084531873464584
    2. ' input' → logprob: -2.830845355987549
    3. 'sys' → logprob: -4.455845355987549
    4. 'input' → logprob: -4.955845355987549
    5. ' ' → logprob: -10.70584487915039
    6. '(sys' → logprob: -11.58084487915039
    7. '=sys' → logprob: -11.70584487915039
    8. '	sys' → logprob: -12.83084487915039
    9. ' system' → logprob: -14.08084487915039
    10. '```' → logprob: -14.08084487915039

Token 9: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.2230227142572403
    2. '.' → logprob: -1.723022699356079
    3. '.input' → logprob: -5.098022937774658
    4. ' .' → logprob: -5.223022937774658
    5. '.argv' → logprob: -5.223022937774658
    6. '.stdout' → logprob: -5.973022937774658
    7. '.readline' → logprob: -7.223022937774658
    8. '.import' → logprob: -7.598022937774658
    9. '.path' → logprob: -8.4730224609375
    10. '.std' → logprob: -9.3480224609375

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.20804454386234283
    2. '.' → logprob: -1.8330445289611816
    3. '.read' → logprob: -3.5830445289611816
    4. '.readlines' → logprob: -10.20804500579834
    5. 'read' → logprob: -10.45804500579834
    6. '.Read' → logprob: -10.70804500579834
    7. '.\' → logprob: -12.45804500579834
    8. '```' → logprob: -12.83304500579834
    9. ' .' → logprob: -12.95804500579834
    10. '.READ' → logprob: -13.08304500579834

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20942409336566925
    2. '(
' → logprob: -1.8344241380691528
    3. '()' → logprob: -4.209424018859863
    4. '
' → logprob: -4.709424018859863
    5. '(

' → logprob: -6.459424018859863
    6. '()
' → logprob: -7.209424018859863
    7. '\n' → logprob: -7.709424018859863
    8. '```' → logprob: -8.334424018859863
    9. '\' → logprob: -8.459424018859863
    10. '

' → logprob: -8.584424018859863

Token 12: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12276008725166321
    2. '(' → logprob: -2.247760057449341
    3. '()
' → logprob: -5.62276029586792
    4. '()

' → logprob: -6.12276029586792
    5. 'def' → logprob: -6.24776029586792
    6. '(
' → logprob: -6.62276029586792
    7. ')' → logprob: -8.747759819030762
    8. '(

' → logprob: -8.747759819030762
    9. '()\' → logprob: -9.247759819030762
    10. '#' → logprob: -9.622759819030762

Token 13: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6436403393745422
    2. ' =' → logprob: -1.7686402797698975
    3. ')' → logprob: -2.2686402797698975
    4. '=' → logprob: -2.2686402797698975
    5. '[' → logprob: -3.1436402797698975
    6. ',' → logprob: -4.518640518188477
    7. '.' → logprob: -5.018640518188477
    8. '  ' → logprob: -5.518640518188477
    9. '_' → logprob: -5.518640518188477
    10. '>' → logprob: -5.643640518188477

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.006823236122727394
    2. 'int' → logprob: -5.3818230628967285
    3. ' ' → logprob: -6.1318230628967285
    4. ' input' → logprob: -11.006823539733887
    5. '10' → logprob: -12.881823539733887
    6. '20' → logprob: -13.131823539733887
    7. 'input' → logprob: -13.506823539733887
    8. '=int' → logprob: -13.506823539733887
    9. '5' → logprob: -14.256823539733887
    10. '0' → logprob: -14.256823539733887

Token 15: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47435784339904785
    2. '(' → logprob: -0.9743578433990479
    3. '(N' → logprob: -8.974357604980469
    4. '('' → logprob: -9.349357604980469
    5. ' (' → logprob: -10.224357604980469
    6. 'input' → logprob: -11.849357604980469
    7. '()' → logprob: -11.974357604980469
    8. '(
' → logprob: -12.099357604980469
    9. '("' → logprob: -12.849357604980469
    10. '(sys' → logprob: -12.974357604980469

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0033534476533532143
    2. '()' → logprob: -5.753353595733643
    3. ')' → logprob: -8.753353118896484
    4. ' ())' → logprob: -11.628353118896484
    5. '())
' → logprob: -12.378353118896484
    6. '().' → logprob: -13.003353118896484
    7. '(' → logprob: -13.503353118896484
    8. '()))' → logprob: -14.753353118896484
    9. '())

' → logprob: -15.628353118896484
    10. '();)' → logprob: -16.128353118896484

Token 17: 't' (ID: 83)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3900762796401978
    2. 's' → logprob: -1.8900762796401978
    3. 'result' → logprob: -2.015076160430908
    4. 'for' → logprob: -2.640076160430908
    5. 'data' → logprob: -2.765076160430908
    6. 'if' → logprob: -3.015076160430908
    7. 'a' → logprob: -3.265076160430908
    8. 'factor' → logprob: -3.390076160430908
    9. ')' → logprob: -3.640076160430908
    10. 'area' → logprob: -4.265076160430908

Token 18: ' =' (ID: 314)
  Prédit: 'imes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.3805617690086365
    2. 'ime' → logprob: -1.7555618286132812
    3. ' =' → logprob: -2.5055618286132812
    4. '=' → logprob: -4.755561828613281
    5. 'i' → logprob: -4.755561828613281
    6. 'emp' → logprob: -5.630561828613281
    7. '_' → logprob: -5.755561828613281
    8. 'o' → logprob: -5.755561828613281
    9. 'arget' → logprob: -5.755561828613281
    10. 'otal' → logprob: -6.005561828613281

Token 19: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.06082284450531
    2. ' [' → logprob: -1.81082284450531
    3. 'list' → logprob: -1.93582284450531
    4. '[int' → logprob: -2.0608229637145996
    5. ' []' → logprob: -2.1858229637145996
    6. '[]' → logprob: -3.0608229637145996
    7. '[' → logprob: -3.4358229637145996
    8. '[input' → logprob: -4.3108229637146
    9. 'input' → logprob: -5.0608229637146
    10. ' input' → logprob: -5.6858229637146

Token 20: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002081143669784069
    2. '(int' → logprob: -6.502080917358398
    3. '0' → logprob: -8.127080917358398
    4. ' int' → logprob: -8.627080917358398
    5. ']int' → logprob: -9.877080917358398
    6. 'float' → logprob: -11.252080917358398
    7. ']' → logprob: -11.252080917358398
    8. 'map' → logprob: -11.877080917358398
    9. 'input' → logprob: -12.252080917358398
    10. ',int' → logprob: -12.502080917358398

Token 21: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5030096769332886
    2. '(input' → logprob: -1.0030096769332886
    3. '(x' → logprob: -3.753009796142578
    4. '()' → logprob: -5.753009796142578
    5. '()]' → logprob: -6.628009796142578
    6. '(i' → logprob: -7.628009796142578
    7. ']' → logprob: -11.003009796142578
    8. '(
' → logprob: -11.128009796142578
    9. '(

' → logprob: -11.503009796142578
    10. '(a' → logprob: -11.628009796142578

Token 22: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00046749215107411146
    2. '()' → logprob: -8.125467300415039
    3. '()]' → logprob: -9.000467300415039
    4. '()),' → logprob: -11.125467300415039
    5. '().' → logprob: -11.250467300415039
    6. '())
' → logprob: -11.875467300415039
    7. '()))' → logprob: -12.375467300415039
    8. ' ())' → logprob: -12.625467300415039
    9. ')' → logprob: -13.375467300415039
    10. ')]' → logprob: -13.875467300415039

Token 23: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07133381813764572
    2. ']' → logprob: -3.071333885192871
    3. ')]' → logprob: -4.071333885192871
    4. '()' → logprob: -5.946333885192871
    5. '()]' → logprob: -6.696333885192871
    6. '[i' → logprob: -7.571333885192871
    7. ' for' → logprob: -8.071333885192871
    8. '[' → logprob: -8.321333885192871
    9. 'for' → logprob: -8.321333885192871
    10. '])' → logprob: -9.446333885192871

Token 24: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2135932445526123
    2. ' _' → logprob: -1.9635932445526123
    3. ' range' → logprob: -3.2135932445526123
    4. ' ' → logprob: -4.588593482971191
    5. ' i' → logprob: -6.713593482971191
    6. ' in' → logprob: -8.463593482971191
    7. '_range' → logprob: -9.338593482971191
    8. 'range' → logprob: -10.088593482971191
    9. ' ' → logprob: -11.838593482971191
    10. '	range' → logprob: -11.963593482971191

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.029249906539917
    2. 'range' → logprob: -1.029249906539917
    3. 'in' → logprob: -1.654249906539917
    4. ' range' → logprob: -2.404249906539917
    5. ' ' → logprob: -5.654250144958496
    6. '_' → logprob: -8.904250144958496
    7. '  ' → logprob: -9.404250144958496
    8. '	range' → logprob: -10.904250144958496
    9. '   ' → logprob: -11.154250144958496
    10. '```' → logprob: -11.154250144958496

Token 26: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011049943044781685
    2. ' range' → logprob: -4.511049747467041
    3. '(range' → logprob: -13.3860502243042
    4. ' ' → logprob: -15.7610502243042
    5. 'r' → logprob: -16.011049270629883
    6. 'ran' → logprob: -16.261049270629883
    7. 'rang' → logprob: -16.261049270629883
    8. '	range' → logprob: -17.136049270629883
    9. '[' → logprob: -17.386049270629883
    10. 'N' → logprob: -17.761049270629883

Token 27: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00034261439577676356
    2. '(' → logprob: -8.00034236907959
    3. 'N' → logprob: -12.12534236907959
    4. '(n' → logprob: -13.50034236907959
    5. ' (' → logprob: -15.75034236907959
    6. '(
' → logprob: -16.375343322753906
    7. ' N' → logprob: -17.625343322753906
    8. ')' → logprob: -17.750343322753906
    9. '(M' → logprob: -18.875343322753906
    10. '((' → logprob: -18.875343322753906

Token 28: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0012171403504908085
    2. ')' → logprob: -7.001217365264893
    3. ']' → logprob: -8.126216888427734
    4. '])' → logprob: -12.376216888427734
    5. '])]' → logprob: -12.876216888427734
    6. ')])' → logprob: -13.501216888427734
    7. ')]
' → logprob: -14.501216888427734
    8. '))' → logprob: -15.126216888427734
    9. ')],' → logprob: -15.501216888427734
    10. ' )' → logprob: -15.751216888427734

Token 29: 'max' (ID: 3228)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6360617280006409
    2. 'g' → logprob: -1.761061668395996
    3. 't' → logprob: -2.636061668395996
    4. 'result' → logprob: -2.761061668395996
    5. 's' → logprob: -3.261061668395996
    6. ' 
' → logprob: -3.761061668395996
    7. 'a' → logprob: -4.261061668395996
    8. 'max' → logprob: -4.261061668395996
    9. 'm' → logprob: -4.886061668395996
    10. 'sum' → logprob: -5.011061668395996

Token 30: '_t' (ID: 838)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19835275411605835
    2. '_t' → logprob: -1.9483528137207031
    3. '_time' → logprob: -3.448352813720703
    4. '_val' → logprob: -6.073352813720703
    5. '(' → logprob: -6.823352813720703
    6. '_value' → logprob: -7.448352813720703
    7. '(t' → logprob: -7.698352813720703
    8. 't' → logprob: -7.948352813720703
    9. '_len' → logprob: -8.073352813720703
    10. '_=' → logprob: -9.323352813720703

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48982489109039307
    2. '=' → logprob: -0.9898248910903931
    3. '_' → logprob: -4.4898247718811035
    4. '(' → logprob: -5.6148247718811035
    5. ' ' → logprob: -8.614825248718262
    6. '=max' → logprob: -8.614825248718262
    7. ',' → logprob: -9.239825248718262
    8. '_=' → logprob: -9.489825248718262
    9. ')' → logprob: -9.739825248718262
    10. ']' → logprob: -10.489825248718262

Token 32: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12727464735507965
    2. ' max' → logprob: -2.127274751663208
    3. '0' → logprob: -8.627274513244629
    4. 'math' → logprob: -9.877274513244629
    5. 't' → logprob: -10.127274513244629
    6. ' t' → logprob: -10.877274513244629
    7. ' ' → logprob: -11.127274513244629
    8. '(max' → logprob: -11.377274513244629
    9. '100' → logprob: -11.752274513244629
    10. 'sum' → logprob: -12.627274513244629

Token 33: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0015112892724573612
    2. '(' → logprob: -6.501511096954346
    3. '(max' → logprob: -12.251511573791504
    4. ' (' → logprob: -13.126511573791504
    5. 't' → logprob: -14.001511573791504
    6. '(s' → logprob: -14.001511573791504
    7. '(
' → logprob: -15.251511573791504
    8. '(

' → logprob: -17.126510620117188
    9. '(time' → logprob: -17.251510620117188
    10. '_t' → logprob: -17.501510620117188

Token 34: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000104616025055293
    2. ' )' → logprob: -10.000104904174805
    3. ')
' → logprob: -11.000104904174805
    4. '+' → logprob: -11.250104904174805
    5. ')t' → logprob: -11.500104904174805
    6. ')+' → logprob: -11.875104904174805
    7. '))' → logprob: -12.500104904174805
    8. ']' → logprob: -13.125104904174805
    9. 't' → logprob: -13.625104904174805
    10. '**' → logprob: -14.625104904174805

Token 35: 'min' (ID: 1493)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2483651340007782
    2. '+' → logprob: -1.9983651638031006
    3. ' 
' → logprob: -3.9983651638031006
    4. 'for' → logprob: -4.4983649253845215
    5. 'max' → logprob: -4.4983649253845215
    6. ' ' → logprob: -4.6233649253845215
    7. '=' → logprob: -6.1233649253845215
    8. 't' → logprob: -6.1233649253845215
    9. 'print' → logprob: -6.2483649253845215
    10. ' for' → logprob: -6.2483649253845215

Token 36: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47038307785987854
    2. '_time' → logprob: -1.5953830480575562
    3. '_t' → logprob: -1.8453830480575562
    4. '_diff' → logprob: -5.095383167266846
    5. '_val' → logprob: -5.470383167266846
    6. '_sum' → logprob: -6.970383167266846
    7. '_=' → logprob: -7.720383167266846
    8. '_value' → logprob: -7.970383167266846
    9. '_gap' → logprob: -7.970383167266846
    10. '_cost' → logprob: -8.720382690429688

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13428081572055817
    2. '=' → logprob: -2.2592809200286865
    3. '_' → logprob: -3.8842809200286865
    4. '_=' → logprob: -7.884280681610107
    5. ' ' → logprob: -9.009281158447266
    6. 's' → logprob: -9.634281158447266
    7. ',' → logprob: -9.884281158447266
    8. '_val' → logprob: -11.509281158447266
    9. '_sum' → logprob: -11.634281158447266
    10. '_time' → logprob: -12.384281158447266

Token 38: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6882190108299255
    2. 'math' → logprob: -1.5632190704345703
    3. 'sum' → logprob: -1.9382190704345703
    4. '10' → logprob: -2.4382190704345703
    5. 'max' → logprob: -3.6882190704345703
    6. ' float' → logprob: -4.18821907043457
    7. '0' → logprob: -5.18821907043457
    8. ' sum' → logprob: -5.68821907043457
    9. ' math' → logprob: -5.68821907043457
    10. 'min' → logprob: -7.06321907043457

Token 39: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00259539601393044
    2. ''in' → logprob: -6.2525954246521
    3. ''' → logprob: -8.002594947814941
    4. '('+' → logprob: -9.127594947814941
    5. '(' → logprob: -9.752594947814941
    6. 'inf' → logprob: -9.752594947814941
    7. '(in' → logprob: -10.627594947814941
    8. ''s' → logprob: -10.752594947814941
    9. '("' → logprob: -12.002594947814941
    10. ''l' → logprob: -12.502594947814941

Token 40: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.320199877838604e-07
    2. '-inf' → logprob: -15.125
    3. 'in' → logprob: -16.125
    4. ''' → logprob: -16.875
    5. ''in' → logprob: -17.125
    6. 'INF' → logprob: -17.875
    7. 'Inf' → logprob: -18.125
    8. ' inf' → logprob: -18.625
    9. 'info' → logprob: -18.625
    10. '.inf' → logprob: -19.25

Token 41: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04888347536325455
    2. ' )' → logprob: -3.0488834381103516
    3. ')
' → logprob: -8.673883438110352
    4. ' )
' → logprob: -9.048883438110352
    5. ')

' → logprob: -13.173883438110352
    6. ')
' → logprob: -13.423883438110352
    7. ' )

' → logprob: -13.673883438110352
    8. '')' → logprob: -13.798883438110352
    9. ' )
' → logprob: -14.423883438110352
    10. ' ' → logprob: -14.548883438110352

Token 42: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001707540825009346
    2. ' for' → logprob: -6.626707553863525
    3. 'answer' → logprob: -9.376707077026367
    4. 'sum' → logprob: -9.501707077026367
    5. 'max' → logprob: -9.751707077026367
    6. 'ans' → logprob: -10.501707077026367
    7. '
' → logprob: -11.126707077026367
    8. 't' → logprob: -11.251707077026367
    9. 'total' → logprob: -11.501707077026367
    10. 'def' → logprob: -11.626707077026367

Token 43: ' L' (ID: 451)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05919898301362991
    2. ' x' → logprob: -3.309199094772339
    3. ' time' → logprob: -4.80919885635376
    4. ' k' → logprob: -6.05919885635376
    5. 'i' → logprob: -6.43419885635376
    6. ' m' → logprob: -6.74669885635376
    7. ' length' → logprob: -7.05919885635376
    8. ' _' → logprob: -7.43419885635376
    9. ' h' → logprob: -7.68419885635376
    10. ' ' → logprob: -7.80919885635376

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00682288222014904
    2. 'in' → logprob: -5.0068230628967285
    3. ' ' → logprob: -9.25682258605957
    4. '1' → logprob: -12.25682258605957
    5. 'ange' → logprob: -13.75682258605957
    6. ',' → logprob: -14.25682258605957
    7. '_' → logprob: -14.38182258605957
    8. 'range' → logprob: -14.38182258605957
    9. '	in' → logprob: -14.50682258605957
    10. 'In' → logprob: -14.63182258605957

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.010704077780246735
    2. 'range' → logprob: -4.760704040527344
    3. ' t' → logprob: -6.260704040527344
    4. 't' → logprob: -8.885704040527344
    5. ' ' → logprob: -11.135704040527344
    6. '(range' → logprob: -12.260704040527344
    7. ' r' → logprob: -12.635704040527344
    8. '[' → logprob: -13.010704040527344
    9. ' ran' → logprob: -13.198204040527344
    10. '	range' → logprob: -13.198204040527344

Token 46: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2014571875333786
    2. '(max' → logprob: -1.701457142829895
    3. '(min' → logprob: -11.326457023620605
    4. '(len' → logprob: -11.576457023620605
    5. ' (' → logprob: -11.826457023620605
    6. '(N' → logprob: -11.951457023620605
    7. 'max' → logprob: -13.326457023620605
    8. '1' → logprob: -13.701457023620605
    9. ' ' → logprob: -13.826457023620605
    10. '((' → logprob: -13.826457023620605

Token 47: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.723973582556937e-05
    2. '(' → logprob: -12.125017166137695
    3. '_' → logprob: -12.125017166137695
    4. '(t' → logprob: -12.625017166137695
    5. 't' → logprob: -13.750017166137695
    6. '_T' → logprob: -14.500017166137695
    7. '+' → logprob: -14.750017166137695
    8. '+t' → logprob: -15.375017166137695
    9. '(_' → logprob: -15.625017166137695
    10. '(max' → logprob: -15.875017166137695

Token 48: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6944646239280701
    2. ' +' → logprob: -0.6944646239280701
    3. '):' → logprob: -7.069464683532715
    4. ',' → logprob: -8.069464683532715
    5. ' ' → logprob: -10.319464683532715
    6. '*' → logprob: -10.569464683532715
    7. ' ):' → logprob: -10.694464683532715
    8. ' //' → logprob: -11.069464683532715
    9. '//' → logprob: -11.194464683532715
    10. ' ,' → logprob: -11.319464683532715

Token 49: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8445809483528137
    2. ' max' → logprob: -0.9695809483528137
    3. ' sum' → logprob: -2.844580888748169
    4. '0' → logprob: -2.844580888748169
    5. 'max' → logprob: -3.219580888748169
    6. '10' → logprob: -4.844581127166748
    7. 'sum' → logprob: -4.969581127166748
    8. '2' → logprob: -5.094581127166748
    9. ' -' → logprob: -5.594581127166748
    10. ' min' → logprob: -5.719581127166748

Token 50: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.006912271957844496
    2. '(max' → logprob: -5.6319122314453125
    3. '(' → logprob: -6.1319122314453125
    4. '(t' → logprob: -7.6319122314453125
    5. '(L' → logprob: -8.506912231445312
    6. '(min' → logprob: -8.506912231445312
    7. '_T' → logprob: -9.506912231445312
    8. '+' → logprob: -10.381912231445312
    9. '(sum' → logprob: -10.381912231445312
    10. '(_' → logprob: -11.131912231445312

Token 51: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23788274824619293
    2. ' *' → logprob: -1.9878827333450317
    3. '+' → logprob: -3.2378828525543213
    4. ' +' → logprob: -3.3628828525543213
    5. ' ' → logprob: -8.612882614135742
    6. '**' → logprob: -8.612882614135742
    7. '*N' → logprob: -8.612882614135742
    8. ' //' → logprob: -9.112882614135742
    9. '//' → logprob: -9.612882614135742
    10. 'max' → logprob: -10.612882614135742

Token 52: ' ' (ID: 220)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '101' → logprob: -1.1717983484268188
    2. 'max' → logprob: -1.4217983484268188
    3. '100' → logprob: -1.7967983484268188
    4. '51' → logprob: -2.4217982292175293
    5. 'min' → logprob: -3.0467982292175293
    6. 'N' → logprob: -3.6717982292175293
    7. '21' → logprob: -4.171798229217529
    8. '11' → logprob: -4.296798229217529
    9. '1' → logprob: -4.296798229217529
    10. '10' → logprob: -4.546798229217529

Token 53: '100' (ID: 1353)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -1.1506215333938599
    2. 'max' → logprob: -1.4006215333938599
    3. '51' → logprob: -1.9006215333938599
    4. 'N' → logprob: -2.6506214141845703
    5. '100' → logprob: -2.7756214141845703
    6. '11' → logprob: -3.4006214141845703
    7. 'min' → logprob: -3.7756214141845703
    8. '21' → logprob: -4.40062141418457
    9. '1' → logprob: -4.52562141418457
    10. '10' → logprob: -4.65062141418457

Token 54: '01' (ID: 2290)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4230515956878662
    2. '1' → logprob: -1.6730515956878662
    3. '+' → logprob: -2.673051595687866
    4. ' +' → logprob: -3.048051595687866
    5. '0' → logprob: -3.548051595687866
    6. '):
' → logprob: -4.548051834106445
    7. '):
' → logprob: -7.548051834106445
    8. '2' → logprob: -7.923051834106445
    9. ' ):' → logprob: -8.923051834106445
    10. ':' → logprob: -9.423051834106445

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09674409031867981
    2. ':' → logprob: -2.4717440605163574
    3. '+' → logprob: -4.971744060516357
    4. '+:' → logprob: -7.846744060516357
    5. '):
' → logprob: -8.596744537353516
    6. ' ):' → logprob: -9.596744537353516
    7. ')' → logprob: -9.721744537353516
    8. ' :' → logprob: -10.096744537353516
    9. ' +' → logprob: -10.471744537353516
    10. '1' → logprob: -10.721744537353516

Token 56: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9659432768821716
    2. ' ' → logprob: -1.0909433364868164
    3. '   ' → logprob: -1.7159433364868164
    4. '    ' → logprob: -3.3409433364868164
    5. '<|end|>' → logprob: -3.7159433364868164
    6. ' 
' → logprob: -4.090943336486816
    7. ' :' → logprob: -4.465943336486816
    8. '    
' → logprob: -5.840943336486816
    9. '
' → logprob: -5.840943336486816
    10. ':
' → logprob: -6.590943336486816

Token 57: ' s' (ID: 265)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6427178978919983
    2. ' sum' → logprob: -1.5177178382873535
    3. ' current' → logprob: -2.1427178382873535
    4. ' s' → logprob: -3.0177178382873535
    5. '   ' → logprob: -3.5177178382873535
    6. 'sum' → logprob: -4.2677178382873535
    7. 'total' → logprob: -4.2677178382873535
    8. ' ' → logprob: -5.1427178382873535
    9. 's' (adapté à ' s') → logprob: -5.5177178382873535
    10. 'current' → logprob: -5.6427178382873535

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36378970742225647
    2. 'um' → logprob: -1.238789677619934
    3. '=' → logprob: -4.9887895584106445
    4. '_sum' → logprob: -5.2387895584106445
    5. '_' → logprob: -6.2387895584106445
    6. 'u' → logprob: -8.113789558410645
    7. '=sum' → logprob: -8.113789558410645
    8. 'sum' → logprob: -8.488789558410645
    9. 'umm' → logprob: -9.488789558410645
    10. ' ' → logprob: -10.238789558410645

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017509398981928825
    2. 'sum' → logprob: -4.392509460449219
    3. ' ' → logprob: -5.517509460449219
    4. ' sum' → logprob: -7.017509460449219
    5. ' L' → logprob: -11.267509460449219
    6. 'L' → logprob: -11.267509460449219
    7. '(sum' → logprob: -11.267509460449219
    8. 'max' → logprob: -11.392509460449219
    9. 'abs' → logprob: -11.642509460449219
    10. '(L' → logprob: -13.080009460449219

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1804397702217102
    2. 'sum' → logprob: -1.8054397106170654
    3. ' sum' → logprob: -8.055439949035645
    4. '(sum' → logprob: -8.805439949035645
    5. ' ' → logprob: -9.180439949035645
    6. 'L' → logprob: -10.180439949035645
    7. 'abs' → logprob: -10.680439949035645
    8. '(L' → logprob: -10.680439949035645
    9. 'max' → logprob: -10.930439949035645
    10. '(' → logprob: -11.805439949035645

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12978962063789368
    2. '<|end|>' → logprob: -2.2547895908355713
    3. 'for' → logprob: -4.75478982925415
    4. ' for' → logprob: -5.62978982925415
    5. ' ' → logprob: -6.62978982925415
    6. '+' → logprob: -7.12978982925415
    7. '<|end|>' → logprob: -7.25478982925415
    8. '   ' → logprob: -8.129789352416992
    9. '  
' → logprob: -8.129789352416992
    10. '    
' → logprob: -8.754789352416992

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10619524121284485
    2. 'for' → logprob: -2.7311952114105225
    3. ' for' → logprob: -3.6061952114105225
    4. '<|end|>' → logprob: -5.231195449829102
    5. '\n' → logprob: -6.856195449829102
    6. '   ' → logprob: -7.981195449829102
    7. ' ' → logprob: -8.231195449829102
    8. '    
' → logprob: -8.231195449829102
    9. '	for' → logprob: -8.231195449829102
    10. '  
' → logprob: -8.356195449829102

Token 63: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4741034209728241
    2. ' for' → logprob: -0.9741034507751465
    3. '   ' → logprob: -10.724102973937988
    4. '	for' → logprob: -12.974102973937988
    5. ' ' → logprob: -13.849102973937988
    6. ')' → logprob: -15.849102973937988
    7. '0' → logprob: -15.849102973937988
    8. '    ' → logprob: -16.349103927612305
    9. 'or' → logprob: -16.474103927612305
    10. '\n' → logprob: -16.599103927612305

Token 64: ' x' (ID: 1215)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.981388509273529
    2. 'ti' → logprob: -1.2313885688781738
    3. 'i' → logprob: -1.7313885688781738
    4. 'x' → logprob: -2.106388568878174
    5. ' time' → logprob: -4.606388568878174
    6. ' ti' → logprob: -4.981388568878174
    7. 'tt' → logprob: -4.981388568878174
    8. 'v' → logprob: -6.231388568878174
    9. '_i' → logprob: -6.231388568878174
    10. ' i' → logprob: -6.606388568878174

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009823382832109928
    2. 'in' → logprob: -4.634823322296143
    3. ' ' → logprob: -10.2598237991333
    4. 's' → logprob: -11.0098237991333
    5. 'n' → logprob: -13.2598237991333
    6. ' i' → logprob: -13.3848237991333
    7. '_in' → logprob: -13.3848237991333
    8. 'x' → logprob: -13.5098237991333
    9. '	in' → logprob: -13.6348237991333
    10. 't' → logprob: -13.8848237991333

Token 66: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1002098023891449
    2. ' t' → logprob: -2.3502097129821777
    3. ' range' → logprob: -13.850210189819336
    4. '`t' → logprob: -14.350210189819336
    5. 'range' → logprob: -14.350210189819336
    6. '<t' → logprob: -15.350210189819336
    7. ' ' → logprob: -15.350210189819336
    8. '(t' → logprob: -15.600210189819336
    9. '	t' → logprob: -15.975210189819336
    10. '<|end|>' → logprob: -15.975210189819336

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01418242696672678
    2. ':
' → logprob: -4.2641825675964355
    3. 's' → logprob: -11.639182090759277
    4. '):' → logprob: -13.264182090759277
    5. ':

' → logprob: -13.264182090759277
    6. '):
' → logprob: -13.389182090759277
    7. '<|end|>' → logprob: -13.889182090759277
    8. ')' → logprob: -14.014182090759277
    9. ':
' → logprob: -14.139182090759277
    10. '   ' → logprob: -14.264182090759277

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07132048904895782
    2. ' s' → logprob: -2.6963205337524414
    3. 's' → logprob: -7.321320533752441
    4. '   ' → logprob: -7.821320533752441
    5. ' if' → logprob: -9.946320533752441
    6. '<|end|>' → logprob: -10.071320533752441
    7. '
' → logprob: -10.196320533752441
    8. ' x' → logprob: -10.446320533752441
    9. ' ' → logprob: -10.821320533752441
    10. '    ' → logprob: -10.821320533752441

Token 69: ' r' (ID: 428)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7474796772003174
    2. '       ' → logprob: -1.1224796772003174
    3. 's' → logprob: -1.6224796772003174
    4. '           ' → logprob: -6.247479438781738
    5. ' if' → logprob: -7.372479438781738
    6. '   ' → logprob: -7.497479438781738
    7. 'if' → logprob: -9.247479438781738
    8. '	s' → logprob: -9.747479438781738
    9. 'a' → logprob: -10.497479438781738
    10. '               ' → logprob: -10.497479438781738

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07121991366147995
    2. 'em' → logprob: -3.5712199211120605
    3. 'ema' → logprob: -3.8212199211120605
    4. 'e' → logprob: -4.6962199211120605
    5. '=' → logprob: -5.3212199211120605
    6. 'es' → logprob: -6.1962199211120605
    7. '=(' → logprob: -7.8212199211120605
    8. 'ef' → logprob: -8.071219444274902
    9. 'ep' → logprob: -8.696219444274902
    10. 'eturn' → logprob: -8.821219444274902

Token 71: ' L' (ID: 451)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.2609778046607971
    2. 'L' → logprob: -1.7609777450561523
    3. '((' → logprob: -3.7609777450561523
    4. ' (' → logprob: -4.385977745056152
    5. ' L' → logprob: -4.510977745056152
    6. '(' → logprob: -5.760977745056152
    7. 'x' → logprob: -6.260977745056152
    8. '(x' → logprob: -6.385977745056152
    9. '(math' → logprob: -6.760977745056152
    10. 'abs' → logprob: -7.135977745056152

Token 72: ' %' (ID: 1851)
  Prédit: '%x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%x' → logprob: -0.5683711171150208
    2. '%' → logprob: -1.318371057510376
    3. ' %' → logprob: -1.818371057510376
    4. '//' → logprob: -6.068371295928955
    5. '-' → logprob: -7.193371295928955
    6. ' //' → logprob: -7.693371295928955
    7. ' -' → logprob: -9.693370819091797
    8. '%-' → logprob: -9.943370819091797
    9. ' ' → logprob: -11.443370819091797
    10. '/x' → logprob: -11.443370819091797

Token 73: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0021869030315428972
    2. ' x' → logprob: -6.1271867752075195
    3. ' ' → logprob: -14.00218677520752
    4. '	x' → logprob: -14.75218677520752
    5. '(x' → logprob: -15.25218677520752
    6. '(' → logprob: -16.252187728881836
    7. '>x' → logprob: -16.752187728881836
    8. '_x' → logprob: -17.002187728881836
    9. '+' → logprob: -17.127187728881836
    10. ' (' → logprob: -17.502187728881836

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3143376111984253
    2. '       ' → logprob: -1.5643376111984253
    3. ' if' → logprob: -4.064337730407715
    4. 's' → logprob: -4.189337730407715
    5. 'if' → logprob: -4.189337730407715
    6. ' s' → logprob: -4.939337730407715
    7. '
' → logprob: -5.814337730407715
    8. '   ' → logprob: -6.689337730407715
    9. '0' → logprob: -7.314337730407715
    10. '           ' → logprob: -8.064337730407715

Token 75: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2728525400161743
    2. ' if' → logprob: -1.3978525400161743
    3. ' s' → logprob: -1.3978525400161743
    4. 's' → logprob: -1.8978525400161743
    5. '       ' → logprob: -2.8978524208068848
    6. 'if' → logprob: -4.397852420806885
    7. '   ' → logprob: -5.647852420806885
    8. ',' → logprob: -7.647852420806885
    9. '<|end|>' → logprob: -7.647852420806885
    10. '0' → logprob: -7.772852420806885

Token 76: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.19456186890602112
    2. ' s' → logprob: -2.4445619583129883
    3. ' if' → logprob: -3.4445619583129883
    4. '
' → logprob: -3.5695619583129883
    5. 'if' → logprob: -3.5695619583129883
    6. 'r' → logprob: -8.194561958312988
    7. 'c' → logprob: -8.319561958312988
    8. 'i' → logprob: -8.444561958312988
    9. 'd' → logprob: -8.694561958312988
    10. '   ' → logprob: -8.694561958312988

Token 77: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5760535597801208
    2. '+=' → logprob: -0.8260535597801208
    3. '+' → logprob: -9.826053619384766
    4. '=' → logprob: -10.326053619384766
    5. '+=(' → logprob: -11.076053619384766
    6. ' =' → logprob: -11.826053619384766
    7. ' +' → logprob: -13.076053619384766
    8. ']+=' → logprob: -13.701053619384766
    9. 'if' → logprob: -15.451053619384766
    10. 's' → logprob: -15.576053619384766

Token 78: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.32421430945396423
    2. ' min' → logprob: -1.4492143392562866
    3. 'r' → logprob: -3.574214220046997
    4. ' r' → logprob: -5.074214458465576
    5. '(min' → logprob: -5.199214458465576
    6. 'x' → logprob: -6.949214458465576
    7. 'max' → logprob: -7.824214458465576
    8. ' x' → logprob: -8.199213981628418
    9. ' (' → logprob: -8.699213981628418
    10. '(r' → logprob: -9.074213981628418

Token 79: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5265212655067444
    2. 'x' → logprob: -1.2765212059020996
    3. ' min' → logprob: -2.7765212059020996
    4. 'r' → logprob: -3.0265212059020996
    5. ' x' → logprob: -4.4015212059021
    6. ' r' → logprob: -5.7765212059021
    7. '(min' → logprob: -6.0265212059021
    8. '0' → logprob: -7.5265212059021
    9. ')' → logprob: -8.276521682739258
    10. ' ' → logprob: -8.901521682739258

Token 80: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.018260570243000984
    2. 'if' → logprob: -4.018260478973389
    3. ' ' → logprob: -10.018260955810547
    4. ',' → logprob: -10.518260955810547
    5. '
' → logprob: -11.268260955810547
    6. ' r' → logprob: -11.518260955810547
    7. 'r' → logprob: -12.143260955810547
    8. ')' → logprob: -12.643260955810547
    9. 'x' → logprob: -13.518260955810547
    10. '0' → logprob: -13.768260955810547

Token 81: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5234786868095398
    2. 'r' → logprob: -0.8984786868095398
    3. ' not' → logprob: -8.648478507995605
    4. ' (' → logprob: -9.523478507995605
    5. 'x' → logprob: -9.773478507995605
    6. ' x' → logprob: -10.398478507995605
    7. '(r' → logprob: -12.023478507995605
    8. ' ' → logprob: -12.273478507995605
    9. ' ' → logprob: -13.523478507995605
    10. '_r' → logprob: -13.648478507995605

Token 82: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023587964475154877
    2. ' ==' → logprob: -3.773587942123413
    3. '<=' → logprob: -8.773588180541992
    4. 'else' → logprob: -9.148588180541992
    5. ' else' → logprob: -9.773588180541992
    6. '=' → logprob: -10.898588180541992
    7. ' <=' → logprob: -12.648588180541992
    8. '==
' → logprob: -13.273588180541992
    9. ' ' → logprob: -15.773588180541992
    10. '>=' → logprob: -15.773588180541992

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300079494714737
    2. ' ' → logprob: -3.1680006980895996
    3. 'x' → logprob: -14.980501174926758
    4. ' ' → logprob: -15.105501174926758
    5. ')' → logprob: -15.793001174926758
    6. ' x' → logprob: -15.980501174926758
    7. '<|end|>' → logprob: -16.105501174926758
    8. '  ' → logprob: -16.168001174926758
    9. '```' → logprob: -16.605501174926758
    10. '   ' → logprob: -16.730501174926758

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021907102782279253
    2. ' ' → logprob: -6.127190589904785
    3. 'x' → logprob: -12.627190589904785
    4. ' x' → logprob: -14.314690589904785
    5. ')' → logprob: -15.689690589904785
    6. 'else' → logprob: -15.814690589904785
    7. '  ' → logprob: -15.877190589904785
    8. ' else' → logprob: -16.1271915435791
    9. '   ' → logprob: -16.2521915435791
    10. '۰' → logprob: -16.4396915435791

Token 85: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.048590321093797684
    2. 'else' → logprob: -3.0485904216766357
    3. '	else' → logprob: -12.923590660095215
    4. ' ' → logprob: -15.423590660095215
    5. '       ' → logprob: -16.0485897064209
    6. '   ' → logprob: -16.4235897064209
    7. ' or' → logprob: -17.2985897064209
    8. '        ' → logprob: -17.6735897064209
    9. '           ' → logprob: -18.2985897064209
    10. 's' → logprob: -18.2985897064209

Token 86: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33097976446151733
    2. ' x' → logprob: -1.330979824066162
    3. ' min' → logprob: -4.830979824066162
    4. ' (' → logprob: -5.580979824066162
    5. '(x' → logprob: -5.705979824066162
    6. 'min' → logprob: -6.580979824066162
    7. '(' → logprob: -7.955979824066162
    8. ' ' → logprob: -8.080979347229004
    9. '(min' → logprob: -8.455979347229004
    10. '1' → logprob: -9.205979347229004

Token 87: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10174889117479324
    2. '-' → logprob: -2.3517489433288574
    3. '-r' → logprob: -6.476748943328857
    4. ' ' → logprob: -13.4767484664917
    5. ')' → logprob: -14.3517484664917
    6. 'r' → logprob: -16.851749420166016
    7. '  ' → logprob: -17.101749420166016
    8. ' r' → logprob: -17.226749420166016
    9. '   ' → logprob: -17.226749420166016
    10. ')-' → logprob: -17.476749420166016

Token 88: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0036006635054945946
    2. ' r' → logprob: -5.628600597381592
    3. ' ' → logprob: -15.00360107421875
    4. '<|end|>' → logprob: -16.62860107421875
    5. '	r' → logprob: -16.75360107421875
    6. '<|end|>' → logprob: -17.62860107421875
    7. '   ' → logprob: -18.00360107421875
    8. ')' → logprob: -18.12860107421875
    9. '_r' → logprob: -18.37860107421875
    10. '  ' → logprob: -18.62860107421875

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01832716166973114
    2. ')
' → logprob: -4.018327236175537
    3. ' )' → logprob: -9.018326759338379
    4. ')

' → logprob: -10.643326759338379
    5. ' )
' → logprob: -11.018326759338379
    6. ')
' → logprob: -11.393326759338379
    7. '
' → logprob: -13.518326759338379
    8. '   ' → logprob: -13.643326759338379
    9. ')**' → logprob: -14.643326759338379
    10. '```' → logprob: -14.643326759338379

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06413666903972626
    2. ' if' → logprob: -3.0641367435455322
    3. 'if' → logprob: -4.189136505126953
    4. '
' → logprob: -8.814136505126953
    5. ' ' → logprob: -9.814136505126953
    6. '    
' → logprob: -10.564136505126953
    7. '  ' → logprob: -11.439136505126953
    8. '
' → logprob: -12.064136505126953
    9. '```' → logprob: -12.189136505126953
    10. '	if' → logprob: -12.314136505126953

Token 91: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1502346247434616
    2. '   ' → logprob: -2.4002346992492676
    3. 'if' (adapté à ' if') → logprob: -3.0252346992492676
    4. '
' → logprob: -8.77523422241211
    5. ' ' → logprob: -10.27523422241211
    6. '    
' → logprob: -10.90023422241211
    7. ' min' → logprob: -11.40023422241211
    8. '	if' → logprob: -11.65023422241211
    9. '
' → logprob: -12.02523422241211
    10. 'min' → logprob: -12.02523422241211

Token 92: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.008633834309875965
    2. 's' → logprob: -4.758633613586426
    3. ' min' → logprob: -11.383633613586426
    4. 'min' → logprob: -12.508633613586426
    5. ' ' → logprob: -13.258633613586426
    6. ' ' → logprob: -13.883633613586426
    7. '   ' → logprob: -14.633633613586426
    8. '	s' → logprob: -15.321133613586426
    9. '(s' → logprob: -15.696133613586426
    10. '<s' → logprob: -16.071134567260742

Token 93: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.033789653331041336
    2. '<' → logprob: -3.40878963470459
    3. ' ==' → logprob: -9.78378963470459
    4. ' ' → logprob: -10.03378963470459
    5. ' <=' → logprob: -10.78378963470459
    6. '==' → logprob: -11.15878963470459
    7. '<=' → logprob: -13.40878963470459
    8. ' ' → logprob: -13.65878963470459
    9. '<|end|>' → logprob: -14.28378963470459
    10. '   ' → logprob: -14.40878963470459

Token 94: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3868902027606964
    2. 'min' → logprob: -1.136890172958374
    3. '	min' → logprob: -12.136890411376953
    4. ' ' → logprob: -12.261890411376953
    5. '=min' → logprob: -12.511890411376953
    6. '(min' → logprob: -13.761890411376953
    7. 'm' → logprob: -14.136890411376953
    8. '_min' → logprob: -14.261890411376953
    9. '=' → logprob: -14.636890411376953
    10. '   ' → logprob: -14.761890411376953

Token 95: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.816093228830141e-06
    2. '_s' → logprob: -13.25000286102295
    3. '_' → logprob: -14.25000286102295
    4. 'sum' → logprob: -15.62500286102295
    5. '_min' → logprob: -16.500001907348633
    6. 's' → logprob: -18.375001907348633
    7. ' _' → logprob: -19.000001907348633
    8. '_sub' → logprob: -19.125001907348633
    9. '__' → logprob: -19.375001907348633
    10. '_set' → logprob: -20.250001907348633

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02977108582854271
    2. ':
' → logprob: -3.529771089553833
    3. ':
' → logprob: -11.779770851135254
    4. '   ' → logprob: -11.904770851135254
    5. ' or' → logprob: -13.654770851135254
    6. '=' → logprob: -14.154770851135254
    7. ':min' → logprob: -14.404770851135254
    8. '       ' → logprob: -14.529770851135254
    9. ' :' → logprob: -14.654770851135254
    10. '):
' → logprob: -14.654770851135254

Token 97: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24339038133621216
    2. '       ' → logprob: -1.6183903217315674
    3. 'min' → logprob: -4.4933905601501465
    4. ' min' → logprob: -5.6183905601501465
    5. ':' → logprob: -6.3683905601501465
    6. '```' → logprob: -7.7433905601501465
    7. '	min' → logprob: -7.9933905601501465
    8. ':
' → logprob: -8.368390083312988
    9. ':min' → logprob: -9.618390083312988
    10. '(min' → logprob: -9.868390083312988

Token 98: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.6082029938697815
    2. ' min' → logprob: -0.8582029938697815
    3. '       ' → logprob: -3.4832029342651367
    4. '```' → logprob: -7.733202934265137
    5. '	min' → logprob: -8.233202934265137
    6. '   ' → logprob: -8.983202934265137
    7. '_min' → logprob: -9.483202934265137
    8. '           ' → logprob: -9.983202934265137
    9. '``' → logprob: -10.233202934265137
    10. '(min' → logprob: -11.233202934265137

Token 99: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.968312951968983e-06
    2. 'sum' → logprob: -12.375009536743164
    3. '_s' → logprob: -13.000009536743164
    4. '_' → logprob: -13.125009536743164
    5. '_code' → logprob: -15.500009536743164
    6. '_index' → logprob: -15.625009536743164
    7. '<|end|>' → logprob: -15.750009536743164
    8. '_SUM' → logprob: -16.375009536743164
    9. '_split' → logprob: -16.500009536743164
    10. 'Sum' → logprob: -16.750009536743164

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142066478729248
    2. '=' → logprob: -1.7014206647872925
    3. '=s' → logprob: -12.326420783996582
    4. ' ' → logprob: -13.451420783996582
    5. ',' → logprob: -14.451420783996582
    6. ' s' → logprob: -14.826420783996582
    7. '＝' → logprob: -15.576420783996582
    8. '   ' → logprob: -16.076419830322266
    9. 's' → logprob: -16.326419830322266
    10. '=min' → logprob: -16.951419830322266

Token 101: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759395360946655
    2. ' s' → logprob: -0.8259395360946655
    3. '	s' → logprob: -16.575939178466797
    4. ' ' → logprob: -17.200939178466797
    5. ' ' → logprob: -18.075939178466797
    6. '_s' → logprob: -18.075939178466797
    7. '(s' → logprob: -18.075939178466797
    8. '<s' → logprob: -18.700939178466797
    9. '   ' → logprob: -18.950939178466797
    10. '{s' → logprob: -19.450939178466797

Token 102: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.409267395734787
    2. '       ' → logprob: -1.4092674255371094
    3. '   ' → logprob: -3.1592674255371094
    4. ' print' → logprob: -3.4092674255371094
    5. 'answer' → logprob: -4.909267425537109
    6. 'else' → logprob: -6.284267425537109
    7. ' else' → logprob: -6.534267425537109
    8. '<|end|>' → logprob: -6.784267425537109
    9. '```' → logprob: -6.909267425537109
    10. ' answer' → logprob: -7.159267425537109

Token 103: 'print' (ID: 1598)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5692316293716431
    2. 'answer' → logprob: -1.694231629371643
    3. '   ' → logprob: -2.9442315101623535
    4. 'best' → logprob: -3.4442315101623535
    5. 'print' → logprob: -3.5692315101623535
    6. 'result' → logprob: -3.6942315101623535
    7. 'ans' → logprob: -3.6942315101623535
    8. 'optimal' → logprob: -4.0692315101623535
    9. ' answer' → logprob: -4.1942315101623535
    10. ' best' → logprob: -4.4442315101623535

Token 104: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0041739679872989655
    2. '(L' → logprob: -6.254173755645752
    3. '(' → logprob: -6.629173755645752
    4. '(max' → logprob: -7.004173755645752
    5. 'min' → logprob: -11.50417423248291
    6. '()' → logprob: -13.37917423248291
    7. '(M' → logprob: -14.12917423248291
    8. ' (' → logprob: -15.25417423248291
    9. ' min' → logprob: -15.75417423248291
    10. '('' → logprob: -15.87917423248291

Token 105: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.961759259458631e-06
    2. 'sum' → logprob: -12.875004768371582
    3. '_s' → logprob: -13.250004768371582
    4. '_' → logprob: -14.875004768371582
    5. ')' → logprob: -16.3750057220459
    6. ' _' → logprob: -17.3750057220459
    7. '_)' → logprob: -17.7500057220459
    8. '_print' → logprob: -17.8750057220459
    9. '__' → logprob: -18.1250057220459
    10. '_min' → logprob: -18.7500057220459

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. ' )' → logprob: -10.375031471252441
    3. ')
' → logprob: -17.000030517578125
    4. '))' → logprob: -17.250030517578125
    5. ')`' → logprob: -18.250030517578125
    6. '`)' → logprob: -18.375030517578125
    7. '')' → logprob: -18.375030517578125
    8. ',)' → logprob: -19.000030517578125
    9. '）' → logprob: -19.375030517578125
    10. ')#' → logprob: -19.500030517578125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 104
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 91
Précision stricte (1ère position): 41.35%
Précision adaptée (1ère position): 44.23%
Précision (top 10): 87.50%
================================================================================
