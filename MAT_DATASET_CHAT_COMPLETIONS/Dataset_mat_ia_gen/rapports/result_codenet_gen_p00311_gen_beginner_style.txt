================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:23:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
h1, h2 = map(int, input().split())
k1, k2 = map(int, input().split())
a, b, c, d = map(int, input().split())

hiroshi_score = h1 * a + h2 * b + (h1 // 10) * c + (h2 // 20) * d
kenjiro_score = k1 * a + k2 * b + (k1 // 10) * c + (k2 // 20) * d

if hiroshi_score > kenjiro_score:
    print("hiroshi")
elif hiroshi_score < kenjiro_score:
    print("kenjiro")
else:
    print("even")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 1: '1' (ID: 16)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.24518638849258423
    2. 'p' → logprob: -1.9951863288879395
    3. ' h' → logprob: -3.4951863288879395
    4. ' p' → logprob: -3.6201863288879395
    5. ' {' → logprob: -4.4951863288879395
    6. ',' → logprob: -4.8701863288879395
    7. '```' → logprob: -6.3701863288879395
    8. ' ,' → logprob: -6.9951863288879395
    9. ' ' → logprob: -7.1201863288879395
    10. ' ```' → logprob: -7.3701863288879395

Token 4: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003124632057733834
    2. '{' → logprob: -8.250312805175781
    3. '6' → logprob: -11.000312805175781
    4. '{
' → logprob: -11.000312805175781
    5. '1' → logprob: -12.250312805175781
    6. ',' → logprob: -13.125312805175781
    7. '```' → logprob: -13.250312805175781
    8. '{

' → logprob: -13.875312805175781
    9. '{}' → logprob: -13.875312805175781
    10. '26' → logprob: -14.000312805175781

Token 5: ' =' (ID: 314)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6813811659812927
    2. ' {' → logprob: -1.1813812255859375
    3. ',' → logprob: -1.6813812255859375
    4. ' ,' → logprob: -7.9313812255859375
    5. ',h' → logprob: -8.181381225585938
    6. '```' → logprob: -8.681381225585938
    7. ',{' → logprob: -9.431381225585938
    8. '{}' → logprob: -9.931381225585938
    9. ' ' → logprob: -10.806381225585938
    10. ' {
' → logprob: -10.931381225585938

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.061458706855774
    2. '10' → logprob: -2.1864585876464844
    3. ' ' → logprob: -2.1864585876464844
    4. 'document' → logprob: -2.5614585876464844
    5. 'data' → logprob: -2.8114585876464844
    6. '1' → logprob: -2.8114585876464844
    7. '[' → logprob: -3.4364585876464844
    8. '5' → logprob: -3.5614585876464844
    9. ' document' → logprob: -3.5614585876464844
    10. '42' → logprob: -4.311458587646484

Token 7: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4017069339752197
    2. '(' → logprob: -2.1517069339752197
    3. '(lambda' → logprob: -2.1517069339752197
    4. '(str' → logprob: -2.4017069339752197
    5. '<|end|>' → logprob: -5.526706695556641
    6. '```' → logprob: -7.151706695556641
    7. '(list' → logprob: -7.651706695556641
    8. '(eval' → logprob: -7.901706695556641
    9. 'int' → logprob: -8.27670669555664
    10. '(len' → logprob: -8.40170669555664

Token 8: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4810379147529602
    2. '(input' → logprob: -1.1060378551483154
    3. '(' → logprob: -3.2310378551483154
    4. '<|end|>' → logprob: -5.7310380935668945
    5. 'input' → logprob: -5.9810380935668945
    6. '```' → logprob: -6.2310380935668945
    7. '(user' → logprob: -7.4810380935668945
    8. '`)' → logprob: -7.6060380935668945
    9. '(raw' → logprob: -7.7310380935668945
    10. '`' → logprob: -7.7310380935668945

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08909323066473007
    2. ' input' → logprob: -2.4640932083129883
    3. ')' → logprob: -8.964093208312988
    4. '(input' → logprob: -10.964093208312988
    5. 'range' → logprob: -13.589093208312988
    6. 'user' → logprob: -13.589093208312988
    7. ',input' → logprob: -13.714093208312988
    8. ' )' → logprob: -14.089093208312988
    9. '=input' → logprob: -14.839093208312988
    10. '")' → logprob: -15.214093208312988

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47529909014701843
    2. '())' → logprob: -1.4752991199493408
    3. '().' → logprob: -1.9752991199493408
    4. '('' → logprob: -5.725298881530762
    5. '());' → logprob: -6.475298881530762
    6. '(' → logprob: -6.725298881530762
    7. '`()' → logprob: -7.225298881530762
    8. '("")' → logprob: -7.475298881530762
    9. '(""))' → logprob: -7.475298881530762
    10. '()`' → logprob: -7.600298881530762

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019794299732893705
    2. 'strip' → logprob: -6.251979351043701
    3. 'rstrip' → logprob: -10.00197982788086
    4. ' split' → logprob: -12.37697982788086
    5. '(split' → logprob: -14.75197982788086
    6. 'read' → logprob: -14.75197982788086
    7. 'spl' → logprob: -16.12697982788086
    8. 'replace' → logprob: -16.25197982788086
    9. 'startswith' → logprob: -16.37697982788086
    10. ')' → logprob: -16.37697982788086

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39444780349731445
    2. ')' → logprob: -1.2694478034973145
    3. '))' → logprob: -3.7694478034973145
    4. '(' → logprob: -4.8944478034973145
    5. '('' → logprob: -5.1444478034973145
    6. '()' → logprob: -5.2694478034973145
    7. '()))' → logprob: -6.0194478034973145
    8. '`)' → logprob: -8.144447326660156
    9. '')' → logprob: -8.394447326660156
    10. '(','' → logprob: -8.894447326660156

Token 13: 'k' (ID: 74)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45269328355789185
    2. '\n' → logprob: -1.827693223953247
    3. ',' → logprob: -2.952693223953247
    4. 'if' → logprob: -3.327693223953247
    5. ':' → logprob: -3.452693223953247
    6. ')' → logprob: -4.077693462371826
    7. '\' → logprob: -4.452693462371826
    8. '*' → logprob: -4.577693462371826
    9. '```' → logprob: -4.827693462371826
    10. '**' → logprob: -5.077693462371826

Token 14: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011964662000536919
    2. '=' → logprob: -4.511964797973633
    3. 'e' → logprob: -8.386964797973633
    4. ' -=' → logprob: -8.886964797973633
    5. ' +=' → logprob: -9.511964797973633
    6. '=int' → logprob: -9.636964797973633
    7. ',' → logprob: -9.761964797973633
    8. ' ' → logprob: -9.761964797973633
    9. 'ernels' → logprob: -10.261964797973633
    10. 'eep' → logprob: -10.386964797973633

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07024940103292465
    2. ',k' → logprob: -3.945249319076538
    3. '+' → logprob: -4.320249557495117
    4. '=' → logprob: -4.820249557495117
    5. ' +=' → logprob: -5.070249557495117
    6. ' ,' → logprob: -5.195249557495117
    7. ' =' → logprob: -5.195249557495117
    8. '[' → logprob: -5.820249557495117
    9. ')' → logprob: -6.070249557495117
    10. ' ' → logprob: -6.445249557495117

Token 16: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7268403172492981
    2. ' k' → logprob: -0.7268403172492981
    3. 'space' → logprob: -3.9768402576446533
    4. ' ' → logprob: -4.601840496063232
    5. '<|end|>' → logprob: -6.476840496063232
    6. 'h' → logprob: -7.851840496063232
    7. ',k' → logprob: -8.101840019226074
    8. 'input' → logprob: -8.476840019226074
    9. '=k' → logprob: -8.476840019226074
    10. 's' → logprob: -8.476840019226074

Token 17: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01520533487200737
    2. '2' → logprob: -4.765205383300781
    3. ',' → logprob: -5.140205383300781
    4. '=' → logprob: -7.640205383300781
    5. ' =' → logprob: -10.140205383300781
    6. ' ,' → logprob: -10.265205383300781
    7. ' ' → logprob: -10.640205383300781
    8. ',k' → logprob: -10.890205383300781
    9. '```' → logprob: -11.015205383300781
    10. '_' → logprob: -11.140205383300781

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48410776257514954
    2. '=' → logprob: -0.9841077327728271
    3. ',' → logprob: -4.609107971191406
    4. ')' → logprob: -11.984107971191406
    5. ' ,' → logprob: -12.234107971191406
    6. ',k' → logprob: -12.984107971191406
    7. '=k' → logprob: -13.859107971191406
    8. '>' → logprob: -14.109107971191406
    9. '=

' → logprob: -14.359107971191406
    10. ' ' → logprob: -14.484107971191406

Token 19: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6932104229927063
    2. ' map' → logprob: -0.6932104229927063
    3. '0' → logprob: -10.94321060180664
    4. ' ' → logprob: -11.56821060180664
    5. ' k' → logprob: -11.81821060180664
    6. 'k' → logprob: -11.94321060180664
    7. '1' → logprob: -12.06821060180664
    8. 'input' → logprob: -12.69321060180664
    9. 'int' → logprob: -12.81821060180664
    10. ' input' → logprob: -13.44321060180664

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004754188470542431
    2. '(' → logprob: -5.379754066467285
    3. '(str' → logprob: -9.629754066467285
    4. '<int' → logprob: -10.504754066467285
    5. 'int' → logprob: -11.004754066467285
    6. '(lambda' → logprob: -11.879754066467285
    7. '[int' → logprob: -12.004754066467285
    8. ' (' → logprob: -13.129754066467285
    9. '=int' → logprob: -13.504754066467285
    10. '(input' → logprob: -13.754754066467285

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017839208885561675
    2. ',input' → logprob: -8.750178337097168
    3. '`,' → logprob: -11.500178337097168
    4. '(),' → logprob: -12.500178337097168
    5. '',' → logprob: -13.125178337097168
    6. '(input' → logprob: -14.250178337097168
    7. '(' → logprob: -14.250178337097168
    8. 'input' → logprob: -14.250178337097168
    9. ' ,' → logprob: -14.375178337097168
    10. ')' → logprob: -15.000178337097168

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3132951557636261
    2. 'input' → logprob: -1.3132951259613037
    3. '(input' → logprob: -10.688295364379883
    4. 'int' → logprob: -12.313295364379883
    5. '[input' → logprob: -13.313295364379883
    6. ' ' → logprob: -13.438295364379883
    7. ',input' → logprob: -14.188295364379883
    8. ' int' → logprob: -14.688295364379883
    9. '<input' → logprob: -14.938295364379883
    10. '=input' → logprob: -14.938295364379883

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3663626305060461e-05
    2. '()' → logprob: -11.25001335144043
    3. ' ().' → logprob: -15.25001335144043
    4. '(' → logprob: -15.25001335144043
    5. '.' → logprob: -16.25001335144043
    6. '(.' → logprob: -17.50001335144043
    7. ')' → logprob: -17.62501335144043
    8. '().__' → logprob: -18.12501335144043
    9. ''s' → logprob: -18.25001335144043
    10. '()[' → logprob: -18.75001335144043

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.7697225252486533e-06
    2. 'strip' → logprob: -13.000003814697266
    3. ' split' → logprob: -14.125003814697266
    4. ')' → logprob: -14.625003814697266
    5. '(split' → logprob: -15.625003814697266
    6. 'plit' → logprob: -17.000003814697266
    7. '.split' → logprob: -17.500003814697266
    8. 'spl' → logprob: -17.875003814697266
    9. 'read' → logprob: -18.125003814697266
    10. 'rstrip' → logprob: -18.125003814697266

Token 25: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7035730481147766
    2. '())' → logprob: -0.7035730481147766
    3. ')' → logprob: -4.578573226928711
    4. '().' → logprob: -11.453573226928711
    5. '()>' → logprob: -11.578573226928711
    6. '();)' → logprob: -11.578573226928711
    7. '()<' → logprob: -11.703573226928711
    8. '()))' → logprob: -11.703573226928711
    9. '())
' → logprob: -11.703573226928711
    10. ' ())' → logprob: -11.828573226928711

Token 26: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5560461282730103
    2. 'h' → logprob: -2.0560460090637207
    3. 's' → logprob: -3.4310460090637207
    4. 'a' → logprob: -3.4310460090637207
    5. 'x' → logprob: -3.5560460090637207
    6. 'max' → logprob: -3.9310460090637207
    7. 'hp' → logprob: -3.9310460090637207
    8. 'n' → logprob: -4.056046009063721
    9. 'print' → logprob: -4.306046009063721
    10. 'height' → logprob: -4.431046009063721

Token 27: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6899877786636353
    2. ',' → logprob: -1.1899877786636353
    3. ' =' → logprob: -2.0649876594543457
    4. ',b' → logprob: -3.8149876594543457
    5. '=' → logprob: -4.564987659454346
    6. 'r' → logprob: -4.689987659454346
    7. 'd' → logprob: -5.439987659454346
    8. 'dd' → logprob: -5.439987659454346
    9. 'rray' → logprob: -6.189987659454346
    10. 'ns' → logprob: -6.314987659454346

Token 28: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023975497111678123
    2. ' b' → logprob: -3.7739756107330322
    3. ' =' → logprob: -8.398975372314453
    4. ',' → logprob: -8.773975372314453
    5. '=' → logprob: -9.148975372314453
    6. ' ' → logprob: -9.898975372314453
    7. 'c' → logprob: -10.148975372314453
    8. 's' → logprob: -10.523975372314453
    9. ',b' → logprob: -10.773975372314453
    10. 'd' → logprob: -10.898975372314453

Token 29: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43613192439079285
    2. '=' → logprob: -1.0611319541931152
    3. ',' → logprob: -4.936131954193115
    4. ')' → logprob: -8.686131477355957
    5. '[' → logprob: -11.186131477355957
    6. '(' → logprob: -11.561131477355957
    7. '<|end|>' → logprob: -12.186131477355957
    8. 's' → logprob: -12.686131477355957
    9. ')=' → logprob: -13.186131477355957
    10. '=

' → logprob: -13.436131477355957

Token 30: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6036249399185181
    2. '=' → logprob: -0.8536249399185181
    3. 'c' → logprob: -4.1036248207092285
    4. ' c' → logprob: -5.4786248207092285
    5. ' map' → logprob: -5.8536248207092285
    6. 'map' → logprob: -6.4786248207092285
    7. ',' → logprob: -6.7286248207092285
    8. ' ' → logprob: -7.1036248207092285
    9. ',c' → logprob: -10.478625297546387
    10. 'x' → logprob: -10.978625297546387

Token 31: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019599674269557
    2. '=' → logprob: -4.519599437713623
    3. ',' → logprob: -4.769599437713623
    4. ')' → logprob: -11.394599914550781
    5. ' ,' → logprob: -11.894599914550781
    6. '<|end|>' → logprob: -12.394599914550781
    7. '[' → logprob: -13.394599914550781
    8. ' ' → logprob: -14.019599914550781
    9. '1' → logprob: -14.144599914550781
    10. 's' → logprob: -14.394599914550781

Token 32: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6701606512069702
    2. '=' → logprob: -1.2951606512069702
    3. 'd' → logprob: -1.7951606512069702
    4. ' d' → logprob: -3.1701607704162598
    5. ',' → logprob: -5.92016077041626
    6. ' ' → logprob: -6.17016077041626
    7. ' map' → logprob: -7.42016077041626
    8. 'map' → logprob: -7.67016077041626
    9. ',d' → logprob: -8.295160293579102
    10. '  ' → logprob: -9.545160293579102

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252268522977829
    2. '=' → logprob: -1.5022685527801514
    3. ',' → logprob: -8.00226879119873
    4. ' ' → logprob: -13.00226879119873
    5. ' ,' → logprob: -14.50226879119873
    6. '=int' → logprob: -15.00226879119873
    7. ')' → logprob: -15.25226879119873
    8. '=input' → logprob: -15.75226879119873
    9. '```' → logprob: -15.75226879119873
    10. '>' → logprob: -15.93976879119873

Token 34: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.016324905678629875
    2. 'map' → logprob: -4.141324996948242
    3. '0' → logprob: -8.641324996948242
    4. ' ' → logprob: -10.266324996948242
    5. '1' → logprob: -10.891324996948242
    6. '5' → logprob: -11.766324996948242
    7. '4' → logprob: -12.016324996948242
    8. ' list' → logprob: -12.266324996948242
    9. '10' → logprob: -12.391324996948242
    10. '	map' → logprob: -12.391324996948242

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005028736195527017
    2. '(' → logprob: -7.875503063201904
    3. '<int' → logprob: -9.250502586364746
    4. '[int' → logprob: -11.875502586364746
    5. 'int' → logprob: -12.125502586364746
    6. '(lambda' → logprob: -12.625502586364746
    7. '```' → logprob: -13.000502586364746
    8. '=int' → logprob: -13.375502586364746
    9. '<|end|>' → logprob: -13.625502586364746
    10. ' (' → logprob: -13.750502586364746

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019898535683751106
    2. ',input' → logprob: -5.019898414611816
    3. '(input' → logprob: -5.644898414611816
    4. '`,' → logprob: -5.894898414611816
    5. '(' → logprob: -5.894898414611816
    6. '(),' → logprob: -6.144898414611816
    7. ')(' → logprob: -7.394898414611816
    8. ' ,' → logprob: -8.019898414611816
    9. ',int' → logprob: -8.394898414611816
    10. '(int' → logprob: -8.644898414611816

Token 37: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07898452132940292
    2. 'input' → logprob: -2.578984498977661
    3. '(input' → logprob: -10.328984260559082
    4. ')' → logprob: -10.578984260559082
    5. 'int' → logprob: -10.953984260559082
    6. ' ' → logprob: -12.453984260559082
    7. '=input' → logprob: -12.703984260559082
    8. ' int' → logprob: -12.828984260559082
    9. ',input' → logprob: -13.203984260559082
    10. '	input' → logprob: -13.453984260559082

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00026264708139933646
    2. '()' → logprob: -8.250262260437012
    3. '>().' → logprob: -15.250262260437012
    4. ' ().' → logprob: -15.250262260437012
    5. '(' → logprob: -15.750262260437012
    6. ')' → logprob: -15.875262260437012
    7. '()).' → logprob: -16.000263214111328
    8. '()>' → logprob: -16.125263214111328
    9. '())' → logprob: -16.625263214111328
    10. '.' → logprob: -17.250263214111328

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8624639324116288e-06
    2. ' split' → logprob: -13.750001907348633
    3. ')' → logprob: -14.750001907348633
    4. '(split' → logprob: -15.125001907348633
    5. 'spl' → logprob: -17.875001907348633
    6. 'plit' → logprob: -17.875001907348633
    7. '())' → logprob: -18.375001907348633
    8. 'strip' → logprob: -18.500001907348633
    9. '```' → logprob: -19.375001907348633
    10. 'rstrip' → logprob: -19.625001907348633

Token 40: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4530527591705322
    2. ')' → logprob: -1.7030527591705322
    3. '()' → logprob: -1.7030527591705322
    4. '())
' → logprob: -10.453052520751953
    5. '`)' → logprob: -11.578052520751953
    6. ' ())' → logprob: -12.328052520751953
    7. ' )' → logprob: -12.953052520751953
    8. '())

' → logprob: -13.078052520751953
    9. '();)' → logprob: -13.078052520751953
    10. '(' → logprob: -13.703052520751953

Token 41: 'hiro' (ID: 105513)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6255490183830261
    2. 'h' → logprob: -0.8755490183830261
    3. 'x' → logprob: -5.000548839569092
    4. 's' → logprob: -5.375548839569092
    5. 'total' → logprob: -5.500548839569092
    6. 'n' → logprob: -5.875548839569092
    7. ':' → logprob: -6.125548839569092
    8. ' if' → logprob: -6.250548839569092
    9. ',' → logprob: -6.375548839569092
    10. 'a' → logprob: -6.375548839569092

Token 42: 'shi' (ID: 33444)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1382388323545456
    2. '=' → logprob: -3.1382389068603516
    3. 'shima' → logprob: -3.5132389068603516
    4. 't' → logprob: -4.638238906860352
    5. 'ma' → logprob: -5.013238906860352
    6. 'atsu' → logprob: -5.388238906860352
    7. 'h' → logprob: -5.638238906860352
    8. 'oki' → logprob: -5.763238906860352
    9. 'shi' → logprob: -5.888238906860352
    10. 's' → logprob: -6.513238906860352

Token 43: '_score' (ID: 22555)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.182607650756836
    2. '_hp' → logprob: -1.807607650756836
    3. '_' → logprob: -1.932607650756836
    4. '=' → logprob: -2.057607650756836
    5. '_score' → logprob: -3.182607650756836
    6. '_strength' → logprob: -3.682607650756836
    7. '_health' → logprob: -3.682607650756836
    8. '_points' → logprob: -3.807607650756836
    9. '_power' → logprob: -4.057607650756836
    10. '_l' → logprob: -4.307607650756836

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3167427182197571
    2. '=' → logprob: -1.3167426586151123
    3. ' +=' → logprob: -6.441742897033691
    4. '_' → logprob: -7.316742897033691
    5. '+' → logprob: -7.441742897033691
    6. ',' → logprob: -8.691742897033691
    7. '+=' → logprob: -8.691742897033691
    8. '1' → logprob: -9.316742897033691
    9. '>' → logprob: -9.316742897033691
    10. ' ' → logprob: -10.691742897033691

Token 45: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08637616783380508
    2. 'max' → logprob: -3.961376190185547
    3. ' h' → logprob: -4.086376190185547
    4. 'a' → logprob: -4.211376190185547
    5. '(h' → logprob: -4.461376190185547
    6. 'k' → logprob: -4.586376190185547
    7. ' max' → logprob: -5.711376190185547
    8. '0' → logprob: -6.461376190185547
    9. 'min' → logprob: -6.711376190185547
    10. '(' → logprob: -6.711376190185547

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030841901898384094
    2. 'r' → logprob: -6.378084182739258
    3. 's' → logprob: -6.753084182739258
    4. 'oshi' → logprob: -9.753084182739258
    5. 'o' → logprob: -9.878084182739258
    6. 'i' → logprob: -10.378084182739258
    7. 'ro' → logprob: -11.003084182739258
    8. 'shi' → logprob: -11.503084182739258
    9. 'a' → logprob: -11.628084182739258
    10. 'ashi' → logprob: -11.628084182739258

Token 47: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6936118006706238
    2. ' +' → logprob: -0.6936118006706238
    3. '+k' → logprob: -8.443612098693848
    4. '*' → logprob: -8.943612098693848
    5. ' *' → logprob: -10.318612098693848
    6. '+h' → logprob: -10.943612098693848
    7. '-' → logprob: -11.193612098693848
    8. ' -' → logprob: -11.443612098693848
    9. ' +
' → logprob: -11.943612098693848
    10. ',' → logprob: -11.943612098693848

Token 48: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04892672598361969
    2. ' k' → logprob: -3.173926830291748
    3. '100' → logprob: -6.548926830291748
    4. '2' → logprob: -6.798926830291748
    5. ' ' → logprob: -7.423926830291748
    6. '10' → logprob: -7.673926830291748
    7. 'a' → logprob: -7.798926830291748
    8. '3' → logprob: -7.798926830291748
    9. '(k' → logprob: -8.17392635345459
    10. '(' → logprob: -8.79892635345459

Token 49: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25256890058517456
    2. ' +' → logprob: -1.5025689601898193
    3. '<|end|>' → logprob: -8.127569198608398
    4. ' ' → logprob: -8.752569198608398
    5. '+h' → logprob: -8.877569198608398
    6. '+k' → logprob: -10.502569198608398
    7. '<|end|>' → logprob: -12.502569198608398
    8. '+b' → logprob: -12.752569198608398
    9. ' +
' → logprob: -13.502569198608398
    10. 'hiro' → logprob: -13.502569198608398

Token 50: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5241395831108093
    2. 'h' → logprob: -0.8991395831108093
    3. ' k' → logprob: -8.149139404296875
    4. 'k' → logprob: -8.399139404296875
    5. '(h' → logprob: -9.274139404296875
    6. ' b' → logprob: -9.274139404296875
    7. ' (' → logprob: -9.399139404296875
    8. ' ' → logprob: -9.524139404296875
    9. 'b' → logprob: -9.774139404296875
    10. '(' → logprob: -10.774139404296875

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015904851257801056
    2. 'oshi' → logprob: -4.515904903411865
    3. '1' → logprob: -5.640904903411865
    4. 'ro' → logprob: -7.765904903411865
    5. 'iro' → logprob: -8.515904426574707
    6. 'ros' → logprob: -8.765904426574707
    7. 'o' → logprob: -8.890904426574707
    8. 'or' → logprob: -9.265904426574707
    9. 'r' → logprob: -9.390904426574707
    10. 'rosi' → logprob: -9.640904426574707

Token 52: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38716933131217957
    2. ' *' → logprob: -1.137169361114502
    3. '*b' → logprob: -9.137168884277344
    4. ' ' → logprob: -9.137168884277344
    5. '*c' → logprob: -10.387168884277344
    6. '`' → logprob: -10.637168884277344
    7. '```' → logprob: -12.262168884277344
    8. '**' → logprob: -12.512168884277344
    9. '"' → logprob: -12.887168884277344
    10. '*d' → logprob: -12.887168884277344

Token 53: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6547310948371887
    2. 'c' → logprob: -1.154731035232544
    3. ' b' → logprob: -2.404731035232544
    4. ' c' → logprob: -2.654731035232544
    5. 'a' → logprob: -5.654731273651123
    6. ' a' → logprob: -7.154731273651123
    7. ' ' → logprob: -8.279730796813965
    8. 'd' → logprob: -9.404730796813965
    9. ' d' → logprob: -10.279730796813965
    10. ' ' → logprob: -12.779730796813965

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22253035008907318
    2. ' +' → logprob: -2.5975303649902344
    3. '
' → logprob: -3.2225303649902344
    4. '+
' → logprob: -3.7225303649902344
    5. 'hiro' → logprob: -4.222530364990234
    6. '-' → logprob: -4.222530364990234
    7. ' ' → logprob: -4.472530364990234
    8. '  
' → logprob: -5.097530364990234
    9. ' 
' → logprob: -5.097530364990234
    10. ' -' → logprob: -6.722530364990234

Token 55: ' (' (ID: 350)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4510113596916199
    2. 'k' → logprob: -1.3260114192962646
    3. ' c' → logprob: -3.4510114192962646
    4. ' h' → logprob: -3.5760114192962646
    5. 'h' → logprob: -4.4510111808776855
    6. 'c' → logprob: -4.5760111808776855
    7. ' max' → logprob: -5.2010111808776855
    8. ' min' → logprob: -6.0760111808776855
    9. 'max' → logprob: -6.0760111808776855
    10. ' (' → logprob: -6.3260111808776855

Token 56: 'h' (ID: 71)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4124782383441925
    2. ' k' → logprob: -1.9124782085418701
    3. 'h' → logprob: -2.16247820854187
    4. ' h' → logprob: -2.78747820854187
    5. ' (' → logprob: -6.162478446960449
    6. '(' → logprob: -6.287478446960449
    7. ' max' → logprob: -6.412478446960449
    8. 'max' → logprob: -6.412478446960449
    9. '1' → logprob: -6.787478446960449
    10. '(h' → logprob: -7.162478446960449

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07965085655450821
    2. 'o' → logprob: -3.20465087890625
    3. '2' → logprob: -3.95465087890625
    4. 'oshi' → logprob: -5.32965087890625
    5. 'i' → logprob: -5.82965087890625
    6. 'r' → logprob: -5.95465087890625
    7. 'ashi' → logprob: -7.20465087890625
    8. 'rosi' → logprob: -7.32965087890625
    9. 'iro' → logprob: -7.45465087890625
    10. 'a' → logprob: -7.57965087890625

Token 58: ' //' (ID: 602)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7411605715751648
    2. ' +' → logprob: -1.6161606311798096
    3. ' *' → logprob: -1.6161606311798096
    4. '-' → logprob: -2.7411606311798096
    5. '+' → logprob: -3.1161606311798096
    6. '*' → logprob: -4.7411603927612305
    7. ')' → logprob: -5.4911603927612305
    8. ' //' → logprob: -6.8661603927612305
    9. ' >' → logprob: -7.3661603927612305
    10. '-k' → logprob: -7.3661603927612305

Token 59: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09669897705316544
    2. 'c' → logprob: -2.7216989994049072
    3. '2' → logprob: -4.471698760986328
    4. ' k' → logprob: -4.596698760986328
    5. ' c' → logprob: -6.096698760986328
    6. ' ' → logprob: -6.846698760986328
    7. '3' → logprob: -7.096698760986328
    8. '10' → logprob: -8.721698760986328
    9. '100' → logprob: -8.846698760986328
    10. '  ' → logprob: -9.596698760986328

Token 60: '10' (ID: 702)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.050350017845630646
    2. 'c' → logprob: -3.0503499507904053
    3. '2' → logprob: -6.675350189208984
    4. '3' → logprob: -8.425350189208984
    5. ' k' → logprob: -9.550350189208984
    6. '10' → logprob: -10.050350189208984
    7. '100' → logprob: -10.550350189208984
    8. 'd' → logprob: -10.675350189208984
    9. ' ' → logprob: -10.800350189208984
    10. ' c' → logprob: -10.800350189208984

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005808274727314711
    2. ' )' → logprob: -5.630808353424072
    3. ')*' → logprob: -7.005808353424072
    4. ' *' → logprob: -7.005808353424072
    5. '*' → logprob: -8.255807876586914
    6. '+' → logprob: -10.005807876586914
    7. ' +' → logprob: -10.255807876586914
    8. ' -' → logprob: -12.005807876586914
    9. '-' → logprob: -12.005807876586914
    10. '0' → logprob: -12.130807876586914

Token 62: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.23002026975154877
    2. '*' → logprob: -1.60502028465271
    3. '*c' → logprob: -6.105020046234131
    4. '*k' → logprob: -6.605020046234131
    5. '<|end|>' → logprob: -7.355020046234131
    6. '*d' → logprob: -8.980020523071289
    7. ' +' → logprob: -9.355020523071289
    8. '+' → logprob: -9.980020523071289
    9. '**' → logprob: -10.230020523071289
    10. '*K' → logprob: -11.730020523071289

Token 63: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.54465651512146
    2. 'c' → logprob: -1.16965651512146
    3. ' k' → logprob: -2.91965651512146
    4. 'k' → logprob: -2.91965651512146
    5. ' d' → logprob: -7.419656753540039
    6. ' ' → logprob: -7.794656753540039
    7. 'd' → logprob: -8.294656753540039
    8. ' a' → logprob: -9.419656753540039
    9. 'a' → logprob: -10.044656753540039
    10. ' (' → logprob: -10.419656753540039

Token 64: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25232264399528503
    2. ' +' → logprob: -1.5023226737976074
    3. ' ' → logprob: -8.62732219696045
    4. '+h' → logprob: -9.37732219696045
    5. '<|end|>' → logprob: -9.62732219696045
    6. '+k' → logprob: -10.12732219696045
    7. ' +
' → logprob: -12.37732219696045
    8. '+
' → logprob: -12.75232219696045
    9. '*' → logprob: -12.87732219696045
    10. '-' → logprob: -13.00232219696045

Token 65: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4757981598377228
    2. '(h' → logprob: -0.9757981300354004
    3. '(' → logprob: -6.7257981300354
    4. ' h' → logprob: -8.225798606872559
    5. 'h' → logprob: -8.975798606872559
    6. ' ' → logprob: -9.475798606872559
    7. '(k' → logprob: -10.725798606872559
    8. '1' → logprob: -12.725798606872559
    9. '((' → logprob: -12.850798606872559
    10. '2' → logprob: -12.850798606872559

Token 66: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4287306070327759
    2. ' h' → logprob: -1.0537306070327759
    3. ' ' → logprob: -11.178730964660645
    4. '	h' → logprob: -12.678730964660645
    5. '(h' → logprob: -12.803730964660645
    6. '2' → logprob: -13.178730964660645
    7. ' (' → logprob: -13.553730964660645
    8. ' ' → logprob: -13.803730964660645
    9. '  ' → logprob: -14.053730964660645
    10. '   ' → logprob: -14.741230964660645

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3438327843905427e-05
    2. ' ' → logprob: -11.00002384185791
    3. 'h' → logprob: -12.37502384185791
    4. '1' → logprob: -13.75002384185791
    5. '```' → logprob: -14.87502384185791
    6. '<|end|>' → logprob: -15.25002384185791
    7. '   ' → logprob: -15.75002384185791
    8. '  ' → logprob: -15.87502384185791
    9. '۲' → logprob: -16.125022888183594
    10. '<|end|>' → logprob: -16.125022888183594

Token 68: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0015524751506745815
    2. '//' → logprob: -7.001552581787109
    3. '<|end|>' → logprob: -7.626552581787109
    4. ' *' → logprob: -9.50155258178711
    5. ' ' → logprob: -9.87655258178711
    6. ' ' → logprob: -12.12655258178711
    7. '<|end|>' → logprob: -12.37655258178711
    8. ' /' → logprob: -12.37655258178711
    9. '*' → logprob: -12.75155258178711
    10. ' #' → logprob: -13.00155258178711

Token 69: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.47413066029548645
    2. ' ' → logprob: -0.9741306304931641
    3. '<|end|>' → logprob: -10.349130630493164
    4. '20' → logprob: -11.974130630493164
    5. '1' → logprob: -12.724130630493164
    6. '```' → logprob: -12.849130630493164
    7. '  ' → logprob: -12.974130630493164
    8. ' ' → logprob: -13.099130630493164
    9. 's' → logprob: -14.161630630493164
    10. '<|end|>' → logprob: -14.161630630493164

Token 70: '20' (ID: 455)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.290784560609609e-05
    2. ' ' → logprob: -9.750072479248047
    3. '1' → logprob: -12.375072479248047
    4. '20' → logprob: -12.750072479248047
    5. '<|end|>' → logprob: -13.125072479248047
    6. '5' → logprob: -13.250072479248047
    7. '2' → logprob: -14.250072479248047
    8. 'd' → logprob: -14.500072479248047
    9. '  ' → logprob: -14.687572479248047
    10. '```' → logprob: -14.812572479248047

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006504826596938074
    2. ' )' → logprob: -7.500650405883789
    3. ')*' → logprob: -9.250650405883789
    4. '*' → logprob: -14.625650405883789
    5. ' ' → logprob: -15.625650405883789
    6. '）' → logprob: -16.25065040588379
    7. '1' → logprob: -16.37565040588379
    8. ' *' → logprob: -17.12565040588379
    9. '*)' → logprob: -17.12565040588379
    10. ')
' → logprob: -17.12565040588379

Token 72: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2821124494075775
    2. '*' → logprob: -1.4071124792099
    3. '*d' → logprob: -7.0321125984191895
    4. ' ' → logprob: -10.407112121582031
    5. '**' → logprob: -11.532112121582031
    6. 'd' → logprob: -11.532112121582031
    7. ' ' → logprob: -11.782112121582031
    8. '*c' → logprob: -12.282112121582031
    9. '`' → logprob: -12.532112121582031
    10. ')' → logprob: -13.282112121582031

Token 73: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10020741820335388
    2. ' d' → logprob: -2.3502073287963867
    3. ' ' → logprob: -14.600207328796387
    4. '	d' → logprob: -14.850207328796387
    5. ' ' → logprob: -18.100208282470703
    6. '_d' → logprob: -18.225208282470703
    7. ')d' → logprob: -18.225208282470703
    8. 'c' → logprob: -18.475208282470703
    9. '(d' → logprob: -18.725208282470703
    10. '  ' → logprob: -18.725208282470703

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.526763916015625
    2. 'if' → logprob: -1.151763916015625
    3. 'print' → logprob: -2.901763916015625
    4. ' if' → logprob: -3.776763916015625
    5. '\n' → logprob: -5.651763916015625
    6. '<|end|>' → logprob: -5.651763916015625
    7. '
' → logprob: -5.776763916015625
    8. '+' → logprob: -6.651763916015625
    9. '' → logprob: -7.026763916015625
    10. ' ' → logprob: -7.901763916015625

Token 75: 'ken' (ID: 2144)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2929226160049438
    2. 'hiro' → logprob: -1.2929226160049438
    3. 'ken' → logprob: -1.6679226160049438
    4. ' if' → logprob: -2.5429224967956543
    5. 'print' → logprob: -2.7929224967956543
    6. 't' → logprob: -2.7929224967956543
    7. 'ko' → logprob: -4.542922496795654
    8. 'k' → logprob: -4.917922496795654
    9. 'kens' → logprob: -5.792922496795654
    10. 'ta' → logprob: -6.230422496795654

Token 76: 'ji' (ID: 4133)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.45553627610206604
    2. 'shi' → logprob: -1.0805362462997437
    3. 's' → logprob: -3.955536365509033
    4. 'score' → logprob: -5.955536365509033
    5. 'oshi' → logprob: -6.205536365509033
    6. '1' → logprob: -6.830536365509033
    7. 'ji' → logprob: -7.830536365509033
    8. ' =' → logprob: -7.955536365509033
    9. '_scores' → logprob: -8.580535888671875
    10. 'ishi' → logprob: -8.955535888671875

Token 77: 'ro' (ID: 298)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0005251537077128887
    2. '_' → logprob: -7.875524997711182
    3. '_s' → logprob: -9.37552547454834
    4. '_scores' → logprob: -10.12552547454834
    5. ' _' → logprob: -11.37552547454834
    6. '_code' → logprob: -13.25052547454834
    7. '_sc' → logprob: -13.75052547454834
    8. ''_' → logprob: -13.87552547454834
    9. '"_' → logprob: -14.37552547454834
    10. '_output' → logprob: -15.12552547454834

Token 78: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.003037489717826247
    2. '_' → logprob: -6.003037452697754
    3. '_s' → logprob: -7.878037452697754
    4. '_scores' → logprob: -9.128037452697754
    5. ' _' → logprob: -10.253037452697754
    6. '_sc' → logprob: -11.128037452697754
    7. '_code' → logprob: -11.878037452697754
    8. ''_' → logprob: -12.503037452697754
    9. ' =' → logprob: -13.628037452697754
    10. '"_' → logprob: -13.753037452697754

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01416738796979189
    2. '=' → logprob: -4.264167308807373
    3. ' ' → logprob: -13.139167785644531
    4. ' +=' → logprob: -13.514167785644531
    5. ' =)' → logprob: -15.889167785644531
    6. ' ==' → logprob: -16.26416778564453
    7. ' =
' → logprob: -16.38916778564453
    8. ' ' → logprob: -16.76416778564453
    9. ')' → logprob: -17.13916778564453
    10. ' )' → logprob: -17.51416778564453

Token 80: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023283684626221657
    2. ' k' → logprob: -3.7732837200164795
    3. 'h' → logprob: -10.523283958435059
    4. ' h' → logprob: -12.648283958435059
    5. '(k' → logprob: -12.648283958435059
    6. ' ' → logprob: -13.023283958435059
    7. ' (' → logprob: -14.148283958435059
    8. '   ' → logprob: -14.523283958435059
    9. '(' → logprob: -15.148283958435059
    10. '	k' → logprob: -15.273283958435059

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.875001907348633
    3. '_' → logprob: -15.125001907348633
    4. '2' → logprob: -15.625001907348633
    5. '```' → logprob: -16.500001907348633
    6. 's' → logprob: -16.687501907348633
    7. '１' → logprob: -16.875001907348633
    8. '`' → logprob: -17.375001907348633
    9. '[' → logprob: -17.500001907348633
    10. '' → logprob: -17.812501907348633

Token 82: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07007358968257904
    2. '*' → logprob: -2.6950736045837402
    3. '*a' → logprob: -9.445073127746582
    4. '**' → logprob: -10.945073127746582
    5. '*c' → logprob: -10.945073127746582
    6. ' ' → logprob: -11.195073127746582
    7. '`' → logprob: -12.945073127746582
    8. ' ' → logprob: -13.070073127746582
    9. '```' → logprob: -13.695073127746582
    10. ' **' → logprob: -14.570073127746582

Token 83: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016333583742380142
    2. ' a' → logprob: -4.14133358001709
    3. 'c' → logprob: -8.26633358001709
    4. ' c' → logprob: -10.14133358001709
    5. ' ' → logprob: -13.39133358001709
    6. '	a' → logprob: -13.89133358001709
    7. 'b' → logprob: -16.391334533691406
    8. '  ' → logprob: -16.641334533691406
    9. '   ' → logprob: -16.641334533691406
    10. ' а' → logprob: -17.953834533691406

Token 84: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3144122064113617
    2. '+' → logprob: -1.314412236213684
    3. '*' → logprob: -7.0644121170043945
    4. ' *' → logprob: -8.189412117004395
    5. ' ' → logprob: -12.064412117004395
    6. '```' → logprob: -13.314412117004395
    7. '+k' → logprob: -13.314412117004395
    8. '<' → logprob: -13.564412117004395
    9. '+b' → logprob: -13.814412117004395
    10. '>' → logprob: -13.939412117004395

Token 85: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.38687121868133545
    2. 'k' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.386871337890625
    4. '	k' → logprob: -16.761871337890625
    5. ' ' → logprob: -18.136871337890625
    6. ' к' → logprob: -18.636871337890625
    7. '(k' → logprob: -19.511871337890625
    8. ',' → logprob: -19.761871337890625
    9. '"k' → logprob: -19.949371337890625
    10. '_k' → logprob: -20.074371337890625

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'k' → logprob: -16.375003814697266
    4. '₂' → logprob: -17.125003814697266
    5. '_' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.625003814697266
    7. '۲' → logprob: -17.625003814697266
    8. '`' → logprob: -17.625003814697266
    9. '２' → logprob: -17.750003814697266
    10. '```' → logprob: -18.250003814697266

Token 87: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5237894058227539
    2. '*' → logprob: -0.8987894058227539
    3. '*b' → logprob: -7.398789405822754
    4. ' ' → logprob: -11.023789405822754
    5. 'b' → logprob: -11.148789405822754
    6. '`' → logprob: -11.898789405822754
    7. ' b' → logprob: -12.023789405822754
    8. '**' → logprob: -12.523789405822754
    9. ' ' → logprob: -12.648789405822754
    10. '```' → logprob: -13.523789405822754

Token 88: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12693408131599426
    2. ' b' → logprob: -2.126934051513672
    3. ' ' → logprob: -12.501934051513672
    4. '*b' → logprob: -13.876934051513672
    5. '	b' → logprob: -14.501934051513672
    6. ' ' → logprob: -15.751934051513672
    7. ' б' → logprob: -16.501934051513672
    8. '*' → logprob: -16.751934051513672
    9. '```' → logprob: -16.814434051513672
    10. 'c' → logprob: -17.001934051513672

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6951658129692078
    2. ' +' → logprob: -0.6951658129692078
    3. '<|end|>' → logprob: -6.945165634155273
    4. '+
' → logprob: -7.695165634155273
    5. ' +
' → logprob: -8.320165634155273
    6. ' ' → logprob: -8.570165634155273
    7. ')' → logprob: -10.195165634155273
    8. '(' → logprob: -11.195165634155273
    9. '+c' → logprob: -11.320165634155273
    10. '
' → logprob: -11.320165634155273

Token 90: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07060549408197403
    2. '(k' → logprob: -2.695605516433716
    3. '(' → logprob: -7.320605278015137
    4. ' ' → logprob: -12.445605278015137
    5. '"' → logprob: -13.945605278015137
    6. ''' → logprob: -14.695605278015137
    7. '`' → logprob: -14.820605278015137
    8. ' ((' → logprob: -15.070605278015137
    9. ' "' → logprob: -15.070605278015137
    10. '((' → logprob: -15.320605278015137

Token 91: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.007699610665440559
    2. ' k' → logprob: -5.507699489593506
    3. '(k' → logprob: -5.757699489593506
    4. ' (' → logprob: -7.882699489593506
    5. '(' → logprob: -9.632699966430664
    6. ' ' → logprob: -12.257699966430664
    7. ')' → logprob: -12.382699966430664
    8. '	k' → logprob: -14.570199966430664
    9. '```' → logprob: -14.570199966430664
    10. ' ' → logprob: -14.882699966430664

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007124318508431315
    2. '2' → logprob: -7.2507123947143555
    3. '_' → logprob: -13.625712394714355
    4. ' ' → logprob: -14.625712394714355
    5. '<|end|>' → logprob: -15.250712394714355
    6. '```' → logprob: -16.000713348388672
    7. ')' → logprob: -16.875713348388672
    8. '۱' → logprob: -17.000713348388672
    9. '１' → logprob: -17.000713348388672
    10. '<|end|>' → logprob: -17.125713348388672

Token 93: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1858799159526825
    2. '//' → logprob: -1.8108799457550049
    3. ' ' → logprob: -5.185879707336426
    4. '`' → logprob: -8.810879707336426
    5. ' ' → logprob: -8.810879707336426
    6. ' //
' → logprob: -9.310879707336426
    7. ' `' → logprob: -10.935879707336426
    8. '*' → logprob: -11.060879707336426
    9. '```' → logprob: -11.185879707336426
    10. ''' → logprob: -11.185879707336426

Token 94: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.14516566693782806
    2. ' ' → logprob: -2.0201656818389893
    3. '20' → logprob: -6.14516544342041
    4. '1' → logprob: -8.02016544342041
    5. '15' → logprob: -12.70766544342041
    6. '2' → logprob: -13.14516544342041
    7. '<|end|>' → logprob: -13.39516544342041
    8. '30' → logprob: -14.02016544342041
    9. ' ' → logprob: -14.20766544342041
    10. '```' → logprob: -14.20766544342041

Token 95: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00206687580794096
    2. '20' → logprob: -6.5020670890808105
    3. '1' → logprob: -7.6270670890808105
    4. '15' → logprob: -10.377066612243652
    5. '5' → logprob: -10.752066612243652
    6. ' ' → logprob: -11.377066612243652
    7. '2' → logprob: -12.002066612243652
    8. '25' → logprob: -13.252066612243652
    9. '```' → logprob: -13.252066612243652
    10. '30' → logprob: -14.877066612243652

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.603335638530552e-05
    2. ' )' → logprob: -9.500096321105957
    3. ')*' → logprob: -10.875096321105957
    4. '*' → logprob: -13.500096321105957
    5. ' ' → logprob: -15.750096321105957
    6. ' *' → logprob: -15.875096321105957
    7. '`)' → logprob: -16.37509536743164
    8. '*)' → logprob: -16.37509536743164
    9. ')`' → logprob: -17.00009536743164
    10. '```' → logprob: -17.00009536743164

Token 97: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10095027834177017
    2. ' *' → logprob: -2.350950241088867
    3. '*c' → logprob: -7.850950241088867
    4. '`' → logprob: -8.975950241088867
    5. '**' → logprob: -9.100950241088867
    6. ' ' → logprob: -9.600950241088867
    7. '```' → logprob: -11.100950241088867
    8. ' ' → logprob: -11.475950241088867
    9. ')' → logprob: -12.850950241088867
    10. ''*' → logprob: -12.975950241088867

Token 98: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1602383404970169
    2. ' c' → logprob: -1.9102383852005005
    3. ' ' → logprob: -11.410238265991211
    4. '	c' → logprob: -12.785238265991211
    5. ' ' → logprob: -16.78523826599121
    6. ')c' → logprob: -16.78523826599121
    7. '*c' → logprob: -17.53523826599121
    8. '  ' → logprob: -17.91023826599121
    9. '```' → logprob: -18.28523826599121
    10. 'с' → logprob: -18.28523826599121

Token 99: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22557027637958527
    2. ' +' → logprob: -1.6005703210830688
    3. '*' → logprob: -8.975570678710938
    4. ' ' → logprob: -11.100570678710938
    5. '```' → logprob: -12.475570678710938
    6. '+
' → logprob: -12.975570678710938
    7. ' *' → logprob: -13.350570678710938
    8. '`' → logprob: -13.475570678710938
    9. ' ' → logprob: -13.475570678710938
    10. ' +
' → logprob: -13.975570678710938

Token 100: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03816496208310127
    2. '(k' → logprob: -3.2881648540496826
    3. '(' → logprob: -9.038165092468262
    4. ' ' → logprob: -12.663165092468262
    5. '`' → logprob: -14.538165092468262
    6. ''' → logprob: -14.913165092468262
    7. ' k' → logprob: -15.038165092468262
    8. '"' → logprob: -16.038164138793945
    9. '(s' → logprob: -16.538164138793945
    10. ' ' → logprob: -16.913164138793945

Token 101: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008975337259471416
    2. '(k' → logprob: -4.883975505828857
    3. ' k' → logprob: -6.633975505828857
    4. ' (' → logprob: -10.0089750289917
    5. '(' → logprob: -12.0089750289917
    6. ' ' → logprob: -14.1339750289917
    7. '	k' → logprob: -14.5089750289917
    8. ')' → logprob: -15.2589750289917
    9. '"k' → logprob: -15.7589750289917
    10. '```' → logprob: -16.133975982666016

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.2500057220459
    4. '
' → logprob: -17.3750057220459
    5. '۲' → logprob: -17.5000057220459
    6. '２' → logprob: -17.7500057220459
    7. '₂' → logprob: -17.8750057220459
    8. '' → logprob: -18.1250057220459
    9. 'k' → logprob: -18.3750057220459
    10. '  ' → logprob: -18.3750057220459

Token 103: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.006731122732162476
    2. '//' → logprob: -5.006731033325195
    3. ' ' → logprob: -12.006731033325195
    4. ' ' → logprob: -12.506731033325195
    5. '```' → logprob: -13.131731033325195
    6. ' //
' → logprob: -13.256731033325195
    7. ' #' → logprob: -13.881731033325195
    8. '`' → logprob: -14.381731033325195
    9. '#' → logprob: -15.756731033325195
    10. ')' → logprob: -16.631731033325195

Token 104: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.17975398898124695
    2. ' ' → logprob: -1.8047540187835693
    3. '10' → logprob: -12.304754257202148
    4. ' ' → logprob: -12.929754257202148
    5. '   ' → logprob: -14.992254257202148
    6. '`' → logprob: -14.992254257202148
    7. '  ' → logprob: -15.179754257202148
    8. '```' → logprob: -15.304754257202148
    9. '2' → logprob: -15.367254257202148
    10. '	' → logprob: -16.11725425720215

Token 105: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. '2' → logprob: -14.250011444091797
    4. '10' → logprob: -16.125011444091797
    5. '`' → logprob: -17.937511444091797
    6. '```' → logprob: -18.187511444091797
    7. '   ' → logprob: -18.375011444091797
    8. '２０' → logprob: -18.437511444091797
    9. '۲۰' → logprob: -18.687511444091797
    10. '  ' → logprob: -18.750011444091797

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004071971052326262
    2. ')*' → logprob: -8.125407218933105
    3. ' )' → logprob: -9.250407218933105
    4. '*' → logprob: -11.500407218933105
    5. '`)' → logprob: -13.625407218933105
    6. ')`' → logprob: -14.000407218933105
    7. '*)' → logprob: -14.500407218933105
    8. ' ' → logprob: -14.625407218933105
    9. ')c' → logprob: -15.000407218933105
    10. ')
' → logprob: -15.250407218933105

Token 107: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011492793448269367
    2. '*d' → logprob: -4.636492729187012
    3. ' *' → logprob: -6.386492729187012
    4. ' ' → logprob: -11.136492729187012
    5. '*c' → logprob: -11.261492729187012
    6. 'd' → logprob: -11.511492729187012
    7. '**' → logprob: -12.386492729187012
    8. '`' → logprob: -12.386492729187012
    9. ' ' → logprob: -13.386492729187012
    10. ' d' → logprob: -14.011492729187012

Token 108: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019287518225610256
    2. ' d' → logprob: -6.251928806304932
    3. '	d' → logprob: -16.251928329467773
    4. ' ' → logprob: -16.876928329467773
    5. ')d' → logprob: -17.876928329467773
    6. '*d' → logprob: -18.501928329467773
    7. '```' → logprob: -18.751928329467773
    8. '_d' → logprob: -18.751928329467773
    9. '
' → logprob: -18.876928329467773
    10. '>d' → logprob: -19.376928329467773

Token 109: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10896101593971252
    2. '
' → logprob: -2.3589611053466797
    3. '\n' → logprob: -5.23396110534668
    4. ' if' → logprob: -6.23396110534668
    5. '```' → logprob: -7.73396110534668
    6. '
' → logprob: -8.35896110534668
    7. '' → logprob: -8.85896110534668
    8. '`
' → logprob: -8.98396110534668
    9. 'print' → logprob: -9.10896110534668
    10. '\' → logprob: -9.23396110534668

Token 110: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00036394817288964987
    2. 'print' → logprob: -8.625364303588867
    3. '
' → logprob: -9.125364303588867
    4. 'i' → logprob: -10.750364303588867
    5. '\n' → logprob: -11.000364303588867
    6. ' if' → logprob: -11.250364303588867
    7. '```' → logprob: -11.250364303588867
    8. '\
' → logprob: -12.500364303588867
    9. '\' → logprob: -12.875364303588867
    10. '`
' → logprob: -13.125364303588867

Token 111: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.03402024507522583
    2. 'hiro' → logprob: -3.409020185470581
    3. ' ' → logprob: -8.03402042388916
    4. '  ' → logprob: -11.15902042388916
    5. '(' → logprob: -11.53402042388916
    6. 'h' → logprob: -12.03402042388916
    7. ' Hiro' → logprob: -12.28402042388916
    8. ' ' → logprob: -13.03402042388916
    9. 'hi' → logprob: -13.03402042388916
    10. '```' → logprob: -13.15902042388916

Token 112: 'iro' (ID: 4509)
  Prédit: 'iro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iro' → logprob: -0.0017973965732380748
    2. 'iros' → logprob: -6.501797199249268
    3. '1' → logprob: -9.251797676086426
    4. 'i' → logprob: -9.251797676086426
    5. 'hiro' → logprob: -10.001797676086426
    6. 'ro' → logprob: -10.251797676086426
    7. 'r' → logprob: -12.376797676086426
    8. '_' → logprob: -12.501797676086426
    9. '```' → logprob: -13.001797676086426
    10. 'rosi' → logprob: -13.626797676086426

Token 113: 'shi' (ID: 33444)
  Prédit: 'shi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shi' → logprob: -5.466968650580384e-05
    2. 's' → logprob: -9.875054359436035
    3. 'sh' → logprob: -13.000054359436035
    4. 'ship' → logprob: -15.750054359436035
    5. '

' → logprob: -15.875054359436035
    6. '   ' → logprob: -16.12505531311035
    7. 'ski' → logprob: -16.50005531311035
    8. 'ши' → logprob: -16.87505531311035
    9. '
' → logprob: -17.00005531311035
    10. 'si' → logprob: -17.00005531311035

Token 114: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0004108924185857177
    2. '_' → logprob: -7.875411033630371
    3. '_s' → logprob: -10.625411033630371
    4. '_sc' → logprob: -12.875411033630371
    5. '>' → logprob: -13.250411033630371
    6. ' _' → logprob: -14.125411033630371
    7. '_scores' → logprob: -14.250411033630371
    8. '```' → logprob: -15.750411033630371
    9. '\' → logprob: -16.250410079956055
    10. '_code' → logprob: -16.625410079956055

Token 115: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0025276257656514645
    2. '>' → logprob: -6.002527713775635
    3. ' <' → logprob: -10.502527236938477
    4. ' ==' → logprob: -11.502527236938477
    5. ' ' → logprob: -11.877527236938477
    6. ' ' → logprob: -13.127527236938477
    7. ' >
' → logprob: -13.627527236938477
    8. ' >=' → logprob: -13.752527236938477
    9. ' >

' → logprob: -14.002527236938477
    10. ' ><' → logprob: -14.002527236938477

Token 116: ' ken' (ID: 21746)
  Prédit: 'ken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -0.12693262100219727
    2. ' ken' → logprob: -2.1269326210021973
    3. ' Ken' → logprob: -13.001932144165039
    4. 'Ken' → logprob: -14.376932144165039
    5. ' ' → logprob: -14.501932144165039
    6. 'kenn' → logprob: -15.126932144165039
    7. 'kens' → logprob: -15.626932144165039
    8. ' keny' → logprob: -16.00193214416504
    9. ' kenn' → logprob: -16.25193214416504
    10. 'k' → logprob: -16.50193214416504

Token 117: 'ji' (ID: 4133)
  Prédit: 'ji'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ji' → logprob: -0.00011391390580683947
    2. ' jiro' → logprob: -10.125113487243652
    3. 'jir' → logprob: -10.750113487243652
    4. '```' → logprob: -11.500113487243652
    5. 'j' → logprob: -11.625113487243652
    6. ' ' → logprob: -11.875113487243652
    7. 'zi' → logprob: -12.500113487243652
    8. 'iro' → logprob: -12.625113487243652
    9. 'ki' → logprob: -12.750113487243652
    10. '

' → logprob: -12.875113487243652

Token 118: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -1.2471589798224159e-05
    2. 'r' → logprob: -11.750012397766113
    3. 'ро' → logprob: -13.125012397766113
    4. ' ro' → logprob: -14.750012397766113
    5. '_ro' → logprob: -14.750012397766113
    6. '```' → logprob: -15.750012397766113
    7. ' ' → logprob: -15.875012397766113
    8. '	' → logprob: -16.12501335144043
    9. 'iro' → logprob: -16.25001335144043
    10. '_' → logprob: -16.25001335144043

Token 119: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00012844942102674395
    2. 'r' → logprob: -10.000128746032715
    3. 'ro' → logprob: -10.875128746032715
    4. 'score' → logprob: -11.000128746032715
    5. '_' → logprob: -11.125128746032715
    6. 'o' → logprob: -11.625128746032715
    7. '_r' → logprob: -11.750128746032715
    8. '_s' → logprob: -12.375128746032715
    9. '_ro' → logprob: -13.125128746032715
    10. '_scores' → logprob: -13.250128746032715

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.060365608893335e-05
    2. ':
' → logprob: -10.125041007995605
    3. ' :' → logprob: -14.875041007995605
    4. ':**' → logprob: -16.12504005432129
    5. '):' → logprob: -17.00004005432129
    6. ':

' → logprob: -17.87504005432129
    7. '>:' → logprob: -18.00004005432129
    8. ':
' → logprob: -18.50004005432129
    9. ':\' → logprob: -18.87504005432129
    10. ':def' → logprob: -18.87504005432129

Token 121: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14155761897563934
    2. ' print' → logprob: -2.1415576934814453
    3. '   ' → logprob: -4.391557693481445
    4. '\n' → logprob: -6.641557693481445
    5. '
' → logprob: -8.266557693481445
    6. '	print' → logprob: -8.891557693481445
    7. '"\' → logprob: -9.516557693481445
    8. '\' → logprob: -9.641557693481445
    9. '' → logprob: -10.016557693481445
    10. '```' → logprob: -10.016557693481445

Token 122: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06318632513284683
    2. ' print' → logprob: -2.8131864070892334
    3. '
' → logprob: -7.563186168670654
    4. '\n' → logprob: -8.063186645507812
    5. ' 
' → logprob: -8.188186645507812
    6. '' → logprob: -10.813186645507812
    7. '\' → logprob: -10.938186645507812
    8. '
' → logprob: -11.438186645507812
    9. 'pr' → logprob: -11.563186645507812
    10. '   ' → logprob: -11.938186645507812

Token 123: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.08595609664916992
    2. '(' → logprob: -2.58595609664917
    3. '('' → logprob: -4.96095609664917
    4. '("("' → logprob: -10.710956573486328
    5. '"' → logprob: -12.460956573486328
    6. '(
' → logprob: -13.085956573486328
    7. '("'' → logprob: -13.335956573486328
    8. '('"' → logprob: -13.585956573486328
    9. '("(' → logprob: -14.335956573486328
    10. '("")' → logprob: -14.460956573486328

Token 124: 'hiro' (ID: 105513)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.062337592244148254
    2. 'hiro' → logprob: -2.937337636947632
    3. '"H' → logprob: -5.562337398529053
    4. '"' → logprob: -5.937337398529053
    5. 'HI' → logprob: -7.687337398529053
    6. 'Hi' → logprob: -9.437337875366211
    7. 'hi' → logprob: -9.562337875366211
    8. 'h' → logprob: -9.687337875366211
    9. 'Yes' → logprob: -9.937337875366211
    10. 'High' → logprob: -10.312337875366211

Token 125: 'shi' (ID: 33444)
  Prédit: 'shi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shi' → logprob: -1.3425219549390022e-05
    2. 'sh' → logprob: -11.75001335144043
    3. 's' → logprob: -12.75001335144043
    4. 'ship' → logprob: -14.50001335144043
    5. 'shmi' → logprob: -14.50001335144043
    6. 'shima' → logprob: -15.12501335144043
    7. 'shini' → logprob: -15.62501335144043
    8. '

' → logprob: -16.12501335144043
    9. '   ' → logprob: -16.25001335144043
    10. ' shi' → logprob: -16.37501335144043

Token 126: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007042378652840853
    2. ' ")' → logprob: -5.507042407989502
    3. ')' → logprob: -6.632042407989502
    4. ' wins' → logprob: -7.632042407989502
    5. '")
' → logprob: -8.507041931152344
    6. '\n' → logprob: -8.632041931152344
    7. ' )' → logprob: -8.757041931152344
    8. ' ' → logprob: -8.882041931152344
    9. '"' → logprob: -9.507041931152344
    10. 's' → logprob: -9.757041931152344

Token 127: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0004481885116547346
    2. '
' → logprob: -8.250448226928711
    3. ' elif' → logprob: -9.125448226928711
    4. 'else' → logprob: -10.125448226928711
    5. 'el' → logprob: -11.250448226928711
    6. '```' → logprob: -11.375448226928711
    7. '\n' → logprob: -12.375448226928711
    8. 'e' → logprob: -12.750448226928711
    9. '  
' → logprob: -13.750448226928711
    10. '    
' → logprob: -14.000448226928711

Token 128: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.02669025957584381
    2. ' ' → logprob: -4.276690483093262
    3. ' ken' → logprob: -4.401690483093262
    4. 'ken' → logprob: -9.151690483093262
    5. ' ' → logprob: -10.526690483093262
    6. ' k' → logprob: -10.901690483093262
    7. '  ' → logprob: -11.276690483093262
    8. 'h' → logprob: -12.026690483093262
    9. 'hiro' → logprob: -12.401690483093262
    10. '```' → logprob: -13.026690483093262

Token 129: 'iro' (ID: 4509)
  Prédit: 'iro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iro' → logprob: -0.000260382192209363
    2. 'iros' → logprob: -9.250260353088379
    3. 'ro' → logprob: -9.625260353088379
    4. 'ken' → logprob: -10.125260353088379
    5. 'i' → logprob: -10.625260353088379
    6. 'hiro' → logprob: -12.250260353088379
    7. '```' → logprob: -12.375260353088379
    8. 'oshi' → logprob: -12.875260353088379
    9. '   ' → logprob: -12.875260353088379
    10. '1' → logprob: -13.125260353088379

Token 130: 'shi' (ID: 33444)
  Prédit: 'shi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shi' → logprob: -0.0026968163438141346
    2. 's' → logprob: -6.377696990966797
    3. 'sh' → logprob: -7.752696990966797
    4. 'ro' → logprob: -7.752696990966797
    5. 'shir' → logprob: -10.252696990966797
    6. 'si' → logprob: -10.502696990966797
    7. 'r' → logprob: -11.502696990966797
    8. '   ' → logprob: -11.752696990966797
    9. 'sho' → logprob: -12.002696990966797
    10. 'ship' → logprob: -12.627696990966797

Token 131: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.5014188799541444e-05
    2. '_' → logprob: -10.250044822692871
    3. ' _' → logprob: -12.125044822692871
    4. '_s' → logprob: -13.500044822692871
    5. '_scores' → logprob: -13.500044822692871
    6. '_code' → logprob: -14.000044822692871
    7. '```' → logprob: -15.625044822692871
    8. '_price' → logprob: -16.750045776367188
    9. ''_' → logprob: -17.000045776367188
    10. '_answer' → logprob: -17.250045776367188

Token 132: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0026091905310750008
    2. '<' → logprob: -6.0026092529296875
    3. ' ==' → logprob: -9.127609252929688
    4. ' >' → logprob: -11.377609252929688
    5. ' ' → logprob: -11.877609252929688
    6. '==' → logprob: -12.127609252929688
    7. ' ' → logprob: -14.752609252929688
    8. '>' → logprob: -15.377609252929688
    9. ' <=' → logprob: -15.627609252929688
    10. '```' → logprob: -16.752609252929688

Token 133: ' ken' (ID: 21746)
  Prédit: ' ken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ken' → logprob: -0.043459732085466385
    2. 'ken' → logprob: -3.16845965385437
    3. ' ' → logprob: -8.41845989227295
    4. ' Ken' → logprob: -10.04345989227295
    5. ' kenn' → logprob: -10.04345989227295
    6. ' ' → logprob: -10.29345989227295
    7. '"' → logprob: -10.41845989227295
    8. ' k' → logprob: -11.29345989227295
    9. ' kenya' → logprob: -11.79345989227295
    10. ' ke' → logprob: -11.91845989227295

Token 134: 'ji' (ID: 4133)
  Prédit: 'ji'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ji' → logprob: -7.123899558791891e-05
    2. 'jir' → logprob: -10.37507152557373
    3. 'j' → logprob: -10.62507152557373
    4. ' jiro' → logprob: -12.50007152557373
    5. 'じ' → logprob: -13.00007152557373
    6. 'zi' → logprob: -13.25007152557373
    7. '```' → logprob: -13.50007152557373
    8. 'iro' → logprob: -13.50007152557373
    9. 'jira' → logprob: -14.12507152557373
    10. 'jero' → logprob: -14.25007152557373

Token 135: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -9.066919301403686e-05
    2. 'r' → logprob: -9.500090599060059
    3. 'ро' → logprob: -12.375090599060059
    4. 'ros' → logprob: -13.375090599060059
    5. ' ro' → logprob: -13.500090599060059
    6. '_ro' → logprob: -14.000090599060059
    7. '_' → logprob: -14.000090599060059
    8. ' ' → logprob: -14.625090599060059
    9. 'iro' → logprob: -14.937590599060059
    10. 'roso' → logprob: -14.937590599060059

Token 136: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.951771421066951e-05
    2. 'score' → logprob: -11.375029563903809
    3. '_' → logprob: -12.125029563903809
    4. '_s' → logprob: -12.125029563903809
    5. 'o' → logprob: -12.500029563903809
    6. 'r' → logprob: -14.625029563903809
    7. 's' → logprob: -14.625029563903809
    8. '"_' → logprob: -14.750029563903809
    9. ':' → logprob: -15.125029563903809
    10. 'print' → logprob: -15.375029563903809

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019349466310814023
    2. ':
' → logprob: -6.251935005187988
    3. ' :' → logprob: -12.376935005187988
    4. '   ' → logprob: -13.626935005187988
    5. '):' → logprob: -15.126935005187988
    6. ':
' → logprob: -15.626935005187988
    7. ' :
' → logprob: -16.126934051513672
    8. ':

' → logprob: -16.751934051513672
    9. '":' → logprob: -16.876934051513672
    10. ':`' → logprob: -16.876934051513672

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09148859232664108
    2. 'print' → logprob: -2.4664885997772217
    3. ' print' → logprob: -6.091488361358643
    4. '"' → logprob: -8.3414888381958
    5. '	print' → logprob: -10.9664888381958
    6. '    
' → logprob: -11.9664888381958
    7. '```' → logprob: -12.4664888381958
    8. '
' → logprob: -12.5914888381958
    9. ' ' → logprob: -12.8414888381958
    10. '  ' → logprob: -13.2164888381958

Token 139: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0045182965695858
    2. ' print' → logprob: -5.629518508911133
    3. '   ' → logprob: -7.004518508911133
    4. '	print' → logprob: -12.504518508911133
    5. '    ' → logprob: -13.754518508911133
    6. '"' → logprob: -13.879518508911133
    7. ' ' → logprob: -13.879518508911133
    8. '```' → logprob: -13.879518508911133
    9. '    
' → logprob: -14.379518508911133
    10. 'pr' → logprob: -15.004518508911133

Token 140: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.002482315758243203
    2. '(' → logprob: -6.0024824142456055
    3. '("("' → logprob: -12.002482414245605
    4. '('' → logprob: -15.627482414245605
    5. '("(' → logprob: -16.50248146057129
    6. '(
' → logprob: -16.75248146057129
    7. '(""' → logprob: -16.87748146057129
    8. '"' → logprob: -17.12748146057129
    9. '("\"' → logprob: -17.12748146057129
    10. '("""' → logprob: -18.12748146057129

Token 141: 'ken' (ID: 2144)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3133590519428253
    2. 'ken' → logprob: -1.313359022140503
    3. ''' → logprob: -10.438359260559082
    4. 'k' → logprob: -10.813359260559082
    5. '"k' → logprob: -11.313359260559082
    6. 'kens' → logprob: -11.813359260559082
    7. ' ken' → logprob: -11.938359260559082
    8. 'kenn' → logprob: -12.063359260559082
    9. 'ko' → logprob: -12.188359260559082
    10. 'Ken' → logprob: -13.688359260559082

Token 142: 'ji' (ID: 4133)
  Prédit: 'ji'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ji' → logprob: -0.0004990590969100595
    2. 'j' → logprob: -8.37549877166748
    3. 'jir' → logprob: -8.37549877166748
    4. ' jiro' → logprob: -11.00049877166748
    5. 'じ' → logprob: -11.87549877166748
    6. 'jira' → logprob: -12.37549877166748
    7. '```' → logprob: -12.87549877166748
    8. 'zi' → logprob: -13.87549877166748
    9. '}' → logprob: -13.87549877166748
    10. ')' → logprob: -14.12549877166748

Token 143: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -1.4855663721391466e-05
    2. 'r' → logprob: -11.875015258789062
    3. 'iro' → logprob: -13.125015258789062
    4. 'ро' → logprob: -14.000015258789062
    5. '   ' → logprob: -14.250015258789062
    6. '"' → logprob: -14.500015258789062
    7. '")' → logprob: -14.500015258789062
    8. ')' → logprob: -14.875015258789062
    9. '```' → logprob: -14.875015258789062
    10. ' ' → logprob: -15.000015258789062

Token 144: '")
' (ID: 1896)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.952925443649292
    2. '")
' → logprob: -0.952925443649292
    3. 'else' → logprob: -1.577925443649292
    4. '")' → logprob: -3.952925443649292
    5. ')' → logprob: -5.827925682067871
    6. ' else' → logprob: -9.077925682067871
    7. '')
' → logprob: -9.827925682067871
    8. 'e' → logprob: -11.077925682067871
    9. '"' → logprob: -12.202925682067871
    10. '```' → logprob: -12.202925682067871

Token 145: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -8.2994620242971e-06
    2. ' else' → logprob: -11.875008583068848
    3. 'e' → logprob: -15.250008583068848
    4. '_else' → logprob: -15.250008583068848
    5. 'elif' → logprob: -15.625008583068848
    6. 'elses' → logprob: -16.00000762939453
    7. 'elser' → logprob: -16.25000762939453
    8. '}else' → logprob: -16.25000762939453
    9. '#else' → logprob: -16.25000762939453
    10. '```' → logprob: -16.50000762939453

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004895264864899218
    2. ':
' → logprob: -7.625489711761475
    3. '   ' → logprob: -14.125489234924316
    4. ' :' → logprob: -14.250489234924316
    5. ':
' → logprob: -16.625490188598633
    6. '):' → logprob: -18.125490188598633
    7. ':

' → logprob: -18.250490188598633
    8. ' :
' → logprob: -18.875490188598633
    9. 'print' → logprob: -18.875490188598633
    10. '：' → logprob: -19.250490188598633

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36498647928237915
    2. 'print' → logprob: -1.2399864196777344
    3. ' print' → logprob: -4.114986419677734
    4. '	print' → logprob: -9.864986419677734
    5. ' ' → logprob: -11.989986419677734
    6. '```' → logprob: -11.989986419677734
    7. '       ' → logprob: -13.239986419677734
    8. '.print' → logprob: -13.239986419677734
    9. '"' → logprob: -13.364986419677734
    10. '(print' → logprob: -13.489986419677734

Token 148: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002527268137782812
    2. ' print' → logprob: -6.002527236938477
    3. '   ' → logprob: -10.377527236938477
    4. '	print' → logprob: -10.877527236938477
    5. '.print' → logprob: -14.752527236938477
    6. 'pr' → logprob: -15.377527236938477
    7. '```' → logprob: -15.502527236938477
    8. ' ' → logprob: -15.752527236938477
    9. '_print' → logprob: -16.002527236938477
    10. '(print' → logprob: -16.002527236938477

Token 149: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004529926925897598
    2. '("("' → logprob: -5.87952995300293
    3. '(' → logprob: -6.37952995300293
    4. '("="' → logprob: -11.50452995300293
    5. '("")' → logprob: -11.75452995300293
    6. '("(' → logprob: -12.12952995300293
    7. '('' → logprob: -13.50452995300293
    8. '()' → logprob: -13.87952995300293
    9. '("\"' → logprob: -14.12952995300293
    10. '"' → logprob: -14.62952995300293

Token 150: 'even' (ID: 28689)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.027253849431872368
    2. 'tie' → logprob: -3.9022538661956787
    3. '"' → logprob: -6.0272536277771
    4. 'equal' → logprob: -6.7772536277771
    5. 't' → logprob: -7.1522536277771
    6. 'b' → logprob: -7.2772536277771
    7. 'emp' → logprob: -8.152254104614258
    8. 'Draw' → logprob: -8.527254104614258
    9. 'even' → logprob: -8.902254104614258
    10. 'drawing' → logprob: -9.027254104614258

Token 151: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -5.6100132496794686e-05
    2. '"' → logprob: -10.625056266784668
    3. ')' → logprob: -11.000056266784668
    4. ')")' → logprob: -11.500056266784668
    5. '")
' → logprob: -12.250056266784668
    6. '!")' → logprob: -16.87505531311035
    7. '()' → logprob: -17.37505531311035
    8. 'e' → logprob: -18.25005531311035
    9. '"))' → logprob: -18.37505531311035
    10. 'a' → logprob: -18.50005531311035


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 149
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 139
Précision stricte (1ère position): 54.36%
Précision adaptée (1ère position): 56.38%
Précision (top 10): 93.29%
================================================================================
