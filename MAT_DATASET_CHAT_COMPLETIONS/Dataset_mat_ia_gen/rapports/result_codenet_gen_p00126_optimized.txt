================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
for _ in range(n):
    grid=[input().split() for __ in range(9)]
    row_counts=[{str(d):0 for d in range(1,10)} for __ in range(9)]
    col_counts=[{str(d):0 for d in range(1,10)} for __ in range(9)]
    box_counts=[{str(d):0 for d in range(1,10)} for __ in range(9)]
    # Count occurrences
    for i in range(9):
        for j in range(9):
            num=grid[i][j]
            row_counts[i][num]+=1
            col_counts[j][num]+=1
            box_counts[(i//3)*3+(j//3)][num]+=1
    # Check duplicates
    mark=[[False]*9 for __ in range(9)]
    for i in range(9):
        for j in range(9):
            num=grid[i][j]
            if row_counts[i][num]>1 or col_counts[j][num]>1 or box_counts[(i//3)*3+(j//3)][num]>1:
                mark[i][j]=True
    for i in range(9):
        line=""
        for j in range(9):
            line+=('*' if mark[i][j] else ' ') + grid[i][j]
        print(line)
    print()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33144018054008484
    2. '(' → logprob: -1.3314402103424072
    3. '()' → logprob: -5.206439971923828
    4. '())' → logprob: -5.206439971923828
    5. '```' → logprob: -5.706439971923828
    6. '")' → logprob: -7.331439971923828
    7. '`)' → logprob: -7.456439971923828
    8. '(
' → logprob: -7.706439971923828
    9. '<|end|>' → logprob: -7.956439971923828
    10. '')' → logprob: -7.956439971923828

Token 4: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7022286057472229
    2. 'i' → logprob: -1.4522285461425781
    3. 'if' → logprob: -2.952228546142578
    4. 's' → logprob: -3.452228546142578
    5. ' ' → logprob: -3.577228546142578
    6. '`' → logprob: -3.577228546142578
    7. '\n' → logprob: -3.702228546142578
    8. '#' → logprob: -3.827228546142578
    9. ''' → logprob: -3.952228546142578
    10. '```' → logprob: -4.702228546142578

Token 5: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03377029672265053
    2. '  ' → logprob: -3.6587703227996826
    3. ' i' → logprob: -4.9087700843811035
    4. 'i' → logprob: -10.658770561218262
    5. ' n' → logprob: -11.283770561218262
    6. ' ‌' → logprob: -12.408770561218262
    7. ' )' → logprob: -12.533770561218262
    8. ' ' → logprob: -12.533770561218262
    9. '_' → logprob: -12.658770561218262
    10. ' ,' → logprob: -13.408770561218262

Token 6: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01588948257267475
    2. 'in' → logprob: -4.265889644622803
    3. ' ' → logprob: -6.390889644622803
    4. ' i' → logprob: -11.265889167785645
    5. '  ' → logprob: -11.765889167785645
    6. ' n' → logprob: -11.890889167785645
    7. 'n' → logprob: -12.265889167785645
    8. 'range' → logprob: -12.265889167785645
    9. '_' → logprob: -13.390889167785645
    10. 'import' → logprob: -13.515889167785645

Token 7: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759419798851013
    2. ' range' → logprob: -0.8259419798851013
    3. ' ' → logprob: -13.950942039489746
    4. '	range' → logprob: -14.200942039489746
    5. '(range' → logprob: -15.075942039489746
    6. '_range' → logprob: -15.325942039489746
    7. '```' → logprob: -15.700942039489746
    8. 'n' → logprob: -16.57594108581543
    9. ' xrange' → logprob: -17.07594108581543
    10. ' n' → logprob: -17.20094108581543

Token 8: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04536101594567299
    2. ' (' → logprob: -3.545361042022705
    3. '(n' → logprob: -4.170361042022705
    4. '(range' → logprob: -10.545360565185547
    5. '(len' → logprob: -12.295360565185547
    6. ' n' → logprob: -12.670360565185547
    7. '(int' → logprob: -13.670360565185547
    8. ' ' → logprob: -13.920360565185547
    9. 'n' → logprob: -14.045360565185547
    10. '(
' → logprob: -14.420360565185547

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09203629195690155
    2. ')' → logprob: -2.592036247253418
    3. ':' → logprob: -4.342036247253418
    4. ':)' → logprob: -10.342036247253418
    5. ' ):' → logprob: -11.967036247253418
    6. '):
' → logprob: -13.217036247253418
    7. '+' → logprob: -13.217036247253418
    8. ' )' → logprob: -13.467036247253418
    9. ' :' → logprob: -13.717036247253418
    10. ':**' → logprob: -13.967036247253418

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021280182991176844
    2. '    
' → logprob: -6.5021281242370605
    3. 'print' → logprob: -8.377127647399902
    4. ' ' → logprob: -9.377127647399902
    5. '```' → logprob: -9.377127647399902
    6. ' print' → logprob: -9.627127647399902
    7. 'input' → logprob: -10.002127647399902
    8. '    ' → logprob: -10.502127647399902
    9. ' input' → logprob: -11.002127647399902
    10. ' 
' → logprob: -11.627127647399902

Token 11: ' grid' (ID: 10586)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23376907408237457
    2. 'a' → logprob: -2.733769178390503
    3. 'x' → logprob: -2.983769178390503
    4. 'print' → logprob: -3.358769178390503
    5. 'name' → logprob: -4.358768939971924
    6. 's' → logprob: -4.358768939971924
    7. 't' → logprob: -4.983768939971924
    8. 'data' → logprob: -5.233768939971924
    9. 'input' → logprob: -5.483768939971924
    10. 'i' → logprob: -5.858768939971924

Token 12: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011815877631306648
    2. '[i' → logprob: -5.011816024780273
    3. '.' → logprob: -7.011816024780273
    4. '[row' → logprob: -7.136816024780273
    5. '[]' → logprob: -7.261816024780273
    6. '[][]' → logprob: -7.636816024780273
    7. '[x' → logprob: -8.136816024780273
    8. '[int' → logprob: -8.386816024780273
    9. '[line' → logprob: -8.386816024780273
    10. '=' → logprob: -8.511816024780273

Token 13: 'input' (ID: 2586)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1426922082901001
    2. '[list' → logprob: -2.1426920890808105
    3. '[input' → logprob: -4.3926920890808105
    4. '[]' → logprob: -6.8926920890808105
    5. 'input' → logprob: -7.1426920890808105
    6. '[' → logprob: -7.1426920890808105
    7. ' list' → logprob: -8.017692565917969
    8. '[int' → logprob: -8.392692565917969
    9. '[str' → logprob: -9.767692565917969
    10. '   ' → logprob: -10.892692565917969

Token 14: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.39660221338272095
    2. '()' → logprob: -1.1466021537780762
    3. '())' → logprob: -4.646602153778076
    4. '().' → logprob: -9.896602630615234
    5. '()+' → logprob: -11.521602630615234
    6. '()][' → logprob: -12.271602630615234
    7. '()>' → logprob: -12.521602630615234
    8. '());' → logprob: -12.646602630615234
    9. '(' → logprob: -12.646602630615234
    10. ' ()' → logprob: -12.896602630615234

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1005980595946312
    2. 'strip' → logprob: -2.350598096847534
    3. 'rstrip' → logprob: -7.850597858428955
    4. ' split' → logprob: -13.975598335266113
    5. 'append' → logprob: -15.100598335266113
    6. 'read' → logprob: -15.475598335266113
    7. 'replace' → logprob: -15.600598335266113
    8. '```' → logprob: -15.850598335266113
    9. ' strip' → logprob: -16.975597381591797
    10. 's' → logprob: -17.225597381591797

Token 16: '()' (ID: 416)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8240878582000732
    2. '())' → logprob: -1.4490878582000732
    3. '()' → logprob: -1.8240878582000732
    4. '(' → logprob: -2.4490878582000732
    5. '()]' → logprob: -2.5740878582000732
    6. '("("' → logprob: -6.699088096618652
    7. '("' → logprob: -6.824088096618652
    8. '()))' → logprob: -9.074088096618652
    9. '(()' → logprob: -10.074088096618652
    10. '(`' → logprob: -10.949088096618652

Token 17: ' for' (ID: 395)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4612083435058594
    2. ')' → logprob: -1.5862083435058594
    3. ']' → logprob: -2.0862083435058594
    4. '()]' → logprob: -3.3362083435058594
    5. '()' → logprob: -6.461208343505859
    6. '())' → logprob: -6.961208343505859
    7. '   ' → logprob: -7.211208343505859
    8. '[' → logprob: -7.586208343505859
    9. '`]' → logprob: -8.21120834350586
    10. '])' → logprob: -8.83620834350586

Token 18: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0007114782347343862
    2. '(range' → logprob: -7.500711441040039
    3. ' ' → logprob: -9.250711441040039
    4. 'range' → logprob: -10.375711441040039
    5. '(' → logprob: -11.750711441040039
    6. ' (' → logprob: -12.125711441040039
    7. '_' → logprob: -12.250711441040039
    8. ' i' → logprob: -12.500711441040039
    9. ' _' → logprob: -12.625711441040039
    10. ' xrange' → logprob: -13.625711441040039

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10523224622011185
    2. ' range' → logprob: -3.2302322387695312
    3. 'in' → logprob: -3.3552322387695312
    4. 'range' → logprob: -3.8552322387695312
    5. '_' → logprob: -5.730232238769531
    6. '(range' → logprob: -7.730232238769531
    7. ' ' → logprob: -7.980232238769531
    8. '(' → logprob: -9.730232238769531
    9. '```' → logprob: -10.480232238769531
    10. ' _' → logprob: -10.730232238769531

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868715465068817
    2. ' range' → logprob: -1.136871576309204
    3. '(range' → logprob: -15.261871337890625
    4. '	range' → logprob: -16.386871337890625
    5. 'rang' → logprob: -17.011871337890625
    6. ' ' → logprob: -17.011871337890625
    7. 'ran' → logprob: -17.761871337890625
    8. ')' → logprob: -17.886871337890625
    9. '_range' → logprob: -18.511871337890625
    10. 'r' → logprob: -18.511871337890625

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033395520877093077
    2. '(n' → logprob: -5.753339767456055
    3. '(int' → logprob: -9.378339767456055
    4. ' (' → logprob: -10.503339767456055
    5. '4' → logprob: -10.878339767456055
    6. '3' → logprob: -11.628339767456055
    7. '(len' → logprob: -12.128339767456055
    8. ' ' → logprob: -12.253339767456055
    9. '(k' → logprob: -12.753339767456055
    10. '(s' → logprob: -13.628339767456055

Token 22: '9' (ID: 24)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3376837968826294
    2. '4' → logprob: -1.9626837968826294
    3. '9' → logprob: -2.58768367767334
    4. '5' → logprob: -3.46268367767334
    5. '6' → logprob: -3.71268367767334
    6. '2' → logprob: -5.33768367767334
    7. 'n' → logprob: -5.71268367767334
    8. ' ' → logprob: -5.96268367767334
    9. 'int' → logprob: -6.96268367767334
    10. '7' → logprob: -6.96268367767334

Token 23: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00014537633978761733
    2. ')' → logprob: -9.375144958496094
    3. ']' → logprob: -10.000144958496094
    4. '   ' → logprob: -12.625144958496094
    5. ' )' → logprob: -13.125144958496094
    6. ')])' → logprob: -13.125144958496094
    7. ')]
' → logprob: -13.250144958496094
    8. '')]' → logprob: -13.250144958496094
    9. '])]' → logprob: -13.375144958496094
    10. ')],' → logprob: -14.625144958496094

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06672147661447525
    2. 'for' → logprob: -3.9417214393615723
    3. ' for' → logprob: -4.066721439361572
    4. '[' → logprob: -5.316721439361572
    5. '    
' → logprob: -5.691721439361572
    6. '```' → logprob: -5.691721439361572
    7. ' ' → logprob: -5.816721439361572
    8. ')' → logprob: -6.191721439361572
    9. '
' → logprob: -6.441721439361572
    10. 's' → logprob: -7.066721439361572

Token 25: ' row' (ID: 5225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9027613997459412
    2. 'for' → logprob: -1.152761459350586
    3. 'valid' → logprob: -2.152761459350586
    4. ' for' → logprob: -2.777761459350586
    5. 'count' → logprob: -3.402761459350586
    6. 'rows' → logprob: -4.902761459350586
    7. 'row' (adapté à ' row') → logprob: -4.902761459350586
    8. 's' → logprob: -5.152761459350586
    9. 'print' → logprob: -5.277761459350586
    10. 'result' → logprob: -5.277761459350586

Token 26: '_counts' (ID: 61971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7818440198898315
    2. 's' → logprob: -0.9068440198898315
    3. '_s' → logprob: -2.031844139099121
    4. '_sum' → logprob: -5.156844139099121
    5. '_counts' → logprob: -7.531844139099121
    6. '[' → logprob: -7.906844139099121
    7. '[]' → logprob: -8.781844139099121
    8. '[:]' → logprob: -9.156844139099121
    9. '_lengths' → logprob: -9.531844139099121
    10. 'S' → logprob: -9.531844139099121

Token 27: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43892592191696167
    2. '[' → logprob: -1.5639259815216064
    3. '_' → logprob: -2.3139259815216064
    4. '=[' → logprob: -3.5639259815216064
    5. ' =' → logprob: -4.688925743103027
    6. '_=' → logprob: -5.563925743103027
    7. '(' → logprob: -5.938925743103027
    8. '=[]' → logprob: -7.563925743103027
    9. '=[[' → logprob: -7.813925743103027
    10. 's' → logprob: -8.063925743103027

Token 28: '{' (ID: 90)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6362211108207703
    2. '[' → logprob: -1.136221170425415
    3. '{}' → logprob: -2.386221170425415
    4. '{' → logprob: -3.386221170425415
    5. 'set' → logprob: -3.886221170425415
    6. 'sum' → logprob: -6.886220932006836
    7. 'dict' → logprob: -7.011220932006836
    8. ' [' → logprob: -8.386220932006836
    9. 'row' → logprob: -8.511220932006836
    10. '[int' → logprob: -8.511220932006836

Token 29: 'str' (ID: 689)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9714767336845398
    2. '}' → logprob: -1.7214767932891846
    3. 'k' → logprob: -2.5964767932891846
    4. 'int' → logprob: -2.7214767932891846
    5. 'grid' → logprob: -2.8464767932891846
    6. 'i' → logprob: -2.8464767932891846
    7. 'x' → logprob: -3.2214767932891846
    8. 'v' → logprob: -3.2214767932891846
    9. '}}' → logprob: -3.3464767932891846
    10. 'val' → logprob: -4.3464765548706055

Token 30: '(d' (ID: 2572)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0031923281494528055
    2. '(k' → logprob: -6.75319242477417
    3. '(d' → logprob: -7.00319242477417
    4. '(x' → logprob: -7.62819242477417
    5. '(num' → logprob: -8.253191947937012
    6. '(j' → logprob: -8.253191947937012
    7. '(' → logprob: -9.628191947937012
    8. '(n' → logprob: -11.253191947937012
    9. 'i' → logprob: -12.378191947937012
    10. '(val' → logprob: -12.378191947937012

Token 31: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4761849045753479
    2. '):' → logprob: -0.9761849045753479
    3. 'igit' → logprob: -6.351184844970703
    4. '}' → logprob: -9.226184844970703
    5. '+' → logprob: -9.851184844970703
    6. 'i' → logprob: -10.226184844970703
    7. ')}' → logprob: -10.476184844970703
    8. ' ):' → logprob: -10.601184844970703
    9. ' )' → logprob: -10.976184844970703
    10. ' for' → logprob: -11.226184844970703

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06530388444662094
    2. '9' → logprob: -2.9403038024902344
    3. 'i' → logprob: -4.690303802490234
    4. ' ' → logprob: -7.690303802490234
    5. 'grid' → logprob: -8.690303802490234
    6. 'row' → logprob: -8.815303802490234
    7. ' i' → logprob: -9.190303802490234
    8. 'str' → logprob: -9.940303802490234
    9. '1' → logprob: -10.190303802490234
    10. 'range' → logprob: -10.190303802490234

Token 33: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023280303925275803
    2. 'for' → logprob: -3.773280382156372
    3. ' ' → logprob: -10.398280143737793
    4. '}' → logprob: -13.023280143737793
    5. ' d' → logprob: -14.398280143737793
    6. ' in' → logprob: -14.898280143737793
    7. '	for' → logprob: -15.023280143737793
    8. '    ' → logprob: -15.523280143737793
    9. '  ' → logprob: -15.898280143737793
    10. '```' → logprob: -16.14828109741211

Token 34: ' d' (ID: 272)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012523902580142021
    2. 'range' → logprob: -4.387524127960205
    3. ' d' → logprob: -11.512523651123047
    4. ' ' → logprob: -12.762523651123047
    5. '	range' → logprob: -14.512523651123047
    6. 'd' → logprob: -14.887523651123047
    7. '(range' → logprob: -15.137523651123047
    8. ' ran' → logprob: -17.012523651123047
    9. '  ' → logprob: -17.262523651123047
    10. ' xrange' → logprob: -17.262523651123047

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21357138454914093
    2. ' range' → logprob: -1.7135714292526245
    3. ' ' → logprob: -4.838571548461914
    4. 'range' → logprob: -5.838571548461914
    5. 'in' → logprob: -6.838571548461914
    6. '1' → logprob: -8.838571548461914
    7. '<|end|>' → logprob: -10.963571548461914
    8. '(range' → logprob: -11.588571548461914
    9. '	range' → logprob: -13.338571548461914
    10. ' i' → logprob: -13.463571548461914

Token 36: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048408225178719
    2. ' range' → logprob: -4.511048316955566
    3. '1' → logprob: -14.636048316955566
    4. ' ' → logprob: -16.511049270629883
    5. '	range' → logprob: -16.636049270629883
    6. '(range' → logprob: -16.886049270629883
    7. '   ' → logprob: -18.261049270629883
    8. '[' → logprob: -19.261049270629883
    9. '```' → logprob: -19.261049270629883
    10. '  ' → logprob: -19.511049270629883

Token 37: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '1' → logprob: -9.625066757202148
    3. ' (' → logprob: -14.125066757202148
    4. '(
' → logprob: -16.75006675720215
    5. 's' → logprob: -18.12506675720215
    6. '9' → logprob: -18.50006675720215
    7. ' ' → logprob: -18.56256675720215
    8. '```' → logprob: -18.56256675720215
    9. ')' → logprob: -19.43756675720215
    10. '   ' → logprob: -19.56256675720215

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003103175258729607
    2. ' ' → logprob: -8.250309944152832
    3. '9' → logprob: -10.125309944152832
    4. '10' → logprob: -12.125309944152832
    5. '(' → logprob: -13.000309944152832
    6. ')' → logprob: -15.062809944152832
    7. '0' → logprob: -15.187809944152832
    8. '   ' → logprob: -16.37531089782715
    9. '{' → logprob: -16.81281089782715
    10. '`' → logprob: -16.87531089782715

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09415781497955322
    2. '9' → logprob: -2.8441576957702637
    3. '0' → logprob: -4.094157695770264
    4. ' ,' → logprob: -5.344157695770264
    5. '10' → logprob: -5.344157695770264
    6. '1' → logprob: -5.594157695770264
    7. ' ' → logprob: -6.469157695770264
    8. 'to' → logprob: -8.969158172607422
    9. ' to' → logprob: -11.344158172607422
    10. '-' → logprob: -11.594158172607422

Token 40: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.507972572464496e-05
    2. ' ' → logprob: -9.50009536743164
    3. '0' → logprob: -11.25009536743164
    4. '1' → logprob: -12.00009536743164
    5. '9' → logprob: -14.87509536743164
    6. '```' → logprob: -15.00009536743164
    7. ')' → logprob: -17.00009536743164
    8. '   ' → logprob: -17.62509536743164
    9. 'a' → logprob: -17.62509536743164
    10. '>' → logprob: -17.68759536743164

Token 41: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.000591278774663806
    2. ')' → logprob: -8.250591278076172
    3. '})' → logprob: -8.625591278076172
    4. ')]' → logprob: -9.500591278076172
    5. ')}}' → logprob: -10.375591278076172
    6. '}' → logprob: -10.625591278076172
    7. ' )' → logprob: -11.250591278076172
    8. ')}>' → logprob: -13.125591278076172
    9. ' ' → logprob: -13.250591278076172
    10. '```' → logprob: -14.875591278076172

Token 42: ' for' (ID: 395)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.6238940358161926
    2. '   ' → logprob: -1.9988939762115479
    3. ' }' → logprob: -2.123893976211548
    4. ']' → logprob: -2.623893976211548
    5. ' for' → logprob: -3.248893976211548
    6. '}]' → logprob: -3.373893976211548
    7. ',' → logprob: -3.498893976211548
    8. ' }]' → logprob: -3.998893976211548
    9. ' ' → logprob: -5.248894214630127
    10. '    ' → logprob: -5.498894214630127

Token 43: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.013177412562072277
    2. '_' → logprob: -4.888177394866943
    3. ' _' → logprob: -5.513177394866943
    4. 'range' → logprob: -6.513177394866943
    5. ' row' → logprob: -10.263177871704102
    6. '_range' → logprob: -13.013177871704102
    7. 'row' → logprob: -14.013177871704102
    8. '(range' → logprob: -14.763177871704102
    9. ' ' → logprob: -15.263177871704102
    10. '	range' → logprob: -17.5131778717041

Token 44: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012648086063563824
    2. 'range' → logprob: -4.387648105621338
    3. '(range' → logprob: -9.26264762878418
    4. ' in' → logprob: -10.38764762878418
    5. ' row' → logprob: -12.38764762878418
    6. '(' → logprob: -12.38764762878418
    7. ' ' → logprob: -13.51264762878418
    8. ']' → logprob: -14.13764762878418
    9. ')' → logprob: -14.38764762878418
    10. 'row' → logprob: -15.01264762878418

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020774602890015
    2. 'range' → logprob: -2.350207805633545
    3. '(range' → logprob: -14.725207328796387
    4. ' ' → logprob: -14.975207328796387
    5. '[' → logprob: -15.850207328796387
    6. '9' → logprob: -16.100208282470703
    7. '(' → logprob: -16.725208282470703
    8. '	range' → logprob: -17.100208282470703
    9. '   ' → logprob: -17.475208282470703
    10. 'row' → logprob: -17.975208282470703

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.2020991056924686e-05
    2. '9' → logprob: -10.500032424926758
    3. ' (' → logprob: -12.500032424926758
    4. ' ' → logprob: -15.500032424926758
    5. '(
' → logprob: -15.500032424926758
    6. '   ' → logprob: -16.250032424926758
    7. '((' → logprob: -17.437532424926758
    8. ')' → logprob: -17.500032424926758
    9. '  ' → logprob: -17.750032424926758
    10. ']' → logprob: -18.062532424926758

Token 47: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00047106825513765216
    2. ' ' → logprob: -7.750471115112305
    3. ')' → logprob: -10.875471115112305
    4. '   ' → logprob: -11.875471115112305
    5. '(' → logprob: -12.625471115112305
    6. '3' → logprob: -12.750471115112305
    7. '1' → logprob: -13.687971115112305
    8. ')]' → logprob: -13.812971115112305
    9. '10' → logprob: -13.875471115112305
    10. '  ' → logprob: -13.937971115112305

Token 48: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.763666947837919e-05
    2. ']' → logprob: -11.12504768371582
    3. ')]
' → logprob: -11.25004768371582
    4. '])]' → logprob: -12.00004768371582
    5. ')' → logprob: -12.12504768371582
    6. ')])' → logprob: -12.75004768371582
    7. '')]' → logprob: -12.87504768371582
    8. '])' → logprob: -14.25004768371582
    9. ')],' → logprob: -14.50004768371582
    10. ')]

' → logprob: -14.87504768371582

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022413700353354216
    2. '    
' → logprob: -7.377241134643555
    3. ' ' → logprob: -7.752241134643555
    4. '<|end|>' → logprob: -7.877241134643555
    5. '    ' → logprob: -8.002241134643555
    6. '  ' → logprob: -8.502241134643555
    7. '
' → logprob: -9.377241134643555
    8. '[' → logprob: -9.627241134643555
    9. ')' → logprob: -11.002241134643555
    10. '   
' → logprob: -11.127241134643555

Token 50: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -0.043625324964523315
    2. 'column' → logprob: -3.7936253547668457
    3. '   ' → logprob: -4.293625354766846
    4. ' col' → logprob: -5.168625354766846
    5. 'for' → logprob: -8.043624877929688
    6. 'cell' → logprob: -8.168624877929688
    7. '	col' → logprob: -10.293624877929688
    8. ' column' → logprob: -10.543624877929688
    9. ' for' → logprob: -10.793624877929688
    10. '    
' → logprob: -10.918624877929688

Token 51: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0004558175278361887
    2. '_c' → logprob: -8.375455856323242
    3. '_' → logprob: -8.500455856323242
    4. ' _' → logprob: -12.500455856323242
    5. ')_' → logprob: -13.000455856323242
    6. '_s' → logprob: -13.000455856323242
    7. '_count' → logprob: -13.750455856323242
    8. '```' → logprob: -13.750455856323242
    9. 's' → logprob: -13.875455856323242
    10. ']_' → logprob: -14.125455856323242

Token 52: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.00882728397846222
    2. '=' → logprob: -4.883827209472656
    3. ' =[' → logprob: -7.008827209472656
    4. ' =' → logprob: -8.883827209472656
    5. '[' → logprob: -9.008827209472656
    6. '=[
' → logprob: -10.633827209472656
    7. '=[[' → logprob: -11.008827209472656
    8. '=[]' → logprob: -11.633827209472656
    9. '=['' → logprob: -13.258827209472656
    10. '==' → logprob: -14.133827209472656

Token 53: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -3.309382373117842e-05
    2. ' {' → logprob: -10.625033378601074
    3. '[{' → logprob: -11.875033378601074
    4. '{k' → logprob: -14.625033378601074
    5. '{i' → logprob: -15.375033378601074
    6. '{x' → logprob: -15.750033378601074
    7. '{text' → logprob: -15.750033378601074
    8. '{id' → logprob: -15.875033378601074
    9. '{s' → logprob: -15.875033378601074
    10. '{return' → logprob: -16.000032424926758

Token 54: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.1279553291387856e-05
    2. ' str' → logprob: -11.625011444091797
    3. ''s' → logprob: -13.750011444091797
    4. 's' → logprob: -14.750011444091797
    5. '(str' → logprob: -15.125011444091797
    6. ''' → logprob: -15.250011444091797
    7. '   ' → logprob: -16.375011444091797
    8. ' ' → logprob: -17.000011444091797
    9. '0' → logprob: -17.750011444091797
    10. ')' → logprob: -17.750011444091797

Token 55: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. ' (' → logprob: -18.000001907348633
    4. 'd' → logprob: -19.250001907348633
    5. ' ' → logprob: -20.375001907348633
    6. '<|end|>' → logprob: -20.875001907348633
    7. '(D' → logprob: -21.000001907348633
    8. '(i' → logprob: -21.375001907348633
    9. '(k' → logprob: -21.500001907348633
    10. '(day' → logprob: -21.875001907348633

Token 56: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020703254267573357
    2. ':' → logprob: -6.377070426940918
    3. 'd' → logprob: -8.377070426940918
    4. ')' → logprob: -9.377070426940918
    5. '}:' → logprob: -10.627070426940918
    6. ')d' → logprob: -11.252070426940918
    7. ':d' → logprob: -12.252070426940918
    8. '```' → logprob: -13.252070426940918
    9. '   ' → logprob: -13.377070426940918
    10. ')}' → logprob: -13.377070426940918

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '۰' → logprob: -18.31252670288086
    4. '０' → logprob: -19.31252670288086
    5. '  ' → logprob: -19.87502670288086
    6. '   ' → logprob: -19.87502670288086
    7. '{' → logprob: -19.93752670288086
    8. ')' → logprob: -20.06252670288086
    9. '
' → logprob: -20.12502670288086
    10. '012' → logprob: -20.12502670288086

Token 58: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04859009385108948
    2. 'for' → logprob: -3.0485901832580566
    3. ' ' → logprob: -13.173589706420898
    4. '   ' → logprob: -15.298589706420898
    5. '	for' → logprob: -15.298589706420898
    6. '    ' → logprob: -15.548589706420898
    7. '}' → logprob: -15.923589706420898
    8. '  ' → logprob: -16.6735897064209
    9. ' in' → logprob: -16.9235897064209
    10. '```' → logprob: -16.9235897064209

Token 59: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4176670014858246
    2. ' range' → logprob: -1.167667031288147
    3. 'range' → logprob: -4.042666912078857
    4. 'd' → logprob: -4.542666912078857
    5. ' __' → logprob: -7.167666912078857
    6. '__' → logprob: -7.292666912078857
    7. ' ' → logprob: -8.167667388916016
    8. '_' → logprob: -8.542667388916016
    9. '_d' → logprob: -9.542667388916016
    10. ' _' → logprob: -9.667667388916016

Token 60: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03674304485321045
    2. 'in' → logprob: -4.1617431640625
    3. ' in' → logprob: -4.5367431640625
    4. 'range' → logprob: -4.7867431640625
    5. ' range' → logprob: -6.7867431640625
    6. '(range' → logprob: -8.5367431640625
    7. ' n' → logprob: -10.1617431640625
    8. ' ' → logprob: -10.2867431640625
    9. '<|end|>' → logprob: -11.2867431640625
    10. '(n' → logprob: -11.7867431640625

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018234701827168465
    2. ' range' → logprob: -4.018234729766846
    3. '(range' → logprob: -9.393234252929688
    4. '(' → logprob: -13.518234252929688
    5. '	range' → logprob: -17.893234252929688
    6. 'rang' → logprob: -19.018234252929688
    7. ' ' → logprob: -19.143234252929688
    8. '
' → logprob: -19.518234252929688
    9. '[' → logprob: -20.268234252929688
    10. '   ' → logprob: -20.393234252929688

Token 62: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '9' → logprob: -17.75
    3. '1' → logprob: -18.25
    4. 'range' → logprob: -18.5
    5. ' (' → logprob: -18.625
    6. '(range' → logprob: -18.75
    7. ',' → logprob: -20.0
    8. 's' → logprob: -20.125
    9. '   ' → logprob: -20.375
    10. '(
' → logprob: -20.5

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01109403744339943
    2. '9' → logprob: -4.511094093322754
    3. ' ' → logprob: -10.136094093322754
    4. '(' → logprob: -12.261094093322754
    5. '   ' → logprob: -14.386094093322754
    6. '```' → logprob: -14.511094093322754
    7. ',' → logprob: -14.886094093322754
    8. '10' → logprob: -15.948594093322754
    9. ')' → logprob: -16.948593139648438
    10. 's' → logprob: -17.261093139648438

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007219645194709301
    2. '0' → logprob: -7.8757219314575195
    3. '1' → logprob: -8.87572193145752
    4. '9' → logprob: -9.12572193145752
    5. ' ,' → logprob: -9.50072193145752
    6. ' ' → logprob: -11.75072193145752
    7. '10' → logprob: -12.25072193145752
    8. '(' → logprob: -13.25072193145752
    9. '3' → logprob: -13.87572193145752
    10. '   ' → logprob: -14.00072193145752

Token 65: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005289373453706503
    2. '9' → logprob: -5.255289554595947
    3. ' ' → logprob: -10.005289077758789
    4. '```' → logprob: -12.755289077758789
    5. '0' → logprob: -12.880289077758789
    6. ')' → logprob: -13.255289077758789
    7. '1' → logprob: -14.005289077758789
    8. '   ' → logprob: -14.130289077758789
    9. ',' → logprob: -14.755289077758789
    10. '<|end|>' → logprob: -15.255289077758789

Token 66: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.026214953511953354
    2. ')]' → logprob: -4.026215076446533
    3. '}]' → logprob: -5.401215076446533
    4. '}' → logprob: -6.276215076446533
    5. '})' → logprob: -6.901215076446533
    6. ')' → logprob: -7.526215076446533
    7. ']}' → logprob: -10.026214599609375
    8. '   ' → logprob: -10.401214599609375
    9. ' ' → logprob: -12.776214599609375
    10. '}}' → logprob: -12.901214599609375

Token 67: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006667297333478928
    2. ' for' → logprob: -5.631667137145996
    3. 'for' → logprob: -6.006667137145996
    4. ' ]' → logprob: -7.881667137145996
    5. '   ' → logprob: -8.506667137145996
    6. ')' → logprob: -12.131667137145996
    7. '}' → logprob: -12.256667137145996
    8. ' ' → logprob: -12.381667137145996
    9. ')]' → logprob: -13.006667137145996
    10. ']
' → logprob: -13.756667137145996

Token 68: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0004666577442549169
    2. 'range' → logprob: -7.750466823577881
    3. '(range' → logprob: -10.375466346740723
    4. ' (' → logprob: -12.625466346740723
    5. '(' → logprob: -13.500466346740723
    6. ' ' → logprob: -17.62546730041504
    7. '	range' → logprob: -18.25046730041504
    8. '_range' → logprob: -18.75046730041504
    9. '_' → logprob: -18.87546730041504
    10. ' _' → logprob: -19.37546730041504

Token 69: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6553910970687866
    2. ' in' → logprob: -1.2803910970687866
    3. 'range' → logprob: -1.9053910970687866
    4. '(' → logprob: -3.405391216278076
    5. ' (' → logprob: -4.530391216278076
    6. '(range' → logprob: -4.780391216278076
    7. 'in' → logprob: -6.405391216278076
    8. ' ' → logprob: -10.530390739440918
    9. '    ' → logprob: -12.030390739440918
    10. '<|end|>' → logprob: -12.905390739440918

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5775682330131531
    2. ' range' → logprob: -0.8275682330131531
    3. '(' → logprob: -6.702568054199219
    4. '(range' → logprob: -7.827568054199219
    5. ' (' → logprob: -14.452568054199219
    6. '[' → logprob: -15.327568054199219
    7. '	range' → logprob: -15.702568054199219
    8. ' ' → logprob: -16.07756805419922
    9. '9' → logprob: -16.82756805419922
    10. ' xrange' → logprob: -17.57756805419922

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. 'range' → logprob: -14.625000953674316
    3. '(range' → logprob: -15.250000953674316
    4. ' (' → logprob: -15.750000953674316
    5. ' range' → logprob: -16.250001907348633
    6. '9' → logprob: -17.750001907348633
    7. '(
' → logprob: -18.250001907348633
    8. ' ' → logprob: -20.125001907348633
    9. '```' → logprob: -20.125001907348633
    10. '<|end|>' → logprob: -20.750001907348633

Token 72: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.750004768371582
    3. '(' → logprob: -13.500004768371582
    4. '```' → logprob: -15.500004768371582
    5. ')' → logprob: -15.625004768371582
    6. '   ' → logprob: -16.2500057220459
    7. ')]' → logprob: -18.3750057220459
    8. '0' → logprob: -18.4375057220459
    9. '))' → logprob: -18.9375057220459
    10. '1' → logprob: -18.9375057220459

Token 73: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.08002276718616486
    2. ']' → logprob: -2.5800228118896484
    3. ')' → logprob: -6.830022811889648
    4. '])' → logprob: -10.330022811889648
    5. ']
' → logprob: -11.705022811889648
    6. '])]' → logprob: -12.830022811889648
    7. ' ]' → logprob: -13.080022811889648
    8. ')]
' → logprob: -13.330022811889648
    9. ')])' → logprob: -13.705022811889648
    10. ')
' → logprob: -14.205022811889648

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019935856107622385
    2. 'for' → logprob: -6.501993656158447
    3. ' for' → logprob: -9.001993179321289
    4. ')' → logprob: -9.501993179321289
    5. '    
' → logprob: -9.501993179321289
    6. '    ' → logprob: -10.251993179321289
    7. '```' → logprob: -10.501993179321289
    8. '<|end|>' → logprob: -10.501993179321289
    9. '  ' → logprob: -10.751993179321289
    10. 'row' → logprob: -11.126993179321289

Token 75: ' box' (ID: 5506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014288433827459812
    2. 'cell' → logprob: -5.639288425445557
    3. 'block' → logprob: -5.639288425445557
    4. 'for' → logprob: -6.764288425445557
    5. '    
' → logprob: -6.764288425445557
    6. '  ' → logprob: -6.889288425445557
    7. 'valid' → logprob: -7.014288425445557
    8. ')' → logprob: -7.389288425445557
    9. ' cell' → logprob: -7.889288425445557
    10. ' ' → logprob: -8.014288902282715

Token 76: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0005632805987261236
    2. '_' → logprob: -7.500563144683838
    3. '_c' → logprob: -12.625563621520996
    4. 's' → logprob: -13.500563621520996
    5. '_s' → logprob: -13.625563621520996
    6. '_indices' → logprob: -13.750563621520996
    7. '_sizes' → logprob: -14.250563621520996
    8. '_scores' → logprob: -15.625563621520996
    9. '_bounds' → logprob: -15.750563621520996
    10. ' _' → logprob: -15.750563621520996

Token 77: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.10044010728597641
    2. '=' → logprob: -2.35044002532959
    3. '[' → logprob: -9.10044002532959
    4. ' =[' → logprob: -9.97544002532959
    5. ' =' → logprob: -10.10044002532959
    6. '=[[' → logprob: -11.22544002532959
    7. '=[]' → logprob: -11.72544002532959
    8. '=[
' → logprob: -12.10044002532959
    9. '=['' → logprob: -12.60044002532959
    10. '=

' → logprob: -13.85044002532959

Token 78: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.011050296947360039
    2. '[{' → logprob: -4.511050224304199
    3. ' {' → logprob: -14.0110502243042
    4. '({' → logprob: -15.0110502243042
    5. '{i' → logprob: -15.3860502243042
    6. '[' → logprob: -15.3860502243042
    7. '{{' → logprob: -15.5110502243042
    8. '{id' → logprob: -15.7610502243042
    9. '{k' → logprob: -16.136051177978516
    10. ' [{' → logprob: -16.386051177978516

Token 79: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -3.128163257315464e-07
    2. ' str' → logprob: -15.25
    3. '(str' → logprob: -17.375
    4. '	str' → logprob: -20.25
    5. '   ' → logprob: -20.75
    6. '{' → logprob: -20.875
    7. 's' → logprob: -21.125
    8. '[str' → logprob: -21.375
    9. '
' → logprob: -21.875
    10. '```' → logprob: -22.0

Token 80: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.0126840758603066e-05
    2. '(' → logprob: -10.125040054321289
    3. ' (' → logprob: -17.50004005432129
    4. '<|end|>' → logprob: -17.62504005432129
    5. '(D' → logprob: -18.25004005432129
    6. 'd' → logprob: -19.50004005432129
    7. ' ' → logprob: -19.62504005432129
    8. '((' → logprob: -19.75004005432129
    9. '```' → logprob: -20.00004005432129
    10. '   ' → logprob: -20.37504005432129

Token 81: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002218891866505146
    2. ':' → logprob: -6.252218723297119
    3. ')' → logprob: -8.502219200134277
    4. 'd' → logprob: -10.627219200134277
    5. '}:' → logprob: -11.252219200134277
    6. ')d' → logprob: -11.377219200134277
    7. '```' → logprob: -11.377219200134277
    8. '>:' → logprob: -12.127219200134277
    9. '   ' → logprob: -12.502219200134277
    10. '':' → logprob: -12.877219200134277

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -19.750009536743164
    4. '{' → logprob: -19.812509536743164
    5. '  ' → logprob: -20.000009536743164
    6. ')' → logprob: -20.125009536743164
    7. '   ' → logprob: -20.250009536743164
    8. '1' → logprob: -20.562509536743164
    9. 'for' → logprob: -20.875009536743164
    10. ''' → logprob: -20.875009536743164

Token 83: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759472250938416
    2. 'for' → logprob: -0.8259472250938416
    3. ' ' → logprob: -12.325946807861328
    4. '	for' → logprob: -13.325946807861328
    5. '   ' → logprob: -14.575946807861328
    6. '```' → logprob: -14.825946807861328
    7. '    ' → logprob: -15.450946807861328
    8. '{' → logprob: -15.575946807861328
    9. '<|end|>' → logprob: -16.075946807861328
    10. '}' → logprob: -16.075946807861328

Token 84: ' d' (ID: 272)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.18051083385944366
    2. 'range' → logprob: -2.4305107593536377
    3. ' __' → logprob: -3.3055107593536377
    4. ' d' → logprob: -3.8055107593536377
    5. '__' → logprob: -4.180510997772217
    6. 'd' → logprob: -6.180510997772217
    7. ' ' → logprob: -7.555510997772217
    8. '(range' → logprob: -8.555510520935059
    9. ' in' → logprob: -9.555510520935059
    10. '_range' → logprob: -11.055510520935059

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14521227777004242
    2. 'in' → logprob: -2.020212173461914
    3. 'n' → logprob: -6.270212173461914
    4. 'range' → logprob: -8.270212173461914
    5. ' ' → logprob: -8.520212173461914
    6. '_' → logprob: -9.645212173461914
    7. ' range' → logprob: -10.520212173461914
    8. '<|end|>' → logprob: -10.645212173461914
    9. 'i' → logprob: -11.145212173461914
    10. ' i' → logprob: -11.395212173461914

Token 86: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4741487205028534
    2. 'range' → logprob: -0.9741487503051758
    3. '(range' → logprob: -9.599148750305176
    4. '(' → logprob: -13.099148750305176
    5. ' ' → logprob: -14.349148750305176
    6. '[' → logprob: -15.224148750305176
    7. '	range' → logprob: -15.349148750305176
    8. '   ' → logprob: -15.849148750305176
    9. '```' → logprob: -16.22414779663086
    10. '    ' → logprob: -16.22414779663086

Token 87: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. ' (' → logprob: -13.500001907348633
    3. '((' → logprob: -15.000001907348633
    4. '(
' → logprob: -16.625001907348633
    5. '9' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.875001907348633
    7. ' ' → logprob: -19.125001907348633
    8. '{' → logprob: -19.875001907348633
    9. '```' → logprob: -19.875001907348633
    10. '(i' → logprob: -20.125001907348633

Token 88: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.029255233705043793
    2. '9' → logprob: -3.7792551517486572
    3. '1' → logprob: -5.404255390167236
    4. '(' → logprob: -6.654255390167236
    5. ' ' → logprob: -8.779254913330078
    6. '0' → logprob: -11.529254913330078
    7. '
' → logprob: -11.591754913330078
    8. '   ' → logprob: -12.154254913330078
    9. '((' → logprob: -12.591754913330078
    10. '(
' → logprob: -12.716754913330078

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023321842309087515
    2. '(' → logprob: -9.12523365020752
    3. '9' → logprob: -9.75023365020752
    4. ' ,' → logprob: -9.87523365020752
    5. '1' → logprob: -11.62523365020752
    6. '```' → logprob: -13.37523365020752
    7. ',(' → logprob: -14.00023365020752
    8. '0' → logprob: -14.12523365020752
    9. ',
' → logprob: -14.25023365020752
    10. ' ' → logprob: -14.75023365020752

Token 90: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001634835614822805
    2. '9' → logprob: -6.50163459777832
    3. ' ' → logprob: -9.87663459777832
    4. '0' → logprob: -10.00163459777832
    5. '1' → logprob: -10.75163459777832
    6. ')' → logprob: -11.62663459777832
    7. '```' → logprob: -13.00163459777832
    8. '   ' → logprob: -14.56413459777832
    9. '(' → logprob: -14.81413459777832
    10. '3' → logprob: -15.12663459777832

Token 91: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.02169088087975979
    2. ')]' → logprob: -4.521690845489502
    3. '}]' → logprob: -4.771690845489502
    4. '}' → logprob: -6.521690845489502
    5. ']}' → logprob: -8.14669132232666
    6. '})' → logprob: -8.27169132232666
    7. ')' → logprob: -9.39669132232666
    8. ']' → logprob: -11.77169132232666
    9. ' }]' → logprob: -13.14669132232666
    10. '}}' → logprob: -13.27169132232666

Token 92: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030993212014436722
    2. 'for' → logprob: -3.5309932231903076
    3. ']' → logprob: -7.1559929847717285
    4. ')' → logprob: -8.280993461608887
    5. ' ' → logprob: -9.030993461608887
    6. '	for' → logprob: -10.655993461608887
    7. ' ]' → logprob: -10.780993461608887
    8. '   ' → logprob: -11.155993461608887
    9. '}' → logprob: -11.155993461608887
    10. '    ' → logprob: -11.780993461608887

Token 93: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6429715156555176
    2. '(' → logprob: -1.5179715156555176
    3. 'range' → logprob: -1.5179715156555176
    4. ' (' → logprob: -3.6429715156555176
    5. '(range' → logprob: -4.642971515655518
    6. ' ' → logprob: -9.51797103881836
    7. '9' → logprob: -9.76797103881836
    8. '_' → logprob: -12.01797103881836
    9. ' ' → logprob: -12.14297103881836
    10. '_range' → logprob: -12.14297103881836

Token 94: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3158038258552551
    2. ' (' → logprob: -1.3158037662506104
    3. ' in' → logprob: -6.0658040046691895
    4. ' range' → logprob: -8.690803527832031
    5. 'range' → logprob: -10.690803527832031
    6. '(range' → logprob: -11.065803527832031
    7. 'in' → logprob: -12.190803527832031
    8. ' ' → logprob: -13.065803527832031
    9. '9' → logprob: -13.440803527832031
    10. ' for' → logprob: -14.690803527832031

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31334415078163147
    2. 'range' → logprob: -1.313344120979309
    3. '(range' → logprob: -9.68834400177002
    4. '(' → logprob: -10.81334400177002
    5. '	range' → logprob: -16.188344955444336
    6. '9' → logprob: -16.563344955444336
    7. ' (' → logprob: -17.688344955444336
    8. ' xrange' → logprob: -18.188344955444336
    9. ' ' → logprob: -18.688344955444336
    10. '.range' → logprob: -18.688344955444336

Token 96: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.580929347255733e-05
    2. ' (' → logprob: -11.125016212463379
    3. 'range' → logprob: -15.125016212463379
    4. '(
' → logprob: -15.500016212463379
    5. '(range' → logprob: -15.625016212463379
    6. '9' → logprob: -15.625016212463379
    7. ' range' → logprob: -17.375015258789062
    8. ' ' → logprob: -17.875015258789062
    9. '   ' → logprob: -19.250015258789062
    10. '```' → logprob: -19.625015258789062

Token 97: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.750436007976532e-05
    2. '(' → logprob: -10.50003719329834
    3. '3' → logprob: -12.25003719329834
    4. ' ' → logprob: -12.50003719329834
    5. ')' → logprob: -14.50003719329834
    6. '```' → logprob: -15.00003719329834
    7. ')]' → logprob: -16.000038146972656
    8. '   ' → logprob: -16.000038146972656
    9. ']' → logprob: -16.562538146972656
    10. '])' → logprob: -17.125038146972656

Token 98: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06275124847888947
    2. ')]' → logprob: -2.812751293182373
    3. ')' → logprob: -7.312751293182373
    4. ' ]' → logprob: -9.312750816345215
    5. '])' → logprob: -11.937750816345215
    6. ']
' → logprob: -12.062750816345215
    7. '   ' → logprob: -12.187750816345215
    8. '}]' → logprob: -12.687750816345215
    9. '`]' → logprob: -12.812750816345215
    10. '}' → logprob: -13.812750816345215

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9121838212013245
    2. '
' → logprob: -1.0371837615966797
    3. '    
' → logprob: -2.6621837615966797
    4. ' ' → logprob: -3.0371837615966797
    5. ' 
' → logprob: -3.5371837615966797
    6. '  
' → logprob: -3.6621837615966797
    7. '   
' → logprob: -4.28718376159668
    8. '\' → logprob: -4.66218376159668
    9. '\n' → logprob: -4.66218376159668
    10. 'for' → logprob: -4.78718376159668

Token 100: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7233325839042664
    2. '   ' → logprob: -1.7233326435089111
    3. ' 
' → logprob: -1.7233326435089111
    4. ' ' → logprob: -3.223332643508911
    5. '    
' → logprob: -3.598332643508911
    6. ' for' → logprob: -3.723332643508911
    7. 'for' → logprob: -3.848332643508911
    8. 'valid' → logprob: -4.723332405090332
    9. '\n' → logprob: -5.098332405090332
    10. 'n' → logprob: -5.098332405090332

Token 101: ' Count' (ID: 6789)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0203806161880493
    2. 'for' → logprob: -1.1453806161880493
    3. ' ' → logprob: -1.2703806161880493
    4. '   ' → logprob: -3.8953804969787598
    5. 'i' → logprob: -4.89538049697876
    6. ' valid' → logprob: -5.64538049697876
    7. 'valid' → logprob: -6.52038049697876
    8. '    ' → logprob: -6.77038049697876
    9. ' i' → logprob: -6.89538049697876
    10. '  ' → logprob: -7.14538049697876

Token 102: ' occurrences' (ID: 108073)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7181363701820374
    2. '   ' → logprob: -1.4681363105773926
    3. '    ' → logprob: -1.5931363105773926
    4. 'for' → logprob: -4.093136310577393
    5. '_' → logprob: -4.343136310577393
    6. '  ' → logprob: -4.343136310577393
    7. '<|end|>' → logprob: -4.343136310577393
    8. ' for' → logprob: -5.093136310577393
    9. '(' → logprob: -5.593136310577393
    10. 's' → logprob: -6.093136310577393

Token 103: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4519152641296387
    2. '<|end|>' → logprob: -1.7019152641296387
    3. '   ' → logprob: -1.8269152641296387
    4. ' for' → logprob: -1.9519152641296387
    5. '
' → logprob: -2.2019152641296387
    6. 'for' → logprob: -2.7019152641296387
    7. '\' → logprob: -3.9519152641296387
    8. ' 
' → logprob: -4.201915264129639
    9. '\n' → logprob: -4.701915264129639
    10. '    ' → logprob: -4.951915264129639

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0300962924957275
    2. ' ' → logprob: -1.4050962924957275
    3. '<|end|>' → logprob: -2.2800962924957275
    4. ' for' → logprob: -2.5300962924957275
    5. '
' → logprob: -2.6550962924957275
    6. 'for' → logprob: -2.9050962924957275
    7. ' 
' → logprob: -3.6550962924957275
    8. '\' → logprob: -4.405096054077148
    9. '    
' → logprob: -4.530096054077148
    10. '  
' → logprob: -4.905096054077148

Token 105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6344161629676819
    2. '   ' → logprob: -1.509416103363037
    3. ' ' → logprob: -2.134416103363037
    4. ' for' → logprob: -2.759416103363037
    5. ' 
' → logprob: -3.509416103363037
    6. '
' → logprob: -4.134416103363037
    7. '    
' → logprob: -4.884416103363037
    8. '    ' → logprob: -5.134416103363037
    9. 'i' → logprob: -5.634416103363037
    10. '  ' → logprob: -7.134416103363037

Token 106: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007708839140832424
    2. ' r' → logprob: -5.00770902633667
    3. ' ' → logprob: -7.13270902633667
    4. 'i' → logprob: -8.882708549499512
    5. ' _' → logprob: -10.382708549499512
    6. ' ' → logprob: -11.632708549499512
    7. ' row' → logprob: -12.007708549499512
    8. 'r' → logprob: -12.382708549499512
    9. '  ' → logprob: -13.257708549499512
    10. ' ‌' → logprob: -14.007708549499512

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.040657129138708115
    2. ' ' → logprob: -3.5406570434570312
    3. 'in' → logprob: -4.540657043457031
    4. '<|end|>' → logprob: -8.790657043457031
    5. ' i' → logprob: -11.540657043457031
    6. '	in' → logprob: -11.790657043457031
    7. '  ' → logprob: -13.040657043457031
    8. 's' → logprob: -14.290657043457031
    9. 'n' → logprob: -14.290657043457031
    10. ' ' → logprob: -14.415657043457031

Token 108: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06196846812963486
    2. 'range' → logprob: -2.8119685649871826
    3. ' ' → logprob: -14.936968803405762
    4. '	range' → logprob: -15.561968803405762
    5. '```' → logprob: -16.561967849731445
    6. '(range' → logprob: -16.686967849731445
    7. ' r' → logprob: -17.436967849731445
    8. '   ' → logprob: -17.686967849731445
    9. ' ran' → logprob: -18.061967849731445
    10. ' xrange' → logprob: -18.186967849731445

Token 109: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020091790065634996
    2. ' (' → logprob: -8.875201225280762
    3. '9' → logprob: -10.375201225280762
    4. ' ' → logprob: -11.125201225280762
    5. '(
' → logprob: -11.125201225280762
    6. ')' → logprob: -16.375200271606445
    7. '	' → logprob: -16.750200271606445
    8. ' (
' → logprob: -16.750200271606445
    9. '(n' → logprob: -16.750200271606445
    10. '<|end|>' → logprob: -16.875200271606445

Token 110: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -15.500006675720215
    4. '   ' → logprob: -16.37500762939453
    5. '(' → logprob: -16.87500762939453
    6. '0' → logprob: -17.87500762939453
    7. '```' → logprob: -18.25000762939453
    8. '  ' → logprob: -19.93750762939453
    9. '1' → logprob: -20.06250762939453
    10. '۹' → logprob: -20.18750762939453

Token 111: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47478973865509033
    2. '):' → logprob: -0.9747897386550903
    3. ' )' → logprob: -8.3497896194458
    4. '):
' → logprob: -8.4747896194458
    5. ' ):' → logprob: -8.9747896194458
    6. ':' → logprob: -9.0997896194458
    7. '   ' → logprob: -11.3497896194458
    8. ' ' → logprob: -11.4747896194458
    9. ',' → logprob: -13.0997896194458
    10. '):

' → logprob: -13.5997896194458

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.463697224855423
    2. '<|end|>' → logprob: -1.4636971950531006
    3. '   ' → logprob: -2.3386971950531006
    4. ':' → logprob: -4.08869743347168
    5. ' ' → logprob: -4.46369743347168
    6. '    ' → logprob: -4.46369743347168
    7. '<|end|>' → logprob: -7.21369743347168
    8. ':
' → logprob: -7.71369743347168
    9. '    
' → logprob: -7.83869743347168
    10. '
' → logprob: -8.46369743347168

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.027772489935159683
    2. 'for' (adapté à ' for') → logprob: -3.6527724266052246
    3. '   ' → logprob: -7.027772426605225
    4. ' ' → logprob: -7.902772426605225
    5. '	for' → logprob: -8.902772903442383
    6. '<|end|>' → logprob: -10.277772903442383
    7. '    ' → logprob: -10.777772903442383
    8. ' 
' → logprob: -11.777772903442383
    9. '       ' → logprob: -12.027772903442383
    10. '    
' → logprob: -12.402772903442383

Token 114: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.026314347982406616
    2. 'j' → logprob: -3.6513142585754395
    3. ' range' → logprob: -11.901314735412598
    4. ' ' → logprob: -13.151314735412598
    5. 'range' → logprob: -13.151314735412598
    6. '    ' → logprob: -13.776314735412598
    7. '   ' → logprob: -14.026314735412598
    8. '	j' → logprob: -14.276314735412598
    9. ' ' → logprob: -15.651314735412598
    10. '```' → logprob: -16.52631378173828

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04636935144662857
    2. 'in' → logprob: -3.1713693141937256
    3. ' ' → logprob: -5.796369552612305
    4. '<|end|>' → logprob: -8.171369552612305
    5. ')' → logprob: -10.921369552612305
    6. '    ' → logprob: -12.421369552612305
    7. '  ' → logprob: -12.421369552612305
    8. '   ' → logprob: -13.046369552612305
    9. '0' → logprob: -13.171369552612305
    10. '	in' → logprob: -13.296369552612305

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04891344532370567
    2. ' range' → logprob: -3.0489134788513184
    3. '9' → logprob: -8.42391300201416
    4. ' ' → logprob: -9.79891300201416
    5. '(range' → logprob: -9.92391300201416
    6. '(' → logprob: -13.54891300201416
    7. 'space' → logprob: -15.54891300201416
    8. '0' → logprob: -16.048913955688477
    9. '	range' → logprob: -16.048913955688477
    10. ')' → logprob: -17.173913955688477

Token 117: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.919942486798391e-05
    2. ' (' → logprob: -9.750059127807617
    3. '(
' → logprob: -14.625059127807617
    4. '9' → logprob: -15.125059127807617
    5. ')' → logprob: -16.625059127807617
    6. ' ' → logprob: -18.500059127807617
    7. '(

' → logprob: -19.125059127807617
    8. '<|end|>' → logprob: -19.250059127807617
    9. '   ' → logprob: -19.875059127807617
    10. ')(' → logprob: -20.250059127807617

Token 118: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.000008583068848
    4. ')' → logprob: -15.875008583068848
    5. '
' → logprob: -16.87500762939453
    6. '```' → logprob: -18.00000762939453
    7. '  ' → logprob: -18.12500762939453
    8. '0' → logprob: -18.12500762939453
    9. '(' → logprob: -18.25000762939453
    10. '    ' → logprob: -19.56250762939453

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3138428032398224
    2. ')' → logprob: -1.3138427734375
    3. '):
' → logprob: -7.6888427734375
    4. ':' → logprob: -9.4388427734375
    5. ' ):' → logprob: -11.1888427734375
    6. ' )' → logprob: -11.9388427734375
    7. '9' → logprob: -12.3138427734375
    8. '   ' → logprob: -12.3138427734375
    9. '):

' → logprob: -12.8138427734375
    10. '1' → logprob: -12.8138427734375

Token 120: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7376961708068848
    2. ' ' → logprob: -0.9876961708068848
    3. '        ' → logprob: -2.6126961708068848
    4. '           ' → logprob: -2.9876961708068848
    5. '    ' → logprob: -4.737696170806885
    6. '<|end|>' → logprob: -5.362696170806885
    7. '   ' → logprob: -5.862696170806885
    8. ':' → logprob: -6.237696170806885
    9. '            ' → logprob: -6.862696170806885
    10. '        
' → logprob: -7.362696170806885

Token 121: ' num' (ID: 2269)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.25757896900177
    2. 'v' → logprob: -1.50757896900177
    3. ' v' → logprob: -1.50757896900177
    4. ' c' → logprob: -2.0075788497924805
    5. 'c' → logprob: -3.0075788497924805
    6. 'val' → logprob: -4.0075788497924805
    7. 'x' → logprob: -4.5075788497924805
    8. ' x' → logprob: -4.7575788497924805
    9. ' value' → logprob: -5.0075788497924805
    10. 'num' (adapté à ' num') → logprob: -5.2575788497924805

Token 122: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742012917995453
    2. '=' → logprob: -0.9742013216018677
    3. ' ' → logprob: -9.099201202392578
    4. ']' → logprob: -12.224201202392578
    5. ')' → logprob: -13.099201202392578
    6. '=int' → logprob: -14.099201202392578
    7. 's' → logprob: -14.224201202392578
    8. '=input' → logprob: -14.724201202392578
    9. ' =
' → logprob: -14.849201202392578
    10. ']=' → logprob: -14.974201202392578

Token 123: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.006719282828271389
    2. ' grid' → logprob: -5.00671911239624
    3. '(grid' → logprob: -13.381719589233398
    4. '	grid' → logprob: -13.881719589233398
    5. '`' → logprob: -15.381719589233398
    6. '.grid' → logprob: -15.506719589233398
    7. 'int' → logprob: -15.631719589233398
    8. ':grid' → logprob: -15.756719589233398
    9. '   ' → logprob: -15.881719589233398
    10. ' ' → logprob: -16.1317195892334

Token 124: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017798993503674865
    2. '[' → logprob: -6.376780033111572
    3. '[j' → logprob: -9.751779556274414
    4. ' [' → logprob: -11.126779556274414
    5. '[I' → logprob: -13.001779556274414
    6. '[
' → logprob: -14.126779556274414
    7. '```' → logprob: -14.751779556274414
    8. '\[' → logprob: -15.001779556274414
    9. '[int' → logprob: -15.501779556274414
    10. ' ' → logprob: -15.626779556274414

Token 125: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4071109890937805
    2. '[j' → logprob: -1.1571109294891357
    3. '[i' → logprob: -4.282111167907715
    4. '[' → logprob: -5.657111167907715
    5. ']' → logprob: -6.032111167907715
    6. ' ][' → logprob: -8.907111167907715
    7. ' [' → logprob: -9.782111167907715
    8. ')[' → logprob: -10.782111167907715
    9. '[
' → logprob: -10.782111167907715
    10. '```' → logprob: -11.032111167907715

Token 126: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.584861744660884e-05
    2. ' j' → logprob: -10.000045776367188
    3. '	j' → logprob: -16.250045776367188
    4. ' ' → logprob: -16.625045776367188
    5. ']' → logprob: -17.000045776367188
    6. '   ' → logprob: -17.125045776367188
    7. ':j' → logprob: -17.125045776367188
    8. ')' → logprob: -18.000045776367188
    9. '[j' → logprob: -18.000045776367188
    10. '    ' → logprob: -18.125045776367188

Token 127: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029106343165040016
    2. ')' → logprob: -4.154106140136719
    3. ' ]' → logprob: -4.904106140136719
    4. ')]' → logprob: -5.279106140136719
    5. ']
' → logprob: -8.404106140136719
    6. '])' → logprob: -9.029106140136719
    7. ' )' → logprob: -9.904106140136719
    8. '           ' → logprob: -10.279106140136719
    9. ')
' → logprob: -11.779106140136719
    10. '               ' → logprob: -12.154106140136719

Token 128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18728019297122955
    2. ' ' → logprob: -2.0622801780700684
    3. '            
' → logprob: -4.437280178070068
    4. '<|end|>' → logprob: -4.812280178070068
    5. ' 
' → logprob: -5.062280178070068
    6. '            ' → logprob: -5.312280178070068
    7. '   ' → logprob: -5.562280178070068
    8. '    
' → logprob: -6.437280178070068
    9. ')' → logprob: -6.562280178070068
    10. '    ' → logprob: -6.812280178070068

Token 129: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.1721726655960083
    2. 'row' (adapté à ' row') → logprob: -1.2971726655960083
    3. ' ' → logprob: -1.4221726655960083
    4. ' if' → logprob: -2.0471725463867188
    5. 'if' → logprob: -3.1721725463867188
    6. ' 
' → logprob: -6.297172546386719
    7. 'r' → logprob: -6.547172546386719
    8. ')' → logprob: -8.172172546386719
    9. ' )' → logprob: -8.172172546386719
    10. ' r' → logprob: -9.422172546386719

Token 130: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.00013929695705883205
    2. ']_' → logprob: -10.000139236450195
    3. '_' → logprob: -10.375139236450195
    4. ')_' → logprob: -10.750139236450195
    5. 's' → logprob: -11.250139236450195
    6. '_s' → logprob: -12.375139236450195
    7. '[_' → logprob: -12.375139236450195
    8. '[' → logprob: -12.500139236450195
    9. '_scores' → logprob: -13.375139236450195
    10. ']' → logprob: -13.500139236450195

Token 131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0342603363096714
    2. '[' → logprob: -3.5342602729797363
    3. '[num' → logprob: -5.659260272979736
    4. '[j' → logprob: -7.409260272979736
    5. '][' → logprob: -9.159260749816895
    6. '[I' → logprob: -9.159260749816895
    7. '[row' → logprob: -9.659260749816895
    8. ' [' → logprob: -10.409260749816895
    9. '[int' → logprob: -11.034260749816895
    10. '[col' → logprob: -11.159260749816895

Token 132: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11805646866559982
    2. '[num' → logprob: -2.493056535720825
    3. ']' → logprob: -3.993056535720825
    4. '[' → logprob: -4.618056297302246
    5. ' ][' → logprob: -8.618056297302246
    6. ',num' → logprob: -10.618056297302246
    7. ' [' → logprob: -10.868056297302246
    8. '"][' → logprob: -10.993056297302246
    9. 'num' → logprob: -11.118056297302246
    10. ''][' → logprob: -11.493056297302246

Token 133: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00012356207298580557
    2. ' num' → logprob: -9.000123977661133
    3. ']' → logprob: -17.000123977661133
    4. '(num' → logprob: -17.250123977661133
    5. '[num' → logprob: -18.000123977661133
    6. 'nu' → logprob: -18.750123977661133
    7. '
' → logprob: -18.750123977661133
    8. 'nums' → logprob: -19.500123977661133
    9. '	num' → logprob: -19.500123977661133
    10. '```' → logprob: -19.625123977661133

Token 134: ']+=' (ID: 123635)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3136415183544159
    2. ']+=' → logprob: -1.3136415481567383
    3. ']+' → logprob: -7.938641548156738
    4. ' ]' → logprob: -11.438641548156738
    5. '+]' → logprob: -12.313641548156738
    6. '+=' → logprob: -12.438641548156738
    7. '+' → logprob: -13.313641548156738
    8. '']' → logprob: -14.313641548156738
    9. '"]' → logprob: -14.813641548156738
    10. ']=' → logprob: -14.938641548156738

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -20.625003814697266
    4. '   ' → logprob: -21.250003814697266
    5. '
' → logprob: -21.875003814697266
    6. ' ' → logprob: -22.125003814697266
    7. '１' → logprob: -22.250003814697266
    8. '۱' → logprob: -22.750003814697266
    9. '`' → logprob: -23.125003814697266
    10. '0' → logprob: -23.750003814697266

Token 136: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20757921040058136
    2. '
' → logprob: -1.957579255104065
    3. ' 
' → logprob: -3.8325791358947754
    4. '<|end|>' → logprob: -4.832579135894775
    5. ' ' → logprob: -5.082579135894775
    6. '            
' → logprob: -5.332579135894775
    7. '            ' → logprob: -6.457579135894775
    8. '  
' → logprob: -6.832579135894775
    9. '       ' → logprob: -7.707579135894775
    10. '               ' → logprob: -7.832579135894775

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18941505253314972
    2. ' 
' → logprob: -2.1894149780273438
    3. ' col' → logprob: -3.6894149780273438
    4. ' ' → logprob: -4.189414978027344
    5. '            
' → logprob: -4.689414978027344
    6. '
' → logprob: -5.564414978027344
    7. '            ' → logprob: -6.564414978027344
    8. '  
' → logprob: -6.814414978027344
    9. '    
' → logprob: -7.689414978027344
    10. '       ' → logprob: -7.814414978027344

Token 138: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.12693451344966888
    2. 'col' (adapté à ' col') → logprob: -2.12693452835083
    3. '	col' → logprob: -12.251934051513672
    4. '[col' → logprob: -14.376934051513672
    5. '_col' → logprob: -15.376934051513672
    6. ' ' → logprob: -15.501934051513672
    7. ',col' → logprob: -15.626934051513672
    8. ' ' → logprob: -16.126934051513672
    9. 'coln' → logprob: -16.251934051513672
    10. ' 
' → logprob: -16.876934051513672

Token 139: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -8.180258191714529e-06
    2. '_' → logprob: -12.750008583068848
    3. '_c' → logprob: -13.875008583068848
    4. ' _' → logprob: -14.125008583068848
    5. '```' → logprob: -14.500008583068848
    6. '[_' → logprob: -15.000008583068848
    7. '
' → logprob: -15.125008583068848
    8. ')_' → logprob: -15.250008583068848
    9. '[' → logprob: -15.375008583068848
    10. '_codes' → logprob: -15.500008583068848

Token 140: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.21052134037017822
    2. '[' → logprob: -1.7105213403701782
    3. '[i' → logprob: -4.710521221160889
    4. ' [' → logprob: -10.960521697998047
    5. '[col' → logprob: -11.210521697998047
    6. '[
' → logprob: -11.585521697998047
    7. '[js' → logprob: -11.960521697998047
    8. '[s' → logprob: -12.835521697998047
    9. '```' → logprob: -13.210521697998047
    10. '[int' → logprob: -13.710521697998047

Token 141: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006409820169210434
    2. '[' → logprob: -5.881409645080566
    3. '[num' → logprob: -6.131409645080566
    4. ']' → logprob: -6.756409645080566
    5. ' ][' → logprob: -8.506409645080566
    6. ')[' → logprob: -10.756409645080566
    7. ']][' → logprob: -12.006409645080566
    8. '   ' → logprob: -12.506409645080566
    9. '[n' → logprob: -12.631409645080566
    10. '}[' → logprob: -12.881409645080566

Token 142: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -8.637786231702194e-05
    2. ' num' → logprob: -9.375086784362793
    3. '[num' → logprob: -13.625086784362793
    4. ' ' → logprob: -16.375085830688477
    5. '
' → logprob: -16.500085830688477
    6. '1' → logprob: -16.500085830688477
    7. '(num' → logprob: -17.125085830688477
    8. '	num' → logprob: -17.125085830688477
    9. 'col' → logprob: -18.250085830688477
    10. '$num' → logprob: -18.500085830688477

Token 143: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.0029155495576560497
    2. ']' → logprob: -6.127915382385254
    3. '+=' → logprob: -7.252915382385254
    4. ' ]' → logprob: -11.377915382385254
    5. ']+' → logprob: -11.877915382385254
    6. ' +=' → logprob: -13.752915382385254
    7. '```' → logprob: -14.002915382385254
    8. '+' → logprob: -14.127915382385254
    9. '   ' → logprob: -15.377915382385254
    10. '[' → logprob: -15.752915382385254

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.875001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '+' → logprob: -20.000001907348633
    6. '>' → logprob: -20.375001907348633
    7. '  ' → logprob: -21.000001907348633
    8. '１' → logprob: -21.250001907348633
    9. '۱' → logprob: -21.375001907348633
    10. '<|end|>' → logprob: -21.875001907348633

Token 145: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036883339285850525
    2. 'box' → logprob: -4.161883354187012
    3. ' box' → logprob: -5.161883354187012
    4. ' 
' → logprob: -5.286883354187012
    5. '
' → logprob: -5.411883354187012
    6. ' ' → logprob: -6.661883354187012
    7. '            ' → logprob: -6.786883354187012
    8. '       ' → logprob: -7.286883354187012
    9. '   ' → logprob: -7.786883354187012
    10. '            
' → logprob: -7.786883354187012

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018897335976362228
    2. ' box' → logprob: -7.001889705657959
    3. 'box' → logprob: -7.376889705657959
    4. '
' → logprob: -8.751890182495117
    5. '       ' → logprob: -9.876890182495117
    6. '   ' → logprob: -10.001890182495117
    7. '            
' → logprob: -11.251890182495117
    8. ' ' → logprob: -11.501890182495117
    9. ' 
' → logprob: -11.751890182495117
    10. '          ' → logprob: -11.751890182495117

Token 147: ' box' (ID: 5506)
  Prédit: 'box'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'box' (adapté à ' box') → logprob: -0.16027580201625824
    2. ' box' → logprob: -1.9102758169174194
    3. 'b' → logprob: -10.66027545928955
    4. '
' → logprob: -11.91027545928955
    5. '           ' → logprob: -12.16027545928955
    6. 'idx' → logprob: -12.91027545928955
    7. '```' → logprob: -12.91027545928955
    8. '	box' → logprob: -13.03527545928955
    9. ' ' → logprob: -13.16027545928955
    10. '   ' → logprob: -13.91027545928955

Token 148: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.1419098824262619
    2. '_idx' → logprob: -2.2669098377227783
    3. '_index' → logprob: -3.6419098377227783
    4. '_' → logprob: -6.391910076141357
    5. '[_' → logprob: -8.5169095993042
    6. '_indices' → logprob: -8.8919095993042
    7. '_box' → logprob: -9.1419095993042
    8. 's' → logprob: -10.1419095993042
    9. '_id' → logprob: -10.1419095993042
    10. '[' → logprob: -10.1419095993042

Token 149: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.09100328385829926
    2. '[' → logprob: -2.466003179550171
    3. '[((' → logprob: -6.21600341796875
    4. '[i' → logprob: -10.59100341796875
    5. '[
' → logprob: -11.34100341796875
    6. ' [(' → logprob: -12.21600341796875
    7. ' ' → logprob: -12.71600341796875
    8. ' [' → logprob: -12.71600341796875
    9. '[f' → logprob: -12.71600341796875
    10. '[j' → logprob: -13.21600341796875

Token 150: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.327856630785391e-05
    2. '(i' → logprob: -10.000082969665527
    3. ' i' → logprob: -11.000082969665527
    4. '3' → logprob: -11.000082969665527
    5. ')i' → logprob: -13.125082969665527
    6. ')' → logprob: -14.125082969665527
    7. '
' → logprob: -14.875082969665527
    8. '```' → logprob: -15.000082969665527
    9. '(' → logprob: -15.125082969665527
    10. '	i' → logprob: -15.250082969665527

Token 151: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.003635945962741971
    2. ' //' → logprob: -5.628635883331299
    3. ' ' → logprob: -11.128636360168457
    4. ')//' → logprob: -11.378636360168457
    5. ')' → logprob: -12.503636360168457
    6. '3' → logprob: -13.003636360168457
    7. '```' → logprob: -14.003636360168457
    8. 'div' → logprob: -14.253636360168457
    9. '
' → logprob: -14.253636360168457
    10. 'i' → logprob: -15.378636360168457

Token 152: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.553032628493384e-05
    2. ' ' → logprob: -9.500075340270996
    3. ')' → logprob: -14.625075340270996
    4. '```' → logprob: -17.125076293945312
    5. '   ' → logprob: -17.312576293945312
    6. '
' → logprob: -17.562576293945312
    7. '  ' → logprob: -17.625076293945312
    8. '۳' → logprob: -18.187576293945312
    9. ' ' → logprob: -18.187576293945312
    10. '﻿' → logprob: -19.375076293945312

Token 153: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.10177677869796753
    2. '*' → logprob: -2.7267768383026123
    3. ')' → logprob: -3.4767768383026123
    4. ')*(' → logprob: -8.851777076721191
    5. ' *' → logprob: -9.101777076721191
    6. ' )' → logprob: -9.351777076721191
    7. '*j' → logprob: -10.476777076721191
    8. ' ' → logprob: -10.601777076721191
    9. ']*' → logprob: -11.476777076721191
    10. ')][' → logprob: -11.601777076721191

Token 154: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '
' → logprob: -17.625015258789062
    4. '```' → logprob: -17.625015258789062
    5. '   ' → logprob: -18.000015258789062
    6. '(' → logprob: -18.750015258789062
    7. '۳' → logprob: -19.062515258789062
    8. ' ' → logprob: -19.125015258789062
    9. '  ' → logprob: -19.312515258789062
    10. ')' → logprob: -19.750015258789062

Token 155: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16416805982589722
    2. '+j' → logprob: -1.914168119430542
    3. ' +' → logprob: -5.539167881011963
    4. '+
' → logprob: -12.914168357849121
    5. '+k' → logprob: -14.289168357849121
    6. '+b' → logprob: -14.289168357849121
    7. '+

' → logprob: -14.289168357849121
    8. '+(' → logprob: -14.414168357849121
    9. '＋' → logprob: -15.539168357849121
    10. '+y' → logprob: -15.789168357849121

Token 156: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2664456789934775e-06
    2. ' j' → logprob: -13.625000953674316
    3. '	j' → logprob: -17.375001907348633
    4. '```' → logprob: -18.750001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '_j' → logprob: -19.375001907348633
    7. ')' → logprob: -19.500001907348633
    8. '<|end|>' → logprob: -20.125001907348633
    9. '$j' → logprob: -20.625001907348633
    10. '
' → logprob: -21.000001907348633

Token 157: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00010473522706888616
    2. ')//' → logprob: -9.375104904174805
    3. ' //' → logprob: -11.625104904174805
    4. '3' → logprob: -12.500104904174805
    5. ')' → logprob: -12.875104904174805
    6. '}//' → logprob: -13.250104904174805
    7. '```' → logprob: -14.125104904174805
    8. ']' → logprob: -14.750104904174805
    9. '']//' → logprob: -15.000104904174805
    10. '#' → logprob: -15.000104904174805

Token 158: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00010580805974313989
    2. ' ' → logprob: -9.250105857849121
    3. '1' → logprob: -11.875105857849121
    4. ')' → logprob: -13.000105857849121
    5. '<|end|>' → logprob: -15.250105857849121
    6. '```' → logprob: -17.250104904174805
    7. ']' → logprob: -17.750104904174805
    8. '
' → logprob: -18.000104904174805
    9. '  ' → logprob: -18.125104904174805
    10. '   ' → logprob: -18.750104904174805

Token 159: ')][' (ID: 112886)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.034795843064785004
    2. ')][' → logprob: -4.034795761108398
    3. ')' → logprob: -4.534795761108398
    4. ']' → logprob: -5.659795761108398
    5. ')].' → logprob: -6.159795761108398
    6. ')])' → logprob: -9.159795761108398
    7. '][' → logprob: -10.409795761108398
    8. ' )' → logprob: -12.034795761108398
    9. ']+=' → logprob: -12.159795761108398
    10. '   ' → logprob: -12.534795761108398

Token 160: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.001171652227640152
    2. ' num' → logprob: -6.751171588897705
    3. ']' → logprob: -14.376172065734863
    4. 'j' → logprob: -14.751172065734863
    5. '
' → logprob: -16.251171112060547
    6. ' ' → logprob: -16.251171112060547
    7. '   ' → logprob: -16.376171112060547
    8. ')' → logprob: -16.876171112060547
    9. '	num' → logprob: -16.876171112060547
    10. '1' → logprob: -16.876171112060547

Token 161: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.026345698162913322
    2. ']' → logprob: -3.651345729827881
    3. ']+' → logprob: -10.526345252990723
    4. ' ]' → logprob: -11.401345252990723
    5. '+=' → logprob: -12.401345252990723
    6. '']' → logprob: -13.776345252990723
    7. '"]' → logprob: -14.026345252990723
    8. '```' → logprob: -14.276345252990723
    9. '+' → logprob: -16.02634620666504
    10. '+]' → logprob: -16.40134620666504

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -15.500005722045898
    4. '   ' → logprob: -17.3750057220459
    5. 'num' → logprob: -17.5000057220459
    6. '`' → logprob: -17.5000057220459
    7. '<|end|>' → logprob: -17.8750057220459
    8. '+' → logprob: -19.0625057220459
    9. '-' → logprob: -19.3125057220459
    10. '۱' → logprob: -19.5000057220459

Token 163: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39638885855674744
    2. '<|end|>' → logprob: -1.3963888883590698
    3. ' ' → logprob: -3.6463887691497803
    4. '\n' → logprob: -4.521389007568359
    5. '   ' → logprob: -4.896389007568359
    6. 'if' → logprob: -5.396389007568359
    7. ' 
' → logprob: -5.521389007568359
    8. '  
' → logprob: -5.646389007568359
    9. '           ' → logprob: -5.646389007568359
    10. '#' → logprob: -5.771389007568359

Token 164: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15371184051036835
    2. '<|end|>' → logprob: -3.0287117958068848
    3. '\n' → logprob: -4.028711795806885
    4. ' 
' → logprob: -4.153711795806885
    5. ' ' → logprob: -4.153711795806885
    6. 'if' → logprob: -4.653711795806885
    7. '    
' → logprob: -4.653711795806885
    8. '  
' → logprob: -4.903711795806885
    9. 'for' → logprob: -5.028711795806885
    10. '   ' → logprob: -5.528711795806885

Token 165: ' #' (ID: 1069)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.0451478585600853
    2. 'for' → logprob: -4.295147895812988
    3. ' valid' → logprob: -4.420147895812988
    4. '   ' → logprob: -4.670147895812988
    5. 'invalid' → logprob: -5.795147895812988
    6. '    
' → logprob: -6.295147895812988
    7. ' for' → logprob: -6.545147895812988
    8. '    ' → logprob: -7.795147895812988
    9. '
' → logprob: -7.795147895812988
    10. ' ' → logprob: -8.420147895812988

Token 166: ' Check' (ID: 6208)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.15199071168899536
    2. ' valid' → logprob: -2.4019906520843506
    3. 'for' → logprob: -4.27699089050293
    4. 'flag' → logprob: -5.02699089050293
    5. 'invalid' → logprob: -5.15199089050293
    6. 'def' → logprob: -5.15199089050293
    7. ' for' → logprob: -5.52699089050293
    8. 'result' → logprob: -5.90199089050293
    9. 'is' → logprob: -6.90199089050293
    10. ' conflict' → logprob: -7.02699089050293

Token 167: ' duplicates' (ID: 91135)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.310916543006897
    2. 'valid' → logprob: -1.685916543006897
    3. ' for' → logprob: -2.9359164237976074
    4. 'for' → logprob: -4.060916423797607
    5. '   ' → logprob: -4.685916423797607
    6. '    ' → logprob: -8.060916900634766
    7. ' ' → logprob: -8.435916900634766
    8. ' validity' → logprob: -8.435916900634766
    9. ' violation' → logprob: -8.560916900634766
    10. 'invalid' → logprob: -8.560916900634766

Token 168: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012862063013017178
    2. 'for' → logprob: -4.887862205505371
    3. ' for' → logprob: -6.012862205505371
    4. 'valid' → logprob: -6.512862205505371
    5. '    
' → logprob: -7.262862205505371
    6. '
' → logprob: -8.262862205505371
    7. ' valid' → logprob: -8.637862205505371
    8. '    ' → logprob: -9.762862205505371
    9. '           ' → logprob: -10.262862205505371
    10. '       ' → logprob: -11.387862205505371

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08134272694587708
    2. ' for' → logprob: -3.2063426971435547
    3. 'for' → logprob: -3.5813426971435547
    4. 'valid' → logprob: -5.206342697143555
    5. ' valid' → logprob: -6.331342697143555
    6. '
' → logprob: -6.831342697143555
    7. '    
' → logprob: -7.706342697143555
    8. 'result' → logprob: -7.831342697143555
    9. ' result' → logprob: -8.706342697143555
    10. '           ' → logprob: -9.581342697143555

Token 170: ' mark' (ID: 1983)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.028575079515576363
    2. 'for' → logprob: -4.7785749435424805
    3. '   ' → logprob: -5.0285749435424805
    4. ' valid' → logprob: -5.0285749435424805
    5. 'flag' → logprob: -6.2785749435424805
    6. 'result' → logprob: -6.2785749435424805
    7. 'invalid' → logprob: -7.2785749435424805
    8. 'is' → logprob: -7.4035749435424805
    9. 'found' → logprob: -7.5285749435424805
    10. 'res' → logprob: -8.27857494354248

Token 171: '=[[' (ID: 112637)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.39322376251220703
    2. 's' → logprob: -1.393223762512207
    3. '=' → logprob: -2.643223762512207
    4. ' =' → logprob: -6.518223762512207
    5. '=s' → logprob: -6.893223762512207
    6. 'ers' → logprob: -7.393223762512207
    7. '_' → logprob: -7.643223762512207
    8. '=False' → logprob: -7.893223762512207
    9. '=_' → logprob: -7.893223762512207
    10. '_=' → logprob: -7.893223762512207

Token 172: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.05556598678231239
    2. '0' → logprob: -3.4305660724639893
    3. ''' → logprob: -4.05556583404541
    4. ''.' → logprob: -5.93056583404541
    5. '"' → logprob: -7.68056583404541
    6. '''' → logprob: -7.80556583404541
    7. ' False' → logprob: -8.18056583404541
    8. 'True' → logprob: -8.18056583404541
    9. ''*' → logprob: -10.05556583404541
    10. ''-' → logprob: -10.43056583404541

Token 173: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.019392864778637886
    2. 'for' → logprob: -4.644392967224121
    3. ']*' → logprob: -5.144392967224121
    4. ']' → logprob: -5.769392967224121
    5. ' ]' → logprob: -8.269392967224121
    6. ' ' → logprob: -8.269392967224121
    7. '	for' → logprob: -10.644392967224121
    8. ']*(' → logprob: -10.644392967224121
    9. ')' → logprob: -11.144392967224121
    10. ' if' → logprob: -11.269392967224121

Token 174: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.338466093642637e-05
    2. ' ' → logprob: -9.625073432922363
    3. '   ' → logprob: -12.375073432922363
    4. '(' → logprob: -13.250073432922363
    5. '```' → logprob: -15.187573432922363
    6. '  ' → logprob: -15.500073432922363
    7. '    ' → logprob: -16.062572479248047
    8. '
' → logprob: -16.500072479248047
    9. '09' → logprob: -17.375072479248047
    10. '10' → logprob: -17.500072479248047

Token 175: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09518910199403763
    2. ']' → logprob: -3.220189094543457
    3. 'for' → logprob: -3.470189094543457
    4. '<|end|>' → logprob: -4.470189094543457
    5. ' ]' → logprob: -5.595189094543457
    6. '   ' → logprob: -5.970189094543457
    7. ')' → logprob: -6.970189094543457
    8. ' ' → logprob: -8.220189094543457
    9. '	for' → logprob: -8.345189094543457
    10. '    ' → logprob: -8.970189094543457

Token 176: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8888270258903503
    2. ' _' → logprob: -1.0138270854949951
    3. '_' → logprob: -1.5138270854949951
    4. 'range' → logprob: -5.263826847076416
    5. ' i' → logprob: -7.263826847076416
    6. '_range' → logprob: -10.138827323913574
    7. 'i' → logprob: -10.763827323913574
    8. ' ' → logprob: -11.013827323913574
    9. '_=' → logprob: -12.638827323913574
    10. '(range' → logprob: -12.888827323913574

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00922873429954052
    2. 'in' → logprob: -5.134228706359863
    3. 'range' → logprob: -6.259228706359863
    4. ' range' → logprob: -6.634228706359863
    5. ' ' → logprob: -9.884228706359863
    6. '_' → logprob: -12.384228706359863
    7. '(range' → logprob: -12.634228706359863
    8. '<|end|>' → logprob: -12.634228706359863
    9. '_range' → logprob: -13.134228706359863
    10. ' _' → logprob: -13.384228706359863

Token 178: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740777611732483
    2. ' range' → logprob: -0.9740777611732483
    3. '(range' → logprob: -15.224078178405762
    4. ' ' → logprob: -15.349078178405762
    5. '	range' → logprob: -16.224077224731445
    6. '_range' → logprob: -17.099077224731445
    7. '   ' → logprob: -17.349077224731445
    8. 'Range' → logprob: -17.849077224731445
    9. 'rang' → logprob: -17.974077224731445
    10. '[' → logprob: -18.099077224731445

Token 179: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08542431890964508
    2. 'range' → logprob: -2.7104244232177734
    3. ' range' → logprob: -4.210424423217773
    4. '9' → logprob: -8.085424423217773
    5. '(range' → logprob: -8.710424423217773
    6. ' (' → logprob: -9.960424423217773
    7. ' ' → logprob: -12.460424423217773
    8. '   ' → logprob: -13.460424423217773
    9. 'Range' → logprob: -14.210424423217773
    10. '
' → logprob: -14.210424423217773

Token 180: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.558399319241289e-05
    2. 'range' → logprob: -10.625025749206543
    3. ' ' → logprob: -14.875025749206543
    4. '(' → logprob: -15.125025749206543
    5. ' range' → logprob: -15.625025749206543
    6. '```' → logprob: -16.250024795532227
    7. ')' → logprob: -16.625024795532227
    8. '   ' → logprob: -17.125024795532227
    9. ')]' → logprob: -17.250024795532227
    10. '0' → logprob: -17.500024795532227

Token 181: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0014139274135231972
    2. ']' → logprob: -7.001413822174072
    3. ')' → logprob: -7.626413822174072
    4. ' )' → logprob: -12.00141429901123
    5. ' ]' → logprob: -13.50141429901123
    6. ')]
' → logprob: -13.50141429901123
    7. '])]' → logprob: -13.50141429901123
    8. '   ' → logprob: -13.87641429901123
    9. ')])' → logprob: -14.12641429901123
    10. ')],' → logprob: -14.12641429901123

Token 182: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4783783555030823
    2. '   ' → logprob: -0.9783783555030823
    3. ' for' → logprob: -5.4783782958984375
    4. '
' → logprob: -10.228378295898438
    5. '    
' → logprob: -10.353378295898438
    6. 'valid' → logprob: -10.353378295898438
    7. '	for' → logprob: -12.353378295898438
    8. 'has' → logprob: -12.728378295898438
    9. '           ' → logprob: -13.103378295898438
    10. '  ' → logprob: -13.978378295898438

Token 183: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007591230678372085
    2. 'valid' → logprob: -7.250759124755859
    3. '   ' → logprob: -10.75075912475586
    4. ' for' → logprob: -11.50075912475586
    5. 'duplicate' → logprob: -11.87575912475586
    6. 'has' → logprob: -12.75075912475586
    7. 'duplicates' → logprob: -13.00075912475586
    8. 'invalid' → logprob: -13.25075912475586
    9. 'flag' → logprob: -13.50075912475586
    10. 'found' → logprob: -14.00075912475586

Token 184: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023250136524438858
    2. 'i' → logprob: -3.773250102996826
    3. ' ' → logprob: -13.273250579833984
    4. ' ' → logprob: -13.523250579833984
    5. '	i' → logprob: -14.148250579833984
    6. ' _' → logprob: -15.648250579833984
    7. '   ' → logprob: -16.585750579833984
    8. '_i' → logprob: -16.585750579833984
    9. ' r' → logprob: -16.648250579833984
    10. '```' → logprob: -16.835750579833984

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026484563946723938
    2. 'in' → logprob: -3.651484489440918
    3. ' ' → logprob: -8.651484489440918
    4. '	in' → logprob: -12.901484489440918
    5. '   ' → logprob: -13.401484489440918
    6. 'n' → logprob: -13.651484489440918
    7. '  ' → logprob: -14.151484489440918
    8. '    ' → logprob: -14.151484489440918
    9. ' i' → logprob: -14.776484489440918
    10. '0' → logprob: -15.026484489440918

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197485327720642
    2. ' range' → logprob: -2.8119747638702393
    3. '(range' → logprob: -12.43697452545166
    4. '(' → logprob: -12.93697452545166
    5. ' ' → logprob: -14.93697452545166
    6. '9' → logprob: -16.061975479125977
    7. '```' → logprob: -16.811975479125977
    8. '	range' → logprob: -16.936975479125977
    9. ')' → logprob: -17.061975479125977
    10. '   ' → logprob: -17.061975479125977

Token 187: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.9153885558771435e-06
    2. ' (' → logprob: -12.500005722045898
    3. '9' → logprob: -13.125005722045898
    4. '(
' → logprob: -15.625005722045898
    5. '((' → logprob: -17.7500057220459
    6. ' ' → logprob: -18.0000057220459
    7. '(range' → logprob: -18.3750057220459
    8. 'range' → logprob: -19.5000057220459
    9. ')' → logprob: -20.0000057220459
    10. '8' → logprob: -20.1250057220459

Token 188: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '(' → logprob: -16.000001907348633
    4. ')' → logprob: -16.875001907348633
    5. '```' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.312501907348633
    7. '0' → logprob: -17.500001907348633
    8. '1' → logprob: -18.312501907348633
    9. '
' → logprob: -18.500001907348633
    10. 'n' → logprob: -18.875001907348633

Token 189: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022061665076762438
    2. ':' → logprob: -6.627206325531006
    3. '):
' → logprob: -7.752206325531006
    4. ')' → logprob: -7.752206325531006
    5. ']:' → logprob: -11.752205848693848
    6. '   ' → logprob: -12.252205848693848
    7. ' ):' → logprob: -12.877205848693848
    8. 'for' → logprob: -13.252205848693848
    9. ',' → logprob: -14.002205848693848
    10. '}:' → logprob: -14.502205848693848

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019028369337320328
    2. '   ' → logprob: -4.019028186798096
    3. ' for' → logprob: -7.144028186798096
    4. '<|end|>' → logprob: -9.644028663635254
    5. '	   ' → logprob: -11.519028663635254
    6. '	for' → logprob: -12.644028663635254
    7. '<|end|>' → logprob: -13.019028663635254
    8. 'for' → logprob: -13.144028663635254
    9. ',' → logprob: -13.519028663635254
    10. '   ' → logprob: -14.144028663635254

Token 191: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3879255950450897
    2. 'for' (adapté à ' for') → logprob: -1.387925624847412
    3. ' for' → logprob: -2.637925624847412
    4. '       ' → logprob: -8.387925148010254
    5. '	for' → logprob: -9.387925148010254
    6. '   ' → logprob: -9.762925148010254
    7. 'j' → logprob: -10.012925148010254
    8. ' ' → logprob: -11.512925148010254
    9. ' j' → logprob: -11.762925148010254
    10. '   ' → logprob: -14.262925148010254

Token 192: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.31326746940612793
    2. ' j' → logprob: -1.313267469406128
    3. '   ' → logprob: -12.438267707824707
    4. ' ' → logprob: -14.688267707824707
    5. ' ' → logprob: -15.063267707824707
    6. 'd' → logprob: -15.563267707824707
    7. '	j' → logprob: -15.813267707824707
    8. '    ' → logprob: -16.37576675415039
    9. 'num' → logprob: -16.43826675415039
    10. '  ' → logprob: -16.75076675415039

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05491150543093681
    2. 'in' → logprob: -2.9299116134643555
    3. ' ' → logprob: -10.929911613464355
    4. '   ' → logprob: -12.679911613464355
    5. '(' → logprob: -13.179911613464355
    6. '18' → logprob: -13.554911613464355
    7. ')' → logprob: -14.054911613464355
    8. '    ' → logprob: -14.304911613464355
    9. 'import' → logprob: -14.554911613464355
    10. '1' → logprob: -14.929911613464355

Token 194: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08800699561834335
    2. '(' → logprob: -2.5880069732666016
    3. ' range' → logprob: -4.713006973266602
    4. '9' → logprob: -9.338006973266602
    5. ' (' → logprob: -12.088006973266602
    6. '(range' → logprob: -12.588006973266602
    7. '   ' → logprob: -14.713006973266602
    8. ' ' → logprob: -14.838006973266602
    9. '```' → logprob: -16.8380069732666
    10. '(
' → logprob: -16.8380069732666

Token 195: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004039785999339074
    2. '9' → logprob: -8.125404357910156
    3. ' (' → logprob: -9.250404357910156
    4. 'range' → logprob: -11.500404357910156
    5. ' range' → logprob: -14.000404357910156
    6. 'in' → logprob: -15.000404357910156
    7. ')' → logprob: -15.875404357910156
    8. ' ' → logprob: -16.000404357910156
    9. '(
' → logprob: -16.000404357910156
    10. ' in' → logprob: -16.250404357910156

Token 196: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.500005722045898
    4. ')' → logprob: -15.125005722045898
    5. '0' → logprob: -15.125005722045898
    6. '
' → logprob: -16.2500057220459
    7. '```' → logprob: -16.3750057220459
    8. '(' → logprob: -17.3125057220459
    9. 'range' → logprob: -17.4375057220459
    10. 'n' → logprob: -18.0000057220459

Token 197: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002940382808446884
    2. '):
' → logprob: -6.3779401779174805
    3. ')' → logprob: -6.8779401779174805
    4. ']:' → logprob: -9.12794017791748
    5. ':' → logprob: -9.75294017791748
    6. ')]' → logprob: -10.87794017791748
    7. ' ):' → logprob: -11.12794017791748
    8. ']):' → logprob: -13.12794017791748
    9. '   ' → logprob: -14.00294017791748
    10. '):

' → logprob: -14.50294017791748

Token 198: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009276560507714748
    2. ' if' → logprob: -5.134276390075684
    3. '           ' → logprob: -5.759276390075684
    4. 'if' → logprob: -10.009276390075684
    5. ':' → logprob: -10.134276390075684
    6. ',' → logprob: -10.509276390075684
    7. '   ' → logprob: -10.759276390075684
    8. '        
' → logprob: -11.884276390075684
    9. ':
' → logprob: -11.884276390075684
    10. '<|end|>' → logprob: -12.134276390075684

Token 199: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.05223122984170914
    2. 'if' → logprob: -3.9272313117980957
    3. ' num' → logprob: -3.9272313117980957
    4. ' if' → logprob: -5.052231311798096
    5. 'n' → logprob: -5.927231311798096
    6. '           ' → logprob: -6.177231311798096
    7. '   ' → logprob: -8.677230834960938
    8. '               ' → logprob: -9.677230834960938
    9. ' n' → logprob: -9.802230834960938
    10. 'v' → logprob: -11.302230834960938

Token 200: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001038287067785859
    2. ' =' → logprob: -6.876038074493408
    3. '=

' → logprob: -12.751038551330566
    4. '=
' → logprob: -13.876038551330566
    5. '=row' → logprob: -13.876038551330566
    6. '=num' → logprob: -15.626038551330566
    7. '=}' → logprob: -15.876038551330566
    8. '=line' → logprob: -16.25103759765625
    9. ')' → logprob: -16.62603759765625
    10. '==' → logprob: -16.75103759765625

Token 201: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -7.517272024415433e-05
    2. ' grid' → logprob: -9.500075340270996
    3. '
' → logprob: -16.75007438659668
    4. '	grid' → logprob: -17.00007438659668
    5. '(grid' → logprob: -17.12507438659668
    6. '   ' → logprob: -17.50007438659668
    7. '           ' → logprob: -18.37507438659668
    8. '.grid' → logprob: -18.50007438659668
    9. '```' → logprob: -18.87507438659668
    10. ':grid' → logprob: -19.12507438659668

Token 202: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.1424973713001236e-05
    2. '[' → logprob: -10.625031471252441
    3. '[j' → logprob: -12.250031471252441
    4. '[I' → logprob: -13.375031471252441
    5. ' [' → logprob: -14.875031471252441
    6. 'i' → logprob: -16.125030517578125
    7. '```' → logprob: -16.375030517578125
    8. '[
' → logprob: -16.750030517578125
    9. '][' → logprob: -17.250030517578125
    10. '   ' → logprob: -17.500030517578125

Token 203: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1836269199848175
    2. '[i' → logprob: -1.8086268901824951
    3. '[j' → logprob: -5.808627128601074
    4. '[' → logprob: -7.808627128601074
    5. ']' → logprob: -8.558627128601074
    6. ')[' → logprob: -9.058627128601074
    7. ' ][' → logprob: -9.308627128601074
    8. ' [' → logprob: -11.308627128601074
    9. '[I' → logprob: -11.308627128601074
    10. '   ' → logprob: -11.433627128601074

Token 204: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.173704271830502e-06
    2. ' j' → logprob: -13.00000286102295
    3. 'i' → logprob: -14.75000286102295
    4. '[j' → logprob: -15.62500286102295
    5. ']' → logprob: -16.375003814697266
    6. '```' → logprob: -16.750003814697266
    7. '][' → logprob: -17.125003814697266
    8. ' ' → logprob: -17.500003814697266
    9. '   ' → logprob: -17.750003814697266
    10. '
' → logprob: -18.000003814697266

Token 205: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6117821335792542
    2. ')
' → logprob: -0.8617821335792542
    3. ']' → logprob: -3.6117820739746094
    4. ']
' → logprob: -4.986782073974609
    5. '])' → logprob: -7.236782073974609
    6. '           ' → logprob: -8.73678207397461
    7. ' )
' → logprob: -8.98678207397461
    8. 'if' → logprob: -9.11178207397461
    9. '])
' → logprob: -9.23678207397461
    10. ' )' → logprob: -9.86178207397461

Token 206: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00031294001382775605
    2. ' if' → logprob: -8.625312805175781
    3. 'if' → logprob: -9.000312805175781
    4. '            
' → logprob: -12.750312805175781
    5. '   ' → logprob: -12.875312805175781
    6. '
' → logprob: -13.500312805175781
    7. '       ' → logprob: -13.875312805175781
    8. '<|end|>' → logprob: -14.625312805175781
    9. '		' → logprob: -14.750312805175781
    10. '          ' → logprob: -15.500312805175781

Token 207: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0012315383646637201
    2. ' if' → logprob: -7.001231670379639
    3. '           ' → logprob: -8.12623119354248
    4. 'mark' → logprob: -11.12623119354248
    5. '   ' → logprob: -11.75123119354248
    6. 'for' → logprob: -15.00123119354248
    7. '               ' → logprob: -15.37623119354248
    8. '       ' → logprob: -15.62623119354248
    9. 'valid' → logprob: -15.87623119354248
    10. '            
' → logprob: -15.87623119354248

Token 208: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.5233029127120972
    2. 'row' → logprob: -0.8983029127120972
    3. '(row' → logprob: -8.773303031921387
    4. '   ' → logprob: -11.648303031921387
    5. ' (' → logprob: -11.898303031921387
    6. ' ' → logprob: -12.773303031921387
    7. '[row' → logprob: -13.648303031921387
    8. '           ' → logprob: -13.898303031921387
    9. '	row' → logprob: -13.898303031921387
    10. '(' → logprob: -14.648303031921387

Token 209: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.8624639324116288e-06
    2. '_marks' → logprob: -13.375001907348633
    3. 's' → logprob: -17.125001907348633
    4. '_checks' → logprob: -17.625001907348633
    5. '_lengths' → logprob: -18.250001907348633
    6. '_c' → logprob: -18.250001907348633
    7. '_ranges' → logprob: -18.500001907348633
    8. 'counts' → logprob: -18.500001907348633
    9. '_' → logprob: -18.500001907348633
    10. ''_' → logprob: -18.625001907348633

Token 210: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.875004768371582
    3. '[int' → logprob: -13.750004768371582
    4. '[num' → logprob: -14.125004768371582
    5. '[I' → logprob: -15.625004768371582
    6. '```' → logprob: -15.750004768371582
    7. '[j' → logprob: -16.1250057220459
    8. '[row' → logprob: -16.6250057220459
    9. '[col' → logprob: -17.0000057220459
    10. ' [' → logprob: -17.1250057220459

Token 211: '][' (ID: 2696)
  Prédit: '[num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.08927422761917114
    2. '][' → logprob: -2.4642741680145264
    3. '[' → logprob: -8.589274406433105
    4. 'num' → logprob: -10.589274406433105
    5. ' ][' → logprob: -10.589274406433105
    6. '   ' → logprob: -10.839274406433105
    7. '}[' → logprob: -10.839274406433105
    8. ')[' → logprob: -11.464274406433105
    9. ' [' → logprob: -11.464274406433105
    10. '"][' → logprob: -12.089274406433105

Token 212: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.318681188422488e-05
    2. '][' → logprob: -12.00001335144043
    3. '[num' → logprob: -12.12501335144043
    4. ' num' → logprob: -13.50001335144043
    5. '
' → logprob: -16.50001335144043
    6. ']' → logprob: -17.12501335144043
    7. '(num' → logprob: -17.25001335144043
    8. '	num' → logprob: -17.62501335144043
    9. '   ' → logprob: -18.62501335144043
    10. '[' → logprob: -18.75001335144043

Token 213: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3556346595287323
    2. ']>' → logprob: -1.4806346893310547
    3. ']' → logprob: -2.9806346893310547
    4. ')>' → logprob: -4.480634689331055
    5. '">' → logprob: -4.855634689331055
    6. ')' → logprob: -6.855634689331055
    7. ' >' → logprob: -8.105634689331055
    8. '}>' → logprob: -9.105634689331055
    9. '"]' → logprob: -9.105634689331055
    10. '```' → logprob: -9.105634689331055

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '>' → logprob: -17.75
    4. '
' → logprob: -19.0
    5. '```' → logprob: -19.125
    6. '   ' → logprob: -19.5
    7. '=' → logprob: -19.75
    8. '۱' → logprob: -19.875
    9. '

' → logprob: -20.0
    10. '１' → logprob: -20.25

Token 215: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001133189769461751
    2. 'or' → logprob: -7.126132965087891
    3. '           ' → logprob: -8.75113296508789
    4. ' and' → logprob: -9.50113296508789
    5. '               ' → logprob: -9.87613296508789
    6. 'and' → logprob: -11.62613296508789
    7. ':' → logprob: -11.87613296508789
    8. '              ' → logprob: -12.25113296508789
    9. '            ' → logprob: -12.37613296508789
    10. '          ' → logprob: -12.37613296508789

Token 216: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.014163863845169544
    2. 'col' → logprob: -4.264163970947266
    3. '	col' → logprob: -15.389163970947266
    4. ' ' → logprob: -16.139163970947266
    5. '(col' → logprob: -17.139163970947266
    6. ' ' → logprob: -18.139163970947266
    7. '[col' → logprob: -18.389163970947266
    8. '.col' → logprob: -18.639163970947266
    9. ' coli' → logprob: -18.639163970947266
    10. ',col' → logprob: -18.764163970947266

Token 217: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -3.7697225252486533e-06
    2. '[j' → logprob: -13.125003814697266
    3. '_marks' → logprob: -14.500003814697266
    4. '```' → logprob: -15.625003814697266
    5. '_codes' → logprob: -16.250003814697266
    6. '_c' → logprob: -16.375003814697266
    7. ''_' → logprob: -16.500003814697266
    8. '_scores' → logprob: -16.625003814697266
    9. '_checks' → logprob: -16.875003814697266
    10. '_lengths' → logprob: -16.875003814697266

Token 218: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.41866585687967e-06
    2. '[i' → logprob: -12.500008583068848
    3. ' [' → logprob: -12.875008583068848
    4. '[' → logprob: -14.000008583068848
    5. 'j' → logprob: -14.000008583068848
    6. '[
' → logprob: -16.00000762939453
    7. '   ' → logprob: -16.25000762939453
    8. '```' → logprob: -16.25000762939453
    9. '][' → logprob: -17.50000762939453
    10. '[js' → logprob: -18.25000762939453

Token 219: '][' (ID: 2696)
  Prédit: '[num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.006055947858840227
    2. '][' → logprob: -5.13105583190918
    3. '[' → logprob: -9.50605583190918
    4. '           ' → logprob: -11.63105583190918
    5. '[i' → logprob: -12.13105583190918
    6. 'num' → logprob: -12.38105583190918
    7. '}[' → logprob: -12.38105583190918
    8. ' [' → logprob: -12.50605583190918
    9. '[j' → logprob: -12.63105583190918
    10. '>[' → logprob: -12.88105583190918

Token 220: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0031822288874536753
    2. '[num' → logprob: -5.753182411193848
    3. ' num' → logprob: -12.378182411193848
    4. '(num' → logprob: -16.12818145751953
    5. '[j' → logprob: -17.00318145751953
    6. '[' → logprob: -17.37818145751953
    7. '<num' → logprob: -17.37818145751953
    8. '	num' → logprob: -17.50318145751953
    9. '$num' → logprob: -17.75318145751953
    10. '
' → logprob: -18.37818145751953

Token 221: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25201869010925293
    2. ']>' → logprob: -1.502018690109253
    3. ']' → logprob: -9.877018928527832
    4. ')>' → logprob: -10.752018928527832
    5. '">' → logprob: -12.002018928527832
    6. ' >' → logprob: -12.002018928527832
    7. '()>' → logprob: -13.627018928527832
    8. '}>' → logprob: -13.877018928527832
    9. '[' → logprob: -14.252018928527832
    10. '   ' → logprob: -14.877018928527832

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -16.1250057220459
    4. '>' → logprob: -16.2500057220459
    5. '<|end|>' → logprob: -17.1250057220459
    6. '   ' → logprob: -18.0000057220459
    7. '```' → logprob: -18.0000057220459
    8. '[' → logprob: -18.0000057220459
    9. '
' → logprob: -18.2500057220459
    10. '(' → logprob: -19.0625057220459

Token 223: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00015955790877342224
    2. 'or' → logprob: -8.75015926361084
    3. '           ' → logprob: -15.00015926361084
    4. ' ' → logprob: -15.00015926361084
    5. '	or' → logprob: -15.87515926361084
    6. '              ' → logprob: -16.875160217285156
    7. '               ' → logprob: -17.125160217285156
    8. '          ' → logprob: -17.125160217285156
    9. '            ' → logprob: -17.500160217285156
    10. '```' → logprob: -18.375160217285156

Token 224: ' box' (ID: 5506)
  Prédit: ' box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' box' → logprob: -0.20141421258449554
    2. 'box' → logprob: -1.7014142274856567
    3. ' ' → logprob: -14.826414108276367
    4. '	box' → logprob: -15.076414108276367
    5. '(box' → logprob: -16.451414108276367
    6. '```' → logprob: -17.576414108276367
    7. '.box' → logprob: -17.826414108276367
    8. '   ' → logprob: -17.826414108276367
    9. 'Box' → logprob: -17.826414108276367
    10. 'row' → logprob: -18.201414108276367

Token 225: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -7.896309739408025e-07
    2. '[(' → logprob: -14.375000953674316
    3. '```' → logprob: -16.75
    4. 'counts' → logprob: -18.25
    5. '_checks' → logprob: -18.875
    6. '\' → logprob: -19.0
    7. '[_' → logprob: -19.5
    8. '[' → logprob: -19.625
    9. '   ' → logprob: -19.75
    10. 's' → logprob: -19.75

Token 226: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -7.896309739408025e-07
    2. '[((' → logprob: -14.875000953674316
    3. '((' → logprob: -15.125000953674316
    4. '[' → logprob: -16.125
    5. '[
' → logprob: -16.875
    6. ' [(' → logprob: -17.875
    7. '```' → logprob: -18.0
    8. '`' → logprob: -19.625
    9. '   ' → logprob: -20.75
    10. '(' → logprob: -20.75

Token 227: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.610702363715973e-06
    2. '(i' → logprob: -12.125009536743164
    3. ' i' → logprob: -12.500009536743164
    4. ' (' → logprob: -15.250009536743164
    5. '(' → logprob: -15.875009536743164
    6. '   ' → logprob: -17.750009536743164
    7. '```' → logprob: -18.000009536743164
    8. '
' → logprob: -18.375009536743164
    9. '{i' → logprob: -18.875009536743164
    10. '(
' → logprob: -19.250009536743164

Token 228: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -5.319370302458992e-06
    2. ' //' → logprob: -12.375005722045898
    3. '/' → logprob: -14.625005722045898
    4. '3' → logprob: -15.625005722045898
    5. '#' → logprob: -15.750005722045898
    6. '```' → logprob: -15.750005722045898
    7. ' ' → logprob: -17.1250057220459
    8. '   ' → logprob: -17.1250057220459
    9. '2' → logprob: -17.6250057220459
    10. '//
' → logprob: -17.8750057220459

Token 229: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.375017166137695
    3. '   ' → logprob: -12.875017166137695
    4. '```' → logprob: -14.000017166137695
    5. '
' → logprob: -15.125017166137695
    6. '       ' → logprob: -15.250017166137695
    7. '[' → logprob: -15.937517166137695
    8. '  ' → logprob: -16.000017166137695
    9. '           ' → logprob: -16.312517166137695
    10. ')' → logprob: -16.750017166137695

Token 230: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.0011624845210462809
    2. ')' → logprob: -6.876162528991699
    3. '*' → logprob: -9.2511625289917
    4. ']*' → logprob: -10.8761625289917
    5. '   ' → logprob: -12.1261625289917
    6. '3' → logprob: -12.6261625289917
    7. ' )' → logprob: -13.6261625289917
    8. ')//' → logprob: -13.7511625289917
    9. ' ' → logprob: -13.8761625289917
    10. ')]' → logprob: -14.0011625289917

Token 231: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -15.375000953674316
    4. '   ' → logprob: -17.25
    5. '
' → logprob: -17.8125
    6. '...' → logprob: -18.0625
    7. '۳' → logprob: -18.25
    8. '' → logprob: -18.4375
    9. ')' → logprob: -18.4375
    10. '``' → logprob: -18.875

Token 232: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08110345155000687
    2. '+(' → logprob: -2.581103563308716
    3. '+
' → logprob: -6.956103324890137
    4. ' +' → logprob: -7.581103324890137
    5. '+j' → logprob: -7.706103324890137
    6. ')+(' → logprob: -9.081103324890137
    7. '3' → logprob: -9.831103324890137
    8. '+k' → logprob: -10.956103324890137
    9. '+[' → logprob: -11.081103324890137
    10. '   ' → logprob: -11.206103324890137

Token 233: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. ' j' → logprob: -15.25
    3. '```' → logprob: -16.625
    4. '   ' → logprob: -17.625
    5. '(j' → logprob: -18.375
    6. 'i' → logprob: -19.125
    7. '	j' → logprob: -20.25
    8. '
' → logprob: -20.375
    9. '_j' → logprob: -20.875
    10. ' ' → logprob: -20.875

Token 234: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.5928495486150496e-05
    2. '3' → logprob: -11.750016212463379
    3. '```' → logprob: -12.500016212463379
    4. ' //' → logprob: -13.000016212463379
    5. '/' → logprob: -14.250016212463379
    6. '   ' → logprob: -14.500016212463379
    7. '1' → logprob: -15.500016212463379
    8. '[' → logprob: -16.000015258789062
    9. '2' → logprob: -16.125015258789062
    10. '#' → logprob: -16.500015258789062

Token 235: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.875004768371582
    3. '```' → logprob: -14.125004768371582
    4. '2' → logprob: -15.000004768371582
    5. 'j' → logprob: -15.500004768371582
    6. ')' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.312503814697266
    8. '1' → logprob: -16.562503814697266
    9. '[' → logprob: -16.875003814697266
    10. '
' → logprob: -17.250003814697266

Token 236: ')][' (ID: 112886)
  Prédit: ')]['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.25456851720809937
    2. '][' → logprob: -1.5045685768127441
    3. ']][' → logprob: -6.004568576812744
    4. ')[' → logprob: -9.379568099975586
    5. ')]' → logprob: -10.879568099975586
    6. '[num' → logprob: -11.129568099975586
    7. ' ][' → logprob: -11.129568099975586
    8. ']' → logprob: -11.254568099975586
    9. 'num' → logprob: -11.754568099975586
    10. '   ' → logprob: -12.504568099975586

Token 237: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -4.36574100604048e-06
    2. ' num' → logprob: -12.375004768371582
    3. '
' → logprob: -17.375003814697266
    4. '[num' → logprob: -18.500003814697266
    5. '   ' → logprob: -18.750003814697266
    6. 'str' → logprob: -18.875003814697266
    7. 'nu' → logprob: -18.875003814697266
    8. ' ' → logprob: -19.000003814697266
    9. '(num' → logprob: -19.250003814697266
    10. '```' → logprob: -19.500003814697266

Token 238: ']>' (ID: 54651)
  Prédit: ']>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.0007881867350079119
    2. '>' → logprob: -7.37578821182251
    3. ']' → logprob: -8.750787734985352
    4. '">' → logprob: -14.000787734985352
    5. ' ]' → logprob: -14.125787734985352
    6. '"]' → logprob: -14.125787734985352
    7. ')>' → logprob: -14.875787734985352
    8. ']>
' → logprob: -15.375787734985352
    9. ']>=' → logprob: -16.00078773498535
    10. '   ' → logprob: -16.50078773498535

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '>' → logprob: -17.875
    4. '```' → logprob: -19.25
    5. '
' → logprob: -19.625
    6. '0' → logprob: -20.0
    7. '   ' → logprob: -20.125
    8. '[' → logprob: -21.75
    9. '۱' → logprob: -21.9375
    10. '<|end|>' → logprob: -22.4375

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026503324043005705
    2. ':
' → logprob: -6.127650260925293
    3. '):' → logprob: -7.752650260925293
    4. '           ' → logprob: -11.252650260925293
    5. ']:' → logprob: -11.752650260925293
    6. '):
' → logprob: -12.127650260925293
    7. ')' → logprob: -12.252650260925293
    8. '               ' → logprob: -13.127650260925293
    9. '       ' → logprob: -14.627650260925293
    10. ']' → logprob: -15.127650260925293

Token 241: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002939905971288681
    2. ' mark' → logprob: -5.877939701080322
    3. '           ' → logprob: -9.37794017791748
    4. '                
' → logprob: -11.00294017791748
    5. 'mark' → logprob: -11.87794017791748
    6. ' ' → logprob: -12.37794017791748
    7. '                   ' → logprob: -12.50294017791748
    8. '              ' → logprob: -12.62794017791748
    9. '   ' → logprob: -13.50294017791748
    10. '
' → logprob: -13.62794017791748

Token 242: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.045775022357702255
    2. 'mark' (adapté à ' mark') → logprob: -3.1707749366760254
    3. '           ' → logprob: -6.545774936676025
    4. '               ' → logprob: -6.670774936676025
    5. '                   ' → logprob: -10.920775413513184
    6. ' Mark' → logprob: -11.545775413513184
    7. ' ' → logprob: -11.545775413513184
    8. '   ' → logprob: -11.920775413513184
    9. '            ' → logprob: -12.420775413513184
    10. '.mark' → logprob: -12.670775413513184

Token 243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. '[j' → logprob: -13.375003814697266
    3. '[I' → logprob: -13.750003814697266
    4. '[' → logprob: -14.000003814697266
    5. ' [' → logprob: -15.500003814697266
    6. '```' → logprob: -16.750003814697266
    7. '\[' → logprob: -17.625003814697266
    8. '][' → logprob: -17.625003814697266
    9. ')[' → logprob: -17.875003814697266
    10. '[ii' → logprob: -18.125003814697266

Token 244: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012660634238272905
    2. ']' → logprob: -6.876266002655029
    3. '[j' → logprob: -8.751266479492188
    4. ' ][' → logprob: -10.126266479492188
    5. '[i' → logprob: -11.001266479492188
    6. '[' → logprob: -11.251266479492188
    7. '   ' → logprob: -13.501266479492188
    8. ']][' → logprob: -14.001266479492188
    9. '"][' → logprob: -14.751266479492188
    10. ']
' → logprob: -14.751266479492188

Token 245: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.842555426876061e-06
    2. ' j' → logprob: -12.250004768371582
    3. '	j' → logprob: -18.3750057220459
    4. '   ' → logprob: -18.6250057220459
    5. '[j' → logprob: -19.3750057220459
    6. ']' → logprob: -19.5000057220459
    7. '
' → logprob: -19.6250057220459
    8. ' ' → logprob: -19.8750057220459
    9. '```' → logprob: -20.2500057220459
    10. '           ' → logprob: -20.6250057220459

Token 246: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.1269834339618683
    2. ']' → logprob: -2.126983404159546
    3. '=' → logprob: -10.501983642578125
    4. ' ]' → logprob: -10.626983642578125
    5. ']+=' → logprob: -14.126983642578125
    6. ']={' → logprob: -14.501983642578125
    7. ']='' → logprob: -14.751983642578125
    8. '=True' → logprob: -14.751983642578125
    9. ']=(' → logprob: -15.126983642578125
    10. ']==' → logprob: -15.126983642578125

Token 247: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.704273118884885e-07
    2. ' True' → logprob: -14.250000953674316
    3. 'Tr' → logprob: -21.25
    4. 'T' → logprob: -22.75
    5. 'False' → logprob: -22.75
    6. '=True' → logprob: -22.875
    7. '   ' → logprob: -23.125
    8. '1' → logprob: -23.125
    9. '(True' → logprob: -23.125
    10. 'true' → logprob: -23.625

Token 248: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05167631804943085
    2. 'print' → logprob: -3.3016762733459473
    3. '<|end|>' → logprob: -5.301676273345947
    4. '   ' → logprob: -5.801676273345947
    5. '    
' → logprob: -6.551676273345947
    6. '\n' → logprob: -6.551676273345947
    7. 'if' → logprob: -7.176676273345947
    8. 'for' → logprob: -7.176676273345947
    9. '  
' → logprob: -7.926676273345947
    10. ' 
' → logprob: -9.301676750183105

Token 249: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2178771048784256
    2. '
' → logprob: -2.592877149581909
    3. 'for' → logprob: -3.217877149581909
    4. 'if' → logprob: -3.217877149581909
    5. '   ' → logprob: -3.592877149581909
    6. ' for' → logprob: -5.09287691116333
    7. ' print' → logprob: -6.21787691116333
    8. ' if' → logprob: -6.34287691116333
    9. '    
' → logprob: -6.96787691116333
    10. '\n' → logprob: -7.59287691116333

Token 250: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.024831166490912437
    2. 'print' → logprob: -4.274831295013428
    3. 'valid' → logprob: -5.399831295013428
    4. '   ' → logprob: -5.649831295013428
    5. ' for' → logprob: -7.024831295013428
    6. 'if' → logprob: -7.399831295013428
    7. 'result' → logprob: -7.399831295013428
    8. 'count' → logprob: -8.89983081817627
    9. 'ans' → logprob: -9.52483081817627
    10. 'output' → logprob: -10.02483081817627

Token 251: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003240816527977586
    2. 'i' → logprob: -6.503240585327148
    3. ' ' → logprob: -6.753240585327148
    4. ' _' → logprob: -7.628240585327148
    5. '_' → logprob: -9.628240585327148
    6. '	i' → logprob: -12.253240585327148
    7. '_i' → logprob: -12.378240585327148
    8. ' ' → logprob: -12.628240585327148
    9. ' row' → logprob: -13.128240585327148
    10. '  ' → logprob: -14.440740585327148

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0235923882573843
    2. 'in' → logprob: -3.773592472076416
    3. ' ' → logprob: -8.023591995239258
    4. '	in' → logprob: -12.023591995239258
    5. '  ' → logprob: -13.148591995239258
    6. ' i' → logprob: -13.273591995239258
    7. 'n' → logprob: -13.398591995239258
    8. ',' → logprob: -13.398591995239258
    9. '    ' → logprob: -13.648591995239258
    10. '0' → logprob: -13.898591995239258

Token 253: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061970487236976624
    2. ' range' → logprob: -2.8119704723358154
    3. '   ' → logprob: -13.686970710754395
    4. ' ' → logprob: -14.186970710754395
    5. '
' → logprob: -15.436970710754395
    6. 'ange' → logprob: -15.811970710754395
    7. '```' → logprob: -15.936970710754395
    8. '  ' → logprob: -16.436969757080078
    9. '(range' → logprob: -16.436969757080078
    10. '	range' → logprob: -16.686969757080078

Token 254: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.791440293658525e-05
    2. '9' → logprob: -9.750078201293945
    3. ' (' → logprob: -11.000078201293945
    4. 'in' → logprob: -13.250078201293945
    5. '(
' → logprob: -14.500078201293945
    6. ' in' → logprob: -15.125078201293945
    7. ' ' → logprob: -15.375078201293945
    8. 'range' → logprob: -15.875078201293945
    9. ' range' → logprob: -18.250078201293945
    10. '
' → logprob: -18.875078201293945

Token 255: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -12.000017166137695
    3. '0' → logprob: -12.750017166137695
    4. '(' → logprob: -13.000017166137695
    5. 'range' → logprob: -13.125017166137695
    6. '
' → logprob: -13.625017166137695
    7. '```' → logprob: -14.250017166137695
    8. '   ' → logprob: -14.250017166137695
    9. '1' → logprob: -14.750017166137695
    10. ')' → logprob: -15.625017166137695

Token 256: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001912457519210875
    2. ')' → logprob: -7.001912593841553
    3. '):
' → logprob: -7.001912593841553
    4. ':' → logprob: -9.626912117004395
    5. ']:' → logprob: -11.501912117004395
    6. ' ):' → logprob: -12.001912117004395
    7. '   ' → logprob: -13.001912117004395
    8. ' ' → logprob: -13.876912117004395
    9. '[' → logprob: -14.001912117004395
    10. '}:' → logprob: -14.376912117004395

Token 257: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011093802750110626
    2. '       ' → logprob: -4.511093616485596
    3. ':' → logprob: -11.011094093322754
    4. ' for' → logprob: -11.886094093322754
    5. '>' → logprob: -13.011094093322754
    6. ' print' → logprob: -13.011094093322754
    7. '```' → logprob: -13.136094093322754
    8. ' ' → logprob: -13.136094093322754
    9. '#' → logprob: -13.386094093322754
    10. '<|end|>' → logprob: -13.386094093322754

Token 258: ' line' (ID: 2543)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9120989441871643
    2. 'for' → logprob: -1.0370988845825195
    3. '   ' → logprob: -1.6620988845825195
    4. 'print' → logprob: -3.1620988845825195
    5. ' print' → logprob: -5.1620988845825195
    6. ' line' → logprob: -6.6620988845825195
    7. 'row' → logprob: -6.7870988845825195
    8. 'line' (adapté à ' line') → logprob: -6.7870988845825195
    9. ' row' → logprob: -6.7870988845825195
    10. '       ' → logprob: -7.5370988845825195

Token 259: '=""
' (ID: 71561)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14655005931854248
    2. ' =' → logprob: -2.146550178527832
    3. '+=' → logprob: -4.896550178527832
    4. ' +=' → logprob: -5.896550178527832
    5. '=[]' → logprob: -6.146550178527832
    6. '+='' → logprob: -6.146550178527832
    7. '='' → logprob: -7.146550178527832
    8. '   ' → logprob: -7.646550178527832
    9. '=[' → logprob: -7.646550178527832
    10. ' ' → logprob: -7.646550178527832

Token 260: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033180462196469307
    2. '       ' → logprob: -5.878317832946777
    3. '<|end|>' → logprob: -8.003317832946777
    4. ' for' → logprob: -8.753317832946777
    5. 'for' → logprob: -11.253317832946777
    6. '<|end|>' → logprob: -13.128317832946777
    7. ' ' → logprob: -13.503317832946777
    8. '    ' → logprob: -14.003317832946777
    9. '           ' → logprob: -14.128317832946777
    10. ',' → logprob: -14.378317832946777

Token 261: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20603953301906586
    2. 'for' (adapté à ' for') → logprob: -1.956039547920227
    3. '   ' → logprob: -3.4560394287109375
    4. ' for' → logprob: -4.3310394287109375
    5. '	for' → logprob: -10.331039428710938
    6. '	   ' → logprob: -10.456039428710938
    7. '	' → logprob: -12.081039428710938
    8. ' ' → logprob: -12.831039428710938
    9. '    ' → logprob: -13.456039428710938
    10. '     ' → logprob: -14.456039428710938

Token 262: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25192990899086
    2. ' j' → logprob: -1.5019298791885376
    3. '   ' → logprob: -15.126930236816406
    4. '	j' → logprob: -15.626930236816406
    5. '_j' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.251930236816406
    7. '    ' → logprob: -16.376930236816406
    8. ' ' → logprob: -16.751930236816406
    9. '$j' → logprob: -18.626930236816406
    10. ',j' → logprob: -18.751930236816406

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08896280825138092
    2. 'in' → logprob: -2.4639627933502197
    3. ' ' → logprob: -11.58896255493164
    4. '	in' → logprob: -11.83896255493164
    5. '    ' → logprob: -13.46396255493164
    6. '   ' → logprob: -14.08896255493164
    7. '        ' → logprob: -14.33896255493164
    8. 'In' → logprob: -14.46396255493164
    9. 'import' → logprob: -14.71396255493164
    10. ' i' → logprob: -14.83896255493164

Token 264: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0380457378923893
    2. ' range' → logprob: -3.288045644760132
    3. '(' → logprob: -12.788045883178711
    4. '(range' → logprob: -13.788045883178711
    5. '9' → logprob: -15.163045883178711
    6. '   ' → logprob: -16.16304588317871
    7. ' ' → logprob: -16.91304588317871
    8. '
' → logprob: -18.66304588317871
    9. '8' → logprob: -19.03804588317871
    10. '    ' → logprob: -19.28804588317871

Token 265: '(' (ID: 7)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.474138468503952
    2. '(' → logprob: -0.9741384983062744
    3. ' ' → logprob: -10.349138259887695
    4. ' (' → logprob: -10.974138259887695
    5. '   ' → logprob: -11.724138259887695
    6. '
' → logprob: -12.974138259887695
    7. '       ' → logprob: -14.349138259887695
    8. '           ' → logprob: -15.724138259887695
    9. '(
' → logprob: -15.724138259887695
    10. '0' → logprob: -15.849138259887695

Token 266: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '0' → logprob: -17.5
    4. '   ' → logprob: -17.75
    5. '
' → logprob: -18.5
    6. ')' → logprob: -19.875
    7. '```' → logprob: -20.75
    8. '       ' → logprob: -21.5
    9. '９' → logprob: -21.5
    10. '  ' → logprob: -21.8125

Token 267: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9882556200027466
    2. '):
' → logprob: -1.2382556200027466
    3. '):' → logprob: -1.4882556200027466
    4. ')' → logprob: -3.363255500793457
    5. ':
' → logprob: -3.488255500793457
    6. '           ' → logprob: -3.738255500793457
    7. '   ' → logprob: -4.488255500793457
    8. '       ' → logprob: -4.738255500793457
    9. ' in' → logprob: -6.988255500793457
    10. 'if' → logprob: -7.738255500793457

Token 268: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03188880532979965
    2. '       ' → logprob: -3.531888723373413
    3. ' if' → logprob: -6.281888961791992
    4. ' line' → logprob: -9.156888961791992
    5. 'if' → logprob: -9.906888961791992
    6. '	       ' → logprob: -9.906888961791992
    7. '		' → logprob: -11.031888961791992
    8. '               ' → logprob: -11.156888961791992
    9. '        ' → logprob: -12.031888961791992
    10. '   ' → logprob: -12.656888961791992

Token 269: ' line' (ID: 2543)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28699174523353577
    2. 'if' → logprob: -1.6619917154312134
    3. '           ' → logprob: -3.036991834640503
    4. ' line' → logprob: -4.536991596221924
    5. '       ' → logprob: -7.411991596221924
    6. 'line' (adapté à ' line') → logprob: -8.411992073059082
    7. '               ' → logprob: -8.786992073059082
    8. '   ' → logprob: -10.036992073059082
    9. 'print' → logprob: -12.536992073059082
    10. ' print' → logprob: -12.786992073059082

Token 270: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0055510513484478
    2. '+="' → logprob: -5.255550861358643
    3. '+='' → logprob: -9.0055513381958
    4. '+' → logprob: -9.2555513381958
    5. ' +=' → logprob: -9.5055513381958
    6. '+=(' → logprob: -10.6305513381958
    7. ']+=' → logprob: -15.2555513381958
    8. '=' → logprob: -16.505550384521484
    9. '=line' → logprob: -18.380550384521484
    10. '+"' → logprob: -18.505550384521484

Token 271: '('*' (ID: 74916)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.3363480865955353
    2. '"' → logprob: -1.461348056793213
    3. 'str' → logprob: -4.211348056793213
    4. '"*' → logprob: -4.461348056793213
    5. '"#' → logprob: -4.961348056793213
    6. '("' → logprob: -5.336348056793213
    7. '("*' → logprob: -5.461348056793213
    8. ''' → logprob: -5.836348056793213
    9. ''*' → logprob: -6.211348056793213
    10. '(grid' → logprob: -6.461348056793213

Token 272: ''' (ID: 6)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.028430141508579254
    2. 'if' → logprob: -4.653429985046387
    3. ' grid' → logprob: -5.528429985046387
    4. ''' → logprob: -5.528429985046387
    5. ''*' → logprob: -6.278429985046387
    6. '+' → logprob: -6.528429985046387
    7. ')' → logprob: -6.528429985046387
    8. '(grid' → logprob: -6.653429985046387
    9. ' if' → logprob: -6.778429985046387
    10. ' ' → logprob: -7.028429985046387

Token 273: ' if' (ID: 538)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.10410356521606445
    2. '+' → logprob: -2.3541035652160645
    3. ' +' → logprob: -5.7291035652160645
    4. '(grid' → logprob: -8.604103088378906
    5. ' grid' → logprob: -8.729103088378906
    6. ')' → logprob: -8.854103088378906
    7. 'str' → logprob: -10.229103088378906
    8. ')+' → logprob: -10.604103088378906
    9. 'num' → logprob: -10.604103088378906
    10. '   ' → logprob: -11.479103088378906

Token 274: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.0031777136027812958
    2. ' mark' → logprob: -5.753177642822266
    3. '(mark' → logprob: -17.128177642822266
    4. 'marked' → logprob: -19.503177642822266
    5. 'markup' → logprob: -20.128177642822266
    6. '
' → logprob: -20.503177642822266
    7. '   ' → logprob: -20.753177642822266
    8. ' ' → logprob: -21.878177642822266
    9. '.mark' → logprob: -22.003177642822266
    10. 'mask' → logprob: -22.128177642822266

Token 275: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[j' → logprob: -12.75000286102295
    3. 'i' → logprob: -18.000003814697266
    4. '```' → logprob: -18.500003814697266
    5. ')[' → logprob: -18.750003814697266
    6. '[' → logprob: -19.125003814697266
    7. '[
' → logprob: -19.625003814697266
    8. ' [' → logprob: -19.875003814697266
    9. '
' → logprob: -20.125003814697266
    10. ')' → logprob: -20.875003814697266

Token 276: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06312388181686401
    2. '[i' → logprob: -2.813123941421509
    3. '[j' → logprob: -6.81312370300293
    4. ']' → logprob: -10.18812370300293
    5. ' ][' → logprob: -11.43812370300293
    6. '[' → logprob: -13.06312370300293
    7. 'i' → logprob: -13.81312370300293
    8. ')[' → logprob: -14.31312370300293
    9. ']][' → logprob: -14.43812370300293
    10. '   ' → logprob: -14.68812370300293

Token 277: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007175540085881948
    2. '[j' → logprob: -7.250717639923096
    3. '][' → logprob: -12.375717163085938
    4. ' j' → logprob: -13.000717163085938
    5. '	j' → logprob: -15.000717163085938
    6. '   ' → logprob: -15.125717163085938
    7. '```' → logprob: -15.750717163085938
    8. ' ' → logprob: -16.250717163085938
    9. ']' → logprob: -16.875717163085938
    10. '$j' → logprob: -17.000717163085938

Token 278: ']' (ID: 60)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11508353054523468
    2. ' else' → logprob: -2.3650834560394287
    3. ']' → logprob: -4.240083694458008
    4. ')' → logprob: -7.990083694458008
    5. '==' → logprob: -11.365083694458008
    6. '}' → logprob: -12.740083694458008
    7. '])' → logprob: -12.990083694458008
    8. ']==' → logprob: -13.490083694458008
    9. '	else' → logprob: -13.865083694458008
    10. '   ' → logprob: -14.490083694458008

Token 279: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47489312291145325
    2. 'else' → logprob: -0.9748930931091309
    3. '==' → logprob: -7.474893093109131
    4. ')' → logprob: -8.349893569946289
    5. ' ==' → logprob: -12.474893569946289
    6. '	else' → logprob: -12.599893569946289
    7. ' ' → logprob: -13.224893569946289
    8. ' )' → logprob: -13.849893569946289
    9. '=='' → logprob: -14.474893569946289
    10. '   ' → logprob: -15.224893569946289

Token 280: ' '' (ID: 461)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.06800297647714615
    2. ' grid' → logprob: -2.943002939224243
    3. ''' → logprob: -4.568003177642822
    4. ''.' → logprob: -6.443003177642822
    5. ')' → logprob: -7.443003177642822
    6. ' '' → logprob: -8.443002700805664
    7. ' ' → logprob: -9.818002700805664
    8. 'num' → logprob: -10.068002700805664
    9. '"' → logprob: -10.318002700805664
    10. 'str' → logprob: -10.443002700805664

Token 281: ' ')' (ID: 35910)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.03824092447757721
    2. ''.' → logprob: -3.538240909576416
    3. ''' → logprob: -5.538240909576416
    4. ' grid' → logprob: -5.788240909576416
    5. ')' → logprob: -7.288240909576416
    6. 'num' → logprob: -7.788240909576416
    7. '.' → logprob: -9.038241386413574
    8. ' ' → logprob: -9.663241386413574
    9. ' '' → logprob: -10.163241386413574
    10. '".' → logprob: -10.538241386413574

Token 282: ' +' (ID: 659)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3928580582141876
    2. '+' → logprob: -1.1428580284118652
    3. 'print' → logprob: -5.517858028411865
    4. ' line' → logprob: -6.517858028411865
    5. '+=' → logprob: -8.267858505249023
    6. ' +' → logprob: -9.642858505249023
    7. '+
' → logprob: -9.767858505249023
    8. ')+' → logprob: -9.892858505249023
    9. '#line' → logprob: -11.517858505249023
    10. '[line' → logprob: -11.642858505249023

Token 283: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.002096253214403987
    2. 'num' → logprob: -6.877096176147461
    3. ' grid' → logprob: -7.502096176147461
    4. ''' → logprob: -8.252096176147461
    5. 'str' → logprob: -8.627096176147461
    6. ''.' → logprob: -10.127096176147461
    7. ''*' → logprob: -11.377096176147461
    8. '(grid' → logprob: -12.377096176147461
    9. '"' → logprob: -12.502096176147461
    10. ''#' → logprob: -12.752096176147461

Token 284: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.750003814697266
    3. ' [' → logprob: -15.500003814697266
    4. 'i' → logprob: -15.625003814697266
    5. '```' → logprob: -15.875003814697266
    6. '[I' → logprob: -16.750003814697266
    7. '\[' → logprob: -17.500003814697266
    8. '[j' → logprob: -17.625003814697266
    9. '   ' → logprob: -17.750003814697266
    10. '[row' → logprob: -18.750003814697266

Token 285: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16079583764076233
    2. '][' → logprob: -1.91079580783844
    3. '[' → logprob: -8.160796165466309
    4. '[j' → logprob: -8.660796165466309
    5. ']' → logprob: -10.160796165466309
    6. 'i' → logprob: -10.535796165466309
    7. ')[' → logprob: -11.785796165466309
    8. '"][' → logprob: -12.035796165466309
    9. ''][' → logprob: -12.035796165466309
    10. '[I' → logprob: -12.035796165466309

Token 286: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.749814019713085e-06
    2. '[j' → logprob: -12.000006675720215
    3. ' j' → logprob: -14.875006675720215
    4. '```' → logprob: -15.750006675720215
    5. '][' → logprob: -16.37500762939453
    6. '	j' → logprob: -17.25000762939453
    7. ']' → logprob: -17.37500762939453
    8. '   ' → logprob: -17.62500762939453
    9. 'i' → logprob: -17.75000762939453
    10. '
' → logprob: -18.00000762939453

Token 287: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09611505270004272
    2. ')' → logprob: -3.2211151123046875
    3. ' +' → logprob: -3.3461151123046875
    4. '+"' → logprob: -4.8461151123046875
    5. '+'' → logprob: -4.9711151123046875
    6. ')+' → logprob: -7.3461151123046875
    7. ' +'' → logprob: -8.346115112304688
    8. '+')' → logprob: -9.221115112304688
    9. ')+'' → logprob: -9.471115112304688
    10. ']' → logprob: -9.596115112304688

Token 288: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43212682008743286
    2. '+' → logprob: -1.557126760482788
    3. '           ' → logprob: -2.432126760482788
    4. ' +' → logprob: -3.682126760482788
    5. '       ' → logprob: -4.557126998901367
    6. '   ' → logprob: -4.932126998901367
    7. ' print' → logprob: -5.682126998901367
    8. 'if' → logprob: -6.807126998901367
    9. ' if' → logprob: -7.307126998901367
    10. '+
' → logprob: -7.807126998901367

Token 289: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01446281373500824
    2. ' print' → logprob: -4.514462947845459
    3. '   ' → logprob: -5.764462947845459
    4. '       ' → logprob: -8.3894624710083
    5. '	print' → logprob: -10.3894624710083
    6. ' ' → logprob: -12.5144624710083
    7. '
' → logprob: -12.8894624710083
    8. '    ' → logprob: -13.1394624710083
    9. '```' → logprob: -13.2644624710083
    10. '+' → logprob: -13.6394624710083

Token 290: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0337427482008934
    2. '(' → logprob: -3.533742666244507
    3. '()' → logprob: -5.533742904663086
    4. '('' → logprob: -10.783742904663086
    5. '("("' → logprob: -12.033742904663086
    6. '(
' → logprob: -13.658742904663086
    7. '(Line' → logprob: -13.783742904663086
    8. '("' → logprob: -13.783742904663086
    9. '(f' → logprob: -14.283742904663086
    10. '(lines' → logprob: -14.908742904663086

Token 291: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ' )' → logprob: -13.500003814697266
    3. '())' → logprob: -13.750003814697266
    4. '()' → logprob: -14.000003814697266
    5. '')' → logprob: -16.250003814697266
    6. '))' → logprob: -16.500003814697266
    7. '`)' → logprob: -16.625003814697266
    8. ')`' → logprob: -17.125003814697266
    9. '")' → logprob: -17.250003814697266
    10. ')
' → logprob: -17.625003814697266

Token 292: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1756367712223437e-05
    2. '("")' → logprob: -11.500011444091797
    3. '(' → logprob: -13.500011444091797
    4. '('' → logprob: -15.875011444091797
    5. '()
' → logprob: -16.500011444091797
    6. ' ()' → logprob: -17.375011444091797
    7. '()<' → logprob: -18.000011444091797
    8. '()?>' → logprob: -19.250011444091797
    9. '()"' → logprob: -19.500011444091797
    10. '()}' → logprob: -19.500011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 292
Tokens correctement prédits (1ère position, stricte): 173
Tokens correctement prédits (1ère position, avec adaptation): 181
Tokens correctement prédits (top 10): 264
Précision stricte (1ère position): 59.25%
Précision adaptée (1ère position): 61.99%
Précision (top 10): 90.41%
================================================================================
