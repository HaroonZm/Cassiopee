================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:28:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, K = map(int, input().split())
books = [[] for _ in range(11)]
for _ in range(N):
    c, g = map(int, input().split())
    books[g].append(c)

dp = [-float('inf')] * (K + 1)
dp[0] = 0
for g in range(1, 11):
    books[g].sort(reverse=True)
    m = len(books[g])
    prefix = [0]
    for i, c in enumerate(books[g], 1):
        prefix.append(prefix[i-1] + c + i - 1)
    ndp = [-float('inf')] * (K + 1)
    for j in range(K + 1):
        if dp[j] == -float('inf'):
            continue
        ndp[j] = max(ndp[j], dp[j])
        for t in range(1, min(m, K - j) + 1):
            ndp[j + t] = max(ndp[j + t], dp[j] + prefix[t])
    dp = ndp
print(dp[K])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' K' (ID: 658)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009580892510712147
    2. ' =' → logprob: -4.759581089019775
    3. ',' → logprob: -7.134581089019775
    4. '+' → logprob: -10.259580612182617
    5. ')' → logprob: -10.384580612182617
    6. '```' → logprob: -10.384580612182617
    7. ':' → logprob: -11.509580612182617
    8. '.' → logprob: -11.634580612182617
    9. '**' → logprob: -11.884580612182617
    10. ' ' → logprob: -12.134580612182617

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.614336371421814
    2. ' input' → logprob: -1.864336371421814
    3. ' ' → logprob: -2.1143364906311035
    4. 'input' → logprob: -2.7393364906311035
    5. 'map' → logprob: -2.8643364906311035
    6. '10' → logprob: -3.1143364906311035
    7. ' int' → logprob: -4.7393364906311035
    8. '0' → logprob: -5.8643364906311035
    9. 'int' → logprob: -6.7393364906311035
    10. ' list' → logprob: -6.8643364906311035

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.047894444316625595
    2. '<|end|>' → logprob: -3.4228944778442383
    3. '(int' → logprob: -5.297894477844238
    4. '(lambda' → logprob: -5.797894477844238
    5. ')' → logprob: -6.547894477844238
    6. '```' → logprob: -6.672894477844238
    7. '<|end|>' → logprob: -6.797894477844238
    8. '(str' → logprob: -7.797894477844238
    9. '(user' → logprob: -8.547894477844238
    10. '(len' → logprob: -8.672894477844238

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3702891767024994
    2. '(' → logprob: -1.6202892065048218
    3. ')' → logprob: -2.2452890872955322
    4. '(user' → logprob: -6.870289325714111
    5. '(int' → logprob: -6.995289325714111
    6. 'input' → logprob: -7.370289325714111
    7. '```' → logprob: -7.370289325714111
    8. '(str' → logprob: -7.495289325714111
    9. '(raw' → logprob: -8.120288848876953
    10. '('' → logprob: -9.120288848876953

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06200925260782242
    2. ' input' → logprob: -2.812009334564209
    3. '(input' → logprob: -10.31200885772705
    4. ')' → logprob: -12.06200885772705
    5. ',input' → logprob: -12.93700885772705
    6. '```' → logprob: -16.187009811401367
    7. '=input' → logprob: -16.687009811401367
    8. '<input' → logprob: -17.062009811401367
    9. '	input' → logprob: -17.187009811401367
    10. '[input' → logprob: -17.437009811401367

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8797216415405273
    2. '())' → logprob: -0.8797216415405273
    3. ')' → logprob: -2.3797216415405273
    4. '(' → logprob: -2.7547216415405273
    5. '('' → logprob: -5.504721641540527
    6. '(()' → logprob: -6.004721641540527
    7. '`()' → logprob: -7.004721641540527
    8. '```' → logprob: -7.129721641540527
    9. '().' → logprob: -7.254721641540527
    10. '(""))' → logprob: -7.254721641540527

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005286411382257938
    2. 'strip' → logprob: -5.25528621673584
    3. ')' → logprob: -10.88028621673584
    4. 'rstrip' → logprob: -11.00528621673584
    5. ' split' → logprob: -11.13028621673584
    6. 'read' → logprob: -13.63028621673584
    7. '(split' → logprob: -15.00528621673584
    8. 'spl' → logprob: -15.00528621673584
    9. 'replace' → logprob: -15.63028621673584
    10. 'startswith' → logprob: -15.88028621673584

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27256155014038086
    2. '())' → logprob: -1.6475615501403809
    3. '))' → logprob: -3.147561550140381
    4. '()' → logprob: -6.272561550140381
    5. '()))' → logprob: -6.897561550140381
    6. '(' → logprob: -9.647562026977539
    7. '`)' → logprob: -9.897562026977539
    8. '('' → logprob: -11.272562026977539
    9. ')`' → logprob: -11.647562026977539
    10. ')))' → logprob: -11.647562026977539

Token 11: 'books' (ID: 20361)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7303032279014587
    2. '#' → logprob: -2.3553032875061035
    3. 'x' → logprob: -2.7303032875061035
    4. '```' → logprob: -3.1053032875061035
    5. ',' → logprob: -3.2303032875061035
    6. 'for' → logprob: -3.3553032875061035
    7. ''' → logprob: -3.6053032875061035
    8. '`' → logprob: -3.6053032875061035
    9. ')' → logprob: -3.7303032875061035
    10. '\n' → logprob: -3.8553032875061035

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06676831841468811
    2. '_' → logprob: -3.0667684078216553
    3. '=' → logprob: -5.441768169403076
    4. ' =' → logprob: -5.816768169403076
    5. '.' → logprob: -5.941768169403076
    6. '[:]' → logprob: -6.066768169403076
    7. '_count' → logprob: -6.566768169403076
    8. '_counts' → logprob: -6.566768169403076
    9. '[]' → logprob: -7.441768169403076
    10. ')' → logprob: -7.941768169403076

Token 13: ' [[]' (ID: 182908)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.12797923386096954
    2. '[]' → logprob: -2.127979278564453
    3. '[' → logprob: -7.377979278564453
    4. ' [' → logprob: -8.002979278564453
    5. ' ' → logprob: -9.877979278564453
    6. '[int' → logprob: -10.752979278564453
    7. '[]}' → logprob: -11.877979278564453
    8. '[input' → logprob: -13.002979278564453
    9. '[:]' → logprob: -13.502979278564453
    10. '{}' → logprob: -14.002979278564453

Token 14: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010908810421824455
    2. '[' → logprob: -4.760908603668213
    3. ']' → logprob: -6.385908603668213
    4. ')]' → logprob: -8.010909080505371
    5. ',' → logprob: -9.385909080505371
    6. '])' → logprob: -10.010909080505371
    7. 'for' → logprob: -10.260909080505371
    8. ' for' → logprob: -10.510909080505371
    9. ')])' → logprob: -10.510909080505371
    10. '),' → logprob: -11.885909080505371

Token 15: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03626444935798645
    2. ' _' → logprob: -3.411264419555664
    3. ' range' → logprob: -6.036264419555664
    4. ' i' → logprob: -8.911264419555664
    5. 'range' → logprob: -10.286264419555664
    6. ' in' → logprob: -10.911264419555664
    7. '_range' → logprob: -11.036264419555664
    8. ' ' → logprob: -11.786264419555664
    9. 'i' → logprob: -12.161264419555664
    10. '(' → logprob: -13.161264419555664

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6679632663726807
    2. '_' → logprob: -1.1679632663726807
    3. 'range' → logprob: -2.2929632663726807
    4. 'in' → logprob: -3.0429632663726807
    5. ' range' → logprob: -4.042963027954102
    6. 'i' → logprob: -4.792963027954102
    7. '0' → logprob: -7.667963027954102
    8. 's' → logprob: -8.167963027954102
    9. ' i' → logprob: -8.417963027954102
    10. ' _' → logprob: -8.417963027954102

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889033854007721
    2. ' range' → logprob: -2.578890323638916
    3. '_' → logprob: -15.328890800476074
    4. '_range' → logprob: -15.828890800476074
    5. ' ' → logprob: -16.328889846801758
    6. 'r' → logprob: -17.328889846801758
    7. '(range' → logprob: -17.828889846801758
    8. 'rang' → logprob: -17.828889846801758
    9. '	range' → logprob: -18.078889846801758
    10. '   ' → logprob: -18.328889846801758

Token 18: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0017181389266625047
    2. '(' → logprob: -6.376718044281006
    3. '(K' → logprob: -11.251718521118164
    4. '(n' → logprob: -13.126718521118164
    5. 'N' → logprob: -14.501718521118164
    6. ')' → logprob: -16.251718521118164
    7. '(len' → logprob: -16.626718521118164
    8. '(int' → logprob: -16.626718521118164
    9. '(
' → logprob: -17.001718521118164
    10. '((' → logprob: -17.126718521118164

Token 19: '11' (ID: 994)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00033713103039190173
    2. 'K' → logprob: -8.000337600708008
    3. ' N' → logprob: -13.625337600708008
    4. '(N' → logprob: -14.500337600708008
    5. '	N' → logprob: -19.625337600708008
    6. '(K' → logprob: -20.000337600708008
    7. '(' → logprob: -20.125337600708008
    8. 'n' → logprob: -20.375337600708008
    9. '_N' → logprob: -20.625337600708008
    10. ' K' → logprob: -20.750337600708008

Token 20: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010616567305987701
    2. ')' → logprob: -9.500105857849121
    3. ']' → logprob: -10.625105857849121
    4. ')])' → logprob: -12.625105857849121
    5. '])' → logprob: -13.625105857849121
    6. ')],' → logprob: -13.875105857849121
    7. '])]' → logprob: -13.875105857849121
    8. ' )' → logprob: -15.250105857849121
    9. '')]' → logprob: -15.500105857849121
    10. '[' → logprob: -16.625106811523438

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00021319588995538652
    2. ' for' → logprob: -8.500213623046875
    3. 'N' → logprob: -13.375213623046875
    4. 'books' → logprob: -13.625213623046875
    5. 'book' → logprob: -14.000213623046875
    6. 'n' → logprob: -14.000213623046875
    7. 'range' → logprob: -14.000213623046875
    8. '```' → logprob: -14.125213623046875
    9. 'A' → logprob: -14.375213623046875
    10. 'count' → logprob: -14.750213623046875

Token 22: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6218479871749878
    2. ' _' → logprob: -1.1218479871749878
    3. '_' → logprob: -1.9968479871749878
    4. 'i' → logprob: -6.621848106384277
    5. ' ' → logprob: -8.371848106384277
    6. '_i' → logprob: -10.996848106384277
    7. ' book' → logprob: -11.871848106384277
    8. ' I' → logprob: -11.996848106384277
    9. ' N' → logprob: -12.371848106384277
    10. ' b' → logprob: -12.496848106384277

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05034526437520981
    2. 'in' → logprob: -3.0503451824188232
    3. 'n' → logprob: -6.550345420837402
    4. '_' → logprob: -9.050345420837402
    5. ' ' → logprob: -9.425345420837402
    6. ' i' → logprob: -10.050345420837402
    7. 'i' → logprob: -10.175345420837402
    8. ' n' → logprob: -11.050345420837402
    9. 'range' → logprob: -12.175345420837402
    10. 's' → logprob: -12.550345420837402

Token 24: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197194382548332
    2. ' range' → logprob: -2.81197190284729
    3. '(range' → logprob: -12.561971664428711
    4. '	range' → logprob: -14.936971664428711
    5. 'ange' → logprob: -16.31197166442871
    6. '_range' → logprob: -16.56197166442871
    7. 'input' → logprob: -16.81197166442871
    8. '(' → logprob: -16.93697166442871
    9. ' ' → logprob: -17.43697166442871
    10. ')' → logprob: -17.56197166442871

Token 25: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6691951155662537
    2. '(K' → logprob: -0.9191951155662537
    3. '(' → logprob: -2.4191951751708984
    4. '(
' → logprob: -10.919195175170898
    5. ' (' → logprob: -11.794195175170898
    6. '(n' → logprob: -11.919195175170898
    7. '(int' → logprob: -12.169195175170898
    8. '(M' → logprob: -13.294195175170898
    9. '(range' → logprob: -13.919195175170898
    10. '(

' → logprob: -14.044195175170898

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008604847243987024
    2. ')' → logprob: -7.625860691070557
    3. '):
' → logprob: -8.500860214233398
    4. ' ):' → logprob: -8.750860214233398
    5. ':' → logprob: -12.125860214233398
    6. '):
' → logprob: -13.125860214233398
    7. ',' → logprob: -13.750860214233398
    8. ' )' → logprob: -13.875860214233398
    9. ']:' → logprob: -15.375860214233398
    10. '):

' → logprob: -15.875860214233398

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0842481330037117
    2. ' book' → logprob: -3.0842480659484863
    3. 'book' → logprob: -4.459248065948486
    4. ' books' → logprob: -4.959248065948486
    5. ' line' → logprob: -5.709248065948486
    6. '```' → logprob: -5.959248065948486
    7. 'books' → logprob: -6.334248065948486
    8. 'b' → logprob: -6.334248065948486
    9. ' ' → logprob: -7.209248065948486
    10. '    ' → logprob: -7.209248065948486

Token 28: ' c' (ID: 274)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.8027369976043701
    2. 'title' → logprob: -2.05273699760437
    3. 'books' → logprob: -2.30273699760437
    4. '   ' → logprob: -2.55273699760437
    5. ' book' → logprob: -2.67773699760437
    6. 't' → logprob: -3.80273699760437
    7. 's' → logprob: -3.92773699760437
    8. ' books' → logprob: -4.302737236022949
    9. '```' → logprob: -4.427737236022949
    10. 'a' → logprob: -4.677737236022949

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16766123473644257
    2. 'ount' → logprob: -2.417661190032959
    3. 'ost' → logprob: -3.792661190032959
    4. ' =' → logprob: -4.417661190032959
    5. 'olor' → logprob: -4.667661190032959
    6. 'ont' → logprob: -5.042661190032959
    7. ' ,' → logprob: -5.917661190032959
    8. '=int' → logprob: -6.667661190032959
    9. 'ol' → logprob: -6.792661190032959
    10. '=' → logprob: -6.792661190032959

Token 30: ' g' (ID: 329)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4174819588661194
    2. ' p' → logprob: -1.5424818992614746
    3. 't' → logprob: -3.6674818992614746
    4. '_' → logprob: -3.6674818992614746
    5. 'v' → logprob: -3.9174818992614746
    6. ' t' → logprob: -4.042481899261475
    7. ' v' → logprob: -4.792481899261475
    8. 'a' → logprob: -5.292481899261475
    9. 's' → logprob: -5.667481899261475
    10. 'k' → logprob: -6.042481899261475

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47692736983299255
    2. '=' → logprob: -0.9769273996353149
    3. ',' → logprob: -5.976927280426025
    4. 'u' → logprob: -9.726927757263184
    5. 't' → logprob: -9.976927757263184
    6. ' ' → logprob: -10.101927757263184
    7. 'iven' → logprob: -10.351927757263184
    8. '=int' → logprob: -10.976927757263184
    9. ' ,' → logprob: -11.476927757263184
    10. 'enerate' → logprob: -11.976927757263184

Token 32: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.020649095997214317
    2. 'map' → logprob: -3.8956491947174072
    3. ' input' → logprob: -9.395648956298828
    4. 'input' → logprob: -11.145648956298828
    5. ' ' → logprob: -11.895648956298828
    6. '	map' → logprob: -14.270648956298828
    7. ' list' → logprob: -14.645648956298828
    8. '   ' → logprob: -14.770648956298828
    9. ' ' → logprob: -15.145648956298828
    10. '  ' → logprob: -15.520648956298828

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007746085175313056
    2. '(' → logprob: -7.250774383544922
    3. '(str' → logprob: -10.375774383544922
    4. '<int' → logprob: -10.875774383544922
    5. '(lambda' → logprob: -12.750774383544922
    6. '(input' → logprob: -12.875774383544922
    7. '[int' → logprob: -13.000774383544922
    8. 'int' → logprob: -13.125774383544922
    9. '<|end|>' → logprob: -14.000774383544922
    10. '```' → logprob: -14.250774383544922

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2817469835281372
    2. ',input' → logprob: -1.4067469835281372
    3. '(input' → logprob: -7.656746864318848
    4. ',int' → logprob: -10.406746864318848
    5. '(' → logprob: -10.406746864318848
    6. '(),' → logprob: -10.531746864318848
    7. 'input' → logprob: -10.531746864318848
    8. ' ,' → logprob: -12.406746864318848
    9. ',line' → logprob: -14.156746864318848
    10. '```' → logprob: -14.281746864318848

Token 35: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519298195838928
    2. ' input' → logprob: -1.501929759979248
    3. '=input' → logprob: -15.626930236816406
    4. '	input' → logprob: -15.876930236816406
    5. ',input' → logprob: -15.876930236816406
    6. '_input' → logprob: -16.376930236816406
    7. ' ' → logprob: -16.501930236816406
    8. ')' → logprob: -16.876930236816406
    9. '<input' → logprob: -17.501930236816406
    10. '(input' → logprob: -17.501930236816406

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9266199160483666e-05
    2. '()' → logprob: -11.125019073486328
    3. ')' → logprob: -12.875019073486328
    4. '())' → logprob: -13.500019073486328
    5. '(' → logprob: -16.125019073486328
    6. ' ().' → logprob: -16.500019073486328
    7. '()-' → logprob: -16.750019073486328
    8. '().__' → logprob: -17.125019073486328
    9. '.' → logprob: -17.500019073486328
    10. '());' → logprob: -18.000019073486328

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.625000953674316
    3. '(split' → logprob: -16.25
    4. 'spl' → logprob: -16.625
    5. 'strip' → logprob: -17.75
    6. 'rstrip' → logprob: -18.375
    7. ')' → logprob: -18.5
    8. 'plit' → logprob: -19.125
    9. '_split' → logprob: -19.5
    10. '.split' → logprob: -19.75

Token 38: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13237904012203217
    2. '())' → logprob: -2.1323790550231934
    3. '()' → logprob: -5.257379055023193
    4. '))' → logprob: -8.632378578186035
    5. '())
' → logprob: -11.007378578186035
    6. ')
' → logprob: -11.382378578186035
    7. ')`' → logprob: -12.132378578186035
    8. '`)' → logprob: -12.507378578186035
    9. '(' → logprob: -13.382378578186035
    10. '()))' → logprob: -13.507378578186035

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33496540784835815
    2. 'books' → logprob: -1.834965467453003
    3. ')' → logprob: -2.709965467453003
    4. '    
' → logprob: -3.584965467453003
    5. '<|end|>' → logprob: -4.709965229034424
    6. ' 
' → logprob: -5.459965229034424
    7. ')
' → logprob: -5.584965229034424
    8. ' books' → logprob: -5.834965229034424
    9. '
' → logprob: -6.584965229034424
    10. ' if' → logprob: -6.709965229034424

Token 40: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' (adapté à ' books') → logprob: -0.014595569111406803
    2. ' books' → logprob: -4.3895955085754395
    3. '   ' → logprob: -6.7645955085754395
    4. 'if' → logprob: -8.889595985412598
    5. ' if' → logprob: -9.139595985412598
    6. '<|end|>' → logprob: -9.139595985412598
    7. '/books' → logprob: -9.389595985412598
    8. '```' → logprob: -9.514595985412598
    9. 'book' → logprob: -9.639595985412598
    10. '    
' → logprob: -9.764595985412598

Token 41: '[g' (ID: 80396)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.002963792532682419
    2. '[g' → logprob: -6.002964019775391
    3. '[' → logprob: -7.627964019775391
    4. ' [' → logprob: -14.75296401977539
    5. '[
' → logprob: -15.87796401977539
    6. '[int' → logprob: -16.25296401977539
    7. '```' → logprob: -16.50296401977539
    8. '[s' → logprob: -16.62796401977539
    9. '[k' → logprob: -16.75296401977539
    10. '[C' → logprob: -16.87796401977539

Token 42: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.001151174888946116
    2. ').' → logprob: -7.376151084899902
    3. '.append' → logprob: -8.001151084899902
    4. ']' → logprob: -8.751151084899902
    5. ' ].' → logprob: -10.751151084899902
    6. '.' → logprob: -12.251151084899902
    7. 'append' → logprob: -13.626151084899902
    8. ']).' → logprob: -13.751151084899902
    9. ''].' → logprob: -14.501151084899902
    10. ')' → logprob: -14.751151084899902

Token 43: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. ' append' → logprob: -14.125000953674316
    3. '.append' → logprob: -15.250000953674316
    4. 'appen' → logprob: -15.375000953674316
    5. '_append' → logprob: -19.250001907348633
    6. '	append' → logprob: -19.250001907348633
    7. 'add' → logprob: -20.250001907348633
    8. 'Append' → logprob: -20.500001907348633
    9. 'app' → logprob: -20.625001907348633
    10. 'appe' → logprob: -21.250001907348633

Token 44: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.057598333805799484
    2. '((' → logprob: -2.932598352432251
    3. '(' → logprob: -5.932598114013672
    4. 'c' → logprob: -10.182598114013672
    5. '([' → logprob: -11.057598114013672
    6. ' (' → logprob: -12.932598114013672
    7. '(
' → logprob: -14.557598114013672
    8. '(f' → logprob: -14.682598114013672
    9. '(a' → logprob: -14.682598114013672
    10. ')c' → logprob: -14.807598114013672

Token 45: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -14.375009536743164
    4. ')

' → logprob: -17.000009536743164
    5. '))' → logprob: -17.250009536743164
    6. ')
' → logprob: -18.500009536743164
    7. ')`' → logprob: -18.875009536743164
    8. '),' → logprob: -19.250009536743164
    9. '`)' → logprob: -19.250009536743164
    10. '')' → logprob: -19.375009536743164

Token 46: 'dp' (ID: 19037)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.06508732587099075
    2. 'for' → logprob: -3.94008731842041
    3. 'dp' → logprob: -4.06508731842041
    4. 'result' → logprob: -4.56508731842041
    5. 'answer' → logprob: -5.06508731842041
    6. 'answers' → logprob: -6.19008731842041
    7. 'selected' → logprob: -6.44008731842041
    8. 'sorted' → logprob: -6.69008731842041
    9. 'ans' → logprob: -7.31508731842041
    10. 'res' → logprob: -7.56508731842041

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00035274302354082465
    2. '=' → logprob: -8.12535285949707
    3. '[' → logprob: -9.87535285949707
    4. '_' → logprob: -13.87535285949707
    5. ' ' → logprob: -14.37535285949707
    6. ' =[' → logprob: -14.37535285949707
    7. '0' → logprob: -14.50035285949707
    8. ')' → logprob: -15.12535285949707
    9. '<|end|>' → logprob: -15.12535285949707
    10. '1' → logprob: -15.37535285949707

Token 48: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12010131776332855
    2. ' [' → logprob: -2.6201012134552
    3. '[[' → logprob: -3.3701012134552
    4. '[-' → logprob: -5.620101451873779
    5. ' [[' → logprob: -6.120101451873779
    6. ' [-' → logprob: -9.995100975036621
    7. '[int' → logprob: -10.745100975036621
    8. '[len' → logprob: -10.995100975036621
    9. '{}' → logprob: -11.245100975036621
    10. '{' → logprob: -11.245100975036621

Token 49: 'float' (ID: 7829)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5460438132286072
    2. '1' → logprob: -1.046043872833252
    3. 'float' → logprob: -2.796043872833252
    4. '100' → logprob: -5.421043872833252
    5. '(' → logprob: -5.796043872833252
    6. 'int' → logprob: -8.046043395996094
    7. '101' → logprob: -8.921043395996094
    8. '999' → logprob: -9.546043395996094
    9. '2' → logprob: -9.796043395996094
    10. '(float' → logprob: -9.921043395996094

Token 50: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.06273780763149261
    2. ''' → logprob: -3.8127377033233643
    3. '('' → logprob: -4.312737941741943
    4. ''ins' → logprob: -5.562737941741943
    5. 'inf' → logprob: -6.062737941741943
    6. '"' → logprob: -6.187737941741943
    7. ''op' → logprob: -6.187737941741943
    8. ''ex' → logprob: -6.187737941741943
    9. ''import' → logprob: -6.187737941741943
    10. ''inc' → logprob: -7.062737941741943

Token 51: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.14500387012958527
    2. ''' → logprob: -2.0200037956237793
    3. ''in' → logprob: -6.645003795623779
    4. '('' → logprob: -7.895003795623779
    5. ''s' → logprob: -8.145004272460938
    6. '6' → logprob: -9.395004272460938
    7. '"' → logprob: -9.520004272460938
    8. '7' → logprob: -10.020004272460938
    9. ''r' → logprob: -10.145004272460938
    10. '8' → logprob: -11.145004272460938

Token 52: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12677595019340515
    2. '')]' → logprob: -2.7517759799957275
    3. ')' → logprob: -3.0017759799957275
    4. ']' → logprob: -5.501775741577148
    5. '),' → logprob: -7.751775741577148
    6. '')' → logprob: -8.001775741577148
    7. ',' → logprob: -8.126775741577148
    8. ' )' → logprob: -8.751775741577148
    9. '']' → logprob: -8.751775741577148
    10. '")]' → logprob: -10.501775741577148

Token 53: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3199215531349182
    2. '+' → logprob: -2.3199214935302734
    3. ' +' → logprob: -2.3199214935302734
    4. '0' → logprob: -3.4449214935302734
    5. ',' → logprob: -3.9449214935302734
    6. '(' → logprob: -4.944921493530273
    7. ')' → logprob: -5.319921493530273
    8. '[N' → logprob: -5.819921493530273
    9. '*' → logprob: -6.569921493530273
    10. ' ' → logprob: -6.569921493530273

Token 54: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.16338272392749786
    2. '(' → logprob: -1.9133827686309814
    3. '101' → logprob: -6.538382530212402
    4. '11' → logprob: -7.413382530212402
    5. '(N' → logprob: -8.288382530212402
    6. '(k' → logprob: -8.413382530212402
    7. '100' → logprob: -8.663382530212402
    8. '102' → logprob: -8.788382530212402
    9. ' (' → logprob: -9.413382530212402
    10. 'K' → logprob: -9.913382530212402

Token 55: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.008657476864755154
    2. '(K' → logprob: -5.133657455444336
    3. ' K' → logprob: -6.758657455444336
    4. '101' → logprob: -7.133657455444336
    5. '100' → logprob: -8.008657455444336
    6. '11' → logprob: -8.383657455444336
    7. '10' → logprob: -10.383657455444336
    8. ' (' → logprob: -10.508657455444336
    9. '(' → logprob: -10.508657455444336
    10. '102' → logprob: -10.883657455444336

Token 56: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026301460340619087
    2. ' +' → logprob: -3.651301383972168
    3. '+
' → logprob: -14.651301383972168
    4. '1' → logprob: -15.401301383972168
    5. '＋' → logprob: -16.026302337646484
    6. '```' → logprob: -16.151302337646484
    7. ' +
' → logprob: -16.401302337646484
    8. ' ' → logprob: -16.651302337646484
    9. '2' → logprob: -17.776302337646484
    10. ')' → logprob: -17.901302337646484

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009758921340107918
    2. ' ' → logprob: -4.634758949279785
    3. '2' → logprob: -13.884758949279785
    4. '```' → logprob: -14.884758949279785
    5. ')' → logprob: -15.009758949279785
    6. '  ' → logprob: -15.384758949279785
    7. '   ' → logprob: -15.509758949279785
    8. ' ' → logprob: -16.25975799560547
    9. '7' → logprob: -16.32225799560547
    10. ' )' → logprob: -16.50975799560547

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1054253011243418e-05
    2. ' ' → logprob: -10.875020980834961
    3. '2' → logprob: -13.500020980834961
    4. '```' → logprob: -16.25002098083496
    5. '   ' → logprob: -16.50002098083496
    6. '10' → logprob: -16.81252098083496
    7. '  ' → logprob: -17.00002098083496
    8. '100' → logprob: -17.06252098083496
    9. '

' → logprob: -17.18752098083496
    10. '7' → logprob: -17.37502098083496

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8590300139039755e-05
    2. ')
' → logprob: -10.125048637390137
    3. ' )' → logprob: -12.000048637390137
    4. '`)' → logprob: -14.625048637390137
    5. '}' → logprob: -15.125048637390137
    6. '))' → logprob: -15.125048637390137
    7. ')`' → logprob: -15.375048637390137
    8. ')

' → logprob: -15.375048637390137
    9. '```' → logprob: -15.500048637390137
    10. '),' → logprob: -15.625048637390137

Token 60: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006064240820705891
    2. '\' → logprob: -6.131064414978027
    3. '
' → logprob: -6.131064414978027
    4. '\n' → logprob: -7.756064414978027
    5. '```' → logprob: -7.756064414978027
    6. '0' → logprob: -8.756064414978027
    7. '[' → logprob: -8.881064414978027
    8. '  
' → logprob: -8.881064414978027
    9. ' dp' → logprob: -9.256064414978027
    10. '(dp' → logprob: -9.256064414978027

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.875000953674316
    3. ' [' → logprob: -16.125
    4. '\[' → logprob: -16.625
    5. '```' → logprob: -16.625
    6. '[
' → logprob: -17.0
    7. '<|end|>' → logprob: -17.125
    8. ' ' → logprob: -18.5625
    9. '[-' → logprob: -18.625
    10. '...' → logprob: -19.3125

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -16.937503814697266
    4. '[' → logprob: -17.062503814697266
    5. '```' → logprob: -17.437503814697266
    6. '000' → logprob: -17.750003814697266
    7. '０' → logprob: -18.000003814697266
    8. '{' → logprob: -18.062503814697266
    9. '00' → logprob: -18.125003814697266
    10. '1' → logprob: -18.187503814697266

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004341261519584805
    2. ' ]' → logprob: -7.750433921813965
    3. ']=' → logprob: -12.750433921813965
    4. ')' → logprob: -15.500433921813965
    5. '`]' → logprob: -16.37543487548828
    6. '=' → logprob: -16.50043487548828
    7. ')]' → logprob: -17.62543487548828
    8. ' =' → logprob: -17.75043487548828
    9. '])' → logprob: -18.50043487548828
    10. '']' → logprob: -18.50043487548828

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811523377895355
    2. '=' → logprob: -1.406152367591858
    3. ' ' → logprob: -13.906152725219727
    4. '0' → logprob: -14.781152725219727
    5. ' ' → logprob: -14.906152725219727
    6. 's' → logprob: -16.656152725219727
    7. '＝' → logprob: -16.906152725219727
    8. '```' → logprob: -17.031152725219727
    9. ',' → logprob: -17.156152725219727
    10. '[' → logprob: -17.156152725219727

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. ' ' → logprob: -18.250019073486328
    4. '۰' → logprob: -18.250019073486328
    5. '00' → logprob: -18.750019073486328
    6. '```' → logprob: -19.375019073486328
    7. '   ' → logprob: -19.937519073486328
    8. '  ' → logprob: -20.500019073486328
    9. '000' → logprob: -20.562519073486328
    10. '1' → logprob: -20.812519073486328

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -18.875001907348633
    4. ' ' → logprob: -19.187501907348633
    5. '1' → logprob: -19.375001907348633
    6. '00' → logprob: -19.500001907348633
    7. '０' → logprob: -20.062501907348633
    8. '000' → logprob: -20.187501907348633
    9. '​' → logprob: -20.312501907348633
    10. '```' → logprob: -20.312501907348633

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2652350664138794
    2. 'for' → logprob: -1.7652350664138794
    3. ' for' → logprob: -3.39023494720459
    4. '\n' → logprob: -4.14023494720459
    5. '<|end|>' → logprob: -4.64023494720459
    6. '```' → logprob: -6.39023494720459
    7. '
' → logprob: -8.26523494720459
    8. ' 
' → logprob: -8.89023494720459
    9. '<|end|>' → logprob: -9.14023494720459
    10. '  
' → logprob: -9.51523494720459

Token 68: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007145775598473847
    2. '\n' → logprob: -7.8757147789001465
    3. ' for' → logprob: -8.375714302062988
    4. '```' → logprob: -9.375714302062988
    5. '<|end|>' → logprob: -12.125714302062988
    6. '
' → logprob: -12.125714302062988
    7. '10' → logprob: -12.625714302062988
    8. '\' → logprob: -13.500714302062988
    9. '``' → logprob: -14.000714302062988
    10. '`' → logprob: -14.375714302062988

Token 69: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.0722583532333374
    2. 'g' → logprob: -2.697258472442627
    3. ' i' → logprob: -6.197258472442627
    4. ' ' → logprob: -9.197257995605469
    5. 'i' → logprob: -9.572257995605469
    6. ' _' → logprob: -10.072257995605469
    7. '_' → logprob: -10.947257995605469
    8. ' ' → logprob: -11.322257995605469
    9. '_g' → logprob: -11.572257995605469
    10. ')' → logprob: -12.072257995605469

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024657866451889277
    2. 'in' → logprob: -6.127465724945068
    3. ' ' → logprob: -8.377466201782227
    4. '<|end|>' → logprob: -11.002466201782227
    5. 'g' → logprob: -11.627466201782227
    6. ' i' → logprob: -12.127466201782227
    7. '	in' → logprob: -12.502466201782227
    8. '1' → logprob: -12.752466201782227
    9. ',' → logprob: -12.877466201782227
    10. '_' → logprob: -13.127466201782227

Token 71: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015028368216007948
    2. ' range' → logprob: -6.501502990722656
    3. '(range' → logprob: -15.126502990722656
    4. '1' → logprob: -16.376502990722656
    5. '	range' → logprob: -17.001502990722656
    6. '[' → logprob: -17.251502990722656
    7. '(' → logprob: -17.626502990722656
    8. '10' → logprob: -18.626502990722656
    9. 'list' → logprob: -18.876502990722656
    10. 'g' → logprob: -18.876502990722656

Token 72: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -13.375001907348633
    3. ' (' → logprob: -15.125001907348633
    4. '(
' → logprob: -15.875001907348633
    5. '(len' → logprob: -17.250001907348633
    6. '<|end|>' → logprob: -19.000001907348633
    7. ' ' → logprob: -19.500001907348633
    8. '10' → logprob: -19.625001907348633
    9. 'g' → logprob: -20.000001907348633
    10. '()' → logprob: -20.375001907348633

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036409306339919567
    2. '11' → logprob: -5.628641128540039
    3. '0' → logprob: -10.503641128540039
    4. '10' → logprob: -11.753641128540039
    5. ' ' → logprob: -12.378641128540039
    6. ')' → logprob: -14.503641128540039
    7. '2' → logprob: -15.128641128540039
    8. '(' → logprob: -15.628641128540039
    9. 'len' → logprob: -15.878641128540039
    10. '

' → logprob: -17.00364112854004

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025486736558377743
    2. ' ,' → logprob: -6.002548694610596
    3. '1' → logprob: -10.002548217773438
    4. '11' → logprob: -10.877548217773438
    5. ',
' → logprob: -13.002548217773438
    6. ')' → logprob: -13.127548217773438
    7. ' ' → logprob: -14.002548217773438
    8. ',K' → logprob: -14.002548217773438
    9. '10' → logprob: -14.377548217773438
    10. ':' → logprob: -14.877548217773438

Token 75: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.000116655595775228
    2. ' ' → logprob: -9.125116348266602
    3. 'len' → logprob: -12.875116348266602
    4. ')' → logprob: -13.125116348266602
    5. '1' → logprob: -13.500116348266602
    6. '```' → logprob: -14.875116348266602
    7. '12' → logprob: -15.250116348266602
    8. 'g' → logprob: -15.750116348266602
    9. '   ' → logprob: -16.0001163482666
    10. '10' → logprob: -16.1251163482666

Token 76: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -4.4060561776859686e-05
    2. '1' → logprob: -10.250043869018555
    3. 'len' → logprob: -12.375043869018555
    4. '12' → logprob: -12.875043869018555
    5. ' ' → logprob: -13.500043869018555
    6. '10' → logprob: -15.875043869018555
    7. ')' → logprob: -16.375043869018555
    8. '```' → logprob: -17.000043869018555
    9. 'g' → logprob: -17.250043869018555
    10. 'k' → logprob: -17.375043869018555

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018792471382766962
    2. ':' → logprob: -9.000187873840332
    3. ')' → logprob: -10.000187873840332
    4. '):
' → logprob: -11.500187873840332
    5. ' ):' → logprob: -11.750187873840332
    6. '+' → logprob: -14.625187873840332
    7. ']:' → logprob: -15.250187873840332
    8. ',' → logprob: -15.875187873840332
    9. '}:' → logprob: -16.25018882751465
    10. '>:' → logprob: -17.12518882751465

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8355337381362915
    2. ' ' → logprob: -0.9605337381362915
    3. '    
' → logprob: -3.210533618927002
    4. ' 
' → logprob: -3.335533618927002
    5. '    ' → logprob: -3.710533618927002
    6. '<|end|>' → logprob: -4.085533618927002
    7. '[' → logprob: -4.210533618927002
    8. '\n' → logprob: -4.710533618927002
    9. '  ' → logprob: -4.960533618927002
    10. '\' → logprob: -5.085533618927002

Token 79: ' books' (ID: 7187)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5035828948020935
    2. ' ' → logprob: -2.0035829544067383
    3. ' new' → logprob: -2.3785829544067383
    4. ' dp' → logprob: -2.7535829544067383
    5. '    ' → logprob: -3.5035829544067383
    6. 'for' → logprob: -3.7535829544067383
    7. ' tmp' → logprob: -4.753582954406738
    8. '[' → logprob: -4.753582954406738
    9. ' temp' → logprob: -5.253582954406738
    10. 'dp' → logprob: -5.253582954406738

Token 80: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.02903442643582821
    2. '[' → logprob: -4.029034614562988
    3. '.sort' → logprob: -4.904034614562988
    4. '.' → logprob: -6.404034614562988
    5. '_sorted' → logprob: -7.279034614562988
    6. 'g' → logprob: -8.029034614562988
    7. '_g' → logprob: -9.029034614562988
    8. ' =' → logprob: -9.404034614562988
    9. '[:]' → logprob: -9.654034614562988
    10. 'sort' → logprob: -9.654034614562988

Token 81: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.2783268988132477
    2. '.sort' → logprob: -2.028326988220215
    3. ')' → logprob: -2.278326988220215
    4. '].' → logprob: -4.903326988220215
    5. '):' → logprob: -7.153326988220215
    6. 'sort' → logprob: -8.778326988220215
    7. '.' → logprob: -8.903326988220215
    8. ':' → logprob: -9.153326988220215
    9. ')=' → logprob: -9.403326988220215
    10. ']' → logprob: -9.528326988220215

Token 82: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.0280383548888494e-06
    2. 'sorted' → logprob: -14.750000953674316
    3. ' sort' → logprob: -15.000000953674316
    4. 'reverse' → logprob: -16.250001907348633
    5. 'append' → logprob: -16.625001907348633
    6. '.sort' → logprob: -16.750001907348633
    7. 's' → logprob: -17.375001907348633
    8. '	sort' → logprob: -17.500001907348633
    9. '```' → logprob: -18.000001907348633
    10. '=' → logprob: -19.000001907348633

Token 83: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.5170950889587402
    2. '()' → logprob: -1.2670950889587402
    3. '(' → logprob: -2.1420950889587402
    4. 'reverse' → logprob: -5.39209508895874
    5. '(
' → logprob: -9.642095565795898
    6. '()
' → logprob: -10.517095565795898
    7. '(key' → logprob: -11.892095565795898
    8. ')' → logprob: -11.892095565795898
    9. '(),' → logprob: -12.142095565795898
    10. ' reverse' → logprob: -12.267095565795898

Token 84: '=True' (ID: 7827)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5786440968513489
    2. '())' → logprob: -0.8286440968513489
    3. ')' → logprob: -6.328644275665283
    4. '(' → logprob: -7.453644275665283
    5. '(),' → logprob: -9.328643798828125
    6. '(True' → logprob: -9.578643798828125
    7. '()]' → logprob: -9.703643798828125
    8. '()
' → logprob: -10.203643798828125
    9. '();)' → logprob: -10.703643798828125
    10. '())
' → logprob: -10.828643798828125

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011840384686365724
    2. '   ' → logprob: -6.876183986663818
    3. ')
' → logprob: -9.376184463500977
    4. ' )' → logprob: -10.251184463500977
    5. ',' → logprob: -12.126184463500977
    6. '<|end|>' → logprob: -12.126184463500977
    7. ' ' → logprob: -12.251184463500977
    8. '[' → logprob: -13.126184463500977
    9. ':' → logprob: -13.126184463500977
    10. '
' → logprob: -13.251184463500977

Token 86: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7387257218360901
    2. 'prefix' → logprob: -1.8637256622314453
    3. ' for' → logprob: -2.1137256622314453
    4. 'sum' → logprob: -2.7387256622314453
    5. 'cum' → logprob: -3.6137256622314453
    6. 'current' → logprob: -3.6137256622314453
    7. 'c' → logprob: -4.238725662231445
    8. ' prefix' → logprob: -4.363725662231445
    9. 'tmp' → logprob: -4.988725662231445
    10. 'temp' → logprob: -4.988725662231445

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7204399704933167
    2. ' =' → logprob: -0.7204399704933167
    3. 'in' → logprob: -4.220439910888672
    4. 'ax' → logprob: -4.720439910888672
    5. 'i' → logprob: -6.595439910888672
    6. 'x' → logprob: -7.345439910888672
    7. 'n' → logprob: -7.970439910888672
    8. 'a' → logprob: -7.970439910888672
    9. '=min' → logprob: -9.220439910888672
    10. '=len' → logprob: -9.345439910888672

Token 89: ' len' (ID: 4631)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.42290452122688293
    2. ' min' → logprob: -1.4229044914245605
    3. '0' → logprob: -3.0479044914245605
    4. 'len' → logprob: -3.0479044914245605
    5. ' len' → logprob: -5.0479044914245605
    6. ' ' → logprob: -6.0479044914245605
    7. '1' → logprob: -10.672904968261719
    8. 'max' → logprob: -10.797904968261719
    9. '[min' → logprob: -10.797904968261719
    10. '10' → logprob: -11.422904968261719

Token 90: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(book' → logprob: -17.125
    3. '(
' → logprob: -17.625
    4. '(b' → logprob: -18.25
    5. ' (' → logprob: -18.875
    6. 'books' → logprob: -19.0
    7. '(s' → logprob: -19.5
    8. '(g' → logprob: -19.875
    9. ' books' → logprob: -20.0
    10. '(

' → logprob: -20.375

Token 91: 'books' (ID: 20361)
  Prédit: 'books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.1007814034819603
    2. '(' → logprob: -2.3507814407348633
    3. ' books' → logprob: -7.725781440734863
    4. 'b' → logprob: -9.225781440734863
    5. ')' → logprob: -10.725781440734863
    6. '(b' → logprob: -13.100781440734863
    7. '/books' → logprob: -13.225781440734863
    8. '.books' → logprob: -13.475781440734863
    9. 'ooks' → logprob: -13.725781440734863
    10. '(
' → logprob: -13.850781440734863

Token 92: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -3.368984107510187e-05
    2. '[' → logprob: -11.000033378601074
    3. 'g' → logprob: -11.250033378601074
    4. ')' → logprob: -12.750033378601074
    5. '(g' → logprob: -14.625033378601074
    6. ')[' → logprob: -15.625033378601074
    7. ' [' → logprob: -16.00003433227539
    8. '```' → logprob: -16.12503433227539
    9. '	g' → logprob: -17.12503433227539
    10. '   ' → logprob: -17.12503433227539

Token 93: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25314927101135254
    2. '])' → logprob: -1.5031492710113525
    3. ')
' → logprob: -7.753149032592773
    4. ']' → logprob: -7.753149032592773
    5. '))' → logprob: -9.128149032592773
    6. ')])' → logprob: -9.503149032592773
    7. '])
' → logprob: -9.878149032592773
    8. ''])' → logprob: -10.878149032592773
    9. '）' → logprob: -11.003149032592773
    10. ' )' → logprob: -11.128149032592773

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6789388060569763
    2. '<|end|>' → logprob: -1.678938865661621
    3. ' 
' → logprob: -2.303938865661621
    4. ' for' → logprob: -2.678938865661621
    5. ' ' → logprob: -3.178938865661621
    6. '  
' → logprob: -3.303938865661621
    7. '   ' → logprob: -3.678938865661621
    8. '    
' → logprob: -4.303938865661621
    9. 'for' → logprob: -4.928938865661621
    10. '\n' → logprob: -5.928938865661621

Token 95: ' prefix' (ID: 18633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8338688611984253
    2. 'prefix' (adapté à ' prefix') → logprob: -1.4588688611984253
    3. ' for' → logprob: -1.5838688611984253
    4. ' prefix' → logprob: -2.958868980407715
    5. 'sum' → logprob: -4.208868980407715
    6. 's' → logprob: -4.333868980407715
    7. 'cum' → logprob: -4.583868980407715
    8. '   ' → logprob: -5.208868980407715
    9. ' acc' → logprob: -5.583868980407715
    10. 'acc' → logprob: -5.708868980407715

Token 96: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.22921402752399445
    2. '_s' → logprob: -1.729214072227478
    3. ' =' → logprob: -4.229214191436768
    4. 'sum' → logprob: -5.229214191436768
    5. '_' → logprob: -5.479214191436768
    6. '=' → logprob: -6.354214191436768
    7. 's' → logprob: -6.729214191436768
    8. '=sum' → logprob: -8.35421371459961
    9. '=_' → logprob: -10.47921371459961
    10. ' sums' → logprob: -10.60421371459961

Token 97: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2014845758676529
    2. ' [' → logprob: -1.7014845609664917
    3. '0' → logprob: -9.701484680175781
    4. ' ' → logprob: -11.951484680175781
    5. '[m' → logprob: -14.201484680175781
    6. '[len' → logprob: -14.201484680175781
    7. ' ' → logprob: -14.826484680175781
    8. '[int' → logprob: -14.951484680175781
    9. '[p' → logprob: -15.326484680175781
    10. '[s' → logprob: -15.826484680175781

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '[' → logprob: -18.250011444091797
    4. '00' → logprob: -18.250011444091797
    5. '۰' → logprob: -18.625011444091797
    6. '   ' → logprob: -19.250011444091797
    7. '  ' → logprob: -19.937511444091797
    8. '
' → logprob: -20.000011444091797
    9. ')' → logprob: -20.062511444091797
    10. '    ' → logprob: -20.062511444091797

Token 99: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011034219060093164
    2. ']
' → logprob: -6.876103401184082
    3. '0' → logprob: -10.501103401184082
    4. '<|end|>' → logprob: -11.626103401184082
    5. ',' → logprob: -11.876103401184082
    6. ' ]' → logprob: -12.001103401184082
    7. 'for' → logprob: -12.501103401184082
    8. ']

' → logprob: -12.876103401184082
    9. ']+' → logprob: -12.876103401184082
    10. ']
' → logprob: -13.001103401184082

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23560117185115814
    2. ' for' → logprob: -2.4856011867523193
    3. '    
' → logprob: -3.3606011867523193
    4. '
' → logprob: -3.4856011867523193
    5. 'for' → logprob: -3.4856011867523193
    6. '  
' → logprob: -4.36060094833374
    7. ' 
' → logprob: -5.11060094833374
    8. ' ' → logprob: -5.36060094833374
    9. '<|end|>' → logprob: -6.11060094833374
    10. '  ' → logprob: -7.11060094833374

Token 101: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3146377205848694
    2. ' for' → logprob: -1.3146376609802246
    3. '0' → logprob: -7.564637660980225
    4. '   ' → logprob: -7.689637660980225
    5. '
' → logprob: -8.939638137817383
    6. '    
' → logprob: -9.439638137817383
    7. ' 
' → logprob: -9.564638137817383
    8. '	for' → logprob: -10.189638137817383
    9. '```' → logprob: -10.689638137817383
    10. ' ' → logprob: -10.939638137817383

Token 102: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.42655718326568604
    2. 'i' → logprob: -1.676557183265686
    3. 'cost' → logprob: -2.6765570640563965
    4. 'x' → logprob: -3.4265570640563965
    5. ' c' → logprob: -4.0515570640563965
    6. ' i' → logprob: -4.3015570640563965
    7. ' cost' → logprob: -4.8015570640563965
    8. 'price' → logprob: -4.9265570640563965
    9. 'v' → logprob: -5.6765570640563965
    10. 'score' → logprob: -5.8015570640563965

Token 103: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016069209203124046
    2. 'in' → logprob: -4.141069412231445
    3. ' ' → logprob: -10.516069412231445
    4. ',' → logprob: -13.016069412231445
    5. '	in' → logprob: -13.141069412231445
    6. 'n' → logprob: -14.016069412231445
    7. '  ' → logprob: -15.016069412231445
    8. 's' → logprob: -15.266069412231445
    9. '1' → logprob: -15.391069412231445
    10. '0' → logprob: -15.516069412231445

Token 104: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11165618151426315
    2. 'cost' → logprob: -2.9866561889648438
    3. ' c' → logprob: -3.8616561889648438
    4. 'score' → logprob: -4.486656188964844
    5. 'price' → logprob: -4.611656188964844
    6. 'v' → logprob: -5.611656188964844
    7. 'pages' → logprob: -6.111656188964844
    8. ' cost' → logprob: -6.236656188964844
    9. 'page' → logprob: -6.361656188964844
    10. 'book' → logprob: -7.236656188964844

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10602445900440216
    2. 'in' → logprob: -2.4810245037078857
    3. 'n' → logprob: -4.106024265289307
    4. ',' → logprob: -8.106024742126465
    5. ' ' → logprob: -8.856024742126465
    6. 's' → logprob: -12.106024742126465
    7. ' n' → logprob: -12.481024742126465
    8. '  ' → logprob: -13.231024742126465
    9. '	in' → logprob: -13.856024742126465
    10. ' i' → logprob: -14.231024742126465

Token 106: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.474078506231308
    2. ' enumerate' → logprob: -0.9740785360336304
    3. '(en' → logprob: -14.724078178405762
    4. ' ' → logprob: -15.224078178405762
    5. 'enum' → logprob: -15.349078178405762
    6. '.enumer' → logprob: -16.099079132080078
    7. '   ' → logprob: -16.224079132080078
    8. 'en' → logprob: -16.724079132080078
    9. '```' → logprob: -16.724079132080078
    10. 'umer' → logprob: -17.099079132080078

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.763666947837919e-05
    2. 'books' → logprob: -10.12504768371582
    3. ' books' → logprob: -12.12504768371582
    4. '(book' → logprob: -13.75004768371582
    5. ' (' → logprob: -14.50004768371582
    6. '_books' → logprob: -15.37504768371582
    7. '/books' → logprob: -15.75004768371582
    8. '(
' → logprob: -17.25004768371582
    9. '(range' → logprob: -17.25004768371582
    10. ' ' → logprob: -17.50004768371582

Token 108: 'books' (ID: 20361)
  Prédit: 'books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.00021033499797340482
    2. ' books' → logprob: -8.500210762023926
    3. ')' → logprob: -12.250210762023926
    4. '   ' → logprob: -13.750210762023926
    5. 'book' → logprob: -15.000210762023926
    6. ' ' → logprob: -15.375210762023926
    7. '/books' → logprob: -16.25020980834961
    8. '  ' → logprob: -16.75020980834961
    9. '.books' → logprob: -16.75020980834961
    10. '_books' → logprob: -17.25020980834961

Token 109: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.00014942926645744592
    2. 'g' → logprob: -9.125149726867676
    3. '[' → logprob: -11.500149726867676
    4. ')' → logprob: -11.500149726867676
    5. '][' → logprob: -12.125149726867676
    6. ']' → logprob: -12.875149726867676
    7. '])' → logprob: -13.125149726867676
    8. 's' → logprob: -13.250149726867676
    9. ')[' → logprob: -13.625149726867676
    10. '   ' → logprob: -13.750149726867676

Token 110: '],' (ID: 2155)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.10805437713861465
    2. ']:' → logprob: -2.4830543994903564
    3. '):' → logprob: -4.358054161071777
    4. ']' → logprob: -5.483054161071777
    5. ']):
' → logprob: -6.858054161071777
    6. '],' → logprob: -7.733054161071777
    7. '   ' → logprob: -8.983054161071777
    8. ':' → logprob: -9.358054161071777
    9. '])' → logprob: -9.733054161071777
    10. '       ' → logprob: -10.108054161071777

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2808130979537964
    2. ' ' → logprob: -1.6558130979537964
    3. ' c' → logprob: -3.905813217163086
    4. 'c' → logprob: -4.780813217163086
    5. ' i' → logprob: -4.780813217163086
    6. '0' → logprob: -5.780813217163086
    7. ')' → logprob: -5.905813217163086
    8. '   ' → logprob: -6.155813217163086
    9. ' lambda' → logprob: -6.155813217163086
    10. 'i' → logprob: -6.280813217163086

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009405235759913921
    2. ' ' → logprob: -7.000940322875977
    3. 'start' → logprob: -10.625940322875977
    4. '0' → logprob: -12.500940322875977
    5. ' start' → logprob: -14.750940322875977
    6. '   ' → logprob: -14.875940322875977
    7. 'c' → logprob: -16.375940322875977
    8. '2' → logprob: -16.625940322875977
    9. '  ' → logprob: -16.625940322875977
    10. '):' → logprob: -17.000940322875977

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03568612039089203
    2. '):
' → logprob: -3.5356860160827637
    3. ':' → logprob: -5.160686016082764
    4. '):
' → logprob: -9.535686492919922
    5. '   ' → logprob: -9.785686492919922
    6. ')' → logprob: -10.660686492919922
    7. ' ):' → logprob: -11.160686492919922
    8. ',' → logprob: -11.785686492919922
    9. ':
' → logprob: -13.035686492919922
    10. ' ):
' → logprob: -13.660686492919922

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005572011577896774
    2. '   ' → logprob: -8.375556945800781
    3. ':' → logprob: -8.750556945800781
    4. '        
' → logprob: -10.125556945800781
    5. '<|end|>' → logprob: -10.125556945800781
    6. ' prefix' → logprob: -10.625556945800781
    7. '(prefix' → logprob: -11.625556945800781
    8. 'prefix' → logprob: -11.750556945800781
    9. '    
' → logprob: -11.875556945800781
    10. '      ' → logprob: -12.000556945800781

Token 115: ' prefix' (ID: 18633)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7252358198165894
    2. ' prefix' → logprob: -1.1002358198165894
    3. 'prefix' (adapté à ' prefix') → logprob: -1.7252358198165894
    4. '   ' → logprob: -5.350235939025879
    5. '(prefix' → logprob: -10.225235939025879
    6. '    ' → logprob: -10.975235939025879
    7. '
' → logprob: -11.350235939025879
    8. '           ' → logprob: -11.600235939025879
    9. '        
' → logprob: -11.850235939025879
    10. '_prefix' → logprob: -11.850235939025879

Token 116: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011291373521089554
    2. '.' → logprob: -4.51129150390625
    3. '=' → logprob: -9.26129150390625
    4. '.app' → logprob: -9.76129150390625
    5. ' =' → logprob: -10.01129150390625
    6. ' .' → logprob: -10.76129150390625
    7. '.extend' → logprob: -11.51129150390625
    8. 'append' → logprob: -12.63629150390625
    9. '.ap' → logprob: -12.76129150390625
    10. '_append' → logprob: -13.63629150390625

Token 117: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.0033951562363654375
    2. 'prefix' → logprob: -5.753395080566406
    3. '(' → logprob: -9.128395080566406
    4. ' prefix' → logprob: -9.128395080566406
    5. '(p' → logprob: -16.128395080566406
    6. '(
' → logprob: -17.253395080566406
    7. '   ' → logprob: -17.253395080566406
    8. '(pref' → logprob: -17.378395080566406
    9. '_prefix' → logprob: -17.628395080566406
    10. ' (' → logprob: -18.003395080566406

Token 118: '[i' (ID: 1768)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.06196891888976097
    2. '[i' → logprob: -2.8119688034057617
    3. '[' → logprob: -13.811968803405762
    4. '   ' → logprob: -16.186969757080078
    5. ' [-' → logprob: -16.186969757080078
    6. '```' → logprob: -16.686969757080078
    7. 'i' → logprob: -18.061969757080078
    8. '-' → logprob: -18.561969757080078
    9. '[j' → logprob: -18.686969757080078
    10. ' ' → logprob: -18.686969757080078

Token 119: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5730171799659729
    2. '+' → logprob: -1.1980171203613281
    3. ' +' → logprob: -2.698017120361328
    4. ']+' → logprob: -2.823017120361328
    5. '-' → logprob: -5.073017120361328
    6. '+c' → logprob: -6.948017120361328
    7. ' ]' → logprob: -9.073017120361328
    8. ' -' → logprob: -9.573017120361328
    9. ' ' → logprob: -9.698017120361328
    10. '])' → logprob: -10.073017120361328

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '-' → logprob: -15.250000953674316
    4. '0' → logprob: -16.25
    5. ']' → logprob: -17.5625
    6. '   ' → logprob: -18.125
    7. 'c' → logprob: -18.375
    8. 'i' → logprob: -18.8125
    9. '```' → logprob: -18.8125
    10. '

' → logprob: -19.625

Token 121: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7742828130722046
    2. '+' → logprob: -0.8992828130722046
    3. '+c' → logprob: -2.024282932281494
    4. 'c' → logprob: -12.399282455444336
    5. ' c' → logprob: -12.774282455444336
    6. ' ' → logprob: -13.024282455444336
    7. '+C' → logprob: -13.899282455444336
    8. ')+' → logprob: -13.899282455444336
    9. ' ' → logprob: -14.024282455444336
    10. '+
' → logprob: -14.149282455444336

Token 122: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9391487836837769
    2. '+' → logprob: -1.1891487836837769
    3. '+c' → logprob: -1.1891487836837769
    4. 'c' → logprob: -10.189148902893066
    5. ' c' → logprob: -11.314148902893066
    6. '+
' → logprob: -12.064148902893066
    7. ' ' → logprob: -12.314148902893066
    8. ' ' → logprob: -12.314148902893066
    9. '+C' → logprob: -12.814148902893066
    10. ')' → logprob: -13.314148902893066

Token 123: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003811025235336274
    2. ' c' → logprob: -7.875380992889404
    3. '<|end|>' → logprob: -14.375381469726562
    4. ' ' → logprob: -15.625381469726562
    5. ')c' → logprob: -16.500381469726562
    6. 'books' → logprob: -16.875381469726562
    7. '   ' → logprob: -17.500381469726562
    8. '	c' → logprob: -17.500381469726562
    9. ')' → logprob: -17.625381469726562
    10. '  ' → logprob: -17.875381469726562

Token 124: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.886803359724581e-05
    2. ')
' → logprob: -9.500079154968262
    3. '
' → logprob: -13.000079154968262
    4. ' )' → logprob: -14.500079154968262
    5. '   ' → logprob: -14.875079154968262
    6. '<|end|>' → logprob: -15.000079154968262
    7. ')

' → logprob: -15.375079154968262
    8. ')`' → logprob: -16.250078201293945
    9. ' ' → logprob: -17.000078201293945
    10. '```' → logprob: -17.250078201293945

Token 125: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0630221366882324
    2. 'i' → logprob: -1.5630221366882324
    3. '(i' → logprob: -2.0630221366882324
    4. ' (' → logprob: -2.1880221366882324
    5. '(' → logprob: -2.5630221366882324
    6. '1' → logprob: -3.3130221366882324
    7. ' ' → logprob: -3.5630221366882324
    8. 'g' → logprob: -4.438022136688232
    9. ' g' → logprob: -4.563022136688232
    10. '10' → logprob: -4.688022136688232

Token 126: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11729000508785248
    2. '-' → logprob: -2.6172900199890137
    3. '*' → logprob: -3.7422900199890137
    4. ' -' → logprob: -5.117290019989014
    5. '**' → logprob: -6.117290019989014
    6. ' *' → logprob: -6.117290019989014
    7. '*i' → logprob: -6.742290019989014
    8. '*(' → logprob: -6.867290019989014
    9. ' )' → logprob: -7.867290019989014
    10. '<|end|>' → logprob: -8.742289543151855

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043567578541114926
    2. ' ' → logprob: -7.750435829162598
    3. '0' → logprob: -13.562935829162598
    4. '2' → logprob: -14.000435829162598
    5. ')' → logprob: -14.500435829162598
    6. '<|end|>' → logprob: -14.625435829162598
    7. '

' → logprob: -15.375435829162598
    8. '-' → logprob: -15.375435829162598
    9. '
' → logprob: -15.500435829162598
    10. '```' → logprob: -15.625435829162598

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.35837464465294e-05
    2. ' ' → logprob: -10.125043869018555
    3. '0' → logprob: -12.750043869018555
    4. '2' → logprob: -15.250043869018555
    5. '<|end|>' → logprob: -16.125043869018555
    6. '   ' → logprob: -17.437543869018555
    7. ')' → logprob: -17.875043869018555
    8. '
' → logprob: -18.000043869018555
    9. '```' → logprob: -18.125043869018555
    10. '100' → logprob: -18.437543869018555

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.849109119386412e-06
    2. ')
' → logprob: -11.750009536743164
    3. ' )' → logprob: -13.625009536743164
    4. '))' → logprob: -15.625009536743164
    5. ')`' → logprob: -16.125009536743164
    6. '<|end|>' → logprob: -16.625009536743164
    7. '*' → logprob: -16.750009536743164
    8. ')

' → logprob: -16.875009536743164
    9. '
' → logprob: -16.875009536743164
    10. '```' → logprob: -16.875009536743164

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046906933188438416
    2. ' for' → logprob: -3.4219069480895996
    3. 'for' → logprob: -5.0469069480896
    4. '<|end|>' → logprob: -5.1719069480896
    5. '       ' → logprob: -7.5469069480896
    6. ')' → logprob: -8.421906471252441
    7. '	for' → logprob: -9.171906471252441
    8. '<|end|>' → logprob: -10.171906471252441
    9. '    ' → logprob: -10.546906471252441
    10. ' ' → logprob: -10.546906471252441

Token 131: ' nd' (ID: 5914)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5033153891563416
    2. ' for' → logprob: -1.0033154487609863
    3. 'for' → logprob: -3.8783154487609863
    4. '       ' → logprob: -6.253315448760986
    5. '<|end|>' → logprob: -6.253315448760986
    6. '    ' → logprob: -6.753315448760986
    7. ' ' → logprob: -6.878315448760986
    8. ')' → logprob: -7.003315448760986
    9. ' range' → logprob: -8.378314971923828
    10. ' i' → logprob: -8.378314971923828

Token 132: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.591415437171236e-05
    2. '=' → logprob: -9.375096321105957
    3. ' =' → logprob: -11.750096321105957
    4. '[' → logprob: -14.375096321105957
    5. '```' → logprob: -14.500096321105957
    6. 'п' → logprob: -15.375096321105957
    7. '_p' → logprob: -15.375096321105957
    8. '

' → logprob: -15.625096321105957
    9. '
' → logprob: -15.875096321105957
    10. '_' → logprob: -16.12509536743164

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009764114394783974
    2. '=' → logprob: -4.634764194488525
    3. '[' → logprob: -11.884763717651367
    4. ' =[' → logprob: -14.134763717651367
    5. ' ' → logprob: -15.384763717651367
    6. ',' → logprob: -16.259763717651367
    7. '[:]' → logprob: -16.509763717651367
    8. ' [' → logprob: -16.634763717651367
    9. '=[' → logprob: -16.884763717651367
    10. ')' → logprob: -17.384763717651367

Token 134: ' [-' (ID: 20191)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8428779244422913
    2. '[' → logprob: -1.7178778648376465
    3. ' dp' → logprob: -1.7178778648376465
    4. '[-' → logprob: -1.8428778648376465
    5. ' [' → logprob: -3.3428778648376465
    6. ' [-' → logprob: -4.0928778648376465
    7. ' ' → logprob: -9.342878341674805
    8. '	dp' → logprob: -9.842878341674805
    9. '(dp' → logprob: -11.092878341674805
    10. '_dp' → logprob: -11.092878341674805

Token 135: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -5.512236498361744e-07
    2. 'f' → logprob: -15.375000953674316
    3. ' float' → logprob: -15.625000953674316
    4. 'flo' → logprob: -17.125
    5. 'inf' → logprob: -17.25
    6. 'fl' → logprob: -17.375
    7. ',float' → logprob: -17.75
    8. '<float' → logprob: -18.5
    9. '(float' → logprob: -18.5
    10. ')' → logprob: -18.75

Token 136: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.76628842484206e-05
    2. ''in' → logprob: -9.875067710876465
    3. ''s' → logprob: -11.375067710876465
    4. ''' → logprob: -13.375067710876465
    5. ' ('' → logprob: -14.125067710876465
    6. ''inc' → logprob: -15.000067710876465
    7. '   ' → logprob: -15.125067710876465
    8. 'inf' → logprob: -15.125067710876465
    9. ''imp' → logprob: -15.500067710876465
    10. '['' → logprob: -15.750067710876465

Token 137: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.008129963040119e-06
    2. ')' → logprob: -12.750003814697266
    3. '')' → logprob: -15.375003814697266
    4. '-inf' → logprob: -15.750003814697266
    5. '

' → logprob: -16.250003814697266
    6. ' inf' → logprob: -16.500003814697266
    7. '
' → logprob: -16.750003814697266
    8. '-' → logprob: -16.750003814697266
    9. '8' → logprob: -16.875003814697266
    10. '```' → logprob: -17.000003814697266

Token 138: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.023212630301713943
    2. ')' → logprob: -4.148212432861328
    3. '')]' → logprob: -5.023212432861328
    4. ']' → logprob: -7.648212432861328
    5. '']' → logprob: -9.648212432861328
    6. '')' → logprob: -11.023212432861328
    7. ' )' → logprob: -12.273212432861328
    8. '")]' → logprob: -13.148212432861328
    9. '))' → logprob: -14.148212432861328
    10. ''' → logprob: -14.148212432861328

Token 139: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10183330625295639
    2. '*' → logprob: -2.6018333435058594
    3. '*(' → logprob: -3.8518333435058594
    4. ')' → logprob: -6.851833343505859
    5. '   ' → logprob: -8.85183334350586
    6. ' *(' → logprob: -9.72683334350586
    7. ' for' → logprob: -10.10183334350586
    8. 'for' → logprob: -10.35183334350586
    9. ')*(' → logprob: -10.72683334350586
    10. ' ' → logprob: -11.10183334350586

Token 140: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.02059631235897541
    2. ' (' → logprob: -3.8955962657928467
    3. '(' → logprob: -10.145596504211426
    4. '(k' → logprob: -11.895596504211426
    5. '(len' → logprob: -11.895596504211426
    6. '(Q' → logprob: -15.270596504211426
    7. 'len' → logprob: -15.520596504211426
    8. '((' → logprob: -15.770596504211426
    9. ' ' → logprob: -15.895596504211426
    10. '(C' → logprob: -16.02059555053711

Token 141: 'K' (ID: 42)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.003978427965193987
    2. 'K' → logprob: -5.628978252410889
    3. ' (' → logprob: -8.128978729248047
    4. '(' → logprob: -10.628978729248047
    5. ' K' → logprob: -10.628978729248047
    6. ')' → logprob: -11.378978729248047
    7. '
' → logprob: -11.753978729248047
    8. '   ' → logprob: -12.503978729248047
    9. '(k' → logprob: -13.128978729248047
    10. ')(' → logprob: -13.503978729248047

Token 142: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004086355213075876
    2. ' +' → logprob: -5.504086494445801
    3. '+
' → logprob: -12.0040864944458
    4. '1' → logprob: -14.0040864944458
    5. '
' → logprob: -14.5040864944458
    6. '```' → logprob: -16.004085540771484
    7. ' +
' → logprob: -16.254085540771484
    8. '+)' → logprob: -17.004085540771484
    9. '＋' → logprob: -17.129085540771484
    10. '+

' → logprob: -17.254085540771484

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014203863975126296
    2. ' ' → logprob: -8.875142097473145
    3. '0' → logprob: -13.875142097473145
    4. ')' → logprob: -14.750142097473145
    5. '   ' → logprob: -14.937642097473145
    6. '```' → logprob: -16.312641143798828
    7. '  ' → logprob: -16.875141143798828
    8. '
' → logprob: -17.000141143798828
    9. '۱' → logprob: -17.250141143798828
    10. '

' → logprob: -17.312641143798828

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.12500286102295
    3. '2' → logprob: -15.37500286102295
    4. '0' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '
' → logprob: -17.312501907348633
    7. '(' → logprob: -17.687501907348633
    8. '```' → logprob: -17.937501907348633
    9. '

' → logprob: -18.312501907348633
    10. 'K' → logprob: -18.375001907348633

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010550802107900381
    2. ')
' → logprob: -6.8760552406311035
    3. '   ' → logprob: -11.001054763793945
    4. ')
' → logprob: -13.501054763793945
    5. ']' → logprob: -13.626054763793945
    6. '
' → logprob: -13.876054763793945
    7. ' )' → logprob: -14.876054763793945
    8. ')

' → logprob: -15.126054763793945
    9. ' ' → logprob: -15.501054763793945
    10. '')' → logprob: -15.626054763793945

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6106296181678772
    2. 'for' → logprob: -1.3606295585632324
    3. ' for' → logprob: -1.6106295585632324
    4. '
' → logprob: -7.735629558563232
    5. '	for' → logprob: -8.48563003540039
    6. '    
' → logprob: -10.23563003540039
    7. '<|end|>' → logprob: -10.48563003540039
    8. '  ' → logprob: -12.23563003540039
    9. ' ' → logprob: -12.48563003540039
    10. '```' → logprob: -12.61063003540039

Token 147: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018766917288303375
    2. ' for' → logprob: -4.0187668800354
    3. '   ' → logprob: -7.3937668800354
    4. '	for' → logprob: -13.643767356872559
    5. ' ' → logprob: -14.893767356872559
    6. '
' → logprob: -15.643767356872559
    7. '  ' → logprob: -17.268766403198242
    8. '    
' → logprob: -17.268766403198242
    9. '```' → logprob: -17.518766403198242
    10. ' 
' → logprob: -17.893766403198242

Token 148: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4760668873786926
    2. ' k' → logprob: -1.4760668277740479
    3. 'j' → logprob: -2.726066827774048
    4. ' j' → logprob: -3.226066827774048
    5. 'x' → logprob: -4.601067066192627
    6. ' x' → logprob: -4.976067066192627
    7. 'w' → logprob: -5.726067066192627
    8. 'used' → logprob: -5.726067066192627
    9. 'i' → logprob: -5.851067066192627
    10. ' used' → logprob: -5.976067066192627

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25196096301078796
    2. 'in' → logprob: -1.5019609928131104
    3. 'n' → logprob: -11.501960754394531
    4. ' ' → logprob: -12.626960754394531
    5. ',' → logprob: -12.876960754394531
    6. '   ' → logprob: -13.001960754394531
    7. '	in' → logprob: -13.126960754394531
    8. '0' → logprob: -13.626960754394531
    9. '+' → logprob: -13.751960754394531
    10. ')' → logprob: -13.751960754394531

Token 150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164329506456852
    2. ' range' → logprob: -4.264164447784424
    3. ')' → logprob: -15.389163970947266
    4. ' ' → logprob: -15.389163970947266
    5. '(range' → logprob: -15.389163970947266
    6. '
' → logprob: -17.139163970947266
    7. '   ' → logprob: -17.264163970947266
    8. '0' → logprob: -17.264163970947266
    9. 'ran' → logprob: -17.639163970947266
    10. 'r' → logprob: -17.764163970947266

Token 151: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.00012892624363303185
    2. '(' → logprob: -9.000128746032715
    3. '(k' → logprob: -13.250128746032715
    4. ' (' → logprob: -13.625128746032715
    5. 'K' → logprob: -13.875128746032715
    6. ')' → logprob: -14.875128746032715
    7. '(
' → logprob: -15.125128746032715
    8. '(len' → logprob: -15.375128746032715
    9. ' K' → logprob: -15.875128746032715
    10. '(j' → logprob: -16.12512969970703

Token 152: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.313264399766922
    2. ' +' → logprob: -1.3132643699645996
    3. '+
' → logprob: -13.688264846801758
    4. '
' → logprob: -15.188264846801758
    5. ',' → logprob: -15.313264846801758
    6. ' +
' → logprob: -15.313264846801758
    7. '＋' → logprob: -15.313264846801758
    8. ' ' → logprob: -16.313264846801758
    9. ' -' → logprob: -16.438264846801758
    10. '-' → logprob: -16.563264846801758

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.825890159234405e-05
    2. ' ' → logprob: -9.625068664550781
    3. '
' → logprob: -13.500068664550781
    4. '

' → logprob: -15.687568664550781
    5. ')' → logprob: -15.937568664550781
    6. '   ' → logprob: -16.18756866455078
    7. ',' → logprob: -16.68756866455078
    8. '```' → logprob: -17.87506866455078
    9. '۱' → logprob: -17.87506866455078
    10. '):
' → logprob: -18.18756866455078

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -12.12501049041748
    3. '+' → logprob: -12.25001049041748
    4. '
' → logprob: -15.87501049041748
    5. ' +' → logprob: -17.125011444091797
    6. '   ' → logprob: -17.250011444091797
    7. ')' → logprob: -18.125011444091797
    8. '-' → logprob: -18.250011444091797
    9. '

' → logprob: -18.625011444091797
    10. 'K' → logprob: -18.750011444091797

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.433829159708694e-05
    2. '):
' → logprob: -9.62507438659668
    3. ')' → logprob: -12.37507438659668
    4. ':' → logprob: -12.62507438659668
    5. ' ):' → logprob: -14.75007438659668
    6. '}:' → logprob: -15.75007438659668
    7. '):
' → logprob: -16.25007438659668
    8. ']:' → logprob: -16.87507438659668
    9. '   ' → logprob: -17.62507438659668
    10. '):

' → logprob: -17.62507438659668

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006305934861302376
    2. ' for' → logprob: -5.131306171417236
    3. 'for' → logprob: -8.756305694580078
    4. ' if' → logprob: -9.506305694580078
    5. '<|end|>' → logprob: -9.631305694580078
    6. '   ' → logprob: -10.381305694580078
    7. ',' → logprob: -10.881305694580078
    8. '	' → logprob: -12.131305694580078
    9. '    ' → logprob: -12.131305694580078
    10. '    ' → logprob: -12.506305694580078

Token 157: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.374388188123703
    2. ' for' → logprob: -1.4993882179260254
    3. '   ' → logprob: -3.3743882179260254
    4. '       ' → logprob: -3.6243882179260254
    5. 'nd' → logprob: -3.8743882179260254
    6. ' nd' → logprob: -5.249388217926025
    7. 'if' (adapté à ' if') → logprob: -6.624388217926025
    8. '
' → logprob: -8.124387741088867
    9. ' if' → logprob: -8.374387741088867
    10. ' ' → logprob: -9.874387741088867

Token 158: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07895225286483765
    2. ' dp' → logprob: -2.5789523124694824
    3. ' ' → logprob: -10.328951835632324
    4. 'd' → logprob: -11.453951835632324
    5. '	dp' → logprob: -12.078951835632324
    6. '(dp' → logprob: -12.203951835632324
    7. '   ' → logprob: -12.453951835632324
    8. '  ' → logprob: -12.953951835632324
    9. ' d' → logprob: -14.203951835632324
    10. '0' → logprob: -14.953951835632324

Token 159: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00014478032244369388
    2. '[' → logprob: -9.250144958496094
    3. 'j' → logprob: -10.250144958496094
    4. '[
' → logprob: -11.750144958496094
    5. '
' → logprob: -13.000144958496094
    6. ' [' → logprob: -13.125144958496094
    7. '```' → logprob: -14.750144958496094
    8. '[i' → logprob: -16.250144958496094
    9. '[J' → logprob: -16.250144958496094
    10. ' j' → logprob: -16.250144958496094

Token 160: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22309547662734985
    2. '!=' → logprob: -1.723095417022705
    3. '>' → logprob: -4.473095417022705
    4. ' ==' → logprob: -5.473095417022705
    5. ' !=' → logprob: -6.348095417022705
    6. ')' → logprob: -6.598095417022705
    7. ']' → logprob: -6.723095417022705
    8. '==-' → logprob: -7.598095417022705
    9. '!=-' → logprob: -8.098095893859863
    10. ']==' → logprob: -8.223095893859863

Token 161: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31485387682914734
    2. '!=' → logprob: -1.5648539066314697
    3. '>' → logprob: -2.9398539066314697
    4. ' ==' → logprob: -5.439853668212891
    5. ' !=' → logprob: -5.939853668212891
    6. '!=-' → logprob: -7.439853668212891
    7. '==-' → logprob: -8.18985366821289
    8. ' >' → logprob: -8.93985366821289
    9. '<' → logprob: -10.06485366821289
    10. '>=' → logprob: -10.06485366821289

Token 162: ' -' (ID: 533)
  Prédit: '-f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-f' → logprob: -0.0027230868581682444
    2. '-inf' → logprob: -6.502723217010498
    3. '-' → logprob: -7.377723217010498
    4. ' -' → logprob: -7.752723217010498
    5. '-floating' → logprob: -10.12772274017334
    6. '-fi' → logprob: -10.25272274017334
    7. '-fluid' → logprob: -11.00272274017334
    8. '-fl' → logprob: -11.12772274017334
    9. '-floor' → logprob: -11.50272274017334
    10. '-fin' → logprob: -11.87772274017334

Token 163: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.128163257315464e-07
    2. ' float' → logprob: -16.125
    3. '1' → logprob: -16.25
    4. 'flo' → logprob: -17.625
    5. 'int' → logprob: -19.0
    6. 'fl' → logprob: -19.125
    7. '   ' → logprob: -19.125
    8. '100' → logprob: -19.125
    9. 'f' → logprob: -19.25
    10. '0' → logprob: -19.25

Token 164: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00040123690268956125
    2. ''in' → logprob: -7.875401020050049
    3. ''' → logprob: -11.375401496887207
    4. 'inf' → logprob: -11.875401496887207
    5. ''s' → logprob: -13.875401496887207
    6. '(' → logprob: -14.250401496887207
    7. '(in' → logprob: -15.625401496887207
    8. ' ('' → logprob: -15.625401496887207
    9. '_inf' → logprob: -15.750401496887207
    10. '("' → logprob: -15.875401496887207

Token 165: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ''in' → logprob: -17.375
    3. ')' → logprob: -17.875
    4. ' inf' → logprob: -18.25
    5. ''' → logprob: -18.5
    6. '-inf' → logprob: -18.875
    7. '   ' → logprob: -20.125
    8. '
' → logprob: -20.25
    9. 'in' → logprob: -20.375
    10. '_inf' → logprob: -20.625

Token 166: ''):
' (ID: 26539)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.4103117287158966
    2. ''):
' → logprob: -1.1603116989135742
    3. '):' → logprob: -4.535311698913574
    4. '')' → logprob: -4.785311698913574
    5. '):
' → logprob: -6.160311698913574
    6. ')' → logprob: -6.410311698913574
    7. ''):
' → logprob: -9.035311698913574
    8. '       ' → logprob: -9.535311698913574
    9. ':' → logprob: -9.535311698913574
    10. ''' → logprob: -11.160311698913574

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018398672342300415
    2. ' continue' → logprob: -4.643398761749268
    3. 'continue' → logprob: -4.768398761749268
    4. '	continue' → logprob: -10.14339828491211
    5. '       ' → logprob: -10.26839828491211
    6. '   ' → logprob: -11.26839828491211
    7. '               ' → logprob: -11.89339828491211
    8. '	       ' → logprob: -12.26839828491211
    9. '		' → logprob: -12.76839828491211
    10. '_continue' → logprob: -12.76839828491211

Token 168: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.25326740741729736
    2. ' continue' → logprob: -1.6282674074172974
    3. '           ' → logprob: -3.753267288208008
    4. '	continue' → logprob: -6.253267288208008
    5. '       ' → logprob: -7.003267288208008
    6. '               ' → logprob: -7.253267288208008
    7. '
' → logprob: -8.128267288208008
    8. '_continue' → logprob: -9.878267288208008
    9. 'contin' → logprob: -10.003267288208008
    10. '   ' → logprob: -10.253267288208008

Token 169: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028927286621183157
    2. ' for' → logprob: -6.87789249420166
    3. '   ' → logprob: -7.25289249420166
    4. '
' → logprob: -7.50289249420166
    5. '<|end|>' → logprob: -8.50289249420166
    6. 'for' → logprob: -9.00289249420166
    7. '	' → logprob: -9.37789249420166
    8. '	for' → logprob: -10.37789249420166
    9. '           ' → logprob: -10.50289249420166
    10. ')' → logprob: -10.62789249420166

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036669373512268066
    2. ' for' → logprob: -6.003666877746582
    3. '   ' → logprob: -7.003666877746582
    4. 'for' → logprob: -8.253666877746582
    5. '           ' → logprob: -12.253666877746582
    6. '<|end|>' → logprob: -12.378666877746582
    7. '	for' → logprob: -12.753666877746582
    8. 'continue' → logprob: -13.378666877746582
    9. '        
' → logprob: -13.503666877746582
    10. '```' → logprob: -13.503666877746582

Token 171: ' nd' (ID: 5914)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5571092367172241
    2. '   ' → logprob: -1.4321092367172241
    3. ' for' → logprob: -1.6821092367172241
    4. 'nd' (adapté à ' nd') → logprob: -6.557109355926514
    5. ' nd' → logprob: -7.807109355926514
    6. '
' → logprob: -8.307108879089355
    7. '    
' → logprob: -8.932108879089355
    8. '       ' → logprob: -9.807108879089355
    9. '	for' → logprob: -10.182108879089355
    10. '  ' → logprob: -10.682108879089355

Token 172: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -12.625020027160645
    3. 'dp' → logprob: -12.750020027160645
    4. ' p' → logprob: -13.000020027160645
    5. '
' → logprob: -13.125020027160645
    6. '```' → logprob: -13.250020027160645
    7. '[p' → logprob: -13.375020027160645
    8. '   ' → logprob: -13.750020027160645
    9. 'п' → logprob: -14.625020027160645
    10. '

' → logprob: -15.000020027160645

Token 173: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.01428268477320671
    2. '[' → logprob: -4.264282703399658
    3. '[
' → logprob: -10.6392822265625
    4. ')[' → logprob: -10.8892822265625
    5. '[js' → logprob: -11.2642822265625
    6. '=' → logprob: -11.3892822265625
    7. '[i' → logprob: -11.6392822265625
    8. ' [' → logprob: -11.8892822265625
    9. '[max' → logprob: -12.2642822265625
    10. 'for' → logprob: -12.3892822265625

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005109595600515604
    2. ']=' → logprob: -5.380109786987305
    3. ' ]' → logprob: -8.505109786987305
    4. ')' → logprob: -8.505109786987305
    5. '=' → logprob: -9.880109786987305
    6. '])' → logprob: -11.005109786987305
    7. ' =' → logprob: -12.255109786987305
    8. ')=' → logprob: -12.630109786987305
    9. ')]' → logprob: -13.130109786987305
    10. '
' → logprob: -13.130109786987305

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014227792620658875
    2. ' =' → logprob: -4.264227867126465
    3. '=max' → logprob: -9.764227867126465
    4. '=
' → logprob: -12.264227867126465
    5. 'max' → logprob: -14.014227867126465
    6. ']=' → logprob: -15.014227867126465
    7. ')=' → logprob: -15.514227867126465
    8. '
' → logprob: -15.764227867126465
    9. ',' → logprob: -16.01422691345215
    10. '=

' → logprob: -16.13922691345215

Token 176: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013770760968327522
    2. 'max' → logprob: -4.763770580291748
    3. ' dp' → logprob: -5.388770580291748
    4. ' max' → logprob: -7.513770580291748
    5. 'd' → logprob: -11.638771057128906
    6. '   ' → logprob: -11.888771057128906
    7. '	dp' → logprob: -11.888771057128906
    8. ' ' → logprob: -12.888771057128906
    9. '(dp' → logprob: -14.263771057128906
    10. 'dc' → logprob: -14.263771057128906

Token 177: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.00026979928952641785
    2. '(' → logprob: -8.375269889831543
    3. 'nd' → logprob: -11.000269889831543
    4. '(n' → logprob: -11.250269889831543
    5. '(dp' → logprob: -11.750269889831543
    6. '(
' → logprob: -13.750269889831543
    7. '(

' → logprob: -16.250268936157227
    8. '```' → logprob: -16.500268936157227
    9. ' nd' → logprob: -16.750268936157227
    10. '   ' → logprob: -17.000268936157227

Token 178: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.776898251497187e-05
    2. 'dp' → logprob: -11.0000581741333
    3. '
' → logprob: -11.5000581741333
    4. ')' → logprob: -12.2500581741333
    5. '[j' → logprob: -12.7500581741333
    6. '

' → logprob: -12.8750581741333
    7. 'xp' → logprob: -13.3750581741333
    8. '   ' → logprob: -13.8750581741333
    9. 'mp' → logprob: -14.1875581741333
    10. 'pf' → logprob: -14.2500581741333

Token 179: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0802738870552275e-05
    2. '[' → logprob: -12.25001049041748
    3. '[
' → logprob: -12.87501049041748
    4. '[n' → logprob: -13.87501049041748
    5. ',j' → logprob: -14.50001049041748
    6. '[i' → logprob: -14.50001049041748
    7. '```' → logprob: -15.25001049041748
    8. 'j' → logprob: -15.37501049041748
    9. ')' → logprob: -15.50001049041748
    10. '
' → logprob: -15.75001049041748

Token 180: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1650404930114746
    2. '[j' → logprob: -2.1650404930114746
    3. ',j' → logprob: -3.6650404930114746
    4. '],' → logprob: -4.540040493011475
    5. ' ,' → logprob: -6.915040493011475
    6. '[' → logprob: -10.415040969848633
    7. '),' → logprob: -10.415040969848633
    8. '],[' → logprob: -10.915040969848633
    9. ']' → logprob: -11.540040969848633
    10. ',[' → logprob: -11.665040969848633

Token 181: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005267076659947634
    2. ' dp' → logprob: -5.255267143249512
    3. '       ' → logprob: -10.755267143249512
    4. '   ' → logprob: -12.255267143249512
    5. '	dp' → logprob: -12.880267143249512
    6. '           ' → logprob: -13.005267143249512
    7. '(dp' → logprob: -14.255267143249512
    8. ' ' → logprob: -14.630267143249512
    9. '    ' → logprob: -15.880267143249512
    10. 'dc' → logprob: -16.130266189575195

Token 182: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.8889261304575484e-06
    2. 'j' → logprob: -12.750003814697266
    3. '[' → logprob: -15.250003814697266
    4. ' [' → logprob: -15.500003814697266
    5. '[
' → logprob: -15.875003814697266
    6. ')[' → logprob: -16.000003814697266
    7. '
' → logprob: -16.500003814697266
    8. '   ' → logprob: -17.125003814697266
    9. '][' → logprob: -17.375003814697266
    10. ')' → logprob: -17.625003814697266

Token 183: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31336504220962524
    2. ')
' → logprob: -1.3133649826049805
    3. '   ' → logprob: -9.81336498260498
    4. ')
' → logprob: -10.18836498260498
    5. ' )' → logprob: -12.56336498260498
    6. ' )
' → logprob: -12.93836498260498
    7. '       ' → logprob: -13.06336498260498
    8. ')

' → logprob: -13.18836498260498
    9. ')`
' → logprob: -16.063365936279297
    10. '
' → logprob: -16.438365936279297

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06770981103181839
    2. ' for' → logprob: -3.3177099227905273
    3. '   ' → logprob: -3.8177099227905273
    4. 'for' → logprob: -4.942709922790527
    5. '        
' → logprob: -10.317709922790527
    6. '    
' → logprob: -11.067709922790527
    7. '    ' → logprob: -11.192709922790527
    8. '
' → logprob: -11.317709922790527
    9. '<|end|>' → logprob: -11.317709922790527
    10. ' ' → logprob: -11.567709922790527

Token 185: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2523309886455536
    2. ' for' → logprob: -1.502331018447876
    3. '       ' → logprob: -7.877330780029297
    4. '   ' → logprob: -11.002330780029297
    5. ' ' → logprob: -12.752330780029297
    6. '	for' → logprob: -14.377330780029297
    7. '
' → logprob: -14.502330780029297
    8. '        
' → logprob: -14.877330780029297
    9. '  ' → logprob: -15.002330780029297
    10. ' 
' → logprob: -15.127330780029297

Token 186: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9070026278495789
    2. 'i' → logprob: -1.1570026874542236
    3. 'k' → logprob: -1.7820026874542236
    4. 't' → logprob: -3.1570026874542236
    5. 'l' → logprob: -4.0320024490356445
    6. ' x' → logprob: -4.4070024490356445
    7. ' i' → logprob: -4.5320024490356445
    8. 'cnt' → logprob: -4.9070024490356445
    9. 'take' → logprob: -5.2820024490356445
    10. 'taken' → logprob: -5.5320024490356445

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0001843485952122137
    2. 'in' → logprob: -8.625184059143066
    3. ' ' → logprob: -12.875184059143066
    4. 't' → logprob: -13.875184059143066
    5. ',' → logprob: -14.500184059143066
    6. '1' → logprob: -15.375184059143066
    7. 's' → logprob: -15.875184059143066
    8. '<|end|>' → logprob: -16.750185012817383
    9. '	in' → logprob: -16.875185012817383
    10. 'n' → logprob: -17.250185012817383

Token 188: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061977654695510864
    2. ' range' → logprob: -2.8119776248931885
    3. '(range' → logprob: -11.68697738647461
    4. '	range' → logprob: -14.68697738647461
    5. 'prefix' → logprob: -14.93697738647461
    6. 'books' → logprob: -15.18697738647461
    7. ' ' → logprob: -16.31197738647461
    8. '
' → logprob: -16.56197738647461
    9. 'ran' → logprob: -16.93697738647461
    10. ' xrange' → logprob: -17.06197738647461

Token 189: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014322984963655472
    2. '(m' → logprob: -4.264322757720947
    3. '1' → logprob: -9.389323234558105
    4. '(min' → logprob: -9.514323234558105
    5. '(len' → logprob: -13.639323234558105
    6. ' (' → logprob: -14.889323234558105
    7. 'm' → logprob: -15.639323234558105
    8. '(max' → logprob: -15.764323234558105
    9. ' ' → logprob: -16.38932228088379
    10. 'min' → logprob: -17.88932228088379

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05764278024435043
    2. 'm' → logprob: -2.932642698287964
    3. 'min' → logprob: -5.932642936706543
    4. 'len' → logprob: -9.557642936706543
    5. ' ' → logprob: -11.682642936706543
    6. ' m' → logprob: -11.807642936706543
    7. ' min' → logprob: -12.182642936706543
    8. 'max' → logprob: -12.432642936706543
    9. '(' → logprob: -12.807642936706543
    10. '0' → logprob: -13.057642936706543

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005626562051475048
    2. ',min' → logprob: -5.505626678466797
    3. ',m' → logprob: -6.505626678466797
    4. ' ,' → logprob: -10.005626678466797
    5. ',
' → logprob: -12.505626678466797
    6. ',len' → logprob: -13.505626678466797
    7. 'min' → logprob: -13.630626678466797
    8. ' min' → logprob: -16.130626678466797
    9. '(min' → logprob: -16.505626678466797
    10. ',max' → logprob: -17.005626678466797

Token 192: ' min' (ID: 1349)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.014909187331795692
    2. 'min' → logprob: -4.389909267425537
    3. ' m' → logprob: -6.389909267425537
    4. ' min' → logprob: -7.264909267425537
    5. '
' → logprob: -11.639908790588379
    6. 'len' → logprob: -12.139908790588379
    7. '   ' → logprob: -13.514908790588379
    8. ' ' → logprob: -14.014908790588379
    9. '	m' → logprob: -14.639908790588379
    10. '(m' → logprob: -15.139908790588379

Token 193: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.750001907348633
    3. '(len' → logprob: -15.125001907348633
    4. '(K' → logprob: -16.625001907348633
    5. '((' → logprob: -17.375001907348633
    6. '(k' → logprob: -17.875001907348633
    7. '(min' → logprob: -18.625001907348633
    8. '(
' → logprob: -18.625001907348633
    9. ' (' → logprob: -19.125001907348633
    10. 'm' → logprob: -19.125001907348633

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30311787128448486
    2. ',K' → logprob: -1.9281178712844849
    3. '+' → logprob: -2.1781177520751953
    4. ' +' → logprob: -6.053117752075195
    5. ' ,' → logprob: -8.178117752075195
    6. ',j' → logprob: -9.678117752075195
    7. '(K' → logprob: -10.428117752075195
    8. ',k' → logprob: -10.678117752075195
    9. ',
' → logprob: -11.303117752075195
    10. ',len' → logprob: -11.678117752075195

Token 195: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.03805112838745117
    2. ' K' → logprob: -3.288051128387451
    3. '(K' → logprob: -11.78805160522461
    4. ' ' → logprob: -13.91305160522461
    5. '
' → logprob: -15.03805160522461
    6. '   ' → logprob: -15.28805160522461
    7. ')' → logprob: -15.53805160522461
    8. ',K' → logprob: -16.03805160522461
    9. '	K' → logprob: -16.16305160522461
    10. ' (' → logprob: -16.28805160522461

Token 196: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.003647353034466505
    2. '-j' → logprob: -6.003647327423096
    3. '-' → logprob: -6.753647327423096
    4. '-k' → logprob: -12.878647804260254
    5. '-J' → logprob: -14.378647804260254
    6. '+' → logprob: -15.003647804260254
    7. '-K' → logprob: -15.003647804260254
    8. ' ' → logprob: -15.253647804260254
    9. '   ' → logprob: -15.878647804260254
    10. ')' → logprob: -17.128646850585938

Token 197: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005235887598246336
    2. ' j' → logprob: -5.25523567199707
    3. '_j' → logprob: -14.13023567199707
    4. '[j' → logprob: -14.88023567199707
    5. '
' → logprob: -15.38023567199707
    6. ')' → logprob: -15.50523567199707
    7. '-j' → logprob: -16.13023567199707
    8. ' ' → logprob: -16.63023567199707
    9. '   ' → logprob: -16.63023567199707
    10. '```' → logprob: -17.00523567199707

Token 198: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007779348641633987
    2. ')+' → logprob: -4.882779121398926
    3. '+' → logprob: -8.882779121398926
    4. '   ' → logprob: -10.632779121398926
    5. ' )' → logprob: -12.132779121398926
    6. ' +' → logprob: -12.632779121398926
    7. ')
' → logprob: -15.007779121398926
    8. '
' → logprob: -15.257779121398926
    9. '```' → logprob: -15.257779121398926
    10. ' ' → logprob: -15.382779121398926

Token 199: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008109425194561481
    2. ' +' → logprob: -4.8831095695495605
    3. ')' → logprob: -7.8831095695495605
    4. ')+' → logprob: -9.008109092712402
    5. '   ' → logprob: -13.258109092712402
    6. '+
' → logprob: -14.633109092712402
    7. '):
' → logprob: -15.133109092712402
    8. '):' → logprob: -15.258109092712402
    9. '```' → logprob: -15.383109092712402
    10. ']+' → logprob: -15.633109092712402

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '
' → logprob: -17.62537956237793
    4. ')' → logprob: -17.62537956237793
    5. '```' → logprob: -17.75037956237793
    6. '   ' → logprob: -18.06287956237793
    7. '۱' → logprob: -18.93787956237793
    8. '  ' → logprob: -19.68787956237793
    9. '2' → logprob: -19.81287956237793
    10. '১' → logprob: -19.87537956237793

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.375012397766113
    3. '
' → logprob: -15.500012397766113
    4. ')' → logprob: -15.500012397766113
    5. '```' → logprob: -16.625011444091797
    6. '   ' → logprob: -16.750011444091797
    7. '

' → logprob: -17.625011444091797
    8. '):
' → logprob: -17.750011444091797
    9. '(' → logprob: -17.875011444091797
    10. '2' → logprob: -18.437511444091797

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5759978294372559
    2. '):
' → logprob: -0.8259978294372559
    3. ')' → logprob: -10.325998306274414
    4. '):
' → logprob: -10.950998306274414
    5. '):

' → logprob: -12.825998306274414
    6. ':' → logprob: -13.450998306274414
    7. ' ):
' → logprob: -13.575998306274414
    8. '       ' → logprob: -13.700998306274414
    9. ' ):' → logprob: -14.200998306274414
    10. '   ' → logprob: -14.450998306274414

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0088133430108428
    2. '       ' → logprob: -5.508813381195068
    3. '               ' → logprob: -6.133813381195068
    4. '<|end|>' → logprob: -6.758813381195068
    5. ':' → logprob: -7.883813381195068
    6. ',' → logprob: -8.75881290435791
    7. ':
' → logprob: -9.25881290435791
    8. '):
' → logprob: -9.38381290435791
    9. '<|end|>' → logprob: -9.38381290435791
    10. '   ' → logprob: -9.38381290435791

Token 204: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.0399402417242527
    2. 'nd' (adapté à ' nd') → logprob: -3.414940357208252
    3. '               ' → logprob: -5.539940357208252
    4. '           ' → logprob: -6.164940357208252
    5. '                
' → logprob: -9.914939880371094
    6. '            ' → logprob: -10.789939880371094
    7. '
' → logprob: -10.914939880371094
    8. '                   ' → logprob: -11.039939880371094
    9. ' if' → logprob: -11.164939880371094
    10. '            
' → logprob: -11.164939880371094

Token 205: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.246537173457909e-06
    2. 'dp' → logprob: -12.750003814697266
    3. '[' → logprob: -15.125003814697266
    4. '```' → logprob: -15.625003814697266
    5. 'п' → logprob: -15.750003814697266
    6. '
' → logprob: -16.500003814697266
    7. '[p' → logprob: -16.625003814697266
    8. 'pf' → logprob: -16.625003814697266
    9. '[
' → logprob: -17.000003814697266
    10. 'f' → logprob: -17.000003814697266

Token 206: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.250006675720215
    3. 'j' → logprob: -13.875006675720215
    4. '```' → logprob: -14.625006675720215
    5. '\[' → logprob: -15.500006675720215
    6. ' [' → logprob: -15.625006675720215
    7. '[
' → logprob: -15.875006675720215
    8. '[t' → logprob: -16.00000762939453
    9. '
' → logprob: -17.25000762939453
    10. '[i' → logprob: -17.50000762939453

Token 207: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7253379225730896
    2. '+t' → logprob: -0.9753379225730896
    3. ' +' → logprob: -1.9753379821777344
    4. ']' → logprob: -10.225337982177734
    5. '+
' → logprob: -11.850337982177734
    6. '+j' → logprob: -12.600337982177734
    7. '[' → logprob: -12.725337982177734
    8. '[t' → logprob: -12.850337982177734
    9. '＋' → logprob: -13.600337982177734
    10. '+]' → logprob: -13.850337982177734

Token 208: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.9504606825648807e-05
    2. ' t' → logprob: -10.875019073486328
    3. '`t' → logprob: -14.625019073486328
    4. '	t' → logprob: -18.500019073486328
    5. ')t' → logprob: -18.750019073486328
    6. '```' → logprob: -19.750019073486328
    7. '
' → logprob: -20.375019073486328
    8. 'т' → logprob: -21.000019073486328
    9. ']' → logprob: -21.000019073486328
    10. '+t' → logprob: -21.125019073486328

Token 209: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.236549335066229e-05
    2. ' ]' → logprob: -11.125021934509277
    3. ']=' → logprob: -12.250021934509277
    4. ')' → logprob: -13.000021934509277
    5. '])' → logprob: -15.000021934509277
    6. '=' → logprob: -16.125022888183594
    7. ' =' → logprob: -16.750022888183594
    8. ']
' → logprob: -17.375022888183594
    9. ')]' → logprob: -17.500022888183594
    10. '],' → logprob: -17.875022888183594

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31339094042778015
    2. ' =' → logprob: -1.3133909702301025
    3. '=max' → logprob: -9.563390731811523
    4. ')' → logprob: -10.313390731811523
    5. ']' → logprob: -11.063390731811523
    6. 'max' → logprob: -12.188390731811523
    7. ',' → logprob: -13.313390731811523
    8. ']=' → logprob: -13.438390731811523
    9. ')=' → logprob: -13.688390731811523
    10. '>' → logprob: -15.188390731811523

Token 211: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6931473612785339
    2. 'max' → logprob: -0.6931473612785339
    3. '	max' → logprob: -16.068147659301758
    4. '(max' → logprob: -17.568147659301758
    5. '=max' → logprob: -18.318147659301758
    6. '[max' → logprob: -18.443147659301758
    7. ',max' → logprob: -19.193147659301758
    8. ' ' → logprob: -20.443147659301758
    9. ' ' → logprob: -20.568147659301758
    10. '_max' → logprob: -20.693147659301758

Token 212: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.0002390594017924741
    2. '(' → logprob: -8.375239372253418
    3. '(
' → logprob: -12.000239372253418
    4. '(n' → logprob: -13.250239372253418
    5. ' (' → logprob: -15.000239372253418
    6. 'nd' → logprob: -15.875239372253418
    7. '```' → logprob: -17.1252384185791
    8. ' nd' → logprob: -17.1252384185791
    9. '(

' → logprob: -17.5002384185791
    10. '(nt' → logprob: -17.8752384185791

Token 213: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008255873690359294
    2. 'dp' → logprob: -7.75082540512085
    3. '[j' → logprob: -8.000825881958008
    4. '
' → logprob: -10.875825881958008
    5. '(j' → logprob: -12.125825881958008
    6. 'pd' → logprob: -12.500825881958008
    7. 'pt' → logprob: -12.500825881958008
    8. 'pf' → logprob: -12.750825881958008
    9. '_dp' → logprob: -13.125825881958008
    10. ')' → logprob: -13.375825881958008

Token 214: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00010831133840838447
    2. '[
' → logprob: -10.50010871887207
    3. 'j' → logprob: -11.12510871887207
    4. ',j' → logprob: -11.12510871887207
    5. '[' → logprob: -11.25010871887207
    6. '][' → logprob: -11.75010871887207
    7. '
' → logprob: -12.00010871887207
    8. ',' → logprob: -12.87510871887207
    9. ']' → logprob: -12.87510871887207
    10. '```' → logprob: -13.00010871887207

Token 215: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4547649621963501
    2. '+t' → logprob: -1.07976496219635
    3. ' +' → logprob: -4.8297648429870605
    4. '[j' → logprob: -4.8297648429870605
    5. '+j' → logprob: -4.9547648429870605
    6. '[t' → logprob: -6.3297648429870605
    7. 'j' → logprob: -8.329765319824219
    8. '][' → logprob: -8.454765319824219
    9. '[' → logprob: -8.454765319824219
    10. ']' → logprob: -8.954765319824219

Token 216: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004971170332282782
    2. ' t' → logprob: -5.379971027374268
    3. '
' → logprob: -9.129971504211426
    4. 'j' → logprob: -9.754971504211426
    5. '_t' → logprob: -9.879971504211426
    6. '   ' → logprob: -10.629971504211426
    7. '[t' → logprob: -11.504971504211426
    8. '`t' → logprob: -11.629971504211426
    9. '1' → logprob: -11.754971504211426
    10. ' ' → logprob: -11.879971504211426

Token 217: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006784808938391507
    2. '],' → logprob: -7.500678539276123
    3. ' ,' → logprob: -9.000678062438965
    4. '),' → logprob: -13.750678062438965
    5. ',
' → logprob: -14.375678062438965
    6. ']' → logprob: -16.12567901611328
    7. ' ],' → logprob: -16.50067901611328
    8. 'dp' → logprob: -17.00067901611328
    9. ',n' → logprob: -17.25067901611328
    10. '`,' → logprob: -17.75067901611328

Token 218: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03811894729733467
    2. ' dp' → logprob: -3.288118839263916
    3. '           ' → logprob: -10.538119316101074
    4. 'nd' → logprob: -11.538119316101074
    5. '	dp' → logprob: -11.788119316101074
    6. '   ' → logprob: -11.788119316101074
    7. '       ' → logprob: -12.038119316101074
    8. '               ' → logprob: -12.413119316101074
    9. '(dp' → logprob: -12.913119316101074
    10. ' ' → logprob: -13.288119316101074

Token 219: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00022129806166049093
    2. 'j' → logprob: -8.500221252441406
    3. '[' → logprob: -11.125221252441406
    4. '[
' → logprob: -13.125221252441406
    5. ' j' → logprob: -15.125221252441406
    6. '[js' → logprob: -15.500221252441406
    7. ' [' → logprob: -15.750221252441406
    8. ')' → logprob: -16.250221252441406
    9. '][' → logprob: -17.000221252441406
    10. '	j' → logprob: -17.125221252441406

Token 220: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003839382901787758
    2. ']+' → logprob: -5.628839492797852
    3. ' +' → logprob: -9.378839492797852
    4. '+' → logprob: -9.628839492797852
    5. ' ]' → logprob: -9.753839492797852
    6. '[j' → logprob: -11.378839492797852
    7. '[' → logprob: -11.628839492797852
    8. ')' → logprob: -12.003839492797852
    9. '])' → logprob: -14.128839492797852
    10. '']' → logprob: -14.253839492797852

Token 221: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029762065038084984
    2. '+' → logprob: -3.529762029647827
    3. ' +
' → logprob: -12.529762268066406
    4. ' ' → logprob: -13.029762268066406
    5. ')' → logprob: -13.154762268066406
    6. 'prefix' → logprob: -13.654762268066406
    7. '+
' → logprob: -14.154762268066406
    8. ']' → logprob: -14.779762268066406
    9. ')+' → logprob: -15.154762268066406
    10. ' ' → logprob: -15.279762268066406

Token 222: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.5759410262107849
    2. 'prefix' → logprob: -0.8259410262107849
    3. '(prefix' → logprob: -14.70094108581543
    4. '
' → logprob: -15.45094108581543
    5. '           ' → logprob: -15.45094108581543
    6. ' ' → logprob: -16.07594108581543
    7. '   ' → logprob: -16.32594108581543
    8. 'Prefix' → logprob: -16.70094108581543
    9. '_prefix' → logprob: -16.70094108581543
    10. ' 
' → logprob: -16.70094108581543

Token 223: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -5.512236498361744e-07
    2. 't' → logprob: -14.625000953674316
    3. '[' → logprob: -17.125
    4. '[
' → logprob: -18.125
    5. '	t' → logprob: -18.375
    6. '
' → logprob: -18.625
    7. '```' → logprob: -19.75
    8. '\[' → logprob: -20.25
    9. '`t' → logprob: -21.0
    10. ' t' → logprob: -21.375

Token 224: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04884226247668266
    2. ')' → logprob: -3.048842191696167
    3. '))' → logprob: -9.298842430114746
    4. ')
' → logprob: -9.548842430114746
    5. '])
' → logprob: -10.798842430114746
    6. ')]' → logprob: -10.923842430114746
    7. ')])' → logprob: -11.048842430114746
    8. ' )' → logprob: -11.173842430114746
    9. ' ])' → logprob: -11.173842430114746
    10. ']' → logprob: -12.798842430114746

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04840974509716034
    2. 'dp' → logprob: -3.1734097003936768
    3. '    
' → logprob: -6.423409938812256
    4. 'for' → logprob: -6.673409938812256
    5. ' dp' → logprob: -7.798409938812256
    6. '\n' → logprob: -7.923409938812256
    7. '
' → logprob: -8.173409461975098
    8. ')' → logprob: -8.298409461975098
    9. ' ' → logprob: -8.423409461975098
    10. 'return' → logprob: -8.798409461975098

Token 226: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0003365350130479783
    2. ' dp' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.375336647033691
    4. ' ' → logprob: -15.375336647033691
    5. 'dc' → logprob: -16.125335693359375
    6. ')' → logprob: -16.875335693359375
    7. '
' → logprob: -16.875335693359375
    8. '_dp' → logprob: -17.000335693359375
    9. '    
' → logprob: -17.750335693359375
    10. 'd' → logprob: -17.750335693359375

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5806466937065125
    2. '=' → logprob: -0.8306466937065125
    3. '[:]' → logprob: -6.080646514892578
    4. '<|end|>' → logprob: -6.330646514892578
    5. ',' → logprob: -7.455646514892578
    6. '[' → logprob: -11.330646514892578
    7. ')' → logprob: -11.705646514892578
    8. '<|end|>' → logprob: -12.080646514892578
    9. ']' → logprob: -12.330646514892578
    10. '```' → logprob: -13.205646514892578

Token 228: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.20142415165901184
    2. ' nd' → logprob: -1.7014241218566895
    3. '(nd' → logprob: -13.076424598693848
    4. '_nd' → logprob: -13.326424598693848
    5. 'n' → logprob: -13.451424598693848
    6. 'nds' → logprob: -13.951424598693848
    7. 'np' → logprob: -14.326424598693848
    8. '```' → logprob: -14.451424598693848
    9. '   ' → logprob: -14.826424598693848
    10. ' ' → logprob: -14.826424598693848

Token 229: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.512236498361744e-07
    2. '[p' → logprob: -16.125
    3. '
' → logprob: -16.625
    4. '[' → logprob: -16.75
    5. 'п' → logprob: -17.0
    6. 'dp' → logprob: -17.125
    7. '_p' → logprob: -18.5
    8. '`' → logprob: -18.75
    9. ''p' → logprob: -19.0
    10. '

' → logprob: -19.0

Token 230: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02440045215189457
    2. '
' → logprob: -3.774400472640991
    3. 'for' → logprob: -7.149400234222412
    4. '  
' → logprob: -8.64940071105957
    5. 'result' → logprob: -9.89940071105957
    6. 'max' → logprob: -10.39940071105957
    7. ' print' → logprob: -10.52440071105957
    8. ' 
' → logprob: -10.52440071105957
    9. '```' → logprob: -11.14940071105957
    10. '
' → logprob: -11.52440071105957

Token 231: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023357603640761226
    2. '
' → logprob: -9.00023365020752
    3. '```' → logprob: -10.12523365020752
    4. 'for' → logprob: -10.50023365020752
    5. 'max' → logprob: -10.87523365020752
    6. '  
' → logprob: -12.12523365020752
    7. ' print' → logprob: -12.25023365020752
    8. 'answer' → logprob: -12.75023365020752
    9. '    
' → logprob: -13.12523365020752
    10. 'result' → logprob: -13.50023365020752

Token 232: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.4831481873989105
    2. '(max' → logprob: -0.9831482172012329
    3. '(' → logprob: -4.733148097991943
    4. '(sum' → logprob: -8.858148574829102
    5. 'max' → logprob: -9.608148574829102
    6. 'dp' → logprob: -11.358148574829102
    7. '(
' → logprob: -12.233148574829102
    8. '(np' → logprob: -12.983148574829102
    9. ' (' → logprob: -13.733148574829102
    10. '()' → logprob: -14.983148574829102

Token 233: '[K' (ID: 137571)
  Prédit: '[K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[K' → logprob: -0.00012237003829795867
    2. '[-' → logprob: -9.6251220703125
    3. '[' → logprob: -10.0001220703125
    4. 'K' → logprob: -11.8751220703125
    5. ')' → logprob: -12.6251220703125
    6. ')[' → logprob: -15.2501220703125
    7. '[
' → logprob: -15.3751220703125
    8. '(K' → logprob: -16.2501220703125
    9. '[k' → logprob: -17.2501220703125
    10. ' K' → logprob: -17.7501220703125

Token 234: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3869381546974182
    2. ')' → logprob: -1.1369380950927734
    3. '))' → logprob: -10.386938095092773
    4. '})' → logprob: -11.011938095092773
    5. ']' → logprob: -11.886938095092773
    6. ')]' → logprob: -12.511938095092773
    7. ')])' → logprob: -13.136938095092773
    8. ''])' → logprob: -13.261938095092773
    9. ')
' → logprob: -13.636938095092773
    10. '）' → logprob: -13.761938095092773


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 232
Tokens correctement prédits (1ère position, stricte): 114
Tokens correctement prédits (1ère position, avec adaptation): 120
Tokens correctement prédits (top 10): 214
Précision stricte (1ère position): 49.14%
Précision adaptée (1ère position): 51.72%
Précision (top 10): 92.24%
================================================================================
