================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Iterator, Optional

class InputSource(ABC):
    @abstractmethod
    def next_line(self) -> Optional[str]:
        pass

class StdInputSource(InputSource):
    def __init__(self):
        import sys
        self._iterator = iter(sys.stdin.readline, '')
    def next_line(self) -> Optional[str]:
        try:
            return next(self._iterator).rstrip('\n')
        except StopIteration:
            return None

class DataSetParser:
    def __init__(self, source: InputSource):
        self.source = source

    def __iter__(self) -> Iterator[List[int]]:
        while True:
            line = self.source.next_line()
            if line is None:
                break
            line = line.strip()
            if not line.isdigit():
                continue
            n = int(line)
            if n == 0:
                break
            data = []
            count = 0
            while count < n:
                c_line = self.source.next_line()
                if c_line is None:
                    break
                c_line = c_line.strip()
                if not c_line.isdigit():
                    continue
                c = int(c_line)
                if c < 0 or c > 9:
                    continue
                data.append(c)
                count += 1
            if len(data) == n:
                yield data

class HistogramModel:
    def __init__(self, sales: List[int], flavor_count: int = 10):
        self.flavor_count = flavor_count
        self.sales = sales
        self.counts = [0]*self.flavor_count
        self._calculate()

    def _calculate(self) -> None:
        for flavor in self.sales:
            if 0 <= flavor < self.flavor_count:
                self.counts[flavor] += 1

    def counts_for_flavor(self, flavor: int) -> int:
        if 0 <= flavor < self.flavor_count:
            return self.counts[flavor]
        raise IndexError("Flavor index out of range")

class HistogramView:
    def __init__(self, model: HistogramModel):
        self.model = model

    def render(self) -> List[str]:
        lines = []
        for flavor in range(self.model.flavor_count):
            c = self.model.counts_for_flavor(flavor)
            if c == 0:
                lines.append("-")
            else:
                lines.append("*" * c)
        return lines

class HistogramController:
    def __init__(self, data_iter: Iterator[List[int]]):
        self.data_iter = data_iter

    def process_all(self) -> None:
        for sales_data in self.data_iter:
            model = HistogramModel(sales_data)
            view = HistogramView(model)
            for line in view.render():
                print(line)

def main():
    input_source = StdInputSource()
    parser = DataSetParser(input_source)
    controller = HistogramController(iter(parser))
    controller.process_all()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1270483285188675
    2. 'ABC' → logprob: -2.1270482540130615
    3. 'AB' → logprob: -10.00204849243164
    4. ' A' → logprob: -10.37704849243164
    5. 'ABCDE' → logprob: -11.25204849243164
    6. 'abc' → logprob: -11.75204849243164
    7. 'abstract' → logprob: -12.25204849243164
    8. 'A' → logprob: -12.37704849243164
    9. ' ' → logprob: -12.75204849243164
    10. ' ' → logprob: -12.75204849243164

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24382559955120087
    2. ',' → logprob: -1.6188255548477173
    3. 'import' → logprob: -5.243825435638428
    4. ':' → logprob: -5.868825435638428
    5. '' → logprob: -5.868825435638428
    6. '```' → logprob: -6.118825435638428
    7. ' ' → logprob: -7.118825435638428
    8. ' ,' → logprob: -7.243825435638428
    9. '\' → logprob: -7.868825435638428
    10. '<|end|>' → logprob: -7.868825435638428

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.5760498642921448
    2. ' abstract' → logprob: -0.8260498642921448
    3. 'Abstract' → logprob: -9.2010498046875
    4. ' ' → logprob: -12.5760498046875
    5. '.abstract' → logprob: -13.2010498046875
    6. ' Abstract' → logprob: -13.4510498046875
    7. ' ABC' → logprob: -14.5760498046875
    8. 'abc' → logprob: -14.8260498046875
    9. ' A' → logprob: -14.9510498046875
    10. '123' → logprob: -15.2010498046875

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00020449401927180588
    2. 'm' → logprob: -8.625204086303711
    3. 'meth' → logprob: -11.375204086303711
    4. '_method' → logprob: -12.375204086303711
    5. 'classmethod' → logprob: -12.625204086303711
    6. 'met' → logprob: -13.500204086303711
    7. 'me' → logprob: -13.500204086303711
    8. ' method' → logprob: -13.875204086303711
    9. 'meta' → logprob: -14.125204086303711
    10. '_' → logprob: -15.125204086303711

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19592909514904022
    2. '```' → logprob: -2.4459290504455566
    3. '

' → logprob: -3.3209290504455566
    4. '\n' → logprob: -4.195929050445557
    5. 'class' → logprob: -4.570929050445557
    6. '
' → logprob: -4.820929050445557
    7. '' → logprob: -5.320929050445557
    8. '\' → logprob: -5.445929050445557
    9. '``' → logprob: -5.445929050445557
    10. '<|end|>' → logprob: -6.570929050445557

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1726326197385788
    2. '

' → logprob: -2.1726326942443848
    3. '```' → logprob: -3.5476326942443848
    4. 'class' → logprob: -4.422632694244385
    5. '' → logprob: -7.047632694244385
    6. '
' → logprob: -7.047632694244385
    7. '\n' → logprob: -7.672632694244385
    8. '``' → logprob: -7.672632694244385
    9. ' 

' → logprob: -8.297632217407227
    10. '
 
' → logprob: -8.672632217407227

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5059148073196411
    2. 'import' → logprob: -1.2559148073196411
    3. '.' → logprob: -2.2559146881103516
    4. '.import' → logprob: -6.005914688110352
    5. '<|end|>' → logprob: -6.755914688110352
    6. ' ' → logprob: -7.005914688110352
    7. '```' → logprob: -7.380914688110352
    8. '[' → logprob: -7.505914688110352
    9. ' .' → logprob: -8.130914688110352
    10. '.space' → logprob: -8.505914688110352

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.3558792471885681
    2. 'Any' → logprob: -1.480879306793213
    3. ' List' → logprob: -3.855879306793213
    4. ' Union' → logprob: -4.105879306793213
    5. ' Protocol' → logprob: -4.230879306793213
    6. ' Callable' → logprob: -4.730879306793213
    7. 'List' → logprob: -5.855879306793213
    8. 'Protocol' → logprob: -6.355879306793213
    9. ' Optional' → logprob: -6.355879306793213
    10. 'Union' → logprob: -6.480879306793213

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.13918635249137878
    2. '
' → logprob: -2.139186382293701
    3. 'class' → logprob: -5.014186382293701
    4. '```' → logprob: -5.514186382293701
    5. '\n' → logprob: -7.139186382293701
    6. '


' → logprob: -8.014185905456543
    7. '``' → logprob: -9.139185905456543
    8. '
' → logprob: -9.514185905456543
    9. ' class' → logprob: -9.764185905456543
    10. '<|end|>' → logprob: -10.514185905456543

Token 13: ' Iterator' (ID: 41994)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.5063804388046265
    2. ' Optional' → logprob: -1.5063804388046265
    3. ' Callable' → logprob: -1.7563804388046265
    4. 'Optional' → logprob: -2.006380558013916
    5. 'Any' → logprob: -2.506380558013916
    6. ' Any' → logprob: -2.756380558013916
    7. 'Callable' → logprob: -3.381380558013916
    8. 'Union' → logprob: -3.631380558013916
    9. 'Tuple' → logprob: -4.631380558013916
    10. ' Tuple' → logprob: -4.756380558013916

Token 14: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.873184323310852
    2. '

' → logprob: -1.248184323310852
    3. 'class' → logprob: -1.248184323310852
    4. '```' → logprob: -5.1231842041015625
    5. '\n' → logprob: -7.1231842041015625
    6. '


' → logprob: -7.2481842041015625
    7. '``' → logprob: -8.123184204101562
    8. '
' → logprob: -8.248184204101562
    9. '<class' → logprob: -9.498184204101562
    10. ' class' → logprob: -9.498184204101562

Token 15: ' Optional' (ID: 19351)
  Prédit: ' Iterable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Iterable' → logprob: -0.597726047039032
    2. 'Iterable' → logprob: -1.0977261066436768
    3. ' Optional' → logprob: -2.8477261066436768
    4. ' Any' → logprob: -3.8477261066436768
    5. 'Any' → logprob: -4.722725868225098
    6. 'Optional' → logprob: -4.972725868225098
    7. ' Protocol' → logprob: -5.347725868225098
    8. ' Callable' → logprob: -5.472725868225098
    9. ' Generator' → logprob: -5.597725868225098
    10. ' Union' → logprob: -5.972725868225098

Token 16: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.21567587554454803
    2. '
' → logprob: -1.9656758308410645
    3. 'class' → logprob: -2.9656758308410645
    4. '


' → logprob: -6.3406758308410645
    5. '```' → logprob: -7.8406758308410645
    6. '
' → logprob: -8.965676307678223
    7. '\n' → logprob: -10.465676307678223
    8. '`

' → logprob: -10.590676307678223
    9. '``' → logprob: -10.715676307678223
    10. '<class' → logprob: -11.590676307678223

Token 17: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0010912814177572727
    2. '
' → logprob: -7.001091480255127
    3. '```' → logprob: -8.751091003417969
    4. ' class' → logprob: -11.876091003417969
    5. '\n' → logprob: -12.126091003417969
    6. '``' → logprob: -13.001091003417969
    7. '<class' → logprob: -13.126091003417969
    8. '"class' → logprob: -13.501091003417969
    9. '

' → logprob: -13.751091003417969
    10. '
' → logprob: -14.626091003417969

Token 18: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007017991505563259
    2. ' Abstract' → logprob: -5.757018089294434
    3. ' Space' → logprob: -6.757018089294434
    4. ' Base' → logprob: -7.257018089294434
    5. ' Serializer' → logprob: -8.382018089294434
    6. ' Object' → logprob: -8.507018089294434
    7. ' Iterable' → logprob: -8.632018089294434
    8. ' Task' → logprob: -8.757018089294434
    9. ' Shape' → logprob: -8.882018089294434
    10. ' Basic' → logprob: -9.007018089294434

Token 19: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -0.8585426807403564
    2. ':' → logprob: -1.8585426807403564
    3. 'Device' → logprob: -1.9835426807403564
    4. 'Stream' → logprob: -2.8585426807403564
    5. 'Processor' → logprob: -2.8585426807403564
    6. 'Handler' → logprob: -3.1085426807403564
    7. 'Data' → logprob: -3.1085426807403564
    8. 'Layer' → logprob: -3.6085426807403564
    9. '(' → logprob: -3.6085426807403564
    10. 'Reader' → logprob: -5.233542442321777

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6344860196113586
    2. ':' → logprob: -0.7594860196113586
    3. '(Abstract' → logprob: -6.384486198425293
    4. '(:' → logprob: -9.759486198425293
    5. '():' → logprob: -9.884486198425293
    6. ' :' → logprob: -10.009486198425293
    7. '(object' → logprob: -11.259486198425293
    8. '(Exception' → logprob: -12.009486198425293
    9. '```' → logprob: -12.509486198425293
    10. ':**' → logprob: -12.884486198425293

Token 21: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.4290049076080322
    2. ' ABC' → logprob: -1.0540049076080322
    3. ')' → logprob: -8.679004669189453
    4. 'abc' → logprob: -10.429004669189453
    5. 'Abstract' → logprob: -10.804004669189453
    6. '):' → logprob: -10.929004669189453
    7. ' ' → logprob: -11.054004669189453
    8. 'AB' → logprob: -11.679004669189453
    9. '   ' → logprob: -11.929004669189453
    10. ' )' → logprob: -12.054004669189453

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00022678142704535276
    2. ':' → logprob: -9.000226974487305
    3. ')' → logprob: -9.250226974487305
    4. '):
' → logprob: -12.375226974487305
    5. ',' → logprob: -13.250226974487305
    6. ' ):' → logprob: -14.125226974487305
    7. '():' → logprob: -16.000226974487305
    8. '):
' → logprob: -16.375226974487305
    9. '):

' → logprob: -16.625226974487305
    10. ']:' → logprob: -17.125226974487305

Token 23: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010334856808185577
    2. '   ' → logprob: -4.6353349685668945
    3. '):' → logprob: -8.510334968566895
    4. ':
' → logprob: -9.010334968566895
    5. ')' → logprob: -10.135334968566895
    6. ' :' → logprob: -10.135334968566895
    7. 'def' → logprob: -10.260334968566895
    8. '    
' → logprob: -10.635334968566895
    9. ',' → logprob: -10.885334968566895
    10. '```' → logprob: -10.885334968566895

Token 24: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7244389057159424
    2. '
' → logprob: -1.5994389057159424
    3. 'def' → logprob: -1.7244389057159424
    4. '    
' → logprob: -2.3494389057159424
    5. '```' → logprob: -4.974438667297363
    6. '@' (adapté à ' @') → logprob: -5.099438667297363
    7. '\n' → logprob: -5.224438667297363
    8. ' 
' → logprob: -5.349438667297363
    9. ' def' → logprob: -5.599438667297363
    10. ':' → logprob: -5.599438667297363

Token 25: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.2664456789934775e-06
    2. 'ab' → logprob: -14.250000953674316
    3. 'abc' → logprob: -15.375000953674316
    4. 'abs' → logprob: -15.750000953674316
    5. ' abstract' → logprob: -15.750000953674316
    6. 'staticmethod' → logprob: -16.500001907348633
    7. 'property' → logprob: -17.375001907348633
    8. '.abstract' → logprob: -18.000001907348633
    9. 'classmethod' → logprob: -18.250001907348633
    10. 'override' → logprob: -19.000001907348633

Token 26: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0002135534887202084
    2. '_method' → logprob: -8.500213623046875
    3. 'classmethod' → logprob: -12.375213623046875
    4. 'meth' → logprob: -12.375213623046875
    5. 'ethod' → logprob: -14.750213623046875
    6. '.method' → logprob: -15.125213623046875
    7. 'staticmethod' → logprob: -15.375213623046875
    8. 'def' → logprob: -16.000213623046875
    9. '	method' → logprob: -16.000213623046875
    10. ' method' → logprob: -16.500213623046875

Token 27: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10496535152196884
    2. ' def' → logprob: -2.7299654483795166
    3. '(' → logprob: -3.8549654483795166
    4. 'method' → logprob: -5.7299652099609375
    5. '<|end|>' → logprob: -5.8549652099609375
    6. '
' → logprob: -6.4799652099609375
    7. '(def' → logprob: -6.6049652099609375
    8. '(
' → logprob: -7.4799652099609375
    9. ')' → logprob: -7.7299652099609375
    10. ' ' → logprob: -7.9799652099609375

Token 28: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6688655018806458
    2. 'method' → logprob: -0.7938655018806458
    3. '_method' → logprob: -3.793865442276001
    4. '
' → logprob: -4.79386568069458
    5. '    
' → logprob: -6.54386568069458
    6. ' def' → logprob: -6.79386568069458
    7. '(' → logprob: -7.41886568069458
    8. '(method' → logprob: -8.543865203857422
    9. 'abstract' → logprob: -8.793865203857422
    10. 'ethod' → logprob: -9.043865203857422

Token 29: ' def' (ID: 1056)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.011497634463012218
    2. 'def' (adapté à ' def') → logprob: -4.511497497558594
    3. 'abstract' → logprob: -8.136497497558594
    4. ' def' → logprob: -9.761497497558594
    5. '_method' → logprob: -10.011497497558594
    6. 'meth' → logprob: -11.136497497558594
    7. 'classmethod' → logprob: -11.386497497558594
    8. 'token' → logprob: -11.886497497558594
    9. 'protected' → logprob: -12.511497497558594
    10. ' method' → logprob: -12.636497497558594

Token 30: ' next' (ID: 2613)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.08451317250728607
    2. ' get' → logprob: -3.2095131874084473
    3. ' def' → logprob: -4.084513187408447
    4. ' iterate' → logprob: -5.084513187408447
    5. ' ' → logprob: -5.334513187408447
    6. 'read' → logprob: -6.459513187408447
    7. ' fetch' → logprob: -6.459513187408447
    8. ' reads' → logprob: -6.584513187408447
    9. ' input' → logprob: -6.709513187408447
    10. ' provide' → logprob: -6.709513187408447

Token 31: '_line' (ID: 14418)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.055717092007398605
    2. '(self' → logprob: -3.6807169914245605
    3. '(' → logprob: -4.0557169914245605
    4. '_line' → logprob: -4.8057169914245605
    5. '_input' → logprob: -7.3057169914245605
    6. '_item' → logprob: -7.3057169914245605
    7. '_' → logprob: -7.3057169914245605
    8. '()' → logprob: -7.9307169914245605
    9. '_char' → logprob: -7.9307169914245605
    10. '_value' → logprob: -8.055717468261719

Token 32: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005250710528343916
    2. '(' → logprob: -5.255250930786133
    3. ' (' → logprob: -11.630250930786133
    4. 'self' → logprob: -12.505250930786133
    5. '()' → logprob: -13.380250930786133
    6. '(
' → logprob: -14.255250930786133
    7. 's' → logprob: -14.380250930786133
    8. '()(' → logprob: -14.755250930786133
    9. '(s' → logprob: -14.880250930786133
    10. ')' → logprob: -15.380250930786133

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00428021140396595
    2. 'self' → logprob: -5.504280090332031
    3. '):' → logprob: -9.129280090332031
    4. ',' → logprob: -10.004280090332031
    5. ' )' → logprob: -10.504280090332031
    6. '(self' → logprob: -11.879280090332031
    7. ')->' → logprob: -12.129280090332031
    8. ':' → logprob: -12.879280090332031
    9. '   ' → logprob: -13.004280090332031
    10. ' self' → logprob: -13.629280090332031

Token 34: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009585851803421974
    2. '(' → logprob: -4.759585857391357
    3. ' ->' → logprob: -7.759585857391357
    4. '()' → logprob: -8.5095853805542
    5. '->' → logprob: -8.5095853805542
    6. '():' → logprob: -10.1345853805542
    7. '()->' → logprob: -10.3845853805542
    8. 'self' → logprob: -10.6345853805542
    9. '(s' → logprob: -11.7595853805542
    10. ')' → logprob: -11.7595853805542

Token 35: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.1271257996559143
    2. 'Optional' → logprob: -2.1271257400512695
    3. ' str' → logprob: -8.75212574005127
    4. 'str' → logprob: -10.25212574005127
    5. '	Optional' → logprob: -12.50212574005127
    6. '(Optional' → logprob: -14.87712574005127
    7. ' ' → logprob: -15.25212574005127
    8. '   ' → logprob: -17.627126693725586
    9. '_optional' → logprob: -18.377126693725586
    10. ' Iterator' → logprob: -18.502126693725586

Token 36: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.250000953674316
    3. 'str' → logprob: -14.625000953674316
    4. '[int' → logprob: -16.875001907348633
    5. '[List' → logprob: -17.875001907348633
    6. '[
' → logprob: -19.500001907348633
    7. '	str' → logprob: -20.375001907348633
    8. '(str' → logprob: -20.625001907348633
    9. '[String' → logprob: -20.750001907348633
    10. ' str' → logprob: -21.375001907348633

Token 37: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00030972150852903724
    2. ')' → logprob: -8.750309944152832
    3. ':' → logprob: -9.375309944152832
    4. ']:' → logprob: -9.750309944152832
    5. '):
' → logprob: -12.000309944152832
    6. '）：' → logprob: -14.875309944152832
    7. ' ):' → logprob: -15.000309944152832
    8. '   ' → logprob: -15.250309944152832
    9. '):
' → logprob: -15.250309944152832
    10. '():' → logprob: -15.625309944152832

Token 38: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.0861181989312172
    2. '...' → logprob: -2.836118221282959
    3. '       ' → logprob: -4.086118221282959
    4. ' pass' → logprob: -4.961118221282959
    5. 'raise' → logprob: -10.8361177444458
    6. '   ' → logprob: -11.2111177444458
    7. '	pass' → logprob: -11.8361177444458
    8. '```' → logprob: -12.9611177444458
    9. 'return' → logprob: -13.0861177444458
    10. ' ...' → logprob: -13.2111177444458

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2750614583492279
    2. '<|end|>' → logprob: -1.6500614881515503
    3. '

' → logprob: -3.5250613689422607
    4. 'class' → logprob: -4.40006160736084
    5. '<|end|>' → logprob: -6.02506160736084
    6. '


' → logprob: -6.27506160736084
    7. '```' → logprob: -7.27506160736084
    8. '\n' → logprob: -7.40006160736084
    9. ' class' → logprob: -8.65006160736084
    10. '



' → logprob: -8.90006160736084

Token 41: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.10048604011535645
    2. '
' → logprob: -2.3504860401153564
    3. ' class' → logprob: -8.600485801696777
    4. '

' → logprob: -10.100485801696777
    5. '<|end|>' → logprob: -10.975485801696777
    6. '```' → logprob: -11.350485801696777
    7. '\n' → logprob: -11.850485801696777
    8. '
' → logprob: -12.100485801696777
    9. '<class' → logprob: -12.850485801696777
    10. '  
' → logprob: -13.100485801696777

Token 42: ' Std' (ID: 74505)
  Prédit: ' File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' File' → logprob: -0.09993842244148254
    2. ' ' → logprob: -3.59993839263916
    3. ' Input' → logprob: -3.84993839263916
    4. ' User' → logprob: -3.84993839263916
    5. ' List' → logprob: -5.09993839263916
    6. ' Csv' → logprob: -5.84993839263916
    7. ' Concrete' → logprob: -5.84993839263916
    8. 'File' → logprob: -6.09993839263916
    9. ' String' → logprob: -6.22493839263916
    10. ' file' → logprob: -6.72493839263916

Token 43: 'Input' (ID: 3275)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00032831361750140786
    2. 'input' → logprob: -8.625328063964844
    3. 'out' → logprob: -9.500328063964844
    4. 'In' → logprob: -10.125328063964844
    5. 'Input' → logprob: -10.375328063964844
    6. 'inp' → logprob: -14.125328063964844
    7. 'io' → logprob: -14.375328063964844
    8. '```' → logprob: -14.875328063964844
    9. 'IN' → logprob: -15.625328063964844
    10. '``' → logprob: -15.625328063964844

Token 44: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -0.07368356734514236
    2. '(Input' → logprob: -3.073683500289917
    3. ':' → logprob: -4.448683738708496
    4. 'Input' → logprob: -5.698683738708496
    5. '(Source' → logprob: -5.948683738708496
    6. 'ource' → logprob: -6.073683738708496
    7. '(' → logprob: -6.073683738708496
    8. 'Reader' → logprob: -6.698683738708496
    9. '():' → logprob: -7.573683738708496
    10. 'ut' → logprob: -9.198683738708496

Token 45: '(Input' (ID: 52522)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026438351720571518
    2. '():' → logprob: -3.7764382362365723
    3. '(' → logprob: -5.901438236236572
    4. '):' → logprob: -8.27643871307373
    5. '(Input' → logprob: -9.40143871307373
    6. ' :' → logprob: -9.77643871307373
    7. '(":' → logprob: -11.65143871307373
    8. '(I' → logprob: -12.15143871307373
    9. '(Abstract' → logprob: -12.52643871307373
    10. ':**' → logprob: -12.52643871307373

Token 46: 'Source' (ID: 4823)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.851813018321991
    2. 'Source' → logprob: -1.1018130779266357
    3. 'put' → logprob: -1.4768130779266357
    4. 'ut' → logprob: -4.851812839508057
    5. 'Put' → logprob: -5.726812839508057
    6. ')' → logprob: -7.476812839508057
    7. '```' → logprob: -8.101813316345215
    8. '   ' → logprob: -8.351813316345215
    9. 'puter' → logprob: -9.601813316345215
    10. 'In' → logprob: -9.726813316345215

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.837811088189483e-05
    2. '):
' → logprob: -10.375068664550781
    3. ':' → logprob: -10.625068664550781
    4. ')' → logprob: -11.375068664550781
    5. ' ):' → logprob: -14.375068664550781
    6. '():' → logprob: -15.375068664550781
    7. '   ' → logprob: -15.625068664550781
    8. '):
' → logprob: -16.25006866455078
    9. ']:' → logprob: -16.50006866455078
    10. ',' → logprob: -17.00006866455078

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005746406503021717
    2. ' def' → logprob: -6.255746364593506
    3. '    
' → logprob: -6.505746364593506
    4. '
' → logprob: -6.630746364593506
    5. 'def' → logprob: -7.005746364593506
    6. '```' → logprob: -10.130746841430664
    7. '    ' → logprob: -11.130746841430664
    8. ' 
' → logprob: -11.880746841430664
    9. 'import' → logprob: -12.005746841430664
    10. ' ' → logprob: -12.505746841430664

Token 49: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.043752554804086685
    2. 'def' (adapté à ' def') → logprob: -3.293752670288086
    3. '   ' → logprob: -5.168752670288086
    4. '	def' → logprob: -13.418752670288086
    5. '    ' → logprob: -13.793752670288086
    6. ' ' → logprob: -15.418752670288086
    7. '```' → logprob: -15.543752670288086
    8. ' indentation' → logprob: -15.793752670288086
    9. '   ' → logprob: -17.043752670288086
    10. '    
' → logprob: -17.418752670288086

Token 50: ' __' (ID: 2516)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.00037383107701316476
    2. 'next' → logprob: -8.000373840332031
    3. ' __' → logprob: -11.125373840332031
    4. ' ' → logprob: -11.750373840332031
    5. ' n' → logprob: -12.250373840332031
    6. ' ' → logprob: -12.625373840332031
    7. ' nex' → logprob: -12.875373840332031
    8. '_next' → logprob: -13.750373840332031
    9. '	next' → logprob: -14.000373840332031
    10. '.next' → logprob: -14.125373840332031

Token 51: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.35837464465294e-05
    2. 'iter' → logprob: -10.625043869018555
    3. 'next' → logprob: -11.250043869018555
    4. 'nit' → logprob: -12.750043869018555
    5. 'ini' → logprob: -13.625043869018555
    6. 'it' → logprob: -13.875043869018555
    7. 'in' → logprob: -14.375043869018555
    8. 'innit' → logprob: -15.250043869018555
    9. 'inite' → logprob: -15.625043869018555
    10. '_init' → logprob: -16.750043869018555

Token 52: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.026481198146939278
    2. '(self' → logprob: -3.6514811515808105
    3. '__' → logprob: -9.276481628417969
    4. '__(
' → logprob: -10.151481628417969
    5. '(' → logprob: -10.401481628417969
    6. ')(' → logprob: -12.401481628417969
    7. '<>(' → logprob: -12.651481628417969
    8. '_(' → logprob: -12.901481628417969
    9. '__((' → logprob: -13.151481628417969
    10. '()(' → logprob: -13.651481628417969

Token 53: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.8325677703833207e-05
    2. ')' → logprob: -10.875028610229492
    3. ' self' → logprob: -11.625028610229492
    4. '):
' → logprob: -15.125028610229492
    5. '
' → logprob: -16.875028610229492
    6. '(self' → logprob: -17.750028610229492
    7. '),' → logprob: -18.000028610229492
    8. ' ' → logprob: -18.250028610229492
    9. '):' → logprob: -18.875028610229492
    10. '   ' → logprob: -19.125028610229492

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2514306306838989
    2. ',' → logprob: -1.751430630683899
    3. 'self' → logprob: -3.3764305114746094
    4. ')' → logprob: -4.751430511474609
    5. ' ):' → logprob: -6.001430511474609
    6. '(self' → logprob: -6.251430511474609
    7. '():' → logprob: -8.12643051147461
    8. ' self' → logprob: -8.37643051147461
    9. ' ,' → logprob: -8.62643051147461
    10. '):
' → logprob: -8.75143051147461

Token 55: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005965200834907591
    2. '       ' → logprob: -7.500596523284912
    3. ')' → logprob: -10.875596046447754
    4. '   ' → logprob: -11.250596046447754
    5. ' self' → logprob: -11.625596046447754
    6. '):
' → logprob: -13.500596046447754
    7. '
' → logprob: -14.875596046447754
    8. '	self' → logprob: -14.875596046447754
    9. '):' → logprob: -15.375596046447754
    10. '(self' → logprob: -15.500596046447754

Token 56: ' import' (ID: 1588)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5618640780448914
    2. 'pass' → logprob: -1.5618641376495361
    3. 'import' (adapté à ' import') → logprob: -1.6868641376495361
    4. '       ' → logprob: -4.061863899230957
    5. 'super' → logprob: -4.936863899230957
    6. ' pass' → logprob: -5.311863899230957
    7. ' self' → logprob: -5.811863899230957
    8. '   ' → logprob: -6.061863899230957
    9. ' super' → logprob: -8.436863899230957
    10. ' import' → logprob: -9.561863899230957

Token 57: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.038043901324272156
    2. 'sys' → logprob: -3.288043975830078
    3. '	sys' → logprob: -13.163043975830078
    4. '=sys' → logprob: -14.788043975830078
    5. ' ' → logprob: -16.288043975830078
    6. '_sys' → logprob: -16.788043975830078
    7. ' built' → logprob: -17.413043975830078
    8. 'built' → logprob: -17.913043975830078
    9. '(sys' → logprob: -19.038043975830078
    10. 'io' → logprob: -19.163043975830078

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03903791680932045
    2. '       ' → logprob: -3.4140379428863525
    3. '   ' → logprob: -6.539037704467773
    4. '<|end|>' → logprob: -6.664037704467773
    5. '    
' → logprob: -7.039037704467773
    6. 'self' → logprob: -7.164037704467773
    7. '        
' → logprob: -7.914037704467773
    8. '  
' → logprob: -9.164037704467773
    9. ' 
' → logprob: -9.414037704467773
    10. ' self' → logprob: -9.414037704467773

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1423671841621399
    2. '
' → logprob: -2.142367124557495
    3. 'self' → logprob: -4.392367362976074
    4. '   ' → logprob: -6.517367362976074
    5. ' self' → logprob: -6.892367362976074
    6. '<|end|>' → logprob: -8.892367362976074
    7. '    
' → logprob: -9.142367362976074
    8. '        
' → logprob: -9.892367362976074
    9. '	self' → logprob: -10.017367362976074
    10. 'def' → logprob: -10.892367362976074

Token 60: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.35895398259162903
    2. ' self' → logprob: -1.3589539527893066
    3. '       ' → logprob: -3.1089539527893066
    4. '   ' → logprob: -11.608954429626465
    5. '	self' → logprob: -12.233954429626465
    6. ' ' → logprob: -14.983954429626465
    7. '      ' → logprob: -15.108954429626465
    8. ' ' → logprob: -15.233954429626465
    9. '        ' → logprob: -15.233954429626465
    10. '_self' → logprob: -15.483954429626465

Token 61: '._' (ID: 2697)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.3018872141838074
    2. '._' → logprob: -1.5518872737884521
    3. '.' → logprob: -3.426887273788452
    4. ' .' → logprob: -4.801887035369873
    5. '.input' → logprob: -5.426887035369873
    6. '.stdout' → logprob: -5.801887035369873
    7. '.std' → logprob: -8.926887512207031
    8. '.readline' → logprob: -9.051887512207031
    9. '.argv' → logprob: -9.426887512207031
    10. '.st' → logprob: -9.676887512207031

Token 62: 'iterator' (ID: 14160)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.06850592792034149
    2. 'lines' → logprob: -2.8185060024261475
    3. '_lines' → logprob: -5.943505764007568
    4. 'input' → logprob: -6.443505764007568
    5. '_st' → logprob: -6.818505764007568
    6. 'std' → logprob: -7.443505764007568
    7. 'buffer' → logprob: -8.568506240844727
    8. '_input' → logprob: -8.943506240844727
    9. 'line' → logprob: -9.193506240844727
    10. '.stdin' → logprob: -9.943506240844727

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0456872284412384
    2. '=' → logprob: -3.170687198638916
    3. ':' → logprob: -5.920687198638916
    4. ' ' → logprob: -14.295687675476074
    5. 's' → logprob: -15.795687675476074
    6. ' :' → logprob: -15.920687675476074
    7. '  ' → logprob: -16.545686721801758
    8. '=sys' → logprob: -16.795686721801758
    9. '=None' → logprob: -17.420686721801758
    10. '   ' → logprob: -17.545686721801758

Token 64: ' iter' (ID: 10621)
  Prédit: ' iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iter' → logprob: -0.1289634257555008
    2. 'iter' → logprob: -2.3789634704589844
    3. ' sys' → logprob: -3.8789634704589844
    4. 'sys' → logprob: -4.878963470458984
    5. '(iter' → logprob: -10.128963470458984
    6. '(sys' → logprob: -10.878963470458984
    7. ' ' → logprob: -13.253963470458984
    8. '	iter' → logprob: -13.503963470458984
    9. '_iter' → logprob: -14.003963470458984
    10. '	sys' → logprob: -14.003963470458984

Token 65: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0008621498709544539
    2. '(' → logprob: -7.250862121582031
    3. '(input' → logprob: -9.000862121582031
    4. '(stdin' → logprob: -10.875862121582031
    5. '(iter' → logprob: -13.625862121582031
    6. '=sys' → logprob: -13.750862121582031
    7. '(Sys' → logprob: -13.875862121582031
    8. '(system' → logprob: -13.875862121582031
    9. '(line' → logprob: -14.000862121582031
    10. '(System' → logprob: -14.125862121582031

Token 66: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006370236515067518
    2. '.' → logprob: -7.375637054443359
    3. '.stdout' → logprob: -12.50063705444336
    4. ' .' → logprob: -12.62563705444336
    5. '.argv' → logprob: -13.75063705444336
    6. '.readline' → logprob: -14.00063705444336
    7. '.)' → logprob: -14.62563705444336
    8. ')' → logprob: -14.75063705444336
    9. '.std' → logprob: -15.12563705444336
    10. '.__' → logprob: -16.12563705444336

Token 67: '.readline' (ID: 74673)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003927725832909346
    2. '.readline' → logprob: -5.628927707672119
    3. ' )' → logprob: -8.503928184509277
    4. '.readlines' → logprob: -9.378928184509277
    5. '())' → logprob: -11.128928184509277
    6. '))' → logprob: -12.128928184509277
    7. '.' → logprob: -12.378928184509277
    8. '()' → logprob: -12.503928184509277
    9. ',)' → logprob: -13.628928184509277
    10. '.)' → logprob: -13.628928184509277

Token 68: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38861721754074097
    2. '())' → logprob: -1.1386172771453857
    3. '()' → logprob: -6.638617038726807
    4. ' )' → logprob: -8.138617515563965
    5. ' ())' → logprob: -9.013617515563965
    6. '(' → logprob: -11.888617515563965
    7. ',' → logprob: -12.763617515563965
    8. ',)' → logprob: -13.388617515563965
    9. ' ' → logprob: -13.638617515563965
    10. '(),' → logprob: -13.638617515563965

Token 69: ' '')
' (ID: 53215)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15934871137142181
    2. '''' → logprob: -2.534348726272583
    3. ' '')' → logprob: -3.409348726272583
    4. ''\' → logprob: -3.409348726272583
    5. '"' → logprob: -6.659348487854004
    6. ')' → logprob: -8.409348487854004
    7. '''
' → logprob: -8.909348487854004
    8. ''',' → logprob: -9.034348487854004
    9. '""' → logprob: -10.159348487854004
    10. ' ''' → logprob: -10.909348487854004

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06016431003808975
    2. '
' → logprob: -3.435164213180542
    3. '    
' → logprob: -4.435164451599121
    4. '<|end|>' → logprob: -4.435164451599121
    5. '  
' → logprob: -7.310164451599121
    6. '<|end|>' → logprob: -7.685164451599121
    7. '  ' → logprob: -8.560164451599121
    8. ' 
' → logprob: -8.560164451599121
    9. '    ' → logprob: -8.685164451599121
    10. ')' → logprob: -8.685164451599121

Token 71: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5986506938934326
    2. 'def' (adapté à ' def') → logprob: -0.9736506938934326
    3. '   ' → logprob: -3.0986506938934326
    4. '    
' → logprob: -4.723650932312012
    5. '  
' → logprob: -5.098650932312012
    6. ' def' → logprob: -5.848650932312012
    7. ' ' → logprob: -5.973650932312012
    8. ' 
' → logprob: -6.223650932312012
    9. '<|end|>' → logprob: -6.223650932312012
    10. '   
' → logprob: -6.973650932312012

Token 72: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.05189761519432068
    2. 'next' → logprob: -3.3018975257873535
    3. ' __' → logprob: -4.5518975257873535
    4. '__' → logprob: -6.8018975257873535
    5. ' def' → logprob: -6.9268975257873535
    6. '_next' → logprob: -6.9268975257873535
    7. 'def' → logprob: -9.551898002624512
    8. ' _' → logprob: -10.301898002624512
    9. '.next' → logprob: -11.051898002624512
    10. ' ' → logprob: -11.801898002624512

Token 73: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.500000953674316
    3. '_li' → logprob: -15.875000953674316
    4. '_l' → logprob: -16.125
    5. ' _' → logprob: -17.0
    6. '_LINE' → logprob: -17.0
    7. '_lin' → logprob: -17.625
    8. '_Line' → logprob: -18.0
    9. '_lines' → logprob: -18.375
    10. '_lineno' → logprob: -18.875

Token 74: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7322982549667358
    2. '()' → logprob: -1.2322982549667358
    3. '(self' → logprob: -1.4822982549667358
    4. ' (' → logprob: -8.357297897338867
    5. ' ()' → logprob: -8.732297897338867
    6. '(
' → logprob: -10.982297897338867
    7. '(

' → logprob: -10.982297897338867
    8. '()(' → logprob: -11.482297897338867
    9. '():' → logprob: -11.857297897338867
    10. ' ' → logprob: -12.607297897338867

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062050141394138336
    2. '):' → logprob: -2.8120501041412354
    3. ' )' → logprob: -9.562049865722656
    4. ' ):' → logprob: -11.687049865722656
    5. '):
' → logprob: -13.187049865722656
    6. '()' → logprob: -13.937049865722656
    7. '():' → logprob: -14.687049865722656
    8. ')->' → logprob: -15.187049865722656
    9. '   ' → logprob: -16.187049865722656
    10. ' ' → logprob: -16.437049865722656

Token 76: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.2747473418712616
    2. '->' → logprob: -2.024747371673584
    3. ':' → logprob: -2.774747371673584
    4. ')' → logprob: -3.274747371673584
    5. '):' → logprob: -5.899747371673584
    6. '():' → logprob: -6.149747371673584
    7. ')->' → logprob: -6.399747371673584
    8. '(self' → logprob: -7.649747371673584
    9. '()->' → logprob: -8.149746894836426
    10. '       ' → logprob: -8.649746894836426

Token 77: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.0788951888680458
    2. 'Optional' → logprob: -2.578895092010498
    3. ' str' → logprob: -13.078895568847656
    4. 'str' → logprob: -13.328895568847656
    5. ' next' → logprob: -13.828895568847656
    6. '(Optional' → logprob: -15.328895568847656
    7. ' ' → logprob: -15.953895568847656
    8. 'next' → logprob: -16.203895568847656
    9. ' optional' → logprob: -16.453895568847656
    10. '	Optional' → logprob: -16.828895568847656

Token 78: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0001818489981815219
    2. '[' → logprob: -9.250182151794434
    3. ' [' → logprob: -9.375182151794434
    4. '[
' → logprob: -14.500182151794434
    5. ':str' → logprob: -16.625181198120117
    6. '   ' → logprob: -17.000181198120117
    7. '[String' → logprob: -17.000181198120117
    8. '(str' → logprob: -17.000181198120117
    9. 'str' → logprob: -17.250181198120117
    10. ' ' → logprob: -17.625181198120117

Token 79: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019746100588236004
    2. '):
' → logprob: -9.125197410583496
    3. ')' → logprob: -9.875197410583496
    4. ':' → logprob: -11.000197410583496
    5. '):
' → logprob: -11.750197410583496
    6. ' ):' → logprob: -12.000197410583496
    7. '   ' → logprob: -12.625197410583496
    8. '():' → logprob: -13.250197410583496
    9. '       ' → logprob: -14.000197410583496
    10. ' ' → logprob: -15.250197410583496

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004597439547069371
    2. ' try' → logprob: -8.250459671020508
    3. 'try' → logprob: -8.625459671020508
    4. 'return' → logprob: -11.750459671020508
    5. ' return' → logprob: -12.000459671020508
    6. '   ' → logprob: -13.250459671020508
    7. '           ' → logprob: -13.875459671020508
    8. '      ' → logprob: -14.125459671020508
    9. '```' → logprob: -14.875459671020508
    10. ':' → logprob: -15.875459671020508

Token 81: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.0037207419518381357
    2. '       ' → logprob: -6.003720760345459
    3. 'return' → logprob: -6.753720760345459
    4. ' try' → logprob: -9.5037202835083
    5. '   ' → logprob: -13.0037202835083
    6. '```' → logprob: -14.6287202835083
    7. ' return' → logprob: -15.2537202835083
    8. '	try' → logprob: -16.378721237182617
    9. '           ' → logprob: -16.503721237182617
    10. 'Try' → logprob: -17.378721237182617

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015776488929986954
    2. ':
' → logprob: -4.265776634216309
    3. '           ' → logprob: -6.515776634216309
    4. '       ' → logprob: -9.640776634216309
    5. ':return' → logprob: -10.015776634216309
    6. ' :' → logprob: -12.265776634216309
    7. ':
' → logprob: -12.265776634216309
    8. '   ' → logprob: -12.390776634216309
    9. '):' → logprob: -12.890776634216309
    10. '        ' → logprob: -13.765776634216309

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004213858861476183
    2. 'return' → logprob: -5.629213809967041
    3. ' return' → logprob: -7.504213809967041
    4. '       ' → logprob: -10.1292142868042
    5. '          ' → logprob: -11.7542142868042
    6. '   ' → logprob: -12.5042142868042
    7. '         ' → logprob: -12.7542142868042
    8. 'line' → logprob: -13.3792142868042
    9. '            ' → logprob: -13.8792142868042
    10. '        ' → logprob: -14.0042142868042

Token 84: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26568400859832764
    2. 'return' (adapté à ' return') → logprob: -1.5156840085983276
    3. ' return' → logprob: -5.015684127807617
    4. 'line' → logprob: -5.015684127807617
    5. ' line' → logprob: -7.890684127807617
    6. 'next' → logprob: -12.390684127807617
    7. '   ' → logprob: -12.390684127807617
    8. '          ' → logprob: -12.765684127807617
    9. '       ' → logprob: -12.890684127807617
    10. 'lines' → logprob: -13.765684127807617

Token 85: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.0067154900170862675
    2. 'next' → logprob: -5.006715297698975
    3. '(next' → logprob: -16.256715774536133
    4. '	next' → logprob: -17.006715774536133
    5. '   ' → logprob: -17.881715774536133
    6. ' self' → logprob: -18.256715774536133
    7. ' nxt' → logprob: -19.756715774536133
    8. '.next' → logprob: -19.881715774536133
    9. 'self' → logprob: -20.131715774536133
    10. ' nex' → logprob: -20.381715774536133

Token 86: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014164448715746403
    2. '(' → logprob: -4.264164447784424
    3. '(
' → logprob: -14.389164924621582
    4. '(

' → logprob: -15.014164924621582
    5. 'self' → logprob: -16.764163970947266
    6. ' (' → logprob: -17.264163970947266
    7. '(s' → logprob: -18.014163970947266
    8. '(this' → logprob: -18.139163970947266
    9. '(sel' → logprob: -18.889163970947266
    10. '()' → logprob: -19.764163970947266

Token 87: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -14.250001907348633
    3. ')._' → logprob: -14.375001907348633
    4. ' .' → logprob: -15.375001907348633
    5. 'self' → logprob: -17.000001907348633
    6. ')_' → logprob: -17.750001907348633
    7. ']._' → logprob: -17.875001907348633
    8. '_' → logprob: -17.875001907348633
    9. ')' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.500001907348633

Token 88: 'iterator' (ID: 14160)
  Prédit: 'iterator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iterator' → logprob: -0.006717974785715342
    2. '_iterator' → logprob: -5.006718158721924
    3. '.iterator' → logprob: -13.631717681884766
    4. ' iterator' → logprob: -14.006717681884766
    5. 'operator' → logprob: -15.381717681884766
    6. '(iterator' → logprob: -16.006717681884766
    7. 'iter' → logprob: -16.381717681884766
    8. '   ' → logprob: -16.881717681884766
    9. ' ' → logprob: -17.006717681884766
    10. 'input' → logprob: -18.256717681884766

Token 89: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07175241410732269
    2. ')
' → logprob: -2.6967523097991943
    3. '()' → logprob: -6.821752548217773
    4. '       ' → logprob: -7.821752548217773
    5. '()
' → logprob: -9.071752548217773
    6. ')
' → logprob: -9.321752548217773
    7. ' )' → logprob: -10.321752548217773
    8. '())
' → logprob: -10.446752548217773
    9. '())' → logprob: -10.446752548217773
    10. ' )
' → logprob: -11.071752548217773

Token 90: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.0009115827269852161
    2. 'strip' → logprob: -7.000911712646484
    3. '.rstrip' → logprob: -16.625911712646484
    4. 'r' → logprob: -18.250911712646484
    5. '_strip' → logprob: -20.125911712646484
    6. 'rst' → logprob: -21.625911712646484
    7. 'rs' → logprob: -21.750911712646484
    8. 'str' → logprob: -22.500911712646484
    9. ' strip' → logprob: -23.000911712646484
    10. 'read' → logprob: -23.000911712646484

Token 91: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.016882749274373055
    2. '()' → logprob: -4.14188289642334
    3. '("\' → logprob: -8.01688289642334
    4. '()\' → logprob: -8.39188289642334
    5. ''\' → logprob: -9.14188289642334
    6. '(' → logprob: -9.14188289642334
    7. '()
' → logprob: -9.89188289642334
    8. '('' → logprob: -11.26688289642334
    9. '\n' → logprob: -12.26688289642334
    10. '\' → logprob: -12.39188289642334

Token 92: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018151111900806427
    2. '\n' → logprob: -4.01815128326416
    3. '\' → logprob: -14.51815128326416
    4. 'r' → logprob: -15.51815128326416
    5. ' \' → logprob: -16.143150329589844
    6. '
' → logprob: -16.268150329589844
    7. ' n' → logprob: -16.393150329589844
    8. '	n' → logprob: -16.393150329589844
    9. '\r' → logprob: -16.518150329589844
    10. ')n' → logprob: -17.143150329589844

Token 93: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0001855406299000606
    2. '')
' → logprob: -9.2501859664917
    3. ')' → logprob: -9.5001859664917
    4. ''' → logprob: -12.1251859664917
    5. '")' → logprob: -12.7501859664917
    6. '')
' → logprob: -13.1251859664917
    7. ' ')' → logprob: -13.2501859664917
    8. '\r' → logprob: -13.5001859664917
    9. ''))' → logprob: -15.1251859664917
    10. '')

' → logprob: -15.3751859664917

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027375894133001566
    2. ' except' → logprob: -6.377737522125244
    3. 'except' → logprob: -6.877737522125244
    4. '	except' → logprob: -12.502737998962402
    5. '   ' → logprob: -14.752737998962402
    6. '```' → logprob: -16.752737045288086
    7. 'Except' → logprob: -16.752737045288086
    8. '           ' → logprob: -17.002737045288086
    9. ',' → logprob: -17.252737045288086
    10. '<|end|>' → logprob: -17.752737045288086

Token 95: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48789387941360474
    2. 'except' (adapté à ' except') → logprob: -1.23789381980896
    3. ' except' → logprob: -2.36289381980896
    4. '   ' → logprob: -6.362894058227539
    5. '	except' → logprob: -8.487894058227539
    6. '    ' → logprob: -11.987894058227539
    7. 'Except' → logprob: -14.112894058227539
    8. '     ' → logprob: -14.112894058227539
    9. ' ' → logprob: -14.362894058227539
    10. '           ' → logprob: -14.862894058227539

Token 96: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.25193047523498535
    2. ' Stop' → logprob: -1.5019304752349854
    3. ' ' → logprob: -14.126930236816406
    4. '_Stop' → logprob: -15.251930236816406
    5. '   ' → logprob: -15.376930236816406
    6. '_stop' → logprob: -16.626930236816406
    7. '.Stop' → logprob: -16.876930236816406
    8. '(' → logprob: -17.501930236816406
    9. '  ' → logprob: -18.251930236816406
    10. '	' → logprob: -18.376930236816406

Token 97: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -3.35706390615087e-05
    2. 'Iterator' → logprob: -10.500033378601074
    3. 'iteration' → logprob: -12.250033378601074
    4. 'Iter' → logprob: -14.750033378601074
    5. 'Async' → logprob: -14.750033378601074
    6. ' iteration' → logprob: -15.250033378601074
    7. '-' → logprob: -16.62503433227539
    8. '       ' → logprob: -16.87503433227539
    9. '_iteration' → logprob: -17.00003433227539
    10. '   ' → logprob: -17.62503433227539

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5324287414550781
    2. ':
' → logprob: -0.9074287414550781
    3. '           ' → logprob: -4.782428741455078
    4. ':return' → logprob: -7.282428741455078
    5. '       ' → logprob: -9.782428741455078
    6. ' :
' → logprob: -10.532428741455078
    7. '        ' → logprob: -10.782428741455078
    8. '          ' → logprob: -11.407428741455078
    9. '            ' → logprob: -11.407428741455078
    10. '():
' → logprob: -11.407428741455078

Token 99: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017702584154903889
    2. 'return' → logprob: -7.126770496368408
    3. 'None' → logprob: -7.501770496368408
    4. '       ' → logprob: -8.12677001953125
    5. ' None' → logprob: -9.87677001953125
    6. '
' → logprob: -10.37677001953125
    7. ' return' → logprob: -11.50177001953125
    8. '0' → logprob: -11.62677001953125
    9. '   ' → logprob: -12.37677001953125
    10. '            
' → logprob: -13.00177001953125

Token 100: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17247892916202545
    2. ' return' → logprob: -1.9224789142608643
    3. 'None' → logprob: -5.172479152679443
    4. ' None' → logprob: -5.422479152679443
    5. '           ' → logprob: -6.172479152679443
    6. ':return' → logprob: -12.797478675842285
    7. '
' → logprob: -13.547478675842285
    8. '	return' → logprob: -13.672478675842285
    9. ' ' → logprob: -14.797478675842285
    10. '0' → logprob: -14.797478675842285

Token 101: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2519291639328003
    2. ' None' → logprob: -1.5019291639328003
    3. '(None' → logprob: -17.251928329467773
    4. '_None' → logprob: -17.751928329467773
    5. '   ' → logprob: -17.876928329467773
    6. ' ' → logprob: -18.001928329467773
    7. '.None' → logprob: -18.251928329467773
    8. ',None' → logprob: -18.626928329467773
    9. '=None' → logprob: -20.001928329467773
    10. '  ' → logprob: -20.001928329467773

Token 102: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.48656290769577026
    2. '
' → logprob: -0.9865629076957703
    3. '<|end|>' → logprob: -5.111562728881836
    4. '

' → logprob: -5.861562728881836
    5. '```' → logprob: -6.111562728881836
    6. ' class' → logprob: -7.361562728881836
    7. '\n' → logprob: -8.236562728881836
    8. '<|end|>' → logprob: -8.861562728881836
    9. 'newline' → logprob: -9.486562728881836
    10. '    
' → logprob: -10.361562728881836

Token 104: ' Data' (ID: 4833)
  Prédit: ' File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' File' → logprob: -0.02935628965497017
    2. ' List' → logprob: -3.6543562412261963
    3. ' String' → logprob: -6.654356479644775
    4. ' Memory' → logprob: -7.529356479644775
    5. 'File' → logprob: -7.779356479644775
    6. ' ' → logprob: -8.154356002807617
    7. ' Input' → logprob: -8.529356002807617
    8. ' Buffered' → logprob: -9.529356002807617
    9. ' Buffer' → logprob: -9.654356002807617
    10. ' Array' → logprob: -10.029356002807617

Token 105: 'Set' (ID: 1984)
  Prédit: 'Source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -0.0036174089182168245
    2. 'Set' → logprob: -7.128617286682129
    3. 'Provider' → logprob: -7.128617286682129
    4. 'Input' → logprob: -7.378617286682129
    5. 'Reader' → logprob: -7.753617286682129
    6. 'Loader' → logprob: -7.753617286682129
    7. 'Processor' → logprob: -8.503617286682129
    8. 'List' → logprob: -9.628617286682129
    9. 'Stream' → logprob: -9.628617286682129
    10. 'Iterator' → logprob: -9.753617286682129

Token 106: 'Parser' (ID: 9231)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6724134683609009
    2. ':' → logprob: -0.7974134683609009
    3. '(Input' → logprob: -3.4224133491516113
    4. ' :' → logprob: -5.422413349151611
    5. '(Abstract' → logprob: -7.297413349151611
    6. '(I' → logprob: -7.422413349151611
    7. '():' → logprob: -9.29741382598877
    8. '(Data' → logprob: -9.42241382598877
    9. '(List' → logprob: -9.79741382598877
    10. '(Output' → logprob: -9.92241382598877

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40093758702278137
    2. '(' → logprob: -1.150937557220459
    3. '(Input' → logprob: -4.650937557220459
    4. '(Abstract' → logprob: -5.775937557220459
    5. ' :' → logprob: -7.025937557220459
    6. ':
' → logprob: -8.775938034057617
    7. '(I' → logprob: -9.900938034057617
    8. '(Data' → logprob: -10.025938034057617
    9. '<Input' → logprob: -10.025938034057617
    10. '():' → logprob: -10.150938034057617

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019328886992298067
    2. ' def' → logprob: -9.00019359588623
    3. 'def' → logprob: -10.37519359588623
    4. '    
' → logprob: -10.50019359588623
    5. ':' → logprob: -12.87519359588623
    6. '   ' → logprob: -13.00019359588623
    7. '```' → logprob: -13.12519359588623
    8. '	def' → logprob: -13.62519359588623
    9. '
' → logprob: -13.87519359588623
    10. ':
' → logprob: -15.00019359588623

Token 109: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.032061416655778885
    2. 'def' (adapté à ' def') → logprob: -4.032061576843262
    3. '   ' → logprob: -4.282061576843262
    4. '	def' → logprob: -14.907061576843262
    5. '    ' → logprob: -15.282061576843262
    6. ' ' → logprob: -15.657061576843262
    7. '
' → logprob: -16.532060623168945
    8. '```' → logprob: -17.282060623168945
    9. '    
' → logprob: -17.532060623168945
    10. 'class' → logprob: -17.907060623168945

Token 110: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1301858127117157
    2. ' init' → logprob: -3.005185842514038
    3. 'init' → logprob: -3.130185842514038
    4. '_init' → logprob: -4.255185604095459
    5. ' def' → logprob: -4.505185604095459
    6. '__' → logprob: -5.755185604095459
    7. ' ' → logprob: -9.005186080932617
    8. '```' → logprob: -9.630186080932617
    9. '  ' → logprob: -9.755186080932617
    10. '   ' → logprob: -10.255186080932617

Token 111: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'nit' → logprob: -15.5
    3. 'ini' → logprob: -16.625
    4. 'in' → logprob: -18.375
    5. '   ' → logprob: -19.625
    6. 'iter' → logprob: -19.75
    7. ' init' → logprob: -19.75
    8. 'i' → logprob: -19.875
    9. 'innit' → logprob: -20.25
    10. '_init' → logprob: -20.75

Token 112: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019349370151758194
    2. ' (' → logprob: -4.519349575042725
    3. '__(' → logprob: -5.519349575042725
    4. '(' → logprob: -5.644349575042725
    5. ')(' → logprob: -7.519349575042725
    6. 'self' → logprob: -10.269349098205566
    7. '<>(' → logprob: -10.394349098205566
    8. '_(' → logprob: -11.144349098205566
    9. ' self' → logprob: -11.269349098205566
    10. '()(' → logprob: -11.394349098205566

Token 113: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.865583706414327e-05
    2. ' self' → logprob: -9.25009822845459
    3. ')' → logprob: -13.37509822845459
    4. '       ' → logprob: -14.37509822845459
    5. '   ' → logprob: -15.25009822845459
    6. '
' → logprob: -15.62509822845459
    7. '):
' → logprob: -17.125099182128906
    8. ')
' → logprob: -18.375099182128906
    9. 'data' → logprob: -18.750099182128906
    10. '),' → logprob: -19.000099182128906

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012828641571104527
    2. ' ,' → logprob: -4.387828826904297
    3. 'self' → logprob: -8.387828826904297
    4. '       ' → logprob: -9.637828826904297
    5. ' self' → logprob: -11.137828826904297
    6. '   ' → logprob: -11.887828826904297
    7. ',self' → logprob: -13.637828826904297
    8. ')' → logprob: -13.762828826904297
    9. ' )' → logprob: -14.012828826904297
    10. ' ):' → logprob: -14.512828826904297

Token 115: ' source' (ID: 4256)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011913890019059181
    2. ' self' → logprob: -4.636913776397705
    3. 'input' → logprob: -6.261913776397705
    4. ' input' → logprob: -8.636914253234863
    5. 'source' → logprob: -9.761914253234863
    6. '   ' → logprob: -11.886914253234863
    7. ' source' → logprob: -13.011914253234863
    8. 'data' → logprob: -13.636914253234863
    9. 'sources' → logprob: -14.011914253234863
    10. 'inputs' → logprob: -15.011914253234863

Token 116: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2352385965641588e-05
    2. '):' → logprob: -11.875012397766113
    3. ' :' → logprob: -12.250012397766113
    4. ')' → logprob: -15.000012397766113
    5. '_:' → logprob: -16.500011444091797
    6. ' ):' → logprob: -16.625011444091797
    7. '_source' → logprob: -18.500011444091797
    8. ':)' → logprob: -18.625011444091797
    9. '：' → logprob: -18.875011444091797
    10. '__:' → logprob: -19.625011444091797

Token 117: ' Input' (ID: 10090)
  Prédit: ' Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Input' → logprob: -0.06196959316730499
    2. 'Input' → logprob: -2.811969518661499
    3. '	Input' → logprob: -13.436969757080078
    4. ' Optional' → logprob: -15.061969757080078
    5. ' input' → logprob: -16.561969757080078
    6. 'Optional' → logprob: -17.686969757080078
    7. ')' → logprob: -18.186969757080078
    8. '<Input' → logprob: -18.186969757080078
    9. '_Input' → logprob: -18.436969757080078
    10. '\Input' → logprob: -18.561969757080078

Token 118: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: 0.0
    2. 'source' → logprob: -18.375
    3. ' Source' → logprob: -19.25
    4. '_source' → logprob: -19.875
    5. '_Source' → logprob: -21.25
    6. '_SOURCE' → logprob: -21.375
    7. 'Sources' → logprob: -21.5
    8. 'Input' → logprob: -22.25
    9. '```' → logprob: -22.25
    10. ' source' → logprob: -22.375

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002050812589004636
    2. ')' → logprob: -6.252050876617432
    3. ' ):' → logprob: -9.752050399780273
    4. '):
' → logprob: -10.252050399780273
    5. ':' → logprob: -10.877050399780273
    6. '   ' → logprob: -11.752050399780273
    7. ',' → logprob: -14.377050399780273
    8. ' ' → logprob: -14.377050399780273
    9. ' )' → logprob: -15.127050399780273
    10. '):
' → logprob: -15.377050399780273

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001415473292581737
    2. 'self' → logprob: -6.751415252685547
    3. ' self' → logprob: -8.501415252685547
    4. '   ' → logprob: -10.501415252685547
    5. '	' → logprob: -12.126415252685547
    6. '	self' → logprob: -12.126415252685547
    7. ' ' → logprob: -14.001415252685547
    8. '	   ' → logprob: -14.251415252685547
    9. ' ' → logprob: -14.751415252685547
    10. '      ' → logprob: -15.001415252685547

Token 121: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1297937035560608
    2. '       ' → logprob: -2.629793643951416
    3. ' self' → logprob: -3.004793643951416
    4. '   ' → logprob: -9.754794120788574
    5. '	self' → logprob: -11.004794120788574
    6. ' ' → logprob: -13.004794120788574
    7. 'def' → logprob: -14.004794120788574
    8. '     ' → logprob: -14.129794120788574
    9. '      ' → logprob: -14.129794120788574
    10. '(self' → logprob: -15.004794120788574

Token 122: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.011896217241883278
    2. '.' → logprob: -4.761896133422852
    3. '._' → logprob: -5.886896133422852
    4. ' .' → logprob: -8.136896133422852
    5. 'source' → logprob: -9.261896133422852
    6. '.data' → logprob: -9.761896133422852
    7. ' source' → logprob: -10.886896133422852
    8. '_source' → logprob: -11.511896133422852
    9. '.input' → logprob: -11.511896133422852
    10. '.Source' → logprob: -12.886896133422852

Token 123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760210156440735
    2. ' =' → logprob: -0.8260210156440735
    3. ')' → logprob: -10.826021194458008
    4. '.' → logprob: -10.951021194458008
    5. '.next' → logprob: -11.201021194458008
    6. ':' → logprob: -11.201021194458008
    7. '=None' → logprob: -12.951021194458008
    8. '=self' → logprob: -13.076021194458008
    9. ' ' → logprob: -13.201021194458008
    10. '_' → logprob: -13.451021194458008

Token 124: ' source' (ID: 4256)
  Prédit: ' source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' source' → logprob: -0.2519296407699585
    2. 'source' → logprob: -1.5019296407699585
    3. '	source' → logprob: -14.87692928314209
    4. ' ' → logprob: -16.501930236816406
    5. '(source' → logprob: -17.001930236816406
    6. '[source' → logprob: -17.251930236816406
    7. '_source' → logprob: -18.626930236816406
    8. '.source' → logprob: -19.626930236816406
    9. 'Source' → logprob: -20.376930236816406
    10. '```' → logprob: -21.501930236816406

Token 125: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3224940001964569
    2. '   ' → logprob: -1.3224940299987793
    3. '    
' → logprob: -4.947494029998779
    4. '       ' → logprob: -6.947494029998779
    5. 'def' → logprob: -7.572494029998779
    6. '<|end|>' → logprob: -8.572493553161621
    7. '

' → logprob: -8.947493553161621
    8. '  
' → logprob: -9.322493553161621
    9. '        
' → logprob: -9.447493553161621
    10. ' 
' → logprob: -10.572493553161621

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02538313902914524
    2. 'def' → logprob: -4.150382995605469
    3. '
' → logprob: -4.900382995605469
    4. '    
' → logprob: -6.525382995605469
    5. '       ' → logprob: -8.150382995605469
    6. '        
' → logprob: -9.900382995605469
    7. ' def' → logprob: -10.525382995605469
    8. '  
' → logprob: -11.400382995605469
    9. '```' → logprob: -12.025382995605469
    10. '

' → logprob: -12.525382995605469

Token 127: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016992862219922245
    2. '   ' → logprob: -9.37516975402832
    3. ' def' → logprob: -9.37516975402832
    4. ' ' → logprob: -16.25016975402832
    5. '	def' → logprob: -16.50016975402832
    6. '
' → logprob: -17.00016975402832
    7. 'de' → logprob: -17.50016975402832
    8. '  ' → logprob: -18.75016975402832
    9. '```' → logprob: -19.37516975402832
    10. 'class' → logprob: -19.62516975402832

Token 128: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.16762465238571167
    2. 'def' → logprob: -2.6676247119903564
    3. ' parse' → logprob: -3.1676247119903564
    4. ' lines' → logprob: -4.042624473571777
    5. 'parse' → logprob: -4.417624473571777
    6. ' iter' → logprob: -4.917624473571777
    7. ' next' → logprob: -6.792624473571777
    8. 'iter' → logprob: -7.167624473571777
    9. '__' → logprob: -7.292624473571777
    10. ' iterator' → logprob: -7.542624473571777

Token 129: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -1.3856492842023727e-06
    2. 'next' → logprob: -13.750000953674316
    3. 'init' → logprob: -15.125000953674316
    4. '   ' → logprob: -18.250001907348633
    5. 'ait' → logprob: -18.625001907348633
    6. '_iter' → logprob: -18.875001907348633
    7. 'iterator' → logprob: -20.000001907348633
    8. ' ' → logprob: -20.250001907348633
    9. ' iter' → logprob: -20.375001907348633
    10. 'enter' → logprob: -21.000001907348633

Token 130: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.023406192660331726
    2. '__' → logprob: -3.7734062671661377
    3. '__(
' → logprob: -8.773406028747559
    4. '__
' → logprob: -13.773406028747559
    5. '__

' → logprob: -13.898406028747559
    6. '___' → logprob: -13.898406028747559
    7. '__('' → logprob: -14.148406028747559
    8. '_' → logprob: -14.523406028747559
    9. '__[' → logprob: -14.773406028747559
    10. '__((' → logprob: -15.148406028747559

Token 131: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8624639324116288e-06
    2. ')' → logprob: -13.500001907348633
    3. ' self' → logprob: -15.250001907348633
    4. '       ' → logprob: -16.250001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '):
' → logprob: -18.250001907348633
    7. '
' → logprob: -18.875001907348633
    8. ')
' → logprob: -20.500001907348633
    9. '):' → logprob: -21.000001907348633
    10. 's' → logprob: -21.250001907348633

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5787225365638733
    2. 'self' → logprob: -1.2037224769592285
    3. '__' → logprob: -2.3287224769592285
    4. '):' → logprob: -3.9537224769592285
    5. ')__' → logprob: -5.0787224769592285
    6. '       ' → logprob: -5.3287224769592285
    7. '__)' → logprob: -5.4537224769592285
    8. '   ' → logprob: -5.5787224769592285
    9. '):
' → logprob: -6.0787224769592285
    10. '_' → logprob: -7.7037224769592285

Token 133: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36945608258247375
    2. '(self' → logprob: -2.3694560527801514
    3. ' ->' → logprob: -2.4944560527801514
    4. 'self' → logprob: -2.7444560527801514
    5. '->' → logprob: -3.3694560527801514
    6. '       ' → logprob: -3.8694560527801514
    7. '   ' → logprob: -4.8694562911987305
    8. ')' → logprob: -5.7444562911987305
    9. ':
' → logprob: -6.7444562911987305
    10. ':self' → logprob: -8.11945629119873

Token 134: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.0383150540292263
    2. ' Iterator' → logprob: -3.2883150577545166
    3. '   ' → logprob: -8.663314819335938
    4. '"' → logprob: -9.538314819335938
    5. '	Iterator' → logprob: -11.163314819335938
    6. ' ' → logprob: -12.038314819335938
    7. ''' → logprob: -12.288314819335938
    8. '       ' → logprob: -13.913314819335938
    9. '  ' → logprob: -14.163314819335938
    10. 'Iterable' → logprob: -14.788314819335938

Token 135: '[List' (ID: 113982)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.03715088590979576
    2. '[' → logprob: -3.4121508598327637
    3. '[List' → logprob: -5.662150859832764
    4. '   ' → logprob: -11.787151336669922
    5. '[[' → logprob: -12.537151336669922
    6. ':' → logprob: -12.662151336669922
    7. '[
' → logprob: -13.037151336669922
    8. '[int' → logprob: -13.162151336669922
    9. '[list' → logprob: -13.912151336669922
    10. '       ' → logprob: -13.912151336669922

Token 136: '[int' (ID: 40124)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.38690420985221863
    2. '[int' → logprob: -1.136904239654541
    3. '[' → logprob: -10.761903762817383
    4. '[List' → logprob: -11.386903762817383
    5. 'str' → logprob: -14.761903762817383
    6. 'int' → logprob: -15.886903762817383
    7. '[Int' → logprob: -16.886903762817383
    8. '   ' → logprob: -17.011903762817383
    9. ' [' → logprob: -17.511903762817383
    10. '[
' → logprob: -18.011903762817383

Token 137: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.686440646648407
    2. ']' → logprob: -1.1864407062530518
    3. ']]' → logprob: -2.0614407062530518
    4. ']]:
' → logprob: -2.9364407062530518
    5. ' ]' → logprob: -5.311440467834473
    6. ']>' → logprob: -5.311440467834473
    7. ']:
' → logprob: -7.436440467834473
    8. ']:
' → logprob: -8.311440467834473
    9. ']):' → logprob: -9.061440467834473
    10. '>' → logprob: -9.311440467834473

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2956685721874237
    2. '
' → logprob: -1.420668601989746
    3. '   ' → logprob: -4.545668601989746
    4. '        
' → logprob: -6.670668601989746
    5. '    
' → logprob: -6.795668601989746
    6. '```' → logprob: -7.920668601989746
    7. '\n' → logprob: -8.420668601989746
    8. '
' → logprob: -8.670668601989746
    9. ':' → logprob: -9.170668601989746
    10. 'newline' → logprob: -9.670668601989746

Token 139: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009046725463122129
    2. ' while' → logprob: -7.750904560089111
    3. 'while' (adapté à ' while') → logprob: -8.62590503692627
    4. ' line' → logprob: -8.87590503692627
    5. '   ' → logprob: -9.50090503692627
    6. 'line' → logprob: -10.50090503692627
    7. '           ' → logprob: -10.62590503692627
    8. ' lines' → logprob: -12.25090503692627
    9. '      ' → logprob: -12.37590503692627
    10. '        
' → logprob: -12.62590503692627

Token 140: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.08267785608768463
    2. ' True' → logprob: -2.5826778411865234
    3. '   ' → logprob: -6.082677841186523
    4. '(True' → logprob: -6.582677841186523
    5. 'line' → logprob: -9.457677841186523
    6. '       ' → logprob: -11.207677841186523
    7. ' ' → logprob: -11.707677841186523
    8. ' (' → logprob: -11.832677841186523
    9. ' line' → logprob: -12.957677841186523
    10. '(' → logprob: -13.332677841186523

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08504916727542877
    2. ':
' → logprob: -3.0850491523742676
    3. '           ' → logprob: -3.3350491523742676
    4. '       ' → logprob: -9.085049629211426
    5. ',' → logprob: -10.835049629211426
    6. '):' → logprob: -11.585049629211426
    7. '):
' → logprob: -11.585049629211426
    8. ':
' → logprob: -11.710049629211426
    9. '```' → logprob: -11.710049629211426
    10. ':

' → logprob: -12.585049629211426

Token 142: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018232580623589456
    2. ' line' → logprob: -9.125182151794434
    3. 'line' → logprob: -9.625182151794434
    4. '```' → logprob: -13.000182151794434
    5. '            
' → logprob: -13.875182151794434
    6. '          ' → logprob: -14.000182151794434
    7. '#line' → logprob: -14.125182151794434
    8. 'next' → logprob: -14.750182151794434
    9. ':' → logprob: -14.750182151794434
    10. '       ' → logprob: -14.875182151794434

Token 143: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9122575521469116
    2. 'line' (adapté à ' line') → logprob: -1.0372575521469116
    3. '           ' → logprob: -1.4122575521469116
    4. '   ' → logprob: -9.537257194519043
    5. 'raw' → logprob: -10.037257194519043
    6. '               ' → logprob: -10.162257194519043
    7. 'input' → logprob: -10.287257194519043
    8. ' raw' → logprob: -10.662257194519043
    9. '	line' → logprob: -10.787257194519043
    10. '_line' → logprob: -11.287257194519043

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00593117019161582
    2. '=' → logprob: -5.130931377410889
    3. 's' → logprob: -13.88093090057373
    4. ' :=' → logprob: -14.25593090057373
    5. '=line' → logprob: -14.75593090057373
    6. ' ' → logprob: -15.38093090057373
    7. '    ' → logprob: -15.88093090057373
    8. '   ' → logprob: -15.88093090057373
    9. ' =)' → logprob: -16.005931854248047
    10. '_line' → logprob: -16.630931854248047

Token 145: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07893242686986923
    2. ' self' → logprob: -2.578932523727417
    3. '           ' → logprob: -10.078932762145996
    4. '(self' → logprob: -15.328932762145996
    5. '               ' → logprob: -16.07893180847168
    6. '	self' → logprob: -16.57893180847168
    7. 's' → logprob: -16.95393180847168
    8. '            ' → logprob: -17.07893180847168
    9. '
' → logprob: -17.45393180847168
    10. '       ' → logprob: -17.82893180847168

Token 146: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.0001398929744027555
    2. '.' → logprob: -9.000140190124512
    3. 'source' → logprob: -11.125140190124512
    4. '.s' → logprob: -13.750140190124512
    5. ' .' → logprob: -14.500140190124512
    6. '.next' → logprob: -16.125139236450195
    7. ' source' → logprob: -17.625139236450195
    8. '	source' → logprob: -17.750139236450195
    9. '.sources' → logprob: -18.375139236450195
    10. '[source' → logprob: -18.500139236450195

Token 147: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -4.127333340875339e-06
    2. '.' → logprob: -12.500003814697266
    3. ' .' → logprob: -15.500003814697266
    4. 'next' → logprob: -16.625003814697266
    5. ' next' → logprob: -18.250003814697266
    6. '   ' → logprob: -19.625003814697266
    7. '       ' → logprob: -21.000003814697266
    8. '	next' → logprob: -21.125003814697266
    9. '.Next' → logprob: -21.625003814697266
    10. '[next' → logprob: -22.000003814697266

Token 148: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.875
    3. '_LINE' → logprob: -16.25
    4. '_Line' → logprob: -18.125
    5. '_l' → logprob: -19.25
    6. 'line' → logprob: -19.75
    7. '_lines' → logprob: -20.875
    8. '_lin' → logprob: -21.0
    9. '_lineno' → logprob: -21.625
    10. '_token' → logprob: -22.125

Token 149: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008622255176305771
    2. '()
' → logprob: -4.758622169494629
    3. '()

' → logprob: -12.508622169494629
    4. '()
' → logprob: -13.133622169494629
    5. ' ()' → logprob: -13.758622169494629
    6. '()`' → logprob: -14.258622169494629
    7. '()"' → logprob: -16.383623123168945
    8. '()\' → logprob: -17.133623123168945
    9. ')' → logprob: -17.258623123168945
    10. '():
' → logprob: -17.383623123168945

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.7755875129951164e-05
    2. '<|end|>' → logprob: -10.25004768371582
    3. '       ' → logprob: -12.87504768371582
    4. '<|end|>' → logprob: -13.00004768371582
    5. '            
' → logprob: -13.25004768371582
    6. '          ' → logprob: -13.62504768371582
    7. '            ' → logprob: -14.12504768371582
    8. ' if' → logprob: -14.12504768371582
    9. '   ' → logprob: -14.25004768371582
    10. ',' → logprob: -14.37504768371582

Token 151: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14409872889518738
    2. '           ' → logprob: -2.6440987586975098
    3. 'if' (adapté à ' if') → logprob: -2.7690987586975098
    4. '            ' → logprob: -7.89409875869751
    5. '    ' → logprob: -11.019098281860352
    6. '   ' → logprob: -12.644098281860352
    7. 'If' → logprob: -12.894098281860352
    8. ' ' → logprob: -13.144098281860352
    9. '          ' → logprob: -13.144098281860352
    10. '        ' → logprob: -13.394098281860352

Token 152: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0031840058509260416
    2. 'line' → logprob: -5.753183841705322
    3. ' not' → logprob: -12.37818431854248
    4. '	line' → logprob: -13.37818431854248
    5. ' ' → logprob: -15.12818431854248
    6. '(line' → logprob: -16.128183364868164
    7. 'not' → logprob: -16.378183364868164
    8. '[line' → logprob: -17.503183364868164
    9. '=line' → logprob: -17.628183364868164
    10. '#line' → logprob: -18.003183364868164

Token 153: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.004623203072696924
    2. 'is' → logprob: -5.3796234130859375
    3. ' ' → logprob: -13.254623413085938
    4. ' ==' → logprob: -14.504623413085938
    5. '==' → logprob: -15.504623413085938
    6. ' in' → logprob: -15.504623413085938
    7. ' ' → logprob: -16.004623413085938
    8. ')' → logprob: -16.379623413085938
    9. 'in' → logprob: -17.129623413085938
    10. ' )' → logprob: -17.379623413085938

Token 154: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1269325166940689
    2. ' None' → logprob: -2.1269326210021973
    3. '   ' → logprob: -13.001932144165039
    4. '    ' → logprob: -14.501932144165039
    5. '_None' → logprob: -15.001932144165039
    6. '=None' → logprob: -15.251932144165039
    7. '(None' → logprob: -15.251932144165039
    8. ' ' → logprob: -15.626932144165039
    9. '           ' → logprob: -16.00193214416504
    10. '        ' → logprob: -16.12693214416504

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23857028782367706
    2. ':
' → logprob: -1.9885703325271606
    3. ' or' → logprob: -2.738570213317871
    4. '               ' → logprob: -4.738570213317871
    5. '           ' → logprob: -6.363570213317871
    6. 'or' → logprob: -9.113570213317871
    7. ':return' → logprob: -10.113570213317871
    8. '                   ' → logprob: -11.488570213317871
    9. '            ' → logprob: -11.738570213317871
    10. '              ' → logprob: -11.863570213317871

Token 156: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.458980300929397e-05
    2. '           ' → logprob: -9.50008487701416
    3. '              ' → logprob: -12.75008487701416
    4. ':' → logprob: -13.37508487701416
    5. ' break' → logprob: -13.62508487701416
    6. '                   ' → logprob: -13.62508487701416
    7. 'break' → logprob: -14.25008487701416
    8. '   ' → logprob: -14.75008487701416
    9. ' or' → logprob: -14.87508487701416
    10. '                ' → logprob: -15.12508487701416

Token 157: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2303498387336731
    2. 'break' (adapté à ' break') → logprob: -1.9803497791290283
    3. ' break' → logprob: -2.9803497791290283
    4. '                   ' → logprob: -4.105350017547607
    5. '           ' → logprob: -8.10534954071045
    6. 'return' → logprob: -9.35534954071045
    7. ' return' → logprob: -11.23034954071045
    8. '	break' → logprob: -11.23034954071045
    9. '   ' → logprob: -11.35534954071045
    10. '
' → logprob: -11.35534954071045

Token 158: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0055478475987911224
    2. '            
' → logprob: -5.255548000335693
    3. '    
' → logprob: -8.755547523498535
    4. '  
' → logprob: -10.380547523498535
    5. '
' → logprob: -10.505547523498535
    6. '           
' → logprob: -10.630547523498535
    7. '          ' → logprob: -11.255547523498535
    8. '   
' → logprob: -11.630547523498535
    9. '                
' → logprob: -11.755547523498535
    10. '       ' → logprob: -11.880547523498535

Token 159: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020995871163904667
    2. '            
' → logprob: -6.252099514007568
    3. '          ' → logprob: -9.752099990844727
    4. '
' → logprob: -10.502099990844727
    5. '            ' → logprob: -10.752099990844727
    6. '           
' → logprob: -11.502099990844727
    7. '       ' → logprob: -11.627099990844727
    8. '    
' → logprob: -11.627099990844727
    9. '        
' → logprob: -11.877099990844727
    10. '               ' → logprob: -12.127099990844727

Token 160: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10407370328903198
    2. 'yield' → logprob: -2.9790737628936768
    3. 'if' → logprob: -3.8540737628936768
    4. ' if' → logprob: -4.729073524475098
    5. ' yield' → logprob: -4.854073524475098
    6. 'nums' → logprob: -5.479073524475098
    7. 'numbers' → logprob: -5.729073524475098
    8. ' numbers' → logprob: -7.479073524475098
    9. '
' → logprob: -7.854073524475098
    10. 'data' → logprob: -7.979073524475098

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6972600817680359
    2. ' =' → logprob: -0.8222600817680359
    3. '.strip' → logprob: -2.9472601413726807
    4. '_tokens' → logprob: -6.072259902954102
    5. '.split' → logprob: -6.322259902954102
    6. 's' → logprob: -6.447259902954102
    7. '_parts' → logprob: -6.697259902954102
    8. '.' → logprob: -6.697259902954102
    9. '_strip' → logprob: -7.947259902954102
    10. '_values' → logprob: -8.072259902954102

Token 162: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1797490119934082
    2. ' line' → logprob: -1.8047490119934082
    3. '	line' → logprob: -13.55474853515625
    4. '=line' → logprob: -14.17974853515625
    5. '(line' → logprob: -14.80474853515625
    6. '#line' → logprob: -14.80474853515625
    7. '[line' → logprob: -15.05474853515625
    8. ' ' → logprob: -15.30474853515625
    9. 'list' → logprob: -15.67974853515625
    10. 'lin' → logprob: -15.67974853515625

Token 163: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -6.158350151963532e-05
    2. '.' → logprob: -9.875061988830566
    3. '.rstrip' → logprob: -12.250061988830566
    4. ' .' → logprob: -13.125061988830566
    5. '.split' → logprob: -13.375061988830566
    6. '.trim' → logprob: -13.875061988830566
    7. 'strip' → logprob: -14.125061988830566
    8. '.replace' → logprob: -17.12506103515625
    9. '.l' → logprob: -18.00006103515625
    10. ' strip' → logprob: -18.75006103515625

Token 164: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.111979357432574e-05
    2. '()
' → logprob: -9.62507152557373
    3. '()

' → logprob: -13.62507152557373
    4. ' ()' → logprob: -14.00007152557373
    5. '().' → logprob: -14.12507152557373
    6. '())' → logprob: -14.75007152557373
    7. '()`' → logprob: -15.00007152557373
    8. '()>' → logprob: -15.12507152557373
    9. '()\' → logprob: -15.50007152557373
    10. '()<' → logprob: -15.62507152557373

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.657694418914616e-05
    2. ' if' → logprob: -10.250056266784668
    3. 'if' → logprob: -11.125056266784668
    4. '<|end|>' → logprob: -12.625056266784668
    5. '       ' → logprob: -13.875056266784668
    6. '            
' → logprob: -14.250056266784668
    7. ',' → logprob: -14.875056266784668
    8. '          ' → logprob: -15.125056266784668
    9. '               ' → logprob: -15.250056266784668
    10. '		' → logprob: -15.625056266784668

Token 166: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009632694418542087
    2. '           ' → logprob: -7.00096321105957
    3. ' if' → logprob: -9.87596321105957
    4. '```' → logprob: -15.87596321105957
    5. '               ' → logprob: -16.50096321105957
    6. '   ' → logprob: -17.25096321105957
    7. '       ' → logprob: -17.62596321105957
    8. '#' → logprob: -17.75096321105957
    9. 'If' → logprob: -18.50096321105957
    10. '            
' → logprob: -18.75096321105957

Token 167: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10519222170114517
    2. 'not' → logprob: -2.605192184448242
    3. ' line' → logprob: -4.230192184448242
    4. 'line' → logprob: -4.480192184448242
    5. ' len' → logprob: -10.230192184448242
    6. 'len' → logprob: -10.855192184448242
    7. ' ' → logprob: -11.230192184448242
    8. '   ' → logprob: -13.355192184448242
    9. '(line' → logprob: -13.730192184448242
    10. '#line' → logprob: -13.855192184448242

Token 168: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4740773141384125
    2. ' line' → logprob: -0.9740773439407349
    3. '	line' → logprob: -15.849077224731445
    4. '(line' → logprob: -16.224077224731445
    5. ' ' → logprob: -17.224077224731445
    6. '[line' → logprob: -17.974077224731445
    7. '#line' → logprob: -18.224077224731445
    8. 'Line' → logprob: -18.349077224731445
    9. '```' → logprob: -18.599077224731445
    10. '_line' → logprob: -18.849077224731445

Token 169: '.is' (ID: 3109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003175694728270173
    2. ' or' → logprob: -6.128175735473633
    3. ':
' → logprob: -7.128175735473633
    4. 'or' → logprob: -8.878175735473633
    5. ':return' → logprob: -10.503175735473633
    6. '.startswith' → logprob: -12.378175735473633
    7. '<|end|>' → logprob: -12.503175735473633
    8. '.' → logprob: -12.628175735473633
    9. ' :' → logprob: -12.753175735473633
    10. '):' → logprob: -13.128175735473633

Token 170: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0052030435763299465
    2. 'decimal' → logprob: -5.3802032470703125
    3. 'numeric' → logprob: -7.5052032470703125
    4. 'al' → logprob: -10.880203247070312
    5. 'alpha' → logprob: -11.880203247070312
    6. 'empty' → logprob: -12.630203247070312
    7. 'pace' → logprob: -14.755203247070312
    8. ' digit' → logprob: -14.880203247070312
    9. 'digital' → logprob: -14.880203247070312
    10. 'a' → logprob: -15.380203247070312

Token 171: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0027417545206844807
    2. '()' → logprob: -6.127741813659668
    3. '():
' → logprob: -7.502741813659668
    4. ' ():' → logprob: -12.627741813659668
    5. '():
' → logprob: -14.252741813659668
    6. ':' → logprob: -15.002741813659668
    7. '():

' → logprob: -15.127741813659668
    8. '(' → logprob: -15.127741813659668
    9. '()==' → logprob: -16.87774085998535
    10. 's' → logprob: -17.12774085998535

Token 172: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018244501552544534
    2. '           ' → logprob: -8.750182151794434
    3. ' continue' → logprob: -11.750182151794434
    4. ':' → logprob: -11.875182151794434
    5. '                   ' → logprob: -12.500182151794434
    6. '              ' → logprob: -13.125182151794434
    7. 'continue' → logprob: -14.000182151794434
    8. ' break' → logprob: -14.250182151794434
    9. '```' → logprob: -15.000182151794434
    10. ',' → logprob: -15.625182151794434

Token 173: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022436723113059998
    2. ' continue' → logprob: -5.022436618804932
    3. ' break' → logprob: -5.147436618804932
    4. 'continue' (adapté à ' continue') → logprob: -5.147436618804932
    5. 'break' → logprob: -6.272436618804932
    6. '                   ' → logprob: -6.522436618804932
    7. '           ' → logprob: -7.647436618804932
    8. '   ' → logprob: -9.52243709564209
    9. '```' → logprob: -11.27243709564209
    10. 'return' → logprob: -11.39743709564209

Token 174: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001843801699578762
    2. '            
' → logprob: -6.5018439292907715
    3. 'yield' → logprob: -8.751843452453613
    4. '
' → logprob: -9.126843452453613
    5. '          ' → logprob: -10.501843452453613
    6. '           
' → logprob: -11.751843452453613
    7. '```' → logprob: -12.251843452453613
    8. ' yield' → logprob: -12.501843452453613
    9. '       ' → logprob: -12.501843452453613
    10. '    
' → logprob: -12.876843452453613

Token 175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005600620643235743
    2. '            
' → logprob: -7.625560283660889
    3. '<|end|>' → logprob: -10.37555980682373
    4. '          ' → logprob: -11.75055980682373
    5. '            ' → logprob: -12.00055980682373
    6. '               ' → logprob: -12.25055980682373
    7. ',' → logprob: -12.75055980682373
    8. '<|end|>' → logprob: -12.87555980682373
    9. 'return' → logprob: -13.12555980682373
    10. '```' → logprob: -13.12555980682373

Token 176: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.39359208941459656
    2. '           ' → logprob: -1.643592119216919
    3. 'num' → logprob: -2.643592119216919
    4. 'count' → logprob: -3.393592119216919
    5. 'size' → logprob: -4.26859188079834
    6. 'length' → logprob: -4.89359188079834
    7. ' n' → logprob: -5.64359188079834
    8. 'N' → logprob: -7.01859188079834
    9. 'number' → logprob: -7.89359188079834
    10. 'yield' → logprob: -8.14359188079834

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016332058236002922
    2. '=' → logprob: -4.141332149505615
    3. '           ' → logprob: -9.141331672668457
    4. '       ' → logprob: -10.266331672668457
    5. '   ' → logprob: -10.391331672668457
    6. '        ' → logprob: -10.766331672668457
    7. ' ' → logprob: -10.891331672668457
    8. '         ' → logprob: -11.266331672668457
    9. '=int' → logprob: -11.641331672668457
    10. '    ' → logprob: -11.766331672668457

Token 178: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804149478673935
    2. ' int' → logprob: -3.288041591644287
    3. '[int' → logprob: -16.663042068481445
    4. '(int' → logprob: -18.288042068481445
    5. '   ' → logprob: -18.288042068481445
    6. '=int' → logprob: -18.663042068481445
    7. '<int' → logprob: -18.913042068481445
    8. ' ' → logprob: -19.163042068481445
    9. '	int' → logprob: -19.788042068481445
    10. ':int' → logprob: -19.913042068481445

Token 179: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -5.860340752406046e-05
    2. '(' → logprob: -9.7500581741333
    3. 'line' → logprob: -16.875059127807617
    4. '(n' → logprob: -17.000059127807617
    5. '(
' → logprob: -17.250059127807617
    6. '=line' → logprob: -17.500059127807617
    7. '[line' → logprob: -17.875059127807617
    8. ' line' → logprob: -17.875059127807617
    9. ' (' → logprob: -18.750059127807617
    10. '(lines' → logprob: -18.875059127807617

Token 180: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04312890022993088
    2. ')
' → logprob: -3.1681289672851562
    3. '           ' → logprob: -9.293128967285156
    4. ')
' → logprob: -10.543128967285156
    5. '               ' → logprob: -12.918128967285156
    6. ')`' → logprob: -12.918128967285156
    7. '       ' → logprob: -13.168128967285156
    8. ' )' → logprob: -13.793128967285156
    9. ')`
' → logprob: -14.043128967285156
    10. ')

' → logprob: -14.293128967285156

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019710339256562293
    2. '       ' → logprob: -9.250197410583496
    3. 'yield' → logprob: -9.625197410583496
    4. 'if' → logprob: -11.250197410583496
    5. '            
' → logprob: -11.250197410583496
    6. ' yield' → logprob: -13.500197410583496
    7. '          ' → logprob: -13.500197410583496
    8. ' if' → logprob: -13.625197410583496
    9. '               ' → logprob: -14.125197410583496
    10. '		' → logprob: -14.125197410583496

Token 182: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6158826351165771
    2. 'if' (adapté à ' if') → logprob: -1.1158826351165771
    3. 'data' → logprob: -2.615882635116577
    4. 'nums' → logprob: -3.740882635116577
    5. 'arr' → logprob: -4.365882873535156
    6. 'lines' → logprob: -4.865882873535156
    7. 'numbers' → logprob: -4.990882873535156
    8. 'values' → logprob: -6.365882873535156
    9. ' if' → logprob: -6.865882873535156
    10. 'rows' → logprob: -7.115882873535156

Token 183: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08895484358072281
    2. 'n' → logprob: -2.4639549255371094
    3. ' not' → logprob: -11.96395492553711
    4. ' ' → logprob: -12.08895492553711
    5. '	n' → logprob: -13.21395492553711
    6. 'not' → logprob: -15.08895492553711
    7. ' ' → logprob: -15.46395492553711
    8. '(n' → logprob: -15.77645492553711
    9. '   ' → logprob: -15.90145492553711
    10. 'n't' → logprob: -15.96395492553711

Token 184: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.41846412420272827
    2. ' ==' → logprob: -1.293464183807373
    3. '<=' → logprob: -3.043464183807373
    4. ' <=' → logprob: -3.918464183807373
    5. '<' → logprob: -10.418463706970215
    6. '```' → logprob: -11.418463706970215
    7. '=' → logprob: -11.668463706970215
    8. ' <' → logprob: -11.793463706970215
    9. '===' → logprob: -12.168463706970215
    10. '   ' → logprob: -12.168463706970215

Token 185: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024763736873865128
    2. ' ' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.252476692199707
    4. '  ' → logprob: -15.877476692199707
    5. '۰' → logprob: -16.75247573852539
    6. '    ' → logprob: -17.37747573852539
    7. '```' → logprob: -17.43997573852539
    8. ' ' → logprob: -17.43997573852539
    9. '-' → logprob: -18.18997573852539
    10. '       ' → logprob: -18.25247573852539

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012415809032972902
    2. ' ' → logprob: -9.000123977661133
    3. '```' → logprob: -15.250123977661133
    4. '-' → logprob: -16.375123977661133
    5. '   ' → logprob: -16.875123977661133
    6. ')' → logprob: -17.125123977661133
    7. '۰' → logprob: -17.125123977661133
    8. '=' → logprob: -17.312623977661133
    9. '  ' → logprob: -17.437623977661133
    10. ' ' → logprob: -17.625123977661133

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12693630158901215
    2. ':
' → logprob: -2.126936197280884
    3. '               ' → logprob: -12.751935958862305
    4. '           ' → logprob: -13.376935958862305
    5. ':
' → logprob: -13.376935958862305
    6. ':return' → logprob: -13.376935958862305
    7. ':

' → logprob: -15.251935958862305
    8. ' :' → logprob: -15.626935958862305
    9. ' :
' → logprob: -16.376935958862305
    10. '   ' → logprob: -16.626935958862305

Token 188: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.146429223008454e-05
    2. 'break' → logprob: -10.37506103515625
    3. '           ' → logprob: -10.75006103515625
    4. ' break' → logprob: -12.75006103515625
    5. '
' → logprob: -13.00006103515625
    6. '              ' → logprob: -13.75006103515625
    7. '                   ' → logprob: -13.75006103515625
    8. '   ' → logprob: -15.00006103515625
    9. 'return' → logprob: -15.00006103515625
    10. '                ' → logprob: -15.62506103515625

Token 189: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.24242600798606873
    2. '               ' → logprob: -2.2424259185791016
    3. ' break' → logprob: -2.2424259185791016
    4. 'return' → logprob: -5.992425918579102
    5. ' return' → logprob: -8.492425918579102
    6. '                   ' → logprob: -8.992425918579102
    7. '	break' → logprob: -10.617425918579102
    8. '           ' → logprob: -11.742425918579102
    9. '                ' → logprob: -11.867425918579102
    10. '   ' → logprob: -11.867425918579102

Token 190: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002194398082792759
    2. '            
' → logprob: -6.252194404602051
    3. '
' → logprob: -9.00219440460205
    4. '       ' → logprob: -9.25219440460205
    5. '        
' → logprob: -11.75219440460205
    6. '<|end|>' → logprob: -11.75219440460205
    7. '          ' → logprob: -11.87719440460205
    8. '		' → logprob: -12.50219440460205
    9. '    
' → logprob: -13.00219440460205
    10. '           
' → logprob: -13.12719440460205

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012320445966906846
    2. '            
' → logprob: -9.750123023986816
    3. '
' → logprob: -10.875123023986816
    4. 'yield' → logprob: -10.875123023986816
    5. '       ' → logprob: -11.000123023986816
    6. '```' → logprob: -12.375123023986816
    7. '          ' → logprob: -13.125123023986816
    8. '<|end|>' → logprob: -13.500123023986816
    9. '        
' → logprob: -14.875123023986816
    10. '               ' → logprob: -15.000123023986816

Token 192: ' data' (ID: 1238)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24108438193798065
    2. 'data' (adapté à ' data') → logprob: -2.366084337234497
    3. 'nums' → logprob: -2.866084337234497
    4. 'numbers' → logprob: -3.616084337234497
    5. 'lines' → logprob: -3.866084337234497
    6. 'values' → logprob: -5.241084575653076
    7. 'yield' → logprob: -5.616084575653076
    8. '            
' → logprob: -7.116084575653076
    9. 'arr' → logprob: -7.366084575653076
    10. 'elements' → logprob: -7.616084575653076

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10367567092180252
    2. '=' → logprob: -2.353675603866577
    3. ':' → logprob: -6.103675842285156
    4. '=[]' → logprob: -6.728675842285156
    5. '=[]
' → logprob: -11.478675842285156
    6. '_list' → logprob: -11.978675842285156
    7. 's' → logprob: -12.103675842285156
    8. '_line' → logprob: -13.353675842285156
    9. '_' → logprob: -13.603675842285156
    10. ' ' → logprob: -14.103675842285156

Token 194: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.476585328578949
    2. '[]' → logprob: -0.976585328578949
    3. '[' → logprob: -6.976585388183594
    4. '[self' → logprob: -7.726585388183594
    5. ' []' → logprob: -7.976585388183594
    6. '[
' → logprob: -7.976585388183594
    7. ' []
' → logprob: -8.851585388183594
    8. '[next' → logprob: -9.601585388183594
    9. '[int' → logprob: -9.851585388183594
    10. ' [' → logprob: -9.851585388183594

Token 195: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000726252153981477
    2. ' for' → logprob: -7.750726222991943
    3. 'for' → logprob: -8.375726699829102
    4. '		' → logprob: -10.750726699829102
    5. '	       ' → logprob: -11.250726699829102
    6. '       ' → logprob: -11.500726699829102
    7. '               ' → logprob: -12.375726699829102
    8. '   ' → logprob: -12.750726699829102
    9. 'while' → logprob: -12.875726699829102
    10. '		   ' → logprob: -12.875726699829102

Token 196: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2209666669368744
    2. '           ' → logprob: -1.7209666967391968
    3. 'while' → logprob: -3.9709665775299072
    4. ' for' → logprob: -7.720966815948486
    5. '       ' → logprob: -9.845966339111328
    6. ' while' → logprob: -12.220966339111328
    7. '   ' → logprob: -12.220966339111328
    8. 'count' (adapté à ' count') → logprob: -13.470966339111328
    9. '               ' → logprob: -15.595966339111328
    10. '	for' → logprob: -16.095966339111328

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196123123168945
    2. ' =' → logprob: -1.5019612312316895
    3. ':' → logprob: -12.001960754394531
    4. 'while' → logprob: -12.001960754394531
    5. 'for' → logprob: -12.001960754394531
    6. '   ' → logprob: -12.251960754394531
    7. '    ' → logprob: -12.501960754394531
    8. '+=' → logprob: -13.876960754394531
    9. ' +=' → logprob: -14.001960754394531
    10. ' ' → logprob: -14.126960754394531

Token 198: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006036158185452223
    2. ' ' → logprob: -5.131036281585693
    3. 'n' → logprob: -9.256035804748535
    4. ' n' → logprob: -11.381035804748535
    5. '   ' → logprob: -14.506035804748535
    6. '10' → logprob: -17.00603675842285
    7. '1' → logprob: -17.13103675842285
    8. ' ' → logprob: -18.13103675842285
    9. '=' → logprob: -18.25603675842285
    10. '20' → logprob: -18.25603675842285

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00036382899270392954
    2. 'n' → logprob: -8.500364303588867
    3. ' ' → logprob: -8.750364303588867
    4. ' n' → logprob: -13.750364303588867
    5. '   ' → logprob: -14.500364303588867
    6. '10' → logprob: -16.250364303588867
    7. '1' → logprob: -16.625364303588867
    8. '2' → logprob: -17.375364303588867
    9. '20' → logprob: -17.500364303588867
    10. '100' → logprob: -18.187864303588867

Token 200: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009467653930187225
    2. '<|end|>' → logprob: -5.009467601776123
    3. ' while' → logprob: -7.009467601776123
    4. '<|end|>' → logprob: -7.134467601776123
    5. '
' → logprob: -8.384468078613281
    6. 'while' → logprob: -8.509468078613281
    7. '		' → logprob: -9.009468078613281
    8. '   ' → logprob: -9.134468078613281
    9. '       ' → logprob: -9.259468078613281
    10. '	       ' → logprob: -9.884468078613281

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.484132169745862e-05
    2. '<|end|>' → logprob: -10.125094413757324
    3. 'while' → logprob: -11.000094413757324
    4. '       ' → logprob: -11.125094413757324
    5. '   ' → logprob: -11.750094413757324
    6. ' while' → logprob: -11.750094413757324
    7. '	       ' → logprob: -12.625094413757324
    8. '<|end|>' → logprob: -13.250094413757324
    9. '		' → logprob: -14.625094413757324
    10. '          ' → logprob: -14.875094413757324

Token 202: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.32884934544563293
    2. '           ' → logprob: -1.3288493156433105
    3. ' while' → logprob: -4.2038493156433105
    4. '   ' → logprob: -7.7038493156433105
    5. '       ' → logprob: -9.578849792480469
    6. '	while' → logprob: -12.328849792480469
    7. '               ' → logprob: -13.328849792480469
    8. '```' → logprob: -14.453849792480469
    9. '
' → logprob: -14.828849792480469
    10. '          ' → logprob: -15.328849792480469

Token 203: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07889022678136826
    2. ' count' → logprob: -2.578890323638916
    3. '	count' → logprob: -15.078889846801758
    4. '(count' → logprob: -15.953889846801758
    5. '<count' → logprob: -16.703889846801758
    6. ' True' → logprob: -18.078889846801758
    7. '$count' → logprob: -18.453889846801758
    8. '.count' → logprob: -18.453889846801758
    9. 'True' → logprob: -18.578889846801758
    10. '=count' → logprob: -18.828889846801758

Token 204: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.039039745926856995
    2. '<' → logprob: -3.2890398502349854
    3. '<n' → logprob: -6.914039611816406
    4. ' ' → logprob: -13.789039611816406
    5. '<size' → logprob: -14.664039611816406
    6. '<count' → logprob: -14.914039611816406
    7. '<len' → logprob: -14.914039611816406
    8. '<num' → logprob: -15.164039611816406
    9. '<m' → logprob: -15.289039611816406
    10. '   ' → logprob: -15.414039611816406

Token 205: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3868752717971802
    2. ' n' → logprob: -1.1368752717971802
    3. '	n' → logprob: -12.51187515258789
    4. '
' → logprob: -15.88687515258789
    5. ')n' → logprob: -16.01187515258789
    6. '_n' → logprob: -16.26187515258789
    7. '<n' → logprob: -17.26187515258789
    8. '(n' → logprob: -17.63687515258789
    9. ' ' → logprob: -17.88687515258789
    10. '<|end|>' → logprob: -17.88687515258789

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20150339603424072
    2. ':
' → logprob: -1.7015033960342407
    3. ' and' → logprob: -10.07650375366211
    4. '           ' → logprob: -11.82650375366211
    5. ' :' → logprob: -11.95150375366211
    6. '):
' → logprob: -12.20150375366211
    7. ':
' → logprob: -12.20150375366211
    8. ' :
' → logprob: -12.20150375366211
    9. '   ' → logprob: -12.45150375366211
    10. '               ' → logprob: -12.57650375366211

Token 207: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000800811278168112
    2. '           ' → logprob: -7.500800609588623
    3. '   ' → logprob: -8.500801086425781
    4. '	           ' → logprob: -11.500801086425781
    5. ' line' → logprob: -11.625801086425781
    6. '       ' → logprob: -11.625801086425781
    7. '                   ' → logprob: -12.750801086425781
    8. '#line' → logprob: -13.000801086425781
    9. '<|end|>' → logprob: -13.125801086425781
    10. '```' → logprob: -13.250801086425781

Token 208: ' c' (ID: 274)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.303202748298645
    2. 'line' → logprob: -1.678202748298645
    3. '               ' → logprob: -2.8032026290893555
    4. '   ' → logprob: -5.1782026290893555
    5. '                   ' → logprob: -5.8032026290893555
    6. 'next' → logprob: -6.5532026290893555
    7. ' lines' → logprob: -7.1782026290893555
    8. '	line' → logprob: -7.1782026290893555
    9. 'data' → logprob: -7.3032026290893555
    10. '           ' → logprob: -7.3032026290893555

Token 209: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5447089076042175
    2. '   ' → logprob: -1.9197089672088623
    3. '_line' → logprob: -2.4197089672088623
    4. '           ' → logprob: -2.4197089672088623
    5. '=line' → logprob: -3.6697089672088623
    6. '       ' → logprob: -4.044708728790283
    7. '               ' → logprob: -4.419708728790283
    8. 'ont' → logprob: -4.794708728790283
    9. ' line' → logprob: -5.169708728790283
    10. 'h' → logprob: -5.419708728790283

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054884087294340134
    2. '=' → logprob: -2.929884195327759
    3. ' ' → logprob: -14.42988395690918
    4. '=line' → logprob: -14.92988395690918
    5. ' ' → logprob: -15.42988395690918
    6. 's' → logprob: -15.55488395690918
    7. '           ' → logprob: -15.80488395690918
    8. '   ' → logprob: -16.30488395690918
    9. 'line' → logprob: -16.42988395690918
    10. '=self' → logprob: -16.92988395690918

Token 211: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07134002447128296
    2. ' self' → logprob: -2.6963400840759277
    3. '               ' → logprob: -7.196340084075928
    4. '           ' → logprob: -7.446340084075928
    5. '(self' → logprob: -10.44633960723877
    6. '                   ' → logprob: -10.82133960723877
    7. '	self' → logprob: -11.94633960723877
    8. '=self' → logprob: -12.69633960723877
    9. 's' → logprob: -12.94633960723877
    10. '   ' → logprob: -13.07133960723877

Token 212: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.0011855880729854107
    2. 'source' → logprob: -6.876185417175293
    3. '.' → logprob: -8.876185417175293
    4. ' .' → logprob: -12.501185417175293
    5. '.next' → logprob: -12.501185417175293
    6. ' source' → logprob: -13.001185417175293
    7. '	source' → logprob: -13.876185417175293
    8. '.s' → logprob: -14.251185417175293
    9. 's' → logprob: -14.501185417175293
    10. '   ' → logprob: -15.001185417175293

Token 213: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -1.5451681974809617e-05
    2. '.' → logprob: -11.250015258789062
    3. 'next' → logprob: -13.000015258789062
    4. ' .' → logprob: -16.125015258789062
    5. ' next' → logprob: -17.000015258789062
    6. '().' → logprob: -18.125015258789062
    7. '	next' → logprob: -19.750015258789062
    8. '   ' → logprob: -20.125015258789062
    9. ').' → logprob: -20.250015258789062
    10. 'Next' → logprob: -20.375015258789062

Token 214: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.4974866644479334e-05
    2. 'line' → logprob: -11.125015258789062
    3. 'Line' → logprob: -16.375015258789062
    4. '_LINE' → logprob: -17.125015258789062
    5. '()' → logprob: -17.875015258789062
    6. ' line' → logprob: -18.000015258789062
    7. '_' → logprob: -18.250015258789062
    8. '```' → logprob: -19.000015258789062
    9. '_token' → logprob: -19.750015258789062
    10. '_Line' → logprob: -20.000015258789062

Token 215: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06200063228607178
    2. '()
' → logprob: -2.8120007514953613
    3. '()
' → logprob: -10.687000274658203
    4. '               ' → logprob: -12.562000274658203
    5. ')' → logprob: -13.187000274658203
    6. '()

' → logprob: -13.562000274658203
    7. '           ' → logprob: -14.312000274658203
    8. ' ()' → logprob: -14.687000274658203
    9. '()<' → logprob: -14.687000274658203
    10. '())' → logprob: -14.812000274658203

Token 216: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00039647609810344875
    2. '<|end|>' → logprob: -8.000396728515625
    3. '<|end|>' → logprob: -10.625396728515625
    4. '                
' → logprob: -11.125396728515625
    5. ' ' → logprob: -11.875396728515625
    6. '           ' → logprob: -12.750396728515625
    7. ')' → logprob: -13.250396728515625
    8. '              ' → logprob: -14.000396728515625
    9. '	           ' → logprob: -14.125396728515625
    10. '  
' → logprob: -14.125396728515625

Token 217: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2842461168766022
    2. ' if' → logprob: -1.7842460870742798
    3. 'if' (adapté à ' if') → logprob: -2.5342462062835693
    4. '           ' → logprob: -8.784246444702148
    5. '	           ' → logprob: -11.909246444702148
    6. '	if' → logprob: -12.909246444702148
    7. '                   ' → logprob: -13.409246444702148
    8. '		       ' → logprob: -13.784246444702148
    9. ' ' → logprob: -13.909246444702148
    10. '                
' → logprob: -13.909246444702148

Token 218: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.038070641458034515
    2. ' c' → logprob: -3.2880706787109375
    3. '               ' → logprob: -10.663070678710938
    4. '                   ' → logprob: -12.663070678710938
    5. '	c' → logprob: -14.038070678710938
    6. '                ' → logprob: -14.038070678710938
    7. '           ' → logprob: -15.663070678710938
    8. '            ' → logprob: -15.788070678710938
    9. 'None' → logprob: -16.288070678710938
    10. '              ' → logprob: -16.663070678710938

Token 219: '_line' (ID: 14418)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.16045992076396942
    2. 'c' → logprob: -1.9104598760604858
    3. ' None' → logprob: -9.535459518432617
    4. 'None' → logprob: -9.535459518432617
    5. ' is' → logprob: -9.910459518432617
    6. '                   ' → logprob: -11.160459518432617
    7. '               ' → logprob: -11.410459518432617
    8. '                ' → logprob: -12.660459518432617
    9. 'is' → logprob: -12.660459518432617
    10. ' ' → logprob: -13.410459518432617

Token 220: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.005237906239926815
    2. 'is' → logprob: -5.255238056182861
    3. ' ' → logprob: -12.505237579345703
    4. '	is' → logprob: -16.255237579345703
    5. '    ' → logprob: -16.505237579345703
    6. 's' → logprob: -16.505237579345703
    7. ' ' → logprob: -17.130237579345703
    8. ' )' → logprob: -17.255237579345703
    9. ' in' → logprob: -17.880237579345703
    10. ' 
' → logprob: -18.005237579345703

Token 221: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029750484973192215
    2. ' None' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.27975082397461
    4. ' ' → logprob: -17.40475082397461
    5. '=None' → logprob: -17.40475082397461
    6. '  ' → logprob: -19.15475082397461
    7. '(None' → logprob: -19.40475082397461
    8. '    ' → logprob: -19.52975082397461
    9. 'not' → logprob: -19.77975082397461
    10. '_None' → logprob: -20.02975082397461

Token 222: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2714509069919586
    2. '                   ' → logprob: -1.7714508771896362
    3. ':' → logprob: -2.896450996398926
    4. ' or' → logprob: -4.896450996398926
    5. '               ' → logprob: -5.521450996398926
    6. '<|end|>' → logprob: -8.146450996398926
    7. '           ' → logprob: -8.646450996398926
    8. '):
' → logprob: -9.021450996398926
    9. '                       ' → logprob: -9.396450996398926
    10. ',' → logprob: -9.521450996398926

Token 223: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012489237124100327
    2. '               ' → logprob: -6.876248836517334
    3. ' break' → logprob: -9.376249313354492
    4. 'break' → logprob: -9.376249313354492
    5. '                       ' → logprob: -10.626249313354492
    6. '   ' → logprob: -11.501249313354492
    7. '           ' → logprob: -12.376249313354492
    8. '                  ' → logprob: -13.376249313354492
    9. '		           ' → logprob: -13.376249313354492
    10. '	               ' → logprob: -13.876249313354492

Token 224: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.339002788066864
    2. '                   ' → logprob: -2.089002847671509
    3. ' break' → logprob: -2.089002847671509
    4. '                       ' → logprob: -3.339002847671509
    5. '               ' → logprob: -5.46400260925293
    6. '	break' → logprob: -9.71400260925293
    7. '   ' → logprob: -10.21400260925293
    8. '           ' → logprob: -10.46400260925293
    9. 'raise' → logprob: -10.58900260925293
    10. 'return' → logprob: -10.83900260925293

Token 225: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00026383911608718336
    2. '                
' → logprob: -9.000264167785645
    3. '
' → logprob: -9.125264167785645
    4. '<|end|>' → logprob: -11.000264167785645
    5. '           ' → logprob: -12.750264167785645
    6. '  
' → logprob: -13.250264167785645
    7. ',' → logprob: -13.625264167785645
    8. '			' → logprob: -13.750264167785645
    9. '               
' → logprob: -14.000264167785645
    10. '                   ' → logprob: -14.125264167785645

Token 226: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007152927573770285
    2. '                
' → logprob: -7.625715255737305
    3. '
' → logprob: -8.750715255737305
    4. '<|end|>' → logprob: -11.625715255737305
    5. '           ' → logprob: -11.750715255737305
    6. '                ' → logprob: -11.750715255737305
    7. '              ' → logprob: -11.875715255737305
    8. '                   ' → logprob: -12.000715255737305
    9. '               
' → logprob: -12.125715255737305
    10. '			' → logprob: -12.125715255737305

Token 227: ' c' (ID: 274)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002853021025657654
    2. 'tokens' → logprob: -6.877852916717529
    3. 'numbers' → logprob: -7.502852916717529
    4. 'data' → logprob: -7.752852916717529
    5. 'c' (adapté à ' c') → logprob: -8.377853393554688
    6. 'nums' → logprob: -8.502853393554688
    7. '                
' → logprob: -9.752853393554688
    8. '           ' → logprob: -9.752853393554688
    9. ' numbers' → logprob: -10.127853393554688
    10. ' data' → logprob: -10.252853393554688

Token 228: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0003769303730223328
    2. ' =' → logprob: -8.75037670135498
    3. '_lines' → logprob: -9.87537670135498
    4. '_tokens' → logprob: -10.12537670135498
    5. '=line' → logprob: -10.62537670135498
    6. '_data' → logprob: -10.87537670135498
    7. '_' → logprob: -11.00037670135498
    8. '=' → logprob: -11.12537670135498
    9. 'line' → logprob: -11.12537670135498
    10. '               ' → logprob: -11.75037670135498

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38714611530303955
    2. ' =' → logprob: -1.1371461153030396
    3. 's' → logprob: -8.88714599609375
    4. '=line' → logprob: -9.01214599609375
    5. '_strip' → logprob: -12.76214599609375
    6. '=c' → logprob: -12.88714599609375
    7. '.strip' → logprob: -13.38714599609375
    8. '=cut' → logprob: -14.01214599609375
    9. 'strip' → logprob: -14.26214599609375
    10. '=
' → logprob: -14.26214599609375

Token 230: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006715370807796717
    2. ' c' → logprob: -5.006715297698975
    3. '               ' → logprob: -17.131715774536133
    4. '                   ' → logprob: -18.131715774536133
    5. ')c' → logprob: -18.881715774536133
    6. ' ' → logprob: -19.381715774536133
    7. '	c' → logprob: -19.506715774536133
    8. '
' → logprob: -20.506715774536133
    9. 'strip' → logprob: -20.631715774536133
    10. 'с' → logprob: -21.381715774536133

Token 231: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.128163257315464e-07
    2. 'line' → logprob: -15.625
    3. '_LINE' → logprob: -16.375
    4. '_' → logprob: -17.0
    5. 'ine' → logprob: -17.75
    6. 'Line' → logprob: -19.375
    7. '```' → logprob: -19.625
    8. '_Line' → logprob: -20.125
    9. '_l' → logprob: -20.875
    10. '\' → logprob: -21.0

Token 232: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.004121022764593363
    2. '.' → logprob: -5.504120826721191
    3. '.rstrip' → logprob: -10.379120826721191
    4. ' .' → logprob: -12.004120826721191
    5. '.split' → logprob: -12.879120826721191
    6. 'strip' → logprob: -13.254120826721191
    7. '               ' → logprob: -14.004120826721191
    8. '                   ' → logprob: -16.504121780395508
    9. '.trim' → logprob: -16.879121780395508
    10. '.replace' → logprob: -17.629121780395508

Token 233: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10027093440294266
    2. '()
' → logprob: -2.350270986557007
    3. '           ' → logprob: -10.100271224975586
    4. '               ' → logprob: -11.225271224975586
    5. '()

' → logprob: -12.225271224975586
    6. '()
' → logprob: -12.725271224975586
    7. '().' → logprob: -14.850271224975586
    8. '()\' → logprob: -15.350271224975586
    9. '()`' → logprob: -15.350271224975586
    10. '():
' → logprob: -15.475271224975586

Token 234: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001552665780764073
    2. 'if' → logprob: -9.875155448913574
    3. 'tokens' → logprob: -9.875155448913574
    4. ' if' → logprob: -10.875155448913574
    5. '           ' → logprob: -11.500155448913574
    6. 'numbers' → logprob: -11.875155448913574
    7. '	           ' → logprob: -12.375155448913574
    8. '                   ' → logprob: -13.500155448913574
    9. ' tokens' → logprob: -13.500155448913574
    10. '                
' → logprob: -13.625155448913574

Token 235: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11557386070489883
    2. 'for' → logprob: -3.1155738830566406
    3. 'numbers' → logprob: -3.4905738830566406
    4. 'data' → logprob: -4.240573883056641
    5. 'nums' → logprob: -4.365573883056641
    6. 'values' → logprob: -5.865573883056641
    7. 'parts' → logprob: -5.990573883056641
    8. '               ' → logprob: -6.990573883056641
    9. '           ' → logprob: -7.865573883056641
    10. 'tokens' → logprob: -8.36557388305664

Token 236: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11657045036554337
    2. ' not' → logprob: -2.241570472717285
    3. 'c' → logprob: -5.616570472717285
    4. ' c' → logprob: -9.241570472717285
    5. '	not' → logprob: -12.241570472717285
    6. ' ' → logprob: -14.491570472717285
    7. '(not' → logprob: -14.741570472717285
    8. 'len' → logprob: -14.741570472717285
    9. '   ' → logprob: -15.741570472717285
    10. '''' → logprob: -15.866570472717285

Token 237: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0021877337712794542
    2. ' c' → logprob: -6.127187728881836
    3. 'all' → logprob: -13.127187728881836
    4. ' all' → logprob: -15.252187728881836
    5. '(c' → logprob: -15.502187728881836
    6. ')c' → logprob: -16.752187728881836
    7. '
' → logprob: -17.127187728881836
    8. '	c' → logprob: -17.127187728881836
    9. 'line' → logprob: -17.377187728881836
    10. ' ' → logprob: -17.377187728881836

Token 238: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.570319702499546e-05
    2. 'line' → logprob: -10.875025749206543
    3. '_' → logprob: -12.750025749206543
    4. '._' → logprob: -13.500025749206543
    5. '_LINE' → logprob: -14.250025749206543
    6. 'Line' → logprob: -14.875025749206543
    7. '```' → logprob: -15.250025749206543
    8. 'ine' → logprob: -15.500025749206543
    9. '   ' → logprob: -16.375024795532227
    10. '.Line' → logprob: -16.500024795532227

Token 239: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.003464651992544532
    2. '.' → logprob: -5.753464698791504
    3. ' or' → logprob: -8.753464698791504
    4. 'isdigit' → logprob: -9.628464698791504
    5. '.startswith' → logprob: -11.003464698791504
    6. ':
' → logprob: -11.128464698791504
    7. ' .' → logprob: -11.128464698791504
    8. ':' → logprob: -12.253464698791504
    9. '               ' → logprob: -12.628464698791504
    10. '.endswith' → logprob: -12.753464698791504

Token 240: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -2.8921695047756657e-05
    2. 'alpha' → logprob: -11.250028610229492
    3. 'decimal' → logprob: -11.500028610229492
    4. 'None' → logprob: -13.250028610229492
    5. 'al' → logprob: -13.625028610229492
    6. 'numeric' → logprob: -13.875028610229492
    7. 'digits' → logprob: -14.000028610229492
    8. ' digit' → logprob: -15.375028610229492
    9. 'isdigit' → logprob: -15.875028610229492
    10. 'empty' → logprob: -16.000028610229492

Token 241: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.004131711088120937
    2. '():' → logprob: -5.50413179397583
    3. '()' → logprob: -9.879131317138672
    4. '():

' → logprob: -13.879131317138672
    5. '():
' → logprob: -14.504131317138672
    6. '()):
' → logprob: -15.004131317138672
    7. ':
' → logprob: -15.879131317138672
    8. '):
' → logprob: -17.004131317138672
    9. '()
' → logprob: -17.254131317138672
    10. '                   ' → logprob: -17.879131317138672

Token 242: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008078443352133036
    2. 'continue' → logprob: -7.250807762145996
    3. '               ' → logprob: -9.375807762145996
    4. ' continue' → logprob: -12.125807762145996
    5. '           ' → logprob: -12.750807762145996
    6. '                       ' → logprob: -13.250807762145996
    7. '   ' → logprob: -13.750807762145996
    8. '
' → logprob: -14.500807762145996
    9. '                  ' → logprob: -15.000807762145996
    10. '```' → logprob: -15.125807762145996

Token 243: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3526943325996399
    2. 'continue' (adapté à ' continue') → logprob: -1.3526942729949951
    3. ' continue' → logprob: -3.477694272994995
    4. '                       ' → logprob: -5.727694511413574
    5. '               ' → logprob: -5.852694511413574
    6. '   ' → logprob: -6.477694511413574
    7. '	continue' → logprob: -9.727694511413574
    8. '           ' → logprob: -10.477694511413574
    9. '       ' → logprob: -11.102694511413574
    10. ' ' → logprob: -11.977694511413574

Token 244: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.9875325708417222e-05
    2. '                
' → logprob: -11.000029563903809
    3. 'data' → logprob: -13.250029563903809
    4. '                   ' → logprob: -13.250029563903809
    5. '```' → logprob: -13.375029563903809
    6. '
' → logprob: -13.875029563903809
    7. '           ' → logprob: -14.000029563903809
    8. 's' → logprob: -14.125029563903809
    9. ',' → logprob: -14.125029563903809
    10. '<|end|>' → logprob: -14.250029563903809

Token 245: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001149867384810932
    2. 'data' → logprob: -10.375115394592285
    3. '           ' → logprob: -10.500115394592285
    4. '                
' → logprob: -10.750115394592285
    5. '```' → logprob: -11.000115394592285
    6. '
' → logprob: -12.125115394592285
    7. '                   ' → logprob: -12.750115394592285
    8. '              ' → logprob: -12.875115394592285
    9. 'tokens' → logprob: -13.750115394592285
    10. '               
' → logprob: -14.125115394592285

Token 246: ' c' (ID: 274)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31609123945236206
    2. 'data' → logprob: -1.4410912990570068
    3. ' data' → logprob: -3.566091299057007
    4. 'numbers' → logprob: -6.191091060638428
    5. 'num' → logprob: -6.316091060638428
    6. 'number' → logprob: -7.316091060638428
    7. 'nums' → logprob: -7.441091060638428
    8. '           ' → logprob: -7.816091060638428
    9. ' numbers' → logprob: -7.941091060638428
    10. ' number' → logprob: -10.316091537475586

Token 247: ' =' (ID: 314)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.676856517791748
    2. '_line' → logprob: -1.051856517791748
    3. '_data' → logprob: -2.551856517791748
    4. '           ' → logprob: -3.426856517791748
    5. '               ' → logprob: -4.926856517791748
    6. '_value' → logprob: -5.051856517791748
    7. '_list' → logprob: -6.051856517791748
    8. 'value' → logprob: -6.051856517791748
    9. 'ata' → logprob: -6.301856517791748
    10. 'ount' → logprob: -7.176856517791748

Token 248: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04859191179275513
    2. ' int' → logprob: -3.0485918521881104
    3. '[int' → logprob: -12.423591613769531
    4. '               ' → logprob: -15.673591613769531
    5. '	int' → logprob: -16.04859161376953
    6. '=int' → logprob: -16.17359161376953
    7. ':int' → logprob: -16.79859161376953
    8. '(int' → logprob: -16.79859161376953
    9. '<int' → logprob: -17.79859161376953
    10. ',int' → logprob: -17.79859161376953

Token 249: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.062089577317237854
    2. '(' → logprob: -2.812089681625366
    3. '(
' → logprob: -9.187089920043945
    4. 'c' → logprob: -11.187089920043945
    5. ' (' → logprob: -12.312089920043945
    6. '(

' → logprob: -13.937089920043945
    7. ')c' → logprob: -16.187089920043945
    8. ')' → logprob: -17.062089920043945
    9. ' c' → logprob: -17.312089920043945
    10. '(
' → logprob: -17.687089920043945

Token 250: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00010270876373397186
    2. 'line' → logprob: -9.625102996826172
    3. '_c' → logprob: -10.500102996826172
    4. 'c' → logprob: -12.375102996826172
    5. ')' → logprob: -13.375102996826172
    6. '_LINE' → logprob: -14.625102996826172
    7. '_' → logprob: -14.625102996826172
    8. 'Line' → logprob: -14.750102996826172
    9. ' _' → logprob: -15.000102996826172
    10. '```' → logprob: -15.125102996826172

Token 251: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4747024178504944
    2. ')' → logprob: -0.9747024178504944
    3. '               ' → logprob: -7.47470235824585
    4. ')
' → logprob: -9.849702835083008
    5. ')

' → logprob: -13.224702835083008
    6. '           ' → logprob: -14.474702835083008
    7. ')`
' → logprob: -14.599702835083008
    8. ' )
' → logprob: -15.099702835083008
    9. ')#' → logprob: -15.224702835083008
    10. '[' → logprob: -15.349702835083008

Token 252: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022046364028938115
    2. 'data' → logprob: -8.62522029876709
    3. '                
' → logprob: -10.87522029876709
    4. '```' → logprob: -12.37522029876709
    5. '           ' → logprob: -13.12522029876709
    6. ',' → logprob: -13.25022029876709
    7. ' data' → logprob: -13.25022029876709
    8. ')' → logprob: -13.50022029876709
    9. '			' → logprob: -13.87522029876709
    10. '
' → logprob: -14.00022029876709

Token 253: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49275803565979004
    2. 'data' → logprob: -0.99275803565979
    3. ' data' → logprob: -3.99275803565979
    4. '           ' → logprob: -10.117757797241211
    5. '   ' → logprob: -12.242757797241211
    6. '                   ' → logprob: -12.742757797241211
    7. '       ' → logprob: -12.867757797241211
    8. '
' → logprob: -13.742757797241211
    9. '.data' → logprob: -13.742757797241211
    10. '```' → logprob: -13.992757797241211

Token 254: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.19416846334934235
    2. ' c' → logprob: -2.0691685676574707
    3. '0' → logprob: -3.1941685676574707
    4. '1' → logprob: -5.444168567657471
    5. ' ' → logprob: -5.694168567657471
    6. '   ' → logprob: -7.819168567657471
    7. ' not' → logprob: -8.069168090820312
    8. 'not' → logprob: -8.194168090820312
    9. 'count' → logprob: -8.819168090820312
    10. '100' → logprob: -8.944168090820312

Token 255: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7529119253158569
    2. '>' → logprob: -1.377911925315857
    3. ' >=' → logprob: -2.5029120445251465
    4. ' <' → logprob: -2.7529120445251465
    5. ' <=' → logprob: -3.1279120445251465
    6. ' ==' → logprob: -3.5029120445251465
    7. '<' → logprob: -3.8779120445251465
    8. '>=' → logprob: -3.8779120445251465
    9. '<=' → logprob: -5.1279120445251465
    10. '==' → logprob: -5.5029120445251465

Token 256: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.091288723051548
    2. '1' → logprob: -2.5912888050079346
    3. ' ' → logprob: -4.9662885665893555
    4. '100' → logprob: -6.0912885665893555
    5. '-' → logprob: -6.3412885665893555
    6. '10' → logprob: -7.8412885665893555
    7. '=' → logprob: -8.216288566589355
    8. '2' → logprob: -8.966288566589355
    9. '   ' → logprob: -9.716288566589355
    10. ' -' → logprob: -9.841288566589355

Token 257: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27656516432762146
    2. '1' → logprob: -1.6515651941299438
    3. '-' → logprob: -3.7765650749206543
    4. '100' → logprob: -4.151565074920654
    5. '10' → logprob: -5.651565074920654
    6. '50' → logprob: -7.026565074920654
    7. '2' → logprob: -7.026565074920654
    8. '200' → logprob: -7.151565074920654
    9. ' ' → logprob: -7.276565074920654
    10. '5' → logprob: -7.901565074920654

Token 258: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22821061313152313
    2. ' or' → logprob: -2.353210687637329
    3. ':
' → logprob: -2.353210687637329
    4. '                   ' → logprob: -4.85321044921875
    5. '               ' → logprob: -5.22821044921875
    6. '           ' → logprob: -7.85321044921875
    7. ':return' → logprob: -9.10321044921875
    8. '<|end|>' → logprob: -9.85321044921875
    9. '   ' → logprob: -10.22821044921875
    10. ' :' → logprob: -10.60321044921875

Token 259: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06872909516096115
    2. '100' → logprob: -2.8187291622161865
    3. ' c' → logprob: -5.318728923797607
    4. '   ' → logprob: -7.818728923797607
    5. '10' → logprob: -7.943728923797607
    6. ' ' → logprob: -8.443729400634766
    7. '999' → logprob: -9.068729400634766
    8. '0' → logprob: -9.443729400634766
    9. '256' → logprob: -9.693729400634766
    10. '99' → logprob: -9.818729400634766

Token 260: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7882940173149109
    2. ' >=' → logprob: -0.9132940173149109
    3. '>' → logprob: -2.2882940769195557
    4. ' >' → logprob: -3.1632940769195557
    5. 'c' → logprob: -8.413293838500977
    6. '==' → logprob: -9.163293838500977
    7. ' c' → logprob: -10.288293838500977
    8. ' ==' → logprob: -10.413293838500977
    9. ' ' → logprob: -11.538293838500977
    10. '<|end|>' → logprob: -12.038293838500977

Token 261: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10183664411306381
    2. '255' → logprob: -3.601836681365967
    3. '99' → logprob: -3.726836681365967
    4. '9' → logprob: -3.726836681365967
    5. '999' → logprob: -4.976836681365967
    6. '10' → logprob: -5.226836681365967
    7. ' ' → logprob: -5.976836681365967
    8. '500' → logprob: -6.726836681365967
    9. '20' → logprob: -7.226836681365967
    10. '200' → logprob: -7.351836681365967

Token 262: '9' (ID: 24)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1293572336435318
    2. '99' → logprob: -3.25435733795166
    3. '9' → logprob: -3.50435733795166
    4. '255' → logprob: -4.00435733795166
    5. '10' → logprob: -4.62935733795166
    6. '999' → logprob: -5.00435733795166
    7. '20' → logprob: -5.50435733795166
    8. '500' → logprob: -5.62935733795166
    9. '200' → logprob: -6.37935733795166
    10. '400' → logprob: -6.87935733795166

Token 263: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.006148126907646656
    2. ':' → logprob: -5.131148338317871
    3. '               ' → logprob: -9.381148338317871
    4. '                   ' → logprob: -9.756148338317871
    5. ' or' → logprob: -9.881148338317871
    6. '):
' → logprob: -11.631148338317871
    7. '           ' → logprob: -11.756148338317871
    8. ':
' → logprob: -12.506148338317871
    9. ':return' → logprob: -13.131148338317871
    10. ':

' → logprob: -14.131148338317871

Token 264: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008672756957821548
    2. '               ' → logprob: -7.2508673667907715
    3. ':' → logprob: -9.125866889953613
    4. ':
' → logprob: -11.125866889953613
    5. '                  ' → logprob: -11.375866889953613
    6. '                       ' → logprob: -12.125866889953613
    7. '           ' → logprob: -12.875866889953613
    8. '   ' → logprob: -13.250866889953613
    9. '                    ' → logprob: -13.375866889953613
    10. '                ' → logprob: -13.750866889953613

Token 265: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.278591126203537
    2. ' continue' → logprob: -2.0285911560058594
    3. 'continue' (adapté à ' continue') → logprob: -2.2785911560058594
    4. '               ' → logprob: -5.403591156005859
    5. '   ' → logprob: -5.903591156005859
    6. '                       ' → logprob: -6.778591156005859
    7. '	continue' → logprob: -7.403591156005859
    8. ' ' → logprob: -9.77859115600586
    9. '	               ' → logprob: -10.15359115600586
    10. '           ' → logprob: -10.15359115600586

Token 266: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022940391500014812
    2. '
' → logprob: -8.875229835510254
    3. '                
' → logprob: -9.500229835510254
    4. '<|end|>' → logprob: -12.000229835510254
    5. ',' → logprob: -13.375229835510254
    6. '  
' → logprob: -13.750229835510254
    7. ',
' → logprob: -13.875229835510254
    8. '```' → logprob: -14.000229835510254
    9. '           ' → logprob: -14.125229835510254
    10. '                   ' → logprob: -14.250229835510254

Token 267: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006407116306945682
    2. '                
' → logprob: -7.750640869140625
    3. 'data' → logprob: -9.250640869140625
    4. '
' → logprob: -10.000640869140625
    5. '```' → logprob: -10.875640869140625
    6. '           ' → logprob: -11.250640869140625
    7. ' data' → logprob: -11.875640869140625
    8. '                   ' → logprob: -12.000640869140625
    9. '<|end|>' → logprob: -12.250640869140625
    10. '                ' → logprob: -12.500640869140625

Token 268: ' data' (ID: 1238)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036313117016106844
    2. 'data' (adapté à ' data') → logprob: -5.753631114959717
    3. ' data' → logprob: -8.003631591796875
    4. '           ' → logprob: -9.753631591796875
    5. '
' → logprob: -10.253631591796875
    6. '```' → logprob: -11.753631591796875
    7. '   ' → logprob: -12.253631591796875
    8. '                   ' → logprob: -12.253631591796875
    9. '                
' → logprob: -12.378631591796875
    10. '       ' → logprob: -13.753631591796875

Token 269: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031818747520446777
    2. '.' → logprob: -5.7531819343566895
    3. '.app' → logprob: -13.253181457519531
    4. '.ap' → logprob: -13.753181457519531
    5. ' .' → logprob: -14.128181457519531
    6. '.add' → logprob: -15.253181457519531
    7. '.extend' → logprob: -16.00318145751953
    8. '.Append' → logprob: -16.50318145751953
    9. 'append' → logprob: -17.00318145751953
    10. '.setdefault' → logprob: -18.25318145751953

Token 270: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2015160620212555
    2. 'c' → logprob: -1.701516032218933
    3. ' c' → logprob: -9.701516151428223
    4. '(
' → logprob: -11.076516151428223
    5. '(' → logprob: -11.326516151428223
    6. ')c' → logprob: -11.326516151428223
    7. '	c' → logprob: -13.326516151428223
    8. ' (' → logprob: -15.076516151428223
    9. '   ' → logprob: -17.326515197753906
    10. ':c' → logprob: -17.701515197753906

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10644133388996124
    2. ')
' → logprob: -2.6064412593841553
    3. '               ' → logprob: -3.6064412593841553
    4. '           ' → logprob: -11.606441497802734
    5. ')
' → logprob: -12.356441497802734
    6. '),' → logprob: -12.981441497802734
    7. '                   ' → logprob: -13.106441497802734
    8. ' )' → logprob: -13.231441497802734
    9. ' )
' → logprob: -13.981441497802734
    10. '                
' → logprob: -14.106441497802734

Token 272: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015991552209015936
    2. '			' → logprob: -9.375160217285156
    3. '           ' → logprob: -10.750160217285156
    4. '
' → logprob: -11.000160217285156
    5. '                
' → logprob: -11.375160217285156
    6. '                   ' → logprob: -11.625160217285156
    7. '              ' → logprob: -12.750160217285156
    8. '       ' → logprob: -12.875160217285156
    9. '```' → logprob: -13.000160217285156
    10. '                ' → logprob: -13.125160217285156

Token 273: ' count' (ID: 3605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1448107361793518
    2. 'count' (adapté à ' count') → logprob: -2.019810676574707
    3. '           ' → logprob: -7.769810676574707
    4. ' count' → logprob: -7.769810676574707
    5. '			' → logprob: -8.144810676574707
    6. '
' → logprob: -8.144810676574707
    7. '                   ' → logprob: -8.394810676574707
    8. '   ' → logprob: -8.644810676574707
    9. '	count' → logprob: -8.769810676574707
    10. '                
' → logprob: -10.144810676574707

Token 274: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.39148321747779846
    2. '+=' → logprob: -1.141483187675476
    3. '+' → logprob: -5.391483306884766
    4. '=' → logprob: -10.891483306884766
    5. '<|end|>' → logprob: -11.516483306884766
    6. ' +' → logprob: -11.641483306884766
    7. ' ' → logprob: -12.641483306884766
    8. ']+=' → logprob: -13.141483306884766
    9. '++' → logprob: -14.016483306884766
    10. '+="' → logprob: -14.016483306884766

Token 275: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25192907452583313
    2. ' ' → logprob: -1.5019290447235107
    3. ' ' → logprob: -17.001928329467773
    4. '```' → logprob: -18.126928329467773
    5. '۱' → logprob: -19.751928329467773
    6. '１' → logprob: -20.001928329467773
    7. '<|end|>' → logprob: -20.626928329467773
    8. '`' → logprob: -21.126928329467773
    9. '   ' → logprob: -21.126928329467773
    10. '    ' → logprob: -21.376928329467773

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -21.625
    4. '   ' → logprob: -22.875
    5. '１' → logprob: -23.75
    6. '۱' → logprob: -23.875
    7. '`' → logprob: -25.125
    8. '' → logprob: -25.75
    9. '१' → logprob: -26.0
    10. '
' → logprob: -26.125

Token 277: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011513661593198776
    2. '
' → logprob: -4.511513710021973
    3. 'yield' → logprob: -8.511513710021973
    4. '            
' → logprob: -9.386513710021973
    5. '```' → logprob: -9.761513710021973
    6. '       ' → logprob: -9.886513710021973
    7. 'return' → logprob: -11.261513710021973
    8. '
' → logprob: -11.511513710021973
    9. ' yield' → logprob: -11.636513710021973
    10. '[' → logprob: -12.136513710021973

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006717386189848185
    2. '
' → logprob: -5.256717205047607
    3. 'yield' → logprob: -6.756717205047607
    4. '```' → logprob: -9.381717681884766
    5. '       ' → logprob: -9.631717681884766
    6. '            
' → logprob: -9.756717681884766
    7. ' yield' → logprob: -10.256717681884766
    8. 'return' → logprob: -10.256717681884766
    9. '
' → logprob: -12.006717681884766
    10. 'newline' → logprob: -12.631717681884766

Token 279: ' if' (ID: 538)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.4175227880477905
    2. '           ' → logprob: -1.1675227880477905
    3. ' yield' → logprob: -3.54252290725708
    4. '       ' → logprob: -6.79252290725708
    5. '```' → logprob: -9.792522430419922
    6. '
' → logprob: -10.292522430419922
    7. '	yield' → logprob: -10.792522430419922
    8. '   ' → logprob: -11.792522430419922
    9. 'Yield' → logprob: -12.417522430419922
    10. '            
' → logprob: -14.167522430419922

Token 280: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7411925792694092
    2. 'data' → logprob: -1.3661925792694092
    3. ' len' → logprob: -1.7411925792694092
    4. ' data' → logprob: -2.491192579269409
    5. 'count' → logprob: -4.741192817687988
    6. ' count' → logprob: -6.866192817687988
    7. 'n' → logprob: -8.366192817687988
    8. ' not' → logprob: -9.366192817687988
    9. 'not' → logprob: -9.991192817687988
    10. ' n' → logprob: -10.116192817687988

Token 281: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. 'data' → logprob: -14.875004768371582
    4. ')data' → logprob: -18.0000057220459
    5. '(
' → logprob: -18.8750057220459
    6. '=data' → logprob: -19.2500057220459
    7. '[data' → logprob: -19.7500057220459
    8. ' (' → logprob: -20.0000057220459
    9. '<data' → logprob: -20.1250057220459
    10. ' data' → logprob: -20.3750057220459

Token 282: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7610034346580505
    2. '==' → logprob: -0.7610034346580505
    3. ' ==' → logprob: -3.0110034942626953
    4. ')==' → logprob: -4.136003494262695
    5. '()==' → logprob: -8.761003494262695
    6. '()' → logprob: -9.886003494262695
    7. ']==' → logprob: -10.386003494262695
    8. '>' → logprob: -10.511003494262695
    9. '!=' → logprob: -10.636003494262695
    10. '```' → logprob: -10.886003494262695

Token 283: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03435986116528511
    2. ' ==' → logprob: -3.409359931945801
    3. '!=' → logprob: -7.534359931945801
    4. ' !=' → logprob: -9.6593599319458
    5. '<' → logprob: -10.0343599319458
    6. '```' → logprob: -11.0343599319458
    7. '()==' → logprob: -11.0343599319458
    8. ')' → logprob: -11.6593599319458
    9. '=' → logprob: -11.9093599319458
    10. '>' → logprob: -12.1593599319458

Token 284: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.451116051815916e-05
    2. ' n' → logprob: -10.625024795532227
    3. '	n' → logprob: -16.500024795532227
    4. '   ' → logprob: -17.750024795532227
    5. ' ' → logprob: -19.000024795532227
    6. 'count' → logprob: -19.500024795532227
    7. '0' → logprob: -19.750024795532227
    8. '       ' → logprob: -19.875024795532227
    9. '```' → logprob: -20.000024795532227
    10. '10' → logprob: -20.250024795532227

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5760135650634766
    2. ':
' → logprob: -0.8260135650634766
    3. '           ' → logprob: -10.076013565063477
    4. ':return' → logprob: -11.451013565063477
    5. '):
' → logprob: -11.951013565063477
    6. ':
' → logprob: -12.701013565063477
    7. '):' → logprob: -12.701013565063477
    8. '       ' → logprob: -12.826013565063477
    9. ' and' → logprob: -13.076013565063477
    10. '               ' → logprob: -13.326013565063477

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32405078411102295
    2. 'yield' → logprob: -1.824050784111023
    3. '           ' → logprob: -2.3240509033203125
    4. ' yield' → logprob: -4.0740509033203125
    5. '```' → logprob: -8.074050903320312
    6. '
' → logprob: -8.949050903320312
    7. '	yield' → logprob: -9.449050903320312
    8. 'Yield' → logprob: -12.324050903320312
    9. '       ' → logprob: -12.699050903320312
    10. '   ' → logprob: -13.324050903320312

Token 287: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.06467943638563156
    2. ' yield' → logprob: -2.8146793842315674
    3. '               ' → logprob: -6.0646796226501465
    4. '           ' → logprob: -8.814679145812988
    5. '	yield' → logprob: -8.814679145812988
    6. '
' → logprob: -9.439679145812988
    7. '```' → logprob: -11.939679145812988
    8. 'Yield' → logprob: -14.064679145812988
    9. '   ' → logprob: -14.689679145812988
    10. '                   ' → logprob: -16.189680099487305

Token 288: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.01416350994259119
    2. ' data' → logprob: -4.264163494110107
    3. '[data' → logprob: -17.764163970947266
    4. 'dat' → logprob: -18.139163970947266
    5. ' ' → logprob: -18.639163970947266
    6. '[' → logprob: -18.639163970947266
    7. '   ' → logprob: -18.889163970947266
    8. '	data' → logprob: -19.139163970947266
    9. ' [' → logprob: -19.514163970947266
    10. '(data' → logprob: -19.514163970947266

Token 289: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' Histogram' (ID: 189950)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.6671075224876404
    2. 'Solution' → logprob: -1.2921075820922852
    3. ' Data' → logprob: -2.542107582092285
    4. ' Solution' → logprob: -3.417107582092285
    5. 'Solver' → logprob: -3.542107582092285
    6. 'Digit' → logprob: -4.667107582092285
    7. 'Sequence' → logprob: -4.667107582092285
    8. 'Test' → logprob: -4.792107582092285
    9. 'Analyzer' → logprob: -5.667107582092285
    10. ' Solver' → logprob: -5.667107582092285

Token 292: 'Model' (ID: 2239)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002403720049187541
    2. ':
' → logprob: -6.127403736114502
    3. '(' → logprob: -8.627403259277344
    4. ' :' → logprob: -11.377403259277344
    5. 'Generator' → logprob: -12.377403259277344
    6. 'Analyzer' → logprob: -12.627403259277344
    7. '():' → logprob: -12.752403259277344
    8. 'Builder' → logprob: -12.877403259277344
    9. '(Parser' → logprob: -13.252403259277344
    10. 'Parser' → logprob: -13.377403259277344

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006001552101224661
    2. ':
' → logprob: -5.7560014724731445
    3. '(' → logprob: -5.8810014724731445
    4. '(Abstract' → logprob: -11.381001472473145
    5. ' :' → logprob: -11.756001472473145
    6. '():' → logprob: -12.381001472473145
    7. ':

' → logprob: -13.381001472473145
    8. '(object' → logprob: -14.381001472473145
    9. '   ' → logprob: -15.006001472473145
    10. ':
' → logprob: -15.506001472473145

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1967887580394745
    2. ' def' → logprob: -2.196788787841797
    3. 'def' → logprob: -2.696788787841797
    4. ':' → logprob: -10.446788787841797
    5. '	def' → logprob: -11.321788787841797
    6. '  ' → logprob: -12.571788787841797
    7. ' ' → logprob: -12.571788787841797
    8. ':def' → logprob: -13.196788787841797
    9. '    ' → logprob: -13.696788787841797
    10. 'from' → logprob: -13.946788787841797

Token 295: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008752484805881977
    2. ' def' → logprob: -4.758752346038818
    3. '   ' → logprob: -9.383752822875977
    4. 'from' → logprob: -10.383752822875977
    5. '@' → logprob: -10.758752822875977
    6. 'class' → logprob: -13.758752822875977
    7. '	def' → logprob: -15.633752822875977
    8. '@dat' → logprob: -15.758752822875977
    9. '__' → logprob: -16.758752822875977
    10. 'import' → logprob: -16.883752822875977

Token 296: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5029897689819336
    2. 'init' → logprob: -1.3779897689819336
    3. '__' → logprob: -2.5029897689819336
    4. ' def' → logprob: -3.1279897689819336
    5. ' init' → logprob: -4.752989768981934
    6. 'def' → logprob: -5.127989768981934
    7. '_init' → logprob: -5.877989768981934
    8. '_' → logprob: -9.752989768981934
    9. '```' → logprob: -10.252989768981934
    10. 'staticmethod' → logprob: -10.502989768981934

Token 297: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.008606302551925182
    2. 'def' → logprob: -5.133606433868408
    3. 'it' → logprob: -6.508606433868408
    4. 'nit' → logprob: -7.758606433868408
    5. 'iter' → logprob: -7.758606433868408
    6. 'class' → logprob: -8.50860595703125
    7. '_init' → logprob: -11.13360595703125
    8. '```' → logprob: -11.13360595703125
    9. ' init' → logprob: -11.38360595703125
    10. 'f' → logprob: -11.38360595703125

Token 298: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00030709904967807233
    2. ' (' → logprob: -8.250307083129883
    3. '(' → logprob: -10.250307083129883
    4. '()' → logprob: -12.000307083129883
    5. '   ' → logprob: -12.750307083129883
    6. '(
' → logprob: -14.750307083129883
    7. 'self' → logprob: -15.125307083129883
    8. ' ' → logprob: -15.500307083129883
    9. '(this' → logprob: -15.750307083129883
    10. '__(' → logprob: -16.125307083129883

Token 299: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00042543161544017494
    2. ')' → logprob: -7.875425338745117
    3. ' self' → logprob: -10.875425338745117
    4. '   ' → logprob: -11.750425338745117
    5. '):
' → logprob: -11.750425338745117
    6. '
' → logprob: -12.250425338745117
    7. '       ' → logprob: -13.375425338745117
    8. '):' → logprob: -13.500425338745117
    9. 'data' → logprob: -13.625425338745117
    10. '(self' → logprob: -14.125425338745117

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22865374386310577
    2. '):' → logprob: -2.1036536693573
    3. 'self' → logprob: -2.8536536693573
    4. '):
' → logprob: -3.9786536693573
    5. ' ,' → logprob: -6.478653907775879
    6. ')' → logprob: -6.478653907775879
    7. '   ' → logprob: -6.978653907775879
    8. ' self' → logprob: -7.478653907775879
    9. ' ):' → logprob: -7.728653907775879
    10. ',self' → logprob: -7.978653907775879

Token 301: ' sales' (ID: 7155)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.21405373513698578
    2. 'he' → logprob: -2.5890536308288574
    3. 'self' → logprob: -3.4640536308288574
    4. 'bins' → logprob: -3.4640536308288574
    5. 'hist' → logprob: -3.7140536308288574
    6. 'bars' → logprob: -4.714053630828857
    7. ' data' → logprob: -5.214053630828857
    8. 'values' → logprob: -5.589053630828857
    9. 'fre' → logprob: -5.839053630828857
    10. 'counts' → logprob: -6.339053630828857

Token 302: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010993114672601223
    2. '):' → logprob: -4.635993003845215
    3. '):
' → logprob: -7.260993003845215
    4. 's' → logprob: -8.760993003845215
    5. 'data' → logprob: -9.010993003845215
    6. '_data' → logprob: -9.135993003845215
    7. '_counts' → logprob: -9.760993003845215
    8. '_:' → logprob: -10.385993003845215
    9. ' :' → logprob: -10.760993003845215
    10. ':list' → logprob: -11.385993003845215

Token 303: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -7.672236824873835e-05
    2. ' List' → logprob: -9.625076293945312
    3. 'list' → logprob: -12.000076293945312
    4. '[List' → logprob: -12.625076293945312
    5. ')' → logprob: -14.500076293945312
    6. '   ' → logprob: -14.750076293945312
    7. 'int' → logprob: -15.875076293945312
    8. ' ' → logprob: -16.500076293945312
    9. '	List' → logprob: -17.125076293945312
    10. 'Optional' → logprob: -17.750076293945312

Token 304: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00020473242329899222
    2. 'int' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.625205039978027
    4. '[' → logprob: -14.875205039978027
    5. '<int' → logprob: -15.750205039978027
    6. '[List' → logprob: -15.750205039978027
    7. ':int' → logprob: -17.62520408630371
    8. ' int' → logprob: -18.25020408630371
    9. '=int' → logprob: -18.62520408630371
    10. '	int' → logprob: -18.62520408630371

Token 305: '],' (ID: 2155)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0045624421909451485
    2. ']):' → logprob: -6.0045623779296875
    3. '):
' → logprob: -6.6295623779296875
    4. ')' → logprob: -7.5045623779296875
    5. ' ):' → logprob: -9.254562377929688
    6. ']):
' → logprob: -10.379562377929688
    7. ':' → logprob: -10.629562377929688
    8. ']:' → logprob: -10.629562377929688
    9. '>):' → logprob: -11.504562377929688
    10. '):
' → logprob: -12.004562377929688

Token 306: ' flavor' (ID: 23341)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.8775358200073242
    2. ' max' → logprob: -2.127535820007324
    3. ' bins' → logprob: -2.502535820007324
    4. 'k' → logprob: -2.877535820007324
    5. ' k' → logprob: -3.127535820007324
    6. 'bins' → logprob: -3.252535820007324
    7. 'target' → logprob: -3.377535820007324
    8. ' target' → logprob: -3.627535820007324
    9. ' n' → logprob: -3.627535820007324
    10. ' K' → logprob: -4.002535820007324

Token 307: '_count' (ID: 7536)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10254773497581482
    2. 's' → logprob: -2.6025476455688477
    3. '_counts' → logprob: -3.8525476455688477
    4. '_count' → logprob: -6.977547645568848
    5. '_ids' → logprob: -7.727547645568848
    6. '_id' → logprob: -7.852547645568848
    7. '_scores' → logprob: -9.102547645568848
    8. '_s' → logprob: -10.352547645568848
    9. '_sizes' → logprob: -10.352547645568848
    10. ':str' → logprob: -10.477547645568848

Token 308: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002860631560906768
    2. ':int' → logprob: -6.5028605461120605
    3. '=' → logprob: -7.2528605461120605
    4. '):' → logprob: -7.3778605461120605
    5. ')' → logprob: -11.752861022949219
    6. ' :' → logprob: -12.127861022949219
    7. 'int' → logprob: -12.377861022949219
    8. '):
' → logprob: -13.002861022949219
    9. '=int' → logprob: -13.377861022949219
    10. '   ' → logprob: -13.752861022949219

Token 309: ' int' (ID: 677)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7942884564399719
    2. 'int' → logprob: -1.2942883968353271
    3. '10' → logprob: -1.4192883968353271
    4. ' int' → logprob: -3.794288396835327
    5. ' ' → logprob: -4.669288635253906
    6. '   ' → logprob: -9.669288635253906
    7. '[int' → logprob: -10.044288635253906
    8. ')' → logprob: -10.169288635253906
    9. '0' → logprob: -10.544288635253906
    10. '<int' → logprob: -11.419288635253906

Token 310: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003439938183873892
    2. ')' → logprob: -5.878439903259277
    3. ',' → logprob: -8.128439903259277
    4. '=' → logprob: -8.503439903259277
    5. ':' → logprob: -9.503439903259277
    6. '):
' → logprob: -9.878439903259277
    7. ' ):' → logprob: -11.753439903259277
    8. '   ' → logprob: -13.878439903259277
    9. '):
' → logprob: -14.003439903259277
    10. ' ' → logprob: -15.378439903259277

Token 311: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16188181936740875
    2. ' ' → logprob: -2.536881923675537
    3. '9' → logprob: -2.661881923675537
    4. '0' → logprob: -7.911881923675537
    5. ')' → logprob: -10.786881446838379
    6. '100' → logprob: -11.036881446838379
    7. 'len' → logprob: -11.036881446838379
    8. ' len' → logprob: -11.161881446838379
    9. '   ' → logprob: -11.286881446838379
    10. '1' → logprob: -11.411881446838379

Token 312: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0008613191312178969
    2. ' ' → logprob: -8.125861167907715
    3. '9' → logprob: -8.375861167907715
    4. '5' → logprob: -8.750861167907715
    5. '100' → logprob: -10.000861167907715
    6. '6' → logprob: -10.125861167907715
    7. '4' → logprob: -11.375861167907715
    8. '11' → logprob: -11.375861167907715
    9. '3' → logprob: -11.500861167907715
    10. '12' → logprob: -11.813361167907715

Token 313: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012941661989316344
    2. ',' → logprob: -7.126294136047363
    3. '):
' → logprob: -7.751294136047363
    4. ')' → logprob: -10.001294136047363
    5. ' ):' → logprob: -12.126294136047363
    6. '   ' → logprob: -12.251294136047363
    7. ':' → logprob: -13.126294136047363
    8. '):
' → logprob: -14.001294136047363
    9. '       ' → logprob: -14.501294136047363
    10. ' ' → logprob: -15.751294136047363

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009022594429552555
    2. 'self' → logprob: -4.7590227127075195
    3. ' self' → logprob: -7.8840227127075195
    4. '   ' → logprob: -11.25902271270752
    5. ':' → logprob: -12.13402271270752
    6. '	' → logprob: -13.38402271270752
    7. ' ' → logprob: -13.50902271270752
    8. '      ' → logprob: -13.63402271270752
    9. '(self' → logprob: -13.75902271270752
    10. 'def' → logprob: -13.88402271270752

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019349483773112297
    2. '       ' → logprob: -4.269349575042725
    3. ' self' → logprob: -5.269349575042725
    4. '   ' → logprob: -10.769349098205566
    5. 'super' → logprob: -12.894349098205566
    6. 'from' → logprob: -13.519349098205566
    7. '	self' → logprob: -14.644349098205566
    8. 'import' → logprob: -16.019350051879883
    9. ' ' → logprob: -16.144350051879883
    10. ' super' → logprob: -17.019350051879883

Token 316: '.fl' (ID: 18931)
  Prédit: '.sales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sales' → logprob: -0.10662136971950531
    2. '.' → logprob: -2.356621265411377
    3. '.s' → logprob: -5.606621265411377
    4. ' .' → logprob: -6.356621265411377
    5. '._' → logprob: -7.731621265411377
    6. '   ' → logprob: -8.356621742248535
    7. '.sale' → logprob: -8.606621742248535
    8. 'sales' → logprob: -9.606621742248535
    9. '.sal' → logprob: -10.356621742248535
    10. ' ' → logprob: -11.981621742248535

Token 317: 'avor' (ID: 3633)
  Prédit: 'avor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avor' → logprob: -1.5570885807392187e-05
    2. 'avors' → logprob: -11.625015258789062
    3. 'av' → logprob: -12.750015258789062
    4. 'avour' → logprob: -13.250015258789062
    5. 'AVOR' → logprob: -14.125015258789062
    6. 'avior' → logprob: -15.000015258789062
    7. 'avored' → logprob: -15.625015258789062
    8. 'a' → logprob: -15.750015258789062
    9. '   ' → logprob: -16.500015258789062
    10. 'avorite' → logprob: -16.625015258789062

Token 318: '_count' (ID: 7536)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.3148002624511719
    2. '_count' → logprob: -1.3148002624511719
    3. '_' → logprob: -7.314800262451172
    4. 's' → logprob: -7.439800262451172
    5. '_s' → logprob: -9.064800262451172
    6. '_counter' → logprob: -9.814800262451172
    7. '_c' → logprob: -10.564800262451172
    8. '_sales' → logprob: -10.564800262451172
    9. ' _' → logprob: -10.939800262451172
    10. '_to' → logprob: -11.314800262451172

Token 319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380435548722744
    2. ' =' → logprob: -3.28804349899292
    3. '=int' → logprob: -14.163043975830078
    4. ' ' → logprob: -14.663043975830078
    5. '=len' → logprob: -15.038043975830078
    6. ')' → logprob: -15.163043975830078
    7. '   ' → logprob: -15.788043975830078
    8. ':' → logprob: -16.413043975830078
    9. ',' → logprob: -16.913043975830078
    10. '=count' → logprob: -16.913043975830078

Token 320: ' flavor' (ID: 23341)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.0024781543761491776
    2. ' flavor' → logprob: -6.002478122711182
    3. '10' → logprob: -13.00247859954834
    4. ' ' → logprob: -16.252477645874023
    5. ' flavour' → logprob: -16.377477645874023
    6. '	fl' → logprob: -17.002477645874023
    7. '(fl' → logprob: -18.002477645874023
    8. ' fl' → logprob: -18.002477645874023
    9. '_fl' → logprob: -18.252477645874023
    10. ' flair' → logprob: -18.502477645874023

Token 321: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0001137947037932463
    2. 'count' → logprob: -9.375113487243652
    3. '_' → logprob: -10.750113487243652
    4. ' ' → logprob: -13.250113487243652
    5. 's' → logprob: -13.625113487243652
    6. ' _' → logprob: -13.625113487243652
    7. '   ' → logprob: -14.000113487243652
    8. 't' → logprob: -14.375113487243652
    9. '_cnt' → logprob: -15.000113487243652
    10. 'Count' → logprob: -15.250113487243652

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003812217037193477
    2. 'self' → logprob: -8.625381469726562
    3. '<|end|>' → logprob: -9.250381469726562
    4. '
' → logprob: -9.750381469726562
    5. '   ' → logprob: -11.500381469726562
    6. ',' → logprob: -11.500381469726562
    7. '        
' → logprob: -11.750381469726562
    8. ' self' → logprob: -12.625381469726562
    9. '  
' → logprob: -13.250381469726562
    10. ',
' → logprob: -13.375381469726562

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006841989234089851
    2. 'self' → logprob: -7.3756842613220215
    3. ' self' → logprob: -10.875683784484863
    4. '   ' → logprob: -11.750683784484863
    5. ',' → logprob: -11.875683784484863
    6. '        
' → logprob: -12.250683784484863
    7. '
' → logprob: -12.250683784484863
    8. '<|end|>' → logprob: -12.250683784484863
    9. '      ' → logprob: -13.250683784484863
    10. '        ' → logprob: -13.250683784484863

Token 324: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.338466093642637e-05
    2. ' self' → logprob: -9.750073432922363
    3. '       ' → logprob: -11.875073432922363
    4. 'from' → logprob: -12.375073432922363
    5. 'super' → logprob: -13.000073432922363
    6. '   ' → logprob: -13.500073432922363
    7. '	self' → logprob: -15.750073432922363
    8. '[self' → logprob: -17.375072479248047
    9. 'import' → logprob: -18.000072479248047
    10. 'def' → logprob: -18.625072479248047

Token 325: '.sales' (ID: 129356)
  Prédit: '.sales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sales' → logprob: -0.05018053203821182
    2. '.s' → logprob: -3.175180435180664
    3. '._' → logprob: -5.800180435180664
    4. ' .' → logprob: -6.050180435180664
    5. '.fl' → logprob: -7.425180435180664
    6. '.sale' → logprob: -8.175180435180664
    7. '.frequency' → logprob: -8.550180435180664
    8. '.' → logprob: -8.550180435180664
    9. 'sales' → logprob: -8.925180435180664
    10. '.count' → logprob: -9.175180435180664

Token 326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002136841416359
    2. ' =' → logprob: -2.3502137660980225
    3. '=s' → logprob: -12.850214004516602
    4. '[:]' → logprob: -12.850214004516602
    5. '   ' → logprob: -13.725214004516602
    6. '[' → logprob: -15.850214004516602
    7. ':' → logprob: -15.975214004516602
    8. 's' → logprob: -15.975214004516602
    9. '.extend' → logprob: -16.2252140045166
    10. '=[]' → logprob: -16.7252140045166

Token 327: ' sales' (ID: 7155)
  Prédit: 'sales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sales' → logprob: -0.043055593967437744
    2. ' sales' → logprob: -3.168055534362793
    3. '[' → logprob: -10.418055534362793
    4. '[s' → logprob: -10.793055534362793
    5. ' [' → logprob: -12.418055534362793
    6. 'list' → logprob: -14.418055534362793
    7. '.sales' → logprob: -14.668055534362793
    8. 'collections' → logprob: -15.543055534362793
    9. 'sale' → logprob: -15.668055534362793
    10. 'sal' → logprob: -15.793055534362793

Token 328: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6503300070762634
    2. '
' → logprob: -0.7753300070762634
    3. '   ' → logprob: -4.525330066680908
    4. '<|end|>' → logprob: -5.525330066680908
    5. 'self' → logprob: -6.275330066680908
    6. ' self' → logprob: -8.02532958984375
    7. 'def' → logprob: -9.27532958984375
    8. ' ' → logprob: -9.52532958984375
    9. '        
' → logprob: -9.65032958984375
    10. '    
' → logprob: -9.90032958984375

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3013247549533844
    2. '   ' → logprob: -1.676324725151062
    3. '
' → logprob: -3.0513248443603516
    4. '<|end|>' → logprob: -4.176324844360352
    5. 'self' → logprob: -5.176324844360352
    6. 'def' → logprob: -6.551324844360352
    7. ' self' → logprob: -7.051324844360352
    8. '    
' → logprob: -7.051324844360352
    9. '        
' → logprob: -7.551324844360352
    10. '	self' → logprob: -8.176324844360352

Token 330: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00026073982007801533
    2. ' self' → logprob: -8.875260353088379
    3. '       ' → logprob: -9.250260353088379
    4. 'from' → logprob: -10.875260353088379
    5. '   ' → logprob: -13.000260353088379
    6. 'super' → logprob: -13.375260353088379
    7. '[self' → logprob: -14.125260353088379
    8. '	self' → logprob: -14.250260353088379
    9. 'def' → logprob: -15.250260353088379
    10. '           ' → logprob: -16.625261306762695

Token 331: '.count' (ID: 14019)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5654441714286804
    2. '_counts' → logprob: -1.3154442310333252
    3. '_count' → logprob: -3.440444231033325
    4. '.count' → logprob: -3.440444231033325
    5. '.' → logprob: -3.565444231033325
    6. '.frequency' → logprob: -4.565443992614746
    7. '_hist' → logprob: -4.690443992614746
    8. '.hist' → logprob: -4.815443992614746
    9. '_fl' → logprob: -5.065443992614746
    10. '_freq' → logprob: -5.065443992614746

Token 332: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030951254069805145
    2. '=' → logprob: -3.5309512615203857
    3. ' =' → logprob: -6.780951023101807
    4. '[' → logprob: -9.905951499938965
    5. '=[' → logprob: -12.030951499938965
    6. '[:]' → logprob: -13.030951499938965
    7. '[s' → logprob: -13.155951499938965
    8. '=s' → logprob: -13.405951499938965
    9. '_s' → logprob: -14.280951499938965
    10. '   ' → logprob: -14.655951499938965

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38695424795150757
    2. ' =' → logprob: -1.1369543075561523
    3. '=[' → logprob: -10.136954307556152
    4. ':' → logprob: -11.011954307556152
    5. ' =[' → logprob: -11.136954307556152
    6. '[' → logprob: -12.011954307556152
    7. '   ' → logprob: -12.511954307556152
    8. '[:]' → logprob: -14.011954307556152
    9. '	' → logprob: -14.636954307556152
    10. '=[]' → logprob: -15.136954307556152

Token 334: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014168919064104557
    2. ' [' → logprob: -4.264168739318848
    3. '[self' → logprob: -12.764168739318848
    4. '{' → logprob: -14.139168739318848
    5. '[len' → logprob: -14.139168739318848
    6. '[count' → logprob: -14.764168739318848
    7. '[int' → logprob: -15.389168739318848
    8. '   ' → logprob: -15.389168739318848
    9. '[class' → logprob: -15.639168739318848
    10. '[s' → logprob: -16.389169692993164

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'sales' → logprob: -15.375003814697266
    4. 'self' → logprob: -15.625003814697266
    5. '   ' → logprob: -16.500003814697266
    6. 's' → logprob: -16.750003814697266
    7. '۰' → logprob: -19.125003814697266
    8. ' ' → logprob: -19.375003814697266
    9. '       ' → logprob: -19.437503814697266
    10. 'sale' → logprob: -19.500003814697266

Token 336: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01636512763798237
    2. ' for' → logprob: -4.516365051269531
    3. ']*' → logprob: -5.391365051269531
    4. ' ]' → logprob: -7.266365051269531
    5. 'for' → logprob: -10.391365051269531
    6. ']*(' → logprob: -11.641365051269531
    7. ',' → logprob: -12.766365051269531
    8. ')' → logprob: -13.016365051269531
    9. ' *' → logprob: -13.141365051269531
    10. '*' → logprob: -13.766365051269531

Token 337: 'self' (ID: 1156)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.2020782083272934
    2. 'self' → logprob: -1.7020782232284546
    3. '10' → logprob: -7.327078342437744
    4. ' self' → logprob: -13.077077865600586
    5. ' flavor' → logprob: -13.077077865600586
    6. 'len' → logprob: -13.702077865600586
    7. 'flu' → logprob: -14.327077865600586
    8. '(fl' → logprob: -14.827077865600586
    9. '(self' → logprob: -15.452077865600586
    10. '   ' → logprob: -15.452077865600586

Token 338: '.fl' (ID: 18931)
  Prédit: '.fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fl' → logprob: -4.978233846486546e-05
    2. '.' → logprob: -10.375049591064453
    3. 'fl' → logprob: -11.000049591064453
    4. '	fl' → logprob: -13.750049591064453
    5. ' .' → logprob: -15.125049591064453
    6. '.Fl' → logprob: -15.750049591064453
    7. '.fre' → logprob: -17.000049591064453
    8. '   ' → logprob: -17.125049591064453
    9. '..' → logprob: -17.750049591064453
    10. '(fl' → logprob: -17.750049591064453

Token 339: 'avor' (ID: 3633)
  Prédit: 'avor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avor' → logprob: -3.173704271830502e-06
    2. 'av' → logprob: -13.75000286102295
    3. 'avour' → logprob: -14.50000286102295
    4. 'AVOR' → logprob: -14.50000286102295
    5. 'avior' → logprob: -14.75000286102295
    6. 'a' → logprob: -15.25000286102295
    7. 'avors' → logprob: -15.50000286102295
    8. 'avorite' → logprob: -16.125003814697266
    9. 'avored' → logprob: -16.750003814697266
    10. '[' → logprob: -17.750003814697266

Token 340: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.000776634959038347
    2. '_' → logprob: -7.375776767730713
    3. ' _' → logprob: -9.000776290893555
    4. '_counts' → logprob: -11.500776290893555
    5. 'count' → logprob: -12.125776290893555
    6. '_counter' → logprob: -12.125776290893555
    7. '_c' → logprob: -13.375776290893555
    8. '_cnt' → logprob: -14.125776290893555
    9. '_s' → logprob: -14.375776290893555
    10. '_COUNT' → logprob: -15.250776290893555

Token 341: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4326372742652893
    2. ' for' → logprob: -1.5576372146606445
    3. 'for' → logprob: -2.1826372146606445
    4. '<|end|>' → logprob: -3.9326372146606445
    5. '
' → logprob: -5.8076372146606445
    6. '   ' → logprob: -5.9326372146606445
    7. '	for' → logprob: -6.4326372146606445
    8. ' ' → logprob: -7.9326372146606445
    9. '	' → logprob: -8.307637214660645
    10. ')' → logprob: -8.932637214660645

Token 342: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0047126649878919125
    2. ' for' → logprob: -5.3797125816345215
    3. '<|end|>' → logprob: -9.62971305847168
    4. '   ' → logprob: -11.37971305847168
    5. '	for' → logprob: -11.62971305847168
    6. '       ' → logprob: -12.50471305847168
    7. ')' → logprob: -13.62971305847168
    8. 'def' → logprob: -13.87971305847168
    9. ' ' → logprob: -15.62971305847168
    10. '<|end|>' → logprob: -16.62971305847168

Token 344: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.135593295097351
    2. '.update' → logprob: -1.385593295097351
    3. 'for' → logprob: -2.0105934143066406
    4. '.' → logprob: -2.1355934143066406
    5. '.calculate' → logprob: -2.7605934143066406
    6. '.process' → logprob: -3.6355934143066406
    7. '.for' → logprob: -3.7605934143066406
    8. '.count' → logprob: -4.260593414306641
    9. ' for' → logprob: -4.385593414306641
    10. '.populate' → logprob: -4.635593414306641

Token 345: 'calculate' (ID: 58453)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7278082966804504
    2. 'calculate' → logprob: -1.3528082370758057
    3. 'compute' → logprob: -1.4778082370758057
    4. 'process' → logprob: -4.227808475494385
    5. 'build' → logprob: -4.352808475494385
    6. 'populate' → logprob: -6.227808475494385
    7. 'update' → logprob: -8.227807998657227
    8. 'an' → logprob: -8.477807998657227
    9. 'calc' → logprob: -8.602807998657227
    10. 'initialize' → logprob: -9.477807998657227

Token 346: '()

' (ID: 5874)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.034182462841272354
    2. '()' → logprob: -3.409182548522949
    3. '_distribution' → logprob: -8.28418254852295
    4. '_hist' → logprob: -9.40918254852295
    5. '_sales' → logprob: -9.65918254852295
    6. '_f' → logprob: -9.78418254852295
    7. '_frequency' → logprob: -10.28418254852295
    8. '_' → logprob: -11.40918254852295
    9. '(' → logprob: -12.15918254852295
    10. '_stats' → logprob: -12.40918254852295

Token 347: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009777903323993087
    2. ' def' → logprob: -7.250977993011475
    3. '   ' → logprob: -8.250977516174316
    4. '	def' → logprob: -12.000977516174316
    5. ' ' → logprob: -14.750977516174316
    6. '  ' → logprob: -16.625978469848633
    7. '  
' → logprob: -16.750978469848633
    8. '    
' → logprob: -16.875978469848633
    9. '<|end|>' → logprob: -17.000978469848633
    10. '
' → logprob: -17.625978469848633

Token 349: ' _' (ID: 1175)
  Prédit: '_cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -1.3782830137643032e-05
    2. ' _' → logprob: -11.87501335144043
    3. '_counts' → logprob: -13.37501335144043
    4. '_calc' → logprob: -13.50001335144043
    5. '_generate' → logprob: -13.62501335144043
    6. '_count' → logprob: -14.62501335144043
    7. '_c' → logprob: -14.87501335144043
    8. 'calculate' → logprob: -15.00001335144043
    9. 'Calculate' → logprob: -15.50001335144043
    10. '_compute' → logprob: -15.50001335144043

Token 350: 'calculate' (ID: 58453)
  Prédit: 'calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: 0.0
    2. ' calculate' → logprob: -17.625
    3. '.calculate' → logprob: -18.625
    4. 'initialize' → logprob: -18.875
    5. 'alculate' → logprob: -18.875
    6. 'count' → logprob: -20.125
    7. 'compute' → logprob: -20.625
    8. 'update' → logprob: -20.75
    9. 'populate' → logprob: -21.5
    10. 'validate' → logprob: -21.625

Token 351: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016098834748845547
    2. '(' → logprob: -9.250161170959473
    3. '()' → logprob: -10.500161170959473
    4. '   ' → logprob: -11.125161170959473
    5. 'self' → logprob: -11.125161170959473
    6. ' (' → logprob: -12.625161170959473
    7. '():' → logprob: -13.875161170959473
    8. '       ' → logprob: -14.250161170959473
    9. ' self' → logprob: -14.250161170959473
    10. '():
' → logprob: -14.500161170959473

Token 352: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08010880649089813
    2. '):
' → logprob: -2.580108880996704
    3. 'self' → logprob: -6.830108642578125
    4. '(self' → logprob: -9.455108642578125
    5. '):
' → logprob: -10.580108642578125
    6. ')' → logprob: -10.705108642578125
    7. '   ' → logprob: -12.455108642578125
    8. '):

' → logprob: -13.205108642578125
    9. '():' → logprob: -13.580108642578125
    10. ' ):' → logprob: -13.705108642578125

Token 353: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006713478825986385
    2. ':
' → logprob: -5.256713390350342
    3. '():' → logprob: -6.881713390350342
    4. '):' → logprob: -8.7567138671875
    5. '   ' → logprob: -9.3817138671875
    6. 'def' → logprob: -10.2567138671875
    7. ':def' → logprob: -10.2567138671875
    8. 'self' → logprob: -10.3817138671875
    9. '():
' → logprob: -10.5067138671875
    10. '(self' → logprob: -10.6317138671875

Token 354: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011181042529642582
    2. ' None' → logprob: -4.511180877685547
    3. 'int' → logprob: -9.011180877685547
    4. 'List' → logprob: -11.761180877685547
    5. '   ' → logprob: -13.011180877685547
    6. ' int' → logprob: -14.636180877685547
    7. ' ' → logprob: -15.761180877685547
    8. '(None' → logprob: -15.886180877685547
    9. 'list' → logprob: -16.011180877685547
    10. '[' → logprob: -16.511180877685547

Token 355: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05098484456539154
    2. ':
' → logprob: -3.0509848594665527
    3. '       ' → logprob: -6.550984859466553
    4. '<|end|>' → logprob: -7.675984859466553
    5. '   ' → logprob: -8.175984382629395
    6. '():
' → logprob: -10.300984382629395
    7. '():' → logprob: -10.425984382629395
    8. '):
' → logprob: -10.425984382629395
    9. '(self' → logprob: -10.425984382629395
    10. '```' → logprob: -10.925984382629395

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022432736586779356
    2. 'for' → logprob: -6.7522430419921875
    3. ' for' → logprob: -6.8772430419921875
    4. '   ' → logprob: -10.127243041992188
    5. '```' → logprob: -14.377243041992188
    6. '	for' → logprob: -15.377243041992188
    7. '      ' → logprob: -16.127243041992188
    8. '	   ' → logprob: -16.252243041992188
    9. ' ' → logprob: -16.377243041992188
    10. '        
' → logprob: -16.627243041992188

Token 357: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00532993208616972
    2. '       ' → logprob: -5.2553300857543945
    3. ' for' → logprob: -9.255330085754395
    4. '	for' → logprob: -15.505330085754395
    5. '   ' → logprob: -16.380329132080078
    6. 'self' → logprob: -16.380329132080078
    7. 'from' → logprob: -16.630329132080078
    8. '        
' → logprob: -19.255329132080078
    9. '```' → logprob: -19.755329132080078
    10. 'total' → logprob: -20.255329132080078

Token 358: ' flavor' (ID: 23341)
  Prédit: 'sale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sale' → logprob: -0.8591467142105103
    2. 's' → logprob: -1.6091467142105103
    3. 'c' → logprob: -1.8591467142105103
    4. 'fl' → logprob: -1.9841467142105103
    5. ' sale' → logprob: -3.3591465950012207
    6. 'value' → logprob: -3.7341465950012207
    7. ' flavor' → logprob: -5.359146595001221
    8. 'num' → logprob: -5.484146595001221
    9. ' c' → logprob: -5.484146595001221
    10. ' s' → logprob: -5.984146595001221

Token 359: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011953481007367373
    2. 'in' → logprob: -6.751195430755615
    3. '_' → logprob: -11.751194953918457
    4. '_in' → logprob: -12.376194953918457
    5. ' ' → logprob: -13.126194953918457
    6. '_count' → logprob: -13.251194953918457
    7. '   ' → logprob: -13.251194953918457
    8. '	in' → logprob: -13.251194953918457
    9. 's' → logprob: -13.876194953918457
    10. 'count' → logprob: -14.001194953918457

Token 360: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000627610192168504
    2. ' self' → logprob: -7.375627517700195
    3. '   ' → logprob: -14.500627517700195
    4. 'range' → logprob: -14.875627517700195
    5. '       ' → logprob: -15.750627517700195
    6. '(self' → logprob: -17.125627517700195
    7. '	self' → logprob: -17.250627517700195
    8. '[self' → logprob: -17.625627517700195
    9. '           ' → logprob: -18.125627517700195
    10. ' ' → logprob: -19.000627517700195

Token 361: '.sales' (ID: 129356)
  Prédit: '.sales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sales' → logprob: -2.4868770196917467e-05
    2. 'sales' → logprob: -10.750024795532227
    3. '.fl' → logprob: -13.000024795532227
    4. '.sal' → logprob: -14.375024795532227
    5. '.sale' → logprob: -15.000024795532227
    6. '.' → logprob: -16.375024795532227
    7. ' .' → logprob: -18.250024795532227
    8. '.s' → logprob: -19.000024795532227
    9. ' sales' → logprob: -19.250024795532227
    10. '.sell' → logprob: -20.250024795532227

Token 362: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03397772088646889
    2. ':
' → logprob: -3.408977746963501
    3. 'self' → logprob: -8.908977508544922
    4. '           ' → logprob: -9.158977508544922
    5. '[' → logprob: -10.783977508544922
    6. '   ' → logprob: -10.908977508544922
    7. ' self' → logprob: -11.158977508544922
    8. ':self' → logprob: -11.283977508544922
    9. '[self' → logprob: -12.033977508544922
    10. '       ' → logprob: -12.158977508544922

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013685694430023432
    2. 'self' → logprob: -7.001368522644043
    3. ' self' → logprob: -7.751368522644043
    4. '   ' → logprob: -11.376368522644043
    5. '       ' → logprob: -12.251368522644043
    6. '	       ' → logprob: -13.001368522644043
    7. '```' → logprob: -13.001368522644043
    8. '[self' → logprob: -13.126368522644043
    9. ' if' → logprob: -13.626368522644043
    10. '            
' → logprob: -14.251368522644043

Token 364: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05313313379883766
    2. 'if' (adapté à ' if') → logprob: -3.053133249282837
    3. '           ' → logprob: -5.553133010864258
    4. ' self' → logprob: -7.553133010864258
    5. ' if' → logprob: -8.928133010864258
    6. '       ' → logprob: -13.678133010864258
    7. '               ' → logprob: -13.803133010864258
    8. '   ' → logprob: -14.303133010864258
    9. '	self' → logprob: -16.178133010864258
    10. ' ' → logprob: -17.428133010864258

Token 365: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300170764327049
    2. ' ' → logprob: -3.168001651763916
    3. 'fl' → logprob: -13.543002128601074
    4. '   ' → logprob: -14.293002128601074
    5. '  ' → logprob: -15.043002128601074
    6. '1' → logprob: -16.168001174926758
    7. ' ' → logprob: -16.543001174926758
    8. 'self' → logprob: -17.293001174926758
    9. ' flavor' → logprob: -17.793001174926758
    10. '           ' → logprob: -17.918001174926758

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000808082812000066
    2. ' ' → logprob: -7.125808238983154
    3. 'fl' → logprob: -12.750807762145996
    4. '   ' → logprob: -15.125807762145996
    5. '  ' → logprob: -15.875807762145996
    6. '1' → logprob: -15.875807762145996
    7. 'self' → logprob: -16.250808715820312
    8. 'is' → logprob: -18.500808715820312
    9. ' flavor' → logprob: -18.563308715820312
    10. '    ' → logprob: -18.813308715820312

Token 367: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.009756204672157764
    2. '<=' → logprob: -4.634756088256836
    3. ' ' → logprob: -15.884756088256836
    4. ' <' → logprob: -16.259756088256836
    5. ')<=' → logprob: -17.759756088256836
    6. ' ≤' → logprob: -18.009756088256836
    7. ']<=' → logprob: -18.259756088256836
    8. ' ' → logprob: -18.384756088256836
    9. ' <=",' → logprob: -18.509756088256836
    10. '```' → logprob: -18.509756088256836

Token 368: ' flavor' (ID: 23341)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -9.014684110297821e-06
    2. ' flavor' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.125008583068848
    4. ' ' → logprob: -16.500009536743164
    5. '           ' → logprob: -16.500009536743164
    6. '	fl' → logprob: -16.875009536743164
    7. 'flake' → logprob: -17.000009536743164
    8. '  ' → logprob: -17.125009536743164
    9. 'flu' → logprob: -17.625009536743164
    10. 'fe' → logprob: -17.625009536743164

Token 369: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.002476604888215661
    2. ' <' → logprob: -6.002476692199707
    3. '<len' → logprob: -15.377476692199707
    4. '<int' → logprob: -15.627476692199707
    5. '           ' → logprob: -16.00247573852539
    6. '[' → logprob: -16.37747573852539
    7. '<size' → logprob: -16.62747573852539
    8. '<num' → logprob: -16.75247573852539
    9. 'and' → logprob: -16.87747573852539
    10. '<n' → logprob: -17.00247573852539

Token 370: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002819544170051813
    2. ' self' → logprob: -8.750282287597656
    3. '10' → logprob: -9.000282287597656
    4. 'len' → logprob: -16.375282287597656
    5. '[self' → logprob: -18.375282287597656
    6. '	self' → logprob: -18.750282287597656
    7. '=self' → logprob: -19.000282287597656
    8. '9' → logprob: -19.375282287597656
    9. '           ' → logprob: -20.250282287597656
    10. ' ' → logprob: -20.500282287597656

Token 371: '.fl' (ID: 18931)
  Prédit: '.fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fl' → logprob: -9.794061770662665e-05
    2. 'fl' → logprob: -9.25009822845459
    3. '.' → logprob: -13.62509822845459
    4. '	fl' → logprob: -15.25009822845459
    5. ' .' → logprob: -15.87509822845459
    6. '.Fl' → logprob: -17.000097274780273
    7. '_fl' → logprob: -17.625097274780273
    8. '.fre' → logprob: -18.250097274780273
    9. '   ' → logprob: -19.125097274780273
    10. '(fl' → logprob: -19.125097274780273

Token 372: 'avor' (ID: 3633)
  Prédit: 'avor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avor' → logprob: -6.749814019713085e-06
    2. 'AVOR' → logprob: -12.500006675720215
    3. 'avior' → logprob: -13.750006675720215
    4. 'avour' → logprob: -14.125006675720215
    5. 'av' → logprob: -14.625006675720215
    6. 'avorite' → logprob: -15.125006675720215
    7. 'a' → logprob: -15.750006675720215
    8. 'avored' → logprob: -16.50000762939453
    9. 'avors' → logprob: -16.62500762939453
    10. 'vor' → logprob: -17.00000762939453

Token 373: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3425219549390022e-05
    2. 'count' → logprob: -11.25001335144043
    3. '_c' → logprob: -15.75001335144043
    4. '_' → logprob: -16.00001335144043
    5. 'ount' → logprob: -17.25001335144043
    6. ' count' → logprob: -17.50001335144043
    7. '_counts' → logprob: -17.87501335144043
    8. 'Count' → logprob: -18.37501335144043
    9. '_cont' → logprob: -18.75001335144043
    10. ' _' → logprob: -19.00001335144043

Token 374: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03812480345368385
    2. ':' → logprob: -3.2881247997283936
    3. '           ' → logprob: -10.538125038146973
    4. '               ' → logprob: -10.663125038146973
    5. '):
' → logprob: -10.663125038146973
    6. ':
' → logprob: -12.288125038146973
    7. ' :
' → logprob: -12.663125038146973
    8. '():
' → logprob: -13.788125038146973
    9. ' and' → logprob: -14.413125038146973
    10. ':

' → logprob: -15.163125038146973

Token 375: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014545880258083344
    2. ':
' → logprob: -4.264545917510986
    3. 'self' → logprob: -8.639545440673828
    4. ':' → logprob: -8.889545440673828
    5. '           ' → logprob: -10.264545440673828
    6. '):
' → logprob: -11.264545440673828
    7. ' self' → logprob: -12.014545440673828
    8. ' :
' → logprob: -12.389545440673828
    9. ',' → logprob: -12.639545440673828
    10. '[self' → logprob: -13.639545440673828

Token 376: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.025761839002370834
    2. ' self' → logprob: -4.025761604309082
    3. '               ' → logprob: -5.025761604309082
    4. '                   ' → logprob: -6.900761604309082
    5. '   ' → logprob: -12.150761604309082
    6. '           ' → logprob: -12.650761604309082
    7. '	self' → logprob: -14.775761604309082
    8. ' ' → logprob: -15.650761604309082
    9. '[self' → logprob: -16.0257625579834
    10. '       ' → logprob: -17.0257625579834

Token 377: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0013105978723615408
    2. 'counts' → logprob: -6.8763108253479
    3. 'count' → logprob: -9.126310348510742
    4. '_counts' → logprob: -9.501310348510742
    5. ' .' → logprob: -10.251310348510742
    6. ' counts' → logprob: -10.626310348510742
    7. '           ' → logprob: -11.001310348510742
    8. '.' → logprob: -12.251310348510742
    9. '._' → logprob: -12.751310348510742
    10. '   ' → logprob: -13.126310348510742

Token 378: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. '[s' → logprob: -16.875
    3. ' s' → logprob: -19.125
    4. 'counts' → logprob: -19.875
    5. 'ss' → logprob: -20.375
    6. '[' → logprob: -20.75
    7. 'st' → logprob: -20.875
    8. '{s' → logprob: -21.0
    9. '(s' → logprob: -21.125
    10. '`s' → logprob: -21.25

Token 379: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '[self' → logprob: -12.625003814697266
    3. ' [' → logprob: -14.250003814697266
    4. 'fl' → logprob: -17.625003814697266
    5. '```' → logprob: -17.625003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '[++' → logprob: -18.375003814697266
    8. '[int' → logprob: -18.500003814697266
    9. '[
' → logprob: -18.500003814697266
    10. '           ' → logprob: -19.125003814697266

Token 380: 'fl' (ID: 1836)
  Prédit: 'fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -11.875007629394531
    3. ' flavor' → logprob: -13.875007629394531
    4. ']' → logprob: -16.75000762939453
    5. '_fl' → logprob: -16.87500762939453
    6. '	fl' → logprob: -18.25000762939453
    7. '(fl' → logprob: -18.25000762939453
    8. '```' → logprob: -18.37500762939453
    9. '   ' → logprob: -18.75000762939453
    10. 'Flavor' → logprob: -18.87500762939453

Token 381: 'avor' (ID: 3633)
  Prédit: 'avor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avor' → logprob: -2.6060808522743173e-05
    2. 'AVOR' → logprob: -11.875025749206543
    3. 'avior' → logprob: -12.375025749206543
    4. 'avour' → logprob: -12.500025749206543
    5. 'av' → logprob: -12.875025749206543
    6. 'a' → logprob: -13.500025749206543
    7. 'avors' → logprob: -13.750025749206543
    8. '   ' → logprob: -14.000025749206543
    9. 'avorite' → logprob: -14.125025749206543
    10. 'vor' → logprob: -14.250025749206543

Token 382: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.048810362815856934
    2. ']+=' → logprob: -3.0488104820251465
    3. ' ]' → logprob: -8.673810005187988
    4. ' +=' → logprob: -10.048810005187988
    5. '+=' → logprob: -12.048810005187988
    6. '']' → logprob: -13.173810005187988
    7. '   ' → logprob: -14.923810005187988
    8. ')' → logprob: -15.173810005187988
    9. '"]' → logprob: -16.298810958862305
    10. '```' → logprob: -16.423810958862305

Token 383: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029794802889227867
    2. ' +=' → logprob: -3.529794692993164
    3. ']+=' → logprob: -10.029794692993164
    4. '   ' → logprob: -15.779794692993164
    5. '=' → logprob: -16.654794692993164
    6. '+' → logprob: -17.029794692993164
    7. '+='' → logprob: -19.279794692993164
    8. '    ' → logprob: -20.154794692993164
    9. '           ' → logprob: -20.279794692993164
    10. '+=(' → logprob: -20.404794692993164

Token 384: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -20.250003814697266
    4. '```' → logprob: -21.000003814697266
    5. '１' → logprob: -23.125003814697266
    6. '2' → logprob: -23.250003814697266
    7. '100' → logprob: -23.250003814697266
    8. ' ' → logprob: -23.500003814697266
    9. '۱' → logprob: -23.500003814697266
    10. '0' → logprob: -23.562503814697266

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -21.25
    5. '
' → logprob: -22.625
    6. '`' → logprob: -23.5
    7. '１' → logprob: -23.5
    8. '۱' → logprob: -23.8125
    9. ' ' → logprob: -24.1875
    10. '  ' → logprob: -24.375

Token 386: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1671941876411438
    2. '   ' → logprob: -2.042194128036499
    3. '<|end|>' → logprob: -3.792194128036499
    4. ' def' → logprob: -6.792194366455078
    5. '
' → logprob: -8.542194366455078
    6. '    
' → logprob: -8.917194366455078
    7. '<|end|>' → logprob: -9.292194366455078
    8. '@property' → logprob: -10.167194366455078
    9. ' ' → logprob: -10.792194366455078
    10. '	def' → logprob: -11.292194366455078

Token 388: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0017610944341868162
    2. '   ' → logprob: -6.376760959625244
    3. '@property' → logprob: -10.626761436462402
    4. ' def' → logprob: -10.876761436462402
    5. 'from' → logprob: -11.376761436462402
    6. '<|end|>' → logprob: -13.251761436462402
    7. 'class' → logprob: -14.251761436462402
    8. '```' → logprob: -14.751761436462402
    9. '	def' → logprob: -14.876761436462402
    10. ' ' → logprob: -15.376761436462402

Token 389: ' counts' (ID: 28991)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.1161552667617798
    2. ' get' → logprob: -1.2411552667617798
    3. 'max' → logprob: -2.1161551475524902
    4. 'def' → logprob: -2.6161551475524902
    5. 'most' → logprob: -2.7411551475524902
    6. ' max' → logprob: -2.8661551475524902
    7. ' def' → logprob: -3.4911551475524902
    8. ' most' → logprob: -4.61615514755249
    9. 'mode' → logprob: -5.11615514755249
    10. ' mode' → logprob: -5.36615514755249

Token 390: '_for' (ID: 11903)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48719117045402527
    2. '(self' → logprob: -1.1121912002563477
    3. '(' → logprob: -2.9871912002563477
    4. '<|end|>' → logprob: -5.487191200256348
    5. '[' → logprob: -7.862191200256348
    6. 'def' → logprob: -7.862191200256348
    7. '[self' → logprob: -8.112191200256348
    8. '()[' → logprob: -8.487191200256348
    9. ')' → logprob: -8.987191200256348
    10. '(
' → logprob: -9.237191200256348

Token 391: '_fl' (ID: 18192)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: 'avor' (ID: 3633)
  Prédit: 'avor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avor' → logprob: -0.0025449818931519985
    2. 'avors' → logprob: -6.00254487991333
    3. 'avour' → logprob: -10.377545356750488
    4. 'av' → logprob: -10.627545356750488
    5. 'avored' → logprob: -12.127545356750488
    6. 'AVOR' → logprob: -12.627545356750488
    7. 'a' → logprob: -13.502545356750488
    8. 'avior' → logprob: -14.127545356750488
    9. 'avorite' → logprob: -14.377545356750488
    10. 'vor' → logprob: -14.877545356750488

Token 393: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2561255395412445
    2. '(self' → logprob: -1.506125569343567
    3. ' (' → logprob: -5.756125450134277
    4. '<|end|>' → logprob: -7.381125450134277
    5. 'self' → logprob: -8.756125450134277
    6. 's' → logprob: -9.756125450134277
    7. ' ' → logprob: -9.881125450134277
    8. '(
' → logprob: -9.881125450134277
    9. '(s' → logprob: -10.881125450134277
    10. '()' → logprob: -11.506125450134277

Token 394: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03577733412384987
    2. '(' → logprob: -3.5357773303985596
    3. 'self' → logprob: -5.410777568817139
    4. ')' → logprob: -6.910777568817139
    5. ' (' → logprob: -8.78577709197998
    6. '(
' → logprob: -9.03577709197998
    7. '<|end|>' → logprob: -9.16077709197998
    8. 's' → logprob: -10.16077709197998
    9. ')(' → logprob: -10.16077709197998
    10. '[self' → logprob: -10.91077709197998

Token 395: ' flavor' (ID: 23341)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.025593480095267296
    2. 'self' → logprob: -4.150593280792236
    3. ' flavor' → logprob: -4.775593280792236
    4. ' self' → logprob: -6.900593280792236
    5. '   ' → logprob: -10.400593757629395
    6. '	fl' → logprob: -11.275593757629395
    7. 'index' → logprob: -11.400593757629395
    8. ')' → logprob: -12.400593757629395
    9. '       ' → logprob: -12.525593757629395
    10. '_fl' → logprob: -12.775593757629395

Token 396: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003952544182538986
    2. ':int' → logprob: -5.628952503204346
    3. ')' → logprob: -8.378952980041504
    4. '):' → logprob: -9.378952980041504
    5. '   ' → logprob: -10.878952980041504
    6. ' :' → logprob: -11.503952980041504
    7. 'int' → logprob: -12.253952980041504
    8. '[int' → logprob: -13.628952980041504
    9. '):
' → logprob: -14.503952980041504
    10. ' )' → logprob: -14.878952980041504

Token 397: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002627662615850568
    2. ' int' → logprob: -8.250263214111328
    3. ')' → logprob: -13.625263214111328
    4. '   ' → logprob: -16.250263214111328
    5. ':int' → logprob: -16.250263214111328
    6. '[int' → logprob: -17.625263214111328
    7. '(int' → logprob: -18.000263214111328
    8. '```' → logprob: -18.500263214111328
    9. ' ' → logprob: -19.000263214111328
    10. ':' → logprob: -19.375263214111328

Token 398: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.093505099765025e-05
    2. '):' → logprob: -10.875020980834961
    3. ':' → logprob: -13.500020980834961
    4. ' )' → logprob: -15.125020980834961
    5. '   ' → logprob: -15.375020980834961
    6. ')->' → logprob: -16.62502098083496
    7. '       ' → logprob: -19.00002098083496
    8. '`)' → logprob: -19.12502098083496
    9. '')' → logprob: -19.25002098083496
    10. '):
' → logprob: -19.50002098083496

Token 399: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6860578060150146
    2. ' ->' → logprob: -1.1860578060150146
    3. ')' → logprob: -1.6860578060150146
    4. ')->' → logprob: -5.436058044433594
    5. '   ' → logprob: -7.311058044433594
    6. ':' → logprob: -7.686058044433594
    7. '()->' → logprob: -9.561058044433594
    8. '()' → logprob: -9.686058044433594
    9. ' )->' → logprob: -10.186058044433594
    10. ' ' → logprob: -10.811058044433594

Token 400: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005424669478088617
    2. ' int' → logprob: -5.255424499511719
    3. 'Optional' → logprob: -8.630424499511719
    4. ' Optional' → logprob: -11.505424499511719
    5. '   ' → logprob: -14.130424499511719
    6. '[int' → logprob: -14.380424499511719
    7. ' ' → logprob: -14.630424499511719
    8. '	int' → logprob: -15.880424499511719
    9. '  ' → logprob: -16.13042449951172
    10. '(int' → logprob: -16.50542449951172

Token 401: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009641039068810642
    2. ':
' → logprob: -8.125964164733887
    3. '<|end|>' → logprob: -8.500964164733887
    4. ':return' → logprob: -8.875964164733887
    5. '):' → logprob: -9.000964164733887
    6. '       ' → logprob: -9.875964164733887
    7. '   ' → logprob: -10.125964164733887
    8. ')' → logprob: -10.125964164733887
    9. ' ->' → logprob: -11.000964164733887
    10. '):
' → logprob: -11.750964164733887

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013329760171473026
    2. '   ' → logprob: -4.513329982757568
    3. ' return' → logprob: -6.513329982757568
    4. ':' → logprob: -8.13832950592041
    5. '<|end|>' → logprob: -8.51332950592041
    6. '    ' → logprob: -10.01332950592041
    7. ' if' → logprob: -10.01332950592041
    8. ' ' → logprob: -10.38832950592041
    9. ')' → logprob: -10.38832950592041
    10. '      ' → logprob: -10.76332950592041

Token 403: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.018757911399006844
    2. ' return' → logprob: -4.2687578201293945
    3. 'if' (adapté à ' if') → logprob: -6.0187578201293945
    4. '       ' → logprob: -6.2687578201293945
    5. ' if' → logprob: -8.268757820129395
    6. '```' → logprob: -16.26875877380371
    7. 'self' → logprob: -16.89375877380371
    8. '	return' → logprob: -17.01875877380371
    9. '   ' → logprob: -17.64375877380371
    10. ':return' → logprob: -18.89375877380371

Token 404: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4741032123565674
    2. ' ' → logprob: -0.9741032123565674
    3. 'fl' → logprob: -11.099102973937988
    4. '   ' → logprob: -12.599102973937988
    5. ' flavor' → logprob: -12.724102973937988
    6. ' not' → logprob: -13.599102973937988
    7. 'self' → logprob: -13.849102973937988
    8. ' self' → logprob: -13.849102973937988
    9. '  ' → logprob: -14.224102973937988
    10. 'not' → logprob: -14.974102973937988

Token 405: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.248469718324486e-05
    2. ' ' → logprob: -10.875022888183594
    3. 'fl' → logprob: -12.625022888183594
    4. 'not' → logprob: -16.375022888183594
    5. '   ' → logprob: -16.875022888183594
    6. '  ' → logprob: -19.125022888183594
    7. '(fl' → logprob: -19.375022888183594
    8. '```' → logprob: -19.500022888183594
    9. 'self' → logprob: -19.875022888183594
    10. '(' → logprob: -20.000022888183594

Token 406: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.36594200134277344
    2. '<' → logprob: -1.9909420013427734
    3. ' <=' → logprob: -1.9909420013427734
    4. '<=' → logprob: -3.4909420013427734
    5. ' >=' → logprob: -6.365942001342773
    6. '>=' → logprob: -7.240942001342773
    7. ' ' → logprob: -8.490942001342773
    8. '0' → logprob: -9.240942001342773
    9. '==' → logprob: -9.990942001342773
    10. ' ==' → logprob: -10.115942001342773

Token 407: ' flavor' (ID: 23341)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.002186307217925787
    2. ' flavor' → logprob: -6.127186298370361
    3. 'flu' → logprob: -15.37718677520752
    4. '_fl' → logprob: -16.002185821533203
    5. 'Flavor' → logprob: -16.002185821533203
    6. '   ' → logprob: -16.377185821533203
    7. ' ' → logprob: -16.502185821533203
    8. 'flow' → logprob: -16.627185821533203
    9. '	fl' → logprob: -16.752185821533203
    10. '(fl' → logprob: -17.002185821533203

Token 408: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2014232873916626
    2. '<' → logprob: -1.7014232873916626
    3. '<len' → logprob: -12.326423645019531
    4. '<int' → logprob: -13.076423645019531
    5. '<n' → logprob: -14.076423645019531
    6. 'and' → logprob: -14.701423645019531
    7. ' and' → logprob: -14.701423645019531
    8. '<size' → logprob: -14.826423645019531
    9. '<std' → logprob: -15.201423645019531
    10. '<num' → logprob: -15.326423645019531

Token 409: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.848420551046729e-05
    2. ' self' → logprob: -9.7500581741333
    3. 'len' → logprob: -16.125059127807617
    4. '10' → logprob: -17.125059127807617
    5. '   ' → logprob: -18.750059127807617
    6. '       ' → logprob: -18.875059127807617
    7. '           ' → logprob: -19.875059127807617
    8. '=self' → logprob: -20.875059127807617
    9. '(self' → logprob: -21.000059127807617
    10. '	self' → logprob: -21.375059127807617

Token 410: '.fl' (ID: 18931)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23338551819324493
    2. '.fl' → logprob: -1.7333855628967285
    3. 'fl' → logprob: -3.4833855628967285
    4. '.self' → logprob: -7.6083855628967285
    5. '_fl' → logprob: -9.23338508605957
    6. '.' → logprob: -9.98338508605957
    7. 'len' → logprob: -10.10838508605957
    8. ' self' → logprob: -10.35838508605957
    9. '   ' → logprob: -10.60838508605957
    10. 'elf' → logprob: -11.48338508605957

Token 411: 'avor' (ID: 3633)
  Prédit: 'avor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avor' → logprob: -2.1008713702030946e-06
    2. 'avour' → logprob: -14.375001907348633
    3. 'AVOR' → logprob: -14.375001907348633
    4. 'av' → logprob: -15.250001907348633
    5. 'avior' → logprob: -15.375001907348633
    6. 'avorite' → logprob: -16.000001907348633
    7. 'vor' → logprob: -16.750001907348633
    8. 'a' → logprob: -16.875001907348633
    9. 'avors' → logprob: -17.625001907348633
    10. 'avored' → logprob: -17.875001907348633

Token 412: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0011356930481269956
    2. 'count' → logprob: -7.37613582611084
    3. 'self' → logprob: -7.62613582611084
    4. '   ' → logprob: -12.00113582611084
    5. '.count' → logprob: -12.37613582611084
    6. 'fl' → logprob: -13.50113582611084
    7. 'Count' → logprob: -13.50113582611084
    8. ' self' → logprob: -13.75113582611084
    9. 'elf' → logprob: -13.87613582611084
    10. '_counts' → logprob: -14.25113582611084

Token 413: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07929698377847672
    2. ':' → logprob: -2.5792970657348633
    3. ':return' → logprob: -8.579297065734863
    4. '       ' → logprob: -9.204297065734863
    5. '):
' → logprob: -9.579297065734863
    6. ' and' → logprob: -11.079297065734863
    7. '           ' → logprob: -11.454297065734863
    8. ':
' → logprob: -11.579297065734863
    9. 'and' → logprob: -11.954297065734863
    10. '   ' → logprob: -12.704297065734863

Token 414: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013459832407534122
    2. ':
' → logprob: -4.5134596824646
    3. 'return' → logprob: -6.5134596824646
    4. ' return' → logprob: -7.6384596824646
    5. ':' → logprob: -8.513460159301758
    6. ':return' → logprob: -8.763460159301758
    7. '       ' → logprob: -9.888460159301758
    8. '
' → logprob: -11.263460159301758
    9. ' :
' → logprob: -12.513460159301758
    10. '		' → logprob: -12.763460159301758

Token 415: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002642483450472355
    2. ' return' → logprob: -6.002642631530762
    3. '           ' → logprob: -8.752642631530762
    4. '       ' → logprob: -11.752642631530762
    5. '	return' → logprob: -14.877642631530762
    6. '               ' → logprob: -15.002642631530762
    7. '   ' → logprob: -15.502642631530762
    8. ':return' → logprob: -16.627641677856445
    9. '
' → logprob: -17.752641677856445
    10. 'eturn' → logprob: -18.877641677856445

Token 416: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015024791937321424
    2. ' self' → logprob: -6.501502513885498
    3. '       ' → logprob: -17.001502990722656
    4. '   ' → logprob: -18.001502990722656
    5. '           ' → logprob: -18.876502990722656
    6. '	self' → logprob: -19.626502990722656
    7. '(self' → logprob: -19.876502990722656
    8. '[self' → logprob: -20.751502990722656
    9. ' ' → logprob: -21.626502990722656
    10. '
' → logprob: -21.876502990722656

Token 417: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -4.961759259458631e-06
    2. 'counts' → logprob: -12.250004768371582
    3. '[count' → logprob: -17.7500057220459
    4. 'count' → logprob: -17.8750057220459
    5. ' counts' → logprob: -17.8750057220459
    6. '_counts' → logprob: -18.5000057220459
    7. ' .' → logprob: -19.0000057220459
    8. '.' → logprob: -19.0000057220459
    9. '._' → logprob: -20.3750057220459
    10. '   ' → logprob: -20.3750057220459

Token 418: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.941850526549388e-06
    2. '       ' → logprob: -12.875007629394531
    3. '   ' → logprob: -13.125007629394531
    4. '           ' → logprob: -14.125007629394531
    5. ' s' → logprob: -14.250007629394531
    6. '[' → logprob: -14.500007629394531
    7. 'st' → logprob: -15.625007629394531
    8. 'counts' → logprob: -15.625007629394531
    9. '               ' → logprob: -15.750007629394531
    10. 'ss' → logprob: -15.875007629394531

Token 419: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. 'fl' → logprob: -18.25
    3. ' [' → logprob: -18.25
    4. '       ' → logprob: -19.625
    5. '   ' → logprob: -19.75
    6. '```' → logprob: -20.25
    7. '(fl' → logprob: -21.125
    8. '[f' → logprob: -21.5
    9. '\[' → logprob: -21.75
    10. '[
' → logprob: -22.0

Token 420: 'fl' (ID: 1836)
  Prédit: 'fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -7.896309739408025e-07
    2. ' flavor' → logprob: -14.375000953674316
    3. '[' → logprob: -16.0
    4. '_fl' → logprob: -18.125
    5. '   ' → logprob: -19.0
    6. '(fl' → logprob: -19.375
    7. '-fl' → logprob: -19.625
    8. 'flu' → logprob: -19.75
    9. ' ' → logprob: -20.0
    10. 'Flavor' → logprob: -20.0

Token 421: 'avor' (ID: 3633)
  Prédit: 'avor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avor' → logprob: -5.200166469876422e-06
    2. 'AVOR' → logprob: -12.875004768371582
    3. 'vor' → logprob: -14.125004768371582
    4. 'avour' → logprob: -14.750004768371582
    5. 'avior' → logprob: -14.875004768371582
    6. 'av' → logprob: -15.000004768371582
    7. 'avors' → logprob: -15.750004768371582
    8. 'avored' → logprob: -16.1250057220459
    9. '[' → logprob: -16.3750057220459
    10. '   ' → logprob: -16.5000057220459

Token 422: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3341695964336395
    2. '
' → logprob: -1.709169626235962
    3. '<|end|>' → logprob: -2.459169626235962
    4. ')' → logprob: -5.209169387817383
    5. ']
' → logprob: -5.584169387817383
    6. ')
' → logprob: -5.959169387817383
    7. ']' → logprob: -6.334169387817383
    8. '   ' → logprob: -6.959169387817383
    9. 'else' → logprob: -7.584169387817383
    10. '        
' → logprob: -7.584169387817383

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1398757123970427e-05
    2. 'return' → logprob: -12.125011444091797
    3. '<|end|>' → logprob: -12.625011444091797
    4. '	' → logprob: -14.125011444091797
    5. '   ' → logprob: -14.375011444091797
    6. '           ' → logprob: -14.625011444091797
    7. ' return' → logprob: -15.500011444091797
    8. '        ' → logprob: -15.750011444091797
    9. 'else' → logprob: -16.375011444091797
    10. '      ' → logprob: -16.625011444091797

Token 424: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20382848381996155
    2. '       ' → logprob: -1.7038284540176392
    3. 'else' → logprob: -6.45382833480835
    4. ' return' → logprob: -7.32882833480835
    5. 'raise' (adapté à ' raise') → logprob: -9.078828811645508
    6. '   ' → logprob: -9.953828811645508
    7. ' else' → logprob: -11.453828811645508
    8. '
' → logprob: -12.703828811645508
    9. '        
' → logprob: -13.203828811645508
    10. '	return' → logprob: -13.453828811645508

Token 425: ' Index' (ID: 14580)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.31334760785102844
    2. 'Index' → logprob: -1.313347578048706
    3. ' Value' → logprob: -9.563347816467285
    4. ' Index' → logprob: -11.063347816467285
    5. '(Value' → logprob: -19.43834686279297
    6. '_value' → logprob: -19.56334686279297
    7. '(Index' → logprob: -19.81334686279297
    8. '	Value' → logprob: -20.06334686279297
    9. '```' → logprob: -20.06334686279297
    10. '.Value' → logprob: -20.31334686279297

Token 426: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0011706985533237457
    2. 'rror' → logprob: -6.751170635223389
    3. 'error' → logprob: -15.376171112060547
    4. 'ror' → logprob: -15.751171112060547
    5. 'ation' → logprob: -17.126171112060547
    6. 'Out' → logprob: -18.126171112060547
    7. '   ' → logprob: -19.626171112060547
    8. 'r' → logprob: -19.751171112060547
    9. 'out' → logprob: -19.876171112060547
    10. 'ERROR' → logprob: -19.876171112060547

Token 427: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03486020117998123
    2. '('' → logprob: -3.409860134124756
    3. '"' → logprob: -7.409860134124756
    4. '(' → logprob: -8.409860610961914
    5. '       ' → logprob: -8.909860610961914
    6. '("")' → logprob: -9.159860610961914
    7. '()' → logprob: -10.034860610961914
    8. '   ' → logprob: -10.034860610961914
    9. '(f' → logprob: -10.659860610961914
    10. ''' → logprob: -11.409860610961914

Token 428: 'Flavor' (ID: 122925)
  Prédit: 'Flavor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flavor' → logprob: -0.4849075675010681
    2. 'fl' → logprob: -0.9849075675010681
    3. 'Fl' → logprob: -4.984907627105713
    4. '"' → logprob: -5.609907627105713
    5. ''' → logprob: -8.359907150268555
    6. '`' → logprob: -11.734907150268555
    7. '_fl' → logprob: -12.234907150268555
    8. 'flu' → logprob: -12.359907150268555
    9. 'f' → logprob: -12.484907150268555
    10. 'Invalid' → logprob: -12.609907150268555

Token 429: ' index' (ID: 3472)
  Prédit: ' out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.03581633046269417
    2. ' index' → logprob: -3.4108164310455322
    3. 'out' → logprob: -6.660816192626953
    4. 'index' → logprob: -7.035816192626953
    5. ' not' → logprob: -12.410816192626953
    6. ' ' → logprob: -13.410816192626953
    7. '   ' → logprob: -14.535816192626953
    8. '	out' → logprob: -14.785816192626953
    9. ' count' → logprob: -15.035816192626953
    10. 'not' → logprob: -15.285816192626953

Token 430: ' out' (ID: 842)
  Prédit: ' out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.0008054602658376098
    2. 'out' → logprob: -7.125805377960205
    3. ' is' → logprob: -14.500805854797363
    4. ' ' → logprob: -15.250805854797363
    5. '	out' → logprob: -15.625805854797363
    6. '   ' → logprob: -16.875804901123047
    7. 's' → logprob: -17.750804901123047
    8. 'is' → logprob: -18.000804901123047
    9. ' must' → logprob: -18.375804901123047
    10. 'ex' → logprob: -18.375804901123047

Token 431: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.07889066636562347
    2. 'of' → logprob: -2.578890562057495
    3. '	of' → logprob: -14.953890800476074
    4. ' ' → logprob: -15.453890800476074
    5. '  ' → logprob: -16.078889846801758
    6. '0' → logprob: -16.203889846801758
    7. 'range' → logprob: -16.453889846801758
    8. ' range' → logprob: -16.703889846801758
    9. '   ' → logprob: -16.953889846801758
    10. '[' → logprob: -17.328889846801758

Token 432: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.055079299956560135
    2. ' range' → logprob: -2.930079221725464
    3. 'bounds' → logprob: -8.680079460144043
    4. ' bounds' → logprob: -11.055079460144043
    5. 'ranges' → logprob: -12.805079460144043
    6. '	range' → logprob: -13.555079460144043
    7. 'bound' → logprob: -13.555079460144043
    8. 'rang' → logprob: -13.805079460144043
    9. '   ' → logprob: -13.930079460144043
    10. ' ' → logprob: -14.180079460144043

Token 433: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -7.5649528298527e-05
    2. ')")' → logprob: -9.875075340270996
    3. ')' → logprob: -11.000075340270996
    4. '.")' → logprob: -12.375075340270996
    5. '}")' → logprob: -13.375075340270996
    6. '")
' → logprob: -13.500075340270996
    7. '')' → logprob: -16.375076293945312
    8. '"' → logprob: -17.500076293945312
    9. '")}' → logprob: -17.750076293945312
    10. '").' → logprob: -18.125076293945312

Token 434: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45775678753852844
    2. '   ' → logprob: -1.332756757736206
    3. '<|end|>' → logprob: -2.332756757736206
    4. 'class' → logprob: -5.332756996154785
    5. 'from' → logprob: -7.332756996154785
    6. '```' → logprob: -8.457756996154785
    7. ' def' → logprob: -8.457756996154785
    8. '#' → logprob: -8.457756996154785
    9. '
' → logprob: -9.457756996154785
    10. '[' → logprob: -9.832756996154785

Token 435: ' Histogram' (ID: 189950)
  Prédit: 'Histogram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Histogram' → logprob: -0.049344502389431
    2. ' Histogram' → logprob: -4.049344539642334
    3. 'Solution' → logprob: -5.049344539642334
    4. 'Sales' → logprob: -5.424344539642334
    5. 'Flavor' → logprob: -5.799344539642334
    6. 'Output' → logprob: -6.049344539642334
    7. 'Printer' → logprob: -6.424344539642334
    8. 'Main' → logprob: -6.549344539642334
    9. 'Report' → logprob: -6.924344539642334
    10. 'Result' → logprob: -7.049344539642334

Token 436: 'View' (ID: 1097)
  Prédit: 'Printer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -0.7171155214309692
    2. 'View' → logprob: -1.7171155214309692
    3. 'Viewer' → logprob: -2.7171154022216797
    4. 'Presenter' → logprob: -3.0921154022216797
    5. 'Builder' → logprob: -3.3421154022216797
    6. 'Visualizer' → logprob: -3.3421154022216797
    7. ':' → logprob: -3.5921154022216797
    8. 'Drawer' → logprob: -3.5921154022216797
    9. 'Renderer' → logprob: -3.8421154022216797
    10. ':
' → logprob: -4.21711540222168

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031880477908998728
    2. ':
' → logprob: -5.753188133239746
    3. '(H' → logprob: -12.753188133239746
    4. ':

' → logprob: -13.378188133239746
    5. ' :' → logprob: -13.378188133239746
    6. '(' → logprob: -13.628188133239746
    7. ':def' → logprob: -13.753188133239746
    8. '<|end|>' → logprob: -14.378188133239746
    9. '   ' → logprob: -15.253188133239746
    10. '():' → logprob: -15.628188133239746

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002494191285222769
    2. 'class' → logprob: -9.000249862670898
    3. 'def' → logprob: -9.375249862670898
    4. ' def' → logprob: -10.250249862670898
    5. ':' → logprob: -12.875249862670898
    6. '```' → logprob: -13.250249862670898
    7. ' class' → logprob: -14.000249862670898
    8. '   ' → logprob: -16.1252498626709
    9. '    ' → logprob: -16.2502498626709
    10. '    
' → logprob: -16.6252498626709

Token 439: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06749221682548523
    2. ' def' → logprob: -3.0674922466278076
    3. '   ' → logprob: -4.0674920082092285
    4. 'class' → logprob: -6.4424920082092285
    5. 'from' → logprob: -11.192492485046387
    6. 'import' → logprob: -15.567492485046387
    7. ' class' → logprob: -15.692492485046387
    8. '	def' → logprob: -15.692492485046387
    9. '```' → logprob: -16.19249153137207
    10. '__' → logprob: -17.06749153137207

Token 440: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.41313436627388
    2. 'def' → logprob: -1.4131343364715576
    3. ' __' → logprob: -2.4131343364715576
    4. '__' → logprob: -5.413134574890137
    5. 'init' → logprob: -6.913134574890137
    6. '_init' → logprob: -11.163134574890137
    7. '   ' → logprob: -11.413134574890137
    8. ' init' → logprob: -11.413134574890137
    9. '```' → logprob: -12.038134574890137
    10. '.__' → logprob: -12.663134574890137

Token 441: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.392202976712724e-06
    2. 'def' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.750006675720215
    4. '_init' → logprob: -14.875006675720215
    5. ' init' → logprob: -15.875006675720215
    6. '```' → logprob: -18.0000057220459
    7. '(init' → logprob: -18.2500057220459
    8. '.init' → logprob: -18.7500057220459
    9. ' ' → logprob: -18.8750057220459
    10. 'iter' → logprob: -18.8750057220459

Token 442: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014809363055974245
    2. ' (' → logprob: -6.626481056213379
    3. '__(' → logprob: -9.376481056213379
    4. '   ' → logprob: -10.251481056213379
    5. '(' → logprob: -10.376481056213379
    6. '(
' → logprob: -13.751481056213379
    7. ' ' → logprob: -14.001481056213379
    8. 'self' → logprob: -14.376481056213379
    9. '       ' → logprob: -15.126481056213379
    10. '(Self' → logprob: -15.251481056213379

Token 443: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4140441635390744e-05
    2. ' self' → logprob: -12.125014305114746
    3. ')' → logprob: -12.625014305114746
    4. '       ' → logprob: -12.875014305114746
    5. '
' → logprob: -13.875014305114746
    6. '   ' → logprob: -14.125014305114746
    7. '(self' → logprob: -14.250014305114746
    8. '):
' → logprob: -15.750014305114746
    9. 'hist' → logprob: -15.750014305114746
    10. ',' → logprob: -16.12501335144043

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025294104125350714
    2. 'self' → logprob: -6.002529621124268
    3. '       ' → logprob: -11.12752914428711
    4. ',self' → logprob: -11.37752914428711
    5. '(self' → logprob: -11.50252914428711
    6. ' ,' → logprob: -12.12752914428711
    7. ',
' → logprob: -12.25252914428711
    8. '   ' → logprob: -12.50252914428711
    9. ' self' → logprob: -13.37752914428711
    10. '):' → logprob: -14.75252914428711

Token 445: ' model' (ID: 2359)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'model' → logprob: -0.14887398481369019
    2. 'hist' → logprob: -2.023874044418335
    3. ' model' → logprob: -5.398873805999756
    4. ' histogram' → logprob: -6.898873805999756
    5. 'counts' → logprob: -7.648873805999756
    6. ' hist' → logprob: -10.148874282836914
    7. ' counts' → logprob: -10.773874282836914
    8. 'data' → logprob: -11.023874282836914
    9. 'history' → logprob: -11.273874282836914
    10. 'models' → logprob: -11.273874282836914

Token 446: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004147849511355162
    2. '):' → logprob: -5.504148006439209
    3. ':H' → logprob: -10.37914752960205
    4. '):
' → logprob: -10.62914752960205
    5. ' :' → logprob: -12.00414752960205
    6. ')' → logprob: -12.25414752960205
    7. ' ):' → logprob: -13.25414752960205
    8. '```' → logprob: -14.37914752960205
    9. '   ' → logprob: -15.12914752960205
    10. ',' → logprob: -16.004148483276367

Token 447: ' Histogram' (ID: 189950)
  Prédit: 'Histogram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Histogram' → logprob: -0.0024756586644798517
    2. ' Histogram' → logprob: -6.002475738525391
    3. 'Hist' → logprob: -17.12747573852539
    4. '   ' → logprob: -18.00247573852539
    5. ' ' → logprob: -18.25247573852539
    6. '  ' → logprob: -19.37747573852539
    7. '_hist' → logprob: -20.37747573852539
    8. 'History' → logprob: -21.12747573852539
    9. ' histogram' → logprob: -21.12747573852539
    10. ')' → logprob: -21.12747573852539

Token 448: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -4.320199877838604e-07
    2. 'model' → logprob: -15.5
    3. ')' → logprob: -15.875
    4. '   ' → logprob: -16.75
    5. '	Model' → logprob: -17.5
    6. '):
' → logprob: -18.0
    7. '):' → logprob: -18.625
    8. '
' → logprob: -18.75
    9. '<Model' → logprob: -18.75
    10. ' Model' → logprob: -19.0

Token 449: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10030803084373474
    2. '):' → logprob: -2.3503079414367676
    3. '):
' → logprob: -9.725308418273926
    4. ')' → logprob: -10.350308418273926
    5. '   ' → logprob: -11.725308418273926
    6. '       ' → logprob: -14.475308418273926
    7. ' ):
' → logprob: -14.600308418273926
    8. ':' → logprob: -15.350308418273926
    9. ',' → logprob: -15.850308418273926
    10. '):

' → logprob: -16.47530746459961

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005155131220817566
    2. '   ' → logprob: -5.505155086517334
    3. 'self' → logprob: -7.255155086517334
    4. 'def' → logprob: -8.005155563354492
    5. ' self' → logprob: -10.380155563354492
    6. ' def' → logprob: -13.005155563354492
    7. '	self' → logprob: -13.880155563354492
    8. '):
' → logprob: -15.005155563354492
    9. '
' → logprob: -15.755155563354492
    10. '(self' → logprob: -15.880155563354492

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002840060740709305
    2. '       ' → logprob: -6.252840042114258
    3. ' self' → logprob: -7.002840042114258
    4. '	self' → logprob: -14.377840042114258
    5. '   ' → logprob: -14.752840042114258
    6. 'import' → logprob: -14.752840042114258
    7. 'from' → logprob: -15.627840042114258
    8. ' ' → logprob: -17.002840042114258
    9. '(self' → logprob: -17.377840042114258
    10. 'def' → logprob: -17.627840042114258

Token 452: '.model' (ID: 5212)
  Prédit: '.model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.model' → logprob: -4.35837464465294e-05
    2. '.' → logprob: -10.250043869018555
    3. '._' → logprob: -12.500043869018555
    4. ' .' → logprob: -13.750043869018555
    5. '.mode' → logprob: -14.250043869018555
    6. 'model' → logprob: -14.500043869018555
    7. '.models' → logprob: -14.500043869018555
    8. '   ' → logprob: -14.875043869018555
    9. '=model' → logprob: -14.875043869018555
    10. '.view' → logprob: -15.500043869018555

Token 453: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24680687487125397
    2. ' =' → logprob: -1.7468068599700928
    3. '.model' → logprob: -3.8718068599700928
    4. '=model' → logprob: -4.121807098388672
    5. '   ' → logprob: -5.121807098388672
    6. '.' → logprob: -7.121807098388672
    7. ':' → logprob: -8.496807098388672
    8. 'model' → logprob: -8.996807098388672
    9. '       ' → logprob: -9.496807098388672
    10. 'self' → logprob: -10.246807098388672

Token 454: ' model' (ID: 2359)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'model' → logprob: -0.0380416102707386
    2. ' model' → logprob: -3.288041591644287
    3. '	model' → logprob: -16.163042068481445
    4. '(model' → logprob: -17.538042068481445
    5. '=model' → logprob: -19.663042068481445
    6. '$model' → logprob: -19.663042068481445
    7. 'mode' → logprob: -19.788042068481445
    8. ':model' → logprob: -20.163042068481445
    9. '.model' → logprob: -20.413042068481445
    10. ' ' → logprob: -22.288042068481445

Token 455: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006474725902080536
    2. '
' → logprob: -5.256474494934082
    3. 'def' → logprob: -6.881474494934082
    4. '    
' → logprob: -8.506474494934082
    5. ' def' → logprob: -12.006474494934082
    6. '        
' → logprob: -12.631474494934082
    7. '  
' → logprob: -14.381474494934082
    8. ' 
' → logprob: -15.131474494934082
    9. '	def' → logprob: -15.131474494934082
    10. '

' → logprob: -15.506474494934082

Token 456: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1010330393910408
    2. '   ' → logprob: -2.3510329723358154
    3. ' def' → logprob: -7.1010332107543945
    4. '
' → logprob: -13.976033210754395
    5. '	def' → logprob: -14.226033210754395
    6. '```' → logprob: -16.601032257080078
    7. 'from' → logprob: -16.726032257080078
    8. 'class' → logprob: -16.851032257080078
    9. ' ' → logprob: -17.226032257080078
    10. '  ' → logprob: -17.601032257080078

Token 457: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.125
    4. 'from' → logprob: -20.25
    5. 'class' → logprob: -21.375
    6. '	def' → logprob: -22.75
    7. '
' → logprob: -22.875
    8. 'import' → logprob: -24.625
    9. '    
' → logprob: -25.0
    10. '```' → logprob: -25.25

Token 458: ' render' (ID: 5898)
  Prédit: 'render'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'render' → logprob: -0.2510429620742798
    2. ' render' → logprob: -2.0010428428649902
    3. 'display' → logprob: -2.6260428428649902
    4. ' display' → logprob: -4.37604284286499
    5. 'print' → logprob: -7.00104284286499
    6. 'draw' → logprob: -8.001043319702148
    7. 'show' → logprob: -8.001043319702148
    8. 'generate' → logprob: -9.126043319702148
    9. ' show' → logprob: -9.501043319702148
    10. '__' → logprob: -10.501043319702148

Token 459: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.313314952421933e-05
    2. '(' → logprob: -9.750062942504883
    3. '():' → logprob: -13.125062942504883
    4. '()' → logprob: -13.250062942504883
    5. ' (' → logprob: -14.500062942504883
    6. '(
' → logprob: -15.500062942504883
    7. 'self' → logprob: -15.625062942504883
    8. '   ' → logprob: -16.625062942504883
    9. '():
' → logprob: -17.500062942504883
    10. '()(' → logprob: -17.500062942504883

Token 460: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005593849346041679
    2. '):' → logprob: -5.255593776702881
    3. '):
' → logprob: -8.505594253540039
    4. ',' → logprob: -9.880594253540039
    5. 'self' → logprob: -10.005594253540039
    6. ')->' → logprob: -10.380594253540039
    7. ' )' → logprob: -10.880594253540039
    8. '   ' → logprob: -12.630594253540039
    9. '()' → logprob: -13.630594253540039
    10. '(self' → logprob: -13.755594253540039

Token 461: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.04735373705625534
    2. '->' → logprob: -3.422353744506836
    3. ':' → logprob: -5.172353744506836
    4. ')' → logprob: -5.172353744506836
    5. '(self' → logprob: -6.672353744506836
    6. ')->' → logprob: -8.172353744506836
    7. '   ' → logprob: -8.297353744506836
    8. '       ' → logprob: -8.922353744506836
    9. ':
' → logprob: -9.172353744506836
    10. '()' → logprob: -9.172353744506836

Token 462: ' List' (ID: 2655)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.37140583992004395
    2. ' str' → logprob: -1.996405839920044
    3. 'None' → logprob: -2.246405839920044
    4. 'List' → logprob: -3.246405839920044
    5. ' None' → logprob: -3.871405839920044
    6. ' List' → logprob: -4.746405601501465
    7. '[str' → logprob: -8.996405601501465
    8. 'list' → logprob: -10.871405601501465
    9. '[List' → logprob: -11.121405601501465
    10. 'int' → logprob: -11.121405601501465

Token 463: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.8624639324116288e-06
    2. '[int' → logprob: -13.375001907348633
    3. 'str' → logprob: -15.375001907348633
    4. '[' → logprob: -17.500001907348633
    5. ' [' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '[List' → logprob: -18.625001907348633
    8. ' ' → logprob: -19.250001907348633
    9. '  ' → logprob: -20.000001907348633
    10. ' str' → logprob: -21.000001907348633

Token 464: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.619925320148468
    2. ']:' → logprob: -1.3699252605438232
    3. ':' → logprob: -2.3699252605438232
    4. ':
' → logprob: -3.2449252605438232
    5. '       ' → logprob: -3.6199252605438232
    6. '():
' → logprob: -4.244925498962402
    7. '):
' → logprob: -4.369925498962402
    8. ']:
' → logprob: -4.994925498962402
    9. '):' → logprob: -5.369925498962402
    10. '():' → logprob: -5.619925498962402

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002922022540587932
    2. ' lines' → logprob: -8.25029182434082
    3. 'result' → logprob: -11.37529182434082
    4. ' result' → logprob: -11.37529182434082
    5. 'output' → logprob: -12.37529182434082
    6. ' output' → logprob: -13.00029182434082
    7. 'lines' → logprob: -13.87529182434082
    8. '```' → logprob: -15.00029182434082
    9. '   ' → logprob: -16.87529182434082
    10. '	lines' → logprob: -17.25029182434082

Token 466: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.7298706769943237
    2. 'max' → logprob: -1.7298706769943237
    3. 'output' → logprob: -1.9798706769943237
    4. 'result' → logprob: -2.1048707962036133
    5. '       ' → logprob: -2.9798707962036133
    6. ' lines' → logprob: -3.8548707962036133
    7. ' max' → logprob: -5.854870796203613
    8. ' result' → logprob: -5.854870796203613
    9. 'rows' → logprob: -6.854870796203613
    10. ' output' → logprob: -7.104870796203613

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03445856645703316
    2. '=' → logprob: -3.409458637237549
    3. '=[]' → logprob: -7.284458637237549
    4. '[]' → logprob: -9.90945816040039
    5. ':' → logprob: -10.03445816040039
    6. '=[]
' → logprob: -10.65945816040039
    7. '   ' → logprob: -12.65945816040039
    8. ' ' → logprob: -13.15945816040039
    9. '[:]' → logprob: -13.90945816040039
    10. '  ' → logprob: -14.40945816040039

Token 468: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2014201581478119
    2. '[]
' → logprob: -1.7014201879501343
    3. ' []' → logprob: -12.951419830322266
    4. ' []
' → logprob: -13.701419830322266
    5. '["' → logprob: -13.701419830322266
    6. '[' → logprob: -14.201419830322266
    7. '['' → logprob: -14.326419830322266
    8. '[]

' → logprob: -14.451419830322266
    9. '[
' → logprob: -14.576419830322266
    10. '[]"' → logprob: -17.076419830322266

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20267975330352783
    2. 'max' → logprob: -2.0776796340942383
    3. ' max' → logprob: -3.0776796340942383
    4. ' for' → logprob: -4.952679634094238
    5. 'for' → logprob: -5.327679634094238
    6. ' maximum' → logprob: -9.702679634094238
    7. 'count' → logprob: -9.952679634094238
    8. '   ' → logprob: -10.202679634094238
    9. 'counts' → logprob: -10.827679634094238
    10. 'maximum' → logprob: -11.202679634094238

Token 470: ' for' (ID: 395)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.012307729572057724
    2. 'for' (adapté à ' for') → logprob: -4.512307643890381
    3. '       ' → logprob: -7.512307643890381
    4. ' max' → logprob: -7.887307643890381
    5. 'total' → logprob: -8.887308120727539
    6. 'counts' → logprob: -9.512308120727539
    7. 'maximum' → logprob: -9.512308120727539
    8. 'mx' → logprob: -11.137308120727539
    9. ' for' → logprob: -11.262308120727539
    10. 'm' → logprob: -11.762308120727539

Token 471: ' flavor' (ID: 23341)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.0007703172159381211
    2. 'i' → logprob: -7.250770092010498
    3. ' flavor' → logprob: -10.000770568847656
    4. 'count' → logprob: -11.750770568847656
    5. ' i' → logprob: -12.750770568847656
    6. 'value' → logprob: -13.000770568847656
    7. 'level' → logprob: -15.000770568847656
    8. 'f' → logprob: -15.250770568847656
    9. 'idx' → logprob: -15.250770568847656
    10. 'index' → logprob: -15.625770568847656

Token 472: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04915691167116165
    2. ',' → logprob: -3.049156904220581
    3. 'in' → logprob: -8.04915714263916
    4. ' ,' → logprob: -8.42415714263916
    5. ' ' → logprob: -10.54915714263916
    6. '   ' → logprob: -13.17415714263916
    7. '	in' → logprob: -14.92415714263916
    8. '  ' → logprob: -15.17415714263916
    9. 's' → logprob: -15.42415714263916
    10. ',int' → logprob: -15.42415714263916

Token 473: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '	range' → logprob: -19.87747573852539
    4. '   ' → logprob: -20.12747573852539
    5. ' ' → logprob: -22.12747573852539
    6. '(range' → logprob: -22.37747573852539
    7. 'self' → logprob: -22.62747573852539
    8. '  ' → logprob: -23.62747573852539
    9. 'Range' → logprob: -23.62747573852539
    10. 're' → logprob: -24.50247573852539

Token 474: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0062932646833360195
    2. '(len' → logprob: -5.756293296813965
    3. '(' → logprob: -6.006293296813965
    4. '10' → logprob: -7.756293296813965
    5. 'len' → logprob: -8.506293296813965
    6. 'self' → logprob: -11.006293296813965
    7. '9' → logprob: -14.881293296813965
    8. '0' → logprob: -15.881293296813965
    9. '   ' → logprob: -17.13129234313965
    10. ' self' → logprob: -17.50629234313965

Token 475: '.model' (ID: 5212)
  Prédit: '.model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.model' → logprob: -0.4876694679260254
    2. 'self' → logprob: -0.9876694679260254
    3. ' self' → logprob: -5.112669467926025
    4. '.self' → logprob: -5.862669467926025
    5. 'model' → logprob: -6.237669467926025
    6. '(self' → logprob: -6.862669467926025
    7. 'len' → logprob: -7.362669467926025
    8. '   ' → logprob: -7.987669467926025
    9. ',self' → logprob: -9.487668991088867
    10. '.view' → logprob: -9.612668991088867

Token 476: '.fl' (ID: 18931)
  Prédit: '.fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fl' → logprob: -9.436450636712834e-05
    2. ' .' → logprob: -9.375094413757324
    3. '.' → logprob: -11.875094413757324
    4. '.fre' → logprob: -14.125094413757324
    5. '.food' → logprob: -14.875094413757324
    6. '   ' → logprob: -14.875094413757324
    7. '.count' → logprob: -15.750094413757324
    8. '.Fl' → logprob: -15.875094413757324
    9. 'fl' → logprob: -15.875094413757324
    10. '.fe' → logprob: -16.000093460083008

Token 477: 'avor' (ID: 3633)
  Prédit: 'avor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avor' → logprob: -2.816093228830141e-06
    2. 'av' → logprob: -14.25000286102295
    3. 'avior' → logprob: -14.25000286102295
    4. 'AVOR' → logprob: -14.75000286102295
    5. 'a' → logprob: -15.25000286102295
    6. 'avour' → logprob: -15.37500286102295
    7. '_' → logprob: -16.000001907348633
    8. 'avorite' → logprob: -16.125001907348633
    9. 'avors' → logprob: -16.375001907348633
    10. 'avored' → logprob: -16.500001907348633

Token 478: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.054500666621607e-06
    2. 'count' → logprob: -12.75000286102295
    3. '_counts' → logprob: -16.500003814697266
    4. 's' → logprob: -18.250003814697266
    5. '_c' → logprob: -18.250003814697266
    6. '_cnt' → logprob: -18.625003814697266
    7. '   ' → logprob: -19.500003814697266
    8. '_' → logprob: -19.750003814697266
    9. ' count' → logprob: -20.000003814697266
    10. 'ount' → logprob: -20.250003814697266

Token 479: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009990395046770573
    2. '):' → logprob: -4.634990215301514
    3. '):
' → logprob: -8.509990692138672
    4. '       ' → logprob: -11.384990692138672
    5. ' ):
' → logprob: -11.384990692138672
    6. '   ' → logprob: -11.634990692138672
    7. ')' → logprob: -15.009990692138672
    8. '):

' → logprob: -15.259990692138672
    9. ' ):' → logprob: -15.259990692138672
    10. '           ' → logprob: -15.759990692138672

Token 480: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035119339008815587
    2. ' lines' → logprob: -8.625350952148438
    3. ':' → logprob: -9.125350952148438
    4. 'count' → logprob: -11.125350952148438
    5. 'lines' → logprob: -11.375350952148438
    6. 'counts' → logprob: -11.375350952148438
    7. ' counts' → logprob: -11.500350952148438
    8. ':
' → logprob: -12.375350952148438
    9. '):
' → logprob: -12.750350952148438
    10. ' count' → logprob: -13.250350952148438

Token 481: ' c' (ID: 274)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.24661295115947723
    2. '           ' → logprob: -1.8716129064559937
    3. ' count' → logprob: -3.871613025665283
    4. 'lines' → logprob: -4.121613025665283
    5. ' lines' → logprob: -4.621613025665283
    6. 'line' → logprob: -4.871613025665283
    7. 'counts' → logprob: -4.996613025665283
    8. ' ' → logprob: -7.121613025665283
    9. ' line' → logprob: -7.246613025665283
    10. '   ' → logprob: -7.371613025665283

Token 482: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.011742598377168179
    2. ' =' → logprob: -4.63674259185791
    3. 'count' → logprob: -6.88674259185791
    4. 'nt' → logprob: -7.38674259185791
    5. '=' → logprob: -8.26174259185791
    6. '_count' → logprob: -9.76174259185791
    7. '=count' → logprob: -12.01174259185791
    8. '   ' → logprob: -12.13674259185791
    9. 'out' → logprob: -12.63674259185791
    10. 'ont' → logprob: -13.01174259185791

Token 483: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1130438894033432
    2. ' self' → logprob: -2.238043785095215
    3. '       ' → logprob: -9.238043785095215
    4. '           ' → logprob: -9.988043785095215
    5. ''' → logprob: -10.613043785095215
    6. 'elf' → logprob: -10.988043785095215
    7. '"' → logprob: -11.738043785095215
    8. '   ' → logprob: -11.988043785095215
    9. '(self' → logprob: -12.113043785095215
    10. 's' → logprob: -12.488043785095215

Token 484: '.model' (ID: 5212)
  Prédit: '.model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.model' → logprob: -2.093505099765025e-05
    2. '.count' → logprob: -11.250020980834961
    3. 'model' → logprob: -12.000020980834961
    4. '.' → logprob: -13.500020980834961
    5. ' .' → logprob: -16.25002098083496
    6. 'odel' → logprob: -16.37502098083496
    7. '.models' → logprob: -17.25002098083496
    8. ' model' → logprob: -17.75002098083496
    9. '=model' → logprob: -17.87502098083496
    10. ':model' → logprob: -17.87502098083496

Token 485: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -1.2664456789934775e-06
    2. 'counts' → logprob: -13.750000953674316
    3. ' .' → logprob: -16.375001907348633
    4. '.' → logprob: -17.125001907348633
    5. 'count' → logprob: -18.000001907348633
    6. '[count' → logprob: -18.250001907348633
    7. '.c' → logprob: -19.500001907348633
    8. ' counts' → logprob: -19.500001907348633
    9. '.cost' → logprob: -19.625001907348633
    10. ').' → logprob: -20.125001907348633

Token 486: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. 'counts' → logprob: -17.25
    3. 'ts' → logprob: -17.875
    4. '[s' → logprob: -19.625
    5. 'ss' → logprob: -20.0
    6. '       ' → logprob: -20.125
    7. '   ' → logprob: -20.125
    8. '[' → logprob: -20.25
    9. '           ' → logprob: -21.25
    10. 'st' → logprob: -21.625

Token 487: '_for' (ID: 11903)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002820736262947321
    2. '_for' → logprob: -8.250282287597656
    3. 'For' → logprob: -11.500282287597656
    4. 'for' → logprob: -11.625282287597656
    5. '[self' → logprob: -14.500282287597656
    6. '   ' → logprob: -15.125282287597656
    7. ' [' → logprob: -15.750282287597656
    8. '       ' → logprob: -16.375282287597656
    9. '[
' → logprob: -16.375282287597656
    10. '[class' → logprob: -16.500282287597656

Token 488: '_fl' (ID: 18192)
  Prédit: '_fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fl' → logprob: -0.005936859175562859
    2. 'fl' → logprob: -5.130936622619629
    3. '(fl' → logprob: -12.255936622619629
    4. 'Flavor' → logprob: -14.130936622619629
    5. 'avor' → logprob: -14.255936622619629
    6. ' flavor' → logprob: -14.630936622619629
    7. 'l' → logprob: -14.880936622619629
    8. '	fl' → logprob: -15.255936622619629
    9. 'f' → logprob: -15.630936622619629
    10. 'a' → logprob: -16.005937576293945

Token 489: 'avor' (ID: 3633)
  Prédit: 'avor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avor' → logprob: -2.3199920178740285e-05
    2. 'vor' → logprob: -11.500022888183594
    3. 'AVOR' → logprob: -12.625022888183594
    4. 'avorite' → logprob: -13.500022888183594
    5. 'av' → logprob: -13.625022888183594
    6. 'avior' → logprob: -13.750022888183594
    7. '{' → logprob: -14.250022888183594
    8. '(' → logprob: -14.250022888183594
    9. 'fl' → logprob: -14.500022888183594
    10. '[' → logprob: -14.750022888183594

Token 490: '(fl' (ID: 109915)
  Prédit: '(fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fl' → logprob: -1.3856492842023727e-06
    2. '(f' → logprob: -14.125000953674316
    3. '(' → logprob: -14.625000953674316
    4. 'fl' → logprob: -16.250001907348633
    5. '(fe' → logprob: -17.250001907348633
    6. ' (' → logprob: -18.375001907348633
    7. '(food' → logprob: -19.000001907348633
    8. '((' → logprob: -19.125001907348633
    9. '(fr' → logprob: -19.250001907348633
    10. '(
' → logprob: -19.750001907348633

Token 491: 'avor' (ID: 3633)
  Prédit: 'avor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avor' → logprob: -1.4855663721391466e-05
    2. 'AVOR' → logprob: -12.375015258789062
    3. 'av' → logprob: -12.500015258789062
    4. 'vor' → logprob: -12.750015258789062
    5. 'avour' → logprob: -14.000015258789062
    6. 'avored' → logprob: -15.000015258789062
    7. 'a' → logprob: -15.250015258789062
    8. '[' → logprob: -15.375015258789062
    9. 'avior' → logprob: -15.375015258789062
    10. '{' → logprob: -15.625015258789062

Token 492: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31430622935295105
    2. ')' → logprob: -1.3143062591552734
    3. '           ' → logprob: -7.564306259155273
    4. '       ' → logprob: -8.564306259155273
    5. ' )
' → logprob: -9.064306259155273
    6. '())
' → logprob: -9.189306259155273
    7. ')
' → logprob: -10.314306259155273
    8. '()
' → logprob: -10.439306259155273
    9. '()' → logprob: -10.689306259155273
    10. ' )' → logprob: -11.689306259155273

Token 493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006582272471860051
    2. ' lines' → logprob: -7.37565803527832
    3. ' line' → logprob: -10.87565803527832
    4. 'lines' → logprob: -12.12565803527832
    5. ' if' → logprob: -12.62565803527832
    6. 'line' → logprob: -14.12565803527832
    7. '#line' → logprob: -14.50065803527832
    8. '            
' → logprob: -14.75065803527832
    9. 's' → logprob: -15.00065803527832
    10. '```' → logprob: -15.00065803527832

Token 494: ' if' (ID: 538)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.17930647730827332
    2. 'lines' → logprob: -2.5543065071105957
    3. ' line' → logprob: -3.0543065071105957
    4. ' if' → logprob: -4.179306507110596
    5. 'line' → logprob: -4.554306507110596
    6. 'if' (adapté à ' if') → logprob: -4.804306507110596
    7. '           ' → logprob: -5.804306507110596
    8. ' stars' → logprob: -6.929306507110596
    9. '       ' → logprob: -7.554306507110596
    10. 'stars' → logprob: -8.304306030273438

Token 495: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17978297173976898
    2. ' c' → logprob: -1.8047829866409302
    3. '           ' → logprob: -11.30478286743164
    4. '   ' → logprob: -12.05478286743164
    5. '	c' → logprob: -12.80478286743164
    6. '       ' → logprob: -13.42978286743164
    7. ' ' → logprob: -13.49228286743164
    8. 'not' → logprob: -13.55478286743164
    9. '0' → logprob: -13.67978286743164
    10. '               ' → logprob: -13.86728286743164

Token 496: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2099302113056183
    2. '>' → logprob: -2.334930181503296
    3. ' ==' → logprob: -2.459930181503296
    4. '==' → logprob: -4.959930419921875
    5. ':' → logprob: -10.334930419921875
    6. ' !=' → logprob: -11.084930419921875
    7. '   ' → logprob: -11.709930419921875
    8. '0' → logprob: -11.834930419921875
    9. ' ' → logprob: -12.334930419921875
    10. 's' → logprob: -12.897430419921875

Token 497: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002805821830406785
    2. ' ' → logprob: -5.877805709838867
    3. '1' → logprob: -14.252805709838867
    4. '   ' → logprob: -15.502805709838867
    5. '  ' → logprob: -16.752805709838867
    6. '>' → logprob: -17.565305709838867
    7. '00' → logprob: -18.627805709838867
    8. '```' → logprob: -18.627805709838867
    9. ' ' → logprob: -18.690305709838867
    10. '10' → logprob: -18.815305709838867

Token 498: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021622790955007076
    2. ' ' → logprob: -6.252162456512451
    3. '1' → logprob: -8.377161979675293
    4. '   ' → logprob: -13.189661979675293
    5. '10' → logprob: -15.439661979675293
    6. '  ' → logprob: -15.814661979675293
    7. '100' → logprob: -16.00216293334961
    8. '>' → logprob: -16.18966293334961
    9. '9' → logprob: -16.25216293334961
    10. '00' → logprob: -16.37716293334961

Token 499: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23876896500587463
    2. ':' → logprob: -1.6137689352035522
    3. '               ' → logprob: -4.613769054412842
    4. '           ' → logprob: -5.738769054412842
    5. ':
' → logprob: -9.988768577575684
    6. 'continue' → logprob: -10.988768577575684
    7. ' continue' → logprob: -11.113768577575684
    8. '       ' → logprob: -11.113768577575684
    9. '):
' → logprob: -11.613768577575684
    10. ':return' → logprob: -11.863768577575684

Token 500: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018698560306802392
    2. ' continue' → logprob: -6.7518696784973145
    3. '           ' → logprob: -7.6268696784973145
    4. ' lines' → logprob: -9.001870155334473
    5. 'continue' → logprob: -9.626870155334473
    6. '```' → logprob: -12.501870155334473
    7. '                   ' → logprob: -13.001870155334473
    8. '	           ' → logprob: -13.251870155334473
    9. ' continues' → logprob: -13.376870155334473
    10. '              ' → logprob: -13.376870155334473

Token 501: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.21166400611400604
    2. 'lines' (adapté à ' lines') → logprob: -1.9616639614105225
    3. ' continue' → logprob: -3.8366639614105225
    4. '           ' → logprob: -4.086664199829102
    5. '               ' → logprob: -5.336664199829102
    6. 'continue' → logprob: -5.586664199829102
    7. 'line' → logprob: -7.086664199829102
    8. ' line' → logprob: -7.086664199829102
    9. '                   ' → logprob: -7.836664199829102
    10. ' break' → logprob: -7.961664199829102

Token 502: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000915039679966867
    2. '.' → logprob: -7.000915050506592
    3. '.extend' → logprob: -13.250914573669434
    4. ' .' → logprob: -13.875914573669434
    5. '.app' → logprob: -14.750914573669434
    6. '.ap' → logprob: -15.750914573669434
    7. 'append' → logprob: -16.00091552734375
    8. '.push' → logprob: -17.25091552734375
    9. '.=' → logprob: -18.12591552734375
    10. '.insert' → logprob: -18.37591552734375

Token 503: '("-' (ID: 27133)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -1.181809425354004
    2. '''' → logprob: -1.431809425354004
    3. 'f' → logprob: -1.556809425354004
    4. '"' → logprob: -2.431809425354004
    5. '(f' → logprob: -2.931809425354004
    6. ''' → logprob: -3.306809425354004
    7. ''.' → logprob: -4.306809425354004
    8. '("")' → logprob: -4.431809425354004
    9. '".' → logprob: -4.556809425354004
    10. '"."' → logprob: -4.931809425354004

Token 504: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2846064269542694
    2. '")
' → logprob: -1.4096064567565918
    3. '-' → logprob: -6.159606456756592
    4. ' ")
' → logprob: -7.784606456756592
    5. ' ")' → logprob: -8.159605979919434
    6. '"' → logprob: -8.534605979919434
    7. '")
' → logprob: -9.159605979919434
    8. '\n' → logprob: -9.284605979919434
    9. '")

' → logprob: -10.284605979919434
    10. '0' → logprob: -10.284605979919434

Token 505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01544282492250204
    2. 'else' → logprob: -4.890442848205566
    3. ' else' → logprob: -4.890442848205566
    4. ' elif' → logprob: -9.765442848205566
    5. 'elif' → logprob: -9.890442848205566
    6. '+' → logprob: -10.015442848205566
    7. '.' → logprob: -10.640442848205566
    8. '*' → logprob: -11.140442848205566
    9. '	       ' → logprob: -11.140442848205566
    10. '               ' → logprob: -11.765442848205566

Token 506: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09774558246135712
    2. 'else' (adapté à ' else') → logprob: -2.722745656967163
    3. ' else' → logprob: -3.597745656967163
    4. '	       ' → logprob: -11.722745895385742
    5. '       ' → logprob: -11.847745895385742
    6. 'elif' → logprob: -12.097745895385742
    7. '		' → logprob: -12.472745895385742
    8. ' elif' → logprob: -12.472745895385742
    9. '          ' → logprob: -13.222745895385742
    10. '   ' → logprob: -13.222745895385742

Token 507: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2000182718038559
    2. '           ' → logprob: -2.2000181674957275
    3. ':
' → logprob: -2.9500181674957275
    4. ':' → logprob: -4.200018405914307
    5. ' lines' → logprob: -6.200018405914307
    6. ',' → logprob: -8.325017929077148
    7. ' :
' → logprob: -8.575017929077148
    8. '(lines' → logprob: -9.200017929077148
    9. '[' → logprob: -9.575017929077148
    10. '                   ' → logprob: -9.825017929077148

Token 508: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46532535552978516
    2. ' lines' → logprob: -1.2153253555297852
    3. 'lines' → logprob: -2.715325355529785
    4. '"' → logprob: -5.090325355529785
    5. '"*' → logprob: -7.090325355529785
    6. ' "*"' → logprob: -7.215325355529785
    7. ' '*'' → logprob: -8.715325355529785
    8. ' "' → logprob: -8.840325355529785
    9. ''*' → logprob: -8.965325355529785
    10. ''' → logprob: -9.090325355529785

Token 509: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.2384275197982788
    2. '"' → logprob: -2.3634276390075684
    3. ' lines' → logprob: -2.8634276390075684
    4. '"#' → logprob: -3.3634276390075684
    5. '"*' → logprob: -4.363427639007568
    6. ''*' → logprob: -5.113427639007568
    7. '"+"' → logprob: -6.238427639007568
    8. ''' → logprob: -6.738427639007568
    9. ' "#"' → logprob: -6.738427639007568
    10. ' "*"' → logprob: -7.613427639007568

Token 510: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007686520111747086
    2. '.' → logprob: -7.375768661499023
    3. '.extend' → logprob: -9.375768661499023
    4. ' .' → logprob: -10.625768661499023
    5. ':' → logprob: -11.125768661499023
    6. '   ' → logprob: -12.375768661499023
    7. '           ' → logprob: -12.375768661499023
    8. 'append' → logprob: -12.750768661499023
    9. '_lines' → logprob: -13.000768661499023
    10. 'lines' → logprob: -13.250768661499023

Token 511: '("*' (ID: 59145)
  Prédit: '("*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("*' → logprob: -0.9541584849357605
    2. '("#' → logprob: -1.4541585445404053
    3. '"#' → logprob: -2.2041585445404053
    4. '"' → logprob: -2.4541585445404053
    5. '('*' → logprob: -3.2041585445404053
    6. '"*' → logprob: -3.4541585445404053
    7. '("="' → logprob: -3.7041585445404053
    8. '("' → logprob: -3.7041585445404053
    9. ''*' → logprob: -3.8291585445404053
    10. '('#' → logprob: -4.204158306121826

Token 512: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00375768612138927
    2. '"*' → logprob: -6.878757476806641
    3. '*' → logprob: -7.003757476806641
    4. ' *' → logprob: -7.503757476806641
    5. ' c' → logprob: -7.753757476806641
    6. '*c' → logprob: -8.00375747680664
    7. ''' → logprob: -8.37875747680664
    8. 'c' → logprob: -8.87875747680664
    9. ')' → logprob: -10.12875747680664
    10. ' "' → logprob: -10.50375747680664

Token 513: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6758360862731934
    2. '*c' → logprob: -0.8008360862731934
    3. '*' → logprob: -3.6758360862731934
    4. '"' → logprob: -4.175836086273193
    5. ' c' → logprob: -7.300836086273193
    6. ')' → logprob: -8.300836563110352
    7. 'c' → logprob: -8.550836563110352
    8. '"*' → logprob: -8.800836563110352
    9. '   ' → logprob: -9.550836563110352
    10. ' ' → logprob: -9.800836563110352

Token 514: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.15310683415737e-05
    2. ' c' → logprob: -10.750021934509277
    3. '(c' → logprob: -19.37502098083496
    4. ')c' → logprob: -20.50002098083496
    5. '	c' → logprob: -23.12502098083496
    6. '           ' → logprob: -23.62502098083496
    7. '   ' → logprob: -23.62502098083496
    8. '       ' → logprob: -23.87502098083496
    9. 'count' → logprob: -24.50002098083496
    10. '$c' → logprob: -24.75002098083496

Token 515: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008358351769857109
    2. ')
' → logprob: -7.12583589553833
    3. '       ' → logprob: -10.500835418701172
    4. ' )' → logprob: -13.375835418701172
    5. ')return' → logprob: -13.625835418701172
    6. '")' → logprob: -15.125835418701172
    7. '           ' → logprob: -15.375835418701172
    8. ')
' → logprob: -15.500835418701172
    9. '),' → logprob: -16.750835418701172
    10. ')

' → logprob: -16.875835418701172

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007609111489728093
    2. 'return' → logprob: -7.250761032104492
    3. ' return' → logprob: -10.625761032104492
    4. '   ' → logprob: -10.750761032104492
    5. '           ' → logprob: -12.625761032104492
    6. '
' → logprob: -14.000761032104492
    7. '	return' → logprob: -15.000761032104492
    8. '	' → logprob: -15.250761032104492
    9. '```' → logprob: -15.250761032104492
    10. ' ' → logprob: -16.125761032104492

Token 517: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00418168306350708
    2. 'return' (adapté à ' return') → logprob: -5.504181861877441
    3. ' return' → logprob: -9.379181861877441
    4. '   ' → logprob: -11.004181861877441
    5. '	return' → logprob: -13.504181861877441
    6. '           ' → logprob: -14.504181861877441
    7. '
' → logprob: -16.504180908203125
    8. '	' → logprob: -16.504180908203125
    9. '      ' → logprob: -16.754180908203125
    10. '```' → logprob: -17.004180908203125

Token 518: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0009114635176956654
    2. ' lines' → logprob: -7.000911235809326
    3. 'line' → logprob: -17.125911712646484
    4. '	lines' → logprob: -17.500911712646484
    5. '(lines' → logprob: -17.875911712646484
    6. 'lin' → logprob: -20.750911712646484
    7. '```' → logprob: -21.000911712646484
    8. '.lines' → logprob: -21.250911712646484
    9. '   ' → logprob: -21.500911712646484
    10. 'layers' → logprob: -21.500911712646484

Token 519: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20221953094005585
    2. 'class' → logprob: -2.2022194862365723
    3. 'if' → logprob: -3.3272194862365723
    4. '<|end|>' → logprob: -3.3272194862365723
    5. '```' → logprob: -7.952219486236572
    6. '
' → logprob: -8.82721996307373
    7. '#' → logprob: -9.07721996307373
    8. 'from' → logprob: -10.20221996307373
    9. '   ' → logprob: -10.20221996307373
    10. '<|end|>' → logprob: -11.82721996307373

Token 520: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11361800879240036
    2. 'class' → logprob: -2.3636178970336914
    3. 'if' → logprob: -4.488617897033691
    4. '```' → logprob: -6.738617897033691
    5. '#' → logprob: -7.363617897033691
    6. '<|end|>' → logprob: -8.488617897033691
    7. 'import' → logprob: -10.488617897033691
    8. 'from' → logprob: -10.988617897033691
    9. 'for' → logprob: -11.238617897033691
    10. '<|end|>' → logprob: -14.113617897033691

Token 521: ' Histogram' (ID: 189950)
  Prédit: 'Histogram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Histogram' → logprob: -0.08058954030275345
    2. ' Histogram' → logprob: -3.830589532852173
    3. 'Solution' → logprob: -4.080589771270752
    4. 'Result' → logprob: -4.955589771270752
    5. 'Output' → logprob: -5.330589771270752
    6. 'Main' → logprob: -5.580589771270752
    7. 'Runner' → logprob: -5.705589771270752
    8. 'Report' → logprob: -5.705589771270752
    9. 'Controller' → logprob: -6.205589771270752
    10. 'Printer' → logprob: -6.205589771270752

Token 522: 'Controller' (ID: 2947)
  Prédit: 'Controller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Controller' → logprob: -0.21230357885360718
    2. 'Presenter' → logprob: -1.712303638458252
    3. 'Printer' → logprob: -4.712303638458252
    4. 'App' → logprob: -7.337303638458252
    5. 'Runner' → logprob: -7.712303638458252
    6. 'Builder' → logprob: -8.837303161621094
    7. 'Processor' → logprob: -9.337303161621094
    8. 'Renderer' → logprob: -9.712303161621094
    9. ':' → logprob: -9.837303161621094
    10. 'Manager' → logprob: -10.587303161621094

Token 523: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031944699585437775
    2. ':
' → logprob: -5.753194332122803
    3. '(H' → logprob: -11.628194808959961
    4. ' :' → logprob: -12.753194808959961
    5. ':def' → logprob: -13.503194808959961
    6. ':H' → logprob: -13.878194808959961
    7. '(' → logprob: -14.003194808959961
    8. ':

' → logprob: -14.128194808959961
    9. '```' → logprob: -15.628194808959961
    10. ':**' → logprob: -15.878194808959961

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001641738461330533
    2. 'def' → logprob: -6.501641750335693
    3. ' def' → logprob: -9.251641273498535
    4. ':' → logprob: -10.251641273498535
    5. ':
' → logprob: -12.751641273498535
    6. 'class' → logprob: -13.001641273498535
    7. ':def' → logprob: -14.001641273498535
    8. ')' → logprob: -14.126641273498535
    9. '	def' → logprob: -14.876641273498535
    10. '```' → logprob: -15.001641273498535

Token 525: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.30043262243270874
    2. ' def' → logprob: -1.5504326820373535
    3. '   ' → logprob: -3.0504326820373535
    4. 'class' → logprob: -11.925432205200195
    5. '	def' → logprob: -14.175432205200195
    6. 'from' → logprob: -16.175432205200195
    7. '```' → logprob: -16.425432205200195
    8. '__' → logprob: -17.550432205200195
    9. ':def' → logprob: -17.675432205200195
    10. '
' → logprob: -18.050432205200195

Token 526: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1384771764278412
    2. ' def' → logprob: -2.138477087020874
    3. 'def' → logprob: -4.763477325439453
    4. '__' → logprob: -5.888477325439453
    5. 'init' → logprob: -9.138477325439453
    6. '_init' → logprob: -10.263477325439453
    7. ' init' → logprob: -10.638477325439453
    8. ' ' → logprob: -13.263477325439453
    9. '```' → logprob: -13.388477325439453
    10. ' _' → logprob: -13.638477325439453

Token 527: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'def' → logprob: -15.125
    3. ' init' → logprob: -18.125
    4. '```' → logprob: -18.75
    5. '_init' → logprob: -19.25
    6. '(init' → logprob: -19.375
    7. '	init' → logprob: -20.0
    8. 'new' → logprob: -20.0
    9. '.init' → logprob: -20.0
    10. '   ' → logprob: -20.25

Token 528: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -3.869639476761222e-05
    2. '(self' → logprob: -10.375039100646973
    3. '__' → logprob: -12.250039100646973
    4. '_(' → logprob: -13.375039100646973
    5. '__(
' → logprob: -13.750039100646973
    6. 'self' → logprob: -17.875038146972656
    7. '__((' → logprob: -18.500038146972656
    8. '   ' → logprob: -18.625038146972656
    9. '__('' → logprob: -18.875038146972656
    10. '<>(' → logprob: -19.250038146972656

Token 529: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.4849443838757e-06
    2. ' self' → logprob: -12.875004768371582
    3. ')' → logprob: -13.375004768371582
    4. '(self' → logprob: -15.625004768371582
    5. '       ' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '
' → logprob: -17.250003814697266
    8. '):
' → logprob: -17.875003814697266
    9. ',' → logprob: -18.250003814697266
    10. '	self' → logprob: -19.875003814697266

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0096211489289999
    2. 'self' → logprob: -4.7596211433410645
    3. '(self' → logprob: -7.0096211433410645
    4. '       ' → logprob: -10.009621620178223
    5. ',self' → logprob: -10.759621620178223
    6. ' ,' → logprob: -11.259621620178223
    7. ' self' → logprob: -11.634621620178223
    8. '   ' → logprob: -11.884621620178223
    9. ' (' → logprob: -12.634621620178223
    10. '__(' → logprob: -12.884621620178223

Token 531: ' data' (ID: 1238)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'model' → logprob: -0.3470230996608734
    2. 'parser' → logprob: -1.7220231294631958
    3. 'source' → logprob: -2.8470230102539062
    4. 'view' → logprob: -3.7220230102539062
    5. ' parser' → logprob: -4.222023010253906
    6. ' model' → logprob: -4.472023010253906
    7. 'dataset' → logprob: -5.597023010253906
    8. ' source' → logprob: -7.097023010253906
    9. 'data' → logprob: -7.347023010253906
    10. ' view' → logprob: -8.222023010253906

Token 532: '_iter' (ID: 27043)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16892509162425995
    2. '_set' → logprob: -2.9189250469207764
    3. '_source' → logprob: -3.1689250469207764
    4. '_sets' → logprob: -4.1689252853393555
    5. 'source' → logprob: -4.6689252853393555
    6. '):' → logprob: -4.9189252853393555
    7. '   ' → logprob: -4.9189252853393555
    8. '):
' → logprob: -5.4189252853393555
    9. 's' → logprob: -5.6689252853393555
    10. '_sources' → logprob: -5.7939252853393555

Token 533: ':' (ID: 25)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.10034134984016418
    2. ':' → logprob: -2.350341320037842
    3. 'able' → logprob: -9.100341796875
    4. 'ATOR' → logprob: -11.350341796875
    5. '   ' → logprob: -12.600341796875
    6. '):
' → logprob: -13.225341796875
    7. '=' → logprob: -13.600341796875
    8. '```' → logprob: -13.725341796875
    9. '):' → logprob: -14.350341796875
    10. 'er' → logprob: -14.350341796875

Token 534: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.00012773419439326972
    2. ' Iterator' → logprob: -9.500127792358398
    3. '   ' → logprob: -10.500127792358398
    4. 'Data' → logprob: -11.125127792358398
    5. '	Iterator' → logprob: -12.000127792358398
    6. 'Iterable' → logprob: -12.875127792358398
    7. 'iterator' → logprob: -14.625127792358398
    8. ' ' → logprob: -14.750127792358398
    9. ')' → logprob: -15.000127792358398
    10. '  ' → logprob: -15.250127792358398

Token 535: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -9.088346359931165e-07
    2. '[list' → logprob: -14.500000953674316
    3. '[' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.875
    5. 'List' → logprob: -17.125
    6. ')' → logprob: -17.25
    7. '[[' → logprob: -17.5
    8. '<List' → logprob: -18.625
    9. ',List' → logprob: -18.625
    10. '):
' → logprob: -18.875

Token 536: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.704273118884885e-07
    2. 'int' → logprob: -14.375000953674316
    3. '[List' → logprob: -17.25
    4. '[' → logprob: -20.875
    5. '   ' → logprob: -20.875
    6. '[Int' → logprob: -21.25
    7. '<int' → logprob: -21.25
    8. '```' → logprob: -22.125
    9. '
' → logprob: -22.625
    10. ' int' → logprob: -23.5

Token 537: ']]' (ID: 8928)
  Prédit: ']):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.03376983106136322
    2. ']):' → logprob: -3.9087698459625244
    3. ']]' → logprob: -4.658769607543945
    4. ']' → logprob: -5.908769607543945
    5. '])' → logprob: -7.158769607543945
    6. '[' → logprob: -9.033769607543945
    7. ' ]' → logprob: -11.158769607543945
    8. ')]' → logprob: -11.908769607543945
    9. ']]:
' → logprob: -11.908769607543945
    10. ']])' → logprob: -12.533769607543945

Token 538: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002070087008178234
    2. '):' → logprob: -6.25206995010376
    3. '):
' → logprob: -9.002070426940918
    4. ')' → logprob: -11.127070426940918
    5. '   ' → logprob: -13.127070426940918
    6. '       ' → logprob: -13.752070426940918
    7. ' ):
' → logprob: -14.752070426940918
    8. ':' → logprob: -16.6270694732666
    9. '):

' → logprob: -17.1270694732666
    10. ':
' → logprob: -17.3770694732666

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012523733312264085
    2. '   ' → logprob: -6.751252174377441
    3. 'self' → logprob: -9.876252174377441
    4. 'def' → logprob: -11.126252174377441
    5. ' self' → logprob: -12.126252174377441
    6. ':' → logprob: -13.001252174377441
    7. '):
' → logprob: -13.626252174377441
    8. ',' → logprob: -13.626252174377441
    9. '```' → logprob: -13.751252174377441
    10. ')' → logprob: -13.876252174377441

Token 540: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005600620643235743
    2. '       ' → logprob: -7.500560283660889
    3. ' self' → logprob: -11.87555980682373
    4. '	self' → logprob: -16.500560760498047
    5. '   ' → logprob: -17.000560760498047
    6. '(self' → logprob: -18.375560760498047
    7. 'def' → logprob: -19.375560760498047
    8. 'for' → logprob: -19.875560760498047
    9. '[self' → logprob: -19.875560760498047
    10. 'import' → logprob: -20.125560760498047

Token 541: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.003233328927308321
    2. '.' → logprob: -6.003233432769775
    3. '._' → logprob: -7.253233432769775
    4. ' .' → logprob: -10.628232955932617
    5. '   ' → logprob: -11.503232955932617
    6. 'data' → logprob: -11.503232955932617
    7. '       ' → logprob: -14.378232955932617
    8. '.dat' → logprob: -14.378232955932617
    9. '.datas' → logprob: -14.503232955932617
    10. '.source' → logprob: -14.878232955932617

Token 542: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.03849652037024498
    2. '_iterator' → logprob: -3.288496494293213
    3. '=' → logprob: -8.038496971130371
    4. '   ' → logprob: -10.163496971130371
    5. ' =' → logprob: -10.163496971130371
    6. 's' → logprob: -11.038496971130371
    7. '=_' → logprob: -11.163496971130371
    8. '_it' → logprob: -11.788496971130371
    9. '_source' → logprob: -12.538496971130371
    10. '       ' → logprob: -12.788496971130371

Token 543: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694720923900604
    2. ' =' → logprob: -2.1269471645355225
    3. '   ' → logprob: -11.501947402954102
    4. '       ' → logprob: -12.001947402954102
    5. '=self' → logprob: -13.251947402954102
    6. '=data' → logprob: -14.876947402954102
    7. 'import' → logprob: -15.626947402954102
    8. '=
' → logprob: -15.876947402954102
    9. ' ' → logprob: -16.1269474029541
    10. 'er' → logprob: -16.5019474029541

Token 544: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.00014001218369230628
    2. ' data' → logprob: -8.875140190124512
    3. 'iter' → logprob: -17.250139236450195
    4. 'dat' → logprob: -17.500139236450195
    5. '   ' → logprob: -18.500139236450195
    6. '	data' → logprob: -18.625139236450195
    7. 'Data' → logprob: -19.000139236450195
    8. '(data' → logprob: -19.750139236450195
    9. '
' → logprob: -20.125139236450195
    10. 'self' → logprob: -20.500139236450195

Token 545: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.0001249925117008388
    2. 'iter' → logprob: -9.00012493133545
    3. 'Iter' → logprob: -14.12512493133545
    4. '_iterator' → logprob: -15.12512493133545
    5. '       ' → logprob: -16.500125885009766
    6. '   ' → logprob: -16.500125885009766
    7. 'itor' → logprob: -16.875125885009766
    8. '
' → logprob: -17.000125885009766
    9. 'import' → logprob: -17.000125885009766
    10. 'iterator' → logprob: -17.250125885009766

Token 546: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016181817278265953
    2. '
' → logprob: -4.141181945800781
    3. 'def' → logprob: -9.141181945800781
    4. '    
' → logprob: -10.641181945800781
    5. '<|end|>' → logprob: -11.641181945800781
    6. ' def' → logprob: -13.016181945800781
    7. '```' → logprob: -13.391181945800781
    8. '<|end|>' → logprob: -14.016181945800781
    9. '        
' → logprob: -14.266181945800781
    10. '
' → logprob: -15.016181945800781

Token 547: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06234106048941612
    2. '   ' → logprob: -2.8123409748077393
    3. ' def' → logprob: -7.937341213226318
    4. '
' → logprob: -11.06234073638916
    5. '	def' → logprob: -15.18734073638916
    6. '    
' → logprob: -16.437341690063477
    7. '```' → logprob: -17.187341690063477
    8. 'from' → logprob: -17.562341690063477
    9. ' ' → logprob: -17.562341690063477
    10. 'import' → logprob: -17.812341690063477

Token 548: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.339278580620885e-06
    2. ' def' → logprob: -13.125001907348633
    3. '   ' → logprob: -15.250001907348633
    4. 'from' → logprob: -18.125001907348633
    5. '
' → logprob: -18.625001907348633
    6. 'import' → logprob: -19.750001907348633
    7. 'de' → logprob: -20.125001907348633
    8. 'class' → logprob: -20.625001907348633
    9. '	def' → logprob: -21.375001907348633
    10. 'd' → logprob: -22.125001907348633

Token 549: ' process' (ID: 2273)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.10025055706501007
    2. ' run' → logprob: -2.350250482559204
    3. 'process' → logprob: -10.100250244140625
    4. 'def' → logprob: -13.725250244140625
    5. ' process' → logprob: -14.475250244140625
    6. 'execute' → logprob: -14.600250244140625
    7. 'render' → logprob: -15.100250244140625
    8. 'handle' → logprob: -15.975250244140625
    9. 'start' → logprob: -16.100250244140625
    10. 'main' → logprob: -17.100250244140625

Token 550: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016485184896737337
    2. '()' → logprob: -7.126648426055908
    3. '(' → logprob: -7.251648426055908
    4. '()(' → logprob: -9.126648902893066
    5. '_data' → logprob: -12.001648902893066
    6. ' (' → logprob: -12.251648902893066
    7. '():' → logprob: -12.751648902893066
    8. '```' → logprob: -13.251648902893066
    9. '_all' → logprob: -13.376648902893066
    10. '(s' → logprob: -13.501648902893066

Token 551: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8624639324116288e-06
    2. '   ' → logprob: -14.125001907348633
    3. ' (' → logprob: -14.750001907348633
    4. '(' → logprob: -15.000001907348633
    5. 'self' → logprob: -15.250001907348633
    6. 'data' → logprob: -16.500001907348633
    7. '():
' → logprob: -16.875001907348633
    8. '       ' → logprob: -17.000001907348633
    9. '_lines' → logprob: -17.500001907348633
    10. '_data' → logprob: -17.500001907348633

Token 552: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0536014698445797
    2. '):' → logprob: -3.1786015033721924
    3. '):
' → logprob: -4.678601264953613
    4. '):
' → logprob: -7.053601264953613
    5. 'self' → logprob: -8.428601264953613
    6. '   ' → logprob: -10.053601264953613
    7. ')->' → logprob: -10.428601264953613
    8. ' )' → logprob: -10.553601264953613
    9. '       ' → logprob: -10.803601264953613
    10. ')_' → logprob: -11.053601264953613

Token 553: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014647466596215963
    2. ' ->' → logprob: -6.75146484375
    3. '(' → logprob: -9.00146484375
    4. '->' → logprob: -9.75146484375
    5. ':' → logprob: -10.00146484375
    6. '       ' → logprob: -10.50146484375
    7. 'self' → logprob: -11.37646484375
    8. '   ' → logprob: -12.00146484375
    9. '()' → logprob: -12.12646484375
    10. '():' → logprob: -12.37646484375

Token 554: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.36493268609046936
    2. 'List' → logprob: -1.239932656288147
    3. ' None' → logprob: -4.239932537078857
    4. ' List' → logprob: -6.364932537078857
    5. '   ' → logprob: -9.239933013916016
    6. 'Iterator' → logprob: -9.364933013916016
    7. 'str' → logprob: -11.364933013916016
    8. 'list' → logprob: -11.864933013916016
    9. '[List' → logprob: -11.989933013916016
    10. 'int' → logprob: -12.114933013916016

Token 555: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5513437986373901
    2. '       ' → logprob: -1.3013437986373901
    3. ':
' → logprob: -1.9263437986373901
    4. '   ' → logprob: -5.67634391784668
    5. '(self' → logprob: -6.17634391784668
    6. '():
' → logprob: -9.17634391784668
    7. '():' → logprob: -9.30134391784668
    8. '):
' → logprob: -9.30134391784668
    9. '):' → logprob: -10.55134391784668
    10. 'self' → logprob: -10.80134391784668

Token 556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.029847231227905e-05
    2. ' for' → logprob: -9.500080108642578
    3. 'for' → logprob: -12.750080108642578
    4. '   ' → logprob: -13.000080108642578
    5. '```' → logprob: -15.875080108642578
    6. '      ' → logprob: -16.875080108642578
    7. ' ' → logprob: -17.000080108642578
    8. '           ' → logprob: -17.375080108642578
    9. '    ' → logprob: -18.625080108642578
    10. ' while' → logprob: -19.375080108642578

Token 557: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02350122109055519
    2. '       ' → logprob: -3.77350115776062
    3. ' for' → logprob: -8.2735013961792
    4. '   ' → logprob: -15.0235013961792
    5. 'try' → logprob: -16.148500442504883
    6. 'import' → logprob: -17.023500442504883
    7. 'from' → logprob: -17.273500442504883
    8. '```' → logprob: -17.898500442504883
    9. '	for' → logprob: -18.398500442504883
    10. '           ' → logprob: -19.023500442504883

Token 558: ' sales' (ID: 7155)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.2289402335882187
    2. 'sales' → logprob: -1.6039402484893799
    3. ' data' → logprob: -6.353940010070801
    4. ' sales' → logprob: -6.728940010070801
    5. 'dataset' → logprob: -7.978940010070801
    6. '   ' → logprob: -9.3539400100708
    7. 'sale' → logprob: -9.6039400100708
    8. ' ' → logprob: -11.1039400100708
    9. '  ' → logprob: -11.3539400100708
    10. 'samples' → logprob: -11.6039400100708

Token 559: '_data' (ID: 3537)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4742072820663452
    2. 'in' → logprob: -0.9742072820663452
    3. 'data' → logprob: -9.599206924438477
    4. '       ' → logprob: -10.224206924438477
    5. '   ' → logprob: -11.474206924438477
    6. '```' → logprob: -12.849206924438477
    7. 's' → logprob: -12.974206924438477
    8. '	in' → logprob: -13.224206924438477
    9. ' ' → logprob: -13.599206924438477
    10. '_in' → logprob: -13.849206924438477

Token 560: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023248974233865738
    2. 'in' → logprob: -3.7732489109039307
    3. '       ' → logprob: -13.398248672485352
    4. '   ' → logprob: -14.898248672485352
    5. 's' → logprob: -15.148248672485352
    6. '           ' → logprob: -15.273248672485352
    7. '_in' → logprob: -15.398248672485352
    8. '        ' → logprob: -15.773248672485352
    9. '	in' → logprob: -15.773248672485352
    10. 'import' → logprob: -15.898248672485352

Token 561: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020752996206284
    2. ' self' → logprob: -2.350207567214966
    3. '       ' → logprob: -14.100207328796387
    4. '(self' → logprob: -17.100208282470703
    5. '	self' → logprob: -17.350208282470703
    6. '           ' → logprob: -17.600208282470703
    7. '   ' → logprob: -18.100208282470703
    8. '[self' → logprob: -20.350208282470703
    9. '        ' → logprob: -20.725208282470703
    10. 'this' → logprob: -20.975208282470703

Token 562: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.002022497123107314
    2. 'data' → logprob: -6.2520222663879395
    3. ' data' → logprob: -9.377022743225098
    4. 'self' → logprob: -12.377022743225098
    5. '   ' → logprob: -12.627022743225098
    6. '       ' → logprob: -14.127022743225098
    7. ' .' → logprob: -14.502022743225098
    8. '.' → logprob: -15.627022743225098
    9. 's' → logprob: -16.12702178955078
    10. '	data' → logprob: -16.25202178955078

Token 563: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -1.1398757123970427e-05
    2. 'iter' → logprob: -11.500011444091797
    3. 'er' → logprob: -15.000011444091797
    4. '_it' → logprob: -15.250011444091797
    5. 'Iter' → logprob: -15.375011444091797
    6. 'self' → logprob: -15.625011444091797
    7. 'r' → logprob: -16.500011444091797
    8. '_inter' → logprob: -16.875011444091797
    9. '.iter' → logprob: -17.125011444091797
    10. '_itr' → logprob: -18.125011444091797

Token 564: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22571676969528198
    2. ':' → logprob: -1.6007168292999268
    3. '):
' → logprob: -8.975716590881348
    4. '       ' → logprob: -9.100716590881348
    5. ':
' → logprob: -10.975716590881348
    6. ',' → logprob: -11.225716590881348
    7. '           ' → logprob: -11.600716590881348
    8. '():
' → logprob: -11.850716590881348
    9. ' :
' → logprob: -11.850716590881348
    10. ':

' → logprob: -12.600716590881348

Token 565: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06213371828198433
    2. '       ' → logprob: -2.8121337890625
    3. 'model' → logprob: -9.1871337890625
    4. ' model' → logprob: -10.8121337890625
    5. '```' → logprob: -11.5621337890625
    6. 'hist' → logprob: -12.3121337890625
    7. '               ' → logprob: -12.5621337890625
    8. 'self' → logprob: -12.5621337890625
    9. ' for' → logprob: -12.6871337890625
    10. '   ' → logprob: -12.6871337890625

Token 566: ' model' (ID: 2359)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'model' (adapté à ' model') → logprob: -0.013337760232388973
    2. ' model' → logprob: -4.6383376121521
    3. '           ' → logprob: -5.6383376121521
    4. '               ' → logprob: -11.263338088989258
    5. '   ' → logprob: -13.763338088989258
    6. '	model' → logprob: -14.138338088989258
    7. ' ' → logprob: -14.638338088989258
    8. '```' → logprob: -14.888338088989258
    9. 'hist' → logprob: -15.263338088989258
    10. '            ' → logprob: -15.388338088989258

Token 567: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889056205749512
    2. '=' → logprob: -2.578890562057495
    3. '   ' → logprob: -14.703890800476074
    4. ')' → logprob: -16.203889846801758
    5. ' ' → logprob: -16.328889846801758
    6. '    ' → logprob: -16.828889846801758
    7. '  ' → logprob: -17.078889846801758
    8. ' =
' → logprob: -17.203889846801758
    9. ',' → logprob: -17.328889846801758
    10. '=
' → logprob: -17.828889846801758

Token 568: ' Histogram' (ID: 189950)
  Prédit: 'Histogram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Histogram' → logprob: -0.02979550138115883
    2. ' Histogram' → logprob: -3.5297954082489014
    3. 'Hist' → logprob: -10.02979564666748
    4. ' Hist' → logprob: -14.77979564666748
    5. '	H' → logprob: -15.52979564666748
    6. 'History' → logprob: -15.65479564666748
    7. '   ' → logprob: -16.529794692993164
    8. '_hist' → logprob: -17.029794692993164
    9. 'Historical' → logprob: -17.779794692993164
    10. ' ' → logprob: -17.779794692993164

Token 569: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: 0.0
    2. 'model' → logprob: -17.375
    3. 'View' → logprob: -18.125
    4. '	Model' → logprob: -18.25
    5. '_model' → logprob: -19.25
    6. ' Model' → logprob: -19.625
    7. '.Model' → logprob: -19.875
    8. '```' → logprob: -20.125
    9. 'Controller' → logprob: -20.375
    10. '(Model' → logprob: -20.75

Token 570: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.6537622034084052e-05
    2. '(model' → logprob: -11.25002670288086
    3. '(' → logprob: -11.75002670288086
    4. 'sales' → logprob: -12.25002670288086
    5. 'model' → logprob: -15.50002670288086
    6. '(
' → logprob: -15.50002670288086
    7. ' =' → logprob: -16.37502670288086
    8. 's' → logprob: -16.50002670288086
    9. '=' → logprob: -16.62502670288086
    10. ' (' → logprob: -17.00002670288086

Token 571: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0002980432182084769
    2. 'sales' → logprob: -8.375298500061035
    3. '(s' → logprob: -10.375298500061035
    4. 'ale' → logprob: -11.000298500061035
    5. 's' → logprob: -12.250298500061035
    6. '           ' → logprob: -12.500298500061035
    7. '   ' → logprob: -13.250298500061035
    8. '[' → logprob: -13.500298500061035
    9. '```' → logprob: -13.500298500061035
    10. '_sales' → logprob: -13.875298500061035

Token 572: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.0016775564290583134
    2. '=s' → logprob: -7.626677513122559
    3. 'data' → logprob: -7.626677513122559
    4. '=' → logprob: -7.876677513122559
    5. 'sales' → logprob: -8.251677513122559
    6. '_sales' → logprob: -10.876677513122559
    7. '   ' → logprob: -11.626677513122559
    8. ',' → logprob: -11.626677513122559
    9. 'Data' → logprob: -12.126677513122559
    10. '=data' → logprob: -12.376677513122559

Token 573: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.018334655091166496
    2. ')' → logprob: -4.268334865570068
    3. '           ' → logprob: -5.518334865570068
    4. ')
' → logprob: -8.89333438873291
    5. '       ' → logprob: -11.64333438873291
    6. ' )
' → logprob: -13.51833438873291
    7. ')

' → logprob: -13.89333438873291
    8. '               ' → logprob: -14.26833438873291
    9. '          ' → logprob: -15.14333438873291
    10. '   ' → logprob: -15.39333438873291

Token 574: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02369915135204792
    2. 'view' → logprob: -3.7736990451812744
    3. '       ' → logprob: -8.023698806762695
    4. ' view' → logprob: -9.023698806762695
    5. '               ' → logprob: -13.398698806762695
    6. '   ' → logprob: -13.773698806762695
    7. 'controller' → logprob: -14.648698806762695
    8. '
' → logprob: -14.773698806762695
    9. '          ' → logprob: -15.023698806762695
    10. '		' → logprob: -15.273698806762695

Token 575: ' view' (ID: 2325)
  Prédit: 'view'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'view' (adapté à ' view') → logprob: -6.968934758333489e-05
    2. ' view' → logprob: -9.750069618225098
    3. '           ' → logprob: -11.500069618225098
    4. 'viewer' → logprob: -14.250069618225098
    5. '
' → logprob: -14.750069618225098
    6. '_view' → logprob: -16.875070571899414
    7. 'views' → logprob: -17.125070571899414
    8. 'View' → logprob: -17.750070571899414
    9. 'controller' → logprob: -18.250070571899414
    10. '	view' → logprob: -18.500070571899414

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0789693221449852
    2. '=' → logprob: -2.5789692401885986
    3. '.render' → logprob: -9.45396900177002
    4. '   ' → logprob: -14.45396900177002
    5. ' ' → logprob: -14.95396900177002
    6. '.' → logprob: -16.453969955444336
    7. 'render' → logprob: -16.578969955444336
    8. '	' → logprob: -17.703969955444336
    9. '  ' → logprob: -17.703969955444336
    10. '=view' → logprob: -17.703969955444336

Token 577: ' Histogram' (ID: 189950)
  Prédit: 'Histogram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Histogram' → logprob: -0.00020497082732617855
    2. ' Histogram' → logprob: -8.500205039978027
    3. 'Hist' → logprob: -13.500205039978027
    4. '	H' → logprob: -18.75020408630371
    5. 'History' → logprob: -19.37520408630371
    6. '   ' → logprob: -20.50020408630371
    7. 'HBox' → logprob: -20.87520408630371
    8. ' ' → logprob: -21.12520408630371
    9. '_hist' → logprob: -22.00020408630371
    10. 'Historical' → logprob: -22.25020408630371

Token 578: 'View' (ID: 1097)
  Prédit: 'View'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'View' → logprob: 0.0
    2. '	View' → logprob: -20.125
    3. '_view' → logprob: -20.625
    4. 'view' → logprob: -21.25
    5. 'Model' → logprob: -21.375
    6. '_View' → logprob: -21.5
    7. ' View' → logprob: -22.125
    8. 'Viewer' → logprob: -22.625
    9. '<View' → logprob: -23.0
    10. '.View' → logprob: -23.5

Token 579: '(model' (ID: 15279)
  Prédit: '(model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(model' → logprob: -5.512236498361744e-07
    2. 'model' → logprob: -14.875000953674316
    3. '(view' → logprob: -16.75
    4. '=model' → logprob: -18.0
    5. '(
' → logprob: -18.625
    6. '(' → logprob: -18.75
    7. '           ' → logprob: -19.125
    8. ' (' → logprob: -20.0
    9. '(m' → logprob: -21.125
    10. '       ' → logprob: -21.375

Token 580: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1669580489397049
    2. ')' → logprob: -1.9169580936431885
    3. '           ' → logprob: -5.041957855224609
    4. ')
' → logprob: -8.41695785522461
    5. '       ' → logprob: -11.04195785522461
    6. ')

' → logprob: -12.54195785522461
    7. ' )
' → logprob: -12.79195785522461
    8. '               ' → logprob: -13.41695785522461
    9. ')view' → logprob: -13.79195785522461
    10. '          ' → logprob: -14.04195785522461

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004168745130300522
    2. 'lines' → logprob: -6.129168510437012
    3. '       ' → logprob: -7.254168510437012
    4. ' lines' → logprob: -7.504168510437012
    5. 'for' → logprob: -8.004168510437012
    6. 'output' → logprob: -8.129168510437012
    7. ' for' → logprob: -9.754168510437012
    8. ' output' → logprob: -11.629168510437012
    9. '   ' → logprob: -11.754168510437012
    10. 'print' → logprob: -11.754168510437012

Token 582: ' for' (ID: 395)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.1489647924900055
    2. 'for' (adapté à ' for') → logprob: -2.1489648818969727
    3. 'output' → logprob: -3.8989648818969727
    4. '       ' → logprob: -7.148964881896973
    5. ' lines' → logprob: -7.898964881896973
    6. '           ' → logprob: -9.023964881896973
    7. ' for' → logprob: -9.273964881896973
    8. 'result' → logprob: -9.398964881896973
    9. 'render' → logprob: -10.398964881896973
    10. ' output' → logprob: -11.148964881896973

Token 583: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0009118211455643177
    2. ' line' → logprob: -7.000911712646484
    3. '	line' → logprob: -15.250911712646484
    4. '   ' → logprob: -17.125911712646484
    5. '(line' → logprob: -17.750911712646484
    6. '_line' → logprob: -18.000911712646484
    7. 'output' → logprob: -18.125911712646484
    8. ' ' → logprob: -18.250911712646484
    9. 'row' → logprob: -19.000911712646484
    10. 'l' → logprob: -19.625911712646484

Token 584: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011048170737922192
    2. 'in' → logprob: -4.511048316955566
    3. 'line' → logprob: -15.511048316955566
    4. '           ' → logprob: -16.26104736328125
    5. ' ' → logprob: -17.13604736328125
    6. '	in' → logprob: -18.13604736328125
    7. '```' → logprob: -18.38604736328125
    8. '               ' → logprob: -18.88604736328125
    9. 'to' → logprob: -18.88604736328125
    10. '   ' → logprob: -18.88604736328125

Token 585: ' view' (ID: 2325)
  Prédit: 'view'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'view' → logprob: -0.004078401252627373
    2. ' view' → logprob: -5.504078388214111
    3. '	view' → logprob: -17.754077911376953
    4. '(view' → logprob: -18.004077911376953
    5. '   ' → logprob: -18.254077911376953
    6. 'line' → logprob: -19.129077911376953
    7. '.view' → logprob: -19.254077911376953
    8. '           ' → logprob: -19.754077911376953
    9. '=view' → logprob: -20.004077911376953
    10. ')view' → logprob: -20.129077911376953

Token 586: '.render' (ID: 15112)
  Prédit: '.render'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.render' → logprob: -4.842555426876061e-06
    2. '.' → logprob: -12.500004768371582
    3. ' .' → logprob: -14.000004768371582
    4. 'render' → logprob: -15.500004768371582
    5. '   ' → logprob: -18.1250057220459
    6. '.Render' → logprob: -18.2500057220459
    7. '	render' → logprob: -18.8750057220459
    8. '.print' → logprob: -19.8750057220459
    9. ' ' → logprob: -20.0000057220459
    10. '.lines' → logprob: -20.3750057220459

Token 587: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3195140063762665
    2. '():
' → logprob: -1.3195140361785889
    3. '()' → logprob: -5.44451379776001
    4. ':' → logprob: -6.44451379776001
    5. '():
' → logprob: -8.569514274597168
    6. ':
' → logprob: -9.694514274597168
    7. 'print' → logprob: -10.694514274597168
    8. ' ():' → logprob: -10.819514274597168
    9. '       ' → logprob: -11.694514274597168
    10. '           ' → logprob: -11.819514274597168

Token 588: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12131600826978683
    2. 'print' → logprob: -2.3713159561157227
    3. ' print' → logprob: -3.8713159561157227
    4. '```' → logprob: -10.746315956115723
    5. '   ' → logprob: -10.996315956115723
    6. '           ' → logprob: -11.246315956115723
    7. '                   ' → logprob: -12.996315956115723
    8. '	print' → logprob: -13.871315956115723
    9. '
' → logprob: -14.496315956115723
    10. '#print' → logprob: -14.996315956115723

Token 589: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.061054359131958e-06
    2. ' print' → logprob: -11.750007629394531
    3. '               ' → logprob: -16.50000762939453
    4. '           ' → logprob: -21.37500762939453
    5. '	print' → logprob: -21.62500762939453
    6. '```' → logprob: -22.12500762939453
    7. '
' → logprob: -22.50000762939453
    8. '                   ' → logprob: -23.37500762939453
    9. '   ' → logprob: -23.50000762939453
    10. '#print' → logprob: -23.75000762939453

Token 590: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.023248042911291122
    2. 'line' → logprob: -3.7732479572296143
    3. ' line' → logprob: -13.273247718811035
    4. '(' → logprob: -14.148247718811035
    5. '[line' → logprob: -16.27324867248535
    6. '=line' → logprob: -17.77324867248535
    7. '	line' → logprob: -18.39824867248535
    8. '#line' → logprob: -18.89824867248535
    9. ',line' → logprob: -19.14824867248535
    10. 'Line' → logprob: -20.02324867248535

Token 591: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013409581733867526
    2. ')
' → logprob: -6.626340866088867
    3. '<|end|>' → logprob: -11.626340866088867
    4. '           ' → logprob: -12.876340866088867
    5. '())' → logprob: -13.501340866088867
    6. '()' → logprob: -13.501340866088867
    7. '```' → logprob: -16.001340866088867
    8. '       ' → logprob: -16.126340866088867
    9. ' )' → logprob: -16.251340866088867
    10. ')
' → logprob: -16.501340866088867

Token 592: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004678497789427638
    2. 'def' → logprob: -8.375468254089355
    3. '```' → logprob: -9.000468254089355
    4. ' if' → logprob: -9.875468254089355
    5. '#' → logprob: -9.875468254089355
    6. '
' → logprob: -12.000468254089355
    7. 'for' → logprob: -13.750468254089355
    8. '<|end|>' → logprob: -13.875468254089355
    9. 'import' → logprob: -14.625468254089355
    10. '  
' → logprob: -14.750468254089355

Token 593: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0005710251862183213
    2. 'main' → logprob: -7.500571250915527
    3. '_main' → logprob: -11.250571250915527
    4. ' run' → logprob: -12.250571250915527
    5. '	main' → logprob: -15.875571250915527
    6. ' solve' → logprob: -17.37557029724121
    7. '_run' → logprob: -18.75057029724121
    8. ' mains' → logprob: -19.00057029724121
    9. ' _' → logprob: -19.12557029724121
    10. ' process' → logprob: -19.25057029724121

Token 594: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.6405310816480778e-05
    2. ' ():' → logprob: -11.500016212463379
    3. '()' → logprob: -12.625016212463379
    4. '():
' → logprob: -12.750016212463379
    5. '()>' → logprob: -17.250017166137695
    6. '():
' → logprob: -17.375017166137695
    7. '()->' → logprob: -18.500017166137695
    8. '().' → logprob: -19.000017166137695
    9. '():

' → logprob: -19.500017166137695
    10. '()">' → logprob: -19.500017166137695

Token 595: '   ' (ID: 271)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.25333163142204285
    2. 'import' → logprob: -2.5033316612243652
    3. ' source' → logprob: -2.5033316612243652
    4. '   ' → logprob: -2.8783316612243652
    5. ' import' → logprob: -6.253331661224365
    6. 'input' → logprob: -7.003331661224365
    7. 'if' → logprob: -7.253331661224365
    8. ' input' → logprob: -9.003331184387207
    9. 'src' → logprob: -9.128331184387207
    10. ' if' → logprob: -9.253331184387207

Token 596: ' input' (ID: 3422)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.007080490700900555
    2. 'import' → logprob: -5.007080554962158
    3. ' source' → logprob: -8.882080078125
    4. 'src' → logprob: -9.007080078125
    5. 'parser' → logprob: -10.007080078125
    6. '   ' → logprob: -10.382080078125
    7. 'input' (adapté à ' input') → logprob: -11.007080078125
    8. 'controller' → logprob: -12.382080078125
    9. ' import' → logprob: -13.007080078125
    10. 'stdin' → logprob: -13.007080078125

Token 597: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.0010517460759729147
    2. 'source' → logprob: -6.876051902770996
    3. '_' → logprob: -11.876051902770996
    4. 'Source' → logprob: -12.251051902770996
    5. '_src' → logprob: -12.626051902770996
    6. ' =' → logprob: -13.626051902770996
    7. '=' → logprob: -13.751051902770996
    8. 's' → logprob: -14.751051902770996
    9. '()' → logprob: -14.751051902770996
    10. 'src' → logprob: -15.501051902770996

Token 598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759401917457581
    2. '=' → logprob: -0.8259401917457581
    3. '   ' → logprob: -14.575940132141113
    4. ':' → logprob: -16.07594108581543
    5. '()' → logprob: -16.20094108581543
    6. ')' → logprob: -16.95094108581543
    7. '=
' → logprob: -17.32594108581543
    8. '=sys' → logprob: -17.45094108581543
    9. '=

' → logprob: -17.70094108581543
    10. ' ' → logprob: -18.07594108581543

Token 599: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -2.7729658540920354e-05
    2. ' Std' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.375028610229492
    4. 'std' → logprob: -17.000028610229492
    5. 'Sys' → logprob: -18.875028610229492
    6. ' ' → logprob: -18.875028610229492
    7. '  ' → logprob: -19.750028610229492
    8. '.Std' → logprob: -20.125028610229492
    9. 'Standard' → logprob: -20.500028610229492
    10. 'STD' → logprob: -21.000028610229492

Token 600: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. '```' → logprob: -19.375
    3. '   ' → logprob: -20.25
    4. 'input' → logprob: -20.375
    5. '	Input' → logprob: -20.5
    6. ' Input' → logprob: -21.25
    7. 'In' → logprob: -21.5
    8. '_input' → logprob: -21.625
    9. 'put' → logprob: -21.75
    10. '[' → logprob: -22.125

Token 601: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -1.9504606825648807e-05
    2. 'source' → logprob: -10.875019073486328
    3. 'Input' → logprob: -14.875019073486328
    4. 'ource' → logprob: -16.750019073486328
    5. '_source' → logprob: -17.250019073486328
    6. '_SOURCE' → logprob: -18.125019073486328
    7. ' source' → logprob: -18.125019073486328
    8. ' Source' → logprob: -18.750019073486328
    9. '```' → logprob: -19.500019073486328
    10. 'Sources' → logprob: -19.625019073486328

Token 602: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004775072447955608
    2. '
' → logprob: -5.379775047302246
    3. 'data' → logprob: -9.004775047302246
    4. '    
' → logprob: -10.754775047302246
    5. '
' → logprob: -12.629775047302246
    6. 'parser' → logprob: -13.379775047302246
    7. ' data' → logprob: -13.879775047302246
    8. '   ' → logprob: -14.254775047302246
    9. 'input' → logprob: -14.504775047302246
    10. ',' → logprob: -14.629775047302246

Token 603: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010780644370242953
    2. 'parser' → logprob: -7.376078128814697
    3. ' parser' → logprob: -7.876078128814697
    4. 'data' → logprob: -9.876077651977539
    5. ' data' → logprob: -11.001077651977539
    6. '	parser' → logprob: -13.126077651977539
    7. '
' → logprob: -14.376077651977539
    8. '_parser' → logprob: -15.376077651977539
    9. '   ' → logprob: -15.626077651977539
    10. '    
' → logprob: -15.626077651977539

Token 604: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.00216441391967237
    2. '   ' → logprob: -6.752164363861084
    3. ' parser' → logprob: -7.502164363861084
    4. 'data' → logprob: -7.752164363861084
    5. 'dataset' → logprob: -11.377164840698242
    6. '	parser' → logprob: -15.377164840698242
    7. '    
' → logprob: -16.252164840698242
    8. ' data' → logprob: -16.377164840698242
    9. '_parser' → logprob: -17.752164840698242
    10. '```' → logprob: -17.752164840698242

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132864534854889
    2. ' =' → logprob: -1.3132864236831665
    3. '   ' → logprob: -10.688286781311035
    4. ' ' → logprob: -14.063286781311035
    5. '  ' → logprob: -15.063286781311035
    6. '=
' → logprob: -15.438286781311035
    7. '    ' → logprob: -16.06328582763672
    8. '       ' → logprob: -16.56328582763672
    9. 'parser' → logprob: -16.81328582763672
    10. ')' → logprob: -16.93828582763672

Token 606: ' Data' (ID: 4833)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.04859066382050514
    2. ' Data' → logprob: -3.048590660095215
    3. '   ' → logprob: -12.923590660095215
    4. '	Data' → logprob: -14.048590660095215
    5. '<Data' → logprob: -17.29859161376953
    6. '(Data' → logprob: -17.29859161376953
    7. '_Data' → logprob: -18.04859161376953
    8. ' ' → logprob: -19.17359161376953
    9. '.Data' → logprob: -19.79859161376953
    10. '@Data' → logprob: -19.92359161376953

Token 607: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -3.128163257315464e-07
    2. 'set' → logprob: -15.125
    3. 'et' → logprob: -16.875
    4. 'S' → logprob: -20.875
    5. '   ' → logprob: -21.125
    6. '_set' → logprob: -21.75
    7. ' Set' → logprob: -21.875
    8. '=' → logprob: -21.875
    9. 'Data' → logprob: -22.25
    10. 'ataset' → logprob: -22.25

Token 608: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -2.696889623621246e-06
    2. 'parser' → logprob: -12.87500286102295
    3. '(Parser' → logprob: -17.250001907348633
    4. 'Parse' → logprob: -17.875001907348633
    5. 'er' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.250001907348633
    7. 'parse' → logprob: -19.000001907348633
    8. '_parser' → logprob: -19.125001907348633
    9. ' Parser' → logprob: -19.750001907348633
    10. 'Iterator' → logprob: -19.875001907348633

Token 609: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.9424725148128346e-05
    2. '(' → logprob: -10.000049591064453
    3. '(parser' → logprob: -13.500049591064453
    4. '   ' → logprob: -14.000049591064453
    5. 'input' → logprob: -14.125049591064453
    6. '(
' → logprob: -14.750049591064453
    7. ' (' → logprob: -15.000049591064453
    8. '(iter' → logprob: -15.500049591064453
    9. '(stdin' → logprob: -17.125049591064453
    10. '(iterator' → logprob: -17.500049591064453

Token 610: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.0026108557358384132
    2. 'source' → logprob: -6.127610683441162
    3. 'Source' → logprob: -8.00261116027832
    4. '(input' → logprob: -10.12761116027832
    5. '(source' → logprob: -10.50261116027832
    6. '=' → logprob: -11.87761116027832
    7. '   ' → logprob: -11.87761116027832
    8. '=input' → logprob: -12.00261116027832
    9. 's' → logprob: -13.87761116027832
    10. '_input' → logprob: -14.62761116027832

Token 611: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.391021728515625
    2. ')
' → logprob: -1.141021728515625
    3. '   ' → logprob: -5.516021728515625
    4. ')
' → logprob: -9.391021728515625
    5. '())
' → logprob: -11.516021728515625
    6. '())' → logprob: -11.891021728515625
    7. ' )
' → logprob: -12.516021728515625
    8. ' )' → logprob: -12.766021728515625
    9. ')`
' → logprob: -12.766021728515625
    10. ')

' → logprob: -13.016021728515625

Token 612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4760850965976715
    2. 'controller' → logprob: -0.9760850667953491
    3. ' controller' → logprob: -6.601085186004639
    4. '
' → logprob: -7.601085186004639
    5. '	controller' → logprob: -9.47608470916748
    6. '    
' → logprob: -11.10108470916748
    7. '```' → logprob: -11.10108470916748
    8. 'hist' → logprob: -11.60108470916748
    9. 'ctrl' → logprob: -11.72608470916748
    10. '_controller' → logprob: -12.35108470916748

Token 613: ' controller' (ID: 12220)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' (adapté à ' controller') → logprob: -6.492120155598968e-05
    2. '   ' → logprob: -10.000064849853516
    3. ' controller' → logprob: -10.875064849853516
    4. '	controller' → logprob: -15.250064849853516
    5. 'ctrl' → logprob: -15.500064849853516
    6. '    
' → logprob: -18.375064849853516
    7. '```' → logprob: -18.500064849853516
    8. '_controller' → logprob: -18.875064849853516
    9. '
' → logprob: -19.250064849853516
    10. '(controller' → logprob: -19.375064849853516

Token 614: ' =' (ID: 314)
  Prédit: '.process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.4295118749141693
    2. ' =' → logprob: -1.1795119047164917
    3. '=' → logprob: -3.179511785507202
    4. '(process' → logprob: -9.054512023925781
    5. '.' → logprob: -11.554512023925781
    6. 'process' → logprob: -11.804512023925781
    7. '   ' → logprob: -13.179512023925781
    8. '.=' → logprob: -14.429512023925781
    9. ' ' → logprob: -14.804512023925781
    10. '(' → logprob: -14.929512023925781

Token 615: ' Histogram' (ID: 189950)
  Prédit: 'Histogram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Histogram' → logprob: -0.0009118211455643177
    2. ' Histogram' → logprob: -7.000911712646484
    3. 'Hist' → logprob: -15.500911712646484
    4. '   ' → logprob: -18.125911712646484
    5. 'History' → logprob: -20.625911712646484
    6. '	H' → logprob: -20.875911712646484
    7. '_hist' → logprob: -21.625911712646484
    8. ' ' → logprob: -22.125911712646484
    9. ' Hist' → logprob: -22.625911712646484
    10. 'HBox' → logprob: -23.000911712646484

Token 616: 'Controller' (ID: 2947)
  Prédit: 'Controller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Controller' → logprob: -1.5048530030981055e-06
    2. 'controller' → logprob: -13.500001907348633
    3. '@Controller' → logprob: -18.375001907348633
    4. 'Control' → logprob: -19.000001907348633
    5. '_controller' → logprob: -19.125001907348633
    6. '_Controller' → logprob: -20.250001907348633
    7. ' Controller' → logprob: -20.375001907348633
    8. '```' → logprob: -20.875001907348633
    9. '_CONTROLLER' → logprob: -21.125001907348633
    10. ' controller' → logprob: -21.125001907348633

Token 617: '(iter' (ID: 61014)
  Prédit: '(parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parser' → logprob: -5.5861724831629544e-05
    2. 'parser' → logprob: -10.625056266784668
    3. '(iter' → logprob: -10.750056266784668
    4. '(' → logprob: -12.000056266784668
    5. '(parsed' → logprob: -13.375056266784668
    6. '(iterator' → logprob: -14.000056266784668
    7. '(par' → logprob: -14.500056266784668
    8. '   ' → logprob: -14.625056266784668
    9. '(Parser' → logprob: -15.500056266784668
    10. ' parser' → logprob: -15.875056266784668

Token 618: '(parser' (ID: 82535)
  Prédit: '(parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parser' → logprob: -2.165027217415627e-05
    2. 'parser' → logprob: -10.750021934509277
    3. '(parsed' → logprob: -16.75002098083496
    4. '	parser' → logprob: -16.87502098083496
    5. '(' → logprob: -18.00002098083496
    6. ' parser' → logprob: -18.87502098083496
    7. '(parse' → logprob: -19.00002098083496
    8. '/parser' → logprob: -19.00002098083496
    9. ')' → logprob: -20.37502098083496
    10. '(par' → logprob: -20.62502098083496

Token 619: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.013411621563136578
    2. ')' → logprob: -4.888411521911621
    3. ')
' → logprob: -5.888411521911621
    4. '))' → logprob: -6.013411521911621
    5. '))
' → logprob: -8.013411521911621
    6. '()))
' → logprob: -9.013411521911621
    7. ' ))
' → logprob: -10.013411521911621
    8. '   ' → logprob: -10.013411521911621
    9. '())
' → logprob: -11.388411521911621
    10. ')
' → logprob: -12.138411521911621

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0871996209025383
    2. 'controller' → logprob: -2.5871996879577637
    3. '
' → logprob: -4.837199687957764
    4. '	controller' → logprob: -8.337199211120605
    5. ' controller' → logprob: -10.337199211120605
    6. '    
' → logprob: -10.337199211120605
    7. '_controller' → logprob: -11.212199211120605
    8. '(controller' → logprob: -12.212199211120605
    9. '  
' → logprob: -12.462199211120605
    10. '
' → logprob: -12.587199211120605

Token 621: ' controller' (ID: 12220)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' (adapté à ' controller') → logprob: -0.0019420842872932553
    2. '   ' → logprob: -6.251942157745361
    3. ' controller' → logprob: -11.251941680908203
    4. '	controller' → logprob: -15.501941680908203
    5. '
' → logprob: -15.626941680908203
    6. '.controller' → logprob: -16.251941680908203
    7. '_controller' → logprob: -17.751941680908203
    8. '(controller' → logprob: -18.376941680908203
    9. '  ' → logprob: -18.751941680908203
    10. '    
' → logprob: -18.751941680908203

Token 622: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -6.392202976712724e-06
    2. '.' → logprob: -12.000006675720215
    3. 'process' → logprob: -15.625006675720215
    4. ' .' → logprob: -18.6250057220459
    5. '.perform' → logprob: -18.6250057220459
    6. '.run' → logprob: -19.5000057220459
    7. '   ' → logprob: -19.5000057220459
    8. ').' → logprob: -20.1250057220459
    9. '.print' → logprob: -20.5000057220459
    10. '.handle' → logprob: -21.0000057220459

Token 623: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: 0.0
    2. 'all' → logprob: -19.625
    3. 'All' → logprob: -20.75
    4. '_ALL' → logprob: -22.0
    5. '__' → logprob: -22.5
    6. '_one' → logprob: -22.625
    7. '```' → logprob: -22.75
    8. '()' → logprob: -23.375
    9. '_and' → logprob: -23.875
    10. '_out' → logprob: -23.875

Token 624: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12762652337551117
    2. '()
' → logprob: -2.127626419067383
    3. '()

' → logprob: -7.377626419067383
    4. 'if' → logprob: -10.627626419067383
    5. '()\' → logprob: -10.752626419067383
    6. '
' → logprob: -11.502626419067383
    7. '<|end|>' → logprob: -12.127626419067383
    8. '()`' → logprob: -12.502626419067383
    9. '()
' → logprob: -13.127626419067383
    10. '()<' → logprob: -13.252626419067383

Token 625: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.913265239447355e-05
    2. '
' → logprob: -9.250099182128906
    3. ' if' → logprob: -13.250099182128906
    4. '```' → logprob: -13.625099182128906
    5. '\n' → logprob: -17.250099182128906
    6. '#if' → logprob: -18.000099182128906
    7. '  
' → logprob: -18.125099182128906
    8. '<|end|>' → logprob: -18.250099182128906
    9. '

' → logprob: -18.375099182128906
    10. '\' → logprob: -18.375099182128906

Token 626: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4741079807281494
    2. '__' → logprob: -0.9741079807281494
    3. 'name' → logprob: -11.09910774230957
    4. '_name' → logprob: -11.47410774230957
    5. ' name' → logprob: -13.47410774230957
    6. '```' → logprob: -13.59910774230957
    7. ' ' → logprob: -14.22410774230957
    8. '___' → logprob: -14.34910774230957
    9. ' ' → logprob: -14.72410774230957
    10. '_' → logprob: -15.09910774230957

Token 627: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16601024568080902
    2. '==' → logprob: -2.2910101413726807
    3. ' ==' → logprob: -3.0410101413726807
    4. '.__' → logprob: -6.41601037979126
    5. ' __' → logprob: -7.04101037979126
    6. '=="' → logprob: -7.54101037979126
    7. '__.__' → logprob: -7.66601037979126
    8. '=='' → logprob: -9.041009902954102
    9. '__.' → logprob: -9.291009902954102
    10. '.py' → logprob: -9.666009902954102

Token 628: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.41866585687967e-06
    2. '==' → logprob: -11.750008583068848
    3. '__.__' → logprob: -15.375008583068848
    4. ' ==' → logprob: -16.37500762939453
    5. '=="' → logprob: -17.00000762939453
    6. '__.' → logprob: -17.25000762939453
    7. 'name' → logprob: -17.50000762939453
    8. '___' → logprob: -17.50000762939453
    9. 'main' → logprob: -18.37500762939453
    10. '____' → logprob: -18.37500762939453

Token 629: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11388537287712097
    2. '==' → logprob: -2.3638854026794434
    3. ' ==' → logprob: -4.613885402679443
    4. '=="' → logprob: -5.613885402679443
    5. '=='' → logprob: -11.113884925842285
    6. '___' → logprob: -12.738884925842285
    7. '__.__' → logprob: -12.988884925842285
    8. '_' → logprob: -13.488884925842285
    9. '===' → logprob: -14.113884925842285
    10. '=' → logprob: -14.738884925842285

Token 630: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0015077205607667565
    2. ''' → logprob: -6.501507759094238
    3. ' "__' → logprob: -12.251507759094238
    4. '__' → logprob: -14.751507759094238
    5. '"name' → logprob: -16.126506805419922
    6. ' '__' → logprob: -17.876506805419922
    7. '"_' → logprob: -18.501506805419922
    8. ''"' → logprob: -18.751506805419922
    9. '"user' → logprob: -18.751506805419922
    10. '"class' → logprob: -19.376506805419922

Token 631: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003210865193977952
    2. '__' → logprob: -5.75321102142334
    3. 'name' → logprob: -10.87821102142334
    4. 'built' → logprob: -12.25321102142334
    5. '_main' → logprob: -12.37821102142334
    6. 'm' → logprob: -14.25321102142334
    7. '```' → logprob: -14.62821102142334
    8. '7' → logprob: -14.62821102142334
    9. '1' → logprob: -15.00321102142334
    10. 'builtin' → logprob: -15.12821102142334

Token 632: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1004791408777237
    2. '__' → logprob: -2.3504791259765625
    3. '__':
' → logprob: -8.225479125976562
    4. '__
' → logprob: -13.600479125976562
    5. '__
' → logprob: -13.725479125976562
    6. '_' → logprob: -14.225479125976562
    7. '__:' → logprob: -14.600479125976562
    8. '"' → logprob: -14.725479125976562
    9. '__["' → logprob: -14.850479125976562
    10. '__.' → logprob: -15.350479125976562

Token 633: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.603335638530552e-05
    2. '__' → logprob: -9.625096321105957
    3. '"' → logprob: -10.625096321105957
    4. ' main' → logprob: -12.250096321105957
    5. ''' → logprob: -14.625096321105957
    6. '	main' → logprob: -15.500096321105957
    7. '_main' → logprob: -16.12509536743164
    8. '   ' → logprob: -17.37509536743164
    9. '____' → logprob: -17.50009536743164
    10. '(main' → logprob: -18.12509536743164

Token 634: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '	main' → logprob: -21.875
    4. '   ' → logprob: -24.625
    5. '.main' → logprob: -25.625
    6. 'import' → logprob: -26.125
    7. '(main' → logprob: -26.375
    8. '
' → logprob: -26.375
    9. 'mai' → logprob: -27.375
    10. '_main' → logprob: -27.5

Token 635: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 633
Tokens correctement prédits (1ère position, stricte): 302
Tokens correctement prédits (1ère position, avec adaptation): 340
Tokens correctement prédits (top 10): 575
Précision stricte (1ère position): 47.71%
Précision adaptée (1ère position): 53.71%
Précision (top 10): 90.84%
================================================================================
