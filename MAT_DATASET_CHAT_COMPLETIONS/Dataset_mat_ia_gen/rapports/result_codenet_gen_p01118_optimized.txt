================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    h,w=map(int,input().split())
    if h==0 and w==0: break
    board=[input() for _ in range(h)]
    s=input()
    pos={}
    for i in range(h):
        for j in range(w):
            c=board[i][j]
            if c!='_':
                pos[c]=(i,j)
    ci,cj=0,0
    res=0
    for c in s:
        ni,nj=pos[c]
        res+=abs(ni-ci)+abs(nj-cj)+1
        ci,cj=ni,nj
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3108775019645691
    2. '    ' → logprob: -1.6858775615692139
    3. '```' → logprob: -3.435877561569214
    4. ' ' → logprob: -3.810877561569214
    5. '       ' → logprob: -4.810877323150635
    6. '    
' → logprob: -5.935877323150635
    7. '  ' → logprob: -6.185877323150635
    8. '\' → logprob: -6.185877323150635
    9. '\n' → logprob: -6.685877323150635
    10. '\t' → logprob: -6.810877323150635

Token 5: ',w' (ID: 49598)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23487801849842072
    2. 'a' → logprob: -2.2348780632019043
    3. 'i' → logprob: -2.9848780632019043
    4. 'u' → logprob: -3.3598780632019043
    5. 't' → logprob: -4.734878063201904
    6. '   ' → logprob: -5.859878063201904
    7. '=' → logprob: -6.109878063201904
    8. ' ' → logprob: -7.109878063201904
    9. ' =' → logprob: -7.234878063201904
    10. '  ' → logprob: -8.234877586364746

Token 6: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3179570138454437
    2. ' =' → logprob: -2.3179569244384766
    3. ',' → logprob: -2.5679569244384766
    4. '[' → logprob: -2.6929569244384766
    5. ')' → logprob: -3.9429569244384766
    6. ' ' → logprob: -5.692956924438477
    7. '   ' → logprob: -6.692956924438477
    8. ']' → logprob: -7.067956924438477
    9. ' ,' → logprob: -7.192956924438477
    10. ''' → logprob: -7.692956924438477

Token 7: 'map' (ID: 3726)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -1.018107295036316
    2. ' input' → logprob: -1.393107295036316
    3. 'input' → logprob: -1.518107295036316
    4. 'map' → logprob: -1.768107295036316
    5. ' ' → logprob: -8.393107414245605
    6. ' list' → logprob: -9.518107414245605
    7. ' image' → logprob: -9.518107414245605
    8. ' [' → logprob: -10.143107414245605
    9. 'list' → logprob: -10.143107414245605
    10. 'image' → logprob: -10.268107414245605

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005025255959481001
    2. '(' → logprob: -5.630025386810303
    3. '(str' → logprob: -6.755025386810303
    4. 'int' → logprob: -8.755024909973145
    5. '<int' → logprob: -10.130024909973145
    6. '(lambda' → logprob: -10.755024909973145
    7. '[int' → logprob: -10.880024909973145
    8. '(input' → logprob: -11.880024909973145
    9. '```' → logprob: -12.880024909973145
    10. '=int' → logprob: -13.005024909973145

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004236412234604359
    2. 'input' → logprob: -6.254236221313477
    3. ')' → logprob: -6.879236221313477
    4. '(' → logprob: -7.254236221313477
    5. ',input' → logprob: -8.004236221313477
    6. ' input' → logprob: -9.254236221313477
    7. '=input' → logprob: -10.254236221313477
    8. '[input' → logprob: -10.504236221313477
    9. '(user' → logprob: -11.254236221313477
    10. '<input' → logprob: -11.629236221313477

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23769938945770264
    2. '()' → logprob: -1.6126993894577026
    3. '()))' → logprob: -4.862699508666992
    4. '().' → logprob: -6.612699508666992
    5. '());' → logprob: -6.987699508666992
    6. ')' → logprob: -7.487699508666992
    7. '()),' → logprob: -7.987699508666992
    8. '()));' → logprob: -8.237699508666992
    9. '(' → logprob: -8.862699508666992
    10. '()>' → logprob: -8.987699508666992

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026574634830467403
    2. 'strip' → logprob: -8.250266075134277
    3. 'rstrip' → logprob: -12.875266075134277
    4. ' split' → logprob: -13.625266075134277
    5. '(split' → logprob: -14.250266075134277
    6. ')' → logprob: -17.87526512145996
    7. 'read' → logprob: -18.50026512145996
    8. 'replace' → logprob: -18.87526512145996
    9. 'spl' → logprob: -19.62526512145996
    10. 'startswith' → logprob: -19.87526512145996

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.21851779520511627
    2. ')' → logprob: -2.093517780303955
    3. '()))' → logprob: -3.218517780303955
    4. '))' → logprob: -3.843517780303955
    5. '()' → logprob: -4.468517780303955
    6. '(' → logprob: -9.468518257141113
    7. '('' → logprob: -11.218518257141113
    8. '())
' → logprob: -11.718518257141113
    9. ' ())' → logprob: -11.968518257141113
    10. '()));' → logprob: -12.093518257141113

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37932711839675903
    2. ' if' → logprob: -1.8793270587921143
    3. '<|end|>' → logprob: -2.5043270587921143
    4. ' ' → logprob: -3.6293270587921143
    5. ')' → logprob: -4.129327297210693
    6. '\n' → logprob: -4.379327297210693
    7. ':' → logprob: -5.379327297210693
    8. '  
' → logprob: -5.879327297210693
    9. '```' → logprob: -6.004327297210693
    10. '    
' → logprob: -6.129327297210693

Token 14: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1356656849384308
    2. ' if' → logprob: -2.3856656551361084
    3. '```' → logprob: -4.0106658935546875
    4. '<|end|>' → logprob: -5.3856658935546875
    5. 'if' (adapté à ' if') → logprob: -5.5106658935546875
    6. '\n' → logprob: -5.8856658935546875
    7. ' ' → logprob: -6.0106658935546875
    8. '  ' → logprob: -7.8856658935546875
    9. '       ' → logprob: -8.010665893554688
    10. '    
' → logprob: -8.135665893554688

Token 15: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.14557377994060516
    2. ' not' → logprob: -2.020573854446411
    3. ' w' → logprob: -6.145573616027832
    4. 'h' → logprob: -8.270573616027832
    5. 'not' → logprob: -8.270573616027832
    6. ' ' → logprob: -8.520573616027832
    7. 'w' → logprob: -10.520573616027832
    8. ' (' → logprob: -11.770573616027832
    9. ' ' → logprob: -12.770573616027832
    10. '(not' → logprob: -14.270573616027832

Token 16: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07993902266025543
    2. '==' → logprob: -2.954939126968384
    3. ' <=' → logprob: -4.204938888549805
    4. ' <' → logprob: -4.954938888549805
    5. '<' → logprob: -6.704938888549805
    6. '<=' → logprob: -7.454938888549805
    7. ' ' → logprob: -8.454938888549805
    8. '=' → logprob: -8.579938888549805
    9. ')' → logprob: -8.579938888549805
    10. '  ' → logprob: -9.454938888549805

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019557522609829903
    2. ' ' → logprob: -6.251955986022949
    3. 'w' → logprob: -10.62695598602295
    4. ' w' → logprob: -13.37695598602295
    5. '```' → logprob: -14.37695598602295
    6. '   ' → logprob: -15.87695598602295
    7. '-' → logprob: -16.001955032348633
    8. '  ' → logprob: -16.439455032348633
    9. '1' → logprob: -16.939455032348633
    10. '`' → logprob: -17.376955032348633

Token 18: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005349140148609877
    2. 'and' → logprob: -5.255349159240723
    3. ' or' → logprob: -9.255349159240723
    4. ' ' → logprob: -11.380349159240723
    5. '	and' → logprob: -12.380349159240723
    6. ':' → logprob: -13.755349159240723
    7. '   ' → logprob: -14.005349159240723
    8. ' ' → logprob: -14.380349159240723
    9. ' a' → logprob: -14.505349159240723
    10. '<|end|>' → logprob: -15.255349159240723

Token 19: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5759400725364685
    2. 'w' → logprob: -0.8259400725364685
    3. '	w' → logprob: -14.575940132141113
    4. ' ' → logprob: -16.075939178466797
    5. '<w' → logprob: -16.575939178466797
    6. '   ' → logprob: -17.575939178466797
    7. '    ' → logprob: -17.950939178466797
    8. '<|end|>' → logprob: -18.200939178466797
    9. ' ' → logprob: -18.575939178466797
    10. '  ' → logprob: -18.575939178466797

Token 20: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10414094477891922
    2. ' ==' → logprob: -2.3541409969329834
    3. '=' → logprob: -5.854140758514404
    4. '<|end|>' → logprob: -7.479140758514404
    5. '```' → logprob: -9.104141235351562
    6. '<|end|>' → logprob: -9.479141235351562
    7. ']==' → logprob: -9.479141235351562
    8. ')==' → logprob: -9.604141235351562
    9. ' ' → logprob: -10.229141235351562
    10. ')' → logprob: -10.479141235351562

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. '<|end|>' → logprob: -16.25037956237793
    4. '```' → logprob: -16.81287956237793
    5. '   ' → logprob: -16.87537956237793
    6. '۰' → logprob: -16.87537956237793
    7. '  ' → logprob: -16.93787956237793
    8. '０' → logprob: -17.62537956237793
    9. '<|end|>' → logprob: -17.68787956237793
    10. ')' → logprob: -17.93787956237793

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018286957638338208
    2. '       ' → logprob: -6.626828670501709
    3. ':
' → logprob: -8.251829147338867
    4. '   ' → logprob: -8.376829147338867
    5. ' :' → logprob: -13.001829147338867
    6. '):' → logprob: -13.126829147338867
    7. ':return' → logprob: -13.126829147338867
    8. '    ' → logprob: -13.876829147338867
    9. '	break' → logprob: -14.126829147338867
    10. '	' → logprob: -14.126829147338867

Token 23: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00406712107360363
    2. ' break' → logprob: -6.0040669441223145
    3. '\n' → logprob: -6.8790669441223145
    4. '   ' → logprob: -7.7540669441223145
    5. '	break' → logprob: -10.129067420959473
    6. '<|end|>' → logprob: -11.254067420959473
    7. '    ' → logprob: -11.504067420959473
    8. '        
' → logprob: -11.629067420959473
    9. '\' → logprob: -11.629067420959473
    10. '```' → logprob: -12.004067420959473

Token 24: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10864302515983582
    2. '   ' → logprob: -2.983643054962158
    3. '
' → logprob: -3.608643054962158
    4. '    
' → logprob: -4.733643054962158
    5. '<|end|>' → logprob: -5.858643054962158
    6. '\' → logprob: -5.983643054962158
    7. 'newline' → logprob: -5.983643054962158
    8. '  
' → logprob: -6.483643054962158
    9. '#' → logprob: -6.483643054962158
    10. '\r' → logprob: -6.608643054962158

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.221032977104187
    2. '\n' → logprob: -1.971032977104187
    3. 'print' → logprob: -3.5960330963134766
    4. '    
' → logprob: -3.8460330963134766
    5. '
' → logprob: -5.096033096313477
    6. '```' → logprob: -7.221033096313477
    7. 'n' → logprob: -7.346033096313477
    8. 'newline' → logprob: -7.471033096313477
    9. '<|end|>' → logprob: -7.596033096313477
    10. '  
' → logprob: -7.846033096313477

Token 26: ' board' (ID: 6796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11525341868400574
    2. '\n' → logprob: -2.865253448486328
    3. 'print' → logprob: -3.365253448486328
    4. '    
' → logprob: -4.615253448486328
    5. '\r' → logprob: -6.365253448486328
    6. '\' → logprob: -6.615253448486328
    7. '#' → logprob: -6.740253448486328
    8. '<|end|>' → logprob: -7.490253448486328
    9. 'n' → logprob: -7.865253448486328
    10. 'for' → logprob: -7.990253448486328

Token 27: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3512515425682068
    2. ' =' → logprob: -1.8512516021728516
    3. '[' → logprob: -2.2262516021728516
    4. '=[]' → logprob: -4.351251602172852
    5. '[]' → logprob: -5.476251602172852
    6. '<|end|>' → logprob: -5.726251602172852
    7. '[:]' → logprob: -5.851251602172852
    8. '   ' → logprob: -6.101251602172852
    9. '=[]
' → logprob: -6.976251602172852
    10. ')' → logprob: -7.226251602172852

Token 28: 'input' (ID: 2586)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.7763866782188416
    2. 'list' → logprob: -1.4013867378234863
    3. '["' → logprob: -2.5263867378234863
    4. '[]' → logprob: -2.9013867378234863
    5. '[input' → logprob: -2.9013867378234863
    6. 'input' → logprob: -3.0263867378234863
    7. '[' → logprob: -3.1513867378234863
    8. '[list' → logprob: -5.026386737823486
    9. ' ['' → logprob: -6.526386737823486
    10. ' list' → logprob: -6.776386737823486

Token 29: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001424045069143176
    2. '()]' → logprob: -6.6264238357543945
    3. '().' → logprob: -9.626423835754395
    4. '())' → logprob: -10.751423835754395
    5. ' ()' → logprob: -12.501423835754395
    6. '()+' → logprob: -13.126423835754395
    7. '()>' → logprob: -13.751423835754395
    8. '（）' → logprob: -13.876423835754395
    9. '(' → logprob: -14.501423835754395
    10. '()}' → logprob: -15.376423835754395

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.633474588394165
    2. 'for' → logprob: -0.758474588394165
    3. '()' → logprob: -7.883474349975586
    4. '	for' → logprob: -8.133474349975586
    5. '   ' → logprob: -9.258474349975586
    6. ')' → logprob: -9.383474349975586
    7. ' ' → logprob: -11.633474349975586
    8. '.strip' → logprob: -12.758474349975586
    9. '    ' → logprob: -12.883474349975586
    10. ']' → logprob: -13.383474349975586

Token 31: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11849430203437805
    2. ' _' → logprob: -2.2434942722320557
    3. '_' → logprob: -5.368494510650635
    4. ' i' → logprob: -7.743494510650635
    5. ' ' → logprob: -8.368494033813477
    6. '_range' → logprob: -8.618494033813477
    7. 'range' → logprob: -8.993494033813477
    8. '	range' → logprob: -11.868494033813477
    9. ' in' → logprob: -12.118494033813477
    10. ' xrange' → logprob: -12.243494033813477

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027415554970502853
    2. 'in' → logprob: -3.7774155139923096
    3. 'range' → logprob: -5.777415752410889
    4. ' range' → logprob: -6.902415752410889
    5. ' ' → logprob: -10.27741527557373
    6. '_' → logprob: -11.90241527557373
    7. '	in' → logprob: -12.90241527557373
    8. '  ' → logprob: -13.15241527557373
    9. ' _' → logprob: -13.27741527557373
    10. '	range' → logprob: -13.40241527557373

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019294669618830085
    2. ' range' → logprob: -6.25192928314209
    3. '(range' → logprob: -14.62692928314209
    4. '	range' → logprob: -15.37692928314209
    5. '[' → logprob: -16.251930236816406
    6. '   ' → logprob: -17.251930236816406
    7. ' ' → logprob: -17.876930236816406
    8. '.range' → logprob: -18.501930236816406
    9. '  ' → logprob: -19.001930236816406
    10. ')' → logprob: -19.751930236816406

Token 34: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.4391956685576588e-05
    2. '(' → logprob: -11.000024795532227
    3. ' (' → logprob: -12.500024795532227
    4. '(w' → logprob: -12.875024795532227
    5. 'h' → logprob: -14.000024795532227
    6. ' h' → logprob: -15.000024795532227
    7. '	h' → logprob: -16.125024795532227
    8. '   ' → logprob: -17.125024795532227
    9. '(H' → logprob: -18.500024795532227
    10. ',h' → logprob: -18.625024795532227

Token 35: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.500108141452074e-05
    2. ')' → logprob: -10.875035285949707
    3. ']' → logprob: -11.375035285949707
    4. ')]
' → logprob: -13.125035285949707
    5. '   ' → logprob: -14.250035285949707
    6. ' )' → logprob: -14.375035285949707
    7. '')]' → logprob: -15.000035285949707
    8. ')])' → logprob: -15.875035285949707
    9. '])]' → logprob: -16.00003433227539
    10. ')],' → logprob: -16.12503433227539

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.367855429649353
    2. '    
' → logprob: -1.742855429649353
    3. '
' → logprob: -2.3678555488586426
    4. '\n' → logprob: -4.117855548858643
    5. 'print' → logprob: -5.242855548858643
    6. '  
' → logprob: -5.492855548858643
    7. '<|end|>' → logprob: -5.492855548858643
    8. '   
' → logprob: -6.617855548858643
    9. '#' → logprob: -6.742855548858643
    10. '```' → logprob: -7.242855548858643

Token 37: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5092378258705139
    2. '    
' → logprob: -2.009237766265869
    3. 'print' → logprob: -3.009237766265869
    4. '#' → logprob: -3.134237766265869
    5. 'for' → logprob: -3.384237766265869
    6. ' for' → logprob: -4.009237766265869
    7. '\' → logprob: -4.134237766265869
    8. '.' → logprob: -4.134237766265869
    9. '\n' → logprob: -4.134237766265869
    10. '*' → logprob: -4.759237766265869

Token 38: '=input' (ID: 87911)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.41968613862991333
    2. 'tar' → logprob: -1.2946860790252686
    3. 'um' → logprob: -3.6696860790252686
    4. 'paces' → logprob: -3.7946860790252686
    5. 'x' → logprob: -5.044686317443848
    6. 'tat' → logprob: -5.794686317443848
    7. 'core' → logprob: -6.544686317443848
    8. 'ize' → logprob: -6.794686317443848
    9. '=' → logprob: -6.919686317443848
    10. 'pace' → logprob: -7.294686317443848

Token 39: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00020473242329899222
    2. '().' → logprob: -9.500205039978027
    3. ' ()' → logprob: -9.750205039978027
    4. '(' → logprob: -10.500205039978027
    5. '())' → logprob: -10.625205039978027
    6. '()]' → logprob: -12.375205039978027
    7. '()`' → logprob: -12.375205039978027
    8. '()>' → logprob: -12.500205039978027
    9. '()
' → logprob: -13.125205039978027
    10. ')' → logprob: -14.125205039978027

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9656431674957275
    2. '   ' → logprob: -1.8406431674957275
    3. ' for' → logprob: -2.2156431674957275
    4. '<|end|>' → logprob: -2.4656431674957275
    5. '    
' → logprob: -2.9656431674957275
    6. 'for' → logprob: -2.9656431674957275
    7. '\n' → logprob: -2.9656431674957275
    8. ' 
' → logprob: -4.090642929077148
    9. '[' → logprob: -4.465642929077148
    10. '  
' → logprob: -4.465642929077148

Token 41: ' pos' (ID: 1253)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6816372871398926
    2. ' for' → logprob: -1.8066372871398926
    3. '
' → logprob: -2.0566372871398926
    4. '<|end|>' → logprob: -2.5566372871398926
    5. 'x' → logprob: -3.0566372871398926
    6. 'i' → logprob: -3.0566372871398926
    7. '#' → logprob: -3.1816372871398926
    8. '   ' → logprob: -3.1816372871398926
    9. 'idx' → logprob: -3.3066372871398926
    10. '\n' → logprob: -3.6816372871398926

Token 42: '={}
' (ID: 146130)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6445327401161194
    2. '=' → logprob: -0.7695327401161194
    3. '_' → logprob: -5.019532680511475
    4. 's' → logprob: -6.144532680511475
    5. ',' → logprob: -6.894532680511475
    6. 'x' → logprob: -7.269532680511475
    7. '=[]' → logprob: -7.894532680511475
    8. '_x' → logprob: -8.269533157348633
    9. ' ' → logprob: -8.644533157348633
    10. '_=' → logprob: -8.769533157348633

Token 43: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20994141697883606
    2. 'for' → logprob: -2.3349413871765137
    3. '   ' → logprob: -3.3349413871765137
    4. 'y' → logprob: -3.4599413871765137
    5. 'i' → logprob: -4.959941387176514
    6. ' y' → logprob: -5.084941387176514
    7. 'x' → logprob: -5.709941387176514
    8. ' i' → logprob: -5.709941387176514
    9. ',' → logprob: -7.209941387176514
    10. ' x' → logprob: -7.459941387176514

Token 44: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.37622785568237305
    2. 'y' → logprob: -1.501227855682373
    3. ' for' → logprob: -2.751227855682373
    4. 'x' → logprob: -3.751227855682373
    5. 'i' → logprob: -6.501227855682373
    6. ' y' → logprob: -7.751227855682373
    7. 'found' → logprob: -8.001228332519531
    8. 'r' → logprob: -9.001228332519531
    9. 'current' → logprob: -9.126228332519531
    10. '   ' → logprob: -9.251228332519531

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.43221795558929443
    2. 'i' → logprob: -1.1822179555892944
    3. ' y' → logprob: -3.682218074798584
    4. 'y' → logprob: -4.682218074798584
    5. ' r' → logprob: -5.557218074798584
    6. 'r' → logprob: -6.057218074798584
    7. ' c' → logprob: -6.807218074798584
    8. 'c' → logprob: -7.307218074798584
    9. ' _' → logprob: -7.432218074798584
    10. ' ' → logprob: -7.432218074798584

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08926397562026978
    2. 'in' → logprob: -2.464263916015625
    3. ' ' → logprob: -8.464263916015625
    4. '	in' → logprob: -10.214263916015625
    5. ',' → logprob: -10.964263916015625
    6. 'n' → logprob: -11.214263916015625
    7. '   ' → logprob: -11.464263916015625
    8. '0' → logprob: -11.839263916015625
    9. '```' → logprob: -11.964263916015625
    10. ',in' → logprob: -12.964263916015625

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759428143501282
    2. 'range' → logprob: -0.8259428143501282
    3. '	range' → logprob: -13.200942993164062
    4. ' ' → logprob: -14.700942993164062
    5. ' xrange' → logprob: -14.700942993164062
    6. '(range' → logprob: -15.325942993164062
    7. '```' → logprob: -16.075942993164062
    8. '_range' → logprob: -16.450942993164062
    9. 'r' → logprob: -16.575942993164062
    10. 'rang' → logprob: -17.075942993164062

Token 48: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0053879073821008205
    2. '(' → logprob: -5.630387783050537
    3. ' (' → logprob: -6.380387783050537
    4. ' h' → logprob: -10.130388259887695
    5. '(len' → logprob: -10.630388259887695
    6. '(s' → logprob: -11.505388259887695
    7. ' ' → logprob: -12.130388259887695
    8. 'h' → logprob: -12.755388259887695
    9. '   ' → logprob: -12.880388259887695
    10. '	h' → logprob: -13.880388259887695

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001582470489665866
    2. '):
' → logprob: -6.626582622528076
    3. ':' → logprob: -8.626582145690918
    4. ')' → logprob: -10.251582145690918
    5. '   ' → logprob: -10.626582145690918
    6. '+' → logprob: -12.251582145690918
    7. ' ):' → logprob: -12.251582145690918
    8. ' ' → logprob: -13.376582145690918
    9. '):
' → logprob: -14.001582145690918
    10. '<|end|>' → logprob: -14.001582145690918

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2322019338607788
    2. '<|end|>' → logprob: -1.7322019338607788
    3. '   ' → logprob: -4.107202053070068
    4. ' for' → logprob: -4.732202053070068
    5. '    ' → logprob: -5.857202053070068
    6. ' ' → logprob: -6.607202053070068
    7. '<|end|>' → logprob: -7.732202053070068
    8. '	   ' → logprob: -8.48220157623291
    9. '	for' → logprob: -9.48220157623291
    10. '	' → logprob: -10.10720157623291

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41664132475852966
    2. 'for' (adapté à ' for') → logprob: -1.166641354560852
    3. '   ' → logprob: -3.5416412353515625
    4. '	for' → logprob: -8.541641235351562
    5. ' ' → logprob: -9.166641235351562
    6. '       ' → logprob: -10.166641235351562
    7. '    ' → logprob: -11.041641235351562
    8. '  ' → logprob: -12.166641235351562
    9. '<|end|>' → logprob: -12.166641235351562
    10. '_for' → logprob: -14.916641235351562

Token 52: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5231486558914185
    2. ' j' → logprob: -0.8981486558914185
    3. '   ' → logprob: -11.523148536682129
    4. ' ' → logprob: -12.523148536682129
    5. 'range' → logprob: -12.898148536682129
    6. ' range' → logprob: -12.898148536682129
    7. '    ' → logprob: -13.148148536682129
    8. 'w' → logprob: -13.898148536682129
    9. ' w' → logprob: -14.148148536682129
    10. '  ' → logprob: -14.648148536682129

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006059859413653612
    2. 'in' → logprob: -5.131059646606445
    3. ' ' → logprob: -9.131059646606445
    4. '<|end|>' → logprob: -11.006059646606445
    5. '	in' → logprob: -13.131059646606445
    6. '  ' → logprob: -14.131059646606445
    7. '   ' → logprob: -14.506059646606445
    8. '    ' → logprob: -14.506059646606445
    9. ')' → logprob: -15.006059646606445
    10. '```' → logprob: -15.006059646606445

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759462714195251
    2. ' range' → logprob: -0.8259462714195251
    3. '(range' → logprob: -12.575945854187012
    4. ' w' → logprob: -13.825945854187012
    5. 'w' → logprob: -13.950945854187012
    6. '	range' → logprob: -14.575945854187012
    7. ' ' → logprob: -14.700945854187012
    8. ' xrange' → logprob: -14.950945854187012
    9. '   ' → logprob: -16.325946807861328
    10. ')' → logprob: -17.200946807861328

Token 55: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -3.082895273109898e-05
    2. '(' → logprob: -10.875030517578125
    3. ' (' → logprob: -12.875030517578125
    4. 'w' → logprob: -13.000030517578125
    5. '(s' → logprob: -13.250030517578125
    6. '(h' → logprob: -13.500030517578125
    7. '(len' → logprob: -13.750030517578125
    8. '(range' → logprob: -13.750030517578125
    9. '(width' → logprob: -14.500030517578125
    10. '   ' → logprob: -14.500030517578125

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026636465918272734
    2. '):
' → logprob: -6.252663612365723
    3. ':' → logprob: -8.377663612365723
    4. ')' → logprob: -8.502663612365723
    5. ' ):' → logprob: -8.752663612365723
    6. '+' → logprob: -9.627663612365723
    7. '   ' → logprob: -10.002663612365723
    8. '       ' → logprob: -11.502663612365723
    9. 'if' → logprob: -12.627663612365723
    10. '):
' → logprob: -12.752663612365723

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012078913860023022
    2. '       ' → logprob: -4.637078762054443
    3. ' if' → logprob: -6.262078762054443
    4. '<|end|>' → logprob: -8.512079238891602
    5. '        ' → logprob: -9.012079238891602
    6. '          ' → logprob: -11.012079238891602
    7. ' ' → logprob: -11.137079238891602
    8. '<|end|>' → logprob: -12.012079238891602
    9. '   ' → logprob: -12.137079238891602
    10. '```' → logprob: -12.137079238891602

Token 58: ' c' (ID: 274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15509124100208282
    2. ' if' → logprob: -2.0300912857055664
    3. '               ' → logprob: -4.655091285705566
    4. 'if' → logprob: -6.280091285705566
    5. '       ' → logprob: -8.405091285705566
    6. '            ' → logprob: -8.655091285705566
    7. '   ' → logprob: -8.780091285705566
    8. '```' → logprob: -9.530091285705566
    9. ' pos' → logprob: -9.780091285705566
    10. '          ' → logprob: -9.905091285705566

Token 59: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18012282252311707
    2. ' =' → logprob: -1.8051228523254395
    3. '=s' → logprob: -8.180122375488281
    4. '==' → logprob: -11.805122375488281
    5. '=i' → logprob: -11.805122375488281
    6. '=c' → logprob: -11.805122375488281
    7. ']=' → logprob: -11.805122375488281
    8. '=line' → logprob: -11.930122375488281
    9. ']' → logprob: -12.305122375488281
    10. '=input' → logprob: -12.430122375488281

Token 60: 'board' (ID: 3935)
  Prédit: 'board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0015128388768061996
    2. ' board' → logprob: -6.5015130043029785
    3. '   ' → logprob: -12.00151252746582
    4. '	board' → logprob: -13.62651252746582
    5. 'b' → logprob: -13.75151252746582
    6. '           ' → logprob: -14.37651252746582
    7. '(board' → logprob: -14.50151252746582
    8. 's' → logprob: -14.87651252746582
    9. 'boards' → logprob: -15.37651252746582
    10. ' ' → logprob: -16.62651252746582

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.337155355140567e-05
    2. '[j' → logprob: -9.875062942504883
    3. '```' → logprob: -12.750062942504883
    4. '[' → logprob: -12.875062942504883
    5. '   ' → logprob: -13.000062942504883
    6. '][' → logprob: -13.625062942504883
    7. '[I' → logprob: -14.000062942504883
    8. ' [' → logprob: -14.375062942504883
    9. 'i' → logprob: -14.625062942504883
    10. '       ' → logprob: -15.875062942504883

Token 62: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014372693374752998
    2. '[j' → logprob: -4.264372825622559
    3. ']' → logprob: -8.889372825622559
    4. ' ][' → logprob: -10.889372825622559
    5. '[i' → logprob: -11.014372825622559
    6. '"][' → logprob: -12.139372825622559
    7. '           ' → logprob: -12.264372825622559
    8. ']][' → logprob: -12.389372825622559
    9. '```' → logprob: -12.389372825622559
    10. '   ' → logprob: -12.514372825622559

Token 63: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.822646693966817e-06
    2. ' j' → logprob: -12.125007629394531
    3. '][' → logprob: -13.625007629394531
    4. '[j' → logprob: -14.500007629394531
    5. ']' → logprob: -15.500007629394531
    6. ':j' → logprob: -15.750007629394531
    7. '	j' → logprob: -16.62500762939453
    8. '   ' → logprob: -17.12500762939453
    9. ',j' → logprob: -17.12500762939453
    10. ' ' → logprob: -17.50000762939453

Token 64: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07745495438575745
    2. ')]' → logprob: -3.2024550437927246
    3. ']
' → logprob: -4.077455043792725
    4. '           ' → logprob: -4.827455043792725
    5. ')' → logprob: -5.327455043792725
    6. '])' → logprob: -6.077455043792725
    7. ')]
' → logprob: -7.577455043792725
    8. ')
' → logprob: -8.452454566955566
    9. '])
' → logprob: -8.452454566955566
    10. ' ]' → logprob: -8.577454566955566

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006298468913882971
    2. ' if' → logprob: -5.256298542022705
    3. '<|end|>' → logprob: -7.131298542022705
    4. '   ' → logprob: -9.756298065185547
    5. 'if' → logprob: -10.131298065185547
    6. ',' → logprob: -10.131298065185547
    7. '            
' → logprob: -10.506298065185547
    8. '<|end|>' → logprob: -10.881298065185547
    9. ':' → logprob: -11.006298065185547
    10. '
' → logprob: -11.256298065185547

Token 66: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2504000961780548
    2. ' if' → logprob: -1.7504000663757324
    3. '           ' → logprob: -3.1254000663757324
    4. 'pos' → logprob: -5.875400066375732
    5. '   ' → logprob: -7.375400066375732
    6. ' pos' → logprob: -8.00040054321289
    7. ' ' → logprob: -10.37540054321289
    8. '       ' → logprob: -11.37540054321289
    9. '          ' → logprob: -11.62540054321289
    10. 'i' → logprob: -11.87540054321289

Token 67: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.014197353273630142
    2. 'c' → logprob: -4.26419734954834
    3. ' not' → logprob: -10.88919734954834
    4. ' ' → logprob: -11.88919734954834
    5. ' s' → logprob: -12.01419734954834
    6. ' ' → logprob: -14.57669734954834
    7. ' (' → logprob: -14.82669734954834
    8. 's' → logprob: -15.01419734954834
    9. '(c' → logprob: -15.57669734954834
    10. '	c' → logprob: -15.88919734954834

Token 68: '!='' (ID: 58874)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.012492826208472252
    2. 'not' → logprob: -4.512492656707764
    3. ' in' → logprob: -6.887492656707764
    4. '==' → logprob: -8.262493133544922
    5. 'in' → logprob: -9.637493133544922
    6. ' ==' → logprob: -10.137493133544922
    7. '!=' → logprob: -10.512493133544922
    8. ':' → logprob: -11.137493133544922
    9. ')' → logprob: -11.762493133544922
    10. ' !=' → logprob: -12.762493133544922

Token 69: '_' (ID: 62)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4526181221008301
    2. '#' → logprob: -1.32761812210083
    3. '*' → logprob: -3.07761812210083
    4. ''' → logprob: -3.57761812210083
    5. ' ' → logprob: -4.70261812210083
    6. ' ':' → logprob: -4.70261812210083
    7. ' '' → logprob: -6.45261812210083
    8. '':' → logprob: -7.07761812210083
    9. ''#' → logprob: -7.20261812210083
    10. 's' → logprob: -7.32761812210083

Token 70: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030076393857598305
    2. ':
' → logprob: -3.780076503753662
    3. ' and' → logprob: -5.155076503753662
    4. '':' → logprob: -8.030076026916504
    5. 'and' → logprob: -8.280076026916504
    6. '):' → logprob: -8.530076026916504
    7. ' :' → logprob: -9.155076026916504
    8. '):
' → logprob: -9.780076026916504
    9. ':

' → logprob: -11.030076026916504
    10. ')' → logprob: -11.280076026916504

Token 71: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03439510613679886
    2. '           ' → logprob: -3.909395217895508
    3. ' and' → logprob: -5.034395217895508
    4. ':' → logprob: -6.284395217895508
    5. ' if' → logprob: -6.409395217895508
    6. ' pos' → logprob: -6.409395217895508
    7. '                
' → logprob: -8.159395217895508
    8. '            ' → logprob: -8.284395217895508
    9. '              ' → logprob: -8.534395217895508
    10. ' continue' → logprob: -8.534395217895508

Token 72: ' pos' (ID: 1253)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7006887197494507
    2. ' pos' → logprob: -0.7006887197494507
    3. 'if' → logprob: -6.20068883895874
    4. 'pos' (adapté à ' pos') → logprob: -6.20068883895874
    5. '                   ' → logprob: -6.32568883895874
    6. '               ' → logprob: -6.95068883895874
    7. ' positions' → logprob: -7.82568883895874
    8. '                ' → logprob: -9.325688362121582
    9. '   ' → logprob: -9.700688362121582
    10. ',pos' → logprob: -10.700688362121582

Token 73: '[c' (ID: 22840)
  Prédit: '.setdefault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.022431008517742157
    2. '[c' → logprob: -3.897430896759033
    3. '[(' → logprob: -6.397430896759033
    4. '.' → logprob: -8.647431373596191
    5. 'set' → logprob: -11.272431373596191
    6. '.c' → logprob: -11.647431373596191
    7. '[' → logprob: -12.272431373596191
    8. '.set' → logprob: -12.397431373596191
    9. '
' → logprob: -13.397431373596191
    10. ' .' → logprob: -13.397431373596191

Token 74: ']=(' (ID: 138510)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5810338258743286
    2. ']=' → logprob: -0.9560338258743286
    3. ']=(' → logprob: -2.956033706665039
    4. ']={' → logprob: -6.206033706665039
    5. '].' → logprob: -6.456033706665039
    6. ']+=' → logprob: -8.206033706665039
    7. '.setdefault' → logprob: -8.456033706665039
    8. ']==' → logprob: -10.706033706665039
    9. ' ]' → logprob: -10.831033706665039
    10. ']]=' → logprob: -10.956033706665039

Token 75: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009312293259426951
    2. ' i' → logprob: -7.750931262969971
    3. '(i' → logprob: -8.375930786132812
    4. ')' → logprob: -9.250930786132812
    5. ')i' → logprob: -9.375930786132812
    6. ' (' → logprob: -9.500930786132812
    7. '   ' → logprob: -11.750930786132812
    8. ',i' → logprob: -13.500930786132812
    9. '[i' → logprob: -13.875930786132812
    10. ' ' → logprob: -14.125930786132812

Token 76: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.3135907053947449
    2. ',' → logprob: -1.3135907649993896
    3. ' ,' → logprob: -8.063591003417969
    4. ',w' → logprob: -11.313591003417969
    5. ',
' → logprob: -14.313591003417969
    6. ' ' → logprob: -15.063591003417969
    7. 'j' → logprob: -15.188591003417969
    8. ')' → logprob: -15.938591003417969
    9. '   ' → logprob: -16.43859100341797
    10. ',)' → logprob: -17.18859100341797

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.300083648762666e-05
    2. ')
' → logprob: -10.000053405761719
    3. ' )' → logprob: -13.125053405761719
    4. '<|end|>' → logprob: -13.375053405761719
    5. ')}}' → logprob: -14.250053405761719
    6. '))' → logprob: -14.625053405761719
    7. ')#' → logprob: -14.750053405761719
    8. '   ' → logprob: -14.875053405761719
    9. '       ' → logprob: -15.000053405761719
    10. ')

' → logprob: -15.375053405761719

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.096195288002491
    2. ' for' → logprob: -3.2211952209472656
    3. '<|end|>' → logprob: -4.346195220947266
    4. '
' → logprob: -4.846195220947266
    5. 'for' → logprob: -5.096195220947266
    6. 's' → logprob: -5.596195220947266
    7. '    
' → logprob: -5.971195220947266
    8. ' s' → logprob: -6.471195220947266
    9. ' ' → logprob: -6.721195220947266
    10. '#' → logprob: -6.846195220947266

Token 79: ' ci' (ID: 7405)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1067569255828857
    2. '   ' → logprob: -1.7317569255828857
    3. ' for' → logprob: -1.8567569255828857
    4. 'p' → logprob: -2.8567569255828857
    5. 'found' → logprob: -3.1067569255828857
    6. 'idx' → logprob: -3.2317569255828857
    7. 'd' → logprob: -3.7317569255828857
    8. 'i' → logprob: -3.9817569255828857
    9. 'n' → logprob: -4.106757164001465
    10. 'x' → logprob: -4.481757164001465

Token 80: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5917489528656006
    2. '=' → logprob: -1.4667489528656006
    3. ',c' → logprob: -2.5917489528656006
    4. ' =' → logprob: -2.8417489528656006
    5. ',d' → logprob: -3.9667489528656006
    6. ',r' → logprob: -4.46674919128418
    7. ',pos' → logprob: -4.84174919128418
    8. ' ,' → logprob: -5.21674919128418
    9. ',current' → logprob: -5.59174919128418
    10. ',j' → logprob: -5.71674919128418

Token 81: 'j' (ID: 73)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026763495057821274
    2. '=c' → logprob: -4.526763439178467
    3. '=s' → logprob: -5.776763439178467
    4. 's' → logprob: -6.026763439178467
    5. ',c' → logprob: -6.526763439178467
    6. 'c' → logprob: -6.651763439178467
    7. ',' → logprob: -7.026763439178467
    8. '=j' → logprob: -7.026763439178467
    9. '=len' → logprob: -7.151763439178467
    10. ' =' → logprob: -7.526763439178467

Token 82: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4353611469268799
    2. ' =' → logprob: -1.0603611469268799
    3. ',' → logprob: -5.060360908508301
    4. ')' → logprob: -9.4353609085083
    5. '=input' → logprob: -10.3103609085083
    6. ' ,' → logprob: -11.3103609085083
    7. '=s' → logprob: -11.6853609085083
    8. ')=' → logprob: -11.8103609085083
    9. '=int' → logprob: -11.8103609085083
    10. '   ' → logprob: -12.0603609085083

Token 83: '0' (ID: 15)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00319482758641243
    2. ' pos' → logprob: -5.878194808959961
    3. '0' → logprob: -7.878194808959961
    4. '(pos' → logprob: -12.378194808959961
    5. '-' → logprob: -13.378194808959961
    6. '[pos' → logprob: -13.503194808959961
    7. '-pos' → logprob: -14.503194808959961
    8. ' ' → logprob: -14.503194808959961
    9. ',pos' → logprob: -14.628194808959961
    10. '	pos' → logprob: -14.878194808959961

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3385090231895447
    2. '<|end|>' → logprob: -1.3385090827941895
    3. ',len' → logprob: -4.5885090827941895
    4. '<|end|>' → logprob: -4.9635090827941895
    5. '0' → logprob: -5.8385090827941895
    6. ' ,' → logprob: -6.3385090827941895
    7. ')' → logprob: -7.5885090827941895
    8. '+' → logprob: -8.088508605957031
    9. '#' → logprob: -8.588508605957031
    10. ',next' → logprob: -8.713508605957031

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.0536883615423e-05
    2. '-' → logprob: -10.000080108642578
    3. ' ' → logprob: -10.375080108642578
    4. ' -' → logprob: -13.125080108642578
    5. 'len' → logprob: -14.125080108642578
    6. '1' → logprob: -14.750080108642578
    7. 's' → logprob: -14.875080108642578
    8. 'w' → logprob: -16.000080108642578
    9. '۰' → logprob: -17.375080108642578
    10. '<|end|>' → logprob: -17.750080108642578

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9473145604133606
    2. ' for' → logprob: -1.5723145008087158
    3. '
' → logprob: -1.8223145008087158
    4. '\n' → logprob: -2.697314500808716
    5. 'for' → logprob: -3.072314500808716
    6. '<|end|>' → logprob: -3.447314500808716
    7. ' ' → logprob: -3.947314500808716
    8. ' 
' → logprob: -4.447314739227295
    9. '+' → logprob: -4.697314739227295
    10. '    
' → logprob: -4.947314739227295

Token 87: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.810917317867279
    2. '   ' → logprob: -2.060917377471924
    3. ' ' → logprob: -2.185917377471924
    4. 'for' → logprob: -2.185917377471924
    5. ' 
' → logprob: -2.810917377471924
    6. '<|end|>' → logprob: -3.185917377471924
    7. '
' → logprob: -4.435917377471924
    8. '+' → logprob: -4.435917377471924
    9. ',' → logprob: -4.560917377471924
    10. '\n' → logprob: -4.810917377471924

Token 88: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019533861428499222
    2. ' for' → logprob: -4.019533634185791
    3. '   ' → logprob: -7.769533634185791
    4. 'i' → logprob: -8.51953411102295
    5. 'f' → logprob: -8.76953411102295
    6. 'found' → logprob: -9.26953411102295
    7. 'd' → logprob: -9.39453411102295
    8. 's' → logprob: -9.76953411102295
    9. 'ans' → logprob: -10.39453411102295
    10. 'while' → logprob: -10.51953411102295

Token 89: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18449559807777405
    2. ' =' → logprob: -1.8094955682754517
    3. '=[]' → logprob: -5.559495449066162
    4. ' +=' → logprob: -8.55949592590332
    5. '='' → logprob: -8.68449592590332
    6. '+=' → logprob: -9.18449592590332
    7. ',' → logprob: -9.80949592590332
    8. '=''' → logprob: -9.93449592590332
    9. '={}' → logprob: -9.93449592590332
    10. '=""' → logprob: -10.18449592590332

Token 90: '0' (ID: 15)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.32140642404556274
    2. '[]' → logprob: -1.696406364440918
    3. '0' → logprob: -2.946406364440918
    4. '"' → logprob: -3.946406364440918
    5. '''' → logprob: -4.071406364440918
    6. '[]
' → logprob: -7.446406364440918
    7. '[' → logprob: -7.821406364440918
    8. '["' → logprob: -8.071406364440918
    9. '""""' → logprob: -8.446406364440918
    10. ''s' → logprob: -8.696406364440918

Token 91: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1722959280014038
    2. ' for' → logprob: -1.9222959280014038
    3. '   ' → logprob: -4.547296047210693
    4. '
' → logprob: -7.672296047210693
    5. '	for' → logprob: -8.797295570373535
    6. 'while' → logprob: -8.797295570373535
    7. '<|end|>' → logprob: -9.422295570373535
    8. '\n' → logprob: -9.547295570373535
    9. ' 
' → logprob: -9.797295570373535
    10. ' ' → logprob: -9.922295570373535

Token 92: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12683570384979248
    2. ' for' → logprob: -2.251835823059082
    3. '   ' → logprob: -4.376835823059082
    4. 'i' → logprob: -8.751835823059082
    5. ' ' → logprob: -8.751835823059082
    6. '
' → logprob: -8.751835823059082
    7. 's' → logprob: -9.126835823059082
    8. 'while' → logprob: -9.251835823059082
    9. '<|end|>' → logprob: -9.376835823059082
    10. 'n' → logprob: -9.376835823059082

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00036144492332823575
    2. ' for' → logprob: -8.000361442565918
    3. 'f' → logprob: -11.000361442565918
    4. '<|end|>' → logprob: -13.125361442565918
    5. 's' → logprob: -13.750361442565918
    6. '+' → logprob: -13.875361442565918
    7. '```' → logprob: -13.875361442565918
    8. '
' → logprob: -14.250361442565918
    9. '   ' → logprob: -14.375361442565918
    10. 'n' → logprob: -14.625361442565918

Token 94: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3277266025543213
    2. 'c' → logprob: -1.3277266025543213
    3. ' i' → logprob: -5.577726364135742
    4. 'i' → logprob: -6.202726364135742
    5. 'ch' → logprob: -6.327726364135742
    6. ' s' → logprob: -6.702726364135742
    7. ' ch' → logprob: -6.827726364135742
    8. ' ' → logprob: -6.952726364135742
    9. ' _' → logprob: -7.327726364135742
    10. '_' → logprob: -7.452726364135742

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2880984842777252
    2. 'in' → logprob: -1.4130984544754028
    3. 's' → logprob: -5.038098335266113
    4. ' ' → logprob: -9.163098335266113
    5. 'i' → logprob: -9.288098335266113
    6. ' s' → logprob: -10.038098335266113
    7. '   ' → logprob: -10.163098335266113
    8. '  ' → logprob: -10.163098335266113
    9. ' i' → logprob: -10.413098335266113
    10. 'n' → logprob: -11.850598335266113

Token 96: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3868745267391205
    2. ' s' → logprob: -1.1368745565414429
    3. ' ' → logprob: -13.511874198913574
    4. ' range' → logprob: -13.761874198913574
    5. 'range' → logprob: -14.511874198913574
    6. '   ' → logprob: -15.261874198913574
    7. '(s' → logprob: -16.26187515258789
    8. 'c' → logprob: -16.63687515258789
    9. ''s' → logprob: -17.26187515258789
    10. 't' → logprob: -17.26187515258789

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.6789137084269896e-05
    2. ' :' → logprob: -10.50003719329834
    3. ':def' → logprob: -13.00003719329834
    4. ':
' → logprob: -13.37503719329834
    5. ',:' → logprob: -14.25003719329834
    6. ':int' → logprob: -14.25003719329834
    7. '=' → logprob: -15.12503719329834
    8. ':index' → logprob: -15.12503719329834
    9. ':**' → logprob: -15.12503719329834
    10. ':user' → logprob: -15.25003719329834

Token 98: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.3675687313079834
    2. '       ' → logprob: -1.3675687313079834
    3. '   ' → logprob: -1.3675687313079834
    4. ',' → logprob: -2.4925687313079834
    5. '<|end|>' → logprob: -2.7425687313079834
    6. ' ' → logprob: -3.6175687313079834
    7. '  ' → logprob: -4.6175689697265625
    8. '<|end|>' → logprob: -4.7425689697265625
    9. 'n' → logprob: -4.9925689697265625
    10. '```' → logprob: -5.1175689697265625

Token 99: ' ni' (ID: 2565)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.720041811466217
    2. 'ni' (adapté à ' ni') → logprob: -1.3450417518615723
    3. ' ti' → logprob: -2.2200417518615723
    4. ' ni' → logprob: -2.7200417518615723
    5. 'x' → logprob: -3.5950417518615723
    6. '       ' → logprob: -3.8450417518615723
    7. 'pi' → logprob: -4.345041751861572
    8. ' if' → logprob: -5.595041751861572
    9. ' x' → logprob: -5.845041751861572
    10. 'if' → logprob: -5.970041751861572

Token 100: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.1321638971567154
    2. ',c' → logprob: -2.1321640014648438
    3. ',' → logprob: -5.257164001464844
    4. ' ,' → logprob: -12.007164001464844
    5. ',pos' → logprob: -14.007164001464844
    6. ',d' → logprob: -14.382164001464844
    7. ',t' → logprob: -14.507164001464844
    8. '=c' → logprob: -14.507164001464844
    9. ',new' → logprob: -14.507164001464844
    10. '=' → logprob: -14.632164001464844

Token 101: 'j' (ID: 73)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4403510093688965
    2. ',i' → logprob: -2.0653510093688965
    3. ',j' → logprob: -2.4403510093688965
    4. ',pos' → logprob: -2.9403510093688965
    5. 'i' → logprob: -3.0653510093688965
    6. ',n' → logprob: -3.8153510093688965
    7. '=' → logprob: -5.0653510093688965
    8. ' =' → logprob: -5.1903510093688965
    9. 'j' → logprob: -5.8153510093688965
    10. ',w' → logprob: -6.9403510093688965

Token 102: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036205046344548464
    2. ' =' → logprob: -5.628620624542236
    3. ',' → logprob: -11.753620147705078
    4. '=
' → logprob: -13.503620147705078
    5. '=user' → logprob: -13.503620147705078
    6. '=int' → logprob: -13.753620147705078
    7. '=

' → logprob: -13.753620147705078
    8. '=end' → logprob: -14.253620147705078
    9. ')=' → logprob: -14.253620147705078
    10. '=num' → logprob: -14.378620147705078

Token 103: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.005961510818451643
    2. ' pos' → logprob: -5.1309614181518555
    3. '0' → logprob: -10.755961418151855
    4. '   ' → logprob: -11.630961418151855
    5. 'position' → logprob: -14.755961418151855
    6. '(pos' → logprob: -14.880961418151855
    7. '	pos' → logprob: -15.130961418151855
    8. 'ci' → logprob: -15.505961418151855
    9. 'po' → logprob: -15.505961418151855
    10. ' ' → logprob: -15.630961418151855

Token 104: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.625000953674316
    3. 'c' → logprob: -15.500000953674316
    4. '.get' → logprob: -16.25
    5. '(c' → logprob: -16.75
    6. '[C' → logprob: -17.125
    7. '```' → logprob: -17.25
    8. '[f' → logprob: -17.75
    9. ')c' → logprob: -18.375
    10. ' [' → logprob: -18.75

Token 105: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018954371334984899
    2. ']
' → logprob: -6.376895427703857
    3. '][' → logprob: -8.876895904541016
    4. ' ]' → logprob: -10.501895904541016
    5. '[' → logprob: -11.376895904541016
    6. ')]' → logprob: -12.751895904541016
    7. ']
' → logprob: -12.751895904541016
    8. ']

' → logprob: -13.376895904541016
    9. '<|end|>' → logprob: -13.376895904541016
    10. '];' → logprob: -14.001895904541016

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4516840875148773
    2. '
' → logprob: -1.0766841173171997
    3. 'res' → logprob: -4.57668399810791
    4. '<|end|>' → logprob: -5.20168399810791
    5. '   ' → logprob: -5.82668399810791
    6. '        
' → logprob: -6.32668399810791
    7. ' res' → logprob: -6.95168399810791
    8. '<|end|>' → logprob: -8.20168399810791
    9. '```' → logprob: -8.32668399810791
    10. '
' → logprob: -8.70168399810791

Token 107: ' res' (ID: 694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41749897599220276
    2. 'res' (adapté à ' res') → logprob: -1.1674989461898804
    3. ' res' → logprob: -3.54249906539917
    4. '   ' → logprob: -7.29249906539917
    5. '
' → logprob: -7.66749906539917
    6. '```' → logprob: -10.792498588562012
    7. '	res' → logprob: -11.792498588562012
    8. '        
' → logprob: -12.042498588562012
    9. '      ' → logprob: -12.167498588562012
    10. '           ' → logprob: -12.167498588562012

Token 108: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3873105049133301
    2. ' +=' → logprob: -1.13731050491333
    3. ']+=' → logprob: -8.512310028076172
    4. '+=(' → logprob: -8.762310028076172
    5. '+' → logprob: -10.012310028076172
    6. '+='' → logprob: -11.637310028076172
    7. '+="' → logprob: -11.637310028076172
    8. ' ' → logprob: -12.637310028076172
    9. '   ' → logprob: -12.762310028076172
    10. '```' → logprob: -12.887310028076172

Token 109: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0009149204124696553
    2. ' abs' → logprob: -7.000915050506592
    3. '(abs' → logprob: -13.250914573669434
    4. '   ' → logprob: -13.375914573669434
    5. 'max' → logprob: -17.00091552734375
    6. '       ' → logprob: -17.87591552734375
    7. '.abs' → logprob: -18.25091552734375
    8. ' ' → logprob: -18.75091552734375
    9. '```' → logprob: -19.00091552734375
    10. '    ' → logprob: -19.50091552734375

Token 110: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16023123264312744
    2. '(ci' → logprob: -1.9102312326431274
    3. '(n' → logprob: -12.160231590270996
    4. '(ai' → logprob: -13.785231590270996
    5. '(pi' → logprob: -15.160231590270996
    6. '((' → logprob: -16.28523063659668
    7. '(si' → logprob: -16.53523063659668
    8. '(nx' → logprob: -16.66023063659668
    9. '(fi' → logprob: -16.78523063659668
    10. '(li' → logprob: -16.91023063659668

Token 111: 'ni' (ID: 1906)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.04950380697846413
    2. 'ni' → logprob: -3.049503803253174
    3. '(ci' → logprob: -7.674503803253174
    4. ' ci' → logprob: -7.799503803253174
    5. '(' → logprob: -11.049504280090332
    6. '   ' → logprob: -12.049504280090332
    7. ' ni' → logprob: -12.299504280090332
    8. '-ci' → logprob: -13.049504280090332
    9. '_ci' → logprob: -13.049504280090332
    10. '

' → logprob: -13.549504280090332

Token 112: '-ci' (ID: 27301)
  Prédit: '-ci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ci' → logprob: -0.06228337436914444
    2. ' -' → logprob: -2.8122832775115967
    3. '-' → logprob: -8.062283515930176
    4. '-C' → logprob: -15.562283515930176
    5. '-)' → logprob: -16.93728256225586
    6. '```' → logprob: -17.43728256225586
    7. '-cu' → logprob: -17.43728256225586
    8. '-ni' → logprob: -17.68728256225586
    9. ' ci' → logprob: -17.81228256225586
    10. ')' → logprob: -17.93728256225586

Token 113: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.011057606898248196
    2. ')' → logprob: -4.511057376861572
    3. ' )' → logprob: -11.63605785369873
    4. ')+(' → logprob: -14.26105785369873
    5. '+' → logprob: -15.38605785369873
    6. ')+"' → logprob: -16.511056900024414
    7. '")+' → logprob: -16.511056900024414
    8. ']+' → logprob: -17.511056900024414
    9. '))+' → logprob: -18.261056900024414
    10. ')+'' → logprob: -18.261056900024414

Token 114: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -6.2729995988775045e-06
    2. ' abs' → logprob: -12.000006675720215
    3. '(abs' → logprob: -20.3750057220459
    4. '.abs' → logprob: -21.0000057220459
    5. '_abs' → logprob: -23.3750057220459
    6. '   ' → logprob: -23.6250057220459
    7. 'absor' → logprob: -24.0000057220459
    8. '```' → logprob: -24.0000057220459
    9. 'Abs' → logprob: -24.6250057220459
    10. 'ans' → logprob: -24.7500057220459

Token 115: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003850325592793524
    2. '(' → logprob: -7.87538480758667
    3. '((' → logprob: -12.500385284423828
    4. '(abs' → logprob: -14.750385284423828
    5. ' (' → logprob: -15.125385284423828
    6. '(N' → logprob: -16.500385284423828
    7. '(nn' → logprob: -16.875385284423828
    8. '(j' → logprob: -17.125385284423828
    9. 'nj' → logprob: -17.125385284423828
    10. '(norm' → logprob: -17.125385284423828

Token 116: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002015139180002734
    2. 'w' → logprob: -9.500201225280762
    3. '-j' → logprob: -9.500201225280762
    4. '_j' → logprob: -10.625201225280762
    5. ' -' → logprob: -12.125201225280762
    6. 'n' → logprob: -12.375201225280762
    7. '-n' → logprob: -12.625201225280762
    8. 'nj' → logprob: -12.750201225280762
    9. '-' → logprob: -12.875201225280762
    10. ' j' → logprob: -13.375201225280762

Token 117: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.04107653349637985
    2. '-ci' → logprob: -3.791076421737671
    3. ' -' → logprob: -4.04107666015625
    4. '-' → logprob: -9.29107666015625
    5. '-cn' → logprob: -14.04107666015625
    6. '-C' → logprob: -14.66607666015625
    7. '-cu' → logprob: -14.79107666015625
    8. '-n' → logprob: -16.41607666015625
    9. 'cj' → logprob: -16.41607666015625
    10. ' ' → logprob: -16.66607666015625

Token 118: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0564331205387134e-05
    2. ')' → logprob: -11.87501049041748
    3. '<|end|>' → logprob: -12.87501049041748
    4. 'nj' → logprob: -14.62501049041748
    5. '_j' → logprob: -15.62501049041748
    6. ' j' → logprob: -16.125011444091797
    7. '[j' → logprob: -16.750011444091797
    8. 'js' → logprob: -17.000011444091797
    9. '```' → logprob: -17.000011444091797
    10. '<|end|>' → logprob: -17.250011444091797

Token 119: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20993417501449585
    2. ')
' → logprob: -1.7099342346191406
    3. '       ' → logprob: -4.834934234619141
    4. ')c' → logprob: -8.08493423461914
    5. '   ' → logprob: -9.45993423461914
    6. '
' → logprob: -9.70993423461914
    7. ')\' → logprob: -10.83493423461914
    8. 'ci' → logprob: -11.20993423461914
    9. ')
' → logprob: -11.58493423461914
    10. '),' → logprob: -11.58493423461914

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.250014305114746
    3. '+' → logprob: -15.500014305114746
    4. '(' → logprob: -16.00001335144043
    5. '   ' → logprob: -16.56251335144043
    6. '2' → logprob: -16.75001335144043
    7. '
' → logprob: -17.06251335144043
    8. 'len' → logprob: -17.18751335144043
    9. 'press' → logprob: -17.18751335144043
    10. 'int' → logprob: -17.25001335144043

Token 121: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012687986716628075
    2. '       ' → logprob: -4.637688159942627
    3. '   ' → logprob: -6.387688159942627
    4. '
' → logprob: -7.637688159942627
    5. '        
' → logprob: -8.262687683105469
    6. 'ci' → logprob: -8.637687683105469
    7. '    
' → logprob: -8.762687683105469
    8. '  
' → logprob: -9.262687683105469
    9. '(ci' → logprob: -10.512687683105469
    10. ' 
' → logprob: -11.762687683105469

Token 122: '       ' (ID: 309)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.525003969669342
    2. '   ' → logprob: -2.0250039100646973
    3. '       ' → logprob: -2.1500039100646973
    4. '
' → logprob: -2.1500039100646973
    5. '(ci' → logprob: -3.2750039100646973
    6. ' ci' → logprob: -5.650003910064697
    7. '    
' → logprob: -7.400003910064697
    8. '        
' → logprob: -7.775003910064697
    9. '_ci' → logprob: -8.150004386901855
    10. '
' → logprob: -8.400004386901855

Token 123: ' ci' (ID: 7405)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' (adapté à ' ci') → logprob: -2.3199920178740285e-05
    2. ' ci' → logprob: -11.375022888183594
    3. '
' → logprob: -11.625022888183594
    4. '(ci' → logprob: -13.375022888183594
    5. '   ' → logprob: -14.000022888183594
    6. '_ci' → logprob: -15.625022888183594
    7. '-ci' → logprob: -16.500022888183594
    8. 'cii' → logprob: -17.250022888183594
    9. '       ' → logprob: -17.750022888183594
    10. '    
' → logprob: -18.875022888183594

Token 124: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30812227725982666
    2. '=' → logprob: -1.5581222772598267
    3. ',n' → logprob: -3.058122158050537
    4. ',c' → logprob: -5.433122158050537
    5. '=n' → logprob: -5.808122158050537
    6. '=c' → logprob: -8.558122634887695
    7. ',j' → logprob: -9.683122634887695
    8. ' =' → logprob: -10.933122634887695
    9. '=com' → logprob: -12.308122634887695
    10. ',num' → logprob: -12.558122634887695

Token 125: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.840432565193623e-05
    2. ',j' → logprob: -10.000088691711426
    3. '=' → logprob: -10.500088691711426
    4. 'nj' → logprob: -11.875088691711426
    5. '=j' → logprob: -12.375088691711426
    6. '_j' → logprob: -12.875088691711426
    7. ',' → logprob: -14.250088691711426
    8. 'dj' → logprob: -15.125088691711426
    9. 'cj' → logprob: -15.500088691711426
    10. 'sj' → logprob: -15.500088691711426

Token 126: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.690834273584187e-05
    2. '=n' → logprob: -10.50003719329834
    3. '=c' → logprob: -12.50003719329834
    4. ' =' → logprob: -13.62503719329834
    5. '=i' → logprob: -14.37503719329834
    6. '=

' → logprob: -14.50003719329834
    7. '=j' → logprob: -14.62503719329834
    8. '=s' → logprob: -14.62503719329834
    9. '=num' → logprob: -14.75003719329834
    10. '=int' → logprob: -15.25003719329834

Token 127: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -8.180258191714529e-06
    2. ' ni' → logprob: -11.750008583068848
    3. 'nj' → logprob: -15.500008583068848
    4. '(' → logprob: -17.75000762939453
    5. '   ' → logprob: -17.75000762939453
    6. 'nii' → logprob: -18.87500762939453
    7. 'n' → logprob: -19.87500762939453
    8. '```' → logprob: -20.12500762939453
    9. '-ni' → logprob: -20.25000762939453
    10. 'ny' → logprob: -20.37500762939453

Token 128: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.003861831733956933
    2. ',' → logprob: -5.878861904144287
    3. ',j' → logprob: -6.878861904144287
    4. ',c' → logprob: -11.253861427307129
    5. ' ,' → logprob: -11.378861427307129
    6. ',
' → logprob: -14.003861427307129
    7. ',next' → logprob: -15.628861427307129
    8. ',y' → logprob: -16.003862380981445
    9. ',v' → logprob: -16.003862380981445
    10. ',m' → logprob: -16.003862380981445

Token 129: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.088346359931165e-07
    2. 'w' → logprob: -14.250000953674316
    3. 'nj' → logprob: -16.375
    4. 'dj' → logprob: -17.0
    5. '_j' → logprob: -17.125
    6. ' j' → logprob: -17.125
    7. 'jw' → logprob: -17.25
    8. 'wj' → logprob: -17.375
    9. '	j' → logprob: -18.125
    10. '```' → logprob: -18.625

Token 130: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0052735996432602406
    2. '   ' → logprob: -5.505273818969727
    3. ' print' → logprob: -7.255273818969727
    4. '<|end|>' → logprob: -8.005273818969727
    5. '
' → logprob: -9.130273818969727
    6. '```' → logprob: -11.130273818969727
    7. '	print' → logprob: -11.880273818969727
    8. '#print' → logprob: -12.005273818969727
    9. '(print' → logprob: -12.380273818969727
    10. ')' → logprob: -12.630273818969727

Token 131: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006815423723310232
    2. '   ' → logprob: -5.131815433502197
    3. '<|end|>' → logprob: -7.756815433502197
    4. ' print' → logprob: -8.006814956665039
    5. '
' → logprob: -9.506814956665039
    6. '```' → logprob: -11.131814956665039
    7. '#print' → logprob: -11.631814956665039
    8. '\n' → logprob: -11.756814956665039
    9. '(print' → logprob: -12.381814956665039
    10. '    
' → logprob: -12.506814956665039

Token 132: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0013423740165308118
    2. '   ' → logprob: -7.001342296600342
    3. ' print' → logprob: -7.751342296600342
    4. '```' → logprob: -14.6263427734375
    5. '	print' → logprob: -16.6263427734375
    6. '
' → logprob: -17.5013427734375
    7. '#print' → logprob: -18.3763427734375
    8. '    
' → logprob: -18.6263427734375
    9. '(print' → logprob: -19.8763427734375
    10. '``' → logprob: -20.0013427734375

Token 133: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -9.925185440806672e-05
    2. '(' → logprob: -9.250099182128906
    3. ' (' → logprob: -12.875099182128906
    4. 'res' → logprob: -14.500099182128906
    5. '(
' → logprob: -17.375099182128906
    6. '()' → logprob: -18.000099182128906
    7. '(r' → logprob: -18.500099182128906
    8. '(f' → logprob: -18.500099182128906
    9. '(re' → logprob: -18.500099182128906
    10. ' res' → logprob: -18.625099182128906

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ' )' → logprob: -11.62501049041748
    3. ')`' → logprob: -14.62501049041748
    4. '))' → logprob: -14.87501049041748
    5. '`)' → logprob: -15.62501049041748
    6. '())' → logprob: -16.125009536743164
    7. '')' → logprob: -16.875009536743164
    8. ')}' → logprob: -17.000009536743164
    9. ')
' → logprob: -17.250009536743164
    10. ')#' → logprob: -17.500009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 132
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 116
Précision stricte (1ère position): 51.52%
Précision adaptée (1ère position): 55.30%
Précision (top 10): 87.88%
================================================================================
