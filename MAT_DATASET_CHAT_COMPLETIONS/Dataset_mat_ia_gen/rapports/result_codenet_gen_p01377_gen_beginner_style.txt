================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()

def is_palindrome_candidate(c1, c2):
    # Retourne vrai si c1 et c2 peuvent former un couple symétrique sans substitution
    pairs = [('i','i'), ('w','w'), ('(',')'), (')','(')]
    return (c1, c2) in pairs

def cost_to_match(c1, c2):
    # Calcule le coût minimal pour rendre c1 et c2 symétriques par substitution
    pairs = [('i','i'), ('w','w'), ('(',')'), (')','(')]
    if c1 == c2 and (c1 == 'i' or c1 == 'w'):
        return 0
    if (c1, c2) in pairs:
        return 0
    # Sinon, il faut au moins une substitution. On essaie toutes combinaisons possibles.
    chars = ['i','w','(',')']
    min_cost = 2  # On peut changer les deux caractères au max
    for a in chars:
        for b in chars:
            if (a,b) in pairs or (a==b and (a=='i' or a=='w')):
                cost = 0
                if c1 != a:
                    cost +=1
                if c2 != b:
                    cost +=1
                if cost < min_cost:
                    min_cost = cost
    return min_cost

n = len(s)
res = 0
for i in range(n // 2):
    res += cost_to_match(s[i], s[n-1 - i])

# Si la longueur est impaire, vérifier que le milieu est i ou w, sinon 1 substitution
if n %2 ==1:
    mid = s[n//2]
    if mid != 'i' and mid != 'w':
        res +=1

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012582997791469097
    2. '('' → logprob: -5.262582778930664
    3. ''' → logprob: -5.387582778930664
    4. '()' → logprob: -7.137582778930664
    5. '"' → logprob: -7.262582778930664
    6. '`' → logprob: -7.387582778930664
    7. '("("' → logprob: -8.137582778930664
    8. '```' → logprob: -9.137582778930664
    9. '(
' → logprob: -9.262582778930664
    10. ' (' → logprob: -10.512582778930664

Token 4: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012099409475922585
    2. '+' → logprob: -4.887099266052246
    3. 'if' → logprob: -6.637099266052246
    4. ':' → logprob: -7.262099266052246
    5. '.strip' → logprob: -7.262099266052246
    6. '=' → logprob: -7.387099266052246
    7. '[' → logprob: -7.887099266052246
    8. 'print' → logprob: -9.262099266052246
    9. '[:]' → logprob: -9.262099266052246
    10. '*' → logprob: -9.387099266052246

Token 5: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0158064104616642
    2. ' space' → logprob: -5.140806198120117
    3. ' my' → logprob: -5.640806198120117
    4. ' s' → logprob: -6.265806198120117
    5. '_' → logprob: -7.140806198120117
    6. ' f' → logprob: -7.265806198120117
    7. ' main' → logprob: -7.390806198120117
    8. ' a' → logprob: -8.140806198120117
    9. ' factorial' → logprob: -8.390806198120117
    10. ' add' → logprob: -8.765806198120117

Token 6: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.10517065227031708
    2. '_' → logprob: -2.855170726776123
    3. '_prime' → logprob: -3.855170726776123
    4. '_valid' → logprob: -4.730170726776123
    5. '_p' → logprob: -5.480170726776123
    6. '_v' → logprob: -5.980170726776123
    7. ' _' → logprob: -6.980170726776123
    8. '_space' → logprob: -7.730170726776123
    9. '_alpha' → logprob: -7.730170726776123
    10. '_s' → logprob: -7.730170726776123

Token 7: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0004013561410829425
    2. 'ind' → logprob: -8.000401496887207
    3. 'i' → logprob: -10.000401496887207
    4. '_' → logprob: -11.500401496887207
    5. '```' → logprob: -12.000401496887207
    6. 'in' → logprob: -13.750401496887207
    7. 'ndrome' → logprob: -14.000401496887207
    8. 'e' → logprob: -14.375401496887207
    9. '(i' → logprob: -15.375401496887207
    10. 'a' → logprob: -15.500401496887207

Token 8: '_candidate' (ID: 158186)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.051222145557403564
    2. '_' → logprob: -3.676222085952759
    3. '(s' → logprob: -3.801222085952759
    4. 's' → logprob: -6.551222324371338
    5. '_(' → logprob: -7.426222324371338
    6. ' (' → logprob: -9.67622184753418
    7. '_s' → logprob: -9.80122184753418
    8. '("("' → logprob: -9.92622184753418
    9. '(_' → logprob: -10.55122184753418
    10. '((' → logprob: -11.92622184753418

Token 9: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06451226025819778
    2. '(s' → logprob: -3.064512252807617
    3. 's' → logprob: -4.189512252807617
    4. '_' → logprob: -8.189512252807617
    5. ' (' → logprob: -8.564512252807617
    6. '("("' → logprob: -9.814512252807617
    7. '_s' → logprob: -10.814512252807617
    8. '_(' → logprob: -10.939512252807617
    9. '(a' → logprob: -11.314512252807617
    10. '((' → logprob: -11.939512252807617

Token 10: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038652776274830103
    2. ')' → logprob: -5.8788652420043945
    3. '):
' → logprob: -7.8788652420043945
    4. 'on' → logprob: -8.753865242004395
    5. ':' → logprob: -8.878865242004395
    6. 'andidate' → logprob: -8.878865242004395
    7. 'h' → logprob: -9.628865242004395
    8. 's' → logprob: -10.128865242004395
    9. '):

' → logprob: -10.128865242004395
    10. 'har' → logprob: -10.378865242004395

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01955222338438034
    2. '):' → logprob: -4.144552230834961
    3. ',c' → logprob: -5.894552230834961
    4. ' ,' → logprob: -7.894552230834961
    5. ')' → logprob: -8.144552230834961
    6. 's' → logprob: -10.644552230834961
    7. ':' → logprob: -11.019552230834961
    8. ',a' → logprob: -11.894552230834961
    9. ',p' → logprob: -12.144552230834961
    10. '=' → logprob: -12.519552230834961

Token 12: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.25198447704315186
    2. 'c' → logprob: -1.5019844770431519
    3. ' ' → logprob: -10.126984596252441
    4. 's' → logprob: -11.876984596252441
    5. ' s' → logprob: -12.501984596252441
    6. '  ' → logprob: -13.126984596252441
    7. '   ' → logprob: -14.251984596252441
    8. ' ' → logprob: -14.501984596252441
    9. '	c' → logprob: -14.751984596252441
    10. ')' → logprob: -14.751984596252441

Token 13: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.46290919184684753
    2. '1' → logprob: -1.21290922164917
    3. '):' → logprob: -2.71290922164917
    4. ')' → logprob: -6.21290922164917
    5. 'c' → logprob: -6.21290922164917
    6. 's' → logprob: -7.08790922164917
    7. 'h' → logprob: -7.21290922164917
    8. ',' → logprob: -8.212908744812012
    9. 'q' → logprob: -8.587908744812012
    10. '):
' → logprob: -8.712908744812012

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028709694743156433
    2. ')' → logprob: -6.377871036529541
    3. '):
' → logprob: -7.127871036529541
    4. ':' → logprob: -8.127870559692383
    5. ',' → logprob: -10.627870559692383
    6. ' ):' → logprob: -10.752870559692383
    7. '):
' → logprob: -11.877870559692383
    8. '   ' → logprob: -12.252870559692383
    9. ' :' → logprob: -13.502870559692383
    10. '=' → logprob: -13.502870559692383

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005161650944501162
    2. ':' → logprob: -5.630161762237549
    3. ' return' → logprob: -6.755161762237549
    4. ' ' → logprob: -8.63016128540039
    5. ':return' → logprob: -10.00516128540039
    6. '  ' → logprob: -10.13016128540039
    7. '    ' → logprob: -10.75516128540039
    8. 'return' → logprob: -10.88016128540039
    9. ' :' → logprob: -11.13016128540039
    10. '):' → logprob: -11.25516128540039

Token 16: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06607336550951004
    2. ' return' → logprob: -3.316073417663574
    3. 'return' → logprob: -3.691073417663574
    4. ' if' → logprob: -6.691073417663574
    5. 'if' → logprob: -7.816073417663574
    6. 's' → logprob: -7.816073417663574
    7. '```' → logprob: -8.566073417663574
    8. ' ' → logprob: -8.941073417663574
    9. '    ' → logprob: -9.441073417663574
    10. ' s' → logprob: -9.816073417663574

Token 17: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.45378783345222473
    2. ' return' → logprob: -1.2037878036499023
    3. '   ' → logprob: -2.9537878036499023
    4. ' if' → logprob: -4.953787803649902
    5. 'if' → logprob: -5.453787803649902
    6. 'v' → logprob: -7.203787803649902
    7. ' ' → logprob: -9.703787803649902
    8. '  ' → logprob: -9.703787803649902
    9. 'def' → logprob: -9.703787803649902
    10. '    ' → logprob: -9.953787803649902

Token 18: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.060154303908348083
    2. 'ne' → logprob: -3.8101541996002197
    3. 'ner' → logprob: -3.9351541996002197
    4. 't' → logprob: -4.810154438018799
    5. 'u' → logprob: -5.560154438018799
    6. 's' → logprob: -6.560154438018799
    7. 'e' → logprob: -7.185154438018799
    8. ' n' → logprob: -7.185154438018799
    9. '   ' → logprob: -7.435154438018799
    10. ' ' → logprob: -8.06015396118164

Token 19: ' vrai' (ID: 42682)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.028004586696624756
    2. 'True' → logprob: -3.6530046463012695
    3. ' c' → logprob: -7.1530046463012695
    4. ' ' → logprob: -7.4030046463012695
    5. 'c' → logprob: -9.52800464630127
    6. ' False' → logprob: -9.65300464630127
    7. ' abs' → logprob: -9.90300464630127
    8. '  ' → logprob: -10.52800464630127
    9. 's' → logprob: -10.77800464630127
    10. '(True' → logprob: -10.90300464630127

Token 20: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8065045475959778
    2. ' if' → logprob: -1.056504487991333
    3. ' True' → logprob: -2.556504487991333
    4. 's' → logprob: -2.556504487991333
    5. ' si' → logprob: -3.681504487991333
    6. ' s' → logprob: -5.056504726409912
    7. 'e' → logprob: -5.181504726409912
    8. '   ' → logprob: -5.806504726409912
    9. '  ' → logprob: -6.181504726409912
    10. '<|end|>' → logprob: -6.431504726409912

Token 21: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1625569611787796
    2. ' c' → logprob: -2.0375568866729736
    3. 'abs' → logprob: -4.537557125091553
    4. ' abs' → logprob: -4.912557125091553
    5. ' ' → logprob: -7.662557125091553
    6. ' (' → logprob: -8.162556648254395
    7. '   ' → logprob: -8.287556648254395
    8. ' les' → logprob: -9.412556648254395
    9. 'les' → logprob: -9.537556648254395
    10. '  ' → logprob: -9.537556648254395

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0323994979262352
    2. ' c' → logprob: -4.157399654388428
    3. '2' → logprob: -5.282399654388428
    4. 'e' → logprob: -5.657399654388428
    5. 'es' → logprob: -5.782399654388428
    6. ''' → logprob: -6.407399654388428
    7. 'c' → logprob: -6.532399654388428
    8. ''est' → logprob: -7.407399654388428
    9. 'a' → logprob: -9.03239917755127
    10. 's' → logprob: -9.03239917755127

Token 23: ' et' (ID: 859)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4823324978351593
    2. '==' → logprob: -0.9823324680328369
    3. ' et' → logprob: -5.857332706451416
    4. 'et' → logprob: -6.107332706451416
    5. '.lower' → logprob: -7.732332706451416
    6. '=' → logprob: -7.857332706451416
    7. ' ' → logprob: -8.107332229614258
    8. '   ' → logprob: -8.107332229614258
    9. ' est' → logprob: -8.232332229614258
    10. 's' → logprob: -8.232332229614258

Token 24: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.016795074567198753
    2. 'c' → logprob: -4.1417951583862305
    3. ' ' → logprob: -7.7667951583862305
    4. 's' → logprob: -8.39179515838623
    5. ' s' → logprob: -10.26679515838623
    6. '   ' → logprob: -10.64179515838623
    7. '  ' → logprob: -10.64179515838623
    8. ' ' → logprob: -12.20429515838623
    9. ''' → logprob: -13.20429515838623
    10. '```' → logprob: -13.20429515838623

Token 25: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010568645084276795
    2. 'c' → logprob: -7.126056671142578
    3. ''' → logprob: -9.251056671142578
    4. '```' → logprob: -10.501056671142578
    5. '`' → logprob: -10.751056671142578
    6. '   ' → logprob: -10.876056671142578
    7. ' c' → logprob: -11.501056671142578
    8. 'o' → logprob: -11.751056671142578
    9. 'e' → logprob: -11.876056671142578
    10. ' ' → logprob: -11.876056671142578

Token 26: ' peuvent' (ID: 21321)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.4847787618637085
    2. 's' → logprob: -1.1097787618637085
    3. ' peuvent' → logprob: -4.109778881072998
    4. 'pe' → logprob: -4.609778881072998
    5. 'ont' → logprob: -4.734778881072998
    6. ' are' → logprob: -4.859778881072998
    7. '#' → logprob: -5.734778881072998
    8. ' for' → logprob: -7.109778881072998
    9. ' ont' → logprob: -7.234778881072998
    10. ' pourraient' → logprob: -7.484778881072998

Token 27: ' former' (ID: 9254)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.8271628022193909
    2. 'être' → logprob: -1.202162742614746
    3. ''être' → logprob: -2.827162742614746
    4. ' be' → logprob: -3.452162742614746
    5. ' ' → logprob: -3.577162742614746
    6. ' s' → logprob: -4.077162742614746
    7. 's' → logprob: -4.202162742614746
    8. ' etre' → logprob: -4.202162742614746
    9. 'former' → logprob: -4.452162742614746
    10. 'êtres' → logprob: -4.577162742614746

Token 28: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5326430797576904
    2. ' un' → logprob: -1.0326430797576904
    3. ' ' → logprob: -3.6576430797576904
    4. ' a' → logprob: -4.6576433181762695
    5. 'une' → logprob: -5.5326433181762695
    6. ' le' → logprob: -5.7826433181762695
    7. 's' → logprob: -6.0326433181762695
    8. ' la' → logprob: -6.2826433181762695
    9. 'e' → logprob: -6.5326433181762695
    10. 'a' → logprob: -6.5326433181762695

Token 29: ' couple' (ID: 7167)
  Prédit: ' palindrome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' palindrome' → logprob: -0.1672985702753067
    2. 'e' → logprob: -2.1672985553741455
    3. ' pal' → logprob: -4.167298793792725
    4. 'pal' → logprob: -4.417298793792725
    5. 'a' → logprob: -5.542298793792725
    6. '_pal' → logprob: -5.917298793792725
    7. 's' → logprob: -6.667298793792725
    8. ' ' → logprob: -7.292298793792725
    9. ' paire' → logprob: -7.729798793792725
    10. 'Palindrome' → logprob: -8.167298316955566

Token 30: ' sym' (ID: 5357)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5246221423149109
    2. '   ' → logprob: -1.7746222019195557
    3. 'def' → logprob: -2.5246222019195557
    4. ',' → logprob: -3.0246222019195557
    5. '<|end|>' → logprob: -3.1496222019195557
    6. ' ' → logprob: -4.774621963500977
    7. ' def' → logprob: -5.024621963500977
    8. ' s' → logprob: -5.149621963500977
    9. ' (' → logprob: -5.274621963500977
    10. '<|end|>' → logprob: -5.399621963500977

Token 31: 'étr' (ID: 35025)
  Prédit: 'étr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étr' → logprob: -0.01929290033876896
    2. 'é' → logprob: -4.019292831420898
    3. 'et' → logprob: -7.269292831420898
    4. 'e' → logprob: -9.519292831420898
    5. 'étrica' → logprob: -9.644292831420898
    6. 'étique' → logprob: -9.769292831420898
    7. 'è' → logprob: -10.144292831420898
    8. 'ét' → logprob: -10.644292831420898
    9. '#' → logprob: -11.144292831420898
    10. 'etri' → logprob: -11.519292831420898

Token 32: 'ique' (ID: 2222)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.17149125039577484
    2. 't' → logprob: -1.921491265296936
    3. 'étr' → logprob: -6.0464911460876465
    4. 'rique' → logprob: -6.0464911460876465
    5. '#' → logprob: -7.0464911460876465
    6. 'ique' → logprob: -7.2964911460876465
    7. 'r' → logprob: -7.2964911460876465
    8. '\' → logprob: -7.6714911460876465
    9. '```' → logprob: -7.7964911460876465
    10. 'tri' → logprob: -8.171491622924805

Token 33: ' sans' (ID: 9828)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7473470568656921
    2. '   ' → logprob: -0.8723470568656921
    3. ' return' → logprob: -3.747347116470337
    4. ' (' → logprob: -4.122346878051758
    5. 'def' → logprob: -4.122346878051758
    6. ' ' → logprob: -4.497346878051758
    7. ' dans' → logprob: -4.997346878051758
    8. ' ,' → logprob: -5.247346878051758
    9. ':' → logprob: -5.372346878051758
    10. 's' → logprob: -5.622346878051758

Token 34: ' substitution' (ID: 92838)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.6736432313919067
    2. ' erreur' → logprob: -2.048643112182617
    3. 's' → logprob: -2.173643112182617
    4. '   ' → logprob: -2.423643112182617
    5. 'e' → logprob: -3.423643112182617
    6. 'es' → logprob: -3.548643112182617
    7. ' espaces' → logprob: -3.673643112182617
    8. ' conflit' → logprob: -3.798643112182617
    9. ' erreurs' → logprob: -3.798643112182617
    10. ' espace' → logprob: -3.923643112182617

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9618433713912964
    2. ',' → logprob: -1.3368433713912964
    3. ':' → logprob: -1.7118433713912964
    4. ' :' → logprob: -2.711843490600586
    5. ' ' → logprob: -3.461843490600586
    6. ' ,' → logprob: -4.211843490600586
    7. ')' → logprob: -4.211843490600586
    8. 's' → logprob: -4.586843490600586
    9. '  ' → logprob: -4.711843490600586
    10. '.' → logprob: -5.211843490600586

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045475494116544724
    2. ':' → logprob: -3.670475482940674
    3. ',' → logprob: -5.170475482940674
    4. ' :' → logprob: -5.420475482940674
    5. ' or' → logprob: -5.920475482940674
    6. '    ' → logprob: -6.045475482940674
    7. ' ' → logprob: -7.170475482940674
    8. ' and' → logprob: -7.170475482940674
    9. ' et' → logprob: -7.795475482940674
    10. '  ' → logprob: -7.795475482940674

Token 37: ' pairs' (ID: 24702)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07740353792905807
    2. 'return' → logprob: -3.3274035453796387
    3. ' return' → logprob: -3.3274035453796387
    4. ' ' → logprob: -7.327403545379639
    5. '    ' → logprob: -7.702403545379639
    6. ':return' → logprob: -7.702403545379639
    7. ':' → logprob: -8.07740306854248
    8. '  ' → logprob: -8.32740306854248
    9. ',' → logprob: -8.32740306854248
    10. ' :' → logprob: -9.45240306854248

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009943070821464062
    2. '=' → logprob: -4.634943008422852
    3. ' ' → logprob: -9.634943008422852
    4. ' ==' → logprob: -10.384943008422852
    5. 'et' → logprob: -10.509943008422852
    6. '   ' → logprob: -10.884943008422852
    7. 's' → logprob: -11.009943008422852
    8. '.' → logprob: -12.259943008422852
    9. '==' → logprob: -12.384943008422852
    10. ' in' → logprob: -12.509943008422852

Token 39: ' [('' (ID: 147218)
  Prédit: ' {''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {'' → logprob: -0.4040980637073517
    2. ' {' → logprob: -2.0290980339050293
    3. ' [('' → logprob: -2.2790980339050293
    4. '{'' → logprob: -3.6540980339050293
    5. '{' → logprob: -3.7790980339050293
    6. '[' → logprob: -3.9040980339050293
    7. ' {"' → logprob: -4.404098033905029
    8. ' ['' → logprob: -5.029098033905029
    9. ' [' → logprob: -5.279098033905029
    10. '{"' → logprob: -6.029098033905029

Token 40: 'i' (ID: 72)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6724138259887695
    2. '('' → logprob: -1.0474138259887695
    3. ''' → logprob: -2.9224138259887695
    4. 'a' → logprob: -3.0474138259887695
    5. 'c' → logprob: -4.4224138259887695
    6. ')' → logprob: -5.1724138259887695
    7. 's' → logprob: -5.4224138259887695
    8. '(','' → logprob: -5.4224138259887695
    9. '"' → logprob: -5.9224138259887695
    10. 'p' → logprob: -7.0474138259887695

Token 41: '','' (ID: 4074)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9281008243560791
    2. '',' → logprob: -1.053100824356079
    3. '','' → logprob: -1.428100824356079
    4. 'm' → logprob: -5.6781005859375
    5. 'i' → logprob: -6.0531005859375
    6. 'j' → logprob: -6.0531005859375
    7. ''' → logprob: -6.8031005859375
    8. '(','' → logprob: -6.8031005859375
    9. 'o' → logprob: -7.1781005859375
    10. '(',' → logprob: -7.4281005859375

Token 42: 'i' (ID: 72)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12177374958992004
    2. 'i' → logprob: -2.6217737197875977
    3. 'j' → logprob: -3.3717737197875977
    4. 'm' → logprob: -6.121773719787598
    5. 'í' → logprob: -6.621773719787598
    6. 'ı' → logprob: -6.621773719787598
    7. 't' → logprob: -7.121773719787598
    8. 'o' → logprob: -7.621773719787598
    9. 'n' → logprob: -7.746773719787598
    10. 'u' → logprob: -8.621773719787598

Token 43: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.002438432304188609
    2. '')]' → logprob: -6.877438545227051
    3. '')' → logprob: -6.877438545227051
    4. ''),
' → logprob: -8.75243854522705
    5. ''' → logprob: -9.37743854522705
    6. 'i' → logprob: -10.12743854522705
    7. '),' → logprob: -10.50243854522705
    8. ''),'' → logprob: -10.62743854522705
    9. '('' → logprob: -11.12743854522705
    10. ')' → logprob: -12.37743854522705

Token 44: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.25964927673339844
    2. ' ('' → logprob: -1.5096492767333984
    3. ' '' → logprob: -6.259649276733398
    4. ''' → logprob: -6.759649276733398
    5. ''l' → logprob: -6.759649276733398
    6. ''r' → logprob: -7.634649276733398
    7. ''e' → logprob: -7.884649276733398
    8. ''i' → logprob: -8.134649276733398
    9. ''s' → logprob: -8.384649276733398
    10. '(' → logprob: -8.384649276733398

Token 45: 'w' (ID: 86)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16497519612312317
    2. 'u' → logprob: -2.664975166320801
    3. 'm' → logprob: -3.289975166320801
    4. 'o' → logprob: -3.414975166320801
    5. 'j' → logprob: -5.539975166320801
    6. 'n' → logprob: -6.164975166320801
    7. 's' → logprob: -6.289975166320801
    8. 'w' → logprob: -6.914975166320801
    9. 'v' → logprob: -7.039975166320801
    10. 't' → logprob: -7.664975166320801

Token 46: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.006691918708384037
    2. '',' → logprob: -5.131691932678223
    3. ''' → logprob: -7.381691932678223
    4. 'w' → logprob: -9.631691932678223
    5. ','' → logprob: -10.631691932678223
    6. ',' → logprob: -10.756691932678223
    7. ' ','' → logprob: -12.006691932678223
    8. ''w' → logprob: -12.381691932678223
    9. 'i' → logprob: -12.631691932678223
    10. ',w' → logprob: -12.756691932678223

Token 47: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0004007600946351886
    2. 'm' → logprob: -8.75040054321289
    3. 'ｗ' → logprob: -9.12540054321289
    4. 'v' → logprob: -10.12540054321289
    5. 'i' → logprob: -10.62540054321289
    6. ''w' → logprob: -10.87540054321289
    7. ' w' → logprob: -11.75040054321289
    8. 'u' → logprob: -12.37540054321289
    9. 'ŵ' → logprob: -12.50040054321289
    10. '\xca' → logprob: -12.56290054321289

Token 48: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.08119534701108932
    2. '')]' → logprob: -2.58119535446167
    3. '')' → logprob: -6.33119535446167
    4. '),' → logprob: -7.83119535446167
    5. ')]' → logprob: -10.081194877624512
    6. '('' → logprob: -10.706194877624512
    7. ''' → logprob: -11.081194877624512
    8. ')' → logprob: -11.206194877624512
    9. ''),
' → logprob: -12.206194877624512
    10. ''],' → logprob: -12.581194877624512

Token 49: ' ('' (ID: 9906)
  Prédit: ' (''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ('' → logprob: -0.28182119131088257
    2. '('' → logprob: -1.4068212509155273
    3. '   ' → logprob: -8.781821250915527
    4. '),' → logprob: -9.031821250915527
    5. ' ' → logprob: -9.656821250915527
    6. ''' → logprob: -9.656821250915527
    7. ' '' → logprob: -10.031821250915527
    8. ')' → logprob: -10.031821250915527
    9. ''s' → logprob: -10.906821250915527
    10. ' ),' → logprob: -10.906821250915527

Token 50: '(',' (ID: 30548)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6555341482162476
    2. 'v' → logprob: -1.7805341482162476
    3. 'o' → logprob: -2.155534267425537
    4. 'l' → logprob: -2.280534267425537
    5. 'u' → logprob: -2.905534267425537
    6. 'w' → logprob: -4.030534267425537
    7. 'n' → logprob: -5.030534267425537
    8. 'x' → logprob: -5.280534267425537
    9. 's' → logprob: -5.280534267425537
    10. 'i' → logprob: -7.155534267425537

Token 51: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.002494802698493004
    2. ')' → logprob: -6.127494812011719
    3. ''' → logprob: -8.627494812011719
    4. ' ')' → logprob: -9.127494812011719
    5. ''s' → logprob: -12.252494812011719
    6. ' ')'' → logprob: -12.877494812011719
    7. ''),' → logprob: -13.002494812011719
    8. ''d' → logprob: -14.002494812011719
    9. '']' → logprob: -14.002494812011719
    10. '',' → logprob: -14.127494812011719

Token 52: ''),' (ID: 10047)
  Prédit: '')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.4113347828388214
    2. ''),' → logprob: -1.286334753036499
    3. '),' → logprob: -3.411334753036499
    4. ')]' → logprob: -3.661334753036499
    5. '')' → logprob: -7.411334991455078
    6. ')' → logprob: -7.536334991455078
    7. '('' → logprob: -8.161334991455078
    8. ']' → logprob: -8.161334991455078
    9. '],' → logprob: -8.786334991455078
    10. ' '' → logprob: -9.911334991455078

Token 53: ' (' (ID: 350)
  Prédit: ' (''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ('' → logprob: -0.21968409419059753
    2. '('' → logprob: -1.84468412399292
    3. ' (' → logprob: -3.84468412399292
    4. ' ]' → logprob: -5.59468412399292
    5. ']' → logprob: -6.09468412399292
    6. ')' → logprob: -6.34468412399292
    7. ' '' → logprob: -6.46968412399292
    8. ' ')' → logprob: -6.59468412399292
    9. '   ' → logprob: -6.71968412399292
    10. ' ],' → logprob: -6.96968412399292

Token 54: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.20267964899539948
    2. ''' → logprob: -1.8276796340942383
    3. ''[' → logprob: -4.077679634094238
    4. ' '' → logprob: -6.952679634094238
    5. ''(' → logprob: -7.077679634094238
    6. '']' → logprob: -7.077679634094238
    7. ''),' → logprob: -7.577679634094238
    8. ' ')' → logprob: -7.702679634094238
    9. ''{' → logprob: -8.077679634094238
    10. '('' → logprob: -8.077679634094238

Token 55: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002112074289470911
    2. ''(' → logprob: -7.127111911773682
    3. '','' → logprob: -7.627111911773682
    4. ' '('' → logprob: -8.37711238861084
    5. ','' → logprob: -8.62711238861084
    6. '('' → logprob: -9.00211238861084
    7. '',' → logprob: -9.12711238861084
    8. '')' → logprob: -9.12711238861084
    9. '(' → logprob: -10.37711238861084
    10. ',' → logprob: -11.50211238861084

Token 56: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.06219477578997612
    2. '(' → logprob: -2.81219482421875
    3. ''' → logprob: -8.68719482421875
    4. '')' → logprob: -11.18719482421875
    5. '(','' → logprob: -11.81219482421875
    6. '(',' → logprob: -12.06219482421875
    7. ' '('' → logprob: -12.18719482421875
    8. '(
' → logprob: -12.18719482421875
    9. ''(' → logprob: -12.68719482421875
    10. '(

' → logprob: -12.81219482421875

Token 57: ')]
' (ID: 11587)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2879845201969147
    2. ')]' → logprob: -1.4129844903945923
    3. ')' → logprob: -5.662984371185303
    4. ' ),' → logprob: -6.662984371185303
    5. '')]' → logprob: -6.787984371185303
    6. ''),' → logprob: -7.662984371185303
    7. ' )' → logprob: -8.662984848022461
    8. '),(' → logprob: -9.787984848022461
    9. ')])' → logprob: -10.162984848022461
    10. '],' → logprob: -10.287984848022461

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032898937352001667
    2. ')' → logprob: -6.253289699554443
    3. 'return' → logprob: -8.003290176391602
    4. ',' → logprob: -8.378290176391602
    5. '
' → logprob: -8.628290176391602
    6. ' ' → logprob: -9.128290176391602
    7. ' return' → logprob: -9.378290176391602
    8. ']' → logprob: -9.503290176391602
    9. '    
' → logprob: -9.753290176391602
    10. '<|end|>' → logprob: -9.878290176391602

Token 59: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005921212490648031
    2. 'return' (adapté à ' return') → logprob: -5.255921363830566
    3. ' return' → logprob: -7.380921363830566
    4. ')' → logprob: -10.005921363830566
    5. '	return' → logprob: -12.505921363830566
    6. '    
' → logprob: -12.505921363830566
    7. '
' → logprob: -12.880921363830566
    8. 'if' → logprob: -12.880921363830566
    9. ' if' → logprob: -13.505921363830566
    10. ')return' → logprob: -13.880921363830566

Token 60: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4293023347854614
    2. '(c' → logprob: -1.0543023347854614
    3. ' c' → logprob: -8.179302215576172
    4. '(' → logprob: -8.804302215576172
    5. 'c' → logprob: -9.929302215576172
    6. ' ' → logprob: -10.054302215576172
    7. ' any' → logprob: -10.179302215576172
    8. 'any' → logprob: -11.929302215576172
    9. '(C' → logprob: -12.054302215576172
    10. '(s' → logprob: -12.054302215576172

Token 61: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.020908767357468605
    2. '(c' → logprob: -4.395908832550049
    3. ' c' → logprob: -4.895908832550049
    4. ' (' → logprob: -7.270908832550049
    5. '   ' → logprob: -9.27090835571289
    6. ' ' → logprob: -10.02090835571289
    7. ')c' → logprob: -10.39590835571289
    8. '  ' → logprob: -12.14590835571289
    9. '(' → logprob: -12.77090835571289
    10. '	c' → logprob: -12.89590835571289

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.500000953674316
    3. ')' → logprob: -16.375001907348633
    4. '[' → logprob: -16.625001907348633
    5. '_pairs' → logprob: -16.625001907348633
    6. '_pair' → logprob: -16.750001907348633
    7. 'pair' → logprob: -16.875001907348633
    8. '```' → logprob: -17.625001907348633
    9. '   ' → logprob: -18.062501907348633
    10. '2' → logprob: -18.062501907348633

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47473910450935364
    2. ',c' → logprob: -0.9747390747070312
    3. ' ,' → logprob: -7.349739074707031
    4. ',char' → logprob: -12.599739074707031
    5. ',p' → logprob: -13.099739074707031
    6. 'c' → logprob: -13.349739074707031
    7. ',ch' → logprob: -13.349739074707031
    8. ',d' → logprob: -13.474739074707031
    9. ',s' → logprob: -13.474739074707031
    10. ',v' → logprob: -13.599739074707031

Token 64: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004891689168289304
    2. ' c' → logprob: -7.625489234924316
    3. ')c' → logprob: -14.250489234924316
    4. ')' → logprob: -14.875489234924316
    5. ' ' → logprob: -16.37548828125
    6. '<|end|>' → logprob: -17.37548828125
    7. '   ' → logprob: -18.00048828125
    8. '  ' → logprob: -18.37548828125
    9. '	c' → logprob: -18.87548828125
    10. 's' → logprob: -20.12548828125

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.25
    3. '_' → logprob: -17.125
    4. ' ' → logprob: -17.25
    5. '₂' → logprob: -17.75
    6. ')' → logprob: -17.875
    7. 'c' → logprob: -19.0
    8. '۲' → logprob: -19.0
    9. '２' → logprob: -20.1875
    10. '-' → logprob: -20.25

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. 'in' → logprob: -11.125021934509277
    3. ' )' → logprob: -12.250021934509277
    4. '')' → logprob: -13.375021934509277
    5. ' in' → logprob: -14.250021934509277
    6. '")' → logprob: -17.00002098083496
    7. '）' → logprob: -17.12502098083496
    8. ']' → logprob: -18.12502098083496
    9. '`)' → logprob: -18.25002098083496
    10. '),' → logprob: -19.00002098083496

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42881977558135986
    2. 'in' → logprob: -1.0538197755813599
    3. ')' → logprob: -9.55381965637207
    4. '[' → logprob: -11.05381965637207
    5. '<|end|>' → logprob: -11.17881965637207
    6. ' ' → logprob: -13.17881965637207
    7. '<|end|>' → logprob: -13.55381965637207
    8. 'n' → logprob: -13.55381965637207
    9. 's' → logprob: -13.67881965637207
    10. '[in' → logprob: -13.67881965637207

Token 68: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.01815205067396164
    2. ' pairs' → logprob: -4.018152236938477
    3. '_pairs' → logprob: -13.143152236938477
    4. 'Pairs' → logprob: -16.643152236938477
    5. '   ' → logprob: -17.393152236938477
    6. 'pair' → logprob: -17.893152236938477
    7. 'p' → logprob: -19.018152236938477
    8. '```' → logprob: -20.018152236938477
    9. '[' → logprob: -20.143152236938477
    10. '-p' → logprob: -20.143152236938477

Token 69: '

' (ID: 279)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08163457363843918
    2. '<|end|>' → logprob: -2.706634521484375
    3. 'or' → logprob: -4.956634521484375
    4. '
' → logprob: -6.706634521484375
    5. '\n' → logprob: -6.706634521484375
    6. '<|end|>' → logprob: -6.956634521484375
    7. ')' → logprob: -7.956634521484375
    8. ' ' → logprob: -8.206634521484375
    9. ' and' → logprob: -8.706634521484375
    10. '	or' → logprob: -9.831634521484375

Token 70: 'def' (ID: 1314)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.1679290533065796
    2. ':' → logprob: -1.4179290533065796
    3. '<|end|>' → logprob: -1.6679290533065796
    4. ' and' → logprob: -1.9179290533065796
    5. '.' → logprob: -3.542929172515869
    6. 'and' → logprob: -3.667929172515869
    7. ' ' → logprob: -4.167929172515869
    8. 's' → logprob: -4.667929172515869
    9. ')' → logprob: -4.917929172515869
    10. 'or' → logprob: -5.167929172515869

Token 71: ' cost' (ID: 3097)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.001351783750578761
    2. ' s' → logprob: -7.626351833343506
    3. 's' → logprob: -8.376351356506348
    4. ' palindrome' → logprob: -8.751351356506348
    5. '_pal' → logprob: -9.001351356506348
    6. '_' → logprob: -9.001351356506348
    7. 'is' → logprob: -10.126351356506348
    8. ' ' → logprob: -10.376351356506348
    9. '_is' → logprob: -10.626351356506348
    10. ' can' → logprob: -10.626351356506348

Token 72: '_to' (ID: 5089)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13827060163021088
    2. '(c' → logprob: -2.138270616531372
    3. '(s' → logprob: -5.263270378112793
    4. '_' → logprob: -6.263270378112793
    5. 's' → logprob: -6.513270378112793
    6. ' (' → logprob: -7.763270378112793
    7. '(a' → logprob: -8.138270378112793
    8. '<|end|>' → logprob: -8.388270378112793
    9. '_sub' → logprob: -8.638270378112793
    10. '((' → logprob: -8.888270378112793

Token 73: '_match' (ID: 26039)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.1807219982147217
    2. '_make' → logprob: -1.6807219982147217
    3. '_replace' → logprob: -1.8057219982147217
    4. '_transform' → logprob: -2.3057219982147217
    5. '_convert' → logprob: -2.8057219982147217
    6. '_change' → logprob: -2.9307219982147217
    7. '_match' → logprob: -3.1807219982147217
    8. 'sub' → logprob: -4.305722236633301
    9. '_correct' → logprob: -4.555722236633301
    10. '_keep' → logprob: -4.680722236633301

Token 74: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002217465080320835
    2. '(' → logprob: -6.3772172927856445
    3. '(s' → logprob: -7.7522172927856445
    4. '(a' → logprob: -9.627217292785645
    5. '(char' → logprob: -12.002217292785645
    6. '(p' → logprob: -12.877217292785645
    7. 's' → logprob: -13.002217292785645
    8. '(i' → logprob: -13.127217292785645
    9. ' (' → logprob: -14.002217292785645
    10. '(ci' → logprob: -14.627217292785645

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00988169014453888
    2. ',' → logprob: -4.884881496429443
    3. ',c' → logprob: -6.759881496429443
    4. ')' → logprob: -7.384881496429443
    5. '2' → logprob: -8.259881973266602
    6. 'c' → logprob: -9.384881973266602
    7. ' ,' → logprob: -10.634881973266602
    8. '_,' → logprob: -11.009881973266602
    9. ')c' → logprob: -11.009881973266602
    10. 's' → logprob: -11.259881973266602

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015610468108206987
    2. ',c' → logprob: -6.501561164855957
    3. ' ,' → logprob: -9.751561164855957
    4. 'c' → logprob: -15.751561164855957
    5. ')' → logprob: -16.87656021118164
    6. ',

' → logprob: -17.00156021118164
    7. '   ' → logprob: -17.37656021118164
    8. '),' → logprob: -17.62656021118164
    9. ' c' → logprob: -17.87656021118164
    10. '_,' → logprob: -17.87656021118164

Token 77: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.016037650406360626
    2. 'c' → logprob: -4.141037464141846
    3. ',' → logprob: -13.641037940979004
    4. ',c' → logprob: -14.016037940979004
    5. ' ' → logprob: -14.516037940979004
    6. '	c' → logprob: -15.266037940979004
    7. ')c' → logprob: -16.016036987304688
    8. '```' → logprob: -16.141036987304688
    9. 's' → logprob: -16.266036987304688
    10. ' ' → logprob: -16.516036987304688

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003589416155591607
    2. ',' → logprob: -8.000358581542969
    3. '1' → logprob: -11.000358581542969
    4. ')' → logprob: -13.000358581542969
    5. ',c' → logprob: -13.625358581542969
    6. 's' → logprob: -14.625358581542969
    7. ' ,' → logprob: -14.812858581542969
    8. 'c' → logprob: -14.812858581542969
    9. 'def' → logprob: -15.437858581542969
    10. ',
' → logprob: -15.687858581542969

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00013965457037556916
    2. ')' → logprob: -9.625139236450195
    3. '):
' → logprob: -9.625139236450195
    4. ':' → logprob: -12.375139236450195
    5. ' ):' → logprob: -13.250139236450195
    6. '):
' → logprob: -14.625139236450195
    7. '   ' → logprob: -15.250139236450195
    8. '=' → logprob: -15.875139236450195
    9. '):

' → logprob: -16.000139236450195
    10. ',' → logprob: -16.125139236450195

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16196221113204956
    2. ':' → logprob: -1.9119622707366943
    3. '<|end|>' → logprob: -6.786962032318115
    4. '):' → logprob: -8.661962509155273
    5. '<|end|>' → logprob: -9.036962509155273
    6. ',' → logprob: -9.661962509155273
    7. ' :' → logprob: -10.286962509155273
    8. ')' → logprob: -10.286962509155273
    9. ':return' → logprob: -10.286962509155273
    10. '():' → logprob: -10.536962509155273

Token 81: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013146435376256704
    2. ' if' → logprob: -7.126314640045166
    3. ' return' → logprob: -8.876315116882324
    4. '<|end|>' → logprob: -8.876315116882324
    5. ':' → logprob: -9.751315116882324
    6. '    ' → logprob: -10.001315116882324
    7. ' ' → logprob: -10.626315116882324
    8. ')' → logprob: -11.001315116882324
    9. '```' → logprob: -11.376315116882324
    10. 'return' → logprob: -11.501315116882324

Token 82: ' Cal' (ID: 4453)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08612672239542007
    2. 'if' → logprob: -2.5861268043518066
    3. ' Retour' → logprob: -5.961126804351807
    4. '   ' → logprob: -6.086126804351807
    5. ' return' → logprob: -6.961126804351807
    6. 'Retour' → logprob: -7.211126804351807
    7. 'Return' → logprob: -9.086126327514648
    8. 'return' → logprob: -9.336126327514648
    9. ' #' → logprob: -9.336126327514648
    10. 'def' → logprob: -9.461126327514648

Token 83: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.18262538313865662
    2. 'cul' → logprob: -1.807625412940979
    3. 'c' → logprob: -6.6826252937316895
    4. 'cula' → logprob: -6.9326252937316895
    5. 'culate' → logprob: -7.8076252937316895
    6. 'cules' → logprob: -9.432625770568848
    7. 'cular' → logprob: -10.182625770568848
    8. 'culated' → logprob: -10.807625770568848
    9. 'culaire' → logprob: -11.182625770568848
    10. 'culator' → logprob: -11.182625770568848

Token 84: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7024585604667664
    2. '1' → logprob: -1.9524586200714111
    3. '0' → logprob: -2.202458620071411
    4. '<|end|>' → logprob: -2.577458620071411
    5. ' ' → logprob: -3.077458620071411
    6. '(' → logprob: -3.077458620071411
    7. '<|end|>' → logprob: -3.952458620071411
    8. ' if' → logprob: -4.952458381652832
    9. '    ' → logprob: -4.952458381652832
    10. 'def' → logprob: -5.077458381652832

Token 85: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -0.24510541558265686
    2. 'co' → logprob: -1.7451053857803345
    3. 'cout' → logprob: -3.370105504989624
    4. ' cout' → logprob: -5.620105266571045
    5. 'c' → logprob: -5.995105266571045
    6. 'cost' → logprob: -7.745105266571045
    7. 'nombre' → logprob: -7.745105266571045
    8. 'cou' → logprob: -8.495105743408203
    9. ' nombre' → logprob: -8.745105743408203
    10. 's' → logprob: -9.245105743408203

Token 86: ' minimal' (ID: 19957)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.7246055006980896
    2. ' de' → logprob: -1.5996055603027344
    3. ' des' → logprob: -2.4746055603027344
    4. '<|end|>' → logprob: -2.8496055603027344
    5. '   ' → logprob: -3.8496055603027344
    6. 'def' → logprob: -3.9746055603027344
    7. ' for' → logprob: -4.099605560302734
    8. ' to' → logprob: -4.099605560302734
    9. ' if' → logprob: -4.224605560302734
    10. ' d' → logprob: -4.349605560302734

Token 88: ' rendre' (ID: 44629)
  Prédit: ' rendre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rendre' → logprob: -1.20361328125
    2. ' transformer' → logprob: -1.45361328125
    3. ' que' → logprob: -1.57861328125
    4. ' faire' → logprob: -1.82861328125
    5. 'transform' → logprob: -3.32861328125
    6. 'que' → logprob: -4.57861328125
    7. ' remplacer' → logprob: -4.82861328125
    8. 'faire' → logprob: -5.32861328125
    9. ' align' → logprob: -5.57861328125
    10. ' ' → logprob: -5.70361328125

Token 89: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08279089629650116
    2. 'c' → logprob: -2.5827908515930176
    3. ' les' → logprob: -6.832790851593018
    4. ' ' → logprob: -6.832790851593018
    5. ' que' → logprob: -7.707790851593018
    6. ' deux' → logprob: -8.332791328430176
    7. ' (' → logprob: -8.457791328430176
    8. '(c' → logprob: -8.957791328430176
    9. '   ' → logprob: -9.082791328430176
    10. 's' → logprob: -9.082791328430176

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035274302354082465
    2. '2' → logprob: -8.00035285949707
    3. ''' → logprob: -12.00035285949707
    4. 'c' → logprob: -12.37535285949707
    5. '(c' → logprob: -13.00035285949707
    6. 's' → logprob: -14.81285285949707
    7. 'o' → logprob: -15.00035285949707
    8. ''s' → logprob: -15.25035285949707
    9. ' c' → logprob: -15.31285285949707
    10. '```' → logprob: -15.31285285949707

Token 91: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.47872716188430786
    2. 'et' → logprob: -1.478727102279663
    3. ' égal' → logprob: -3.603727102279663
    4. 'sym' → logprob: -3.853727102279663
    5. ' sym' → logprob: -3.853727102279663
    6. ' equal' → logprob: -4.728727340698242
    7. ' and' → logprob: -4.728727340698242
    8. ' ident' → logprob: -4.728727340698242
    9. 'équ' → logprob: -4.978727340698242
    10. 'equal' → logprob: -5.103727340698242

Token 92: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.023280303925275803
    2. 'c' → logprob: -3.773280382156372
    3. ' ' → logprob: -10.898280143737793
    4. ' ' → logprob: -12.023280143737793
    5. '`' → logprob: -13.398280143737793
    6. '  ' → logprob: -13.398280143737793
    7. 's' → logprob: -13.648280143737793
    8. ',' → logprob: -14.023280143737793
    9. ' `' → logprob: -14.210780143737793
    10. '```' → logprob: -14.273280143737793

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001462107611587271
    2. '1' → logprob: -10.12514591217041
    3. ' ' → logprob: -11.12514591217041
    4. '_' → logprob: -11.75014591217041
    5. '```' → logprob: -11.75014591217041
    6. '   ' → logprob: -11.87514591217041
    7. 's' → logprob: -11.87514591217041
    8. ')' → logprob: -12.00014591217041
    9. '<|end|>' → logprob: -12.18764591217041
    10. 'c' → logprob: -12.18764591217041

Token 94: ' sym' (ID: 5357)
  Prédit: ' sym'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sym' → logprob: -0.16166310012340546
    2. 'sym' → logprob: -2.786663055419922
    3. ' ident' → logprob: -3.036663055419922
    4. ' ég' → logprob: -3.661663055419922
    5. 's' → logprob: -5.536663055419922
    6. ')' → logprob: -6.161663055419922
    7. 'ident' → logprob: -6.536663055419922
    8. ' compatibles' → logprob: -6.661663055419922
    9. ' pal' → logprob: -6.911663055419922
    10. 'pal' → logprob: -7.036663055419922

Token 95: 'étr' (ID: 35025)
  Prédit: 'étr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étr' → logprob: -0.12759914994239807
    2. 'é' → logprob: -2.1275992393493652
    3. 'étiques' → logprob: -8.252598762512207
    4. 'et' → logprob: -8.502598762512207
    5. 'ét' → logprob: -9.752598762512207
    6. 'è' → logprob: -10.752598762512207
    7. 'étique' → logprob: -11.127598762512207
    8. 'm' → logprob: -11.127598762512207
    9. 'étrica' → logprob: -11.252598762512207
    10. 'mé' → logprob: -11.252598762512207

Token 96: 'iques' (ID: 11654)
  Prédit: 'étr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'étr' → logprob: -0.14611868560314178
    2. 'tr' → logprob: -2.646118640899658
    3. 'et' → logprob: -3.021118640899658
    4. 'é' → logprob: -5.021118640899658
    5. 'etri' → logprob: -5.896118640899658
    6. 'è' → logprob: -6.396118640899658
    7. 'étiques' → logprob: -6.896118640899658
    8. 't' → logprob: -7.146118640899658
    9. '#' → logprob: -7.896118640899658
    10. 'e' → logprob: -8.271119117736816

Token 97: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5603188276290894
    2. ' if' → logprob: -1.0603188276290894
    3. '<|end|>' → logprob: -3.060318946838379
    4. ':' → logprob: -3.935318946838379
    5. '<|end|>' → logprob: -5.060318946838379
    6. ',' → logprob: -5.685318946838379
    7. 'if' → logprob: -6.060318946838379
    8. ':
' → logprob: -7.060318946838379
    9. 'def' → logprob: -7.560318946838379
    10. 's' → logprob: -7.810318946838379

Token 98: ' substitution' (ID: 92838)
  Prédit: ' substitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substitution' → logprob: -0.3334766924381256
    2. ' une' → logprob: -2.0834767818450928
    3. 'sub' → logprob: -2.0834767818450928
    4. ' remplacement' → logprob: -4.583476543426514
    5. 'une' → logprob: -4.958476543426514
    6. ' substitutions' → logprob: -5.458476543426514
    7. ' des' → logprob: -5.833476543426514
    8. ' la' → logprob: -6.208476543426514
    9. 's' → logprob: -6.583476543426514
    10. 'def' → logprob: -7.083476543426514

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05018971860408783
    2. ':' → logprob: -3.550189733505249
    3. '<|end|>' → logprob: -4.67518949508667
    4. ' if' → logprob: -5.05018949508667
    5. '<|end|>' → logprob: -6.42518949508667
    6. ',' → logprob: -7.05018949508667
    7. ' ' → logprob: -8.050189971923828
    8. '
' → logprob: -8.175189971923828
    9. 'if' → logprob: -8.300189971923828
    10. '    ' → logprob: -8.425189971923828

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065565709955990314
    2. '<|end|>' → logprob: -5.506556510925293
    3. ':' → logprob: -6.256556510925293
    4. '<|end|>' → logprob: -8.256556510925293
    5. ' if' → logprob: -9.256556510925293
    6. '
' → logprob: -9.881556510925293
    7. ',' → logprob: -9.881556510925293
    8. ':
' → logprob: -11.256556510925293
    9. 'def' → logprob: -11.381556510925293
    10. ' ' → logprob: -11.506556510925293

Token 101: ' pairs' (ID: 24702)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03958279639482498
    2. '   ' → logprob: -3.4145827293395996
    3. 'if' → logprob: -5.1645827293396
    4. '    ' → logprob: -9.414583206176758
    5. ' pairs' → logprob: -9.914583206176758
    6. ' return' → logprob: -10.789583206176758
    7. ' ' → logprob: -11.039583206176758
    8. ' #' → logprob: -12.289583206176758
    9. 'pairs' (adapté à ' pairs') → logprob: -12.414583206176758
    10. ' s' → logprob: -12.664583206176758

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010722271399572492
    2. '=' → logprob: -6.876072406768799
    3. 's' → logprob: -10.25107192993164
    4. ' =
' → logprob: -13.50107192993164
    5. '<|end|>' → logprob: -14.12607192993164
    6. '=[
' → logprob: -14.75107192993164
    7. ' ' → logprob: -15.25107192993164
    8. '_pairs' → logprob: -15.62607192993164
    9. ',' → logprob: -15.87607192993164
    10. ':' → logprob: -15.87607192993164

Token 103: ' [('' (ID: 147218)
  Prédit: ' [(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [('' → logprob: -0.5149336457252502
    2. ' {' → logprob: -1.5149335861206055
    3. '{' → logprob: -2.5149335861206055
    4. '[' → logprob: -2.6399335861206055
    5. ' {'' → logprob: -3.7649335861206055
    6. '{'' → logprob: -5.8899335861206055
    7. '   ' → logprob: -7.0149335861206055
    8. ' [' → logprob: -7.2649335861206055
    9. '[['' → logprob: -7.5149335861206055
    10. '{
' → logprob: -7.5149335861206055

Token 104: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0043952250853180885
    2. '('' → logprob: -6.379395008087158
    3. '(' → logprob: -6.629395008087158
    4. '(','' → logprob: -7.879395008087158
    5. ''' → logprob: -8.254395484924316
    6. ''i' → logprob: -8.629395484924316
    7. '(i' → logprob: -8.879395484924316
    8. '(',' → logprob: -9.254395484924316
    9. 'w' → logprob: -9.754395484924316
    10. 'c' → logprob: -10.004395484924316

Token 105: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.014796323142945766
    2. '',' → logprob: -4.264796257019043
    3. ',' → logprob: -8.389796257019043
    4. 'i' → logprob: -8.514796257019043
    5. ''' → logprob: -9.639796257019043
    6. ''i' → logprob: -10.014796257019043
    7. ','' → logprob: -10.389796257019043
    8. ',i' → logprob: -10.764796257019043
    9. '(','' → logprob: -11.514796257019043
    10. ' ','' → logprob: -12.139796257019043

Token 106: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024527073837816715
    2. 'w' → logprob: -6.127452850341797
    3. '')' → logprob: -9.127452850341797
    4. ')' → logprob: -10.127452850341797
    5. 'j' → logprob: -10.627452850341797
    6. ''i' → logprob: -10.627452850341797
    7. ''' → logprob: -11.127452850341797
    8. ''),' → logprob: -11.252452850341797
    9. '('' → logprob: -12.377452850341797
    10. 't' → logprob: -12.377452850341797

Token 107: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.0036136091221123934
    2. '),' → logprob: -5.628613471984863
    3. '')' → logprob: -12.628613471984863
    4. ''),
' → logprob: -12.878613471984863
    5. '')]' → logprob: -13.128613471984863
    6. ')' → logprob: -13.503613471984863
    7. '"),' → logprob: -13.628613471984863
    8. '('' → logprob: -14.003613471984863
    9. ''' → logprob: -14.378613471984863
    10. '',' → logprob: -15.003613471984863

Token 108: ' ('' (ID: 9906)
  Prédit: ' (''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ('' → logprob: -0.11305101960897446
    2. '('' → logprob: -2.238050937652588
    3. ''w' → logprob: -9.113051414489746
    4. 'w' → logprob: -10.113051414489746
    5. ' w' → logprob: -10.738051414489746
    6. ' ' → logprob: -11.363051414489746
    7. ' (' → logprob: -11.613051414489746
    8. '   ' → logprob: -12.238051414489746
    9. ' '' → logprob: -12.238051414489746
    10. ')' → logprob: -12.363051414489746

Token 109: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00021390743495430797
    2. 'i' → logprob: -8.625213623046875
    3. ''w' → logprob: -11.750213623046875
    4. '('' → logprob: -12.625213623046875
    5. ' w' → logprob: -12.625213623046875
    6. ')' → logprob: -12.625213623046875
    7. '   ' → logprob: -12.750213623046875
    8. ' ' → logprob: -13.250213623046875
    9. '  ' → logprob: -13.437713623046875
    10. 's' → logprob: -14.125213623046875

Token 110: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0005020392127335072
    2. ','' → logprob: -8.50050163269043
    3. ',' → logprob: -8.87550163269043
    4. 'w' → logprob: -9.37550163269043
    5. '',' → logprob: -10.00050163269043
    6. ',w' → logprob: -11.37550163269043
    7. ''w' → logprob: -11.87550163269043
    8. ''' → logprob: -11.87550163269043
    9. '","' → logprob: -14.25050163269043
    10. ' ','' → logprob: -14.25050163269043

Token 111: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0001129602751461789
    2. ''w' → logprob: -9.125112533569336
    3. '')' → logprob: -13.375112533569336
    4. ')' → logprob: -13.500112533569336
    5. ' w' → logprob: -14.875112533569336
    6. 'i' → logprob: -16.125112533569336
    7. '   ' → logprob: -16.250112533569336
    8. ''i' → logprob: -16.375112533569336
    9. ''' → logprob: -16.625112533569336
    10. ' ' → logprob: -16.750112533569336

Token 112: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.25220340490341187
    2. '),' → logprob: -1.5022034645080566
    3. '')]' → logprob: -9.002202987670898
    4. ' ),' → logprob: -10.127202987670898
    5. '('' → logprob: -10.377202987670898
    6. ')]' → logprob: -10.627202987670898
    7. '   ' → logprob: -10.627202987670898
    8. '"),' → logprob: -11.502202987670898
    9. ')' → logprob: -11.877202987670898
    10. '],' → logprob: -12.877202987670898

Token 113: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01427198015153408
    2. ' ('' → logprob: -4.264272212982178
    3. '('[' → logprob: -10.76427173614502
    4. '   ' → logprob: -11.51427173614502
    5. '('<' → logprob: -11.63927173614502
    6. '(',',' → logprob: -11.88927173614502
    7. '(',' → logprob: -11.88927173614502
    8. ' (' → logprob: -12.38927173614502
    9. '('{' → logprob: -12.38927173614502
    10. ')' → logprob: -12.38927173614502

Token 114: '(',' (ID: 30548)
  Prédit: '(',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(','' → logprob: -0.17040973901748657
    2. '(',' → logprob: -1.9204096794128418
    3. '('' → logprob: -4.795409679412842
    4. ')','' → logprob: -6.670409679412842
    5. '(' → logprob: -8.29541015625
    6. '(',',' → logprob: -8.92041015625
    7. ')' → logprob: -9.29541015625
    8. 'i' → logprob: -9.79541015625
    9. '','' → logprob: -11.79541015625
    10. ')',' → logprob: -11.92041015625

Token 115: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.023326070979237556
    2. ')' → logprob: -3.7733261585235596
    3. ' ')' → logprob: -10.27332592010498
    4. ''' → logprob: -10.64832592010498
    5. ''),' → logprob: -12.14832592010498
    6. '   ' → logprob: -12.39832592010498
    7. '),' → logprob: -12.89832592010498
    8. '  ' → logprob: -13.77332592010498
    9. '")' → logprob: -13.89832592010498
    10. '')]' → logprob: -13.89832592010498

Token 116: ''),' (ID: 10047)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.032270003110170364
    2. ''),' → logprob: -3.5322699546813965
    3. ')]' → logprob: -6.2822699546813965
    4. '')]' → logprob: -8.282270431518555
    5. '   ' → logprob: -8.907270431518555
    6. ' ),' → logprob: -9.032270431518555
    7. ')' → logprob: -9.782270431518555
    8. '],' → logprob: -10.282270431518555
    9. '('' → logprob: -11.282270431518555
    10. '',' → logprob: -11.407270431518555

Token 117: ' (' (ID: 350)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.31535083055496216
    2. ' (' → logprob: -1.3153507709503174
    3. '   ' → logprob: -7.0653510093688965
    4. '')' → logprob: -7.9403510093688965
    5. '(',',' → logprob: -8.690350532531738
    6. ' ('' → logprob: -9.065350532531738
    7. '(' → logprob: -9.190350532531738
    8. ' ')' → logprob: -9.440350532531738
    9. '('',' → logprob: -9.815350532531738
    10. ')' → logprob: -9.940350532531738

Token 118: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0010456704767420888
    2. ' ')' → logprob: -7.1260457038879395
    3. ')' → logprob: -9.001045227050781
    4. '   ' → logprob: -9.876045227050781
    5. ''),' → logprob: -10.501045227050781
    6. ''' → logprob: -11.001045227050781
    7. '       ' → logprob: -12.876045227050781
    8. '  ' → logprob: -13.001045227050781
    9. ' ' → logprob: -13.001045227050781
    10. '('' → logprob: -13.251045227050781

Token 119: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.2660149931907654
    2. '','' → logprob: -1.8910150527954102
    3. ',' → logprob: -2.76601505279541
    4. ','' → logprob: -4.01601505279541
    5. '')' → logprob: -6.51601505279541
    6. ''' → logprob: -9.14101505279541
    7. ',)' → logprob: -10.64101505279541
    8. '',(' → logprob: -10.64101505279541
    9. '',"' → logprob: -11.01601505279541
    10. ')' → logprob: -11.01601505279541

Token 120: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.24209414422512054
    2. ''' → logprob: -1.7420941591262817
    3. '(' → logprob: -3.242094039916992
    4. ''(' → logprob: -7.367094039916992
    5. ' '('' → logprob: -9.242094039916992
    6. '')' → logprob: -11.117094039916992
    7. '')]' → logprob: -11.367094039916992
    8. '(
' → logprob: -11.492094039916992
    9. ' (' → logprob: -12.492094039916992
    10. '(

' → logprob: -12.617094039916992

Token 121: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06567390263080597
    2. ')]
' → logprob: -2.815673828125
    3. ']' → logprob: -6.065673828125
    4. '   ' → logprob: -8.065673828125
    5. '')]' → logprob: -8.065673828125
    6. ')' → logprob: -8.440673828125
    7. ')]

' → logprob: -8.565673828125
    8. ')]
' → logprob: -9.440673828125
    9. ']
' → logprob: -9.565673828125
    10. '),' → logprob: -9.815673828125

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030637492891401052
    2. ' if' → logprob: -6.378063678741455
    3. '
' → logprob: -7.003063678741455
    4. 'if' → logprob: -7.878063678741455
    5. '    
' → logprob: -10.628064155578613
    6. 'def' → logprob: -11.378064155578613
    7. 'for' → logprob: -11.628064155578613
    8. '<|end|>' → logprob: -11.753064155578613
    9. ' for' → logprob: -12.003064155578613
    10. ')' → logprob: -12.128064155578613

Token 123: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013181174173951149
    2. ' if' → logprob: -4.638181209564209
    3. '   ' → logprob: -5.888181209564209
    4. 'for' → logprob: -7.388181209564209
    5. 'cost' → logprob: -11.26318073272705
    6. ' for' → logprob: -12.13818073272705
    7. 'min' → logprob: -12.51318073272705
    8. 'return' → logprob: -13.01318073272705
    9. '```' → logprob: -13.63818073272705
    10. 'i' → logprob: -14.13818073272705

Token 124: ' c' (ID: 274)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8284734487533569
    2. ' c' → logprob: -1.078473448753357
    3. '(c' → logprob: -1.703473448753357
    4. 'c' → logprob: -3.2034735679626465
    5. '(' → logprob: -7.8284735679626465
    6. '(s' → logprob: -10.203473091125488
    7. ' ' → logprob: -10.828473091125488
    8. ' s' → logprob: -11.703473091125488
    9. '	c' → logprob: -11.953473091125488
    10. '   ' → logprob: -11.953473091125488

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.00000286102295
    3. '==' → logprob: -15.00000286102295
    4. ' ==' → logprob: -17.125001907348633
    5. '```' → logprob: -17.125001907348633
    6. ' ' → logprob: -18.125001907348633
    7. '=' → logprob: -18.750001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '\xe2\x82' → logprob: -19.750001907348633
    10. '(' → logprob: -19.750001907348633

Token 126: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47407999634742737
    2. '==' → logprob: -0.974079966545105
    3. '==
' → logprob: -14.099080085754395
    4. ',' → logprob: -14.349080085754395
    5. ' ' → logprob: -14.724080085754395
    6. '=' → logprob: -15.349080085754395
    7. ')==' → logprob: -15.724080085754395
    8. ')' → logprob: -15.849080085754395
    9. ']==' → logprob: -16.099079132080078
    10. ' ==
' → logprob: -16.349079132080078

Token 127: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026306452229619026
    2. ' c' → logprob: -3.651306390762329
    3. ' ' → logprob: -12.90130615234375
    4. ''' → logprob: -13.65130615234375
    5. '   ' → logprob: -14.02630615234375
    6. '	c' → logprob: -14.02630615234375
    7. 's' → logprob: -15.40130615234375
    8. ')c' → logprob: -15.77630615234375
    9. '  ' → logprob: -16.15130615234375
    10. ' ' → logprob: -16.52630615234375

Token 128: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.408677290892228e-05
    2. 'c' → logprob: -10.1250638961792
    3. '1' → logprob: -11.3750638961792
    4. '_' → logprob: -12.1250638961792
    5. ' c' → logprob: -12.2500638961792
    6. 's' → logprob: -13.7500638961792
    7. ' ' → logprob: -14.3750638961792
    8. '   ' → logprob: -15.0000638961792
    9. '₂' → logprob: -15.7500638961792
    10. '_c' → logprob: -16.000064849853516

Token 129: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1371421068906784
    2. ':
' → logprob: -2.2621421813964844
    3. '   ' → logprob: -4.012142181396484
    4. ':return' → logprob: -5.762142181396484
    5. '       ' → logprob: -6.137142181396484
    6. ' or' → logprob: -8.387142181396484
    7. ' and' → logprob: -8.512142181396484
    8. ' :' → logprob: -9.887142181396484
    9. ':
' → logprob: -10.262142181396484
    10. ' :
' → logprob: -10.387142181396484

Token 130: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.613146185874939
    2. 'is' → logprob: -0.988146185874939
    3. 'c' → logprob: -3.1131463050842285
    4. '(is' → logprob: -3.6131463050842285
    5. ' (' → logprob: -5.2381463050842285
    6. ' is' → logprob: -5.7381463050842285
    7. '(' → logprob: -6.4881463050842285
    8. ' c' → logprob: -6.8631463050842285
    9. '(any' → logprob: -6.8631463050842285
    10. 'any' → logprob: -6.9881463050842285

Token 131: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002692532492801547
    2. '(c' → logprob: -6.002692699432373
    3. ' c' → logprob: -9.252692222595215
    4. ' (' → logprob: -9.752692222595215
    5. ',c' → logprob: -11.002692222595215
    6. '   ' → logprob: -11.002692222595215
    7. ' ' → logprob: -11.752692222595215
    8. '('' → logprob: -12.002692222595215
    9. ')c' → logprob: -12.127692222595215
    10. ',' → logprob: -12.377692222595215

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -17.625
    3. ')' → logprob: -19.875
    4. '_' → logprob: -20.25
    5. ' ' → logprob: -21.125
    6. 'on' → logprob: -21.75
    7. ',' → logprob: -21.875
    8. 's' → logprob: -21.875
    9. 'c' → logprob: -22.5
    10. '```' → logprob: -22.75

Token 133: ' ==' (ID: 951)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.5782108902931213
    2. ',' → logprob: -1.2032108306884766
    3. '=='' → logprob: -2.7032108306884766
    4. ' ==' → logprob: -3.4532108306884766
    5. ' in' → logprob: -3.7032108306884766
    6. '==' → logprob: -4.703210830688477
    7. ' =='' → logprob: -6.578210830688477
    8. ',)' → logprob: -7.078210830688477
    9. ',in' → logprob: -7.203210830688477
    10. ','' → logprob: -7.203210830688477

Token 134: ' '' (ID: 461)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.000713266315869987
    2. ' '' → logprob: -7.625713348388672
    3. ''' → logprob: -9.125713348388672
    4. ''w' → logprob: -9.750713348388672
    5. 'i' → logprob: -11.125713348388672
    6. ''s' → logprob: -11.250713348388672
    7. '')' → logprob: -11.625713348388672
    8. ''u' → logprob: -12.500713348388672
    9. '‘i' → logprob: -13.000713348388672
    10. ''I' → logprob: -13.125713348388672

Token 135: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00034476007567718625
    2. ''i' → logprob: -8.250345230102539
    3. '('' → logprob: -10.500345230102539
    4. 'w' → logprob: -10.500345230102539
    5. ''' → logprob: -11.250345230102539
    6. ' '' → logprob: -12.125345230102539
    7. ')' → logprob: -13.000345230102539
    8. ' i' → logprob: -13.125345230102539
    9. '(i' → logprob: -14.125345230102539
    10. ' ' → logprob: -14.375345230102539

Token 136: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0019088850822299719
    2. ''or' → logprob: -6.876908779144287
    3. ' '' → logprob: -7.626908779144287
    4. ' or' → logprob: -8.126909255981445
    5. '')' → logprob: -10.376909255981445
    6. 'or' → logprob: -10.501909255981445
    7. ''i' → logprob: -11.376909255981445
    8. ''):
' → logprob: -12.126909255981445
    9. 'i' → logprob: -12.876909255981445
    10. 'w' → logprob: -12.876909255981445

Token 137: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.007872898131608963
    2. 'or' → logprob: -4.882873058319092
    3. ' ' → logprob: -8.882872581481934
    4. '):' → logprob: -10.132872581481934
    5. ')' → logprob: -10.507872581481934
    6. '   ' → logprob: -10.882872581481934
    7. '    ' → logprob: -11.257872581481934
    8. '):
' → logprob: -11.757872581481934
    9. '):

' → logprob: -12.007872581481934
    10. '  ' → logprob: -12.507872581481934

Token 138: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07020094990730286
    2. ' c' → logprob: -2.6952009201049805
    3. '   ' → logprob: -8.44520092010498
    4. '    ' → logprob: -10.94520092010498
    5. '  ' → logprob: -12.44520092010498
    6. 's' → logprob: -12.44520092010498
    7. ')c' → logprob: -12.44520092010498
    8. ' ' → logprob: -12.57020092010498
    9. '       ' → logprob: -12.94520092010498
    10. 'w' → logprob: -13.19520092010498

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15532007813453674
    2. 'w' → logprob: -2.155320167541504
    3. ''w' → logprob: -4.530320167541504
    4. '2' → logprob: -4.905320167541504
    5. 's' → logprob: -5.655320167541504
    6. ' w' → logprob: -6.280320167541504
    7. '   ' → logprob: -6.655320167541504
    8. 'c' → logprob: -7.655320167541504
    9. ''s' → logprob: -7.780320167541504
    10. ')' → logprob: -7.905320167541504

Token 140: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06603363901376724
    2. '==' → logprob: -2.8160336017608643
    3. '=='' → logprob: -5.566033840179443
    4. ' =='' → logprob: -8.441033363342285
    5. ' or' → logprob: -12.566033363342285
    6. 'w' → logprob: -12.816033363342285
    7. ' ' → logprob: -12.816033363342285
    8. ')' → logprob: -13.691033363342285
    9. '   ' → logprob: -13.691033363342285
    10. ' '' → logprob: -14.441033363342285

Token 141: ' '' (ID: 461)
  Prédit: ''w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''w' → logprob: -0.029662659391760826
    2. ' '' → logprob: -3.904662609100342
    3. ''' → logprob: -4.779662609100342
    4. 'w' → logprob: -8.6546630859375
    5. ' ' → logprob: -9.0296630859375
    6. ''s' → logprob: -9.4046630859375
    7. '')' → logprob: -9.6546630859375
    8. '   ' → logprob: -9.9046630859375
    9. '  ' → logprob: -10.2796630859375
    10. ' w' → logprob: -10.4046630859375

Token 142: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.000737442634999752
    2. ''w' → logprob: -7.25073766708374
    3. ''' → logprob: -11.250737190246582
    4. ' w' → logprob: -12.375737190246582
    5. '')' → logprob: -13.000737190246582
    6. ')' → logprob: -13.500737190246582
    7. ' ' → logprob: -13.625737190246582
    8. '('' → logprob: -13.875737190246582
    9. ''s' → logprob: -13.875737190246582
    10. '   ' → logprob: -14.625737190246582

Token 143: ''):
' (ID: 26539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5172432065010071
    2. ''):' → logprob: -1.0172431468963623
    3. ''):
' → logprob: -3.7672431468963623
    4. '):
' → logprob: -4.267243385314941
    5. ')' → logprob: -5.892243385314941
    6. ' or' → logprob: -7.017243385314941
    7. '')' → logprob: -7.892243385314941
    8. ''' → logprob: -8.017243385314941
    9. ' ):' → logprob: -8.017243385314941
    10. '   ' → logprob: -8.142243385314941

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009101522737182677
    2. '   ' → logprob: -7.75091028213501
    3. ' return' → logprob: -8.625909805297852
    4. '
' → logprob: -9.000909805297852
    5. 'return' → logprob: -9.125909805297852
    6. ':' → logprob: -10.375909805297852
    7. ':return' → logprob: -11.500909805297852
    8. ':
' → logprob: -12.125909805297852
    9. '
' → logprob: -12.750909805297852
    10. '	return' → logprob: -13.000909805297852

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19318391382694244
    2. ' return' → logprob: -2.3181838989257812
    3. '   ' → logprob: -2.8181838989257812
    4. '       ' → logprob: -4.068183898925781
    5. '	return' → logprob: -8.318183898925781
    6. '
' → logprob: -9.568183898925781
    7. '0' → logprob: -10.318183898925781
    8. '           ' → logprob: -10.943183898925781
    9. ':return' → logprob: -10.943183898925781
    10. '    ' → logprob: -12.943183898925781

Token 146: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.747814349073451e-05
    2. ' ' → logprob: -11.000017166137695
    3. 's' → logprob: -15.375017166137695
    4. '1' → logprob: -15.500017166137695
    5. '   ' → logprob: -16.000017166137695
    6. '00' → logprob: -17.250017166137695
    7. 'cost' → logprob: -17.750017166137695
    8. '(' → logprob: -17.875017166137695
    9. '000' → logprob: -17.937517166137695
    10. 'o' → logprob: -18.187517166137695

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '1' → logprob: -15.125000953674316
    4. 's' → logprob: -16.875
    5. '(' → logprob: -17.75
    6. 'cost' → logprob: -18.375
    7. '   ' → logprob: -18.75
    8. '00' → logprob: -18.8125
    9. '-' → logprob: -18.875
    10. '000' → logprob: -19.1875

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005293221911415458
    2. '
' → logprob: -7.7505292892456055
    3. '    
' → logprob: -9.750529289245605
    4. 'elif' → logprob: -11.500529289245605
    5. '<|end|>' → logprob: -11.625529289245605
    6. ' elif' → logprob: -12.875529289245605
    7. '  
' → logprob: -13.000529289245605
    8. '       ' → logprob: -13.125529289245605
    9. ',' → logprob: -13.250529289245605
    10. ')' → logprob: -13.375529289245605

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010986098641296849
    2. '    
' → logprob: -10.250109672546387
    3. 'elif' → logprob: -10.625109672546387
    4. '
' → logprob: -10.750109672546387
    5. ' if' → logprob: -11.125109672546387
    6. ' elif' → logprob: -12.375109672546387
    7. 'if' → logprob: -12.750109672546387
    8. ',' → logprob: -13.875109672546387
    9. '  
' → logprob: -14.125109672546387
    10. '<|end|>' → logprob: -14.250109672546387

Token 150: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1492636352777481
    2. ' if' → logprob: -2.399263620376587
    3. 'elif' → logprob: -3.649263620376587
    4. '   ' → logprob: -3.899263620376587
    5. ' elif' → logprob: -6.899263858795166
    6. 'return' → logprob: -8.024263381958008
    7. '    
' → logprob: -9.274263381958008
    8. 'else' → logprob: -9.649263381958008
    9. 'cost' → logprob: -9.899263381958008
    10. ' return' → logprob: -11.024263381958008

Token 151: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6016172766685486
    2. '(c' → logprob: -0.8516172766685486
    3. ' c' → logprob: -4.601617336273193
    4. 'c' → logprob: -5.226617336273193
    5. '{' → logprob: -5.601617336273193
    6. '(s' → logprob: -5.851617336273193
    7. '(' → logprob: -6.851617336273193
    8. ' {' → logprob: -7.101617336273193
    9. '(is' → logprob: -7.601617336273193
    10. '(abs' → logprob: -8.851616859436035

Token 152: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06449682265520096
    2. '(c' → logprob: -2.8144967555999756
    3. ' c' → logprob: -6.314496994018555
    4. ' (' → logprob: -7.439496994018555
    5. '   ' → logprob: -9.689496994018555
    6. ' ' → logprob: -10.189496994018555
    7. '  ' → logprob: -11.689496994018555
    8. ')c' → logprob: -12.189496994018555
    9. ',c' → logprob: -12.814496994018555
    10. '{' → logprob: -12.939496994018555

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -15.000000953674316
    3. 'c' → logprob: -15.125000953674316
    4. ',' → logprob: -16.125001907348633
    5. 's' → logprob: -16.125001907348633
    6. '2' → logprob: -16.625001907348633
    7. '_' → logprob: -16.625001907348633
    8. '('' → logprob: -17.375001907348633
    9. 'w' → logprob: -18.125001907348633
    10. 'i' → logprob: -18.687501907348633

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10710354894399643
    2. ' ==' → logprob: -2.8571035861968994
    3. '==' → logprob: -3.3571035861968994
    4. '=='' → logprob: -5.48210334777832
    5. ' ,' → logprob: -5.98210334777832
    6. ',c' → logprob: -6.35710334777832
    7. ','' → logprob: -7.60710334777832
    8. ' =='' → logprob: -9.73210334777832
    9. ')' → logprob: -9.98210334777832
    10. ' in' → logprob: -10.35710334777832

Token 155: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003503611544147134
    2. ' c' → logprob: -6.253503799438477
    3. '')' → logprob: -6.628503799438477
    4. ''' → logprob: -8.503503799438477
    5. ')c' → logprob: -11.128503799438477
    6. '   ' → logprob: -11.878503799438477
    7. ' ')' → logprob: -11.878503799438477
    8. ')' → logprob: -11.878503799438477
    9. ' ' → logprob: -12.628503799438477
    10. '  ' → logprob: -13.378503799438477

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021176543668843806
    2. ',' → logprob: -8.625211715698242
    3. '1' → logprob: -11.250211715698242
    4. ')' → logprob: -11.625211715698242
    5. 's' → logprob: -11.875211715698242
    6. '',' → logprob: -14.750211715698242
    7. ',p' → logprob: -14.750211715698242
    8. '')' → logprob: -15.000211715698242
    9. ',c' → logprob: -15.375211715698242
    10. '_pairs' → logprob: -15.375211715698242

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00808908324688673
    2. ' )' → logprob: -5.133089065551758
    3. ' in' → logprob: -6.383089065551758
    4. '==' → logprob: -8.758089065551758
    5. ')==' → logprob: -8.758089065551758
    6. ' ==' → logprob: -9.508089065551758
    7. 'in' → logprob: -9.758089065551758
    8. ')=='' → logprob: -12.133089065551758
    9. '')' → logprob: -12.258089065551758
    10. '   ' → logprob: -12.508089065551758

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.36261656880378723
    2. ')' → logprob: -1.2376165390014648
    3. 'in' → logprob: -4.737616539001465
    4. ' )' → logprob: -5.862616539001465
    5. '==' → logprob: -6.987616539001465
    6. ' ==' → logprob: -6.987616539001465
    7. ')==' → logprob: -7.612616539001465
    8. ' not' → logprob: -9.612616539001465
    9. '<|end|>' → logprob: -11.112616539001465
    10. ' ' → logprob: -11.737616539001465

Token 159: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.2537543475627899
    2. ' pairs' → logprob: -1.5037543773651123
    3. '[' → logprob: -6.753754138946533
    4. ' [('' → logprob: -7.378754138946533
    5. 'p' → logprob: -11.003754615783691
    6. '[(' → logprob: -12.253754615783691
    7. 'pair' → logprob: -12.878754615783691
    8. '_pairs' → logprob: -13.128754615783691
    9. '   ' → logprob: -13.128754615783691
    10. 'Pairs' → logprob: -14.128754615783691

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2629458010196686
    2. ' or' → logprob: -2.2629458904266357
    3. ':
' → logprob: -2.3879458904266357
    4. '   ' → logprob: -3.3879458904266357
    5. ':return' → logprob: -6.762945652008057
    6. '       ' → logprob: -9.012946128845215
    7. '):
' → logprob: -9.887946128845215
    8. ' and' → logprob: -10.012946128845215
    9. '==' → logprob: -10.012946128845215
    10. ')' → logprob: -10.012946128845215

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016124693676829338
    2. '   ' → logprob: -4.141124725341797
    3. ':' → logprob: -10.766124725341797
    4. '1' → logprob: -11.141124725341797
    5. ' return' → logprob: -11.141124725341797
    6. 'return' → logprob: -11.391124725341797
    7. ':
' → logprob: -11.641124725341797
    8. '0' → logprob: -11.891124725341797
    9. '):
' → logprob: -12.891124725341797
    10. ':return' → logprob: -13.266124725341797

Token 162: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8988212943077087
    2. '0' → logprob: -1.5238213539123535
    3. '1' → logprob: -1.8988213539123535
    4. 'return' (adapté à ' return') → logprob: -2.1488213539123535
    5. ' return' → logprob: -2.3988213539123535
    6. '       ' → logprob: -4.5238213539123535
    7. ' ' → logprob: -5.0238213539123535
    8. '2' → logprob: -8.523820877075195
    9. '           ' → logprob: -8.773820877075195
    10. '
' → logprob: -10.648820877075195

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6329105496406555
    2. '0' → logprob: -0.7579105496406555
    3. ' ' → logprob: -8.25791072845459
    4. '2' → logprob: -10.13291072845459
    5. '   ' → logprob: -12.32041072845459
    6. '3' → logprob: -13.13291072845459
    7. '10' → logprob: -14.44541072845459
    8. 'cost' → logprob: -14.44541072845459
    9. '5' → logprob: -14.75791072845459
    10. '4' → logprob: -14.82041072845459

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.428816020488739
    2. '1' → logprob: -1.0538160800933838
    3. '2' → logprob: -9.678815841674805
    4. ' ' → logprob: -10.178815841674805
    5. '3' → logprob: -12.178815841674805
    6. '   ' → logprob: -13.178815841674805
    7. '5' → logprob: -14.053815841674805
    8. '10' → logprob: -14.303815841674805
    9. '100' → logprob: -14.428815841674805
    10. '4' → logprob: -14.491315841674805

Token 165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004006810951977968
    2. '
' → logprob: -6.004006862640381
    3. '    
' → logprob: -6.629006862640381
    4. 'return' → logprob: -9.379006385803223
    5. '  
' → logprob: -9.504006385803223
    6. '   
' → logprob: -11.129006385803223
    7. 'if' → logprob: -12.004006385803223
    8. ' return' → logprob: -12.004006385803223
    9. ' if' → logprob: -13.004006385803223
    10. '1' → logprob: -13.004006385803223

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007089786231517792
    2. 'return' → logprob: -7.875709056854248
    3. '
' → logprob: -8.62570858001709
    4. 'if' → logprob: -9.25070858001709
    5. ' if' → logprob: -10.62570858001709
    6. ' return' → logprob: -11.12570858001709
    7. '    
' → logprob: -11.50070858001709
    8. '#' → logprob: -14.37570858001709
    9. 'import' → logprob: -14.37570858001709
    10. '```' → logprob: -14.50070858001709

Token 167: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.741470217704773
    2. 'return' → logprob: -0.741470217704773
    3. '   ' → logprob: -3.3664703369140625
    4. '#' (adapté à ' #') → logprob: -4.7414703369140625
    5. ' if' → logprob: -6.3664703369140625
    6. ' return' → logprob: -6.7414703369140625
    7. 'cost' → logprob: -7.9914703369140625
    8. 'for' → logprob: -8.366470336914062
    9. '
' → logprob: -9.116470336914062
    10. 'else' → logprob: -9.491470336914062

Token 168: ' Sinon' (ID: 154924)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16459961235523224
    2. ' return' → logprob: -2.289599657058716
    3. 'if' → logprob: -3.414599657058716
    4. '#' → logprob: -4.664599418640137
    5. ' if' → logprob: -5.289599418640137
    6. 'sub' → logprob: -6.664599418640137
    7. ' #' → logprob: -7.164599418640137
    8. 'min' → logprob: -8.414599418640137
    9. '   ' → logprob: -8.914599418640137
    10. ' substitutions' → logprob: -9.039599418640137

Token 169: ',' (ID: 11)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2582983076572418
    2. 'return' → logprob: -2.008298397064209
    3. '   ' → logprob: -2.383298397064209
    4. ' if' → logprob: -7.258298397064209
    5. 'if' → logprob: -8.88329792022705
    6. '#' → logprob: -9.38329792022705
    7. '
' → logprob: -9.88329792022705
    8. ' #' → logprob: -10.13329792022705
    9. '    
' → logprob: -10.38329792022705
    10. ':' → logprob: -10.38329792022705

Token 170: ' il' (ID: 1793)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34997549653053284
    2. ' return' → logprob: -1.2249754667282104
    3. ' if' → logprob: -7.3499755859375
    4. 'if' → logprob: -7.4749755859375
    5. '#' → logprob: -8.4749755859375
    6. '   ' → logprob: -9.7249755859375
    7. ' #' → logprob: -10.2249755859375
    8. 'ret' → logprob: -12.7249755859375
    9. ' ' → logprob: -13.0999755859375
    10. '1' → logprob: -13.2249755859375

Token 171: ' faut' (ID: 17821)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7765122652053833
    2. ' faut' → logprob: -1.0265122652053833
    3. 'return' → logprob: -2.5265121459960938
    4. 'f' → logprob: -2.6515121459960938
    5. '   ' → logprob: -3.9015121459960938
    6. ' ' → logprob: -6.026512145996094
    7. ' faudrait' → logprob: -6.276512145996094
    8. ' faudra' → logprob: -6.401512145996094
    9. 's' → logprob: -7.026512145996094
    10. ' f' → logprob: -7.276512145996094

Token 172: ' au' (ID: 2791)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15495076775550842
    2. 'sub' → logprob: -2.9049508571624756
    3. '1' → logprob: -3.5299508571624756
    4. ' return' → logprob: -3.6549508571624756
    5. ' remplacer' → logprob: -4.0299506187438965
    6. ' ' → logprob: -5.9049506187438965
    7. 'changer' → logprob: -5.9049506187438965
    8. ' effectuer' → logprob: -6.6549506187438965
    9. ' retourner' → logprob: -6.6549506187438965
    10. '   ' → logprob: -7.0299506187438965

Token 173: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.02369961515069008
    2. '   ' → logprob: -4.273699760437012
    3. 'mo' → logprob: -5.398699760437012
    4. ' moins' → logprob: -6.523699760437012
    5. '1' → logprob: -6.773699760437012
    6. 'mins' → logprob: -7.523699760437012
    7. '  ' → logprob: -8.273699760437012
    8. '       ' → logprob: -8.648699760437012
    9. '```' → logprob: -8.648699760437012
    10. 'ins' → logprob: -8.648699760437012

Token 174: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2239019125699997
    2. ' ' → logprob: -1.8489018678665161
    3. ' une' → logprob: -4.098901748657227
    4. 'une' → logprob: -4.473901748657227
    5. ' one' → logprob: -4.598901748657227
    6. 'one' → logprob: -6.348901748657227
    7. ' remplacer' → logprob: -6.723901748657227
    8. 'un' → logprob: -7.098901748657227
    9. ' un' → logprob: -7.098901748657227
    10. '2' → logprob: -8.973901748657227

Token 175: ' substitution' (ID: 92838)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.32898619771003723
    2. ' substitution' → logprob: -1.3289861679077148
    3. '1' → logprob: -4.578986167907715
    4. ' sub' → logprob: -5.828986167907715
    5. ' ' → logprob: -6.578986167907715
    6. '_sub' → logprob: -8.453986167907715
    7. ' remplacement' → logprob: -9.078986167907715
    8. 'subst' → logprob: -9.578986167907715
    9. 's' → logprob: -9.953986167907715
    10. ' subs' → logprob: -10.078986167907715

Token 176: '.' (ID: 13)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33612221479415894
    2. 'return' → logprob: -1.3361222743988037
    3. ' return' → logprob: -3.8361222743988037
    4. '   ' → logprob: -6.961122035980225
    5. ' ' → logprob: -10.836122512817383
    6. '2' → logprob: -10.961122512817383
    7. ':return' → logprob: -10.961122512817383
    8. 'eturn' → logprob: -11.961122512817383
    9. ',' → logprob: -12.586122512817383
    10. '.' → logprob: -13.211122512817383

Token 177: ' On' (ID: 2160)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.767255425453186
    2. 'return' → logprob: -0.767255425453186
    3. '   ' → logprob: -2.6422553062438965
    4. ' if' → logprob: -8.642255783081055
    5. 'if' → logprob: -10.267255783081055
    6. '	return' → logprob: -11.767255783081055
    7. '1' → logprob: -12.392255783081055
    8. '```' → logprob: -13.892255783081055
    9. 'eturn' → logprob: -14.142255783081055
    10. ' ' → logprob: -14.267255783081055

Token 178: ' essa' (ID: 19417)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16076599061489105
    2. 'return' → logprob: -2.1607658863067627
    3. ' if' → logprob: -4.660766124725342
    4. ' retourne' → logprob: -5.035766124725342
    5. 'if' → logprob: -5.160766124725342
    6. ' peut' → logprob: -5.285766124725342
    7. '   ' → logprob: -6.160766124725342
    8. 'elif' → logprob: -6.910766124725342
    9. ' suppose' → logprob: -7.035766124725342
    10. 'eturn' → logprob: -7.160766124725342

Token 179: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0023315283469855785
    2. 'ye' → logprob: -6.752331733703613
    3. 'y' → logprob: -6.877331733703613
    4. 'aye' → logprob: -9.502331733703613
    5. 'i' → logprob: -11.627331733703613
    6. 'ime' → logprob: -11.877331733703613
    7. 'iye' → logprob: -12.252331733703613
    8. 'ile' → logprob: -12.502331733703613
    9. 'e' → logprob: -12.627331733703613
    10. 'yer' → logprob: -12.877331733703613

Token 180: ' toutes' (ID: 17502)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7333899140357971
    2. ':' → logprob: -1.9833898544311523
    3. '   ' → logprob: -2.2333898544311523
    4. ' toutes' → logprob: -2.2333898544311523
    5. ' deux' → logprob: -3.7333898544311523
    6. 's' → logprob: -3.9833898544311523
    7. ' for' → logprob: -3.9833898544311523
    8. ' ' → logprob: -4.233389854431152
    9. ' d' → logprob: -4.608389854431152
    10. ' s' → logprob: -4.733389854431152

Token 181: ' comb' (ID: 4134)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -1.0863990783691406
    2. 'sub' → logprob: -1.4613990783691406
    3. ' pairs' → logprob: -2.4613990783691406
    4. ' substitutions' → logprob: -2.4613990783691406
    5. ' possibilités' → logprob: -3.0863990783691406
    6. 'pairs' → logprob: -3.2113990783691406
    7. '   ' → logprob: -3.2113990783691406
    8. ' ' → logprob: -3.8363990783691406
    9. 'possible' → logprob: -4.086399078369141
    10. ' possibles' → logprob: -4.336399078369141

Token 182: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.05140084773302078
    2. 'ina' → logprob: -3.301400899887085
    3. 'inations' → logprob: -5.051400661468506
    4. 'iner' → logprob: -6.426400661468506
    5. 'ines' → logprob: -6.551400661468506
    6. 'in' → logprob: -6.926400661468506
    7. 'inas' → logprob: -7.301400661468506
    8. '('' → logprob: -7.426400661468506
    9. 'ine' → logprob: -8.176401138305664
    10. 'es' → logprob: -8.301401138305664

Token 183: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.182376891374588
    2. 'sons' → logprob: -1.8073768615722656
    3. 's' → logprob: -6.932376861572266
    4. 'son' → logprob: -7.432376861572266
    5. 'asons' → logprob: -8.557376861572266
    6. 'ais' → logprob: -8.682376861572266
    7. 'a' → logprob: -9.182376861572266
    8. 'on' → logprob: -9.432376861572266
    9. 'rais' → logprob: -9.557376861572266
    10. 'r' → logprob: -9.682376861572266

Token 184: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5170121192932129
    2. ' return' → logprob: -2.017012119293213
    3. ' for' → logprob: -2.392012119293213
    4. ' possibles' → logprob: -2.517012119293213
    5. 'return' → logprob: -3.267012119293213
    6. ' possible' → logprob: -3.767012119293213
    7. 'for' → logprob: -4.267012119293213
    8. 'possible' → logprob: -5.017012119293213
    9. ' de' → logprob: -5.517012119293213
    10. ' =' → logprob: -6.517012119293213

Token 185: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8260118365287781
    2. ' return' → logprob: -1.5760118961334229
    3. ' for' → logprob: -2.576011896133423
    4. ' possibles' → logprob: -2.701011896133423
    5. 'return' → logprob: -2.951011896133423
    6. ' possible' → logprob: -2.951011896133423
    7. 'possible' → logprob: -4.451011657714844
    8. ' and' → logprob: -4.451011657714844
    9. 'for' → logprob: -4.576011657714844
    10. 'def' → logprob: -4.576011657714844

Token 186: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.872180700302124
    2. ' min' → logprob: -1.247180700302124
    3. '   ' → logprob: -2.247180700302124
    4. 'return' → logprob: -2.747180700302124
    5. ' return' → logprob: -3.497180700302124
    6. 'cost' → logprob: -3.872180700302124
    7. ' substitutions' → logprob: -4.122180938720703
    8. 'sub' → logprob: -4.372180938720703
    9. 'c' → logprob: -4.622180938720703
    10. 'possible' → logprob: -4.997180938720703

Token 187: ' chars' (ID: 47991)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.8224402666091919
    2. 'min' → logprob: -1.447440266609192
    3. 'return' → logprob: -1.822440266609192
    4. ' return' → logprob: -2.5724401473999023
    5. 'cost' → logprob: -2.9474401473999023
    6. 'subs' → logprob: -4.822440147399902
    7. 'sub' → logprob: -5.197440147399902
    8. '   ' → logprob: -5.322440147399902
    9. ' substitutions' → logprob: -5.697440147399902
    10. 'best' → logprob: -5.822440147399902

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014199826866388321
    2. '=' → logprob: -4.264199733734131
    3. '=['' → logprob: -10.389200210571289
    4. ' ='' → logprob: -13.514200210571289
    5. '=('' → logprob: -14.139200210571289
    6. ' ' → logprob: -14.514200210571289
    7. '_possible' → logprob: -14.514200210571289
    8. ' possible' → logprob: -14.514200210571289
    9. 'possible' → logprob: -14.639200210571289
    10. 's' → logprob: -14.889200210571289

Token 189: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.6932055354118347
    2. ' ['' → logprob: -0.6932055354118347
    3. ' '' → logprob: -10.443205833435059
    4. '('' → logprob: -11.443205833435059
    5. ''' → logprob: -11.943205833435059
    6. '[i' → logprob: -12.693205833435059
    7. ''i' → logprob: -13.068205833435059
    8. '[' → logprob: -13.068205833435059
    9. '["' → logprob: -13.193205833435059
    10. '[['' → logprob: -14.443205833435059

Token 190: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05569634586572647
    2. ''i' → logprob: -2.9306962490081787
    3. ''' → logprob: -7.805696487426758
    4. '('' → logprob: -8.305696487426758
    5. '(i' → logprob: -10.055696487426758
    6. '(' → logprob: -10.805696487426758
    7. ' i' → logprob: -10.805696487426758
    8. ' '' → logprob: -10.930696487426758
    9. '(',' → logprob: -11.055696487426758
    10. '(','' → logprob: -11.305696487426758

Token 191: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.04330666363239288
    2. '','' → logprob: -3.168306589126587
    3. ''' → logprob: -8.418306350708008
    4. 'w' → logprob: -9.918306350708008
    5. ' ',' → logprob: -11.293306350708008
    6. 'i' → logprob: -11.668306350708008
    7. '',
' → logprob: -12.293306350708008
    8. '(','' → logprob: -13.168306350708008
    9. ''w' → logprob: -13.293306350708008
    10. ' ','' → logprob: -13.418306350708008

Token 192: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.001970031065866351
    2. 'i' → logprob: -6.376969814300537
    3. '(','' → logprob: -8.376970291137695
    4. '(',' → logprob: -11.126970291137695
    5. ')','' → logprob: -11.751970291137695
    6. '('' → logprob: -11.751970291137695
    7. ')' → logprob: -12.251970291137695
    8. ')',' → logprob: -14.376970291137695
    9. ' ','' → logprob: -14.626970291137695
    10. ' w' → logprob: -14.626970291137695

Token 193: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.10822085291147232
    2. '',' → logprob: -2.6082208156585693
    3. '(','' → logprob: -3.7332208156585693
    4. '(',' → logprob: -5.483221054077148
    5. ')','' → logprob: -8.233221054077148
    6. ''' → logprob: -8.233221054077148
    7. ' ','' → logprob: -9.358221054077148
    8. ',' → logprob: -9.733221054077148
    9. '','','' → logprob: -10.233221054077148
    10. '('' → logprob: -10.733221054077148

Token 194: '(',' (ID: 30548)
  Prédit: '(',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(','' → logprob: -0.3982512950897217
    2. '(',' → logprob: -1.1482512950897217
    3. '('' → logprob: -4.773251533508301
    4. '(' → logprob: -6.023251533508301
    5. '(',',' → logprob: -8.5232515335083
    6. ''' → logprob: -9.3982515335083
    7. '','' → logprob: -10.1482515335083
    8. ')','' → logprob: -10.5232515335083
    9. '(
' → logprob: -10.7732515335083
    10. ' (' → logprob: -10.8982515335083

Token 195: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.001999058062210679
    2. ')' → logprob: -6.2519989013671875
    3. ' ')' → logprob: -10.251998901367188
    4. '')]' → logprob: -11.001998901367188
    5. ''' → logprob: -11.501998901367188
    6. '']' → logprob: -12.126998901367188
    7. ']' → logprob: -14.001998901367188
    8. ')'' → logprob: -14.501998901367188
    9. ')]' → logprob: -14.751998901367188
    10. '',' → logprob: -15.376998901367188

Token 196: '']
' (ID: 9756)
  Prédit: '']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']
' → logprob: -0.04860338568687439
    2. '']' → logprob: -3.2986032962799072
    3. ')' → logprob: -5.423603534698486
    4. ']
' → logprob: -5.673603534698486
    5. ']' → logprob: -6.923603534698486
    6. '']

' → logprob: -7.298603534698486
    7. ')
' → logprob: -8.048603057861328
    8. '']
' → logprob: -8.673603057861328
    9. '',' → logprob: -8.798603057861328
    10. '')' → logprob: -9.298603057861328

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00505586015060544
    2. ' for' → logprob: -5.630055904388428
    3. '
' → logprob: -7.380055904388428
    4. 'for' → logprob: -7.630055904388428
    5. '    
' → logprob: -8.63005542755127
    6. ',' → logprob: -10.38005542755127
    7. '  
' → logprob: -10.50505542755127
    8. 'def' → logprob: -10.88005542755127
    9. '   
' → logprob: -11.13005542755127
    10. ' max' → logprob: -11.13005542755127

Token 198: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.5787473917007446
    2. ' min' → logprob: -0.8287473917007446
    3. 'cost' → logprob: -6.953747272491455
    4. 'best' → logprob: -7.578747272491455
    5. 'return' → logprob: -7.703747272491455
    6. ' return' → logprob: -8.453747749328613
    7. ' best' → logprob: -8.578747749328613
    8. '   ' → logprob: -9.078747749328613
    9. 'max' → logprob: -9.578747749328613
    10. ' costs' → logprob: -9.703747749328613

Token 199: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.006740946788340807
    2. '_' → logprob: -5.006741046905518
    3. '_val' → logprob: -11.63174057006836
    4. '_co' → logprob: -11.63174057006836
    5. '_c' → logprob: -12.88174057006836
    6. ' _' → logprob: -13.88174057006836
    7. '_COST' → logprob: -14.25674057006836
    8. '_score' → logprob: -14.75674057006836
    9. '_price' → logprob: -14.88174057006836
    10. '(' → logprob: -14.88174057006836

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011049113236367702
    2. '=' → logprob: -4.511049270629883
    3. ' ' → logprob: -14.511049270629883
    4. ' =
' → logprob: -14.761049270629883
    5. ',' → logprob: -15.011049270629883
    6. '   ' → logprob: -17.511049270629883
    7. ')' → logprob: -17.636049270629883
    8. 's' → logprob: -17.886049270629883
    9. '  ' → logprob: -17.886049270629883
    10. ' ' → logprob: -18.011049270629883

Token 201: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19415727257728577
    2. 'float' → logprob: -1.9441572427749634
    3. ' float' → logprob: -4.319157123565674
    4. ' ' → logprob: -4.319157123565674
    5. '1' → logprob: -5.194157123565674
    6. '3' → logprob: -7.444157123565674
    7. '10' → logprob: -7.944157123565674
    8. '100' → logprob: -9.319157600402832
    9. '   ' → logprob: -9.319157600402832
    10. '999' → logprob: -10.819157600402832

Token 202: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3506552577018738
    2. 'float' → logprob: -1.2256553173065186
    3. '1' → logprob: -6.8506550788879395
    4. '10' → logprob: -7.9756550788879395
    5. '3' → logprob: -8.225655555725098
    6. ' float' → logprob: -8.350655555725098
    7. '100' → logprob: -8.850655555725098
    8. ' ' → logprob: -9.475655555725098
    9. 'min' → logprob: -10.100655555725098
    10. '999' → logprob: -10.850655555725098

Token 203: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0916791632771492
    2. ' for' → logprob: -3.216679096221924
    3. 'for' → logprob: -3.466679096221924
    4. '<|end|>' → logprob: -4.966679096221924
    5. '  
' → logprob: -5.591679096221924
    6. '   ' → logprob: -5.966679096221924
    7. ' 
' → logprob: -7.091679096221924
    8. '    
' → logprob: -7.091679096221924
    9. '<|end|>' → logprob: -7.841679096221924
    10. '\n' → logprob: -8.091679573059082

Token 204: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09519223123788834
    2. 'for' → logprob: -2.5951921939849854
    3. ' for' → logprob: -4.4701924324035645
    4. '  
' → logprob: -6.2201924324035645
    5. '   ' → logprob: -6.4701924324035645
    6. '    
' → logprob: -7.7201924324035645
    7. '<|end|>' → logprob: -7.8451924324035645
    8. '   
' → logprob: -9.845191955566406
    9. ' 
' → logprob: -9.970191955566406
    10. '\n' → logprob: -10.095191955566406

Token 205: ' On' (ID: 2160)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.47571343183517456
    2. '2' → logprob: -2.1007134914398193
    3. ' float' → logprob: -2.2257134914398193
    4. '1' → logprob: -2.3507134914398193
    5. ' ' → logprob: -3.9757134914398193
    6. 'len' → logprob: -4.47571325302124
    7. 'import' → logprob: -4.47571325302124
    8. ' len' → logprob: -6.35071325302124
    9. '100' → logprob: -6.60071325302124
    10. 'min' → logprob: -6.85071325302124

Token 206: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3053223788738251
    2. ' for' → logprob: -1.6803224086761475
    3. 'continue' → logprob: -3.3053224086761475
    4. 'range' → logprob: -4.180322170257568
    5. ' continue' → logprob: -4.430322170257568
    6. 'cherche' → logprob: -5.930322170257568
    7. 'contin' → logprob: -6.430322170257568
    8. 's' → logprob: -6.805322170257568
    9. ' range' → logprob: -7.055322170257568
    10. 'return' → logprob: -7.305322170257568

Token 207: ' changer' (ID: 47099)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' les' (ID: 1341)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.3559565544128418
    2. ' both' → logprob: -1.4809565544128418
    3. ' one' → logprob: -2.605956554412842
    4. 'c' → logprob: -2.855956554412842
    5. '1' → logprob: -2.980956554412842
    6. ' chars' → logprob: -3.105956554412842
    7. ' c' → logprob: -3.230956554412842
    8. ' ' → logprob: -3.230956554412842
    9. ' chacun' → logprob: -3.480956554412842
    10. ' au' → logprob: -3.605956554412842

Token 209: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5920767188072205
    2. ' deux' → logprob: -1.0920767784118652
    3. '2' → logprob: -2.9670767784118652
    4. ' ' → logprob: -2.9670767784118652
    5. ' two' → logprob: -5.342076778411865
    6. ' chars' → logprob: -7.217076778411865
    7. '1' → logprob: -7.717076778411865
    8. 'c' → logprob: -7.842076778411865
    9. 'two' → logprob: -7.967076778411865
    10. ' dois' → logprob: -8.342076301574707

Token 210: ' caractères' (ID: 183106)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16376352310180664
    2. 'for' → logprob: -1.9137635231018066
    3. '   ' → logprob: -5.913763523101807
    4. '
' → logprob: -7.913763523101807
    5. '<|end|>' → logprob: -8.913763046264648
    6. ' ' → logprob: -9.288763046264648
    7. ')' → logprob: -9.413763046264648
    8. ',' → logprob: -10.163763046264648
    9. '  ' → logprob: -10.663763046264648
    10. '    
' → logprob: -10.788763046264648

Token 211: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6880642771720886
    2. ' for' → logprob: -1.1880643367767334
    3. '
' → logprob: -1.8130643367767334
    4. 'for' → logprob: -4.313064098358154
    5. '<|end|>' → logprob: -5.063064098358154
    6. '    
' → logprob: -5.813064098358154
    7. '  
' → logprob: -5.813064098358154
    8. '<|end|>' → logprob: -6.813064098358154
    9. ',' → logprob: -7.188064098358154
    10. '  ' → logprob: -7.313064098358154

Token 212: ' max' (ID: 2999)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.2788054645061493
    2. 'minimum' → logprob: -2.2788054943084717
    3. 'maximum' → logprob: -2.6538054943084717
    4. 'max' → logprob: -3.2788054943084717
    5. 'most' → logprob: -4.153805255889893
    6. 'moins' → logprob: -4.403805255889893
    7. '1' → logprob: -6.528805255889893
    8. ' plus' → logprob: -6.653805255889893
    9. 'min' → logprob: -7.153805255889893
    10. '+' → logprob: -7.778805255889893

Token 213: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8168240785598755
    2. ' for' → logprob: -0.9418240785598755
    3. '   ' → logprob: -2.441823959350586
    4. 'for' → logprob: -2.941823959350586
    5. '<|end|>' → logprob: -4.691823959350586
    6. '\n' → logprob: -5.066823959350586
    7. '    
' → logprob: -5.316823959350586
    8. '  
' → logprob: -5.566823959350586
    9. '<|end|>' → logprob: -6.316823959350586
    10. ' ' → logprob: -7.691823959350586

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6019431948661804
    2. ' for' → logprob: -0.8519431948661804
    3. 'for' → logprob: -4.476943016052246
    4. '
' → logprob: -5.101943016052246
    5. '<|end|>' → logprob: -5.351943016052246
    6. '    
' → logprob: -6.726943016052246
    7. '<|end|>' → logprob: -7.351943016052246
    8. '  
' → logprob: -7.351943016052246
    9. ',' → logprob: -8.226943016052246
    10. ' ' → logprob: -8.976943016052246

Token 215: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7064159512519836
    2. 'for' (adapté à ' for') → logprob: -0.7064159512519836
    3. '   ' → logprob: -4.331416130065918
    4. '
' → logprob: -11.456416130065918
    5. '	for' → logprob: -11.456416130065918
    6. '    
' → logprob: -12.456416130065918
    7. ' ' → logprob: -13.206416130065918
    8. '  ' → logprob: -13.206416130065918
    9. '<|end|>' → logprob: -13.706416130065918
    10. '  
' → logprob: -13.831416130065918

Token 216: ' a' (ID: 261)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6046048998832703
    2. 'c' → logprob: -0.8546048998832703
    3. 'a' → logprob: -4.854604721069336
    4. ' ch' → logprob: -4.854604721069336
    5. 'x' → logprob: -5.604604721069336
    6. ' a' → logprob: -5.854604721069336
    7. ' x' → logprob: -6.104604721069336
    8. 'ch' → logprob: -6.229604721069336
    9. ' new' → logprob: -7.229604721069336
    10. 'char' → logprob: -7.729604721069336

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01822005957365036
    2. 'in' → logprob: -4.018219947814941
    3. ',' → logprob: -10.768219947814941
    4. 'a' → logprob: -11.143219947814941
    5. 'n' → logprob: -11.143219947814941
    6. ' ' → logprob: -11.768219947814941
    7. 's' → logprob: -11.768219947814941
    8. 'i' → logprob: -13.893219947814941
    9. 'b' → logprob: -14.518219947814941
    10. ' a' → logprob: -15.143219947814941

Token 218: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.4741477072238922
    2. ' chars' → logprob: -0.9741476774215698
    3. '(chars' → logprob: -9.84914779663086
    4. '_chars' → logprob: -11.09914779663086
    5. '['' → logprob: -14.09914779663086
    6. 'Chars' → logprob: -14.47414779663086
    7. ' ['' → logprob: -15.34914779663086
    8. 'c' → logprob: -15.47414779663086
    9. ' ' → logprob: -15.59914779663086
    10. ' characters' → logprob: -15.59914779663086

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003224295098334551
    2. ':
' → logprob: -5.7532243728637695
    3. ' :' → logprob: -10.25322437286377
    4. '   ' → logprob: -12.25322437286377
    5. ',' → logprob: -12.75322437286377
    6. '):' → logprob: -13.87822437286377
    7. ' in' → logprob: -14.25322437286377
    8. '       ' → logprob: -14.50322437286377
    9. ':

' → logprob: -14.87822437286377
    10. ' for' → logprob: -14.87822437286377

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.479010671377182
    2. ' for' → logprob: -0.9790107011795044
    3. 'for' → logprob: -5.854010581970215
    4. '   ' → logprob: -6.729010581970215
    5. ' ' → logprob: -8.354010581970215
    6. '<|end|>' → logprob: -8.354010581970215
    7. '	for' → logprob: -9.104010581970215
    8. '    ' → logprob: -9.104010581970215
    9. '        
' → logprob: -10.479010581970215
    10. ',' → logprob: -10.479010581970215

Token 221: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03890835493803024
    2. 'for' (adapté à ' for') → logprob: -3.2889082431793213
    3. '   ' → logprob: -7.5389084815979
    4. '           ' → logprob: -8.288908004760742
    5. ' ' → logprob: -9.788908004760742
    6. '       ' → logprob: -11.038908004760742
    7. '	for' → logprob: -12.038908004760742
    8. 'b' → logprob: -13.163908004760742
    9. ' b' → logprob: -13.538908004760742
    10. ' ' → logprob: -14.538908004760742

Token 222: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868730664253235
    2. 'b' → logprob: -1.1368730068206787
    3. '   ' → logprob: -13.886873245239258
    4. ' ' → logprob: -14.261873245239258
    5. '  ' → logprob: -15.761873245239258
    6. '    ' → logprob: -15.886873245239258
    7. '	b' → logprob: -16.136873245239258
    8. ')b' → logprob: -17.511873245239258
    9. 'a' → logprob: -17.761873245239258
    10. 'c' → logprob: -17.886873245239258

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0046249874867498875
    2. 'in' → logprob: -5.379624843597412
    3. ' ' → logprob: -13.12962532043457
    4. '<|end|>' → logprob: -13.75462532043457
    5. 's' → logprob: -15.25462532043457
    6. ',' → logprob: -15.50462532043457
    7. ')' → logprob: -16.00462532043457
    8. ' =' → logprob: -16.12962532043457
    9. 'a' → logprob: -16.25462532043457
    10. 'import' → logprob: -16.50462532043457

Token 224: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.20152921974658966
    2. ' chars' → logprob: -1.7015292644500732
    3. '(chars' → logprob: -9.076529502868652
    4. '_chars' → logprob: -13.576529502868652
    5. ' ' → logprob: -16.076528549194336
    6. 'char' → logprob: -16.826528549194336
    7. 'Chars' → logprob: -17.326528549194336
    8. '   ' → logprob: -17.451528549194336
    9. '[' → logprob: -17.701528549194336
    10. ')' → logprob: -18.951528549194336

Token 225: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043281487887725234
    2. '               ' → logprob: -8.125432968139648
    3. '            
' → logprob: -10.500432968139648
    4. ' if' → logprob: -10.875432968139648
    5. '       ' → logprob: -11.000432968139648
    6. '<|end|>' → logprob: -11.500432968139648
    7. '                   ' → logprob: -11.625432968139648
    8. '	       ' → logprob: -11.875432968139648
    9. 'if' → logprob: -11.875432968139648
    10. ':' → logprob: -12.125432968139648

Token 227: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0466211773455143
    2. ' if' → logprob: -3.296621084213257
    3. '           ' → logprob: -5.546621322631836
    4. 'if' (adapté à ' if') → logprob: -6.171621322631836
    5. '
' → logprob: -6.671621322631836
    6. ' 
' → logprob: -8.546621322631836
    7. ' ' → logprob: -8.546621322631836
    8. '   ' → logprob: -8.921621322631836
    9. '                
' → logprob: -8.921621322631836
    10. '       ' → logprob: -9.171621322631836

Token 228: ' (' (ID: 350)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.176437258720398
    2. ' is' → logprob: -1.551437258720398
    3. '(a' → logprob: -1.676437258720398
    4. 'a' → logprob: -1.801437258720398
    5. ' (' → logprob: -2.4264373779296875
    6. ' a' → logprob: -3.6764373779296875
    7. '(is' → logprob: -5.5514373779296875
    8. '(' → logprob: -5.6764373779296875
    9. ' pairs' → logprob: -6.3014373779296875
    10. '((' → logprob: -6.8014373779296875

Token 229: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.03521392197581e-05
    2. ' a' → logprob: -11.000030517578125
    3. '(a' → logprob: -11.375030517578125
    4. 'is' → logprob: -14.625030517578125
    5. ' (' → logprob: -14.625030517578125
    6. ')' → logprob: -15.000030517578125
    7. ')a' → logprob: -15.125030517578125
    8. ''a' → logprob: -16.375030517578125
    9. ',a' → logprob: -16.500030517578125
    10. '(' → logprob: -16.500030517578125

Token 230: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07957204431295395
    2. ',b' → logprob: -2.5795719623565674
    3. ' ,' → logprob: -7.9545722007751465
    4. ',w' → logprob: -8.704571723937988
    5. ',a' → logprob: -8.829571723937988
    6. ',c' → logprob: -12.204571723937988
    7. 'b' → logprob: -12.829571723937988
    8. ',p' → logprob: -13.454571723937988
    9. 'a' → logprob: -13.579571723937988
    10. '==' → logprob: -13.954571723937988

Token 231: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.567575034452602e-05
    2. ')==' → logprob: -9.87509536743164
    3. ' )' → logprob: -10.12509536743164
    4. 'in' → logprob: -13.37509536743164
    5. ' in' → logprob: -14.37509536743164
    6. '==' → logprob: -14.37509536743164
    7. '')' → logprob: -14.75009536743164
    8. ']' → logprob: -15.75009536743164
    9. ')is' → logprob: -16.25009536743164
    10. ')=='' → logprob: -16.25009536743164

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29682016372680664
    2. 'in' → logprob: -1.4218201637268066
    3. ')' → logprob: -4.421820163726807
    4. '==' → logprob: -6.046820163726807
    5. ' ==' → logprob: -6.921820163726807
    6. ' )' → logprob: -9.171819686889648
    7. ')==' → logprob: -10.046819686889648
    8. 'is' → logprob: -11.546819686889648
    9. 's' → logprob: -11.921819686889648
    10. '[' → logprob: -12.296819686889648

Token 233: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.1918523609638214
    2. ' pairs' → logprob: -1.816852331161499
    3. ' [('' → logprob: -5.066852569580078
    4. '[' → logprob: -5.191852569580078
    5. '[(' → logprob: -9.441852569580078
    6. 'p' → logprob: -9.816852569580078
    7. '{' → logprob: -11.691852569580078
    8. '_pairs' → logprob: -11.816852569580078
    9. 'pair' → logprob: -11.941852569580078
    10. '[p' → logprob: -12.566852569580078

Token 234: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3373713791370392
    2. ' and' → logprob: -1.8373713493347168
    3. ' or' → logprob: -2.212371349334717
    4. '               ' → logprob: -4.837371349334717
    5. ':
' → logprob: -5.462371349334717
    6. '           ' → logprob: -6.337371349334717
    7. '<|end|>' → logprob: -6.337371349334717
    8. ',' → logprob: -7.462371349334717
    9. 'and' → logprob: -7.837371349334717
    10. '<|end|>' → logprob: -8.087371826171875

Token 235: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6060958504676819
    2. ' a' → logprob: -1.106095790863037
    3. ' (' → logprob: -2.731095790863037
    4. '(a' → logprob: -2.856095790863037
    5. '(' → logprob: -7.356095790863037
    6. ' is' → logprob: -9.356096267700195
    7. 'is' → logprob: -10.043596267700195
    8. '((' → logprob: -10.231096267700195
    9. '[a' → logprob: -10.668596267700195
    10. '           ' → logprob: -10.856096267700195

Token 236: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.227776899933815
    2. 'b' → logprob: -1.6027768850326538
    3. '(a' → logprob: -6.977777004241943
    4. ' a' → logprob: -7.352777004241943
    5. ' b' → logprob: -7.852777004241943
    6. '(b' → logprob: -8.227776527404785
    7. ' (' → logprob: -9.852776527404785
    8. '   ' → logprob: -11.352776527404785
    9. ')a' → logprob: -11.477776527404785
    10. ' ' → logprob: -11.727776527404785

Token 237: '==' (ID: 560)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29518723487854004
    2. ',b' → logprob: -1.92018723487854
    3. '==' → logprob: -3.17018723487854
    4. ' ,' → logprob: -3.29518723487854
    5. ' ==' → logprob: -3.79518723487854
    6. ',c' → logprob: -5.295186996459961
    7. ')' → logprob: -6.545186996459961
    8. ')==' → logprob: -7.670186996459961
    9. ',a' → logprob: -8.170186996459961
    10. '[' → logprob: -10.170186996459961

Token 238: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005937805864959955
    2. ' b' → logprob: -5.130937576293945
    3. 'a' → logprob: -12.880937576293945
    4. ' ' → logprob: -13.130937576293945
    5. ')b' → logprob: -13.505937576293945
    6. ')' → logprob: -13.755937576293945
    7. '   ' → logprob: -14.130937576293945
    8. ' ' → logprob: -15.630937576293945
    9. ''b' → logprob: -15.630937576293945
    10. ',' → logprob: -15.880937576293945

Token 239: ' and' (ID: 326)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2869614064693451
    2. ')' → logprob: -1.9119614362716675
    3. '):
' → logprob: -2.411961317062378
    4. ' and' → logprob: -4.661961555480957
    5. '==' → logprob: -6.786961555480957
    6. '):

' → logprob: -8.161961555480957
    7. 'and' → logprob: -8.161961555480957
    8. ')==' → logprob: -8.161961555480957
    9. ' ):' → logprob: -8.786961555480957
    10. ':' → logprob: -9.286961555480957

Token 240: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.037255991250276566
    2. ' (' → logprob: -3.4122560024261475
    3. 'a' → logprob: -5.662255764007568
    4. '(' → logprob: -9.662256240844727
    5. ' a' → logprob: -10.162256240844727
    6. '(c' → logprob: -11.662256240844727
    7. '   ' → logprob: -12.162256240844727
    8. ' ' → logprob: -12.412256240844727
    9. '[a' → logprob: -13.287256240844727
    10. '  ' → logprob: -14.099756240844727

Token 241: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004754072520881891
    2. ' a' → logprob: -5.629754066467285
    3. '(a' → logprob: -6.879754066467285
    4. ' (' → logprob: -9.004754066467285
    5. ' ' → logprob: -14.004754066467285
    6. '(' → logprob: -14.629754066467285
    7. '   ' → logprob: -15.504754066467285
    8. '	a' → logprob: -15.879754066467285
    9. ' ' → logprob: -16.0047550201416
    10. ''a' → logprob: -16.1297550201416

Token 242: '=='' (ID: 20651)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.37931308150291443
    2. '==' → logprob: -1.2543131113052368
    3. '=='' → logprob: -3.5043129920959473
    4. ' =='' → logprob: -8.754313468933105
    5. ' in' → logprob: -9.129313468933105
    6. 'a' → logprob: -10.379313468933105
    7. 'in' → logprob: -10.629313468933105
    8. ' a' → logprob: -13.254313468933105
    9. ' ' → logprob: -13.254313468933105
    10. '=="' → logprob: -13.629313468933105

Token 243: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.996708104154095e-05
    2. ''i' → logprob: -9.375100135803223
    3. ''' → logprob: -11.500100135803223
    4. 'w' → logprob: -13.125100135803223
    5. ' i' → logprob: -13.125100135803223
    6. '   ' → logprob: -15.875100135803223
    7. ''s' → logprob: -16.000099182128906
    8. ' '' → logprob: -16.125099182128906
    9. '`' → logprob: -16.375099182128906
    10. ' ' → logprob: -16.750099182128906

Token 244: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07065047323703766
    2. ' or' → logprob: -3.070650577545166
    3. ''or' → logprob: -4.070650577545166
    4. 'or' → logprob: -5.445650577545166
    5. ' '' → logprob: -8.195650100708008
    6. '')' → logprob: -9.695650100708008
    7. '   ' → logprob: -10.695650100708008
    8. '       ' → logprob: -10.945650100708008
    9. ''i' → logprob: -12.070650100708008
    10. 'w' → logprob: -12.070650100708008

Token 245: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04354681447148323
    2. 'or' → logprob: -3.1685469150543213
    3. ''or' → logprob: -8.043546676635742
    4. ''' → logprob: -8.543546676635742
    5. ')' → logprob: -11.668546676635742
    6. ' ' → logprob: -12.168546676635742
    7. '       ' → logprob: -12.418546676635742
    8. '   ' → logprob: -12.918546676635742
    9. ' '' → logprob: -13.168546676635742
    10. '           ' → logprob: -13.168546676635742

Token 246: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007607339881360531
    2. ' a' → logprob: -4.882607460021973
    3. '   ' → logprob: -15.007607460021973
    4. '	a' → logprob: -15.007607460021973
    5. ' ' → logprob: -15.507607460021973
    6. ' ' → logprob: -16.007606506347656
    7. 'b' → logprob: -16.632606506347656
    8. ''a' → logprob: -16.882606506347656
    9. '  ' → logprob: -17.382606506347656
    10. '           ' → logprob: -17.507606506347656

Token 247: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.021683769300580025
    2. '==' → logprob: -3.896683692932129
    3. ' ==' → logprob: -7.271683692932129
    4. ' =='' → logprob: -8.396683692932129
    5. 'a' → logprob: -9.396683692932129
    6. 'w' → logprob: -9.646683692932129
    7. ''w' → logprob: -10.021683692932129
    8. ''' → logprob: -12.021683692932129
    9. '=="' → logprob: -12.396683692932129
    10. '='' → logprob: -12.396683692932129

Token 248: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.4121114822482923e-06
    2. ''w' → logprob: -13.125003814697266
    3. ' w' → logprob: -14.500003814697266
    4. '	w' → logprob: -15.500003814697266
    5. ')' → logprob: -15.500003814697266
    6. ''' → logprob: -15.875003814697266
    7. '
' → logprob: -16.250003814697266
    8. '   ' → logprob: -17.000003814697266
    9. 's' → logprob: -17.437503814697266
    10. 'i' → logprob: -17.437503814697266

Token 249: '')):
' (ID: 199796)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.5050723552703857
    2. '')):
' → logprob: -1.0050723552703857
    3. ')):' → logprob: -3.6300723552703857
    4. ')):
' → logprob: -6.130072593688965
    5. ')' → logprob: -7.005072593688965
    6. '))' → logprob: -7.380072593688965
    7. ''):' → logprob: -9.005072593688965
    8. ''));' → logprob: -10.380072593688965
    9. ':' → logprob: -10.380072593688965
    10. '       ' → logprob: -10.630072593688965

Token 250: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16663174331188202
    2. ' and' → logprob: -2.0416316986083984
    3. ':' → logprob: -3.9166316986083984
    4. ':
' → logprob: -6.416631698608398
    5. '           ' → logprob: -7.541631698608398
    6. 'and' → logprob: -8.166631698608398
    7. '):
' → logprob: -8.291631698608398
    8. ' or' → logprob: -8.541631698608398
    9. '              ' → logprob: -8.916631698608398
    10. ',' → logprob: -9.041631698608398

Token 251: ' cost' (ID: 3097)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8928827047348022
    2. '
' → logprob: -1.6428827047348022
    3. ' min' → logprob: -1.6428827047348022
    4. 'min' → logprob: -2.267882823944092
    5. 'cost' (adapté à ' cost') → logprob: -3.142882823944092
    6. ' cost' → logprob: -3.642882823944092
    7. '               ' → logprob: -3.892882823944092
    8. ' if' → logprob: -5.767882823944092
    9. ':
' → logprob: -6.517882823944092
    10. '                       ' → logprob: -6.642882823944092

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003375553758814931
    2. '=' → logprob: -5.75337553024292
    3. ' ' → logprob: -9.128376007080078
    4. '1' → logprob: -11.128376007080078
    5. 's' → logprob: -11.128376007080078
    6. '_sub' → logprob: -11.253376007080078
    7. '_cost' → logprob: -11.503376007080078
    8. '_' → logprob: -11.878376007080078
    9. ' +=' → logprob: -12.253376007080078
    10. '_current' → logprob: -13.003376007080078

Token 253: ' ' (ID: 220)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.42602598667144775
    2. '(c' → logprob: -1.1760259866714478
    3. '(' → logprob: -3.926025867462158
    4. 'int' → logprob: -4.551025867462158
    5. '0' → logprob: -5.676025867462158
    6. ' (' → logprob: -5.801025867462158
    7. '(a' → logprob: -8.176026344299316
    8. '1' → logprob: -8.301026344299316
    9. '((' → logprob: -8.301026344299316
    10. '(cost' → logprob: -8.676026344299316

Token 254: '0' (ID: 15)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5695853233337402
    2. '(int' → logprob: -0.9445853233337402
    3. 'int' → logprob: -3.5695853233337402
    4. '(' → logprob: -4.31958532333374
    5. '0' → logprob: -6.06958532333374
    6. '(cost' → logprob: -7.69458532333374
    7. ' (' → logprob: -7.94458532333374
    8. '(a' → logprob: -8.069585800170898
    9. '(s' → logprob: -8.819585800170898
    10. '(abs' → logprob: -9.444585800170898

Token 255: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004749676678329706
    2. 'if' → logprob: -6.004749774932861
    3. ' if' → logprob: -6.254749774932861
    4. '           ' → logprob: -8.754749298095703
    5. 'for' → logprob: -9.379749298095703
    6. ' for' → logprob: -10.254749298095703
    7. '                   ' → logprob: -10.629749298095703
    8. '	           ' → logprob: -11.254749298095703
    9. '              ' → logprob: -11.504749298095703
    10. '+' → logprob: -12.004749298095703

Token 257: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.046963248401880264
    2. '               ' → logprob: -3.5469632148742676
    3. ' if' → logprob: -4.671963214874268
    4. 'cost' → logprob: -4.921963214874268
    5. '
' → logprob: -8.546963691711426
    6. 'for' → logprob: -9.671963691711426
    7. '                   ' → logprob: -10.171963691711426
    8. ' cost' → logprob: -10.421963691711426
    9. ' +' → logprob: -10.796963691711426
    10. '           ' → logprob: -10.921963691711426

Token 258: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6527214646339417
    2. 'c' → logprob: -0.7777214646339417
    3. 'a' → logprob: -4.277721405029297
    4. ' a' → logprob: -5.152721405029297
    5. ' (' → logprob: -9.027721405029297
    6. '(c' → logprob: -9.527721405029297
    7. '(a' → logprob: -10.152721405029297
    8. '   ' → logprob: -11.652721405029297
    9. ' ' → logprob: -11.652721405029297
    10. '    ' → logprob: -12.902721405029297

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.249780638725497e-05
    2. ' !=' → logprob: -11.000032424926758
    3. 's' → logprob: -12.750032424926758
    4. ' c' → logprob: -12.750032424926758
    5. ' ' → logprob: -12.875032424926758
    6. '!=' → logprob: -13.125032424926758
    7. ' s' → logprob: -13.750032424926758
    8. 'c' → logprob: -13.875032424926758
    9. '_' → logprob: -14.312532424926758
    10. ' not' → logprob: -14.750032424926758

Token 260: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.20141655206680298
    2. '!=' → logprob: -1.7014164924621582
    3. ')!=' → logprob: -14.076416969299316
    4. '!='' → logprob: -14.201416969299316
    5. '()!=' → logprob: -14.451416969299316
    6. ']!=' → logprob: -14.576416969299316
    7. ' ' → logprob: -15.701416969299316
    8. '==' → logprob: -16.076416015625
    9. '!==' → logprob: -16.201416015625
    10. ' not' → logprob: -16.576416015625

Token 261: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005233882926404476
    2. ' a' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.005233764648438
    4. ''a' → logprob: -17.505233764648438
    5. '	a' → logprob: -17.630233764648438
    6. '   ' → logprob: -18.755233764648438
    7. '  ' → logprob: -19.755233764648438
    8. '    ' → logprob: -19.880233764648438
    9. ' ' → logprob: -20.505233764648438
    10. '>a' → logprob: -20.630233764648438

Token 262: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16072610020637512
    2. ':
' → logprob: -1.9107260704040527
    3. '+' → logprob: -8.910726547241211
    4. ')' → logprob: -9.535726547241211
    5. ' else' → logprob: -9.785726547241211
    6. ' and' → logprob: -9.785726547241211
    7. ':

' → logprob: -10.410726547241211
    8. '           ' → logprob: -11.035726547241211
    9. '               ' → logprob: -11.035726547241211
    10. '):
' → logprob: -11.035726547241211

Token 263: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7536472678184509
    2. ':
' → logprob: -0.7536472678184509
    3. '                   ' → logprob: -2.8786473274230957
    4. '               ' → logprob: -6.503647327423096
    5. '           ' → logprob: -8.753646850585938
    6. 'cost' → logprob: -9.003646850585938
    7. '                       ' → logprob: -9.253646850585938
    8. ' cost' → logprob: -9.503646850585938
    9. '   ' → logprob: -9.628646850585938
    10. ' and' → logprob: -9.753646850585938

Token 264: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.5765347480773926
    2. ' cost' → logprob: -0.8265347480773926
    3. '1' → logprob: -7.451534748077393
    4. '                   ' → logprob: -11.826534271240234
    5. '               ' → logprob: -13.201534271240234
    6. '(cost' → logprob: -13.701534271240234
    7. ' ' → logprob: -13.826534271240234
    8. '_cost' → logprob: -13.826534271240234
    9. '   ' → logprob: -14.076534271240234
    10. '
' → logprob: -15.201534271240234

Token 265: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3878672420978546
    2. '+=' → logprob: -1.1378672122955322
    3. '=' → logprob: -7.137867450714111
    4. ' =' → logprob: -8.637866973876953
    5. '1' → logprob: -11.887866973876953
    6. ']+=' → logprob: -12.137866973876953
    7. '   ' → logprob: -12.262866973876953
    8. '+' → logprob: -12.637866973876953
    9. '```' → logprob: -13.637866973876953
    10. 'cost' → logprob: -13.887866973876953

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.625011444091797
    4. '  ' → logprob: -19.875011444091797
    5. '```' → logprob: -20.187511444091797
    6. '+' → logprob: -20.312511444091797
    7. '
' → logprob: -20.437511444091797
    8. '۱' → logprob: -21.187511444091797
    9. '0' → logprob: -21.187511444091797
    10. '１' → logprob: -21.750011444091797

Token 267: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01181258074939251
    2. '<|end|>' → logprob: -4.886812686920166
    3. ' if' → logprob: -6.636812686920166
    4. '                   ' → logprob: -6.636812686920166
    5. '           ' → logprob: -7.886812686920166
    6. 'if' → logprob: -8.011812210083008
    7. '<|end|>' → logprob: -8.136812210083008
    8. '                ' → logprob: -8.136812210083008
    9. '
' → logprob: -9.636812210083008
    10. '                
' → logprob: -9.761812210083008

Token 268: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001348688150756061
    2. '                   ' → logprob: -7.501348495483398
    3. '           ' → logprob: -7.876348495483398
    4. ' if' → logprob: -8.751348495483398
    5. '                ' → logprob: -9.626348495483398
    6. '       ' → logprob: -10.126348495483398
    7. '<|end|>' → logprob: -10.251348495483398
    8. '
' → logprob: -10.376348495483398
    9. '              ' → logprob: -10.751348495483398
    10. 'if' → logprob: -10.751348495483398

Token 269: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011351839639246464
    2. ' if' → logprob: -4.511352062225342
    3. 'if' (adapté à ' if') → logprob: -9.136351585388184
    4. '                   ' → logprob: -9.511351585388184
    5. '                ' → logprob: -9.761351585388184
    6. '           ' → logprob: -10.011351585388184
    7. '              ' → logprob: -12.011351585388184
    8. '       ' → logprob: -12.761351585388184
    9. '            ' → logprob: -13.261351585388184
    10. '             ' → logprob: -13.261351585388184

Token 270: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.016040468588471413
    2. 'c' → logprob: -4.141040325164795
    3. ' ' → logprob: -12.766040802001953
    4. ' ' → logprob: -13.141040802001953
    5. '	c' → logprob: -14.391040802001953
    6. '    ' → logprob: -15.141040802001953
    7. '  ' → logprob: -15.766040802001953
    8. '   ' → logprob: -15.766040802001953
    9. ''' → logprob: -17.016040802001953
    10. '(c' → logprob: -17.266040802001953

Token 271: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.5
    3. ' ' → logprob: -17.125
    4. '₂' → logprob: -17.625
    5. '_' → logprob: -17.75
    6. '```' → logprob: -17.875
    7. '۲' → logprob: -19.0625
    8. '
' → logprob: -19.1875
    9. '２' → logprob: -19.375
    10. 's' → logprob: -19.5625

Token 272: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0024756586644798517
    2. '!=' → logprob: -6.002475738525391
    3. ')!=' → logprob: -17.62747573852539
    4. '!='' → logprob: -18.25247573852539
    5. '()!=' → logprob: -18.37747573852539
    6. ' ' → logprob: -18.75247573852539
    7. ']!=' → logprob: -18.87747573852539
    8. '!=(' → logprob: -19.25247573852539
    9. ' !==' → logprob: -19.62747573852539
    10. ' ' → logprob: -20.25247573852539

Token 273: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196768581867218
    2. ' b' → logprob: -2.811967611312866
    3. '   ' → logprob: -17.186967849731445
    4. ' ' → logprob: -17.936967849731445
    5. '	b' → logprob: -18.186967849731445
    6. ')b' → logprob: -19.061967849731445
    7. ' ' → logprob: -20.436967849731445
    8. ' б' → logprob: -20.436967849731445
    9. '>b' → logprob: -20.436967849731445
    10. '    ' → logprob: -20.686967849731445

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33625662326812744
    2. '<|end|>' → logprob: -1.9612566232681274
    3. ':
' → logprob: -2.836256504058838
    4. '               ' → logprob: -3.461256504058838
    5. '                   ' → logprob: -3.961256504058838
    6. ')' → logprob: -4.086256504058838
    7. '<|end|>' → logprob: -4.836256504058838
    8. '           ' → logprob: -5.461256504058838
    9. '):' → logprob: -6.086256504058838
    10. '):
' → logprob: -6.461256504058838

Token 275: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05051096901297569
    2. '1' → logprob: -3.175510883331299
    3. '               ' → logprob: -5.175510883331299
    4. '           ' → logprob: -7.300510883331299
    5. '                  ' → logprob: -7.425510883331299
    6. '+' → logprob: -8.425511360168457
    7. '                    ' → logprob: -9.675511360168457
    8. '                ' → logprob: -9.800511360168457
    9. '                       ' → logprob: -9.800511360168457
    10. '   ' → logprob: -10.175511360168457

Token 276: ' cost' (ID: 3097)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.875031471252441
    3. 'cost' (adapté à ' cost') → logprob: -11.375031471252441
    4. ' cost' → logprob: -13.750031471252441
    5. '+' → logprob: -17.750032424926758
    6. '   ' → logprob: -18.000032424926758
    7. '  ' → logprob: -20.375032424926758
    8. '
' → logprob: -20.500032424926758
    9. '```' → logprob: -20.500032424926758
    10. '(cost' → logprob: -20.875032424926758

Token 277: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868864178657532
    2. '+=' → logprob: -1.1368863582611084
    3. '           ' → logprob: -12.011886596679688
    4. ']+=' → logprob: -12.886886596679688
    5. '   ' → logprob: -13.011886596679688
    6. '                   ' → logprob: -13.136886596679688
    7. '               ' → logprob: -13.886886596679688
    8. '1' → logprob: -14.386886596679688
    9. '          ' → logprob: -15.011886596679688
    10. '       ' → logprob: -15.386886596679688

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '１' → logprob: -19.375001907348633
    4. '۱' → logprob: -19.625001907348633
    5. '   ' → logprob: -19.812501907348633
    6. '2' → logprob: -20.500001907348633
    7. '১' → logprob: -21.187501907348633
    8. '१' → logprob: -21.375001907348633
    9. '```' → logprob: -21.500001907348633
    10. '+' → logprob: -21.562501907348633

Token 279: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00029363270732574165
    2. '                   ' → logprob: -8.500293731689453
    3. '           ' → logprob: -9.625293731689453
    4. 'if' → logprob: -11.500293731689453
    5. ' if' → logprob: -11.875293731689453
    6. '                       ' → logprob: -13.125293731689453
    7. '              ' → logprob: -13.500293731689453
    8. '```' → logprob: -14.250293731689453
    9. '	           ' → logprob: -14.750293731689453
    10. '       ' → logprob: -14.875293731689453

Token 280: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002966127940453589
    2. '                   ' → logprob: -8.375296592712402
    3. '           ' → logprob: -10.000296592712402
    4. 'if' → logprob: -11.375296592712402
    5. ' if' → logprob: -12.250296592712402
    6. '                       ' → logprob: -13.500296592712402
    7. '```' → logprob: -14.000296592712402
    8. '              ' → logprob: -14.375296592712402
    9. '       ' → logprob: -15.125296592712402
    10. '                           ' → logprob: -15.375296592712402

Token 281: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008929259143769741
    2. ' if' → logprob: -5.258929252624512
    3. 'if' (adapté à ' if') → logprob: -5.633929252624512
    4. '                   ' → logprob: -9.508929252624512
    5. '           ' → logprob: -10.383929252624512
    6. '              ' → logprob: -12.633929252624512
    7. '                       ' → logprob: -13.383929252624512
    8. '                ' → logprob: -13.758929252624512
    9. '       ' → logprob: -14.008929252624512
    10. '             ' → logprob: -14.508929252624512

Token 282: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.0024756586644798517
    2. 'cost' → logprob: -6.002475738525391
    3. '(cost' → logprob: -18.87747573852539
    4. 'Cost' → logprob: -19.75247573852539
    5. ' kost' → logprob: -20.25247573852539
    6. '_cost' → logprob: -20.37747573852539
    7. ' coût' → logprob: -20.87747573852539
    8. ' costo' → logprob: -22.12747573852539
    9. 'co' → logprob: -22.12747573852539
    10. ' ' → logprob: -22.25247573852539

Token 283: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.033682931214571
    2. '<' → logprob: -3.4086828231811523
    3. ' <=' → logprob: -10.658682823181152
    4. ' ' → logprob: -12.533682823181152
    5. '<|end|>' → logprob: -12.658682823181152
    6. 'min' → logprob: -13.408682823181152
    7. ' <
' → logprob: -13.408682823181152
    8. ')' → logprob: -13.658682823181152
    9. ' min' → logprob: -14.408682823181152
    10. '<=' → logprob: -14.533682823181152

Token 284: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12692831456661224
    2. ' min' → logprob: -2.1269283294677734
    3. '=min' → logprob: -15.876928329467773
    4. '	min' → logprob: -16.001928329467773
    5. '   ' → logprob: -17.876928329467773
    6. '_min' → logprob: -18.376928329467773
    7. '(min' → logprob: -18.626928329467773
    8. ' ' → logprob: -19.626928329467773
    9. '.min' → logprob: -19.626928329467773
    10. '[min' → logprob: -19.876928329467773

Token 285: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.5048530030981055e-06
    2. 'cost' → logprob: -13.500001907348633
    3. '_' → logprob: -17.250001907348633
    4. '_code' → logprob: -18.375001907348633
    5. '_c' → logprob: -18.500001907348633
    6. '\' → logprob: -18.625001907348633
    7. '_cos' → logprob: -18.625001907348633
    8. '_COST' → logprob: -18.625001907348633
    9. ' cost' → logprob: -19.375001907348633
    10. '_co' → logprob: -19.750001907348633

Token 286: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5787522792816162
    2. ':' → logprob: -0.8287522792816162
    3. '                   ' → logprob: -6.703752517700195
    4. '           ' → logprob: -6.953752517700195
    5. '               ' → logprob: -7.828752517700195
    6. '):
' → logprob: -9.578752517700195
    7. ':min' → logprob: -9.578752517700195
    8. '                       ' → logprob: -11.078752517700195
    9. ':

' → logprob: -11.203752517700195
    10. '                           ' → logprob: -11.328752517700195

Token 287: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006651549134403467
    2. 'min' → logprob: -5.506651401519775
    3. ' min' → logprob: -6.256651401519775
    4. '               ' → logprob: -7.631651401519775
    5. '                       ' → logprob: -9.006651878356934
    6. '           ' → logprob: -10.381651878356934
    7. '   ' → logprob: -12.506651878356934
    8. '       ' → logprob: -13.506651878356934
    9. '                           ' → logprob: -13.506651878356934
    10. '                  ' → logprob: -13.506651878356934

Token 288: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.03808600828051567
    2. ' min' → logprob: -3.2880859375
    3. '                   ' → logprob: -10.0380859375
    4. '               ' → logprob: -15.2880859375
    5. '                       ' → logprob: -15.5380859375
    6. '	min' → logprob: -15.7880859375
    7. '_min' → logprob: -16.4130859375
    8. '           ' → logprob: -16.5380859375
    9. '   ' → logprob: -16.6630859375
    10. '
' → logprob: -16.9130859375

Token 289: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.8624639324116288e-06
    2. 'cost' → logprob: -13.375001907348633
    3. 'Cost' → logprob: -16.125001907348633
    4. '_COST' → logprob: -17.000001907348633
    5. '_' → logprob: -18.000001907348633
    6. '_code' → logprob: -18.125001907348633
    7. '_min' → logprob: -19.250001907348633
    8. ' cost' → logprob: -19.375001907348633
    9. '_token' → logprob: -19.500001907348633
    10. '_cos' → logprob: -19.750001907348633

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889099419116974
    2. '=' → logprob: -2.5788910388946533
    3. '=min' → logprob: -14.328890800476074
    4. '=cut' → logprob: -16.07889175415039
    5. '＝' → logprob: -16.70389175415039
    6. 'cost' → logprob: -16.95389175415039
    7. '=c' → logprob: -17.07889175415039
    8. '=int' → logprob: -17.32889175415039
    9. '=f' → logprob: -17.57889175415039
    10. ' =
' → logprob: -17.70389175415039

Token 291: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3868711292743683
    2. ' cost' → logprob: -1.136871099472046
    3. '(cost' → logprob: -16.261871337890625
    4. ' kost' → logprob: -18.386871337890625
    5. '_cost' → logprob: -18.636871337890625
    6. 'c' → logprob: -19.386871337890625
    7. '.cost' → logprob: -20.136871337890625
    8. 'cos' → logprob: -20.136871337890625
    9. 'co' → logprob: -20.386871337890625
    10. 'Cost' → logprob: -20.511871337890625

Token 292: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04031631723046303
    2. 'return' → logprob: -3.290316343307495
    3. ' return' → logprob: -6.290316104888916
    4. '	return' → logprob: -8.915316581726074
    5. '
' → logprob: -9.290316581726074
    6. '                   ' → logprob: -9.665316581726074
    7. '       ' → logprob: -10.040316581726074
    8. '               ' → logprob: -10.290316581726074
    9. '           ' → logprob: -10.790316581726074
    10. '    
' → logprob: -10.915316581726074

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030803196132183075
    2. 'return' → logprob: -3.5308032035827637
    3. ' return' → logprob: -7.405803203582764
    4. '
' → logprob: -8.905802726745605
    5. '	return' → logprob: -8.905802726745605
    6. '       ' → logprob: -9.155802726745605
    7. '           ' → logprob: -10.905802726745605
    8. '               ' → logprob: -11.155802726745605
    9. '                   ' → logprob: -11.155802726745605
    10. '    
' → logprob: -11.655802726745605

Token 294: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5843381285667419
    2. '   ' → logprob: -0.8343381285667419
    3. ' return' → logprob: -4.834338188171387
    4. '
' → logprob: -9.459338188171387
    5. '```' → logprob: -9.584338188171387
    6. '               ' → logprob: -9.709338188171387
    7. '       ' → logprob: -9.709338188171387
    8. '	return' → logprob: -9.959338188171387
    9. '                   ' → logprob: -10.209338188171387
    10. '           ' → logprob: -10.459338188171387

Token 295: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029750484973192215
    2. ' min' → logprob: -3.5297505855560303
    3. '	min' → logprob: -20.52975082397461
    4. '(min' → logprob: -21.02975082397461
    5. '_min' → logprob: -22.27975082397461
    6. '   ' → logprob: -22.40475082397461
    7. '[min' → logprob: -22.40475082397461
    8. 'max' → logprob: -23.15475082397461
    9. '=min' → logprob: -23.77975082397461
    10. ',min' → logprob: -23.90475082397461

Token 296: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.2664456789934775e-06
    2. '_co' → logprob: -14.375000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_cos' → logprob: -15.875000953674316
    5. '_code' → logprob: -16.750001907348633
    6. 'cost' → logprob: -16.750001907348633
    7. ' _' → logprob: -16.750001907348633
    8. '_c' → logprob: -16.875001907348633
    9. '_cut' → logprob: -18.125001907348633
    10. '_cast' → logprob: -18.250001907348633

Token 297: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012517428025603294
    2. 'n' → logprob: -5.63751745223999
    3. 's' → logprob: -6.38751745223999
    4. ')' → logprob: -6.63751745223999
    5. 'total' → logprob: -6.63751745223999
    6. 'max' → logprob: -7.13751745223999
    7. '#' → logprob: -7.26251745223999
    8. 'cost' → logprob: -7.38751745223999
    9. 'result' → logprob: -7.63751745223999
    10. 'res' → logprob: -7.76251745223999

Token 298: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6744199991226196
    2. 'k' → logprob: -0.7994199991226196
    3. 'def' → logprob: -3.92441987991333
    4. 'max' → logprob: -5.04941987991333
    5. 'K' → logprob: -5.54941987991333
    6. 'cost' → logprob: -6.17441987991333
    7. 'total' → logprob: -6.17441987991333
    8. 'm' → logprob: -6.67441987991333
    9. 'res' → logprob: -7.17441987991333
    10. 'N' → logprob: -7.54941987991333

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036077939439564943
    2. '=' → logprob: -5.628607749938965
    3. 's' → logprob: -12.753607749938965
    4. ' ' → logprob: -13.628607749938965
    5. '=len' → logprob: -14.128607749938965
    6. ')' → logprob: -14.378607749938965
    7. '=int' → logprob: -14.378607749938965
    8. '_' → logprob: -14.503607749938965
    9. ',' → logprob: -15.128607749938965
    10. '  ' → logprob: -15.503607749938965

Token 300: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0012935701524838805
    2. ' len' → logprob: -6.751293659210205
    3. 'int' → logprob: -9.001293182373047
    4. ' int' → logprob: -16.376293182373047
    5. '(len' → logprob: -17.626293182373047
    6. 's' → logprob: -19.626293182373047
    7. 'input' → logprob: -19.626293182373047
    8. ' ' → logprob: -19.751293182373047
    9. '=len' → logprob: -19.876293182373047
    10. 'n' → logprob: -20.251293182373047

Token 301: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.13388703338569e-06
    2. 's' → logprob: -11.625009536743164
    3. '(' → logprob: -15.750009536743164
    4. '(n' → logprob: -20.875009536743164
    5. ' (' → logprob: -21.000009536743164
    6. '(
' → logprob: -21.750009536743164
    7. '```' → logprob: -22.375009536743164
    8. ' s' → logprob: -23.500009536743164
    9. '_s' → logprob: -23.625009536743164
    10. 'n' → logprob: -23.750009536743164

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.27099974633893e-05
    2. ')//' → logprob: -12.000012397766113
    3. ' )' → logprob: -12.625012397766113
    4. '//' → logprob: -13.000012397766113
    5. ')n' → logprob: -14.750012397766113
    6. ')
' → logprob: -15.250012397766113
    7. '))' → logprob: -15.875012397766113
    8. ')#' → logprob: -16.87501335144043
    9. ')s' → logprob: -17.62501335144043
    10. 's' → logprob: -17.75001335144043

Token 303: 'res' (ID: 430)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002736639464274049
    2. 'total' → logprob: -6.377736568450928
    3. 'res' → logprob: -7.752736568450928
    4. 'max' → logprob: -9.002737045288086
    5. 'half' → logprob: -9.002737045288086
    6. 'cost' → logprob: -9.127737045288086
    7. 'm' → logprob: -9.877737045288086
    8. 'result' → logprob: -10.002737045288086
    9. 'ans' → logprob: -10.252737045288086
    10. 'def' → logprob: -10.627737045288086

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03844306617975235
    2. '=' → logprob: -3.288443088531494
    3. 'ult' → logprob: -8.913442611694336
    4. '_' → logprob: -9.913442611694336
    5. 'u' → logprob: -10.163442611694336
    6. '_cost' → logprob: -10.288442611694336
    7. 't' → logprob: -10.538442611694336
    8. ',' → logprob: -10.788442611694336
    9. 'cost' → logprob: -10.913442611694336
    10. 'ults' → logprob: -11.038442611694336

Token 305: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40641725063323975
    2. '0' → logprob: -1.7814172506332397
    3. 'float' → logprob: -2.0314173698425293
    4. '[n' → logprob: -3.6564173698425293
    5. '[' → logprob: -5.531417369842529
    6. '10' → logprob: -6.531417369842529
    7. ' n' → logprob: -6.656417369842529
    8. ' float' → logprob: -7.281417369842529
    9. '[[' → logprob: -7.406417369842529
    10. ' ' → logprob: -8.656416893005371

Token 306: '0' (ID: 15)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6234856247901917
    2. '0' → logprob: -1.4984855651855469
    3. 'n' → logprob: -1.7484855651855469
    4. '[[' → logprob: -3.123485565185547
    5. '[n' → logprob: -4.248485565185547
    6. '[' → logprob: -5.373485565185547
    7. '10' → logprob: -6.248485565185547
    8. 'int' → logprob: -7.748485565185547
    9. 'min' → logprob: -7.748485565185547
    10. 'sum' → logprob: -8.748485565185547

Token 307: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17617033421993256
    2. '
' → logprob: -2.1761703491210938
    3. ' for' → logprob: -3.1761703491210938
    4. 'i' → logprob: -5.176170349121094
    5. ' 
' → logprob: -7.551170349121094
    6. ' i' → logprob: -9.926170349121094
    7. '  
' → logprob: -10.051170349121094
    8. ',' → logprob: -11.301170349121094
    9. 'n' → logprob: -12.426170349121094
    10. '

' → logprob: -12.551170349121094

Token 308: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002520134439691901
    2. 'i' → logprob: -6.0025200843811035
    3. 'left' → logprob: -10.502520561218262
    4. 'l' → logprob: -11.127520561218262
    5. '```' → logprob: -13.877520561218262
    6. 'half' → logprob: -14.002520561218262
    7. ' for' → logprob: -14.502520561218262
    8. 'mid' → logprob: -18.127519607543945
    9. 'L' → logprob: -18.502519607543945
    10. ' i' → logprob: -18.877519607543945

Token 309: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0010353106772527099
    2. 'i' → logprob: -6.876035213470459
    3. ' ' → logprob: -14.126035690307617
    4. '(i' → logprob: -14.376035690307617
    5. ' _' → logprob: -14.876035690307617
    6. ' ' → logprob: -15.126035690307617
    7. '	i' → logprob: -15.126035690307617
    8. ' l' → logprob: -16.751035690307617
    9. '_' → logprob: -16.751035690307617
    10. ' range' → logprob: -17.126035690307617

Token 310: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018363099545240402
    2. 'in' → logprob: -4.018362998962402
    3. ' ' → logprob: -8.518362998962402
    4. 'range' → logprob: -12.143362998962402
    5. '_' → logprob: -13.143362998962402
    6. 's' → logprob: -14.018362998962402
    7. 'n' → logprob: -14.143362998962402
    8. 'import' → logprob: -14.268362998962402
    9. ',' → logprob: -14.393362998962402
    10. ')' → logprob: -14.393362998962402

Token 311: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047935113310814
    2. ' range' → logprob: -4.511047840118408
    3. '(range' → logprob: -16.38604736328125
    4. ' ' → logprob: -17.01104736328125
    5. '	range' → logprob: -18.38604736328125
    6. '   ' → logprob: -18.76104736328125
    7. '  ' → logprob: -19.51104736328125
    8. ' xrange' → logprob: -20.51104736328125
    9. ')' → logprob: -21.01104736328125
    10. 'ange' → logprob: -21.26104736328125

Token 312: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002193908003391698
    2. '(' → logprob: -8.625219345092773
    3. ' (' → logprob: -10.500219345092773
    4. 'n' → logprob: -11.375219345092773
    5. ' n' → logprob: -14.750219345092773
    6. '((' → logprob: -15.250219345092773
    7. '(len' → logprob: -15.875219345092773
    8. '(
' → logprob: -16.750219345092773
    9. '(s' → logprob: -17.875219345092773
    10. ' ' → logprob: -18.375219345092773

Token 313: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.1603962481021881
    2. ' //' → logprob: -1.9103962182998657
    3. ' ' → logprob: -9.410396575927734
    4. ')' → logprob: -9.535396575927734
    5. '):' → logprob: -11.660396575927734
    6. '):
' → logprob: -12.285396575927734
    7. ')//' → logprob: -13.035396575927734
    8. ' ' → logprob: -13.535396575927734
    9. ' )' → logprob: -14.785396575927734
    10. '
' → logprob: -15.410396575927734

Token 314: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -18.375001907348633
    4. '
' → logprob: -18.500001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '(' → logprob: -18.875001907348633
    7. '

' → logprob: -19.875001907348633
    8. '1' → logprob: -20.125001907348633
    9. '۲' → logprob: -20.125001907348633
    10. '２' → logprob: -20.187501907348633

Token 315: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '```' → logprob: -19.75
    4. '۲' → logprob: -20.375
    5. '２' → logprob: -20.875
    6. '   ' → logprob: -21.375
    7. '{' → logprob: -21.75
    8. '
' → logprob: -22.0
    9. '٢' → logprob: -22.0
    10. '1' → logprob: -22.125

Token 316: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009025269537232816
    2. '):
' → logprob: -7.1259026527404785
    3. ' ):' → logprob: -9.25090217590332
    4. '+' → logprob: -13.62590217590332
    5. '):
' → logprob: -15.00090217590332
    6. ')' → logprob: -15.00090217590332
    7. '):

' → logprob: -16.87590217590332
    8. ' +' → logprob: -17.25090217590332
    9. '}:' → logprob: -17.50090217590332
    10. ' ):
' → logprob: -17.62590217590332

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04339421167969704
    2. ' res' → logprob: -3.2933943271636963
    3. 'res' → logprob: -5.668394088745117
    4. '    
' → logprob: -7.043394088745117
    5. ' c' → logprob: -7.293394088745117
    6. '```' → logprob: -9.043394088745117
    7. '
' → logprob: -9.418394088745117
    8. '  
' → logprob: -10.168394088745117
    9. ' cost' → logprob: -11.293394088745117
    10. '  ' → logprob: -11.293394088745117

Token 318: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.2039266675710678
    2. 'c' → logprob: -2.5789265632629395
    3. ' res' → logprob: -2.5789265632629395
    4. '   ' → logprob: -3.9539265632629395
    5. ' c' → logprob: -4.3289265632629395
    6. 'cost' → logprob: -8.078927040100098
    7. ' cost' → logprob: -10.078927040100098
    8. ' ' → logprob: -10.703927040100098
    9. '	res' → logprob: -11.703927040100098
    10. '    
' → logprob: -11.828927040100098

Token 319: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.012511532753705978
    2. '+=' → logprob: -4.387511730194092
    3. ' ' → logprob: -14.387511253356934
    4. ']+=' → logprob: -14.637511253356934
    5. '+=(' → logprob: -15.262511253356934
    6. ' ' → logprob: -15.762511253356934
    7. '+' → logprob: -16.01251220703125
    8. '   ' → logprob: -16.26251220703125
    9. '+='' → logprob: -16.38751220703125
    10. ' =' → logprob: -17.26251220703125

Token 320: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0001584850688232109
    2. ' cost' → logprob: -8.750158309936523
    3. '(cost' → logprob: -19.000158309936523
    4. '   ' → logprob: -22.125158309936523
    5. 'count' → logprob: -24.750158309936523
    6. ' ' → logprob: -24.875158309936523
    7. '0' → logprob: -25.000158309936523
    8. 'Cost' → logprob: -25.000158309936523
    9. '.cost' → logprob: -25.000158309936523
    10. 'code' → logprob: -25.000158309936523

Token 321: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '_cost' → logprob: -19.625
    3. 'to' → logprob: -19.75
    4. 'To' → logprob: -20.0
    5. '_TO' → logprob: -21.625
    6. 's' → logprob: -22.125
    7. '```' → logprob: -22.125
    8. ' _' → logprob: -22.625
    9. '_' → logprob: -22.75
    10. '\' → logprob: -23.125

Token 322: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.16022878885269165
    2. 'match' → logprob: -1.9102287292480469
    3. 'cost' → logprob: -13.285228729248047
    4. ' match' → logprob: -13.285228729248047
    5. 'atch' → logprob: -14.535228729248047
    6. '(match' → logprob: -15.535228729248047
    7. 'Match' → logprob: -16.285228729248047
    8. '_cost' → logprob: -16.410228729248047
    9. '	match' → logprob: -16.535228729248047
    10. '_MATCH' → logprob: -16.785228729248047

Token 323: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.999452772201039e-05
    2. '(' → logprob: -11.000029563903809
    3. 's' → logprob: -11.250029563903809
    4. ' (' → logprob: -16.500030517578125
    5. '(
' → logprob: -16.750030517578125
    6. '((' → logprob: -19.125030517578125
    7. ' s' → logprob: -19.375030517578125
    8. '```' → logprob: -19.500030517578125
    9. '(c' → logprob: -19.750030517578125
    10. '(ord' → logprob: -20.375030517578125

Token 324: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.47626737493556e-05
    2. '[' → logprob: -10.87503433227539
    3. '[s' → logprob: -11.50003433227539
    4. ' [' → logprob: -12.87503433227539
    5. '[n' → logprob: -13.50003433227539
    6. ')[' → logprob: -14.25003433227539
    7. '[
' → logprob: -14.62503433227539
    8. ')' → logprob: -15.87503433227539
    9. '[int' → logprob: -16.37503433227539
    10. 'i' → logprob: -16.75003433227539

Token 325: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00038288687937892973
    2. ',' → logprob: -8.000382423400879
    3. ']' → logprob: -10.625382423400879
    4. ' ],' → logprob: -10.875382423400879
    5. '   ' → logprob: -13.375382423400879
    6. ' ,' → logprob: -13.875382423400879
    7. 's' → logprob: -14.500382423400879
    8. '],
' → logprob: -15.125382423400879
    9. ''],' → logprob: -15.125382423400879
    10. ' ' → logprob: -15.625382423400879

Token 326: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004309076175559312
    2. ' s' → logprob: -7.750431060791016
    3. ')' → logprob: -15.750431060791016
    4. '   ' → logprob: -16.875431060791016
    5. ')s' → logprob: -17.250431060791016
    6. '(s' → logprob: -19.125431060791016
    7. '`s' → logprob: -19.125431060791016
    8. ' ' → logprob: -19.375431060791016
    9. '	s' → logprob: -19.625431060791016
    10. '{s' → logprob: -20.125431060791016

Token 327: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00391727639362216
    2. '[-' → logprob: -5.628917217254639
    3. 'n' → logprob: -8.378917694091797
    4. '(n' → logprob: -9.878917694091797
    5. '[' → logprob: -10.628917694091797
    6. '-n' → logprob: -12.628917694091797
    7. '[i' → logprob: -13.253917694091797
    8. ']' → logprob: -13.378917694091797
    9. '-' → logprob: -13.503917694091797
    10. '])' → logprob: -13.628917694091797

Token 328: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02990078739821911
    2. ' -' → logprob: -3.5299007892608643
    3. '-i' → logprob: -9.029900550842285
    4. '1' → logprob: -10.404900550842285
    5. ' ' → logprob: -15.904900550842285
    6. '   ' → logprob: -16.6549015045166
    7. 'i' → logprob: -16.6549015045166
    8. '```' → logprob: -17.6549015045166
    9. '−' → logprob: -17.6549015045166
    10. '[i' → logprob: -18.2799015045166

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007612066809087992
    2. 'i' → logprob: -4.882612228393555
    3. ' ' → logprob: -13.007612228393555
    4. ' i' → logprob: -13.007612228393555
    5. '(i' → logprob: -14.507612228393555
    6. '(' → logprob: -15.257612228393555
    7. '-' → logprob: -15.382612228393555
    8. '{i' → logprob: -15.757612228393555
    9. '-i' → logprob: -15.882612228393555
    10. '   ' → logprob: -16.882612228393555

Token 330: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34121546149253845
    2. '-' → logprob: -1.3412154912948608
    3. '-i' → logprob: -3.5912153720855713
    4. ' ' → logprob: -13.716215133666992
    5. 'i' → logprob: -14.841215133666992
    6. '   ' → logprob: -15.341215133666992
    7. '```' → logprob: -15.966215133666992
    8. ' i' → logprob: -17.091215133666992
    9. '-
' → logprob: -17.466215133666992
    10. ']' → logprob: -18.341215133666992

Token 331: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007099286303855479
    2. ' i' → logprob: -7.2507100105285645
    3. ' ' → logprob: -17.625709533691406
    4. '   ' → logprob: -18.375709533691406
    5. '	i' → logprob: -19.375709533691406
    6. '  ' → logprob: -21.000709533691406
    7. '[i' → logprob: -21.625709533691406
    8. '
' → logprob: -22.375709533691406
    9. 'I' → logprob: -22.500709533691406
    10. '(i' → logprob: -22.500709533691406

Token 332: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.000365259445970878
    2. ')' → logprob: -8.000365257263184
    3. '])
' → logprob: -11.625365257263184
    4. ')])' → logprob: -11.625365257263184
    5. '))' → logprob: -11.750365257263184
    6. ']))' → logprob: -13.625365257263184
    7. ']' → logprob: -14.125365257263184
    8. ')]' → logprob: -14.375365257263184
    9. ' ])' → logprob: -14.625365257263184
    10. ''])' → logprob: -14.750365257263184

Token 333: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002646735229063779
    2. 'if' → logprob: -8.250265121459961
    3. '
' → logprob: -13.500265121459961
    4. '```' → logprob: -13.500265121459961
    5. ' print' → logprob: -15.375265121459961
    6. 'prin' → logprob: -16.37526512145996
    7. '\n' → logprob: -16.62526512145996
    8. '#print' → logprob: -16.87526512145996
    9. 'pr' → logprob: -16.87526512145996
    10. '#' → logprob: -17.00026512145996

Token 334: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016049033030867577
    2. 'if' → logprob: -4.141048908233643
    3. '#' → logprob: -11.3910493850708
    4. ' print' → logprob: -13.6410493850708
    5. 'res' → logprob: -14.1410493850708
    6. '#print' → logprob: -14.2660493850708
    7. ' if' → logprob: -14.7660493850708
    8. 'for' → logprob: -15.8910493850708
    9. 'return' → logprob: -16.516048431396484
    10. 's' → logprob: -16.516048431396484

Token 335: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.693157434463501
    2. ' n' → logprob: -0.693157434463501
    3. '(n' → logprob: -12.068157196044922
    4. 'res' → logprob: -13.318157196044922
    5. ' res' → logprob: -13.943157196044922
    6. ' ' → logprob: -14.193157196044922
    7. ' not' → logprob: -14.693157196044922
    8. ' (' → logprob: -15.068157196044922
    9. ' ' → logprob: -15.068157196044922
    10. '	n' → logprob: -15.693157196044922

Token 336: ' longueur' (ID: 104613)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.629947304725647
    2. 'long' → logprob: -0.879947304725647
    3. 'tail' → logprob: -3.1299471855163574
    4. ' longueur' → logprob: -6.129947185516357
    5. '#' → logprob: -6.629947185516357
    6. 'val' → logprob: -6.754947185516357
    7. 'len' → logprob: -6.879947185516357
    8. 'lon' → logprob: -7.254947185516357
    9. '   ' → logprob: -7.379947185516357
    10. 'l' → logprob: -7.629947185516357

Token 337: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7751655578613281
    2. '%' → logprob: -1.1501655578613281
    3. 'im' → logprob: -2.275165557861328
    4. 'est' → logprob: -2.650165557861328
    5. 'n' → logprob: -3.775165557861328
    6. 'imp' → logprob: -3.900165557861328
    7. 'de' → logprob: -6.525165557861328
    8. ' %' → logprob: -6.775165557861328
    9. '%n' → logprob: -7.275165557861328
    10. '%s' → logprob: -7.900165557861328

Token 338: ' imp' (ID: 3282)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.3870795667171478
    2. 'imp' → logprob: -1.1370795965194702
    3. ' imp' → logprob: -8.637079238891602
    4. 'odd' → logprob: -11.012079238891602
    5. ' impair' → logprob: -12.512079238891602
    6. '   ' → logprob: -12.887079238891602
    7. 'Im' → logprob: -13.512079238891602
    8. '```' → logprob: -14.137079238891602
    9. ' ' → logprob: -14.387079238891602
    10. '  ' → logprob: -14.637079238891602

Token 339: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.00673005310818553
    2. 'air' → logprob: -5.006730079650879
    3. 'ar' → logprob: -11.756730079650879
    4. 'a' → logprob: -12.631730079650879
    5. 'are' → logprob: -13.631730079650879
    6. 'airs' → logprob: -13.881730079650879
    7. 'airie' → logprob: -14.756730079650879
    8. 'aires' → logprob: -15.256730079650879
    9. ' aire' → logprob: -15.381730079650879
    10. 'aie' → logprob: -15.506730079650879

Token 340: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3311101496219635
    2. 'if' → logprob: -1.8311101198196411
    3. 'and' → logprob: -2.5811102390289307
    4. ' if' → logprob: -3.4561102390289307
    5. ':' → logprob: -4.456110000610352
    6. ',' → logprob: -6.081110000610352
    7. '   ' → logprob: -8.831110000610352
    8. ' et' → logprob: -9.331110000610352
    9. ' ' → logprob: -9.706110000610352
    10. ':
' → logprob: -9.831110000610352

Token 341: ' vérifier' (ID: 93671)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.5587912201881409
    2. 'if' → logprob: -1.308791160583496
    3. 'middle' → logprob: -2.558791160583496
    4. 'res' → logprob: -3.058791160583496
    5. 'c' → logprob: -4.558791160583496
    6. ' if' → logprob: -5.058791160583496
    7. 'center' → logprob: -5.433791160583496
    8. 'mil' → logprob: -5.558791160583496
    9. '#' → logprob: -6.183791160583496
    10. ' mid' → logprob: -6.308791160583496

Token 342: ' que' (ID: 661)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.10302765667438507
    2. ' le' → logprob: -3.103027582168579
    3. 'if' → logprob: -4.103027820587158
    4. 's' → logprob: -4.103027820587158
    5. ' if' → logprob: -5.103027820587158
    6. 'si' → logprob: -5.603027820587158
    7. ' si' → logprob: -5.728027820587158
    8. ' s' → logprob: -5.853027820587158
    9. 'la' → logprob: -6.103027820587158
    10. ' la' → logprob: -6.603027820587158

Token 343: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030153892934322357
    2. 'n' → logprob: -4.405153751373291
    3. 'res' → logprob: -5.030153751373291
    4. ' s' → logprob: -5.280153751373291
    5. 'cost' → logprob: -5.905153751373291
    6. 'not' → logprob: -6.780153751373291
    7. 'is' → logprob: -6.905153751373291
    8. ' n' → logprob: -8.03015422821045
    9. '(n' → logprob: -9.03015422821045
    10. '(s' → logprob: -9.15515422821045

Token 344: ' milieu' (ID: 43149)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.372218519449234
    2. 'car' → logprob: -1.4972184896469116
    3. 'mil' → logprob: -2.747218608856201
    4. 'res' → logprob: -4.122218608856201
    5. 'rés' → logprob: -6.122218608856201
    6. 'char' → logprob: -6.247218608856201
    7. 'middle' → logprob: -6.747218608856201
    8. 'centre' → logprob: -7.872218608856201
    9. 'c' → logprob: -7.997218608856201
    10. 'n' → logprob: -8.622218132019043

Token 345: ' est' (ID: 893)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4630151689052582
    2. 's' → logprob: -2.088015079498291
    3. 'char' → logprob: -2.588015079498291
    4. 'est' → logprob: -2.713015079498291
    5. 'if' → logprob: -3.088015079498291
    6. 'character' → logprob: -3.838015079498291
    7. 'res' → logprob: -4.088015079498291
    8. 'is' → logprob: -4.463015079498291
    9. 'c' → logprob: -6.338015079498291
    10. 'n' → logprob: -6.463015079498291

Token 346: ' i' (ID: 575)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.005089545156806707
    2. 'i' → logprob: -5.75508975982666
    3. ''s' → logprob: -7.50508975982666
    4. ''un' → logprob: -8.25508975982666
    5. 's' → logprob: -8.50508975982666
    6. ' '' → logprob: -8.88008975982666
    7. ''au' → logprob: -9.38008975982666
    8. ''w' → logprob: -9.50508975982666
    9. ''une' → logprob: -9.50508975982666
    10. 'w' → logprob: -9.75508975982666

Token 347: ' ou' (ID: 2031)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002867225557565689
    2. ' if' → logprob: -8.750287055969238
    3. 'or' → logprob: -9.250287055969238
    4. 's' → logprob: -11.375287055969238
    5. ' or' → logprob: -11.750287055969238
    6. 'i' → logprob: -12.625287055969238
    7. '```' → logprob: -12.625287055969238
    8. ',' → logprob: -13.250287055969238
    9. 'and' → logprob: -13.875287055969238
    10. '+' → logprob: -14.875287055969238

Token 348: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1604929119348526
    2. ''w' → logprob: -1.9104928970336914
    3. ' w' → logprob: -8.660492897033691
    4. ''' → logprob: -9.535492897033691
    5. '   ' → logprob: -11.910492897033691
    6. ''s' → logprob: -12.410492897033691
    7. ' '' → logprob: -12.535492897033691
    8. 's' → logprob: -12.660492897033691
    9. ' ' → logprob: -13.660492897033691
    10. 'W' → logprob: -14.410492897033691

Token 349: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.7755875129951164e-05
    2. ' if' → logprob: -10.00004768371582
    3. '```' → logprob: -13.25004768371582
    4. 'middle' → logprob: -15.25004768371582
    5. 'mid' → logprob: -15.62504768371582
    6. '``' → logprob: -16.62504768371582
    7. 's' → logprob: -17.00004768371582
    8. '
' → logprob: -17.50004768371582
    9. 'and' → logprob: -17.75004768371582
    10. ')' → logprob: -18.12504768371582

Token 350: ' sinon' (ID: 52915)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00039170795935206115
    2. ' if' → logprob: -8.125391960144043
    3. 'mid' → logprob: -10.000391960144043
    4. 'res' → logprob: -10.250391960144043
    5. '   ' → logprob: -12.125391960144043
    6. 's' → logprob: -12.375391960144043
    7. 'middle' → logprob: -13.500391960144043
    8. '#' → logprob: -13.500391960144043
    9. '```' → logprob: -13.750391960144043
    10. 'm' → logprob: -14.250391960144043

Token 351: ' ' (ID: 220)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00523837935179472
    2. '   ' → logprob: -6.0052385330200195
    3. ' res' → logprob: -6.0052385330200195
    4. 'if' → logprob: -8.25523853302002
    5. ' if' → logprob: -11.13023853302002
    6. '  ' → logprob: -11.88023853302002
    7. 'rés' → logprob: -13.00523853302002
    8. '	res' → logprob: -13.13023853302002
    9. '```' → logprob: -13.13023853302002
    10. ' ' → logprob: -13.50523853302002

Token 352: '1' (ID: 16)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0001017551330733113
    2. '   ' → logprob: -9.375102043151855
    3. 'if' → logprob: -11.625102043151855
    4. 'rés' → logprob: -12.500102043151855
    5. ' res' → logprob: -13.000102043151855
    6. '
' → logprob: -14.125102043151855
    7. '  ' → logprob: -14.625102043151855
    8. '```' → logprob: -15.125102043151855
    9. 'ress' → logprob: -15.750102043151855
    10. '#' → logprob: -15.875102043151855

Token 353: ' substitution' (ID: 92838)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003697781648952514
    2. ' if' → logprob: -8.000370025634766
    3. '
' → logprob: -11.000370025634766
    4. 'middle' → logprob: -12.000370025634766
    5. '```' → logprob: -12.250370025634766
    6. 'mid' → logprob: -12.500370025634766
    7. 'c' → logprob: -14.000370025634766
    8. 'res' → logprob: -14.375370025634766
    9. '``' → logprob: -14.500370025634766
    10. 'm' → logprob: -14.750370025634766

Token 354: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.7697225252486533e-06
    2. ' if' → logprob: -12.625003814697266
    3. '```' → logprob: -15.000003814697266
    4. '
' → logprob: -16.500003814697266
    5. 'middle' → logprob: -17.750003814697266
    6. 'mid' → logprob: -18.500003814697266
    7. '``' → logprob: -19.375003814697266
    8. 'res' → logprob: -19.625003814697266
    9. '    
' → logprob: -20.625003814697266
    10. 'If' → logprob: -20.625003814697266

Token 355: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -14.000001907348633
    3. ' if' → logprob: -14.375001907348633
    4. '
' → logprob: -14.875001907348633
    5. 'middle' → logprob: -15.125001907348633
    6. 'mid' → logprob: -15.125001907348633
    7. '``' → logprob: -17.875001907348633
    8. 'm' → logprob: -18.500001907348633
    9. 'c' → logprob: -19.250001907348633
    10. 'center' → logprob: -19.750001907348633

Token 356: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47407862544059753
    2. ' n' → logprob: -0.9740786552429199
    3. '(n' → logprob: -14.099078178405762
    4. ' ' → logprob: -14.724078178405762
    5. 'len' → logprob: -15.974078178405762
    6. '	n' → logprob: -15.974078178405762
    7. ' len' → logprob: -15.974078178405762
    8. ' (' → logprob: -16.599079132080078
    9. '   ' → logprob: -17.474079132080078
    10. ' ' → logprob: -17.849079132080078

Token 357: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6932363510131836
    2. ' %' → logprob: -0.6932363510131836
    3. ' ' → logprob: -9.568236351013184
    4. '>' → logprob: -11.193236351013184
    5. ' ' → logprob: -13.693236351013184
    6. '   ' → logprob: -13.693236351013184
    7. '==' → logprob: -14.318236351013184
    8. '```' → logprob: -14.318236351013184
    9. ' >' → logprob: -14.568236351013184
    10. '1' → logprob: -14.693236351013184

Token 358: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. '=' → logprob: -16.125295639038086
    4. '3' → logprob: -16.375295639038086
    5. '==' → logprob: -16.625295639038086
    6. '!=' → logprob: -16.750295639038086
    7. '```' → logprob: -17.500295639038086
    8. '1' → logprob: -17.500295639038086
    9. '  ' → logprob: -18.750295639038086
    10. '_' → logprob: -18.875295639038086

Token 359: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3713822662830353
    2. '1' → logprob: -1.246382236480713
    3. '!=' → logprob: -4.371382236480713
    4. ' ==' → logprob: -4.746382236480713
    5. ' ' → logprob: -7.371382236480713
    6. ' !=' → logprob: -7.996382236480713
    7. '=' → logprob: -8.371382713317871
    8. ':' → logprob: -9.621382713317871
    9. '```' → logprob: -10.621382713317871
    10. '   ' → logprob: -10.871382713317871

Token 360: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759702920913696
    2. '1' → logprob: -0.8259702920913696
    3. ' ' → logprob: -10.450970649719238
    4. '2' → logprob: -13.200970649719238
    5. '```' → logprob: -17.200969696044922
    6. '   ' → logprob: -17.700969696044922
    7. '=' → logprob: -17.950969696044922
    8. '==' → logprob: -18.575969696044922
    9. '5' → logprob: -18.950969696044922
    10. '3' → logprob: -19.575969696044922

Token 361: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7400952577590942
    2. ':
' → logprob: -0.7400952577590942
    3. ':' → logprob: -3.2400951385498047
    4. '   ' → logprob: -5.615095138549805
    5. 'and' → logprob: -6.490095138549805
    6. ' :
' → logprob: -6.740095138549805
    7. ' :' → logprob: -8.490095138549805
    8. ' ' → logprob: -9.740095138549805
    9. '=' → logprob: -10.865095138549805
    10. ' s' → logprob: -10.865095138549805

Token 362: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6761810183525085
    2. '   ' → logprob: -1.0511810779571533
    3. ' res' → logprob: -2.6761810779571533
    4. 'if' → logprob: -2.9261810779571533
    5. 'res' → logprob: -4.301180839538574
    6. ' mid' → logprob: -6.051180839538574
    7. 'mid' → logprob: -6.801180839538574
    8. ' ' → logprob: -7.176180839538574
    9. ' middle' → logprob: -7.426180839538574
    10. ' c' → logprob: -7.926180839538574

Token 363: ' mid' (ID: 6959)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2710908055305481
    2. 'res' → logprob: -1.5210907459259033
    3. 'mid' (adapté à ' mid') → logprob: -4.521090984344482
    4. ' if' → logprob: -5.271090984344482
    5. ' res' → logprob: -7.146090984344482
    6. '   ' → logprob: -7.146090984344482
    7. 'middle' → logprob: -7.146090984344482
    8. 'c' → logprob: -7.771090984344482
    9. ' mid' → logprob: -9.396090507507324
    10. 'm' → logprob: -9.771090507507324

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25658854842185974
    2. '_char' → logprob: -1.6315885782241821
    3. '=' → logprob: -3.6315884590148926
    4. '_c' → logprob: -5.631588459014893
    5. 'c' → logprob: -8.13158893585205
    6. '_' → logprob: -8.88158893585205
    7. 'char' → logprob: -10.00658893585205
    8. '=_' → logprob: -10.13158893585205
    9. '=c' → logprob: -11.00658893585205
    10. '_idx' → logprob: -11.00658893585205

Token 365: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06214066222310066
    2. ' s' → logprob: -2.812140703201294
    3. 'n' → logprob: -8.812140464782715
    4. ' n' → logprob: -10.812140464782715
    5. 'len' → logprob: -13.562140464782715
    6. '(s' → logprob: -13.937140464782715
    7. '   ' → logprob: -14.562140464782715
    8. ' (' → logprob: -14.937140464782715
    9. '(n' → logprob: -15.687140464782715
    10. ' ' → logprob: -15.812140464782715

Token 366: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0012063038302585483
    2. '[len' → logprob: -6.876206398010254
    3. 'len' → logprob: -8.876206398010254
    4. 'n' → logprob: -10.376206398010254
    5. '
' → logprob: -14.251206398010254
    6. ' [' → logprob: -14.626206398010254
    7. '(n' → logprob: -14.751206398010254
    8. '[mid' → logprob: -15.251206398010254
    9. '[' → logprob: -15.501206398010254
    10. '   ' → logprob: -15.626206398010254

Token 367: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -7.584239938296378e-06
    2. ' //' → logprob: -12.375007629394531
    3. '#' → logprob: -12.750007629394531
    4. '```' → logprob: -15.750007629394531
    5. '2' → logprob: -15.875007629394531
    6. '/' → logprob: -16.62500762939453
    7. '
' → logprob: -16.75000762939453
    8. '1' → logprob: -17.62500762939453
    9. '   ' → logprob: -18.12500762939453
    10. 'n' → logprob: -18.12500762939453

Token 368: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '//' → logprob: -18.375003814697266
    4. '```' → logprob: -21.375003814697266
    5. '   ' → logprob: -21.500003814697266
    6. '/' → logprob: -22.625003814697266
    7. '۲' → logprob: -24.250003814697266
    8. '２' → logprob: -24.625003814697266
    9. ' //' → logprob: -25.125003814697266
    10. '  ' → logprob: -25.500003814697266

Token 369: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.003419735934585333
    2. ']' → logprob: -5.753419876098633
    3. ']
' → logprob: -8.503419876098633
    4. ' ]
' → logprob: -10.378419876098633
    5. ']

' → logprob: -12.253419876098633
    6. '   ' → logprob: -13.253419876098633
    7. ')
' → logprob: -14.003419876098633
    8. '']
' → logprob: -14.753419876098633
    9. ' ]' → logprob: -15.878419876098633
    10. 'if' → logprob: -16.253419876098633

Token 370: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00842332188040018
    2. '   ' → logprob: -5.258423328399658
    3. 'res' → logprob: -5.758423328399658
    4. ' if' → logprob: -10.5084228515625
    5. '
' → logprob: -13.8834228515625
    6. ' res' → logprob: -16.3834228515625
    7. '    
' → logprob: -17.0084228515625
    8. '```' → logprob: -17.2584228515625
    9. '  ' → logprob: -18.5084228515625
    10. 'If' → logprob: -18.8834228515625

Token 371: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20144402980804443
    2. 'res' → logprob: -1.7014440298080444
    3. '   ' → logprob: -10.826443672180176
    4. ' if' → logprob: -11.701443672180176
    5. '
' → logprob: -13.576443672180176
    6. ' res' → logprob: -15.451443672180176
    7. 'ress' → logprob: -15.576443672180176
    8. '    
' → logprob: -15.701443672180176
    9. '

' → logprob: -16.576444625854492
    10. '
' → logprob: -16.701444625854492

Token 372: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0002775438770186156
    2. ' mid' → logprob: -8.250277519226074
    3. 'not' → logprob: -11.125277519226074
    4. ' not' → logprob: -13.625277519226074
    5. '(mid' → logprob: -15.750277519226074
    6. '   ' → logprob: -17.37527847290039
    7. '[mid' → logprob: -17.87527847290039
    8. 'middle' → logprob: -19.12527847290039
    9. '
' → logprob: -19.62527847290039
    10. '  ' → logprob: -19.87527847290039

Token 373: ' !=' (ID: 1666)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06432122737169266
    2. 'not' → logprob: -2.939321279525757
    3. '!=' → logprob: -4.689321041107178
    4. ' !=' → logprob: -8.689321517944336
    5. '!='' → logprob: -10.439321517944336
    6. '   ' → logprob: -13.939321517944336
    7. '==' → logprob: -14.189321517944336
    8. '	not' → logprob: -14.314321517944336
    9. ' ' → logprob: -15.064321517944336
    10. ')' → logprob: -15.189321517944336

Token 374: ' '' (ID: 461)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''i' → logprob: -3.7146746763028204e-05
    2. 'i' → logprob: -10.62503719329834
    3. '‘i' → logprob: -11.75003719329834
    4. ' '' → logprob: -13.25003719329834
    5. '"' → logprob: -13.50003719329834
    6. ''' → logprob: -14.37503719329834
    7. '
' → logprob: -14.87503719329834
    8. '`' → logprob: -15.12503719329834
    9. '('' → logprob: -15.62503719329834
    10. '’i' → logprob: -16.250036239624023

Token 375: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.0391463193809614e-05
    2. ''i' → logprob: -9.750060081481934
    3. ''' → logprob: -13.125060081481934
    4. 'w' → logprob: -17.37506103515625
    5. ' i' → logprob: -17.37506103515625
    6. '	i' → logprob: -19.62506103515625
    7. '‘i' → logprob: -19.87506103515625
    8. '('' → logprob: -20.00006103515625
    9. ''w' → logprob: -20.37506103515625
    10. '{'' → logprob: -20.75006103515625

Token 376: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006111674592830241
    2. 'and' → logprob: -7.875611305236816
    3. ' and' → logprob: -8.500611305236816
    4. ' '' → logprob: -10.750611305236816
    5. 'w' → logprob: -12.375611305236816
    6. 'i' → logprob: -13.750611305236816
    7. 'e' → logprob: -15.125611305236816
    8. 'a' → logprob: -15.750611305236816
    9. '   ' → logprob: -15.750611305236816
    10. ''w' → logprob: -16.2506103515625

Token 377: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0788998156785965
    2. 'and' → logprob: -2.57889986038208
    3. '   ' → logprob: -12.328899383544922
    4. '    ' → logprob: -12.953899383544922
    5. ' ' → logprob: -13.078899383544922
    6. ':
' → logprob: -14.578899383544922
    7. ':' → logprob: -14.953899383544922
    8. '	and' → logprob: -15.828899383544922
    9. ' ' → logprob: -16.828899383544922
    10. '  ' → logprob: -16.953899383544922

Token 378: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.048591118305921555
    2. ' mid' → logprob: -3.048591136932373
    3. '   ' → logprob: -12.798590660095215
    4. ' ' → logprob: -15.048590660095215
    5. '  ' → logprob: -15.048590660095215
    6. '    ' → logprob: -15.423590660095215
    7. 'm' → logprob: -16.92359161376953
    8. '(mid' → logprob: -17.17359161376953
    9. '[mid' → logprob: -17.67359161376953
    10. '     ' → logprob: -17.79859161376953

Token 379: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.05794228985905647
    2. ' !=' → logprob: -2.9329423904418945
    3. '!='' → logprob: -5.8079423904418945
    4. 'not' → logprob: -12.182942390441895
    5. ' not' → logprob: -12.182942390441895
    6. '!=(' → logprob: -12.307942390441895
    7. '!="' → logprob: -12.432942390441895
    8. '   ' → logprob: -12.432942390441895
    9. ' ' → logprob: -12.807942390441895
    10. '!' → logprob: -12.807942390441895

Token 380: ' '' (ID: 461)
  Prédit: ''w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''w' → logprob: -0.0322643518447876
    2. ' '' → logprob: -3.657264232635498
    3. ''' → logprob: -5.157264232635498
    4. 'w' → logprob: -9.282264709472656
    5. ' w' → logprob: -10.032264709472656
    6. ''wi' → logprob: -10.532264709472656
    7. ''s' → logprob: -11.782264709472656
    8. '’w' → logprob: -12.032264709472656
    9. ' ' → logprob: -12.782264709472656
    10. '   ' → logprob: -13.407264709472656

Token 381: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.226628895296017e-06
    2. ''w' → logprob: -12.125007629394531
    3. ' w' → logprob: -13.375007629394531
    4. '	w' → logprob: -16.50000762939453
    5. ''' → logprob: -17.87500762939453
    6. 'ｗ' → logprob: -19.50000762939453
    7. '_w' → logprob: -19.75000762939453
    8. '   ' → logprob: -20.62500762939453
    9. ''s' → logprob: -20.87500762939453
    10. ')' → logprob: -21.12500762939453

Token 382: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02660134993493557
    2. ':' → logprob: -3.6516013145446777
    3. '):
' → logprob: -8.276601791381836
    4. '   ' → logprob: -10.776601791381836
    5. '':
' → logprob: -11.276601791381836
    6. ' :
' → logprob: -11.651601791381836
    7. '():
' → logprob: -13.901601791381836
    8. '):' → logprob: -14.151601791381836
    9. ':
' → logprob: -14.276601791381836
    10. ':

' → logprob: -14.651601791381836

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14304810762405396
    2. '   ' → logprob: -2.018048048019409
    3. 'res' → logprob: -8.143048286437988
    4. ':' → logprob: -10.518048286437988
    5. ':
' → logprob: -10.518048286437988
    6. '
' → logprob: -11.643048286437988
    7. ' res' → logprob: -11.768048286437988
    8. '     ' → logprob: -13.143048286437988
    9. '      ' → logprob: -13.268048286437988
    10. '):
' → logprob: -13.393048286437988

Token 384: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -1.4259644558478612e-05
    2. '   ' → logprob: -11.500014305114746
    3. ' res' → logprob: -12.500014305114746
    4. '
' → logprob: -15.000014305114746
    5. '	res' → logprob: -19.25001335144043
    6. '1' → logprob: -19.75001335144043
    7. '       ' → logprob: -20.00001335144043
    8. '    
' → logprob: -21.00001335144043
    9. '```' → logprob: -21.62501335144043
    10. '  ' → logprob: -21.75001335144043

Token 385: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10020720958709717
    2. ' +=' → logprob: -2.3502073287963867
    3. '   ' → logprob: -14.850207328796387
    4. ']+=' → logprob: -15.725207328796387
    5. '=' → logprob: -16.85020637512207
    6. '+='' → logprob: -18.47520637512207
    7. ' ' → logprob: -18.85020637512207
    8. '    ' → logprob: -19.72520637512207
    9. '+=(' → logprob: -19.72520637512207
    10. '+="' → logprob: -20.10020637512207

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -21.25
    4. '۱' → logprob: -24.25
    5. '```' → logprob: -25.0
    6. '১' → logprob: -25.125
    7. '１' → logprob: -25.25
    8. '
' → logprob: -25.75
    9. '१' → logprob: -25.875
    10. '  ' → logprob: -25.875

Token 387: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.27099974633893e-05
    2. '
' → logprob: -11.625012397766113
    3. ' print' → logprob: -12.875012397766113
    4. '<|end|>' → logprob: -14.000012397766113
    5. '```' → logprob: -15.250012397766113
    6. '#' → logprob: -18.00001335144043
    7. ')' → logprob: -18.12501335144043
    8. '    
' → logprob: -18.87501335144043
    9. '#print' → logprob: -18.87501335144043
    10. '  
' → logprob: -19.00001335144043

Token 388: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -15.250000953674316
    3. '
' → logprob: -16.0
    4. '```' → logprob: -16.375
    5. 'if' → logprob: -19.0
    6. '#' → logprob: -19.75
    7. '#print' → logprob: -20.0
    8. 'return' → logprob: -20.375
    9. '\' → logprob: -20.75
    10. '(print' → logprob: -21.5

Token 389: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.12723968923091888
    2. '(' → logprob: -2.12723970413208
    3. '(s' → logprob: -8.127239227294922
    4. '('' → logprob: -11.752239227294922
    5. '(f' → logprob: -12.627239227294922
    6. '()' → logprob: -13.127239227294922
    7. '(re' → logprob: -14.502239227294922
    8. '(len' → logprob: -14.877239227294922
    9. '((' → logprob: -15.002239227294922
    10. ' (' → logprob: -15.502239227294922

Token 390: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 388
Tokens correctement prédits (1ère position, stricte): 180
Tokens correctement prédits (1ère position, avec adaptation): 191
Tokens correctement prédits (top 10): 319
Précision stricte (1ère position): 46.39%
Précision adaptée (1ère position): 49.23%
Précision (top 10): 82.22%
================================================================================
