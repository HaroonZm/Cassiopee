================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
A=set(map(int,input().split()[1:]))
B=set(map(int,input().split()[1:]))
C=set(map(int,input().split()[1:]))
print(len((set(range(1,N+1))-A) & C | B & C))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46642011404037476
    2. ')' → logprob: -1.0914201736450195
    3. '()' → logprob: -3.8414201736450195
    4. '())' → logprob: -4.4664201736450195
    5. '(
' → logprob: -7.3414201736450195
    6. '```' → logprob: -7.5914201736450195
    7. '")' → logprob: -7.8414201736450195
    8. '')' → logprob: -7.8414201736450195
    9. '`)' → logprob: -7.9664201736450195
    10. '<|end|>' → logprob: -8.46642017364502

Token 4: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5715791583061218
    2. 's' → logprob: -1.9465792179107666
    3. '#' → logprob: -3.1965792179107666
    4. '\n' → logprob: -3.1965792179107666
    5. 'if' → logprob: -3.5715792179107666
    6. 'i' → logprob: -3.6965792179107666
    7. 'a' → logprob: -3.6965792179107666
    8. '*' → logprob: -3.9465792179107666
    9. ''' → logprob: -4.1965789794921875
    10. '`' → logprob: -4.3215789794921875

Token 5: '=set' (ID: 166509)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0073883323930203915
    2. '.' → logprob: -5.507388114929199
    3. '=' → logprob: -6.007388114929199
    4. '\[' → logprob: -8.6323881149292
    5. '[A' → logprob: -9.0073881149292
    6. ' =' → logprob: -9.1323881149292
    7. '+' → logprob: -9.3823881149292
    8. '[]' → logprob: -9.5073881149292
    9. 'A' → logprob: -9.7573881149292
    10. '[i' → logprob: -10.3823881149292

Token 6: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00029494395130313933
    2. '()' → logprob: -9.12529468536377
    3. '(A' → logprob: -9.37529468536377
    4. '((' → logprob: -10.00029468536377
    5. '(
' → logprob: -11.62529468536377
    6. '([' → logprob: -11.75029468536377
    7. '(`' → logprob: -12.00029468536377
    8. '(range' → logprob: -12.37529468536377
    9. '("("' → logprob: -12.62529468536377
    10. ' (' → logprob: -12.62529468536377

Token 7: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007468550931662321
    2. '(' → logprob: -5.0074687004089355
    3. '(input' → logprob: -8.007468223571777
    4. 'int' → logprob: -8.632468223571777
    5. '(str' → logprob: -8.882468223571777
    6. '=int' → logprob: -10.882468223571777
    7. '(
' → logprob: -11.132468223571777
    8. '<int' → logprob: -11.132468223571777
    9. '```' → logprob: -11.132468223571777
    10. '(lambda' → logprob: -11.632468223571777

Token 8: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031134262681007385
    2. ',input' → logprob: -5.878113269805908
    3. '(' → logprob: -8.628113746643066
    4. '=input' → logprob: -9.878113746643066
    5. 'input' → logprob: -10.253113746643066
    6. ')' → logprob: -11.378113746643066
    7. ',' → logprob: -11.503113746643066
    8. '))' → logprob: -12.128113746643066
    9. ' (' → logprob: -12.253113746643066
    10. ' input' → logprob: -13.003113746643066

Token 9: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9299594163894653
    2. '().' → logprob: -0.9299594163894653
    3. '())' → logprob: -1.9299594163894653
    4. '()))' → logprob: -2.804959297180176
    5. '(' → logprob: -5.679959297180176
    6. '()));' → logprob: -7.554959297180176
    7. '())))' → logprob: -8.304959297180176
    8. ')' → logprob: -8.804959297180176
    9. '());' → logprob: -8.804959297180176
    10. '()>' → logprob: -8.929959297180176

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.723973582556937e-05
    2. 'strip' → logprob: -11.250017166137695
    3. ' split' → logprob: -12.750017166137695
    4. '(split' → logprob: -14.125017166137695
    5. 'rstrip' → logprob: -14.750017166137695
    6. 'spl' → logprob: -15.875017166137695
    7. 's' → logprob: -17.375017166137695
    8. '```' → logprob: -18.875017166137695
    9. ')' → logprob: -19.500017166137695
    10. 'startswith' → logprob: -20.125017166137695

Token 11: '()[' (ID: 20778)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7349772453308105
    2. ')' → logprob: -0.9849772453308105
    3. '()))' → logprob: -2.7349772453308105
    4. '(' → logprob: -2.9849772453308105
    5. '())' → logprob: -3.4849772453308105
    6. '()' → logprob: -7.7349772453308105
    7. ')))' → logprob: -8.609977722167969
    8. '('' → logprob: -8.984977722167969
    9. '(
' → logprob: -10.609977722167969
    10. ''))' → logprob: -10.859977722167969

Token 12: '1' (ID: 16)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.016227204352617264
    2. ':' → logprob: -4.6412272453308105
    3. '))' → logprob: -6.2662272453308105
    4. '])' → logprob: -6.6412272453308105
    5. ')))' → logprob: -6.8912272453308105
    6. '0' → logprob: -7.8912272453308105
    7. ']' → logprob: -7.8912272453308105
    8. '1' → logprob: -8.016226768493652
    9. ')' → logprob: -8.266226768493652
    10. '])))' → logprob: -8.766226768493652

Token 13: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027901383582502604
    2. ':]' → logprob: -6.0027899742126465
    3. ':],' → logprob: -8.127790451049805
    4. ':)' → logprob: -11.502790451049805
    5. ']))' → logprob: -12.752790451049805
    6. ' :' → logprob: -13.002790451049805
    7. ':].' → logprob: -13.377790451049805
    8. ']:' → logprob: -14.252790451049805
    9. '):' → logprob: -14.377790451049805
    10. ':-' → logprob: -15.127790451049805

Token 14: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0042920843698084354
    2. '))' → logprob: -5.629292011260986
    3. '])' → logprob: -8.629292488098145
    4. ')))' → logprob: -8.754292488098145
    5. ']' → logprob: -9.254292488098145
    6. '']))' → logprob: -9.629292488098145
    7. '()' → logprob: -9.879292488098145
    8. ')' → logprob: -10.004292488098145
    9. '()))' → logprob: -10.379292488098145
    10. '}))' → logprob: -11.129292488098145

Token 15: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3025417625904083
    2. 's' → logprob: -3.052541732788086
    3. 'print' → logprob: -3.177541732788086
    4. '\n' → logprob: -3.302541732788086
    5. 'S' → logprob: -3.927541732788086
    6. '
' → logprob: -4.302541732788086
    7. ')' → logprob: -4.427541732788086
    8. '&' → logprob: -4.552541732788086
    9. '&
' → logprob: -4.927541732788086
    10. 'I' → logprob: -4.927541732788086

Token 16: '=set' (ID: 166509)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5105289816856384
    2. '=' → logprob: -1.0105290412902832
    3. ' =' → logprob: -3.760529041290283
    4. '=set' → logprob: -5.385529041290283
    5. '=.' → logprob: -6.010529041290283
    6. '.=' → logprob: -6.260529041290283
    7. '=int' → logprob: -6.635529041290283
    8. ' .' → logprob: -7.635529041290283
    9. '=input' → logprob: -8.010528564453125
    10. '.add' → logprob: -8.510528564453125

Token 17: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001732663222355768
    2. '(' → logprob: -9.000173568725586
    3. '(int' → logprob: -10.625173568725586
    4. ' (' → logprob: -11.250173568725586
    5. '(input' → logprob: -11.875173568725586
    6. '(range' → logprob: -13.250173568725586
    7. '(m' → logprob: -13.625173568725586
    8. '(list' → logprob: -13.875173568725586
    9. ',map' → logprob: -14.875173568725586
    10. 'map' → logprob: -15.000173568725586

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00017922651022672653
    2. '(' → logprob: -9.375179290771484
    3. '<int' → logprob: -9.375179290771484
    4. '=int' → logprob: -12.250179290771484
    5. 'int' → logprob: -13.125179290771484
    6. '[int' → logprob: -13.250179290771484
    7. ']int' → logprob: -15.125179290771484
    8. ',int' → logprob: -15.250179290771484
    9. ' (' → logprob: -15.500179290771484
    10. ' int' → logprob: -16.625179290771484

Token 19: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6937289237976074
    2. '(input' → logprob: -0.6937289237976074
    3. '(' → logprob: -7.943728923797607
    4. ',input' → logprob: -9.193729400634766
    5. ',int' → logprob: -9.693729400634766
    6. ' (' → logprob: -11.068729400634766
    7. '=input' → logprob: -11.318729400634766
    8. '=int' → logprob: -11.318729400634766
    9. '<int' → logprob: -12.193729400634766
    10. ',' → logprob: -12.568729400634766

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.17420256882906e-05
    2. '()' → logprob: -9.375091552734375
    3. '(' → logprob: -13.125091552734375
    4. '())' → logprob: -13.250091552734375
    5. '.' → logprob: -14.250091552734375
    6. '()))' → logprob: -14.500091552734375
    7. ' ().' → logprob: -14.500091552734375
    8. '(.' → logprob: -14.625091552734375
    9. '()).' → logprob: -14.625091552734375
    10. '());' → logprob: -16.500091552734375

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. 'strip' → logprob: -15.500000953674316
    3. ' split' → logprob: -16.0
    4. '```' → logprob: -16.25
    5. 'spl' → logprob: -17.625
    6. '(split' → logprob: -18.25
    7. 'rstrip' → logprob: -19.75
    8. 'plit' → logprob: -19.875
    9. 'startswith' → logprob: -20.75
    10. 'read' → logprob: -21.0

Token 22: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.014162921346724033
    2. '()' → logprob: -4.389163017272949
    3. '()))' → logprob: -6.764163017272949
    4. '())' → logprob: -8.63916301727295
    5. '().' → logprob: -8.88916301727295
    6. '(' → logprob: -9.88916301727295
    7. '())[' → logprob: -10.51416301727295
    8. '```' → logprob: -10.76416301727295
    9. '()(' → logprob: -11.13916301727295
    10. '()][' → logprob: -11.13916301727295

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7014437364414334e-05
    2. '0' → logprob: -12.12502670288086
    3. ':' → logprob: -12.12502670288086
    4. ' ' → logprob: -12.12502670288086
    5. '   ' → logprob: -12.75002670288086
    6. '2' → logprob: -12.87502670288086
    7. '(' → logprob: -13.50002670288086
    8. ']))' → logprob: -13.87502670288086
    9. '```' → logprob: -14.12502670288086
    10. '[' → logprob: -15.37502670288086

Token 24: ':' (ID: 25)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15707968175411224
    2. '()]' → logprob: -2.4070796966552734
    3. ']))' → logprob: -3.7820796966552734
    4. ':' → logprob: -4.157079696655273
    5. '():' → logprob: -5.157079696655273
    6. ':]' → logprob: -5.407079696655273
    7. ']' → logprob: -5.907079696655273
    8. ']()' → logprob: -6.157079696655273
    9. '()][' → logprob: -6.782079696655273
    10. '()].' → logprob: -8.657079696655273

Token 25: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0022404235787689686
    2. '])' → logprob: -6.6272406578063965
    3. '))' → logprob: -7.3772406578063965
    4. ']' → logprob: -9.002240180969238
    5. ')' → logprob: -10.002240180969238
    6. ']))
' → logprob: -10.377240180969238
    7. '()' → logprob: -10.502240180969238
    8. '']))' → logprob: -10.877240180969238
    9. '1' → logprob: -11.627240180969238
    10. ')]' → logprob: -11.752240180969238

Token 26: 'C' (ID: 34)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7767127752304077
    2. '.' → logprob: -1.6517127752304077
    3. 'print' → logprob: -2.0267128944396973
    4. ')
' → logprob: -3.0267128944396973
    5. 'A' → logprob: -3.2767128944396973
    6. 's' → logprob: -3.4017128944396973
    7. '()
' → logprob: -3.7767128944396973
    8. '()' → logprob: -3.9017128944396973
    9. 'C' → logprob: -4.401712894439697
    10. '.
' → logprob: -4.651712894439697

Token 27: '=set' (ID: 166509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1410270631313324
    2. ' =' → logprob: -2.3910269737243652
    3. '.' → logprob: -3.8910269737243652
    4. '=set' → logprob: -4.141026973724365
    5. '=.' → logprob: -6.641026973724365
    6. '=A' → logprob: -7.141026973724365
    7. '.=' → logprob: -7.891026973724365
    8. '=C' → logprob: -8.516027450561523
    9. '.inter' → logprob: -8.891027450561523
    10. '=int' → logprob: -9.016027450561523

Token 28: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29876813292503357
    2. '(map' → logprob: -1.673768162727356
    3. '()' → logprob: -2.7987680435180664
    4. '(int' → logprob: -5.423768043518066
    5. '(A' → logprob: -6.673768043518066
    6. '.' → logprob: -7.548768043518066
    7. '((' → logprob: -7.548768043518066
    8. '().' → logprob: -7.548768043518066
    9. '(set' → logprob: -7.923768043518066
    10. '(C' → logprob: -8.673768043518066

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.0445127372804563e-05
    2. '<int' → logprob: -12.25001049041748
    3. '(' → logprob: -12.87501049041748
    4. '=int' → logprob: -13.25001049041748
    5. '[int' → logprob: -14.50001049041748
    6. ' (' → logprob: -14.75001049041748
    7. ' int' → logprob: -15.62501049041748
    8. 'int' → logprob: -16.500009536743164
    9. ',int' → logprob: -17.250009536743164
    10. ']int' → logprob: -17.750009536743164

Token 30: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001416665269061923
    2. '=int' → logprob: -7.6264166831970215
    3. '(input' → logprob: -7.6264166831970215
    4. '<int' → logprob: -8.751416206359863
    5. '[int' → logprob: -8.876416206359863
    6. ',int' → logprob: -9.876416206359863
    7. '```' → logprob: -10.376416206359863
    8. ' (' → logprob: -10.876416206359863
    9. '().' → logprob: -11.001416206359863
    10. 'int' → logprob: -12.126416206359863

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7954958821064793e-05
    2. '()' → logprob: -11.250018119812012
    3. '(.' → logprob: -13.250018119812012
    4. '(' → logprob: -13.750018119812012
    5. '()[' → logprob: -14.250018119812012
    6. '(int' → logprob: -14.625018119812012
    7. ' ().' → logprob: -14.750018119812012
    8. '.' → logprob: -15.250018119812012
    9. '().__' → logprob: -16.750017166137695
    10. '()).' → logprob: -17.125017166137695

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. 'input' → logprob: -14.250001907348633
    3. 'spl' → logprob: -15.000001907348633
    4. '(split' → logprob: -15.125001907348633
    5. ' split' → logprob: -15.375001907348633
    6. 'int' → logprob: -16.125001907348633
    7. '.split' → logprob: -16.875001907348633
    8. '```' → logprob: -16.875001907348633
    9. 'skip' → logprob: -18.000001907348633
    10. 'strip' → logprob: -18.500001907348633

Token 33: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.0023846877738833427
    2. '()' → logprob: -6.377384662628174
    3. '().' → logprob: -7.377384662628174
    4. '())' → logprob: -10.627385139465332
    5. '()))' → logprob: -11.127385139465332
    6. '()][' → logprob: -12.377385139465332
    7. '```' → logprob: -12.752385139465332
    8. '(' → logprob: -12.877385139465332
    9. '())[' → logprob: -12.877385139465332
    10. '()(' → logprob: -13.752385139465332

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006516746943816543
    2. '[' → logprob: -8.375651359558105
    3. '2' → logprob: -8.625651359558105
    4. ']))' → logprob: -9.250651359558105
    5. '][' → logprob: -9.250651359558105
    6. '])' → logprob: -10.875651359558105
    7. '])[' → logprob: -11.750651359558105
    8. ']' → logprob: -12.375651359558105
    9. '0' → logprob: -12.750651359558105
    10. '3' → logprob: -12.750651359558105

Token 35: ':' (ID: 25)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023210065439343452
    2. '()]' → logprob: -4.648210048675537
    3. '()][' → logprob: -5.148210048675537
    4. '()[' → logprob: -5.523210048675537
    5. ']))' → logprob: -6.648210048675537
    6. '()))' → logprob: -7.148210048675537
    7. '])' → logprob: -8.023210525512695
    8. '[' → logprob: -8.023210525512695
    9. '[]' → logprob: -8.148210525512695
    10. ':' → logprob: -8.648210525512695

Token 36: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.008081750944256783
    2. '))' → logprob: -5.383081912994385
    3. '])' → logprob: -6.008081912994385
    4. ')' → logprob: -7.258081912994385
    5. ']' → logprob: -8.758081436157227
    6. '1' → logprob: -9.883081436157227
    7. ')))' → logprob: -10.758081436157227
    8. '']))' → logprob: -11.008081436157227
    9. ']))
' → logprob: -11.133081436157227
    10. ')])' → logprob: -11.508081436157227

Token 37: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07816661149263382
    2. 'result' → logprob: -3.8281667232513428
    3. 's' → logprob: -4.453166484832764
    4. '.' → logprob: -4.578166484832764
    5. 'A' → logprob: -5.203166484832764
    6. 'D' → logprob: -5.453166484832764
    7. ')' → logprob: -5.703166484832764
    8. '\n' → logprob: -6.203166484832764
    9. '.print' → logprob: -6.578166484832764
    10. ')
' → logprob: -6.578166484832764

Token 38: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5628184080123901
    2. '(A' → logprob: -1.5628184080123901
    3. '(len' → logprob: -1.6878184080123901
    4. '((' → logprob: -3.6878185272216797
    5. '(sum' → logprob: -5.43781852722168
    6. '(max' → logprob: -5.56281852722168
    7. '('' → logprob: -6.18781852722168
    8. '("("' → logprob: -8.56281852722168
    9. '("' → logprob: -9.18781852722168
    10. '(sorted' → logprob: -9.31281852722168

Token 39: '((' (ID: 2054)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.007677015382796526
    2. '(' → logprob: -4.88267707824707
    3. '((' → logprob: -10.25767707824707
    4. '(B' → logprob: -10.63267707824707
    5. '(
' → logprob: -12.75767707824707
    6. '(S' → logprob: -13.00767707824707
    7. '(C' → logprob: -13.00767707824707
    8. 'A' → logprob: -13.88267707824707
    9. '(a' → logprob: -14.13267707824707
    10. ')' → logprob: -14.38267707824707

Token 40: 'set' (ID: 977)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004135987721383572
    2. ' A' → logprob: -5.504136085510254
    3. '(A' → logprob: -9.879136085510254
    4. 'B' → logprob: -12.879136085510254
    5. ' (' → logprob: -13.629136085510254
    6. 'C' → logprob: -13.754136085510254
    7. '(' → logprob: -14.379136085510254
    8. ' ' → logprob: -15.629136085510254
    9. '((' → logprob: -15.754136085510254
    10. '	A' → logprob: -15.879136085510254

Token 41: '(range' (ID: 50017)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.45230966806411743
    2. 'A' → logprob: -1.2023096084594727
    3. ' A' → logprob: -3.4523096084594727
    4. '.union' → logprob: -4.452309608459473
    5. '.inter' → logprob: -4.952309608459473
    6. ' (' → logprob: -5.577309608459473
    7. ')' → logprob: -5.952309608459473
    8. 'union' → logprob: -6.702309608459473
    9. '(' → logprob: -6.827309608459473
    10. 's' → logprob: -7.202309608459473

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1798216998577118
    2. '(N' → logprob: -1.8048217296600342
    3. ' (' → logprob: -10.304821968078613
    4. '(n' → logprob: -10.554821968078613
    5. '1' → logprob: -11.804821968078613
    6. '(
' → logprob: -12.804821968078613
    7. 'N' → logprob: -13.054821968078613
    8. '((' → logprob: -13.179821968078613
    9. ')' → logprob: -14.804821968078613
    10. '(M' → logprob: -15.054821968078613

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20231330394744873
    2. 'N' → logprob: -1.7023133039474487
    3. '(' → logprob: -7.452313423156738
    4. '100' → logprob: -9.202313423156738
    5. '(N' → logprob: -9.702313423156738
    6. '101' → logprob: -10.327313423156738
    7. ' N' → logprob: -10.952313423156738
    8. '10' → logprob: -11.077313423156738
    9. ' ' → logprob: -11.202313423156738
    10. '0' → logprob: -11.577313423156738

Token 44: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.28216853737831116
    2. ',' → logprob: -1.4071685075759888
    3. ' ,' → logprob: -7.157168388366699
    4. ',n' → logprob: -8.6571683883667
    5. '(N' → logprob: -10.2821683883667
    6. 'N' → logprob: -11.5321683883667
    7. ',int' → logprob: -12.5321683883667
    8. '(' → logprob: -12.9071683883667
    9. ',
' → logprob: -12.9071683883667
    10. ',len' → logprob: -13.4071683883667

Token 45: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012928384239785373
    2. ' +' → logprob: -9.000129699707031
    3. '()+' → logprob: -13.500129699707031
    4. '))+' → logprob: -13.500129699707031
    5. ')+' → logprob: -13.875129699707031
    6. '))' → logprob: -14.250129699707031
    7. '+
' → logprob: -14.750129699707031
    8. '1' → logprob: -15.375129699707031
    9. '+C' → logprob: -15.625129699707031
    10. '＋' → logprob: -15.750129699707031

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.50000286102295
    3. '))' → logprob: -14.50000286102295
    4. '```' → logprob: -14.62500286102295
    5. ')' → logprob: -15.37500286102295
    6. '2' → logprob: -16.750001907348633
    7. '``' → logprob: -16.875001907348633
    8. ')))' → logprob: -16.875001907348633
    9. '))+' → logprob: -17.500001907348633
    10. '+' → logprob: -18.000001907348633

Token 47: '))-' (ID: 172027)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5236247181892395
    2. '))' → logprob: -0.8986247181892395
    3. ' )' → logprob: -8.523624420166016
    4. ')))' → logprob: -9.023624420166016
    5. '))-' → logprob: -9.648624420166016
    6. ')-' → logprob: -10.398624420166016
    7. ' ))' → logprob: -10.523624420166016
    8. '()' → logprob: -11.273624420166016
    9. '-' → logprob: -11.273624420166016
    10. '())' → logprob: -11.398624420166016

Token 48: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2217264622449875
    2. '(A' → logprob: -1.721726417541504
    3. ' A' → logprob: -4.221726417541504
    4. ' (' → logprob: -5.346726417541504
    5. '(B' → logprob: -8.471726417541504
    6. 'B' → logprob: -8.471726417541504
    7. '(' → logprob: -8.596726417541504
    8. '((' → logprob: -10.846726417541504
    9. ' ' → logprob: -11.721726417541504
    10. '	A' → logprob: -12.159226417541504

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03596584498882294
    2. ')-' → logprob: -3.785965919494629
    3. ' )' → logprob: -5.785965919494629
    4. '-' → logprob: -6.285965919494629
    5. '|' → logprob: -6.285965919494629
    6. '-B' → logprob: -6.285965919494629
    7. ')|' → logprob: -6.535965919494629
    8. ' -' → logprob: -6.910965919494629
    9. ')-(' → logprob: -7.785965919494629
    10. ').' → logprob: -8.035965919494629

Token 50: ' &' (ID: 827)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.32320231199264526
    2. '-' → logprob: -1.69820237159729
    3. '-B' → logprob: -2.82320237159729
    4. '|' → logprob: -4.448202133178711
    5. ')' → logprob: -4.573202133178711
    6. '.union' → logprob: -5.823202133178711
    7. ' |' → logprob: -5.948202133178711
    8. '-D' → logprob: -6.698202133178711
    9. '-C' → logprob: -6.823202133178711
    10. ' ' → logprob: -7.073202133178711

Token 51: ' C' (ID: 363)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1928423643112183
    2. '(B' → logprob: -1.3178423643112183
    3. 'B' → logprob: -1.4428423643112183
    4. ' B' → logprob: -1.6928423643112183
    5. '(set' → logprob: -5.442842483520508
    6. '(' → logprob: -6.567842483520508
    7. '((' → logprob: -6.817842483520508
    8. ' ((' → logprob: -7.192842483520508
    9. ' set' → logprob: -7.442842483520508
    10. 'set' → logprob: -8.442842483520508

Token 52: ' |' (ID: 1022)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06210694462060928
    2. ')' → logprob: -2.8121068477630615
    3. ')))' → logprob: -8.93710708618164
    4. '))
' → logprob: -12.56210708618164
    5. '`)' → logprob: -14.43710708618164
    6. ' ))' → logprob: -14.43710708618164
    7. ''))' → logprob: -14.56210708618164
    8. ')
' → logprob: -14.68710708618164
    9. ' ' → logprob: -15.18710708618164
    10. ')`' → logprob: -15.18710708618164

Token 53: ' B' (ID: 418)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -1.0371065139770508
    2. ' (' → logprob: -1.2871065139770508
    3. ' B' → logprob: -1.7871065139770508
    4. 'B' → logprob: -1.7871065139770508
    5. ' ((' → logprob: -4.162106513977051
    6. '((' → logprob: -4.412106513977051
    7. '(' → logprob: -5.162106513977051
    8. ' ' → logprob: -8.03710651397705
    9. '(set' → logprob: -8.41210651397705
    10. ')' → logprob: -8.53710651397705

Token 54: ' &' (ID: 827)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.034665048122406006
    2. ')' → logprob: -3.409665107727051
    3. ')))' → logprob: -6.909665107727051
    4. '))
' → logprob: -11.65966510772705
    5. ' ))' → logprob: -13.53466510772705
    6. '()))' → logprob: -13.53466510772705
    7. '-' → logprob: -13.53466510772705
    8. '))))' → logprob: -13.65966510772705
    9. ')`' → logprob: -14.40966510772705
    10. ' ' → logprob: -14.53466510772705

Token 55: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.12863455712795258
    2. ' C' → logprob: -2.503634452819824
    3. ' (' → logprob: -3.878634452819824
    4. 'A' → logprob: -4.753634452819824
    5. '(' → logprob: -5.378634452819824
    6. ' A' → logprob: -6.128634452819824
    7. '(A' → logprob: -7.128634452819824
    8. '(set' → logprob: -7.628634452819824
    9. '((' → logprob: -7.753634452819824
    10. '(C' → logprob: -8.003634452819824

Token 56: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.055207446217536926
    2. ')' → logprob: -2.9302074909210205
    3. ')))' → logprob: -8.055207252502441
    4. '))
' → logprob: -13.055207252502441
    5. '()))' → logprob: -13.430207252502441
    6. ' ))' → logprob: -14.430207252502441
    7. '()' → logprob: -14.680207252502441
    8. '))))' → logprob: -14.805207252502441
    9. ')
' → logprob: -15.305207252502441
    10. ''))' → logprob: -15.305207252502441


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 54
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 41
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 44.44%
Précision (top 10): 75.93%
================================================================================
