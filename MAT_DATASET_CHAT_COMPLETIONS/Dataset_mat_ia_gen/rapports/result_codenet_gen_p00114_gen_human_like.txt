================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import gcd

def lcm(x, y):
    return x * y // gcd(x, y)

while True:
    a1, m1, a2, m2, a3, m3 = map(int, input().split())
    if a1 == 0 and m1 == 0 and a2 == 0 and m2 == 0 and a3 == 0 and m3 == 0:
        break
    # Since a_i and m_i are coprime, the cycle length in each coordinate is m_i
    # The total cycle length is LCM of m1, m2, m3
    ans = lcm(lcm(m1, m2), m3)
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.2745301127433777
    2. ' sqrt' → logprob: -1.5245301723480225
    3. 'pow' → logprob: -4.774529933929443
    4. 'sin' → logprob: -5.024529933929443
    5. ' pi' → logprob: -5.899529933929443
    6. 'pi' → logprob: -6.274529933929443
    7. ' sin' → logprob: -7.024529933929443
    8. 'ceil' → logprob: -7.899529933929443
    9. 'import' → logprob: -8.274530410766602
    10. ' ceil' → logprob: -8.399530410766602

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004503584932535887
    2. '\(' → logprob: -5.7545037269592285
    3. '\n' → logprob: -7.5045037269592285
    4. '(
' → logprob: -7.7545037269592285
    5. '\' → logprob: -8.87950325012207
    6. ',' → logprob: -10.00450325012207
    7. ' (' → logprob: -10.00450325012207
    8. 'a' → logprob: -10.37950325012207
    9. 'def' → logprob: -10.75450325012207
    10. '```' → logprob: -11.00450325012207

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008120538666844368
    2. '(
' → logprob: -5.008120536804199
    3. '\(' → logprob: -6.758120536804199
    4. '```' → logprob: -10.1331205368042
    5. ',' → logprob: -10.6331205368042
    6. 'def' → logprob: -10.6331205368042
    7. '\n' → logprob: -10.6331205368042
    8. 'a' → logprob: -10.8831205368042
    9. '\' → logprob: -11.0081205368042
    10. '
' → logprob: -11.0081205368042

Token 6: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06347333639860153
    2. ' gcd' → logprob: -2.8134732246398926
    3. ' calculate' → logprob: -7.438473224639893
    4. ' find' → logprob: -8.43847370147705
    5. ' compute' → logprob: -8.68847370147705
    6. ' l' → logprob: -8.81347370147705
    7. ' g' → logprob: -9.18847370147705
    8. ' space' → logprob: -9.56347370147705
    9. 'g' → logprob: -10.31347370147705
    10. '  ' → logprob: -10.31347370147705

Token 7: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.04261532053351402
    2. 'c' → logprob: -3.4176154136657715
    3. 'l' → logprob: -5.6676154136657715
    4. 'e' → logprob: -5.9176154136657715
    5. 'a' → logprob: -7.4176154136657715
    6. '   ' → logprob: -7.9176154136657715
    7. 'cms' → logprob: -7.9176154136657715
    8. 'cd' → logprob: -8.292614936828613
    9. '_c' → logprob: -8.667614936828613
    10. 'o' → logprob: -8.667614936828613

Token 8: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002701089484617114
    2. '_' → logprob: -6.377701282501221
    3. ' (' → logprob: -7.752701282501221
    4. '```' → logprob: -8.127700805664062
    5. '<|end|>' → logprob: -9.127700805664062
    6. '_(' → logprob: -10.752700805664062
    7. '(x' → logprob: -10.877700805664062
    8. '<|end|>' → logprob: -11.252700805664062
    9. '(_' → logprob: -11.502700805664062
    10. ')' → logprob: -11.752700805664062

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8351892473874614e-05
    2. ' ,' → logprob: -10.875048637390137
    3. ')' → logprob: -11.500048637390137
    4. ',x' → logprob: -11.500048637390137
    5. ',
' → logprob: -12.750048637390137
    6. '<|end|>' → logprob: -13.125048637390137
    7. ',y' → logprob: -13.500048637390137
    8. ',n' → logprob: -15.000048637390137
    9. '‌,' → logprob: -15.125048637390137
    10. ',

' → logprob: -15.125048637390137

Token 10: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.25196707248687744
    2. 'y' → logprob: -1.5019670724868774
    3. ' ' → logprob: -10.376967430114746
    4. '<|end|>' → logprob: -12.626967430114746
    5. '	y' → logprob: -13.251967430114746
    6. ' ' → logprob: -14.876967430114746
    7. ',' → logprob: -15.001967430114746
    8. ',y' → logprob: -15.001967430114746
    9. '  ' → logprob: -15.126967430114746
    10. ' ,' → logprob: -15.626967430114746

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013074111193418503
    2. ')' → logprob: -4.388073921203613
    3. '):
' → logprob: -7.888073921203613
    4. ',' → logprob: -9.013073921203613
    5. ':' → logprob: -10.513073921203613
    6. '**' → logprob: -11.513073921203613
    7. ' ):' → logprob: -12.138073921203613
    8. '*' → logprob: -12.263073921203613
    9. '   ' → logprob: -12.638073921203613
    10. '):
' → logprob: -12.638073921203613

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5692741870880127
    2. '   ' → logprob: -2.1942741870880127
    3. ' (' → logprob: -2.3192741870880127
    4. '(' → logprob: -2.4442741870880127
    5. ' return' → logprob: -3.4442741870880127
    6. ' :' → logprob: -3.5692741870880127
    7. ' ' → logprob: -3.9442741870880127
    8. ''' → logprob: -4.069273948669434
    9. ',' → logprob: -4.319273948669434
    10. '    ' → logprob: -5.319273948669434

Token 13: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06440339237451553
    2. '   ' → logprob: -3.3144032955169678
    3. 'return' (adapté à ' return') → logprob: -4.189403533935547
    4. '    ' → logprob: -5.064403533935547
    5. ' ' → logprob: -5.939403533935547
    6. ' 
' → logprob: -7.689403533935547
    7. '`' → logprob: -8.564403533935547
    8. '    
' → logprob: -8.564403533935547
    9. '     
' → logprob: -8.564403533935547
    10. '```' → logprob: -8.564403533935547

Token 14: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08923540264368057
    2. 'x' → logprob: -2.589235305786133
    3. '(x' → logprob: -5.214235305786133
    4. ' (' → logprob: -5.339235305786133
    5. ' abs' → logprob: -10.589235305786133
    6. ' ' → logprob: -11.464235305786133
    7. 'abs' → logprob: -12.089235305786133
    8. '   ' → logprob: -12.214235305786133
    9. '(' → logprob: -12.214235305786133
    10. '  ' → logprob: -13.714235305786133

Token 15: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2576650381088257
    2. '*' → logprob: -1.5076650381088257
    3. ' ' → logprob: -5.257665157318115
    4. '  ' → logprob: -9.007664680480957
    5. ' //' → logprob: -9.132664680480957
    6. '*y' → logprob: -10.132664680480957
    7. '`' → logprob: -10.132664680480957
    8. ''' → logprob: -10.132664680480957
    9. '//' → logprob: -10.757664680480957
    10. '"' → logprob: -11.007664680480957

Token 16: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04303378611803055
    2. ' y' → logprob: -3.1680338382720947
    3. '(y' → logprob: -10.668033599853516
    4. '   ' → logprob: -12.418033599853516
    5. ' ' → logprob: -12.793033599853516
    6. '  ' → logprob: -13.793033599853516
    7. ' (' → logprob: -13.918033599853516
    8. '	y' → logprob: -14.043033599853516
    9. '(' → logprob: -14.293033599853516
    10. '    ' → logprob: -14.918033599853516

Token 17: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.02327296882867813
    2. '//' → logprob: -3.77327299118042
    3. ''' → logprob: -11.898272514343262
    4. '   ' → logprob: -12.148272514343262
    5. ' /' → logprob: -12.523272514343262
    6. '`' → logprob: -12.648272514343262
    7. '```' → logprob: -13.148272514343262
    8. '#' → logprob: -13.898272514343262
    9. ' ' → logprob: -13.898272514343262
    10. '"' → logprob: -14.023272514343262

Token 18: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -5.5577775128767826e-06
    2. ' gcd' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.6250057220459
    4. ' ' → logprob: -19.2500057220459
    5. '(g' → logprob: -20.7500057220459
    6. '  ' → logprob: -20.8750057220459
    7. '	g' → logprob: -21.2500057220459
    8. ''g' → logprob: -21.6250057220459
    9. '```' → logprob: -22.2500057220459
    10. '_g' → logprob: -22.3750057220459

Token 19: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931788921356201
    2. '(x' → logprob: -0.6931788921356201
    3. ' (' → logprob: -11.5681791305542
    4. '(
' → logprob: -11.6931791305542
    5. '(s' → logprob: -12.8181791305542
    6. '(n' → logprob: -12.9431791305542
    7. '(y' → logprob: -13.5681791305542
    8. '(None' → logprob: -13.8181791305542
    9. '((' → logprob: -14.1931791305542
    10. '```' → logprob: -14.1931791305542

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002685160143300891
    2. ',y' → logprob: -6.502685070037842
    3. ' ,' → logprob: -6.877685070037842
    4. 'y' → logprob: -9.377685546875
    5. ')' → logprob: -10.252685546875
    6. '(y' → logprob: -11.002685546875
    7. ' y' → logprob: -12.502685546875
    8. ' ' → logprob: -12.502685546875
    9. '(x' → logprob: -13.627685546875
    10. '2' → logprob: -13.877685546875

Token 21: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04859350249171257
    2. ' y' → logprob: -3.048593521118164
    3. 'x' → logprob: -12.298593521118164
    4. ' ' → logprob: -14.923593521118164
    5. '   ' → logprob: -15.173593521118164
    6. ')' → logprob: -15.548593521118164
    7. '	y' → logprob: -15.548593521118164
    8. ')y' → logprob: -15.673593521118164
    9. '    ' → logprob: -16.048593521118164
    10. ' x' → logprob: -16.173593521118164

Token 22: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '))' → logprob: -12.87500286102295
    3. ' )' → logprob: -16.875001907348633
    4. ')
' → logprob: -17.125001907348633
    5. ')))' → logprob: -17.375001907348633
    6. '')' → logprob: -18.750001907348633
    7. ')}' → logprob: -19.125001907348633
    8. '}' → logprob: -19.500001907348633
    9. ')`' → logprob: -19.500001907348633
    10. '）' → logprob: -20.250001907348633

Token 23: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8386306166648865
    2. 'def' → logprob: -1.4636306762695312
    3. '\n' → logprob: -1.9636306762695312
    4. '(' → logprob: -2.9636306762695312
    5. '\' → logprob: -2.9636306762695312
    6. '```' → logprob: -3.5886306762695312
    7. '#' → logprob: -3.8386306762695312
    8. '<|end|>' → logprob: -4.088630676269531
    9. '

' → logprob: -5.463630676269531
    10. '*' → logprob: -5.588630676269531

Token 24: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.02395629696547985
    2. ' ' → logprob: -3.773956298828125
    3. ' not' → logprob: -8.273956298828125
    4. '_' → logprob: -8.898956298828125
    5. 'True' → logprob: -9.023956298828125
    6. ' input' → logprob: -9.398956298828125
    7. ' i' → logprob: -10.523956298828125
    8. ' _' → logprob: -10.773956298828125
    9. ' user' → logprob: -11.148956298828125
    10. ' a' → logprob: -11.523956298828125

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004873300436884165
    2. ' :' → logprob: -5.629873275756836
    3. '   ' → logprob: -7.004873275756836
    4. '():' → logprob: -8.254873275756836
    5. '    ' → logprob: -10.129873275756836
    6. ':
' → logprob: -10.629873275756836
    7. ':**' → logprob: -11.379873275756836
    8. '):' → logprob: -11.879873275756836
    9. ' :
' → logprob: -12.504873275756836
    10. '(:' → logprob: -12.629873275756836

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005288192071020603
    2. ' input' → logprob: -6.130288124084473
    3. '    
' → logprob: -6.130288124084473
    4. 'input' → logprob: -8.505288124084473
    5. ' readline' → logprob: -8.880288124084473
    6. '    ' → logprob: -9.255288124084473
    7. ' (' → logprob: -9.880288124084473
    8. '```' → logprob: -10.005288124084473
    9. ' )' → logprob: -10.130288124084473
    10. '    
    
' → logprob: -10.130288124084473

Token 27: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6581260561943054
    2. ' n' → logprob: -1.7831261157989502
    3. 'n' → logprob: -2.03312611579895
    4. ' try' → logprob: -2.78312611579895
    5. 'try' → logprob: -3.03312611579895
    6. 'num' → logprob: -3.78312611579895
    7. ' num' → logprob: -4.158125877380371
    8. ' number' → logprob: -4.158125877380371
    9. 'number' → logprob: -5.283125877380371
    10. 'user' → logprob: -5.908125877380371

Token 28: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0578058958053589
    2. ',' → logprob: -1.1828058958053589
    3. ' ,' → logprob: -1.1828058958053589
    4. ' =' → logprob: -3.6828060150146484
    5. '=' → logprob: -5.057806015014648
    6. '  ' → logprob: -5.432806015014648
    7. ' >' → logprob: -6.932806015014648
    8. '   ' → logprob: -7.557806015014648
    9. ' <' → logprob: -7.557806015014648
    10. ' ==' → logprob: -7.682806015014648

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7438223958015442
    2. '=' → logprob: -1.3688223361968994
    3. '.' → logprob: -2.2438223361968994
    4. ' =' → logprob: -2.8688223361968994
    5. ' ' → logprob: -2.9938223361968994
    6. ' ,' → logprob: -4.1188225746154785
    7. '[' → logprob: -4.4938225746154785
    8. 'a' → logprob: -4.9938225746154785
    9. ' ==' → logprob: -5.9938225746154785
    10. '+' → logprob: -6.1188225746154785

Token 30: ' m' (ID: 284)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2553090453147888
    2. ' a' → logprob: -1.6303091049194336
    3. 'b' → logprob: -3.6303091049194336
    4. ' b' → logprob: -5.880309104919434
    5. ' ' → logprob: -9.005309104919434
    6. '<|end|>' → logprob: -11.255309104919434
    7. 'space' → logprob: -11.880309104919434
    8. '<|end|>' → logprob: -13.755309104919434
    9. ' =' → logprob: -13.942809104919434
    10. '  ' → logprob: -14.317809104919434

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4051906168460846
    2. ',' → logprob: -1.2801905870437622
    3. ' =' → logprob: -3.6551907062530518
    4. 'a' → logprob: -4.405190467834473
    5. '=' → logprob: -4.780190467834473
    6. ',a' → logprob: -5.655190467834473
    7. 'od' → logprob: -6.030190467834473
    8. 'ultip' → logprob: -7.405190467834473
    9. ' ' → logprob: -7.780190467834473
    10. 'odel' → logprob: -8.405190467834473

Token 32: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7989734411239624
    2. ',' → logprob: -1.1739734411239624
    3. '=' → logprob: -1.4239734411239624
    4. ' ,' → logprob: -8.298973083496094
    5. ' ' → logprob: -10.548973083496094
    6. '<|end|>' → logprob: -11.423973083496094
    7. ')' → logprob: -12.048973083496094
    8. '  ' → logprob: -12.548973083496094
    9. '=input' → logprob: -12.548973083496094
    10. '    ' → logprob: -12.923973083496094

Token 33: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004724057391285896
    2. ' a' → logprob: -5.379724025726318
    3. 'b' → logprob: -9.254724502563477
    4. ' ' → logprob: -12.754724502563477
    5. '   ' → logprob: -13.379724502563477
    6. ' b' → logprob: -13.504724502563477
    7. '	a' → logprob: -14.004724502563477
    8. ',a' → logprob: -14.629724502563477
    9. '  ' → logprob: -15.129724502563477
    10. 'c' → logprob: -15.254724502563477

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ',' → logprob: -13.750001907348633
    3. '1' → logprob: -16.500001907348633
    4. '₂' → logprob: -16.500001907348633
    5. ' ' → logprob: -16.750001907348633
    6. '```' → logprob: -17.000001907348633
    7. '0' → logprob: -17.062501907348633
    8. '۲' → logprob: -17.250001907348633
    9. '２' → logprob: -17.687501907348633
    10. ' ,' → logprob: -18.687501907348633

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.984787902794778e-05
    2. ' ,' → logprob: -9.250100135803223
    3. ',m' → logprob: -13.500100135803223
    4. '=' → logprob: -14.000100135803223
    5. '<|end|>' → logprob: -15.000100135803223
    6. '‌,' → logprob: -15.500100135803223
    7. '```' → logprob: -15.625100135803223
    8. ' ' → logprob: -15.750100135803223
    9. 'm' → logprob: -16.250099182128906
    10. '  ' → logprob: -16.500099182128906

Token 36: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.004437955096364021
    2. 'm' → logprob: -5.5044379234313965
    3. ' ' → logprob: -8.004438400268555
    4. '<|end|>' → logprob: -10.879438400268555
    5. ' ' → logprob: -13.129438400268555
    6. ' ,' → logprob: -13.629438400268555
    7. '    ' → logprob: -14.004438400268555
    8. ',' → logprob: -14.629438400268555
    9. '  ' → logprob: -14.629438400268555
    10. ' a' → logprob: -15.754438400268555

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -12.375007629394531
    3. '1' → logprob: -13.375007629394531
    4. '```' → logprob: -14.125007629394531
    5. ',' → logprob: -14.875007629394531
    6. '_' → logprob: -15.125007629394531
    7. '₂' → logprob: -15.500007629394531
    8. '２' → logprob: -16.31250762939453
    9. '۲' → logprob: -16.56250762939453
    10. '   ' → logprob: -16.62500762939453

Token 38: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1797713190317154
    2. ' =' → logprob: -1.8047713041305542
    3. ',' → logprob: -11.054771423339844
    4. '=input' → logprob: -11.804771423339844
    5. ' ' → logprob: -13.679771423339844
    6. ')' → logprob: -14.804771423339844
    7. '=int' → logprob: -15.429771423339844
    8. '  ' → logprob: -15.554771423339844
    9. '=

' → logprob: -15.804771423339844
    10. '<|end|>' → logprob: -15.929771423339844

Token 39: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2089318484067917
    2. '=' → logprob: -1.708931803703308
    3. 'a' → logprob: -6.083931922912598
    4. ' ' → logprob: -6.208931922912598
    5. '=input' → logprob: -6.583931922912598
    6. '0' → logprob: -7.708931922912598
    7. 'input' → logprob: -8.333931922912598
    8. '  ' → logprob: -8.708931922912598
    9. ' input' → logprob: -8.833931922912598
    10. '_' → logprob: -8.958931922912598

Token 40: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.73446003627032e-05
    2. ' ' → logprob: -10.375097274780273
    3. '1' → logprob: -11.125097274780273
    4. ',' → logprob: -11.500097274780273
    5. ' =' → logprob: -11.625097274780273
    6. 'n' → logprob: -11.875097274780273
    7. '<|end|>' → logprob: -11.875097274780273
    8. '=' → logprob: -12.250097274780273
    9. 'f' → logprob: -12.875097274780273
    10. '  ' → logprob: -13.250097274780273

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.20734242349863e-05
    2. ' ,' → logprob: -10.000072479248047
    3. '=' → logprob: -11.125072479248047
    4. ',m' → logprob: -12.500072479248047
    5. '<|end|>' → logprob: -13.125072479248047
    6. 'm' → logprob: -13.750072479248047
    7. '```' → logprob: -13.875072479248047
    8. '‌,' → logprob: -14.375072479248047
    9. ',
' → logprob: -14.812572479248047
    10. 'import' → logprob: -15.125072479248047

Token 42: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.050180304795503616
    2. ' ' → logprob: -3.550180196762085
    3. 'm' → logprob: -3.925180196762085
    4. '<|end|>' → logprob: -8.050180435180664
    5. ' ' → logprob: -9.550180435180664
    6. ' ,' → logprob: -10.925180435180664
    7. ',m' → logprob: -11.300180435180664
    8. 's' → logprob: -11.425180435180664
    9. '  ' → logprob: -11.425180435180664
    10. ',' → logprob: -11.550180435180664

Token 43: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1041145626222715e-05
    2. '=' → logprob: -12.250011444091797
    3. '1' → logprob: -12.500011444091797
    4. '```' → logprob: -14.375011444091797
    5. ' =' → logprob: -14.750011444091797
    6. '_' → logprob: -15.125011444091797
    7. ',' → logprob: -15.500011444091797
    8. ' ' → logprob: -15.500011444091797
    9. '   ' → logprob: -15.500011444091797
    10. '2' → logprob: -15.875011444091797

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632621169090271
    2. ' =' → logprob: -0.757621169090271
    3. '=input' → logprob: -11.507620811462402
    4. ',' → logprob: -11.757620811462402
    5. ' ' → logprob: -13.257620811462402
    6. '  ' → logprob: -15.132620811462402
    7. '=

' → logprob: -15.132620811462402
    8. ')' → logprob: -15.382620811462402
    9. '<|end|>' → logprob: -15.382620811462402
    10. '```' → logprob: -15.882620811462402

Token 45: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.014484427869319916
    2. 'map' → logprob: -4.264484405517578
    3. ' input' → logprob: -8.639484405517578
    4. ' list' → logprob: -10.014484405517578
    5. ' [' → logprob: -10.139484405517578
    6. ' ' → logprob: -10.764484405517578
    7. 'input' → logprob: -10.764484405517578
    8. '[' → logprob: -11.764484405517578
    9. '	map' → logprob: -12.639484405517578
    10. '(map' → logprob: -12.889484405517578

Token 46: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06334377825260162
    2. '(' → logprob: -2.8133437633514404
    3. '(input' → logprob: -6.6883440017700195
    4. '(
' → logprob: -10.18834400177002
    5. '<|end|>' → logprob: -10.81334400177002
    6. '<int' → logprob: -10.93834400177002
    7. '(eval' → logprob: -11.06334400177002
    8. '(str' → logprob: -11.18834400177002
    9. '(list' → logprob: -12.43834400177002
    10. 'int' → logprob: -12.68834400177002

Token 47: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.050923898816108704
    2. 'input' → logprob: -3.1759238243103027
    3. '(' → logprob: -5.675923824310303
    4. ',input' → logprob: -6.050923824310303
    5. ')' → logprob: -6.300923824310303
    6. ' input' → logprob: -8.925924301147461
    7. ',' → logprob: -9.550924301147461
    8. '=input' → logprob: -11.050924301147461
    9. '```' → logprob: -11.175924301147461
    10. ')(' → logprob: -11.425924301147461

Token 48: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693609297275543
    2. ' input' → logprob: -2.126936197280884
    3. ')' → logprob: -13.001935958862305
    4. '   ' → logprob: -13.626935958862305
    5. '(input' → logprob: -13.626935958862305
    6. '	input' → logprob: -13.626935958862305
    7. ' ' → logprob: -14.001935958862305
    8. '=input' → logprob: -14.126935958862305
    9. ',input' → logprob: -16.001935958862305
    10. '```' → logprob: -16.376935958862305

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0807843953371048
    2. '()' → logprob: -2.580784320831299
    3. '())' → logprob: -6.580784320831299
    4. '(' → logprob: -8.830784797668457
    5. '(()' → logprob: -8.830784797668457
    6. '('' → logprob: -9.830784797668457
    7. '());' → logprob: -10.080784797668457
    8. '()))' → logprob: -10.080784797668457
    9. ')' → logprob: -11.205784797668457
    10. '('').' → logprob: -11.830784797668457

Token 50: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020663968462031335
    2. 'strip' → logprob: -8.50020694732666
    3. '(split' → logprob: -13.50020694732666
    4. ' split' → logprob: -13.75020694732666
    5. 'rstrip' → logprob: -14.25020694732666
    6. 'spl' → logprob: -18.000205993652344
    7. ')' → logprob: -18.125205993652344
    8. '```' → logprob: -18.375205993652344
    9. 's' → logprob: -18.500205993652344
    10. '().' → logprob: -19.500205993652344

Token 51: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13855502009391785
    2. '()))' → logprob: -2.1385550498962402
    3. '()' → logprob: -5.01355504989624
    4. ')' → logprob: -6.01355504989624
    5. '('' → logprob: -6.76355504989624
    6. '(' → logprob: -7.38855504989624
    7. '))' → logprob: -7.38855504989624
    8. '(','' → logprob: -11.138554573059082
    9. '()),' → logprob: -11.638554573059082
    10. '()))
' → logprob: -11.888554573059082

Token 52: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.007025919388979673
    2. ' ' → logprob: -5.257025718688965
    3. 'a' → logprob: -6.882025718688965
    4. ' not' → logprob: -7.382025718688965
    5. ' (' → logprob: -9.007025718688965
    6. '<|end|>' → logprob: -12.007025718688965
    7. '(a' → logprob: -12.507025718688965
    8. '  ' → logprob: -12.882025718688965
    9. ' all' → logprob: -13.007025718688965
    10. ' ' → logprob: -13.507025718688965

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '2' → logprob: -13.500003814697266
    3. '```' → logprob: -15.125003814697266
    4. 'a' → logprob: -15.187503814697266
    5. 'll' → logprob: -15.250003814697266
    6. '3' → logprob: -15.437503814697266
    7. ' ==' → logprob: -15.500003814697266
    8. '0' → logprob: -15.812503814697266
    9. 'n' → logprob: -15.875003814697266
    10. '==' → logprob: -16.000003814697266

Token 56: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.41164419054985046
    2. ' ==' → logprob: -1.1616442203521729
    3. '<' → logprob: -3.911644220352173
    4. '==-' → logprob: -5.911643981933594
    5. ' <' → logprob: -7.161643981933594
    6. '=' → logprob: -7.661643981933594
    7. ' ' → logprob: -8.536643981933594
    8. ',' → logprob: -9.911643981933594
    9. '[' → logprob: -10.286643981933594
    10. '<|end|>' → logprob: -10.411643981933594

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029174532741308212
    2. ' ' → logprob: -3.779174566268921
    3. 'm' → logprob: -5.529174327850342
    4. 'a' → logprob: -6.779174327850342
    5. ' m' → logprob: -7.404174327850342
    6. ' a' → logprob: -9.0291748046875
    7. '-' → logprob: -9.9041748046875
    8. '```' → logprob: -11.6541748046875
    9. ' -' → logprob: -12.3416748046875
    10. 'b' → logprob: -12.8416748046875

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052750264294445515
    2. 'm' → logprob: -6.005275249481201
    3. 'a' → logprob: -6.130275249481201
    4. '-' → logprob: -7.630275249481201
    5. ' ' → logprob: -9.130274772644043
    6. '```' → logprob: -11.880274772644043
    7. 'b' → logprob: -12.005274772644043
    8. ' m' → logprob: -12.755274772644043
    9. ' -' → logprob: -13.505274772644043
    10. ' a' → logprob: -13.755274772644043

Token 59: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2014821320772171
    2. 'and' → logprob: -1.7014821767807007
    3. ' ' → logprob: -10.576481819152832
    4. '==' → logprob: -11.076481819152832
    5. ':' → logprob: -11.451481819152832
    6. '<|end|>' → logprob: -11.701481819152832
    7. ' ==' → logprob: -12.826481819152832
    8. '	and' → logprob: -13.326481819152832
    9. '<|end|>' → logprob: -13.326481819152832
    10. ' ' → logprob: -14.201481819152832

Token 60: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.11288055032491684
    2. 'm' → logprob: -2.2378804683685303
    3. ' a' → logprob: -10.23788070678711
    4. 'a' → logprob: -11.36288070678711
    5. ' ' → logprob: -11.61288070678711
    6. ' ' → logprob: -13.86288070678711
    7. '	m' → logprob: -15.11288070678711
    8. '<|end|>' → logprob: -15.61288070678711
    9. '   ' → logprob: -16.48788070678711
    10. '    ' → logprob: -16.86288070678711

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '3' → logprob: -16.5
    3. '2' → logprob: -16.5
    4. '```' → logprob: -17.0
    5. '_' → logprob: -17.375
    6. '0' → logprob: -18.3125
    7. '१' → logprob: -19.625
    8. '১' → logprob: -19.75
    9. '１' → logprob: -19.875
    10. ' ' → logprob: -19.9375

Token 62: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931657791137695
    2. ' ==' → logprob: -0.6931657791137695
    3. '<|end|>' → logprob: -11.94316577911377
    4. '=' → logprob: -13.06816577911377
    5. ' ' → logprob: -13.19316577911377
    6. '<|end|>' → logprob: -13.31816577911377
    7. '===' → logprob: -13.81816577911377
    8. '0' → logprob: -13.94316577911377
    9. ')==' → logprob: -14.19316577911377
    10. '==-' → logprob: -14.19316577911377

Token 63: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016042346134781837
    2. ' ' → logprob: -4.141042232513428
    3. '  ' → logprob: -12.766042709350586
    4. '   ' → logprob: -12.766042709350586
    5. ' ' → logprob: -14.891042709350586
    6. 'and' → logprob: -15.391042709350586
    7. ' and' → logprob: -15.516042709350586
    8. '```' → logprob: -15.516042709350586
    9. '۰' → logprob: -15.578542709350586
    10. '    ' → logprob: -15.828542709350586

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -15.250021934509277
    4. 'and' → logprob: -16.000022888183594
    5. ' and' → logprob: -17.250022888183594
    6. '<|end|>' → logprob: -17.750022888183594
    7. '  ' → logprob: -18.250022888183594
    8. '۰' → logprob: -18.625022888183594
    9. '...' → logprob: -18.750022888183594
    10. '```' → logprob: -18.750022888183594

Token 65: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014196067117154598
    2. 'and' → logprob: -4.264195919036865
    3. '<|end|>' → logprob: -10.889196395874023
    4. '<|end|>' → logprob: -11.764196395874023
    5. ' ' → logprob: -12.889196395874023
    6. '	and' → logprob: -12.889196395874023
    7. '   ' → logprob: -15.389196395874023
    8. ' a' → logprob: -16.014196395874023
    9. ' ' → logprob: -16.014196395874023
    10. ' и' → logprob: -16.639196395874023

Token 66: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2255563735961914
    2. 'a' → logprob: -1.6005563735961914
    3. ' ' → logprob: -9.350556373596191
    4. '0' → logprob: -9.975556373596191
    5. '	a' → logprob: -12.725556373596191
    6. '   ' → logprob: -13.725556373596191
    7. '    ' → logprob: -13.975556373596191
    8. ' and' → logprob: -14.100556373596191
    9. '<|end|>' → logprob: -14.225556373596191
    10. '  ' → logprob: -14.475556373596191

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.939851037808694e-05
    2. '3' → logprob: -10.750029563903809
    3. '1' → logprob: -12.750029563903809
    4. ' ' → logprob: -12.750029563903809
    5. '  ' → logprob: -14.750029563903809
    6. '```' → logprob: -14.937529563903809
    7. '   ' → logprob: -15.312529563903809
    8. '0' → logprob: -15.812529563903809
    9. '<|end|>' → logprob: -15.937529563903809
    10. '_' → logprob: -16.250028610229492

Token 68: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22544611990451813
    2. '==' → logprob: -1.600446105003357
    3. ' ' → logprob: -10.850445747375488
    4. '<|end|>' → logprob: -11.850445747375488
    5. '0' → logprob: -13.225445747375488
    6. '=' → logprob: -13.600445747375488
    7. ' =' → logprob: -14.225445747375488
    8. '===' → logprob: -14.350445747375488
    9. '<|end|>' → logprob: -14.850445747375488
    10. ')==' → logprob: -15.100445747375488

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25193214416503906
    2. ' ' → logprob: -1.501932144165039
    3. '<|end|>' → logprob: -13.876932144165039
    4. ' ' → logprob: -14.126932144165039
    5. ' and' → logprob: -14.376932144165039
    6. 'and' → logprob: -15.126932144165039
    7. '  ' → logprob: -16.00193214416504
    8. '<|end|>' → logprob: -16.68943214416504
    9. '   ' → logprob: -16.81443214416504
    10. '۰' → logprob: -17.12693214416504

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -15.500017166137695
    4. 'and' → logprob: -16.250017166137695
    5. '```' → logprob: -18.375017166137695
    6. ' and' → logprob: -18.750017166137695
    7. '  ' → logprob: -19.312517166137695
    8. '۰' → logprob: -19.750017166137695
    9. '<|end|>' → logprob: -19.937517166137695
    10. '...' → logprob: -20.250017166137695

Token 71: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04862290248274803
    2. 'and' → logprob: -3.0486228466033936
    3. ' ' → logprob: -10.298623085021973
    4. '<|end|>' → logprob: -13.923623085021973
    5. '```' → logprob: -14.798623085021973
    6. '0' → logprob: -15.048623085021973
    7. ' ' → logprob: -16.173622131347656
    8. '<|end|>' → logprob: -17.048622131347656
    9. '	and' → logprob: -17.173622131347656
    10. ' a' → logprob: -17.673622131347656

Token 72: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.006713836453855038
    2. 'm' → logprob: -5.1317138671875
    3. ' ' → logprob: -7.8817138671875
    4. '<|end|>' → logprob: -7.8817138671875
    5. ' ' → logprob: -11.5067138671875
    6. '```' → logprob: -11.8817138671875
    7. '0' → logprob: -12.0067138671875
    8. '	m' → logprob: -13.0067138671875
    9. '<|end|>' → logprob: -13.2567138671875
    10. ' and' → logprob: -14.8817138671875

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.6776029699249193e-05
    2. '1' → logprob: -10.62502670288086
    3. ' ' → logprob: -14.25002670288086
    4. '```' → logprob: -15.12502670288086
    5. '3' → logprob: -15.25002670288086
    6. '_' → logprob: -15.50002670288086
    7. '   ' → logprob: -15.68752670288086
    8. '<|end|>' → logprob: -15.87502670288086
    9. '...' → logprob: -16.12502670288086
    10. '=' → logprob: -16.50002670288086

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.523169219493866
    2. '==' → logprob: -0.898169219493866
    3. ' ' → logprob: -10.77316951751709
    4. '<|end|>' → logprob: -11.27316951751709
    5. '=' → logprob: -12.89816951751709
    6. '0' → logprob: -13.14816951751709
    7. '```' → logprob: -13.27316951751709
    8. ' ' → logprob: -13.77316951751709
    9. ' =' → logprob: -14.02316951751709
    10. '<|end|>' → logprob: -14.39816951751709

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016036011278629303
    2. ' ' → logprob: -4.141036033630371
    3. '<|end|>' → logprob: -14.391036033630371
    4. '  ' → logprob: -15.328536033630371
    5. '   ' → logprob: -15.453536033630371
    6. ' ' → logprob: -15.453536033630371
    7. '۰' → logprob: -16.516035079956055
    8. 'and' → logprob: -16.766035079956055
    9. '<|end|>' → logprob: -16.766035079956055
    10. '```' → logprob: -16.828535079956055

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -17.500017166137695
    4. '   ' → logprob: -19.125017166137695
    5. 'and' → logprob: -19.250017166137695
    6. '  ' → logprob: -19.562517166137695
    7. '۰' → logprob: -19.562517166137695
    8. '```' → logprob: -19.625017166137695
    9. '<|end|>' → logprob: -19.687517166137695
    10. '０' → logprob: -20.312517166137695

Token 77: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004080301150679588
    2. 'and' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.504080772399902
    4. ' a' → logprob: -15.504080772399902
    5. ' ' → logprob: -16.254079818725586
    6. '	and' → logprob: -16.754079818725586
    7. '<|end|>' → logprob: -17.129079818725586
    8. ':' → logprob: -17.504079818725586
    9. '```' → logprob: -17.504079818725586
    10. 'a' → logprob: -17.879079818725586

Token 78: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4740886688232422
    2. 'a' → logprob: -0.9740886688232422
    3. ' ' → logprob: -12.099088668823242
    4. '(a' → logprob: -13.974088668823242
    5. '0' → logprob: -14.099088668823242
    6. ''a' → logprob: -14.099088668823242
    7. '`' → logprob: -14.224088668823242
    8. ' ' → logprob: -14.474088668823242
    9. '	a' → logprob: -14.599088668823242
    10. 'f' → logprob: -14.849088668823242

Token 79: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01250989455729723
    2. '1' → logprob: -4.387509822845459
    3. '```' → logprob: -16.575010299682617
    4. '0' → logprob: -16.825010299682617
    5. '_' → logprob: -17.200010299682617
    6. ' ' → logprob: -17.762510299682617
    7. 'a' → logprob: -17.887510299682617
    8. '[' → logprob: -18.262510299682617
    9. '³' → logprob: -18.262510299682617
    10. '۳' → logprob: -18.387510299682617

Token 80: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029756275936961174
    2. '==' → logprob: -3.5297563076019287
    3. ' ' → logprob: -12.654756546020508
    4. '<|end|>' → logprob: -13.029756546020508
    5. ' ' → logprob: -16.654756546020508
    6. ' =' → logprob: -16.779756546020508
    7. '0' → logprob: -17.029756546020508
    8. ')==' → logprob: -17.029756546020508
    9. '<|end|>' → logprob: -17.404756546020508
    10. '```' → logprob: -17.529756546020508

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11282305419445038
    2. ' ' → logprob: -2.237823009490967
    3. ' ' → logprob: -14.362823486328125
    4. '<|end|>' → logprob: -16.362823486328125
    5. '  ' → logprob: -16.800323486328125
    6. '   ' → logprob: -17.425323486328125
    7. '```' → logprob: -17.675323486328125
    8. '۰' → logprob: -17.862823486328125
    9. '...' → logprob: -18.987823486328125
    10. ' ' → logprob: -19.112823486328125

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -18.750015258789062
    4. '   ' → logprob: -19.000015258789062
    5. '۰' → logprob: -19.375015258789062
    6. '  ' → logprob: -19.625015258789062
    7. '```' → logprob: -20.437515258789062
    8. '０' → logprob: -20.562515258789062
    9. ' ' → logprob: -20.562515258789062
    10. '...' → logprob: -20.687515258789062

Token 83: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03816232457756996
    2. 'and' → logprob: -3.2881622314453125
    3. ' ' → logprob: -9.038162231445312
    4. ' ' → logprob: -14.163162231445312
    5. '```' → logprob: -14.288162231445312
    6. '<|end|>' → logprob: -14.288162231445312
    7. '0' → logprob: -16.413162231445312
    8. '	and' → logprob: -17.538162231445312
    9. '<|end|>' → logprob: -17.788162231445312
    10. ' a' → logprob: -17.788162231445312

Token 84: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.4727189242839813
    2. ' ' → logprob: -1.5977189540863037
    3. '0' → logprob: -1.9727189540863037
    4. 'm' → logprob: -3.3477189540863037
    5. ' ' → logprob: -10.097719192504883
    6. '<|end|>' → logprob: -10.097719192504883
    7. '  ' → logprob: -12.472719192504883
    8. '	m' → logprob: -12.472719192504883
    9. '```' → logprob: -13.722719192504883
    10. '1' → logprob: -14.722719192504883

Token 85: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.857719275401905e-05
    2. '1' → logprob: -10.250038146972656
    3. '_' → logprob: -13.375038146972656
    4. '0' → logprob: -13.875038146972656
    5. ' ' → logprob: -15.500038146972656
    6. '```' → logprob: -15.875038146972656
    7. '<|end|>' → logprob: -16.875038146972656
    8. '=' → logprob: -16.875038146972656
    9. '==' → logprob: -17.000038146972656
    10. '   ' → logprob: -17.562538146972656

Token 86: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1798763871192932
    2. '==' → logprob: -1.8048763275146484
    3. ' ' → logprob: -10.054876327514648
    4. ')==' → logprob: -10.304876327514648
    5. '<|end|>' → logprob: -10.554876327514648
    6. ')' → logprob: -11.679876327514648
    7. '=' → logprob: -12.054876327514648
    8. '0' → logprob: -12.679876327514648
    9. '<|end|>' → logprob: -12.679876327514648
    10. ' =' → logprob: -13.179876327514648

Token 87: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03365446254611015
    2. ' ' → logprob: -3.4086544513702393
    3. ' ' → logprob: -12.03365421295166
    4. '   ' → logprob: -13.53365421295166
    5. '```' → logprob: -14.53365421295166
    6. '  ' → logprob: -15.40865421295166
    7. '۰' → logprob: -15.78365421295166
    8. '<|end|>' → logprob: -15.84615421295166
    9. ' ' → logprob: -16.658655166625977
    10. '<|end|>' → logprob: -16.658655166625977

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003398726985324174
    2. ' ' → logprob: -8.00033950805664
    3. '   ' → logprob: -14.12533950805664
    4. '```' → logprob: -14.43783950805664
    5. '<|end|>' → logprob: -14.62533950805664
    6. '<|end|>' → logprob: -14.75033950805664
    7. '۰' → logprob: -15.00033950805664
    8. '  ' → logprob: -15.06283950805664
    9. '০' → logprob: -15.43783950805664
    10. '०' → logprob: -15.93783950805664

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016611411410849541
    2. ':
' → logprob: -9.250165939331055
    3. '   ' → logprob: -9.875165939331055
    4. '       ' → logprob: -11.000165939331055
    5. ' :' → logprob: -13.875165939331055
    6. ':return' → logprob: -15.000165939331055
    7. '):' → logprob: -15.375165939331055
    8. '.' → logprob: -15.750165939331055
    9. ',' → logprob: -16.875165939331055
    10. '	break' → logprob: -17.125165939331055

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.070975071750581e-05
    2. '   ' → logprob: -10.750030517578125
    3. ' break' → logprob: -12.750030517578125
    4. '    ' → logprob: -13.000030517578125
    5. '           ' → logprob: -14.375030517578125
    6. '      ' → logprob: -14.375030517578125
    7. '     ' → logprob: -14.500030517578125
    8. '        
' → logprob: -14.625030517578125
    9. ':' → logprob: -15.000030517578125
    10. '```' → logprob: -15.125030517578125

Token 91: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10975424945354462
    2. '       ' → logprob: -2.3597543239593506
    3. 'break' (adapté à ' break') → logprob: -4.9847540855407715
    4. '   ' → logprob: -5.9847540855407715
    5. '	break' → logprob: -8.98475456237793
    6. '           ' → logprob: -11.48475456237793
    7. '```' → logprob: -12.23475456237793
    8. '_break' → logprob: -13.73475456237793
    9. ' ' → logprob: -14.85975456237793
    10. '    ' → logprob: -15.23475456237793

Token 92: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004917312413454056
    2. '    
' → logprob: -6.504917144775391
    3. '   ' → logprob: -6.754917144775391
    4. '\n' → logprob: -7.004917144775391
    5. '

' → logprob: -7.504917144775391
    6. '```' → logprob: -8.37991714477539
    7. 'n' → logprob: -9.00491714477539
    8. '  
' → logprob: -9.00491714477539
    9. '<|end|>' → logprob: -9.25491714477539
    10. '


' → logprob: -9.87991714477539

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4117799699306488
    2. '
' → logprob: -2.0367798805236816
    3. '    
' → logprob: -2.5367798805236816
    4. '\n' → logprob: -3.0367798805236816
    5. '```' → logprob: -3.1617798805236816
    6. '<|end|>' → logprob: -3.6617798805236816
    7. ':' → logprob: -6.161779880523682
    8. '  
' → logprob: -6.411779880523682
    9. '#' → logprob: -6.411779880523682
    10. '<|end|>' → logprob: -6.661779880523682

Token 94: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03465145826339722
    2. '   ' → logprob: -3.659651517868042
    3. '    
' → logprob: -5.784651279449463
    4. '```' → logprob: -6.159651279449463
    5. ' 
' → logprob: -6.909651279449463
    6. '

' → logprob: -7.909651279449463
    7. '\n' → logprob: -8.034651756286621
    8. '<|end|>' → logprob: -8.534651756286621
    9. '
    
' → logprob: -8.659651756286621
    10. '  
' → logprob: -9.034651756286621

Token 95: ' Since' (ID: 12265)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.6046836376190186
    2. '    ' → logprob: -1.8546836376190186
    3. '   ' → logprob: -1.8546836376190186
    4. ' pass' → logprob: -3.4796836376190186
    5. ' ' → logprob: -3.7296836376190186
    6. ' #' → logprob: -3.9796836376190186
    7. ' from' → logprob: -4.479683876037598
    8. 'try' → logprob: -4.979683876037598
    9. ' import' → logprob: -5.229683876037598
    10. ' n' → logprob: -5.354683876037598

Token 96: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9865819215774536
    2. 'm' → logprob: -1.3615819215774536
    3. ' a' → logprob: -2.861581802368164
    4. ' all' → logprob: -2.861581802368164
    5. ' m' → logprob: -3.236581802368164
    6. ' the' → logprob: -3.236581802368164
    7. 'g' → logprob: -3.486581802368164
    8. 'all' → logprob: -3.611581802368164
    9. ' (' → logprob: -3.736581802368164
    10. 'the' → logprob: -3.736581802368164

Token 97: '_i' (ID: 10853)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017364670056849718
    2. '2' → logprob: -7.501736640930176
    3. '3' → logprob: -8.001736640930176
    4. 's' → logprob: -8.876736640930176
    5. ' %' → logprob: -8.876736640930176
    6. '%' → logprob: -9.001736640930176
    7. 'a' → logprob: -9.251736640930176
    8. ' =' → logprob: -9.876736640930176
    9. '%i' → logprob: -10.439236640930176
    10. 'i' → logprob: -10.501736640930176

Token 98: ' and' (ID: 326)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6221131682395935
    2. '%' → logprob: -0.9971131682395935
    3. ' and' → logprob: -3.1221132278442383
    4. ',' → logprob: -4.122113227844238
    5. ' %=' → logprob: -5.247113227844238
    6. 'and' → logprob: -5.247113227844238
    7. '==' → logprob: -5.622113227844238
    8. '=' → logprob: -5.747113227844238
    9. ' ==' → logprob: -5.997113227844238
    10. 's' → logprob: -6.122113227844238

Token 99: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.20148895680904388
    2. ' m' → logprob: -1.701488971710205
    3. ' ' → logprob: -10.951488494873047
    4. ' the' → logprob: -11.326488494873047
    5. ' ' → logprob: -11.576488494873047
    6. '<|end|>' → logprob: -11.888988494873047
    7. '```' → logprob: -12.201488494873047
    8. 'mi' → logprob: -12.638988494873047
    9. 'the' → logprob: -12.826488494873047
    10. ' `' → logprob: -13.263988494873047

Token 100: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.7165504693984985
    2. 'i' → logprob: -0.8415504693984985
    3. 's' → logprob: -3.091550350189209
    4. '[i' → logprob: -4.216550350189209
    5. ' are' → logprob: -4.466550350189209
    6. ',' → logprob: -5.966550350189209
    7. '3' → logprob: -7.091550350189209
    8. '1' → logprob: -7.091550350189209
    9. '_' → logprob: -7.216550350189209
    10. '#' → logprob: -7.841550350189209

Token 101: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.012312442064285278
    2. 'are' → logprob: -4.512312412261963
    3. ',' → logprob: -7.387312412261963
    4. ' have' → logprob: -8.512312889099121
    5. 's' → logprob: -9.262312889099121
    6. ' must' → logprob: -9.637312889099121
    7. ' may' → logprob: -9.762312889099121
    8. ' can' → logprob: -10.262312889099121
    9. ' do' → logprob: -10.512312889099121
    10. '=' → logprob: -10.762312889099121

Token 102: ' cop' (ID: 8039)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.6452810764312744
    2. 'not' → logprob: -1.6452810764312744
    3. 'pair' → logprob: -2.3952810764312744
    4. ' not' → logprob: -2.5202810764312744
    5. ' given' → logprob: -3.6452810764312744
    6. 'cop' → logprob: -4.145280838012695
    7. 'given' → logprob: -4.270280838012695
    8. ' cop' → logprob: -4.520280838012695
    9. ' congr' → logprob: -4.520280838012695
    10. ' guaranteed' → logprob: -4.645280838012695

Token 103: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.895480277715251e-06
    2. 'ime' → logprob: -12.000008583068848
    3. '```' → logprob: -13.625008583068848
    4. 'rim' → logprob: -13.875008583068848
    5. '#' → logprob: -15.750008583068848
    6. 'ri' → logprob: -16.250009536743164
    7. '``' → logprob: -16.875009536743164
    8. ' r' → logprob: -17.250009536743164
    9. '   ' → logprob: -18.000009536743164
    10. '1' → logprob: -18.125009536743164

Token 104: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.0001382241171086207
    2. '```' → logprob: -9.750138282775879
    3. '   ' → logprob: -11.500138282775879
    4. '1' → logprob: -11.625138282775879
    5. 'imes' → logprob: -11.625138282775879
    6. 't' → logprob: -12.500138282775879
    7. '#' → logprob: -12.562638282775879
    8. '[' → logprob: -12.812638282775879
    9. '{' → logprob: -12.937638282775879
    10. 'ight' → logprob: -13.250138282775879

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08299630880355835
    2. ':' → logprob: -2.832996368408203
    3. '   ' → logprob: -4.457996368408203
    4. '
' → logprob: -5.082996368408203
    5. '<|end|>' → logprob: -6.332996368408203
    6. ',
' → logprob: -7.707996368408203
    7. '.' → logprob: -7.832996368408203
    8. ' ,' → logprob: -9.582996368408203
    9. '<|end|>' → logprob: -9.582996368408203
    10. ':
' → logprob: -9.707996368408203

Token 106: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23132005333900452
    2. '    ' → logprob: -2.1063201427459717
    3. ' x' → logprob: -4.106319904327393
    4. ' n' → logprob: -4.231319904327393
    5. ' s' → logprob: -4.981319904327393
    6. '<|end|>' → logprob: -5.106319904327393
    7. ' #' → logprob: -5.231319904327393
    8. 'n' → logprob: -5.356319904327393
    9. ' t' → logprob: -5.606319904327393
    10. ' ' → logprob: -5.981319904327393

Token 107: ' cycle' (ID: 15839)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8332962989807129
    2. ' next' → logprob: -1.833296298980713
    3. ' following' → logprob: -2.958296298980713
    4. ' remainder' → logprob: -2.958296298980713
    5. '#' → logprob: -3.208296298980713
    6. ' from' → logprob: -3.333296298980713
    7. 'def' → logprob: -3.333296298980713
    8. ' congr' → logprob: -3.458296298980713
    9. 'from' → logprob: -3.708296298980713
    10. 'n' → logprob: -4.458296298980713

Token 108: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9047902226448059
    2. 's' → logprob: -1.2797901630401611
    3. ' lengths' → logprob: -2.279790163040161
    4. ' continues' → logprob: -2.404790163040161
    5. 'length' → logprob: -3.154790163040161
    6. ' can' → logprob: -3.529790163040161
    7. ' is' → logprob: -4.40479040145874
    8. ' length' → logprob: -4.40479040145874
    9. '    ' → logprob: -5.02979040145874
    10. '  ' → logprob: -5.65479040145874

Token 109: ' in' (ID: 306)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.746960461139679
    2. '   ' → logprob: -0.996960461139679
    3. ' =' → logprob: -1.9969604015350342
    4. '=' → logprob: -4.996960639953613
    5. ' can' → logprob: -5.621960639953613
    6. '    ' → logprob: -5.746960639953613
    7. '<|end|>' → logprob: -6.371960639953613
    8. ',' → logprob: -6.871960639953613
    9. ' ' → logprob: -7.371960639953613
    10. 'is' → logprob: -7.371960639953613

Token 110: ' each' (ID: 2454)
  Prédit: ' days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' days' → logprob: -1.4008830785751343
    2. ' the' → logprob: -1.5258830785751343
    3. 'the' → logprob: -2.025883197784424
    4. ' this' → logprob: -2.525883197784424
    5. '```' → logprob: -3.275883197784424
    6. 'this' → logprob: -3.400883197784424
    7. 'days' → logprob: -3.650883197784424
    8. ' each' → logprob: -3.775883197784424
    9. ' m' → logprob: -4.150883197784424
    10. 'each' → logprob: -4.275883197784424

Token 111: ' coordinate' (ID: 30380)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.896311342716217
    2. '   ' → logprob: -2.1463112831115723
    3. 'mod' → logprob: -2.6463112831115723
    4. ' cycle' → logprob: -2.6463112831115723
    5. ' congr' → logprob: -3.2713112831115723
    6. 'line' → logprob: -3.2713112831115723
    7. ' system' → logprob: -3.5213112831115723
    8. ' modular' → logprob: -4.021311283111572
    9. 'cycle' → logprob: -4.146311283111572
    10. ' is' → logprob: -4.146311283111572

Token 112: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.44540902972221375
    2. '   ' → logprob: -1.1954090595245361
    3. '    ' → logprob: -4.070408821105957
    4. ',' → logprob: -4.695408821105957
    5. ' ' → logprob: -4.695408821105957
    6. '<|end|>' → logprob: -5.070408821105957
    7. '=' → logprob: -5.570408821105957
    8. ')' → logprob: -6.195408821105957
    9. ' =' → logprob: -6.320408821105957
    10. '<|end|>' → logprob: -6.445408821105957

Token 113: ' m' (ID: 284)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1445872038602829
    2. 'l' → logprob: -2.769587278366089
    3. ' m' → logprob: -3.394587278366089
    4. 'm' → logprob: -3.519587278366089
    5. ' the' → logprob: -5.26958703994751
    6. '    ' → logprob: -6.76958703994751
    7. ' ' → logprob: -7.76958703994751
    8. ' a' → logprob: -7.89458703994751
    9. '1' → logprob: -8.019587516784668
    10. ' their' → logprob: -8.644587516784668

Token 114: '_i' (ID: 10853)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8901136517524719
    2. '#' → logprob: -2.015113592147827
    3. '<|end|>' → logprob: -2.390113592147827
    4. ')' → logprob: -2.890113592147827
    5. ':' → logprob: -3.140113592147827
    6. 's' → logprob: -3.390113592147827
    7. '<|end|>' → logprob: -3.765113592147827
    8. '3' → logprob: -3.890113592147827
    9. ',' → logprob: -4.015113830566406
    10. 'x' → logprob: -4.390113830566406

Token 115: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6739152073860168
    2. '   ' → logprob: -0.7989152073860168
    3. '<|end|>' → logprob: -4.298915386199951
    4. '    
' → logprob: -4.548915386199951
    5. ',' → logprob: -4.923915386199951
    6. ':' → logprob: -6.548915386199951
    7. '.' → logprob: -6.798915386199951
    8. '\n' → logprob: -6.923915386199951
    9. '```' → logprob: -6.923915386199951
    10. ')' → logprob: -7.173915386199951

Token 116: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10671105235815048
    2. '   ' → logprob: -2.3567111492156982
    3. '    
' → logprob: -5.356710910797119
    4. '```' → logprob: -6.981710910797119
    5. ':' → logprob: -8.731711387634277
    6. '

' → logprob: -9.106711387634277
    7. ',' → logprob: -9.356711387634277
    8. '<|end|>' → logprob: -9.356711387634277
    9. '.' → logprob: -9.606711387634277
    10. '
' → logprob: -9.981711387634277

Token 117: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06916970759630203
    2. '
' → logprob: -3.319169759750366
    3. 'x' → logprob: -4.694169521331787
    4. '    
' → logprob: -4.819169521331787
    5. '    ' → logprob: -5.444169521331787
    6. ' x' → logprob: -6.069169521331787
    7. 't' → logprob: -6.569169521331787
    8. 'n' → logprob: -6.944169521331787
    9. 'c' → logprob: -7.569169521331787
    10. ' 
' → logprob: -7.819169521331787

Token 118: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7019597291946411
    2. 'x' → logprob: -1.8269597291946411
    3. ' x' → logprob: -1.9519597291946411
    4. ' from' → logprob: -2.0769596099853516
    5. 'from' → logprob: -2.4519596099853516
    6. ' t' → logprob: -2.8269596099853516
    7. 't' → logprob: -2.9519596099853516
    8. 'r' → logprob: -3.2019596099853516
    9. '#' → logprob: -3.4519596099853516
    10. 'res' → logprob: -3.8269596099853516

Token 119: ' total' (ID: 3609)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.251511812210083
    2. 'from' → logprob: -1.751511812210083
    3. 'x' → logprob: -1.876511812210083
    4. ' from' → logprob: -2.751511812210083
    5. 'def' → logprob: -3.001511812210083
    6. 'r' → logprob: -3.251511812210083
    7. 'res' → logprob: -3.251511812210083
    8. '   ' → logprob: -3.626511812210083
    9. 'a' → logprob: -3.626511812210083
    10. ' x' → logprob: -3.876511812210083

Token 120: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -1.2107328176498413
    2. ' cycle' → logprob: -1.3357328176498413
    3. 'l' → logprob: -2.335732936859131
    4. ' l' → logprob: -2.585732936859131
    5. '_cycle' → logprob: -2.585732936859131
    6. ' period' → logprob: -2.960732936859131
    7. 'period' → logprob: -3.210732936859131
    8. '_period' → logprob: -3.835732936859131
    9. ' length' → logprob: -3.960732936859131
    10. 'length' → logprob: -4.085732936859131

Token 121: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6142303347587585
    2. ' length' → logprob: -1.1142303943634033
    3. ' =' → logprob: -2.4892303943634033
    4. '=' → logprob: -3.8642303943634033
    5. '   ' → logprob: -4.489230155944824
    6. '_length' → logprob: -4.739230155944824
    7. ' is' → logprob: -5.114230155944824
    8. ' ' → logprob: -8.739230155944824
    9. 'period' → logprob: -9.239230155944824
    10. 's' → logprob: -9.364230155944824

Token 122: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007746579125523567
    2. '=' → logprob: -4.882746696472168
    3. '   ' → logprob: -9.757746696472168
    4. ' is' → logprob: -10.007746696472168
    5. ',' → logprob: -11.257746696472168
    6. 's' → logprob: -12.007746696472168
    7. ':' → logprob: -12.257746696472168
    8. '    ' → logprob: -12.632746696472168
    9. ' ' → logprob: -12.632746696472168
    10. '<|end|>' → logprob: -12.882746696472168

Token 123: ' L' (ID: 451)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.01606123149394989
    2. 'l' → logprob: -4.141061305999756
    3. ' ' → logprob: -11.641060829162598
    4. '    ' → logprob: -11.891060829162598
    5. ' ' → logprob: -12.891060829162598
    6. '   ' → logprob: -12.891060829162598
    7. ' lc' → logprob: -13.391060829162598
    8. '```' → logprob: -14.141060829162598
    9. '  ' → logprob: -14.391060829162598
    10. 'lc' → logprob: -14.391060829162598

Token 124: 'CM' (ID: 14170)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37275055050849915
    2. ' =' → logprob: -1.2477505207061768
    3. 'cm' → logprob: -4.122750759124756
    4. '=l' → logprob: -5.497750759124756
    5. 'l' → logprob: -6.247750759124756
    6. '   ' → logprob: -7.122750759124756
    7. 'c' → logprob: -8.497750282287598
    8. 'm' → logprob: -8.872750282287598
    9. ' l' → logprob: -8.872750282287598
    10. 'CM' → logprob: -8.997750282287598

Token 125: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04610186815261841
    2. '(m' → logprob: -3.7961018085479736
    3. ' (' → logprob: -4.546102046966553
    4. ' of' → logprob: -5.296102046966553
    5. 'of' → logprob: -5.671102046966553
    6. ' =' → logprob: -6.546102046966553
    7. '(l' → logprob: -7.296102046966553
    8. '_of' → logprob: -7.421102046966553
    9. '(
' → logprob: -8.171101570129395
    10. '=' → logprob: -9.171101570129395

Token 126: ' m' (ID: 284)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.6578540802001953
    2. 'm' → logprob: -0.9078540802001953
    3. ' m' → logprob: -3.5328540802001953
    4. '(' → logprob: -3.6578540802001953
    5. '[m' → logprob: -4.407854080200195
    6. 'l' → logprob: -5.782854080200195
    7. '[' → logprob: -5.907854080200195
    8. 'the' → logprob: -6.657854080200195
    9. ' the' → logprob: -6.782854080200195
    10. ' three' → logprob: -7.407854080200195

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.056518297642469406
    2. '(m' → logprob: -2.931518316268921
    3. '3' → logprob: -6.806518077850342
    4. 'm' → logprob: -8.5565185546875
    5. '[m' → logprob: -8.6815185546875
    6. '```' → logprob: -9.6815185546875
    7. '(' → logprob: -10.8065185546875
    8. 's' → logprob: -10.8065185546875
    9. ' m' → logprob: -11.1815185546875
    10. ')m' → logprob: -11.5565185546875

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006058201659470797
    2. ',m' → logprob: -5.131058216094971
    3. 'm' → logprob: -9.881057739257812
    4. 'and' → logprob: -10.631057739257812
    5. ' ,' → logprob: -10.881057739257812
    6. '(' → logprob: -11.006057739257812
    7. '(m' → logprob: -11.256057739257812
    8. ',l' → logprob: -13.381057739257812
    9. ' m' → logprob: -13.506057739257812
    10. ' and' → logprob: -14.006057739257812

Token 129: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004520788788795471
    2. ' m' → logprob: -5.629520893096924
    3. 'l' → logprob: -7.004520893096924
    4. ' l' → logprob: -12.004520416259766
    5. 'LC' → logprob: -13.629520416259766
    6. ',' → logprob: -14.004520416259766
    7. ' ' → logprob: -14.629520416259766
    8. 'a' → logprob: -14.692020416259766
    9. 'L' → logprob: -14.754520416259766
    10. '	m' → logprob: -15.129520416259766

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.2166411478538066e-05
    2. '1' → logprob: -9.875052452087402
    3. '<|end|>' → logprob: -15.375052452087402
    4. 's' → logprob: -15.500052452087402
    5. ' ' → logprob: -16.125051498413086
    6. 'm' → logprob: -16.375051498413086
    7. '3' → logprob: -16.750051498413086
    8. '```' → logprob: -17.250051498413086
    9. ',' → logprob: -17.875051498413086
    10. '۲' → logprob: -18.375051498413086

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013140703551471233
    2. 'and' → logprob: -4.638140678405762
    3. ',m' → logprob: -5.888140678405762
    4. ' and' → logprob: -8.263140678405762
    5. 'm' → logprob: -9.013140678405762
    6. ' ,' → logprob: -9.263140678405762
    7. ',
' → logprob: -10.013140678405762
    8. ')' → logprob: -10.263140678405762
    9. ',and' → logprob: -10.763140678405762
    10. ',l' → logprob: -11.263140678405762

Token 132: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015303362160921097
    2. ' m' → logprob: -7.001530170440674
    3. 'and' → logprob: -7.501530170440674
    4. ' and' → logprob: -9.751530647277832
    5. 'l' → logprob: -12.001530647277832
    6. ' ' → logprob: -14.876530647277832
    7. '
' → logprob: -15.001530647277832
    8. '   ' → logprob: -15.376530647277832
    9. '	m' → logprob: -15.626530647277832
    10. '```' → logprob: -15.876530647277832

Token 133: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '۳' → logprob: -17.75
    4. '３' → logprob: -17.875
    5. 'm' → logprob: -18.75
    6. ' three' → logprob: -19.375
    7. '_three' → logprob: -19.5
    8. '<|end|>' → logprob: -19.625
    9. '```' → logprob: -19.875
    10. ' m' → logprob: -20.25

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24412140250205994
    2. '
' → logprob: -1.6191214323043823
    3. '    
' → logprob: -4.869121551513672
    4. '```' → logprob: -6.119121551513672
    5. ':' → logprob: -6.244121551513672
    6. '    ' → logprob: -6.744121551513672
    7. '<|end|>' → logprob: -6.744121551513672
    8. ',' → logprob: -7.869121551513672
    9. '  ' → logprob: -7.994121551513672
    10. '   
' → logprob: -7.994121551513672

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0425177663564682
    2. '
' → logprob: -3.54251766204834
    3. ':' → logprob: -5.29251766204834
    4. '    
' → logprob: -5.66751766204834
    5. '    ' → logprob: -7.04251766204834
    6. ',' → logprob: -7.41751766204834
    7. '<|end|>' → logprob: -7.66751766204834
    8. ')' → logprob: -8.41751766204834
    9. '   
' → logprob: -8.41751766204834
    10. '```' → logprob: -8.41751766204834

Token 136: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2688751220703125
    2. 'l' → logprob: -2.2688751220703125
    3. ' l' → logprob: -2.2688751220703125
    4. 't' → logprob: -2.3938751220703125
    5. 'total' → logprob: -2.3938751220703125
    6. 'n' → logprob: -3.1438751220703125
    7. 'cycle' → logprob: -3.1438751220703125
    8. '
' → logprob: -3.2688751220703125
    9. ' total' → logprob: -3.2688751220703125
    10. ' cycle' → logprob: -3.3938751220703125

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000827017764095217
    2. '=' → logprob: -7.250826835632324
    3. ' ' → logprob: -9.250826835632324
    4. '  ' → logprob: -12.625826835632324
    5. '_' → logprob: -12.625826835632324
    6. ',' → logprob: -13.000826835632324
    7. 'space' → logprob: -13.000826835632324
    8. ' ,' → logprob: -13.125826835632324
    9. '1' → logprob: -13.750826835632324
    10. ' +=' → logprob: -13.875826835632324

Token 138: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.19085733592510223
    2. ' l' → logprob: -1.8158572912216187
    3. '0' → logprob: -4.940857410430908
    4. '1' → logprob: -6.440857410430908
    5. 'max' → logprob: -7.565857410430908
    6. ' ' → logprob: -7.815857410430908
    7. 'min' → logprob: -8.19085693359375
    8. 'm' → logprob: -8.19085693359375
    9. ' max' → logprob: -8.31585693359375
    10. 'a' → logprob: -8.94085693359375

Token 139: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.1197812557220459
    2. 'c' → logprob: -2.494781255722046
    3. 'm' → logprob: -3.494781255722046
    4. ' cm' → logprob: -12.369781494140625
    5. 'с' → logprob: -13.119781494140625
    6. '(cm' → logprob: -13.244781494140625
    7. 'cms' → logprob: -13.619781494140625
    8. '```' → logprob: -13.744781494140625
    9. '(m' → logprob: -14.244781494140625
    10. 'cmath' → logprob: -14.619781494140625

Token 140: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.1367078721523285
    2. '(m' → logprob: -2.1367077827453613
    3. '(' → logprob: -4.636707782745361
    4. '(
' → logprob: -10.76170825958252
    5. '(a' → logprob: -12.13670825958252
    6. '(ll' → logprob: -12.63670825958252
    7. 'l' → logprob: -13.01170825958252
    8. '((' → logprob: -13.01170825958252
    9. 'm' → logprob: -13.76170825958252
    10. '(s' → logprob: -14.01170825958252

Token 141: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.019952526316046715
    2. 'm' → logprob: -4.019952297210693
    3. 'c' → logprob: -6.769952297210693
    4. '(m' → logprob: -7.769952297210693
    5. '(l' → logprob: -8.769952774047852
    6. 'sm' → logprob: -11.269952774047852
    7. '1' → logprob: -11.394952774047852
    8. '(cm' → logprob: -11.644952774047852
    9. 'mm' → logprob: -12.644952774047852
    10. 'CM' → logprob: -12.644952774047852

Token 142: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. 'm' → logprob: -16.000028610229492
    4. ')m' → logprob: -16.500028610229492
    5. '(
' → logprob: -17.500028610229492
    6. '(l' → logprob: -18.000028610229492
    7. ')(' → logprob: -18.625028610229492
    8. ' (' → logprob: -18.750028610229492
    9. '((' → logprob: -19.000028610229492
    10. '(mc' → logprob: -19.125028610229492

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '(m' → logprob: -14.250000953674316
    3. '```' → logprob: -15.750000953674316
    4. '(' → logprob: -16.000001907348633
    5. ' ' → logprob: -16.312501907348633
    6. '_' → logprob: -17.437501907348633
    7. '１' → logprob: -17.437501907348633
    8. 'm' → logprob: -17.812501907348633
    9. ')' → logprob: -17.875001907348633
    10. 's' → logprob: -18.062501907348633

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3870694041252136
    2. ',m' → logprob: -1.1370694637298584
    3. 'm' → logprob: -9.012069702148438
    4. ' ,' → logprob: -10.512069702148438
    5. '(m' → logprob: -11.012069702148438
    6. '(' → logprob: -11.387069702148438
    7. ',
' → logprob: -11.512069702148438
    8. ',l' → logprob: -12.012069702148438
    9. '```' → logprob: -14.262069702148438
    10. ',

' → logprob: -15.387069702148438

Token 145: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.282920129597187e-05
    2. ' m' → logprob: -11.375012397766113
    3. ')m' → logprob: -14.125012397766113
    4. '(m' → logprob: -14.750012397766113
    5. '   ' → logprob: -16.00001335144043
    6. ')' → logprob: -17.00001335144043
    7. '	m' → logprob: -17.25001335144043
    8. '```' → logprob: -17.62501335144043
    9. '[m' → logprob: -18.00001335144043
    10. '
' → logprob: -18.50001335144043

Token 146: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.822646693966817e-06
    2. '3' → logprob: -11.875007629394531
    3. 'm' → logprob: -15.875007629394531
    4. '
' → logprob: -15.937507629394531
    5. '۲' → logprob: -16.18750762939453
    6. '1' → logprob: -16.31250762939453
    7. '２' → logprob: -16.75000762939453
    8. ' ' → logprob: -16.87500762939453
    9. '```' → logprob: -17.00000762939453
    10. ')' → logprob: -17.06250762939453

Token 147: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0308906901627779
    2. '),' → logprob: -3.530890703201294
    3. ',m' → logprob: -7.155890464782715
    4. ' ,' → logprob: -8.030890464782715
    5. ')' → logprob: -11.405890464782715
    6. ',),' → logprob: -11.780890464782715
    7. 'm' → logprob: -12.030890464782715
    8. ' ),' → logprob: -12.780890464782715
    9. '`,' → logprob: -13.655890464782715
    10. '(m' → logprob: -13.655890464782715

Token 148: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12694302201271057
    2. ' m' → logprob: -2.1269431114196777
    3. ')m' → logprob: -11.25194263458252
    4. ')' → logprob: -14.12694263458252
    5. '	m' → logprob: -14.50194263458252
    6. '(m' → logprob: -15.12694263458252
    7. ' ' → logprob: -16.126943588256836
    8. '   ' → logprob: -16.876943588256836
    9. ' ' → logprob: -17.126943588256836
    10. '    ' → logprob: -17.251943588256836

Token 149: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '۳' → logprob: -19.125
    3. '３' → logprob: -20.5
    4. ' ' → logprob: -20.875
    5. '৩' → logprob: -20.875
    6. '٣' → logprob: -21.375
    7. '³' → logprob: -21.5
    8. ')' → logprob: -21.625
    9. '३' → logprob: -21.875
    10. '```' → logprob: -22.875

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007385154603980482
    2. ')
' → logprob: -7.250738620758057
    3. '))' → logprob: -11.500738143920898
    4. ' )' → logprob: -11.875738143920898
    5. ')

' → logprob: -13.250738143920898
    6. ')`' → logprob: -13.375738143920898
    7. '   ' → logprob: -13.625738143920898
    8. ')
' → logprob: -13.625738143920898
    9. ')**' → logprob: -13.875738143920898
    10. ')*' → logprob: -14.500738143920898

Token 151: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14459793269634247
    2. 'print' → logprob: -2.3945980072021484
    3. '   ' → logprob: -3.2695980072021484
    4. '<|end|>' → logprob: -6.144598007202148
    5. '    
' → logprob: -7.019598007202148
    6. ')' → logprob: -7.644598007202148
    7. '\n' → logprob: -7.769598007202148
    8. ' print' → logprob: -7.894598007202148
    9. '  
' → logprob: -8.269598007202148
    10. ' 
' → logprob: -8.394598007202148

Token 152: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7324236035346985
    2. '
' → logprob: -1.1074235439300537
    3. 'print' (adapté à ' print') → logprob: -2.3574235439300537
    4. ' print' → logprob: -2.8574235439300537
    5. ' 
' → logprob: -3.9824235439300537
    6. '    
' → logprob: -5.232423782348633
    7. '<|end|>' → logprob: -5.982423782348633
    8. '    ' → logprob: -6.107423782348633
    9. ' if' → logprob: -6.482423782348633
    10. '  
' → logprob: -6.482423782348633

Token 153: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0652625635266304
    2. '(' → logprob: -2.81526255607605
    3. '(f' → logprob: -6.065262794494629
    4. '('' → logprob: -7.940262794494629
    5. '((' → logprob: -8.565262794494629
    6. '(a' → logprob: -8.940262794494629
    7. '(abs' → logprob: -9.315262794494629
    8. '("' → logprob: -9.440262794494629
    9. '()' → logprob: -9.690262794494629
    10. '(answer' → logprob: -11.940262794494629

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. '))' → logprob: -13.500004768371582
    3. '')' → logprob: -13.875004768371582
    4. ')`' → logprob: -13.875004768371582
    5. '`)' → logprob: -14.000004768371582
    6. ' )' → logprob: -14.875004768371582
    7. '()' → logprob: -15.750004768371582
    8. ')
' → logprob: -16.0000057220459
    9. '")' → logprob: -16.8750057220459
    10. '())' → logprob: -17.2500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 128
Précision stricte (1ère position): 51.97%
Précision adaptée (1ère position): 51.97%
Précision (top 10): 84.21%
================================================================================
