================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

N = int(input())
r = list(map(int, input().split()))

x = [0] * N
x[0] = r[0]

for i in range(1, N):
    max_pos = x[i-1] + 2 * math.sqrt(r[i] * r[i-1])
    for j in range(i-1):
        d = x[j] + 2 * math.sqrt(r[i] * r[j])
        if d > max_pos:
            max_pos = d
    x[i] = max_pos

result = max(x[i] + r[i] for i in range(N)) + r[0]
print(f"{result:.8f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0009144435753114522
    2. 'import' → logprob: -8.375914573669434
    3. '\n' → logprob: -8.625914573669434
    4. '\' → logprob: -8.625914573669434
    5. '```' → logprob: -9.000914573669434
    6. '<|end|>' → logprob: -10.500914573669434
    7. 'def' → logprob: -11.125914573669434
    8. '#' → logprob: -11.250914573669434
    9. '*' → logprob: -11.250914573669434
    10. '.pi' → logprob: -11.375914573669434

Token 4: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8006177544593811
    2. ')' → logprob: -1.8006176948547363
    3. '=' → logprob: -2.3006176948547363
    4. 'u' → logprob: -2.5506176948547363
    5. 'a' → logprob: -2.6756176948547363
    6. '.' → logprob: -2.8006176948547363
    7. ',' → logprob: -4.050617694854736
    8. ' ' → logprob: -4.425617694854736
    9. ' =' → logprob: -4.425617694854736
    10. ' )' → logprob: -5.175617694854736

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041994839906692505
    2. '10' → logprob: -3.41699481010437
    3. ' int' → logprob: -5.166995048522949
    4. 'int' → logprob: -6.791995048522949
    5. '5' → logprob: -7.666995048522949
    6. '100' → logprob: -7.791995048522949
    7. '20' → logprob: -8.66699504852295
    8. '0' → logprob: -8.91699504852295
    9. '1' → logprob: -9.41699504852295
    10. '50' → logprob: -9.91699504852295

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003298632800579071
    2. '('' → logprob: -8.875329971313477
    3. '()' → logprob: -10.125329971313477
    4. ''' → logprob: -10.375329971313477
    5. '```' → logprob: -10.375329971313477
    6. '("("' → logprob: -10.875329971313477
    7. ')' → logprob: -11.375329971313477
    8. '(input' → logprob: -11.500329971313477
    9. ' (' → logprob: -11.750329971313477
    10. '`' → logprob: -12.000329971313477

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10141170769929886
    2. ')' → logprob: -2.351411819458008
    3. '()' → logprob: -7.601411819458008
    4. '(
' → logprob: -7.976411819458008
    5. '('' → logprob: -9.226411819458008
    6. '())' → logprob: -9.976411819458008
    7. '")' → logprob: -10.601411819458008
    8. '(

' → logprob: -10.601411819458008
    9. '("("' → logprob: -10.726411819458008
    10. '))' → logprob: -10.851411819458008

Token 8: 'r' (ID: 81)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.4307522773742676
    2. 's' → logprob: -1.9307522773742676
    3. 'for' → logprob: -2.1807522773742676
    4. 'result' → logprob: -2.1807522773742676
    5. ''' → logprob: -2.6807522773742676
    6. ')' → logprob: -3.0557522773742676
    7. 'f' → logprob: -3.1807522773742676
    8. 'if' → logprob: -3.3057522773742676
    9. 'fact' → logprob: -3.4307522773742676
    10. 'x' → logprob: -3.4307522773742676

Token 9: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011233263649046421
    2. '(' → logprob: -5.261233329772949
    3. ')' → logprob: -6.261233329772949
    4. 'adius' → logprob: -6.886233329772949
    5. '[' → logprob: -7.886233329772949
    6. ' =' → logprob: -8.13623332977295
    7. '.' → logprob: -8.26123332977295
    8. 'ad' → logprob: -8.38623332977295
    9. '(a' → logprob: -8.38623332977295
    10. 'o' → logprob: -8.38623332977295

Token 10: ' list' (ID: 1562)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.13366620242595673
    2. ' int' → logprob: -2.5086662769317627
    3. ' float' → logprob: -4.133666038513184
    4. 'math' → logprob: -4.383666038513184
    5. ' N' → logprob: -4.883666038513184
    6. ' ' → logprob: -5.258666038513184
    7. ' input' → logprob: -6.633666038513184
    8. 'int' → logprob: -7.008666038513184
    9. 'float' → logprob: -9.508666038513184
    10. '(math' → logprob: -10.633666038513184

Token 11: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006336849182844162
    2. '(range' → logprob: -5.131336688995361
    3. '(r' → logprob: -8.75633716583252
    4. '(math' → logprob: -9.13133716583252
    5. '(map' → logprob: -10.38133716583252
    6. '()' → logprob: -10.75633716583252
    7. '(
' → logprob: -11.00633716583252
    8. '(re' → logprob: -11.50633716583252
    9. '((' → logprob: -11.63133716583252
    10. '(

' → logprob: -11.75633716583252

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12640054523944855
    2. '(' → logprob: -2.2514004707336426
    3. '(math' → logprob: -5.001400470733643
    4. '(lambda' → logprob: -5.376400470733643
    5. ')' → logprob: -7.251400470733643
    6. '(str' → logprob: -8.2514009475708
    7. '[int' → logprob: -8.6264009475708
    8. '(range' → logprob: -8.7514009475708
    9. '<|end|>' → logprob: -8.8764009475708
    10. 'int' → logprob: -9.0014009475708

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.029105069115757942
    2. ',input' → logprob: -4.529105186462402
    3. '(' → logprob: -4.904105186462402
    4. ',' → logprob: -4.904105186462402
    5. 'input' → logprob: -6.779105186462402
    6. '))' → logprob: -7.029105186462402
    7. '(math' → logprob: -8.154105186462402
    8. ')' → logprob: -8.529105186462402
    9. ' input' → logprob: -9.529105186462402
    10. '=input' → logprob: -9.654105186462402

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0699997991323471
    2. ' input' → logprob: -2.6949996948242188
    3. '(input' → logprob: -9.944999694824219
    4. ',input' → logprob: -12.194999694824219
    5. ')' → logprob: -13.069999694824219
    6. 'range' → logprob: -13.319999694824219
    7. 'math' → logprob: -13.444999694824219
    8. '=input' → logprob: -13.569999694824219
    9. ' ' → logprob: -13.944999694824219
    10. 'lambda' → logprob: -14.319999694824219

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08021014928817749
    2. '()' → logprob: -3.3302102088928223
    3. '()))' → logprob: -3.3302102088928223
    4. '())' → logprob: -5.455210208892822
    5. '(' → logprob: -7.580210208892822
    6. '()));' → logprob: -7.580210208892822
    7. '())))' → logprob: -9.955209732055664
    8. '))' → logprob: -10.330209732055664
    9. '()>' → logprob: -10.455209732055664
    10. ')' → logprob: -10.705209732055664

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003546502848621458
    2. 'strip' → logprob: -8.000354766845703
    3. 'rstrip' → logprob: -11.000354766845703
    4. ' split' → logprob: -13.125354766845703
    5. '(split' → logprob: -15.125354766845703
    6. 'spl' → logprob: -15.625354766845703
    7. ')' → logprob: -17.375354766845703
    8. 's' → logprob: -17.875354766845703
    9. 'sp' → logprob: -18.500354766845703
    10. ' strip' → logprob: -18.750354766845703

Token 17: '()))

' (ID: 125972)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5916984677314758
    2. '))' → logprob: -0.8416984677314758
    3. '()))' → logprob: -5.09169864654541
    4. ')))' → logprob: -5.34169864654541
    5. '())' → logprob: -5.96669864654541
    6. '(' → logprob: -6.34169864654541
    7. '()' → logprob: -9.21669864654541
    8. '('' → logprob: -9.46669864654541
    9. '())))' → logprob: -10.34169864654541
    10. ''))' → logprob: -10.46669864654541

Token 18: 'x' (ID: 87)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0057117938995361
    2. ')' → logprob: -1.5057117938995361
    3. 'd' → logprob: -1.6307117938995361
    4. 's' → logprob: -2.255711793899536
    5. 'max' → logprob: -3.880711793899536
    6. 'a' → logprob: -4.255711555480957
    7. 'c' → logprob: -4.255711555480957
    8. 'result' → logprob: -4.505711555480957
    9. 'dp' → logprob: -4.880711555480957
    10. 'm' → logprob: -5.005711555480957

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1545797735452652
    2. '=' → logprob: -2.9045798778533936
    3. '_' → logprob: -3.0295798778533936
    4. '[' → logprob: -3.9045798778533936
    5. ',' → logprob: -4.7795796394348145
    6. ' ' → logprob: -5.7795796394348145
    7. ')' → logprob: -6.4045796394348145
    8. '[i' → logprob: -6.6545796394348145
    9. 'i' → logprob: -7.4045796394348145
    10. '[]' → logprob: -7.6545796394348145

Token 20: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2735061645507812
    2. ' [' → logprob: -1.5235061645507812
    3. '[' → logprob: -1.7735061645507812
    4. ' ' → logprob: -2.1485061645507812
    5. 'r' → logprob: -2.2735061645507812
    6. '[r' → logprob: -3.6485061645507812
    7. '[]' → logprob: -4.023506164550781
    8. ' math' → logprob: -4.023506164550781
    9. ' r' → logprob: -4.148506164550781
    10. 'math' → logprob: -4.273506164550781

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4457131028175354
    2. 'r' → logprob: -1.1957130432128906
    3. 'math' → logprob: -2.9457130432128906
    4. 'abs' → logprob: -6.695713043212891
    5. 'max' → logprob: -7.070713043212891
    6. ']' → logprob: -7.070713043212891
    7. '1' → logprob: -7.945713043212891
    8. '-' → logprob: -8.82071304321289
    9. '(r' → logprob: -8.82071304321289
    10. 'i' → logprob: -8.82071304321289

Token 22: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07089559733867645
    2. ')]' → logprob: -2.8208956718444824
    3. ')' → logprob: -4.945895671844482
    4. ']*' → logprob: -6.695895671844482
    5. ',' → logprob: -8.320895195007324
    6. '])' → logprob: -9.695895195007324
    7. ' for' → logprob: -9.820895195007324
    8. '])]' → logprob: -9.820895195007324
    9. ']*(' → logprob: -9.945895195007324
    10. ' ]' → logprob: -10.445895195007324

Token 23: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28877559304237366
    2. 'for' → logprob: -2.413775682449341
    3. ' for' → logprob: -2.913775682449341
    4. ',' → logprob: -3.663775682449341
    5. '0' → logprob: -4.163775444030762
    6. '[' → logprob: -4.163775444030762
    7. ' *' → logprob: -4.413775444030762
    8. '+' → logprob: -4.663775444030762
    9. ' ]' → logprob: -5.163775444030762
    10. '*' → logprob: -5.538775444030762

Token 24: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002849448472261429
    2. '(N' → logprob: -6.002849578857422
    3. '(' → logprob: -8.252849578857422
    4. 'len' → logprob: -10.002849578857422
    5. ' N' → logprob: -10.627849578857422
    6. '(len' → logprob: -11.502849578857422
    7. 'n' → logprob: -11.752849578857422
    8. '7' → logprob: -12.377849578857422
    9. '6' → logprob: -12.752849578857422
    10. '5' → logprob: -13.002849578857422

Token 25: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9909993410110474
    2. ' ' → logprob: -1.9909993410110474
    3. 'x' → logprob: -2.115999221801758
    4. ' for' → logprob: -2.490999221801758
    5. '+' → logprob: -2.615999221801758
    6. '<|end|>' → logprob: -2.990999221801758
    7. '0' → logprob: -3.365999221801758
    8. 'y' → logprob: -3.865999221801758
    9. ' 
' → logprob: -4.240999221801758
    10. '[' → logprob: -4.365999221801758

Token 26: 'x' (ID: 87)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14090946316719055
    2. 'x' → logprob: -2.640909433364868
    3. 'y' → logprob: -3.015909433364868
    4. ' for' → logprob: -5.640909671783447
    5. 'd' → logprob: -6.765909671783447
    6. 'current' → logprob: -6.890909671783447
    7. 'prev' → logprob: -7.390909671783447
    8. 'stack' → logprob: -7.515909671783447
    9. 'max' → logprob: -7.765909671783447
    10. 's' → logprob: -7.765909671783447

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26104214787483215
    2. '0' → logprob: -2.1360421180725098
    3. '<|end|>' → logprob: -2.5110421180725098
    4. 'x' → logprob: -5.01104211807251
    5. '[:]' → logprob: -5.26104211807251
    6. '<|end|>' → logprob: -5.51104211807251
    7. '=' → logprob: -5.76104211807251
    8. ' ' → logprob: -5.88604211807251
    9. ' =' → logprob: -6.51104211807251
    10. ',' → logprob: -6.76104211807251

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012582694762386382
    2. '1' → logprob: -9.125125885009766
    3. ' ' → logprob: -11.250125885009766
    4. ']' → logprob: -13.250125885009766
    5. ')' → logprob: -14.000125885009766
    6. '-' → logprob: -14.250125885009766
    7. '+' → logprob: -15.625125885009766
    8. '[' → logprob: -16.187625885009766
    9. '2' → logprob: -16.500125885009766
    10. '```' → logprob: -17.250125885009766

Token 29: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011652224930003285
    2. ']=' → logprob: -7.001165390014648
    3. ' ]' → logprob: -8.376165390014648
    4. '=' → logprob: -11.501165390014648
    5. ')' → logprob: -12.876165390014648
    6. ')]' → logprob: -13.126165390014648
    7. '+' → logprob: -13.251165390014648
    8. '])' → logprob: -13.501165390014648
    9. '[' → logprob: -13.876165390014648
    10. '],' → logprob: -13.876165390014648

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47434455156326294
    2. ' =' → logprob: -0.9743445515632629
    3. ',' → logprob: -8.974344253540039
    4. '2' → logprob: -10.474344253540039
    5. ' ' → logprob: -10.849344253540039
    6. '[' → logprob: -11.099344253540039
    7. '+=' → logprob: -11.349344253540039
    8. 's' → logprob: -11.599344253540039
    9. ' +=' → logprob: -11.724344253540039
    10. '^' → logprob: -12.349344253540039

Token 31: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006685942644253373
    2. 'math' → logprob: -8.0006685256958
    3. '0' → logprob: -8.1256685256958
    4. '-r' → logprob: -11.2506685256958
    5. '-' → logprob: -11.8756685256958
    6. ' r' → logprob: -12.2506685256958
    7. 'x' → logprob: -12.5006685256958
    8. '+r' → logprob: -13.3756685256958
    9. 'float' → logprob: -14.0006685256958
    10. ' ' → logprob: -14.0006685256958

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021760274830739945
    2. '0' → logprob: -8.62521743774414
    3. '*' → logprob: -11.75021743774414
    4. '```' → logprob: -11.75021743774414
    5. '[N' → logprob: -11.75021743774414
    6. ' [' → logprob: -12.25021743774414
    7. ' ' → logprob: -12.50021743774414
    8. '[-' → logprob: -13.75021743774414
    9. '[i' → logprob: -14.12521743774414
    10. '1' → logprob: -14.50021743774414

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004541486850939691
    2. '1' → logprob: -7.750453948974609
    3. ']' → logprob: -11.25045394897461
    4. ' ' → logprob: -11.87545394897461
    5. '-' → logprob: -14.12545394897461
    6. '])' → logprob: -14.25045394897461
    7. '[' → logprob: -14.50045394897461
    8. '```' → logprob: -14.62545394897461
    9. '2' → logprob: -16.00045394897461
    10. '۰' → logprob: -16.43795394897461

Token 34: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2499987632036209
    2. '])' → logprob: -1.7499988079071045
    3. ']+' → logprob: -3.8749988079071045
    4. ')' → logprob: -4.499998569488525
    5. ']*' → logprob: -5.249998569488525
    6. '<|end|>' → logprob: -5.749998569488525
    7. '[' → logprob: -6.249998569488525
    8. '*' → logprob: -6.624998569488525
    9. '+' → logprob: -6.749998569488525
    10. ']*)' → logprob: -7.624998569488525

Token 35: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03713194653391838
    2. '*' → logprob: -4.0371317863464355
    3. ' +' → logprob: -4.6621317863464355
    4. ' ' → logprob: -5.0371317863464355
    5. '[' → logprob: -7.2871317863464355
    6. 'for' → logprob: -7.6621317863464355
    7. ' *' → logprob: -7.7871317863464355
    8. ')' → logprob: -8.537132263183594
    9. '<|end|>' → logprob: -8.662132263183594
    10. '(' → logprob: -8.787132263183594

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009539086371660233
    2. ' ' → logprob: -4.8845391273498535
    3. 'i' → logprob: -6.2595391273498535
    4. ' _' → logprob: -11.634538650512695
    5. '_' → logprob: -12.384538650512695
    6. ' ' → logprob: -13.509538650512695
    7. '(i' → logprob: -13.884538650512695
    8. '	i' → logprob: -13.884538650512695
    9. '  ' → logprob: -14.259538650512695
    10. ' in' → logprob: -14.384538650512695

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007076105568557978
    2. 'in' → logprob: -5.007076263427734
    3. ' ' → logprob: -8.007076263427734
    4. '1' → logprob: -12.007076263427734
    5. 'range' → logprob: -12.132076263427734
    6. '	in' → logprob: -12.507076263427734
    7. '+' → logprob: -12.757076263427734
    8. ',' → logprob: -13.257076263427734
    9. 'import' → logprob: -14.007076263427734
    10. ' i' → logprob: -14.132076263427734

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759514570236206
    2. 'range' → logprob: -0.8259514570236206
    3. ' ' → logprob: -12.07595157623291
    4. '(range' → logprob: -12.57595157623291
    5. ' in' → logprob: -13.70095157623291
    6. '	range' → logprob: -14.32595157623291
    7. ' xrange' → logprob: -14.45095157623291
    8. 'in' → logprob: -15.45095157623291
    9. '1' → logprob: -15.82595157623291
    10. '   ' → logprob: -16.575950622558594

Token 39: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.988221684878226e-06
    2. '(N' → logprob: -12.000006675720215
    3. ' (' → logprob: -14.375006675720215
    4. ' ' → logprob: -16.50000762939453
    5. '(len' → logprob: -17.00000762939453
    6. '1' → logprob: -17.25000762939453
    7. '(
' → logprob: -17.75000762939453
    8. '(i' → logprob: -17.75000762939453
    9. '(n' → logprob: -19.87500762939453
    10. '(+' → logprob: -20.25000762939453

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.991464786347933e-05
    2. 'N' → logprob: -9.875060081481934
    3. ' ' → logprob: -12.250060081481934
    4. '0' → logprob: -13.500060081481934
    5. '2' → logprob: -14.125060081481934
    6. 'i' → logprob: -14.375060081481934
    7. '   ' → logprob: -14.625060081481934
    8. '(' → logprob: -15.250060081481934
    9. ')' → logprob: -17.125059127807617
    10. '3' → logprob: -17.500059127807617

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00952917244285345
    2. ' ,' → logprob: -4.759529113769531
    3. ',N' → logprob: -7.009529113769531
    4. ' ' → logprob: -12.634529113769531
    5. ',len' → logprob: -12.634529113769531
    6. ',n' → logprob: -13.509529113769531
    7. ' N' → logprob: -14.134529113769531
    8. ' )' → logprob: -14.759529113769531
    9. ')' → logprob: -14.759529113769531
    10. ' ):' → logprob: -14.884529113769531

Token 42: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0040785204619169235
    2. ' N' → logprob: -5.504078388214111
    3. ' ' → logprob: -16.629077911376953
    4. 'n' → logprob: -17.004077911376953
    5. ')' → logprob: -18.254077911376953
    6. '2' → logprob: -18.504077911376953
    7. '   ' → logprob: -19.129077911376953
    8. '	N' → logprob: -19.129077911376953
    9. 'len' → logprob: -20.254077911376953
    10. ' n' → logprob: -20.754077911376953

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003986144147347659
    2. '):
' → logprob: -7.875398635864258
    3. ':' → logprob: -11.500398635864258
    4. ' ):' → logprob: -12.125398635864258
    5. '):
' → logprob: -13.875398635864258
    6. ')' → logprob: -13.875398635864258
    7. '+' → logprob: -14.625398635864258
    8. '}:' → logprob: -15.750398635864258
    9. ']:' → logprob: -16.000398635864258
    10. '):

' → logprob: -16.250398635864258

Token 44: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5274292826652527
    2. ' x' → logprob: -1.2774293422698975
    3. '   ' → logprob: -2.1524293422698975
    4. ' ' → logprob: -4.527429103851318
    5. '+' → logprob: -7.527429103851318
    6. ' =' → logprob: -7.777429103851318
    7. '```' → logprob: -7.777429103851318
    8. ' for' → logprob: -8.152429580688477
    9. ' if' → logprob: -8.402429580688477
    10. '    ' → logprob: -8.402429580688477

Token 45: ' max' (ID: 2999)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014316986314952374
    2. ' x' → logprob: -4.264317035675049
    3. ' ' → logprob: -9.76431655883789
    4. '   ' → logprob: -11.13931655883789
    5. ' math' → logprob: -11.13931655883789
    6. '2' → logprob: -11.26431655883789
    7. 'math' → logprob: -11.76431655883789
    8. 'for' → logprob: -11.76431655883789
    9. 'import' → logprob: -12.01431655883789
    10. '```' → logprob: -12.26431655883789

Token 46: '_pos' (ID: 14692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.576072633266449
    2. '_x' → logprob: -1.2010726928710938
    3. '_val' → logprob: -2.9510726928710938
    4. '(' → logprob: -3.5760726928710938
    5. '_radius' → logprob: -3.5760726928710938
    6. '_r' → logprob: -4.701072692871094
    7. '_dist' → logprob: -4.951072692871094
    8. '_pos' → logprob: -5.576072692871094
    9. '_value' → logprob: -6.326072692871094
    10. '_d' → logprob: -6.576072692871094

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48086217045783997
    2. '=' → logprob: -0.9808621406555176
    3. 'sible' → logprob: -5.230862140655518
    4. 's' → logprob: -7.730862140655518
    5. '_' → logprob: -7.980862140655518
    6. 'ibility' → logprob: -9.105862617492676
    7. 'ible' → logprob: -9.230862617492676
    8. '_possible' → logprob: -9.605862617492676
    9. '_x' → logprob: -9.730862617492676
    10. 'ition' → logprob: -10.105862617492676

Token 48: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.028816023841500282
    2. ' x' → logprob: -3.653815984725952
    3. '0' → logprob: -6.403816223144531
    4. '2' → logprob: -8.528816223144531
    5. 'max' → logprob: -9.028816223144531
    6. ' ' → logprob: -9.028816223144531
    7. 'math' → logprob: -9.153816223144531
    8. ' math' → logprob: -9.528816223144531
    9. 'r' → logprob: -10.153816223144531
    10. '(x' → logprob: -10.153816223144531

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00033939589047804475
    2. 'i' → logprob: -8.00033950805664
    3. '[' → logprob: -12.87533950805664
    4. ' i' → logprob: -15.75033950805664
    5. '(i' → logprob: -15.75033950805664
    6. '   ' → logprob: -15.87533950805664
    7. '0' → logprob: -16.12533950805664
    8. '[I' → logprob: -16.12533950805664
    9. '[-' → logprob: -16.25033950805664
    10. '[j' → logprob: -16.50033950805664

Token 50: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00018029935017693788
    2. ' -' → logprob: -8.6251802444458
    3. '1' → logprob: -14.5001802444458
    4. ']' → logprob: -16.000181198120117
    5. '-
' → logprob: -17.375181198120117
    6. '   ' → logprob: -17.625181198120117
    7. 'i' → logprob: -17.750181198120117
    8. ' ' → logprob: -17.750181198120117
    9. '−' → logprob: -17.875181198120117
    10. '```' → logprob: -18.000181198120117

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -12.437508583068848
    3. ']' → logprob: -12.937508583068848
    4. '```' → logprob: -14.625008583068848
    5. '   ' → logprob: -14.937508583068848
    6. '2' → logprob: -15.500008583068848
    7. '11' → logprob: -16.125009536743164
    8. 'i' → logprob: -16.312509536743164
    9. '۱' → logprob: -16.375009536743164
    10. ')' → logprob: -16.375009536743164

Token 52: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5886648893356323
    2. ' +' → logprob: -1.0886648893356323
    3. ']' → logprob: -2.338665008544922
    4. ')' → logprob: -4.713665008544922
    5. ']+' → logprob: -6.338665008544922
    6. '+r' → logprob: -8.338665008544922
    7. ' ' → logprob: -8.463665008544922
    8. '}' → logprob: -9.088665008544922
    9. ')+' → logprob: -9.213665008544922
    10. ' plus' → logprob: -9.338665008544922

Token 53: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20240101218223572
    2. '+' → logprob: -1.702401041984558
    3. ' -' → logprob: -8.452401161193848
    4. ' ' → logprob: -8.577401161193848
    5. '<|end|>' → logprob: -8.702401161193848
    6. ' +
' → logprob: -9.327401161193848
    7. '[' → logprob: -9.827401161193848
    8. '+r' → logprob: -10.077401161193848
    9. '-' → logprob: -10.452401161193848
    10. 's' → logprob: -10.577401161193848

Token 54: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06801355630159378
    2. '2' → logprob: -2.8180136680603027
    3. 'math' → logprob: -5.193013668060303
    4. ' ' → logprob: -9.193013191223145
    5. ' math' → logprob: -9.193013191223145
    6. ' r' → logprob: -9.318013191223145
    7. '1' → logprob: -9.568013191223145
    8. '0' → logprob: -10.693013191223145
    9. 'x' → logprob: -11.318013191223145
    10. '(' → logprob: -11.443013191223145

Token 55: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00938982143998146
    2. '2' → logprob: -4.884389877319336
    3. 'math' → logprob: -6.384389877319336
    4. '1' → logprob: -10.759389877319336
    5. ' r' → logprob: -11.509389877319336
    6. '(r' → logprob: -11.509389877319336
    7. ' ' → logprob: -11.634389877319336
    8. '0' → logprob: -12.009389877319336
    9. ' math' → logprob: -12.009389877319336
    10. 'x' → logprob: -12.134389877319336

Token 56: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3967352509498596
    2. '*r' → logprob: -1.1467351913452148
    3. ' *' → logprob: -4.646735191345215
    4. 'r' → logprob: -8.521735191345215
    5. ' ' → logprob: -11.146735191345215
    6. '*Math' → logprob: -12.896735191345215
    7. '*(' → logprob: -13.271735191345215
    8. '**' → logprob: -13.521735191345215
    9. '*x' → logprob: -14.396735191345215
    10. '*object' → logprob: -14.646735191345215

Token 57: ' math' (ID: 13324)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005046014208346605
    2. ' r' → logprob: -5.3800458908081055
    3. ' math' → logprob: -8.505045890808105
    4. 'math' → logprob: -8.880045890808105
    5. '*r' → logprob: -9.880045890808105
    6. ' ' → logprob: -10.880045890808105
    7. '(r' → logprob: -12.880045890808105
    8. '(math' → logprob: -13.005045890808105
    9. '_r' → logprob: -13.630045890808105
    10. '<|end|>' → logprob: -13.880045890808105

Token 58: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.6933755874633789
    2. '.pi' → logprob: -1.193375587463379
    3. '.' → logprob: -1.693375587463379
    4. '.r' → logprob: -4.693375587463379
    5. '.sin' → logprob: -6.068375587463379
    6. '.cos' → logprob: -6.693375587463379
    7. '.s' → logprob: -9.568375587463379
    8. '.as' → logprob: -10.068375587463379
    9. '.atan' → logprob: -10.318375587463379
    10. '.pow' → logprob: -10.443375587463379

Token 59: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.12823888659477234
    2. 'r' → logprob: -2.1282389163970947
    3. '(' → logprob: -6.753238677978516
    4. '2' → logprob: -9.628238677978516
    5. '(max' → logprob: -10.628238677978516
    6. ' r' → logprob: -11.378238677978516
    7. '```' → logprob: -11.628238677978516
    8. '(abs' → logprob: -11.753238677978516
    9. '((' → logprob: -11.878238677978516
    10. ' (' → logprob: -12.878238677978516

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0021013717632740736
    2. '[' → logprob: -6.252101421356201
    3. '[r' → logprob: -8.752100944519043
    4. '[max' → logprob: -12.377100944519043
    5. 'i' → logprob: -12.752100944519043
    6. '[j' → logprob: -13.627100944519043
    7. '[x' → logprob: -13.752100944519043
    8. '[
' → logprob: -13.877100944519043
    9. '```' → logprob: -14.127100944519043
    10. '[(' → logprob: -14.377100944519043

Token 61: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0634777545928955
    2. '[' → logprob: -1.1884777545928955
    3. '[i' → logprob: -1.5634777545928955
    4. '])' → logprob: -2.3134777545928955
    5. ')' → logprob: -4.563477516174316
    6. '[-' → logprob: -4.688477516174316
    7. '-' → logprob: -5.188477516174316
    8. ']*' → logprob: -5.313477516174316
    9. '[r' → logprob: -5.688477516174316
    10. '[j' → logprob: -6.063477516174316

Token 62: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10048820078372955
    2. '[' → logprob: -2.4754881858825684
    3. '))' → logprob: -5.225488185882568
    4. '])' → logprob: -6.475488185882568
    5. ' )' → logprob: -6.725488185882568
    6. ')*' → logprob: -6.975488185882568
    7. '[i' → logprob: -7.225488185882568
    8. '[r' → logprob: -7.850488185882568
    9. 'r' → logprob: -8.475488662719727
    10. '*)' → logprob: -8.725488662719727

Token 63: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.160586416721344
    2. ' r' → logprob: -1.9105863571166992
    3. ')' → logprob: -8.1605863571167
    4. ' ' → logprob: -10.5355863571167
    5. '	r' → logprob: -11.1605863571167
    6. '_r' → logprob: -11.4105863571167
    7. '*r' → logprob: -12.7855863571167
    8. 'x' → logprob: -12.7855863571167
    9. '(r' → logprob: -12.9105863571167
    10. ' )' → logprob: -13.1605863571167

Token 64: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0038674199022352695
    2. '[' → logprob: -5.7538676261901855
    3. '[j' → logprob: -8.128867149353027
    4. 'i' → logprob: -8.128867149353027
    5. '-' → logprob: -10.503867149353027
    6. '1' → logprob: -11.503867149353027
    7. 'prev' → logprob: -11.628867149353027
    8. '[N' → logprob: -11.878867149353027
    9. '][' → logprob: -12.128867149353027
    10. ']' → logprob: -12.378867149353027

Token 65: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029878340661525726
    2. '])' → logprob: -3.6548783779144287
    3. '1' → logprob: -5.90487813949585
    4. '[i' → logprob: -8.029878616333008
    5. ' -' → logprob: -8.404878616333008
    6. ']' → logprob: -9.279878616333008
    7. '[' → logprob: -9.779878616333008
    8. '```' → logprob: -11.029878616333008
    9. '-i' → logprob: -11.154878616333008
    10. ']])' → logprob: -11.279878616333008

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017553119687363505
    2. ' ' → logprob: -9.625175476074219
    3. '])' → logprob: -9.812675476074219
    4. ']' → logprob: -12.000175476074219
    5. ')' → logprob: -12.000175476074219
    6. '```' → logprob: -12.000175476074219
    7. '2' → logprob: -12.062675476074219
    8. ']])' → logprob: -12.500175476074219
    9. '0' → logprob: -12.687675476074219
    10. ')])' → logprob: -13.062675476074219

Token 67: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13148100674152374
    2. '))' → logprob: -2.1314809322357178
    3. '])' → logprob: -5.506481170654297
    4. ')))' → logprob: -9.006481170654297
    5. ')])' → logprob: -9.006481170654297
    6. ')]' → logprob: -9.881481170654297
    7. '})' → logprob: -10.006481170654297
    8. ' )' → logprob: -10.881481170654297
    9. ''])' → logprob: -10.881481170654297
    10. '[' → logprob: -11.131481170654297

Token 68: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9780242443084717
    2. '   ' → logprob: -1.1030242443084717
    3. ' ' → logprob: -1.8530242443084717
    4. '<|end|>' → logprob: -3.7280242443084717
    5. 'while' → logprob: -3.9780242443084717
    6. 'for' → logprob: -4.228024482727051
    7. ' while' → logprob: -4.478024482727051
    8. '  ' → logprob: -5.103024482727051
    9. ' for' → logprob: -5.103024482727051
    10. ',' → logprob: -5.228024482727051

Token 69: ' for' (ID: 395)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7552062273025513
    2. 'x' → logprob: -0.8802062273025513
    3. '
' → logprob: -2.3802061080932617
    4. ' ' → logprob: -5.130206108093262
    5. '   ' → logprob: -5.880206108093262
    6. ' =' → logprob: -6.255206108093262
    7. ' for' → logprob: -6.255206108093262
    8. ':' → logprob: -6.505206108093262
    9. ' 
' → logprob: -6.880206108093262
    10. ',' → logprob: -7.005206108093262

Token 70: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.003827271983027458
    2. 'j' → logprob: -6.003827095031738
    3. ' ' → logprob: -6.628827095031738
    4. ' range' → logprob: -10.878827095031738
    5. '  ' → logprob: -13.378827095031738
    6. '	j' → logprob: -13.503827095031738
    7. ')' → logprob: -13.753827095031738
    8. '_j' → logprob: -13.753827095031738
    9. ' ' → logprob: -14.253827095031738
    10. ' _' → logprob: -14.503827095031738

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11321156471967697
    2. 'in' → logprob: -2.2382116317749023
    3. ' ' → logprob: -8.363211631774902
    4. 'range' → logprob: -10.238211631774902
    5. '  ' → logprob: -10.488211631774902
    6. '   ' → logprob: -10.613211631774902
    7. '(' → logprob: -10.988211631774902
    8. '	in' → logprob: -11.238211631774902
    9. ')' → logprob: -11.363211631774902
    10. ' range' → logprob: -11.738211631774902

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10030943155288696
    2. ' range' → logprob: -2.350309371948242
    3. '(range' → logprob: -9.225309371948242
    4. '	range' → logprob: -12.475309371948242
    5. ' xrange' → logprob: -16.225309371948242
    6. '.range' → logprob: -16.600309371948242
    7. '_range' → logprob: -16.600309371948242
    8. ')' → logprob: -16.725309371948242
    9. ' ' → logprob: -17.350309371948242
    10. 'ran' → logprob: -17.475309371948242

Token 73: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07043329626321793
    2. '(i' → logprob: -2.6954333782196045
    3. '(j' → logprob: -8.320433616638184
    4. ' (' → logprob: -8.320433616638184
    5. '(I' → logprob: -13.320433616638184
    6. '(range' → logprob: -13.570433616638184
    7. '(ii' → logprob: -13.695433616638184
    8. ' ' → logprob: -13.945433616638184
    9. '(
' → logprob: -14.320433616638184
    10. '(s' → logprob: -14.320433616638184

Token 74: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011058318428695202
    2. '   ' → logprob: -5.636058330535889
    3. ')' → logprob: -5.886058330535889
    4. '-' → logprob: -6.011058330535889
    5. '):
' → logprob: -7.386058330535889
    6. ')):' → logprob: -7.761058330535889
    7. ' ):' → logprob: -8.26105785369873
    8. '0' → logprob: -8.88605785369873
    9. '(' → logprob: -9.13605785369873
    10. '(i' → logprob: -9.26105785369873

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012582694762386382
    2. '2' → logprob: -9.125125885009766
    3. ' ' → logprob: -11.500125885009766
    4. '0' → logprob: -12.250125885009766
    5. ')' → logprob: -13.750125885009766
    6. '-' → logprob: -15.687625885009766
    7. '```' → logprob: -16.000125885009766
    8. '   ' → logprob: -16.250125885009766
    9. '۱' → logprob: -16.625125885009766
    10. 'i' → logprob: -17.062625885009766

Token 76: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08604130148887634
    2. ' -' → logprob: -3.086041212081909
    3. ',' → logprob: -3.586041212081909
    4. ',-' → logprob: -4.961041450500488
    5. '):' → logprob: -6.461041450500488
    6. ' ,' → logprob: -8.836041450500488
    7. ')' → logprob: -9.086041450500488
    8. '-,' → logprob: -9.711041450500488
    9. ' ,-' → logprob: -9.836041450500488
    10. '):
' → logprob: -10.586041450500488

Token 77: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.383610725402832
    2. '+' → logprob: -1.883610725402832
    3. '   ' → logprob: -1.883610725402832
    4. ' ' → logprob: -2.008610725402832
    5. '    ' → logprob: -2.133610725402832
    6. '       ' → logprob: -2.383610725402832
    7. ' :' → logprob: -3.008610725402832
    8. '<|end|>' → logprob: -3.633610725402832
    9. ')' → logprob: -5.258610725402832
    10. '  ' → logprob: -5.883610725402832

Token 78: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6372316479682922
    2. '    ' → logprob: -2.2622315883636475
    3. ' ' → logprob: -2.3872315883636475
    4. ' if' → logprob: -2.6372315883636475
    5. '+' → logprob: -2.7622315883636475
    6. ':' → logprob: -3.6372315883636475
    7. '       ' → logprob: -3.8872315883636475
    8. '  ' → logprob: -4.012231826782227
    9. 'if' → logprob: -4.012231826782227
    10. '<|end|>' → logprob: -4.512231826782227

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22919924557209015
    2. '=' → logprob: -1.7291992902755737
    3. 'istance' → logprob: -3.979199171066284
    4. 'ist' → logprob: -4.854199409484863
    5. 'x' → logprob: -9.104199409484863
    6. '_' → logprob: -9.104199409484863
    7. 'ef' → logprob: -9.479199409484863
    8. ' ' → logprob: -9.479199409484863
    9. 'max' → logprob: -9.604199409484863
    10. 'elta' → logprob: -9.979199409484863

Token 80: ' x' (ID: 1215)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.0031044483184814
    2. 'math' → logprob: -1.0031044483184814
    3. 'x' → logprob: -2.1281044483184814
    4. '(math' → logprob: -2.8781044483184814
    5. ' (' → logprob: -3.5031044483184814
    6. ' x' → logprob: -3.7531044483184814
    7. '(x' → logprob: -4.128104209899902
    8. 'abs' → logprob: -4.878104209899902
    9. '(' → logprob: -5.253104209899902
    10. '2' → logprob: -5.753104209899902

Token 81: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005562512087635696
    2. '[i' → logprob: -7.750556468963623
    3. '[' → logprob: -9.375555992126465
    4. 'j' → logprob: -10.500555992126465
    5. '[d' → logprob: -12.500555992126465
    6. '	j' → logprob: -13.625555992126465
    7. '[x' → logprob: -14.250555992126465
    8. ' [' → logprob: -14.625555992126465
    9. '[q' → logprob: -14.625555992126465
    10. '[k' → logprob: -14.750555992126465

Token 82: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04130132868885994
    2. ']+' → logprob: -3.6663012504577637
    3. '+' → logprob: -4.916301250457764
    4. ')' → logprob: -5.041301250457764
    5. '}' → logprob: -7.916301250457764
    6. ' +' → logprob: -8.166301727294922
    7. ')+' → logprob: -8.541301727294922
    8. ' ]' → logprob: -8.916301727294922
    9. '']' → logprob: -10.791301727294922
    10. '])' → logprob: -11.041301727294922

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5233305096626282
    2. ' +' → logprob: -0.8983305096626282
    3. ' ' → logprob: -9.273330688476562
    4. '+r' → logprob: -10.648330688476562
    5. '+x' → logprob: -10.898330688476562
    6. '>' → logprob: -11.148330688476562
    7. '   ' → logprob: -12.273330688476562
    8. ']+' → logprob: -12.273330688476562
    9. '<|end|>' → logprob: -12.398330688476562
    10. ')' → logprob: -12.523330688476562

Token 84: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015706203877925873
    2. ' ' → logprob: -4.2657060623168945
    3. ' math' → logprob: -7.0157060623168945
    4. 'math' → logprob: -7.3907060623168945
    5. '(math' → logprob: -12.015706062316895
    6. '(' → logprob: -12.015706062316895
    7. '   ' → logprob: -12.015706062316895
    8. '  ' → logprob: -13.140706062316895
    9. '```' → logprob: -13.140706062316895
    10. ')' → logprob: -14.015706062316895

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002573163714259863
    2. ' ' → logprob: -6.127573013305664
    3. 'math' → logprob: -8.252573013305664
    4. ' math' → logprob: -9.127573013305664
    5. '(math' → logprob: -11.752573013305664
    6. '(' → logprob: -12.127573013305664
    7. '```' → logprob: -13.752573013305664
    8. '   ' → logprob: -13.877573013305664
    9. '  ' → logprob: -14.002573013305664
    10. 'cmath' → logprob: -14.627573013305664

Token 86: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023255378007888794
    2. '*' → logprob: -3.7732553482055664
    3. '*Math' → logprob: -12.023255348205566
    4. ' ' → logprob: -14.148255348205566
    5. '*object' → logprob: -14.148255348205566
    6. '<|end|>' → logprob: -14.398255348205566
    7. '.' → logprob: -14.898255348205566
    8. '**' → logprob: -14.898255348205566
    9. '*s' → logprob: -15.273255348205566
    10. ' ' → logprob: -15.398255348205566

Token 87: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.08034216612577438
    2. ' math' → logprob: -2.5803420543670654
    3. '(math' → logprob: -6.5803422927856445
    4. '<|end|>' → logprob: -10.330342292785645
    5. '/math' → logprob: -11.705342292785645
    6. '.math' → logprob: -12.080342292785645
    7. 'cmath' → logprob: -12.205342292785645
    8. '```' → logprob: -12.330342292785645
    9. ' ' → logprob: -13.205342292785645
    10. 'sqrt' → logprob: -13.455342292785645

Token 88: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -5.955703818472102e-05
    2. 'sqrt' → logprob: -9.750059127807617
    3. '.' → logprob: -14.750059127807617
    4. '.Sqrt' → logprob: -15.250059127807617
    5. '```' → logprob: -15.250059127807617
    6. '.atan' → logprob: -16.375059127807617
    7. '.pow' → logprob: -16.875059127807617
    8. '.ceil' → logprob: -17.000059127807617
    9. '.r' → logprob: -17.000059127807617
    10. 'qrt' → logprob: -17.250059127807617

Token 89: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.06197698414325714
    2. '(' → logprob: -2.811976909637451
    3. '((' → logprob: -12.81197738647461
    4. 'r' → logprob: -13.06197738647461
    5. '(
' → logprob: -13.43697738647461
    6. '(R' → logprob: -14.18697738647461
    7. ' (' → logprob: -14.68697738647461
    8. '(

' → logprob: -15.56197738647461
    9. '<|end|>' → logprob: -15.56197738647461
    10. '('' → logprob: -15.93697738647461

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20282769203186035
    2. '[j' → logprob: -1.7028276920318604
    3. '[' → logprob: -6.577827453613281
    4. '[r' → logprob: -11.702827453613281
    5. '[
' → logprob: -13.452827453613281
    6. ')' → logprob: -13.577827453613281
    7. 'i' → logprob: -13.577827453613281
    8. '[I' → logprob: -13.702827453613281
    9. '[m' → logprob: -13.827827453613281
    10. '```' → logprob: -14.202827453613281

Token 91: ']' (ID: 60)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03295398876070976
    2. '[' → logprob: -3.657953977584839
    3. '[r' → logprob: -6.282954216003418
    4. '*' → logprob: -6.282954216003418
    5. '[i' → logprob: -6.532954216003418
    6. ']' → logprob: -7.657954216003418
    7. '[q' → logprob: -8.282954216003418
    8. '[*' → logprob: -8.532954216003418
    9. ')' → logprob: -8.907954216003418
    10. '```' → logprob: -9.532954216003418

Token 92: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01141843106597662
    2. '[' → logprob: -5.136418342590332
    3. ' *' → logprob: -5.886418342590332
    4. '[j' → logprob: -6.386418342590332
    5. '*r' → logprob: -7.761418342590332
    6. '[r' → logprob: -9.261418342590332
    7. '*j' → logprob: -9.261418342590332
    8. ')' → logprob: -9.511418342590332
    9. '```' → logprob: -9.761418342590332
    10. '[i' → logprob: -9.886418342590332

Token 93: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0024889763444662094
    2. ' r' → logprob: -6.00248908996582
    3. '(r' → logprob: -12.37748908996582
    4. '   ' → logprob: -12.75248908996582
    5. ')' → logprob: -13.12748908996582
    6. ' ' → logprob: -13.25248908996582
    7. '	r' → logprob: -14.00248908996582
    8. '[r' → logprob: -14.62748908996582
    9. '(' → logprob: -15.87748908996582
    10. '[' → logprob: -16.12748908996582

Token 94: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002354832977289334
    2. ']' → logprob: -9.375235557556152
    3. '[' → logprob: -9.875235557556152
    4. '```' → logprob: -10.250235557556152
    5. '])' → logprob: -10.875235557556152
    6. '][' → logprob: -11.000235557556152
    7. 'j' → logprob: -11.375235557556152
    8. '[i' → logprob: -11.375235557556152
    9. ')' → logprob: -14.250235557556152
    10. '   ' → logprob: -14.375235557556152

Token 95: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.28553304076194763
    2. ')' → logprob: -1.41053307056427
    3. ']' → logprob: -5.7855329513549805
    4. ')])' → logprob: -7.9105329513549805
    5. ')]' → logprob: -8.03553295135498
    6. '))' → logprob: -8.16053295135498
    7. '])
' → logprob: -9.78553295135498
    8. ']))' → logprob: -10.03553295135498
    9. '）' → logprob: -10.16053295135498
    10. '])]' → logprob: -10.28553295135498

Token 96: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3185281455516815
    2. ' ' → logprob: -2.318528175354004
    3. 'if' → logprob: -2.693528175354004
    4. '+' → logprob: -3.318528175354004
    5. ')' → logprob: -4.568528175354004
    6. ' +' → logprob: -4.693528175354004
    7. '   ' → logprob: -4.943528175354004
    8. ',' → logprob: -4.943528175354004
    9. '  ' → logprob: -5.068528175354004
    10. '=' → logprob: -5.443528175354004

Token 97: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6318981647491455
    2. ' if' → logprob: -1.0068981647491455
    3. '
' → logprob: -2.3818981647491455
    4. '\n' → logprob: -6.006897926330566
    5. '    
' → logprob: -6.381897926330566
    6. ')
' → logprob: -6.506897926330566
    7. '   ' → logprob: -6.506897926330566
    8. ' 
' → logprob: -7.631897926330566
    9. ' ' → logprob: -7.756897926330566
    10. '  
' → logprob: -8.006897926330566

Token 98: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.05617429316043854
    2. 'd' → logprob: -2.9311742782592773
    3. ' x' → logprob: -6.806174278259277
    4. 'x' → logprob: -8.806174278259277
    5. ' ' → logprob: -10.681174278259277
    6. ' ' → logprob: -12.056174278259277
    7. '    ' → logprob: -12.431174278259277
    8. ' max' → logprob: -15.056174278259277
    9. '	d' → logprob: -15.181174278259277
    10. '>d' → logprob: -15.806174278259277

Token 99: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.043015290051698685
    2. ' >' → logprob: -3.168015241622925
    3. '>x' → logprob: -11.668015480041504
    4. ' ' → logprob: -12.543015480041504
    5. '&gt' → logprob: -14.293015480041504
    6. '>

' → logprob: -14.293015480041504
    7. '>
' → logprob: -14.418015480041504
    8. '>d' → logprob: -14.793015480041504
    9. '>b' → logprob: -15.668015480041504
    10. ' ' → logprob: -15.918015480041504

Token 100: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.023254914209246635
    2. ' max' → logprob: -3.773254871368408
    3. 'x' → logprob: -11.648255348205566
    4. ' x' → logprob: -14.273255348205566
    5. '	max' → logprob: -16.52325439453125
    6. '=max' → logprob: -18.14825439453125
    7. '(max' → logprob: -18.27325439453125
    8. 'm' → logprob: -18.39825439453125
    9. ' ' → logprob: -18.77325439453125
    10. '   ' → logprob: -19.14825439453125

Token 101: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.250000953674316
    3. 'pos' → logprob: -16.875
    4. 'Pos' → logprob: -16.875
    5. '_POS' → logprob: -18.375
    6. '_Pos' → logprob: -18.75
    7. '_p' → logprob: -18.875
    8. '(pos' → logprob: -19.0
    9. '(Pos' → logprob: -19.5
    10. '[pos' → logprob: -19.5

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02644299529492855
    2. ':
' → logprob: -3.6514430046081543
    3. '):
' → logprob: -10.151442527770996
    4. 'max' → logprob: -10.901442527770996
    5. '):' → logprob: -11.151442527770996
    6. ':max' → logprob: -11.151442527770996
    7. ':

' → logprob: -11.401442527770996
    8. ' :' → logprob: -11.526442527770996
    9. '<|end|>' → logprob: -12.151442527770996
    10. 'x' → logprob: -12.276442527770996

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03108646720647812
    2. ':' → logprob: -3.6560864448547363
    3. '               ' → logprob: -6.781086444854736
    4. ':
' → logprob: -6.906086444854736
    5. 'max' → logprob: -7.031086444854736
    6. ' max' → logprob: -7.531086444854736
    7. 'x' → logprob: -8.531086921691895
    8. '       ' → logprob: -9.031086921691895
    9. '=' → logprob: -9.156086921691895
    10. '            
' → logprob: -9.406086921691895

Token 104: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.659408450126648
    2. '               ' → logprob: -1.284408450126648
    3. 'max' (adapté à ' max') → logprob: -2.0344085693359375
    4. '           ' → logprob: -2.6594085693359375
    5. '       ' → logprob: -6.9094085693359375
    6. '            ' → logprob: -7.2844085693359375
    7. '                   ' → logprob: -7.6594085693359375
    8. '                ' → logprob: -7.7844085693359375
    9. ' d' → logprob: -7.7844085693359375
    10. 'd' → logprob: -7.9094085693359375

Token 105: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.869017852295656e-06
    2. 'pos' → logprob: -12.625006675720215
    3. 'Pos' → logprob: -12.625006675720215
    4. '_' → logprob: -16.12500762939453
    5. '_POS' → logprob: -17.37500762939453
    6. '[pos' → logprob: -17.87500762939453
    7. '_position' → logprob: -18.37500762939453
    8. ' Pos' → logprob: -18.37500762939453
    9. '_Pos' → logprob: -18.50000762939453
    10. '	pos' → logprob: -18.62500762939453

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023340515792369843
    2. '=' → logprob: -3.7733404636383057
    3. '=d' → logprob: -9.273340225219727
    4. ' ' → logprob: -13.898340225219727
    5. 'd' → logprob: -16.398340225219727
    6. ' d' → logprob: -16.898340225219727
    7. ' =
' → logprob: -17.023340225219727
    8. '[' → logprob: -18.523340225219727
    9. '＝' → logprob: -18.523340225219727
    10. '    ' → logprob: -18.648340225219727

Token 107: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4740775227546692
    2. 'd' → logprob: -0.9740775227546692
    3. ' ' → logprob: -15.599077224731445
    4. '	d' → logprob: -15.849077224731445
    5. ' ' → logprob: -15.849077224731445
    6. ')d' → logprob: -17.724077224731445
    7. '_d' → logprob: -17.849077224731445
    8. '>d' → logprob: -18.599077224731445
    9. '```' → logprob: -18.724077224731445
    10. '`' → logprob: -18.849077224731445

Token 108: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5296521782875061
    2. '
' → logprob: -2.0296521186828613
    3. '    
' → logprob: -2.6546521186828613
    4. ' 
' → logprob: -2.7796521186828613
    5. '  
' → logprob: -3.1546521186828613
    6. 'x' → logprob: -3.5296521186828613
    7. ')' → logprob: -3.7796521186828613
    8. ' ' → logprob: -3.9046521186828613
    9. '   
' → logprob: -4.404652118682861
    10. '<|end|>' → logprob: -5.654652118682861

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16770479083061218
    2. ' 
' → logprob: -2.9177048206329346
    3. 'x' → logprob: -3.5427048206329346
    4. '
' → logprob: -3.9177048206329346
    5. '    
' → logprob: -4.0427045822143555
    6. '  
' → logprob: -4.5427045822143555
    7. ' x' → logprob: -5.0427045822143555
    8. ' ' → logprob: -5.0427045822143555
    9. '   
' → logprob: -5.4177045822143555
    10. ')' → logprob: -6.7927045822143555

Token 110: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15276478230953217
    2. 'x' (adapté à ' x') → logprob: -2.2777647972106934
    3. ')' → logprob: -4.402764797210693
    4. ' ' → logprob: -4.902764797210693
    5. ' x' → logprob: -4.902764797210693
    6. '    
' → logprob: -5.277764797210693
    7. ' 
' → logprob: -6.152764797210693
    8. '  
' → logprob: -6.777764797210693
    9. ']' → logprob: -7.277764797210693
    10. '   
' → logprob: -7.402764797210693

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005543439765460789
    2. '[' → logprob: -7.50055456161499
    3. '[j' → logprob: -14.625554084777832
    4. '[I' → logprob: -14.625554084777832
    5. '[x' → logprob: -16.00055503845215
    6. '[...]' → logprob: -16.50055503845215
    7. 'i' → logprob: -16.87555503845215
    8. '\[' → logprob: -17.00055503845215
    9. '[int' → logprob: -17.12555503845215
    10. '[index' → logprob: -17.25055503845215

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005204828456044197
    2. ' ]' → logprob: -6.005204677581787
    3. '=' → logprob: -6.505204677581787
    4. ' =' → logprob: -7.005204677581787
    5. ']=' → logprob: -8.130205154418945
    6. ')' → logprob: -11.130205154418945
    7. '[' → logprob: -11.755205154418945
    8. ' ' → logprob: -13.630205154418945
    9. ']+=' → logprob: -13.755205154418945
    10. '+' → logprob: -14.505205154418945

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009115827269852161
    2. ' =' → logprob: -7.000911712646484
    3. '+=' → logprob: -17.000911712646484
    4. '=max' → logprob: -17.000911712646484
    5. '=int' → logprob: -18.250911712646484
    6. '=

' → logprob: -18.625911712646484
    7. '.=' → logprob: -18.750911712646484
    8. '=}' → logprob: -18.875911712646484
    9. '＝' → logprob: -19.000911712646484
    10. '=i' → logprob: -20.000911712646484

Token 114: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0024758970830589533
    2. ' max' → logprob: -6.002475738525391
    3. '[max' → logprob: -16.25247573852539
    4. '(max' → logprob: -16.87747573852539
    5. 'm' → logprob: -17.25247573852539
    6. 'math' → logprob: -18.00247573852539
    7. '-max' → logprob: -18.50247573852539
    8. 'int' → logprob: -18.50247573852539
    9. 'float' → logprob: -18.62747573852539
    10. ' ' → logprob: -19.00247573852539

Token 115: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.125000953674316
    3. '_po' → logprob: -16.375001907348633
    4. '_p' → logprob: -16.500001907348633
    5. 'pos' → logprob: -16.750001907348633
    6. 'Pos' → logprob: -17.125001907348633
    7. '_POS' → logprob: -18.500001907348633
    8. ' _' → logprob: -19.000001907348633
    9. '_Pos' → logprob: -19.375001907348633
    10. '```' → logprob: -20.000001907348633

Token 116: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003433165606111288
    2. '<|end|>' → logprob: -6.3784332275390625
    3. '
' → logprob: -7.3784332275390625
    4. 'for' → logprob: -7.7534332275390625
    5. ' print' → logprob: -8.628433227539062
    6. '  
' → logprob: -8.878433227539062
    7. '    
' → logprob: -8.878433227539062
    8. ')' → logprob: -9.503433227539062
    9. ' 
' → logprob: -10.253433227539062
    10. ' ' → logprob: -10.753433227539062

Token 117: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011591427959501743
    2. 'for' → logprob: -4.51159143447876
    3. ' print' → logprob: -8.886590957641602
    4. ' for' → logprob: -9.136590957641602
    5. '
' → logprob: -9.761590957641602
    6. ' ' → logprob: -9.761590957641602
    7. ')' → logprob: -10.011590957641602
    8. '<|end|>' → logprob: -10.636590957641602
    9. ' 
' → logprob: -10.761590957641602
    10. '[' → logprob: -10.761590957641602

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.63277667760849
    2. ' =' → logprob: -0.75777667760849
    3. ':' → logprob: -9.757776260375977
    4. '_' → logprob: -10.507776260375977
    5. 'print' → logprob: -10.757776260375977
    6. ')' → logprob: -11.007776260375977
    7. '.' → logprob: -11.007776260375977
    8. '[:]' → logprob: -11.632776260375977
    9. ',' → logprob: -11.757776260375977
    10. 's' → logprob: -11.757776260375977

Token 119: ' max' (ID: 2999)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19864323735237122
    2. 'max' → logprob: -2.198643207550049
    3. ' x' → logprob: -3.323643207550049
    4. ' max' → logprob: -3.948643207550049
    5. ''' → logprob: -4.448643207550049
    6. '"' → logprob: -6.448643207550049
    7. '"x' → logprob: -8.948643684387207
    8. ' '' → logprob: -9.073643684387207
    9. '[max' → logprob: -9.198643684387207
    10. ''x' → logprob: -9.323643684387207

Token 120: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011068572290241718
    2. '(' → logprob: -4.511068344116211
    3. 'x' → logprob: -11.761068344116211
    4. '(max' → logprob: -12.011068344116211
    5. '_pos' → logprob: -12.636068344116211
    6. '_x' → logprob: -13.636068344116211
    7. '(
' → logprob: -14.011068344116211
    8. '(result' → logprob: -14.261068344116211
    9. '```' → logprob: -15.386068344116211
    10. '_' → logprob: -15.511068344116211

Token 121: '[i' (ID: 1768)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009774863719940186
    2. ')
' → logprob: -4.634774684906006
    3. ' )' → logprob: -11.759775161743164
    4. ')
' → logprob: -12.384775161743164
    5. ')

' → logprob: -12.634775161743164
    6. '()' → logprob: -14.134775161743164
    7. '+' → logprob: -14.259775161743164
    8. ')+' → logprob: -14.509775161743164
    9. '))' → logprob: -14.634775161743164
    10. ' )
' → logprob: -15.134775161743164

Token 122: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026327306404709816
    2. '])' → logprob: -6.0026326179504395
    3. ' )' → logprob: -9.002633094787598
    4. ')])' → logprob: -11.752633094787598
    5. '))' → logprob: -11.877633094787598
    6. '})' → logprob: -12.752633094787598
    7. ' ])' → logprob: -12.877633094787598
    8. ')+' → logprob: -13.002633094787598
    9. ' ' → logprob: -13.002633094787598
    10. ')
' → logprob: -13.252633094787598

Token 123: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007007609237916768
    2. ' )' → logprob: -8.000700950622559
    3. '+' → logprob: -8.750700950622559
    4. ')+' → logprob: -9.625700950622559
    5. ' +' → logprob: -10.250700950622559
    6. '))' → logprob: -10.875700950622559
    7. ',' → logprob: -11.000700950622559
    8. ' ' → logprob: -11.375700950622559
    9. ')
' → logprob: -11.375700950622559
    10. '-' → logprob: -11.625700950622559

Token 124: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014191831462085247
    2. ' r' → logprob: -4.264191627502441
    3. ' ' → logprob: -10.889191627502441
    4. ')' → logprob: -12.389191627502441
    5. '[r' → logprob: -13.514191627502441
    6. '	r' → logprob: -13.764191627502441
    7. '  ' → logprob: -14.639191627502441
    8. '*r' → logprob: -14.764191627502441
    9. '   ' → logprob: -14.889191627502441
    10. '(r' → logprob: -15.139191627502441

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. ')' → logprob: -12.750004768371582
    3. '(i' → logprob: -13.125004768371582
    4. '[' → logprob: -16.7500057220459
    5. ']' → logprob: -17.7500057220459
    6. '[-' → logprob: -18.2500057220459
    7. '[N' → logprob: -18.3750057220459
    8. '[j' → logprob: -18.5000057220459
    9. '```' → logprob: -18.5000057220459
    10. ' [' → logprob: -19.1250057220459

Token 126: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0676237940788269
    2. ' for' → logprob: -2.8176238536834717
    3. 'for' → logprob: -5.942623615264893
    4. ']' → logprob: -6.317623615264893
    5. '])' → logprob: -7.067623615264893
    6. ' )' → logprob: -8.69262409210205
    7. '[i' → logprob: -8.94262409210205
    8. ' ' → logprob: -10.56762409210205
    9. '	for' → logprob: -12.06762409210205
    10. '  ' → logprob: -12.19262409210205

Token 127: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002199263544753194
    2. ' for' → logprob: -6.502199172973633
    3. 'for' → logprob: -7.752199172973633
    4. ' )' → logprob: -8.502199172973633
    5. ')
' → logprob: -10.127199172973633
    6. ' ' → logprob: -12.002199172973633
    7. ')`' → logprob: -12.127199172973633
    8. '))' → logprob: -12.502199172973633
    9. '()' → logprob: -13.002199172973633
    10. '[i' → logprob: -13.502199172973633

Token 128: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008619658648967743
    2. ' i' → logprob: -4.758619785308838
    3. 'range' → logprob: -12.75861930847168
    4. ' range' → logprob: -13.13361930847168
    5. ' in' → logprob: -15.50861930847168
    6. 'in' → logprob: -16.75861930847168
    7. '	i' → logprob: -18.13361930847168
    8. ' ' → logprob: -19.38361930847168
    9. '  ' → logprob: -19.50861930847168
    10. ',i' → logprob: -19.63361930847168

Token 129: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9405784010887146
    2. 'in' → logprob: -1.1905784606933594
    3. ' in' → logprob: -1.4405784606933594
    4. ' range' → logprob: -2.6905784606933594
    5. '(range' → logprob: -7.065578460693359
    6. ')' → logprob: -9.81557846069336
    7. '	range' → logprob: -12.19057846069336
    8. ' xrange' → logprob: -13.44057846069336
    9. '_range' → logprob: -13.56557846069336
    10. ',' → logprob: -14.06557846069336

Token 130: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -19.000709533691406
    4. '	range' → logprob: -20.000709533691406
    5. '   ' → logprob: -21.250709533691406
    6. ' ' → logprob: -22.375709533691406
    7. '  ' → logprob: -23.125709533691406
    8. 'rang' → logprob: -23.375709533691406
    9. ')' → logprob: -23.500709533691406
    10. 'r' → logprob: -24.750709533691406

Token 131: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.745069499127567e-05
    2. '(' → logprob: -9.75008773803711
    3. 'N' → logprob: -11.00008773803711
    4. '(len' → logprob: -11.37508773803711
    5. '(
' → logprob: -14.25008773803711
    6. '(n' → logprob: -15.62508773803711
    7. ' (' → logprob: -16.50008773803711
    8. ')' → logprob: -17.25008773803711
    9. 'len' → logprob: -17.87508773803711
    10. '   ' → logprob: -18.25008773803711

Token 132: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003181159496307373
    2. '))' → logprob: -5.753180980682373
    3. ' )' → logprob: -13.753181457519531
    4. ')))' → logprob: -13.753181457519531
    5. ')
' → logprob: -14.003181457519531
    6. ')`' → logprob: -15.128181457519531
    7. ')**' → logprob: -16.87818145751953
    8. '])' → logprob: -17.25318145751953
    9. ')}' → logprob: -17.62818145751953
    10. ')#' → logprob: -18.25318145751953

Token 133: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004648696631193161
    2. '
' → logprob: -8.00046443939209
    3. ' print' → logprob: -9.50046443939209
    4. ')' → logprob: -10.25046443939209
    5. '<|end|>' → logprob: -12.62546443939209
    6. ')
' → logprob: -13.00046443939209
    7. '.print' → logprob: -13.12546443939209
    8. '  
' → logprob: -13.12546443939209
    9. '```' → logprob: -13.37546443939209
    10. 'for' → logprob: -13.37546443939209

Token 134: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5844947695732117
    2. ' r' → logprob: -1.0844948291778564
    3. ' max' → logprob: -2.9594948291778564
    4. ' ' → logprob: -3.3344948291778564
    5. 'max' → logprob: -4.459494590759277
    6. '0' → logprob: -6.459494590759277
    7. '1' → logprob: -6.459494590759277
    8. ' math' → logprob: -7.084494590759277
    9. '10' → logprob: -7.834494590759277
    10. 'math' → logprob: -8.334494590759277

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03991549462080002
    2. '[i' → logprob: -3.2899155616760254
    3. '[N' → logprob: -7.039915561676025
    4. '[-' → logprob: -7.289915561676025
    5. '0' → logprob: -8.164915084838867
    6. '[
' → logprob: -12.164915084838867
    7. ')' → logprob: -12.289915084838867
    8. '```' → logprob: -12.289915084838867
    9. '(' → logprob: -12.414915084838867
    10. 'i' → logprob: -12.914915084838867

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6384687423706055
    2. 'N' → logprob: -1.3884687423706055
    3. '-' → logprob: -1.5134687423706055
    4. ']' → logprob: -7.0134687423706055
    5. 'i' → logprob: -7.0134687423706055
    6. ' -' → logprob: -9.013468742370605
    7. '(N' → logprob: -9.263468742370605
    8. '(' → logprob: -9.513468742370605
    9. ')' → logprob: -10.013468742370605
    10. '-N' → logprob: -10.138468742370605

Token 137: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1054253011243418e-05
    2. ')
' → logprob: -11.000020980834961
    3. ' )' → logprob: -13.375020980834961
    4. '))' → logprob: -14.500020980834961
    5. ')`' → logprob: -14.750020980834961
    6. '```' → logprob: -15.250020980834961
    7. ')}' → logprob: -15.500020980834961
    8. '}' → logprob: -15.500020980834961
    9. ')
' → logprob: -15.500020980834961
    10. ')**' → logprob: -15.875020980834961

Token 138: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015396231319755316
    2. ' print' → logprob: -7.626539707183838
    3. '<|end|>' → logprob: -7.626539707183838
    4. '
' → logprob: -7.751539707183838
    5. ')' → logprob: -9.87653923034668
    6. 'for' → logprob: -11.00153923034668
    7. '#' → logprob: -11.25153923034668
    8. '#print' → logprob: -11.25153923034668
    9. '[' → logprob: -11.62653923034668
    10. '```' → logprob: -11.87653923034668

Token 139: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016119851497933269
    2. '(result' → logprob: -6.876612186431885
    3. '(x' → logprob: -7.626612186431885
    4. '(max' → logprob: -10.126611709594727
    5. '('' → logprob: -10.751611709594727
    6. '()' → logprob: -11.001611709594727
    7. '("("' → logprob: -11.876611709594727
    8. '(
' → logprob: -13.626611709594727
    9. '(`' → logprob: -13.751611709594727
    10. '("' → logprob: -13.876611709594727

Token 140: '"{' (ID: 27510)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03606392815709114
    2. '(x' → logprob: -4.161064147949219
    3. '({' → logprob: -4.161064147949219
    4. '{' → logprob: -6.036064147949219
    5. '("' → logprob: -7.536064147949219
    6. '("{' → logprob: -7.911064147949219
    7. '(result' → logprob: -8.661064147949219
    8. '"' → logprob: -8.661064147949219
    9. '()' → logprob: -8.911064147949219
    10. '"{' → logprob: -8.911064147949219

Token 141: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -3.273621405242011e-05
    2. ' result' → logprob: -10.875032424926758
    3. 'x' → logprob: -11.750032424926758
    4. 'max' → logprob: -12.250032424926758
    5. '(result' → logprob: -15.000032424926758
    6. '[result' → logprob: -15.750032424926758
    7. 'res' → logprob: -16.250032424926758
    8. 'math' → logprob: -16.750032424926758
    9. '
' → logprob: -16.875032424926758
    10. ''' → logprob: -17.000032424926758

Token 142: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.0011841575615108013
    2. '}")' → logprob: -7.251183986663818
    3. '.' → logprob: -8.501184463500977
    4. ':' → logprob: -9.001184463500977
    5. '}' → logprob: -9.126184463500977
    6. ')' → logprob: -10.501184463500977
    7. ' :.' → logprob: -12.001184463500977
    8. '")' → logprob: -13.626184463500977
    9. ':f' → logprob: -14.001184463500977
    10. '})' → logprob: -14.001184463500977

Token 143: '8' (ID: 23)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2082360982894897
    2. '6' → logprob: -1.3332360982894897
    3. '9' → logprob: -1.8332360982894897
    4. '7' → logprob: -1.8332360982894897
    5. '8' → logprob: -2.9582362174987793
    6. '3' → logprob: -3.7082362174987793
    7. '2' → logprob: -4.083236217498779
    8. '12' → logprob: -4.833236217498779
    9. '15' → logprob: -4.958236217498779
    10. '5' → logprob: -5.583236217498779

Token 144: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.128163257315464e-07
    2. 'g' → logprob: -15.75
    3. 'e' → logprob: -16.125
    4. 'lf' → logprob: -16.875
    5. 'Lf' → logprob: -20.375
    6. '}' → logprob: -20.75
    7. ' f' → logprob: -21.0
    8. '6' → logprob: -21.625
    9. '```' → logprob: -21.875
    10. '
' → logprob: -21.875

Token 145: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.12723968923091888
    2. '")' → logprob: -2.37723970413208
    3. ')")' → logprob: -3.62723970413208
    4. ')' → logprob: -9.502239227294922
    5. ')}' → logprob: -13.252239227294922
    6. '}' → logprob: -13.377239227294922
    7. '})' → logprob: -13.877239227294922
    8. ' )' → logprob: -14.502239227294922
    9. '}")
' → logprob: -14.752239227294922
    10. '")}' → logprob: -14.877239227294922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 143
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 123
Précision stricte (1ère position): 43.36%
Précision adaptée (1ère position): 44.06%
Précision (top 10): 86.01%
================================================================================
