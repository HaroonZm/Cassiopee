================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Card:
    _rank_values = {
        '2': 2, '3': 3, '4': 4, '5': 5, '6': 6,
        '7': 7, '8': 8, '9': 9, 'T': 10,
        'J': 10, 'Q': 10, 'K': 10,
        'A': 11
    }

    def __init__(self, rank):
        self.rank = rank

    @property
    def value(self):
        return self._rank_values[self.rank]

    @property
    def is_ace(self):
        return self.rank == 'A'


class Hand:
    def __init__(self, cards=None):
        self.cards = cards if cards else []

    def add_card(self, card):
        self.cards.append(card)

    def values(self):
        total = sum(card.value for card in self.cards)
        aces = sum(1 for card in self.cards if card.is_ace)
        # Adjust aces from 11 to 1 while total > 21
        while total > 21 and aces > 0:
            total -= 10
            aces -= 1
        return total

    def soft_17(self):
        # Soft 17 means total 17 with one ace counted as 11
        total = sum(card.value for card in self.cards)
        aces = sum(1 for card in self.cards if card.is_ace)
        # if total == 17 and at least one ace still counted as 11
        while aces > 0:
            if total == 17:
                return True
            total -= 10
            aces -= 1
        return False

    def is_blackjack(self):
        # Blackjack is exactly two cards: an ace and a ten-value card
        if len(self.cards) != 2:
            return False
        ranks = [card.rank for card in self.cards]
        return ('A' in ranks) and any(r in ranks for r in ['T', 'J', 'Q', 'K'])

    def is_bust(self):
        return self.values() > 21


class Deck:
    def __init__(self, cards):
        self.cards = cards
        self.position = 0

    def draw(self):
        if self.position >= len(self.cards):
            raise RuntimeError("No more cards to draw")
        card = Card(self.cards[self.position])
        self.position += 1
        return card


class Dealer:
    def __init__(self, initial_cards, draw_pile_cards):
        self.hand = Hand([Card(c) for c in initial_cards])
        self.draw_pile = Deck(draw_pile_cards)

    def play(self):
        # Check initial blackjack
        if self.hand.is_blackjack():
            return "blackjack"

        # Play according to rules:
        # Hits if score <=16 or soft 17
        while True:
            score = self.hand.values()
            if score < 17:
                self.hand.add_card(self.draw_pile.draw())
            elif score == 17 and self.hand.soft_17():
                self.hand.add_card(self.draw_pile.draw())
            else:
                break

        if self.hand.is_bust():
            return "bust"
        else:
            return str(self.hand.values())


class BlackjackGameSimulator:
    def __init__(self, test_cases):
        # test_cases: list of tuples (initial_cards, draw_pile_cards)
        self.test_cases = test_cases

    def simulate(self):
        results = []
        for initial_cards, draw_pile_cards in self.test_cases:
            dealer = Dealer(initial_cards, draw_pile_cards)
            results.append(dealer.play())
        return results


def parse_input():
    import sys
    input_lines = sys.stdin.read().strip().split('\n')
    N = int(input_lines[0])
    test_cases = []
    idx = 1
    for _ in range(N):
        initial_cards = input_lines[idx].split()
        draw_pile_cards = input_lines[idx+1].split()
        idx += 2
        test_cases.append((initial_cards, draw_pile_cards))
    return test_cases


def main():
    test_cases = parse_input()
    simulator = BlackjackGameSimulator(test_cases)
    results = simulator.simulate()
    for result in results:
        print(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Card' (ID: 9958)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13931703567504883
    2. '(' → logprob: -2.264317035675049
    3. '   ' → logprob: -4.014317035675049
    4. '```' → logprob: -5.639317035675049
    5. '<|end|>' → logprob: -7.389317035675049
    6. ' ' → logprob: -7.389317035675049
    7. '.' → logprob: -7.889317035675049
    8. '():' → logprob: -8.01431655883789
    9. '(
' → logprob: -8.13931655883789
    10. ''' → logprob: -8.26431655883789

Token 4: ' _' (ID: 1175)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3308199644088745
    2. '```' → logprob: -2.080820083618164
    3. '    ' → logprob: -2.705820083618164
    4. ' pass' → logprob: -3.955820083618164
    5. 'def' → logprob: -4.205820083618164
    6. ' def' → logprob: -4.455820083618164
    7. 'pass' → logprob: -4.705820083618164
    8. '`' → logprob: -5.080820083618164
    9. 'class' → logprob: -5.330820083618164
    10. '\' → logprob: -5.330820083618164

Token 5: 'rank' (ID: 30162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36432304978370667
    2. '_value' → logprob: -2.489323139190674
    3. 'value' → logprob: -2.739323139190674
    4. '_s' → logprob: -3.364323139190674
    5. '_rank' → logprob: -3.489323139190674
    6. '_id' → logprob: -3.614323139190674
    7. '_type' → logprob: -4.364323139190674
    8. '_name' → logprob: -4.989323139190674
    9. ' _' → logprob: -5.239323139190674
    10. 'init' → logprob: -5.364323139190674

Token 6: '_values' (ID: 20393)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06366261839866638
    2. ' =' → logprob: -3.063662528991699
    3. '_' → logprob: -4.438662528991699
    4. 's' → logprob: -6.563662528991699
    5. ' ' → logprob: -7.063662528991699
    6. ')' → logprob: -8.3136625289917
    7. '   ' → logprob: -8.3136625289917
    8. ',' → logprob: -8.8136625289917
    9. '  ' → logprob: -9.5636625289917
    10. '<|end|>' → logprob: -10.4386625289917

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603866070508957
    2. '=' → logprob: -1.910386562347412
    3. ' ' → logprob: -9.53538703918457
    4. '[' → logprob: -9.66038703918457
    5. '   ' → logprob: -11.53538703918457
    6. '  ' → logprob: -11.91038703918457
    7. '<|end|>' → logprob: -13.53538703918457
    8. ',' → logprob: -13.66038703918457
    9. ':' → logprob: -13.91038703918457
    10. '.' → logprob: -14.16038703918457

Token 8: ' {
' (ID: 405)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2115301787853241
    2. '{'' → logprob: -2.2115302085876465
    3. ' {' → logprob: -3.3365302085876465
    4. '{"' → logprob: -3.4615302085876465
    5. ' {'' → logprob: -4.7115302085876465
    6. '{
' → logprob: -5.7115302085876465
    7. '{}' → logprob: -6.9615302085876465
    8. ' {"' → logprob: -7.8365302085876465
    9. '   ' → logprob: -7.9615302085876465
    10. ' ' → logprob: -9.336529731750488

Token 9: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05902380496263504
    2. '"' → logprob: -3.559023857116699
    3. ''A' → logprob: -3.684023857116699
    4. '   ' → logprob: -6.434023857116699
    5. '       ' → logprob: -7.184023857116699
    6. '"A' → logprob: -7.434023857116699
    7. ''\' → logprob: -8.0590238571167
    8. '4' → logprob: -9.3090238571167
    9. '1' → logprob: -9.6840238571167
    10. ''S' → logprob: -9.6840238571167

Token 10: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.08009044080972672
    2. ''A' → logprob: -2.8300905227661133
    3. '   ' → logprob: -4.330090522766113
    4. '"' → logprob: -5.580090522766113
    5. '"A' → logprob: -7.330090522766113
    6. '       ' → logprob: -8.705090522766113
    7. '2' → logprob: -8.955090522766113
    8. ' '' → logprob: -10.205090522766113
    9. ' ' → logprob: -12.455090522766113
    10. '  ' → logprob: -12.455090522766113

Token 11: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17220763862133026
    2. ''' → logprob: -2.5472075939178467
    3. 'A' → logprob: -2.6722075939178467
    4. ''A' → logprob: -4.547207832336426
    5. ''T' → logprob: -9.297207832336426
    6. 'Ace' → logprob: -10.797207832336426
    7. ''\' → logprob: -11.172207832336426
    8. '':' → logprob: -11.297207832336426
    9. 'Two' → logprob: -11.922207832336426
    10. 'a' → logprob: -12.172207832336426

Token 12: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.08002474159002304
    2. ''' → logprob: -2.5800247192382812
    3. '2' → logprob: -7.955024719238281
    4. ' ':' → logprob: -7.955024719238281
    5. '0' → logprob: -8.455024719238281
    6. ':' → logprob: -9.080024719238281
    7. '':'' → logprob: -9.830024719238281
    8. '3' → logprob: -11.580024719238281
    9. '6' → logprob: -11.580024719238281
    10. '7' → logprob: -12.080024719238281

Token 13: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20146986842155457
    2. ' ' → logprob: -1.701469898223877
    3. ''' → logprob: -10.201469421386719
    4. '1' → logprob: -12.201469421386719
    5. ' '' → logprob: -12.451469421386719
    6. '4' → logprob: -12.951469421386719
    7. '   ' → logprob: -12.951469421386719
    8. '0' → logprob: -13.076469421386719
    9. '  ' → logprob: -13.576469421386719
    10. '    ' → logprob: -15.201469421386719

Token 14: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000770436367020011
    2. ' ' → logprob: -7.750770568847656
    3. ''' → logprob: -8.000770568847656
    4. '1' → logprob: -13.375770568847656
    5. '"' → logprob: -14.625770568847656
    6. ' '' → logprob: -14.625770568847656
    7. '   ' → logprob: -14.875770568847656
    8. '(' → logprob: -15.125770568847656
    9. '0' → logprob: -15.375770568847656
    10. '```' → logprob: -15.750770568847656

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004969134461134672
    2. ',
' → logprob: -7.625496864318848
    3. '}' → logprob: -12.625496864318848
    4. ',

' → logprob: -12.750496864318848
    5. ',
' → logprob: -13.625496864318848
    6. ' ,' → logprob: -14.375496864318848
    7. ',...' → logprob: -14.750496864318848
    8. '   ' → logprob: -15.875496864318848
    9. '4' → logprob: -16.375497817993164
    10. ',#' → logprob: -16.500497817993164

Token 16: ' '' (ID: 461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7947474718093872
    2. ''' → logprob: -1.4197474718093872
    3. '   ' → logprob: -1.7947474718093872
    4. ',
' → logprob: -2.7947473526000977
    5. '       ' → logprob: -3.4197473526000977
    6. '',' → logprob: -4.294747352600098
    7. '    ' → logprob: -4.419747352600098
    8. ' ' → logprob: -4.919747352600098
    9. ' ,' → logprob: -5.169747352600098
    10. '','' → logprob: -6.794747352600098

Token 17: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4736459888808895e-05
    2. '7' → logprob: -12.000014305114746
    3. ''' → logprob: -12.875014305114746
    4. '2' → logprob: -13.500014305114746
    5. '4' → logprob: -13.750014305114746
    6. ' ' → logprob: -13.875014305114746
    7. '5' → logprob: -14.375014305114746
    8. '۳' → logprob: -15.375014305114746
    9. 'A' → logprob: -15.562514305114746
    10. '

' → logprob: -15.687514305114746

Token 18: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.017754659056663513
    2. ''' → logprob: -4.267754554748535
    3. '4' → logprob: -6.517754554748535
    4. '<|end|>' → logprob: -6.892754554748535
    5. ':' → logprob: -7.017754554748535
    6. '',' → logprob: -9.267754554748535
    7. ''>' → logprob: -10.392754554748535
    8. '<|end|>' → logprob: -10.892754554748535
    9. '':'' → logprob: -11.392754554748535
    10. ',' → logprob: -11.517754554748535

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6720489859580994
    2. ''' → logprob: -0.7970489859580994
    3. '3' → logprob: -3.922049045562744
    4. '4' → logprob: -4.297049045562744
    5. ' '' → logprob: -5.297049045562744
    6. '<|end|>' → logprob: -9.297048568725586
    7. '"' → logprob: -9.922048568725586
    8. ' ' → logprob: -10.047048568725586
    9. '2' → logprob: -10.797048568725586
    10. ')' → logprob: -11.547048568725586

Token 20: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005880602402612567
    2. ' ' → logprob: -7.5005879402160645
    3. ''' → logprob: -10.375588417053223
    4. '4' → logprob: -12.500588417053223
    5. ' '' → logprob: -17.375587463378906
    6. '```' → logprob: -17.750587463378906
    7. '2' → logprob: -17.875587463378906
    8. ')' → logprob: -18.750587463378906
    9. '"' → logprob: -19.500587463378906
    10. '   ' → logprob: -19.625587463378906

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013776143314316869
    2. ',
' → logprob: -6.626377582550049
    3. '   ' → logprob: -11.001378059387207
    4. ',

' → logprob: -11.376378059387207
    5. ' ,' → logprob: -11.626378059387207
    6. ',
' → logprob: -12.126378059387207
    7. '}' → logprob: -12.501378059387207
    8. ','' → logprob: -13.001378059387207
    9. '       ' → logprob: -13.876378059387207
    10. '4' → logprob: -14.126378059387207

Token 22: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20811596512794495
    2. ' '' → logprob: -2.083116054534912
    3. '       ' → logprob: -2.833116054534912
    4. ' ' → logprob: -6.083116054534912
    5. '4' → logprob: -6.833116054534912
    6. '        ' → logprob: -7.208116054534912
    7. '   ' → logprob: -8.833115577697754
    8. '<|end|>' → logprob: -9.208115577697754
    9. '    ' → logprob: -9.708115577697754
    10. ' ' → logprob: -10.708115577697754

Token 23: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.16022920608520508
    2. ''' → logprob: -1.910229206085205
    3. ' ' → logprob: -12.410228729248047
    4. ' '' → logprob: -14.160228729248047
    5. '"' → logprob: -16.785228729248047
    6. '   ' → logprob: -17.410228729248047
    7. '',' → logprob: -17.910228729248047
    8. '`' → logprob: -17.910228729248047
    9. '' → logprob: -18.160228729248047
    10. '’' → logprob: -18.160228729248047

Token 24: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0266337301582098
    2. ''' → logprob: -3.6516337394714355
    3. ':' → logprob: -8.526633262634277
    4. '',' → logprob: -9.151633262634277
    5. '4' → logprob: -11.026633262634277
    6. '<|end|>' → logprob: -12.651633262634277
    7. '```' → logprob: -12.901633262634277
    8. '5' → logprob: -13.526633262634277
    9. ',' → logprob: -13.651633262634277
    10. ' ':' → logprob: -14.276633262634277

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32159632444381714
    2. '4' → logprob: -1.321596384048462
    3. ''' → logprob: -4.821596145629883
    4. ' '' → logprob: -8.321596145629883
    5. ' ' → logprob: -13.696596145629883
    6. '```' → logprob: -14.196596145629883
    7. '5' → logprob: -15.446596145629883
    8. '3' → logprob: -15.821596145629883
    9. '2' → logprob: -16.071596145629883
    10. '"' → logprob: -16.196596145629883

Token 26: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1602362096309662
    2. ''' → logprob: -1.9102362394332886
    3. ' ' → logprob: -11.410236358642578
    4. ' '' → logprob: -13.910236358642578
    5. '5' → logprob: -17.035236358642578
    6. '"' → logprob: -17.160236358642578
    7. '2' → logprob: -17.285236358642578
    8. '   ' → logprob: -18.035236358642578
    9. '```' → logprob: -18.910236358642578
    10. ''A' → logprob: -19.535236358642578

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005393316387198865
    2. ',
' → logprob: -8.500539779663086
    3. '   ' → logprob: -9.125539779663086
    4. ' ,' → logprob: -9.375539779663086
    5. '}' → logprob: -9.625539779663086
    6. '',' → logprob: -10.375539779663086
    7. '       ' → logprob: -10.875539779663086
    8. ','' → logprob: -11.625539779663086
    9. ',

' → logprob: -11.750539779663086
    10. ''' → logprob: -12.250539779663086

Token 28: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05002701282501221
    2. ' '' → logprob: -3.5500268936157227
    3. '       ' → logprob: -3.9250268936157227
    4. ' ' → logprob: -8.425026893615723
    5. '   ' → logprob: -10.300026893615723
    6. '        ' → logprob: -10.800026893615723
    7. '    ' → logprob: -10.800026893615723
    8. '5' → logprob: -10.800026893615723
    9. '`' → logprob: -12.925026893615723
    10. '      ' → logprob: -13.050026893615723

Token 29: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.06196925416588783
    2. ''' → logprob: -2.81196928024292
    3. ' ' → logprob: -13.686968803405762
    4. ' '' → logprob: -15.311968803405762
    5. '"' → logprob: -16.561969757080078
    6. ''s' → logprob: -17.561969757080078
    7. '53' → logprob: -18.061969757080078
    8. '6' → logprob: -18.561969757080078
    9. '```' → logprob: -18.561969757080078
    10. '4' → logprob: -18.811969757080078

Token 30: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.03899458050727844
    2. ''' → logprob: -3.288994550704956
    3. ':' → logprob: -7.413994789123535
    4. '6' → logprob: -8.913994789123535
    5. '',' → logprob: -9.163994789123535
    6. '<|end|>' → logprob: -9.913994789123535
    7. '```' → logprob: -11.038994789123535
    8. '':'' → logprob: -11.413994789123535
    9. ',' → logprob: -12.163994789123535
    10. '''' → logprob: -12.413994789123535

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24747024476528168
    2. '5' → logprob: -1.7474702596664429
    3. ''' → logprob: -3.1224701404571533
    4. ' '' → logprob: -6.997470378875732
    5. '4' → logprob: -10.497469902038574
    6. '6' → logprob: -10.997469902038574
    7. '"' → logprob: -12.997469902038574
    8. '2' → logprob: -13.872469902038574
    9. '  ' → logprob: -14.622469902038574
    10. '```' → logprob: -14.997469902038574

Token 32: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.009791743941605091
    2. ''' → logprob: -4.634791851043701
    3. ' ' → logprob: -10.384791374206543
    4. '6' → logprob: -12.384791374206543
    5. '4' → logprob: -15.384791374206543
    6. '2' → logprob: -15.509791374206543
    7. ' '' → logprob: -15.759791374206543
    8. '"' → logprob: -16.38479232788086
    9. '```' → logprob: -16.75979232788086
    10. '   ' → logprob: -16.88479232788086

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020830852736253291
    2. ',
' → logprob: -9.250207901000977
    3. '}' → logprob: -10.250207901000977
    4. '   ' → logprob: -10.375207901000977
    5. '',' → logprob: -10.750207901000977
    6. ' ,' → logprob: -11.125207901000977
    7. ''' → logprob: -12.875207901000977
    8. ','' → logprob: -13.000207901000977
    9. ',
' → logprob: -13.125207901000977
    10. '       ' → logprob: -13.875207901000977

Token 34: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008901957422494888
    2. '       ' → logprob: -4.883902072906494
    3. ' '' → logprob: -6.758902072906494
    4. ' ' → logprob: -10.008901596069336
    5. '   ' → logprob: -10.133901596069336
    6. '    ' → logprob: -11.633901596069336
    7. '6' → logprob: -11.758901596069336
    8. '        ' → logprob: -11.883901596069336
    9. ''s' → logprob: -12.383901596069336
    10. '`' → logprob: -12.383901596069336

Token 35: '6' (ID: 21)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6931501626968384
    2. '6' → logprob: -0.6931501626968384
    3. '"' → logprob: -14.318150520324707
    4. '7' → logprob: -14.443150520324707
    5. ' '' → logprob: -14.443150520324707
    6. ' ' → logprob: -14.818150520324707
    7. '}' → logprob: -15.943150520324707
    8. '```' → logprob: -16.19314956665039
    9. '`' → logprob: -16.44314956665039
    10. '',' → logprob: -16.94314956665039

Token 36: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.38921424746513367
    2. ''' → logprob: -1.139214277267456
    3. ':' → logprob: -6.264214038848877
    4. '7' → logprob: -8.389214515686035
    5. '',' → logprob: -9.389214515686035
    6. '6' → logprob: -10.264214515686035
    7. ' ':' → logprob: -10.514214515686035
    8. ',' → logprob: -11.014214515686035
    9. '':'' → logprob: -11.514214515686035
    10. '')' → logprob: -12.139214515686035

Token 37: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06198493763804436
    2. '6' → logprob: -2.8119850158691406
    3. ''' → logprob: -11.06198501586914
    4. '7' → logprob: -14.06198501586914
    5. ' '' → logprob: -14.68698501586914
    6. ' ' → logprob: -16.06198501586914
    7. '```' → logprob: -16.18698501586914
    8. '`' → logprob: -17.93698501586914
    9. '  ' → logprob: -18.12448501586914
    10. '66' → logprob: -18.12448501586914

Token 38: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0009570781840011477
    2. ' ' → logprob: -7.000957012176514
    3. ''' → logprob: -10.000957489013672
    4. '7' → logprob: -16.500957489013672
    5. ' '' → logprob: -16.500957489013672
    6. '```' → logprob: -18.625957489013672
    7. '2' → logprob: -18.875957489013672
    8. '5' → logprob: -19.125957489013672
    9. ''s' → logprob: -19.125957489013672
    10. '"' → logprob: -19.125957489013672

Token 39: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003932576219085604
    2. '}' → logprob: -8.50039291381836
    3. ',
' → logprob: -9.00039291381836
    4. '',' → logprob: -10.62539291381836
    5. ''' → logprob: -11.00039291381836
    6. '   ' → logprob: -11.12539291381836
    7. ' ,' → logprob: -12.50039291381836
    8. ',

' → logprob: -12.87539291381836
    9. '       ' → logprob: -13.50039291381836
    10. ','' → logprob: -14.00039291381836

Token 40: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02286524325609207
    2. ' '' → logprob: -3.8978652954101562
    3. '       ' → logprob: -6.272865295410156
    4. '7' → logprob: -8.522865295410156
    5. ' ' → logprob: -9.272865295410156
    6. '   ' → logprob: -10.022865295410156
    7. ',' → logprob: -10.522865295410156
    8. '',' → logprob: -10.647865295410156
    9. ''s' → logprob: -11.522865295410156
    10. '    ' → logprob: -12.147865295410156

Token 41: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.001029831008054316
    2. ' '' → logprob: -7.626029968261719
    3. '       ' → logprob: -7.626029968261719
    4. '7' → logprob: -10.376029968261719
    5. '   ' → logprob: -11.376029968261719
    6. ' ' → logprob: -11.876029968261719
    7. '"' → logprob: -14.501029968261719
    8. '  ' → logprob: -14.626029968261719
    9. '`' → logprob: -14.626029968261719
    10. '      ' → logprob: -14.751029968261719

Token 42: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.20141597092151642
    2. ''' → logprob: -1.701416015625
    3. ' '' → logprob: -13.951416015625
    4. ' ' → logprob: -14.076416015625
    5. '')' → logprob: -15.951416015625
    6. '"' → logprob: -16.076416015625
    7. '',' → logprob: -16.201416015625
    8. '':' → logprob: -16.576416015625
    9. '`' → logprob: -16.826416015625
    10. '}' → logprob: -16.826416015625

Token 43: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.20195771753787994
    2. ''' → logprob: -1.7019577026367188
    3. ':' → logprob: -8.326957702636719
    4. '<|end|>' → logprob: -8.701957702636719
    5. '',' → logprob: -9.826957702636719
    6. '':'' → logprob: -10.951957702636719
    7. ''>' → logprob: -11.201957702636719
    8. ' ':' → logprob: -11.451957702636719
    9. '```' → logprob: -11.826957702636719
    10. '')' → logprob: -11.951957702636719

Token 44: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6974663138389587
    2. '7' → logprob: -1.1974663734436035
    3. ''' → logprob: -1.6974663734436035
    4. ' '' → logprob: -4.0724663734436035
    5. '"' → logprob: -12.197465896606445
    6. ' ' → logprob: -12.197465896606445
    7. ''s' → logprob: -14.572465896606445
    8. '`' → logprob: -14.572465896606445
    9. '  ' → logprob: -14.697465896606445
    10. '6' → logprob: -15.322465896606445

Token 45: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014461515471339226
    2. ''' → logprob: -4.264461517333984
    3. ' ' → logprob: -8.139461517333984
    4. ' '' → logprob: -12.014461517333984
    5. '"' → logprob: -18.139461517333984
    6. '`' → logprob: -18.764461517333984
    7. '  ' → logprob: -19.139461517333984
    8. '   ' → logprob: -19.139461517333984
    9. '')' → logprob: -19.639461517333984
    10. '```' → logprob: -19.764461517333984

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012677322374656796
    2. '',' → logprob: -7.376267910003662
    3. ' ,' → logprob: -7.876267910003662
    4. ''' → logprob: -9.251267433166504
    5. ',
' → logprob: -9.501267433166504
    6. ':' → logprob: -10.626267433166504
    7. '}' → logprob: -10.626267433166504
    8. '   ' → logprob: -11.251267433166504
    9. ','' → logprob: -11.251267433166504
    10. '       ' → logprob: -12.126267433166504

Token 47: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6938302516937256
    2. ' '' → logprob: -0.6938302516937256
    3. ' ' → logprob: -7.818830490112305
    4. '       ' → logprob: -9.068830490112305
    5. '8' → logprob: -9.193830490112305
    6. '<|end|>' → logprob: -10.443830490112305
    7. '        ' → logprob: -11.443830490112305
    8. '   ' → logprob: -12.693830490112305
    9. '"' → logprob: -12.818830490112305
    10. ',' → logprob: -13.068830490112305

Token 48: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.38687777519226074
    2. ''' → logprob: -1.1368777751922607
    3. ' '' → logprob: -13.13687801361084
    4. '`' → logprob: -13.51187801361084
    5. ' ' → logprob: -13.63687801361084
    6. '9' → logprob: -14.26187801361084
    7. '"' → logprob: -15.01187801361084
    8. '7' → logprob: -15.13687801361084
    9. '6' → logprob: -16.136877059936523
    10. '```' → logprob: -16.261877059936523

Token 49: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.525014340877533
    2. ''' → logprob: -0.900014340877533
    3. ':' → logprob: -6.650014400482178
    4. '<|end|>' → logprob: -7.650014400482178
    5. '':'' → logprob: -10.15001392364502
    6. '',' → logprob: -10.77501392364502
    7. ' ':' → logprob: -11.02501392364502
    8. '```' → logprob: -11.40001392364502
    9. ''>' → logprob: -11.90001392364502
    10. ''''' → logprob: -12.77501392364502

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.027100592851638794
    2. '8' → logprob: -3.6521005630493164
    3. ''' → logprob: -7.777100563049316
    4. '7' → logprob: -7.902100563049316
    5. ' '' → logprob: -11.902100563049316
    6. '<|end|>' → logprob: -13.027100563049316
    7. ' ' → logprob: -14.777100563049316
    8. '  ' → logprob: -15.277100563049316
    9. ''s' → logprob: -15.777100563049316
    10. '6' → logprob: -16.027101516723633

Token 51: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00466093048453331
    2. ''' → logprob: -5.8796610832214355
    3. ' ' → logprob: -6.3796610832214355
    4. '7' → logprob: -8.754660606384277
    5. ' '' → logprob: -14.129660606384277
    6. ''s' → logprob: -16.629661560058594
    7. '78' → logprob: -17.879661560058594
    8. '9' → logprob: -17.879661560058594
    9. '')' → logprob: -18.129661560058594
    10. '"' → logprob: -18.254661560058594

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0081811947748065
    2. '',' → logprob: -5.383181095123291
    3. ''' → logprob: -6.258181095123291
    4. '}' → logprob: -7.258181095123291
    5. ',
' → logprob: -8.00818157196045
    6. ' ,' → logprob: -8.38318157196045
    7. '   ' → logprob: -8.63318157196045
    8. '       ' → logprob: -9.00818157196045
    9. ','' → logprob: -10.38318157196045
    10. ',

' → logprob: -11.50818157196045

Token 53: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03144913911819458
    2. '       ' → logprob: -3.90644907951355
    3. ' '' → logprob: -5.656449317932129
    4. ' ' → logprob: -5.656449317932129
    5. '9' → logprob: -6.156449317932129
    6. '   ' → logprob: -6.656449317932129
    7. '  ' → logprob: -9.656449317932129
    8. '    ' → logprob: -9.656449317932129
    9. '',' → logprob: -9.781449317932129
    10. '<|end|>' → logprob: -9.781449317932129

Token 54: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00019042797794099897
    2. ''' → logprob: -8.750190734863281
    3. ' ' → logprob: -10.375190734863281
    4. ' '' → logprob: -14.750190734863281
    5. '8' → logprob: -16.62519073486328
    6. ''}' → logprob: -17.25019073486328
    7. '')' → logprob: -17.25019073486328
    8. '```' → logprob: -17.62519073486328
    9. '   ' → logprob: -17.87519073486328
    10. '  ' → logprob: -17.93769073486328

Token 55: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.28146642446517944
    2. ''' → logprob: -1.4064664840698242
    3. '<|end|>' → logprob: -9.031466484069824
    4. '',' → logprob: -9.156466484069824
    5. ':' → logprob: -9.781466484069824
    6. ' ':' → logprob: -11.281466484069824
    7. '```' → logprob: -12.656466484069824
    8. '':'' → logprob: -12.656466484069824
    9. '')' → logprob: -12.781466484069824
    10. ''>' → logprob: -13.031466484069824

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21087168157100677
    2. ''' → logprob: -1.835871696472168
    3. '9' → logprob: -3.835871696472168
    4. ' '' → logprob: -4.710871696472168
    5. '7' → logprob: -10.835871696472168
    6. ' ' → logprob: -11.210871696472168
    7. '"' → logprob: -11.460871696472168
    8. 'space' → logprob: -11.710871696472168
    9. '  ' → logprob: -12.710871696472168
    10. '<|end|>' → logprob: -12.835871696472168

Token 57: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00033153212280012667
    2. ' ' → logprob: -8.12533187866211
    3. ''' → logprob: -10.25033187866211
    4. ' '' → logprob: -16.50033187866211
    5. '   ' → logprob: -17.00033187866211
    6. '  ' → logprob: -17.62533187866211
    7. '7' → logprob: -18.25033187866211
    8. ')' → logprob: -18.37533187866211
    9. '```' → logprob: -18.50033187866211
    10. '۹' → logprob: -18.75033187866211

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001201062579639256
    2. '',' → logprob: -7.751201152801514
    3. '}' → logprob: -7.876201152801514
    4. ',
' → logprob: -8.751200675964355
    5. ''' → logprob: -9.126200675964355
    6. ' ,' → logprob: -9.876200675964355
    7. '   ' → logprob: -10.251200675964355
    8. '       ' → logprob: -11.376200675964355
    9. ','' → logprob: -11.376200675964355
    10. ',

' → logprob: -11.751200675964355

Token 59: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002819544170051813
    2. ' '' → logprob: -8.500282287597656
    3. '       ' → logprob: -10.000282287597656
    4. '   ' → logprob: -10.875282287597656
    5. ''A' → logprob: -11.750282287597656
    6. '10' → logprob: -13.500282287597656
    7. ' ' → logprob: -13.500282287597656
    8. ''T' → logprob: -14.250282287597656
    9. '',' → logprob: -14.375282287597656
    10. '"' → logprob: -15.000282287597656

Token 60: 'T' (ID: 51)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2108009308576584
    2. '1' → logprob: -1.7108008861541748
    3. ''' → logprob: -5.210801124572754
    4. 'T' → logprob: -5.585801124572754
    5. ''T' → logprob: -9.210801124572754
    6. '0' → logprob: -10.960801124572754
    7. '')' → logprob: -12.335801124572754
    8. ''''' → logprob: -13.335801124572754
    9. '```' → logprob: -13.585801124572754
    10. 'J' → logprob: -13.710801124572754

Token 61: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0342838391661644
    2. '':' → logprob: -3.4092838764190674
    3. '')' → logprob: -8.909283638000488
    4. '<|end|>' → logprob: -9.284283638000488
    5. ''o' → logprob: -9.534283638000488
    6. 'e' → logprob: -9.909283638000488
    7. '',' → logprob: -10.284283638000488
    8. ''}' → logprob: -10.409283638000488
    9. ':' → logprob: -10.534283638000488
    10. ''r' → logprob: -10.534283638000488

Token 62: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.632687509059906
    2. ' ' → logprob: -0.757687509059906
    3. '1' → logprob: -9.38268756866455
    4. ''' → logprob: -14.00768756866455
    5. '```' → logprob: -14.25768756866455
    6. '   ' → logprob: -14.44518756866455
    7. '  ' → logprob: -14.88268756866455
    8. '	' → logprob: -14.94518756866455
    9. '0' → logprob: -15.07018756866455
    10. '100' → logprob: -15.38268756866455

Token 63: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.030229885131120682
    2. ' ' → logprob: -3.5302298069000244
    3. '1' → logprob: -7.6552300453186035
    4. ''' → logprob: -12.780229568481445
    5. '```' → logprob: -14.030229568481445
    6. '0' → logprob: -14.405229568481445
    7. '  ' → logprob: -14.530229568481445
    8. '   ' → logprob: -15.155229568481445
    9. '	' → logprob: -15.655229568481445
    10. 'T' → logprob: -15.780229568481445

Token 64: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006699055666103959
    2. '}' → logprob: -8.000669479370117
    3. ',
' → logprob: -8.625669479370117
    4. ' ,' → logprob: -9.750669479370117
    5. '   ' → logprob: -10.000669479370117
    6. ','' → logprob: -10.750669479370117
    7. ''' → logprob: -11.375669479370117
    8. '',' → logprob: -11.375669479370117
    9. ',

' → logprob: -13.125669479370117
    10. '       ' → logprob: -13.125669479370117

Token 65: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011963017750531435
    2. '       ' → logprob: -7.126196384429932
    3. '   ' → logprob: -8.126195907592773
    4. ' '' → logprob: -10.376195907592773
    5. '}' → logprob: -10.501195907592773
    6. ''A' → logprob: -11.251195907592773
    7. ''}' → logprob: -12.251195907592773
    8. ' ' → logprob: -12.501195907592773
    9. '',' → logprob: -12.626195907592773
    10. ''T' → logprob: -12.751195907592773

Token 66: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.006195522844791412
    2. ''A' → logprob: -5.631195545196533
    3. ' '' → logprob: -6.006195545196533
    4. '       ' → logprob: -9.506195068359375
    5. '   ' → logprob: -10.131195068359375
    6. ' ' → logprob: -12.631195068359375
    7. ''C' → logprob: -13.006195068359375
    8. ''U' → logprob: -13.506195068359375
    9. ''T' → logprob: -13.756195068359375
    10. ''O' → logprob: -13.756195068359375

Token 67: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.0005547016044147313
    2. ''' → logprob: -7.50055456161499
    3. ' J' → logprob: -13.375555038452148
    4. '_J' → logprob: -16.87555503845215
    5. ',J' → logprob: -18.00055503845215
    6. '	J' → logprob: -18.37555503845215
    7. 'A' → logprob: -18.37555503845215
    8. ':J' → logprob: -19.37555503845215
    9. '.J' → logprob: -19.50055503845215
    10. ''A' → logprob: -19.50055503845215

Token 68: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.252553254365921
    2. ''' → logprob: -1.5025532245635986
    3. '<|end|>' → logprob: -7.877553462982178
    4. ':' → logprob: -8.50255298614502
    5. '',' → logprob: -11.12755298614502
    6. '```' → logprob: -12.37755298614502
    7. '':'' → logprob: -12.50255298614502
    8. ''>' → logprob: -12.75255298614502
    9. ' ':' → logprob: -12.87755298614502
    10. ''''' → logprob: -13.00255298614502

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029783355072140694
    2. '11' → logprob: -3.529783248901367
    3. '10' → logprob: -11.154783248901367
    4. ''' → logprob: -11.654783248901367
    5. '1' → logprob: -11.654783248901367
    6. '```' → logprob: -15.029783248901367
    7. '<|end|>' → logprob: -15.154783248901367
    8. ' ' → logprob: -15.904783248901367
    9. '"' → logprob: -16.279783248901367
    10. '  ' → logprob: -16.529783248901367

Token 70: '10' (ID: 702)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.005415300372987986
    2. ' ' → logprob: -5.255415439605713
    3. '1' → logprob: -8.630414962768555
    4. ''' → logprob: -13.380414962768555
    5. '10' → logprob: -14.380414962768555
    6. '```' → logprob: -14.880414962768555
    7. 'J' → logprob: -15.130414962768555
    8. '   ' → logprob: -17.130414962768555
    9. '"' → logprob: -17.255414962768555
    10. '  ' → logprob: -17.630414962768555

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001911432045744732
    2. ',
' → logprob: -9.000190734863281
    3. ' ,' → logprob: -10.125190734863281
    4. '',' → logprob: -11.375190734863281
    5. ',

' → logprob: -11.750190734863281
    6. '}' → logprob: -13.000190734863281
    7. ','' → logprob: -13.000190734863281
    8. '   ' → logprob: -13.875190734863281
    9. ''' → logprob: -14.000190734863281
    10. ',
' → logprob: -14.250190734863281

Token 72: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.23576155304908752
    2. ''' → logprob: -1.6107615232467651
    3. ' ' → logprob: -4.860761642456055
    4. 'Q' → logprob: -6.735761642456055
    5. ' Q' → logprob: -8.235761642456055
    6. '       ' → logprob: -8.235761642456055
    7. '    ' → logprob: -8.610761642456055
    8. '  ' → logprob: -9.235761642456055
    9. ' 
' → logprob: -9.235761642456055
    10. '`' → logprob: -9.735761642456055

Token 73: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -5.319370302458992e-06
    2. 'K' → logprob: -13.000005722045898
    3. ' Q' → logprob: -13.000005722045898
    4. 'J' → logprob: -15.500005722045898
    5. 'A' → logprob: -15.875005722045898
    6. '	Q' → logprob: -16.0000057220459
    7. '10' → logprob: -16.3750057220459
    8. '```' → logprob: -16.5000057220459
    9. ''' → logprob: -17.2500057220459
    10. '<Q' → logprob: -18.3750057220459

Token 74: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.20669755339622498
    2. ':' → logprob: -1.7066975831985474
    3. ''' → logprob: -5.831697463989258
    4. '<|end|>' → logprob: -6.331697463989258
    5. '10' → logprob: -8.081697463989258
    6. '```' → logprob: -9.581697463989258
    7. 'u' → logprob: -10.081697463989258
    8. '":' → logprob: -10.956697463989258
    9. '')' → logprob: -11.206697463989258
    10. '0' → logprob: -11.706697463989258

Token 75: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0699683353304863
    2. '10' → logprob: -2.6949682235717773
    3. '1' → logprob: -10.819968223571777
    4. ' ' → logprob: -12.819968223571777
    5. '  ' → logprob: -12.882468223571777
    6. '11' → logprob: -13.319968223571777
    7. '```' → logprob: -13.944968223571777
    8. ''' → logprob: -14.132468223571777
    9. '   ' → logprob: -14.882468223571777
    10. '"' → logprob: -15.069968223571777

Token 76: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.043258365243673325
    2. '1' → logprob: -3.1682584285736084
    3. ' ' → logprob: -8.293258666992188
    4. '11' → logprob: -12.793258666992188
    5. '```' → logprob: -12.918258666992188
    6. ''' → logprob: -13.543258666992188
    7. 'Q' → logprob: -14.543258666992188
    8. 'J' → logprob: -15.043258666992188
    9. '9' → logprob: -15.293258666992188
    10. '{'' → logprob: -15.543258666992188

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001358400477329269
    2. ',
' → logprob: -9.12513542175293
    3. '}' → logprob: -11.00013542175293
    4. ',

' → logprob: -12.37513542175293
    5. ' ,' → logprob: -12.62513542175293
    6. ',
' → logprob: -13.50013542175293
    7. ','' → logprob: -14.50013542175293
    8. '',' → logprob: -15.12513542175293
    9. ' ' → logprob: -16.25013542175293
    10. ''' → logprob: -16.50013542175293

Token 78: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9206804633140564
    2. ' '' → logprob: -0.9206804633140564
    3. ' ' → logprob: -2.295680522918701
    4. ',' → logprob: -3.170680522918701
    5. 'K' → logprob: -3.920680522918701
    6. '10' → logprob: -4.420680522918701
    7. '}' → logprob: -4.795680522918701
    8. ' ,' → logprob: -4.920680522918701
    9. ' }' → logprob: -5.295680522918701
    10. ' K' → logprob: -6.170680522918701

Token 79: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.8351892473874614e-05
    2. 'A' → logprob: -10.125048637390137
    3. ''' → logprob: -12.375048637390137
    4. ' K' → logprob: -13.125048637390137
    5. '10' → logprob: -13.750048637390137
    6. '1' → logprob: -15.625048637390137
    7. 'J' → logprob: -16.12504768371582
    8. '`' → logprob: -16.25004768371582
    9. '11' → logprob: -16.50004768371582
    10. '```' → logprob: -16.62504768371582

Token 80: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3692675530910492
    2. ':' → logprob: -1.6192675828933716
    3. ''' → logprob: -2.244267463684082
    4. ' ' → logprob: -6.369267463684082
    5. '10' → logprob: -6.369267463684082
    6. '```' → logprob: -7.869267463684082
    7. '0' → logprob: -7.994267463684082
    8. '1' → logprob: -8.744267463684082
    9. ' ':' → logprob: -9.369267463684082
    10. '":' → logprob: -9.619267463684082

Token 81: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029873251914978027
    2. ' ' → logprob: -3.5298733711242676
    3. '1' → logprob: -9.02987289428711
    4. '```' → logprob: -13.52987289428711
    5. '  ' → logprob: -15.40487289428711
    6. '`' → logprob: -15.40487289428711
    7. ''' → logprob: -15.65487289428711
    8. '}' → logprob: -15.77987289428711
    9. ' ' → logprob: -15.90487289428711
    10. '   ' → logprob: -16.15487289428711

Token 82: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1398757123970427e-05
    2. '1' → logprob: -11.750011444091797
    3. ' ' → logprob: -12.625011444091797
    4. '```' → logprob: -16.625011444091797
    5. ''' → logprob: -17.750011444091797
    6. '{'' → logprob: -19.125011444091797
    7. '   ' → logprob: -19.250011444091797
    8. '13' → logprob: -19.375011444091797
    9. '`' → logprob: -19.375011444091797
    10. ')' → logprob: -19.375011444091797

Token 83: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12794797122478485
    2. '}' → logprob: -2.127948045730591
    3. ',
' → logprob: -7.502947807312012
    4. '   ' → logprob: -7.877947807312012
    5. ' }' → logprob: -9.502947807312012
    6. ' ,' → logprob: -12.377947807312012
    7. ','' → logprob: -13.002947807312012
    8. '       ' → logprob: -13.377947807312012
    9. ',

' → logprob: -13.377947807312012
    10. ' ' → logprob: -13.752947807312012

Token 84: '       ' (ID: 309)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5174025893211365
    2. ''A' → logprob: -1.1424026489257812
    3. ''' → logprob: -3.0174026489257812
    4. '}' → logprob: -4.142402648925781
    5. 'A' → logprob: -4.642402648925781
    6. ' A' → logprob: -5.517402648925781
    7. '   ' → logprob: -5.642402648925781
    8. ' ' → logprob: -6.767402648925781
    9. ' }' → logprob: -7.767402648925781
    10. '10' → logprob: -8.017402648925781

Token 85: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.3344838619232178
    2. ''' (adapté à ' '') → logprob: -1.7094838619232178
    3. ' '' → logprob: -2.5844838619232178
    4. 'A' → logprob: -3.8344838619232178
    5. '}' → logprob: -5.959484100341797
    6. ' ' → logprob: -6.584484100341797
    7. ' A' → logprob: -6.709484100341797
    8. '   ' → logprob: -7.334484100341797
    9. '"A' → logprob: -9.334484100341797
    10. ' 
' → logprob: -9.584484100341797

Token 86: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.300083648762666e-05
    2. ''' → logprob: -10.625053405761719
    3. ''A' → logprob: -10.750053405761719
    4. '1' → logprob: -12.750053405761719
    5. ' A' → logprob: -12.750053405761719
    6. '10' → logprob: -14.000053405761719
    7. 'a' → logprob: -16.50005340576172
    8. '"A' → logprob: -16.75005340576172
    9. '7' → logprob: -16.87505340576172
    10. '	A' → logprob: -17.12505340576172

Token 87: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.011159711517393589
    2. ''' → logprob: -4.511159896850586
    3. ':' → logprob: -9.136159896850586
    4. ' ':' → logprob: -12.761159896850586
    5. '1' → logprob: -15.136159896850586
    6. ''>' → logprob: -15.261159896850586
    7. '":' → logprob: -15.886159896850586
    8. '4' → logprob: -16.511159896850586
    9. ''s' → logprob: -16.636159896850586
    10. '':'' → logprob: -16.886159896850586

Token 88: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5412888526916504
    2. '11' → logprob: -0.9162888526916504
    3. '14' → logprob: -4.54128885269165
    4. '1' → logprob: -4.91628885269165
    5. ' [' → logprob: -11.916288375854492
    6. '  ' → logprob: -13.166288375854492
    7. '15' → logprob: -13.416288375854492
    8. '[' → logprob: -13.541288375854492
    9. '10' → logprob: -13.791288375854492
    10. '   ' → logprob: -14.541288375854492

Token 89: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0038035265170037746
    2. '1' → logprob: -5.753803730010986
    3. '14' → logprob: -7.378803730010986
    4. ' ' → logprob: -13.878803253173828
    5. '10' → logprob: -15.378803253173828
    6. '15' → logprob: -17.753803253173828
    7. '   ' → logprob: -18.253803253173828
    8. '  ' → logprob: -18.753803253173828
    9. '[' → logprob: -18.878803253173828
    10. ''' → logprob: -19.003803253173828

Token 90: '
' (ID: 198)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0004058858612552285
    2. ',' → logprob: -8.250406265258789
    3. '   ' → logprob: -9.250406265258789
    4. ' }' → logprob: -10.250406265258789
    5. ',
' → logprob: -11.750406265258789
    6. '},' → logprob: -13.125406265258789
    7. '}
' → logprob: -13.250406265258789
    8. '
' → logprob: -14.500406265258789
    9. ' ' → logprob: -14.750406265258789
    10. '}

' → logprob: -15.500406265258789

Token 91: '   ' (ID: 271)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00029589756741188467
    2. ' }' → logprob: -8.500295639038086
    3. '   ' → logprob: -9.875295639038086
    4. ',' → logprob: -10.500295639038086
    5. '}
' → logprob: -12.125295639038086
    6. ' ' → logprob: -12.500295639038086
    7. ',
' → logprob: -12.625295639038086
    8. '}

' → logprob: -15.375295639038086
    9. '
' → logprob: -15.500295639038086
    10. '	' → logprob: -15.750295639038086

Token 92: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -2.15310683415737e-05
    2. ' }' → logprob: -11.125021934509277
    3. '}
' → logprob: -12.375021934509277
    4. ',' → logprob: -13.750021934509277
    5. ' ' → logprob: -14.125021934509277
    6. '}

' (adapté à ' }

') → logprob: -15.125021934509277
    7. '   ' → logprob: -15.250021934509277
    8. ',
' → logprob: -16.37502098083496
    9. '' → logprob: -16.62502098083496
    10. ']' → logprob: -17.12502098083496

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17199696600437164
    2. ' ' → logprob: -2.2969970703125
    3. 'def' → logprob: -3.5469970703125
    4. ' 
' → logprob: -4.2969970703125
    5. ' def' → logprob: -5.0469970703125
    6. '    
' → logprob: -5.7969970703125
    7. '    ' → logprob: -5.9219970703125
    8. '
' → logprob: -7.0469970703125
    9. '  ' → logprob: -7.7969970703125
    10. '     
' → logprob: -8.2969970703125

Token 94: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07981333136558533
    2. 'd' → logprob: -2.579813241958618
    3. 'de' → logprob: -7.204813480377197
    4. ' def' → logprob: -9.329813003540039
    5. '@' → logprob: -9.704813003540039
    6. '   ' → logprob: -11.454813003540039
    7. ' ' → logprob: -11.829813003540039
    8. ')' → logprob: -12.954813003540039
    9. '_' → logprob: -13.079813003540039
    10. ' de' → logprob: -13.329813003540039

Token 95: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5242505073547363
    2. ' __' → logprob: -0.8992505073547363
    3. ' _' → logprob: -7.774250507354736
    4. '_' → logprob: -7.899250507354736
    5. ' ' → logprob: -9.149250030517578
    6. '__' → logprob: -9.649250030517578
    7. ' space' → logprob: -10.774250030517578
    8. '  ' → logprob: -10.774250030517578
    9. ' init' → logprob: -10.774250030517578
    10. ' ‌' → logprob: -10.774250030517578

Token 96: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.25209957361221313
    2. 'i' → logprob: -1.5020995140075684
    3. 'ini' → logprob: -9.127099990844727
    4. 'in' → logprob: -10.252099990844727
    5. '_i' → logprob: -10.627099990844727
    6. '_init' → logprob: -14.127099990844727
    7. 'int' → logprob: -14.752099990844727
    8. '_' → logprob: -15.127099990844727
    9. 'inti' → logprob: -15.252099990844727
    10. 'initi' → logprob: -15.877099990844727

Token 97: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02806752733886242
    2. '<|end|>' → logprob: -4.278067588806152
    3. ' (' → logprob: -4.528067588806152
    4. '(self' → logprob: -5.903067588806152
    5. ' ' → logprob: -9.403067588806152
    6. '(
' → logprob: -9.778067588806152
    7. '<|end|>' → logprob: -9.903067588806152
    8. '_' → logprob: -11.403067588806152
    9. '(s' → logprob: -11.778067588806152
    10. 'self' → logprob: -11.778067588806152

Token 98: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00017982252757064998
    2. ' self' → logprob: -8.6251802444458
    3. '
' → logprob: -16.250179290771484
    4. 's' → logprob: -16.625179290771484
    5. '   ' → logprob: -17.125179290771484
    6. '       ' → logprob: -17.625179290771484
    7. '(self' → logprob: -18.000179290771484
    8. ' ' → logprob: -18.250179290771484
    9. '	self' → logprob: -18.375179290771484
    10. ')' → logprob: -19.000179290771484

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35635074973106384
    2. 'self' → logprob: -2.2313506603240967
    3. ' self' → logprob: -2.4813506603240967
    4. '<|end|>' → logprob: -3.1063506603240967
    5. ')' → logprob: -3.4813506603240967
    6. ' ,' → logprob: -3.9813506603240967
    7. ' ' → logprob: -4.856350898742676
    8. 's' → logprob: -5.856350898742676
    9. ',self' → logprob: -6.731350898742676
    10. ' )' → logprob: -7.106350898742676

Token 100: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -1.07499098777771
    2. ' self' → logprob: -1.44999098777771
    3. 'self' → logprob: -1.44999098777771
    4. 'rank' → logprob: -1.69999098777771
    5. 's' → logprob: -5.074991226196289
    6. ' suit' → logprob: -8.074991226196289
    7. ' s' → logprob: -8.824991226196289
    8. 'r' → logprob: -9.199991226196289
    9. ' r' → logprob: -10.949991226196289
    10. ' ' → logprob: -11.449991226196289

Token 101: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002624086628202349
    2. '<|end|>' → logprob: -8.875262260437012
    3. ')' → logprob: -9.625262260437012
    4. ' ,' → logprob: -10.125262260437012
    5. '):' → logprob: -11.750262260437012
    6. '<|end|>' → logprob: -12.875262260437012
    7. '‌,' → logprob: -13.625262260437012
    8. ':' → logprob: -13.625262260437012
    9. ',
' → logprob: -14.625262260437012
    10. ',char' → logprob: -15.125262260437012

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07265516370534897
    2. ':' → logprob: -2.947655200958252
    3. '    ' → logprob: -5.197655200958252
    4. ' ' → logprob: -5.322655200958252
    5. '   ' → logprob: -5.947655200958252
    6. ')' → logprob: -6.822655200958252
    7. '<|end|>' → logprob: -6.822655200958252
    8. ',' → logprob: -6.947655200958252
    9. '      ' → logprob: -8.197654724121094
    10. '     ' → logprob: -8.197654724121094

Token 103: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11573738604784012
    2. ' self' → logprob: -2.9907374382019043
    3. 'self' (adapté à ' self') → logprob: -3.4907374382019043
    4. ' ' → logprob: -3.8657374382019043
    5. '        ' → logprob: -5.615737438201904
    6. ' ' → logprob: -6.115737438201904
    7. '   ' → logprob: -7.865737438201904
    8. '    ' → logprob: -7.990737438201904
    9. ' 
' → logprob: -8.365736961364746
    10. '        
' → logprob: -9.115736961364746

Token 104: '.rank' (ID: 96793)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07894795387983322
    2. '.rank' → logprob: -2.5789480209350586
    3. '._' → logprob: -10.078948020935059
    4. '.r' → logprob: -11.453948020935059
    5. '.card' → logprob: -13.578948020935059
    6. ' .' → logprob: -13.953948020935059
    7. '.
' → logprob: -15.328948020935059
    8. '.radius' → logprob: -15.328948020935059
    9. '.score' → logprob: -15.453948020935059
    10. '.value' → logprob: -15.453948020935059

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5770521759986877
    2. '=' → logprob: -0.8270521759986877
    3. ' ' → logprob: -6.827052116394043
    4. '<|end|>' → logprob: -11.452052116394043
    5. '_' → logprob: -11.702052116394043
    6. ')' → logprob: -12.827052116394043
    7. ' =
' → logprob: -13.827052116394043
    8. ',' → logprob: -14.077052116394043
    9. 'space' → logprob: -14.077052116394043
    10. '  ' → logprob: -14.202052116394043

Token 106: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.011048289015889168
    2. 'rank' → logprob: -4.511048316955566
    3. '(rank' → logprob: -15.261048316955566
    4. ' ' → logprob: -15.511048316955566
    5. ' ' → logprob: -19.26104736328125
    6. '.rank' → logprob: -19.63604736328125
    7. '_rank' → logprob: -19.76104736328125
    8. 'r' → logprob: -19.88604736328125
    9. ' ranks' → logprob: -21.51104736328125
    10. 'Rank' → logprob: -21.76104736328125

Token 107: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9357343912124634
    2. '
' → logprob: -1.5607343912124634
    3. '<|end|>' → logprob: -1.8107343912124634
    4. ' ' → logprob: -2.435734272003174
    5. ' 
' → logprob: -3.060734272003174
    6. ':' → logprob: -3.435734272003174
    7. 'def' → logprob: -4.185734272003174
    8. '    
' → logprob: -4.185734272003174
    9. '  
' → logprob: -4.810734272003174
    10. '\' → logprob: -5.060734272003174

Token 109: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35834434628486633
    2. ' def' → logprob: -1.358344316482544
    3. ' ' → logprob: -3.983344316482544
    4. '   ' → logprob: -3.983344316482544
    5. '<|end|>' → logprob: -6.358344554901123
    6. ')' → logprob: -6.733344554901123
    7. '@property' → logprob: -6.733344554901123
    8. '    ' → logprob: -7.233344554901123
    9. '       ' → logprob: -7.983344554901123
    10. ':' → logprob: -8.233344078063965

Token 110: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.0505077987909317
    2. 'pro' → logprob: -3.3005077838897705
    3. 'proper' → logprob: -4.92550802230835
    4. 'pr' → logprob: -5.42550802230835
    5. 'p' → logprob: -7.80050802230835
    6. 'prop' → logprob: -8.425507545471191
    7. 'classmethod' → logprob: -9.925507545471191
    8. '@property' → logprob: -10.550507545471191
    9. 'staticmethod' → logprob: -10.800507545471191
    10. 'Proper' → logprob: -14.550507545471191

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25652268528938293
    2. 'def' → logprob: -1.5065226554870605
    3. ' def' → logprob: -7.0065226554870605
    4. '<|end|>' → logprob: -7.1315226554870605
    5. '    
' → logprob: -7.2565226554870605
    6. ' 
' → logprob: -7.5065226554870605
    7. '   ' → logprob: -7.5065226554870605
    8. '  
' → logprob: -8.006523132324219
    9. '\' → logprob: -8.256523132324219
    10. ' ' → logprob: -9.381523132324219

Token 112: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5818992257118225
    2. 'def' → logprob: -0.8318992257118225
    3. ' def' → logprob: -5.706899166107178
    4. '   ' → logprob: -6.706899166107178
    5. '    
' → logprob: -7.706899166107178
    6. '  
' → logprob: -8.581899642944336
    7. '\' → logprob: -8.706899642944336
    8. ' 
' → logprob: -8.956899642944336
    9. '<|end|>' → logprob: -8.956899642944336
    10. '
' → logprob: -9.456899642944336

Token 113: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.026503829285502434
    2. ' def' → logprob: -4.151504039764404
    3. 'value' → logprob: -4.901504039764404
    4. 'rank' → logprob: -5.901504039764404
    5. 'd' → logprob: -9.526503562927246
    6. ' value' → logprob: -9.776503562927246
    7. ' rank' → logprob: -10.026503562927246
    8. 'val' → logprob: -10.651503562927246
    9. '
' → logprob: -11.276503562927246
    10. '   ' → logprob: -11.651503562927246

Token 114: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.10277827084064484
    2. ' rank' → logprob: -2.352778196334839
    3. 'value' → logprob: -6.727778434753418
    4. '_value' → logprob: -7.227778434753418
    5. ' _' → logprob: -7.727778434753418
    6. 'rank' → logprob: -9.852778434753418
    7. '_rank' → logprob: -10.227778434753418
    8. ' score' → logprob: -10.602778434753418
    9. ' val' → logprob: -10.727778434753418
    10. ' ' → logprob: -10.977778434753418

Token 115: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049205489456653595
    2. '(self' → logprob: -3.0492055416107178
    3. '(s' → logprob: -8.299205780029297
    4. '(
' → logprob: -8.674205780029297
    5. ':' → logprob: -8.924205780029297
    6. 's' → logprob: -10.174205780029297
    7. 'self' → logprob: -11.674205780029297
    8. '   ' → logprob: -12.549205780029297
    9. '(

' → logprob: -12.799205780029297
    10. ')' → logprob: -13.174205780029297

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02527039684355259
    2. ')' → logprob: -3.775270462036133
    3. '):
' → logprob: -6.275270462036133
    4. ':' → logprob: -9.150270462036133
    5. '():' → logprob: -11.400270462036133
    6. ' ):' → logprob: -11.525270462036133
    7. '   ' → logprob: -12.525270462036133
    8. '):

' → logprob: -13.650270462036133
    9. ' ' → logprob: -14.025270462036133
    10. 'self' → logprob: -14.025270462036133

Token 117: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04640747606754303
    2. '       ' → logprob: -3.296407461166382
    3. ':return' → logprob: -5.671407699584961
    4. ':
' → logprob: -6.296407699584961
    5. '   ' → logprob: -6.671407699584961
    6. '
' → logprob: -7.421407699584961
    7. '():' → logprob: -7.546407699584961
    8. 'return' → logprob: -8.796407699584961
    9. ')' → logprob: -9.296407699584961
    10. '):' → logprob: -9.671407699584961

Token 118: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08288625627756119
    2. ' return' → logprob: -3.207886219024658
    3. '       ' → logprob: -3.332886219024658
    4. '
' → logprob: -6.457886219024658
    5. ' 
' → logprob: -6.707886219024658
    6. '        
' → logprob: -8.082886695861816
    7. '   ' → logprob: -9.207886695861816
    8. ':return' → logprob: -9.832886695861816
    9. '```' → logprob: -10.832886695861816
    10. '    
' → logprob: -10.832886695861816

Token 119: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.004080420359969139
    2. ' ' → logprob: -6.254080295562744
    3. 'self' → logprob: -6.504080295562744
    4. ' ' → logprob: -7.629080295562744
    5. ' Card' → logprob: -8.754080772399902
    6. '  ' → logprob: -13.129080772399902
    7. '	self' → logprob: -13.754080772399902
    8. 'Card' → logprob: -14.004080772399902
    9. ' space' → logprob: -14.379080772399902
    10. ' ' → logprob: -14.629080772399902

Token 120: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.029758822172880173
    2. '.' → logprob: -3.529758930206299
    3. '_' → logprob: -12.52975845336914
    4. ' .' → logprob: -12.77975845336914
    5. '.__' → logprob: -14.40475845336914
    6. ' ' → logprob: -14.90475845336914
    7. ')._' → logprob: -15.15475845336914
    8. '."_' → logprob: -15.90475845336914
    9. ']._' → logprob: -16.02975845336914
    10. '.
' → logprob: -16.02975845336914

Token 121: 'rank' (ID: 30162)
  Prédit: 'rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -4.320199877838604e-07
    2. '_rank' → logprob: -14.75
    3. 'ranking' → logprob: -20.0
    4. '(rank' → logprob: -20.5
    5. 'ran' → logprob: -20.75
    6. '.rank' → logprob: -21.125
    7. 'run' → logprob: -21.375
    8. '_' → logprob: -21.375
    9. ' rank' → logprob: -21.625
    10. 'Rank' → logprob: -21.875

Token 122: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -12.500006675720215
    3. '_value' → logprob: -13.625006675720215
    4. 'values' → logprob: -14.625006675720215
    5. '_val' → logprob: -15.000006675720215
    6. '_vals' → logprob: -15.375006675720215
    7. '_VALUES' → logprob: -15.625006675720215
    8. ''_' → logprob: -16.8750057220459
    9. '[_' → logprob: -17.3750057220459
    10. '_v' → logprob: -18.0000057220459

Token 123: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.038065701723098755
    2. '[' → logprob: -3.2880656719207764
    3. '[get' → logprob: -11.538065910339355
    4. '[s' → logprob: -11.913065910339355
    5. '[
' → logprob: -12.663065910339355
    6. '[f' → logprob: -13.413065910339355
    7. '.get' → logprob: -13.788065910339355
    8. '[g' → logprob: -14.038065910339355
    9. '[this' → logprob: -15.413065910339355
    10. 'self' → logprob: -16.03806495666504

Token 124: '.rank' (ID: 96793)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3133121728897095
    2. '.rank' → logprob: -1.3133121728897095
    3. '.r' → logprob: -9.938312530517578
    4. '.ra' → logprob: -14.313312530517578
    5. '.
' → logprob: -14.563312530517578
    6. 'rank' → logprob: -15.063312530517578
    7. ' .' → logprob: -15.063312530517578
    8. '._' → logprob: -16.313312530517578
    9. '.]' → logprob: -16.438312530517578
    10. '.`' → logprob: -16.563312530517578

Token 125: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.371605948312208e-05
    2. ' ]' → logprob: -9.875053405761719
    3. ']
' → logprob: -13.250053405761719
    4. '']' → logprob: -15.125053405761719
    5. ']

' → logprob: -17.37505340576172
    6. '`]' → logprob: -17.50005340576172
    7. '<|end|>' → logprob: -18.00005340576172
    8. ')]' → logprob: -18.12505340576172
    9. '"]' → logprob: -18.50005340576172
    10. '()]' → logprob: -18.87505340576172

Token 126: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7722261548042297
    2. 'class' → logprob: -1.022226095199585
    3. '<|end|>' → logprob: -2.022226095199585
    4. '
' → logprob: -3.772226095199585
    5. '   ' → logprob: -5.397226333618164
    6. '#' → logprob: -5.397226333618164
    7. ' ' → logprob: -6.022226333618164
    8. 'n' → logprob: -6.522226333618164
    9. ')' → logprob: -6.647226333618164
    10. ' class' → logprob: -6.772226333618164

Token 128: 'property' (ID: 8813)
  Prédit: 'classmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.541630208492279
    2. 'property' → logprob: -1.5416302680969238
    3. 'staticmethod' → logprob: -1.7916302680969238
    4. 'value' → logprob: -3.416630268096924
    5. 'rank' → logprob: -5.666630268096924
    6. 'dat' → logprob: -7.291630268096924
    7. 'class' → logprob: -8.666629791259766
    8. 'str' → logprob: -9.166629791259766
    9. 's' → logprob: -10.041629791259766
    10. 'name' → logprob: -10.416629791259766

Token 129: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5475395917892456
    2. ' def' → logprob: -1.0475395917892456
    3. '
' → logprob: -3.047539710998535
    4. '   ' → logprob: -4.797539710998535
    5. ' 
' → logprob: -4.922539710998535
    6. '    
' → logprob: -6.047539710998535
    7. '<|end|>' → logprob: -6.422539710998535
    8. '  
' → logprob: -6.672539710998535
    9. 's' → logprob: -8.047539710998535
    10. ' ' → logprob: -8.047539710998535

Token 130: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20236022770404816
    2. ' def' → logprob: -1.7023602724075317
    3. '
' → logprob: -7.327360153198242
    4. '<|end|>' → logprob: -9.077360153198242
    5. '   ' → logprob: -9.452360153198242
    6. 'ndef' → logprob: -10.952360153198242
    7. '	def' → logprob: -11.077360153198242
    8. '  
' → logprob: -11.577360153198242
    9. '    
' → logprob: -11.702360153198242
    10. ' 
' → logprob: -11.827360153198242

Token 131: ' def' (ID: 1056)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6964537501335144
    2. ' def' → logprob: -1.0714538097381592
    3. 'def' (adapté à ' def') → logprob: -2.696453809738159
    4. ' rank' → logprob: -3.446453809738159
    5. 'rank' → logprob: -3.571453809738159
    6. ' suit' → logprob: -4.44645357131958
    7. ' is' → logprob: -4.44645357131958
    8. 'is' → logprob: -5.19645357131958
    9. 'name' → logprob: -7.44645357131958
    10. 'suite' → logprob: -7.69645357131958

Token 132: ' is' (ID: 382)
  Prédit: ' rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.3755105137825012
    2. ' is' → logprob: -1.5005104541778564
    3. ' suit' → logprob: -3.0005104541778564
    4. 's' → logprob: -4.2505106925964355
    5. 'rank' → logprob: -4.6255106925964355
    6. ' ' → logprob: -4.7505106925964355
    7. 'is' → logprob: -6.1255106925964355
    8. ' color' → logprob: -6.5005106925964355
    9. ' symbol' → logprob: -7.1255106925964355
    10. ' name' → logprob: -7.3755106925964355

Token 133: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0038178914692252874
    2. '_face' → logprob: -5.628818035125732
    3. '_a' → logprob: -9.128817558288574
    4. '_t' → logprob: -10.003817558288574
    5. 'ace' → logprob: -11.378817558288574
    6. '_black' → logprob: -11.378817558288574
    7. '_e' → logprob: -12.503817558288574
    8. '_A' → logprob: -12.878817558288574
    9. 'Ace' → logprob: -13.003817558288574
    10. '_s' → logprob: -13.003817558288574

Token 134: 'ace' (ID: 675)
  Prédit: 'ace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ace' → logprob: -0.0003619217313826084
    2. 'face' → logprob: -8.250362396240234
    3. 'Ace' → logprob: -10.000362396240234
    4. 'aces' → logprob: -10.250362396240234
    5. 'a' → logprob: -11.875362396240234
    6. 'black' → logprob: -13.125362396240234
    7. ' Ace' → logprob: -13.500362396240234
    8. ' ace' → logprob: -13.500362396240234
    9. 'soft' → logprob: -13.875362396240234
    10. '```' → logprob: -14.250362396240234

Token 135: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.26017633080482483
    2. '(' → logprob: -1.5101763010025024
    3. ':' → logprob: -5.385176181793213
    4. '():' → logprob: -6.635176181793213
    5. '(s' → logprob: -6.635176181793213
    6. '(
' → logprob: -8.385176658630371
    7. 's' → logprob: -8.385176658630371
    8. 'self' → logprob: -8.510176658630371
    9. '()' → logprob: -9.010176658630371
    10. ')' → logprob: -9.885176658630371

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1742796152830124
    2. ')' → logprob: -2.6742796897888184
    3. ':' → logprob: -3.1742796897888184
    4. '():' → logprob: -3.5492796897888184
    5. '(self' → logprob: -4.674279689788818
    6. '):
' → logprob: -4.924279689788818
    7. '(' → logprob: -6.424279689788818
    8. '):

' → logprob: -7.299279689788818
    9. '()' → logprob: -7.674279689788818
    10. 'self' → logprob: -8.42427921295166

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5338726043701172
    2. ' return' → logprob: -1.0338726043701172
    3. 'return' → logprob: -3.283872604370117
    4. '   ' → logprob: -4.533872604370117
    5. '<|end|>' → logprob: -4.908872604370117
    6. ' 
' → logprob: -7.658872604370117
    7. ':' → logprob: -7.908872604370117
    8. '        
' → logprob: -7.908872604370117
    9. ':return' → logprob: -8.408872604370117
    10. '    ' → logprob: -8.533872604370117

Token 138: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3871115446090698
    2. ' return' → logprob: -1.1371115446090698
    3. '       ' → logprob: -8.63711166381836
    4. 'self' → logprob: -10.13711166381836
    5. ' self' → logprob: -10.88711166381836
    6. '   ' → logprob: -13.51211166381836
    7. '	return' → logprob: -14.13711166381836
    8. 'eturn' → logprob: -14.26211166381836
    9. '        
' → logprob: -14.38711166381836
    10. ' ' → logprob: -14.63711166381836

Token 139: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.048588622361421585
    2. 'self' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.048588752746582
    4. '	self' → logprob: -15.548588752746582
    5. ' ' → logprob: -16.673587799072266
    6. '(self' → logprob: -16.923587799072266
    7. '_self' → logprob: -17.173587799072266
    8. ' True' → logprob: -17.298587799072266
    9. '[self' → logprob: -17.923587799072266
    10. '$self' → logprob: -18.923587799072266

Token 140: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.02975349873304367
    2. '.' → logprob: -3.5297534465789795
    3. ' .' → logprob: -13.904753684997559
    4. '._' → logprob: -14.279753684997559
    5. 'rank' → logprob: -14.529753684997559
    6. '.value' → logprob: -15.029753684997559
    7. '.r' → logprob: -15.279753684997559
    8. '.val' → logprob: -16.904752731323242
    9. ' rank' → logprob: -16.904752731323242
    10. '.ra' → logprob: -16.904752731323242

Token 141: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3170434832572937
    2. ' ==' → logprob: -1.3170435428619385
    3. '=' → logprob: -5.692043304443359
    4. '=='' → logprob: -8.19204330444336
    5. ''' → logprob: -10.19204330444336
    6. ' ' → logprob: -10.69204330444336
    7. '==
' → logprob: -11.44204330444336
    8. '===' → logprob: -11.56704330444336
    9. ' =' → logprob: -11.56704330444336
    10. '=="' → logprob: -11.69204330444336

Token 142: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.694125771522522
    2. ''A' → logprob: -0.944125771522522
    3. ''' → logprob: -2.1941256523132324
    4. '"A' → logprob: -12.19412612915039
    5. ''a' → logprob: -12.94412612915039
    6. ''T' → logprob: -13.94412612915039
    7. ''O' → logprob: -14.06912612915039
    8. ''S' → logprob: -14.06912612915039
    9. ''Ar' → logprob: -14.19412612915039
    10. '’A' → logprob: -14.44412612915039

Token 143: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: 0.0
    2. ''A' → logprob: -17.875
    3. ' A' → logprob: -18.625
    4. 'А' → logprob: -22.125
    5. '	A' → logprob: -22.5
    6. 'Ａ' → logprob: -22.75
    7. '_A' → logprob: -24.5
    8. 'a' → logprob: -25.125
    9. '"A' → logprob: -25.125
    10. ''' → logprob: -25.625

Token 144: ''


' (ID: 58266)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3856492842023727e-06
    2. ''
' → logprob: -13.625000953674316
    3. ' '' → logprob: -17.000001907348633
    4. '"' → logprob: -17.000001907348633
    5. ''''' → logprob: -18.000001907348633
    6. ''"' → logprob: -18.125001907348633
    7. '')' → logprob: -18.375001907348633
    8. ')'' → logprob: -18.500001907348633
    9. '"'' → logprob: -18.750001907348633
    10. ''

' → logprob: -19.500001907348633

Token 145: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.056648530066013336
    2. '
' → logprob: -2.9316484928131104
    3. 'c' → logprob: -7.4316487312316895
    4. ' class' → logprob: -8.181648254394531
    5. '<|end|>' → logprob: -8.181648254394531
    6. '    
' → logprob: -9.181648254394531
    7. ' 
' → logprob: -9.181648254394531
    8. '  
' → logprob: -9.556648254394531
    9. '```' → logprob: -9.681648254394531
    10. '

' → logprob: -9.806648254394531

Token 146: ' Hand' (ID: 7110)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28581345081329346
    2. ' Deck' → logprob: -1.6608134508132935
    3. ' Hand' → logprob: -4.160813331604004
    4. ' Blackjack' → logprob: -4.285813331604004
    5. ' Card' → logprob: -4.785813331604004
    6. ' Player' → logprob: -4.910813331604004
    7. ' Poker' → logprob: -5.160813331604004
    8. ' ' → logprob: -6.535813331604004
    9. ' Space' → logprob: -6.660813331604004
    10. ' Black' → logprob: -7.535813331604004

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016194197814911604
    2. ':
' → logprob: -10.000162124633789
    3. '<|end|>' → logprob: -10.125162124633789
    4. ' :' → logprob: -10.375162124633789
    5. '(' → logprob: -10.750162124633789
    6. '():' → logprob: -11.125162124633789
    7. '):' → logprob: -12.375162124633789
    8. ':**' → logprob: -13.875162124633789
    9. '>:' → logprob: -14.500162124633789
    10. '(object' → logprob: -14.750162124633789

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1476832926273346
    2. ' def' → logprob: -2.1476833820343018
    3. 'def' → logprob: -4.522683143615723
    4. '    
' → logprob: -4.897683143615723
    5. ' 
' → logprob: -6.897683143615723
    6. '(' → logprob: -8.147683143615723
    7. '
' → logprob: -8.272683143615723
    8. ':' → logprob: -9.397683143615723
    9. '    ' → logprob: -9.522683143615723
    10. '(def' → logprob: -9.772683143615723

Token 149: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4744589328765869
    2. 'def' (adapté à ' def') → logprob: -0.9744589328765869
    3. '   ' → logprob: -7.974458694458008
    4. 'de' → logprob: -10.474458694458008
    5. ' de' → logprob: -12.349458694458008
    6. '    ' → logprob: -13.349458694458008
    7. '	def' → logprob: -13.599458694458008
    8. 'd' → logprob: -13.974458694458008
    9. ' ' → logprob: -14.474458694458008
    10. ' d' → logprob: -15.099458694458008

Token 150: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16137179732322693
    2. '_' → logprob: -2.0363717079162598
    3. ' ' → logprob: -4.66137170791626
    4. ' _' → logprob: -4.78637170791626
    5. '__' → logprob: -7.53637170791626
    6. ' ' → logprob: -9.661372184753418
    7. '_init' → logprob: -10.286372184753418
    8. ' ___' → logprob: -10.286372184753418
    9. ' ​' → logprob: -10.786372184753418
    10. ' ‌' → logprob: -10.786372184753418

Token 151: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.727905979962088e-05
    2. 'i' → logprob: -10.12504768371582
    3. 'ini' → logprob: -12.62504768371582
    4. 'in' → logprob: -12.62504768371582
    5. '   ' → logprob: -16.00004768371582
    6. '	init' → logprob: -16.12504768371582
    7. ' init' → logprob: -16.25004768371582
    8. '_init' → logprob: -16.75004768371582
    9. 'int' → logprob: -16.87504768371582
    10. 'inite' → logprob: -17.00004768371582

Token 152: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01843870058655739
    2. '__' → logprob: -4.018438816070557
    3. '__(
' → logprob: -8.518438339233398
    4. '_' → logprob: -9.643438339233398
    5. '__((' → logprob: -11.768438339233398
    6. '_(' → logprob: -12.268438339233398
    7. '__('' → logprob: -12.893438339233398
    8. '(self' → logprob: -13.018438339233398
    9. '(' → logprob: -13.143438339233398
    10. '___' → logprob: -13.393438339233398

Token 153: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016539888747502118
    2. ')' → logprob: -9.000164985656738
    3. ' self' → logprob: -10.125164985656738
    4. '):
' → logprob: -14.125164985656738
    5. '	self' → logprob: -14.500164985656738
    6. '
' → logprob: -16.125165939331055
    7. '```' → logprob: -16.250165939331055
    8. ')(' → logprob: -16.750165939331055
    9. '0' → logprob: -16.875165939331055
    10. '   ' → logprob: -17.125165939331055

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015358183532953262
    2. ' ,' → logprob: -4.890357971191406
    3. '):' → logprob: -5.390357971191406
    4. ')' → logprob: -6.890357971191406
    5. ' ' → logprob: -7.390357971191406
    6. ' ):' → logprob: -7.390357971191406
    7. 'self' → logprob: -7.640357971191406
    8. ' )' → logprob: -8.765357971191406
    9. ' self' → logprob: -9.140357971191406
    10. '_' → logprob: -9.515357971191406

Token 155: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.8846920728683472
    2. 'self' → logprob: -1.1346920728683472
    3. ' cards' → logprob: -1.5096920728683472
    4. ' self' → logprob: -3.8846921920776367
    5. ')' → logprob: -4.634692192077637
    6. '):
' → logprob: -4.634692192077637
    7. '):' → logprob: -6.384692192077637
    8. '.cards' → logprob: -7.009692192077637
    9. '_cards' → logprob: -7.259692192077637
    10. '):

' → logprob: -7.634692192077637

Token 156: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.15126371383666992
    2. '=' → logprob: -2.77626371383667
    3. '):' → logprob: -2.90126371383667
    4. '=[]' → logprob: -3.77626371383667
    5. ':' → logprob: -9.401264190673828
    6. ')' → logprob: -9.526264190673828
    7. ' =' → logprob: -10.276264190673828
    8. '):
' → logprob: -10.401264190673828
    9. ' ):' → logprob: -10.901264190673828
    10. '=[],' → logprob: -13.151264190673828

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002448893792461604
    2. '):
' → logprob: -8.875245094299316
    3. ')' → logprob: -9.875245094299316
    4. ':' → logprob: -10.000245094299316
    5. ' ):' → logprob: -12.375245094299316
    6. ',' → logprob: -12.500245094299316
    7. ' ' → logprob: -17.125244140625
    8. '):

' → logprob: -17.125244140625
    9. '}:' → logprob: -17.500244140625
    10. '   ' → logprob: -17.500244140625

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025876158848404884
    2. ' ' → logprob: -3.900876045227051
    3. '   ' → logprob: -5.650876045227051
    4. '    ' → logprob: -7.150876045227051
    5. '<|end|>' → logprob: -7.650876045227051
    6. ' if' → logprob: -9.15087604522705
    7. ' )' → logprob: -9.15087604522705
    8. ')' → logprob: -9.52587604522705
    9. '  ' → logprob: -10.02587604522705
    10. ',' → logprob: -10.02587604522705

Token 159: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1783694177865982
    2. ' if' → logprob: -2.4283695220947266
    3. 'self' (adapté à ' self') → logprob: -2.6783695220947266
    4. 'if' → logprob: -5.178369522094727
    5. ' ' → logprob: -7.678369522094727
    6. '       ' → logprob: -7.928369522094727
    7. '    ' → logprob: -11.053369522094727
    8. '        ' → logprob: -11.053369522094727
    9. '   ' → logprob: -11.303369522094727
    10. ' ' → logprob: -13.178369522094727

Token 160: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.07779546827077866
    2. ' cards' → logprob: -2.7027955055236816
    3. 'cards' → logprob: -5.702795505523682
    4. '_cards' → logprob: -6.702795505523682
    5. '(cards' → logprob: -6.827795505523682
    6. ' ' → logprob: -7.077795505523682
    7. ' =' → logprob: -7.827795505523682
    8. '=' → logprob: -7.952795505523682
    9. '.' → logprob: -8.577795028686523
    10. ' .' → logprob: -9.452795028686523

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6412971019744873
    2. '=' → logprob: -0.7662971019744873
    3. ' ' → logprob: -5.141297340393066
    4. ' or' → logprob: -6.516297340393066
    5. '<|end|>' → logprob: -7.891297340393066
    6. '=[]' → logprob: -8.266297340393066
    7. ' is' → logprob: -8.266297340393066
    8. ' if' → logprob: -8.391297340393066
    9. '=None' → logprob: -9.391297340393066
    10. ')' → logprob: -10.391297340393066

Token 162: ' cards' (ID: 10541)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.008153998292982578
    2. '[]' → logprob: -5.508153915405273
    3. ' cards' → logprob: -5.508153915405273
    4. 'cards' → logprob: -12.133153915405273
    5. ' ' → logprob: -12.508153915405273
    6. ' []
' → logprob: -13.383153915405273
    7. ' [' → logprob: -13.508153915405273
    8. ' []

' → logprob: -14.008153915405273
    9. '[]}' → logprob: -15.508153915405273
    10. '[' → logprob: -16.133153915405273

Token 163: ' if' (ID: 538)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5881859064102173
    2. ' if' → logprob: -0.8381859064102173
    3. 'if' → logprob: -4.713185787200928
    4. 'or' → logprob: -5.838185787200928
    5. '[:]' → logprob: -8.338186264038086
    6. ' ' → logprob: -10.088186264038086
    7. '.copy' → logprob: -15.713186264038086
    8. '	or' → logprob: -15.838186264038086
    9. 'If' → logprob: -15.963186264038086
    10. '[]' → logprob: -16.213186264038086

Token 164: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.0008058178937062621
    2. 'cards' → logprob: -7.125805854797363
    3. '(cards' → logprob: -13.875805854797363
    4. '.cards' → logprob: -16.000804901123047
    5. '_cards' → logprob: -16.250804901123047
    6. '[]' → logprob: -16.875804901123047
    7. 'Cards' → logprob: -17.000804901123047
    8. ' ' → logprob: -17.125804901123047
    9. ' []' → logprob: -17.375804901123047
    10. ' card' → logprob: -17.625804901123047

Token 165: ' else' (ID: 1203)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01181917916983366
    2. 'is' → logprob: -4.636819362640381
    3. ' else' → logprob: -6.761819362640381
    4. 'else' → logprob: -7.011819362640381
    5. ' ' → logprob: -13.261818885803223
    6. '[]' → logprob: -15.636818885803223
    7. '<|end|>' → logprob: -15.761818885803223
    8. ' are' → logprob: -16.38681983947754
    9. ')' → logprob: -16.38681983947754
    10. 's' → logprob: -16.88681983947754

Token 166: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.061972957104444504
    2. '[]' → logprob: -2.8119728565216064
    3. '[]>' → logprob: -12.686972618103027
    4. ' []
' → logprob: -13.936972618103027
    5. ' ' → logprob: -14.436972618103027
    6. '[]}' → logprob: -15.311972618103027
    7. ' []

' → logprob: -15.811972618103027
    8. ' [' → logprob: -16.311973571777344
    9. '[' → logprob: -16.311973571777344
    10. ' [])' → logprob: -16.936973571777344

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06829517334699631
    2. '    
' → logprob: -3.5682952404022217
    3. '<|end|>' → logprob: -3.8182952404022217
    4. '
' → logprob: -5.193295001983643
    5. 'def' → logprob: -5.693295001983643
    6. ' ' → logprob: -6.318295001983643
    7. ' 
' → logprob: -6.318295001983643
    8. '   
' → logprob: -7.818295001983643
    9. '  
' → logprob: -7.818295001983643
    10. '  ' → logprob: -7.818295001983643

Token 168: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009237228892743587
    2. ' def' → logprob: -4.759237289428711
    3. '   ' → logprob: -7.509237289428711
    4. 'd' → logprob: -10.384237289428711
    5. '@property' → logprob: -10.634237289428711
    6. ' ' → logprob: -11.884237289428711
    7. '@' → logprob: -12.134237289428711
    8. ' @' → logprob: -13.134237289428711
    9. '    
' → logprob: -13.634237289428711
    10. ' 
' → logprob: -13.634237289428711

Token 169: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.008842529729008675
    2. ' calculate' → logprob: -5.758842468261719
    3. ' def' → logprob: -6.133842468261719
    4. ' ' → logprob: -6.633842468261719
    5. 'add' → logprob: -7.258842468261719
    6. '_' → logprob: -7.883842468261719
    7. ' a' → logprob: -8.133842468261719
    8. '_add' → logprob: -8.508842468261719
    9. ' value' → logprob: -8.633842468261719
    10. ' _' → logprob: -9.633842468261719

Token 170: '_card' (ID: 37760)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010066406801342964
    2. '_card' → logprob: -4.635066509246826
    3. ' ' → logprob: -9.885066032409668
    4. '(' → logprob: -9.885066032409668
    5. '_space' → logprob: -10.010066032409668
    6. '_item' → logprob: -10.010066032409668
    7. ' _' → logprob: -10.135066032409668
    8. '_token' → logprob: -10.635066032409668
    9. '_c' → logprob: -12.010066032409668
    10. '_cards' → logprob: -12.010066032409668

Token 171: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10032378137111664
    2. '(' → logprob: -2.3503236770629883
    3. '(s' → logprob: -10.350323677062988
    4. ' (' → logprob: -10.475323677062988
    5. '(
' → logprob: -10.600323677062988
    6. '<|end|>' → logprob: -10.975323677062988
    7. '(card' → logprob: -11.600323677062988
    8. ')' → logprob: -13.725323677062988
    9. 'self' → logprob: -13.850323677062988
    10. '(

' → logprob: -14.225323677062988

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032340367324650288
    2. ')' → logprob: -5.753233909606934
    3. ' ,' → logprob: -10.253233909606934
    4. ',new' → logprob: -12.128233909606934
    5. ',self' → logprob: -13.003233909606934
    6. ',)' → logprob: -13.003233909606934
    7. 'self' → logprob: -13.253233909606934
    8. ',c' → logprob: -13.253233909606934
    9. '<|end|>' → logprob: -13.253233909606934
    10. ',
' → logprob: -14.003233909606934

Token 173: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.04858941584825516
    2. 'card' → logprob: -3.0485894680023193
    3. '	card' → logprob: -13.923589706420898
    4. ' self' → logprob: -14.923589706420898
    5. 'self' → logprob: -15.048589706420898
    6. '   ' → logprob: -15.298589706420898
    7. '(card' → logprob: -16.1735897064209
    8. '_card' → logprob: -16.1735897064209
    9. '       ' → logprob: -16.9235897064209
    10. ')' → logprob: -17.4235897064209

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015385502483695745
    2. ')' → logprob: -6.8765387535095215
    3. '):
' → logprob: -7.6265387535095215
    4. ':' → logprob: -11.376538276672363
    5. ' ):' → logprob: -12.001538276672363
    6. '):

' → logprob: -15.251538276672363
    7. '   ' → logprob: -16.12653923034668
    8. '):
' → logprob: -16.50153923034668
    9. ' ' → logprob: -16.62653923034668
    10. ',' → logprob: -16.87653923034668

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019369948655366898
    2. ' self' → logprob: -4.394370079040527
    3. 'self' → logprob: -5.519370079040527
    4. '        
' → logprob: -7.019370079040527
    5. ')' → logprob: -7.144370079040527
    6. ' 
' → logprob: -8.269370079040527
    7. '   ' → logprob: -8.644370079040527
    8. '
' → logprob: -8.769370079040527
    9. '        ' → logprob: -9.144370079040527
    10. '    ' → logprob: -9.644370079040527

Token 176: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16026364266872406
    2. 'self' (adapté à ' self') → logprob: -1.9102636575698853
    3. '       ' → logprob: -10.410264015197754
    4. ' ' → logprob: -12.035264015197754
    5. ' 
' → logprob: -13.285264015197754
    6. '        ' → logprob: -14.660264015197754
    7. '	self' → logprob: -15.160264015197754
    8. '   ' → logprob: -15.660264015197754
    9. ' ' → logprob: -15.910264015197754
    10. 's' → logprob: -16.035263061523438

Token 177: '.cards' (ID: 91358)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38691645860671997
    2. '.cards' → logprob: -1.1369163990020752
    3. '.append' → logprob: -11.761916160583496
    4. '.add' → logprob: -12.011916160583496
    5. '.card' → logprob: -12.136916160583496
    6. '.codes' → logprob: -12.261916160583496
    7. '.points' → logprob: -12.636916160583496
    8. '.c' → logprob: -13.136916160583496
    9. ').' → logprob: -13.136916160583496
    10. '.code' → logprob: -13.386916160583496

Token 178: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.25196096301078796
    2. '.' → logprob: -1.5019609928131104
    3. '.app' → logprob: -10.876960754394531
    4. '.ap' → logprob: -12.001960754394531
    5. ' .' → logprob: -12.876960754394531
    6. '.extend' → logprob: -13.001960754394531
    7. '.add' → logprob: -13.751960754394531
    8. '.Append' → logprob: -15.001960754394531
    9. '.insert' → logprob: -15.501960754394531
    10. 'append' → logprob: -15.751960754394531

Token 179: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.10021906346082687
    2. '(' → logprob: -2.3502190113067627
    3. '(
' → logprob: -11.850218772888184
    4. '(car' → logprob: -12.850218772888184
    5. '(

' → logprob: -14.225218772888184
    6. '(c' → logprob: -14.350218772888184
    7. '(cards' → logprob: -14.850218772888184
    8. '(cart' → logprob: -15.350218772888184
    9. '(Card' → logprob: -15.350218772888184
    10. '(cell' → logprob: -16.1002197265625

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')
' → logprob: -13.62500286102295
    4. ')

' → logprob: -16.375003814697266
    5. '<|end|>' → logprob: -17.875003814697266
    6. ')return' → logprob: -18.375003814697266
    7. '()' → logprob: -18.500003814697266
    8. '())' → logprob: -18.750003814697266
    9. ')`' → logprob: -18.875003814697266
    10. '),' → logprob: -19.250003814697266

Token 181: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15367268025875092
    2. '   ' → logprob: -2.653672695159912
    3. '<|end|>' → logprob: -3.778672695159912
    4. 'def' → logprob: -4.028672695159912
    5. '

' → logprob: -4.153672695159912
    6. ' ' → logprob: -5.278672695159912
    7. '@property' → logprob: -5.903672695159912
    8. ' def' → logprob: -6.153672695159912
    9. '    
' → logprob: -6.403672695159912
    10. ' 
' → logprob: -6.528672695159912

Token 182: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07919203490018845
    2. '@property' → logprob: -2.5791919231414795
    3. '   ' → logprob: -8.579192161560059
    4. ' def' → logprob: -9.204192161560059
    5. '@' → logprob: -11.579192161560059
    6. ' ' → logprob: -13.329192161560059
    7. ' @' → logprob: -13.579192161560059
    8. 'd' → logprob: -14.454192161560059
    9. '
' → logprob: -15.454192161560059
    10. 'de' → logprob: -15.579192161560059

Token 183: ' values' (ID: 4824)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9389634728431702
    2. ' get' → logprob: -1.1889634132385254
    3. ' value' → logprob: -1.9389634132385254
    4. ' calculate' → logprob: -2.3139634132385254
    5. 'value' → logprob: -3.3139634132385254
    6. 'def' → logprob: -4.938963413238525
    7. 'calculate' → logprob: -5.438963413238525
    8. 'get' → logprob: -6.063963413238525
    9. ' evaluate' → logprob: -6.188963413238525
    10. ' ' → logprob: -6.188963413238525

Token 184: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01821877807378769
    2. '(' → logprob: -4.018218994140625
    3. '(s' → logprob: -10.018218994140625
    4. ' (' → logprob: -11.393218994140625
    5. 's' → logprob: -12.268218994140625
    6. 'self' → logprob: -12.893218994140625
    7. '(
' → logprob: -13.268218994140625
    8. '_' → logprob: -13.643218994140625
    9. '()' → logprob: -14.018218994140625
    10. '_(' → logprob: -15.393218994140625

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03334217146039009
    2. ')' → logprob: -4.158342361450195
    3. '):
' → logprob: -4.783342361450195
    4. 'self' → logprob: -5.533342361450195
    5. '(self' → logprob: -5.658342361450195
    6. ' ):' → logprob: -7.158342361450195
    7. '   ' → logprob: -8.658342361450195
    8. '():' → logprob: -9.033342361450195
    9. ' ' → logprob: -9.408342361450195
    10. '()' → logprob: -9.908342361450195

Token 186: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4575381278991699
    2. '       ' → logprob: -1.08253812789917
    3. ':
' → logprob: -5.08253812789917
    4. '   ' → logprob: -5.08253812789917
    5. ' ' → logprob: -5.45753812789917
    6. ' :' → logprob: -5.70753812789917
    7. '():' → logprob: -5.95753812789917
    8. '[' → logprob: -6.70753812789917
    9. '    ' → logprob: -7.33253812789917
    10. '[]' → logprob: -7.33253812789917

Token 187: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.719903290271759
    2. ' total' → logprob: -0.969903290271759
    3. ' totals' → logprob: -2.7199032306671143
    4. 'values' → logprob: -3.7199032306671143
    5. '       ' → logprob: -4.844903469085693
    6. ' values' → logprob: -5.094903469085693
    7. 'val' → logprob: -5.469903469085693
    8. 'value' → logprob: -5.594903469085693
    9. '   ' → logprob: -5.719903469085693
    10. 'tot' → logprob: -5.844903469085693

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01092249620705843
    2. '=' → logprob: -4.760922431945801
    3. 's' → logprob: -6.135922431945801
    4. '_values' → logprob: -10.3859224319458
    5. ' ' → logprob: -10.5109224319458
    6. '()' → logprob: -10.8859224319458
    7. '_value' → logprob: -10.8859224319458
    8. '_' → logprob: -11.1359224319458
    9. '_points' → logprob: -11.6359224319458
    10. '_score' → logprob: -12.2609224319458

Token 189: ' sum' (ID: 4215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08736414462327957
    2. '0' → logprob: -2.5873641967773438
    3. ' sum' → logprob: -4.837364196777344
    4. 'sum' → logprob: -7.587364196777344
    5. '  ' → logprob: -13.587364196777344
    6. ' ' → logprob: -14.587364196777344
    7. '   ' → logprob: -14.774864196777344
    8. ' [' → logprob: -15.399864196777344
    9. ' s' → logprob: -15.712364196777344
    10. ' []
' → logprob: -15.837364196777344

Token 190: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.001730510382913053
    2. '([' → logprob: -7.001730442047119
    3. '(' → logprob: -7.376730442047119
    4. 'card' → logprob: -8.751730918884277
    5. '(c' → logprob: -10.626730918884277
    6. '(
' → logprob: -12.251730918884277
    7. ' card' → logprob: -12.751730918884277
    8. '	card' → logprob: -13.876730918884277
    9. '(Card' → logprob: -14.251730918884277
    10. '[' → logprob: -14.876730918884277

Token 191: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.1602582484483719
    2. '.' → logprob: -1.9102582931518555
    3. ' .' → logprob: -10.535258293151855
    4. '.card' → logprob: -12.285258293151855
    5. ' ' → logprob: -14.285258293151855
    6. '.
' → logprob: -14.285258293151855
    7. '.val' → logprob: -14.660258293151855
    8. '.token' → logprob: -15.160258293151855
    9. 'value' → logprob: -15.660258293151855
    10. '.values' → logprob: -15.785258293151855

Token 192: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004082793369889259
    2. 'for' → logprob: -6.004082679748535
    3. '()' → logprob: -7.004082679748535
    4. ')' → logprob: -7.754082679748535
    5. ' ' → logprob: -8.254082679748535
    6. '	for' → logprob: -12.629082679748535
    7. ' )' → logprob: -13.004082679748535
    8. 's' → logprob: -13.879082679748535
    9. '   ' → logprob: -14.254082679748535
    10. '  ' → logprob: -14.754082679748535

Token 193: ' card' (ID: 4766)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0013988104183226824
    2. ' card' → logprob: -6.876399040222168
    3. 'self' → logprob: -8.001399040222168
    4. ' ' → logprob: -10.751399040222168
    5. ' ' → logprob: -11.876399040222168
    6. '	self' → logprob: -13.376399040222168
    7. 'card' → logprob: -15.376399040222168
    8. ' s' → logprob: -15.376399040222168
    9. '  ' → logprob: -15.501399040222168
    10. ' c' → logprob: -16.12639808654785

Token 194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002812601625919342
    2. 's' → logprob: -6.502812385559082
    3. 'in' → logprob: -7.002812385559082
    4. ' ' → logprob: -8.502812385559082
    5. '<|end|>' → logprob: -8.752812385559082
    6. '.' → logprob: -11.252812385559082
    7. '  ' → logprob: -11.377812385559082
    8. '<|end|>' → logprob: -12.252812385559082
    9. ')' → logprob: -12.377812385559082
    10. ' s' → logprob: -12.752812385559082

Token 195: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858975484967232
    2. ' self' → logprob: -3.0485897064208984
    3. '	self' → logprob: -14.548589706420898
    4. ')' → logprob: -14.673589706420898
    5. ' ' → logprob: -14.673589706420898
    6. '(self' → logprob: -14.798589706420898
    7. '
' → logprob: -15.423589706420898
    8. '   ' → logprob: -16.1735897064209
    9. '[self' → logprob: -16.1735897064209
    10. '  ' → logprob: -17.1735897064209

Token 196: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.002842080080881715
    2. '.' → logprob: -5.877841949462891
    3. 'cards' → logprob: -10.50284194946289
    4. ' .' → logprob: -13.00284194946289
    5. 's' → logprob: -13.12784194946289
    6. ' cards' → logprob: -13.62784194946289
    7. ').' → logprob: -13.87784194946289
    8. '.cells' → logprob: -14.12784194946289
    9. '.c' → logprob: -14.75284194946289
    10. '.s' → logprob: -15.00284194946289

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003246183041483164
    2. ' )' → logprob: -8.625324249267578
    3. ')
' → logprob: -8.875324249267578
    4. '       ' → logprob: -13.375324249267578
    5. ')

' → logprob: -13.500324249267578
    6. ')return' → logprob: -14.250324249267578
    7. ' )
' → logprob: -15.500324249267578
    8. ' ' → logprob: -15.625324249267578
    9. '
' → logprob: -15.750324249267578
    10. 'if' → logprob: -16.000324249267578

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24279244244098663
    2. '
' → logprob: -1.6177924871444702
    3. '        ' → logprob: -4.99279260635376
    4. '        
' → logprob: -4.99279260635376
    5. '<|end|>' → logprob: -6.24279260635376
    6. ',' → logprob: -6.86779260635376
    7. 'n' → logprob: -9.242792129516602
    8. '      ' → logprob: -9.867792129516602
    9. ' ' → logprob: -9.992792129516602
    10. 'return' → logprob: -10.117792129516602

Token 199: ' ac' (ID: 1375)
  Prédit: ' ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ac' → logprob: -0.8915209770202637
    2. 'aces' → logprob: -1.5165209770202637
    3. '       ' → logprob: -1.6415209770202637
    4. ' return' → logprob: -2.3915209770202637
    5. ' num' → logprob: -4.141520977020264
    6. 'return' → logprob: -4.391520977020264
    7. ' #' → logprob: -4.516520977020264
    8. ' ace' → logprob: -4.516520977020264
    9. '        
' → logprob: -4.891520977020264
    10. '#' → logprob: -5.141520977020264

Token 200: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4287784695625305
    2. 'e' → logprob: -1.0537784099578857
    3. '       ' → logprob: -10.428778648376465
    4. '   ' → logprob: -10.678778648376465
    5. '    ' → logprob: -12.928778648376465
    6. ' e' → logprob: -13.116278648376465
    7. '     ' → logprob: -13.428778648376465
    8. 'ount' → logprob: -13.428778648376465
    9. '      ' → logprob: -13.491278648376465
    10. '        ' → logprob: -13.741278648376465

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4257376790046692
    2. '_count' → logprob: -1.1757376194000244
    3. '_' → logprob: -3.5507376194000244
    4. '=' → logprob: -4.6757378578186035
    5. ' ' → logprob: -10.675737380981445
    6. '_present' → logprob: -10.800737380981445
    7. '_=' → logprob: -11.050737380981445
    8. '_counts' → logprob: -11.300737380981445
    9. 'count' → logprob: -11.675737380981445
    10. '   ' → logprob: -12.800737380981445

Token 202: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.03822933882474899
    2. 'sum' → logprob: -3.28822922706604
    3. ' len' → logprob: -9.288228988647461
    4. ' [' → logprob: -9.538228988647461
    5. 'len' → logprob: -11.538228988647461
    6. '[' → logprob: -12.663228988647461
    7. ' self' → logprob: -12.913228988647461
    8. '	sum' → logprob: -13.163228988647461
    9. '(sum' → logprob: -13.538228988647461
    10. ' ' → logprob: -13.538228988647461

Token 203: '(' (ID: 7)
  Prédit: '(card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.1269417703151703
    2. '(' → logprob: -2.126941680908203
    3. 'card' → logprob: -11.876941680908203
    4. '1' → logprob: -12.251941680908203
    5. '(car' → logprob: -14.376941680908203
    6. ' card' → logprob: -14.501941680908203
    7. '(Card' → logprob: -15.126941680908203
    8. '	card' → logprob: -15.376941680908203
    9. '(
' → logprob: -15.876941680908203
    10. '(c' → logprob: -16.376941680908203

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3870147466659546
    2. 'card' → logprob: -1.1370147466659546
    3. '(card' → logprob: -9.512014389038086
    4. ' card' → logprob: -9.762014389038086
    5. ' ' → logprob: -11.887014389038086
    6. 'c' → logprob: -13.512014389038086
    7. '	card' → logprob: -13.637014389038086
    8. '(' → logprob: -13.887014389038086
    9. 'car' → logprob: -14.512014389038086
    10. 'Card' → logprob: -15.137014389038086

Token 205: ' for' (ID: 395)
  Prédit: '(card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.8273278474807739
    2. 'for' → logprob: -1.452327847480774
    3. ' for' → logprob: -1.577327847480774
    4. 'card' → logprob: -2.3273277282714844
    5. '(' → logprob: -4.077327728271484
    6. '1' → logprob: -5.452327728271484
    7. ' card' → logprob: -6.327327728271484
    8. 'if' → logprob: -7.452327728271484
    9. ' ' → logprob: -7.577327728271484
    10. '	card' → logprob: -8.577327728271484

Token 206: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.2519548535346985
    2. 'card' → logprob: -1.5019547939300537
    3. '	card' → logprob: -10.751955032348633
    4. 'c' → logprob: -13.376955032348633
    5. ' c' → logprob: -13.876955032348633
    6. ' ' → logprob: -14.251955032348633
    7. '(card' → logprob: -14.376955032348633
    8. '.card' → logprob: -15.376955032348633
    9. 'car' → logprob: -15.751955032348633
    10. ' car' → logprob: -16.626955032348633

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008623320609331131
    2. 'in' → logprob: -4.758623123168945
    3. ' ' → logprob: -11.758623123168945
    4. 'card' → logprob: -15.008623123168945
    5. 'import' → logprob: -16.008623123168945
    6. ' i' → logprob: -16.133623123168945
    7. '	in' → logprob: -16.258623123168945
    8. '  ' → logprob: -16.758623123168945
    9. ' ' → logprob: -16.883623123168945
    10. '   ' → logprob: -17.133623123168945

Token 208: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804585337638855
    2. ' self' → logprob: -3.288045883178711
    3. ' ' → logprob: -13.038045883178711
    4. '(self' → logprob: -14.538045883178711
    5. '	self' → logprob: -14.913045883178711
    6. '   ' → logprob: -15.163045883178711
    7. '
' → logprob: -15.163045883178711
    8. '[self' → logprob: -15.538045883178711
    9. ' ' → logprob: -16.53804588317871
    10. ')' → logprob: -16.78804588317871

Token 209: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -7.171581091824919e-05
    2. 'cards' → logprob: -10.00007152557373
    3. '.' → logprob: -11.00007152557373
    4. ' .' → logprob: -13.12507152557373
    5. '.hand' → logprob: -13.12507152557373
    6. 'self' → logprob: -13.25007152557373
    7. '.cells' → logprob: -14.25007152557373
    8. '(cards' → logprob: -14.25007152557373
    9. 's' → logprob: -14.37507152557373
    10. '.s' → logprob: -14.75007152557373

Token 210: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0017284912755712867
    2. 'if' → logprob: -6.376728534698486
    3. ' ' → logprob: -10.626728057861328
    4. '        ' → logprob: -13.626728057861328
    5. '    ' → logprob: -14.626728057861328
    6. '       ' → logprob: -15.876728057861328
    7. '   ' → logprob: -16.251728057861328
    8. '	if' → logprob: -17.001728057861328
    9. '  ' → logprob: -17.126728057861328
    10. '           ' → logprob: -17.251728057861328

Token 211: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.038049064576625824
    2. 'card' → logprob: -3.2880489826202393
    3. '	card' → logprob: -12.16304874420166
    4. ' ' → logprob: -13.28804874420166
    5. '.card' → logprob: -15.16304874420166
    6. '(card' → logprob: -15.28804874420166
    7. ' car' → logprob: -16.538049697875977
    8. 'car' → logprob: -17.038049697875977
    9. '  ' → logprob: -17.163049697875977
    10. '_card' → logprob: -17.538049697875977

Token 212: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0005548207554966211
    2. '.' → logprob: -7.500555038452148
    3. ' .' → logprob: -13.750555038452148
    4. '.has' → logprob: -14.875555038452148
    5. '.isnan' → logprob: -16.50055503845215
    6. '.rank' → logprob: -16.62555503845215
    7. '._' → logprob: -17.00055503845215
    8. ').' → logprob: -17.37555503845215
    9. '.was' → logprob: -17.50055503845215
    10. 'is' → logprob: -17.75055503845215

Token 213: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.236549335066229e-05
    2. 'ace' → logprob: -10.875021934509277
    3. '_a' → logprob: -13.250021934509277
    4. ' ace' → logprob: -14.250021934509277
    5. '_ac' → logprob: -14.500021934509277
    6. '_
' → logprob: -15.750021934509277
    7. ' _' → logprob: -15.875021934509277
    8. 'Ace' → logprob: -16.125022888183594
    9. 'a' → logprob: -17.125022888183594
    10. ' Ace' → logprob: -18.000022888183594

Token 214: 'ace' (ID: 675)
  Prédit: 'ace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ace' → logprob: -6.718606891809031e-05
    2. ' ace' → logprob: -9.875066757202148
    3. 'a' → logprob: -12.000066757202148
    4. 'Ace' → logprob: -12.500066757202148
    5. 'ae' → logprob: -12.875066757202148
    6. 'ac' → logprob: -13.500066757202148
    7. 'aces' → logprob: -14.000066757202148
    8. 'ase' → logprob: -15.500066757202148
    9. '```' → logprob: -15.500066757202148
    10. 'ce' → logprob: -16.37506675720215

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010580805974313989
    2. ')
' → logprob: -9.375105857849121
    3. ' )' → logprob: -11.000105857849121
    4. '       ' → logprob: -13.250105857849121
    5. '())' → logprob: -13.750105857849121
    6. ')

' → logprob: -14.000105857849121
    7. '))' → logprob: -15.375105857849121
    8. '   ' → logprob: -16.000104904174805
    9. ')
' → logprob: -16.125104904174805
    10. '()' → logprob: -16.750104904174805

Token 216: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09129014611244202
    2. '       ' → logprob: -2.466290235519409
    3. '        
' → logprob: -6.84128999710083
    4. 'while' → logprob: -7.96628999710083
    5. ' while' → logprob: -7.96628999710083
    6. ' 
' → logprob: -8.716290473937988
    7. '<|end|>' → logprob: -8.966290473937988
    8. '
' → logprob: -9.216290473937988
    9. '

' → logprob: -9.716290473937988
    10. '        ' → logprob: -10.341290473937988

Token 217: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6040281057357788
    2. '
' → logprob: -1.3540281057357788
    3. 'while' → logprob: -1.7290281057357788
    4. '       ' → logprob: -4.354028224945068
    5. '        
' → logprob: -5.979028224945068
    6. ' 
' → logprob: -6.729028224945068
    7. '	while' → logprob: -7.854028224945068
    8. '

' → logprob: -8.72902774810791
    9. 'While' → logprob: -8.97902774810791
    10. '   ' → logprob: -9.22902774810791

Token 218: ' Adjust' (ID: 43076)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.397799551486969
    2. 'while' → logprob: -1.1477994918823242
    3. '       ' → logprob: -4.897799491882324
    4. 'While' → logprob: -5.897799491882324
    5. '   ' → logprob: -7.897799491882324
    6. ' While' → logprob: -9.272799491882324
    7. ' if' → logprob: -9.647799491882324
    8. 'if' → logprob: -10.397799491882324
    9. ' for' → logprob: -11.147799491882324
    10. '        ' → logprob: -11.272799491882324

Token 219: ' ac' (ID: 1375)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.18010757863521576
    2. ' for' → logprob: -2.180107593536377
    3. 'total' → logprob: -3.555107593536377
    4. '       ' → logprob: -5.055107593536377
    5. ' if' → logprob: -5.055107593536377
    6. ' ' → logprob: -5.680107593536377
    7. ' the' → logprob: -6.305107593536377
    8. ' while' → logprob: -6.305107593536377
    9. 'for' → logprob: -6.430107593536377
    10. '   ' → logprob: -7.305107593536377

Token 220: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00026991849881596863
    2. 'ount' → logprob: -9.125269889831543
    3. 'e' → logprob: -10.000269889831543
    4. '       ' → logprob: -10.375269889831543
    5. '   ' → logprob: -10.500269889831543
    6. 'total' → logprob: -11.375269889831543
    7. 'ues' → logprob: -11.500269889831543
    8. '     ' → logprob: -12.500269889831543
    9. '_total' → logprob: -12.625269889831543
    10. 'ess' → logprob: -12.625269889831543

Token 221: ' from' (ID: 591)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.828281819820404
    2. ' for' → logprob: -1.3282818794250488
    3. '       ' → logprob: -1.5782818794250488
    4. 'while' → logprob: -2.578281879425049
    5. 'for' → logprob: -4.203281879425049
    6. '	while' → logprob: -7.828281879425049
    7. '   ' → logprob: -7.953281879425049
    8. ' if' → logprob: -8.82828140258789
    9. ' ' → logprob: -9.95328140258789
    10. ',' → logprob: -10.45328140258789

Token 222: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.002265278482809663
    2. ' ' → logprob: -6.127265453338623
    3. 'value' → logprob: -10.002264976501465
    4. 'ele' → logprob: -11.252264976501465
    5. 'total' → logprob: -12.002264976501465
    6. 'ace' → logprob: -12.127264976501465
    7. 'soft' → logprob: -13.127264976501465
    8. 'aces' → logprob: -13.377264976501465
    9. '21' → logprob: -13.377264976501465
    10. '   ' → logprob: -13.502264976501465

Token 223: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. 'ele' → logprob: -14.375014305114746
    4. 'value' → logprob: -15.625014305114746
    5. ''' → logprob: -17.62501335144043
    6. '１１' → logprob: -18.87501335144043
    7. '十一' → logprob: -19.00001335144043
    8. ' eleven' → logprob: -19.12501335144043
    9. 'ace' → logprob: -19.25001335144043
    10. '1' → logprob: -19.50001335144043

Token 224: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.018247107043862343
    2. 'to' → logprob: -4.018247127532959
    3. ' if' → logprob: -9.2682466506958
    4. 'if' → logprob: -13.2682466506958
    5. ' ' → logprob: -14.1432466506958
    6. ' down' → logprob: -15.5182466506958
    7. ' t' → logprob: -16.768247604370117
    8. '   ' → logprob: -17.143247604370117
    9. ',' → logprob: -17.393247604370117
    10. '	to' → logprob: -18.018247604370117

Token 225: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5761283040046692
    2. '1' → logprob: -0.8261283040046692
    3. '10' → logprob: -8.576128005981445
    4. ' one' → logprob: -16.076128005981445
    5. 'value' → logprob: -16.576128005981445
    6. '```' → logprob: -16.701128005981445
    7. ' value' → logprob: -17.326128005981445
    8. '<|end|>' → logprob: -17.701128005981445
    9. '  ' → logprob: -18.201128005981445
    10. '0' → logprob: -18.326128005981445

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. '10' → logprob: -14.625109672546387
    4. '```' → logprob: -19.25010871887207
    5. '１' → logprob: -20.37510871887207
    6. '-' → logprob: -21.25010871887207
    7. 'value' → logprob: -21.62510871887207
    8. '01' → logprob: -21.62510871887207
    9. '   ' → logprob: -21.87510871887207
    10. ' one' → logprob: -22.12510871887207

Token 227: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03459330275654793
    2. ' while' → logprob: -3.659593343734741
    3. ' for' → logprob: -5.534593105316162
    4. 'while' → logprob: -5.534593105316162
    5. 'for' → logprob: -8.28459358215332
    6. '   ' → logprob: -10.15959358215332
    7. ',' → logprob: -10.65959358215332
    8. '	while' → logprob: -11.65959358215332
    9. ' to' → logprob: -11.78459358215332
    10. '        
' → logprob: -11.90959358215332

Token 228: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.10021961480379105
    2. 'total' → logprob: -2.3502197265625
    3. '(total' → logprob: -11.7252197265625
    4. ' ac' → logprob: -13.2252197265625
    5. ' ' → logprob: -13.7252197265625
    6. '	total' → logprob: -14.6002197265625
    7. '   ' → logprob: -15.1002197265625
    8. 'to' → logprob: -15.6002197265625
    9. 'aces' → logprob: -15.6002197265625
    10. '_total' → logprob: -15.8502197265625

Token 229: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4287247955799103
    2. ' >' → logprob: -1.053724765777588
    3. 'and' → logprob: -11.553725242614746
    4. ' ' → logprob: -12.053725242614746
    5. 'total' → logprob: -13.303725242614746
    6. '>Total' → logprob: -13.303725242614746
    7. '_' → logprob: -13.678725242614746
    8. ' and' → logprob: -14.178725242614746
    9. 'is' → logprob: -14.428725242614746
    10. '   ' → logprob: -14.678725242614746

Token 230: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.47584572434425354
    2. ' ' → logprob: -0.9758456945419312
    3. '20' → logprob: -6.350845813751221
    4. '2' → logprob: -11.475845336914062
    5. '>' → logprob: -11.975845336914062
    6. '1' → logprob: -13.475845336914062
    7. '10' → logprob: -14.913345336914062
    8. '19' → logprob: -14.913345336914062
    9. 's' → logprob: -15.100845336914062
    10. '_' → logprob: -15.288345336914062

Token 231: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.00039111197111196816
    2. ' ' → logprob: -7.875391006469727
    3. '2' → logprob: -11.625391006469727
    4. '20' → logprob: -13.375391006469727
    5. '1' → logprob: -15.875391006469727
    6. '17' → logprob: -16.375391006469727
    7. '```' → logprob: -16.875391006469727
    8. '0' → logprob: -17.625391006469727
    9. '31' → logprob: -17.625391006469727
    10. '10' → logprob: -17.750391006469727

Token 232: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00957026332616806
    2. ' and' → logprob: -4.884570121765137
    3. ' while' → logprob: -6.509570121765137
    4. ',' → logprob: -9.009570121765137
    5. '        
' → logprob: -9.384570121765137
    6. '
' → logprob: -9.759570121765137
    7. '   ' → logprob: -9.759570121765137
    8. ' for' → logprob: -10.134570121765137
    9. '        ' → logprob: -10.759570121765137
    10. '<|end|>' → logprob: -11.134570121765137

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041002172976732254
    2. '
' → logprob: -3.2910022735595703
    3. ' while' → logprob: -6.79100227355957
    4. '   ' → logprob: -7.16600227355957
    5. '        
' → logprob: -7.54100227355957
    6. '<|end|>' → logprob: -8.91600227355957
    7. ' 
' → logprob: -9.54100227355957
    8. ',' → logprob: -10.04100227355957
    9. 'while' → logprob: -10.04100227355957
    10. '    
' → logprob: -10.16600227355957

Token 234: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.18180495500564575
    2. '       ' → logprob: -2.181804895401001
    3. 'while' (adapté à ' while') → logprob: -2.931804895401001
    4. '   ' → logprob: -9.556804656982422
    5. '	while' → logprob: -11.306804656982422
    6. '    ' → logprob: -12.056804656982422
    7. ' for' → logprob: -12.556804656982422
    8. '        ' → logprob: -13.681804656982422
    9. '        
' → logprob: -13.931804656982422
    10. ' ' → logprob: -14.306804656982422

Token 235: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.00462284917011857
    2. 'total' → logprob: -5.379622936248779
    3. '(total' → logprob: -14.004622459411621
    4. ' tota' → logprob: -14.379622459411621
    5. ' ' → logprob: -14.879622459411621
    6. ' ac' → logprob: -14.879622459411621
    7. ' tot' → logprob: -15.629622459411621
    8. '	total' → logprob: -16.004623413085938
    9. ' totals' → logprob: -16.129623413085938
    10. '_total' → logprob: -17.254623413085938

Token 236: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11283711344003677
    2. '>' → logprob: -2.237837076187134
    3. ' ' → logprob: -11.612836837768555
    4. 'and' → logprob: -12.862836837768555
    5. ' and' → logprob: -13.612836837768555
    6. ' ' → logprob: -14.237836837768555
    7. '()>' → logprob: -14.612836837768555
    8. ')' → logprob: -15.862836837768555
    9. '<|end|>' → logprob: -16.737836837768555
    10. '">' → logprob: -16.862836837768555

Token 237: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.17974671721458435
    2. ' ' → logprob: -1.8047467470169067
    3. '2' → logprob: -14.179746627807617
    4. '20' → logprob: -14.679746627807617
    5. '
' → logprob: -16.304746627807617
    6. ' ' → logprob: -16.367246627807617
    7. '   ' → logprob: -16.429746627807617
    8. '```' → logprob: -16.492246627807617
    9. '  ' → logprob: -16.742246627807617
    10. '	' → logprob: -16.742246627807617

Token 238: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '2' → logprob: -15.125075340270996
    4. '```' → logprob: -18.00007438659668
    5. '20' → logprob: -18.12507438659668
    6. '1' → logprob: -18.37507438659668
    7. '   ' → logprob: -18.87507438659668
    8. '
' → logprob: -19.12507438659668
    9. '  ' → logprob: -19.43757438659668
    10. '`' → logprob: -19.56257438659668

Token 239: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01815076172351837
    2. 'and' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.393150329589844
    4. ' ' → logprob: -17.143150329589844
    5. ' an' → logprob: -17.268150329589844
    6. '    ' → logprob: -17.518150329589844
    7. ' a' → logprob: -17.643150329589844
    8. '        ' → logprob: -17.643150329589844
    9. '0' → logprob: -18.143150329589844
    10. ',' → logprob: -18.143150329589844

Token 240: ' ac' (ID: 1375)
  Prédit: ' ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ac' → logprob: -0.014168089255690575
    2. 'aces' → logprob: -4.2641682624816895
    3. ' ' → logprob: -13.264167785644531
    4. 'ac' → logprob: -14.139167785644531
    5. '
' → logprob: -14.639167785644531
    6. '   ' → logprob: -14.764167785644531
    7. 'ACES' → logprob: -15.014167785644531
    8. '```' → logprob: -15.514167785644531
    9. ' ' → logprob: -15.764167785644531
    10. 'acs' → logprob: -15.889167785644531

Token 241: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -2.45848218582978e-06
    2. 'e' → logprob: -13.25000286102295
    3. '>' → logprob: -15.00000286102295
    4. ' es' → logprob: -16.875001907348633
    5. '```' → logprob: -17.000001907348633
    6. '#' → logprob: -17.750001907348633
    7. 's' → logprob: -18.000001907348633
    8. '<' → logprob: -18.250001907348633
    9. '	es' → logprob: -18.250001907348633
    10. 'Es' → logprob: -18.500001907348633

Token 242: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.160373717546463
    2. '>' → logprob: -1.9103736877441406
    3. ':' → logprob: -8.91037368774414
    4. ' and' → logprob: -12.16037368774414
    5. 'and' → logprob: -12.28537368774414
    6. '>:' → logprob: -14.03537368774414
    7. ')>' → logprob: -14.16037368774414
    8. '()>' → logprob: -14.53537368774414
    9. ' ' → logprob: -14.78537368774414
    10. ' ' → logprob: -14.91037368774414

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020720958709717
    2. ' ' → logprob: -2.3502073287963867
    3. '  ' → logprob: -16.22520637512207
    4. '<|end|>' → logprob: -16.35020637512207
    5. '```' → logprob: -16.60020637512207
    6. ' ' → logprob: -16.72520637512207
    7. '   ' → logprob: -16.72520637512207
    8. '>' → logprob: -16.91270637512207
    9. '1' → logprob: -17.28770637512207
    10. '`' → logprob: -17.41270637512207

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '   ' → logprob: -18.875295639038086
    4. '  ' → logprob: -19.375295639038086
    5. '۰' → logprob: -19.500295639038086
    6. '```' → logprob: -19.875295639038086
    7. ' ' → logprob: -20.500295639038086
    8. '
' → logprob: -20.625295639038086
    9. '    ' → logprob: -21.062795639038086
    10. '1' → logprob: -21.500295639038086

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033719129860401154
    2. ':
' → logprob: -3.408719062805176
    3. '       ' → logprob: -10.158719062805176
    4. ',' → logprob: -11.533719062805176
    5. '):
' → logprob: -11.908719062805176
    6. '   ' → logprob: -12.033719062805176
    7. ' :' → logprob: -12.408719062805176
    8. ' :
' → logprob: -13.033719062805176
    9. ':

' → logprob: -13.158719062805176
    10. ' and' → logprob: -13.533719062805176

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05619638413190842
    2. '
' → logprob: -3.681196451187134
    3. '       ' → logprob: -3.681196451187134
    4. '        
' → logprob: -6.431196212768555
    5. '            
' → logprob: -6.806196212768555
    6. '    
' → logprob: -7.556196212768555
    7. '   ' → logprob: -8.056196212768555
    8. ' 
' → logprob: -8.556196212768555
    9. '<|end|>' → logprob: -8.681196212768555
    10. '               ' → logprob: -9.056196212768555

Token 247: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.1505376100540161
    2. 'total' (adapté à ' total') → logprob: -2.5255374908447266
    3. '           ' → logprob: -2.9005374908447266
    4. ' 
' → logprob: -6.150537490844727
    5. '       ' → logprob: -7.275537490844727
    6. '
' → logprob: -7.400537490844727
    7. '            
' → logprob: -7.525537490844727
    8. '        
' → logprob: -8.775537490844727
    9. '               ' → logprob: -9.025537490844727
    10. '   ' → logprob: -9.275537490844727

Token 248: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.0050614336505532265
    2. '-=' → logprob: -5.630061626434326
    3. '-' → logprob: -6.630061626434326
    4. ' -' → logprob: -8.880061149597168
    5. '=' → logprob: -14.880061149597168
    6. ' +=' → logprob: -15.255061149597168
    7. '   ' → logprob: -15.380061149597168
    8. ' ' → logprob: -16.255062103271484
    9. '```' → logprob: -16.755062103271484
    10. ' =' → logprob: -17.130062103271484

Token 249: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '1' → logprob: -15.875007629394531
    4. '9' → logprob: -19.87500762939453
    5. '```' → logprob: -20.00000762939453
    6. '۱۰' → logprob: -20.25000762939453
    7. '１０' → logprob: -20.50000762939453
    8. '
' → logprob: -20.62500762939453
    9. 'ten' → logprob: -20.87500762939453
    10. '0' → logprob: -22.25000762939453

Token 250: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.375
    3. ' ' → logprob: -17.625
    4. '۱۰' → logprob: -19.25
    5. '```' → logprob: -19.375
    6. '１０' → logprob: -19.75
    7. '
' → logprob: -21.25
    8. '9' → logprob: -21.375
    9. '१०' → logprob: -21.375
    10. 'ten' → logprob: -21.625

Token 251: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030805266578681767
    2. 'aces' → logprob: -8.3753080368042
    3. '       ' → logprob: -10.5003080368042
    4. '   ' → logprob: -10.6253080368042
    5. '
' → logprob: -11.0003080368042
    6. ',' → logprob: -13.5003080368042
    7. 'es' → logprob: -13.6253080368042
    8. '               ' → logprob: -13.6253080368042
    9. '    
' → logprob: -13.8753080368042
    10. 'acs' → logprob: -14.0003080368042

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0059976475313305855
    2. 'aces' → logprob: -5.130997657775879
    3. '       ' → logprob: -10.380997657775879
    4. '   ' → logprob: -10.880997657775879
    5. ' ac' → logprob: -12.130997657775879
    6. 'acs' → logprob: -12.505997657775879
    7. '
' → logprob: -13.005997657775879
    8. '               ' → logprob: -13.630997657775879
    9. '          ' → logprob: -14.130997657775879
    10. '            
' → logprob: -14.255997657775879

Token 253: ' ac' (ID: 1375)
  Prédit: 'aces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.000333320174831897
    2. ' ac' → logprob: -8.125333786010742
    3. '           ' → logprob: -11.250333786010742
    4. '   ' → logprob: -11.375333786010742
    5. '       ' → logprob: -12.375333786010742
    6. '         ' → logprob: -13.125333786010742
    7. 'acs' → logprob: -13.625333786010742
    8. ' ' → logprob: -14.000333786010742
    9. 'acies' → logprob: -14.250333786010742
    10. 'ace' → logprob: -14.250333786010742

Token 254: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: 0.0
    2. ' es' → logprob: -17.5
    3. 'e' → logprob: -17.75
    4. '	es' → logprob: -20.125
    5. 'Es' → logprob: -21.375
    6. '   ' → logprob: -21.375
    7. '```' → logprob: -21.625
    8. '_es' → logprob: -21.75
    9. 'ES' → logprob: -21.875
    10. ''es' → logprob: -22.0

Token 255: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5246778726577759
    2. ' -=' → logprob: -1.1496778726577759
    3. '-=' → logprob: -2.3996777534484863
    4. '<|end|>' → logprob: -7.649677753448486
    5. ' -' → logprob: -8.399678230285645
    6. '   ' → logprob: -10.649678230285645
    7. '=' → logprob: -11.274678230285645
    8. ' ' → logprob: -12.024678230285645
    9. '```' → logprob: -12.274678230285645
    10. '<|end|>' → logprob: -12.399678230285645

Token 256: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -17.500179290771484
    4. '```' → logprob: -19.125179290771484
    5. '<|end|>' → logprob: -19.625179290771484
    6. '۱' → logprob: -20.250179290771484
    7. '  ' → logprob: -20.625179290771484
    8. ' ' → logprob: -21.125179290771484
    9. '１' → logprob: -21.312679290771484
    10. '       ' → logprob: -21.437679290771484

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -19.125001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '۱' → logprob: -20.750001907348633
    6. '<|end|>' → logprob: -21.125001907348633
    7. '１' → logprob: -22.125001907348633
    8. '১' → logprob: -23.187501907348633
    9. '  ' → logprob: -23.187501907348633
    10. '
' → logprob: -23.187501907348633

Token 258: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010025453753769398
    2. ' return' → logprob: -5.010025501251221
    3. '
' → logprob: -5.885025501251221
    4. 'return' → logprob: -7.760025501251221
    5. '   ' → logprob: -10.510025024414062
    6. '        
' → logprob: -10.635025024414062
    7. '<|end|>' → logprob: -11.510025024414062
    8. ' 
' → logprob: -11.760025024414062
    9. ',' → logprob: -12.135025024414062
    10. '    
' → logprob: -12.510025024414062

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023605444002896547
    2. ' return' → logprob: -6.2523603439331055
    3. 'return' → logprob: -8.002360343933105
    4. '
' → logprob: -9.877360343933105
    5. '   ' → logprob: -10.377360343933105
    6. '        
' → logprob: -12.502360343933105
    7. '```' → logprob: -13.252360343933105
    8. '	return' → logprob: -13.627360343933105
    9. '      ' → logprob: -13.877360343933105
    10. '           ' → logprob: -14.127360343933105

Token 260: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7963271737098694
    2. 'return' (adapté à ' return') → logprob: -0.7963271737098694
    3. ' return' → logprob: -2.6713271141052246
    4. '   ' → logprob: -3.5463271141052246
    5. '	return' → logprob: -11.046327590942383
    6. '
' → logprob: -11.671327590942383
    7. ' ' → logprob: -11.671327590942383
    8. 'eturn' → logprob: -13.296327590942383
    9. '```' → logprob: -13.421327590942383
    10. '    
' → logprob: -13.671327590942383

Token 261: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0789131447672844
    2. 'total' → logprob: -2.5789132118225098
    3. '[' → logprob: -11.203912734985352
    4. ' [' → logprob: -11.703912734985352
    5. '(total' → logprob: -14.703912734985352
    6. ' ' → logprob: -14.703912734985352
    7. '	total' → logprob: -15.453912734985352
    8. '   ' → logprob: -15.578912734985352
    9. ' ' → logprob: -16.57891273498535
    10. ' tot' → logprob: -16.70391273498535

Token 262: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8606175184249878
    2. '<|end|>' → logprob: -0.9856175184249878
    3. '
' → logprob: -1.7356175184249878
    4. '   ' → logprob: -4.610617637634277
    5. '<|end|>' → logprob: -5.235617637634277
    6. '    
' → logprob: -5.610617637634277
    7. ' ' → logprob: -5.735617637634277
    8. ' def' → logprob: -6.360617637634277
    9. '  
' → logprob: -7.360617637634277
    10. ' 
' → logprob: -7.485617637634277

Token 264: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.364928700961173e-05
    2. ' def' → logprob: -9.750093460083008
    3. '   ' → logprob: -10.375093460083008
    4. 'class' → logprob: -13.625093460083008
    5. '@' → logprob: -14.250093460083008
    6. ' ' → logprob: -14.250093460083008
    7. 'd' → logprob: -14.375093460083008
    8. '@property' → logprob: -15.375093460083008
    9. '	def' → logprob: -15.625093460083008
    10. 'b' → logprob: -15.625093460083008

Token 265: ' soft' (ID: 10143)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.07242246717214584
    2. ' is' → logprob: -2.697422504425049
    3. 'can' → logprob: -7.197422504425049
    4. '__' → logprob: -7.572422504425049
    5. ' __' → logprob: -7.822422504425049
    6. 'def' → logprob: -8.07242202758789
    7. '_is' → logprob: -8.94742202758789
    8. 'has' → logprob: -9.19742202758789
    9. ' can' → logprob: -9.32242202758789
    10. ' has' → logprob: -9.69742202758789

Token 266: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2426213026046753
    2. '_value' → logprob: -2.242621421813965
    3. '_total' → logprob: -2.367621421813965
    4. '17' → logprob: -5.617621421813965
    5. '_values' → logprob: -6.242621421813965
    6. '_h' → logprob: -6.367621421813965
    7. '_hit' → logprob: -6.492621421813965
    8. '_count' → logprob: -6.992621421813965
    9. ' ' → logprob: -7.242621421813965
    10. '?' → logprob: -7.242621421813965

Token 267: '17' (ID: 1422)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.7720462083816528
    2. 'total' → logprob: -1.1470462083816528
    3. '17' → logprob: -1.6470462083816528
    4. 'values' → logprob: -4.022046089172363
    5. '21' → logprob: -5.897046089172363
    6. '18' → logprob: -6.772046089172363
    7. '_value' → logprob: -6.897046089172363
    8. 'hand' → logprob: -7.272046089172363
    9. '_total' → logprob: -7.397046089172363
    10. '19' → logprob: -7.522046089172363

Token 268: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000583653396461159
    2. '(' → logprob: -7.875583648681641
    3. '_' → logprob: -9.00058364868164
    4. '?' → logprob: -10.37558364868164
    5. 'self' → logprob: -11.12558364868164
    6. '_(' → logprob: -11.25058364868164
    7. '_hit' → logprob: -12.12558364868164
    8. 's' → logprob: -12.50058364868164
    9. '()' → logprob: -13.37558364868164
    10. '   ' → logprob: -13.37558364868164

Token 269: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06163564324378967
    2. '):
' → logprob: -3.061635732650757
    3. 'self' → logprob: -4.436635494232178
    4. ')' → logprob: -8.311635971069336
    5. '(self' → logprob: -8.311635971069336
    6. '_' → logprob: -8.811635971069336
    7. 'def' → logprob: -9.061635971069336
    8. '):
' → logprob: -9.186635971069336
    9. ',' → logprob: -9.436635971069336
    10. '   ' → logprob: -9.686635971069336

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03919416666030884
    2. ':' → logprob: -3.914194107055664
    3. '(self' → logprob: -5.039194107055664
    4. '():' → logprob: -5.039194107055664
    5. '   ' → logprob: -6.414194107055664
    6. '(' → logprob: -6.664194107055664
    7. '):' → logprob: -7.039194107055664
    8. 'def' → logprob: -7.539194107055664
    9. 'self' → logprob: -8.289194107055664
    10. '):
' → logprob: -8.914194107055664

Token 271: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4130437672138214
    2. 'return' → logprob: -1.163043737411499
    3. '       ' → logprob: -4.413043975830078
    4. ' return' → logprob: -5.038043975830078
    5. ' total' → logprob: -5.288043975830078
    6. 'value' → logprob: -7.163043975830078
    7. '   ' → logprob: -7.163043975830078
    8. 'if' → logprob: -8.163043975830078
    9. '"""' → logprob: -9.538043975830078
    10. '#' (adapté à ' #') → logprob: -9.913043975830078

Token 272: ' Soft' (ID: 30842)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15821205079555511
    2. 'total' → logprob: -2.0332119464874268
    3. ' return' → logprob: -4.908212184906006
    4. 'value' → logprob: -5.658212184906006
    5. ' total' → logprob: -6.408212184906006
    6. 'def' → logprob: -6.783212184906006
    7. '   ' → logprob: -7.783212184906006
    8. 'if' → logprob: -7.908212184906006
    9. '       ' → logprob: -8.283211708068848
    10. '"""' → logprob: -8.533211708068848

Token 273: ' ' (ID: 220)
  Prédit: '17'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '17' → logprob: -0.6188514232635498
    2. '   ' → logprob: -1.7438514232635498
    3. 'return' → logprob: -2.11885142326355
    4. ' return' → logprob: -2.49385142326355
    5. '_' → logprob: -4.118851661682129
    6. ' if' → logprob: -4.368851661682129
    7. 'total' → logprob: -4.368851661682129
    8. 'def' → logprob: -4.868851661682129
    9. '       ' → logprob: -5.118851661682129
    10. 'if' → logprob: -5.243851661682129

Token 274: '17' (ID: 1422)
  Prédit: '17'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -0.0026567510794848204
    2. 'total' → logprob: -6.752656936645508
    3. 'and' → logprob: -7.877656936645508
    4. 'value' → logprob: -8.377656936645508
    5. ' ' → logprob: -8.502656936645508
    6. 'hand' → logprob: -8.752656936645508
    7. '   ' → logprob: -8.877656936645508
    8. ' and' → logprob: -9.127656936645508
    9. '_' → logprob: -9.877656936645508
    10. '=' → logprob: -10.252656936645508

Token 275: ' means' (ID: 4748)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5631909370422363
    2. ':' → logprob: -1.6881909370422363
    3. '(self' → logprob: -1.9381909370422363
    4. '   ' → logprob: -2.0631909370422363
    5. '():' → logprob: -2.4381909370422363
    6. '       ' → logprob: -2.8131909370422363
    7. ' =' → logprob: -3.3131909370422363
    8. '=' → logprob: -3.5631909370422363
    9. ' is' → logprob: -3.8131909370422363
    10. '()' → logprob: -3.8131909370422363

Token 276: ' total' (ID: 3609)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0622180737555027
    2. ' self' → logprob: -3.062218189239502
    3. 'any' → logprob: -5.062218189239502
    4. ' any' → logprob: -5.312218189239502
    5. 'total' → logprob: -6.562218189239502
    6. 'return' → logprob: -8.312217712402344
    7. '17' → logprob: -8.437217712402344
    8. '21' → logprob: -8.812217712402344
    9. ' ' → logprob: -9.687217712402344
    10. '   ' → logprob: -10.062217712402344

Token 277: ' ' (ID: 220)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4109596014022827
    2. ' ==' → logprob: -1.1609596014022827
    3. '()' → logprob: -4.410959720611572
    4. '()==' → logprob: -4.660959720611572
    5. '=' → logprob: -6.660959720611572
    6. '>=' → logprob: -8.035959243774414
    7. ' >=' → logprob: -8.410959243774414
    8. '17' → logprob: -9.035959243774414
    9. ' ' → logprob: -9.285959243774414
    10. '<=' → logprob: -10.410959243774414

Token 278: '17' (ID: 1422)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0013273799559101462
    2. ' ==' → logprob: -7.3763275146484375
    3. '=' → logprob: -8.376327514648438
    4. '()==' → logprob: -8.501327514648438
    5. '17' → logprob: -9.126327514648438
    6. '>=' → logprob: -9.376327514648438
    7. '()' → logprob: -10.251327514648438
    8. 'is' → logprob: -11.501327514648438
    9. '<=' → logprob: -11.626327514648438
    10. '===' → logprob: -11.876327514648438

Token 279: ' with' (ID: 483)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38787391781806946
    2. 'and' → logprob: -1.137873888015747
    3. ',' → logprob: -7.387874126434326
    4. '()' → logprob: -8.637873649597168
    5. '   ' → logprob: -9.887873649597168
    6. ' ' → logprob: -10.137873649597168
    7. ' with' → logprob: -10.637873649597168
    8. '>' → logprob: -10.762873649597168
    9. '       ' → logprob: -11.137873649597168
    10. 'with' → logprob: -11.512873649597168

Token 280: ' one' (ID: 1001)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.436996191740036
    2. 'at' → logprob: -2.0619962215423584
    3. ' at' → logprob: -2.3119962215423584
    4. ' an' → logprob: -2.4369962215423584
    5. 'any' → logprob: -3.8119962215423584
    6. 'aces' → logprob: -4.436995983123779
    7. ' any' → logprob: -5.186995983123779
    8. 'a' → logprob: -8.061996459960938
    9. 'ace' → logprob: -8.186996459960938
    10. ' a' → logprob: -9.686996459960938

Token 281: ' ace' (ID: 19084)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.16063717007637024
    2. ' or' → logprob: -1.9106371402740479
    3. '+' → logprob: -9.285636901855469
    4. '(or' → logprob: -9.410636901855469
    5. 'ace' → logprob: -9.660636901855469
    6. 'more' → logprob: -9.785636901855469
    7. 'aces' → logprob: -10.410636901855469
    8. '(' → logprob: -10.660636901855469
    9. 'orm' → logprob: -10.910636901855469
    10. '<|end|>' → logprob: -11.285636901855469

Token 282: ' counted' (ID: 60500)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19997726380825043
    2. 'and' → logprob: -2.074977159500122
    3. ' in' → logprob: -3.324977159500122
    4. '   ' → logprob: -4.699977397918701
    5. 'in' → logprob: -5.324977397918701
    6. ',' → logprob: -6.574977397918701
    7. 'def' → logprob: -6.824977397918701
    8. '       ' → logprob: -7.199977397918701
    9. ' def' → logprob: -7.324977397918701
    10. ' ' → logprob: -7.574977397918701

Token 283: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.02976287715137005
    2. ' as' → logprob: -3.5297629833221436
    3. '11' → logprob: -11.529763221740723
    4. ' ' → logprob: -13.779763221740723
    5. '10' → logprob: -14.404763221740723
    6. '	as' → logprob: -15.154763221740723
    7. '_as' → logprob: -15.279763221740723
    8. 'at' → logprob: -16.154762268066406
    9. '```' → logprob: -16.279762268066406
    10. '   ' → logprob: -16.904762268066406

Token 284: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.00033951509976759553
    2. ' ' → logprob: -8.00033950805664
    3. '1' → logprob: -12.50033950805664
    4. 'ele' → logprob: -14.75033950805664
    5. ' eleven' → logprob: -18.50033950805664
    6. '１１' → logprob: -18.50033950805664
    7. '   ' → logprob: -19.00033950805664
    8. '  ' → logprob: -19.62533950805664
    9. 'soft' → logprob: -19.87533950805664
    10. '10' → logprob: -20.25033950805664

Token 285: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.000000953674316
    3. ' ' → logprob: -15.375000953674316
    4. 'ele' → logprob: -17.375001907348633
    5. '１１' → logprob: -19.125001907348633
    6. '   ' → logprob: -20.250001907348633
    7. '
' → logprob: -20.875001907348633
    8. '  ' → logprob: -21.250001907348633
    9. '

' → logprob: -21.250001907348633
    10. 'value' → logprob: -21.500001907348633

Token 286: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6148079633712769
    2. '       ' → logprob: -0.8648079633712769
    3. '   ' → logprob: -4.364808082580566
    4. 'def' → logprob: -4.364808082580566
    5. 'and' → logprob: -4.989808082580566
    6. ' def' → logprob: -6.114808082580566
    7. ',' → logprob: -6.364808082580566
    8. ':' → logprob: -7.614808082580566
    9. ' =' → logprob: -7.739808082580566
    10. ' in' → logprob: -9.114808082580566

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2100088745355606
    2. '   ' → logprob: -1.7100088596343994
    3. ':' → logprob: -5.4600090980529785
    4. 'def' → logprob: -6.0850090980529785
    5. '(' → logprob: -7.0850090980529785
    6. ',' → logprob: -8.71000862121582
    7. '    ' → logprob: -8.71000862121582
    8. ' and' → logprob: -8.83500862121582
    9. ' def' → logprob: -9.21000862121582
    10. ':
' → logprob: -9.71000862121582

Token 288: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.09059081226587296
    2. 'return' → logprob: -2.715590715408325
    3. ' total' → logprob: -4.965590953826904
    4. '       ' → logprob: -5.340590953826904
    5. 'value' → logprob: -5.715590953826904
    6. ' return' → logprob: -6.215590953826904
    7. 'values' → logprob: -6.715590953826904
    8. 'if' → logprob: -7.340590953826904
    9. '   ' → logprob: -7.840590953826904
    10. 'val' → logprob: -7.965590953826904

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15726979076862335
    2. '=' → logprob: -2.1572697162628174
    3. ' ==' → logprob: -3.5322697162628174
    4. '==' → logprob: -8.282269477844238
    5. ',' → logprob: -8.407269477844238
    6. ' ' → logprob: -9.657269477844238
    7. ' :=' → logprob: -9.782269477844238
    8. '()' → logprob: -10.907269477844238
    9. ')' → logprob: -11.657269477844238
    10. ' >=' → logprob: -12.157269477844238

Token 290: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10352499037981033
    2. 'self' → logprob: -2.353524923324585
    3. ' sum' → logprob: -6.353525161743164
    4. '17' → logprob: -7.103525161743164
    5. ' self' → logprob: -7.728525161743164
    6. '0' → logprob: -8.478525161743164
    7. ' ' → logprob: -9.728525161743164
    8. '21' → logprob: -10.728525161743164
    9. '   ' → logprob: -11.978525161743164
    10. '	sum' → logprob: -12.603525161743164

Token 291: '(card' (ID: 51112)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.47506147623062134
    2. '(card' → logprob: -0.9750614762306213
    3. '(' → logprob: -7.600061416625977
    4. ' card' → logprob: -7.850061416625977
    5. '(
' → logprob: -10.225061416625977
    6. '	card' → logprob: -10.600061416625977
    7. '1' → logprob: -10.725061416625977
    8. ' ' → logprob: -13.225061416625977
    9. '.card' → logprob: -13.350061416625977
    10. '_card' → logprob: -13.850061416625977

Token 292: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.02326178550720215
    2. '.' → logprob: -3.773261785507202
    3. ' .' → logprob: -11.648262023925781
    4. 'value' → logprob: -11.898262023925781
    5. '.card' → logprob: -15.273262023925781
    6. ' ' → logprob: -15.398262023925781
    7. '._' → logprob: -16.64826202392578
    8. ' value' → logprob: -16.77326202392578
    9. '.
' → logprob: -17.27326202392578
    10. '   ' → logprob: -17.64826202392578

Token 293: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00118677644059062
    2. 'for' → logprob: -6.751186847686768
    3. ')' → logprob: -11.87618637084961
    4. ' ' → logprob: -11.87618637084961
    5. '	for' → logprob: -13.25118637084961
    6. ' in' → logprob: -15.37618637084961
    7. '   ' → logprob: -15.87618637084961
    8. ' if' → logprob: -16.00118637084961
    9. ' ' → logprob: -16.37618637084961
    10. ' )' → logprob: -16.50118637084961

Token 294: ' card' (ID: 4766)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.39450395107269287
    2. ' card' → logprob: -1.7695039510726929
    3. 'self' → logprob: -1.8945039510726929
    4. 'card' → logprob: -5.269504070281982
    5. ' ' → logprob: -11.644503593444824
    6. 'c' → logprob: -12.394503593444824
    7. '	card' → logprob: -12.644503593444824
    8. '   ' → logprob: -12.894503593444824
    9. '	self' → logprob: -13.269503593444824
    10. ' c' → logprob: -13.269503593444824

Token 295: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19076435267925262
    2. ' self' → logprob: -2.1907644271850586
    3. ' in' → logprob: -2.8157644271850586
    4. 'in' → logprob: -7.065764427185059
    5. ' ' → logprob: -7.815764427185059
    6. 'card' → logprob: -7.940764427185059
    7. ' card' → logprob: -8.565764427185059
    8. 's' → logprob: -9.690764427185059
    9. '   ' → logprob: -10.815764427185059
    10. '
' → logprob: -11.190764427185059

Token 296: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.043008092790842056
    2. ' self' → logprob: -3.1680080890655518
    3. '(self' → logprob: -12.793007850646973
    4. '
' → logprob: -13.793007850646973
    5. '[self' → logprob: -13.793007850646973
    6. ' ' → logprob: -13.918007850646973
    7. ')' → logprob: -14.418007850646973
    8. '	self' → logprob: -14.418007850646973
    9. '   ' → logprob: -14.543007850646973
    10. '=self' → logprob: -14.793007850646973

Token 297: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.00012535012501757592
    2. 'cards' → logprob: -9.12512493133545
    3. '.' → logprob: -12.00012493133545
    4. 's' → logprob: -13.00012493133545
    5. '(cards' → logprob: -13.12512493133545
    6. '_cards' → logprob: -13.50012493133545
    7. ' cards' → logprob: -13.62512493133545
    8. '.card' → logprob: -14.12512493133545
    9. ' .' → logprob: -14.62512493133545
    10. '   ' → logprob: -14.62512493133545

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026473183184862137
    2. ')
' → logprob: -3.6514732837677
    3. '       ' → logprob: -9.526473045349121
    4. ' )' → logprob: -9.901473045349121
    5. ')

' → logprob: -11.026473045349121
    6. ' if' → logprob: -11.151473045349121
    7. ' )
' → logprob: -11.776473045349121
    8. '   ' → logprob: -12.276473045349121
    9. 'if' → logprob: -13.026473045349121
    10. 'def' → logprob: -14.026473045349121

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004023307003080845
    2. ' and' → logprob: -6.12902307510376
    3. '        ' → logprob: -7.37902307510376
    4. ',' → logprob: -8.004023551940918
    5. 'aces' → logprob: -8.879023551940918
    6. ' if' → logprob: -9.129023551940918
    7. '   ' → logprob: -9.129023551940918
    8. ' ' → logprob: -9.504023551940918
    9. ' ac' → logprob: -9.629023551940918
    10. '
' → logprob: -10.004023551940918

Token 300: ' ac' (ID: 1375)
  Prédit: 'aces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.0038643311709165573
    2. '       ' → logprob: -6.003864288330078
    3. 'if' → logprob: -7.253864288330078
    4. '   ' → logprob: -8.253864288330078
    5. 'return' → logprob: -8.628864288330078
    6. 'has' → logprob: -9.628864288330078
    7. 'ace' → logprob: -9.753864288330078
    8. ' ac' → logprob: -9.878864288330078
    9. ' if' → logprob: -10.503864288330078
    10. 'acs' → logprob: -12.003864288330078

Token 301: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -7.707997428951785e-05
    2. '   ' → logprob: -10.250077247619629
    3. '       ' → logprob: -11.125077247619629
    4. '=' → logprob: -11.625077247619629
    5. 'e' → logprob: -11.875077247619629
    6. '_' → logprob: -13.375077247619629
    7. ' =' → logprob: -13.500077247619629
    8. 's' → logprob: -14.000077247619629
    9. '     ' → logprob: -14.125077247619629
    10. ' ' → logprob: -14.125077247619629

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007100477814674377
    2. '=' → logprob: -7.2507100105285645
    3. '>' → logprob: -17.125709533691406
    4. ' >' → logprob: -17.250709533691406
    5. ' =
' → logprob: -18.125709533691406
    6. ' ' → logprob: -18.250709533691406
    7. '=count' → logprob: -18.500709533691406
    8. 'count' → logprob: -18.500709533691406
    9. 's' → logprob: -19.125709533691406
    10. '_count' → logprob: -19.375709533691406

Token 303: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2522411048412323
    2. 'sum' → logprob: -1.5022411346435547
    3. '1' → logprob: -8.127241134643555
    4. '(sum' → logprob: -12.502241134643555
    5. ' ' → logprob: -12.877241134643555
    6. ' any' → logprob: -13.002241134643555
    7. '=sum' → logprob: -13.502241134643555
    8. ' [' → logprob: -13.752241134643555
    9. '	sum' → logprob: -13.877241134643555
    10. '   ' → logprob: -14.002241134643555

Token 304: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.547789674485102e-05
    2. '(card' → logprob: -10.500035285949707
    3. '1' → logprob: -11.875035285949707
    4. '(
' → logprob: -14.000035285949707
    5. ' (' → logprob: -17.125036239624023
    6. '((' → logprob: -18.375036239624023
    7. '(

' → logprob: -18.500036239624023
    8. 'card' → logprob: -18.750036239624023
    9. '(int' → logprob: -18.750036239624023
    10. '=' → logprob: -18.750036239624023

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.625012397766113
    3. 'card' → logprob: -13.000012397766113
    4. '(' → logprob: -13.625012397766113
    5. '(card' → logprob: -15.375012397766113
    6. '
' → logprob: -16.62501335144043
    7. '   ' → logprob: -17.25001335144043
    8. ' card' → logprob: -17.50001335144043
    9. '

' → logprob: -17.50001335144043
    10. ')' → logprob: -17.50001335144043

Token 306: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09186198562383652
    2. '(card' → logprob: -2.7168619632720947
    3. ' (' → logprob: -4.841862201690674
    4. '(' → logprob: -4.841862201690674
    5. 'for' → logprob: -5.341862201690674
    6. ' ' → logprob: -7.216862201690674
    7. ')' → logprob: -8.591861724853516
    8. ' if' → logprob: -9.591861724853516
    9. '(
' → logprob: -10.341861724853516
    10. '1' → logprob: -10.841861724853516

Token 307: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.04860122874379158
    2. 'card' → logprob: -3.0486011505126953
    3. '	card' → logprob: -12.048601150512695
    4. '(card' → logprob: -12.173601150512695
    5. 'c' → logprob: -13.673601150512695
    6. '.card' → logprob: -14.298601150512695
    7. 'self' → logprob: -14.673601150512695
    8. ' self' → logprob: -15.923601150512695
    9. 'car' → logprob: -16.048601150512695
    10. ' c' → logprob: -16.048601150512695

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008304747752845287
    2. 'in' → logprob: -7.12583065032959
    3. 'card' → logprob: -11.37583065032959
    4. ' ' → logprob: -11.62583065032959
    5. ' card' → logprob: -12.75083065032959
    6. '   ' → logprob: -13.87583065032959
    7. '.card' → logprob: -14.87583065032959
    8. '  ' → logprob: -15.37583065032959
    9. '(card' → logprob: -15.50083065032959
    10. '    ' → logprob: -15.87583065032959

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38698673248291016
    2. ' self' → logprob: -1.1369867324829102
    3. 'card' → logprob: -10.38698673248291
    4. ' ' → logprob: -10.51198673248291
    5. ' card' → logprob: -10.88698673248291
    6. '[self' → logprob: -11.63698673248291
    7. '	self' → logprob: -12.01198673248291
    8. '(self' → logprob: -12.51198673248291
    9. 'c' → logprob: -12.76198673248291
    10. '   ' → logprob: -12.94948673248291

Token 310: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.0003951648832298815
    2. 'cards' → logprob: -8.000394821166992
    3. 's' → logprob: -11.625394821166992
    4. ' .' → logprob: -11.625394821166992
    5. '.' → logprob: -11.750394821166992
    6. 'self' → logprob: -11.750394821166992
    7. '   ' → logprob: -12.250394821166992
    8. '(cards' → logprob: -12.250394821166992
    9. '.c' → logprob: -12.375394821166992
    10. '_cards' → logprob: -13.000394821166992

Token 311: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00015538577281404287
    2. 'if' → logprob: -8.875155448913574
    3. ' in' → logprob: -11.125155448913574
    4. '        ' → logprob: -15.125155448913574
    5. ')' → logprob: -15.500155448913574
    6. ' ' → logprob: -15.625155448913574
    7. ' for' → logprob: -16.250154495239258
    8. '       ' → logprob: -18.125154495239258
    9. 'import' → logprob: -18.375154495239258
    10. ' )' → logprob: -18.375154495239258

Token 312: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.6931522488594055
    2. 'card' → logprob: -0.6931522488594055
    3. '	card' → logprob: -13.19315242767334
    4. '(card' → logprob: -13.69315242767334
    5. ' ' → logprob: -13.94315242767334
    6. '.card' → logprob: -15.31815242767334
    7. 'car' → logprob: -15.44315242767334
    8. 'self' → logprob: -15.56815242767334
    9. 'c' → logprob: -15.94315242767334
    10. '   ' → logprob: -16.068151473999023

Token 313: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.002712976885959506
    2. '.' → logprob: -6.002713203430176
    3. ' .' → logprob: -8.377713203430176
    4. ').' → logprob: -12.752713203430176
    5. 'is' → logprob: -13.502713203430176
    6. '.has' → logprob: -14.252713203430176
    7. '   ' → logprob: -14.252713203430176
    8. '_.' → logprob: -14.377713203430176
    9. ' ' → logprob: -15.502713203430176
    10. ')' → logprob: -15.502713203430176

Token 314: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00033784625702537596
    2. 'ace' → logprob: -8.000337600708008
    3. ' ace' → logprob: -13.375337600708008
    4. 'Ace' → logprob: -14.875337600708008
    5. 'a' → logprob: -16.000337600708008
    6. 'aces' → logprob: -16.750337600708008
    7. ' Ace' → logprob: -17.625337600708008
    8. 'e' → logprob: -17.750337600708008
    9. 'ase' → logprob: -17.875337600708008
    10. '-' → logprob: -18.000337600708008

Token 315: 'ace' (ID: 675)
  Prédit: 'ace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ace' → logprob: -8.554343366995454e-05
    2. ' ace' → logprob: -9.500085830688477
    3. 'ac' → logprob: -12.375085830688477
    4. 'ae' → logprob: -13.125085830688477
    5. 'ase' → logprob: -13.625085830688477
    6. 'aces' → logprob: -13.625085830688477
    7. 'Ace' → logprob: -13.750085830688477
    8. 'a' → logprob: -15.125085830688477
    9. 'True' → logprob: -16.125085830688477
    10. 'ce' → logprob: -16.250085830688477

Token 316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1603792905807495
    2. ')
' → logprob: -1.9103792905807495
    3. '       ' → logprob: -9.660379409790039
    4. ')

' → logprob: -10.160379409790039
    5. ' )' → logprob: -10.535379409790039
    6. ' )
' → logprob: -11.160379409790039
    7. '   ' → logprob: -12.160379409790039
    8. ' and' → logprob: -13.035379409790039
    9. ')>' → logprob: -13.410379409790039
    10. ')
' → logprob: -14.285379409790039

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005712636047974229
    2. '   ' → logprob: -8.375571250915527
    3. ' if' → logprob: -9.125571250915527
    4. ' return' → logprob: -9.125571250915527
    5. '<|end|>' → logprob: -9.875571250915527
    6. '
' → logprob: -10.500571250915527
    7. '        
' → logprob: -11.250571250915527
    8. 'return' → logprob: -11.875571250915527
    9. '        ' → logprob: -12.625571250915527
    10. ' ' → logprob: -12.750571250915527

Token 318: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05053295940160751
    2. ' return' → logprob: -3.9255330562591553
    3. ' if' → logprob: -3.9255330562591553
    4. '   ' → logprob: -5.175532817840576
    5. 'return' → logprob: -6.175532817840576
    6. ' ' → logprob: -7.175532817840576
    7. '
' → logprob: -8.425533294677734
    8. '        ' → logprob: -8.550533294677734
    9. 'if' → logprob: -8.800533294677734
    10. '    ' → logprob: -9.175533294677734

Token 319: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8336374163627625
    2. ' return' → logprob: -1.4586374759674072
    3. ' if' → logprob: -1.7086374759674072
    4. 'if' → logprob: -2.2086374759674072
    5. ' while' → logprob: -4.583637237548828
    6. 'while' → logprob: -4.583637237548828
    7. '   ' → logprob: -5.083637237548828
    8. '       ' → logprob: -5.208637237548828
    9. ' for' → logprob: -5.458637237548828
    10. 'for' → logprob: -6.333637237548828

Token 320: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.034920644015073776
    2. 'total' → logprob: -3.6599206924438477
    3. ' ac' → logprob: -4.909920692443848
    4. ' ' → logprob: -8.034920692443848
    5. 'aces' → logprob: -8.159920692443848
    6. ' self' → logprob: -8.159920692443848
    7. ' not' → logprob: -8.409920692443848
    8. ' soft' → logprob: -10.784920692443848
    9. 'self' → logprob: -11.034920692443848
    10. '(total' → logprob: -11.659920692443848

Token 321: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5854935050010681
    2. '==' → logprob: -0.8354935050010681
    3. ' >=' → logprob: -5.210493564605713
    4. '>=' → logprob: -5.710493564605713
    5. '>' → logprob: -8.085493087768555
    6. ' <=' → logprob: -8.960493087768555
    7. '<=' → logprob: -9.210493087768555
    8. ' >' → logprob: -9.210493087768555
    9. '=' → logprob: -9.585493087768555
    10. ' ' → logprob: -10.460493087768555

Token 322: ' ' (ID: 220)
  Prédit: '17'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -0.008615872822701931
    2. ' ' → logprob: -4.758615970611572
    3. '1' → logprob: -13.633615493774414
    4. '7' → logprob: -16.758615493774414
    5. '18' → logprob: -16.758615493774414
    6. '１７' → logprob: -18.133615493774414
    7. '21' → logprob: -18.633615493774414
    8. '19' → logprob: -19.008615493774414
    9. '27' → logprob: -19.258615493774414
    10. '017' → logprob: -19.883615493774414

Token 323: '17' (ID: 1422)
  Prédit: '17'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -1.0325924449716695e-05
    2. '7' → logprob: -12.37501049041748
    3. ' ' → logprob: -12.37501049041748
    4. '1' → logprob: -13.25001049041748
    5. '１７' → logprob: -18.000009536743164
    6. '21' → logprob: -18.500009536743164
    7. '171' → logprob: -19.250009536743164
    8. '18' → logprob: -19.250009536743164
    9. '27' → logprob: -19.250009536743164
    10. '017' → logprob: -19.750009536743164

Token 324: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0032210873905569315
    2. 'and' → logprob: -5.753221035003662
    3. ' ' → logprob: -10.25322151184082
    4. '       ' → logprob: -12.37822151184082
    5. '   ' → logprob: -14.00322151184082
    6. ',' → logprob: -14.00322151184082
    7. '        ' → logprob: -14.37822151184082
    8. '    ' → logprob: -15.12822151184082
    9. '	and' → logprob: -15.12822151184082
    10. '<|end|>' → logprob: -15.12822151184082

Token 325: ' at' (ID: 540)
  Prédit: ' ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ac' → logprob: -0.0384148471057415
    2. 'aces' → logprob: -3.28841495513916
    3. 'ac' → logprob: -8.03841495513916
    4. 'total' → logprob: -10.91341495513916
    5. 'acs' → logprob: -11.41341495513916
    6. ' ' → logprob: -11.78841495513916
    7. 'ace' → logprob: -12.28841495513916
    8. ' total' → logprob: -12.66341495513916
    9. 'self' → logprob: -13.78841495513916
    10. ' ace' → logprob: -14.16341495513916

Token 326: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.026626069098711014
    2. ' least' → logprob: -3.6516261100769043
    3. '_le' → logprob: -8.901625633239746
    4. 'Least' → logprob: -10.026625633239746
    5. 'aces' → logprob: -10.151625633239746
    6. 'east' → logprob: -10.526625633239746
    7. 'lease' → logprob: -10.651625633239746
    8. 'lest' → logprob: -11.026625633239746
    9. ' ' → logprob: -12.276625633239746
    10. '>' → logprob: -12.526625633239746

Token 327: ' one' (ID: 1001)
  Prédit: 'aces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.06883636862039566
    2. '1' → logprob: -2.8188364505767822
    3. ' ' → logprob: -5.193836212158203
    4. ' ac' → logprob: -7.818836212158203
    5. ' one' → logprob: -7.943836212158203
    6. 'ac' → logprob: -8.443836212158203
    7. 'one' → logprob: -8.693836212158203
    8. '   ' → logprob: -10.068836212158203
    9. 'ones' → logprob: -10.943836212158203
    10. 'acs' → logprob: -10.943836212158203

Token 328: ' ace' (ID: 19084)
  Prédit: 'aces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.5138006210327148
    2. 'ace' → logprob: -1.3888006210327148
    3. ' ace' → logprob: -1.8888006210327148
    4. ' is' → logprob: -7.263800621032715
    5. ' ac' → logprob: -8.513800621032715
    6. '   ' → logprob: -9.263800621032715
    7. 'Ace' → logprob: -10.138800621032715
    8. 'is' → logprob: -10.888800621032715
    9. ' ' → logprob: -11.138800621032715
    10. 'aced' → logprob: -11.138800621032715

Token 329: ' still' (ID: 2928)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05537765473127365
    2. '>' → logprob: -3.430377721786499
    3. ' >' → logprob: -4.43037748336792
    4. 'and' → logprob: -4.68037748336792
    5. ' >=' → logprob: -8.680377960205078
    6. '>=' → logprob: -9.430377960205078
    7. ' ' → logprob: -10.930377960205078
    8. '   ' → logprob: -11.180377960205078
    9. ',' → logprob: -11.805377960205078
    10. 's' → logprob: -11.805377960205078

Token 330: ' counted' (ID: 60500)
  Prédit: 'aces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.012053589336574078
    2. 'and' → logprob: -5.262053489685059
    3. ' and' → logprob: -5.762053489685059
    4. 'ace' → logprob: -7.137053489685059
    5. 's' → logprob: -7.262053489685059
    6. '>' → logprob: -7.387053489685059
    7. ' ' → logprob: -8.262053489685059
    8. 'count' → logprob: -8.762053489685059
    9. 'aced' → logprob: -9.137053489685059
    10. '1' → logprob: -9.512053489685059

Token 331: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.09441567957401276
    2. 'as' → logprob: -2.7194156646728516
    3. ' and' → logprob: -4.594415664672852
    4. '>' → logprob: -4.844415664672852
    5. ' >' → logprob: -6.469415664672852
    6. ' for' → logprob: -6.844415664672852
    7. 'and' → logprob: -7.219415664672852
    8. ':' → logprob: -7.219415664672852
    9. ' in' → logprob: -7.469415664672852
    10. '=' → logprob: -7.594415664672852

Token 332: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.026977136731147766
    2. ' ' → logprob: -3.651977062225342
    3. '1' → logprob: -8.0269775390625
    4. 'True' → logprob: -9.1519775390625
    5. 'ace' → logprob: -9.4019775390625
    6. 'ele' → logprob: -9.5269775390625
    7. ' True' → logprob: -10.2769775390625
    8. ' ace' → logprob: -10.9019775390625
    9. ' eleven' → logprob: -12.1519775390625
    10. 'aces' → logprob: -12.2769775390625

Token 333: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.028611453250050545
    2. ' ' → logprob: -3.653611421585083
    3. '1' → logprob: -6.153611660003662
    4. 'ele' → logprob: -9.153611183166504
    5. 'ace' → logprob: -10.278611183166504
    6. 'True' → logprob: -11.403611183166504
    7. '   ' → logprob: -11.403611183166504
    8. ' ace' → logprob: -12.528611183166504
    9. '  ' → logprob: -12.778611183166504
    10. ' True' → logprob: -13.028611183166504

Token 334: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006940090097486973
    2. '       ' → logprob: -5.131939888000488
    3. 'and' → logprob: -7.256939888000488
    4. ':' → logprob: -8.756939888000488
    5. ':
' → logprob: -9.881939888000488
    6. ',' → logprob: -10.006939888000488
    7. '   ' → logprob: -10.631939888000488
    8. ' if' → logprob: -12.006939888000488
    9. ' return' → logprob: -12.256939888000488
    10. ' ' → logprob: -12.881939888000488

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39904823899269104
    2. ' and' → logprob: -1.1490482091903687
    3. ':' → logprob: -4.649048328399658
    4. '   ' → logprob: -7.149048328399658
    5. ' if' → logprob: -7.149048328399658
    6. ',' → logprob: -8.3990478515625
    7. 'and' → logprob: -8.6490478515625
    8. ':
' → logprob: -8.7740478515625
    9. ' :' → logprob: -9.2740478515625
    10. '        ' → logprob: -9.8990478515625

Token 336: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0971643328666687
    2. ' if' → logprob: -2.4721643924713135
    3. ' return' → logprob: -5.222164154052734
    4. '   ' → logprob: -6.097164154052734
    5. 'if' → logprob: -8.847164154052734
    6. 'return' → logprob: -8.972164154052734
    7. ' ' → logprob: -8.972164154052734
    8. '    ' → logprob: -9.472164154052734
    9. '	   ' → logprob: -11.597164154052734
    10. '	return' → logprob: -11.847164154052734

Token 337: ' ac' (ID: 1375)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7285795211791992
    2. 'total' → logprob: -0.8535795211791992
    3. ' ac' → logprob: -2.603579521179199
    4. 'aces' → logprob: -4.103579521179199
    5. 'ac' → logprob: -7.103579521179199
    6. ' ' → logprob: -9.8535795211792
    7. '   ' → logprob: -10.7285795211792
    8. '(total' → logprob: -11.1035795211792
    9. 'acs' → logprob: -11.4785795211792
    10. 'ace' → logprob: -11.4785795211792

Token 338: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.040254831314086914
    2. 'total' → logprob: -3.540254831314087
    3. '   ' → logprob: -5.290254592895508
    4. 'aces' → logprob: -6.165254592895508
    5. ' total' → logprob: -6.790254592895508
    6. '       ' → logprob: -7.290254592895508
    7. ' ' → logprob: -8.290254592895508
    8. 'ces' → logprob: -8.540254592895508
    9. '>' → logprob: -8.915254592895508
    10. '     ' → logprob: -9.165254592895508

Token 339: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05099004879593849
    2. '>' → logprob: -3.050990104675293
    3. ' and' → logprob: -6.050990104675293
    4. 'and' → logprob: -10.050990104675293
    5. ' ' → logprob: -14.425990104675293
    6. ' >
' → logprob: -15.050990104675293
    7. ':' → logprob: -16.175989151000977
    8. ' ' → logprob: -16.675989151000977
    9. ')>' → logprob: -17.550989151000977
    10. ',' → logprob: -18.300989151000977

Token 340: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931600570678711
    2. ' ' → logprob: -0.6931600570678711
    3. '1' → logprob: -11.318160057067871
    4. ' ' → logprob: -15.380660057067871
    5. '>' → logprob: -15.693160057067871
    6. '  ' → logprob: -16.443161010742188
    7. '   ' → logprob: -16.755661010742188
    8. '=' → logprob: -17.130661010742188
    9. '<|end|>' → logprob: -17.568161010742188
    10. '```' → logprob: -17.568161010742188

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01604035124182701
    2. ' ' → logprob: -4.141040325164795
    3. '1' → logprob: -12.016040802001953
    4. ' ' → logprob: -18.078540802001953
    5. '۰' → logprob: -18.766040802001953
    6. '```' → logprob: -18.766040802001953
    7. '  ' → logprob: -18.828540802001953
    8. '>' → logprob: -19.266040802001953
    9. '   ' → logprob: -19.328540802001953
    10. '=' → logprob: -19.578540802001953

Token 342: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0016057939501479268
    2. 'and' → logprob: -6.626605987548828
    3. ':' → logprob: -8.876605987548828
    4. ':
' → logprob: -9.001605987548828
    5. '   ' → logprob: -12.251605987548828
    6. ' ' → logprob: -12.501605987548828
    7. ' :' → logprob: -13.376605987548828
    8. '           ' → logprob: -13.376605987548828
    9. '	and' → logprob: -13.876605987548828
    10. ' :
' → logprob: -14.001605987548828

Token 343: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02074403502047062
    2. '       ' → logprob: -4.3957438468933105
    3. ' if' → logprob: -6.2707438468933105
    4. '<|end|>' → logprob: -6.7707438468933105
    5. 'and' → logprob: -6.8957438468933105
    6. ':
' → logprob: -7.0207438468933105
    7. ':' → logprob: -7.0207438468933105
    8. ' ' → logprob: -7.5207438468933105
    9. '   ' → logprob: -7.6457438468933105
    10. ',' → logprob: -8.645744323730469

Token 344: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06162106990814209
    2. '           ' → logprob: -3.5616211891174316
    3. 'if' (adapté à ' if') → logprob: -3.6866211891174316
    4. ' total' → logprob: -5.561621189117432
    5. 'total' → logprob: -6.311621189117432
    6. '   ' → logprob: -8.186620712280273
    7. ' and' → logprob: -8.686620712280273
    8. ' ' → logprob: -9.686620712280273
    9. '       ' → logprob: -9.811620712280273
    10. '
' → logprob: -11.061620712280273

Token 345: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.07889761030673981
    2. 'total' → logprob: -2.578897714614868
    3. '(total' → logprob: -12.203897476196289
    4. ' ' → logprob: -13.453897476196289
    5. ' (' → logprob: -14.078897476196289
    6. ' tota' → logprob: -15.828897476196289
    7. '	total' → logprob: -15.828897476196289
    8. '   ' → logprob: -16.32889747619629
    9. '17' → logprob: -16.82889747619629
    10. '$total' → logprob: -17.45389747619629

Token 346: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6326367259025574
    2. ' ==' → logprob: -0.7576367259025574
    3. '==
' → logprob: -11.757637023925781
    4. '<=' → logprob: -11.882637023925781
    5. ' ' → logprob: -12.132637023925781
    6. ' <=' → logprob: -12.382637023925781
    7. '-' → logprob: -12.757637023925781
    8. '=' → logprob: -13.007637023925781
    9. '>' → logprob: -13.257637023925781
    10. '>=' → logprob: -13.382637023925781

Token 347: ' ' (ID: 220)
  Prédit: '17'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -0.1797468215227127
    2. ' ' → logprob: -1.8047468662261963
    3. ' ' → logprob: -14.179746627807617
    4. '1' → logprob: -15.304746627807617
    5. '１７' → logprob: -15.429746627807617
    6. '<|end|>' → logprob: -15.742246627807617
    7. '' → logprob: -16.054746627807617
    8. '171' → logprob: -16.179746627807617
    9. ' seventeen' → logprob: -16.679746627807617
    10. '7' → logprob: -16.804746627807617

Token 348: '17' (ID: 1422)
  Prédit: '17'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -15.500017166137695
    4. '171' → logprob: -17.125017166137695
    5. '１７' → logprob: -17.125017166137695
    6. '' → logprob: -17.375017166137695
    7. '7' → logprob: -17.375017166137695
    8. '017' → logprob: -18.625017166137695
    9. '१७' → logprob: -18.750017166137695
    10. '21' → logprob: -19.312517166137695

Token 349: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0025391592644155025
    2. 'and' → logprob: -6.752539157867432
    3. '               ' → logprob: -7.127539157867432
    4. ':
' → logprob: -8.25253963470459
    5. ':' → logprob: -8.37753963470459
    6. '           ' → logprob: -10.12753963470459
    7. ':return' → logprob: -11.50253963470459
    8. ' ' → logprob: -11.62753963470459
    9. '            ' → logprob: -12.75253963470459
    10. ' return' → logprob: -12.75253963470459

Token 350: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00039706481038592756
    2. ' return' → logprob: -8.125396728515625
    3. '           ' → logprob: -10.375396728515625
    4. ' and' → logprob: -10.500396728515625
    5. 'return' → logprob: -11.125396728515625
    6. '   ' → logprob: -11.875396728515625
    7. '	           ' → logprob: -11.875396728515625
    8. '       ' → logprob: -12.500396728515625
    9. '		       ' → logprob: -12.500396728515625
    10. '              ' → logprob: -13.625396728515625

Token 351: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5767297744750977
    2. '               ' → logprob: -1.5767297744750977
    3. ' return' → logprob: -1.5767297744750977
    4. '           ' → logprob: -4.201729774475098
    5. '   ' → logprob: -5.076729774475098
    6. '                   ' → logprob: -5.951729774475098
    7. '	return' → logprob: -7.326729774475098
    8. '       ' → logprob: -8.451729774475098
    9. ' if' → logprob: -9.201729774475098
    10. '	           ' → logprob: -9.576729774475098

Token 352: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868713080883026
    2. ' True' → logprob: -1.136871337890625
    3. 'False' → logprob: -16.636871337890625
    4. '(True' → logprob: -16.886871337890625
    5. 'true' → logprob: -17.261871337890625
    6. '   ' → logprob: -17.761871337890625
    7. ' Tru' → logprob: -18.261871337890625
    8. 'Tr' → logprob: -18.511871337890625
    9. ' true' → logprob: -19.136871337890625
    10. ' ' → logprob: -19.261871337890625

Token 353: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.125210297293961e-05
    2. '       ' → logprob: -10.125081062316895
    3. '            
' → logprob: -10.375081062316895
    4. 'else' → logprob: -12.750081062316895
    5. '
' → logprob: -13.125081062316895
    6. '        
' → logprob: -13.625081062316895
    7. '   ' → logprob: -14.125081062316895
    8. '    
' → logprob: -14.500081062316895
    9. 'elif' → logprob: -14.625081062316895
    10. '.' → logprob: -15.500081062316895

Token 354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007249409682117403
    2. '       ' → logprob: -7.250724792480469
    3. '   ' → logprob: -12.000724792480469
    4. 'total' → logprob: -13.625724792480469
    5. '            
' → logprob: -13.750724792480469
    6. ',' → logprob: -14.000724792480469
    7. '          ' → logprob: -14.375724792480469
    8. '
' → logprob: -14.375724792480469
    9. ' if' → logprob: -14.500724792480469
    10. 'if' → logprob: -14.500724792480469

Token 355: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7402230501174927
    2. '           ' → logprob: -1.2402230501174927
    3. 'total' (adapté à ' total') → logprob: -1.8652230501174927
    4. ' total' → logprob: -2.615222930908203
    5. '   ' → logprob: -5.240222930908203
    6. ' if' → logprob: -9.490222930908203
    7. 'else' → logprob: -9.740222930908203
    8. 'if' → logprob: -9.990222930908203
    9. '	total' → logprob: -10.365222930908203
    10. '    ' → logprob: -10.990222930908203

Token 356: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10164089500904083
    2. '-=' → logprob: -2.3516409397125244
    3. '-' → logprob: -6.851640701293945
    4. '>' → logprob: -8.226640701293945
    5. ' >' → logprob: -9.726640701293945
    6. ' -' → logprob: -11.101640701293945
    7. '<|end|>' → logprob: -11.476640701293945
    8. ' ' → logprob: -11.601640701293945
    9. '=' → logprob: -12.476640701293945
    10. ',' → logprob: -12.476640701293945

Token 357: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '1' → logprob: -16.00004005432129
    4. '<|end|>' → logprob: -19.37504005432129
    5. '۱۰' → logprob: -19.87504005432129
    6. '１０' → logprob: -20.25004005432129
    7. '```' → logprob: -20.75004005432129
    8. '
' → logprob: -20.87504005432129
    9. ' ' → logprob: -21.50004005432129
    10. '   ' → logprob: -21.62504005432129

Token 358: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '1' → logprob: -16.000001907348633
    4. '<|end|>' → logprob: -19.250001907348633
    5. '۱۰' → logprob: -19.625001907348633
    6. '
' → logprob: -20.750001907348633
    7. '１０' → logprob: -20.875001907348633
    8. '```' → logprob: -21.750001907348633
    9. '१०' → logprob: -22.000001907348633
    10. '0' → logprob: -22.375001907348633

Token 359: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017125436570495367
    2. 'aces' → logprob: -6.376712322235107
    3. '   ' → logprob: -12.376712799072266
    4. '       ' → logprob: -13.376712799072266
    5. '               ' → logprob: -14.376712799072266
    6. ',' → logprob: -14.376712799072266
    7. '<|end|>' → logprob: -14.376712799072266
    8. '            
' → logprob: -14.501712799072266
    9. 'acs' → logprob: -14.501712799072266
    10. '          ' → logprob: -15.001712799072266

Token 360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03370356559753418
    2. 'aces' → logprob: -3.408703565597534
    3. '   ' → logprob: -10.408703804016113
    4. 'acs' → logprob: -11.408703804016113
    5. '       ' → logprob: -12.283703804016113
    6. '```' → logprob: -13.158703804016113
    7. '            
' → logprob: -13.283703804016113
    8. '<|end|>' → logprob: -13.533703804016113
    9. '               ' → logprob: -14.283703804016113
    10. '	   ' → logprob: -14.783703804016113

Token 361: ' ac' (ID: 1375)
  Prédit: 'aces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -1.1875571544806007e-05
    2. '           ' → logprob: -12.000011444091797
    3. '   ' → logprob: -13.000011444091797
    4. 'acs' → logprob: -13.625011444091797
    5. ' ac' → logprob: -13.875011444091797
    6. '         ' → logprob: -15.000011444091797
    7. '       ' → logprob: -15.125011444091797
    8. 'acies' → logprob: -15.625011444091797
    9. 'ACES' → logprob: -16.250011444091797
    10. ' ' → logprob: -16.375011444091797

Token 362: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.9361264946837764e-07
    2. 'e' → logprob: -16.25
    3. ' es' → logprob: -18.875
    4. '   ' → logprob: -21.0
    5. '```' → logprob: -21.25
    6. 'Es' → logprob: -21.5
    7. '	es' → logprob: -21.75
    8. '#' → logprob: -21.75
    9. '
' → logprob: -21.875
    10. 'ES' → logprob: -21.875

Token 363: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10395198315382004
    2. '-=' → logprob: -2.353951930999756
    3. '-' → logprob: -5.603951930999756
    4. ' -' → logprob: -9.978952407836914
    5. '<|end|>' → logprob: -12.603952407836914
    6. '    ' → logprob: -12.728952407836914
    7. '   ' → logprob: -13.853952407836914
    8. '=' → logprob: -14.853952407836914
    9. ' ' → logprob: -15.228952407836914
    10. '       ' → logprob: -15.853952407836914

Token 364: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029750604182481766
    2. ' ' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.27975082397461
    4. '```' → logprob: -16.77975082397461
    5. ' ' → logprob: -17.96725082397461
    6. '１' → logprob: -18.71725082397461
    7. '  ' → logprob: -18.90475082397461
    8. '`' → logprob: -19.02975082397461
    9. '0' → logprob: -19.21725082397461
    10. '	' → logprob: -19.21725082397461

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '```' → logprob: -17.25037956237793
    4. '   ' → logprob: -17.62537956237793
    5. '<|end|>' → logprob: -17.62537956237793
    6. '0' → logprob: -18.37537956237793
    7. '  ' → logprob: -19.50037956237793
    8. '۱' → logprob: -19.75037956237793
    9. ' ' → logprob: -19.81287956237793
    10. '`' → logprob: -19.87537956237793

Token 366: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013435659930109978
    2. ' return' → logprob: -6.876343727111816
    3. 'return' → logprob: -8.626343727111816
    4. '
' → logprob: -9.376343727111816
    5. '   ' → logprob: -10.376343727111816
    6. '	return' → logprob: -12.376343727111816
    7. '        
' → logprob: -12.751343727111816
    8. '<|end|>' → logprob: -12.876343727111816
    9. '    
' → logprob: -14.126343727111816
    10. ' ' → logprob: -14.501343727111816

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0052835652604699135
    2. 'return' → logprob: -5.755283355712891
    3. ' return' → logprob: -6.380283355712891
    4. '   ' → logprob: -8.25528335571289
    5. '
' → logprob: -9.00528335571289
    6. '	return' → logprob: -11.13028335571289
    7. '        
' → logprob: -12.63028335571289
    8. '    
' → logprob: -13.25528335571289
    9. 'None' → logprob: -14.13028335571289
    10. '	' → logprob: -14.25528335571289

Token 368: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045985981822013855
    2. '   ' → logprob: -3.2959859371185303
    3. 'return' (adapté à ' return') → logprob: -4.920986175537109
    4. ' return' → logprob: -7.420986175537109
    5. '	return' → logprob: -11.04598617553711
    6. '           ' → logprob: -13.17098617553711
    7. '     ' → logprob: -13.92098617553711
    8. '    ' → logprob: -13.92098617553711
    9. '      ' → logprob: -14.92098617553711
    10. '	   ' → logprob: -14.92098617553711

Token 369: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.306760805164231e-05
    2. ' False' → logprob: -11.25001335144043
    3. '(False' → logprob: -20.87501335144043
    4. 'True' → logprob: -23.50001335144043
    5. 'false' → logprob: -24.50001335144043
    6. '=False' → logprob: -24.62501335144043
    7. 'F' → logprob: -25.25001335144043
    8. '.False' → logprob: -25.37501335144043
    9. '_false' → logprob: -25.37501335144043
    10. 'Falsy' → logprob: -26.00001335144043

Token 370: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.691986083984375
    2. 'class' → logprob: -1.566986083984375
    3. '   ' → logprob: -1.691986083984375
    4. '<|end|>' → logprob: -2.441986083984375
    5. ' ' → logprob: -5.191986083984375
    6. '<|end|>' → logprob: -5.816986083984375
    7. '    
' → logprob: -6.441986083984375
    8. ')' → logprob: -6.441986083984375
    9. '
' → logprob: -6.566986083984375
    10. '.' → logprob: -6.816986083984375

Token 372: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009455301333218813
    2. 'class' → logprob: -7.500945568084717
    3. '   ' → logprob: -8.125945091247559
    4. ' def' → logprob: -9.500945091247559
    5. '@property' → logprob: -12.125945091247559
    6. '	def' → logprob: -12.375945091247559
    7. ' ' → logprob: -12.500945091247559
    8. ')' → logprob: -13.125945091247559
    9. '  ' → logprob: -13.750945091247559
    10. '@' → logprob: -13.750945091247559

Token 373: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.10016493499279022
    2. '__' → logprob: -2.6001648902893066
    3. 'best' → logprob: -4.725164890289307
    4. 'has' → logprob: -5.850164890289307
    5. 'b' → logprob: -5.975164890289307
    6. 'hard' → logprob: -6.225164890289307
    7. 'can' → logprob: -6.600164890289307
    8. 'score' → logprob: -7.100164890289307
    9. 'get' → logprob: -7.600164890289307
    10. 'clear' → logprob: -7.600164890289307

Token 374: '_black' (ID: 92024)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.005271822679787874
    2. '_black' → logprob: -5.255271911621094
    3. '_soft' → logprob: -10.880271911621094
    4. '_' → logprob: -11.630271911621094
    5. 'b' → logprob: -11.755271911621094
    6. '21' → logprob: -14.505271911621094
    7. '_s' → logprob: -14.630271911621094
    8. '_over' → logprob: -15.255271911621094
    9. '_finished' → logprob: -15.630271911621094
    10. ' ' → logprob: -16.130271911621094

Token 375: 'jack' (ID: 23223)
  Prédit: 'jack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jack' → logprob: -5.56233171664644e-05
    2. '_j' → logprob: -11.125055313110352
    3. 'jak' → logprob: -11.875055313110352
    4. 'j' → logprob: -12.000055313110352
    5. '   ' → logprob: -12.000055313110352
    6. '```' → logprob: -12.250055313110352
    7. 'jac' → logprob: -12.375055313110352
    8. 'Jack' → logprob: -12.750055313110352
    9. ' jack' → logprob: -12.750055313110352
    10. '__' → logprob: -13.250055313110352

Token 376: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.6087021473795176e-05
    2. '(' → logprob: -10.250045776367188
    3. 'self' → logprob: -12.250045776367188
    4. '   ' → logprob: -12.500045776367188
    5. ' (' → logprob: -14.125045776367188
    6. '       ' → logprob: -14.500045776367188
    7. '(s' → logprob: -15.000045776367188
    8. ' self' → logprob: -15.375045776367188
    9. '(
' → logprob: -15.750045776367188
    10. ' ' → logprob: -16.625045776367188

Token 377: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2342531979084015
    2. 'self' → logprob: -1.984253168106079
    3. '):' → logprob: -3.359253168106079
    4. ')' → logprob: -4.109253406524658
    5. '):
' → logprob: -4.359253406524658
    6. '   ' → logprob: -5.859253406524658
    7. ' self' → logprob: -5.859253406524658
    8. '       ' → logprob: -7.359253406524658
    9. ',' → logprob: -7.859253406524658
    10. ' ' → logprob: -8.1092529296875

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011093381908722222
    2. 'return' → logprob: -9.875110626220703
    3. ' return' → logprob: -10.375110626220703
    4. '   ' → logprob: -10.875110626220703
    5. '(self' → logprob: -12.625110626220703
    6. '      ' → logprob: -13.500110626220703
    7. '(len' → logprob: -13.875110626220703
    8. 'self' → logprob: -14.375110626220703
    9. '(' → logprob: -14.625110626220703
    10. 'len' → logprob: -15.125110626220703

Token 379: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009369274601340294
    2. ' return' → logprob: -4.759369373321533
    3. 'len' → logprob: -7.509369373321533
    4. '       ' → logprob: -8.509368896484375
    5. ' len' → logprob: -12.884368896484375
    6. '   ' → logprob: -14.009368896484375
    7. '
' → logprob: -15.009368896484375
    8. '(len' → logprob: -15.134368896484375
    9. '{return' → logprob: -15.634368896484375
    10. '	return' → logprob: -15.759368896484375

Token 380: ' Blackjack' (ID: 65292)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03993622958660126
    2. 'len' → logprob: -3.2899363040924072
    3. ' return' → logprob: -6.289936065673828
    4. ' len' → logprob: -10.289936065673828
    5. '   ' → logprob: -13.414936065673828
    6. '       ' → logprob: -13.539936065673828
    7. 'def' → logprob: -15.164936065673828
    8. '
' → logprob: -15.539936065673828
    9. 'ret' → logprob: -15.664936065673828
    10. '(len' → logprob: -15.664936065673828

Token 381: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15111806988716125
    2. ' =' → logprob: -2.026118040084839
    3. 'def' → logprob: -5.901118278503418
    4. '   ' → logprob: -6.151118278503418
    5. '       ' → logprob: -6.901118278503418
    6. '()' → logprob: -7.401118278503418
    7. 'return' → logprob: -7.401118278503418
    8. ' return' → logprob: -8.026118278503418
    9. ' and' → logprob: -8.901118278503418
    10. '(self' → logprob: -8.901118278503418

Token 382: ' exactly' (ID: 9707)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25198596715927124
    2. ' len' → logprob: -1.501986026763916
    3. '(len' → logprob: -10.126985549926758
    4. 'self' → logprob: -11.876985549926758
    5. '	len' → logprob: -11.876985549926758
    6. ' self' → logprob: -13.626985549926758
    7. '   ' → logprob: -13.876985549926758
    8. '=len' → logprob: -14.251985549926758
    9. '
' → logprob: -17.501985549926758
    10. '  ' → logprob: -17.501985549926758

Token 383: ' two' (ID: 1920)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.303915798664093
    2. '2' → logprob: -1.8039157390594482
    3. ' len' → logprob: -3.1789157390594482
    4. '21' → logprob: -3.1789157390594482
    5. ' ' → logprob: -4.303915977478027
    6. ' two' → logprob: -7.803915977478027
    7. 'two' → logprob: -9.303915977478027
    8. '3' → logprob: -9.678915977478027
    9. '  ' → logprob: -10.303915977478027
    10. '   ' → logprob: -10.928915977478027

Token 384: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.01578611135482788
    2. 'cards' → logprob: -4.390786170959473
    3. ' and' → logprob: -6.015786170959473
    4. ' ' → logprob: -8.265786170959473
    5. 'and' → logprob: -8.640786170959473
    6. '_cards' → logprob: -9.515786170959473
    7. '(cards' → logprob: -9.640786170959473
    8. ' len' → logprob: -9.640786170959473
    9. '   ' → logprob: -9.765786170959473
    10. 'len' → logprob: -10.390786170959473

Token 385: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08334579318761826
    2. 'and' → logprob: -2.583345890045166
    3. '       ' → logprob: -5.458345890045166
    4. '   ' → logprob: -8.708345413208008
    5. ',' → logprob: -11.583345413208008
    6. ' ' → logprob: -12.208345413208008
    7. '    ' → logprob: -13.708345413208008
    8. '  ' → logprob: -13.958345413208008
    9. '        ' → logprob: -14.208345413208008
    10. '      ' → logprob: -14.458345413208008

Token 386: ' an' (ID: 448)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.46026796102523804
    2. ' len' → logprob: -1.0852680206298828
    3. '       ' → logprob: -3.960268020629883
    4. ' self' → logprob: -4.835268020629883
    5. 'self' → logprob: -5.585268020629883
    6. '(len' → logprob: -8.835268020629883
    7. ' return' → logprob: -9.335268020629883
    8. 'return' → logprob: -10.085268020629883
    9. ' ' → logprob: -10.960268020629883
    10. '   ' → logprob: -11.460268020629883

Token 387: ' ace' (ID: 19084)
  Prédit: ' Ace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ace' → logprob: -0.17749935388565063
    2. ' ace' → logprob: -2.052499294281006
    3. 'Ace' → logprob: -4.052499294281006
    4. 'ace' → logprob: -4.427499294281006
    5. ' A' → logprob: -5.802499294281006
    6. ' '' → logprob: -7.302499294281006
    7. ''' → logprob: -7.677499294281006
    8. ' ' → logprob: -8.177499771118164
    9. ''A' → logprob: -8.802499771118164
    10. 'A' → logprob: -8.927499771118164

Token 388: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12700413167476654
    2. 'and' → logprob: -2.1270041465759277
    3. ' or' → logprob: -10.25200366973877
    4. ',' → logprob: -10.50200366973877
    5. '   ' → logprob: -11.62700366973877
    6. ' ' → logprob: -13.50200366973877
    7. '       ' → logprob: -13.62700366973877
    8. '    ' → logprob: -14.75200366973877
    9. '  ' → logprob: -15.25200366973877
    10. 'or' → logprob: -15.75200366973877

Token 389: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07535342127084732
    2. 'a' → logprob: -2.8253533840179443
    3. '10' → logprob: -5.075353622436523
    4. ' any' → logprob: -5.450353622436523
    5. ' either' → logprob: -7.200353622436523
    6. '<|end|>' → logprob: -7.575353622436523
    7. ' one' → logprob: -7.825353622436523
    8. ' ' → logprob: -8.575353622436523
    9. 'any' → logprob: -8.700353622436523
    10. ' an' → logprob: -8.700353622436523

Token 390: ' ten' (ID: 4325)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04437708109617233
    2. 'ten' → logprob: -3.544377088546753
    3. ' ' → logprob: -4.669376850128174
    4. ' ten' → logprob: -5.294376850128174
    5. 'face' → logprob: -10.419377326965332
    6. 'card' → logprob: -10.919377326965332
    7. 'value' → logprob: -11.044377326965332
    8. 't' → logprob: -11.169377326965332
    9. ' face' → logprob: -11.294377326965332
    10. ' card' → logprob: -11.794377326965332

Token 391: '-value' (ID: 38798)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06917671859264374
    2. 'or' → logprob: -3.06917667388916
    3. ' and' → logprob: -5.06917667388916
    4. 'value' → logprob: -5.56917667388916
    5. '-value' → logprob: -5.69417667388916
    6. '   ' → logprob: -5.94417667388916
    7. ',' → logprob: -7.19417667388916
    8. 'valu' → logprob: -7.19417667388916
    9. 'and' → logprob: -7.44417667388916
    10. '       ' → logprob: -7.69417667388916

Token 392: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.1826886385679245
    2. ' card' → logprob: -1.807688593864441
    3. 'value' → logprob: -6.9326887130737305
    4. 'or' → logprob: -7.4326887130737305
    5. ' or' → logprob: -7.5576887130737305
    6. '_card' → logprob: -8.30768871307373
    7. '(card' → logprob: -8.43268871307373
    8. '   ' → logprob: -9.55768871307373
    9. '-value' → logprob: -9.68268871307373
    10. 'rank' → logprob: -10.05768871307373

Token 393: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013500562636181712
    2. ',' → logprob: -9.50013542175293
    3. '   ' → logprob: -10.37513542175293
    4. '      ' → logprob: -11.62513542175293
    5. ' if' → logprob: -12.25013542175293
    6. ' return' → logprob: -12.37513542175293
    7. ' ' → logprob: -12.75013542175293
    8. ' and' → logprob: -12.87513542175293
    9. 'return' → logprob: -13.62513542175293
    10. ':' → logprob: -14.12513542175293

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005408813012763858
    2. '   ' → logprob: -8.125540733337402
    3. ' if' → logprob: -8.625540733337402
    4. ' return' → logprob: -10.250540733337402
    5. 'return' → logprob: -11.125540733337402
    6. 'if' → logprob: -11.625540733337402
    7. '      ' → logprob: -12.375540733337402
    8. '    ' → logprob: -14.625540733337402
    9. ',' → logprob: -15.125540733337402
    10. '     ' → logprob: -15.250540733337402

Token 395: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0432514064013958
    2. 'if' (adapté à ' if') → logprob: -3.5432515144348145
    3. '       ' → logprob: -4.5432515144348145
    4. ' return' → logprob: -6.0432515144348145
    5. ' if' → logprob: -8.668251037597656
    6. 'len' → logprob: -8.668251037597656
    7. '   ' → logprob: -9.918251037597656
    8. ' ' → logprob: -13.168251037597656
    9. 'def' → logprob: -14.418251037597656
    10. '```' → logprob: -14.668251037597656

Token 396: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3868766129016876
    2. 'len' → logprob: -1.1368765830993652
    3. '   ' → logprob: -12.386877059936523
    4. '	len' → logprob: -14.136877059936523
    5. '(len' → logprob: -14.761877059936523
    6. ' ' → logprob: -16.011877059936523
    7. '    ' → logprob: -16.636877059936523
    8. '       ' → logprob: -17.136877059936523
    9. '  ' → logprob: -17.136877059936523
    10. '=len' → logprob: -17.636877059936523

Token 397: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.125003814697266
    3. 'self' → logprob: -13.500003814697266
    4. ' (' → logprob: -17.125003814697266
    5. '(this' → logprob: -17.750003814697266
    6. ' self' → logprob: -18.250003814697266
    7. '(
' → logprob: -19.375003814697266
    8. '[self' → logprob: -19.625003814697266
    9. '	self' → logprob: -20.875003814697266
    10. '=self' → logprob: -21.500003814697266

Token 398: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.0010553185129538178
    2. '.' → logprob: -6.8760552406311035
    3. '(cards' → logprob: -12.376055717468262
    4. ')' → logprob: -12.501055717468262
    5. ').' → logprob: -12.626055717468262
    6. 'cards' → logprob: -12.751055717468262
    7. ' .' → logprob: -13.001055717468262
    8. '   ' → logprob: -13.251055717468262
    9. '.cells' → logprob: -13.626055717468262
    10. '().' → logprob: -14.501055717468262

Token 399: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.074915312230587
    2. ' ==' → logprob: -2.8249154090881348
    3. '==' → logprob: -4.449915409088135
    4. ')==' → logprob: -7.199915409088135
    5. ' )' → logprob: -8.074914932250977
    6. ' !=' → logprob: -9.824914932250977
    7. '()' → logprob: -10.324914932250977
    8. ' ' → logprob: -11.199914932250977
    9. '=' → logprob: -11.699914932250977
    10. '!=' → logprob: -12.199914932250977

Token 400: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08060109615325928
    2. ' ==' → logprob: -2.955601215362549
    3. '!=' → logprob: -3.830601215362549
    4. ' !=' → logprob: -6.205601215362549
    5. '=' → logprob: -7.080601215362549
    6. ')' → logprob: -7.205601215362549
    7. '()' → logprob: -10.58060073852539
    8. '()==' → logprob: -10.83060073852539
    9. ')==' → logprob: -10.83060073852539
    10. ' ' → logprob: -11.70560073852539

Token 401: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.501171112060547
    4. '  ' → logprob: -17.751171112060547
    5. '```' → logprob: -17.751171112060547
    6. '۲' → logprob: -17.876171112060547
    7. '=' → logprob: -17.876171112060547
    8. '
' → logprob: -18.501171112060547
    9. '<|end|>' → logprob: -18.938671112060547
    10. '	' → logprob: -19.001171112060547

Token 402: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۲' → logprob: -19.125059127807617
    4. '```' → logprob: -19.500059127807617
    5. '
' → logprob: -19.625059127807617
    6. '   ' → logprob: -19.750059127807617
    7. '  ' → logprob: -20.125059127807617
    8. '２' → logprob: -20.250059127807617
    9. '=' → logprob: -20.500059127807617
    10. ')' → logprob: -21.187559127807617

Token 403: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4824298024177551
    2. ':
' → logprob: -1.1074297428131104
    3. ' or' → logprob: -2.9824297428131104
    4. 'or' → logprob: -7.6074299812316895
    5. ':return' → logprob: -7.7324299812316895
    6. ' and' → logprob: -8.357429504394531
    7. '):
' → logprob: -8.482429504394531
    8. 'and' → logprob: -9.232429504394531
    9. '):' → logprob: -9.732429504394531
    10. ')' → logprob: -10.107429504394531

Token 404: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15491431951522827
    2. '       ' → logprob: -2.779914379119873
    3. ':' → logprob: -3.029914379119873
    4. ':
' → logprob: -4.154914379119873
    5. 'and' → logprob: -4.654914379119873
    6. ' or' → logprob: -5.404914379119873
    7. '           ' → logprob: -6.154914379119873
    8. ':return' → logprob: -7.404914379119873
    9. '   ' → logprob: -8.029913902282715
    10. '<|end|>' → logprob: -8.654913902282715

Token 405: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10177979618310928
    2. '       ' → logprob: -3.1017796993255615
    3. ' return' → logprob: -3.2267796993255615
    4. '
' → logprob: -4.476779937744141
    5. '           ' → logprob: -8.10177993774414
    6. '   ' → logprob: -8.47677993774414
    7. '	return' → logprob: -8.60177993774414
    8. ':return' → logprob: -11.35177993774414
    9. 'False' → logprob: -11.72677993774414
    10. ' 
' → logprob: -11.97677993774414

Token 406: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001234428636962548
    2. ' False' → logprob: -9.000123023986816
    3. '(False' → logprob: -18.250123977661133
    4. 'false' → logprob: -20.500123977661133
    5. '=False' → logprob: -21.375123977661133
    6. '
' → logprob: -22.625123977661133
    7. '_false' → logprob: -23.000123977661133
    8. '   ' → logprob: -23.250123977661133
    9. 'F' → logprob: -23.375123977661133
    10. '.False' → logprob: -23.875123977661133

Token 407: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6939452290534973
    2. '       ' → logprob: -0.6939452290534973
    3. '        
' → logprob: -7.318945407867432
    4. '  
' → logprob: -10.693944931030273
    5. '    
' → logprob: -10.693944931030273
    6. '   ' → logprob: -10.818944931030273
    7. 'if' → logprob: -11.068944931030273
    8. '<|end|>' → logprob: -11.318944931030273
    9. '
' → logprob: -11.443944931030273
    10. ' if' → logprob: -12.193944931030273

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029066966846585274
    2. 'if' → logprob: -4.029067039489746
    3. '   ' → logprob: -4.904067039489746
    4. 'rank' → logprob: -6.779067039489746
    5. '
' → logprob: -7.029067039489746
    6. ' if' → logprob: -7.279067039489746
    7. 'card' → logprob: -8.154067039489746
    8. '        
' → logprob: -9.154067039489746
    9. 'return' → logprob: -9.154067039489746
    10. '    
' → logprob: -9.654067039489746

Token 409: ' ranks' (ID: 40642)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3492407202720642
    2. 'return' → logprob: -2.099240779876709
    3. 'first' → logprob: -2.724240779876709
    4. 'rank' → logprob: -2.849240779876709
    5. '   ' → logprob: -4.099240779876709
    6. ' ranks' → logprob: -4.349240779876709
    7. 'if' → logprob: -4.349240779876709
    8. 'card' → logprob: -6.224240779876709
    9. 'cards' → logprob: -6.849240779876709
    10. '(rank' → logprob: -7.099240779876709

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519354820251465
    2. '=' → logprob: -1.5019354820251465
    3. '=set' → logprob: -13.376935958862305
    4. ' =[' → logprob: -13.751935958862305
    5. ' in' → logprob: -13.876935958862305
    6. ' ==' → logprob: -14.001935958862305
    7. '==' → logprob: -14.376935958862305
    8. ' ' → logprob: -14.751935958862305
    9. '[' → logprob: -15.376935958862305
    10. '_set' → logprob: -15.626935958862305

Token 411: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.011548886075615883
    2. ' {' → logprob: -4.63654899597168
    3. '[c' → logprob: -7.51154899597168
    4. '[' → logprob: -7.63654899597168
    5. ' [' → logprob: -8.13654899597168
    6. '[self' → logprob: -8.38654899597168
    7. '{x' → logprob: -9.63654899597168
    8. 'set' → logprob: -9.76154899597168
    9. '{s' → logprob: -9.76154899597168
    10. '(card' → logprob: -10.63654899597168

Token 412: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -2.629921436891891e-05
    2. ' card' → logprob: -10.87502670288086
    3. 'c' → logprob: -11.87502670288086
    4. '   ' → logprob: -16.37502670288086
    5. '	card' → logprob: -16.75002670288086
    6. '(card' → logprob: -16.87502670288086
    7. 'self' → logprob: -18.75002670288086
    8. '.card' → logprob: -18.75002670288086
    9. 'car' → logprob: -18.87502670288086
    10. '```' → logprob: -19.37502670288086

Token 413: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -5.514650183613412e-05
    2. '.' → logprob: -9.875055313110352
    3. '(rank' → logprob: -14.000055313110352
    4. ' .' → logprob: -14.375055313110352
    5. '.token' → logprob: -14.375055313110352
    6. '.r' → logprob: -14.500055313110352
    7. '.card' → logprob: -14.750055313110352
    8. 'rank' → logprob: -15.125055313110352
    9. '.value' → logprob: -15.875055313110352
    10. '.score' → logprob: -16.87505531311035

Token 414: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023413298651576042
    2. 'for' → logprob: -3.7734131813049316
    3. ' ' → logprob: -9.64841365814209
    4. '       ' → logprob: -10.02341365814209
    5. ']' → logprob: -11.14841365814209
    6. ',' → logprob: -11.64841365814209
    7. '           ' → logprob: -11.77341365814209
    8. '        ' → logprob: -11.77341365814209
    9. '[' → logprob: -11.89841365814209
    10. '         ' → logprob: -13.14841365814209

Token 415: ' card' (ID: 4766)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002742350334301591
    2. ' self' → logprob: -6.002742290496826
    3. 'card' → logprob: -8.252742767333984
    4. ' card' → logprob: -12.377742767333984
    5. 'c' → logprob: -13.627742767333984
    6. ' ' → logprob: -15.127742767333984
    7. '	self' → logprob: -15.627742767333984
    8. '   ' → logprob: -16.252742767333984
    9. '(self' → logprob: -16.877742767333984
    10. '
' → logprob: -17.377742767333984

Token 416: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6394145488739014
    2. 'self' → logprob: -1.0144145488739014
    3. 'in' → logprob: -2.3894145488739014
    4. ' self' → logprob: -4.0144147872924805
    5. ' ' → logprob: -10.38941478729248
    6. 's' → logprob: -11.76441478729248
    7. 'card' → logprob: -12.76441478729248
    8. '   ' → logprob: -14.01441478729248
    9. ' card' → logprob: -14.26441478729248
    10. '  ' → logprob: -14.51441478729248

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007101670489646494
    2. ' self' → logprob: -7.2507100105285645
    3. '(self' → logprob: -16.750709533691406
    4. '[self' → logprob: -16.875709533691406
    5. '
' → logprob: -17.125709533691406
    6. ' ' → logprob: -17.250709533691406
    7. '	self' → logprob: -17.375709533691406
    8. '=self' → logprob: -18.125709533691406
    9. '   ' → logprob: -18.375709533691406
    10. 'the' → logprob: -19.125709533691406

Token 418: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.0008157044649124146
    2. 'cards' → logprob: -7.1258158683776855
    3. '(cards' → logprob: -12.750815391540527
    4. 'ards' → logprob: -12.875815391540527
    5. '.hand' → logprob: -13.375815391540527
    6. 's' → logprob: -13.875815391540527
    7. '.' → logprob: -13.875815391540527
    8. ' cards' → logprob: -14.625815391540527
    9. '_cards' → logprob: -14.750815391540527
    10. 'self' → logprob: -14.750815391540527

Token 419: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010725544765591621
    2. ']
' → logprob: -4.760725498199463
    3. '       ' → logprob: -6.260725498199463
    4. ' ]' → logprob: -8.635725975036621
    5. ' if' → logprob: -11.885725975036621
    6. '   ' → logprob: -12.010725975036621
    7. ' ]
' → logprob: -13.010725975036621
    8. ']
' → logprob: -13.385725975036621
    9. 'if' → logprob: -13.510725975036621
    10. ']

' → logprob: -13.510725975036621

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.32523515378125e-05
    2. 'return' → logprob: -10.125062942504883
    3. ' return' → logprob: -11.500062942504883
    4. ' if' → logprob: -12.375062942504883
    5. '   ' → logprob: -12.750062942504883
    6. '      ' → logprob: -13.500062942504883
    7. '        
' → logprob: -13.500062942504883
    8. '<|end|>' → logprob: -13.625062942504883
    9. '
' → logprob: -14.000062942504883
    10. 'if' → logprob: -15.625062942504883

Token 421: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.046110183000564575
    2. '       ' → logprob: -3.546110153198242
    3. 'if' → logprob: -4.546110153198242
    4. ' return' → logprob: -5.296110153198242
    5. ' if' → logprob: -7.796110153198242
    6. '   ' → logprob: -8.546110153198242
    7. '```' → logprob: -14.421110153198242
    8. '	return' → logprob: -15.171110153198242
    9. ' ' → logprob: -15.296110153198242
    10. '        
' → logprob: -16.546110153198242

Token 422: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.060532502830028534
    2. ' ('' → logprob: -3.560532569885254
    3. '(('' → logprob: -3.560532569885254
    4. '(
' → logprob: -6.560532569885254
    5. '(' → logprob: -8.685532569885254
    6. ''A' → logprob: -9.185532569885254
    7. ' (' → logprob: -9.560532569885254
    8. ''' → logprob: -9.685532569885254
    9. ' '' → logprob: -10.185532569885254
    10. '   ' → logprob: -11.185532569885254

Token 423: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.47411441802978516
    2. ''A' → logprob: -0.9741144180297852
    3. ''' → logprob: -10.349114418029785
    4. ' A' → logprob: -12.599114418029785
    5. ' '' → logprob: -14.599114418029785
    6. '('' → logprob: -14.599114418029785
    7. '’A' → logprob: -14.599114418029785
    8. '"A' → logprob: -14.849114418029785
    9. ''a' → logprob: -15.724114418029785
    10. '	A' → logprob: -17.09911346435547

Token 424: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023288452997803688
    2. ''in' → logprob: -3.7732884883880615
    3. 'in' → logprob: -10.64828872680664
    4. ''A' → logprob: -11.52328872680664
    5. ' in' → logprob: -11.89828872680664
    6. 'A' → logprob: -14.14828872680664
    7. ' '' → logprob: -14.77328872680664
    8. ''e' → logprob: -15.27328872680664
    9. ''i' → logprob: -15.89828872680664
    10. ''T' → logprob: -16.02328872680664

Token 425: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3146047294139862
    2. 'in' → logprob: -1.3146047592163086
    3. ''in' → logprob: -7.564604759216309
    4. ' and' → logprob: -7.814604759216309
    5. 'and' → logprob: -8.439604759216309
    6. ''' → logprob: -8.564604759216309
    7. ')' → logprob: -11.939604759216309
    8. ' ' → logprob: -13.189604759216309
    9. ',' → logprob: -13.439604759216309
    10. ' '' → logprob: -13.689604759216309

Token 426: ' ranks' (ID: 40642)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12695036828517914
    2. ' ranks' → logprob: -2.126950263977051
    3. ' r' → logprob: -11.25195026397705
    4. 'rank' → logprob: -12.12695026397705
    5. 'Ranks' → logprob: -12.87695026397705
    6. ')' → logprob: -14.50195026397705
    7. ' ' → logprob: -15.62695026397705
    8. '	r' → logprob: -16.126951217651367
    9. 'anks' → logprob: -16.251951217651367
    10. '
' → logprob: -16.376951217651367

Token 427: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03453642502427101
    2. 'and' → logprob: -3.409536361694336
    3. ')' → logprob: -7.034536361694336
    4. ' )' → logprob: -12.534536361694336
    5. ' ' → logprob: -12.909536361694336
    6. ' or' → logprob: -13.534536361694336
    7. '        ' → logprob: -14.034536361694336
    8. '    ' → logprob: -14.659536361694336
    9. '       ' → logprob: -15.159536361694336
    10. '   ' → logprob: -15.909536361694336

Token 428: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006715370807796717
    2. 'and' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.881715774536133
    4. ' or' → logprob: -17.006715774536133
    5. '    ' → logprob: -17.756715774536133
    6. '	and' → logprob: -18.881715774536133
    7. '   ' → logprob: -19.256715774536133
    8. '        ' → logprob: -19.506715774536133
    9. ')' → logprob: -19.756715774536133
    10. ' an' → logprob: -20.381715774536133

Token 429: ' any' (ID: 1062)
  Prédit: '(any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(any' → logprob: -0.5193518996238708
    2. '('' → logprob: -1.6443519592285156
    3. 'any' → logprob: -2.3943519592285156
    4. '(('' → logprob: -2.6443519592285156
    5. ' any' → logprob: -3.2693519592285156
    6. ' (' → logprob: -5.144351959228516
    7. ' ('' → logprob: -5.394351959228516
    8. '(' → logprob: -7.644351959228516
    9. '({'' → logprob: -8.269351959228516
    10. '(
' → logprob: -8.644351959228516

Token 430: '(r' (ID: 4729)
  Prédit: '(card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.4020389914512634
    2. '(rank' → logprob: -1.1520390510559082
    3. '(r' → logprob: -4.902039051055908
    4. '(c' → logprob: -4.902039051055908
    5. '([' → logprob: -8.77703857421875
    6. '(' → logprob: -11.27703857421875
    7. 'rank' → logprob: -11.77703857421875
    8. '(
' → logprob: -12.52703857421875
    9. 'card' → logprob: -12.52703857421875
    10. '(x' → logprob: -13.40203857421875

Token 431: ' in' (ID: 306)
  Prédit: 'ank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ank' → logprob: -0.0024670942220836878
    2. '[' → logprob: -6.502467155456543
    3. 'k' → logprob: -8.002467155456543
    4. '(rank' → logprob: -9.127467155456543
    5. '.rank' → logprob: -9.252467155456543
    6. '[k' → logprob: -9.377467155456543
    7. 'rank' → logprob: -9.627467155456543
    8. '[c' → logprob: -10.002467155456543
    9. '```' → logprob: -11.002467155456543
    10. ')' → logprob: -11.127467155456543

Token 432: ' ranks' (ID: 40642)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.017374565824866295
    2. '{'' → logprob: -4.517374515533447
    3. ''' → logprob: -6.017374515533447
    4. '('' → logprob: -6.267374515533447
    5. ' ['' → logprob: -6.517374515533447
    6. 'r' → logprob: -8.767374992370605
    7. ''T' → logprob: -8.892374992370605
    8. ''r' → logprob: -9.142374992370605
    9. ' ranks' → logprob: -10.142374992370605
    10. '(['' → logprob: -10.767374992370605

Token 433: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22556808590888977
    2. 'for' → logprob: -1.7255680561065674
    3. '['' → logprob: -4.2255682945251465
    4. '('' → logprob: -5.6005682945251465
    5. '(['' → logprob: -6.2255682945251465
    6. ' ['' → logprob: -6.3505682945251465
    7. '   ' → logprob: -7.2255682945251465
    8. '       ' → logprob: -7.3505682945251465
    9. ' ('' → logprob: -9.100567817687988
    10. ' {'' → logprob: -9.600567817687988

Token 434: ' r' (ID: 428)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.003865873673930764
    2. '('' → logprob: -6.253865718841553
    3. ''' → logprob: -6.503865718841553
    4. ' ['' → logprob: -8.503866195678711
    5. ''T' → logprob: -8.503866195678711
    6. '{'' → logprob: -10.503866195678711
    7. '(['' → logprob: -12.878866195678711
    8. '[' → logprob: -14.378866195678711
    9. ' ('' → logprob: -14.878866195678711
    10. ''t' → logprob: -14.878866195678711

Token 435: ' in' (ID: 306)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.008797031827270985
    2. '('' → logprob: -5.2587971687316895
    3. ' ['' → logprob: -5.7587971687316895
    4. '(['' → logprob: -8.008796691894531
    5. ' ('' → logprob: -10.383796691894531
    6. '{'' → logprob: -10.883796691894531
    7. ''' → logprob: -11.133796691894531
    8. '[' → logprob: -12.883796691894531
    9. ' {'' → logprob: -14.133796691894531
    10. '   ' → logprob: -14.133796691894531

Token 436: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0018472475931048393
    2. '('' → logprob: -6.751847267150879
    3. ''T' → logprob: -7.751847267150879
    4. ''' → logprob: -9.251847267150879
    5. '{'' → logprob: -9.501847267150879
    6. ' ['' → logprob: -9.501847267150879
    7. '(['' → logprob: -13.751847267150879
    8. ''t' → logprob: -16.001846313476562
    9. '[T' → logprob: -16.376846313476562
    10. '["' → logprob: -16.501846313476562

Token 437: 'T' (ID: 51)
  Prédit: ''T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''T' → logprob: -0.01711433008313179
    2. 'T' → logprob: -4.392114162445068
    3. ''' → logprob: -5.392114162445068
    4. '10' → logprob: -11.267114639282227
    5. ' '' → logprob: -11.767114639282227
    6. '"T' → logprob: -12.267114639282227
    7. '['' → logprob: -12.392114639282227
    8. '('' → logprob: -12.642114639282227
    9. ' T' → logprob: -12.892114639282227
    10. ''t' → logprob: -13.267114639282227

Token 438: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.03387321159243584
    2. '','' → logprob: -3.4088733196258545
    3. ''' → logprob: -8.783873558044434
    4. 'K' → logprob: -10.658873558044434
    5. '',"' → logprob: -11.158873558044434
    6. 'J' → logprob: -11.158873558044434
    7. ',' → logprob: -11.658873558044434
    8. 'JK' → logprob: -12.158873558044434
    9. '',
' → logprob: -12.658873558044434
    10. ','' → logprob: -13.658873558044434

Token 439: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00023762896307744086
    2. ' '' → logprob: -8.375237464904785
    3. 'J' → logprob: -12.750237464904785
    4. '   ' → logprob: -13.000237464904785
    5. ''A' → logprob: -14.500237464904785
    6. ''U' → logprob: -14.750237464904785
    7. ''H' → logprob: -15.000237464904785
    8. ''E' → logprob: -15.875237464904785
    9. '       ' → logprob: -16.2502384185791
    10. '"' → logprob: -16.2502384185791

Token 440: 'J' (ID: 41)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.696077227592468e-05
    2. 'J' → logprob: -9.875077247619629
    3. ' '' → logprob: -10.625077247619629
    4. ''A' → logprob: -15.000077247619629
    5. ''H' → logprob: -15.625077247619629
    6. '   ' → logprob: -15.625077247619629
    7. '['' → logprob: -16.750076293945312
    8. ''E' → logprob: -16.750076293945312
    9. ''U' → logprob: -16.750076293945312
    10. '10' → logprob: -16.875076293945312

Token 441: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.000146687583765015
    2. ',' → logprob: -9.500146865844727
    3. '','' → logprob: -9.625146865844727
    4. ''' → logprob: -12.375146865844727
    5. '',
' → logprob: -14.125146865844727
    6. ' ',' → logprob: -15.000146865844727
    7. '",' → logprob: -15.500146865844727
    8. ','' → logprob: -16.250146865844727
    9. 'K' → logprob: -16.875146865844727
    10. '',"' → logprob: -17.250146865844727

Token 442: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10028354823589325
    2. ' '' → logprob: -2.350283622741699
    3. 'Q' → logprob: -10.4752836227417
    4. ''U' → logprob: -11.6002836227417
    5. ''A' → logprob: -12.1002836227417
    6. '   ' → logprob: -12.1002836227417
    7. ''q' → logprob: -12.1002836227417
    8. ' ' → logprob: -12.2252836227417
    9. ' Q' → logprob: -12.3502836227417
    10. '       ' → logprob: -13.1002836227417

Token 443: 'Q' (ID: 48)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0050020054914057255
    2. 'Q' → logprob: -5.505002021789551
    3. ' '' → logprob: -7.005002021789551
    4. ' Q' → logprob: -11.88000202178955
    5. ''q' → logprob: -12.63000202178955
    6. '   ' → logprob: -13.50500202178955
    7. ',Q' → logprob: -13.63000202178955
    8. ''A' → logprob: -14.88000202178955
    9. '<Q' → logprob: -15.00500202178955
    10. '('' → logprob: -15.13000202178955

Token 444: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.062156792730093
    2. ',' → logprob: -2.8121566772460938
    3. ''' → logprob: -9.187156677246094
    4. ' ,' → logprob: -10.187156677246094
    5. '','' → logprob: -10.437156677246094
    6. ','' → logprob: -11.562156677246094
    7. ',K' → logprob: -12.312156677246094
    8. 'K' → logprob: -12.812156677246094
    9. ' ',' → logprob: -13.687156677246094
    10. ''',' → logprob: -14.562156677246094

Token 445: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0025492659769952297
    2. ' '' → logprob: -6.002549171447754
    3. 'K' → logprob: -10.127549171447754
    4. '"K' → logprob: -11.127549171447754
    5. ''A' → logprob: -11.752549171447754
    6. ' K' → logprob: -12.877549171447754
    7. ''U' → logprob: -13.127549171447754
    8. ''T' → logprob: -13.627549171447754
    9. ''S' → logprob: -13.752549171447754
    10. ''N' → logprob: -14.002549171447754

Token 446: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00041029640124179423
    2. ' K' → logprob: -8.125410079956055
    3. ''' → logprob: -9.125410079956055
    4. '   ' → logprob: -13.625410079956055
    5. ' '' → logprob: -13.625410079956055
    6. '"K' → logprob: -14.250410079956055
    7. '	K' → logprob: -14.750410079956055
    8. ' ' → logprob: -15.250410079956055
    9. '`' → logprob: -15.250410079956055
    10. ',K' → logprob: -15.750410079956055

Token 447: ''])

' (ID: 57615)
  Prédit: ''])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.00010485442908247933
    2. '',' → logprob: -9.875104904174805
    3. '])' → logprob: -10.375104904174805
    4. '']' → logprob: -12.125104904174805
    5. ''])
' → logprob: -12.125104904174805
    6. '','' → logprob: -12.625104904174805
    7. ''' → logprob: -13.000104904174805
    8. '"])' → logprob: -13.375104904174805
    9. ''])

' → logprob: -13.750104904174805
    10. '')' → logprob: -14.000104904174805

Token 448: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1136862114071846
    2. '<|end|>' → logprob: -2.3636863231658936
    3. '
' → logprob: -5.7386860847473145
    4. '   ' → logprob: -5.8636860847473145
    5. ' def' → logprob: -5.9886860847473145
    6. ')' → logprob: -6.6136860847473145
    7. '<|end|>' → logprob: -6.6136860847473145
    8. 'class' → logprob: -7.4886860847473145
    9. '#' → logprob: -7.4886860847473145
    10. '```' → logprob: -8.613686561584473

Token 450: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5074652433395386
    2. 'can' → logprob: -1.8824652433395386
    3. 'def' → logprob: -2.757465362548828
    4. 'b' → logprob: -3.007465362548828
    5. ' is' → logprob: -3.382465362548828
    6. 'clear' → logprob: -3.757465362548828
    7. ' clear' → logprob: -4.132465362548828
    8. 'best' → logprob: -4.257465362548828
    9. 'value' → logprob: -4.757465362548828
    10. '__' → logprob: -5.257465362548828

Token 451: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -7.350386295001954e-05
    2. 'b' → logprob: -9.875073432922363
    3. '_s' → logprob: -11.875073432922363
    4. '_' → logprob: -11.875073432922363
    5. '_soft' → logprob: -12.750073432922363
    6. '_black' → logprob: -13.000073432922363
    7. ' bust' → logprob: -13.625073432922363
    8. '_finished' → logprob: -14.875073432922363
    9. '_w' → logprob: -15.250073432922363
    10. '_over' → logprob: -15.750073432922363

Token 452: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.0015070053050294518
    2. 'usted' → logprob: -6.501506805419922
    3. 'lack' → logprob: -12.626506805419922
    4. 'urst' → logprob: -14.626506805419922
    5. 'roke' → logprob: -15.126506805419922
    6. 'usting' → logprob: -15.126506805419922
    7. 'us' → logprob: -16.126506805419922
    8. '

' → logprob: -16.751506805419922
    9. '
' → logprob: -17.001506805419922
    10. 'j' → logprob: -17.251506805419922

Token 453: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.172891830326989e-05
    2. '(' → logprob: -10.000082015991211
    3. 'self' → logprob: -10.500082015991211
    4. '       ' → logprob: -12.250082015991211
    5. '   ' → logprob: -12.750082015991211
    6. ' (' → logprob: -14.375082015991211
    7. ' self' → logprob: -16.12508201599121
    8. ' ' → logprob: -16.62508201599121
    9. '(s' → logprob: -16.75008201599121
    10. '(se' → logprob: -17.75008201599121

Token 454: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5817112922668457
    2. '(self' → logprob: -0.8317112922668457
    3. ')' → logprob: -6.206711292266846
    4. '   ' → logprob: -6.456711292266846
    5. '       ' → logprob: -6.831711292266846
    6. '):
' → logprob: -7.206711292266846
    7. ' self' → logprob: -8.831710815429688
    8. ')(' → logprob: -9.581710815429688
    9. '):' → logprob: -9.706710815429688
    10. '
' → logprob: -11.081710815429688

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007420878973789513
    2. '(self' → logprob: -7.500741958618164
    3. 'return' → logprob: -9.250741958618164
    4. 'self' → logprob: -10.125741958618164
    5. ' return' → logprob: -10.250741958618164
    6. ' self' → logprob: -11.875741958618164
    7. '(' → logprob: -12.500741958618164
    8. '   ' → logprob: -12.750741958618164
    9. '()' → logprob: -13.500741958618164
    10. '      ' → logprob: -13.625741958618164

Token 456: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48203912377357483
    2. 'return' (adapté à ' return') → logprob: -0.9820390939712524
    3. ' return' → logprob: -4.857038974761963
    4. '   ' → logprob: -9.357039451599121
    5. 'self' → logprob: -10.232039451599121
    6. '(self' → logprob: -11.107039451599121
    7. ')' → logprob: -12.732039451599121
    8. '
' → logprob: -12.857039451599121
    9. '	return' → logprob: -12.857039451599121
    10. ' ' → logprob: -12.982039451599121

Token 457: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078878089785576
    2. ' self' → logprob: -5.5040788650512695
    3. '   ' → logprob: -14.75407886505127
    4. '(self' → logprob: -16.879079818725586
    5. '	self' → logprob: -17.004079818725586
    6. '       ' → logprob: -18.004079818725586
    7. ' ' → logprob: -18.379079818725586
    8. '[self' → logprob: -18.629079818725586
    9. '  ' → logprob: -19.629079818725586
    10. 'sum' → logprob: -19.629079818725586

Token 458: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -8.061054359131958e-06
    2. '.' → logprob: -11.875007629394531
    3. 'values' → logprob: -14.375007629394531
    4. '.value' → logprob: -15.000007629394531
    5. ' .' → logprob: -15.875007629394531
    6. '().' → logprob: -18.00000762939453
    7. '	values' → logprob: -18.12500762939453
    8. '.cards' → logprob: -18.25000762939453
    9. '(values' → logprob: -18.25000762939453
    10. ' values' → logprob: -18.87500762939453

Token 459: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009117019944824278
    2. '()>' → logprob: -7.000911712646484
    3. '>' → logprob: -15.625911712646484
    4. '(' → logprob: -17.500911712646484
    5. ' ()' → logprob: -17.500911712646484
    6. ' >' → logprob: -17.750911712646484
    7. '>()' → logprob: -20.250911712646484
    8. '()">' → logprob: -20.375911712646484
    9. '（）' → logprob: -21.375911712646484
    10. ' ' → logprob: -21.375911712646484

Token 460: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2289372831583023
    2. '()>' → logprob: -2.2289373874664307
    3. ' >' → logprob: -2.3539373874664307
    4. '()' → logprob: -6.228937149047852
    5. '(">' → logprob: -12.228937149047852
    6. '>()' → logprob: -13.353937149047852
    7. '(' → logprob: -13.603937149047852
    8. ' ' → logprob: -13.603937149047852
    9. ')>' → logprob: -13.728937149047852
    10. ' ' → logprob: -13.853937149047852

Token 461: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.054882507771253586
    2. ' ' → logprob: -2.929882526397705
    3. '20' → logprob: -16.804882049560547
    4. '2' → logprob: -17.179882049560547
    5. '   ' → logprob: -17.179882049560547
    6. '22' → logprob: -17.179882049560547
    7. '	' → logprob: -17.992382049560547
    8. '31' → logprob: -18.054882049560547
    9. '19' → logprob: -18.492382049560547
    10. ' ' → logprob: -18.554882049560547

Token 462: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '2' → logprob: -20.750001907348633
    4. '   ' → logprob: -22.250001907348633
    5. '```' → logprob: -23.375001907348633
    6. '31' → logprob: -23.750001907348633
    7. '20' → logprob: -24.000001907348633
    8. '	' → logprob: -24.000001907348633
    9. '
' → logprob: -24.250001907348633
    10. '[' → logprob: -24.375001907348633

Token 463: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' Deck' (ID: 41948)
  Prédit: ' Dealer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dealer' → logprob: -0.6269058585166931
    2. ' Deck' → logprob: -1.376905918121338
    3. ' Player' → logprob: -1.751905918121338
    4. ' Blackjack' → logprob: -3.626905918121338
    5. 'Dealer' → logprob: -4.751905918121338
    6. ' Game' → logprob: -6.501905918121338
    7. 'Deck' → logprob: -6.876905918121338
    8. ' Hand' → logprob: -7.251905918121338
    9. ' Black' → logprob: -7.376905918121338
    10. ' Shoe' → logprob: -8.00190544128418

Token 466: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008188001229427755
    2. ':
' → logprob: -7.125818729400635
    3. ' :' → logprob: -11.750819206237793
    4. '():' → logprob: -13.250819206237793
    5. ':list' → logprob: -13.625819206237793
    6. ':def' → logprob: -14.375819206237793
    7. '<|end|>' → logprob: -14.500819206237793
    8. '(object' → logprob: -14.750819206237793
    9. '):' → logprob: -14.750819206237793
    10. ':**' → logprob: -15.000819206237793

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026201317086815834
    2. ' def' → logprob: -6.002620220184326
    3. 'def' → logprob: -9.627619743347168
    4. 'import' → logprob: -9.877619743347168
    5. '    ' → logprob: -10.877619743347168
    6. ' import' → logprob: -12.627619743347168
    7. ':' → logprob: -14.002619743347168
    8. '	def' → logprob: -14.002619743347168
    9. 'class' → logprob: -14.502619743347168
    10. '_' → logprob: -14.752619743347168

Token 468: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1374107301235199
    2. 'def' (adapté à ' def') → logprob: -2.1374106407165527
    3. 'import' → logprob: -4.762410640716553
    4. '   ' → logprob: -6.387410640716553
    5. ' import' → logprob: -8.887411117553711
    6. 'from' → logprob: -10.137411117553711
    7. 'class' → logprob: -11.887411117553711
    8. ' ' → logprob: -12.262411117553711
    9. ' from' → logprob: -13.012411117553711
    10. ' _' → logprob: -13.262411117553711

Token 469: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0179166030138731
    2. ' []' → logprob: -4.767916679382324
    3. ' [' → logprob: -5.892916679382324
    4. '__' → logprob: -6.142916679382324
    5. ' ['' → logprob: -6.267916679382324
    6. ' def' → logprob: -7.017916679382324
    7. ' [
' → logprob: -7.142916679382324
    8. ' ' → logprob: -8.142916679382324
    9. '[]' → logprob: -8.767916679382324
    10. 'def' → logprob: -9.142916679382324

Token 470: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.688212614681106e-05
    2. 'it' → logprob: -11.375017166137695
    3. 'iter' → logprob: -12.875017166137695
    4. '   ' → logprob: -14.000017166137695
    5. ' init' → logprob: -14.750017166137695
    6. '```' → logprob: -15.125017166137695
    7. 'class' → logprob: -15.500017166137695
    8. 'def' → logprob: -15.750017166137695
    9. 'ini' → logprob: -15.750017166137695
    10. 'list' → logprob: -15.750017166137695

Token 471: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00048763392260298133
    2. '(self' → logprob: -8.125487327575684
    3. '__' → logprob: -9.625487327575684
    4. '_(' → logprob: -9.750487327575684
    5. '(' → logprob: -10.250487327575684
    6. '__(
' → logprob: -11.000487327575684
    7. '_' → logprob: -11.375487327575684
    8. ' (' → logprob: -13.500487327575684
    9. '__((' → logprob: -14.250487327575684
    10. '<>(' → logprob: -14.750487327575684

Token 472: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010078003397211432
    2. '):
' → logprob: -7.126008033752441
    3. ')' → logprob: -8.751008033752441
    4. ' self' → logprob: -10.376008033752441
    5. '):

' → logprob: -12.376008033752441
    6. '):' → logprob: -12.876008033752441
    7. '
' → logprob: -13.001008033752441
    8. '	self' → logprob: -13.501008033752441
    9. '   ' → logprob: -13.751008033752441
    10. '(self' → logprob: -13.876008033752441

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5935792922973633
    2. 'self' → logprob: -1.4685792922973633
    3. '):' → logprob: -1.5935792922973633
    4. '):
' → logprob: -4.468579292297363
    5. ')' → logprob: -6.218579292297363
    6. '(self' → logprob: -8.218579292297363
    7. ' self' → logprob: -8.343579292297363
    8. ',self' → logprob: -8.968579292297363
    9. '):

' → logprob: -10.468579292297363
    10. ' ,' → logprob: -10.718579292297363

Token 474: ' cards' (ID: 10541)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.17837831377983093
    2. 'cards' → logprob: -2.0533783435821533
    3. 'self' → logprob: -4.053378105163574
    4. 'de' → logprob: -5.553378105163574
    5. '):
' → logprob: -5.803378105163574
    6. ' num' → logprob: -6.053378105163574
    7. ' cards' → logprob: -6.428378105163574
    8. 'shuffle' → logprob: -6.803378105163574
    9. 'n' → logprob: -6.928378105163574
    10. ')' → logprob: -6.928378105163574

Token 475: '):
' (ID: 1883)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.0033182844053953886
    2. '):' → logprob: -6.0033183097839355
    3. '=[]' → logprob: -7.7533183097839355
    4. '=' → logprob: -7.8783183097839355
    5. '):
' → logprob: -11.003317832946777
    6. ')' → logprob: -11.378317832946777
    7. ' =' → logprob: -13.378317832946777
    8. ' ):' → logprob: -13.503317832946777
    9. '):

' → logprob: -13.628317832946777
    10. ')=' → logprob: -14.878317832946777

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000880973064340651
    2. ':' → logprob: -7.250881195068359
    3. '   ' → logprob: -9.87588119506836
    4. ' self' → logprob: -9.87588119506836
    5. '<|end|>' → logprob: -10.75088119506836
    6. 'self' → logprob: -10.87588119506836
    7. ',' → logprob: -11.50088119506836
    8. '      ' → logprob: -13.00088119506836
    9. '{' → logprob: -13.12588119506836
    10. '):
' → logprob: -13.25088119506836

Token 477: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000499297515489161
    2. ' self' → logprob: -7.750499248504639
    3. 'cards' → logprob: -9.875499725341797
    4. '       ' → logprob: -11.375499725341797
    5. '   ' → logprob: -12.125499725341797
    6. '	self' → logprob: -15.625499725341797
    7. ' cards' → logprob: -15.875499725341797
    8. '[self' → logprob: -17.000499725341797
    9. '.cards' → logprob: -18.500499725341797
    10. '    ' → logprob: -18.875499725341797

Token 478: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.2554929852485657
    2. '=' → logprob: -1.630492925643921
    3. ' =' → logprob: -4.1304931640625
    4. '.' → logprob: -5.0054931640625
    5. '_cards' → logprob: -5.7554931640625
    6. 'cards' → logprob: -6.2554931640625
    7. ' cards' → logprob: -7.0054931640625
    8. '   ' → logprob: -7.3804931640625
    9. '(cards' → logprob: -9.1304931640625
    10. ' ' → logprob: -10.2554931640625

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007628757506608963
    2. ' =' → logprob: -4.882628917694092
    3. '.' → logprob: -11.757628440856934
    4. '=[]' → logprob: -12.007628440856934
    5. '[:]' → logprob: -12.257628440856934
    6. ' ' → logprob: -13.257628440856934
    7. '   ' → logprob: -14.382628440856934
    8. '.=' → logprob: -15.007628440856934
    9. ')' → logprob: -15.757628440856934
    10. 'import' → logprob: -15.882628440856934

Token 480: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.0054714977741241455
    2. ' cards' → logprob: -5.380471706390381
    3. 'list' → logprob: -7.130471706390381
    4. '[' → logprob: -11.255471229553223
    5. '[]' → logprob: -11.255471229553223
    6. ' list' → logprob: -11.380471229553223
    7. '(cards' → logprob: -11.630471229553223
    8. '.cards' → logprob: -13.755471229553223
    9. 'deck' → logprob: -14.505471229553223
    10. '[]
' → logprob: -14.630471229553223

Token 481: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 482: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5401522517204285
    2. '<|end|>' → logprob: -1.0401523113250732
    3. 'def' → logprob: -3.0401523113250732
    4. ' def' → logprob: -5.540152072906494
    5. '    
' → logprob: -5.665152072906494
    6. '<|end|>' → logprob: -5.790152072906494
    7. '
' → logprob: -6.165152072906494
    8. '	def' → logprob: -6.665152072906494
    9. '.' → logprob: -7.290152072906494
    10. '[' → logprob: -7.665152072906494

Token 483: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10270070284605026
    2. '[::-' → logprob: -2.602700710296631
    3. '<|end|>' → logprob: -4.602700710296631
    4. '

' → logprob: -5.227700710296631
    5. '
' → logprob: -6.227700710296631
    6. '.reverse' → logprob: -6.727700710296631
    7. '[:]' → logprob: -6.852700710296631
    8. ' def' → logprob: -7.227700710296631
    9. '   ' → logprob: -7.227700710296631
    10. '.' → logprob: -8.102700233459473

Token 484: '.position' (ID: 13130)
  Prédit: '.shuffle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.shuffle' → logprob: -0.29326653480529785
    2. '.' → logprob: -1.5432665348052979
    3. '.cards' → logprob: -3.543266534805298
    4. '.reverse' → logprob: -5.043266296386719
    5. '._' → logprob: -7.168266296386719
    6. '.clear' → logprob: -7.293266296386719
    7. '.current' → logprob: -7.543266296386719
    8. '.pop' → logprob: -7.543266296386719
    9. '_cards' → logprob: -7.543266296386719
    10. '.reset' → logprob: -7.793266296386719

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. ' ' → logprob: -13.62692928314209
    4. ' +=' → logprob: -16.376930236816406
    5. ' =
' → logprob: -17.251930236816406
    6. '   ' → logprob: -17.876930236816406
    7. '  ' → logprob: -18.501930236816406
    8. ' =)' → logprob: -18.501930236816406
    9. '0' → logprob: -18.626930236816406
    10. '_' → logprob: -19.126930236816406

Token 486: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.625123977661133
    4. '۰' → logprob: -19.250123977661133
    5. 'len' → logprob: -19.875123977661133
    6. '  ' → logprob: -19.875123977661133
    7. ' ' → logprob: -20.125123977661133
    8. ' ' → logprob: -21.312623977661133
    9. '	' → logprob: -21.437623977661133
    10. '```' → logprob: -21.437623977661133

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۰' → logprob: -17.3750057220459
    4. 'len' → logprob: -18.1250057220459
    5. '   ' → logprob: -18.8750057220459
    6. '000' → logprob: -19.4375057220459
    7. '```' → logprob: -19.5625057220459
    8. '০' → logprob: -19.8125057220459
    9. '  ' → logprob: -19.8125057220459
    10. ' ' → logprob: -19.8750057220459

Token 488: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3813427686691284
    2. '   ' → logprob: -1.5063427686691284
    3. ' def' → logprob: -2.381342887878418
    4. '
' → logprob: -6.881342887878418
    5. '<|end|>' → logprob: -7.506342887878418
    6. '    
' → logprob: -7.631342887878418
    7. '	def' → logprob: -8.131342887878418
    8. ' ' → logprob: -8.381342887878418
    9. '```' → logprob: -9.756342887878418
    10. ',' → logprob: -9.881342887878418

Token 490: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0011734402505680919
    2. ' def' → logprob: -6.751173496246338
    3. '   ' → logprob: -12.75117301940918
    4. 'de' → logprob: -15.50117301940918
    5. '	def' → logprob: -16.50117301940918
    6. 'd' → logprob: -17.00117301940918
    7. ' ' → logprob: -18.50117301940918
    8. '@property' → logprob: -19.25117301940918
    9. '@' → logprob: -20.00117301940918
    10. '
' → logprob: -20.50117301940918

Token 491: ' draw' (ID: 6174)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.20197632908821106
    2. 'deal' → logprob: -1.7019762992858887
    3. ' draw' → logprob: -8.076976776123047
    4. 'shuffle' → logprob: -9.076976776123047
    5. ' deal' → logprob: -9.451976776123047
    6. 'de' → logprob: -10.076976776123047
    7. 'next' → logprob: -11.576976776123047
    8. '_draw' → logprob: -12.076976776123047
    9. '_de' → logprob: -13.826976776123047
    10. 'cut' → logprob: -15.326976776123047

Token 492: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017449157312512398
    2. '(' → logprob: -6.876744747161865
    3. '(self' → logprob: -7.376744747161865
    4. '_' → logprob: -10.001745223999023
    5. '_card' → logprob: -10.876745223999023
    6. ' ()' → logprob: -11.251745223999023
    7. '()
' → logprob: -13.751745223999023
    8. '()(' → logprob: -14.251745223999023
    9. '()`' → logprob: -14.251745223999023
    10. '<|end|>' → logprob: -14.251745223999023

Token 493: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001003155019134283
    2. '):' → logprob: -7.126003265380859
    3. '(self' → logprob: -9.25100326538086
    4. '):
' → logprob: -10.62600326538086
    5. '_' → logprob: -10.87600326538086
    6. '()' → logprob: -11.12600326538086
    7. ' )' → logprob: -11.25100326538086
    8. 'self' → logprob: -11.50100326538086
    9. ')_' → logprob: -11.75100326538086
    10. ' ' → logprob: -13.12600326538086

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06246962770819664
    2. ' if' → logprob: -2.937469720840454
    3. 'if' → logprob: -5.312469482421875
    4. '()' → logprob: -7.437469482421875
    5. ' card' → logprob: -7.437469482421875
    6. '   ' → logprob: -7.687469482421875
    7. 'self' → logprob: -8.062469482421875
    8. 'card' → logprob: -9.062469482421875
    9. ' self' → logprob: -9.312469482421875
    10. ' ' → logprob: -9.312469482421875

Token 495: ' if' (ID: 538)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.14206275343894958
    2. ' card' → logprob: -2.1420626640319824
    3. 'if' (adapté à ' if') → logprob: -4.892062664031982
    4. ' if' → logprob: -4.892062664031982
    5. '   ' → logprob: -12.14206314086914
    6. '	card' → logprob: -13.64206314086914
    7. '       ' → logprob: -13.76706314086914
    8. 'c' → logprob: -14.01706314086914
    9. '(card' → logprob: -15.89206314086914
    10. 'car' → logprob: -15.89206314086914

Token 496: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47407862544059753
    2. ' self' → logprob: -0.9740786552429199
    3. '	self' → logprob: -13.474078178405762
    4. ' ' → logprob: -16.474079132080078
    5. '   ' → logprob: -16.599079132080078
    6. ' ' → logprob: -17.099079132080078
    7. '[self' → logprob: -17.849079132080078
    8. '_self' → logprob: -18.474079132080078
    9. '(self' → logprob: -18.599079132080078
    10. 'elf' → logprob: -18.599079132080078

Token 497: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -5.200166469876422e-06
    2. 'position' → logprob: -12.750004768371582
    3. '.' → logprob: -13.000004768371582
    4. '.pos' → logprob: -17.0000057220459
    5. ' .' → logprob: -17.6250057220459
    6. '	position' → logprob: -18.3750057220459
    7. '[position' → logprob: -19.6250057220459
    8. '.positions' → logprob: -19.8750057220459
    9. ' position' → logprob: -20.7500057220459
    10. '.
' → logprob: -20.8750057220459

Token 498: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.021403992548584938
    2. ' <' → logprob: -4.396403789520264
    3. '>=' → logprob: -4.771403789520264
    4. ' ' → logprob: -8.396404266357422
    5. '<' → logprob: -8.771404266357422
    6. '<len' → logprob: -13.146404266357422
    7. ' ' → logprob: -14.146404266357422
    8. '   ' → logprob: -14.146404266357422
    9. '  ' → logprob: -14.521404266357422
    10. ']>=' → logprob: -14.521404266357422

Token 499: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06196768581867218
    2. ' len' → logprob: -2.811967611312866
    3. '	len' → logprob: -18.811967849731445
    4. '(len' → logprob: -19.561967849731445
    5. '=len' → logprob: -21.061967849731445
    6. '   ' → logprob: -21.061967849731445
    7. '<len' → logprob: -22.686967849731445
    8. '[len' → logprob: -22.811967849731445
    9. ',len' → logprob: -22.936967849731445
    10. 'self' → logprob: -24.061967849731445

Token 500: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020377879263833165
    2. '(' → logprob: -8.500204086303711
    3. 'self' → logprob: -15.125204086303711
    4. '(
' → logprob: -18.87520408630371
    5. ' self' → logprob: -19.12520408630371
    6. ' (' → logprob: -19.50020408630371
    7. '(this' → logprob: -19.75020408630371
    8. '()' → logprob: -20.37520408630371
    9. '(sel' → logprob: -20.37520408630371
    10. '(s' → logprob: -20.62520408630371

Token 501: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.0001363168703392148
    2. '.' → logprob: -9.125136375427246
    3. 'cards' → logprob: -10.750136375427246
    4. ' .' → logprob: -13.375136375427246
    5. ').' → logprob: -13.500136375427246
    6. '.c' → logprob: -14.500136375427246
    7. '.cells' → logprob: -14.625136375427246
    8. ' cards' → logprob: -14.875136375427246
    9. '(cards' → logprob: -14.875136375427246
    10. '.card' → logprob: -15.000136375427246

Token 502: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31339728832244873
    2. '):' → logprob: -1.3133972883224487
    3. ')' → logprob: -9.688397407531738
    4. ':' → logprob: -10.813397407531738
    5. ' ):
' → logprob: -11.063397407531738
    6. ' ):' → logprob: -11.188397407531738
    7. ':
' → logprob: -11.813397407531738
    8. '):
' → logprob: -12.063397407531738
    9. '       ' → logprob: -12.313397407531738
    10. '   ' → logprob: -12.813397407531738

Token 503: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1395343840122223
    2. ' raise' → logprob: -2.7645344734191895
    3. ' return' → logprob: -3.1395344734191895
    4. 'return' → logprob: -4.5145344734191895
    5. 'raise' → logprob: -5.0145344734191895
    6. '       ' → logprob: -5.7645344734191895
    7. ' None' → logprob: -6.3895344734191895
    8. 'None' → logprob: -7.2645344734191895
    9. '	raise' → logprob: -8.389533996582031
    10. ' 
' → logprob: -9.264533996582031

Token 504: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7669751644134521
    2. 'raise' (adapté à ' raise') → logprob: -0.7669751644134521
    3. ' raise' → logprob: -3.141975164413452
    4. '           ' → logprob: -4.016975402832031
    5. ' return' → logprob: -4.891975402832031
    6. 'self' → logprob: -6.391975402832031
    7. '       ' → logprob: -7.766975402832031
    8. 'None' → logprob: -8.141975402832031
    9. ' None' → logprob: -10.641975402832031
    10. ' self' → logprob: -10.891975402832031

Token 505: ' Runtime' (ID: 17606)
  Prédit: ' Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Index' → logprob: -0.029907960444688797
    2. 'Index' → logprob: -3.5299079418182373
    3. ' Stop' → logprob: -9.154908180236816
    4. ' Value' → logprob: -10.279908180236816
    5. 'Stop' → logprob: -11.654908180236816
    6. '(Index' → logprob: -12.654908180236816
    7. ' Runtime' → logprob: -13.529908180236816
    8. ' EOF' → logprob: -13.654908180236816
    9. 'EOF' → logprob: -13.779908180236816
    10. ' Exception' → logprob: -13.779908180236816

Token 506: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.2664456789934775e-06
    2. 'Warning' → logprob: -15.000000953674316
    3. 'error' → logprob: -15.125000953674316
    4. 'rror' → logprob: -15.500000953674316
    5. 'Er' → logprob: -16.000001907348633
    6. 'Erro' → logprob: -16.375001907348633
    7. 'E' → logprob: -17.000001907348633
    8. '
' → logprob: -17.125001907348633
    9. 'ERROR' → logprob: -17.625001907348633
    10. ' Error' → logprob: -18.625001907348633

Token 507: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06198785454034805
    2. '('' → logprob: -2.81198787689209
    3. '(' → logprob: -10.81198787689209
    4. '()' → logprob: -17.936986923217773
    5. '(
' → logprob: -19.311986923217773
    6. '"' → logprob: -20.061986923217773
    7. '("'' → logprob: -20.436986923217773
    8. ' ("' → logprob: -20.811986923217773
    9. '("")' → logprob: -21.186986923217773
    10. '("\' → logprob: -21.436986923217773

Token 508: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.017860516905784607
    2. 'Out' → logprob: -4.142860412597656
    3. 'Deck' → logprob: -7.142860412597656
    4. '"No' → logprob: -7.517860412597656
    5. '"' → logprob: -8.642860412597656
    6. 'All' → logprob: -8.767860412597656
    7. 'Cannot' → logprob: -10.017860412597656
    8. 'The' → logprob: -10.267860412597656
    9. 'Ran' → logprob: -10.517860412597656
    10. ' No' → logprob: -10.517860412597656

Token 509: ' more' (ID: 945)
  Prédit: ' more'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.14285477995872498
    2. ' cards' → logprob: -2.017854690551758
    3. 'more' → logprob: -9.642854690551758
    4. ' card' → logprob: -10.017854690551758
    5. ' ' → logprob: -10.267854690551758
    6. 'cards' → logprob: -10.767854690551758
    7. ' space' → logprob: -12.892854690551758
    8. ' m' → logprob: -13.642854690551758
    9. '(cards' → logprob: -13.642854690551758
    10. '_more' → logprob: -13.767854690551758

Token 510: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -4.3822154111694545e-05
    2. ' ' → logprob: -10.750043869018555
    3. 'cards' → logprob: -11.625043869018555
    4. '_cards' → logprob: -11.875043869018555
    5. ' card' → logprob: -13.000043869018555
    6. ')' → logprob: -13.875043869018555
    7. '(cards' → logprob: -14.375043869018555
    8. ' Cards' → logprob: -14.375043869018555
    9. 'Cards' → logprob: -14.625043869018555
    10. '.cards' → logprob: -15.375043869018555

Token 511: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.00665403064340353
    2. '")' → logprob: -5.631654262542725
    3. ' in' → logprob: -6.006654262542725
    4. 'to' → logprob: -8.131653785705566
    5. ' left' → logprob: -8.756653785705566
    6. ' ")' → logprob: -9.631653785705566
    7. 'left' → logprob: -10.631653785705566
    8. '")
' → logprob: -11.006653785705566
    9. ' available' → logprob: -11.506653785705566
    10. 'in' → logprob: -12.131653785705566

Token 512: ' draw' (ID: 6174)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.003186386078596115
    2. ' draw' → logprob: -5.753186225891113
    3. 'deal' → logprob: -12.378186225891113
    4. '_draw' → logprob: -12.753186225891113
    5. '	draw' → logprob: -13.628186225891113
    6. '.draw' → logprob: -15.753186225891113
    7. 'd' → logprob: -17.12818717956543
    8. 'de' → logprob: -17.37818717956543
    9. 'Draw' → logprob: -18.12818717956543
    10. '(draw' → logprob: -18.12818717956543

Token 513: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.576246976852417
    2. '")' → logprob: -0.826246976852417
    3. '.")
' → logprob: -8.576247215270996
    4. '.")' → logprob: -9.576247215270996
    5. '")
' → logprob: -11.076247215270996
    6. ')")
' → logprob: -11.826247215270996
    7. '!")' → logprob: -11.951247215270996
    8. '!")
' → logprob: -12.201247215270996
    9. ' ")
' → logprob: -12.451247215270996
    10. '"' → logprob: -12.826247215270996

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003729966701939702
    2. ' card' → logprob: -8.500372886657715
    3. '        
' → logprob: -9.625372886657715
    4. '
' → logprob: -9.875372886657715
    5. 'card' → logprob: -11.000372886657715
    6. '   ' → logprob: -11.750372886657715
    7. ' c' → logprob: -12.125372886657715
    8. '    
' → logprob: -12.500372886657715
    9. ' ' → logprob: -13.125372886657715
    10. '	card' → logprob: -13.125372886657715

Token 515: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.4765656590461731
    2. 'card' (adapté à ' card') → logprob: -0.9765656590461731
    3. '       ' → logprob: -6.101565837860107
    4. 'c' → logprob: -9.60156536102295
    5. '	card' → logprob: -9.60156536102295
    6. '   ' → logprob: -9.85156536102295
    7. ' c' → logprob: -10.47656536102295
    8. 'result' → logprob: -11.10156536102295
    9. ' result' → logprob: -11.60156536102295
    10. '        
' → logprob: -13.47656536102295

Token 516: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029756275936961174
    2. '=' → logprob: -3.5297563076019287
    3. ' ' → logprob: -12.154756546020508
    4. '   ' → logprob: -16.029756546020508
    5. '  ' → logprob: -16.154756546020508
    6. ' =
' → logprob: -16.154756546020508
    7. '_' → logprob: -16.154756546020508
    8. 's' → logprob: -16.779756546020508
    9. '=self' → logprob: -17.404756546020508
    10. '	' → logprob: -17.404756546020508

Token 517: ' Card' (ID: 9958)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25192928314208984
    2. ' self' → logprob: -1.5019292831420898
    3. '	self' → logprob: -15.75192928314209
    4. '       ' → logprob: -17.251930236816406
    5. '[self' → logprob: -18.501930236816406
    6. '(self' → logprob: -19.001930236816406
    7. '   ' → logprob: -19.001930236816406
    8. '=self' → logprob: -19.251930236816406
    9. '
' → logprob: -19.501930236816406
    10. ' ' → logprob: -20.751930236816406

Token 518: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0033603431656956673
    2. '(' → logprob: -6.128360271453857
    3. '(rank' → logprob: -7.378360271453857
    4. '(
' → logprob: -7.878360271453857
    5. 'self' → logprob: -9.253360748291016
    6. '('' → logprob: -10.503360748291016
    7. '(

' → logprob: -11.628360748291016
    8. 'rank' → logprob: -11.628360748291016
    9. '(card' → logprob: -11.878360748291016
    10. ' self' → logprob: -12.253360748291016

Token 519: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.002827223390340805
    2. '.' → logprob: -6.877827167510986
    3. 'cards' → logprob: -7.502827167510986
    4. ')' → logprob: -7.502827167510986
    5. ').' → logprob: -8.127827644348145
    6. '(cards' → logprob: -9.127827644348145
    7. '.codes' → logprob: -9.752827644348145
    8. ' .' → logprob: -9.752827644348145
    9. '.rank' → logprob: -10.252827644348145
    10. ' ' → logprob: -10.627827644348145

Token 520: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.8312570318812504e-05
    2. '[' → logprob: -11.250018119812012
    3. 'self' → logprob: -12.250018119812012
    4. '[
' → logprob: -15.000018119812012
    5. ' self' → logprob: -17.000019073486328
    6. '
' → logprob: -17.375019073486328
    7. '	self' → logprob: -17.500019073486328
    8. '   ' → logprob: -18.125019073486328
    9. '[s' → logprob: -18.125019073486328
    10. ')[' → logprob: -18.375019073486328

Token 521: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -6.957014556974173e-05
    2. 'position' → logprob: -10.125069618225098
    3. '[position' → logprob: -10.750069618225098
    4. '.' → logprob: -12.750069618225098
    5. ').' → logprob: -13.625069618225098
    6. ')' → logprob: -14.375069618225098
    7. '.cards' → logprob: -14.500069618225098
    8. '.card' → logprob: -14.625069618225098
    9. '.pos' → logprob: -14.875069618225098
    10. '.index' → logprob: -15.125069618225098

Token 522: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004995359340682626
    2. ')
' → logprob: -7.625499725341797
    3. ' )' → logprob: -11.625499725341797
    4. ')

' → logprob: -13.250499725341797
    5. ']' → logprob: -15.000499725341797
    6. '])' → logprob: -15.250499725341797
    7. ' ' → logprob: -15.750499725341797
    8. ' )
' → logprob: -16.625499725341797
    9. '[' → logprob: -17.375499725341797
    10. ')`' → logprob: -17.375499725341797

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6487439274787903
    2. '
' → logprob: -0.7737439274787903
    3. 'self' → logprob: -4.273744106292725
    4. '        
' → logprob: -6.898744106292725
    5. ' self' → logprob: -8.148743629455566
    6. '
' → logprob: -8.273743629455566
    7. '<|end|>' → logprob: -9.273743629455566
    8. '   ' → logprob: -9.523743629455566
    9. '[self' → logprob: -9.773743629455566
    10. ' 
' → logprob: -9.898743629455566

Token 524: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03281014785170555
    2. ' self' → logprob: -3.9078102111816406
    3. '       ' → logprob: -4.407810211181641
    4. '	self' → logprob: -12.15781021118164
    5. '
' → logprob: -13.53281021118164
    6. '        
' → logprob: -14.03281021118164
    7. ',' → logprob: -14.40781021118164
    8. '[self' → logprob: -14.40781021118164
    9. '<|end|>' → logprob: -14.53281021118164
    10. '=self' → logprob: -14.78281021118164

Token 525: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.0004665385349653661
    2. 'position' → logprob: -7.750466346740723
    3. '.' → logprob: -10.250466346740723
    4. ' position' → logprob: -16.12546730041504
    5. '.
' → logprob: -16.37546730041504
    6. '	position' → logprob: -16.50046730041504
    7. ' .' → logprob: -16.62546730041504
    8. '[position' → logprob: -16.87546730041504
    9. '.pos' → logprob: -18.00046730041504
    10. '
' → logprob: -18.12546730041504

Token 526: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10021400451660156
    2. '+=' → logprob: -2.3502140045166016
    3. '+' → logprob: -11.850214004516602
    4. ' +' → logprob: -15.600214004516602
    5. ']+=' → logprob: -16.3502140045166
    6. '+="' → logprob: -16.9752140045166
    7. '+='' → logprob: -17.7252140045166
    8. '=' → logprob: -18.2252140045166
    9. ' ' → logprob: -18.6002140045166
    10. '+=(' → logprob: -20.2252140045166

Token 527: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -20.250059127807617
    4. '   ' → logprob: -21.125059127807617
    5. '１' → logprob: -21.875059127807617
    6. ' ' → logprob: -22.000059127807617
    7. '۱' → logprob: -22.750059127807617
    8. '
' → logprob: -22.875059127807617
    9. '`' → logprob: -23.250059127807617
    10. '  ' → logprob: -23.625059127807617

Token 528: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '```' → logprob: -23.0
    4. '
' → logprob: -24.875
    5. '１' → logprob: -25.0
    6. '۱' → logprob: -25.125
    7. '   ' → logprob: -25.5
    8. '' → logprob: -26.625
    9. '

' → logprob: -27.125
    10. '१' → logprob: -27.375

Token 529: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0378268957138062
    2. '       ' → logprob: -1.4128268957138062
    3. 'return' → logprob: -1.6628268957138062
    4. ' return' → logprob: -1.9128268957138062
    5. '<|end|>' → logprob: -3.2878270149230957
    6. '   ' → logprob: -4.537827014923096
    7. ' 
' → logprob: -5.162827014923096
    8. '	return' → logprob: -5.412827014923096
    9. '  
' → logprob: -6.537827014923096
    10. ':return' → logprob: -7.162827014923096

Token 530: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.29211434721946716
    2. ' return' → logprob: -1.7921143770217896
    3. '       ' → logprob: -2.6671142578125
    4. '   ' → logprob: -4.1671142578125
    5. '	return' → logprob: -6.5421142578125
    6. '
' → logprob: -9.1671142578125
    7. ':return' → logprob: -10.2921142578125
    8. ' 
' → logprob: -10.5421142578125
    9. '    
' → logprob: -10.7921142578125
    10. '	' → logprob: -10.7921142578125

Token 531: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02325887233018875
    2. ' return' → logprob: -3.773258924484253
    3. '       ' → logprob: -11.273259162902832
    4. '
' → logprob: -14.898259162902832
    5. '	return' → logprob: -15.648259162902832
    6. '   ' → logprob: -15.648259162902832
    7. ' ' → logprob: -19.648258209228516
    8. ':return' → logprob: -19.648258209228516
    9. '        
' → logprob: -19.773258209228516
    10. 'eturn' → logprob: -19.773258209228516

Token 532: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.5759395956993103
    2. ' card' → logprob: -0.8259395956993103
    3. '	card' → logprob: -15.575939178466797
    4. '(card' → logprob: -17.075939178466797
    5. 'Card' → logprob: -19.075939178466797
    6. '_card' → logprob: -19.825939178466797
    7. 'car' → logprob: -20.075939178466797
    8. ' ' → logprob: -20.450939178466797
    9. '.card' → logprob: -20.450939178466797
    10. 'c' → logprob: -20.575939178466797

Token 533: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 534: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2905903458595276
    2. '<|end|>' → logprob: -1.7905902862548828
    3. 'def' → logprob: -3.040590286254883
    4. '#' → logprob: -3.915590286254883
    5. '
' → logprob: -5.165590286254883
    6. '```' → logprob: -5.290590286254883
    7. '<|end|>' → logprob: -5.415590286254883
    8. ' ' → logprob: -7.040590286254883
    9. ' class' → logprob: -7.290590286254883
    10. 'c' → logprob: -8.790590286254883

Token 535: ' Dealer' (ID: 51638)
  Prédit: 'Dealer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dealer' → logprob: -0.6525191068649292
    2. 'Player' → logprob: -1.5275191068649292
    3. 'Black' → logprob: -1.7775191068649292
    4. 'Game' → logprob: -3.1525192260742188
    5. 'S' → logprob: -3.2775192260742188
    6. ' Blackjack' → logprob: -4.902519226074219
    7. 'Hand' → logprob: -6.652519226074219
    8. ' Dealer' → logprob: -7.027519226074219
    9. 'Sho' → logprob: -7.027519226074219
    10. ' Black' → logprob: -7.277519226074219

Token 536: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00467291846871376
    2. ':
' → logprob: -5.379673004150391
    3. '(' → logprob: -10.25467300415039
    4. ' :' → logprob: -12.25467300415039
    5. '<|end|>' → logprob: -12.62967300415039
    6. ':

' → logprob: -13.25467300415039
    7. '):' → logprob: -13.25467300415039
    8. '(object' → logprob: -13.37967300415039
    9. '>:' → logprob: -14.37967300415039
    10. '():' → logprob: -14.37967300415039

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011782650835812092
    2. ' def' → logprob: -4.511782646179199
    3. 'def' → logprob: -7.761782646179199
    4. ':' → logprob: -9.1367826461792
    5. '    
' → logprob: -10.1367826461792
    6. '	def' → logprob: -10.5117826461792
    7. '<|end|>' → logprob: -10.6367826461792
    8. '
' → logprob: -10.7617826461792
    9. ':
' → logprob: -10.7617826461792
    10. 'class' → logprob: -10.8867826461792

Token 538: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3576211631298065
    2. 'def' (adapté à ' def') → logprob: -1.232621192932129
    3. 'class' → logprob: -5.232621192932129
    4. '   ' → logprob: -5.607621192932129
    5. ' ' → logprob: -10.232621192932129
    6. ' __' → logprob: -10.607621192932129
    7. ' class' → logprob: -10.982621192932129
    8. '	def' → logprob: -10.982621192932129
    9. '__' → logprob: -11.857621192932129
    10. 'hand' → logprob: -12.232621192932129

Token 539: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0017181389266625047
    2. '__' → logprob: -6.501718044281006
    3. ' def' → logprob: -8.876718521118164
    4. 'init' → logprob: -10.251718521118164
    5. ' init' → logprob: -10.876718521118164
    6. '_init' → logprob: -11.876718521118164
    7. ' Hand' → logprob: -12.126718521118164
    8. 'def' → logprob: -12.626718521118164
    9. ' ' → logprob: -12.751718521118164
    10. '_hand' → logprob: -13.626718521118164

Token 540: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6240566083070007e-06
    2. 'ini' → logprob: -14.125001907348633
    3. 'in' → logprob: -14.500001907348633
    4. 'i' → logprob: -15.625001907348633
    5. 'int' → logprob: -16.250001907348633
    6. ' init' → logprob: -16.750001907348633
    7. 'initi' → logprob: -17.000001907348633
    8. 'innit' → logprob: -17.500001907348633
    9. 'def' → logprob: -18.375001907348633
    10. 'new' → logprob: -18.500001907348633

Token 541: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.014922578819096088
    2. '(self' → logprob: -4.264922618865967
    3. '__' → logprob: -7.389922618865967
    4. ' (' → logprob: -9.639922142028809
    5. '_(' → logprob: -9.764922142028809
    6. '(' → logprob: -11.639922142028809
    7. ',' → logprob: -12.764922142028809
    8. '__(
' → logprob: -13.139922142028809
    9. '_' → logprob: -13.389922142028809
    10. ' ' → logprob: -14.139922142028809

Token 542: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00024822709383443
    2. ')' → logprob: -8.500247955322266
    3. ' self' → logprob: -10.500247955322266
    4. '
' → logprob: -11.375247955322266
    5. '):
' → logprob: -13.375247955322266
    6. ')(' → logprob: -13.500247955322266
    7. '(self' → logprob: -14.125247955322266
    8. 'deck' → logprob: -15.000247955322266
    9. ',' → logprob: -15.125247955322266
    10. 'hand' → logprob: -15.500247955322266

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012622307054698467
    2. '):' → logprob: -4.762622356414795
    3. '):
' → logprob: -6.262622356414795
    4. 'self' → logprob: -6.512622356414795
    5. ' ,' → logprob: -8.262621879577637
    6. ')' → logprob: -9.262621879577637
    7. ' ):' → logprob: -9.387621879577637
    8. ' self' → logprob: -9.762621879577637
    9. '(self' → logprob: -10.512621879577637
    10. '__,' → logprob: -10.637621879577637

Token 544: ' initial' (ID: 4871)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.6534547209739685
    2. ' deck' → logprob: -1.5284547805786133
    3. 'hand' → logprob: -1.7784547805786133
    4. ' hand' → logprob: -2.5284547805786133
    5. ')' → logprob: -4.403454780578613
    6. 'self' → logprob: -7.778454780578613
    7. 'shoe' → logprob: -8.528454780578613
    8. ' )' → logprob: -8.778454780578613
    9. 'dealer' → logprob: -8.903454780578613
    10. '(deck' → logprob: -9.028454780578613

Token 545: '_cards' (ID: 101651)
  Prédit: '_hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.016751224175095558
    2. ' hand' → logprob: -4.516751289367676
    3. '_cards' → logprob: -5.891751289367676
    4. 'hand' → logprob: -6.141751289367676
    5. ')' → logprob: -8.516751289367676
    6. 'Hand' → logprob: -8.766751289367676
    7. '=None' → logprob: -9.766751289367676
    8. '(hand' → logprob: -10.016751289367676
    9. '   ' → logprob: -10.141751289367676
    10. 'cards' → logprob: -10.266751289367676

Token 546: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40342220664024353
    2. '=None' → logprob: -1.528422236442566
    3. '):
' → logprob: -2.2784221172332764
    4. '=[]' → logprob: -4.5284223556518555
    5. ',' → logprob: -7.0284223556518555
    6. '=' → logprob: -7.5284223556518555
    7. ')' → logprob: -8.903422355651855
    8. ':' → logprob: -9.028422355651855
    9. '):
' → logprob: -9.528422355651855
    10. ' ):' → logprob: -10.528422355651855

Token 547: ' draw' (ID: 6174)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.5252795815467834
    2. ' deck' → logprob: -0.9002795815467834
    3. 'shoe' → logprob: -7.525279521942139
    4. 'hand' → logprob: -8.150279998779297
    5. 'hit' → logprob: -8.900279998779297
    6. 'hidden' → logprob: -8.900279998779297
    7. ' hidden' → logprob: -9.150279998779297
    8. 'dealer' → logprob: -9.150279998779297
    9. '   ' → logprob: -9.400279998779297
    10. ' shoe' → logprob: -9.525279998779297

Token 548: '_p' (ID: 1359)
  Prédit: '_function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_function' → logprob: -1.3890960216522217
    2. '_func' → logprob: -1.6390960216522217
    3. '_card' → logprob: -1.7640960216522217
    4. 'er' → logprob: -2.0140960216522217
    5. '_de' → logprob: -2.1390960216522217
    6. '_cards' → logprob: -2.5140960216522217
    7. '_method' → logprob: -3.5140960216522217
    8. '_fn' → logprob: -4.889096260070801
    9. '_callback' → logprob: -5.264096260070801
    10. ')' → logprob: -6.389096260070801

Token 549: 'ile' (ID: 554)
  Prédit: 'olicy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olicy' → logprob: -1.1736304759979248
    2. 'ro' → logprob: -1.5486304759979248
    3. 'roc' → logprob: -1.5486304759979248
    4. 'ile' → logprob: -3.048630475997925
    5. 'oss' → logprob: -3.173630475997925
    6. 'osition' → logprob: -3.298630475997925
    7. 'rocess' → logprob: -3.548630475997925
    8. 'rocessing' → logprob: -4.173630714416504
    9. 'r' → logprob: -4.423630714416504
    10. 'ermission' → logprob: -4.423630714416504

Token 550: '_cards' (ID: 101651)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043227892369031906
    2. '):
' → logprob: -3.1682279109954834
    3. ':' → logprob: -9.293228149414062
    4. '=None' → logprob: -10.168228149414062
    5. '):
' → logprob: -10.168228149414062
    6. ',' → logprob: -10.543228149414062
    7. ')' → logprob: -11.293228149414062
    8. '):

' → logprob: -11.668228149414062
    9. ' ):' → logprob: -12.168228149414062
    10. '   ' → logprob: -13.168228149414062

Token 551: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.576276421546936
    2. '):' → logprob: -0.826276421546936
    3. '):
' → logprob: -8.326276779174805
    4. '   ' → logprob: -10.201276779174805
    5. ':' → logprob: -11.076276779174805
    6. '       ' → logprob: -11.576276779174805
    7. ')' → logprob: -11.576276779174805
    8. ',' → logprob: -12.326276779174805
    9. ' ):' → logprob: -12.576276779174805
    10. '):

' → logprob: -12.576276779174805

Token 552: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003534375224262476
    2. 'self' → logprob: -6.128534317016602
    3. '):
' → logprob: -7.503534317016602
    4. ' self' → logprob: -7.503534317016602
    5. '   ' → logprob: -9.378534317016602
    6. 'def' → logprob: -10.503534317016602
    7. '
' → logprob: -10.503534317016602
    8. ',' → logprob: -10.503534317016602
    9. ':
' → logprob: -10.628534317016602
    10. '(self' → logprob: -10.878534317016602

Token 553: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11421679705381393
    2. ' self' → logprob: -2.6142168045043945
    3. '       ' → logprob: -3.3642168045043945
    4. '   ' → logprob: -9.489216804504395
    5. 'from' → logprob: -10.614216804504395
    6. ' ' → logprob: -11.739216804504395
    7. '	self' → logprob: -12.364216804504395
    8. 'class' → logprob: -13.239216804504395
    9. '
' → logprob: -13.364216804504395
    10. '(self' → logprob: -13.864216804504395

Token 554: '.hand' (ID: 64204)
  Prédit: '.cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.4768894910812378
    2. '.hand' → logprob: -1.1018894910812378
    3. '_hand' → logprob: -3.6018896102905273
    4. '_cards' → logprob: -4.851889610290527
    5. '.initial' → logprob: -5.351889610290527
    6. '._' → logprob: -6.226889610290527
    7. '.' → logprob: -6.476889610290527
    8. 'cards' → logprob: -7.351889610290527
    9. 'Hand' → logprob: -7.476889610290527
    10. ' .' → logprob: -7.726889610290527

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931476593017578
    2. ' =' → logprob: -0.6931476593017578
    3. ' ' → logprob: -15.693147659301758
    4. '.' → logprob: -15.693147659301758
    5. '.add' → logprob: -16.193147659301758
    6. ')' → logprob: -16.943147659301758
    7. ' =
' → logprob: -18.068147659301758
    8. ':' → logprob: -18.318147659301758
    9. '.=' → logprob: -18.318147659301758
    10. '=[]' → logprob: -18.443147659301758

Token 556: ' Hand' (ID: 7110)
  Prédit: 'Hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -0.0011705794604495168
    2. ' Hand' → logprob: -6.751170635223389
    3. ' hand' → logprob: -16.251171112060547
    4. 'Handshake' → logprob: -16.626171112060547
    5. 'Hands' → logprob: -16.626171112060547
    6. '[' → logprob: -16.751171112060547
    7. ' ' → logprob: -16.876171112060547
    8. 'hand' → logprob: -17.376171112060547
    9. '   ' → logprob: -17.376171112060547
    10. '_hand' → logprob: -17.626171112060547

Token 557: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6861666440963745
    2. '()
' → logprob: -0.9361666440963745
    3. '([' → logprob: -2.436166763305664
    4. '(initial' → logprob: -4.936166763305664
    5. '([])
' → logprob: -5.436166763305664
    6. '(draw' → logprob: -6.186166763305664
    7. '([]' → logprob: -6.436166763305664
    8. '()

' → logprob: -6.936166763305664
    9. 'draw' → logprob: -9.061166763305664
    10. '([
' → logprob: -9.186166763305664

Token 558: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -2.176947600673884e-05
    2. ' Card' → logprob: -11.000021934509277
    3. 'card' → logprob: -12.250021934509277
    4. '<Card' → logprob: -16.12502098083496
    5. '(Card' → logprob: -16.87502098083496
    6. 'Deck' → logprob: -17.75002098083496
    7. ')' → logprob: -18.12502098083496
    8. 'Dealer' → logprob: -18.37502098083496
    9. '   ' → logprob: -18.50002098083496
    10. ' card' → logprob: -18.75002098083496

Token 559: '(c' (ID: 2410)
  Prédit: '(rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rank' → logprob: -0.7255417108535767
    2. '(card' → logprob: -0.9755417108535767
    3. '(c' → logprob: -1.9755417108535767
    4. '(r' → logprob: -8.600542068481445
    5. '(' → logprob: -10.850542068481445
    6. '(initial' → logprob: -11.475542068481445
    7. '(cards' → logprob: -11.600542068481445
    8. '(rc' → logprob: -11.725542068481445
    9. '(code' → logprob: -11.725542068481445
    10. 'rank' → logprob: -12.100542068481445

Token 560: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019567293929867446
    2. 'for' → logprob: -8.750195503234863
    3. ' for' → logprob: -11.625195503234863
    4. 'rank' → logprob: -11.875195503234863
    5. '),' → logprob: -12.500195503234863
    6. 'r' → logprob: -12.500195503234863
    7. '   ' → logprob: -12.750195503234863
    8. '')' → logprob: -13.250195503234863
    9. '(rank' → logprob: -13.375195503234863
    10. ']' → logprob: -13.750195503234863

Token 561: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6503797173500061
    2. ' for' → logprob: -1.0253796577453613
    3. ')' → logprob: -2.1503796577453613
    4. '(c' → logprob: -7.025379657745361
    5. ',' → logprob: -7.400379657745361
    6. '   ' → logprob: -8.15038013458252
    7. '(card' → logprob: -8.27538013458252
    8. ' ' → logprob: -8.40038013458252
    9. 'c' → logprob: -9.27538013458252
    10. '(' → logprob: -9.65038013458252

Token 562: ' c' (ID: 274)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.16045524179935455
    2. 'initial' → logprob: -1.9104552268981934
    3. ' c' → logprob: -8.785455703735352
    4. 'c' → logprob: -9.535455703735352
    5. '(initial' → logprob: -13.160455703735352
    6. '	initial' → logprob: -13.535455703735352
    7. ' inicial' → logprob: -14.035455703735352
    8. '_initial' → logprob: -14.410455703735352
    9. 'Initial' → logprob: -15.035455703735352
    10. ' ' → logprob: -15.160455703735352

Token 563: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16531112790107727
    2. 'in' → logprob: -1.9153110980987549
    3. 'initial' → logprob: -5.415311336517334
    4. 'c' → logprob: -7.915311336517334
    5. ' initial' → logprob: -8.415310859680176
    6. ' c' → logprob: -11.040310859680176
    7. 'i' → logprob: -11.415310859680176
    8. 'n' → logprob: -12.415310859680176
    9. ' i' → logprob: -13.040310859680176
    10. ' ' → logprob: -13.415310859680176

Token 564: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.16022604703903198
    2. ' initial' → logprob: -1.9102261066436768
    3. '(initial' → logprob: -13.785225868225098
    4. '	initial' → logprob: -15.035225868225098
    5. ' inicial' → logprob: -15.535225868225098
    6. 'init' → logprob: -15.785225868225098
    7. ' ' → logprob: -16.035226821899414
    8. '.initial' → logprob: -16.410226821899414
    9. '   ' → logprob: -16.660226821899414
    10. '_initial' → logprob: -17.035226821899414

Token 565: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.1517960956552997e-05
    2. 'cards' → logprob: -11.625011444091797
    3. 'Cards' → logprob: -14.250011444091797
    4. '_c' → logprob: -14.875011444091797
    5. '
' → logprob: -15.000011444091797
    6. '_draw' → logprob: -15.125011444091797
    7. 'draw' → logprob: -15.750011444091797
    8. ' cards' → logprob: -15.875011444091797
    9. '_p' → logprob: -16.000011444091797
    10. '_' → logprob: -16.250011444091797

Token 566: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6945321559906006
    2. '])
' → logprob: -0.6945321559906006
    3. ' ])
' → logprob: -7.31953239440918
    4. ' ])' → logprob: -7.69453239440918
    5. '       ' → logprob: -8.44453239440918
    6. '   ' → logprob: -11.06953239440918
    7. ']' → logprob: -11.19453239440918
    8. '])
' → logprob: -11.56953239440918
    9. '])

' → logprob: -11.94453239440918
    10. ')' → logprob: -13.81953239440918

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016387293115258217
    2. 'self' → logprob: -4.266387462615967
    3. '   ' → logprob: -6.516387462615967
    4. ' self' → logprob: -7.391387462615967
    5. '
' → logprob: -9.641386985778809
    6. 'def' → logprob: -10.266386985778809
    7. '<|end|>' → logprob: -11.891386985778809
    8. ' ' → logprob: -12.266386985778809
    9. '        
' → logprob: -12.391386985778809
    10. '	self' → logprob: -13.016386985778809

Token 568: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001296073431149125
    2. ' self' → logprob: -7.001296043395996
    3. '       ' → logprob: -7.876296043395996
    4. '
' → logprob: -12.626296043395996
    5. '   ' → logprob: -14.126296043395996
    6. ' ' → logprob: -15.126296043395996
    7. '        
' → logprob: -15.751296043395996
    8. 's' → logprob: -15.876296043395996
    9. '	self' → logprob: -16.126296997070312
    10. 'def' → logprob: -16.376296997070312

Token 569: '.draw' (ID: 11660)
  Prédit: '.draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.draw' → logprob: -0.7742509245872498
    2. 'draw' → logprob: -0.8992509245872498
    3. '_draw' → logprob: -2.7742509841918945
    4. '.deck' → logprob: -3.6492509841918945
    5. 'deck' → logprob: -4.0242509841918945
    6. ' draw' → logprob: -4.1492509841918945
    7. '._' → logprob: -5.5242509841918945
    8. '.' → logprob: -6.0242509841918945
    9. '_' → logprob: -7.0242509841918945
    10. '.p' → logprob: -7.3992509841918945

Token 570: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -5.676981345459353e-06
    2. '_' → logprob: -12.625005722045898
    3. '=' → logprob: -14.250005722045898
    4. 'pile' → logprob: -14.375005722045898
    5. '_de' → logprob: -14.500005722045898
    6. 'Pile' → logprob: -15.375005722045898
    7. 'p' → logprob: -16.2500057220459
    8. '_cards' → logprob: -16.7500057220459
    9. 's' → logprob: -16.8750057220459
    10. '   ' → logprob: -17.0000057220459

Token 571: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -1.735893965815194e-05
    2. '_' → logprob: -13.250017166137695
    3. '   ' → logprob: -13.375017166137695
    4. 'i' → logprob: -13.500017166137695
    5. 'iles' → logprob: -13.500017166137695
    6. ' ile' → logprob: -13.750017166137695
    7. 'pile' → logprob: -13.750017166137695
    8. '

' → logprob: -14.250017166137695
    9. '
' → logprob: -14.250017166137695
    10. '#' → logprob: -14.500017166137695

Token 572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5045362114906311
    2. '_cards' → logprob: -1.5045361518859863
    3. ' =' → logprob: -1.7545361518859863
    4. '_' → logprob: -6.879536151885986
    5. '=_' → logprob: -10.504536628723145
    6. 'cards' → logprob: -11.004536628723145
    7. '_de' → logprob: -11.629536628723145
    8. '_=' → logprob: -12.004536628723145
    9. 'Cards' → logprob: -12.129536628723145
    10. 's' → logprob: -12.504536628723145

Token 573: ' Deck' (ID: 41948)
  Prédit: 'Deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Deck' → logprob: -0.0007119550718925893
    2. ' Deck' → logprob: -7.250711917877197
    3. 'Deque' → logprob: -13.375712394714355
    4. 'Hand' → logprob: -15.750712394714355
    5. 'Draw' → logprob: -16.50071144104004
    6. '[' → logprob: -16.75071144104004
    7. 'deque' → logprob: -17.50071144104004
    8. 'deck' → logprob: -18.12571144104004
    9. '   ' → logprob: -18.25071144104004
    10. 'self' → logprob: -18.37571144104004

Token 574: '(draw' (ID: 105827)
  Prédit: '(draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(draw' → logprob: -7.822646693966817e-06
    2. 'draw' → logprob: -11.875007629394531
    3. ' (' → logprob: -15.125007629394531
    4. ' draw' → logprob: -15.625007629394531
    5. '([' → logprob: -15.750007629394531
    6. '(' → logprob: -15.875007629394531
    7. '(d' → logprob: -18.12500762939453
    8. '((' → logprob: -18.25000762939453
    9. '(drop' → logprob: -18.25000762939453
    10. '(list' → logprob: -18.25000762939453

Token 575: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: 0.0
    2. '_' → logprob: -17.0
    3. 'pile' → logprob: -19.625
    4. ' _' → logprob: -19.75
    5. ')' → logprob: -20.0
    6. '

' → logprob: -20.125
    7. '   ' → logprob: -20.375
    8. '(p' → logprob: -20.5
    9. ' pile' → logprob: -20.75
    10. '
' → logprob: -20.75

Token 576: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -14.25000286102295
    3. 'iles' → logprob: -15.00000286102295
    4. '
' → logprob: -15.12500286102295
    5. 'le' → logprob: -15.37500286102295
    6. 'il' → logprob: -15.50000286102295
    7. ' ile' → logprob: -15.50000286102295
    8. 'pile' → logprob: -15.62500286102295
    9. '

' → logprob: -16.000003814697266
    10. 'lie' → logprob: -16.250003814697266

Token 577: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -4.692145012086257e-05
    2. '_c' → logprob: -10.625046730041504
    3. 'cards' → logprob: -11.125046730041504
    4. '_' → logprob: -12.875046730041504
    5. ')' → logprob: -13.750046730041504
    6. 'Cards' → logprob: -14.250046730041504
    7. '
' → logprob: -14.375046730041504
    8. '_card' → logprob: -14.750046730041504
    9. '_car' → logprob: -15.000046730041504
    10. 's' → logprob: -15.125046730041504

Token 578: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ' )' → logprob: -12.875005722045898
    3. '   ' → logprob: -13.250005722045898
    4. ')
' → logprob: -14.250005722045898
    5. ')

' → logprob: -14.625005722045898
    6. '       ' → logprob: -16.2500057220459
    7. '))' → logprob: -17.0000057220459
    8. ' ' → logprob: -18.1250057220459
    9. '")' → logprob: -18.3750057220459
    10. '<|end|>' → logprob: -18.3750057220459

Token 579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46028992533683777
    2. '
' → logprob: -1.2102899551391602
    3. '<|end|>' → logprob: -3.33528995513916
    4. 'def' → logprob: -3.58528995513916
    5. ' def' → logprob: -5.58528995513916
    6. '    
' → logprob: -7.08528995513916
    7. ' ' → logprob: -7.58528995513916
    8. '<|end|>' → logprob: -7.71028995513916
    9. ')' → logprob: -7.96028995513916
    10. '  ' → logprob: -8.08528995513916

Token 580: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01106173824518919
    2. ' def' → logprob: -4.511061668395996
    3. '   ' → logprob: -11.261061668395996
    4. '
' → logprob: -14.886061668395996
    5. '@property' → logprob: -15.136061668395996
    6. '	def' → logprob: -15.511061668395996
    7. '    
' → logprob: -16.386062622070312
    8. 'de' → logprob: -16.636062622070312
    9. ' 
' → logprob: -17.886062622070312
    10. 'ndef' → logprob: -18.136062622070312

Token 581: ' play' (ID: 2107)
  Prédit: ' play'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' play' → logprob: -0.025196576490998268
    2. 'play' → logprob: -4.400196552276611
    3. '_' → logprob: -5.525196552276611
    4. ' hit' → logprob: -5.775196552276611
    5. '_hit' → logprob: -6.150196552276611
    6. '_play' → logprob: -6.275196552276611
    7. 'hit' → logprob: -7.900196552276611
    8. ' should' → logprob: -8.40019702911377
    9. ' hand' → logprob: -8.52519702911377
    10. 'should' → logprob: -9.27519702911377

Token 582: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014642698224633932
    2. '(' → logprob: -6.876464366912842
    3. '_hand' → logprob: -8.751463890075684
    4. '_' → logprob: -9.001463890075684
    5. '_(' → logprob: -9.376463890075684
    6. 'self' → logprob: -10.626463890075684
    7. '()' → logprob: -10.876463890075684
    8. '_self' → logprob: -11.126463890075684
    9. ' (' → logprob: -13.001463890075684
    10. '_turn' → logprob: -14.001463890075684

Token 583: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025249123573303223
    2. '):
' → logprob: -4.025249004364014
    3. 'self' → logprob: -5.150249004364014
    4. ')' → logprob: -7.775249004364014
    5. '_hand' → logprob: -7.775249004364014
    6. '(self' → logprob: -8.900249481201172
    7. '_' → logprob: -9.150249481201172
    8. '_self' → logprob: -10.400249481201172
    9. '):
' → logprob: -10.650249481201172
    10. ' self' → logprob: -10.775249481201172

Token 584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00604800833389163
    2. ' while' → logprob: -5.381048202514648
    3. '
' → logprob: -7.381048202514648
    4. '   ' → logprob: -7.506048202514648
    5. 'while' → logprob: -9.131048202514648
    6. '    
' → logprob: -10.631048202514648
    7. '    ' → logprob: -10.631048202514648
    8. ' 
' → logprob: -10.756048202514648
    9. '        
' → logprob: -10.756048202514648
    10. ' ' → logprob: -11.256048202514648

Token 585: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.315107136964798
    2. 'while' → logprob: -1.3151071071624756
    3. '       ' → logprob: -6.315107345581055
    4. '   ' → logprob: -11.065107345581055
    5. ' 
' → logprob: -11.815107345581055
    6. '        
' → logprob: -12.440107345581055
    7. '
' → logprob: -12.690107345581055
    8. '```' → logprob: -13.440107345581055
    9. '	while' → logprob: -13.940107345581055
    10. ' if' → logprob: -14.190107345581055

Token 586: ' Check' (ID: 6208)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5759982466697693
    2. ' while' → logprob: -0.8259982466697693
    3. '       ' → logprob: -10.200998306274414
    4. '   ' → logprob: -11.575998306274414
    5. 'While' → logprob: -11.700998306274414
    6. 'def' → logprob: -14.325998306274414
    7. ' While' → logprob: -14.325998306274414
    8. '	while' → logprob: -14.450998306274414
    9. 'total' → logprob: -14.700998306274414
    10. '#' → logprob: -15.075998306274414

Token 587: ' initial' (ID: 4871)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.06480759382247925
    2. 'while' → logprob: -3.689807653427124
    3. ' if' → logprob: -3.814807653427124
    4. '   ' → logprob: -5.189807415008545
    5. ' ' → logprob: -5.314807415008545
    6. ' hand' → logprob: -6.814807415008545
    7. ' current' → logprob: -7.064807415008545
    8. ' for' → logprob: -7.064807415008545
    9. ' soft' → logprob: -7.064807415008545
    10. ' self' → logprob: -7.814807415008545

Token 588: ' blackjack' (ID: 42508)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.360215663909912
    2. '   ' → logprob: -1.735215663909912
    3. 'if' → logprob: -1.860215663909912
    4. 'while' → logprob: -2.360215663909912
    5. ' while' → logprob: -2.985215663909912
    6. ' hand' → logprob: -3.235215663909912
    7. ' ' → logprob: -3.485215663909912
    8. 'self' → logprob: -3.610215663909912
    9. 'soft' → logprob: -3.860215663909912
    10. 'value' → logprob: -3.860215663909912

Token 589: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8110959529876709
    2. ' if' → logprob: -0.8110959529876709
    3. '
' → logprob: -2.811095952987671
    4. '       ' → logprob: -3.561095952987671
    5. ':' → logprob: -4.56109619140625
    6. ':
' → logprob: -5.43609619140625
    7. '   ' → logprob: -5.56109619140625
    8. '()
' → logprob: -6.18609619140625
    9. '        
' → logprob: -7.06109619140625
    10. ',' → logprob: -8.31109619140625

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07492304593324661
    2. ' if' → logprob: -2.699923038482666
    3. 'if' → logprob: -5.324923038482666
    4. '   ' → logprob: -10.574923515319824
    5. '
' → logprob: -10.699923515319824
    6. '        
' → logprob: -11.449923515319824
    7. ' while' → logprob: -11.449923515319824
    8. ',' → logprob: -11.574923515319824
    9. 'while' → logprob: -12.199923515319824
    10. '        ' → logprob: -12.449923515319824

Token 591: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.029936889186501503
    2. ' if' → logprob: -3.5299367904663086
    3. '       ' → logprob: -8.779936790466309
    4. 'while' → logprob: -10.904936790466309
    5. '   ' → logprob: -11.279936790466309
    6. ' while' → logprob: -14.029936790466309
    7. ' ' → logprob: -15.404936790466309
    8. '
' → logprob: -15.904936790466309
    9. '```' → logprob: -16.029937744140625
    10. 'If' → logprob: -16.529937744140625

Token 592: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.012511059641838074
    2. 'self' → logprob: -4.387511253356934
    3. ' ' → logprob: -14.262511253356934
    4. ' len' → logprob: -14.637511253356934
    5. '	self' → logprob: -16.387510299682617
    6. '(self' → logprob: -17.012510299682617
    7. '
' → logprob: -17.012510299682617
    8. ' any' → logprob: -17.137510299682617
    9. '   ' → logprob: -17.262510299682617
    10. '  ' → logprob: -17.262510299682617

Token 593: '.hand' (ID: 64204)
  Prédit: '.hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hand' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -12.750003814697266
    3. '.is' → logprob: -15.250003814697266
    4. 'hand' → logprob: -16.125003814697266
    5. ' .' → logprob: -16.500003814697266
    6. '.has' → logprob: -17.250003814697266
    7. '_hand' → logprob: -18.375003814697266
    8. '.har' → logprob: -18.500003814697266
    9. '.head' → logprob: -18.750003814697266
    10. '.black' → logprob: -18.875003814697266

Token 594: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -7.374227425316349e-05
    2. '.' → logprob: -9.625073432922363
    3. ' .' → logprob: -11.875073432922363
    4. 'is' → logprob: -15.000073432922363
    5. '.has' → logprob: -15.500073432922363
    6. '.black' → logprob: -17.87507438659668
    7. '

' → logprob: -17.87507438659668
    8. '._' → logprob: -17.87507438659668
    9. '.s' → logprob: -18.12507438659668
    10. '
' → logprob: -18.25007438659668

Token 595: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.000001907348633
    3. '_b' → logprob: -16.875001907348633
    4. 'black' → logprob: -18.500001907348633
    5. '_bl' → logprob: -20.000001907348633
    6. '__' → logprob: -20.125001907348633
    7. '
' → logprob: -20.250001907348633
    8. '_BLACK' → logprob: -21.250001907348633
    9. ' blackjack' → logprob: -21.625001907348633
    10. '_
' → logprob: -21.750001907348633

Token 596: 'jack' (ID: 23223)
  Prédit: 'jack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jack' → logprob: -0.3136552572250366
    2. 'ack' → logprob: -1.3136552572250366
    3. 'j' → logprob: -8.813654899597168
    4. 'lack' → logprob: -9.688654899597168
    5. 'Jack' → logprob: -10.563654899597168
    6. '_j' → logprob: -10.813654899597168
    7. '
' → logprob: -11.063654899597168
    8. '_' → logprob: -11.313654899597168
    9. 'aj' → logprob: -11.438654899597168
    10. ' jack' → logprob: -11.438654899597168

Token 597: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03820386156439781
    2. '():
' → logprob: -3.2882039546966553
    3. '()' → logprob: -8.913204193115234
    4. ' ():' → logprob: -10.663204193115234
    5. '():
' → logprob: -12.413204193115234
    6. '(' → logprob: -15.538204193115234
    7. '():

' → logprob: -16.163204193115234
    8. ':' → logprob: -16.413204193115234
    9. '()>' → logprob: -17.163204193115234
    10. '()
' → logprob: -17.788204193115234

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004153310786932707
    2. ' return' → logprob: -5.879153251647949
    3. 'return' → logprob: -7.504153251647949
    4. '
' → logprob: -7.754153251647949
    5. '   ' → logprob: -9.12915325164795
    6. '       ' → logprob: -9.62915325164795
    7. ':return' → logprob: -9.62915325164795
    8. ':' → logprob: -9.87915325164795
    9. ':
' → logprob: -10.12915325164795
    10. '	return' → logprob: -11.37915325164795

Token 599: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05002100020647049
    2. ' return' → logprob: -3.050020933151245
    3. '           ' → logprob: -6.925021171569824
    4. '       ' → logprob: -7.925021171569824
    5. '   ' → logprob: -9.425021171569824
    6. '	return' → logprob: -12.800021171569824
    7. ' ' → logprob: -13.175021171569824
    8. '
' → logprob: -13.925021171569824
    9. '               ' → logprob: -14.925021171569824
    10. '{return' → logprob: -15.175021171569824

Token 600: ' "' (ID: 392)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30525413155555725
    2. 'self' → logprob: -1.4302541017532349
    3. '

' → logprob: -4.180253982543945
    4. ' self' → logprob: -5.430253982543945
    5. '"' → logprob: -6.930253982543945
    6. ' ' → logprob: -7.305253982543945
    7. '<|end|>' → logprob: -7.555253982543945
    8. 'True' → logprob: -7.680253982543945
    9. ''' → logprob: -8.180253982543945
    10. '  
' → logprob: -8.555253982543945

Token 601: 'black' (ID: 18474)
  Prédit: 'black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.008730984292924404
    2. 'Black' → logprob: -5.383730888366699
    3. ''' → logprob: -6.258730888366699
    4. 'stand' → logprob: -6.883730888366699
    5. 'BLACK' → logprob: -7.508730888366699
    6. '"' → logprob: -7.758730888366699
    7. ''b' → logprob: -9.5087308883667
    8. ' blackjack' → logprob: -10.5087308883667
    9. ':black' → logprob: -11.3837308883667
    10. ''S' → logprob: -11.5087308883667

Token 602: 'jack' (ID: 23223)
  Prédit: 'jack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jack' → logprob: -2.5107177862082608e-05
    2. 'j' → logprob: -11.875024795532227
    3. 'jac' → logprob: -12.375024795532227
    4. '_j' → logprob: -12.500024795532227
    5. 'Jack' → logprob: -13.500024795532227
    6. '```' → logprob: -13.625024795532227
    7. 'black' → logprob: -13.750024795532227
    8. '}' → logprob: -14.125024795532227
    9. '_' → logprob: -14.125024795532227
    10. '
' → logprob: -14.250024795532227

Token 603: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01111584808677435
    2. '"
' → logprob: -4.511116027832031
    3. '"

' → logprob: -9.886116027832031
    4. ' "' → logprob: -11.886116027832031
    5. '!"' → logprob: -13.511116027832031
    6. '"`
' → logprob: -13.761116027832031
    7. '_hand' → logprob: -13.886116027832031
    8. '_black' → logprob: -14.136116027832031
    9. '_hit' → logprob: -14.136116027832031
    10. ' "
' → logprob: -14.261116027832031

Token 604: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012061596848070621
    2. '       ' → logprob: -4.762061595916748
    3. '    
' → logprob: -7.137061595916748
    4. '        
' → logprob: -7.137061595916748
    5. '   ' → logprob: -7.387061595916748
    6. '\n' → logprob: -7.762061595916748
    7. ' while' → logprob: -8.137062072753906
    8. ' 
' → logprob: -8.762062072753906
    9. '  
' → logprob: -8.887062072753906
    10. '
' → logprob: -9.637062072753906

Token 605: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0011746286181733012
    2. ' while' → logprob: -6.751174449920654
    3. '       ' → logprob: -12.626174926757812
    4. '   ' → logprob: -14.376174926757812
    5. '        
' → logprob: -14.876174926757812
    6. '
' → logprob: -15.251174926757812
    7. '	while' → logprob: -17.376174926757812
    8. 'While' → logprob: -18.251174926757812
    9. '    
' → logprob: -18.876174926757812
    10. ' ' → logprob: -19.751174926757812

Token 606: ' Play' (ID: 9103)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04858975484967232
    2. ' while' → logprob: -3.0485897064208984
    3. '   ' → logprob: -13.548589706420898
    4. 'While' → logprob: -14.423589706420898
    5. '	while' → logprob: -15.798589706420898
    6. '
' → logprob: -16.7985897064209
    7. '       ' → logprob: -16.7985897064209
    8. '#' → logprob: -16.7985897064209
    9. ' ' → logprob: -16.9235897064209
    10. ' While' → logprob: -16.9235897064209

Token 607: ' according' (ID: 7065)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.523043155670166
    2. 'while' → logprob: -1.023043155670166
    3. ':' → logprob: -3.523043155670166
    4. '   ' → logprob: -5.273043155670166
    5. 'def' → logprob: -6.523043155670166
    6. '       ' → logprob: -6.523043155670166
    7. '
' → logprob: -6.648043155670166
    8. 'self' → logprob: -6.648043155670166
    9. ' =' → logprob: -6.898043155670166
    10. ':
' → logprob: -7.023043155670166

Token 608: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10051838308572769
    2. ' to' → logprob: -2.3505184650421143
    3. '_to' → logprob: -8.600518226623535
    4. '       ' → logprob: -9.100518226623535
    5. 't' → logprob: -11.725518226623535
    6. 'ing' → logprob: -12.475518226623535
    7. 'def' → logprob: -13.850518226623535
    8. 'while' → logprob: -14.350518226623535
    9. 'To' → logprob: -14.725518226623535
    10. 'e' → logprob: -14.975518226623535

Token 609: ' rules' (ID: 9607)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -1.0654665231704712
    2. ' standard' → logprob: -1.6904665231704712
    3. ' blackjack' → logprob: -2.4404664039611816
    4. ' the' → logprob: -2.5654664039611816
    5. 'self' → logprob: -2.8154664039611816
    6. 'black' → logprob: -2.9404664039611816
    7. 'rules' → logprob: -3.3154664039611816
    8. ' rules' → logprob: -3.4404664039611816
    9. 'the' → logprob: -3.4404664039611816
    10. 'basic' → logprob: -4.065466403961182

Token 610: ':
' (ID: 734)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3513959050178528
    2. '       ' → logprob: -1.226395845413208
    3. 'while' → logprob: -5.976396083831787
    4. '
' → logprob: -8.976395606994629
    5. '   ' → logprob: -9.101395606994629
    6. '        
' → logprob: -9.351395606994629
    7. '	while' → logprob: -10.726395606994629
    8. 'While' → logprob: -11.351395606994629
    9. ' 
' → logprob: -11.726395606994629
    10. ':' → logprob: -11.851395606994629

Token 611: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.30043208599090576
    2. 'while' → logprob: -1.5504320859909058
    3. '       ' → logprob: -3.0504322052001953
    4. '	while' → logprob: -12.550432205200195
    5. '   ' → logprob: -13.300432205200195
    6. '        
' → logprob: -14.550432205200195
    7. 'While' → logprob: -14.925432205200195
    8. ' ' → logprob: -15.425432205200195
    9. '    ' → logprob: -15.925432205200195
    10. '
' → logprob: -15.925432205200195

Token 612: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3140195310115814
    2. 'while' → logprob: -1.3140195608139038
    3. '       ' → logprob: -7.189019680023193
    4. '   ' → logprob: -14.064019203186035
    5. 'wh' → logprob: -14.314019203186035
    6. '	while' → logprob: -14.314019203186035
    7. ' ' → logprob: -15.439019203186035
    8. '        
' → logprob: -15.814019203186035
    9. '
' → logprob: -15.939019203186035
    10. 'While' → logprob: -16.68902015686035

Token 613: ' Hits' (ID: 94288)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3136317729949951
    2. ' while' → logprob: -1.3136317729949951
    3. '       ' → logprob: -8.063632011413574
    4. 'While' → logprob: -10.563632011413574
    5. '
' → logprob: -11.313632011413574
    6. '   ' → logprob: -11.438632011413574
    7. '	while' → logprob: -13.438632011413574
    8. ' While' → logprob: -13.688632011413574
    9. '        
' → logprob: -13.938632011413574
    10. '```' → logprob: -14.313632011413574

Token 614: ' if' (ID: 538)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1733420342206955
    2. ' if' → logprob: -1.923341989517212
    3. ' until' → logprob: -5.048342227935791
    4. 'while' → logprob: -5.548342227935791
    5. ' ' → logprob: -6.423342227935791
    6. ' when' → logprob: -7.798342227935791
    7. '   ' → logprob: -8.048341751098633
    8. ' on' → logprob: -8.423341751098633
    9. 'if' → logprob: -9.798341751098633
    10. ' at' → logprob: -11.173341751098633

Token 615: ' score' (ID: 8429)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20142698287963867
    2. ' self' → logprob: -1.7014269828796387
    3. '(self' → logprob: -11.576427459716797
    4. ' (' → logprob: -12.701427459716797
    5. ' ' → logprob: -15.201427459716797
    6. ' not' → logprob: -15.451427459716797
    7. '	self' → logprob: -15.451427459716797
    8. 'not' → logprob: -15.826427459716797
    9. '(' → logprob: -16.201427459716797
    10. 'True' → logprob: -16.951427459716797

Token 616: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.38154080510139465
    2. '<' → logprob: -1.2565407752990723
    3. '()' → logprob: -3.5065407752990723
    4. '()<' → logprob: -6.381540775299072
    5. ' ' → logprob: -7.756540775299072
    6. '<=' → logprob: -9.88154125213623
    7. ' ()' → logprob: -10.00654125213623
    8. ' <=' → logprob: -10.00654125213623
    9. '(' → logprob: -10.13154125213623
    10. ' less' → logprob: -10.13154125213623

Token 617: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.012696702033281326
    2. ' ' → logprob: -4.387696743011475
    3. '17' → logprob: -8.637696266174316
    4. '1' → logprob: -11.637696266174316
    5. '15' → logprob: -14.762696266174316
    6. 'soft' → logprob: -15.262696266174316
    7. '6' → logprob: -16.137697219848633
    8. ' soft' → logprob: -17.262697219848633
    9. '"' → logprob: -17.512697219848633
    10. 's' → logprob: -17.700197219848633

Token 618: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.24725113809108734
    2. '       ' → logprob: -1.6222511529922485
    3. ' and' → logprob: -4.372251033782959
    4. ',' → logprob: -5.622251033782959
    5. ' while' → logprob: -5.747251033782959
    6. '
' → logprob: -7.622251033782959
    7. '   ' → logprob: -7.872251033782959
    8. ' ' → logprob: -7.997251033782959
    9. 'or' → logprob: -8.997251510620117
    10. ' ,' → logprob: -9.247251510620117

Token 619: ' soft' (ID: 10143)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7652798295021057
    2. 'self' → logprob: -1.515279769897461
    3. ' (' → logprob: -1.765279769897461
    4. ' self' → logprob: -2.015279769897461
    5. '(' → logprob: -4.640279769897461
    6. '(s' → logprob: -7.890279769897461
    7. 'soft' → logprob: -8.140279769897461
    8. ' ' → logprob: -9.640279769897461
    9. '(
' → logprob: -9.640279769897461
    10. ' soft' → logprob: -10.265279769897461

Token 620: ' ' (ID: 220)
  Prédit: '17'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -0.3596591055393219
    2. '_' → logprob: -1.3596590757369995
    3. ' ' → logprob: -3.109659194946289
    4. '16' → logprob: -7.734659194946289
    5. ' _' → logprob: -9.484659194946289
    6. '-' → logprob: -10.484659194946289
    7. '7' → logprob: -10.609659194946289
    8. '   ' → logprob: -10.734659194946289
    9. '<|end|>' → logprob: -10.734659194946289
    10. '  ' → logprob: -11.109659194946289

Token 621: '17' (ID: 1422)
  Prédit: '17'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -0.00011784763046307489
    2. ' ' → logprob: -10.125118255615234
    3. '1' → logprob: -10.375118255615234
    4. '_' → logprob: -10.875118255615234
    5. '16' → logprob: -11.250118255615234
    6. '7' → logprob: -11.500118255615234
    7. '
' → logprob: -13.125118255615234
    8. '-' → logprob: -14.375118255615234
    9. '```' → logprob: -15.125118255615234
    10. 'and' → logprob: -15.750118255615234

Token 622: '
' (ID: 198)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.19732479751110077
    2. '       ' → logprob: -2.947324752807617
    3. ':' → logprob: -3.072324752807617
    4. ' while' → logprob: -3.197324752807617
    5. ',' → logprob: -4.572324752807617
    6. ' and' → logprob: -4.822324752807617
    7. '
' → logprob: -5.322324752807617
    8. '   ' → logprob: -5.697324752807617
    9. 'while' → logprob: -6.072324752807617
    10. ' ' → logprob: -6.322324752807617

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030777648091316223
    2. ' while' → logprob: -3.5307776927948
    3. ' or' → logprob: -7.780777454376221
    4. 'while' → logprob: -7.905777454376221
    5. '   ' → logprob: -9.780777931213379
    6. ',' → logprob: -9.905777931213379
    7. ' and' → logprob: -10.030777931213379
    8. ' ' → logprob: -11.405777931213379
    9. '           ' → logprob: -11.405777931213379
    10. '
' → logprob: -11.780777931213379

Token 624: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.004212670959532261
    2. 'while' (adapté à ' while') → logprob: -5.504212856292725
    3. '       ' → logprob: -9.504212379455566
    4. '   ' → logprob: -9.879212379455566
    5. '
' → logprob: -13.254212379455566
    6. ' score' → logprob: -13.754212379455566
    7. '	while' → logprob: -13.754212379455566
    8. ' 
' → logprob: -13.754212379455566
    9. ' ' → logprob: -13.879212379455566
    10. '  ' → logprob: -14.129212379455566

Token 625: ' True' (ID: 6432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016108620911836624
    2. ' self' → logprob: -4.141108512878418
    3. '(self' → logprob: -9.766108512878418
    4. 'True' → logprob: -11.266108512878418
    5. ' True' → logprob: -13.516108512878418
    6. ' (' → logprob: -13.641108512878418
    7. '	self' → logprob: -14.516108512878418
    8. '(' → logprob: -15.141108512878418
    9. '   ' → logprob: -15.266108512878418
    10. 'se' → logprob: -15.516108512878418

Token 626: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6425945162773132
    2. ':
' → logprob: -1.017594575881958
    3. ' and' → logprob: -2.267594575881958
    4. ' :
' → logprob: -5.142594337463379
    5. ' :' → logprob: -6.017594337463379
    6. 'and' → logprob: -8.017594337463379
    7. ',' → logprob: -8.892594337463379
    8. '       ' → logprob: -9.642594337463379
    9. ' ' → logprob: -9.892594337463379
    10. ':

' → logprob: -10.267594337463379

Token 627: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7343986630439758
    2. ' self' → logprob: -1.484398603439331
    3. ' if' → logprob: -1.734398603439331
    4. '   ' → logprob: -3.234398603439331
    5. 'self' → logprob: -3.609398603439331
    6. '           ' → logprob: -3.734398603439331
    7. '
' → logprob: -4.48439884185791
    8. ' True' → logprob: -5.60939884185791
    9. 'if' → logprob: -5.85939884185791
    10. ' and' → logprob: -5.85939884185791

Token 628: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.7035415172576904
    2. 'total' → logprob: -1.3285415172576904
    3. ' score' → logprob: -2.4535415172576904
    4. ' total' → logprob: -2.5785415172576904
    5. '           ' → logprob: -3.7035415172576904
    6. 'if' → logprob: -3.9535415172576904
    7. 'value' → logprob: -4.5785417556762695
    8. ' if' → logprob: -4.9535417556762695
    9. ' hand' → logprob: -5.3285417556762695
    10. ' value' → logprob: -5.8285417556762695

Token 629: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367117419838905
    2. '=' → logprob: -3.4086711406707764
    3. ' <=' → logprob: -11.158671379089355
    4. ' ' → logprob: -12.033671379089355
    5. '<=' → logprob: -13.533671379089355
    6. '   ' → logprob: -13.908671379089355
    7. '=self' → logprob: -13.908671379089355
    8. '()' → logprob: -14.783671379089355
    9. '  ' → logprob: -15.158671379089355
    10. ' :=' → logprob: -15.533671379089355

Token 630: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141372084617615
    2. ' self' → logprob: -1.7014137506484985
    3. '(self' → logprob: -16.076414108276367
    4. '	self' → logprob: -16.701414108276367
    5. ' ' → logprob: -17.076414108276367
    6. '   ' → logprob: -17.326414108276367
    7. '       ' → logprob: -17.451414108276367
    8. '           ' → logprob: -17.576414108276367
    9. '[self' → logprob: -18.326414108276367
    10. '=self' → logprob: -18.451414108276367

Token 631: '.hand' (ID: 64204)
  Prédit: '.hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hand' → logprob: -0.00011009939044015482
    2. 'hand' → logprob: -9.500109672546387
    3. '.values' → logprob: -10.750109672546387
    4. '.' → logprob: -11.750109672546387
    5. ' hand' → logprob: -13.250109672546387
    6. '_hand' → logprob: -13.375109672546387
    7. ' .' → logprob: -14.375109672546387
    8. '.value' → logprob: -15.000109672546387
    9. 'Hand' → logprob: -15.125109672546387
    10. 'values' → logprob: -15.250109672546387

Token 632: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -3.273621405242011e-05
    2. '.' → logprob: -11.000032424926758
    3. 'values' → logprob: -11.375032424926758
    4. '.value' → logprob: -12.625032424926758
    5. ' .' → logprob: -13.750032424926758
    6. '	values' → logprob: -16.250032424926758
    7. ' values' → logprob: -17.000032424926758
    8. '.v' → logprob: -17.000032424926758
    9. '.soft' → logprob: -17.250032424926758
    10. '(values' → logprob: -17.625032424926758

Token 633: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0024861192796379328
    2. '()
' → logprob: -6.002486228942871
    3. ' ()' → logprob: -12.877486228942871
    4. ')' → logprob: -13.127486228942871
    5. '()

' → logprob: -13.502486228942871
    6. '()>' → logprob: -13.877486228942871
    7. '()
' → logprob: -14.127486228942871
    8. '())' → logprob: -14.127486228942871
    9. '   ' → logprob: -14.377486228942871
    10. '()<' → logprob: -14.502486228942871

Token 634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04531010612845421
    2. '       ' → logprob: -3.9203100204467773
    3. ' if' → logprob: -4.795310020446777
    4. '
' → logprob: -5.170310020446777
    5. ' ' → logprob: -5.170310020446777
    6. '   ' → logprob: -6.170310020446777
    7. '<|end|>' → logprob: -7.170310020446777
    8. '    ' → logprob: -7.920310020446777
    9. ' 
' → logprob: -8.295310020446777
    10. ' and' → logprob: -8.420310020446777

Token 635: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.579784095287323
    2. 'if' (adapté à ' if') → logprob: -0.829784095287323
    3. '           ' → logprob: -5.579783916473389
    4. '            ' → logprob: -10.204784393310547
    5. '
' → logprob: -11.204784393310547
    6. '               ' → logprob: -12.579784393310547
    7. '    ' → logprob: -12.954784393310547
    8. '          ' → logprob: -13.704784393310547
    9. '       ' → logprob: -13.829784393310547
    10. '            
' → logprob: -13.829784393310547

Token 636: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.018185297027230263
    2. ' score' → logprob: -4.018185138702393
    3. '(score' → logprob: -10.51818561553955
    4. '	score' → logprob: -12.26818561553955
    5. ' ' → logprob: -12.89318561553955
    6. '   ' → logprob: -14.26818561553955
    7. ' (' → logprob: -15.51818561553955
    8. '  ' → logprob: -16.143184661865234
    9. '     ' → logprob: -16.643184661865234
    10. '(' → logprob: -16.643184661865234

Token 637: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7029266357421875
    2. '<=' → logprob: -0.8279266357421875
    3. ' <' → logprob: -3.3279266357421875
    4. ' <=' → logprob: -3.5779266357421875
    5. '>' → logprob: -5.7029266357421875
    6. ' ' → logprob: -8.077926635742188
    7. '>=' → logprob: -8.327926635742188
    8. ' >' → logprob: -8.952926635742188
    9. ' >=' → logprob: -11.452926635742188
    10. '
' → logprob: -11.765426635742188

Token 638: ' ' (ID: 220)
  Prédit: '17'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -0.0014802211662754416
    2. ' ' → logprob: -6.7514801025390625
    3. '=' → logprob: -8.126480102539062
    4. '7' → logprob: -11.876480102539062
    5. '16' → logprob: -12.001480102539062
    6. ' =' → logprob: -14.626480102539062
    7. '1' → logprob: -14.751480102539062
    8. '18' → logprob: -15.751480102539062
    9. 's' → logprob: -16.501480102539062
    10. '_' → logprob: -17.626480102539062

Token 639: '17' (ID: 1422)
  Prédit: '17'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -3.173704271830502e-06
    2. '16' → logprob: -12.87500286102295
    3. ' ' → logprob: -15.12500286102295
    4. '7' → logprob: -15.87500286102295
    5. '=' → logprob: -16.500003814697266
    6. '1' → logprob: -18.250003814697266
    7. '

' → logprob: -18.875003814697266
    8. ''' → logprob: -19.250003814697266
    9. '
' → logprob: -19.625003814697266
    10. '"' → logprob: -19.875003814697266

Token 640: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001706247916445136
    2. 'or' → logprob: -6.376706123352051
    3. ' ' → logprob: -13.12670612335205
    4. '           ' → logprob: -13.62670612335205
    5. ':' → logprob: -14.75170612335205
    6. ' and' → logprob: -16.501707077026367
    7. '            ' → logprob: -16.876707077026367
    8. ':
' → logprob: -17.001707077026367
    9. '               ' → logprob: -17.001707077026367
    10. '       ' → logprob: -17.251707077026367

Token 641: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.706264078617096
    2. '               ' → logprob: -1.3312640190124512
    3. ' or' → logprob: -1.4562640190124512
    4. '
' → logprob: -4.831264019012451
    5. '       ' → logprob: -8.33126449584961
    6. '            
' → logprob: -8.45626449584961
    7. ':' → logprob: -8.95626449584961
    8. '            ' → logprob: -9.20626449584961
    9. '                
' → logprob: -9.45626449584961
    10. ' 
' → logprob: -9.70626449584961

Token 642: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16881462931632996
    2. ' self' → logprob: -2.0438146591186523
    3. 'card' → logprob: -4.043814659118652
    4. '               ' → logprob: -5.168814659118652
    5. ' card' → logprob: -6.043814659118652
    6. '   ' → logprob: -9.543814659118652
    7. '           ' → logprob: -9.918814659118652
    8. '                   ' → logprob: -10.043814659118652
    9. ' ' → logprob: -10.918814659118652
    10. '
' → logprob: -12.668814659118652

Token 643: '.hand' (ID: 64204)
  Prédit: '.hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hand' → logprob: -0.0014976027887314558
    2. '.' → logprob: -7.001497745513916
    3. '.add' → logprob: -8.376497268676758
    4. 'hand' → logprob: -9.001497268676758
    5. '.hit' → logprob: -9.126497268676758
    6. '.draw' → logprob: -9.501497268676758
    7. ' .' → logprob: -10.626497268676758
    8. '.play' → logprob: -11.251497268676758
    9. ' hand' → logprob: -11.876497268676758
    10. '.handle' → logprob: -13.376497268676758

Token 644: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0009228924172930419
    2. '.' → logprob: -7.000922679901123
    3. ' .' → logprob: -11.500923156738281
    4. '.append' → logprob: -14.625923156738281
    5. 'add' → logprob: -15.250923156738281
    6. '   ' → logprob: -15.625923156738281
    7. '.draw' → logprob: -15.750923156738281
    8. ').' → logprob: -16.62592315673828
    9. ' add' → logprob: -17.62592315673828
    10. '_add' → logprob: -17.62592315673828

Token 645: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.00016241880075540394
    2. '_' → logprob: -8.750162124633789
    3. '_c' → logprob: -13.750162124633789
    4. '_car' → logprob: -14.000162124633789
    5. 'Card' → logprob: -14.500162124633789
    6. '_C' → logprob: -15.125162124633789
    7. '(_' → logprob: -15.125162124633789
    8. '_CARD' → logprob: -15.375162124633789
    9. ' _' → logprob: -15.625162124633789
    10. '_code' → logprob: -15.750162124633789

Token 646: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0021319445222616196
    2. '(' → logprob: -6.252131938934326
    3. 'self' → logprob: -9.002132415771484
    4. ' (' → logprob: -9.877132415771484
    5. '(
' → logprob: -11.127132415771484
    6. ' self' → logprob: -11.252132415771484
    7. ' ' → logprob: -15.377132415771484
    8. '(this' → logprob: -15.502132415771484
    9. '(s' → logprob: -16.002132415771484
    10. '((' → logprob: -16.252132415771484

Token 647: '.draw' (ID: 11660)
  Prédit: '.draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.draw' → logprob: -0.03882063552737236
    2. '.' → logprob: -3.413820743560791
    3. 'raw' → logprob: -6.038820743560791
    4. ')' → logprob: -7.038820743560791
    5. ' .' → logprob: -7.038820743560791
    6. '.raw' → logprob: -8.038820266723633
    7. ').' → logprob: -8.163820266723633
    8. 'draw' → logprob: -8.538820266723633
    9. ',' → logprob: -10.038820266723633
    10. '.)' → logprob: -10.288820266723633

Token 648: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.664371848164592e-05
    2. '_' → logprob: -11.250016212463379
    3. '_card' → logprob: -12.750016212463379
    4. '_.' → logprob: -15.000016212463379
    5. '._' → logprob: -15.750016212463379
    6. '_
' → logprob: -17.625017166137695
    7. '().' → logprob: -17.625017166137695
    8. ')' → logprob: -17.875017166137695
    9. ' _' → logprob: -17.875017166137695
    10. '_

' → logprob: -18.250017166137695

Token 649: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -4.9186317482963204e-05
    2. '_' → logprob: -10.750049591064453
    3. '()' → logprob: -12.500049591064453
    4. '
' → logprob: -12.875049591064453
    5. ')' → logprob: -13.000049591064453
    6. '

' → logprob: -13.125049591064453
    7. 'i' → logprob: -13.375049591064453
    8. '>' → logprob: -13.875049591064453
    9. '   ' → logprob: -13.875049591064453
    10. '(' → logprob: -13.875049591064453

Token 650: '.draw' (ID: 11660)
  Prédit: '.draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.draw' → logprob: -0.000250491953920573
    2. '.' → logprob: -8.500250816345215
    3. '().' → logprob: -11.000250816345215
    4. 'draw' → logprob: -11.250250816345215
    5. ')' → logprob: -11.625250816345215
    6. ').' → logprob: -12.375250816345215
    7. ' .' → logprob: -12.500250816345215
    8. '(draw' → logprob: -15.250250816345215
    9. '.)' → logprob: -17.2502498626709
    10. ' draw' → logprob: -17.2502498626709

Token 651: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.577440083026886
    2. '())' → logprob: -0.827440083026886
    3. '()' → logprob: -6.70244026184082
    4. '())

' → logprob: -8.95244026184082
    5. '())
' → logprob: -9.32744026184082
    6. '()
' → logprob: -10.32744026184082
    7. ')' → logprob: -11.20244026184082
    8. '(' → logprob: -13.07744026184082
    9. ')
' → logprob: -13.07744026184082
    10. ' ())
' → logprob: -13.70244026184082

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002234236104413867
    2. 'elif' → logprob: -6.50223445892334
    3. ' elif' → logprob: -7.25223445892334
    4. '               ' → logprob: -11.00223445892334
    5. '       ' → logprob: -12.62723445892334
    6. '
' → logprob: -14.00223445892334
    7. '	elif' → logprob: -14.37723445892334
    8. '		' → logprob: -14.75223445892334
    9. '          ' → logprob: -15.25223445892334
    10. '   ' → logprob: -15.25223445892334

Token 653: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.03904467821121216
    2. ' elif' → logprob: -3.2890446186065674
    3. '           ' → logprob: -6.9140448570251465
    4. '       ' → logprob: -12.289044380187988
    5. '	elif' → logprob: -12.914044380187988
    6. 'else' → logprob: -14.039044380187988
    7. 'el' → logprob: -14.664044380187988
    8. '               ' → logprob: -15.289044380187988
    9. '   ' → logprob: -16.039045333862305
    10. ' else' → logprob: -16.164045333862305

Token 654: ' score' (ID: 8429)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21954932808876038
    2. ' self' → logprob: -1.844549298286438
    3. 'score' → logprob: -3.3445494174957275
    4. ' score' → logprob: -5.594549179077148
    5. ' ' → logprob: -11.469549179077148
    6. '(self' → logprob: -12.219549179077148
    7. '   ' → logprob: -12.469549179077148
    8. '	self' → logprob: -13.219549179077148
    9. '(score' → logprob: -13.719549179077148
    10. '	score' → logprob: -14.344549179077148

Token 655: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869377672672272
    2. ' ==' → logprob: -1.1369377374649048
    3. '=' → logprob: -10.136938095092773
    4. '<=' → logprob: -11.886938095092773
    5. ' ' → logprob: -12.011938095092773
    6. '()==' → logprob: -12.761938095092773
    7. ' <=' → logprob: -12.886938095092773
    8. '===' → logprob: -13.261938095092773
    9. '==
' → logprob: -13.386938095092773
    10. 's' → logprob: -13.636938095092773

Token 656: ' ' (ID: 220)
  Prédit: '17'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '7' → logprob: -18.125553131103516
    4. '１７' → logprob: -18.125553131103516
    5. '   ' → logprob: -18.375553131103516
    6. '  ' → logprob: -18.625553131103516
    7. '1' → logprob: -18.750553131103516
    8. ' seventeen' → logprob: -20.063053131103516
    9. 's' → logprob: -20.500553131103516
    10. '```' → logprob: -20.625553131103516

Token 657: '17' (ID: 1422)
  Prédit: '17'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '1' → logprob: -16.12509536743164
    4. '7' → logprob: -17.75009536743164
    5. '１７' → logprob: -18.00009536743164
    6. '   ' → logprob: -18.37509536743164
    7. '  ' → logprob: -19.37509536743164
    8. '017' → logprob: -19.93759536743164
    9. '१७' → logprob: -20.00009536743164
    10. '```' → logprob: -20.50009536743164

Token 658: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06997022777795792
    2. 'and' → logprob: -2.69497013092041
    3. ' ' → logprob: -10.81997013092041
    4. '   ' → logprob: -12.56997013092041
    5. '           ' → logprob: -12.69497013092041
    6. '	and' → logprob: -13.31997013092041
    7. '       ' → logprob: -13.44497013092041
    8. ':
' → logprob: -13.44497013092041
    9. ':' → logprob: -14.19497013092041
    10. '    ' → logprob: -14.19497013092041

Token 659: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22542013227939606
    2. ' self' → logprob: -1.6004201173782349
    3. '(self' → logprob: -12.350419998168945
    4. '	self' → logprob: -13.725419998168945
    5. ' ' → logprob: -14.725419998168945
    6. 'elf' → logprob: -15.225419998168945
    7. 'Self' → logprob: -15.475419998168945
    8. ' (' → logprob: -15.600419998168945
    9. 's' → logprob: -15.725419998168945
    10. '   ' → logprob: -15.975419998168945

Token 660: '.hand' (ID: 64204)
  Prédit: '.hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hand' → logprob: -0.0015275981277227402
    2. '.soft' → logprob: -6.501527786254883
    3. 'hand' → logprob: -10.626527786254883
    4. 'soft' → logprob: -14.626527786254883
    5. '.s' → logprob: -16.126527786254883
    6. '.softmax' → logprob: -16.251527786254883
    7. '.' → logprob: -16.501527786254883
    8. ' .' → logprob: -16.751527786254883
    9. 'and' → logprob: -16.876527786254883
    10. ' hand' → logprob: -17.126527786254883

Token 661: '.soft' (ID: 96180)
  Prédit: '.soft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.soft' → logprob: -0.00016635251813568175
    2. '.softmax' → logprob: -8.750165939331055
    3. ' .' → logprob: -12.750165939331055
    4. '.' → logprob: -13.125165939331055
    5. '.so' → logprob: -13.375165939331055
    6. 'soft' → logprob: -13.875165939331055
    7. '.smart' → logprob: -15.625165939331055
    8. '.s' → logprob: -15.875165939331055
    9. '_soft' → logprob: -17.750165939331055
    10. '.is' → logprob: -17.750165939331055

Token 662: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.339278580620885e-06
    2. '17' → logprob: -13.000001907348633
    3. '‌' → logprob: -17.625001907348633
    4. ' ' → logprob: -18.625001907348633
    5. ' _' → logprob: -18.750001907348633
    6. '_
' → logprob: -19.625001907348633
    7. '```' → logprob: -19.625001907348633
    8. '7' → logprob: -20.500001907348633
    9. '18' → logprob: -21.375001907348633
    10. '\' → logprob: -21.375001907348633

Token 663: '17' (ID: 1422)
  Prédit: '17'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '17' → logprob: -1.0564331205387134e-05
    2. '7' → logprob: -11.87501049041748
    3. '_' → logprob: -12.75001049041748
    4. ' ' → logprob: -14.37501049041748
    5. '```' → logprob: -18.375011444091797
    6. '1' → logprob: -19.250011444091797
    7. '１７' → logprob: -19.750011444091797
    8. '' → logprob: -20.125011444091797
    9. '   ' → logprob: -20.125011444091797
    10. 'soft' → logprob: -20.500011444091797

Token 664: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04896180331707001
    2. '():
' → logprob: -3.048961877822876
    3. '()' → logprob: -7.923961639404297
    4. ' ():' → logprob: -12.048961639404297
    5. '():
' → logprob: -12.298961639404297
    6. '():

' → logprob: -14.423961639404297
    7. '()==' → logprob: -14.548961639404297
    8. '()>' → logprob: -14.673961639404297
    9. '()):
' → logprob: -15.173961639404297
    10. '()
' → logprob: -16.423961639404297

Token 665: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0956181138753891
    2. ':
' → logprob: -2.9706180095672607
    3. '           ' → logprob: -3.7206180095672607
    4. ':' → logprob: -4.22061824798584
    5. '):
' → logprob: -8.59561824798584
    6. 'self' → logprob: -8.72061824798584
    7. '       ' → logprob: -8.72061824798584
    8. '   ' → logprob: -8.97061824798584
    9. ',' → logprob: -9.97061824798584
    10. ' self' → logprob: -9.97061824798584

Token 666: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019700912758708
    2. ' self' → logprob: -4.01970100402832
    3. '               ' → logprob: -6.76970100402832
    4. '           ' → logprob: -7.89470100402832
    5. '   ' → logprob: -11.14470100402832
    6. '	self' → logprob: -11.39470100402832
    7. '                   ' → logprob: -13.51970100402832
    8. '       ' → logprob: -14.39470100402832
    9. ' ' → logprob: -14.76970100402832
    10. '(self' → logprob: -15.51970100402832

Token 667: '.hand' (ID: 64204)
  Prédit: '.hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hand' → logprob: -0.0017090904293581843
    2. 'hand' → logprob: -6.376708984375
    3. 'and' → logprob: -12.501708984375
    4. ' hand' → logprob: -13.251708984375
    5. '_hand' → logprob: -14.126708984375
    6. '.' → logprob: -15.876708984375
    7. '(hand' → logprob: -16.501708984375
    8. '-hand' → logprob: -16.751708984375
    9. 'Hand' → logprob: -16.751708984375
    10. '   ' → logprob: -17.001708984375

Token 668: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00018685187387745827
    2. '.' → logprob: -8.625186920166016
    3. ' .' → logprob: -11.875186920166016
    4. 'add' → logprob: -15.750186920166016
    5. ').' → logprob: -16.625186920166016
    6. '.play' → logprob: -17.375186920166016
    7. '.remove' → logprob: -17.875186920166016
    8. '.append' → logprob: -18.875186920166016
    9. '].' → logprob: -18.875186920166016
    10. ':add' → logprob: -19.000186920166016

Token 669: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -8.895480277715251e-06
    2. 'card' → logprob: -11.875008583068848
    3. '_' → logprob: -13.625008583068848
    4. '_code' → logprob: -15.125008583068848
    5. 'Card' → logprob: -15.875008583068848
    6. ' card' → logprob: -16.250009536743164
    7. '_CARD' → logprob: -16.750009536743164
    8. '_token' → logprob: -17.625009536743164
    9. '_cards' → logprob: -17.750009536743164
    10. '_c' → logprob: -17.750009536743164

Token 670: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007130279554985464
    2. '(' → logprob: -7.250712871551514
    3. '(this' → logprob: -13.500713348388672
    4. ' (' → logprob: -13.875713348388672
    5. '(
' → logprob: -15.375713348388672
    6. 'self' → logprob: -15.875713348388672
    7. '()' → logprob: -16.125713348388672
    8. '(s' → logprob: -16.500713348388672
    9. '(the' → logprob: -18.375713348388672
    10. '(sel' → logprob: -18.500713348388672

Token 671: '.draw' (ID: 11660)
  Prédit: '.draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.draw' → logprob: -3.881560041918419e-05
    2. 'draw' → logprob: -10.250039100646973
    3. '.' → logprob: -12.875039100646973
    4. 'self' → logprob: -15.125039100646973
    5. ' .' → logprob: -15.125039100646973
    6. ' draw' → logprob: -16.625038146972656
    7. '(draw' → logprob: -16.750038146972656
    8. '_draw' → logprob: -17.125038146972656
    9. ').' → logprob: -17.375038146972656
    10. '	draw' → logprob: -17.375038146972656

Token 672: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.002479581395164132
    2. '_card' → logprob: -6.002479553222656
    3. 'Card' → logprob: -14.127479553222656
    4. 'card' → logprob: -14.252479553222656
    5. 'Pile' → logprob: -14.627479553222656
    6. '_' → logprob: -14.752479553222656
    7. 'pile' → logprob: -15.627479553222656
    8. '_c' → logprob: -15.752479553222656
    9. '_cards' → logprob: -15.752479553222656
    10. '   ' → logprob: -16.002479553222656

Token 673: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.0023563832510262728
    2. '_p' → logprob: -6.12735652923584
    3. 'pile' → logprob: -9.25235652923584
    4. '   ' → logprob: -11.62735652923584
    5. 'e' → logprob: -11.87735652923584
    6. '_' → logprob: -11.87735652923584
    7. '_card' → logprob: -11.87735652923584
    8. 'il' → logprob: -12.12735652923584
    9. 'ule' → logprob: -12.50235652923584
    10. 'le' → logprob: -12.62735652923584

Token 674: '.draw' (ID: 11660)
  Prédit: '.draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.draw' → logprob: -0.00020985817536711693
    2. '.' → logprob: -8.87520980834961
    3. '().' → logprob: -9.62520980834961
    4. ').' → logprob: -13.50020980834961
    5. 'draw' → logprob: -13.75020980834961
    6. ' .' → logprob: -13.75020980834961
    7. '(draw' → logprob: -15.37520980834961
    8. ')' → logprob: -16.87520980834961
    9. '	draw' → logprob: -17.87520980834961
    10. '()' → logprob: -18.12520980834961

Token 675: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.3875565826892853
    2. '())' → logprob: -1.137556552886963
    3. '()' → logprob: -7.387556552886963
    4. '()
' → logprob: -10.137557029724121
    5. '())
' → logprob: -11.262557029724121
    6. '())

' → logprob: -11.512557029724121
    7. ')' → logprob: -13.262557029724121
    8. ')
' → logprob: -13.887557029724121
    9. ' ())
' → logprob: -14.512557029724121
    10. '(' → logprob: -14.887557029724121

Token 676: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09790157526731491
    2. 'else' → logprob: -2.4729015827178955
    3. ' else' → logprob: -4.722901344299316
    4. 'elif' → logprob: -10.722901344299316
    5. '	else' → logprob: -12.597901344299316
    6. '_else' → logprob: -13.597901344299316
    7. ' elif' → logprob: -13.847901344299316
    8. '            
' → logprob: -14.222901344299316
    9. '		' → logprob: -14.347901344299316
    10. '       ' → logprob: -14.347901344299316

Token 677: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.35204017162323
    2. '           ' → logprob: -1.60204017162323
    3. ' else' → logprob: -2.3520402908325195
    4. 'elif' → logprob: -9.85204029083252
    5. '       ' → logprob: -10.97704029083252
    6. '	else' → logprob: -11.85204029083252
    7. ' elif' → logprob: -12.60204029083252
    8. '_else' → logprob: -12.85204029083252
    9. '   ' → logprob: -13.22704029083252
    10. '               ' → logprob: -13.85204029083252

Token 678: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47531530261039734
    2. '               ' → logprob: -1.6003153324127197
    3. ':
' → logprob: -1.8503153324127197
    4. '           ' → logprob: -3.9753153324127197
    5. ':return' → logprob: -8.97531509399414
    6. '              ' → logprob: -9.47531509399414
    7. 'break' → logprob: -9.72531509399414
    8. ' break' → logprob: -9.97531509399414
    9. '       ' → logprob: -10.47531509399414
    10. '          ' → logprob: -10.72531509399414

Token 679: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00043710620957426727
    2. 'break' → logprob: -8.125436782836914
    3. ' break' → logprob: -9.375436782836914
    4. '           ' → logprob: -9.875436782836914
    5. '	break' → logprob: -13.375436782836914
    6. '	           ' → logprob: -13.375436782836914
    7. '   ' → logprob: -14.500436782836914
    8. '                   ' → logprob: -15.375436782836914
    9. '              ' → logprob: -15.500436782836914
    10. '       ' → logprob: -15.500436782836914

Token 680: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20660419762134552
    2. ' break' → logprob: -1.706604242324829
    3. '           ' → logprob: -5.45660400390625
    4. '               ' → logprob: -7.08160400390625
    5. '       ' → logprob: -10.58160400390625
    6. '	break' → logprob: -10.58160400390625
    7. 'return' → logprob: -11.08160400390625
    8. '   ' → logprob: -13.58160400390625
    9. ' return' → logprob: -14.70660400390625
    10. ' ' → logprob: -14.83160400390625

Token 681: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08881567418575287
    2. '
' → logprob: -2.588815689086914
    3. '<|end|>' → logprob: -4.713815689086914
    4. '        
' → logprob: -7.588815689086914
    5. 'return' → logprob: -9.463815689086914
    6. ' return' → logprob: -9.463815689086914
    7. '   ' → logprob: -9.588815689086914
    8. '  
' → logprob: -10.088815689086914
    9. '    
' → logprob: -10.213815689086914
    10. '<|end|>' → logprob: -10.963815689086914

Token 682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023599520791321993
    2. 'return' → logprob: -6.252359867095947
    3. '   ' → logprob: -8.127360343933105
    4. ' return' → logprob: -9.252360343933105
    5. '<|end|>' → logprob: -10.627360343933105
    6. '
' → logprob: -12.127360343933105
    7. '```' → logprob: -13.002360343933105
    8. '      ' → logprob: -13.377360343933105
    9. '        
' → logprob: -13.502360343933105
    10. '           ' → logprob: -14.002360343933105

Token 683: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0009140860638581216
    2. '       ' → logprob: -7.250914096832275
    3. ' return' → logprob: -8.500913619995117
    4. '   ' → logprob: -14.625913619995117
    5. 'score' → logprob: -15.375913619995117
    6. 'if' (adapté à ' if') → logprob: -16.125913619995117
    7. '	return' → logprob: -18.125913619995117
    8. '```' → logprob: -18.750913619995117
    9. 'eturn' → logprob: -18.875913619995117
    10. ' ' → logprob: -19.250913619995117

Token 684: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5231268405914307
    2. 'self' → logprob: -0.8981268405914307
    3. ' ' → logprob: -13.398126602172852
    4. 'score' → logprob: -14.148126602172852
    5. '	self' → logprob: -15.023126602172852
    6. '(self' → logprob: -15.398126602172852
    7. 'sel' → logprob: -16.77312660217285
    8. 'Self' → logprob: -16.89812660217285
    9. ' not' → logprob: -16.96062660217285
    10. 'elf' → logprob: -17.02312660217285

Token 685: '.hand' (ID: 64204)
  Prédit: '.hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hand' → logprob: -0.0001450187264708802
    2. '.is' → logprob: -8.875144958496094
    3. 'hand' → logprob: -12.500144958496094
    4. '.' → logprob: -13.625144958496094
    5. '(hand' → logprob: -17.250144958496094
    6. ' .' → logprob: -17.375144958496094
    7. '_hand' → logprob: -17.875144958496094
    8. 'is' → logprob: -18.000144958496094
    9. '.Hand' → logprob: -18.125144958496094
    10. ' hand' → logprob: -18.375144958496094

Token 686: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00020663968462031335
    2. '.values' → logprob: -8.62520694732666
    3. '.' → logprob: -10.87520694732666
    4. 'values' → logprob: -12.50020694732666
    5. 'is' → logprob: -12.50020694732666
    6. '.value' → logprob: -14.75020694732666
    7. ' .' → logprob: -15.75020694732666
    8. '._' → logprob: -18.000205993652344
    9. '.Is' → logprob: -18.375205993652344
    10. '().' → logprob: -18.500205993652344

Token 687: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.320199877838604e-07
    2. '_black' → logprob: -15.625
    3. 'b' → logprob: -15.875
    4. '_' → logprob: -16.625
    5. ' bust' → logprob: -18.875
    6. 'Bust' → logprob: -21.75
    7. '__' → logprob: -23.25
    8. '_a' → logprob: -24.5
    9. '_B' → logprob: -24.625
    10. '\' → logprob: -24.875

Token 688: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: 0.0
    2. '>' → logprob: -18.125
    3. 'urst' → logprob: -19.125
    4. 'уст' → logprob: -19.375
    5. 'usted' → logprob: -19.375
    6. '
' → logprob: -19.875
    7. 'b' → logprob: -19.875
    8. 'us' → logprob: -20.5
    9. 'u' → logprob: -20.625
    10. '   ' → logprob: -20.875

Token 689: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007679368136450648
    2. '():
' → logprob: -7.750767707824707
    3. '()' → logprob: -8.000767707824707
    4. ' ():' → logprob: -13.875767707824707
    5. '()>' → logprob: -15.000767707824707
    6. '():

' → logprob: -15.125767707824707
    7. '():
' → logprob: -15.125767707824707
    8. '()==' → logprob: -16.250768661499023
    9. '(' → logprob: -17.375768661499023
    10. '()">' → logprob: -18.000768661499023

Token 690: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.33117586374282837
    2. '       ' → logprob: -2.0811758041381836
    3. '           ' → logprob: -2.2061758041381836
    4. 'return' → logprob: -3.0811758041381836
    5. '   ' → logprob: -7.331175804138184
    6. '	return' → logprob: -8.956175804138184
    7. '"' → logprob: -9.081175804138184
    8. ':return' → logprob: -9.331175804138184
    9. ' ' → logprob: -9.706175804138184
    10. ':' → logprob: -11.206175804138184

Token 691: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25913476943969727
    2. 'return' (adapté à ' return') → logprob: -1.5091347694396973
    3. '       ' → logprob: -5.009134769439697
    4. '   ' → logprob: -8.634134292602539
    5. '           ' → logprob: -8.759134292602539
    6. '	return' → logprob: -8.759134292602539
    7. ' ' → logprob: -11.884134292602539
    8. ':return' → logprob: -13.509134292602539
    9. '{return' → logprob: -14.759134292602539
    10. 'eturn' → logprob: -14.884134292602539

Token 692: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0802738870552275e-05
    2. ''b' → logprob: -11.87501049041748
    3. ''' → logprob: -13.50001049041748
    4. ' "' → logprob: -13.62501049041748
    5. 'b' → logprob: -14.50001049041748
    6. '"B' → logprob: -15.25001049041748
    7. '"go' → logprob: -16.000011444091797
    8. '"user' → logprob: -16.125011444091797
    9. '"h' → logprob: -16.625011444091797
    10. '
' → logprob: -16.750011444091797

Token 693: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00010568885772954673
    2. '"' → logprob: -9.875105857849121
    3. 'burst' → logprob: -10.000105857849121
    4. 'dealer' → logprob: -12.250105857849121
    5. 'lose' → logprob: -13.500105857849121
    6. ''b' → logprob: -13.875105857849121
    7. 'loss' → logprob: -14.375105857849121
    8. 'bur' → logprob: -14.625105857849121
    9. 'lost' → logprob: -15.625105857849121
    10. 'buster' → logprob: -16.000104904174805

Token 694: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -8.180258191714529e-06
    2. 'urst' → logprob: -12.250008583068848
    3. 'usted' → logprob: -12.875008583068848
    4. 'u' → logprob: -15.375008583068848
    5. '
' → logprob: -15.875008583068848
    6. 'us' → logprob: -16.87500762939453
    7. 'usting' → logprob: -17.00000762939453
    8. 'UST' → logprob: -17.37500762939453
    9. 'ush' → logprob: -17.87500762939453
    10. 'rust' → logprob: -18.00000762939453

Token 695: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009545107372105122
    2. '
' → logprob: -5.00954532623291
    3. 'return' → logprob: -6.50954532623291
    4. '"' → logprob: -7.50954532623291
    5. '<|end|>' → logprob: -7.63454532623291
    6. '        
' → logprob: -9.13454532623291
    7. ' return' → logprob: -9.63454532623291
    8. 'else' → logprob: -10.63454532623291
    9. '  
' → logprob: -10.75954532623291
    10. '    
' → logprob: -11.63454532623291

Token 696: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05682806298136711
    2. '       ' → logprob: -3.056828022003174
    3. ' return' → logprob: -4.931828022003174
    4. 'else' → logprob: -7.056828022003174
    5. '   ' → logprob: -9.806828498840332
    6. '"' → logprob: -10.181828498840332
    7. 'elif' → logprob: -11.806828498840332
    8. '{return' → logprob: -11.931828498840332
    9. ' else' → logprob: -12.181828498840332
    10. 'eturn' → logprob: -12.431828498840332

Token 697: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02119871787726879
    2. '       ' → logprob: -3.8961987495422363
    3. ' return' → logprob: -7.646198749542236
    4. 'else' (adapté à ' else') → logprob: -8.771198272705078
    5. '   ' → logprob: -10.896198272705078
    6. 'elif' → logprob: -13.271198272705078
    7. ' ' → logprob: -14.021198272705078
    8. 'eturn' → logprob: -14.646198272705078
    9. '	return' → logprob: -14.771198272705078
    10. '{return' → logprob: -14.771198272705078

Token 698: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15936538577079773
    2. ':' → logprob: -2.03436541557312
    3. '   ' → logprob: -5.534365177154541
    4. '           ' → logprob: -5.534365177154541
    5. '       ' → logprob: -5.784365177154541
    6. ':return' → logprob: -6.159365177154541
    7. ' return' → logprob: -6.409365177154541
    8. 'return' → logprob: -6.409365177154541
    9. ' :
' → logprob: -9.2843656539917
    10. '          ' → logprob: -11.5343656539917

Token 699: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4797651767730713
    2. ' return' → logprob: -0.9797651767730713
    3. '"' → logprob: -5.729764938354492
    4. '   ' → logprob: -6.229764938354492
    5. '       ' → logprob: -8.104764938354492
    6. '           ' → logprob: -9.229764938354492
    7. ' ' → logprob: -11.229764938354492
    8. ' "' → logprob: -11.354764938354492
    9. ''' → logprob: -11.729764938354492
    10. 'self' → logprob: -12.229764938354492

Token 700: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04071492701768875
    2. ' return' → logprob: -3.290714979171753
    3. 'self' → logprob: -6.540714740753174
    4. '"' → logprob: -7.665714740753174
    5. 'str' → logprob: -8.040715217590332
    6. 'score' → logprob: -8.040715217590332
    7. ' self' → logprob: -9.665715217590332
    8. ' str' → logprob: -10.415715217590332
    9. '   ' → logprob: -11.915715217590332
    10. ' score' → logprob: -12.290715217590332

Token 701: ' str' (ID: 989)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.26167213916778564
    2. 'score' → logprob: -1.7616721391677856
    3. 'str' → logprob: -3.511672019958496
    4. 'self' → logprob: -4.011672019958496
    5. ' score' → logprob: -5.636672019958496
    6. ' "' → logprob: -5.761672019958496
    7. ' str' → logprob: -6.011672019958496
    8. ' self' → logprob: -6.761672019958496
    9. '(score' → logprob: -9.886672019958496
    10. '"value' → logprob: -9.886672019958496

Token 702: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0052377874962985516
    2. '(score' → logprob: -5.255237579345703
    3. 'self' → logprob: -13.255237579345703
    4. '(' → logprob: -13.880237579345703
    5. 'ing' → logprob: -14.505237579345703
    6. '(len' → logprob: -15.505237579345703
    7. 'score' → logprob: -15.630237579345703
    8. '(s' → logprob: -16.380237579345703
    9. 'elf' → logprob: -16.630237579345703
    10. '(scores' → logprob: -17.255237579345703

Token 703: '.hand' (ID: 64204)
  Prédit: '.hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hand' → logprob: -1.700132997939363e-05
    2. 'hand' → logprob: -11.000017166137695
    3. '(hand' → logprob: -16.625017166137695
    4. ' hand' → logprob: -16.875017166137695
    5. '.head' → logprob: -16.875017166137695
    6. '.' → logprob: -17.250017166137695
    7. ' .' → logprob: -18.000017166137695
    8. ').' → logprob: -18.375017166137695
    9. '_hand' → logprob: -19.250017166137695
    10. '.he' → logprob: -19.375017166137695

Token 704: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.875005722045898
    3. 'values' → logprob: -13.500005722045898
    4. '().' → logprob: -14.000005722045898
    5. '.value' → logprob: -14.875005722045898
    6. ' .' → logprob: -14.875005722045898
    7. '(values' → logprob: -15.125005722045898
    8. ').' → logprob: -15.375005722045898
    9. ')' → logprob: -17.6250057220459
    10. '	values' → logprob: -19.1250057220459

Token 705: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -8.304016228066757e-05
    2. '()' → logprob: -9.500082969665527
    3. '())
' → logprob: -12.500082969665527
    4. ')' → logprob: -12.875082969665527
    5. ' ())' → logprob: -13.250082969665527
    6. '())

' → logprob: -17.125083923339844
    7. '()))' → logprob: -17.250083923339844
    8. '()
' → logprob: -17.750083923339844
    9. '(' → logprob: -18.375083923339844
    10. '()).' → logprob: -18.625083923339844

Token 706: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.009261442348361015
    2. '<|end|>' → logprob: -5.509261608123779
    3. '.' → logprob: -6.134261608123779
    4. 'd' → logprob: -7.134261608123779
    5. 'def' → logprob: -7.509261608123779
    6. ')' → logprob: -8.134261131286621
    7. '```' → logprob: -8.384261131286621
    8. ' ' → logprob: -8.384261131286621
    9. 'n' → logprob: -8.884261131286621
    10. '[' → logprob: -8.884261131286621

Token 707: ' Blackjack' (ID: 65292)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.16420407593250275
    2. ' Player' → logprob: -2.2892041206359863
    3. 'Game' → logprob: -3.6642041206359863
    4. 'Black' → logprob: -4.289204120635986
    5. 'Dealer' → logprob: -5.664204120635986
    6. ' Game' → logprob: -6.039204120635986
    7. ' Blackjack' → logprob: -6.414204120635986
    8. ' Black' → logprob: -6.789204120635986
    9. 'Test' → logprob: -7.289204120635986
    10. ' Dealer' → logprob: -7.789204120635986

Token 708: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.2373073697090149
    2. 'Simulator' → logprob: -1.9873073101043701
    3. ':' → logprob: -3.36230731010437
    4. 'Dealer' → logprob: -3.86230731010437
    5. 'Player' → logprob: -4.362307548522949
    6. '():' → logprob: -6.487307548522949
    7. 'Strategy' → logprob: -7.112307548522949
    8. 'Solver' → logprob: -7.112307548522949
    9. 'Simulation' → logprob: -7.362307548522949
    10. '(Game' → logprob: -7.862307548522949

Token 709: 'Simulator' (ID: 120745)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -7.219262624857947e-05
    2. ':
' → logprob: -10.000072479248047
    3. ' :' → logprob: -11.500072479248047
    4. '(' → logprob: -12.000072479248047
    5. '():' → logprob: -12.250072479248047
    6. ':def' → logprob: -12.625072479248047
    7. '(object' → logprob: -14.250072479248047
    8. '):' → logprob: -14.625072479248047
    9. ':**' → logprob: -15.250072479248047
    10. ':

' → logprob: -15.250072479248047

Token 710: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006054567056708038
    2. ':
' → logprob: -8.000605583190918
    3. ' :' → logprob: -8.500605583190918
    4. ':def' → logprob: -10.125605583190918
    5. '(' → logprob: -11.000605583190918
    6. '<|end|>' → logprob: -12.750605583190918
    7. '():' → logprob: -13.500605583190918
    8. '   ' → logprob: -13.875605583190918
    9. '(object' → logprob: -14.125605583190918
    10. ':

' → logprob: -14.375605583190918

Token 711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0047508650459349155
    2. ' def' → logprob: -5.379750728607178
    3. 'def' → logprob: -9.629751205444336
    4. '<|end|>' → logprob: -10.129751205444336
    5. ':' → logprob: -12.004751205444336
    6. '	def' → logprob: -12.254751205444336
    7. '<|end|>' → logprob: -12.504751205444336
    8. '    
' → logprob: -13.129751205444336
    9. '(' → logprob: -13.504751205444336
    10. '    ' → logprob: -13.754751205444336

Token 712: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.16102063655853271
    2. 'def' (adapté à ' def') → logprob: -1.9110206365585327
    3. '   ' → logprob: -7.161020755767822
    4. ' __' → logprob: -11.286020278930664
    5. '__' → logprob: -12.411020278930664
    6. 'class' → logprob: -13.536020278930664
    7. ' ' → logprob: -14.786020278930664
    8. '```' → logprob: -14.786020278930664
    9. ' de' → logprob: -14.911020278930664
    10. 'de' → logprob: -15.036020278930664

Token 713: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06887809187173843
    2. '__' → logprob: -3.068878173828125
    3. ' def' → logprob: -4.568878173828125
    4. 'init' → logprob: -4.943878173828125
    5. 'def' → logprob: -6.193878173828125
    6. ' init' → logprob: -8.318878173828125
    7. '_init' → logprob: -8.443878173828125
    8. ' ' → logprob: -9.818878173828125
    9. '___' → logprob: -11.318878173828125
    10. ' _' → logprob: -12.318878173828125

Token 714: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00012535012501757592
    2. 'it' → logprob: -9.37512493133545
    3. 'def' → logprob: -10.75012493133545
    4. '_init' → logprob: -11.62512493133545
    5. ' init' → logprob: -12.87512493133545
    6. '__' → logprob: -13.12512493133545
    7. '(init' → logprob: -13.12512493133545
    8. '```' → logprob: -13.62512493133545
    9. 'int' → logprob: -14.37512493133545
    10. 'in' → logprob: -15.37512493133545

Token 715: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0022116350010037422
    2. '__' → logprob: -6.252211570739746
    3. '(' → logprob: -9.002211570739746
    4. '(self' → logprob: -9.377211570739746
    5. '__(
' → logprob: -9.752211570739746
    6. '_(' → logprob: -11.877211570739746
    7. '__((' → logprob: -12.252211570739746
    8. '_' → logprob: -13.127211570739746
    9. ' (' → logprob: -13.252211570739746
    10. '__('' → logprob: -14.627211570739746

Token 716: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003444024478085339
    2. ' self' → logprob: -8.000344276428223
    3. ',' → logprob: -12.500344276428223
    4. '(self' → logprob: -13.000344276428223
    5. '   ' → logprob: -14.000344276428223
    6. ')' → logprob: -14.125344276428223
    7. '
' → logprob: -14.125344276428223
    8. '       ' → logprob: -15.750344276428223
    9. ',self' → logprob: -15.750344276428223
    10. ' ' → logprob: -17.00034523010254

Token 717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026580586563795805
    2. 'self' → logprob: -6.502657890319824
    3. '(self' → logprob: -6.877657890319824
    4. ',self' → logprob: -9.502657890319824
    5. ')' → logprob: -11.002657890319824
    6. '   ' → logprob: -11.502657890319824
    7. ' (' → logprob: -12.252657890319824
    8. ',
' → logprob: -12.252657890319824
    9. ' ,' → logprob: -12.627657890319824
    10. '(' → logprob: -12.627657890319824

Token 718: ' test' (ID: 1746)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.36127400398254395
    2. ' initial' → logprob: -1.236274003982544
    3. 'dealer' → logprob: -5.486273765563965
    4. 'self' → logprob: -5.861273765563965
    5. 'player' → logprob: -6.111273765563965
    6. ' dealer' → logprob: -6.486273765563965
    7. '   ' → logprob: -7.236273765563965
    8. ' player' → logprob: -7.611273765563965
    9. ' self' → logprob: -7.986273765563965
    10. ')' → logprob: -8.736273765563965

Token 719: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -0.14492686092853546
    2. 's' → logprob: -3.0199267864227295
    3. '_inputs' → logprob: -3.3949267864227295
    4. '_cards' → logprob: -3.7699267864227295
    5. '_s' → logprob: -5.019927024841309
    6. '   ' → logprob: -5.144927024841309
    7. '_de' → logprob: -5.519927024841309
    8. '_input' → logprob: -6.019927024841309
    9. '_data' → logprob: -6.269927024841309
    10. '_results' → logprob: -6.394927024841309

Token 720: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07479552179574966
    2. ',' → logprob: -2.8247954845428467
    3. '):
' → logprob: -4.449795722961426
    4. ':' → logprob: -8.199795722961426
    5. '=[]' → logprob: -8.824795722961426
    6. '=' → logprob: -8.949795722961426
    7. '=None' → logprob: -9.199795722961426
    8. '   ' → logprob: -9.449795722961426
    9. ')' → logprob: -9.824795722961426
    10. ' ):' → logprob: -9.949795722961426

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010390079842181876
    2. '   ' → logprob: -10.000103950500488
    3. ',' → logprob: -10.875103950500488
    4. 'self' → logprob: -11.375103950500488
    5. ' self' → logprob: -11.375103950500488
    6. '<|end|>' → logprob: -12.250103950500488
    7. ':' → logprob: -12.875103950500488
    8. '      ' → logprob: -12.875103950500488
    9. '(self' → logprob: -13.250103950500488
    10. '           ' → logprob: -14.375103950500488

Token 722: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4412212669849396
    2. 'self' → logprob: -1.1912212371826172
    3. ' self' → logprob: -2.941221237182617
    4. '   ' → logprob: -9.691221237182617
    5. '	self' → logprob: -10.441221237182617
    6. '	' → logprob: -12.191221237182617
    7. ' ' → logprob: -13.566221237182617
    8. ' ' → logprob: -14.816221237182617
    9. '	   ' → logprob: -15.316221237182617
    10. '(self' → logprob: -16.566221237182617

Token 723: ' test' (ID: 1746)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00021295747137628496
    2. '       ' → logprob: -8.500212669372559
    3. ' self' → logprob: -11.750212669372559
    4. '   ' → logprob: -13.375212669372559
    5. '
' → logprob: -17.375213623046875
    6. '```' → logprob: -18.250213623046875
    7. '#' → logprob: -18.375213623046875
    8. '	self' → logprob: -19.125213623046875
    9. '     ' → logprob: -20.000213623046875
    10. '        
' → logprob: -20.125213623046875

Token 724: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -0.02794012799859047
    2. '       ' → logprob: -4.152940273284912
    3. '   ' → logprob: -5.152940273284912
    4. 'cases' → logprob: -6.027940273284912
    5. 's' → logprob: -6.402940273284912
    6. '_' → logprob: -6.652940273284912
    7. ' _' → logprob: -8.902939796447754
    8. ' cases' → logprob: -9.027939796447754
    9. '_s' → logprob: -9.277939796447754
    10. '	' → logprob: -9.527939796447754

Token 725: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09115739166736603
    2. '=' → logprob: -2.4661574363708496
    3. ':' → logprob: -6.71615743637085
    4. '       ' → logprob: -7.71615743637085
    5. '   ' → logprob: -8.591156959533691
    6. '=[]' → logprob: -8.591156959533691
    7. '<|end|>' → logprob: -9.966156959533691
    8. ' is' → logprob: -10.091156959533691
    9. ',' → logprob: -11.341156959533691
    10. '=[]
' → logprob: -11.716156959533691

Token 726: ' list' (ID: 1562)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.900020182132721
    2. ' list' → logprob: -1.1500201225280762
    3. 'test' → logprob: -1.9000201225280762
    4. 'list' → logprob: -2.275020122528076
    5. 'List' → logprob: -4.775020122528076
    6. '[test' → logprob: -4.900020122528076
    7. ' List' → logprob: -5.650020122528076
    8. '[' → logprob: -5.775020122528076
    9. '[
' → logprob: -7.400020122528076
    10. ' [' → logprob: -7.400020122528076

Token 727: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.053917791694402695
    2. '[' → logprob: -3.30391788482666
    3. '   ' → logprob: -4.42891788482666
    4. ' =' → logprob: -6.67891788482666
    5. '       ' → logprob: -7.30391788482666
    6. '[
' → logprob: -7.55391788482666
    7. 'of' → logprob: -8.05391788482666
    8. '[List' → logprob: -8.42891788482666
    9. '=' → logprob: -8.55391788482666
    10. '<|end|>' → logprob: -8.67891788482666

Token 728: ' tuples' (ID: 112464)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.4516681432723999
    2. 'list' → logprob: -1.4516681432724
    3. 'tuple' → logprob: -2.2016682624816895
    4. '{' → logprob: -5.9516682624816895
    5. '(tuple' → logprob: -6.0766682624816895
    6. 'lists' → logprob: -6.2016682624816895
    7. '(dict' → logprob: -6.3266682624816895
    8. '(str' → logprob: -6.3266682624816895
    9. '(' → logprob: -6.4516682624816895
    10. '{
' → logprob: -6.5766682624816895

Token 729: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4129965901374817
    2. '       ' → logprob: -1.412996530532837
    3. ',' → logprob: -2.662996530532837
    4. '(' → logprob: -4.037996768951416
    5. '(self' → logprob: -5.287996768951416
    6. ' of' → logprob: -6.912996768951416
    7. '           ' → logprob: -7.662996768951416
    8. ' ,' → logprob: -8.537996292114258
    9. ' =' → logprob: -8.662996292114258
    10. '(player' → logprob: -9.162996292114258

Token 730: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.027173688635230064
    2. ' initial' → logprob: -3.6521737575531006
    3. '(initial' → logprob: -7.1521735191345215
    4. '   ' → logprob: -10.65217399597168
    5. 'list' → logprob: -10.65217399597168
    6. ' (' → logprob: -11.52717399597168
    7. 'player' → logprob: -12.15217399597168
    8. ')' → logprob: -12.65217399597168
    9. '	initial' → logprob: -12.65217399597168
    10. '[' → logprob: -12.90217399597168

Token 731: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0006608496769331396
    2. '_de' → logprob: -8.75066089630127
    3. '_hand' → logprob: -8.75066089630127
    4. ',' → logprob: -9.12566089630127
    5. '   ' → logprob: -9.75066089630127
    6. 'cards' → logprob: -9.87566089630127
    7. '_' → logprob: -10.50066089630127
    8. '_,' → logprob: -10.75066089630127
    9. '_initial' → logprob: -11.37566089630127
    10. ')' → logprob: -11.50066089630127

Token 732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012880703434348106
    2. ' ,' → logprob: -9.375128746032715
    3. '[],' → logprob: -10.625128746032715
    4. ',
' → logprob: -12.375128746032715
    5. '[' → logprob: -12.500128746032715
    6. '‌,' → logprob: -13.000128746032715
    7. ',List' → logprob: -13.000128746032715
    8. '<|end|>' → logprob: -13.000128746032715
    9. '   ' → logprob: -13.875128746032715
    10. ')' → logprob: -14.750128746032715

Token 733: ' draw' (ID: 6174)
  Prédit: ' draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' draw' → logprob: -0.07908123731613159
    2. 'draw' → logprob: -2.5790812969207764
    3. '    ' → logprob: -9.704081535339355
    4. ' ' → logprob: -10.204081535339355
    5. '_draw' → logprob: -10.704081535339355
    6. ' ' → logprob: -10.954081535339355
    7. ' drawn' → logprob: -12.204081535339355
    8. '        ' → logprob: -12.704081535339355
    9. '   ' → logprob: -12.829081535339355
    10. ' test' → logprob: -12.829081535339355

Token 734: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -5.796184723294573e-06
    2. '_cards' → logprob: -12.375005722045898
    3. ')_' → logprob: -14.125005722045898
    4. '_' → logprob: -14.250005722045898
    5. ')' → logprob: -16.2500057220459
    6. ' _' → logprob: -17.1250057220459
    7. '_list' → logprob: -17.7500057220459
    8. '   ' → logprob: -17.8750057220459
    9. '```' → logprob: -18.3750057220459
    10. '_positions' → logprob: -18.3750057220459

Token 735: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.0004303116293158382
    2. 'iles' → logprob: -8.0004301071167
    3. '_cards' → logprob: -10.0004301071167
    4. 'pile' → logprob: -10.8754301071167
    5. '_' → logprob: -11.3754301071167
    6. 'cards' → logprob: -12.0004301071167
    7. '_p' → logprob: -12.6254301071167
    8. 'le' → logprob: -13.2504301071167
    9. '   ' → logprob: -13.7504301071167
    10. '```' → logprob: -14.1254301071167

Token 736: '_cards' (ID: 101651)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.083356112241745
    2. '_cards' → logprob: -3.0833561420440674
    3. ')_' → logprob: -3.4583561420440674
    4. '_tokens' → logprob: -6.708355903625488
    5. '):
' → logprob: -8.083355903625488
    6. ',' → logprob: -8.458355903625488
    7. ')
' → logprob: -8.458355903625488
    8. '_' → logprob: -8.958355903625488
    9. '   ' → logprob: -9.458355903625488
    10. '),' → logprob: -9.833355903625488

Token 737: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01892356388270855
    2. '):
' → logprob: -4.518923759460449
    3. '):' → logprob: -5.393923759460449
    4. ')
' → logprob: -6.018923759460449
    5. '       ' → logprob: -7.393923759460449
    6. '   ' → logprob: -8.39392375946045
    7. ' )' → logprob: -12.01892375946045
    8. ',' → logprob: -12.39392375946045
    9. ')`' → logprob: -12.51892375946045
    10. '),' → logprob: -12.76892375946045

Token 738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2905513048171997
    2. '   ' → logprob: -1.5405513048171997
    3. '[' → logprob: -4.16555118560791
    4. '<|end|>' → logprob: -4.54055118560791
    5. 'def' → logprob: -6.16555118560791
    6. ',' → logprob: -6.16555118560791
    7. ')' → logprob: -6.66555118560791
    8. '
' → logprob: -6.79055118560791
    9. 'self' → logprob: -7.41555118560791
    10. '(self' → logprob: -7.41555118560791

Token 739: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6073696613311768
    2. 'self' (adapté à ' self') → logprob: -0.8573696613311768
    3. ' self' → logprob: -3.4823696613311768
    4. '   ' → logprob: -8.857369422912598
    5. '	self' → logprob: -10.232369422912598
    6. ' ' → logprob: -11.482369422912598
    7. 'def' → logprob: -11.482369422912598
    8. '	' → logprob: -13.107369422912598
    9. '
' → logprob: -13.482369422912598
    10. '[self' → logprob: -14.107369422912598

Token 740: '.test' (ID: 9859)
  Prédit: '.test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.test' → logprob: -0.0002786167024169117
    2. 'test' → logprob: -8.37527847290039
    3. '.' → logprob: -10.50027847290039
    4. ' test' → logprob: -11.50027847290039
    5. ' .' → logprob: -12.87527847290039
    6. '.tests' → logprob: -13.00027847290039
    7. '=test' → logprob: -13.12527847290039
    8. '._' → logprob: -13.62527847290039
    9. '.user' → logprob: -14.37527847290039
    10. '@test' → logprob: -15.62527847290039

Token 741: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.875004768371582
    3. '_c' → logprob: -14.500004768371582
    4. ' _' → logprob: -14.625004768371582
    5. 'cases' → logprob: -15.500004768371582
    6. 's' → logprob: -15.500004768371582
    7. '_s' → logprob: -16.0000057220459
    8. '_case' → logprob: -16.1250057220459
    9. '_cells' → logprob: -16.3750057220459
    10. '_choices' → logprob: -16.5000057220459

Token 742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132915198802948
    2. ' =' → logprob: -1.3132915496826172
    3. '=[]' → logprob: -11.188291549682617
    4. '<|end|>' → logprob: -11.688291549682617
    5. '   ' → logprob: -13.188291549682617
    6. ')' → logprob: -13.688291549682617
    7. ',' → logprob: -14.563291549682617
    8. '.' → logprob: -14.938291549682617
    9. '=[
' → logprob: -14.938291549682617
    10. '.append' → logprob: -14.938291549682617

Token 743: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.07890212535858154
    2. ' test' → logprob: -2.578902244567871
    3. '[test' → logprob: -11.453902244567871
    4. '   ' → logprob: -14.203902244567871
    5. '[' → logprob: -14.953902244567871
    6. 'list' → logprob: -15.703902244567871
    7. '(test' → logprob: -15.828902244567871
    8. '	test' → logprob: -15.828902244567871
    9. '[]' → logprob: -15.828902244567871
    10. '[
' → logprob: -16.828901290893555

Token 744: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -4.008129963040119e-06
    2. 's' → logprob: -13.000003814697266
    3. 'cases' → logprob: -13.500003814697266
    4. '_' → logprob: -16.250003814697266
    5. '_case' → logprob: -17.375003814697266
    6. '_codes' → logprob: -17.375003814697266
    7. '_choices' → logprob: -17.875003814697266
    8. '_classes' → logprob: -18.000003814697266
    9. ' cases' → logprob: -18.000003814697266
    10. '_ca' → logprob: -18.250003814697266

Token 745: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09089389443397522
    2. '   ' → logprob: -2.7158939838409424
    3. '<|end|>' → logprob: -4.590893745422363
    4. 'def' → logprob: -5.215893745422363
    5. '    
' → logprob: -5.965893745422363
    6. ' def' → logprob: -6.715893745422363
    7. '<|end|>' → logprob: -7.215893745422363
    8. '

' → logprob: -7.840893745422363
    9. '  
' → logprob: -9.715893745422363
    10. '	def' → logprob: -10.590893745422363

Token 746: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11474049091339111
    2. '   ' → logprob: -2.3647403717041016
    3. 'def' → logprob: -4.489740371704102
    4. '<|end|>' → logprob: -6.489740371704102
    5. ' def' → logprob: -7.364740371704102
    6. '    
' → logprob: -7.614740371704102
    7. '

' → logprob: -8.989740371704102
    8. '```' → logprob: -9.489740371704102
    9. '4' → logprob: -9.614740371704102
    10. '<|end|>' → logprob: -9.864740371704102

Token 747: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.961759259458631e-06
    2. ' def' → logprob: -12.250004768371582
    3. 'd' → logprob: -16.8750057220459
    4. 'de' → logprob: -16.8750057220459
    5. '   ' → logprob: -18.2500057220459
    6. '
' → logprob: -21.1250057220459
    7. '	def' → logprob: -21.8750057220459
    8. ' ' → logprob: -23.1250057220459
    9. '```' → logprob: -24.1250057220459
    10. 'ndef' → logprob: -24.2500057220459

Token 748: ' simulate' (ID: 66687)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.030919473618268967
    2. ' run' → logprob: -3.5309195518493652
    3. 'simulate' → logprob: -6.780919551849365
    4. 'play' → logprob: -10.530919075012207
    5. ' simulate' → logprob: -12.655919075012207
    6. '_run' → logprob: -13.030919075012207
    7. ' play' → logprob: -14.905919075012207
    8. 'def' → logprob: -15.655919075012207
    9. '__' → logprob: -15.655919075012207
    10. 'r' → logprob: -16.280920028686523

Token 749: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001010184409096837
    2. '(' → logprob: -7.376010417938232
    3. '_play' → logprob: -8.876009941101074
    4. '_next' → logprob: -9.126009941101074
    5. '_' → logprob: -10.001009941101074
    6. '_self' → logprob: -10.501009941101074
    7. 'self' → logprob: -10.751009941101074
    8. '_(' → logprob: -11.251009941101074
    9. '_turn' → logprob: -12.376009941101074
    10. '_game' → logprob: -12.626009941101074

Token 750: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0042174202390015125
    2. '):
' → logprob: -5.629217624664307
    3. '_' → logprob: -8.254217147827148
    4. 'self' → logprob: -8.504217147827148
    5. ',' → logprob: -10.129217147827148
    6. '   ' → logprob: -10.504217147827148
    7. '_self' → logprob: -10.504217147827148
    8. '(self' → logprob: -11.129217147827148
    9. ' ):' → logprob: -11.379217147827148
    10. ')' → logprob: -11.379217147827148

Token 751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015293825417757034
    2. 'results' → logprob: -7.376529216766357
    3. ' results' → logprob: -7.626529216766357
    4. ' for' → logprob: -8.376529693603516
    5. 'result' → logprob: -9.126529693603516
    6. 'for' → logprob: -10.501529693603516
    7. ' result' → logprob: -10.876529693603516
    8. 'outputs' → logprob: -11.751529693603516
    9. '   ' → logprob: -12.001529693603516
    10. '[' → logprob: -13.376529693603516

Token 752: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.3139963746070862
    2. ' results' → logprob: -1.3139963150024414
    3. '       ' → logprob: -7.438996315002441
    4. 'result' → logprob: -9.063996315002441
    5. 'for' → logprob: -11.438996315002441
    6. ' result' → logprob: -11.563996315002441
    7. ' for' → logprob: -12.313996315002441
    8. '	results' → logprob: -12.938996315002441
    9. 'outputs' → logprob: -13.438996315002441
    10. 'r' → logprob: -13.688996315002441

Token 753: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020653652027249336
    2. '=' → logprob: -4.02065372467041
    3. '=[]' → logprob: -6.27065372467041
    4. '[]' → logprob: -7.89565372467041
    5. '   ' → logprob: -9.39565372467041
    6. '=[]
' → logprob: -9.77065372467041
    7. '.append' → logprob: -10.52065372467041
    8. '_' → logprob: -11.39565372467041
    9. '       ' → logprob: -11.39565372467041
    10. ' ' → logprob: -11.89565372467041

Token 754: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00046713458141312003
    2. '[]
' → logprob: -7.750467300415039
    3. ' []' → logprob: -10.250467300415039
    4. '[' → logprob: -14.500467300415039
    5. '[]

' → logprob: -15.000467300415039
    6. '[]"' → logprob: -16.62546730041504
    7. '[]>' → logprob: -17.37546730041504
    8. ' []
' → logprob: -17.62546730041504
    9. '[]}' → logprob: -18.37546730041504
    10. '[])' → logprob: -18.50046730041504

Token 755: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20285767316818237
    2. ' for' → logprob: -1.7028577327728271
    3. 'for' → logprob: -7.202857494354248
    4. '<|end|>' → logprob: -8.452857971191406
    5. '
' → logprob: -8.827857971191406
    6. '   ' → logprob: -9.077857971191406
    7. '	for' → logprob: -9.327857971191406
    8. '<|end|>' → logprob: -10.452857971191406
    9. ',' → logprob: -10.952857971191406
    10. '	' → logprob: -11.077857971191406

Token 756: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.913265239447355e-05
    2. ' for' → logprob: -9.250099182128906
    3. '       ' → logprob: -12.750099182128906
    4. '   ' → logprob: -17.875099182128906
    5. '	for' → logprob: -19.000099182128906
    6. '```' → logprob: -19.000099182128906
    7. '
' → logprob: -20.125099182128906
    8. '_for' → logprob: -21.625099182128906
    9. 'from' → logprob: -22.250099182128906
    10. 'For' → logprob: -23.000099182128906

Token 757: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.07892162352800369
    2. ' initial' → logprob: -2.5789215564727783
    3. '(initial' → logprob: -10.9539213180542
    4. 'init' → logprob: -11.8289213180542
    5. '   ' → logprob: -12.9539213180542
    6. '_initial' → logprob: -13.9539213180542
    7. '	initial' → logprob: -13.9539213180542
    8. 'test' → logprob: -14.2039213180542
    9. ' test' → logprob: -14.3289213180542
    10. ' (' → logprob: -14.4539213180542

Token 758: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -9.436450636712834e-05
    2. '_cases' → logprob: -9.625094413757324
    3. ',' → logprob: -11.500094413757324
    4. '_' → logprob: -12.500094413757324
    5. '_case' → logprob: -12.500094413757324
    6. ',_' → logprob: -12.625094413757324
    7. '_c' → logprob: -13.375094413757324
    8. '_,' → logprob: -13.375094413757324
    9. '
' → logprob: -13.750094413757324
    10. '_codes' → logprob: -14.750094413757324

Token 759: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ' ,' → logprob: -11.125021934509277
    3. 'in' → logprob: -12.500021934509277
    4. ',in' → logprob: -13.625021934509277
    5. ',d' → logprob: -14.125021934509277
    6. ' in' → logprob: -14.625021934509277
    7. '‌,' → logprob: -15.500021934509277
    8. ',c' → logprob: -15.500021934509277
    9. ',de' → logprob: -16.000022888183594
    10. ',
' → logprob: -16.250022888183594

Token 760: ' draw' (ID: 6174)
  Prédit: ' draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' draw' → logprob: -0.3868728280067444
    2. 'draw' → logprob: -1.1368727684020996
    3. '        ' → logprob: -14.261873245239258
    4. '_draw' → logprob: -14.886873245239258
    5. '           ' → logprob: -15.136873245239258
    6. '       ' → logprob: -16.136873245239258
    7. '	draw' → logprob: -16.136873245239258
    8. '    ' → logprob: -16.261873245239258
    9. ' ' → logprob: -16.511873245239258
    10. '            ' → logprob: -17.011873245239258

Token 761: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -12.000006675720215
    3. ' _' → logprob: -16.3750057220459
    4. '```' → logprob: -16.8750057220459
    5. '   ' → logprob: -18.0000057220459
    6. '__' → logprob: -18.3750057220459
    7. '_cards' → logprob: -18.3750057220459
    8. '\' → logprob: -18.8750057220459
    9. '_
' → logprob: -19.0000057220459
    10. '_,' → logprob: -19.0000057220459

Token 762: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.00022809267102275044
    2. 'iles' → logprob: -9.500227928161621
    3. 'pile' → logprob: -9.625227928161621
    4. '_' → logprob: -11.000227928161621
    5. '   ' → logprob: -11.625227928161621
    6. '_cards' → logprob: -12.000227928161621
    7. '       ' → logprob: -12.125227928161621
    8. '```' → logprob: -12.125227928161621
    9. '_p' → logprob: -12.500227928161621
    10. '...' → logprob: -12.500227928161621

Token 763: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.10144833475351334
    2. '_' → logprob: -2.3514482975006104
    3. '_tokens' → logprob: -7.6014485359191895
    4. ' in' → logprob: -7.6014485359191895
    5. 'cards' → logprob: -9.601448059082031
    6. '_codes' → logprob: -10.351448059082031
    7. 's' → logprob: -10.726448059082031
    8. '```' → logprob: -10.726448059082031
    9. 'in' → logprob: -10.976448059082031
    10. '_chars' → logprob: -10.976448059082031

Token 764: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009457575506530702
    2. 'in' → logprob: -7.000945568084717
    3. '):
' → logprob: -12.125946044921875
    4. ':
' → logprob: -12.125946044921875
    5. '        ' → logprob: -12.375946044921875
    6. ',' → logprob: -12.500946044921875
    7. ')' → logprob: -12.750946044921875
    8. '<|end|>' → logprob: -12.750946044921875
    9. '       ' → logprob: -12.875946044921875
    10. ':' → logprob: -13.250946044921875

Token 765: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889363914728165
    2. ' self' → logprob: -2.5788936614990234
    3. '[self' → logprob: -13.328893661499023
    4. '(self' → logprob: -13.578893661499023
    5. '	self' → logprob: -15.203893661499023
    6. ' ' → logprob: -15.328893661499023
    7. 'results' → logprob: -15.953893661499023
    8. '[]' → logprob: -15.953893661499023
    9. '[' → logprob: -16.828893661499023
    10. '    ' → logprob: -17.203893661499023

Token 766: '.test' (ID: 9859)
  Prédit: '.test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.test' → logprob: -0.008635015226900578
    2. 'test' → logprob: -4.7586350440979
    3. ' test' → logprob: -12.133634567260742
    4. '_test' → logprob: -12.633634567260742
    5. '(test' → logprob: -13.258634567260742
    6. '._' → logprob: -13.633634567260742
    7. '.' → logprob: -13.758634567260742
    8. '=test' → logprob: -14.258634567260742
    9. ':test' → logprob: -14.258634567260742
    10. 'self' → logprob: -14.383634567260742

Token 767: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -1.5570885807392187e-05
    2. 'cases' → logprob: -11.250015258789062
    3. '_' → logprob: -13.625015258789062
    4. 'Cases' → logprob: -14.375015258789062
    5. ' cases' → logprob: -14.875015258789062
    6. '_case' → logprob: -15.875015258789062
    7. '_CASE' → logprob: -16.000015258789062
    8. '_cards' → logprob: -17.375015258789062
    9. 's' → logprob: -17.500015258789062
    10. '   ' → logprob: -18.250015258789062

Token 768: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07078243046998978
    2. ':
' → logprob: -2.695782423019409
    3. '           ' → logprob: -7.695782661437988
    4. ',' → logprob: -8.820782661437988
    5. '):
' → logprob: -9.445782661437988
    6. '       ' → logprob: -9.695782661437988
    7. '():
' → logprob: -9.695782661437988
    8. '<|end|>' → logprob: -11.695782661437988
    9. '<|end|>' → logprob: -11.820782661437988
    10. ':

' → logprob: -12.195782661437988

Token 769: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15128594636917114
    2. '       ' → logprob: -2.0262858867645264
    3. '        ' → logprob: -5.5262861251831055
    4. '        
' → logprob: -6.0262861251831055
    5. '<|end|>' → logprob: -7.5262861251831055
    6. '   ' → logprob: -8.026286125183105
    7. '```' → logprob: -8.026286125183105
    8. '          ' → logprob: -8.276286125183105
    9. ',' → logprob: -8.651286125183105
    10. '
' → logprob: -9.776286125183105

Token 770: ' dealer' (ID: 25477)
  Prédit: ' dealer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dealer' → logprob: -0.7296251654624939
    2. 'dealer' (adapté à ' dealer') → logprob: -0.9796251654624939
    3. '           ' → logprob: -1.9796252250671387
    4. 'd' → logprob: -5.604625225067139
    5. ' d' → logprob: -8.22962474822998
    6. 'de' → logprob: -8.35462474822998
    7. 'player' → logprob: -10.35462474822998
    8. 'Dealer' → logprob: -10.47962474822998
    9. '               ' → logprob: -10.72962474822998
    10. '            
' → logprob: -11.35462474822998

Token 771: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009758567437529564
    2. '=' → logprob: -4.634758472442627
    3. '_' → logprob: -13.509758949279785
    4. '.' → logprob: -15.259758949279785
    5. 's' → logprob: -15.509758949279785
    6. '_player' → logprob: -15.509758949279785
    7. '   ' → logprob: -15.634758949279785
    8. ' ' → logprob: -15.759758949279785
    9. '_play' → logprob: -16.00975799560547
    10. '.play' → logprob: -16.63475799560547

Token 772: ' Dealer' (ID: 51638)
  Prédit: ' Dealer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dealer' → logprob: -0.6931480169296265
    2. 'Dealer' → logprob: -0.6931480169296265
    3. 'Deal' → logprob: -14.693147659301758
    4. ' dealer' → logprob: -15.693147659301758
    5. ' Dealers' → logprob: -15.943147659301758
    6. 'Deck' → logprob: -16.818147659301758
    7. ' self' → logprob: -17.068147659301758
    8. 'Black' → logprob: -17.318147659301758
    9. 'self' → logprob: -17.318147659301758
    10. ' ' → logprob: -17.693147659301758

Token 773: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. '           ' → logprob: -15.875008583068848
    4. '(init' → logprob: -16.37500762939453
    5. ' (' → logprob: -16.75000762939453
    6. 'initial' → logprob: -17.00000762939453
    7. '(
' → logprob: -17.50000762939453
    8. '.initial' → logprob: -18.12500762939453
    9. ' initial' → logprob: -19.75000762939453
    10. '(first' → logprob: -19.75000762939453

Token 774: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -6.630610641877865e-06
    2. 'cards' → logprob: -12.000006675720215
    3. '(cards' → logprob: -16.6250057220459
    4. ' cards' → logprob: -16.6250057220459
    5. '           ' → logprob: -17.0000057220459
    6. '[' → logprob: -17.0000057220459
    7. '=' → logprob: -17.0000057220459
    8. 'Cards' → logprob: -17.2500057220459
    9. '       ' → logprob: -17.6250057220459
    10. '_c' → logprob: -17.7500057220459

Token 775: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ',d' → logprob: -13.125004768371582
    3. ',
' → logprob: -13.250004768371582
    4. ' ,' → logprob: -14.500004768371582
    5. '           ' → logprob: -15.875004768371582
    6. ')' → logprob: -16.750003814697266
    7. '<|end|>' → logprob: -16.875003814697266
    8. '       ' → logprob: -17.250003814697266
    9. '‌,' → logprob: -17.375003814697266
    10. '[' → logprob: -17.500003814697266

Token 776: ' draw' (ID: 6174)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.10020849853754044
    2. ' draw' → logprob: -2.3502085208892822
    3. '           ' → logprob: -13.475208282470703
    4. '               ' → logprob: -15.475208282470703
    5. '.draw' → logprob: -17.225208282470703
    6. '	draw' → logprob: -17.225208282470703
    7. '                   ' → logprob: -17.475208282470703
    8. '            ' → logprob: -17.600208282470703
    9. '(draw' → logprob: -17.725208282470703
    10. '_draw' → logprob: -18.225208282470703

Token 777: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.875
    3. 'pile' → logprob: -18.0
    4. 'ile' → logprob: -18.25
    5. 'p' → logprob: -19.625
    6. ' _' → logprob: -20.0
    7. '```' → logprob: -20.25
    8. '   ' → logprob: -20.25
    9. ')' → logprob: -20.375
    10. 'Pile' → logprob: -20.375

Token 778: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -8.97155623533763e-05
    2. 'le' → logprob: -10.000089645385742
    3. 'iles' → logprob: -11.250089645385742
    4. 'lie' → logprob: -11.875089645385742
    5. 'il' → logprob: -12.250089645385742
    6. '_' → logprob: -12.250089645385742
    7. '_le' → logprob: -13.625089645385742
    8. 'ule' → logprob: -13.937589645385742
    9. 'ie' → logprob: -14.125089645385742
    10. 'pile' → logprob: -14.250089645385742

Token 779: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00038658222183585167
    2. 'cards' → logprob: -8.375386238098145
    3. 'draw' → logprob: -9.000386238098145
    4. '_draw' → logprob: -10.750386238098145
    5. 'Cards' → logprob: -12.375386238098145
    6. ')' → logprob: -13.750386238098145
    7. '   ' → logprob: -13.875386238098145
    8. '_card' → logprob: -14.250386238098145
    9. '_c' → logprob: -14.250386238098145
    10. '```' → logprob: -14.625386238098145

Token 780: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004311784170567989
    2. ')
' → logprob: -5.504311561584473
    3. '           ' → logprob: -8.379311561584473
    4. ')
' → logprob: -13.379311561584473
    5. '       ' → logprob: -14.129311561584473
    6. ').' → logprob: -14.629311561584473
    7. '               ' → logprob: -15.004311561584473
    8. ')

' → logprob: -15.379311561584473
    9. ' )' → logprob: -15.629311561584473
    10. ')`' → logprob: -16.62931251525879

Token 781: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01782035082578659
    2. 'results' → logprob: -4.267820358276367
    3. ' results' → logprob: -5.642820358276367
    4. 'result' → logprob: -10.142820358276367
    5. '       ' → logprob: -11.142820358276367
    6. '<|end|>' → logprob: -11.267820358276367
    7. '	results' → logprob: -11.767820358276367
    8. '```' → logprob: -11.767820358276367
    9. '<|end|>' → logprob: -12.017820358276367
    10. '(results' → logprob: -12.142820358276367

Token 782: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0036605261266231537
    2. ' results' → logprob: -6.003660678863525
    3. 'result' → logprob: -6.753660678863525
    4. '           ' → logprob: -11.003660202026367
    5. ' result' → logprob: -13.878660202026367
    6. '	results' → logprob: -17.128660202026367
    7. '_results' → logprob: -18.878660202026367
    8. '.results' → logprob: -19.753660202026367
    9. '结果' → logprob: -19.753660202026367
    10. '結果' → logprob: -19.878660202026367

Token 783: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004348413785919547
    2. '.' → logprob: -7.750434875488281
    3. '.extend' → logprob: -13.250434875488281
    4. '.ap' → logprob: -13.375434875488281
    5. '.app' → logprob: -14.875434875488281
    6. '.push' → logprob: -15.875434875488281
    7. 'append' → logprob: -16.37543487548828
    8. '.add' → logprob: -16.87543487548828
    9. ').' → logprob: -17.25043487548828
    10. ' .' → logprob: -17.50043487548828

Token 784: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.0002370329457335174
    2. 'dealer' → logprob: -8.500237464904785
    3. '(' → logprob: -10.625237464904785
    4. ' dealer' → logprob: -11.625237464904785
    5. 'de' → logprob: -15.625237464904785
    6. '(
' → logprob: -17.25023651123047
    7. '(deck' → logprob: -17.37523651123047
    8. ' (' → logprob: -18.12523651123047
    9. 'Dealer' → logprob: -18.62523651123047
    10. '	de' → logprob: -18.75023651123047

Token 785: 'aler' (ID: 13534)
  Prédit: 'aler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aler' → logprob: -7.755678961984813e-05
    2. 'ale' → logprob: -9.750077247619629
    3. 'al' → logprob: -10.875077247619629
    4. 'alert' → logprob: -16.750078201293945
    5. 'alar' → logprob: -17.000078201293945
    6. 'lear' → logprob: -17.500078201293945
    7. '[' → logprob: -17.500078201293945
    8. '(' → logprob: -17.750078201293945
    9. 'dealer' → logprob: -17.750078201293945
    10. 'a' → logprob: -17.875078201293945

Token 786: '.play' (ID: 23389)
  Prédit: '.play'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.play' → logprob: -1.7432603272027336e-06
    2. '.' → logprob: -13.500001907348633
    3. 'play' → logprob: -15.375001907348633
    4. '.perform' → logprob: -17.000001907348633
    5. ').' → logprob: -17.250001907348633
    6. ' .' → logprob: -17.375001907348633
    7. '.run' → logprob: -18.125001907348633
    8. '	play' → logprob: -18.750001907348633
    9. '(play' → logprob: -18.750001907348633
    10. ' play' → logprob: -19.250001907348633

Token 787: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005303600803017616
    2. '()' → logprob: -5.255303382873535
    3. '())
' → logprob: -9.755303382873535
    4. ')' → logprob: -11.505303382873535
    5. '()
' → logprob: -13.755303382873535
    6. ' ())' → logprob: -15.005303382873535
    7. '())

' → logprob: -15.880303382873535
    8. '())
' → logprob: -17.00530433654785
    9. '()]' → logprob: -17.13030433654785
    10. '()))' → logprob: -17.25530433654785

Token 788: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005893715191632509
    2. '
' → logprob: -6.005893707275391
    3. 'return' → logprob: -6.130893707275391
    4. '        
' → logprob: -7.505893707275391
    5. ' return' → logprob: -7.505893707275391
    6. '   ' → logprob: -10.25589370727539
    7. '    
' → logprob: -11.00589370727539
    8. '	' → logprob: -11.00589370727539
    9. '	return' → logprob: -11.00589370727539
    10. '<|end|>' → logprob: -11.38089370727539

Token 789: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07964084297418594
    2. 'return' (adapté à ' return') → logprob: -2.5796408653259277
    3. ' return' → logprob: -7.579640865325928
    4. '   ' → logprob: -8.45464038848877
    5. '	return' → logprob: -10.70464038848877
    6. '	' → logprob: -12.95464038848877
    7. '           ' → logprob: -14.82964038848877
    8. '
' → logprob: -14.82964038848877
    9. '```' → logprob: -14.95464038848877
    10. ' ' → logprob: -15.07964038848877

Token 790: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.001170225441455841
    2. ' results' → logprob: -6.7511701583862305
    3. '	results' → logprob: -19.251171112060547
    4. '(results' → logprob: -20.126171112060547
    5. 'result' → logprob: -22.376171112060547
    6. '.results' → logprob: -23.251171112060547
    7. '[' → logprob: -24.001171112060547
    8. 'Results' → logprob: -25.876171112060547
    9. '_results' → logprob: -26.126171112060547
    10. '   ' → logprob: -26.501171112060547

Token 791: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 792: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07753217220306396
    2. 'for' → logprob: -3.7025322914123535
    3. 'test' → logprob: -3.8275322914123535
    4. 'def' → logprob: -4.2025322914123535
    5. '```' → logprob: -6.0775322914123535
    6. 'if' → logprob: -6.3275322914123535
    7. 'sim' → logprob: -6.4525322914123535
    8. 't' → logprob: -6.4525322914123535
    9. 'b' → logprob: -6.8275322914123535
    10. 'g' → logprob: -6.9525322914123535

Token 793: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3874557316303253
    2. ' run' → logprob: -1.137455701828003
    3. 'main' → logprob: -8.137455940246582
    4. ' simulate' → logprob: -8.887455940246582
    5. 'run' → logprob: -9.512455940246582
    6. ' test' → logprob: -9.512455940246582
    7. ' play' → logprob: -13.137455940246582
    8. ' example' → logprob: -13.387455940246582
    9. 'simulate' → logprob: -13.387455940246582
    10. ' blackjack' → logprob: -14.387455940246582

Token 794: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.020294394344091415
    2. '_test' → logprob: -4.145294189453125
    3. '_' → logprob: -5.895294189453125
    4. '_line' → logprob: -7.145294189453125
    5. '_cards' → logprob: -8.145294189453125
    6. '_tests' → logprob: -9.395294189453125
    7. '_hand' → logprob: -9.645294189453125
    8. '_inputs' → logprob: -9.770294189453125
    9. '(input' → logprob: -10.270294189453125
    10. '_card' → logprob: -10.270294189453125

Token 795: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16723866760730743
    2. '(input' → logprob: -2.167238712310791
    3. '(lines' → logprob: -4.167238712310791
    4. '(line' → logprob: -4.292238712310791
    5. '():
' → logprob: -4.792238712310791
    6. '(s' → logprob: -7.292238712310791
    7. '(text' → logprob: -7.417238712310791
    8. '(' → logprob: -8.542238235473633
    9. '(data' → logprob: -8.542238235473633
    10. '()' → logprob: -9.417238235473633

Token 796: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015291864052414894
    2. 'n' → logprob: -5.015291690826416
    3. ' n' → logprob: -5.390291690826416
    4. ' import' → logprob: -6.015291690826416
    5. 'import' → logprob: -6.515291690826416
    6. ' input' → logprob: -10.640292167663574
    7. '()' → logprob: -11.765292167663574
    8. ' test' → logprob: -12.515292167663574
    9. '   ' → logprob: -12.515292167663574
    10. ' lines' → logprob: -12.890292167663574

Token 797: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.80113685131073
    2. ' n' → logprob: -0.80113685131073
    3. ' import' → logprob: -3.3011369705200195
    4. ' t' → logprob: -3.4261369705200195
    5. 't' → logprob: -3.9261369705200195
    6. 'import' (adapté à ' import') → logprob: -4.5511369705200195
    7. ' num' → logprob: -6.4261369705200195
    8. 'num' → logprob: -7.6761369705200195
    9. ' test' → logprob: -7.9261369705200195
    10. ' T' → logprob: -9.30113697052002

Token 798: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.25197580456733704
    2. ' sys' → logprob: -1.5019757747650146
    3. '=sys' → logprob: -10.001976013183594
    4. '	sys' → logprob: -13.876976013183594
    5. '_sys' → logprob: -15.001976013183594
    6. '(sys' → logprob: -16.251976013183594
    7. '.sys' → logprob: -17.501976013183594
    8. 'json' → logprob: -17.501976013183594
    9. 'io' → logprob: -19.126976013183594
    10. 'stdin' → logprob: -19.251976013183594

Token 799: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024518877267837524
    2. 'n' → logprob: -4.524518966674805
    3. ' n' → logprob: -5.024518966674805
    4. ' lines' → logprob: -5.399518966674805
    5. ' input' → logprob: -6.524518966674805
    6. 'input' → logprob: -7.649518966674805
    7. '    
' → logprob: -9.274518966674805
    8. '
' → logprob: -9.399518966674805
    9. 'lines' → logprob: -10.274518966674805
    10. ' line' → logprob: -10.524518966674805

Token 800: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024487809278070927
    2. ' lines' → logprob: -7.002448558807373
    3. 'n' → logprob: -7.502448558807373
    4. ' input' → logprob: -7.627448558807373
    5. 'input' → logprob: -7.752448558807373
    6. ' n' → logprob: -10.627449035644531
    7. 'data' → logprob: -11.252449035644531
    8. 'lines' → logprob: -11.377449035644531
    9. 'for' → logprob: -12.502449035644531
    10. 'def' → logprob: -12.752449035644531

Token 801: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9263395071029663
    2. 'n' → logprob: -1.6763395071029663
    3. ' lines' → logprob: -1.8013395071029663
    4. ' input' → logprob: -2.176339626312256
    5. ' n' → logprob: -2.551339626312256
    6. 'input' (adapté à ' input') → logprob: -2.926339626312256
    7. 'lines' → logprob: -5.301339626312256
    8. 'data' → logprob: -6.926339626312256
    9. ' data' → logprob: -8.051339149475098
    10. 'num' → logprob: -8.676339149475098

Token 802: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.48647910356521606
    2. '_data' → logprob: -1.8614790439605713
    3. '()' → logprob: -2.2364790439605713
    4. '_line' → logprob: -2.7364790439605713
    5. '_' → logprob: -3.4864790439605713
    6. '=' → logprob: -4.11147928237915
    7. ' =' → logprob: -4.98647928237915
    8. '_list' → logprob: -6.61147928237915
    9. 'data' → logprob: -7.48647928237915
    10. '.' → logprob: -7.73647928237915

Token 803: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10025443881750107
    2. ' =' → logprob: -2.350254535675049
    3. '()' → logprob: -10.47525405883789
    4. '   ' → logprob: -11.72525405883789
    5. '=[]' → logprob: -12.35025405883789
    6. ' ' → logprob: -13.47525405883789
    7. '=[]
' → logprob: -13.60025405883789
    8. '.' → logprob: -13.72525405883789
    9. '().' → logprob: -14.10025405883789
    10. '.readline' → logprob: -14.60025405883789

Token 804: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.31402257084846497
    2. ' sys' → logprob: -1.3140225410461426
    3. '[' → logprob: -7.439022541046143
    4. ' [' → logprob: -8.6890230178833
    5. '=sys' → logprob: -13.3140230178833
    6. '(sys' → logprob: -13.8140230178833
    7. 'list' → logprob: -14.5640230178833
    8. '[]' → logprob: -14.6890230178833
    9. '	sys' → logprob: -14.6890230178833
    10. ' list' → logprob: -15.8140230178833

Token 805: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005873450427316129
    2. 'in' → logprob: -8.750587463378906
    3. '.stdout' → logprob: -8.875587463378906
    4. 'stdin' → logprob: -9.125587463378906
    5. '.' → logprob: -9.250587463378906
    6. '   ' → logprob: -10.000587463378906
    7. '().' → logprob: -11.750587463378906
    8. 'import' → logprob: -12.000587463378906
    9. '.argv' → logprob: -12.250587463378906
    10. 'td' → logprob: -12.875587463378906

Token 806: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.11370079219341278
    2. '.readline' → logprob: -2.3637008666992188
    3. 'read' → logprob: -4.988700866699219
    4. '.' → logprob: -5.613700866699219
    5. '.read' → logprob: -5.863700866699219
    6. '_read' → logprob: -10.238700866699219
    7. 'lines' → logprob: -10.238700866699219
    8. '_lines' → logprob: -11.113700866699219
    9. '=' → logprob: -12.363700866699219
    10. ' readline' → logprob: -12.863700866699219

Token 807: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001170460251159966
    2. '()' → logprob: -6.751170635223389
    3. '()
' → logprob: -16.126171112060547
    4. '(' → logprob: -16.376171112060547
    5. ' ().' → logprob: -17.251171112060547
    6. '()

' → logprob: -17.501171112060547
    7. 'lines' → logprob: -17.626171112060547
    8. '_lines' → logprob: -18.001171112060547
    9. '()`' → logprob: -18.876171112060547
    10. '()\' → logprob: -19.251171112060547

Token 808: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10022737830877304
    2. 'split' → logprob: -2.3502273559570312
    3. 'decode' → logprob: -10.975227355957031
    4. 'rstrip' → logprob: -12.975227355957031
    5. 'read' → logprob: -13.975227355957031
    6. 'lines' → logprob: -14.975227355957031
    7. '(split' → logprob: -17.22522735595703
    8. 'replace' → logprob: -17.35022735595703
    9. '```' → logprob: -17.97522735595703
    10. '(strip' → logprob: -18.22522735595703

Token 809: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0019310165662318468
    2. '()' → logprob: -6.251931190490723
    3. '()
' → logprob: -13.126931190490723
    4. '()\' → logprob: -15.376931190490723
    5. ' ().' → logprob: -16.251930236816406
    6. '(' → logprob: -16.251930236816406
    7. 'split' → logprob: -17.001930236816406
    8. '()

' → logprob: -17.501930236816406
    9. '('\' → logprob: -18.376930236816406
    10. '()
' → logprob: -18.376930236816406

Token 810: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.625
    3. '(split' → logprob: -17.25
    4. 'spl' → logprob: -20.0
    5. 's' → logprob: -21.0
    6. 'strip' → logprob: -21.25
    7. 'decode' → logprob: -21.75
    8. 'sp' → logprob: -21.75
    9. 'rstrip' → logprob: -22.25
    10. '.split' → logprob: -22.5

Token 811: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8273846507072449
    2. 'lines' → logprob: -0.8273846507072449
    3. '('\' → logprob: -2.0773847103118896
    4. '()
' → logprob: -8.827384948730469
    5. '()\' → logprob: -8.827384948730469
    6. '()[' → logprob: -10.327384948730469
    7. '("\' → logprob: -10.702384948730469
    8. '('' → logprob: -12.452384948730469
    9. ''\' → logprob: -13.077384948730469
    10. '()

' → logprob: -13.702384948730469

Token 812: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5048530030981055e-06
    2. '\n' → logprob: -13.500001907348633
    3. ' n' → logprob: -18.625001907348633
    4. 'lines' → logprob: -19.000001907348633
    5. '
' → logprob: -19.250001907348633
    6. 'newline' → logprob: -20.125001907348633
    7. 'ndef' → logprob: -20.750001907348633
    8. '\' → logprob: -21.875001907348633
    9. '```' → logprob: -22.375001907348633
    10. 'b' → logprob: -22.750001907348633

Token 813: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0451095812022686
    2. '')' → logprob: -3.170109510421753
    3. ')
' → logprob: -6.920109748840332
    4. '   ' → logprob: -7.170109748840332
    5. '')
' → logprob: -8.045109748840332
    6. '")' → logprob: -11.420109748840332
    7. ']' → logprob: -11.920109748840332
    8. ')
' → logprob: -12.045109748840332
    9. '[' → logprob: -13.545109748840332
    10. '')
' → logprob: -13.795109748840332

Token 814: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16503070294857025
    2. 'n' → logprob: -2.5400307178497314
    3. ' n' → logprob: -2.6650307178497314
    4. 'num' → logprob: -6.040030479431152
    5. ' t' → logprob: -7.665030479431152
    6. 't' → logprob: -7.665030479431152
    7. ' num' → logprob: -8.165030479431152
    8. 'index' → logprob: -10.915030479431152
    9. 'idx' → logprob: -11.790030479431152
    10. 'i' → logprob: -11.790030479431152

Token 815: ' N' (ID: 478)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.24406498670578003
    2. 'num' → logprob: -1.9940650463104248
    3. 'n' → logprob: -3.244065046310425
    4. '   ' → logprob: -3.744065046310425
    5. ' t' → logprob: -4.244064807891846
    6. ' num' → logprob: -6.619064807891846
    7. 'test' → logprob: -6.744064807891846
    8. 'T' → logprob: -7.744064807891846
    9. ' n' → logprob: -8.244065284729004
    10. ' test' → logprob: -9.119065284729004

Token 816: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329306960105896
    2. '=' → logprob: -1.3132930994033813
    3. '=int' → logprob: -10.56329345703125
    4. ',' → logprob: -12.93829345703125
    5. '   ' → logprob: -13.93829345703125
    6. ' =
' → logprob: -14.06329345703125
    7. ' ' → logprob: -14.68829345703125
    8. '    ' → logprob: -14.93829345703125
    9. '=
' → logprob: -16.31329345703125
    10. ' ,' → logprob: -16.43829345703125

Token 817: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804275393486023
    2. ' int' → logprob: -3.2880427837371826
    3. 'len' → logprob: -13.788043022155762
    4. '=int' → logprob: -16.288042068481445
    5. ' len' → logprob: -16.538042068481445
    6. '[int' → logprob: -16.788042068481445
    7. '(int' → logprob: -17.663042068481445
    8. '   ' → logprob: -17.663042068481445
    9. 'input' → logprob: -19.163042068481445
    10. '	int' → logprob: -19.413042068481445

Token 818: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03833213075995445
    2. 'input' → logprob: -3.288332223892212
    3. '(' → logprob: -8.288331985473633
    4. ' input' → logprob: -10.163331985473633
    5. ' (' → logprob: -15.538331985473633
    6. '(
' → logprob: -15.913331985473633
    7. '=input' → logprob: -16.538331985473633
    8. ',input' → logprob: -16.538331985473633
    9. '<input' → logprob: -17.413331985473633
    10. '[input' → logprob: -17.413331985473633

Token 819: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00017112065688706934
    2. 'lines' → logprob: -9.375170707702637
    3. '(' → logprob: -10.250170707702637
    4. '(lines' → logprob: -10.625170707702637
    5. '()' → logprob: -11.500170707702637
    6. 'Lines' → logprob: -12.375170707702637
    7. '[' → logprob: -12.750170707702637
    8. '```' → logprob: -13.125170707702637
    9. '(input' → logprob: -13.750170707702637
    10. '(_' → logprob: -13.750170707702637

Token 820: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -15.000000953674316
    3. ' [' → logprob: -16.0
    4. '[
' → logprob: -16.875
    5. ')[' → logprob: -17.375
    6. '(' → logprob: -17.5
    7. '   ' → logprob: -17.875
    8. '```' → logprob: -18.0
    9. '1' → logprob: -18.5
    10. '()[' → logprob: -18.625

Token 821: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. ' ' → logprob: -17.0
    4. '1' → logprob: -18.375
    5. '
' → logprob: -19.25
    6. '   ' → logprob: -20.0
    7. '```' → logprob: -20.5
    8. '00' → logprob: -21.5
    9. '۰' → logprob: -22.125
    10. '  ' → logprob: -23.0

Token 822: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12856066226959229
    2. '])' → logprob: -2.1285605430603027
    3. ']' → logprob: -6.753560543060303
    4. ')
' → logprob: -8.628561019897461
    5. ' )' → logprob: -9.003561019897461
    6. '[' → logprob: -10.253561019897461
    7. '.strip' → logprob: -10.628561019897461
    8. ' ])' → logprob: -10.628561019897461
    9. '])
' → logprob: -10.753561019897461
    10. '   ' → logprob: -11.378561019897461

Token 823: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021497849375009537
    2. ' test' → logprob: -6.75214958190918
    3. 'results' → logprob: -8.12714958190918
    4. ' results' → logprob: -8.25214958190918
    5. ' lines' → logprob: -8.50214958190918
    6. 'test' → logprob: -9.00214958190918
    7. 'lines' → logprob: -10.25214958190918
    8. 'result' → logprob: -11.62714958190918
    9. 'inputs' → logprob: -11.75214958190918
    10. ' result' → logprob: -12.00214958190918

Token 824: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' (adapté à ' test') → logprob: -0.013913844712078571
    2. ' test' → logprob: -4.763913631439209
    3. 'cases' → logprob: -6.013913631439209
    4. '   ' → logprob: -6.263913631439209
    5. 'tests' → logprob: -7.138913631439209
    6. 'lines' → logprob: -9.638914108276367
    7. 'results' → logprob: -10.763914108276367
    8. 'idx' → logprob: -10.763914108276367
    9. 'index' → logprob: -11.263914108276367
    10. 'result' → logprob: -12.138914108276367

Token 825: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -0.00012606535165105015
    2. '_lines' → logprob: -9.750125885009766
    3. '   ' → logprob: -10.250125885009766
    4. '_' → logprob: -11.000125885009766
    5. 'cases' → logprob: -11.625125885009766
    6. '```' → logprob: -13.500125885009766
    7. ' _' → logprob: -13.625125885009766
    8. '_case' → logprob: -14.000125885009766
    9. '_inputs' → logprob: -14.250125885009766
    10. 's' → logprob: -14.375125885009766

Token 826: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006723183207213879
    2. '=' → logprob: -5.006723403930664
    3. '=[]' → logprob: -12.131723403930664
    4. ' =
' → logprob: -13.506723403930664
    5. '   ' → logprob: -15.131723403930664
    6. ' =[' → logprob: -15.631723403930664
    7. '=[]
' → logprob: -15.881723403930664
    8. ',' → logprob: -15.881723403930664
    9. '[]' → logprob: -16.006723403930664
    10. '    ' → logprob: -16.131723403930664

Token 827: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.062019892036914825
    2. ' []' → logprob: -2.8120198249816895
    3. '[]
' → logprob: -10.437020301818848
    4. '[' → logprob: -11.062020301818848
    5. ' []
' → logprob: -12.062020301818848
    6. '=[]' → logprob: -14.812020301818848
    7. ' [' → logprob: -14.937020301818848
    8. '[]

' → logprob: -15.437020301818848
    9. '[]>' → logprob: -15.937020301818848
    10. '[])' → logprob: -16.31201934814453

Token 828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014912365935742855
    2. 'for' → logprob: -4.264912128448486
    3. ' for' → logprob: -7.264912128448486
    4. '	for' → logprob: -10.389912605285645
    5. 'i' → logprob: -11.639912605285645
    6. '
' → logprob: -12.389912605285645
    7. '```' → logprob: -13.389912605285645
    8. '    
' → logprob: -13.764912605285645
    9. ' i' → logprob: -14.514912605285645
    10. 'index' → logprob: -14.889912605285645

Token 829: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30560925602912903
    2. '   ' → logprob: -1.8056092262268066
    3. 'idx' (adapté à ' idx') → logprob: -2.8056092262268066
    4. 'line' → logprob: -3.8056092262268066
    5. ' for' → logprob: -4.805609226226807
    6. 'index' → logprob: -5.055609226226807
    7. ' idx' → logprob: -7.430609226226807
    8. 'i' → logprob: -7.430609226226807
    9. 'ind' → logprob: -8.680609703063965
    10. 'current' → logprob: -9.055609703063965

Token 830: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020543403923511505
    2. '=' → logprob: -3.895543336868286
    3. ' +=' → logprob: -14.020543098449707
    4. ' ' → logprob: -15.395543098449707
    5. ' =
' → logprob: -16.145544052124023
    6. '1' → logprob: -16.395544052124023
    7. '_' → logprob: -16.395544052124023
    8. '<|end|>' → logprob: -16.770544052124023
    9. '0' → logprob: -17.520544052124023
    10. ',' → logprob: -17.645544052124023

Token 831: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.50000762939453
    4. '```' → logprob: -20.75000762939453
    5. '  ' → logprob: -21.12500762939453
    6. '۱' → logprob: -21.62500762939453
    7. '১' → logprob: -22.12500762939453
    8. '１' → logprob: -22.12500762939453
    9. '    ' → logprob: -22.12500762939453
    10. '=' → logprob: -22.62500762939453

Token 832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -21.375
    4. '```' → logprob: -23.25
    5. '۱' → logprob: -24.0
    6. '１' → logprob: -24.5
    7. '  ' → logprob: -25.375
    8. '১' → logprob: -25.5
    9. '१' → logprob: -25.75
    10. '2' → logprob: -25.75

Token 833: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4796851873397827
    2. ' for' → logprob: -1.6046851873397827
    3. '   ' → logprob: -1.7296851873397827
    4. '
' → logprob: -6.604685306549072
    5. '	for' → logprob: -7.229685306549072
    6. '<|end|>' → logprob: -7.979685306549072
    7. '    
' → logprob: -9.854684829711914
    8. '  
' → logprob: -9.854684829711914
    9. ' ' → logprob: -10.104684829711914
    10. '  ' → logprob: -10.729684829711914

Token 834: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18850074708461761
    2. 'for' → logprob: -1.8135007619857788
    3. ' for' → logprob: -4.813500881195068
    4. '<|end|>' → logprob: -8.31350040435791
    5. '	for' → logprob: -8.93850040435791
    6. 'while' → logprob: -9.18850040435791
    7. '
' → logprob: -9.81350040435791
    8. '       ' → logprob: -11.18850040435791
    9. ' ' → logprob: -11.31350040435791
    10. '```' → logprob: -11.43850040435791

Token 835: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007163656409829855
    2. ' for' → logprob: -7.250716209411621
    3. '   ' → logprob: -12.000716209411621
    4. '	for' → logprob: -16.000717163085938
    5. '
' → logprob: -16.125717163085938
    6. 'while' → logprob: -19.000717163085938
    7. ' ' → logprob: -19.250717163085938
    8. '```' → logprob: -20.375717163085938
    9. '    
' → logprob: -20.500717163085938
    10. '  ' → logprob: -21.250717163085938

Token 836: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007548353751190007
    2. '_i' → logprob: -7.2507548332214355
    3. 'i' → logprob: -10.500755310058594
    4. ' _' → logprob: -11.000755310058594
    5. '_N' → logprob: -15.125755310058594
    6. ' i' → logprob: -15.250755310058594
    7. '_
' → logprob: -16.000755310058594
    8. '_=' → logprob: -17.375755310058594
    9. '_range' → logprob: -17.500755310058594
    10. '_n' → logprob: -17.500755310058594

Token 837: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4351859390735626
    2. ' in' → logprob: -1.6851859092712402
    3. 'range' → logprob: -1.8101859092712402
    4. ' range' → logprob: -6.18518590927124
    5. '_' → logprob: -6.68518590927124
    6. 'i' → logprob: -7.93518590927124
    7. ' ' → logprob: -9.060186386108398
    8. 'n' → logprob: -12.060186386108398
    9. '  ' → logprob: -12.185186386108398
    10. ')' → logprob: -12.185186386108398

Token 838: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000158842682139948
    2. ' range' → logprob: -8.75015926361084
    3. '_' → logprob: -15.00015926361084
    4. 'in' → logprob: -17.750158309936523
    5. '0' → logprob: -17.875158309936523
    6. '_range' → logprob: -18.500158309936523
    7. '
' → logprob: -19.875158309936523
    8. '	range' → logprob: -20.125158309936523
    9. '(range' → logprob: -21.000158309936523
    10. ' in' → logprob: -21.000158309936523

Token 839: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5676630139350891
    2. '(N' → logprob: -1.4426629543304443
    3. ' N' → logprob: -1.9426629543304443
    4. '(' → logprob: -3.1926629543304443
    5. ' (' → logprob: -4.942663192749023
    6. ',' → logprob: -5.817663192749023
    7. ' ' → logprob: -7.317663192749023
    8. '()' → logprob: -7.567663192749023
    9. ' ,' → logprob: -8.317663192749023
    10. '(
' → logprob: -8.567663192749023

Token 840: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2140854001045227
    2. ':' → logprob: -2.464085340499878
    3. '):
' → logprob: -2.839085340499878
    4. ',' → logprob: -3.089085340499878
    5. '   ' → logprob: -5.964085578918457
    6. ':
' → logprob: -7.964085578918457
    7. '       ' → logprob: -8.714085578918457
    8. ')' → logprob: -8.714085578918457
    9. ' ,' → logprob: -9.089085578918457
    10. '<|end|>' → logprob: -9.589085578918457

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012572570703923702
    2. '   ' → logprob: -7.001257419586182
    3. ' initial' → logprob: -9.751256942749023
    4. 'initial' → logprob: -10.001256942749023
    5. '    ' → logprob: -10.251256942749023
    6. '           ' → logprob: -10.376256942749023
    7. ',' → logprob: -10.376256942749023
    8. '        
' → logprob: -10.626256942749023
    9. '      ' → logprob: -11.001256942749023
    10. '     ' → logprob: -11.001256942749023

Token 842: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.59328693151474
    2. 'initial' (adapté à ' initial') → logprob: -0.84328693151474
    3. ' parts' → logprob: -4.593286991119385
    4. 'line' → logprob: -5.968286991119385
    5. ' line' → logprob: -5.968286991119385
    6. 'parts' → logprob: -6.718286991119385
    7. '       ' → logprob: -7.968286991119385
    8. '           ' → logprob: -9.343286514282227
    9. 'cards' → logprob: -10.093286514282227
    10. '	initial' → logprob: -10.468286514282227

Token 843: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00013846253568772227
    2. 'cards' → logprob: -9.500138282775879
    3. '_line' → logprob: -9.875138282775879
    4. '=' → logprob: -12.250138282775879
    5. '_' → logprob: -13.125138282775879
    6. '_lines' → logprob: -13.500138282775879
    7. ' =' → logprob: -14.125138282775879
    8. '_hand' → logprob: -14.625138282775879
    9. 'Cards' → logprob: -14.625138282775879
    10. '_card' → logprob: -14.750138282775879

Token 844: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7024160027503967
    2. ' =' → logprob: -0.7024160027503967
    3. ',' → logprob: -4.702415943145752
    4. '_line' → logprob: -9.95241641998291
    5. ' ,' → logprob: -10.07741641998291
    6. '=line' → logprob: -10.32741641998291
    7. ',line' → logprob: -11.20241641998291
    8. '   ' → logprob: -12.45241641998291
    9. 'line' → logprob: -12.57741641998291
    10. ' ' → logprob: -13.20241641998291

Token 845: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06197172403335571
    2. ' input' → logprob: -2.811971664428711
    3. '[input' → logprob: -13.311971664428711
    4. 'list' → logprob: -13.561971664428711
    5. ' list' → logprob: -15.061971664428711
    6. '[' → logprob: -15.811971664428711
    7. '[]' → logprob: -15.811971664428711
    8. ' ' → logprob: -16.18697166442871
    9. '(input' → logprob: -16.43697166442871
    10. ' [' → logprob: -16.68697166442871

Token 846: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0005762664368376136
    2. 'lines' → logprob: -8.37557601928711
    3. '()' → logprob: -9.25057601928711
    4. 'Lines' → logprob: -9.37557601928711
    5. '_line' → logprob: -9.87557601928711
    6. '```' → logprob: -10.50057601928711
    7. '_tokens' → logprob: -10.75057601928711
    8. '().' → logprob: -11.62557601928711
    9. '=' → logprob: -11.75057601928711
    10. 's' → logprob: -12.12557601928711

Token 847: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -9.674858301877975e-05
    2. 'idx' → logprob: -9.250096321105957
    3. '[' → logprob: -15.625096321105957
    4. ' idx' → logprob: -16.250097274780273
    5. '[
' → logprob: -16.500097274780273
    6. '
' → logprob: -16.625097274780273
    7. '```' → logprob: -17.000097274780273
    8. '   ' → logprob: -17.125097274780273
    9. '	idx' → logprob: -17.250097274780273
    10. ' [' → logprob: -17.750097274780273

Token 848: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.49198615550994873
    2. '.split' → logprob: -0.9919861555099487
    3. '.' → logprob: -4.366986274719238
    4. '.strip' → logprob: -5.741986274719238
    5. '().' → logprob: -6.616986274719238
    6. ' .' → logprob: -8.366986274719238
    7. ' ].' → logprob: -8.616986274719238
    8. ']' → logprob: -10.241986274719238
    9. ').' → logprob: -10.741986274719238
    10. 'split' → logprob: -11.741986274719238

Token 849: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005233763717114925
    2. 'strip' → logprob: -5.2552337646484375
    3. ' split' → logprob: -18.755233764648438
    4. 'rstrip' → logprob: -19.755233764648438
    5. '.split' → logprob: -22.130233764648438
    6. 'spl' → logprob: -22.380233764648438
    7. '.strip' → logprob: -23.380233764648438
    8. ' strip' → logprob: -23.880233764648438
    9. '_split' → logprob: -23.880233764648438
    10. '(split' → logprob: -24.005233764648438

Token 850: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012606535165105015
    2. '('' → logprob: -9.250125885009766
    3. '()
' → logprob: -11.125125885009766
    4. '(' → logprob: -11.250125885009766
    5. '(),' → logprob: -14.500125885009766
    6. '())' → logprob: -15.125125885009766
    7. '()

' → logprob: -15.125125885009766
    8. '()]' → logprob: -15.500125885009766
    9. ' ()' → logprob: -15.875125885009766
    10. '();' → logprob: -15.875125885009766

Token 851: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002086615888401866
    2. '<|end|>' → logprob: -7.002086639404297
    3. 'idx' → logprob: -7.127086639404297
    4. '[idx' → logprob: -9.127086639404297
    5. ' idx' → logprob: -9.377086639404297
    6. '   ' → logprob: -9.877086639404297
    7. '	idx' → logprob: -9.877086639404297
    8. ',' → logprob: -10.377086639404297
    9. '<|end|>' → logprob: -10.877086639404297
    10. '           ' → logprob: -12.252086639404297

Token 852: ' draw' (ID: 6174)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -5.550411151489243e-05
    2. ' idx' → logprob: -10.250055313110352
    3. '	idx' → logprob: -11.250055313110352
    4. '_idx' → logprob: -12.875055313110352
    5. '       ' → logprob: -13.250055313110352
    6. '[idx' → logprob: -13.375055313110352
    7. '   ' → logprob: -14.125055313110352
    8. '
' → logprob: -14.750055313110352
    9. '(idx' → logprob: -16.12505531311035
    10. 'indx' → logprob: -17.50005531311035

Token 853: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.875
    3. '_line' → logprob: -17.25
    4. '_' → logprob: -17.5
    5. '
' → logprob: -17.5
    6. '```' → logprob: -17.5
    7. '=' → logprob: -17.75
    8. '_idx' → logprob: -17.75
    9. '    
' → logprob: -18.0
    10. 'idx' → logprob: -18.0

Token 854: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -4.246537173457909e-06
    2. 'pile' → logprob: -12.750003814697266
    3. '_' → logprob: -14.875003814697266
    4. 'iles' → logprob: -15.625003814697266
    5. 'idx' → logprob: -16.000003814697266
    6. '_p' → logprob: -16.000003814697266
    7. '_idx' → logprob: -16.500003814697266
    8. 'Pile' → logprob: -16.875003814697266
    9. 'lie' → logprob: -17.000003814697266
    10. 'i' → logprob: -17.250003814697266

Token 855: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.4213780164718628
    2. '=' → logprob: -1.2963780164718628
    3. ' =' → logprob: -2.6713781356811523
    4. 'cards' → logprob: -7.671378135681152
    5. '_tokens' → logprob: -8.296378135681152
    6. '=[]' → logprob: -9.421378135681152
    7. ' ' → logprob: -9.921378135681152
    8. '=_' → logprob: -10.171378135681152
    9. '+=' → logprob: -10.421378135681152
    10. '_=' → logprob: -10.671378135681152

Token 856: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380852073431015
    2. '=' → logprob: -3.2880852222442627
    3. '<|end|>' → logprob: -10.788084983825684
    4. ' ' → logprob: -11.413084983825684
    5. ',' → logprob: -12.538084983825684
    6. '=[]' → logprob: -13.163084983825684
    7. 'idx' → logprob: -13.538084983825684
    8. ' =
' → logprob: -13.663084983825684
    9. ')' → logprob: -14.413084983825684
    10. '=input' → logprob: -14.663084983825684

Token 857: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12725722789764404
    2. ' input' → logprob: -2.1272573471069336
    3. '[]' → logprob: -8.377257347106934
    4. ' []' → logprob: -9.377257347106934
    5. '(input' → logprob: -12.252257347106934
    6. ' ' → logprob: -12.502257347106934
    7. '	input' → logprob: -13.377257347106934
    8. '[input' → logprob: -13.502257347106934
    9. '<input' → logprob: -14.502257347106934
    10. '<|end|>' → logprob: -14.627257347106934

Token 858: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -6.153795766294934e-06
    2. 'lines' → logprob: -12.500005722045898
    3. 'Lines' → logprob: -13.375005722045898
    4. 'input' → logprob: -15.125005722045898
    5. '_line' → logprob: -15.250005722045898
    6. '```' → logprob: -16.3750057220459
    7. '_LINES' → logprob: -16.5000057220459
    8. '_' → logprob: -16.8750057220459
    9. '[input' → logprob: -17.6250057220459
    10. 's' → logprob: -18.3750057220459

Token 859: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.236549335066229e-05
    2. 'idx' → logprob: -10.750021934509277
    3. '(idx' → logprob: -15.500021934509277
    4. '[input' → logprob: -15.875021934509277
    5. '[' → logprob: -16.000022888183594
    6. ' idx' → logprob: -16.375022888183594
    7. '[
' → logprob: -16.625022888183594
    8. '[i' → logprob: -16.750022888183594
    9. '
' → logprob: -17.125022888183594
    10. '[id' → logprob: -17.500022888183594

Token 860: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007102862582542002
    2. ' +' → logprob: -7.250710487365723
    3. '1' → logprob: -16.000709533691406
    4. '+
' → logprob: -16.125709533691406
    5. '+=' → logprob: -16.750709533691406
    6. '2' → logprob: -16.875709533691406
    7. ']+' → logprob: -18.250709533691406
    8. '＋' → logprob: -18.875709533691406
    9. '+j' → logprob: -19.375709533691406
    10. '+[' → logprob: -19.750709533691406

Token 861: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011871340684592724
    2. '2' → logprob: -6.751187324523926
    3. ' ' → logprob: -11.251187324523926
    4. '```' → logprob: -13.501187324523926
    5. '3' → logprob: -13.626187324523926
    6. '0' → logprob: -15.376187324523926
    7. '   ' → logprob: -15.626187324523926
    8. '=' → logprob: -16.18868637084961
    9. '4' → logprob: -16.37618637084961
    10. 's' → logprob: -16.62618637084961

Token 862: '].' (ID: 1651)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.16036690771579742
    2. '.' → logprob: -2.535367012023926
    3. ' .' → logprob: -2.910367012023926
    4. '().' → logprob: -4.285367012023926
    5. ').' → logprob: -8.035367012023926
    6. '].' → logprob: -8.160367012023926
    7. '.strip' → logprob: -9.785367012023926
    8. '.s' → logprob: -11.285367012023926
    9. '       ' → logprob: -11.785367012023926
    10. '.sp' → logprob: -12.035367012023926

Token 863: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1008713702030946e-06
    2. 'strip' → logprob: -13.250001907348633
    3. ' split' → logprob: -15.250001907348633
    4. '.split' → logprob: -22.375001907348633
    5. 'rstrip' → logprob: -22.750001907348633
    6. 'spl' → logprob: -23.250001907348633
    7. '(split' → logprob: -23.375001907348633
    8. '_split' → logprob: -24.750001907348633
    9. 's' → logprob: -25.375001907348633
    10. 'sp' → logprob: -26.000001907348633

Token 864: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013222652487456799
    2. '<|end|>' → logprob: -7.126322269439697
    3. '()' → logprob: -9.001321792602539
    4. '<|end|>' → logprob: -9.126321792602539
    5. ',' → logprob: -9.501321792602539
    6. '   ' → logprob: -9.626321792602539
    7. '
' → logprob: -10.001321792602539
    8. '	' → logprob: -10.001321792602539
    9. '           ' → logprob: -11.001321792602539
    10. '()
' → logprob: -11.876321792602539

Token 865: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01483942475169897
    2. 'idx' → logprob: -4.5148396492004395
    3. '   ' → logprob: -5.8898396492004395
    4. ' idx' → logprob: -7.2648396492004395
    5. '	idx' → logprob: -9.014839172363281
    6. '[idx' → logprob: -9.264839172363281
    7. '
' → logprob: -9.889839172363281
    8. '(idx' → logprob: -11.139839172363281
    9. '_idx' → logprob: -11.639839172363281
    10. '<|end|>' → logprob: -11.889839172363281

Token 866: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.00013655527436640114
    2. '       ' → logprob: -9.750136375427246
    3. ' idx' → logprob: -10.375136375427246
    4. '   ' → logprob: -10.625136375427246
    5. '	idx' → logprob: -10.875136375427246
    6. '_idx' → logprob: -12.750136375427246
    7. '[idx' → logprob: -15.250136375427246
    8. '
' → logprob: -15.750136375427246
    9. '```' → logprob: -15.875136375427246
    10. '(idx' → logprob: -16.625137329101562

Token 867: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00862521305680275
    2. ' +=' → logprob: -4.758625030517578
    3. '=' → logprob: -11.758625030517578
    4. '+' → logprob: -12.758625030517578
    5. '   ' → logprob: -17.383625030517578
    6. '+="' → logprob: -17.758625030517578
    7. ']+=' → logprob: -18.883625030517578
    8. '+='' → logprob: -19.008625030517578
    9. ' =' → logprob: -19.508625030517578
    10. '+=(' → logprob: -19.633625030517578

Token 868: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '۲' → logprob: -18.250001907348633
    5. '```' → logprob: -19.000001907348633
    6. '２' → logprob: -19.250001907348633
    7. '3' → logprob: -20.187501907348633
    8. '২' → logprob: -20.437501907348633
    9. '२' → logprob: -20.875001907348633
    10. '22' → logprob: -21.250001907348633

Token 869: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -19.75
    4. '۲' → logprob: -20.0
    5. '２' → logprob: -20.125
    6. '```' → logprob: -21.375
    7. '3' → logprob: -21.5625
    8. '২' → logprob: -22.1875
    9. '
' → logprob: -22.75
    10. '२' → logprob: -22.75

Token 870: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005032312474213541
    2. '   ' → logprob: -7.875503063201904
    3. '           ' → logprob: -10.125503540039062
    4. ',' → logprob: -10.750503540039062
    5. 'test' → logprob: -10.750503540039062
    6. '<|end|>' → logprob: -11.000503540039062
    7. '        
' → logprob: -12.000503540039062
    8. '
' → logprob: -12.500503540039062
    9. ' test' → logprob: -12.625503540039062
    10. '	' → logprob: -12.625503540039062

Token 871: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000822495436295867
    2. '   ' → logprob: -7.2508225440979
    3. 'test' → logprob: -9.500822067260742
    4. '           ' → logprob: -10.625822067260742
    5. '<|end|>' → logprob: -12.125822067260742
    6. '```' → logprob: -13.500822067260742
    7. ' test' → logprob: -13.875822067260742
    8. '      ' → logprob: -14.000822067260742
    9. '	' → logprob: -14.250822067260742
    10. '        
' → logprob: -14.250822067260742

Token 872: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' (adapté à ' test') → logprob: -0.0015587854431942105
    2. '       ' → logprob: -6.751558780670166
    3. ' test' → logprob: -8.001559257507324
    4. '   ' → logprob: -9.876559257507324
    5. '           ' → logprob: -13.376559257507324
    6. '	test' → logprob: -14.251559257507324
    7. '
' → logprob: -17.251558303833008
    8. '(test' → logprob: -17.501558303833008
    9. '[test' → logprob: -18.126558303833008
    10. ')test' → logprob: -18.251558303833008

Token 873: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -4.320199877838604e-07
    2. '_case' → logprob: -15.5
    3. 'cases' → logprob: -15.625
    4. '_' → logprob: -17.875
    5. '_codes' → logprob: -19.0
    6. 's' → logprob: -20.0
    7. ' cases' → logprob: -20.0
    8. '_cards' → logprob: -20.125
    9. '_calls' → logprob: -20.125
    10. 'case' → logprob: -20.375

Token 874: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002019878476858139
    2. '.' → logprob: -6.252019882202148
    3. '.app' → logprob: -9.877019882202148
    4. ' .' → logprob: -10.877019882202148
    5. '.ap' → logprob: -12.127019882202148
    6. '.extend' → logprob: -12.252019882202148
    7. '.add' → logprob: -12.627019882202148
    8. '.setdefault' → logprob: -13.377019882202148
    9. ').' → logprob: -13.627019882202148
    10. '       ' → logprob: -13.627019882202148

Token 875: '((' (ID: 2054)
  Prédit: '(initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -0.011186928488314152
    2. '(' → logprob: -4.7611870765686035
    3. '((' → logprob: -6.0111870765686035
    4. ' (' → logprob: -9.511186599731445
    5. '   ' → logprob: -10.511186599731445
    6. '(init' → logprob: -12.261186599731445
    7. '(tuple' → logprob: -12.511186599731445
    8. '(original' → logprob: -13.011186599731445
    9. '(input' → logprob: -13.011186599731445
    10. '(
' → logprob: -13.136186599731445

Token 876: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -2.2127087504486553e-05
    2. ' initial' → logprob: -10.750021934509277
    3. '(initial' → logprob: -14.375021934509277
    4. '   ' → logprob: -16.750022888183594
    5. '	initial' → logprob: -19.250022888183594
    6. '.initial' → logprob: -20.125022888183594
    7. '_initial' → logprob: -20.625022888183594
    8. '
' → logprob: -20.625022888183594
    9. 'initializer' → logprob: -20.875022888183594
    10. '       ' → logprob: -20.875022888183594

Token 877: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -3.273621405242011e-05
    2. 'cards' → logprob: -10.875032424926758
    3. '_cases' → logprob: -11.750032424926758
    4. '_lines' → logprob: -13.250032424926758
    5. '[' → logprob: -13.625032424926758
    6. 'Cards' → logprob: -14.000032424926758
    7. '(cards' → logprob: -14.750032424926758
    8. '(initial' → logprob: -15.000032424926758
    9. '_card' → logprob: -15.375032424926758
    10. 'initial' → logprob: -15.375032424926758

Token 878: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.62500286102295
    3. ',
' → logprob: -14.00000286102295
    4. ',d' → logprob: -15.25000286102295
    5. ',

' → logprob: -17.875001907348633
    6. '<|end|>' → logprob: -18.000001907348633
    7. '‌,' → logprob: -18.750001907348633
    8. ',\
' → logprob: -19.500001907348633
    9. ',p' → logprob: -20.250001907348633
    10. ',{
' → logprob: -20.375001907348633

Token 879: ' draw' (ID: 6174)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.04858794063329697
    2. ' draw' → logprob: -3.0485880374908447
    3. '   ' → logprob: -16.048587799072266
    4. '(draw' → logprob: -16.173587799072266
    5. ' ' → logprob: -16.298587799072266
    6. '	draw' → logprob: -16.423587799072266
    7. '    ' → logprob: -16.798587799072266
    8. ' ' → logprob: -17.673587799072266
    9. '.draw' → logprob: -17.673587799072266
    10. '_draw' → logprob: -18.048587799072266

Token 880: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: 0.0
    2. '_' → logprob: -17.5
    3. '_
' → logprob: -22.25
    4. ')' → logprob: -22.625
    5. '
' → logprob: -22.625
    6. ' _' → logprob: -22.875
    7. '```' → logprob: -22.875
    8. 'pile' → logprob: -23.125
    9. '-p' → logprob: -23.375
    10. ',_' → logprob: -23.375

Token 881: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.0007042104844003916
    2. 'il' → logprob: -7.750704288482666
    3. '_p' → logprob: -8.875703811645508
    4. '_' → logprob: -9.750703811645508
    5. 'le' → logprob: -10.125703811645508
    6. 'l' → logprob: -11.625703811645508
    7. 'p' → logprob: -11.875703811645508
    8. 'pile' → logprob: -12.125703811645508
    9. 'lie' → logprob: -12.125703811645508
    10. '_l' → logprob: -12.500703811645508

Token 882: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -9.77022064034827e-05
    2. 'cards' → logprob: -9.250097274780273
    3. 'Cards' → logprob: -14.625097274780273
    4. '_p' → logprob: -15.375097274780273
    5. ' cards' → logprob: -15.750097274780273
    6. '_c' → logprob: -16.375097274780273
    7. '_card' → logprob: -16.500097274780273
    8. ')_' → logprob: -16.500097274780273
    9. ')' → logprob: -16.625097274780273
    10. '_' → logprob: -17.000097274780273

Token 883: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16033023595809937
    2. '))
' → logprob: -1.9103302955627441
    3. ')' → logprob: -9.785329818725586
    4. '       ' → logprob: -10.410329818725586
    5. '   ' → logprob: -11.410329818725586
    6. '))

' → logprob: -12.910329818725586
    7. ')
' → logprob: -13.160329818725586
    8. '))
' → logprob: -13.285329818725586
    9. ' ))' → logprob: -13.410329818725586
    10. ' ))
' → logprob: -14.160329818725586

Token 884: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011227842420339584
    2. 'return' → logprob: -4.511227607727051
    3. ' return' → logprob: -8.63622760772705
    4. '	return' → logprob: -13.38622760772705
    5. '
' → logprob: -15.26122760772705
    6. '       ' → logprob: -15.63622760772705
    7. '{return' → logprob: -16.136228561401367
    8. '```' → logprob: -16.386228561401367
    9. '    
' → logprob: -16.511228561401367
    10. 'def' → logprob: -16.636228561401367

Token 885: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2021656632423401
    2. '   ' → logprob: -1.7021656036376953
    3. ' return' → logprob: -7.202165603637695
    4. '	return' → logprob: -11.952165603637695
    5. '       ' → logprob: -15.327165603637695
    6. '{return' → logprob: -15.577165603637695
    7. '
' → logprob: -16.702165603637695
    8. 'eturn' → logprob: -17.202165603637695
    9. ':return' → logprob: -17.327165603637695
    10. '    
' → logprob: -17.577165603637695

Token 886: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.0001234428636962548
    2. ' test' → logprob: -9.000123023986816
    3. '(test' → logprob: -18.250123977661133
    4. '[test' → logprob: -20.000123977661133
    5. '	test' → logprob: -23.000123977661133
    6. '=test' → logprob: -23.750123977661133
    7. '   ' → logprob: -24.250123977661133
    8. '@test' → logprob: -24.250123977661133
    9. '```' → logprob: -24.750123977661133
    10. ')test' → logprob: -25.125123977661133

Token 887: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -1.9361264946837764e-07
    2. '_case' → logprob: -16.25
    3. '_tests' → logprob: -17.75
    4. 'cases' → logprob: -19.125
    5. '_ca' → logprob: -19.625
    6. '_' → logprob: -20.25
    7. '_classes' → logprob: -20.5
    8. '_choices' → logprob: -20.875
    9. '_codes' → logprob: -21.0
    10. '_categories' → logprob: -21.125

Token 888: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029851263388991356
    2. 'if' → logprob: -3.529851198196411
    3. 'test' → logprob: -9.529850959777832
    4. '```' → logprob: -10.779850959777832
    5. '<|end|>' → logprob: -12.779850959777832
    6. ' if' → logprob: -13.279850959777832
    7. '
' → logprob: -13.404850959777832
    8. ' def' → logprob: -14.904850959777832
    9. '#' → logprob: -15.404850959777832
    10. 'for' → logprob: -15.654850959777832

Token 889: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3868711292743683
    2. 'def' → logprob: -1.136871099472046
    3. '```' → logprob: -16.011871337890625
    4. ' if' → logprob: -17.636871337890625
    5. 'test' → logprob: -19.511871337890625
    6. ' def' → logprob: -20.261871337890625
    7. 'for' → logprob: -20.511871337890625
    8. '#' → logprob: -21.636871337890625
    9. 'import' → logprob: -21.886871337890625
    10. '``' → logprob: -23.886871337890625

Token 890: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005552975926548243
    2. ' main' → logprob: -7.500555515289307
    3. 'run' → logprob: -13.000555038452148
    4. 'def' → logprob: -18.25055503845215
    5. '_main' → logprob: -18.25055503845215
    6. ' run' → logprob: -18.37555503845215
    7. '
' → logprob: -19.25055503845215
    8. '```' → logprob: -19.87555503845215
    9. '	main' → logprob: -20.00055503845215
    10. '__' → logprob: -20.62555503845215

Token 891: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.7432603272027336e-06
    2. '():
' → logprob: -13.500001907348633
    3. ' ():' → logprob: -15.125001907348633
    4. '()' → logprob: -17.500001907348633
    5. '()>' → logprob: -17.625001907348633
    6. '():
' → logprob: -18.625001907348633
    7. '().' → logprob: -19.500001907348633
    8. ':' → logprob: -20.125001907348633
    9. '();' → logprob: -20.375001907348633
    10. '():

' → logprob: -20.500001907348633

Token 892: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008417880744673312
    2. 'test' → logprob: -7.1258416175842285
    3. ' test' → logprob: -10.375842094421387
    4. 'import' → logprob: -12.500842094421387
    5. 'def' → logprob: -14.000842094421387
    6. '	test' → logprob: -14.125842094421387
    7. '   ' → logprob: -15.125842094421387
    8. '```' → logprob: -15.750842094421387
    9. '(test' → logprob: -16.62584114074707
    10. '
' → logprob: -16.62584114074707

Token 893: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' (adapté à ' test') → logprob: -0.10803330689668655
    2. ' test' → logprob: -2.3580334186553955
    3. '   ' → logprob: -4.858033180236816
    4. 'import' → logprob: -10.483033180236816
    5. ' import' → logprob: -13.858033180236816
    6. '	test' → logprob: -13.983033180236816
    7. ' ' → logprob: -15.233033180236816
    8. 'tests' → logprob: -15.858033180236816
    9. '
' → logprob: -16.108034133911133
    10. '  ' → logprob: -16.858034133911133

Token 894: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.375000953674316
    3. 'cases' → logprob: -15.500000953674316
    4. '_tests' → logprob: -16.000001907348633
    5. '_case' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '```' → logprob: -18.125001907348633
    8. 's' → logprob: -19.000001907348633
    9. '_choices' → logprob: -19.125001907348633
    10. ' _' → logprob: -19.250001907348633

Token 895: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022422909736633
    2. '=' → logprob: -1.910224199295044
    3. '=test' → logprob: -16.66022491455078
    4. '=parse' → logprob: -17.16022491455078
    5. ' ' → logprob: -17.53522491455078
    6. ' =
' → logprob: -18.53522491455078
    7. '=create' → logprob: -18.66022491455078
    8. ' ' → logprob: -18.66022491455078
    9. '   ' → logprob: -18.91022491455078
    10. '＝' → logprob: -19.16022491455078

Token 896: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.011047814972698689
    2. ' parse' → logprob: -4.511047840118408
    3. '(parse' → logprob: -17.88604736328125
    4. '=parse' → logprob: -18.38604736328125
    5. '	parse' → logprob: -19.26104736328125
    6. '   ' → logprob: -20.76104736328125
    7. '.parse' → logprob: -21.88604736328125
    8. '_parse' → logprob: -23.13604736328125
    9. 'parser' → logprob: -24.01104736328125
    10. '
' → logprob: -24.51104736328125

Token 897: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. 'input' → logprob: -17.5
    4. '_in' → logprob: -18.75
    5. '_output' → logprob: -19.0
    6. '_inputs' → logprob: -19.25
    7. '_
' → logprob: -19.5
    8. '```' → logprob: -20.0
    9. ' _' → logprob: -20.375
    10. '_INPUT' → logprob: -20.75

Token 898: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010077036917209625
    2. '
' → logprob: -4.760076999664307
    3. '<|end|>' → logprob: -7.260076999664307
    4. '    
' → logprob: -8.010077476501465
    5. 'game' → logprob: -8.510077476501465
    6. '  ' → logprob: -10.010077476501465
    7. '	game' → logprob: -10.385077476501465
    8. '  
' → logprob: -10.760077476501465
    9. 'sim' → logprob: -10.885077476501465
    10. ' ' → logprob: -10.885077476501465

Token 899: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5927954316139221
    2. 'sim' → logprob: -0.8427954316139221
    3. ' simulator' → logprob: -4.967795372009277
    4. ' sim' → logprob: -5.342795372009277
    5. 'game' → logprob: -5.842795372009277
    6. 'results' → logprob: -6.967795372009277
    7. ' results' → logprob: -7.217795372009277
    8. ' game' → logprob: -8.467795372009277
    9. 'simulation' → logprob: -9.842795372009277
    10. 'result' → logprob: -9.967795372009277

Token 900: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.007751556113362312
    2. 'results' → logprob: -5.50775146484375
    3. 'game' → logprob: -5.88275146484375
    4. ' simulator' → logprob: -7.13275146484375
    5. ' sim' → logprob: -10.63275146484375
    6. 'simulation' → logprob: -10.63275146484375
    7. ' results' → logprob: -10.88275146484375
    8. '   ' → logprob: -12.13275146484375
    9. 's' → logprob: -12.88275146484375
    10. 'result' → logprob: -13.13275146484375

Token 901: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023929167538881302
    2. '=' → logprob: -3.7739291191101074
    3. '.' → logprob: -7.523929119110107
    4. '.sim' → logprob: -8.898929595947266
    5. '.=' → logprob: -12.398929595947266
    6. '<|end|>' → logprob: -14.148929595947266
    7. ' ' → logprob: -14.898929595947266
    8. 's' → logprob: -15.523929595947266
    9. '	' → logprob: -15.523929595947266
    10. '.run' → logprob: -15.648929595947266

Token 902: ' Blackjack' (ID: 65292)
  Prédit: 'Black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Black' → logprob: -0.0017073206836357713
    2. ' Blackjack' → logprob: -6.501707553863525
    3. ' Black' → logprob: -8.501707077026367
    4. 'Blacklist' → logprob: -13.376707077026367
    5. '.Black' → logprob: -16.251707077026367
    6. ' blackjack' → logprob: -16.501707077026367
    7. '_black' → logprob: -16.751707077026367
    8. '_Bl' → logprob: -17.001707077026367
    9. 'ブラック' → logprob: -18.251707077026367
    10. 'black' → logprob: -18.626707077026367

Token 903: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: 0.0
    2. '_Game' → logprob: -19.25
    3. '_game' → logprob: -19.25
    4. 'game' → logprob: -19.375
    5. '	Game' → logprob: -22.0
    6. 'Games' → logprob: -22.0
    7. ' Game' → logprob: -22.125
    8. '<Game' → logprob: -22.5
    9. ' game' → logprob: -22.875
    10. 'Black' → logprob: -23.5

Token 904: 'Simulator' (ID: 120745)
  Prédit: 'Simulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simulator' → logprob: -2.045823566731997e-05
    2. 'imulator' → logprob: -10.875020027160645
    3. 'Game' → logprob: -14.125020027160645
    4. 'ulator' → logprob: -15.000020027160645
    5. 'Sim' → logprob: -16.00002098083496
    6. 'ator' → logprob: -16.00002098083496
    7. 'sim' → logprob: -16.87502098083496
    8. ' Simulator' → logprob: -16.87502098083496
    9. ' simulator' → logprob: -17.50002098083496
    10. 'urator' → logprob: -19.50002098083496

Token 905: '(test' (ID: 16066)
  Prédit: '(test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(test' → logprob: -1.5094070477061905e-05
    2. '(sim' → logprob: -11.375015258789062
    3. '(' → logprob: -12.875015258789062
    4. 'test' → logprob: -14.875015258789062
    5. ' (' → logprob: -15.000015258789062
    6. '   ' → logprob: -15.625015258789062
    7. '(t' → logprob: -16.000015258789062
    8. '(
' → logprob: -16.250015258789062
    9. '(train' → logprob: -17.125015258789062
    10. '=test' → logprob: -18.625015258789062

Token 906: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -3.128163257315464e-07
    2. 'cases' → logprob: -15.875
    3. '_classes' → logprob: -17.25
    4. '_codes' → logprob: -18.125
    5. '```' → logprob: -18.75
    6. 's' → logprob: -19.125
    7. '_' → logprob: -19.375
    8. '_tests' → logprob: -20.0
    9. '(_' → logprob: -20.25
    10. '_ca' → logprob: -20.375

Token 907: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05594797432422638
    2. '   ' → logprob: -2.93094801902771
    3. ')
' → logprob: -7.680947780609131
    4. ').' → logprob: -7.805947780609131
    5. ' ' → logprob: -10.180948257446289
    6. '<|end|>' → logprob: -10.180948257446289
    7. '  ' → logprob: -10.805948257446289
    8. '.sim' → logprob: -11.055948257446289
    9. '(sim' → logprob: -11.180948257446289
    10. ' )' → logprob: -11.430948257446289

Token 908: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0494200624525547
    2. 'results' → logprob: -3.049420118331909
    3. ' results' → logprob: -7.29941987991333
    4. 'print' → logprob: -9.049420356750488
    5. 'result' → logprob: -10.799420356750488
    6. 'for' → logprob: -11.174420356750488
    7. '	results' → logprob: -13.299420356750488
    8. ' for' → logprob: -14.174420356750488
    9. 'outputs' → logprob: -14.174420356750488
    10. ' print' → logprob: -14.549420356750488

Token 909: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0006858677952550352
    2. ' results' → logprob: -7.500685691833496
    3. 'print' → logprob: -9.000685691833496
    4. 'result' → logprob: -11.750685691833496
    5. '   ' → logprob: -13.625685691833496
    6. 'for' → logprob: -14.875685691833496
    7. 'outputs' → logprob: -16.125686645507812
    8. ' print' → logprob: -17.000686645507812
    9. '	results' → logprob: -17.750686645507812
    10. 'output' → logprob: -18.375686645507812

Token 910: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31333237886428833
    2. '=' → logprob: -1.3133323192596436
    3. '.' → logprob: -9.813332557678223
    4. ' ' → logprob: -11.563332557678223
    5. '.append' → logprob: -13.438332557678223
    6. '.extend' → logprob: -13.813332557678223
    7. '   ' → logprob: -14.063332557678223
    8. ' =
' → logprob: -14.563332557678223
    9. '[:]' → logprob: -14.688332557678223
    10. '.=' → logprob: -14.813332557678223

Token 911: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.00861930102109909
    2. ' simulator' → logprob: -4.75861930847168
    3. ' sim' → logprob: -12.63361930847168
    4. '(sim' → logprob: -13.75861930847168
    5. ' simul' → logprob: -15.13361930847168
    6. '   ' → logprob: -17.25861930847168
    7. 'simulate' → logprob: -17.38361930847168
    8. '.sim' → logprob: -17.50861930847168
    9. 'simulation' → logprob: -17.50861930847168
    10. '_sim' → logprob: -17.63361930847168

Token 912: '.sim' (ID: 58713)
  Prédit: '.sim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sim' → logprob: -0.0004350797680672258
    2. '.' → logprob: -7.750434875488281
    3. ' .' → logprob: -13.750434875488281
    4. 'simulate' → logprob: -13.750434875488281
    5. '.play' → logprob: -13.875434875488281
    6. '.s' → logprob: -14.375434875488281
    7. '.run' → logprob: -15.500434875488281
    8. '.predict' → logprob: -16.25043487548828
    9. '.execute' → logprob: -16.37543487548828
    10. '.perform' → logprob: -16.50043487548828

Token 913: 'ulate' (ID: 10111)
  Prédit: 'ulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -1.9361264946837764e-07
    2. 'utate' → logprob: -17.375
    3. 'ul' → logprob: -17.625
    4. 'ate' → logprob: -18.5
    5. 'uate' → logprob: -19.0
    6. 'late' → logprob: -19.625
    7. 'ulates' → logprob: -19.625
    8. 'ulat' → logprob: -19.75
    9. 'ilate' → logprob: -19.75
    10. 'ulator' → logprob: -19.875

Token 914: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004243654664605856
    2. '
' → logprob: -5.629243850708008
    3. 'for' → logprob: -7.504243850708008
    4. '    
' → logprob: -9.879243850708008
    5. ' for' → logprob: -10.129243850708008
    6. '	for' → logprob: -14.254243850708008
    7. '<|end|>' → logprob: -15.629243850708008
    8. '  
' → logprob: -15.879243850708008
    9. '
' → logprob: -15.879243850708008
    10. '[' → logprob: -16.629243850708008

Token 915: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019389885710552335
    2. 'for' → logprob: -6.251938819885254
    3. ' for' → logprob: -11.501938819885254
    4. '	for' → logprob: -15.376938819885254
    5. 'print' → logprob: -18.12693977355957
    6. 'import' → logprob: -19.50193977355957
    7. '    
' → logprob: -19.50193977355957
    8. '       ' → logprob: -19.75193977355957
    9. '```' → logprob: -19.75193977355957
    10. '
' → logprob: -20.00193977355957

Token 916: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006736691575497389
    2. '   ' → logprob: -5.006736755371094
    3. ' for' → logprob: -11.006736755371094
    4. '
' → logprob: -12.506736755371094
    5. '	for' → logprob: -14.006736755371094
    6. 'print' → logprob: -15.756736755371094
    7. 'import' → logprob: -16.881736755371094
    8. '    
' → logprob: -17.381736755371094
    9. '```' → logprob: -18.381736755371094
    10. ' ' → logprob: -20.756736755371094

Token 917: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.009534601122140884
    2. ' result' → logprob: -4.75953483581543
    3. 'res' → logprob: -7.00953483581543
    4. 'r' → logprob: -11.50953483581543
    5. ' res' → logprob: -12.00953483581543
    6. ' r' → logprob: -15.75953483581543
    7. '	result' → logprob: -18.38453483581543
    8. '   ' → logprob: -20.13453483581543
    9. '(result' → logprob: -20.63453483581543
    10. '_result' → logprob: -20.75953483581543

Token 918: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005935082212090492
    2. 'in' → logprob: -5.130935192108154
    3. '   ' → logprob: -12.755934715270996
    4. ',' → logprob: -13.255934715270996
    5. '_in' → logprob: -14.005934715270996
    6. 'import' → logprob: -15.005934715270996
    7. '	in' → logprob: -15.130934715270996
    8. '.' → logprob: -16.505935668945312
    9. '()' → logprob: -16.630935668945312
    10. '_' → logprob: -16.880935668945312

Token 919: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.001170225441455841
    2. ' results' → logprob: -6.7511701583862305
    3. '(results' → logprob: -18.501171112060547
    4. '	results' → logprob: -20.501171112060547
    5. 'result' → logprob: -21.001171112060547
    6. '.results' → logprob: -22.376171112060547
    7. '
' → logprob: -23.626171112060547
    8. '   ' → logprob: -24.251171112060547
    9. '_results' → logprob: -24.376171112060547
    10. 'Results' → logprob: -24.501171112060547

Token 920: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36726340651512146
    2. '       ' → logprob: -1.3672634363174438
    3. ':
' → logprob: -2.9922633171081543
    4. '   ' → logprob: -6.992263317108154
    5. ',' → logprob: -7.617263317108154
    6. '.' → logprob: -8.242263793945312
    7. '<|end|>' → logprob: -8.617263793945312
    8. 'print' → logprob: -8.992263793945312
    9. '():
' → logprob: -9.242263793945312
    10. '```' → logprob: -9.617263793945312

Token 921: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012475410767365247
    2. 'print' → logprob: -9.00012493133545
    3. ' print' → logprob: -14.12512493133545
    4. '   ' → logprob: -14.50012493133545
    5. '```' → logprob: -15.87512493133545
    6. '           ' → logprob: -18.875123977661133
    7. '
' → logprob: -19.000123977661133
    8. '	print' → logprob: -20.000123977661133
    9. '        
' → logprob: -20.125123977661133
    10. '	' → logprob: -20.250123977661133

Token 922: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00013202552509028465
    2. '   ' → logprob: -9.000131607055664
    3. ' print' → logprob: -12.000131607055664
    4. '       ' → logprob: -13.000131607055664
    5. '```' → logprob: -16.875131607055664
    6. '	print' → logprob: -18.375131607055664
    7. '           ' → logprob: -22.125131607055664
    8. '``' → logprob: -22.250131607055664
    9. 'println' → logprob: -22.875131607055664
    10. '
' → logprob: -23.125131607055664

Token 923: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. 'result' → logprob: -16.5
    4. '(results' → logprob: -19.875
    5. '=result' → logprob: -19.875
    6. '(
' → logprob: -21.625
    7. '(res' → logprob: -21.875
    8. '(f' → logprob: -22.0
    9. ',result' → logprob: -22.125
    10. ' (' → logprob: -22.125

Token 924: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.625000953674316
    3. '()' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.875
    5. ' )' → logprob: -16.875
    6. '())' → logprob: -16.875
    7. ')`' → logprob: -18.875
    8. '),' → logprob: -19.25
    9. '}' → logprob: -20.0
    10. '')' → logprob: -20.125

Token 925: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0280383548888494e-06
    2. ' if' → logprob: -13.875000953674316
    3. '```' → logprob: -17.000001907348633
    4. 'main' → logprob: -18.875001907348633
    5. '#' → logprob: -19.750001907348633
    6. '	if' → logprob: -21.625001907348633
    7. '
' → logprob: -21.625001907348633
    8. '#if' → logprob: -22.250001907348633
    9. 'If' → logprob: -22.500001907348633
    10. '\n' → logprob: -22.625001907348633

Token 926: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.42897123098373413
    2. ' __' → logprob: -1.053971290588379
    3. '_name' → logprob: -9.303971290588379
    4. '_' → logprob: -9.678971290588379
    5. 'name' → logprob: -10.053971290588379
    6. '___' → logprob: -10.053971290588379
    7. ' ' → logprob: -11.053971290588379
    8. '​' → logprob: -12.553971290588379
    9. ' ' → logprob: -12.553971290588379
    10. 'Name' → logprob: -13.678971290588379

Token 927: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014612720347940922
    2. ' __' → logprob: -4.639612674713135
    3. ' ==' → logprob: -5.514612674713135
    4. '==' → logprob: -7.389612674713135
    5. 'name' → logprob: -10.014613151550293
    6. '_' → logprob: -10.139613151550293
    7. '_main' → logprob: -10.889613151550293
    8. '_name' → logprob: -11.139613151550293
    9. '.__' → logprob: -11.139613151550293
    10. '=="' → logprob: -11.514613151550293

Token 928: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.6240566083070007e-06
    2. '==' → logprob: -13.625001907348633
    3. '__.__' → logprob: -16.375001907348633
    4. ' ==' → logprob: -16.500001907348633
    5. '_' → logprob: -17.000001907348633
    6. '___' → logprob: -17.500001907348633
    7. '____' → logprob: -17.625001907348633
    8. ' __' → logprob: -18.125001907348633
    9. '__
' → logprob: -18.500001907348633
    10. 'name' → logprob: -18.875001907348633

Token 929: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.056134846061468124
    2. '__' → logprob: -3.6811349391937256
    3. ' ==' → logprob: -3.8061349391937256
    4. '=="' → logprob: -5.0561347007751465
    5. '=='' → logprob: -7.9311347007751465
    6. '=' → logprob: -7.9311347007751465
    7. '_' → logprob: -10.681135177612305
    8. '===' → logprob: -10.681135177612305
    9. '==
' → logprob: -11.431135177612305
    10. '==="' → logprob: -12.556135177612305

Token 930: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02975570224225521
    2. ''' → logprob: -3.5297555923461914
    3. ' "__' → logprob: -12.779755592346191
    4. '__' → logprob: -13.154755592346191
    5. ''"' → logprob: -15.404755592346191
    6. ' '__' → logprob: -15.904755592346191
    7. '"name' → logprob: -16.654756546020508
    8. '"'' → logprob: -17.654756546020508
    9. '"user' → logprob: -17.654756546020508
    10. '"class' → logprob: -17.904756546020508

Token 931: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003196965903043747
    2. '__' → logprob: -5.753197193145752
    3. '_main' → logprob: -10.878196716308594
    4. 'built' → logprob: -16.003196716308594
    5. 'name' → logprob: -16.128196716308594
    6. ' main' → logprob: -16.878196716308594
    7. '_MAIN' → logprob: -17.253196716308594
    8. 'print' → logprob: -18.253196716308594
    9. '主' → logprob: -18.253196716308594
    10. '"' → logprob: -18.378196716308594

Token 932: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04878368601202965
    2. '__' → logprob: -3.048783779144287
    3. '__':
' → logprob: -8.548783302307129
    4. '__
' → logprob: -13.923783302307129
    5. '__["' → logprob: -15.048783302307129
    6. '_' → logprob: -15.048783302307129
    7. '__.__' → logprob: -15.298783302307129
    8. '__.' → logprob: -15.548783302307129
    9. '__:' → logprob: -15.798783302307129
    10. '__
' → logprob: -16.048784255981445

Token 933: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.056810617446899414
    2. 'main' → logprob: -3.1818106174468994
    3. '"' → logprob: -4.68181037902832
    4. ''' → logprob: -5.80681037902832
    5. '   ' → logprob: -7.93181037902832
    6. '____' → logprob: -8.05681037902832
    7. '__":
' → logprob: -8.30681037902832
    8. '___' → logprob: -8.55681037902832
    9. '_main' → logprob: -9.05681037902832
    10. '__':
' → logprob: -9.43181037902832

Token 934: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -20.25
    4. '   ' → logprob: -22.5
    5. '_main' → logprob: -22.875
    6. 'import' → logprob: -23.375
    7. '.main' → logprob: -23.75
    8. '(main' → logprob: -25.875
    9. 'Main' → logprob: -26.875
    10. 'mai' → logprob: -27.75

Token 935: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 933
Tokens correctement prédits (1ère position, stricte): 487
Tokens correctement prédits (1ère position, avec adaptation): 534
Tokens correctement prédits (top 10): 840
Précision stricte (1ère position): 52.20%
Précision adaptée (1ère position): 57.23%
Précision (top 10): 90.03%
================================================================================
