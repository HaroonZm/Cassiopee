================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    import sys
    input = sys.stdin.readline

    while True:
        n, m, t, p = map(int, input().split())
        if n == 0 and m == 0 and t == 0 and p == 0:
            break
        folds = [tuple(map(int, input().split())) for _ in range(t)]
        punches = [tuple(map(int, input().split())) for _ in range(p)]

        width, height = n, m

        for dx, dy in punches:
            # For each punch, start with a single point at (dx, dy) with count=1
            points = {(dx, dy): 1}
            w, h = width, height
            # Apply folds in reverse order (simulate unfolding)
            for d_i, c_i in reversed(folds):
                new_points = dict()
                if d_i == 1:
                    # vertical fold at c_i from left fold onto right
                    for (x, y), cnt in points.items():
                        if x >= c_i:
                            # right side stays
                            new_points[(x, y)] = new_points.get((x, y), 0) + cnt
                        else:
                            # left side is mirrored onto right
                            x_mirror = 2*c_i - x - 1
                            new_points[(x, y)] = new_points.get((x, y), 0) + cnt
                            new_points[(x_mirror, y)] = new_points.get((x_mirror, y), 0) + cnt
                    w = c_i * 2
                else:
                    # horizontal fold at c_i from bottom fold onto top
                    for (x, y), cnt in points.items():
                        if y >= c_i:
                            # top side stays
                            new_points[(x, y)] = new_points.get((x, y), 0) + cnt
                        else:
                            # bottom side is mirrored onto top
                            y_mirror = 2*c_i - y - 1
                            new_points[(x, y)] = new_points.get((x, y), 0) + cnt
                            new_points[(x, y_mirror)] = new_points.get((x, y_mirror), 0) + cnt
                    h = c_i * 2
                points = new_points
            # After unfolding all folds, sum counts on all initial paper coordinates
            # sum counts of all points found after unfolding jumps
            total = 0
            for (x, y), cnt in points.items():
                # if inside original paper dimensions add count
                if 0 <= x < n and 0 <= y < m:
                    total += cnt
            print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8254364728927612
    2. '\n' → logprob: -1.3254364728927612
    3. '\' → logprob: -1.4504364728927612
    4. '```' → logprob: -3.325436592102051
    5. '    
' → logprob: -4.450436592102051
    6. ':' → logprob: -5.700436592102051
    7. '    ' → logprob: -6.200436592102051
    8. '(' → logprob: -6.575436592102051
    9. '\r' → logprob: -6.700436592102051
    10. ' 
' → logprob: -6.950436592102051

Token 4: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8133214712142944
    2. '   ' → logprob: -1.9383214712142944
    3. 'x' → logprob: -2.438321590423584
    4. '    ' → logprob: -2.688321590423584
    5. ' ' → logprob: -2.813321590423584
    6. '\n' → logprob: -3.313321590423584
    7. '\' → logprob: -3.563321590423584
    8. ' pass' → logprob: -3.563321590423584
    9. '#' → logprob: -3.938321590423584
    10. 'pass' → logprob: -4.188321590423584

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.03070881776511669
    2. ' math' → logprob: -3.5307087898254395
    3. ' ' → logprob: -7.7807087898254395
    4. ' os' → logprob: -8.280709266662598
    5. ' itertools' → logprob: -9.030709266662598
    6. ' numpy' → logprob: -9.530709266662598
    7. 'sys' → logprob: -10.155709266662598
    8. '=sys' → logprob: -11.280709266662598
    9. ' functools' → logprob: -11.405709266662598
    10. ' collections' → logprob: -11.780709266662598

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8667811155319214
    2. '\' → logprob: -1.3667811155319214
    3. '.readline' → logprob: -1.7417811155319214
    4. '   ' → logprob: -3.366781234741211
    5. '```' → logprob: -3.366781234741211
    6. '.' → logprob: -3.866781234741211
    7. 'newline' → logprob: -4.116781234741211
    8. '.stdout' → logprob: -4.366781234741211
    9. '.stdin' → logprob: -4.366781234741211
    10. '
' → logprob: -6.241781234741211

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7744858264923096
    2. '\n' → logprob: -1.5244858264923096
    3. '.readline' → logprob: -2.6494858264923096
    4. 'newline' → logprob: -2.6494858264923096
    5. '\' → logprob: -3.3994858264923096
    6. '
' → logprob: -3.5244858264923096
    7. '.' → logprob: -3.7744858264923096
    8. 'input' → logprob: -4.0244855880737305
    9. '```' → logprob: -4.2744855880737305
    10. '    
' → logprob: -4.3994855880737305

Token 8: ' input' (ID: 3422)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8800126910209656
    2. '   ' → logprob: -1.0050127506256104
    3. '\' → logprob: -2.5050127506256104
    4. 'newline' → logprob: -3.1300127506256104
    5. 'input' (adapté à ' input') → logprob: -4.380012512207031
    6. '    ' → logprob: -4.380012512207031
    7. '\r' → logprob: -4.755012512207031
    8. '.readline' → logprob: -4.880012512207031
    9. '       ' → logprob: -4.880012512207031
    10. '.' → logprob: -5.005012512207031

Token 9: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16370533406734467
    2. '(' → logprob: -1.9137053489685059
    3. '.readline' → logprob: -6.538705348968506
    4. ')' → logprob: -7.038705348968506
    5. '()' → logprob: -7.788705348968506
    6. '<|end|>' → logprob: -8.788704872131348
    7. '[' → logprob: -9.288704872131348
    8. '<|end|>' → logprob: -9.538704872131348
    9. '```' → logprob: -10.038704872131348
    10. '(.)' → logprob: -10.163704872131348

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.005235887598246336
    2. 'sys' → logprob: -5.25523567199707
    3. '=sys' → logprob: -14.00523567199707
    4. '	sys' → logprob: -14.25523567199707
    5. '(sys' → logprob: -14.50523567199707
    6. ' input' → logprob: -16.13023567199707
    7. ' ' → logprob: -17.00523567199707
    8. 'input' → logprob: -17.88023567199707
    9. '   ' → logprob: -19.25523567199707
    10. '_sys' → logprob: -19.88023567199707

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03406507149338722
    2. '.readline' → logprob: -3.409065008163452
    3. '.stdin' → logprob: -9.159065246582031
    4. '.read' → logprob: -9.409065246582031
    5. ' .' → logprob: -10.034065246582031
    6. '.setdefault' → logprob: -10.534065246582031
    7. '.stdout' → logprob: -10.784065246582031
    8. ''.' → logprob: -11.034065246582031
    9. '[' → logprob: -11.159065246582031
    10. '```' → logprob: -11.409065246582031

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0033889797050505877
    2. '.read' → logprob: -6.00338888168335
    3. '.' → logprob: -7.00338888168335
    4. '.readlines' → logprob: -12.628389358520508
    5. '.buffer' → logprob: -14.878389358520508
    6. '.Read' → logprob: -15.378389358520508
    7. '.stdin' → logprob: -16.878389358520508
    8. 'read' → logprob: -17.253389358520508
    9. ' .' → logprob: -17.753389358520508
    10. '.reader' → logprob: -18.128389358520508

Token 13: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0062076011672616005
    2. '()
' → logprob: -5.631207466125488
    3. '(' → logprob: -6.006207466125488
    4. '()\' → logprob: -10.131207466125488
    5. '(
' → logprob: -10.256207466125488
    6. '()

' → logprob: -10.506207466125488
    7. '().' → logprob: -11.381207466125488
    8. ' ()' → logprob: -12.006207466125488
    9. '
' → logprob: -12.131207466125488
    10. '   ' → logprob: -12.131207466125488

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6232042908668518
    2. 'n' → logprob: -0.8732042908668518
    3. '(' → logprob: -3.498204231262207
    4. '(n' → logprob: -5.123204231262207
    5. 'x' → logprob: -5.373204231262207
    6. ' n' → logprob: -6.998204231262207
    7. 'a' → logprob: -6.998204231262207
    8. 'd' → logprob: -7.248204231262207
    9. 't' → logprob: -7.373204231262207
    10. '()' → logprob: -7.498204231262207

Token 15: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004193198401480913
    2. 't' → logprob: -5.504193305969238
    3. 'N' → logprob: -10.004193305969238
    4. 'x' → logprob: -10.504193305969238
    5. 'T' → logprob: -10.879193305969238
    6. '   ' → logprob: -11.754193305969238
    7. 'a' → logprob: -12.129193305969238
    8. 'd' → logprob: -12.379193305969238
    9. 'q' → logprob: -13.129193305969238
    10. 'data' → logprob: -13.379193305969238

Token 16: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0027253483422100544
    2. 'True' → logprob: -6.002725124359131
    3. '(True' → logprob: -8.877725601196289
    4. ' ' → logprob: -9.377725601196289
    5. ' not' → logprob: -11.127725601196289
    6. '(' → logprob: -12.502725601196289
    7. ' (' → logprob: -13.127725601196289
    8. ' true' → logprob: -14.127725601196289
    9. '    ' → logprob: -14.252725601196289
    10. '<|end|>' → logprob: -14.377725601196289

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026722528040409088
    2. '():' → logprob: -3.6517224311828613
    3. ':**' → logprob: -8.65172290802002
    4. '):' → logprob: -9.15172290802002
    5. ' :' → logprob: -9.40172290802002
    6. ' ():' → logprob: -10.77672290802002
    7. '   ' → logprob: -11.90172290802002
    8. '(' → logprob: -11.90172290802002
    9. '(:' → logprob: -12.27672290802002
    10. ',' → logprob: -12.65172290802002

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01004847139120102
    2. '    ' → logprob: -5.3850483894348145
    3. ' ' → logprob: -5.6350483894348145
    4. '   ' → logprob: -7.2600483894348145
    5. '        
' → logprob: -7.7600483894348145
    6. '      ' → logprob: -8.260048866271973
    7. '        ' → logprob: -9.010048866271973
    8. '<|end|>' → logprob: -9.385048866271973
    9. '     ' → logprob: -9.760048866271973
    10. '  ' → logprob: -10.135048866271973

Token 19: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.08272790163755417
    2. 'line' → logprob: -2.7077279090881348
    3. ' n' → logprob: -5.582727909088135
    4. '   ' → logprob: -5.832727909088135
    5. 'n' (adapté à ' n') → logprob: -6.082727909088135
    6. ' data' → logprob: -6.707727909088135
    7. 'data' → logprob: -6.832727909088135
    8. '       ' → logprob: -7.332727909088135
    9. 's' → logprob: -8.207727432250977
    10. '    ' → logprob: -8.957727432250977

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033721085637807846
    2. '=' → logprob: -3.4087209701538086
    3. ' ==' → logprob: -9.908720970153809
    4. '=int' → logprob: -11.408720970153809
    5. ' ' → logprob: -12.033720970153809
    6. ' >' → logprob: -12.658720970153809
    7. '=input' → logprob: -13.908720970153809
    8. ' =)' → logprob: -13.908720970153809
    9. '>' → logprob: -14.158720970153809
    10. ' =
' → logprob: -14.783720970153809

Token 21: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5783271193504333
    2. 'm' → logprob: -0.8283271193504333
    3. ' ' → logprob: -6.828327178955078
    4. '=' → logprob: -7.953327178955078
    5. ' =' → logprob: -8.328327178955078
    6. ' k' → logprob: -8.453327178955078
    7. 'space' → logprob: -9.078327178955078
    8. 'k' → logprob: -9.078327178955078
    9. ' s' → logprob: -10.078327178955078
    10. 's' → logprob: -10.453327178955078

Token 22: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022787988185883
    2. '=' → logprob: -1.91022789478302
    3. ',' → logprob: -13.16022777557373
    4. ')' → logprob: -13.78522777557373
    5. ' ' → logprob: -14.78522777557373
    6. '<|end|>' → logprob: -16.035228729248047
    7. '=input' → logprob: -16.535228729248047
    8. '=line' → logprob: -16.910228729248047
    9. '    ' → logprob: -17.035228729248047
    10. '=int' → logprob: -17.535228729248047

Token 23: ' t' (ID: 260)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5254740118980408
    2. 'k' → logprob: -1.7754740715026855
    3. ' p' → logprob: -1.9004740715026855
    4. ' ' → logprob: -3.0254740715026855
    5. 'p' → logprob: -4.6504740715026855
    6. ' =' → logprob: -5.0254740715026855
    7. ' s' → logprob: -5.1504740715026855
    8. ' c' → logprob: -5.5254740715026855
    9. ' q' → logprob: -5.9004740715026855
    10. ' t' → logprob: -6.2754740715026855

Token 24: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326648592948914
    2. '=' → logprob: -1.3132665157318115
    3. ',' → logprob: -12.68826675415039
    4. ')' → logprob: -13.68826675415039
    5. ' ' → logprob: -15.18826675415039
    6. '>' → logprob: -16.31326675415039
    7. '＝' → logprob: -17.31326675415039
    8. '=line' → logprob: -17.31326675415039
    9. '[' → logprob: -17.43826675415039
    10. '    ' → logprob: -17.68826675415039

Token 25: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.174465298652649
    2. 'c' → logprob: -1.924465298652649
    3. 'h' → logprob: -2.2994651794433594
    4. 's' → logprob: -2.4244651794433594
    5. 'l' → logprob: -2.4244651794433594
    6. 'k' → logprob: -2.5494651794433594
    7. 'r' → logprob: -3.2994651794433594
    8. 'b' → logprob: -3.4244651794433594
    9. 'd' → logprob: -3.5494651794433594
    10. 'q' → logprob: -4.174465179443359

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. ',' → logprob: -14.443148612976074
    4. ')' → logprob: -14.943148612976074
    5. ' ' → logprob: -15.193148612976074
    6. '    ' → logprob: -16.568147659301758
    7. '   ' → logprob: -16.818147659301758
    8. '=line' → logprob: -17.068147659301758
    9. '=input' → logprob: -17.318147659301758
    10. '  ' → logprob: -17.568147659301758

Token 27: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5761732459068298
    2. 'map' → logprob: -0.8261732459068298
    3. 'input' → logprob: -8.951172828674316
    4. '[' → logprob: -10.201172828674316
    5. ' input' → logprob: -10.201172828674316
    6. '(map' → logprob: -11.451172828674316
    7. 'list' → logprob: -11.826172828674316
    8. ' list' → logprob: -12.326172828674316
    9. ' ' → logprob: -12.826172828674316
    10. '	map' → logprob: -13.076172828674316

Token 28: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07146157324314117
    2. '<|end|>' → logprob: -3.3214616775512695
    3. '(lambda' → logprob: -3.8214616775512695
    4. '(int' → logprob: -4.6964616775512695
    5. '(str' → logprob: -7.8214616775512695
    6. '<|end|>' → logprob: -8.19646167755127
    7. '()' → logprob: -9.19646167755127
    8. '('' → logprob: -9.57146167755127
    9. '```' → logprob: -9.57146167755127
    10. '(input' → logprob: -9.69646167755127

Token 29: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012386266142129898
    2. ')' → logprob: -5.137386322021484
    3. '(' → logprob: -5.387386322021484
    4. 'input' → logprob: -6.637386322021484
    5. ',input' → logprob: -7.637386322021484
    6. '=input' → logprob: -11.262386322021484
    7. '()' → logprob: -11.512386322021484
    8. ',' → logprob: -11.637386322021484
    9. '(sys' → logprob: -11.762386322021484
    10. ' input' → logprob: -12.012386322021484

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10022144019603729
    2. ' input' → logprob: -2.3502213954925537
    3. ')' → logprob: -11.225221633911133
    4. '(input' → logprob: -14.225221633911133
    5. '=input' → logprob: -14.975221633911133
    6. ',input' → logprob: -15.725221633911133
    7. '	input' → logprob: -16.100221633911133
    8. '_input' → logprob: -16.600221633911133
    9. '   ' → logprob: -17.100221633911133
    10. ' )' → logprob: -17.100221633911133

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001360947615467012
    2. '()' → logprob: -7.126360893249512
    3. '())' → logprob: -7.501360893249512
    4. '()))' → logprob: -13.501360893249512
    5. '()
' → logprob: -14.501360893249512
    6. '());' → logprob: -14.876360893249512
    7. '();)' → logprob: -14.876360893249512
    8. ')' → logprob: -15.251360893249512
    9. ' ().' → logprob: -15.251360893249512
    10. '();' → logprob: -15.751360893249512

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018526237457990646
    2. 'strip' → logprob: -4.018526077270508
    3. 'rstrip' → logprob: -7.893526077270508
    4. '(split' → logprob: -13.518526077270508
    5. ' split' → logprob: -13.893526077270508
    6. ')' → logprob: -14.768526077270508
    7. '```' → logprob: -16.143526077270508
    8. 'read' → logprob: -16.268526077270508
    9. 'rs' → logprob: -16.768526077270508
    10. ' strip' → logprob: -17.143526077270508

Token 33: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003468928625807166
    2. '())' → logprob: -5.878468990325928
    3. '))' → logprob: -7.753468990325928
    4. '()' → logprob: -8.37846851348877
    5. '(' → logprob: -13.62846851348877
    6. ')
' → logprob: -14.00346851348877
    7. '()))' → logprob: -14.62846851348877
    8. ' )' → logprob: -14.62846851348877
    9. ')`' → logprob: -14.75346851348877
    10. '),' → logprob: -14.87846851348877

Token 34: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020103728398680687
    2. 'n' → logprob: -4.020103931427002
    3. ' not' → logprob: -6.270103931427002
    4. 'not' → logprob: -9.770103454589844
    5. ' ' → logprob: -14.020103454589844
    6. '	n' → logprob: -14.145103454589844
    7. '(n' → logprob: -14.145103454589844
    8. ' (' → logprob: -15.270103454589844
    9. ' ' → logprob: -15.895103454589844
    10. '0' → logprob: -16.020103454589844

Token 37: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14273251593112946
    2. '==' → logprob: -2.017732620239258
    3. '=' → logprob: -10.142732620239258
    4. ' =' → logprob: -11.392732620239258
    5. ')==' → logprob: -13.267732620239258
    6. ' ' → logprob: -13.517732620239258
    7. ')' → logprob: -14.017732620239258
    8. '<|end|>' → logprob: -14.642732620239258
    9. ' ' → logprob: -14.767732620239258
    10. ' <' → logprob: -15.017732620239258

Token 38: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.250036239624023
    3. '```' → logprob: -15.687536239624023
    4. '۰' → logprob: -16.250036239624023
    5. 'p' → logprob: -16.625036239624023
    6. '   ' → logprob: -16.875036239624023
    7. 'm' → logprob: -17.000036239624023
    8. 'n' → logprob: -17.062536239624023
    9. '=' → logprob: -17.062536239624023
    10. '  ' → logprob: -17.375036239624023

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.125006675720215
    3. 'm' → logprob: -14.250006675720215
    4. 'p' → logprob: -15.375006675720215
    5. '```' → logprob: -15.625006675720215
    6. 't' → logprob: -15.875006675720215
    7. 's' → logprob: -16.18750762939453
    8. 'n' → logprob: -16.43750762939453
    9. 'q' → logprob: -16.62500762939453
    10. '-' → logprob: -17.18750762939453

Token 40: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05206013470888138
    2. 'and' → logprob: -3.052060127258301
    3. ':' → logprob: -5.677060127258301
    4. '	and' → logprob: -11.1770601272583
    5. '<|end|>' → logprob: -11.3020601272583
    6. ' ' → logprob: -12.0520601272583
    7. ' or' → logprob: -12.1770601272583
    8. ',' → logprob: -13.0520601272583
    9. ' a' → logprob: -14.0520601272583
    10. '<|end|>' → logprob: -14.4270601272583

Token 41: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.038047123700380325
    2. 'm' → logprob: -3.2880470752716064
    3. ' ' → logprob: -12.413046836853027
    4. '	m' → logprob: -13.788046836853027
    5. ' ' → logprob: -15.413046836853027
    6. '<|end|>' → logprob: -16.663047790527344
    7. '   ' → logprob: -16.788047790527344
    8. '    ' → logprob: -16.913047790527344
    9. '  ' → logprob: -17.038047790527344
    10. ' n' → logprob: -17.163047790527344

Token 42: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012546384707093239
    2. '==' → logprob: -4.387546539306641
    3. ' ' → logprob: -10.76254653930664
    4. '<|end|>' → logprob: -11.26254653930664
    5. ' =' → logprob: -14.38754653930664
    6. '0' → logprob: -14.63754653930664
    7. '<|end|>' → logprob: -14.76254653930664
    8. ' ' → logprob: -15.13754653930664
    9. '=' → logprob: -15.26254653930664
    10. '```' → logprob: -15.38754653930664

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502717612311244
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.126502990722656
    4. '  ' → logprob: -16.376502990722656
    5. ' and' → logprob: -16.501502990722656
    6. 'and' → logprob: -16.626502990722656
    7. '    ' → logprob: -18.001502990722656
    8. '۰' → logprob: -18.376502990722656
    9. '<|end|>' → logprob: -18.626502990722656
    10. ' ' → logprob: -18.626502990722656

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '  ' → logprob: -16.875024795532227
    4. '   ' → logprob: -17.250024795532227
    5. '۰' → logprob: -18.875024795532227
    6. '    ' → logprob: -19.375024795532227
    7. 'and' → logprob: -19.375024795532227
    8. '<|end|>' → logprob: -19.375024795532227
    9. '     ' → logprob: -19.625024795532227
    10. '```' → logprob: -19.812524795532227

Token 45: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00865109171718359
    2. 'and' → logprob: -4.758651256561279
    3. ' ' → logprob: -10.508650779724121
    4. '	and' → logprob: -12.883650779724121
    5. ':' → logprob: -13.508650779724121
    6. '   ' → logprob: -13.758650779724121
    7. '<|end|>' → logprob: -13.758650779724121
    8. '<|end|>' → logprob: -14.758650779724121
    9. '  ' → logprob: -14.883650779724121
    10. '      ' → logprob: -15.008650779724121

Token 46: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.029957015067338943
    2. 't' → logprob: -3.5299570560455322
    3. '0' → logprob: -9.154956817626953
    4. ' ' → logprob: -9.279956817626953
    5. '  ' → logprob: -12.779956817626953
    6. '   ' → logprob: -13.654956817626953
    7. '	t' → logprob: -13.904956817626953
    8. ' and' → logprob: -14.279956817626953
    9. '    ' → logprob: -14.404956817626953
    10. 'and' → logprob: -15.029956817626953

Token 47: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07895731180906296
    2. '==' → logprob: -2.5789573192596436
    3. ' ' → logprob: -9.828957557678223
    4. '<|end|>' → logprob: -11.953957557678223
    5. '0' → logprob: -12.828957557678223
    6. '=' → logprob: -13.828957557678223
    7. '```' → logprob: -14.203957557678223
    8. ' =' → logprob: -14.328957557678223
    9. '<|end|>' → logprob: -14.453957557678223
    10. ' ' → logprob: -15.203957557678223

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. '  ' → logprob: -16.500804901123047
    4. '   ' → logprob: -16.625804901123047
    5. ' and' → logprob: -18.625804901123047
    6. '<|end|>' → logprob: -18.875804901123047
    7. ' ' → logprob: -19.000804901123047
    8. '۰' → logprob: -19.438304901123047
    9. '    ' → logprob: -19.500804901123047
    10. '```' → logprob: -19.750804901123047

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00407923199236393
    2. ' ' → logprob: -5.504079341888428
    3. '  ' → logprob: -14.62907886505127
    4. '   ' → logprob: -15.37907886505127
    5. '۰' → logprob: -17.566579818725586
    6. 'p' → logprob: -17.691579818725586
    7. '-' → logprob: -17.691579818725586
    8. '```' → logprob: -18.004079818725586
    9. '<|end|>' → logprob: -18.066579818725586
    10. '    ' → logprob: -18.129079818725586

Token 50: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0046310266479849815
    2. 'and' → logprob: -5.379631042480469
    3. ' ' → logprob: -12.004631042480469
    4. '   ' → logprob: -13.129631042480469
    5. '	and' → logprob: -13.504631042480469
    6. ' a' → logprob: -15.629631042480469
    7. '  ' → logprob: -15.629631042480469
    8. ' ' → logprob: -15.629631042480469
    9. ' и' → logprob: -15.879631042480469
    10. '       ' → logprob: -16.00463104248047

Token 51: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.41595327854156494
    2. ' ' → logprob: -1.415953278541565
    3. '0' → logprob: -2.4159531593322754
    4. 'p' → logprob: -4.790953159332275
    5. '  ' → logprob: -12.665953636169434
    6. ' ' → logprob: -12.790953636169434
    7. '   ' → logprob: -13.665953636169434
    8. '	p' → logprob: -14.540953636169434
    9. '```' → logprob: -16.165952682495117
    10. '<p' → logprob: -16.540952682495117

Token 52: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10033541917800903
    2. '==' → logprob: -2.3503353595733643
    3. ' ' → logprob: -9.475335121154785
    4. ')==' → logprob: -10.975335121154785
    5. '0' → logprob: -11.350335121154785
    6. '=' → logprob: -11.725335121154785
    7. ':' → logprob: -12.475335121154785
    8. ')' → logprob: -12.600335121154785
    9. '()==' → logprob: -13.475335121154785
    10. ' ' → logprob: -13.725335121154785

Token 53: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013279760023579001
    2. ' ' → logprob: -6.626327991485596
    3. '   ' → logprob: -13.376327514648438
    4. '  ' → logprob: -14.751327514648438
    5. '    ' → logprob: -17.626327514648438
    6. '     ' → logprob: -17.813827514648438
    7. '       ' → logprob: -18.063827514648438
    8. '۰' → logprob: -18.313827514648438
    9. ' ' → logprob: -18.501327514648438
    10. '```' → logprob: -19.251327514648438

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.875024795532227
    4. '۰' → logprob: -17.125024795532227
    5. '  ' → logprob: -17.500024795532227
    6. '০' → logprob: -19.062524795532227
    7. '０' → logprob: -19.125024795532227
    8. '```' → logprob: -19.187524795532227
    9. '०' → logprob: -19.250024795532227
    10. '٠' → logprob: -19.875024795532227

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004979863297194242
    2. ':
' → logprob: -7.625497817993164
    3. ':return' → logprob: -11.625497817993164
    4. '   ' → logprob: -14.750497817993164
    5. '       ' → logprob: -15.250497817993164
    6. ' :' → logprob: -15.875497817993164
    7. '):' → logprob: -15.875497817993164
    8. ':
' → logprob: -17.250497817993164
    9. '.' → logprob: -18.250497817993164
    10. '           ' → logprob: -18.375497817993164

Token 56: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01621442846953869
    2. '       ' → logprob: -4.141214370727539
    3. ' break' → logprob: -9.641214370727539
    4. '   ' → logprob: -10.016214370727539
    5. '          ' → logprob: -10.891214370727539
    6. '<|end|>' → logprob: -11.766214370727539
    7. '               ' → logprob: -11.891214370727539
    8. '        ' → logprob: -12.266214370727539
    9. '	       ' → logprob: -12.641214370727539
    10. '            ' → logprob: -12.891214370727539

Token 57: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.40069547295570374
    2. 'break' (adapté à ' break') → logprob: -1.7756954431533813
    3. '           ' → logprob: -2.275695562362671
    4. '       ' → logprob: -2.900695562362671
    5. 'return' → logprob: -6.400695323944092
    6. ' return' → logprob: -7.025695323944092
    7. '               ' → logprob: -8.52569580078125
    8. '	break' → logprob: -8.65069580078125
    9. '   ' → logprob: -9.15069580078125
    10. '```' → logprob: -11.02569580078125

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05241042748093605
    2. '       ' → logprob: -3.302410364151001
    3. '\n' → logprob: -5.17741060256958
    4. '<|end|>' → logprob: -5.30241060256958
    5. '        
' → logprob: -6.42741060256958
    6. '    
' → logprob: -7.55241060256958
    7. ' 
' → logprob: -8.427410125732422
    8. 'n' → logprob: -8.552410125732422
    9. '  
' → logprob: -8.677410125732422
    10. '
' → logprob: -8.677410125732422

Token 59: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18463453650474548
    2. '       ' → logprob: -2.0596344470977783
    3. '<|end|>' → logprob: -3.5596344470977783
    4. '        
' → logprob: -4.934634685516357
    5. '   ' → logprob: -6.059634685516357
    6. '    
' → logprob: -6.684634685516357
    7. '<|end|>' → logprob: -7.184634685516357
    8. '\n' → logprob: -9.0596342086792
    9. '  
' → logprob: -9.1846342086792
    10. '
        
' → logprob: -9.3096342086792

Token 60: ' folds' (ID: 102877)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5223898887634277
    2. 'answer' → logprob: -1.8973898887634277
    3. 'queue' → logprob: -2.2723898887634277
    4. 'answers' → logprob: -2.7723898887634277
    5. 'arr' → logprob: -2.8973898887634277
    6. 'numbers' → logprob: -3.0223898887634277
    7. 'result' → logprob: -3.6473898887634277
    8. 'count' → logprob: -3.6473898887634277
    9. 'nums' → logprob: -3.7723898887634277
    10. 's' → logprob: -3.8973898887634277

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02153117209672928
    2. '=' → logprob: -4.021531105041504
    3. '_' → logprob: -6.021531105041504
    4. ' ' → logprob: -7.896531105041504
    5. '_count' → logprob: -8.646531105041504
    6. '   ' → logprob: -8.771531105041504
    7. '[' → logprob: -10.396531105041504
    8. '_space' → logprob: -10.521531105041504
    9. '    ' → logprob: -10.646531105041504
    10. ',' → logprob: -10.896531105041504

Token 62: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.37115567922592163
    2. ' []' → logprob: -1.2461557388305664
    3. ' [' → logprob: -4.371155738830566
    4. '[' → logprob: -5.496155738830566
    5. '[int' → logprob: -6.496155738830566
    6. '[p' → logprob: -6.871155738830566
    7. ' list' → logprob: -6.871155738830566
    8. '[n' → logprob: -7.121155738830566
    9. 'list' → logprob: -7.371155738830566
    10. '[input' → logprob: -9.121155738830566

Token 63: 'tuple' (ID: 52834)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6729732155799866
    2. 'int' → logprob: -1.6729731559753418
    3. 'list' → logprob: -2.172973155975342
    4. '[]' → logprob: -2.672973155975342
    5. 'False' → logprob: -3.047973155975342
    6. ']' → logprob: -3.422973155975342
    7. 'tuple' → logprob: -4.422973155975342
    8. '(int' → logprob: -4.922973155975342
    9. '[int' → logprob: -5.297973155975342
    10. 'input' → logprob: -5.797973155975342

Token 64: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2531290650367737
    2. '(input' → logprob: -1.503129005432129
    3. '(int' → logprob: -7.753129005432129
    4. 'input' → logprob: -8.003129005432129
    5. '(' → logprob: -8.253129005432129
    6. 'map' → logprob: -8.878129005432129
    7. '()' → logprob: -11.003129005432129
    8. ']' → logprob: -12.503129005432129
    9. '()]' → logprob: -12.753129005432129
    10. '(sorted' → logprob: -13.003129005432129

Token 65: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001564586127642542
    2. '(' → logprob: -9.12515640258789
    3. 'int' → logprob: -10.25015640258789
    4. ')' → logprob: -12.87515640258789
    5. '<int' → logprob: -13.00015640258789
    6. ',int' → logprob: -13.50015640258789
    7. '[int' → logprob: -13.50015640258789
    8. '(input' → logprob: -13.75015640258789
    9. ' int' → logprob: -13.75015640258789
    10. '=int' → logprob: -13.87515640258789

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3168335556983948
    2. ',input' → logprob: -1.31683349609375
    3. '(input' → logprob: -5.69183349609375
    4. 'input' → logprob: -9.06683349609375
    5. '(' → logprob: -9.81683349609375
    6. ' ,' → logprob: -11.06683349609375
    7. '(),' → logprob: -13.19183349609375
    8. '[input' → logprob: -13.81683349609375
    9. ' input' → logprob: -13.94183349609375
    10. ')' → logprob: -14.06683349609375

Token 67: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0297551192343235
    2. ' input' → logprob: -3.529755115509033
    3. ')' → logprob: -13.154755592346191
    4. '(input' → logprob: -14.029755592346191
    5. '[input' → logprob: -14.029755592346191
    6. ',input' → logprob: -15.029755592346191
    7. '=input' → logprob: -15.404755592346191
    8. '_input' → logprob: -15.529755592346191
    9. '	input' → logprob: -15.904755592346191
    10. '<input' → logprob: -17.029754638671875

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4121114822482923e-06
    2. '()' → logprob: -12.750003814697266
    3. ' ().' → logprob: -15.250003814697266
    4. '.readline' → logprob: -15.875003814697266
    5. '.' → logprob: -17.250003814697266
    6. ')' → logprob: -17.375003814697266
    7. '(' → logprob: -17.750003814697266
    8. '()))' → logprob: -18.375003814697266
    9. '().__' → logprob: -18.500003814697266
    10. '.split' → logprob: -18.875003814697266

Token 69: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2233183042553719e-05
    2. 'strip' → logprob: -11.500012397766113
    3. 'rstrip' → logprob: -13.250012397766113
    4. ' split' → logprob: -15.875012397766113
    5. '(split' → logprob: -16.500011444091797
    6. 'read' → logprob: -16.500011444091797
    7. 'spl' → logprob: -18.125011444091797
    8. ')' → logprob: -20.250011444091797
    9. 's' → logprob: -20.625011444091797
    10. 'plit' → logprob: -21.125011444091797

Token 70: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.12781444191932678
    2. '))' → logprob: -2.127814531326294
    3. '()' → logprob: -7.627814292907715
    4. '())' → logprob: -8.252814292907715
    5. '()))
' → logprob: -9.877814292907715
    6. '(' → logprob: -10.127814292907715
    7. ')' → logprob: -10.627814292907715
    8. ' ))' → logprob: -12.127814292907715
    9. '().' → logprob: -12.502814292907715
    10. '()));' → logprob: -12.752814292907715

Token 71: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035360404290258884
    2. ' for' → logprob: -6.128536224365234
    3. ')]' → logprob: -7.378536224365234
    4. 'for' → logprob: -8.003536224365234
    5. '()' → logprob: -8.378536224365234
    6. ' )' → logprob: -10.128536224365234
    7. '   ' → logprob: -10.253536224365234
    8. '       ' → logprob: -10.253536224365234
    9. ']' → logprob: -11.128536224365234
    10. '),' → logprob: -11.378536224365234

Token 72: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1649651974439621
    2. '_' → logprob: -2.1649651527404785
    3. ' range' → logprob: -3.2899651527404785
    4. 'range' → logprob: -10.289965629577637
    5. ' ' → logprob: -11.039965629577637
    6. '_range' → logprob: -11.414965629577637
    7. ' xrange' → logprob: -13.414965629577637
    8. '(range' → logprob: -13.539965629577637
    9. ' i' → logprob: -13.539965629577637
    10. ' ▁' → logprob: -14.289965629577637

Token 73: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0184184480458498
    2. ' range' → logprob: -4.018418312072754
    3. ' in' → logprob: -8.893418312072754
    4. 'in' → logprob: -9.018418312072754
    5. '(range' → logprob: -12.018418312072754
    6. '	range' → logprob: -13.643418312072754
    7. 'ran' → logprob: -14.643418312072754
    8. ' ' → logprob: -14.893418312072754
    9. '_' → logprob: -14.893418312072754
    10. 'ange' → logprob: -15.018418312072754

Token 74: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804975748062134
    2. ' range' → logprob: -3.2880496978759766
    3. '(range' → logprob: -12.413049697875977
    4. '	range' → logprob: -13.788049697875977
    5. '   ' → logprob: -13.913049697875977
    6. ' ' → logprob: -13.913049697875977
    7. '  ' → logprob: -14.913049697875977
    8. 'rang' → logprob: -15.038049697875977
    9. 'r' → logprob: -15.413049697875977
    10. '    ' → logprob: -15.913049697875977

Token 75: '(t' (ID: 2025)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.314054012298584
    2. '(n' → logprob: -1.314054012298584
    3. '(' → logprob: -7.439054012298584
    4. '(f' → logprob: -9.189054489135742
    5. '(t' → logprob: -9.814054489135742
    6. '(p' → logprob: -10.189054489135742
    7. 'm' → logprob: -12.689054489135742
    8. ' (' → logprob: -12.939054489135742
    9. '(s' → logprob: -14.189054489135742
    10. '(M' → logprob: -14.189054489135742

Token 76: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00019102399528492242
    2. ')' → logprob: -8.750190734863281
    3. ']' → logprob: -10.500190734863281
    4. ' )' → logprob: -13.250190734863281
    5. '))' → logprob: -13.625190734863281
    6. ')]
' → logprob: -14.375190734863281
    7. ')])' → logprob: -15.000190734863281
    8. ')],' → logprob: -15.625190734863281
    9. ')}' → logprob: -16.00019073486328
    10. '),' → logprob: -16.25019073486328

Token 77: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6576517224311829
    2. '<|end|>' → logprob: -0.7826517224311829
    3. '       ' → logprob: -3.907651662826538
    4. '<|end|>' → logprob: -6.282651901245117
    5. '   ' → logprob: -7.157651901245117
    6. '        
' → logprob: -7.657651901245117
    7. '\n' → logprob: -8.407651901245117
    8. '

' → logprob: -8.532651901245117
    9. '  
' → logprob: -8.657651901245117
    10. '#' → logprob: -8.907651901245117

Token 78: ' punches' (ID: 140988)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.850067138671875
    2. '       ' → logprob: -1.975067138671875
    3. 'result' → logprob: -2.475067138671875
    4. 'res' → logprob: -2.725067138671875
    5. 'stack' → logprob: -2.850067138671875
    6. 'count' → logprob: -3.225067138671875
    7. 'positions' → logprob: -3.475067138671875
    8. 'ans' → logprob: -3.725067138671875
    9. 'answer' → logprob: -3.725067138671875
    10. ' result' → logprob: -3.975067138671875

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036310735158622265
    2. '=' → logprob: -5.628631114959717
    3. ' ' → logprob: -10.628630638122559
    4. ',' → logprob: -13.503630638122559
    5. '_' → logprob: -13.878630638122559
    6. '[' → logprob: -14.003630638122559
    7. '   ' → logprob: -14.503630638122559
    8. '  ' → logprob: -14.753630638122559
    9. '(' → logprob: -14.878630638122559
    10. 's' → logprob: -15.003630638122559

Token 80: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.06971666216850281
    2. '[' → logprob: -2.944716691970825
    3. ' []' → logprob: -4.569716453552246
    4. '[]' → logprob: -6.444716453552246
    5. '[p' → logprob: -6.569716453552246
    6. '[int' → logprob: -7.319716453552246
    7. ' [(' → logprob: -8.569716453552246
    8. '[input' → logprob: -9.069716453552246
    9. '[list' → logprob: -9.194716453552246
    10. ' list' → logprob: -9.819716453552246

Token 81: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.05622028186917305
    2. 'int' → logprob: -2.931220293045044
    3. ' tuple' → logprob: -7.056220054626465
    4. 'map' → logprob: -8.556220054626465
    5. 'list' → logprob: -8.556220054626465
    6. '(tuple' → logprob: -10.431220054626465
    7. '[int' → logprob: -11.306220054626465
    8. ' int' → logprob: -11.556220054626465
    9. 'input' → logprob: -11.806220054626465
    10. '(int' → logprob: -11.806220054626465

Token 82: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0004331725067459047
    2. '(' → logprob: -7.750432968139648
    3. '(int' → logprob: -14.375432968139648
    4. ' (' → logprob: -14.625432968139648
    5. '(
' → logprob: -14.750432968139648
    6. ' map' → logprob: -14.875432968139648
    7. '	map' → logprob: -15.750432968139648
    8. 'map' → logprob: -15.750432968139648
    9. ',map' → logprob: -15.750432968139648
    10. '(input' → logprob: -16.75043296813965

Token 83: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.35837464465294e-05
    2. ',int' → logprob: -10.375043869018555
    3. '<int' → logprob: -12.250043869018555
    4. '=int' → logprob: -12.500043869018555
    5. '[int' → logprob: -13.500043869018555
    6. ']int' → logprob: -13.750043869018555
    7. ' int' → logprob: -14.625043869018555
    8. 'int' → logprob: -15.125043869018555
    9. '(' → logprob: -15.375043869018555
    10. ':int' → logprob: -16.000043869018555

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045009577297605574
    2. '(' → logprob: -8.250450134277344
    3. ',input' → logprob: -9.000450134277344
    4. ' ,' → logprob: -10.750450134277344
    5. ',int' → logprob: -11.000450134277344
    6. '(input' → logprob: -11.250450134277344
    7. '(int' → logprob: -11.500450134277344
    8. '(),' → logprob: -12.875450134277344
    9. '```' → logprob: -14.250450134277344
    10. ' (' → logprob: -15.500450134277344

Token 85: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.17975638806819916
    2. 'input' → logprob: -1.8047564029693604
    3. ' ' → logprob: -12.929756164550781
    4. ')' → logprob: -13.054756164550781
    5. '	input' → logprob: -13.929756164550781
    6. '(input' → logprob: -13.929756164550781
    7. ',input' → logprob: -14.304756164550781
    8. 'int' → logprob: -14.429756164550781
    9. '_input' → logprob: -14.554756164550781
    10. ' sys' → logprob: -14.554756164550781

Token 86: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6240566083070007e-06
    2. '()' → logprob: -14.125001907348633
    3. '.' → logprob: -14.500001907348633
    4. '().__' → logprob: -15.500001907348633
    5. ' ().' → logprob: -16.750001907348633
    6. ').' → logprob: -17.125001907348633
    7. '()).' → logprob: -18.000001907348633
    8. '.readline' → logprob: -18.500001907348633
    9. '(' → logprob: -19.000001907348633
    10. '().'' → logprob: -19.125001907348633

Token 87: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'spl' → logprob: -14.625000953674316
    3. 'read' → logprob: -15.125000953674316
    4. ' split' → logprob: -16.25
    5. 'strip' → logprob: -16.75
    6. '(split' → logprob: -17.125
    7. 'rstrip' → logprob: -18.0
    8. '.split' → logprob: -18.375
    9. 'plit' → logprob: -18.625
    10. ')' → logprob: -18.75

Token 88: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00526778819039464
    2. '))' → logprob: -5.38026762008667
    3. '()' → logprob: -7.50526762008667
    4. '())' → logprob: -10.255268096923828
    5. '()))
' → logprob: -10.380268096923828
    6. '())).' → logprob: -10.755268096923828
    7. '()
' → logprob: -13.005268096923828
    8. '   ' → logprob: -13.130268096923828
    9. '()));' → logprob: -14.380268096923828
    10. '(' → logprob: -14.505268096923828

Token 89: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6677020192146301
    2. 'for' → logprob: -1.1677019596099854
    3. '()' → logprob: -1.9177019596099854
    4. ' for' → logprob: -3.6677019596099854
    5. '   ' → logprob: -6.6677021980285645
    6. '       ' → logprob: -7.0427021980285645
    7. ' ' → logprob: -7.4177021980285645
    8. ')]' → logprob: -7.9177021980285645
    9. '	for' → logprob: -9.042701721191406
    10. ']' → logprob: -9.042701721191406

Token 90: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.031240500509738922
    2. ' _' → logprob: -3.656240463256836
    3. '_' → logprob: -5.406240463256836
    4. 'range' → logprob: -8.156240463256836
    5. '_range' → logprob: -9.406240463256836
    6. '(range' → logprob: -10.906240463256836
    7. ' ranges' → logprob: -11.031240463256836
    8. ' ' → logprob: -11.656240463256836
    9. ' xrange' → logprob: -11.656240463256836
    10. ' (' → logprob: -12.031240463256836

Token 91: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25819990038871765
    2. ' range' → logprob: -1.50819993019104
    3. '(range' → logprob: -5.133199691772461
    4. '(' → logprob: -8.633199691772461
    5. '_range' → logprob: -9.008199691772461
    6. '	range' → logprob: -11.258199691772461
    7. '_' → logprob: -11.508199691772461
    8. ' (' → logprob: -11.633199691772461
    9. ' in' → logprob: -12.133199691772461
    10. '(p' → logprob: -12.258199691772461

Token 92: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3133358657360077
    2. 'range' → logprob: -1.31333589553833
    3. '(range' → logprob: -9.563335418701172
    4. '(' → logprob: -14.188335418701172
    5. '	range' → logprob: -14.188335418701172
    6. ' p' → logprob: -14.438335418701172
    7. 'm' → logprob: -14.438335418701172
    8. 'p' → logprob: -14.813335418701172
    9. ' ' → logprob: -15.188335418701172
    10. '_range' → logprob: -15.313335418701172

Token 93: '(p' (ID: 2407)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0052286600694060326
    2. '(p' → logprob: -5.505228519439697
    3. '(' → logprob: -7.130228519439697
    4. '(t' → logprob: -8.255228996276855
    5. ' (' → logprob: -9.880228996276855
    6. 'm' → logprob: -10.630228996276855
    7. '(s' → logprob: -12.505228996276855
    8. '(n' → logprob: -12.630228996276855
    9. ' m' → logprob: -13.005228996276855
    10. '(M' → logprob: -14.005228996276855

Token 94: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012082771718269214
    2. ')' → logprob: -9.625121116638184
    3. ']' → logprob: -10.000121116638184
    4. ' )' → logprob: -12.125121116638184
    5. ')]
' → logprob: -13.625121116638184
    6. '])]' → logprob: -14.625121116638184
    7. '))' → logprob: -15.000121116638184
    8. ')}' → logprob: -15.250121116638184
    9. ')])' → logprob: -15.250121116638184
    10. '')]' → logprob: -15.625121116638184

Token 95: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1904342919588089
    2. '       ' → logprob: -2.690434217453003
    3. '<|end|>' → logprob: -2.815434217453003
    4. '   ' → logprob: -3.190434217453003
    5. '        
' → logprob: -6.565434455871582
    6. '    
' → logprob: -6.940434455871582
    7. ' ' → logprob: -7.815434455871582
    8. '  
' → logprob: -7.940434455871582
    9. '<|end|>' → logprob: -8.190434455871582
    10. '

' → logprob: -8.315434455871582

Token 96: ' width' (ID: 4345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3591283559799194
    2. 'res' → logprob: -1.6091283559799194
    3. 'result' → logprob: -2.109128475189209
    4. 'ans' → logprob: -2.734128475189209
    5. 'results' → logprob: -3.109128475189209
    6. 'answers' → logprob: -3.109128475189209
    7. 'orig' → logprob: -3.234128475189209
    8. 'points' → logprob: -3.359128475189209
    9. 'def' → logprob: -3.609128475189209
    10. 'answer' → logprob: -3.734128475189209

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005097849294543266
    2. ' =' → logprob: -5.50509786605835
    3. '=' → logprob: -7.50509786605835
    4. ' ,' → logprob: -7.88009786605835
    5. 's' → logprob: -9.630097389221191
    6. ',height' → logprob: -11.630097389221191
    7. '<|end|>' → logprob: -12.255097389221191
    8. ',width' → logprob: -13.005097389221191
    9. ' ' → logprob: -14.255097389221191
    10. '_,' → logprob: -14.380097389221191

Token 98: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.10138413310050964
    2. ' height' → logprob: -2.351384162902832
    3. 'length' → logprob: -6.976384162902832
    4. ' length' → logprob: -8.726384162902832
    5. '_height' → logprob: -10.476384162902832
    6. 'depth' → logprob: -11.601384162902832
    7. 'h' → logprob: -11.976384162902832
    8. 'he' → logprob: -11.976384162902832
    9. ' ' → logprob: -12.226384162902832
    10. '2' → logprob: -12.476384162902832

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020055126398801804
    2. '=' → logprob: -4.395055294036865
    3. ',' → logprob: -4.895055294036865
    4. '<|end|>' → logprob: -11.020054817199707
    5. ' ,' → logprob: -11.270054817199707
    6. ' ' → logprob: -13.020054817199707
    7. '<|end|>' → logprob: -14.895054817199707
    8. ' =)' → logprob: -15.270054817199707
    9. '   ' → logprob: -15.520054817199707
    10. '=int' → logprob: -15.707554817199707

Token 100: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2821269929409027
    2. ' n' → logprob: -2.0321269035339355
    3. 'm' → logprob: -2.9071269035339355
    4. '1' → logprob: -3.4071269035339355
    5. ' ' → logprob: -5.0321269035339355
    6. ' m' → logprob: -5.0321269035339355
    7. '100' → logprob: -5.5321269035339355
    8. '2' → logprob: -5.7821269035339355
    9. '(' → logprob: -6.7821269035339355
    10. 'fold' → logprob: -7.0321269035339355

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03886948153376579
    2. ' *' → logprob: -4.038869380950928
    3. ' ,' → logprob: -4.288869380950928
    4. '*' → logprob: -5.038869380950928
    5. '<|end|>' → logprob: -9.788869857788086
    6. ',m' → logprob: -9.913869857788086
    7. ' ' → logprob: -10.288869857788086
    8. ',p' → logprob: -10.663869857788086
    9. '*m' → logprob: -10.788869857788086
    10. ',n' → logprob: -11.038869857788086

Token 102: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00890219584107399
    2. ' m' → logprob: -4.758902072906494
    3. 'n' → logprob: -9.008902549743652
    4. '2' → logprob: -9.758902549743652
    5. '1' → logprob: -9.883902549743652
    6. ' ' → logprob: -10.508902549743652
    7. '   ' → logprob: -11.008902549743652
    8. ' n' → logprob: -12.508902549743652
    9. '    ' → logprob: -12.883902549743652
    10. '  ' → logprob: -13.258902549743652

Token 103: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006202869117259979
    2. '<|end|>' → logprob: -5.131202697753906
    3. '

' → logprob: -9.256202697753906
    4. '
' → logprob: -9.881202697753906
    5. '       ' → logprob: -10.006202697753906
    6. '<|end|>' → logprob: -10.631202697753906
    7. ' for' → logprob: -10.756202697753906
    8. 'for' → logprob: -11.631202697753906
    9. '        
' → logprob: -12.131202697753906
    10. '\n' → logprob: -12.506202697753906

Token 104: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021868648007512093
    2. '<|end|>' → logprob: -4.771868705749512
    3. '   ' → logprob: -4.896868705749512
    4. '       ' → logprob: -5.771868705749512
    5. ' for' → logprob: -6.521868705749512
    6. 'for' → logprob: -7.646868705749512
    7. '    
' → logprob: -8.396868705749512
    8. '        
' → logprob: -8.896868705749512
    9. '  
' → logprob: -9.271868705749512
    10. ' 
' → logprob: -10.396868705749512

Token 105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006445261533372104
    2. '       ' → logprob: -8.00064468383789
    3. ' for' → logprob: -9.00064468383789
    4. 'fold' → logprob: -9.37564468383789
    5. '   ' → logprob: -10.00064468383789
    6. '#' → logprob: -11.62564468383789
    7. 'points' → logprob: -12.00064468383789
    8. 'result' → logprob: -12.12564468383789
    9. 'def' → logprob: -12.25064468383789
    10. 'positions' → logprob: -12.50064468383789

Token 106: ' dx' (ID: 29472)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.107001543045044
    2. ' f' → logprob: -1.357001543045044
    3. ' i' → logprob: -2.607001543045044
    4. ' a' → logprob: -2.607001543045044
    5. ' fold' → logprob: -2.857001543045044
    6. ' fx' → logprob: -2.857001543045044
    7. 'x' → logprob: -3.607001543045044
    8. ' w' → logprob: -4.232001304626465
    9. 'a' → logprob: -4.482001304626465
    10. 'f' → logprob: -4.607001304626465

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005831766175106168
    2. ' ,' → logprob: -7.500583171844482
    3. ',d' → logprob: -10.87558364868164
    4. 'dy' → logprob: -12.87558364868164
    5. ',y' → logprob: -13.00058364868164
    6. '_,' → logprob: -13.12558364868164
    7. ',height' → logprob: -13.75058364868164
    8. 's' → logprob: -14.25058364868164
    9. ' in' → logprob: -14.62558364868164
    10. '‌,' → logprob: -15.00058364868164

Token 108: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.012511883862316608
    2. ' dy' → logprob: -4.387511730194092
    3. ' ' → logprob: -13.76251220703125
    4. '  ' → logprob: -14.38751220703125
    5. '   ' → logprob: -14.63751220703125
    6. '    ' → logprob: -17.38751220703125
    7. 'd' → logprob: -17.63751220703125
    8. 'Dy' → logprob: -17.63751220703125
    9. '1' → logprob: -17.88751220703125
    10. '	d' → logprob: -18.45001220703125

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006703412160277367
    2. 'in' → logprob: -5.1317033767700195
    3. ',' → logprob: -7.2567033767700195
    4. '<|end|>' → logprob: -10.00670337677002
    5. ' ,' → logprob: -11.00670337677002
    6. '   ' → logprob: -13.50670337677002
    7. '<|end|>' → logprob: -13.50670337677002
    8. 's' → logprob: -13.75670337677002
    9. ' ' → logprob: -14.38170337677002
    10. ')' → logprob: -14.50670337677002

Token 110: ' punches' (ID: 140988)
  Prédit: ' folds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' folds' → logprob: -0.005243833642452955
    2. 'fold' → logprob: -5.25524377822876
    3. ' fold' → logprob: -12.130244255065918
    4. ' ' → logprob: -12.880244255065918
    5. '   ' → logprob: -14.005244255065918
    6. 're' → logprob: -14.880244255065918
    7. ' reversed' → logprob: -14.880244255065918
    8. 'f' → logprob: -16.1302433013916
    9. ' folded' → logprob: -16.1302433013916
    10. '  ' → logprob: -16.3802433013916

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.666993507067673e-05
    2. ' :' → logprob: -10.875036239624023
    3. ':
' → logprob: -11.250036239624023
    4. ':**' → logprob: -12.750036239624023
    5. '):' → logprob: -13.875036239624023
    6. ':

' → logprob: -15.250036239624023
    7. ',' → logprob: -15.250036239624023
    8. ':def' → logprob: -16.000036239624023
    9. '<|end|>' → logprob: -16.250036239624023
    10. '():' → logprob: -17.000036239624023

Token 112: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3667086362838745
    2. '<|end|>' → logprob: -1.8667086362838745
    3. '       ' → logprob: -2.991708755493164
    4. '           ' → logprob: -2.991708755493164
    5. ':
' → logprob: -4.491708755493164
    6. '        ' → logprob: -4.741708755493164
    7. '<|end|>' → logprob: -4.866708755493164
    8. ',' → logprob: -5.241708755493164
    9. '
' → logprob: -5.741708755493164
    10. ' if' → logprob: -5.866708755493164

Token 113: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7229520082473755
    2. ' if' → logprob: -1.3479520082473755
    3. '        ' → logprob: -2.597951889038086
    4. 'x' → logprob: -3.347951889038086
    5. ' for' → logprob: -3.347951889038086
    6. ' pass' → logprob: -3.597951889038086
    7. ' #' → logprob: -3.722951889038086
    8. 'if' → logprob: -4.597951889038086
    9. '       ' → logprob: -4.722951889038086
    10. 'print' → logprob: -5.222951889038086

Token 114: ' For' (ID: 2214)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.268212914466858
    2. 'for' → logprob: -1.393212914466858
    3. ' pass' → logprob: -2.2682127952575684
    4. '#' → logprob: -2.2682127952575684
    5. 'pass' → logprob: -2.5182127952575684
    6. ' for' → logprob: -3.1432127952575684
    7. 'if' → logprob: -3.8932127952575684
    8. 'print' → logprob: -4.143212795257568
    9. 'found' → logprob: -4.268212795257568
    10. ' x' → logprob: -4.893212795257568

Token 115: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.3023033142089844
    2. ' dx' → logprob: -1.6773033142089844
    3. ' each' → logprob: -1.9273033142089844
    4. ' _' → logprob: -2.4273033142089844
    5. ' fold' → logprob: -2.9273033142089844
    6. '_' → logprob: -3.1773033142089844
    7. 'each' → logprob: -3.1773033142089844
    8. ' x' → logprob: -3.4273033142089844
    9. 'dx' → logprob: -3.5523033142089844
    10. ' y' → logprob: -3.8023033142089844

Token 116: ' punch' (ID: 37236)
  Prédit: ' fold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fold' → logprob: -0.09785141050815582
    2. 'fold' → logprob: -2.472851514816284
    3. ' dx' → logprob: -6.222851276397705
    4. 'x' → logprob: -6.472851276397705
    5. 'dx' → logprob: -6.847851276397705
    6. ' i' → logprob: -6.847851276397705
    7. ' y' → logprob: -7.347851276397705
    8. ' x' → logprob: -7.347851276397705
    9. '_fold' → logprob: -8.222851753234863
    10. 'i' → logprob: -8.472851753234863

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2300519198179245
    2. '           ' → logprob: -1.605051875114441
    3. '<|end|>' → logprob: -6.7300519943237305
    4. ':' → logprob: -6.9800519943237305
    5. ' in' → logprob: -7.6050519943237305
    6. ' ,' → logprob: -7.8550519943237305
    7. ':
' → logprob: -8.23005199432373
    8. '
' → logprob: -8.85505199432373
    9. '<|end|>' → logprob: -8.98005199432373
    10. ' for' → logprob: -9.35505199432373

Token 118: ' start' (ID: 1604)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.240991473197937
    2. 'x' → logprob: -1.740991473197937
    3. ' x' → logprob: -1.865991473197937
    4. '           ' → logprob: -2.3659915924072266
    5. 'for' → logprob: -2.3659915924072266
    6. ' new' → logprob: -3.2409915924072266
    7. ' points' → logprob: -3.8659915924072266
    8. 'count' → logprob: -4.365991592407227
    9. ' count' → logprob: -4.365991592407227
    10. ' pass' → logprob: -4.615991592407227

Token 119: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6958547830581665
    2. 'x' → logprob: -1.9458547830581665
    3. ' with' → logprob: -2.570854663848877
    4. ' from' → logprob: -2.570854663848877
    5. ' x' → logprob: -2.695854663848877
    6. 'from' → logprob: -3.320854663848877
    7. '       ' → logprob: -3.320854663848877
    8. '   ' → logprob: -3.820854663848877
    9. ' for' → logprob: -4.820854663848877
    10. 'with' → logprob: -4.820854663848877

Token 120: ' a' (ID: 261)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.05915594846010208
    2. '{' → logprob: -4.4341559410095215
    3. 'x' → logprob: -4.5591559410095215
    4. ' [(' → logprob: -4.6841559410095215
    5. '0' → logprob: -5.1841559410095215
    6. 'dx' → logprob: -5.6841559410095215
    7. '[' → logprob: -5.8091559410095215
    8. 'width' → logprob: -5.9341559410095215
    9. '1' → logprob: -6.1841559410095215
    10. 'set' → logprob: -6.8091559410095215

Token 121: ' single' (ID: 4590)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.709330677986145
    2. ' stack' → logprob: -0.959330677986145
    3. 'queue' → logprob: -4.2093305587768555
    4. 'x' → logprob: -4.3343305587768555
    5. 'set' → logprob: -4.3343305587768555
    6. ' queue' → logprob: -4.5843305587768555
    7. 'points' → logprob: -4.5843305587768555
    8. ' new' → logprob: -4.8343305587768555
    9. 'new' → logprob: -4.8343305587768555
    10. ' set' → logprob: -4.9593305587768555

Token 122: ' point' (ID: 2438)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -1.8817493915557861
    2. 'point' → logprob: -2.131749391555786
    3. 'sheet' → logprob: -2.256749391555786
    4. 'layer' → logprob: -2.506749391555786
    5. 'x' → logprob: -2.756749391555786
    6. 'stack' → logprob: -2.756749391555786
    7. 'piece' → logprob: -2.881749391555786
    8. 'square' → logprob: -3.006749391555786
    9. 'rectangle' → logprob: -3.006749391555786
    10. 'rect' → logprob: -3.256749391555786

Token 123: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5904013514518738
    2. 's' → logprob: -1.4654014110565186
    3. ' =' → logprob: -2.0904014110565186
    4. ',' → logprob: -3.4654014110565186
    5. ' x' → logprob: -5.0904011726379395
    6. '(s' → logprob: -5.2154011726379395
    7. ' (' → logprob: -5.4654011726379395
    8. '       ' → logprob: -5.4654011726379395
    9. '            ' → logprob: -5.4654011726379395
    10. 'points' → logprob: -5.4654011726379395

Token 124: ' (' (ID: 350)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.3118795156478882
    2. 'dx' → logprob: -1.4368795156478882
    3. '[(' → logprob: -3.6868796348571777
    4. '(' → logprob: -6.561879634857178
    5. '(x' → logprob: -6.811879634857178
    6. '[' → logprob: -7.561879634857178
    7. '0' → logprob: -7.561879634857178
    8. ' dx' → logprob: -7.936879634857178
    9. 'x' → logprob: -7.936879634857178
    10. ' (' → logprob: -8.31187915802002

Token 125: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.046025943011045456
    2. ' dx' → logprob: -3.2960259914398193
    3. '0' → logprob: -5.67102575302124
    4. ')' → logprob: -6.29602575302124
    5. 'width' → logprob: -6.92102575302124
    6. 'x' → logprob: -7.79602575302124
    7. '
' → logprob: -7.92102575302124
    8. '(dx' → logprob: -7.92102575302124
    9. ' width' → logprob: -9.296026229858398
    10. ' ' → logprob: -9.296026229858398

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001198562909848988
    2. ' ,' → logprob: -6.876198768615723
    3. ' -' → logprob: -10.376198768615723
    4. ')' → logprob: -10.376198768615723
    5. ',d' → logprob: -10.876198768615723
    6. '   ' → logprob: -11.126198768615723
    7. '-' → logprob: -11.376198768615723
    8. ',y' → logprob: -11.501198768615723
    9. ' +' → logprob: -12.126198768615723
    10. ' ' → logprob: -12.251198768615723

Token 127: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.011048528365790844
    2. ' dy' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.011048316955566
    4. ' ' → logprob: -16.261049270629883
    5. '  ' → logprob: -16.511049270629883
    6. '0' → logprob: -17.261049270629883
    7. '
' → logprob: -17.511049270629883
    8. ')' → logprob: -17.761049270629883
    9. '```' → logprob: -17.761049270629883
    10. '    ' → logprob: -17.886049270629883

Token 128: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25413402915000916
    2. '           ' → logprob: -1.6291340589523315
    3. ')
' → logprob: -3.879133939743042
    4. ',' → logprob: -5.629134178161621
    5. ' )' → logprob: -6.004134178161621
    6. '),' → logprob: -8.254134178161621
    7. '       ' → logprob: -8.254134178161621
    8. ').' → logprob: -8.379134178161621
    9. ' )
' → logprob: -8.754134178161621
    10. '
' → logprob: -9.004134178161621

Token 129: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11262249946594238
    2. '
' → logprob: -3.3626224994659424
    3. ',' → logprob: -3.6126224994659424
    4. ' points' → logprob: -4.487622261047363
    5. ' and' → logprob: -4.737622261047363
    6. '       ' → logprob: -5.237622261047363
    7. 'points' → logprob: -5.612622261047363
    8. 'positions' → logprob: -5.862622261047363
    9. ' positions' → logprob: -5.987622261047363
    10. '(points' → logprob: -7.112622261047363

Token 130: ' count' (ID: 3605)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.22476832568645477
    2. '{' → logprob: -2.0997684001922607
    3. '0' → logprob: -4.099768161773682
    4. ' {(' → logprob: -4.224768161773682
    5. '[' → logprob: -4.599768161773682
    6. ' [(' → logprob: -4.724768161773682
    7. '{x' → logprob: -4.849768161773682
    8. 'x' → logprob: -5.099768161773682
    9. '1' → logprob: -5.974768161773682
    10. 'set' → logprob: -5.974768161773682

Token 131: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1892184615135193
    2. '=' → logprob: -2.189218521118164
    3. 's' → logprob: -3.064218521118164
    4. 'points' → logprob: -4.939218521118164
    5. '1' → logprob: -6.689218521118164
    6. '(' → logprob: -7.064218521118164
    7. '[(' → logprob: -7.314218521118164
    8. 'count' → logprob: -7.314218521118164
    9. '[' → logprob: -7.439218521118164
    10. '0' → logprob: -8.064218521118164

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021319588995538652
    2. ' ' → logprob: -8.875213623046875
    3. '[' → logprob: -9.875213623046875
    4. '(' → logprob: -11.625213623046875
    5. '[(' → logprob: -11.875213623046875
    6. '   ' → logprob: -13.250213623046875
    7. '{' → logprob: -13.500213623046875
    8. ' [' → logprob: -14.125213623046875
    9. '0' → logprob: -14.500213623046875
    10. '
' → logprob: -15.437713623046875

Token 133: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3657877445220947
    2. '
' → logprob: -1.4907877445220947
    3. ',' → logprob: -4.240787506103516
    4. '<|end|>' → logprob: -4.240787506103516
    5. '            
' → logprob: -4.490787506103516
    6. ' 
' → logprob: -4.865787506103516
    7. '       ' → logprob: -4.990787506103516
    8. '    
' → logprob: -5.115787506103516
    9. '    ' → logprob: -6.115787506103516
    10. '   ' → logprob: -6.115787506103516

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2331114411354065
    2. '
' → logprob: -2.2331113815307617
    3. ' 
' → logprob: -3.6081113815307617
    4. ',' → logprob: -4.108111381530762
    5. '\n' → logprob: -4.358111381530762
    6. '            
' → logprob: -4.858111381530762
    7. '    
' → logprob: -5.358111381530762
    8. '<|end|>' → logprob: -5.483111381530762
    9. '  
' → logprob: -5.608111381530762
    10. ':' → logprob: -5.858111381530762

Token 135: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.48814070224761963
    2. ' points' → logprob: -0.9881407022476196
    3. '   ' → logprob: -5.23814058303833
    4. 'positions' → logprob: -6.48814058303833
    5. 'stack' → logprob: -6.61314058303833
    6. '           ' → logprob: -7.36314058303833
    7. '       ' → logprob: -7.61314058303833
    8. 'p' → logprob: -7.73814058303833
    9. ' stack' → logprob: -7.86314058303833
    10. ' positions' → logprob: -7.98814058303833

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028258003294467926
    2. '=' → logprob: -5.877825736999512
    3. '    ' → logprob: -12.377825736999512
    4. '   ' → logprob: -12.627825736999512
    5. '<|end|>' → logprob: -12.752825736999512
    6. ')' → logprob: -13.002825736999512
    7. ',' → logprob: -13.127825736999512
    8. '=[]' → logprob: -13.877825736999512
    9. '           ' → logprob: -14.002825736999512
    10. '        ' → logprob: -14.127825736999512

Token 137: ' {(' (ID: 75216)
  Prédit: ' {('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {(' → logprob: -0.8277095556259155
    2. '[(' → logprob: -1.4527095556259155
    3. ' [(' → logprob: -1.7027095556259155
    4. '{' → logprob: -1.9527095556259155
    5. '[{' → logprob: -6.327709674835205
    6. '[((' → logprob: -6.702709674835205
    7. '[' → logprob: -7.327709674835205
    8. ' [' → logprob: -7.452709674835205
    9. ' {' → logprob: -7.952709674835205
    10. '   ' → logprob: -8.702709197998047

Token 138: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0009051493834704161
    2. '(dx' → logprob: -7.1259050369262695
    3. ' dx' → logprob: -9.87590503692627
    4. '(' → logprob: -11.00090503692627
    5. '   ' → logprob: -12.00090503692627
    6. ')' → logprob: -12.00090503692627
    7. '0' → logprob: -12.25090503692627
    8. 'dy' → logprob: -12.37590503692627
    9. 'width' → logprob: -13.62590503692627
    10. '
' → logprob: -13.62590503692627

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005451816599816084
    2. ' ,' → logprob: -5.255451679229736
    3. ',d' → logprob: -9.255452156066895
    4. ',y' → logprob: -10.005452156066895
    5. '<|end|>' → logprob: -10.255452156066895
    6. ')' → logprob: -11.755452156066895
    7. '-' → logprob: -12.130452156066895
    8. ',
' → logprob: -12.380452156066895
    9. ' ' → logprob: -12.505452156066895
    10. ' -' → logprob: -12.755452156066895

Token 140: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.04300820827484131
    2. ' dy' → logprob: -3.168008327484131
    3. ' ' → logprob: -12.668007850646973
    4. '0' → logprob: -12.793007850646973
    5. '   ' → logprob: -14.043007850646973
    6. 'd' → logprob: -14.668007850646973
    7. '.dy' → logprob: -14.668007850646973
    8. ')' → logprob: -14.918007850646973
    9. '
' → logprob: -15.168007850646973
    10. '  ' → logprob: -15.730507850646973

Token 141: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02001878432929516
    2. ',' → logprob: -4.145018577575684
    3. ':' → logprob: -6.145018577575684
    4. ')' → logprob: -6.520018577575684
    5. ' ):' → logprob: -8.270018577575684
    6. ' ,' → logprob: -10.520018577575684
    7. '):(' → logprob: -10.645018577575684
    8. '   ' → logprob: -11.645018577575684
    9. '}:' → logprob: -11.895018577575684
    10. '),' → logprob: -12.520018577575684

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012516127899289131
    2. ' ' → logprob: -4.387516021728516
    3. '   ' → logprob: -12.762516021728516
    4. '[' → logprob: -13.137516021728516
    5. ' [' → logprob: -14.450016021728516
    6. '  ' → logprob: -15.137516021728516
    7. '    ' → logprob: -15.887516021728516
    8. '0' → logprob: -16.262516021728516
    9. '       ' → logprob: -16.262516021728516
    10. '(' → logprob: -16.262516021728516

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.35706390615087e-05
    2. ' ' → logprob: -10.750033378601074
    3. '[' → logprob: -11.375033378601074
    4. '(' → logprob: -15.125033378601074
    5. '{' → logprob: -16.25003433227539
    6. '[(' → logprob: -16.50003433227539
    7. '0' → logprob: -17.00003433227539
    8. '   ' → logprob: -17.12503433227539
    9. 'True' → logprob: -17.62503433227539
    10. ' [' → logprob: -18.06253433227539

Token 144: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.033334556967020035
    2. '
' → logprob: -3.908334493637085
    3. '}
' → logprob: -5.533334732055664
    4. '       ' → logprob: -6.033334732055664
    5. ',' → logprob: -6.158334732055664
    6. ',
' → logprob: -6.283334732055664
    7. '           ' → logprob: -6.408334732055664
    8. ' }' → logprob: -7.908334732055664
    9. ')' → logprob: -8.783334732055664
    10. '   ' → logprob: -9.283334732055664

Token 145: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' w' (ID: 286)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9804176092147827
    2. '       ' → logprob: -1.4804176092147827
    3. '           ' → logprob: -1.6054176092147827
    4. 'for' → logprob: -1.7304176092147827
    5. '
' → logprob: -4.480417728424072
    6. '   ' → logprob: -5.855417728424072
    7. '        
' → logprob: -6.855417728424072
    8. '<|end|>' → logprob: -7.230417728424072
    9. ' ' → logprob: -7.605417728424072
    10. '        ' → logprob: -7.605417728424072

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03945228084921837
    2. '=' → logprob: -3.789452314376831
    3. 'idth' → logprob: -4.789452075958252
    4. 'hile' → logprob: -5.664452075958252
    5. ' =' → logprob: -6.664452075958252
    6. ' ,' → logprob: -6.914452075958252
    7. 'h' → logprob: -7.414452075958252
    8. ',h' → logprob: -8.16445255279541
    9. 'i' → logprob: -8.41445255279541
    10. 'ight' → logprob: -8.91445255279541

Token 148: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08894557505846024
    2. ' h' → logprob: -2.4639456272125244
    3. ' ' → logprob: -12.463945388793945
    4. 'height' → logprob: -14.088945388793945
    5. '	h' → logprob: -15.088945388793945
    6. '    ' → logprob: -15.463945388793945
    7. '   ' → logprob: -15.588945388793945
    8. '_h' → logprob: -15.838945388793945
    9. '
' → logprob: -16.213945388793945
    10. '  ' → logprob: -16.213945388793945

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931529641151428
    2. ' =' → logprob: -0.6931529641151428
    3. ',' → logprob: -12.818153381347656
    4. '<|end|>' → logprob: -13.443153381347656
    5. ' ' → logprob: -14.818153381347656
    6. ')' → logprob: -15.693153381347656
    7. '=}' → logprob: -16.068153381347656
    8. '=n' → logprob: -16.568153381347656
    9. '=
' → logprob: -16.693153381347656
    10. '=w' → logprob: -16.818153381347656

Token 150: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.06211535260081291
    2. ' width' → logprob: -2.812115430831909
    3. 'n' → logprob: -10.187115669250488
    4. '   ' → logprob: -10.187115669250488
    5. '(width' → logprob: -10.437115669250488
    6. ' ' → logprob: -11.812115669250488
    7. '    ' → logprob: -11.937115669250488
    8. '1' → logprob: -12.062115669250488
    9. '	width' → logprob: -12.062115669250488
    10. '  ' → logprob: -12.312115669250488

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003386806638445705
    2. ' ,' → logprob: -8.000338554382324
    3. ',
' → logprob: -13.625338554382324
    4. ',h' → logprob: -14.375338554382324
    5. '   ' → logprob: -15.125338554382324
    6. '<|end|>' → logprob: -15.250338554382324
    7. ',w' → logprob: -16.12533950805664
    8. ' ' → logprob: -16.25033950805664
    9. '```' → logprob: -16.50033950805664
    10. ',height' → logprob: -16.50033950805664

Token 152: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.34845125675201416
    2. ' height' → logprob: -1.2234512567520142
    3. ' ' → logprob: -12.723451614379883
    4. 'he' → logprob: -13.973451614379883
    5. '	height' → logprob: -14.348451614379883
    6. '.height' → logprob: -14.598451614379883
    7. '(height' → logprob: -14.848451614379883
    8. '_height' → logprob: -15.223451614379883
    9. '-height' → logprob: -15.598451614379883
    10. ' he' → logprob: -15.598451614379883

Token 153: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3992098867893219
    2. '<|end|>' → logprob: -1.7742098569869995
    3. '           ' → logprob: -1.8992098569869995
    4. '<|end|>' → logprob: -5.524209976196289
    5. '

' → logprob: -6.024209976196289
    6. ',' → logprob: -6.899209976196289
    7. ' for' → logprob: -6.899209976196289
    8. 'for' → logprob: -7.774209976196289
    9. '            
' → logprob: -8.399209976196289
    10. '
' → logprob: -9.024209976196289

Token 154: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6196916103363037
    2. '           ' → logprob: -0.9946916103363037
    3. '<|end|>' → logprob: -2.6196916103363037
    4. ' for' → logprob: -4.619691848754883
    5. '<|end|>' → logprob: -5.994691848754883
    6. '       ' → logprob: -6.244691848754883
    7. 'for' → logprob: -6.244691848754883
    8. ' ' → logprob: -7.369691848754883
    9. '   ' → logprob: -7.994691848754883
    10. '            
' → logprob: -8.494691848754883

Token 155: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044673167169094086
    2. ' for' → logprob: -3.294673204421997
    3. '           ' → logprob: -5.544672966003418
    4. '       ' → logprob: -6.294672966003418
    5. '<|end|>' → logprob: -7.544672966003418
    6. '
' → logprob: -8.544672966003418
    7. '	for' → logprob: -9.919672966003418
    8. '   ' → logprob: -10.794672966003418
    9. ')' → logprob: -10.919672966003418
    10. '        ' → logprob: -12.294672966003418

Token 156: ' Apply' (ID: 28921)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00038443657103925943
    2. ' for' → logprob: -8.000384330749512
    3. '           ' → logprob: -10.500384330749512
    4. '#' → logprob: -11.500384330749512
    5. '       ' → logprob: -11.625384330749512
    6. 'reverse' → logprob: -14.375384330749512
    7. '
' → logprob: -14.625384330749512
    8. '   ' → logprob: -14.750384330749512
    9. '            
' → logprob: -15.375384330749512
    10. 'from' → logprob: -15.500384330749512

Token 157: ' folds' (ID: 102877)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6100510954856873
    2. ' folds' → logprob: -1.360051155090332
    3. 'for' → logprob: -1.735051155090332
    4. 'fold' → logprob: -4.235051155090332
    5. ' reversed' → logprob: -5.485051155090332
    6. 're' → logprob: -6.110051155090332
    7. ' fold' → logprob: -6.610051155090332
    8. '   ' → logprob: -8.360051155090332
    9. ' the' → logprob: -8.485051155090332
    10. ' reverse' → logprob: -8.860051155090332

Token 158: ' in' (ID: 306)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4434630870819092
    2. 'for' → logprob: -1.3184630870819092
    3. '[::-' → logprob: -2.443463087081909
    4. '
' → logprob: -6.818463325500488
    5. '           ' → logprob: -6.943463325500488
    6. '       ' → logprob: -7.318463325500488
    7. ' reversed' → logprob: -8.068463325500488
    8. ' in' → logprob: -8.443463325500488
    9. '<|end|>' → logprob: -8.693463325500488
    10. '.reverse' → logprob: -8.943463325500488

Token 159: ' reverse' (ID: 18199)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.09295299649238586
    2. ' reversed' → logprob: -2.9679529666900635
    3. 'reverse' → logprob: -3.9679529666900635
    4. 'range' → logprob: -4.092953205108643
    5. ' range' → logprob: -6.717953205108643
    6. ' reverse' → logprob: -8.592952728271484
    7. 'fold' → logprob: -8.842952728271484
    8. '[::-' → logprob: -9.717952728271484
    9. '   ' → logprob: -9.842952728271484
    10. '	re' → logprob: -10.342952728271484

Token 160: ' order' (ID: 2569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34356462955474854
    2. '[::-' → logprob: -1.3435646295547485
    3. '<|end|>' → logprob: -4.468564510345459
    4. ':' → logprob: -4.843564510345459
    5. 'for' → logprob: -5.718564510345459
    6. '<|end|>' → logprob: -6.468564510345459
    7. ',' → logprob: -6.718564510345459
    8. ' to' → logprob: -6.968564510345459
    9. '   ' → logprob: -7.093564510345459
    10. '
' → logprob: -7.593564510345459

Token 161: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7354148030281067
    2. '[::-' → logprob: -1.735414743423462
    3. '
' → logprob: -2.110414743423462
    4. '           ' → logprob: -2.485414743423462
    5. '<|end|>' → logprob: -2.735414743423462
    6. ':' → logprob: -3.735414743423462
    7. ',' → logprob: -4.610414981842041
    8. '       ' → logprob: -4.860414981842041
    9. 'for' → logprob: -5.235414981842041
    10. '\n' → logprob: -5.235414981842041

Token 162: 'simulate' (ID: 192331)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.666272759437561
    2. 're' → logprob: -1.541272759437561
    3. 'range' → logprob: -1.541272759437561
    4. ' reversed' → logprob: -3.1662726402282715
    5. ' range' → logprob: -4.7912726402282715
    6. ' for' → logprob: -5.2912726402282715
    7. '   ' → logprob: -6.7912726402282715
    8. '[::-' → logprob: -7.2912726402282715
    9. 'reverse' → logprob: -8.16627311706543
    10. ')' → logprob: -8.41627311706543

Token 163: ' unfolding' (ID: 125754)
  Prédit: ' folding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' folding' → logprob: -0.7919483780860901
    2. ' the' → logprob: -1.5419483184814453
    3. ' unfolding' → logprob: -2.1669483184814453
    4. 'fold' → logprob: -2.5419483184814453
    5. ' folds' → logprob: -2.7919483184814453
    6. 'the' → logprob: -3.1669483184814453
    7. 'un' → logprob: -4.916948318481445
    8. 'reverse' → logprob: -5.041948318481445
    9. ' fold' → logprob: -5.041948318481445
    10. ' them' → logprob: -5.791948318481445

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0388655886054039
    2. ' for' → logprob: -3.913865566253662
    3. '):' → logprob: -4.788865566253662
    4. ')
' → logprob: -5.538865566253662
    5. '):
' → logprob: -6.038865566253662
    6. 'for' → logprob: -6.288865566253662
    7. ' to' → logprob: -7.788865566253662
    8. ' )' → logprob: -7.913865566253662
    9. '[::-' → logprob: -8.78886604309082
    10. ':' → logprob: -9.28886604309082

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4007185697555542
    2. '
' → logprob: -2.5257186889648438
    3. ' for' → logprob: -2.6507186889648438
    4. '       ' → logprob: -3.5257186889648438
    5. ' 
' → logprob: -3.6507186889648438
    6. ':' → logprob: -3.6507186889648438
    7. '<|end|>' → logprob: -3.6507186889648438
    8. '\n' → logprob: -4.150718688964844
    9. ')' → logprob: -4.650718688964844
    10. ' ' → logprob: -4.900718688964844

Token 166: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4741207957267761
    2. 'for' (adapté à ' for') → logprob: -0.9741207957267761
    3. '   ' → logprob: -10.72412109375
    4. '
' → logprob: -11.59912109375
    5. '       ' → logprob: -11.97412109375
    6. '	for' → logprob: -12.34912109375
    7. '[::-' → logprob: -15.22412109375
    8. '```' → logprob: -15.34912109375
    9. 'r' → logprob: -15.59912109375
    10. ')' → logprob: -15.59912109375

Token 167: ' d' (ID: 272)
  Prédit: 'fx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fx' → logprob: -0.1379854679107666
    2. ' fx' → logprob: -2.6379854679107666
    3. 'i' → logprob: -3.5129854679107666
    4. ' i' → logprob: -4.5129852294921875
    5. 'x' → logprob: -5.0129852294921875
    6. ' fold' → logprob: -5.7629852294921875
    7. 'fold' → logprob: -5.7629852294921875
    8. 'f' → logprob: -7.5129852294921875
    9. 'ix' → logprob: -7.7629852294921875
    10. ' x' → logprob: -7.8879852294921875

Token 168: '_i' (ID: 10853)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006946814828552306
    2. 'ir' → logprob: -7.500694751739502
    3. ',' → logprob: -9.375694274902344
    4. 'irection' → logprob: -10.250694274902344
    5. '_x' → logprob: -12.000694274902344
    6. 'ist' → logprob: -12.000694274902344
    7. ',x' → logprob: -13.500694274902344
    8. ' ,' → logprob: -13.625694274902344
    9. ' x' → logprob: -13.625694274902344
    10. 'xi' → logprob: -13.750694274902344

Token 169: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012453611008822918
    2. ' in' → logprob: -4.762453556060791
    3. ',' → logprob: -5.637453556060791
    4. 'dx' → logprob: -9.01245403289795
    5. 'n' → logprob: -10.51245403289795
    6. 'in' → logprob: -10.63745403289795
    7. 'ex' → logprob: -11.38745403289795
    8. 'xt' → logprob: -11.51245403289795
    9. 'd' → logprob: -11.76245403289795
    10. 'xed' → logprob: -12.13745403289795

Token 170: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.076728105545044
    2. 'l' → logprob: -1.826728105545044
    3. 'v' → logprob: -2.576728105545044
    4. 'k' → logprob: -2.576728105545044
    5. 'a' → logprob: -2.826728105545044
    6. 's' → logprob: -2.951728105545044
    7. 'f' → logprob: -3.201728105545044
    8. 'p' → logprob: -3.576728105545044
    9. 'x' → logprob: -3.576728105545044
    10. 'd' → logprob: -3.701728105545044

Token 171: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6168054342269897
    2. ' in' → logprob: -1.2418054342269897
    3. 'ount' → logprob: -2.7418055534362793
    4. 'o' → logprob: -3.7418055534362793
    5. 'nt' → logprob: -3.7418055534362793
    6. 'x' → logprob: -4.616805553436279
    7. 'in' → logprob: -4.866805553436279
    8. 'oord' → logprob: -5.616805553436279
    9. 'i' → logprob: -5.866805553436279
    10. 'on' → logprob: -5.866805553436279

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01117007341235876
    2. 'in' → logprob: -4.511169910430908
    3. ',' → logprob: -9.136170387268066
    4. ')' → logprob: -13.011170387268066
    5. 's' → logprob: -13.011170387268066
    6. ' ,' → logprob: -13.386170387268066
    7. ' ' → logprob: -13.511170387268066
    8. '[::-' → logprob: -13.886170387268066
    9. '	in' → logprob: -14.261170387268066
    10. '
' → logprob: -14.261170387268066

Token 173: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.45454666018486023
    2. 'fold' → logprob: -1.2045466899871826
    3. ' reversed' → logprob: -3.2045466899871826
    4. ' folds' → logprob: -3.7045466899871826
    5. 'reverse' → logprob: -9.329546928405762
    6. ' fold' → logprob: -9.704546928405762
    7. ' folded' → logprob: -10.329546928405762
    8. '   ' → logprob: -11.079546928405762
    9. '[::-' → logprob: -11.829546928405762
    10. '	re' → logprob: -12.204546928405762

Token 174: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.01135714165866375
    2. 'fold' → logprob: -4.511357307434082
    3. ' folds' → logprob: -8.761357307434082
    4. 'f' → logprob: -9.136357307434082
    5. '(range' → logprob: -10.886357307434082
    6. '	f' → logprob: -12.136357307434082
    7. '(' → logprob: -12.136357307434082
    8. 'fol' → logprob: -12.261357307434082
    9. ')' → logprob: -13.261357307434082
    10. 'range' → logprob: -13.386357307434082

Token 175: 'olds' (ID: 37608)
  Prédit: 'olds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olds' → logprob: -0.0006608496769331396
    2. 'old' → logprob: -8.12566089630127
    3. 'fold' → logprob: -9.25066089630127
    4. '(' → logprob: -10.00066089630127
    5. 'ol' → logprob: -10.50066089630127
    6. '```' → logprob: -10.75066089630127
    7. '`' → logprob: -11.00066089630127
    8. '{' → logprob: -11.25066089630127
    9. '[' → logprob: -11.25066089630127
    10. ')' → logprob: -11.25066089630127

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003270023735240102
    2. '):
' → logprob: -8.875327110290527
    3. ':' → logprob: -9.000327110290527
    4. ' ):' → logprob: -9.750327110290527
    5. ')' → logprob: -13.125327110290527
    6. '():' → logprob: -13.375327110290527
    7. ']:' → logprob: -14.250327110290527
    8. '}:' → logprob: -14.750327110290527
    9. '):
' → logprob: -14.750327110290527
    10. '):

' → logprob: -15.625327110290527

Token 177: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18406562507152557
    2. ':
' → logprob: -1.809065580368042
    3. '               ' → logprob: -6.309065818786621
    4. '           ' → logprob: -7.309065818786621
    5. ',' → logprob: -7.934065818786621
    6. '<|end|>' → logprob: -8.059065818786621
    7. ' :' → logprob: -8.184065818786621
    8. '):
' → logprob: -8.309065818786621
    9. '
' → logprob: -8.934065818786621
    10. ' if' → logprob: -9.184065818786621

Token 178: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.009556444361805916
    2. ' new' → logprob: -5.134556293487549
    3. 'next' → logprob: -6.009556293487549
    4. 'points' → logprob: -7.134556293487549
    5. '           ' → logprob: -8.634556770324707
    6. 'temp' → logprob: -9.634556770324707
    7. '   ' → logprob: -10.509556770324707
    8. ' next' → logprob: -10.509556770324707
    9. 'nd' → logprob: -10.759556770324707
    10. 'n' → logprob: -11.384556770324707

Token 179: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.005957598797976971
    2. 'points' → logprob: -5.13095760345459
    3. '_' → logprob: -11.00595760345459
    4. '_p' → logprob: -11.88095760345459
    5. ' points' → logprob: -13.50595760345459
    6. '_pts' → logprob: -14.13095760345459
    7. '_positions' → logprob: -14.25595760345459
    8. 'Points' → logprob: -14.25595760345459
    9. 's' → logprob: -14.63095760345459
    10. '_point' → logprob: -15.25595760345459

Token 180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695130705833435
    2. ' =' → logprob: -2.126951217651367
    3. '={}' → logprob: -10.751951217651367
    4. '={' → logprob: -13.876951217651367
    5. '={}
' → logprob: -15.376951217651367
    6. '=dict' → logprob: -16.001951217651367
    7. ' ' → logprob: -16.376951217651367
    8. ',' → logprob: -16.376951217651367
    9. ' ={' → logprob: -16.501951217651367
    10. '{' → logprob: -16.626951217651367

Token 181: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -4.8828707804204896e-05
    2. 'dict' → logprob: -10.000048637390137
    3. 'default' → logprob: -12.750048637390137
    4. '{}
' → logprob: -15.000048637390137
    5. ' {}' → logprob: -16.500049591064453
    6. '{})' → logprob: -17.750049591064453
    7. '{}

' → logprob: -18.000049591064453
    8. ' dict' → logprob: -18.000049591064453
    9. '{' → logprob: -18.875049591064453
    10. 'collections' → logprob: -19.125049591064453

Token 182: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1129029169678688
    2. '()
' → logprob: -2.237902879714966
    3. '()
' → logprob: -9.862902641296387
    4. '()

' → logprob: -10.862902641296387
    5. '()}' → logprob: -13.362902641296387
    6. '()\' → logprob: -13.612902641296387
    7. '();' → logprob: -13.862902641296387
    8. '()`' → logprob: -13.987902641296387
    9. '()</' → logprob: -14.237902641296387
    10. '()>' → logprob: -14.612902641296387

Token 183: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22334955632686615
    2. '           ' → logprob: -1.7233495712280273
    3. ' for' → logprob: -4.473349571228027
    4. '<|end|>' → logprob: -5.223349571228027
    5. '	       ' → logprob: -6.348349571228027
    6. 'for' → logprob: -6.723349571228027
    7. '       ' → logprob: -7.598349571228027
    8. '	           ' → logprob: -7.848349571228027
    9. ' ' → logprob: -7.973349571228027
    10. '                   ' → logprob: -8.723349571228027

Token 184: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6872085928916931
    2. '               ' → logprob: -0.9372085928916931
    3. 'for' → logprob: -2.687208652496338
    4. '           ' → logprob: -3.312208652496338
    5. '	for' → logprob: -8.93720817565918
    6. '	       ' → logprob: -9.18720817565918
    7. ' ' → logprob: -9.31220817565918
    8. '       ' → logprob: -9.43720817565918
    9. '	           ' → logprob: -9.43720817565918
    10. '                   ' → logprob: -9.93720817565918

Token 185: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16041339933872223
    2. 'd' → logprob: -1.910413384437561
    3. ' c' → logprob: -9.28541374206543
    4. 'c' → logprob: -9.91041374206543
    5. '(d' → logprob: -11.16041374206543
    6. '	d' → logprob: -11.28541374206543
    7. ' ' → logprob: -12.09791374206543
    8. '  ' → logprob: -12.97291374206543
    9. '   ' → logprob: -13.34791374206543
    10. '1' → logprob: -13.72291374206543

Token 186: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -9.186122770188376e-05
    2. '==' → logprob: -10.250091552734375
    3. 'i' → logprob: -10.750091552734375
    4. '[i' → logprob: -11.625091552734375
    5. '_' → logprob: -11.875091552734375
    6. ' ==' → logprob: -12.500091552734375
    7. 'irection' → logprob: -12.625091552734375
    8. '[' → logprob: -13.125091552734375
    9. '=' → logprob: -13.375091552734375
    10. ' _' → logprob: -13.625091552734375

Token 187: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4292214810848236
    2. '==' → logprob: -1.054221510887146
    3. ' ' → logprob: -8.804221153259277
    4. '[' → logprob: -9.429221153259277
    5. '0' → logprob: -10.304221153259277
    6. ' <=' → logprob: -10.304221153259277
    7. ':' → logprob: -10.429221153259277
    8. ' in' → logprob: -10.554221153259277
    9. '<=' → logprob: -10.679221153259277
    10. '==
' → logprob: -10.679221153259277

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16866840422153473
    2. '1' → logprob: -1.9186683893203735
    3. ' ' → logprob: -4.793668270111084
    4. '2' → logprob: -9.793668746948242
    5. ''' → logprob: -10.543668746948242
    6. '-' → logprob: -10.918668746948242
    7. '   ' → logprob: -12.543668746948242
    8. '  ' → logprob: -13.043668746948242
    9. '3' → logprob: -13.356168746948242
    10. ' -' → logprob: -13.418668746948242

Token 189: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1432380974292755
    2. '1' → logprob: -2.018238067626953
    3. ''' → logprob: -8.018238067626953
    4. '2' → logprob: -9.018238067626953
    5. '-' → logprob: -10.268238067626953
    6. ' ' → logprob: -10.268238067626953
    7. '"' → logprob: -12.518238067626953
    8. 'H' → logprob: -12.705738067626953
    9. ''H' → logprob: -12.830738067626953
    10. '3' → logprob: -12.893238067626953

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002418702933937311
    2. ':
' → logprob: -6.127418518066406
    3. ' :' → logprob: -8.377418518066406
    4. ' and' → logprob: -13.502418518066406
    5. ' :
' → logprob: -14.002418518066406
    6. ':#' → logprob: -15.127418518066406
    7. ':

' → logprob: -15.502418518066406
    8. ':
' → logprob: -15.627418518066406
    9. ' or' → logprob: -15.752418518066406
    10. '):' → logprob: -15.877418518066406

Token 191: '                   ' (ID: 699)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41731446981430054
    2. '                   ' → logprob: -1.5423145294189453
    3. 'for' → logprob: -2.7923145294189453
    4. '               ' → logprob: -3.5423145294189453
    5. '#' → logprob: -4.167314529418945
    6. '           ' → logprob: -4.542314529418945
    7. ' #' → logprob: -5.542314529418945
    8. ' ' → logprob: -6.042314529418945
    9. '<|end|>' → logprob: -7.167314529418945
    10. '
' → logprob: -7.292314529418945

Token 192: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35325944423675537
    2. ' for' → logprob: -1.2282594442367554
    3. '               ' → logprob: -5.478259563446045
    4. '#' (adapté à ' #') → logprob: -8.353259086608887
    5. '                   ' → logprob: -8.353259086608887
    6. ' ' → logprob: -9.853259086608887
    7. ' #' → logprob: -10.228259086608887
    8. 'For' → logprob: -11.853259086608887
    9. '                       ' → logprob: -11.853259086608887
    10. 'x' → logprob: -11.978259086608887

Token 193: ' vertical' (ID: 17679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21070919930934906
    2. '#' → logprob: -1.7107092142105103
    3. 'fold' → logprob: -5.335709095001221
    4. ' for' → logprob: -6.585709095001221
    5. 'Fold' → logprob: -6.585709095001221
    6. 'For' → logprob: -8.085709571838379
    7. 'x' → logprob: -8.210709571838379
    8. 'new' → logprob: -8.585709571838379
    9. ' #' → logprob: -8.585709571838379
    10. '                   ' → logprob: -8.710709571838379

Token 194: ' fold' (ID: 17691)
  Prédit: ' fold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fold' → logprob: -0.7644487619400024
    2. 'fold' → logprob: -0.7644487619400024
    3. ' line' → logprob: -3.889448642730713
    4. ' for' → logprob: -4.139448642730713
    5. 'for' → logprob: -4.264448642730713
    6. 'line' → logprob: -4.264448642730713
    7. '_fold' → logprob: -6.764448642730713
    8. 'cut' → logprob: -7.389448642730713
    9. ' cut' → logprob: -7.764448642730713
    10. ' at' → logprob: -8.389449119567871

Token 195: ' at' (ID: 540)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45375245809555054
    2. 'for' → logprob: -1.5787525177001953
    3. '                   ' → logprob: -2.4537525177001953
    4. '
' → logprob: -3.3287525177001953
    5. ':' → logprob: -3.8287525177001953
    6. ':
' → logprob: -5.328752517700195
    7. '                       ' → logprob: -5.828752517700195
    8. ' at' → logprob: -6.328752517700195
    9. '               ' → logprob: -6.578752517700195
    10. ',' → logprob: -7.203752517700195

Token 196: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.23533356189727783
    2. ' c' → logprob: -1.6103335618972778
    3. 'w' → logprob: -5.110333442687988
    4. ' w' → logprob: -5.860333442687988
    5. ' ' → logprob: -8.485333442687988
    6. '(c' → logprob: -8.860333442687988
    7. '
' → logprob: -9.235333442687988
    8. 'h' → logprob: -9.360333442687988
    9. ' (' → logprob: -9.360333442687988
    10. '   ' → logprob: -9.797833442687988

Token 197: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -5.319370302458992e-06
    2. 'i' → logprob: -12.750005722045898
    3. '_' → logprob: -14.375005722045898
    4. '[i' → logprob: -14.625005722045898
    5. '_c' → logprob: -14.750005722045898
    6. 'new' → logprob: -15.750005722045898
    7. '-i' → logprob: -16.0000057220459
    8. '+i' → logprob: -16.2500057220459
    9. '_x' → logprob: -16.3750057220459
    10. '=' → logprob: -16.6250057220459

Token 198: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6934855580329895
    2. ' for' → logprob: -0.9434855580329895
    3. ':' → logprob: -2.4434854984283447
    4. '=' → logprob: -4.318485736846924
    5. '
' → logprob: -5.568485736846924
    6. ' =' → logprob: -6.193485736846924
    7. ':
' → logprob: -6.318485736846924
    8. ',' → logprob: -7.318485736846924
    9. '                   ' → logprob: -7.568485736846924
    10. 'x' → logprob: -7.818485736846924

Token 199: ' left' (ID: 3561)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.17231500148773193
    2. 'left' → logprob: -2.1723151206970215
    3. '0' → logprob: -3.6723151206970215
    4. 'w' → logprob: -5.0473151206970215
    5. ' the' → logprob: -5.2973151206970215
    6. 'c' → logprob: -5.7973151206970215
    7. 'x' → logprob: -5.9223151206970215
    8. 'right' → logprob: -6.6723151206970215
    9. ' left' → logprob: -8.797314643859863
    10. 'width' → logprob: -9.547314643859863

Token 200: ' fold' (ID: 17691)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05642366409301758
    2. '=' → logprob: -4.556423664093018
    3. '                   ' → logprob: -4.556423664093018
    4. ':
' → logprob: -4.806423664093018
    5. ' to' → logprob: -5.181423664093018
    6. ',' → logprob: -5.306423664093018
    7. ' for' → logprob: -5.431423664093018
    8. ' side' → logprob: -5.931423664093018
    9. ' :' → logprob: -6.931423664093018
    10. 'for' → logprob: -6.931423664093018

Token 201: ' onto' (ID: 13291)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5018682479858398
    2. 'er' → logprob: -1.5018682479858398
    3. 'ing' → logprob: -2.00186824798584
    4. ' for' → logprob: -2.75186824798584
    5. 'width' → logprob: -2.75186824798584
    6. 'for' → logprob: -2.87686824798584
    7. ',' → logprob: -3.25186824798584
    8. '                   ' → logprob: -3.37686824798584
    9. 'new' → logprob: -3.87686824798584
    10. 'ed' → logprob: -4.00186824798584

Token 202: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7264317870140076
    2. 'c' → logprob: -1.3514318466186523
    3. 'the' → logprob: -2.2264318466186523
    4. 'range' → logprob: -2.6014318466186523
    5. 'new' → logprob: -3.7264318466186523
    6. 'w' → logprob: -4.351431846618652
    7. '{' → logprob: -4.976431846618652
    8. ' the' → logprob: -5.226431846618652
    9. ' right' → logprob: -5.351431846618652
    10. ' range' → logprob: -5.726431846618652

Token 203: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34004735946655273
    2. ':
' → logprob: -2.3400473594665527
    3. '                   ' → logprob: -2.8400473594665527
    4. '
' → logprob: -2.9650473594665527
    5. ' for' → logprob: -3.7150473594665527
    6. '=' → logprob: -4.090047359466553
    7. 'for' → logprob: -4.840047359466553
    8. '               ' → logprob: -4.840047359466553
    9. ',' → logprob: -5.090047359466553
    10. '                    
' → logprob: -6.215047359466553

Token 204: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.195523202419281
    2. ' for' → logprob: -3.195523262023926
    3. '               ' → logprob: -3.320523262023926
    4. 'for' → logprob: -3.570523262023926
    5. '<|end|>' → logprob: -3.570523262023926
    6. '                       ' → logprob: -4.195523262023926
    7. '                ' → logprob: -5.445523262023926
    8. '
' → logprob: -5.820523262023926
    9. ' ' → logprob: -5.820523262023926
    10. ':' → logprob: -5.945523262023926

Token 205: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07352729886770248
    2. ' for' → logprob: -2.6985273361206055
    3. '                   ' → logprob: -5.6985273361206055
    4. '               ' → logprob: -8.823527336120605
    5. '                       ' → logprob: -9.948527336120605
    6. ' ' → logprob: -11.073527336120605
    7. '	for' → logprob: -11.323527336120605
    8. '           ' → logprob: -12.948527336120605
    9. '   ' → logprob: -12.948527336120605
    10. '0' → logprob: -13.323527336120605

Token 206: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08504708856344223
    2. ' (' → logprob: -2.7100470066070557
    3. '(point' → logprob: -5.085047245025635
    4. '(px' → logprob: -5.460047245025635
    5. '(pos' → logprob: -5.960047245025635
    6. '(pt' → logprob: -7.085047245025635
    7. '(' → logprob: -7.460047245025635
    8. '(key' → logprob: -8.835046768188477
    9. '(k' → logprob: -9.460046768188477
    10. '(p' → logprob: -9.710046768188477

Token 207: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010235115041723475
    2. ' x' → logprob: -9.250102043151855
    3. '```' → logprob: -13.375102043151855
    4. '   ' → logprob: -13.750102043151855
    5. '	x' → logprob: -14.000102043151855
    6. '_x' → logprob: -14.750102043151855
    7. ')x' → logprob: -14.875102043151855
    8. '
' → logprob: -15.125102043151855
    9. '(x' → logprob: -15.125102043151855
    10. ' ' → logprob: -15.125102043151855

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006189360748976469
    2. ',y' → logprob: -5.131189346313477
    3. ' ,' → logprob: -8.381189346313477
    4. 'y' → logprob: -10.756189346313477
    5. ' y' → logprob: -12.881189346313477
    6. ',
' → logprob: -13.006189346313477
    7. '‌,' → logprob: -13.631189346313477
    8. ')' → logprob: -14.631189346313477
    9. ',)' → logprob: -14.631189346313477
    10. '),' → logprob: -14.693689346313477

Token 209: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004307884373702109
    2. ' y' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.625431060791016
    4. '	y' → logprob: -18.625431060791016
    5. '    ' → logprob: -19.125431060791016
    6. '  ' → logprob: -20.250431060791016
    7. '
' → logprob: -20.500431060791016
    8. ' ' → logprob: -20.750431060791016
    9. ',y' → logprob: -20.875431060791016
    10. ')y' → logprob: -21.750431060791016

Token 210: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3531001806259155
    2. ',' → logprob: -1.2281001806259155
    3. ')' → logprob: -6.478100299835205
    4. ' ),' → logprob: -6.728100299835205
    5. ' ,' → logprob: -6.978100299835205
    6. ',),' → logprob: -7.228100299835205
    7. ',)' → logprob: -9.353099822998047
    8. '),(' → logprob: -10.353099822998047
    9. ',y' → logprob: -10.353099822998047
    10. ' in' → logprob: -10.603099822998047

Token 211: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.13776344060897827
    2. 'cnt' → logprob: -2.137763500213623
    3. ' count' → logprob: -4.762763500213623
    4. ' cnt' → logprob: -6.137763500213623
    5. 'v' → logprob: -9.762763023376465
    6. 'val' → logprob: -11.762763023376465
    7. 'ct' → logprob: -13.137763023376465
    8. 'c' → logprob: -13.137763023376465
    9. 'value' → logprob: -13.137763023376465
    10. ' v' → logprob: -13.387763023376465

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17975208163261414
    2. 'in' → logprob: -1.8047521114349365
    3. ')' → logprob: -13.429752349853516
    4. '=' → logprob: -13.679752349853516
    5. ' ' → logprob: -13.804752349853516
    6. ',' → logprob: -14.304752349853516
    7. 's' → logprob: -14.429752349853516
    8. 'value' → logprob: -14.804752349853516
    9. 'import' → logprob: -15.304752349853516
    10. '
' → logprob: -15.554752349853516

Token 213: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.011050998233258724
    2. ' points' → logprob: -4.511051177978516
    3. '(points' → logprob: -13.511051177978516
    4. 'list' → logprob: -14.386051177978516
    5. '	points' → logprob: -15.386051177978516
    6. 'items' → logprob: -15.636051177978516
    7. '{' → logprob: -16.011051177978516
    8. ' ' → logprob: -16.136051177978516
    9. '.points' → logprob: -16.136051177978516
    10. '   ' → logprob: -16.261051177978516

Token 214: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.21412073075771332
    2. ':' → logprob: -1.9641207456588745
    3. 'items' → logprob: -3.839120626449585
    4. ' in' → logprob: -4.214120864868164
    5. ':
' → logprob: -4.464120864868164
    6. ' items' → logprob: -6.589120864868164
    7. '                   ' → logprob: -7.714120864868164
    8. ',' → logprob: -7.839120864868164
    9. '                       ' → logprob: -7.839120864868164
    10. '):' → logprob: -8.339120864868164

Token 215: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06265047937631607
    2. '():
' → logprob: -2.812650442123413
    3. '()' → logprob: -7.312650680541992
    4. '():
' → logprob: -11.687650680541992
    5. '():

' → logprob: -12.687650680541992
    6. '()):
' → logprob: -13.062650680541992
    7. ':' → logprob: -13.687650680541992
    8. '(' → logprob: -15.062650680541992
    9. '):' → logprob: -15.937650680541992
    10. '()}' → logprob: -16.437650680541992

Token 216: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.021307136863470078
    2. ' if' → logprob: -4.771306991577148
    3. '                        ' → logprob: -5.771306991577148
    4. '                    ' → logprob: -6.271306991577148
    5. '                   ' → logprob: -6.521306991577148
    6. 'if' → logprob: -6.521306991577148
    7. ' ' → logprob: -6.521306991577148
    8. '                ' → logprob: -7.521306991577148
    9. '                           ' → logprob: -7.771306991577148
    10. ' new' → logprob: -7.771306991577148

Token 217: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5290575623512268
    2. ' new' → logprob: -1.279057502746582
    3. 'if' (adapté à ' if') → logprob: -2.404057502746582
    4. 'new' → logprob: -4.029057502746582
    5. '                       ' → logprob: -4.279057502746582
    6. '                           ' → logprob: -4.904057502746582
    7. ' x' → logprob: -6.529057502746582
    8. 'x' → logprob: -7.779057502746582
    9. ' nx' → logprob: -7.779057502746582
    10. '           ' → logprob: -8.779057502746582

Token 218: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47408050298690796
    2. 'x' → logprob: -0.974080502986908
    3. '(x' → logprob: -14.224080085754395
    4. ' ' → logprob: -14.349080085754395
    5. '                           ' → logprob: -14.474080085754395
    6. '	x' → logprob: -14.849080085754395
    7. '                       ' → logprob: -15.349080085754395
    8. '                               ' → logprob: -15.474080085754395
    9. ')x' → logprob: -15.849080085754395
    10. '0' → logprob: -15.974080085754395

Token 219: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4029403626918793
    2. ' <' → logprob: -1.1529403924942017
    3. ' >' → logprob: -5.152940273284912
    4. '>' → logprob: -5.652940273284912
    5. ' <=' → logprob: -5.652940273284912
    6. '<=' → logprob: -6.027940273284912
    7. ' ' → logprob: -8.52794075012207
    8. ' >=' → logprob: -9.15294075012207
    9. '>=' → logprob: -9.15294075012207
    10. ')' → logprob: -9.40294075012207

Token 220: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02978682890534401
    2. ' c' → logprob: -3.5297868251800537
    3. '0' → logprob: -10.904787063598633
    4. '                       ' → logprob: -12.404787063598633
    5. '                   ' → logprob: -12.404787063598633
    6. '	c' → logprob: -13.779787063598633
    7. ' ' → logprob: -13.904787063598633
    8. '=c' → logprob: -14.279787063598633
    9. '=' → logprob: -14.404787063598633
    10. '                           ' → logprob: -14.529787063598633

Token 221: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -13.125003814697266
    3. '_c' → logprob: -13.875003814697266
    4. 'i' → logprob: -14.125003814697266
    5. ' _' → logprob: -15.500003814697266
    6. '```' → logprob: -16.250003814697266
    7. '   ' → logprob: -17.000003814697266
    8. ' i' → logprob: -17.125003814697266
    9. '       ' → logprob: -17.500003814697266
    10. ')' → logprob: -17.500003814697266

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3194699287414551
    2. ':
' → logprob: -1.319469928741455
    3. '                           ' → logprob: -6.194469928741455
    4. '):
' → logprob: -6.444469928741455
    5. '                       ' → logprob: -6.569469928741455
    6. '):' → logprob: -7.944469928741455
    7. ')' → logprob: -8.569469451904297
    8. ' :' → logprob: -8.944469451904297
    9. ' :
' → logprob: -9.069469451904297
    10. '                               ' → logprob: -9.444469451904297

Token 223: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.07217594236135483
    2. ' new' → logprob: -3.197175979614258
    3. ' :' → logprob: -5.197175979614258
    4. '                       ' → logprob: -5.322175979614258
    5. ':' → logprob: -5.822175979614258
    6. ' x' → logprob: -5.947175979614258
    7. ',' → logprob: -5.947175979614258
    8. 'new' → logprob: -6.197175979614258
    9. ')' → logprob: -6.572175979614258
    10. '                               ' → logprob: -6.697175979614258

Token 224: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.15857599675655365
    2. 'new' → logprob: -2.033576011657715
    3. ' x' → logprob: -4.908576011657715
    4. '                           ' → logprob: -5.908576011657715
    5. ' for' → logprob: -6.408576011657715
    6. 'x' → logprob: -6.533576011657715
    7. '                               ' → logprob: -7.283576011657715
    8. ' (' → logprob: -8.408576011657715
    9. 'for' → logprob: -8.408576011657715
    10. '(x' → logprob: -8.908576011657715

Token 225: ' right' (ID: 1849)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.26049405336380005
    2. ' new' → logprob: -1.7604939937591553
    3. 'x' → logprob: -4.760494232177734
    4. 'nx' → logprob: -4.760494232177734
    5. 'left' → logprob: -5.260494232177734
    6. 'pos' → logprob: -5.260494232177734
    7. '#' → logprob: -5.385494232177734
    8. 'fold' → logprob: -5.885494232177734
    9. 'ref' → logprob: -5.885494232177734
    10. 'orig' → logprob: -6.010494232177734

Token 226: ' side' (ID: 4307)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9713289141654968
    2. '_x' → logprob: -1.8463289737701416
    3. ',' → logprob: -1.9713289737701416
    4. ' =' → logprob: -2.8463289737701416
    5. ' x' → logprob: -2.8463289737701416
    6. '=' → logprob: -2.9713289737701416
    7. 'fold' → logprob: -3.7213289737701416
    8. ' -' → logprob: -3.8463289737701416
    9. '(x' → logprob: -3.9713289737701416
    10. ' ,' → logprob: -4.5963287353515625

Token 227: ' stays' (ID: 35239)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9467521905899048
    2. ')' → logprob: -2.3217520713806152
    3. ',' → logprob: -2.4467520713806152
    4. ' =' → logprob: -2.9467520713806152
    5. ' new' → logprob: -2.9467520713806152
    6. ':
' → logprob: -3.1967520713806152
    7. 'new' → logprob: -3.3217520713806152
    8. '):
' → logprob: -3.3217520713806152
    9. '                       ' → logprob: -3.3217520713806152
    10. '                           ' → logprob: -3.3217520713806152

Token 228: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6216109395027161
    2. '                               ' → logprob: -1.9966108798980713
    3. 'the' → logprob: -2.7466108798980713
    4. 'same' → logprob: -2.9966108798980713
    5. 'new' → logprob: -3.1216108798980713
    6. ' the' → logprob: -3.3716108798980713
    7. ' as' → logprob: -3.4966108798980713
    8. 'in' → logprob: -3.6216108798980713
    9. 'as' → logprob: -4.24661111831665
    10. ',' → logprob: -4.37161111831665

Token 229: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.14721380174160004
    2. ' new' → logprob: -2.6472136974334717
    3. '                               ' → logprob: -3.6472136974334717
    4. 'new' → logprob: -4.147213935852051
    5. '                       ' → logprob: -4.522213935852051
    6. '{
' → logprob: -5.772213935852051
    7. '```' → logprob: -6.272213935852051
    8. ',' → logprob: -6.897213935852051
    9. '                            ' → logprob: -7.022213935852051
    10. ' {
' → logprob: -7.022213935852051

Token 230: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.28291016817092896
    2. 'new' (adapté à ' new') → logprob: -1.4079101085662842
    3. '                           ' → logprob: -6.782910346984863
    4. '                               ' → logprob: -7.907910346984863
    5. ' (' → logprob: -9.532910346984863
    6. '   ' → logprob: -10.282910346984863
    7. '(new' → logprob: -10.282910346984863
    8. '
' → logprob: -10.782910346984863
    9. '                       ' → logprob: -11.032910346984863
    10. ' ' → logprob: -11.407910346984863

Token 231: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0001342903997283429
    2. 'points' → logprob: -9.000134468078613
    3. '_' → logprob: -12.500134468078613
    4. '_point' → logprob: -13.625134468078613
    5. '_positions' → logprob: -13.750134468078613
    6. '_,' → logprob: -14.000134468078613
    7. '(' → logprob: -14.000134468078613
    8. '_POINTS' → logprob: -14.375134468078613
    9. 'Points' → logprob: -14.500134468078613
    10. '_p' → logprob: -14.875134468078613

Token 232: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0034716592635959387
    2. '[x' → logprob: -5.753471851348877
    3. '(x' → logprob: -8.253471374511719
    4. '[' → logprob: -10.753471374511719
    5. '                           ' → logprob: -12.503471374511719
    6. '                       ' → logprob: -13.003471374511719
    7. ' (' → logprob: -13.378471374511719
    8. '.setdefault' → logprob: -13.503471374511719
    9. 'x' → logprob: -14.628471374511719
    10. '((' → logprob: -14.878471374511719

Token 233: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.978233846486546e-05
    2. ' x' → logprob: -10.000049591064453
    3. '(x' → logprob: -12.500049591064453
    4. ')' → logprob: -15.875049591064453
    5. ')x' → logprob: -16.000049591064453
    6. '
' → logprob: -16.500049591064453
    7. 'c' → logprob: -16.750049591064453
    8. '{x' → logprob: -16.875049591064453
    9. '(' → logprob: -17.500049591064453
    10. '                           ' → logprob: -17.875049591064453

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013898775214329362
    2. ',y' → logprob: -7.001389980316162
    3. ' ,' → logprob: -7.751389980316162
    4. ' -' → logprob: -10.626389503479004
    5. '-' → logprob: -11.001389503479004
    6. ',
' → logprob: -13.626389503479004
    7. ')' → logprob: -13.626389503479004
    8. 'y' → logprob: -14.251389503479004
    9. ' y' → logprob: -14.438889503479004
    10. '```' → logprob: -14.813889503479004

Token 235: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01815052703022957
    2. ' y' → logprob: -4.018150329589844
    3. '
' → logprob: -15.768150329589844
    4. ')y' → logprob: -16.268150329589844
    5. ' ' → logprob: -16.393150329589844
    6. '   ' → logprob: -16.518150329589844
    7. ',y' → logprob: -16.518150329589844
    8. '	y' → logprob: -17.018150329589844
    9. '    ' → logprob: -17.643150329589844
    10. ')' → logprob: -17.643150329589844

Token 236: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4756132662296295
    2. ')]' → logprob: -0.9756132364273071
    3. ')' → logprob: -7.100613117218018
    4. ']=' → logprob: -7.850613117218018
    5. ' ]' → logprob: -8.475613594055176
    6. ']+=' → logprob: -9.600613594055176
    7. '])' → logprob: -10.975613594055176
    8. ' )' → logprob: -11.350613594055176
    9. ']]' → logprob: -12.100613594055176
    10. ']+' → logprob: -13.225613594055176

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005268384236842394
    2. ' =' → logprob: -5.505268573760986
    3. '+=' → logprob: -6.755268573760986
    4. ' +=' → logprob: -10.630268096923828
    5. ']+=' → logprob: -16.130268096923828
    6. '=
' → logprob: -16.755268096923828
    7. ']=' → logprob: -16.880268096923828
    8. '=new' → logprob: -17.380268096923828
    9. '=count' → logprob: -17.755268096923828
    10. '=

' → logprob: -18.255268096923828

Token 238: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04766533896327019
    2. 'cnt' → logprob: -3.4226653575897217
    3. ' new' → logprob: -4.297665119171143
    4. ' cnt' → logprob: -8.2976655960083
    5. '   ' → logprob: -10.6726655960083
    6. 'count' → logprob: -11.6726655960083
    7. '	new' → logprob: -12.4226655960083
    8. ' ' → logprob: -12.4851655960083
    9. '  ' → logprob: -12.5476655960083
    10. '(cnt' → logprob: -12.6101655960083

Token 239: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0008195152622647583
    2. 'points' → logprob: -7.125819683074951
    3. 'Points' → logprob: -12.250819206237793
    4. '_tokens' → logprob: -13.250819206237793
    5. 'new' → logprob: -13.250819206237793
    6. '+' → logprob: -13.750819206237793
    7. ' points' → logprob: -13.875819206237793
    8. '_' → logprob: -13.875819206237793
    9. '_POINTS' → logprob: -14.125819206237793
    10. 'token' → logprob: -14.625819206237793

Token 240: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.4140441635390744e-05
    2. '.' → logprob: -11.250014305114746
    3. 'get' → logprob: -14.625014305114746
    4. ' .' → logprob: -15.000014305114746
    5. '.setdefault' → logprob: -16.87501335144043
    6. '                           ' → logprob: -17.00001335144043
    7. '                       ' → logprob: -17.37501335144043
    8. '(' → logprob: -17.50001335144043
    9. '().' → logprob: -17.87501335144043
    10. ').' → logprob: -18.25001335144043

Token 241: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0063868374563753605
    2. '(x' → logprob: -5.381386756896973
    3. '(' → logprob: -6.506386756896973
    4. ' (' → logprob: -8.256386756896973
    5. ' ((' → logprob: -11.756386756896973
    6. '(key' → logprob: -13.756386756896973
    7. '(
' → logprob: -13.881386756896973
    8. ' ' → logprob: -14.631386756896973
    9. '[(' → logprob: -14.756386756896973
    10. '  ' → logprob: -15.631386756896973

Token 242: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04864414036273956
    2. '(x' → logprob: -3.0486440658569336
    3. ' x' → logprob: -9.923644065856934
    4. ' (' → logprob: -11.923644065856934
    5. ')x' → logprob: -14.673644065856934
    6. '{x' → logprob: -15.673644065856934
    7. '"x' → logprob: -15.798644065856934
    8. '(' → logprob: -15.923644065856934
    9. ')' → logprob: -16.29864501953125
    10. ',x' → logprob: -16.42364501953125

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002120038407156244
    2. ' ,' → logprob: -8.875211715698242
    3. ',y' → logprob: -10.000211715698242
    4. ',x' → logprob: -11.375211715698242
    5. '-' → logprob: -11.500211715698242
    6. 'x' → logprob: -13.375211715698242
    7. '[' → logprob: -13.875211715698242
    8. ' -' → logprob: -14.000211715698242
    9. '```' → logprob: -14.375211715698242
    10. '(x' → logprob: -15.500211715698242

Token 244: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0024774393532425165
    2. ' y' → logprob: -6.002477645874023
    3. 'x' → logprob: -14.127477645874023
    4. '(y' → logprob: -14.252477645874023
    5. ' ' → logprob: -16.377477645874023
    6. '(' → logprob: -16.752477645874023
    7. '   ' → logprob: -17.002477645874023
    8. ',y' → logprob: -17.377477645874023
    9. '0' → logprob: -17.627477645874023
    10. '
' → logprob: -17.627477645874023

Token 245: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007935931906104088
    2. ' ,' → logprob: -5.132936000823975
    3. ')' → logprob: -6.257936000823975
    4. ')+' → logprob: -9.632935523986816
    5. ' )' → logprob: -12.132935523986816
    6. '),' → logprob: -12.257935523986816
    7. ',)' → logprob: -13.132935523986816
    8. ',None' → logprob: -13.257935523986816
    9. ')+(' → logprob: -13.382935523986816
    10. '```' → logprob: -13.757935523986816

Token 246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008049834286794066
    2. ' ' → logprob: -7.125804901123047
    3. ')' → logprob: -14.625804901123047
    4. '+' → logprob: -17.563304901123047
    5. 'new' → logprob: -17.625804901123047
    6. ' ' → logprob: -17.750804901123047
    7. '   ' → logprob: -18.438304901123047
    8. '۰' → logprob: -18.875804901123047
    9. ' +' → logprob: -19.063304901123047
    10. '                       ' → logprob: -19.063304901123047

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. ')' → logprob: -16.375001907348633
    4. ')+' → logprob: -20.750001907348633
    5. 'cnt' → logprob: -21.125001907348633
    6. '   ' → logprob: -21.875001907348633
    7. '+' → logprob: -22.250001907348633
    8. 'new' → logprob: -22.500001907348633
    9. '1' → logprob: -22.500001907348633
    10. 'x' → logprob: -22.750001907348633

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006038527470082045
    2. ')+' → logprob: -5.381038665771484
    3. '+' → logprob: -7.131038665771484
    4. ' )' → logprob: -8.006038665771484
    5. ' +' → logprob: -8.256038665771484
    6. '+)' → logprob: -11.381038665771484
    7. ',' → logprob: -11.881038665771484
    8. ']' → logprob: -13.881038665771484
    9. '        ' → logprob: -14.006038665771484
    10. '}' → logprob: -14.256038665771484

Token 249: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602294147014618
    2. ' +' → logprob: -1.9102294445037842
    3. '+x' → logprob: -13.785229682922363
    4. '+c' → logprob: -13.785229682922363
    5. ')+' → logprob: -14.035229682922363
    6. '+=' → logprob: -14.285229682922363
    7. '+k' → logprob: -15.035229682922363
    8. ')' → logprob: -15.410229682922363
    9. '()+' → logprob: -15.660229682922363
    10. '+y' → logprob: -15.785229682922363

Token 250: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0017027945723384619
    2. ' cnt' → logprob: -6.376702785491943
    3. '(cnt' → logprob: -15.376703262329102
    4. 'count' → logprob: -15.626703262329102
    5. '	cnt' → logprob: -15.751703262329102
    6. 'ct' → logprob: -16.5017032623291
    7. '[cnt' → logprob: -18.0017032623291
    8. '   ' → logprob: -18.1267032623291
    9. ' ' → logprob: -18.1267032623291
    10. 'cn' → logprob: -19.1267032623291

Token 251: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.011360680684447289
    2. '               ' → logprob: -5.6363606452941895
    3. 'else' → logprob: -5.6363606452941895
    4. ' else' → logprob: -6.6363606452941895
    5. '                           ' → logprob: -6.6363606452941895
    6. '                   ' → logprob: -7.2613606452941895
    7. '
' → logprob: -7.6363606452941895
    8. '           ' → logprob: -8.386361122131348
    9. '       ' → logprob: -10.261361122131348
    10. ')' → logprob: -10.761361122131348

Token 252: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07436215877532959
    2. ' else' → logprob: -3.824362277984619
    3. '               ' → logprob: -3.949362277984619
    4. 'else' → logprob: -4.199362277984619
    5. '                           ' → logprob: -4.574362277984619
    6. '                   ' → logprob: -5.949362277984619
    7. '           ' → logprob: -6.574362277984619
    8. '       ' → logprob: -8.074361801147461
    9. ')' → logprob: -8.949361801147461
    10. ' elif' → logprob: -8.949361801147461

Token 253: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.49157682061195374
    2. 'else' (adapté à ' else') → logprob: -0.9915767908096313
    3. '                       ' → logprob: -4.116576671600342
    4. '                   ' → logprob: -7.616576671600342
    5. '               ' → logprob: -8.3665771484375
    6. ' elif' → logprob: -9.2415771484375
    7. '           ' → logprob: -9.3665771484375
    8. 'elif' → logprob: -10.2415771484375
    9. ' ' → logprob: -10.6165771484375
    10. '   ' → logprob: -10.9915771484375

Token 254: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2311556339263916
    2. ':
' → logprob: -1.7311556339263916
    3. ':' → logprob: -3.7311556339263916
    4. ' new' → logprob: -6.1061553955078125
    5. '                       ' → logprob: -6.9811553955078125
    6. ' (' → logprob: -7.7311553955078125
    7. '                               ' → logprob: -7.8561553955078125
    8. '                            ' → logprob: -8.231155395507812
    9. '           ' → logprob: -8.606155395507812
    10. '                   ' → logprob: -8.731155395507812

Token 255: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3563483953475952
    2. ' new' → logprob: -1.8563483953475952
    3. ' x' → logprob: -2.1063485145568848
    4. ' (' → logprob: -4.606348514556885
    5. ' for' → logprob: -5.981348514556885
    6. ' ' → logprob: -6.356348514556885
    7. 'new' → logprob: -6.481348514556885
    8. '(' → logprob: -6.731348514556885
    9. '                       ' → logprob: -6.731348514556885
    10. '(x' → logprob: -7.106348514556885

Token 256: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6001729369163513
    2. ' new' → logprob: -0.9751729369163513
    3. '(x' → logprob: -4.225172996520996
    4. '(' → logprob: -4.475172996520996
    5. ' (' → logprob: -4.600172996520996
    6. ' x' → logprob: -5.100172996520996
    7. 'fold' → logprob: -5.350172996520996
    8. ' nx' → logprob: -5.475172996520996
    9. ' reflected' → logprob: -5.475172996520996
    10. 'x' → logprob: -5.600172996520996

Token 257: ' left' (ID: 3561)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.719847321510315
    2. 'x' → logprob: -1.844847321510315
    3. 'ref' → logprob: -1.969847321510315
    4. '(x' → logprob: -2.3448472023010254
    5. 'new' → logprob: -2.5948472023010254
    6. ' reflected' → logprob: -2.7198472023010254
    7. ' (' → logprob: -2.8448472023010254
    8. '(' → logprob: -3.0948472023010254
    9. ' new' → logprob: -3.0948472023010254
    10. 'fold' → logprob: -3.4698472023010254

Token 258: ' side' (ID: 4307)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.02719886787235737
    2. '_side' → logprob: -3.9021987915039062
    3. 'side' → logprob: -6.277198791503906
    4. ')' → logprob: -6.902198791503906
    5. '_x' → logprob: -6.902198791503906
    6. ' side' → logprob: -7.277198791503906
    7. '_point' → logprob: -7.527198791503906
    8. ',' → logprob: -7.652198791503906
    9. 'points' → logprob: -7.777198791503906
    10. ')_' → logprob: -9.152198791503906

Token 259: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -2.1476986408233643
    2. ' (' → logprob: -2.1476986408233643
    3. '                           ' → logprob: -2.2726986408233643
    4. '(' → logprob: -2.3976986408233643
    5. '=(' → logprob: -2.5226986408233643
    6. '_x' → logprob: -2.6476986408233643
    7. ' =' → logprob: -2.6476986408233643
    8. '(x' → logprob: -2.6476986408233643
    9. 'x' → logprob: -2.7726986408233643
    10. 'fold' → logprob: -3.0226986408233643

Token 260: ' mirrored' (ID: 136208)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6013219952583313
    2. ' reflected' → logprob: -2.1013219356536865
    3. 'fold' → logprob: -2.3513219356536865
    4. ' (' → logprob: -2.4763219356536865
    5. 'ref' → logprob: -2.8513219356536865
    6. '(' → logprob: -3.2263219356536865
    7. ' folded' → logprob: -3.9763219356536865
    8. 'new' → logprob: -4.851322174072266
    9. '{' → logprob: -4.851322174072266
    10. '{x' → logprob: -4.976322174072266

Token 261: ' onto' (ID: 13291)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5814761519432068
    2. ' (' → logprob: -1.3314762115478516
    3. '(x' → logprob: -2.2064762115478516
    4. '((' → logprob: -3.2064762115478516
    5. ' =' → logprob: -4.831476211547852
    6. ',' → logprob: -5.331476211547852
    7. '=(' → logprob: -5.831476211547852
    8. '=' → logprob: -6.581476211547852
    9. ' at' → logprob: -6.831476211547852
    10. '                   ' → logprob: -6.831476211547852

Token 262: ' right' (ID: 1849)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036075543612241745
    2. '(c' → logprob: -3.6610755920410156
    3. ' (' → logprob: -4.911075592041016
    4. '(x' → logprob: -6.161075592041016
    5. '2' → logprob: -9.411075592041016
    6. '((' → logprob: -9.536075592041016
    7. 'c' → logprob: -9.911075592041016
    8. ' c' → logprob: -11.286075592041016
    9. '(cx' → logprob: -11.661075592041016
    10. 'x' → logprob: -11.786075592041016

Token 263: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.9636189341545105
    2. '(x' → logprob: -1.3386189937591553
    3. ' (' → logprob: -1.4636189937591553
    4. '(' → logprob: -3.0886189937591553
    5. '[(' → logprob: -4.338618755340576
    6. '_points' → logprob: -4.463618755340576
    7. '((' → logprob: -4.963618755340576
    8. '                               ' → logprob: -5.338618755340576
    9. ',' → logprob: -5.463618755340576
    10. '{x' → logprob: -5.713618755340576

Token 264: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.493123859167099
    2. ' (' → logprob: -1.2431238889694214
    3. '(' → logprob: -3.243123769760132
    4. '(x' → logprob: -3.368123769760132
    5. ' x' → logprob: -4.743124008178711
    6. '                               ' → logprob: -5.618124008178711
    7. '((' → logprob: -5.993124008178711
    8. '           ' → logprob: -6.243124008178711
    9. ' for' → logprob: -6.368124008178711
    10. '                   ' → logprob: -6.618124008178711

Token 265: ' x' (ID: 1215)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4390128254890442
    2. 'x' (adapté à ' x') → logprob: -1.9390127658843994
    3. ' new' → logprob: -2.0640127658843994
    4. ' x' → logprob: -3.3140127658843994
    5. '(x' → logprob: -3.6890127658843994
    6. ' (' → logprob: -5.1890130043029785
    7. '                           ' → logprob: -5.8140130043029785
    8. '(' → logprob: -5.8140130043029785
    9. '                               ' → logprob: -6.8140130043029785
    10. 'nx' → logprob: -6.8140130043029785

Token 266: '_m' (ID: 1285)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01783311739563942
    2. ' =' → logprob: -4.267833232879639
    3. 'new' → logprob: -6.267833232879639
    4. '_new' → logprob: -6.392833232879639
    5. ''=' → logprob: -10.76783275604248
    6. ',' → logprob: -11.14283275604248
    7. '_ref' → logprob: -11.14283275604248
    8. ' new' → logprob: -11.51783275604248
    9. ')' → logprob: -11.51783275604248
    10. ''' → logprob: -12.89283275604248

Token 267: 'irror' (ID: 80004)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34185659885406494
    2. 'irror' → logprob: -1.466856598854065
    3. ' =' → logprob: -3.2168564796447754
    4. 'ir' → logprob: -4.841856479644775
    5. '=c' → logprob: -4.966856479644775
    6. 'apped' → logprob: -6.216856479644775
    7. 'ap' → logprob: -7.216856479644775
    8. 'c' → logprob: -7.841856479644775
    9. 'oved' → logprob: -8.341856956481934
    10. '_c' → logprob: -8.716856956481934

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14269983768463135
    2. ' =' → logprob: -2.017699718475342
    3. '=c' → logprob: -11.5177001953125
    4. ')' → logprob: -12.1427001953125
    5. '=x' → logprob: -13.1427001953125
    6. ']=' → logprob: -13.3927001953125
    7. ']' → logprob: -13.8927001953125
    8. '＝' → logprob: -14.2677001953125
    9. '=
' → logprob: -14.3927001953125
    10. 'x' → logprob: -14.5177001953125

Token 269: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12707361578941345
    2. 'c' → logprob: -2.1270735263824463
    3. '(' → logprob: -9.752073287963867
    4. ' ' → logprob: -9.877073287963867
    5. '   ' → logprob: -11.002073287963867
    6. ' c' → logprob: -11.752073287963867
    7. '(c' → logprob: -12.502073287963867
    8. '```' → logprob: -13.627073287963867
    9. '           ' → logprob: -13.752073287963867
    10. '`' → logprob: -14.439573287963867

Token 270: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42916339635849
    2. 'c' → logprob: -1.0541634559631348
    3. '(' → logprob: -8.054162979125977
    4. ' ' → logprob: -9.804162979125977
    5. ' c' → logprob: -10.554162979125977
    6. '(c' → logprob: -10.804162979125977
    7. '   ' → logprob: -11.054162979125977
    8. '```' → logprob: -12.866662979125977
    9. '           ' → logprob: -12.929162979125977
    10. 'x' → logprob: -13.429162979125977

Token 271: '*c' (ID: 83421)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.694143533706665
    2. ' *' → logprob: -0.819143533706665
    3. '*c' → logprob: -2.819143533706665
    4. '*p' → logprob: -11.194143295288086
    5. '*C' → logprob: -12.819143295288086
    6. ' ' → logprob: -13.069143295288086
    7. '
' → logprob: -13.319143295288086
    8. '*d' → logprob: -13.319143295288086
    9. ' c' → logprob: -13.444143295288086
    10. '*x' → logprob: -13.944143295288086

Token 272: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -6.392202976712724e-06
    2. 'i' → logprob: -12.125006675720215
    3. 'c' → logprob: -14.500006675720215
    4. '_c' → logprob: -15.125006675720215
    5. ' _' → logprob: -16.0000057220459
    6. '_' → logprob: -17.7500057220459
    7. '\' → logprob: -18.1250057220459
    8. '```' → logprob: -19.3750057220459
    9. '[i' → logprob: -19.6250057220459
    10. '   ' → logprob: -19.6250057220459

Token 273: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25202563405036926
    2. '-' → logprob: -1.5020256042480469
    3. '-x' → logprob: -9.377025604248047
    4. ' ' → logprob: -12.502025604248047
    5. '-p' → logprob: -12.502025604248047
    6. '-c' → logprob: -14.002025604248047
    7. '```' → logprob: -14.002025604248047
    8. '−' → logprob: -14.502025604248047
    9. 'x' → logprob: -14.502025604248047
    10. '-t' → logprob: -15.127025604248047

Token 274: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019287518225610256
    2. ' x' → logprob: -6.251928806304932
    3. '(x' → logprob: -17.001928329467773
    4. ')x' → logprob: -17.751928329467773
    5. '	x' → logprob: -18.251928329467773
    6. '_x' → logprob: -20.001928329467773
    7. '{x' → logprob: -20.001928329467773
    8. '
' → logprob: -20.126928329467773
    9. '"x' → logprob: -20.126928329467773
    10. '$x' → logprob: -20.126928329467773

Token 275: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1454380303621292
    2. '<|end|>' → logprob: -2.5204379558563232
    3. ')' → logprob: -3.6454379558563232
    4. '                           ' → logprob: -4.270438194274902
    5. '
' → logprob: -5.145438194274902
    6. ' ,' → logprob: -5.895438194274902
    7. '<|end|>' → logprob: -6.395438194274902
    8. '                               ' → logprob: -6.645438194274902
    9. '               ' → logprob: -7.645438194274902
    10. ',
' → logprob: -7.770438194274902

Token 276: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8351892473874614e-05
    2. '2' → logprob: -10.000048637390137
    3. ' ' → logprob: -12.750048637390137
    4. '0' → logprob: -20.37504768371582
    5. '-' → logprob: -21.00004768371582
    6. '```' → logprob: -21.00004768371582
    7. '۱' → logprob: -21.12504768371582
    8. '１' → logprob: -21.12504768371582
    9. '   ' → logprob: -21.37504768371582
    10. '' → logprob: -21.93754768371582

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001239196863025427
    2. '2' → logprob: -9.000123977661133
    3. ' ' → logprob: -14.625123977661133
    4. '```' → logprob: -20.500123977661133
    5. '0' → logprob: -20.625123977661133
    6. '   ' → logprob: -20.750123977661133
    7. '۱' → logprob: -21.125123977661133
    8. '１' → logprob: -21.375123977661133
    9. '-' → logprob: -22.250123977661133
    10. '' → logprob: -22.375123977661133

Token 278: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.08964122831821442
    2. ')' → logprob: -2.7146413326263428
    3. ',' → logprob: -4.964641094207764
    4. '                       ' → logprob: -5.589641094207764
    5. '
' → logprob: -6.089641094207764
    6. '                            
' → logprob: -6.214641094207764
    7. ')
' → logprob: -7.089641094207764
    8. '               ' → logprob: -7.214641094207764
    9. '                               ' → logprob: -7.214641094207764
    10. '                   ' → logprob: -7.589641094207764

Token 279: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.38150346279144287
    2. ')' → logprob: -1.8815034627914429
    3. ',' → logprob: -2.1315035820007324
    4. '<|end|>' → logprob: -3.5065035820007324
    5. '                       ' → logprob: -5.881503582000732
    6. '                            
' → logprob: -6.131503582000732
    7. ' ,' → logprob: -6.256503582000732
    8. '           ' → logprob: -6.506503582000732
    9. ' )' → logprob: -6.631503582000732
    10. '                            ' → logprob: -6.881503582000732

Token 280: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.47420188784599304
    2. ' new' → logprob: -0.9742019176483154
    3. '                           ' → logprob: -9.474202156066895
    4. ')' → logprob: -10.849202156066895
    5. '_new' → logprob: -11.599202156066895
    6. '                               ' → logprob: -12.724202156066895
    7. '(new' → logprob: -12.974202156066895
    8. '=' → logprob: -13.599202156066895
    9. '                                   ' → logprob: -13.599202156066895
    10. ')new' → logprob: -13.724202156066895

Token 281: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -9.253090865968261e-06
    2. '_tokens' → logprob: -11.875009536743164
    3. '_positions' → logprob: -14.000009536743164
    4. 'Points' → logprob: -14.625009536743164
    5. '_POINTS' → logprob: -14.750009536743164
    6. '_' → logprob: -15.625009536743164
    7. 'points' → logprob: -16.125009536743164
    8. '```' → logprob: -17.375009536743164
    9. '_token' → logprob: -17.500009536743164
    10. '_keys' → logprob: -17.625009536743164

Token 282: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -6.630610641877865e-06
    2. '.setdefault' → logprob: -12.125006675720215
    3. '=(' → logprob: -14.625006675720215
    4. '((' → logprob: -15.250006675720215
    5. '=' → logprob: -15.750006675720215
    6. '[' → logprob: -16.3750057220459
    7. '.' → logprob: -16.5000057220459
    8. '[
' → logprob: -16.7500057220459
    9. ' [(' → logprob: -17.6250057220459
    10. '(' → logprob: -17.7500057220459

Token 283: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1994775377388578e-05
    2. ' x' → logprob: -11.375012397766113
    3. '(x' → logprob: -15.000012397766113
    4. ')x' → logprob: -17.375011444091797
    5. ')' → logprob: -17.500011444091797
    6. 'c' → logprob: -18.500011444091797
    7. '{x' → logprob: -18.625011444091797
    8. '<|end|>' → logprob: -19.125011444091797
    9. '
' → logprob: -19.375011444091797
    10. '(' → logprob: -19.500011444091797

Token 284: ',' (ID: 11)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0010020858608186245
    2. ',' → logprob: -7.001002311706543
    3. '_,' → logprob: -9.876002311706543
    4. '_' → logprob: -11.251002311706543
    5. ',m' → logprob: -11.751002311706543
    6. ' ,' → logprob: -11.751002311706543
    7. 'm' → logprob: -12.251002311706543
    8. ',_' → logprob: -13.001002311706543
    9. ' _' → logprob: -14.126002311706543
    10. ',
' → logprob: -14.501002311706543

Token 285: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.048598386347293854
    2. ' y' → logprob: -3.048598289489746
    3. 'm' → logprob: -12.798598289489746
    4. ',y' → logprob: -12.923598289489746
    5. ',' → logprob: -13.048598289489746
    6. 'x' → logprob: -13.923598289489746
    7. 'h' → logprob: -14.173598289489746
    8. '(y' → logprob: -14.798598289489746
    9. ')' → logprob: -15.173598289489746
    10. ' ' → logprob: -15.298598289489746

Token 286: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07994529604911804
    2. ']' → logprob: -2.5799453258514404
    3. ')' → logprob: -6.954945087432861
    4. '])' → logprob: -10.20494556427002
    5. ']=' → logprob: -10.70494556427002
    6. ']+' → logprob: -11.57994556427002
    7. ' ]' → logprob: -11.82994556427002
    8. ']+=' → logprob: -11.82994556427002
    9. ',' → logprob: -12.20494556427002
    10. ']]' → logprob: -12.32994556427002

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164448715746403
    2. ' =' → logprob: -4.264164447784424
    3. '+=' → logprob: -14.014164924621582
    4. ' +=' → logprob: -15.639164924621582
    5. ']' → logprob: -16.889163970947266
    6. ' ' → logprob: -17.639163970947266
    7. ')' → logprob: -17.889163970947266
    8. ']=' → logprob: -18.139163970947266
    9. 'new' → logprob: -19.264163970947266
    10. '   ' → logprob: -19.389163970947266

Token 288: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.01416398212313652
    2. ' new' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.389163970947266
    4. ' ' → logprob: -17.014163970947266
    5. '	new' → logprob: -17.014163970947266
    6. 'New' → logprob: -17.264163970947266
    7. '(new' → logprob: -17.389163970947266
    8. '_new' → logprob: -17.889163970947266
    9. '0' → logprob: -18.139163970947266
    10. '新' → logprob: -18.264163970947266

Token 289: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0006047414499334991
    2. 'points' → logprob: -7.500604629516602
    3. 'get' → logprob: -10.250604629516602
    4. 'new' → logprob: -11.625604629516602
    5. '.get' → logprob: -12.750604629516602
    6. 'Points' → logprob: -13.125604629516602
    7. '_POINTS' → logprob: -14.250604629516602
    8. '_' → logprob: -15.125604629516602
    9. '_positions' → logprob: -15.250604629516602
    10. 'point' → logprob: -15.375604629516602

Token 290: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0004170873435214162
    2. ' .' → logprob: -8.25041675567627
    3. '.' → logprob: -8.87541675567627
    4. 'get' → logprob: -11.12541675567627
    5. '().' → logprob: -14.12541675567627
    6. 'new' → logprob: -16.125417709350586
    7. '       ' → logprob: -16.250417709350586
    8. '   ' → logprob: -17.125417709350586
    9. ',' → logprob: -17.625417709350586
    10. '.setdefault' → logprob: -17.750417709350586

Token 291: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000217006730963476
    2. '(x' → logprob: -8.75021743774414
    3. '(' → logprob: -9.87521743774414
    4. ' ((' → logprob: -12.25021743774414
    5. ' (' → logprob: -13.50021743774414
    6. '(
' → logprob: -14.62521743774414
    7. '[(' → logprob: -15.25021743774414
    8. '<|end|>' → logprob: -16.25021743774414
    9. ' ' → logprob: -18.00021743774414
    10. 'x' → logprob: -18.00021743774414

Token 292: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011123866774141788
    2. 'x' → logprob: -4.5111236572265625
    3. ' (' → logprob: -10.261123657226562
    4. '(' → logprob: -10.261123657226562
    5. ' x' → logprob: -13.511123657226562
    6. '(c' → logprob: -13.886123657226562
    7. ')x' → logprob: -13.886123657226562
    8. ')' → logprob: -14.386123657226562
    9. '{x' → logprob: -14.886123657226562
    10. '(
' → logprob: -14.886123657226562

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049525242298841476
    2. '_m' → logprob: -3.049525260925293
    3. 'm' → logprob: -7.924525260925293
    4. ',y' → logprob: -8.674525260925293
    5. ',m' → logprob: -9.049525260925293
    6. ',x' → logprob: -9.674525260925293
    7. '(x' → logprob: -10.174525260925293
    8. '),' → logprob: -10.424525260925293
    9. 'x' → logprob: -10.799525260925293
    10. ',(' → logprob: -10.924525260925293

Token 294: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04487619549036026
    2. ' y' → logprob: -3.1698760986328125
    3. 'x' → logprob: -7.1698760986328125
    4. '(y' → logprob: -7.2948760986328125
    5. '(x' → logprob: -7.9198760986328125
    6. ' (' → logprob: -11.169876098632812
    7. '(' → logprob: -11.169876098632812
    8. ' x' → logprob: -11.419876098632812
    9. '0' → logprob: -11.669876098632812
    10. '1' → logprob: -12.294876098632812

Token 295: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018280261429026723
    2. ' ,' → logprob: -9.25018310546875
    3. ')' → logprob: -9.50018310546875
    4. '),' → logprob: -12.00018310546875
    5. '],' → logprob: -13.62518310546875
    6. '(),' → logprob: -14.00018310546875
    7. ']' → logprob: -14.25018310546875
    8. ')+' → logprob: -14.37518310546875
    9. '+,' → logprob: -14.62518310546875
    10. ']+' → logprob: -14.75018310546875

Token 296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005310961976647377
    2. ' ' → logprob: -5.380311012268066
    3. ' new' → logprob: -7.630311012268066
    4. 'new' → logprob: -8.505311012268066
    5. ')' → logprob: -13.130311012268066
    6. 'cnt' → logprob: -14.630311012268066
    7. ' cnt' → logprob: -16.63031005859375
    8. ' ' → logprob: -18.00531005859375
    9. ')new' → logprob: -18.50531005859375
    10. '```' → logprob: -18.50531005859375

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023079145699739456
    2. 'cnt' → logprob: -3.8980791568756104
    3. 'new' → logprob: -7.023078918457031
    4. ' ' → logprob: -7.023078918457031
    5. ' cnt' → logprob: -7.898078918457031
    6. ' new' → logprob: -7.898078918457031
    7. ')' → logprob: -12.648078918457031
    8. '(cnt' → logprob: -13.648078918457031
    9. '_cnt' → logprob: -14.023078918457031
    10. 'x' → logprob: -14.148078918457031

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002520965179428458
    2. ')+' → logprob: -6.62752103805542
    3. '+' → logprob: -7.00252103805542
    4. ',' → logprob: -8.877520561218262
    5. ' +' → logprob: -9.127520561218262
    6. '+)' → logprob: -11.627520561218262
    7. ' )' → logprob: -11.877520561218262
    8. ']' → logprob: -12.752520561218262
    9. '```' → logprob: -12.752520561218262
    10. ')+(' → logprob: -13.127520561218262

Token 299: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931495070457458
    2. ' +' → logprob: -0.6931495070457458
    3. ' ' → logprob: -14.19314956665039
    4. '+x' → logprob: -14.44314956665039
    5. ')' → logprob: -15.06814956665039
    6. '+c' → logprob: -15.69314956665039
    7. '+p' → logprob: -16.31814956665039
    8. '＋' → logprob: -16.69314956665039
    9. ' plus' → logprob: -16.81814956665039
    10. '```' → logprob: -16.81814956665039

Token 300: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0007111206650733948
    2. ' cnt' → logprob: -7.250710964202881
    3. '(cnt' → logprob: -14.625711441040039
    4. '	cnt' → logprob: -14.750711441040039
    5. 'count' → logprob: -15.375711441040039
    6. '[cnt' → logprob: -16.62571144104004
    7. '                           ' → logprob: -17.12571144104004
    8. 'ct' → logprob: -17.37571144104004
    9. '   ' → logprob: -17.50071144104004
    10. ' ' → logprob: -18.12571144104004

Token 301: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2015855461359024
    2. '<|end|>' → logprob: -2.701585531234741
    3. '                           ' → logprob: -2.951585531234741
    4. '           ' → logprob: -4.07658576965332
    5. '                       ' → logprob: -4.07658576965332
    6. '                   ' → logprob: -4.20158576965332
    7. ')' → logprob: -5.07658576965332
    8. '
' → logprob: -6.57658576965332
    9. 'else' → logprob: -6.57658576965332
    10. ' else' → logprob: -6.70158576965332

Token 302: '                           ' (ID: 1686)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45621535181999207
    2. '                   ' → logprob: -1.7062153816223145
    3. ')' → logprob: -2.3312153816223145
    4. '                           ' → logprob: -3.4562153816223145
    5. '           ' → logprob: -4.2062153816223145
    6. 'else' → logprob: -4.5812153816223145
    7. '                       ' → logprob: -4.5812153816223145
    8. '<|end|>' → logprob: -5.3312153816223145
    9. '```' → logprob: -5.4562153816223145
    10. ' else' → logprob: -6.2062153816223145

Token 303: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.06530455499887466
    2. ' new' → logprob: -2.8153045177459717
    3. '                           ' → logprob: -6.190304756164551
    4. 'x' → logprob: -7.690304756164551
    5. 'if' → logprob: -7.940304756164551
    6. '           ' → logprob: -8.69030475616455
    7. ' x' → logprob: -9.81530475616455
    8. ' if' → logprob: -10.19030475616455
    9. '   ' → logprob: -10.44030475616455
    10. '(new' → logprob: -10.44030475616455

Token 304: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -3.2020991056924686e-05
    2. 'points' → logprob: -11.000032424926758
    3. '_POINTS' → logprob: -12.000032424926758
    4. 'Points' → logprob: -12.500032424926758
    5. '_tokens' → logprob: -13.000032424926758
    6. ' points' → logprob: -14.375032424926758
    7. '_positions' → logprob: -14.625032424926758
    8. '.setdefault' → logprob: -14.875032424926758
    9. '_lines' → logprob: -15.000032424926758
    10. '_p' → logprob: -15.500032424926758

Token 305: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.093505099765025e-05
    2. '.setdefault' → logprob: -11.250020980834961
    3. '((' → logprob: -12.500020980834961
    4. '[
' → logprob: -13.625020980834961
    5. '[((' → logprob: -13.750020980834961
    6. '(x' → logprob: -14.625020980834961
    7. 'x' → logprob: -15.125020980834961
    8. '[' → logprob: -15.250020980834961
    9. '(' → logprob: -15.500020980834961
    10. '[x' → logprob: -15.625020980834961

Token 306: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.493430894101039e-05
    2. ' x' → logprob: -10.375075340270996
    3. '(x' → logprob: -10.500075340270996
    4. '2' → logprob: -11.250075340270996
    5. '(' → logprob: -13.500075340270996
    6. 'c' → logprob: -15.000075340270996
    7. ')' → logprob: -15.125075340270996
    8. '{x' → logprob: -15.625075340270996
    9. ')x' → logprob: -15.750075340270996
    10. ' (' → logprob: -16.00007438659668

Token 307: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.003325645811855793
    2. ',' → logprob: -5.753325462341309
    3. '=' → logprob: -9.753325462341309
    4. ',m' → logprob: -10.753325462341309
    5. 'm' → logprob: -10.878325462341309
    6. 'x' → logprob: -11.253325462341309
    7. ',x' → logprob: -11.878325462341309
    8. ',y' → logprob: -12.253325462341309
    9. ' ,' → logprob: -12.253325462341309
    10. '_,' → logprob: -12.378325462341309

Token 308: 'irror' (ID: 80004)
  Prédit: 'irror'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irror' → logprob: -0.0001673061487963423
    2. 'mirror' → logprob: -8.875166893005371
    3. 'c' → logprob: -11.750166893005371
    4. 'ir' → logprob: -12.750166893005371
    5. 'rror' → logprob: -12.875166893005371
    6. 'i' → logprob: -13.000166893005371
    7. 'irr' → logprob: -13.125166893005371
    8. '_c' → logprob: -13.125166893005371
    9. '_m' → logprob: -13.250166893005371
    10. '_i' → logprob: -13.250166893005371

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.061676347395405e-05
    2. ' ,' → logprob: -10.00005054473877
    3. ',y' → logprob: -12.25005054473877
    4. ',
' → logprob: -15.75005054473877
    5. '```' → logprob: -16.375051498413086
    6. '[' → logprob: -17.000051498413086
    7. 'import' → logprob: -17.250051498413086
    8. 'y' → logprob: -17.500051498413086
    9. '),' → logprob: -17.625051498413086
    10. '‌,' → logprob: -18.062551498413086

Token 310: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132624924182892
    2. ' y' → logprob: -1.3132624626159668
    3. '(y' → logprob: -14.438262939453125
    4. '	y' → logprob: -16.813262939453125
    5. ' ' → logprob: -16.938262939453125
    6. ')y' → logprob: -17.938262939453125
    7. '   ' → logprob: -18.063262939453125
    8. '(' → logprob: -18.188262939453125
    9. ')' → logprob: -18.313262939453125
    10. ' (' → logprob: -18.563262939453125

Token 311: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003661475842818618
    2. ']' → logprob: -5.628661632537842
    3. ')' → logprob: -10.128661155700684
    4. '])' → logprob: -10.878661155700684
    5. ']=' → logprob: -14.128661155700684
    6. ']]' → logprob: -14.503661155700684
    7. '")]' → logprob: -15.628661155700684
    8. ']+=' → logprob: -15.628661155700684
    9. ' ]' → logprob: -15.878661155700684
    10. ',' → logprob: -16.003662109375

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805296868085861
    2. ' =' → logprob: -3.288053035736084
    3. '+=' → logprob: -11.663052558898926
    4. ' +=' → logprob: -12.788052558898926
    5. ')' → logprob: -16.163053512573242
    6. ' ' → logprob: -16.913053512573242
    7. ']' → logprob: -18.038053512573242
    8. ']=' → logprob: -20.038053512573242
    9. ')=' → logprob: -20.163053512573242
    10. ']+=' → logprob: -20.163053512573242

Token 313: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16022422909736633
    2. ' new' → logprob: -1.910224199295044
    3. '	new' → logprob: -17.53522491455078
    4. ' ' → logprob: -18.16022491455078
    5. 'New' → logprob: -18.16022491455078
    6. '(new' → logprob: -18.28522491455078
    7. '_new' → logprob: -18.41022491455078
    8. '0' → logprob: -18.66022491455078
    9. '   ' → logprob: -18.78522491455078
    10. ')new' → logprob: -19.91022491455078

Token 314: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.31766214966773987
    2. 'new' → logprob: -1.3176621198654175
    3. 'points' → logprob: -5.442662239074707
    4. 'Points' → logprob: -10.567662239074707
    5. 'get' → logprob: -10.942662239074707
    6. ' new' → logprob: -11.192662239074707
    7. '(new' → logprob: -12.942662239074707
    8. '_POINTS' → logprob: -13.317662239074707
    9. '_new' → logprob: -15.067662239074707
    10. '_steps' → logprob: -15.442662239074707

Token 315: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -4.4418171455617994e-05
    2. 'get' → logprob: -10.625044822692871
    3. '.' → logprob: -11.750044822692871
    4. ' .' → logprob: -11.750044822692871
    5. '[(' → logprob: -12.625044822692871
    6. '.setdefault' → logprob: -14.625044822692871
    7. 'new' → logprob: -15.000044822692871
    8. '```' → logprob: -16.750043869018555
    9. '_get' → logprob: -17.125043869018555
    10. '   ' → logprob: -17.625043869018555

Token 316: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0010379294399172068
    2. '(' → logprob: -6.876038074493408
    3. '(
' → logprob: -13.12603759765625
    4. '<|end|>' → logprob: -13.12603759765625
    5. '(x' → logprob: -14.50103759765625
    6. ' ((' → logprob: -15.25103759765625
    7. '[(' → logprob: -16.37603759765625
    8. '(new' → logprob: -16.87603759765625
    9. '```' → logprob: -17.37603759765625
    10. ' (' → logprob: -17.37603759765625

Token 317: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0004911953583359718
    2. 'x' → logprob: -7.625491142272949
    3. ' (' → logprob: -12.75049114227295
    4. '(' → logprob: -15.37549114227295
    5. ',x' → logprob: -18.125492095947266
    6. '{x' → logprob: -18.250492095947266
    7. '<x' → logprob: -18.250492095947266
    8. ' x' → logprob: -18.375492095947266
    9. '   ' → logprob: -18.500492095947266
    10. '(
' → logprob: -18.750492095947266

Token 318: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.011929672211408615
    2. ',' → logprob: -4.511929512023926
    3. '(x' → logprob: -7.886929512023926
    4. ',(' → logprob: -8.761929512023926
    5. 'm' → logprob: -9.136929512023926
    6. '_,' → logprob: -9.636929512023926
    7. ',m' → logprob: -9.886929512023926
    8. 'x' → logprob: -10.386929512023926
    9. ',x' → logprob: -10.511929512023926
    10. '```' → logprob: -11.386929512023926

Token 319: 'irror' (ID: 80004)
  Prédit: 'irror'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irror' → logprob: -0.00019722258730325848
    2. 'mirror' → logprob: -8.750197410583496
    3. '_m' → logprob: -11.250197410583496
    4. '_' → logprob: -12.000197410583496
    5. 'ir' → logprob: -12.000197410583496
    6. ')' → logprob: -12.625197410583496
    7. 'or' → logprob: -13.000197410583496
    8. '_i' → logprob: -13.500197410583496
    9. 'rror' → logprob: -13.500197410583496
    10. 'irr' → logprob: -13.625197410583496

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015264409012161195
    2. ',y' → logprob: -9.250152587890625
    3. ' ,' → logprob: -9.875152587890625
    4. '(y' → logprob: -13.375152587890625
    5. '(' → logprob: -13.875152587890625
    6. ',x' → logprob: -14.250152587890625
    7. '),' → logprob: -14.625152587890625
    8. ',(' → logprob: -15.250152587890625
    9. ')' → logprob: -15.750152587890625
    10. ' y' → logprob: -15.875152587890625

Token 321: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011768407188355923
    2. ' y' → logprob: -4.511768341064453
    3. '(y' → logprob: -7.636768341064453
    4. 'x' → logprob: -8.886768341064453
    5. '(x' → logprob: -9.761768341064453
    6. '0' → logprob: -10.386768341064453
    7. ' (' → logprob: -12.136768341064453
    8. '(' → logprob: -12.761768341064453
    9. '   ' → logprob: -14.511768341064453
    10. 'cnt' → logprob: -14.636768341064453

Token 322: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03225118666887283
    2. '),' → logprob: -3.5322511196136475
    3. '],' → logprob: -6.032251358032227
    4. ' ,' → logprob: -10.532251358032227
    5. ')' → logprob: -10.782251358032227
    6. ',y' → logprob: -10.782251358032227
    7. '},' → logprob: -11.657251358032227
    8. 'y' → logprob: -12.282251358032227
    9. '       ' → logprob: -12.907251358032227
    10. '   ' → logprob: -13.157251358032227

Token 323: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715967319905758
    2. ' ' → logprob: -5.006715774536133
    3. 'new' → logprob: -15.256715774536133
    4. ' new' → logprob: -15.506715774536133
    5. ')' → logprob: -16.506715774536133
    6. ' ' → logprob: -19.006715774536133
    7. '
' → logprob: -19.131715774536133
    8. '   ' → logprob: -19.256715774536133
    9. '+' → logprob: -19.506715774536133
    10. '```' → logprob: -19.756715774536133

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. 'cnt' → logprob: -15.375075340270996
    4. ')' → logprob: -16.62507438659668
    5. '+' → logprob: -17.50007438659668
    6. '   ' → logprob: -17.75007438659668
    7. '       ' → logprob: -19.00007438659668
    8. 'new' → logprob: -19.12507438659668
    9. '           ' → logprob: -19.37507438659668
    10. '
' → logprob: -19.50007438659668

Token 325: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01224649790674448
    2. ',' → logprob: -5.012246608734131
    3. '+' → logprob: -5.762246608734131
    4. ')+' → logprob: -6.137246608734131
    5. ']' → logprob: -9.262246131896973
    6. ' +' → logprob: -10.012246131896973
    7. ']+' → logprob: -10.762246131896973
    8. ' )' → logprob: -11.262246131896973
    9. '+)' → logprob: -11.262246131896973
    10. '```' → logprob: -12.012246131896973

Token 326: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740942120552063
    2. ' +' → logprob: -0.9740942120552063
    3. ')' → logprob: -11.59909439086914
    4. ' ' → logprob: -12.59909439086914
    5. ')+' → logprob: -14.09909439086914
    6. '```' → logprob: -14.09909439086914
    7. '<|end|>' → logprob: -14.97409439086914
    8. '        ' → logprob: -15.09909439086914
    9. '=' → logprob: -15.34909439086914
    10. '       ' → logprob: -15.59909439086914

Token 327: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -5.860340752406046e-05
    2. ' cnt' → logprob: -9.7500581741333
    3. '	cnt' → logprob: -16.250059127807617
    4. '(cnt' → logprob: -16.500059127807617
    5. 'count' → logprob: -18.000059127807617
    6. '[cnt' → logprob: -18.500059127807617
    7. '   ' → logprob: -19.375059127807617
    8. '       ' → logprob: -20.250059127807617
    9. '_cnt' → logprob: -20.625059127807617
    10. '1' → logprob: -20.750059127807617

Token 328: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3184718191623688
    2. '                           ' → logprob: -2.443471908569336
    3. '\n' → logprob: -3.443471908569336
    4. '                   ' → logprob: -3.568471908569336
    5. '<|end|>' → logprob: -3.818471908569336
    6. '           ' → logprob: -4.568471908569336
    7. '```' → logprob: -4.693471908569336
    8. ')' → logprob: -4.693471908569336
    9. '                       ' → logprob: -5.068471908569336
    10. ' ' → logprob: -5.193471908569336

Token 329: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3290291726589203
    2. '           ' → logprob: -2.079029083251953
    3. '                           ' → logprob: -2.954029083251953
    4. '                   ' → logprob: -3.454029083251953
    5. '```' → logprob: -3.454029083251953
    6. '                       ' → logprob: -4.704029083251953
    7. '       ' → logprob: -4.704029083251953
    8. ')' → logprob: -5.454029083251953
    9. '<|end|>' → logprob: -5.954029083251953
    10. '              ' → logprob: -6.329029083251953

Token 330: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.9629387259483337
    2. '           ' → logprob: -1.3379387855529785
    3. '               ' → logprob: -1.7129387855529785
    4. 'width' → logprob: -2.4629387855529785
    5. 'else' → logprob: -3.2129387855529785
    6. '                   ' → logprob: -3.7129387855529785
    7. '
' → logprob: -4.9629387855529785
    8. ')' → logprob: -5.4629387855529785
    9. '       ' → logprob: -5.9629387855529785
    10. ' w' → logprob: -6.0879387855529785

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10141881555318832
    2. '*=' → logprob: -2.3514187335968018
    3. ' =' → logprob: -6.851418972015381
    4. ' *=' → logprob: -8.976418495178223
    5. '+=' → logprob: -10.726418495178223
    6. '*' → logprob: -13.851418495178223
    7. ' <<=' → logprob: -14.226418495178223
    8. '//=' → logprob: -14.476418495178223
    9. '   ' → logprob: -14.851418495178223
    10. ',' → logprob: -14.851418495178223

Token 332: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0036105208564549685
    2. '2' → logprob: -5.878610610961914
    3. 'max' → logprob: -7.253610610961914
    4. 'w' → logprob: -9.503610610961914
    5. ' c' → logprob: -11.378610610961914
    6. 'new' → logprob: -12.878610610961914
    7. 'width' → logprob: -12.878610610961914
    8. 'p' → logprob: -13.753610610961914
    9. ' ' → logprob: -13.878610610961914
    10. '(' → logprob: -14.003610610961914

Token 333: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00012594614236149937
    2. 'i' → logprob: -9.000125885009766
    3. 'w' → logprob: -13.625125885009766
    4. '_' → logprob: -13.625125885009766
    5. '_w' → logprob: -18.375125885009766
    6. '_in' → logprob: -18.750125885009766
    7. 'I' → logprob: -18.750125885009766
    8. ' i' → logprob: -18.875125885009766
    9. '[i' → logprob: -19.125125885009766
    10. '_c' → logprob: -19.250125885009766

Token 334: ' *' (ID: 425)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014200054109096527
    2. 'else' → logprob: -4.639200210571289
    3. 'elif' → logprob: -5.889200210571289
    4. ' else' → logprob: -6.764200210571289
    5. '
' → logprob: -8.014200210571289
    6. ' elif' → logprob: -9.514200210571289
    7. '```' → logprob: -10.389200210571289
    8. '<|end|>' → logprob: -10.514200210571289
    9. '           ' → logprob: -11.889200210571289
    10. ')' → logprob: -11.889200210571289

Token 335: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.75008487701416
    3. '1' → logprob: -10.87508487701416
    4. '0' → logprob: -12.25008487701416
    5. '```' → logprob: -14.62508487701416
    6. '   ' → logprob: -14.87508487701416
    7. '<|end|>' → logprob: -14.87508487701416
    8. '(' → logprob: -15.00008487701416
    9. '           ' → logprob: -15.37508487701416
    10. '[' → logprob: -15.68758487701416

Token 336: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.024604277219623e-05
    2. '1' → logprob: -10.750040054321289
    3. ' ' → logprob: -11.250040054321289
    4. '0' → logprob: -12.625040054321289
    5. '-' → logprob: -13.375040054321289
    6. '(' → logprob: -14.875040054321289
    7. '
' → logprob: -16.50004005432129
    8. '```' → logprob: -16.50004005432129
    9. ' -' → logprob: -16.62504005432129
    10. '   ' → logprob: -16.75004005432129

Token 337: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04467487707734108
    2. '           ' → logprob: -4.169674873352051
    3. '
' → logprob: -4.794674873352051
    4. '<|end|>' → logprob: -4.794674873352051
    5. 'else' → logprob: -4.919674873352051
    6. ' else' → logprob: -6.419674873352051
    7. 'elif' → logprob: -6.919674873352051
    8. ')' → logprob: -8.16967487335205
    9. '                   ' → logprob: -8.29467487335205
    10. '       ' → logprob: -8.41967487335205

Token 338: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22937269508838654
    2. 'else' → logprob: -1.8543727397918701
    3. '           ' → logprob: -3.85437273979187
    4. 'elif' → logprob: -4.479372501373291
    5. ' else' → logprob: -4.854372501373291
    6. '       ' → logprob: -5.604372501373291
    7. '                   ' → logprob: -6.104372501373291
    8. '<|end|>' → logprob: -7.604372501373291
    9. '                       ' → logprob: -7.979372501373291
    10. '
' → logprob: -8.60437297821045

Token 339: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8380858302116394
    2. ' else' → logprob: -1.2130858898162842
    3. '               ' → logprob: -1.3380858898162842
    4. 'elif' → logprob: -5.338085651397705
    5. '           ' → logprob: -6.338085651397705
    6. ' elif' → logprob: -7.338085651397705
    7. '       ' → logprob: -8.713086128234863
    8. '                   ' → logprob: -9.713086128234863
    9. ')' → logprob: -9.838086128234863
    10. '   ' → logprob: -10.213086128234863

Token 340: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07111922651529312
    2. ':
' → logprob: -2.8211193084716797
    3. '                   ' → logprob: -4.82111930847168
    4. '               ' → logprob: -7.69611930847168
    5. '           ' → logprob: -7.82111930847168
    6. ' :' → logprob: -9.57111930847168
    7. '{' → logprob: -10.19611930847168
    8. '                ' → logprob: -11.07111930847168
    9. '   ' → logprob: -11.82111930847168
    10. ' :
' → logprob: -12.07111930847168

Token 341: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4077378809452057
    2. '           ' → logprob: -2.157737970352173
    3. '                   ' → logprob: -2.157737970352173
    4. ' for' → logprob: -2.657737970352173
    5. 'for' → logprob: -3.532737970352173
    6. '#' → logprob: -6.532737731933594
    7. ' #' → logprob: -7.032737731933594
    8. '       ' → logprob: -7.532737731933594
    9. '                ' → logprob: -7.532737731933594
    10. '   ' → logprob: -8.282737731933594

Token 342: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7198701500892639
    2. 'for' → logprob: -0.7198701500892639
    3. '                   ' → logprob: -4.219870090484619
    4. '               ' → logprob: -4.719870090484619
    5. ' for' → logprob: -6.719870090484619
    6. ' #' → logprob: -7.219870090484619
    7. 'new' → logprob: -7.469870090484619
    8. '           ' → logprob: -9.094870567321777
    9. '   ' → logprob: -10.469870567321777
    10. '       ' → logprob: -10.594870567321777

Token 343: ' horizontal' (ID: 25511)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -1.2396469116210938
    2. 'for' → logprob: -1.3646469116210938
    3. '                   ' → logprob: -1.6146469116210938
    4. '#' → logprob: -2.6146469116210938
    5. ' for' → logprob: -2.7396469116210938
    6. 'horizontal' → logprob: -3.2396469116210938
    7. ' vertical' → logprob: -3.8646469116210938
    8. '1' → logprob: -3.9896469116210938
    9. 'h' → logprob: -4.489646911621094
    10. ' #' → logprob: -4.989646911621094

Token 344: ' fold' (ID: 17691)
  Prédit: ' fold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fold' → logprob: -0.2843204140663147
    2. 'fold' → logprob: -1.40932035446167
    3. '_fold' → logprob: -5.78432035446167
    4. '_' → logprob: -10.534320831298828
    5. '   ' → logprob: -11.909320831298828
    6. '           ' → logprob: -12.034320831298828
    7. 'for' → logprob: -12.409320831298828
    8. ' ' → logprob: -12.534320831298828
    9. 'd' → logprob: -12.534320831298828
    10. ',' → logprob: -12.659320831298828

Token 345: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.02748490311205387
    2. 'at' → logprob: -3.777484893798828
    3. '               ' → logprob: -6.777484893798828
    4. '                   ' → logprob: -6.902484893798828
    5. '           ' → logprob: -7.277484893798828
    6. '=' → logprob: -7.527484893798828
    7. ' =' → logprob: -8.152484893798828
    8. ':' → logprob: -9.027484893798828
    9. ':
' → logprob: -9.402484893798828
    10. 'fold' → logprob: -9.402484893798828

Token 346: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011048408225178719
    2. ' c' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.136048316955566
    4. ' ' → logprob: -16.511049270629883
    5. '       ' → logprob: -17.011049270629883
    6. '           ' → logprob: -17.136049270629883
    7. '(c' → logprob: -17.261049270629883
    8. '               ' → logprob: -17.261049270629883
    9. '	c' → logprob: -17.386049270629883
    10. '    ' → logprob: -17.511049270629883

Token 347: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0002646735229063779
    2. 'i' → logprob: -8.250265121459961
    3. 'c' → logprob: -13.625265121459961
    4. '_' → logprob: -14.250265121459961
    5. ' i' → logprob: -14.875265121459961
    6. '_c' → logprob: -15.125265121459961
    7. '   ' → logprob: -15.750265121459961
    8. 'o' → logprob: -15.875265121459961
    9. ')' → logprob: -16.25026512145996
    10. ' ' → logprob: -16.62526512145996

Token 348: ' from' (ID: 591)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8726807832717896
    2. 'for' → logprob: -1.2476807832717896
    3. ' for' → logprob: -1.4976807832717896
    4. '               ' → logprob: -3.4976806640625
    5. ':' → logprob: -3.7476806640625
    6. ':
' → logprob: -5.1226806640625
    7. '=' → logprob: -6.2476806640625
    8. ' (' → logprob: -6.4976806640625
    9. '
' → logprob: -6.7476806640625
    10. ' at' → logprob: -6.8726806640625

Token 349: ' bottom' (ID: 8725)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.5822142958641052
    2. 'bottom' → logprob: -1.08221435546875
    3. 'c' → logprob: -2.33221435546875
    4. 'the' → logprob: -5.58221435546875
    5. ' top' → logprob: -7.08221435546875
    6. ' bottom' → logprob: -8.33221435546875
    7. 'down' → logprob: -8.70721435546875
    8. '1' → logprob: -9.45721435546875
    9. 'below' → logprob: -9.45721435546875
    10. ' c' → logprob: -9.70721435546875

Token 350: ' fold' (ID: 17691)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3457587957382202
    2. ':' → logprob: -1.4707587957382202
    3. 'for' → logprob: -3.4707589149475098
    4. ' for' → logprob: -4.47075891494751
    5. ':
' → logprob: -4.59575891494751
    6. '               ' → logprob: -4.84575891494751
    7. '                       ' → logprob: -7.34575891494751
    8. '                    ' → logprob: -8.345758438110352
    9. ',' → logprob: -8.470758438110352
    10. '                  ' → logprob: -8.470758438110352

Token 351: ' onto' (ID: 13291)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019128479063510895
    2. 'for' → logprob: -4.894128322601318
    3. ':' → logprob: -5.394128322601318
    4. ' for' → logprob: -5.519128322601318
    5. ' at' → logprob: -6.394128322601318
    6. '               ' → logprob: -7.894128322601318
    7. '=' → logprob: -8.519128799438477
    8. ':
' → logprob: -8.894128799438477
    9. '           ' → logprob: -9.019128799438477
    10. '                       ' → logprob: -9.269128799438477

Token 352: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.012354361824691296
    2. 'c' → logprob: -5.262354373931885
    3. ' top' → logprob: -5.887354373931885
    4. 'bottom' → logprob: -6.137354373931885
    5. 'the' → logprob: -6.512354373931885
    6. 'up' → logprob: -8.137353897094727
    7. 'h' → logprob: -8.387353897094727
    8. 'upper' → logprob: -10.387353897094727
    9. ' c' → logprob: -11.012353897094727
    10. ' the' → logprob: -11.137353897094727

Token 353: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26241639256477356
    2. '                   ' → logprob: -1.6374163627624512
    3. ' for' → logprob: -3.512416362762451
    4. '               ' → logprob: -5.262416362762451
    5. '                       ' → logprob: -6.887416362762451
    6. '           ' → logprob: -8.38741683959961
    7. '       ' → logprob: -10.76241683959961
    8. '```' → logprob: -11.26241683959961
    9. '   ' → logprob: -11.38741683959961
    10. '	for' → logprob: -12.01241683959961

Token 354: '                   ' (ID: 699)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28026777505874634
    2. '                   ' → logprob: -1.5302677154541016
    3. '               ' → logprob: -4.280267715454102
    4. ' for' → logprob: -4.405267715454102
    5. '                       ' → logprob: -6.905267715454102
    6. '           ' → logprob: -7.905267715454102
    7. '	for' → logprob: -8.155267715454102
    8. '```' → logprob: -9.530267715454102
    9. '       ' → logprob: -10.155267715454102
    10. '   ' → logprob: -11.030267715454102

Token 355: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005885370774194598
    2. ' for' → logprob: -7.500588417053223
    3. '                   ' → logprob: -10.375588417053223
    4. '               ' → logprob: -12.750588417053223
    5. '           ' → logprob: -14.375588417053223
    6. '                       ' → logprob: -15.000588417053223
    7. '       ' → logprob: -15.875588417053223
    8. '   ' → logprob: -16.12558937072754
    9. '	for' → logprob: -16.25058937072754
    10. ' ' → logprob: -17.12558937072754

Token 356: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011161123402416706
    2. ' (' → logprob: -4.5111613273620605
    3. '(y' → logprob: -9.136160850524902
    4. '(' → logprob: -12.761160850524902
    5. 'x' → logprob: -13.511160850524902
    6. '   ' → logprob: -14.636160850524902
    7. '  ' → logprob: -15.761160850524902
    8. '               ' → logprob: -16.26116180419922
    9. '           ' → logprob: -16.38616180419922
    10. ',' → logprob: -16.63616180419922

Token 357: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4498052223643754e-05
    2. '(x' → logprob: -11.375014305114746
    3. ' x' → logprob: -12.750014305114746
    4. ',' → logprob: -17.375015258789062
    5. ')x' → logprob: -17.875015258789062
    6. ',x' → logprob: -18.750015258789062
    7. '
' → logprob: -18.750015258789062
    8. '{x' → logprob: -19.000015258789062
    9. ')' → logprob: -19.125015258789062
    10. '   ' → logprob: -19.375015258789062

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010950337309623137
    2. ',y' → logprob: -9.250109672546387
    3. ' ,' → logprob: -11.250109672546387
    4. 'y' → logprob: -16.12510871887207
    5. ',
' → logprob: -16.25010871887207
    6. ' y' → logprob: -16.62510871887207
    7. '_,' → logprob: -17.62510871887207
    8. '           ' → logprob: -18.37510871887207
    9. '```' → logprob: -18.37510871887207
    10. '   ' → logprob: -18.50010871887207

Token 359: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019289902411401272
    2. ' y' → logprob: -6.251928806304932
    3. ',' → logprob: -15.12692928314209
    4. ',y' → logprob: -16.251928329467773
    5. '	y' → logprob: -19.501928329467773
    6. '   ' → logprob: -20.501928329467773
    7. '(y' → logprob: -20.876928329467773
    8. ' ' → logprob: -21.751928329467773
    9. ')y' → logprob: -22.251928329467773
    10. '
' → logprob: -22.376928329467773

Token 360: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000500370399095118
    2. '),' → logprob: -7.625500202178955
    3. ' ,' → logprob: -11.500500679016113
    4. ',),' → logprob: -14.500500679016113
    5. ' ),' → logprob: -14.625500679016113
    6. ',y' → logprob: -15.000500679016113
    7. '   ' → logprob: -15.250500679016113
    8. ')' → logprob: -15.375500679016113
    9. '```' → logprob: -15.750500679016113
    10. ' in' → logprob: -16.875499725341797

Token 361: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.04862586408853531
    2. ' cnt' → logprob: -3.048625946044922
    3. '(cnt' → logprob: -10.298625946044922
    4. '	cnt' → logprob: -13.048625946044922
    5. 'count' → logprob: -13.423625946044922
    6. '[cnt' → logprob: -14.298625946044922
    7. '_cnt' → logprob: -14.923625946044922
    8. 'Cnt' → logprob: -16.298625946044922
    9. 'y' → logprob: -17.048625946044922
    10. 'ct' → logprob: -17.298625946044922

Token 362: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06323758512735367
    2. 'in' → logprob: -2.8132376670837402
    3. ',' → logprob: -6.68823766708374
    4. 'new' → logprob: -11.313237190246582
    5. ' ,' → logprob: -12.313237190246582
    6. '   ' → logprob: -12.938237190246582
    7. ')' → logprob: -13.938237190246582
    8. ' ' → logprob: -14.063237190246582
    9. '  ' → logprob: -14.563237190246582
    10. '),' → logprob: -14.938237190246582

Token 363: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.016089389100670815
    2. ' points' → logprob: -4.14108943939209
    3. 'new' → logprob: -9.89108943939209
    4. '(points' → logprob: -12.76608943939209
    5. ' new' → logprob: -14.01608943939209
    6. '
' → logprob: -15.76608943939209
    7. '	points' → logprob: -15.89108943939209
    8. 'point' → logprob: -16.641088485717773
    9. '.points' → logprob: -16.766088485717773
    10. '   ' → logprob: -17.391088485717773

Token 364: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.03222452104091644
    2. 'items' → logprob: -3.907224416732788
    3. ' in' → logprob: -4.532224655151367
    4. ',' → logprob: -7.782224655151367
    5. 'in' → logprob: -8.407224655151367
    6. '   ' → logprob: -10.157224655151367
    7. '       ' → logprob: -10.157224655151367
    8. '.' → logprob: -10.157224655151367
    9. '           ' → logprob: -10.782224655151367
    10. ' items' → logprob: -10.782224655151367

Token 365: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.10292140394449234
    2. '():' → logprob: -2.852921485900879
    3. '                       ' → logprob: -3.602921485900879
    4. ':' → logprob: -4.977921485900879
    5. ':
' → logprob: -5.602921485900879
    6. '):
' → logprob: -6.977921485900879
    7. '()' → logprob: -7.227921485900879
    8. '                   ' → logprob: -9.102921485900879
    9. '()):
' → logprob: -9.227921485900879
    10. '```' → logprob: -9.227921485900879

Token 366: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0006794307846575975
    2. 'if' → logprob: -7.7506794929504395
    3. ' if' → logprob: -8.625679016113281
    4. '                   ' → logprob: -10.375679016113281
    5. '               ' → logprob: -10.750679016113281
    6. '   ' → logprob: -12.625679016113281
    7. '                     ' → logprob: -12.750679016113281
    8. '```' → logprob: -12.750679016113281
    9. '       ' → logprob: -13.250679016113281
    10. '                      ' → logprob: -13.625679016113281

Token 367: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.24817541241645813
    2. '                       ' → logprob: -1.7481753826141357
    3. ' if' → logprob: -3.2481753826141357
    4. '                           ' → logprob: -4.998175621032715
    5. '                        ' → logprob: -10.748175621032715
    6. ' ' → logprob: -11.373175621032715
    7. '   ' → logprob: -11.373175621032715
    8. '           ' → logprob: -11.748175621032715
    9. '               ' → logprob: -11.998175621032715
    10. '                   ' → logprob: -12.123175621032715

Token 368: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009174126898869872
    2. ' y' → logprob: -7.000917434692383
    3. '                       ' → logprob: -12.125917434692383
    4. '                           ' → logprob: -15.500917434692383
    5. '(y' → logprob: -15.875917434692383
    6. '	y' → logprob: -16.250917434692383
    7. '                   ' → logprob: -17.125917434692383
    8. '                        ' → logprob: -17.750917434692383
    9. '   ' → logprob: -18.500917434692383
    10. 'x' → logprob: -19.000917434692383

Token 369: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6359421610832214
    2. '>=' → logprob: -0.7609421610832214
    3. ' <' → logprob: -6.260941982269287
    4. '<' → logprob: -6.760941982269287
    5. '<=' → logprob: -9.010942459106445
    6. ' <=' → logprob: -9.760942459106445
    7. '                           ' → logprob: -10.760942459106445
    8. '>' → logprob: -11.260942459106445
    9. '<p' → logprob: -11.385942459106445
    10. '```' → logprob: -11.385942459106445

Token 370: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002649119414854795
    2. ' c' → logprob: -8.250265121459961
    3. '                   ' → logprob: -13.000265121459961
    4. '           ' → logprob: -15.000265121459961
    5. '                       ' → logprob: -15.125265121459961
    6. '               ' → logprob: -15.375265121459961
    7. '   ' → logprob: -15.375265121459961
    8. '       ' → logprob: -16.37526512145996
    9. '	c' → logprob: -16.37526512145996
    10. '```' → logprob: -16.87526512145996

Token 371: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.001329287188127637
    2. 'i' → logprob: -6.62632942199707
    3. '_c' → logprob: -13.62632942199707
    4. 'c' → logprob: -14.00132942199707
    5. ' i' → logprob: -14.75132942199707
    6. '```' → logprob: -15.00132942199707
    7. '_' → logprob: -15.12632942199707
    8. '   ' → logprob: -15.87632942199707
    9. ' ' → logprob: -16.37632942199707
    10. 'I' → logprob: -16.62632942199707

Token 372: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6611766219139099
    2. ':
' → logprob: -1.0361766815185547
    3. '                       ' → logprob: -2.6611766815185547
    4. ':' → logprob: -2.9111766815185547
    5. '):
' → logprob: -5.786176681518555
    6. ',' → logprob: -8.161176681518555
    7. ')' → logprob: -8.911176681518555
    8. '           ' → logprob: -8.911176681518555
    9. '{
' → logprob: -9.036176681518555
    10. '                        ' → logprob: -9.161176681518555

Token 373: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.002490045502781868
    2. '                       ' → logprob: -6.377490043640137
    3. ' new' → logprob: -8.627490043640137
    4. 'new' → logprob: -8.877490043640137
    5. '           ' → logprob: -9.502490043640137
    6. '                            ' → logprob: -9.627490043640137
    7. '```' → logprob: -9.752490043640137
    8. '                               ' → logprob: -9.752490043640137
    9. ',' → logprob: -10.502490043640137
    10. '               ' → logprob: -10.877490043640137

Token 374: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9921069741249084
    2. 'new' → logprob: -1.1171069145202637
    3. '                           ' → logprob: -1.2421069145202637
    4. '                       ' → logprob: -4.492106914520264
    5. '#' (adapté à ' #') → logprob: -7.117106914520264
    6. '   ' → logprob: -7.867106914520264
    7. ' ' → logprob: -8.617107391357422
    8. '           ' → logprob: -8.867107391357422
    9. '                               ' → logprob: -9.117107391357422
    10. ' #' → logprob: -9.367107391357422

Token 375: ' top' (ID: 2344)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.38747328519821167
    2. ' new' → logprob: -1.1374733448028564
    3. '                           ' → logprob: -7.887473106384277
    4. '#' → logprob: -8.887473106384277
    5. '                       ' → logprob: -9.887473106384277
    6. ' #' → logprob: -11.262473106384277
    7. ' y' → logprob: -12.262473106384277
    8. '
' → logprob: -12.637473106384277
    9. '   ' → logprob: -12.887473106384277
    10. '                               ' → logprob: -13.012473106384277

Token 376: ' side' (ID: 4307)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.15977248549461365
    2. 'new' → logprob: -2.5347723960876465
    3. '                       ' → logprob: -3.6597723960876465
    4. 'side' → logprob: -3.6597723960876465
    5. '                   ' → logprob: -5.5347723960876465
    6. ',' → logprob: -5.7847723960876465
    7. ' new' → logprob: -6.0347723960876465
    8. 'points' → logprob: -6.1597723960876465
    9. '_s' → logprob: -6.4097723960876465
    10. '_new' → logprob: -7.4097723960876465

Token 377: ' stays' (ID: 35239)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.19158262014389038
    2. 'new' → logprob: -2.316582679748535
    3. ' new' → logprob: -3.066582679748535
    4. '                       ' → logprob: -3.691582679748535
    5. ',' → logprob: -6.941582679748535
    6. ')' → logprob: -7.691582679748535
    7. '                               ' → logprob: -7.816582679748535
    8. '=' → logprob: -7.941582679748535
    9. '                   ' → logprob: -8.316582679748535
    10. '                            ' → logprob: -8.316582679748535

Token 378: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0626261755824089
    2. 'new' → logprob: -3.0626261234283447
    3. ' new' → logprob: -4.937626361846924
    4. '                       ' → logprob: -5.687626361846924
    5. '                               ' → logprob: -6.687626361846924
    6. '```' → logprob: -6.687626361846924
    7. '   ' → logprob: -7.687626361846924
    8. '           ' → logprob: -8.562625885009766
    9. '                            ' → logprob: -10.187625885009766
    10. '               ' → logprob: -10.187625885009766

Token 379: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.08293803781270981
    2. 'new' → logprob: -2.7079379558563232
    3. ' new' → logprob: -4.832938194274902
    4. '                       ' → logprob: -6.082938194274902
    5. '```' → logprob: -6.332938194274902
    6. '                               ' → logprob: -7.832938194274902
    7. '           ' → logprob: -8.582938194274902
    8. '   ' → logprob: -9.457938194274902
    9. '                            ' → logprob: -9.832938194274902
    10. '               ' → logprob: -10.207938194274902

Token 380: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.2520306408405304
    2. ' new' → logprob: -1.502030611038208
    3. '                           ' → logprob: -9.252030372619629
    4. '                       ' → logprob: -13.252030372619629
    5. '                               ' → logprob: -14.002030372619629
    6. ' ' → logprob: -14.377030372619629
    7. '	new' → logprob: -14.877030372619629
    8. '   ' → logprob: -15.002030372619629
    9. '_new' → logprob: -15.252030372619629
    10. '[new' → logprob: -15.377030372619629

Token 381: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00012475410767365247
    2. 'points' → logprob: -9.00012493133545
    3. 'Points' → logprob: -13.62512493133545
    4. '(points' → logprob: -17.125123977661133
    5. '_positions' → logprob: -17.250123977661133
    6. ' points' → logprob: -18.000123977661133
    7. '_point' → logprob: -19.125123977661133
    8. '_POINTS' → logprob: -19.375123977661133
    9. '_tokens' → logprob: -19.625123977661133
    10. '	points' → logprob: -19.875123977661133

Token 382: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.04177809879183769
    2. '=' → logprob: -4.041778087615967
    3. ' =' → logprob: -4.416778087615967
    4. '=(' → logprob: -5.166778087615967
    5. ')' → logprob: -5.666778087615967
    6. 'new' → logprob: -7.291778087615967
    7. '                           ' → logprob: -7.666778087615967
    8. '                       ' → logprob: -8.166778564453125
    9. '           ' → logprob: -8.666778564453125
    10. '[' → logprob: -9.416778564453125

Token 383: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0052384985610842705
    2. '(x' → logprob: -5.2552385330200195
    3. ' x' → logprob: -12.38023853302002
    4. ' (' → logprob: -16.005237579345703
    5. '
' → logprob: -16.130237579345703
    6. ')x' → logprob: -16.255237579345703
    7. '{x' → logprob: -16.380237579345703
    8. ')' → logprob: -16.880237579345703
    9. '(' → logprob: -16.880237579345703
    10. '"x' → logprob: -17.505237579345703

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.682846287731081e-05
    2. ',y' → logprob: -10.250066757202148
    3. ' ,' → logprob: -10.375066757202148
    4. '                       ' → logprob: -16.62506675720215
    5. '                           ' → logprob: -17.87506675720215
    6. ' y' → logprob: -18.25006675720215
    7. 'y' → logprob: -18.25006675720215
    8. '           ' → logprob: -18.37506675720215
    9. ',
' → logprob: -18.75006675720215
    10. '                   ' → logprob: -19.00006675720215

Token 385: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003035266126971692
    2. ' y' → logprob: -8.125303268432617
    3. 'new' → logprob: -13.250303268432617
    4. '                       ' → logprob: -13.375303268432617
    5. '(y' → logprob: -13.500303268432617
    6. '                   ' → logprob: -13.875303268432617
    7. '
' → logprob: -14.250303268432617
    8. ')' → logprob: -15.375303268432617
    9. '               ' → logprob: -16.000303268432617
    10. '           ' → logprob: -16.000303268432617

Token 386: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5925238728523254
    2. ')]' → logprob: -0.8425238728523254
    3. ')' → logprob: -4.21752405166626
    4. ']=' → logprob: -6.46752405166626
    5. '])' → logprob: -9.217523574829102
    6. '],' → logprob: -11.217523574829102
    7. ')=' → logprob: -11.467523574829102
    8. '           ' → logprob: -11.842523574829102
    9. '                   ' → logprob: -12.092523574829102
    10. ',' → logprob: -12.217523574829102

Token 387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05576150864362717
    2. ' =' → logprob: -2.9307615756988525
    3. ')' → logprob: -7.430761337280273
    4. ']' → logprob: -8.805761337280273
    5. ']=' → logprob: -9.555761337280273
    6. ')=' → logprob: -10.430761337280273
    7. 'new' → logprob: -10.555761337280273
    8. '=new' → logprob: -12.930761337280273
    9. ' new' → logprob: -13.430761337280273
    10. ' ' → logprob: -13.680761337280273

Token 388: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.126929372549057
    2. ' new' → logprob: -2.12692928314209
    3. ' ' → logprob: -15.37692928314209
    4. '_new' → logprob: -15.37692928314209
    5. '	new' → logprob: -15.50192928314209
    6. 'New' → logprob: -15.75192928314209
    7. '(new' → logprob: -16.001930236816406
    8. '{' → logprob: -16.001930236816406
    9. '   ' → logprob: -16.501930236816406
    10. ' ' → logprob: -17.189430236816406

Token 389: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.003991492558270693
    2. 'new' → logprob: -6.003991603851318
    3. 'points' → logprob: -6.503991603851318
    4. 'get' → logprob: -11.25399112701416
    5. 'Points' → logprob: -13.25399112701416
    6. '_new' → logprob: -14.50399112701416
    7. ' points' → logprob: -14.75399112701416
    8. '(new' → logprob: -15.12899112701416
    9. ' new' → logprob: -15.25399112701416
    10. '_POINTS' → logprob: -15.37899112701416

Token 390: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0032196608372032642
    2. 'get' → logprob: -5.7532196044921875
    3. '.' → logprob: -10.628219604492188
    4. ' .' → logprob: -11.253219604492188
    5. ')' → logprob: -13.503219604492188
    6. '.setdefault' → logprob: -14.503219604492188
    7. '```' → logprob: -14.628219604492188
    8. '       ' → logprob: -14.878219604492188
    9. '   ' → logprob: -15.128219604492188
    10. 'new' → logprob: -15.378219604492188

Token 391: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. '[(' → logprob: -14.500001907348633
    4. ' ((' → logprob: -16.125001907348633
    5. '```' → logprob: -16.875001907348633
    6. '(x' → logprob: -18.000001907348633
    7. '<|end|>' → logprob: -18.250001907348633
    8. '(
' → logprob: -18.375001907348633
    9. ')((' → logprob: -19.000001907348633
    10. ' ' → logprob: -19.125001907348633

Token 392: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.179569077678025e-05
    2. 'x' → logprob: -10.125041961669922
    3. ' (' → logprob: -13.375041961669922
    4. '(' → logprob: -16.375041961669922
    5. '(y' → logprob: -17.250041961669922
    6. ')' → logprob: -17.750041961669922
    7. '
' → logprob: -18.000041961669922
    8. ',' → logprob: -18.500041961669922
    9. '   ' → logprob: -18.625041961669922
    10. '```' → logprob: -19.125041961669922

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006995689473114908
    2. '(x' → logprob: -7.500699520111084
    3. ',(' → logprob: -9.875699996948242
    4. ',y' → logprob: -10.250699996948242
    5. '(y' → logprob: -11.125699996948242
    6. '           ' → logprob: -11.875699996948242
    7. ' (' → logprob: -12.000699996948242
    8. ' ,' → logprob: -12.125699996948242
    9. ',x' → logprob: -12.125699996948242
    10. '               ' → logprob: -12.500699996948242

Token 394: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0032616076059639454
    2. ' y' → logprob: -5.878261566162109
    3. '(y' → logprob: -8.25326156616211
    4. 'x' → logprob: -8.75326156616211
    5. '(x' → logprob: -10.37826156616211
    6. '
' → logprob: -13.50326156616211
    7. ')' → logprob: -13.75326156616211
    8. ' (' → logprob: -14.00326156616211
    9. '   ' → logprob: -14.25326156616211
    10. '(' → logprob: -14.50326156616211

Token 395: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021855637896806002
    2. '(),' → logprob: -9.125218391418457
    3. ')' → logprob: -10.000218391418457
    4. ' ,' → logprob: -10.250218391418457
    5. '),' → logprob: -10.750218391418457
    6. '       ' → logprob: -13.375218391418457
    7. '   ' → logprob: -13.875218391418457
    8. '{},' → logprob: -14.000218391418457
    9. '_,' → logprob: -14.125218391418457
    10. '           ' → logprob: -14.125218391418457

Token 396: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02630157396197319
    2. ' ' → logprob: -3.651301622390747
    3. ' new' → logprob: -14.276301383972168
    4. 'new' → logprob: -14.401301383972168
    5. ')' → logprob: -16.901302337646484
    6. '   ' → logprob: -18.026302337646484
    7. '(' → logprob: -18.526302337646484
    8. '  ' → logprob: -18.588802337646484
    9. '
' → logprob: -18.651302337646484
    10. '                           ' → logprob: -18.776302337646484

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014048899174667895
    2. ' ' → logprob: -8.875140190124512
    3. 'cnt' → logprob: -14.500140190124512
    4. '   ' → logprob: -17.000141143798828
    5. 'new' → logprob: -17.500141143798828
    6. '
' → logprob: -17.812641143798828
    7. ')' → logprob: -18.562641143798828
    8. ' cnt' → logprob: -19.062641143798828
    9. ' new' → logprob: -19.125141143798828
    10. '1' → logprob: -19.312641143798828

Token 398: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007510208524763584
    2. ')+' → logprob: -7.37575101852417
    3. '+' → logprob: -9.500751495361328
    4. ' )' → logprob: -10.625751495361328
    5. ',' → logprob: -11.125751495361328
    6. ' +' → logprob: -12.125751495361328
    7. '+)' → logprob: -13.625751495361328
    8. ']' → logprob: -13.875751495361328
    9. '}' → logprob: -15.000751495361328
    10. '```' → logprob: -15.375751495361328

Token 399: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141851902008057
    2. '+' → logprob: -1.7014185190200806
    3. ' ' → logprob: -12.95141887664795
    4. ')' → logprob: -13.82641887664795
    5. ')+' → logprob: -15.07641887664795
    6. '```' → logprob: -15.32641887664795
    7. ' +=' → logprob: -15.95141887664795
    8. '                           ' → logprob: -15.95141887664795
    9. '+=' → logprob: -16.201417922973633
    10. '    ' → logprob: -16.201417922973633

Token 400: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.026306219398975372
    2. ' cnt' → logprob: -3.65130615234375
    3. '(cnt' → logprob: -12.65130615234375
    4. '	cnt' → logprob: -13.27630615234375
    5. 'count' → logprob: -14.40130615234375
    6. '[cnt' → logprob: -15.52630615234375
    7. '_cnt' → logprob: -15.90130615234375
    8. ' ' → logprob: -16.77630615234375
    9. 'Cnt' → logprob: -17.02630615234375
    10. '   ' → logprob: -17.90130615234375

Token 401: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.05805309861898422
    2. 'else' → logprob: -3.5580530166625977
    3. '                       ' → logprob: -3.9330530166625977
    4. '```' → logprob: -5.558053016662598
    5. '                               ' → logprob: -6.558053016662598
    6. ' else' → logprob: -7.308053016662598
    7. '           ' → logprob: -7.558053016662598
    8. '<|end|>' → logprob: -7.933053016662598
    9. '               ' → logprob: -8.308053016662598
    10. '                            
' → logprob: -8.558053016662598

Token 402: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1483277827501297
    2. 'else' → logprob: -2.1483278274536133
    3. '                           ' → logprob: -3.8983278274536133
    4. ' else' → logprob: -7.523327827453613
    5. '```' → logprob: -8.523327827453613
    6. '                   ' → logprob: -10.023327827453613
    7. '                               ' → logprob: -10.773327827453613
    8. '                        ' → logprob: -10.773327827453613
    9. '               ' → logprob: -11.023327827453613
    10. '
' → logprob: -11.273327827453613

Token 403: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.005393364932388067
    2. ' else' → logprob: -5.2553935050964355
    3. '                       ' → logprob: -8.755393028259277
    4. '                   ' → logprob: -14.130393028259277
    5. 'elif' → logprob: -14.380393028259277
    6. '	else' → logprob: -15.755393028259277
    7. '               ' → logprob: -16.005393981933594
    8. '                           ' → logprob: -16.630393981933594
    9. '                        ' → logprob: -17.005393981933594
    10. '
' → logprob: -17.005393981933594

Token 404: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.016152728348970413
    2. ':' → logprob: -4.641152858734131
    3. ':
' → logprob: -5.141152858734131
    4. '                       ' → logprob: -8.641152381896973
    5. '```' → logprob: -8.766152381896973
    6. '           ' → logprob: -9.641152381896973
    7. '                            ' → logprob: -10.391152381896973
    8. '                          ' → logprob: -10.516152381896973
    9. '   ' → logprob: -11.266152381896973
    10. '                               ' → logprob: -11.266152381896973

Token 405: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.004660099744796753
    2. '#' → logprob: -5.504660129547119
    3. '                       ' → logprob: -8.629659652709961
    4. 'new' → logprob: -8.754659652709961
    5. '           ' → logprob: -9.504659652709961
    6. '   ' → logprob: -10.129659652709961
    7. ' #' → logprob: -10.379659652709961
    8. '```' → logprob: -10.504659652709961
    9. '                               ' → logprob: -11.129659652709961
    10. '                            ' → logprob: -11.254659652709961

Token 406: ' #' (ID: 1069)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4571598470211029
    2. '                           ' → logprob: -1.2071598768234253
    3. 'y' → logprob: -3.2071597576141357
    4. '#' (adapté à ' #') → logprob: -4.207159996032715
    5. '                       ' → logprob: -4.832159996032715
    6. ' #' → logprob: -5.582159996032715
    7. ' ' → logprob: -7.832159996032715
    8. '   ' → logprob: -8.957159996032715
    9. '           ' → logprob: -9.832159996032715
    10. '                         ' → logprob: -10.207159996032715

Token 407: ' bottom' (ID: 8725)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2046705186367035
    2. ' y' → logprob: -1.7046705484390259
    3. '                           ' → logprob: -6.204670429229736
    4. '#' → logprob: -7.079670429229736
    5. '                       ' → logprob: -7.954670429229736
    6. ' #' → logprob: -11.579670906066895
    7. 'new' → logprob: -11.954670906066895
    8. '```' → logprob: -12.204670906066895
    9. '	y' → logprob: -12.704670906066895
    10. ' new' → logprob: -13.079670906066895

Token 408: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.23377369344234467
    2. ' side' → logprob: -1.8587737083435059
    3. '_points' → logprob: -3.233773708343506
    4. '_side' → logprob: -4.608773708343506
    5. 'points' → logprob: -6.733773708343506
    6. 's' → logprob: -7.733773708343506
    7. ' (' → logprob: -7.858773708343506
    8. '(side' → logprob: -8.233773231506348
    9. '   ' → logprob: -8.858773231506348
    10. '```' → logprob: -8.858773231506348

Token 409: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.24955850839614868
    2. '_m' → logprob: -2.124558448791504
    3. ' is' → logprob: -2.749558448791504
    4. '=' → logprob: -3.749558448791504
    5. ' =' → logprob: -4.874558448791504
    6. '                           ' → logprob: -5.499558448791504
    7. '=(' → logprob: -7.249558448791504
    8. 'new' → logprob: -7.874558448791504
    9. 'm' → logprob: -8.249558448791504
    10. '_is' → logprob: -8.874558448791504

Token 410: ' mirrored' (ID: 136208)
  Prédit: 'mir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mir' → logprob: -0.003376026637852192
    2. ' mirrored' → logprob: -5.878376007080078
    3. 'new' → logprob: -8.378376007080078
    4. 'y' → logprob: -8.628376007080078
    5. ' y' → logprob: -9.878376007080078
    6. 'mapped' → logprob: -10.253376007080078
    7. '                           ' → logprob: -10.378376007080078
    8. 'merged' → logprob: -11.628376007080078
    9. 'ref' → logprob: -11.753376007080078
    10. 'mirror' → logprob: -12.128376007080078

Token 411: ' onto' (ID: 13291)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.8129905462265015
    2. 'new' → logprob: -1.0629905462265015
    3. ' new' → logprob: -1.9379905462265015
    4. '=(' → logprob: -4.437990665435791
    5. '(y' → logprob: -4.437990665435791
    6. '```' → logprob: -4.437990665435791
    7. ' y' → logprob: -4.812990665435791
    8. '(' → logprob: -4.937990665435791
    9. '(new' → logprob: -5.687990665435791
    10. ' (' → logprob: -5.687990665435791

Token 412: ' top' (ID: 2344)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6020235419273376
    2. '(y' → logprob: -1.4770236015319824
    3. '(x' → logprob: -1.7270236015319824
    4. 'y' → logprob: -3.9770236015319824
    5. ' (' → logprob: -4.102023601531982
    6. ' y' → logprob: -4.727023601531982
    7. 'new' → logprob: -6.727023601531982
    8. ' new' → logprob: -8.977023124694824
    9. '2' → logprob: -9.102023124694824
    10. '(c' → logprob: -9.227023124694824

Token 413: '
' (ID: 198)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6410325169563293
    2. '                           ' → logprob: -0.8910325169563293
    3. ' new' → logprob: -3.0160324573516846
    4. '```' → logprob: -5.516032695770264
    5. ' y' → logprob: -5.766032695770264
    6. 'for' → logprob: -6.391032695770264
    7. 'y' → logprob: -6.641032695770264
    8. '                       ' → logprob: -6.891032695770264
    9. '(y' → logprob: -7.016032695770264
    10. ' (' → logprob: -8.141032218933105

Token 414: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.22568519413471222
    2. 'new' → logprob: -2.1006851196289062
    3. ' new' → logprob: -2.8506851196289062
    4. ' y' → logprob: -4.225685119628906
    5. '```' → logprob: -5.975685119628906
    6. '                       ' → logprob: -6.350685119628906
    7. 'y' → logprob: -6.475685119628906
    8. '           ' → logprob: -7.975685119628906
    9. '                               ' → logprob: -8.475685119628906
    10. '                   ' → logprob: -8.600685119628906

Token 415: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0043335105292499065
    2. ' y' → logprob: -5.50433349609375
    3. '                           ' → logprob: -8.62933349609375
    4. '(y' → logprob: -9.87933349609375
    5. 'x' → logprob: -11.00433349609375
    6. '                       ' → logprob: -12.75433349609375
    7. '(' → logprob: -12.87933349609375
    8. '	y' → logprob: -13.87933349609375
    9. 'new' → logprob: -15.12933349609375
    10. '                   ' → logprob: -15.37933349609375

Token 416: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00016349162615370005
    2. '=' → logprob: -8.875163078308105
    3. ' =' → logprob: -11.375163078308105
    4. '_new' → logprob: -11.750163078308105
    5. 'm' → logprob: -13.750163078308105
    6. '_y' → logprob: -13.875163078308105
    7. 'mirror' → logprob: -14.125163078308105
    8. 'new' → logprob: -14.750163078308105
    9. '```' → logprob: -15.000163078308105
    10. '_=' → logprob: -16.125164031982422

Token 417: 'irror' (ID: 80004)
  Prédit: 'irror'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irror' → logprob: -0.0008602463640272617
    2. 'mirror' → logprob: -7.125860214233398
    3. '_m' → logprob: -10.125860214233398
    4. '=' → logprob: -11.375860214233398
    5. ' =' → logprob: -12.500860214233398
    6. 'ir' → logprob: -15.750860214233398
    7. '_' → logprob: -16.2508602142334
    8. 'Mirror' → logprob: -16.7508602142334
    9. 'y' → logprob: -16.8758602142334
    10. '```' → logprob: -17.3758602142334

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. ' ' → logprob: -18.28522491455078
    4. '＝' → logprob: -19.03522491455078
    5. ')' → logprob: -19.41022491455078
    6. '=y' → logprob: -19.78522491455078
    7. '   ' → logprob: -19.91022491455078
    8. '=
' → logprob: -19.91022491455078
    9. '```' → logprob: -20.53522491455078
    10. '>' → logprob: -20.66022491455078

Token 419: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '(' → logprob: -16.375261306762695
    4. '   ' → logprob: -18.875261306762695
    5. '
' → logprob: -19.750261306762695
    6. '1' → logprob: -19.875261306762695
    7. '<|end|>' → logprob: -19.875261306762695
    8. '                           ' → logprob: -20.250261306762695
    9. ' (' → logprob: -20.250261306762695
    10. '                   ' → logprob: -20.375261306762695

Token 420: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '(' → logprob: -16.12500762939453
    4. 'c' → logprob: -16.37500762939453
    5. 'w' → logprob: -18.50000762939453
    6. '   ' → logprob: -18.87500762939453
    7. 't' → logprob: -19.00000762939453
    8. '1' → logprob: -19.50000762939453
    9. '۲' → logprob: -20.00000762939453
    10. '`' → logprob: -20.37500762939453

Token 421: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.0009991057449951768
    2. 'c' → logprob: -7.5009989738464355
    3. '*' → logprob: -7.7509989738464355
    4. ' *' → logprob: -11.500999450683594
    5. '*C' → logprob: -13.250999450683594
    6. '```' → logprob: -13.750999450683594
    7. '`' → logprob: -14.000999450683594
    8. '*p' → logprob: -14.125999450683594
    9. '_c' → logprob: -14.750999450683594
    10. '
' → logprob: -15.250999450683594

Token 422: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0007482792134396732
    2. 'i' → logprob: -7.250748157501221
    3. 'c' → logprob: -10.500748634338379
    4. '_c' → logprob: -11.500748634338379
    5. '```' → logprob: -15.000748634338379
    6. '_m' → logprob: -16.875747680664062
    7. 'y' → logprob: -17.000747680664062
    8. '   ' → logprob: -17.125747680664062
    9. '`' → logprob: -17.250747680664062
    10. '[i' → logprob: -17.625747680664062

Token 423: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132880926132202
    2. '-' → logprob: -1.3132880926132202
    3. '-y' → logprob: -10.813287734985352
    4. ' ' → logprob: -12.563287734985352
    5. ' y' → logprob: -13.438287734985352
    6. 'y' → logprob: -15.188287734985352
    7. '```' → logprob: -15.313287734985352
    8. '   ' → logprob: -15.438287734985352
    9. '−' → logprob: -16.06328773498535
    10. '
' → logprob: -16.18828773498535

Token 424: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00023059594968799502
    2. ' y' → logprob: -8.37523078918457
    3. '	y' → logprob: -17.62523078918457
    4. '(y' → logprob: -18.62523078918457
    5. '1' → logprob: -18.75023078918457
    6. '   ' → logprob: -18.87523078918457
    7. 'x' → logprob: -19.00023078918457
    8. ''y' → logprob: -19.37523078918457
    9. '*y' → logprob: -20.50023078918457
    10. 'y's' → logprob: -20.62523078918457

Token 425: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759414434432983
    2. '-' → logprob: -0.8259414434432983
    3. ' ' → logprob: -13.82594108581543
    4. ' y' → logprob: -14.20094108581543
    5. 'y' → logprob: -16.20094108581543
    6. '<|end|>' → logprob: -16.82594108581543
    7. '−' → logprob: -16.95094108581543
    8. '```' → logprob: -17.07594108581543
    9. '1' → logprob: -17.82594108581543
    10. 's' → logprob: -18.20094108581543

Token 426: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '2' → logprob: -16.75004005432129
    4. '```' → logprob: -17.75004005432129
    5. '   ' → logprob: -18.37504005432129
    6. ' y' → logprob: -19.75004005432129
    7. 'y' → logprob: -19.87504005432129
    8. '１' → logprob: -20.12504005432129
    9. '۱' → logprob: -20.25004005432129
    10. '<|end|>' → logprob: -20.50004005432129

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.250001907348633
    4. '2' → logprob: -19.062501907348633
    5. '   ' → logprob: -19.750001907348633
    6. '۱' → logprob: -19.937501907348633
    7. '<|end|>' → logprob: -20.062501907348633
    8. '１' → logprob: -20.437501907348633
    9. '  ' → logprob: -21.375001907348633
    10. '
' → logprob: -21.437501907348633

Token 428: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.058848485350608826
    2. 'new' → logprob: -3.5588483810424805
    3. ' new' → logprob: -4.1838483810424805
    4. ')' → logprob: -4.5588483810424805
    5. ')
' → logprob: -6.9338483810424805
    6. '                       ' → logprob: -7.0588483810424805
    7. '<|end|>' → logprob: -8.43384838104248
    8. '           ' → logprob: -8.80884838104248
    9. ')new' → logprob: -8.80884838104248
    10. '                            ' → logprob: -9.30884838104248

Token 429: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.015750085934996605
    2. ' new' → logprob: -4.640749931335449
    3. 'new' → logprob: -5.140749931335449
    4. '                       ' → logprob: -10.01574993133545
    5. '           ' → logprob: -10.51574993133545
    6. '```' → logprob: -11.26574993133545
    7. '                               ' → logprob: -11.51574993133545
    8. '                   ' → logprob: -11.76574993133545
    9. '                            ' → logprob: -11.89074993133545
    10. '   ' → logprob: -12.39074993133545

Token 430: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.03893828019499779
    2. ' new' → logprob: -3.288938283920288
    3. '                           ' → logprob: -7.038938045501709
    4. '                       ' → logprob: -11.913938522338867
    5. '           ' → logprob: -12.038938522338867
    6. '```' → logprob: -13.413938522338867
    7. '                   ' → logprob: -13.788938522338867
    8. '   ' → logprob: -14.038938522338867
    9. '                            ' → logprob: -14.663938522338867
    10. '               ' → logprob: -14.788938522338867

Token 431: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -4.246537173457909e-06
    2. 'points' → logprob: -12.500003814697266
    3. 'Points' → logprob: -14.875003814697266
    4. '_positions' → logprob: -17.125003814697266
    5. '```' → logprob: -17.500003814697266
    6. '_POINTS' → logprob: -18.875003814697266
    7. '_point' → logprob: -20.000003814697266
    8. '_tokens' → logprob: -20.250003814697266
    9. ' points' → logprob: -20.500003814697266
    10. '\' → logprob: -20.750003814697266

Token 432: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.9361264946837764e-07
    2. '.setdefault' → logprob: -16.5
    3. '((' → logprob: -17.0
    4. '=(' → logprob: -17.875
    5. 'new' → logprob: -18.0
    6. '[' → logprob: -18.25
    7. '=' → logprob: -18.5
    8. '(' → logprob: -18.5
    9. '```' → logprob: -18.5
    10. '[
' → logprob: -18.75

Token 433: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5759894251823425
    2. 'x' → logprob: -0.8259894251823425
    3. ' x' → logprob: -10.575989723205566
    4. ' (' → logprob: -11.075989723205566
    5. '{x' → logprob: -12.950989723205566
    6. '                           ' → logprob: -12.950989723205566
    7. '(' → logprob: -13.200989723205566
    8. ',x' → logprob: -14.700989723205566
    9. ',' → logprob: -15.200989723205566
    10. ')x' → logprob: -15.200989723205566

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013357517309486866
    2. ',y' → logprob: -9.125133514404297
    3. 'y' → logprob: -11.375133514404297
    4. 'm' → logprob: -12.500133514404297
    5. 'x' → logprob: -12.625133514404297
    6. ' ,' → logprob: -12.875133514404297
    7. '_m' → logprob: -13.375133514404297
    8. '[' → logprob: -14.625133514404297
    9. '```' → logprob: -14.750133514404297
    10. '0' → logprob: -15.375133514404297

Token 435: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011052416637539864
    2. ' y' → logprob: -4.51105260848999
    3. '(y' → logprob: -12.886052131652832
    4. 'x' → logprob: -13.761052131652832
    5. ',' → logprob: -14.136052131652832
    6. ',y' → logprob: -15.261052131652832
    7. '(x' → logprob: -17.88605308532715
    8. '(' → logprob: -18.01105308532715
    9. 'm' → logprob: -18.63605308532715
    10. ''y' → logprob: -18.76105308532715

Token 436: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014367991127073765
    2. ')]' → logprob: -4.764368057250977
    3. ')' → logprob: -5.514368057250977
    4. ']=' → logprob: -6.389368057250977
    5. '])' → logprob: -11.139368057250977
    6. ' ]' → logprob: -11.764368057250977
    7. ')=' → logprob: -12.264368057250977
    8. '],' → logprob: -14.514368057250977
    9. ']=(' → logprob: -14.764368057250977
    10. ']+=' → logprob: -15.389368057250977

Token 437: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12468364089727402
    2. ']' → logprob: -2.3746836185455322
    3. ']=' → logprob: -3.9996836185455322
    4. ' =' → logprob: -5.249683856964111
    5. ')' → logprob: -7.499683856964111
    6. ')=' → logprob: -10.124683380126953
    7. ' ]' → logprob: -12.124683380126953
    8. 'new' → logprob: -12.249683380126953
    9. '[' → logprob: -13.499683380126953
    10. ')]' → logprob: -13.874683380126953

Token 438: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.014163747429847717
    2. ' new' → logprob: -4.264163970947266
    3. '_new' → logprob: -16.014163970947266
    4. '   ' → logprob: -17.514163970947266
    5. '	new' → logprob: -17.514163970947266
    6. 'New' → logprob: -17.514163970947266
    7. ' ' → logprob: -17.764163970947266
    8. '(new' → logprob: -18.639163970947266
    9. '{' → logprob: -18.889163970947266
    10. '.new' → logprob: -19.264163970947266

Token 439: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0001242772996192798
    2. 'points' → logprob: -9.125123977661133
    3. 'new' → logprob: -11.125123977661133
    4. 'Points' → logprob: -14.875123977661133
    5. '_positions' → logprob: -17.250123977661133
    6. '_new' → logprob: -17.375123977661133
    7. 'get' → logprob: -17.375123977661133
    8. '_POINTS' → logprob: -17.625123977661133
    9. '_point' → logprob: -18.000123977661133
    10. ' points' → logprob: -18.125123977661133

Token 440: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.001893414300866425
    2. 'get' → logprob: -6.376893520355225
    3. ' .' → logprob: -9.501893043518066
    4. ']' → logprob: -10.126893043518066
    5. '.' → logprob: -10.876893043518066
    6. '].' → logprob: -11.001893043518066
    7. ')' → logprob: -11.001893043518066
    8. 'new' → logprob: -12.001893043518066
    9. ' =' → logprob: -12.501893043518066
    10. '=' → logprob: -12.626893043518066

Token 441: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.15533487498760223
    2. '(new' → logprob: -2.030334949493408
    3. '(' → logprob: -4.780334949493408
    4. ' (' → logprob: -6.155334949493408
    5. 'new' → logprob: -6.405334949493408
    6. '(y' → logprob: -8.90533447265625
    7. '(x' → logprob: -9.28033447265625
    8. '[(' → logprob: -9.40533447265625
    9. ' new' → logprob: -9.90533447265625
    10. ')' → logprob: -11.65533447265625

Token 442: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.003031786298379302
    2. 'x' → logprob: -6.6280317306518555
    3. '(y' → logprob: -7.1280317306518555
    4. 'new' → logprob: -7.2530317306518555
    5. 'y' → logprob: -9.003031730651855
    6. '(' → logprob: -10.628031730651855
    7. '(new' → logprob: -10.753031730651855
    8. ' (' → logprob: -11.253031730651855
    9. '0' → logprob: -12.128031730651855
    10. ' new' → logprob: -12.753031730651855

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2963768541812897
    2. 'y' → logprob: -2.171376943588257
    3. '_m' → logprob: -2.296376943588257
    4. '(y' → logprob: -4.046376705169678
    5. '(' → logprob: -4.921376705169678
    6. ',y' → logprob: -5.046376705169678
    7. '_y' → logprob: -6.421376705169678
    8. ')' → logprob: -6.421376705169678
    9. ',(' → logprob: -6.421376705169678
    10. ' ,' → logprob: -6.671376705169678

Token 444: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14766322076320648
    2. '0' → logprob: -2.522663116455078
    3. ' y' → logprob: -2.897663116455078
    4. ' ' → logprob: -6.522663116455078
    5. '1' → logprob: -8.772663116455078
    6. ''y' → logprob: -9.022663116455078
    7. '(y' → logprob: -10.147663116455078
    8. ')' → logprob: -10.647663116455078
    9. 'new' → logprob: -10.897663116455078
    10. ' new' → logprob: -11.647663116455078

Token 445: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010158988879993558
    2. '],' → logprob: -7.001015663146973
    3. ' ,' → logprob: -10.376015663146973
    4. ')' → logprob: -10.751015663146973
    5. '),' → logprob: -11.001015663146973
    6. ']' → logprob: -11.126015663146973
    7. '(),' → logprob: -12.376015663146973
    8. ']+' → logprob: -13.001015663146973
    9. '[],' → logprob: -13.001015663146973
    10. '])' → logprob: -13.751015663146973

Token 446: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002806417876854539
    2. ' ' → logprob: -5.877806186676025
    3. ' new' → logprob: -13.752806663513184
    4. 'new' → logprob: -15.002806663513184
    5. ')' → logprob: -15.627806663513184
    6. 'cnt' → logprob: -19.127805709838867
    7. '                           ' → logprob: -19.377805709838867
    8. '+' → logprob: -19.752805709838867
    9. ',' → logprob: -19.752805709838867
    10. '   ' → logprob: -19.877805709838867

Token 447: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007102862582542002
    2. ' ' → logprob: -7.250710487365723
    3. '+' → logprob: -16.500709533691406
    4. 'cnt' → logprob: -16.500709533691406
    5. 'new' → logprob: -17.000709533691406
    6. ',' → logprob: -17.125709533691406
    7. '1' → logprob: -17.250709533691406
    8. ')' → logprob: -17.500709533691406
    9. ' new' → logprob: -18.375709533691406
    10. '   ' → logprob: -18.875709533691406

Token 448: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28868985176086426
    2. ',' → logprob: -1.4136898517608643
    3. ']' → logprob: -5.663689613342285
    4. ')+' → logprob: -6.288689613342285
    5. '+' → logprob: -6.538689613342285
    6. ' +' → logprob: -8.538689613342285
    7. ']+' → logprob: -8.663689613342285
    8. ' ,' → logprob: -8.913689613342285
    9. '                           ' → logprob: -9.538689613342285
    10. '```' → logprob: -10.788689613342285

Token 449: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326815485954285
    2. '+' → logprob: -1.3132681846618652
    3. ' ' → logprob: -13.188267707824707
    4. ')' → logprob: -13.563267707824707
    5. '```' → logprob: -14.063267707824707
    6. '                           ' → logprob: -14.813267707824707
    7. '+c' → logprob: -15.188267707824707
    8. '0' → logprob: -15.813267707824707
    9. '<|end|>' → logprob: -15.813267707824707
    10. ' ' → logprob: -16.063268661499023

Token 450: ' cnt' (ID: 27340)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.26697003841400146
    2. 'cnt' → logprob: -2.016970157623291
    3. ' new' → logprob: -2.391970157623291
    4. ' cnt' → logprob: -4.641970157623291
    5. 'points' → logprob: -9.266969680786133
    6. ' points' → logprob: -10.516969680786133
    7. '(cnt' → logprob: -11.516969680786133
    8. '_cnt' → logprob: -11.641969680786133
    9. 'count' → logprob: -12.266969680786133
    10. '	cnt' → logprob: -13.016969680786133

Token 451: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0003981376066803932
    2. 'new' → logprob: -9.000397682189941
    3. ' new' → logprob: -9.375397682189941
    4. '           ' → logprob: -9.625397682189941
    5. '```' → logprob: -10.375397682189941
    6. '
' → logprob: -10.625397682189941
    7. '                            ' → logprob: -11.125397682189941
    8. '                       ' → logprob: -11.125397682189941
    9. '                               ' → logprob: -11.375397682189941
    10. '                   ' → logprob: -11.750397682189941

Token 452: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.04174482077360153
    2. ' new' → logprob: -3.6667447090148926
    3. 'new' → logprob: -4.291744709014893
    4. '           ' → logprob: -7.416744709014893
    5. '```' → logprob: -7.541744709014893
    6. '                            ' → logprob: -8.66674518585205
    7. '                       ' → logprob: -9.54174518585205
    8. '                               ' → logprob: -9.79174518585205
    9. '                            
' → logprob: -10.54174518585205
    10. '                   ' → logprob: -10.54174518585205

Token 453: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.04891003668308258
    2. ' new' → logprob: -3.048910140991211
    3. '                           ' → logprob: -8.048910140991211
    4. '           ' → logprob: -13.298910140991211
    5. '```' → logprob: -14.548910140991211
    6. '                       ' → logprob: -14.923910140991211
    7. '                               ' → logprob: -15.548910140991211
    8. '                   ' → logprob: -16.54891014099121
    9. '               ' → logprob: -16.54891014099121
    10. '   ' → logprob: -16.67391014099121

Token 454: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00034535606391727924
    2. 'points' → logprob: -8.000345230102539
    3. 'Points' → logprob: -11.625345230102539
    4. '[(' → logprob: -14.250345230102539
    5. 'new' → logprob: -15.750345230102539
    6. '_tokens' → logprob: -16.12534523010254
    7. '_positions' → logprob: -17.37534523010254
    8. ' points' → logprob: -17.62534523010254
    9. '_POINTS' → logprob: -17.75034523010254
    10. '```' → logprob: -17.87534523010254

Token 455: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.453737710718997e-05
    2. '.setdefault' → logprob: -10.125044822692871
    3. '.get' → logprob: -12.625044822692871
    4. '[' → logprob: -15.125044822692871
    5. '[((' → logprob: -15.375044822692871
    6. '((' → logprob: -15.375044822692871
    7. '([(' → logprob: -15.750044822692871
    8. '   ' → logprob: -16.500043869018555
    9. ' [(' → logprob: -16.625043869018555
    10. '```' → logprob: -17.375043869018555

Token 456: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2014273703098297
    2. '(x' → logprob: -1.7014273405075073
    3. ' x' → logprob: -11.701427459716797
    4. ' (' → logprob: -12.576427459716797
    5. '(' → logprob: -13.451427459716797
    6. '{x' → logprob: -15.451427459716797
    7. ')x' → logprob: -16.201427459716797
    8. ',' → logprob: -16.326427459716797
    9. '"x' → logprob: -16.576427459716797
    10. '
' → logprob: -16.701427459716797

Token 457: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5591605305671692
    2. '(x' → logprob: -0.9341605305671692
    3. ',' → logprob: -3.5591604709625244
    4. '(' → logprob: -5.6841607093811035
    5. '(y' → logprob: -6.5591607093811035
    6. 'y' → logprob: -6.8091607093811035
    7. ',x' → logprob: -7.8091607093811035
    8. ' (' → logprob: -8.559160232543945
    9. ' x' → logprob: -9.184160232543945
    10. '_m' → logprob: -9.559160232543945

Token 458: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00014919086243025959
    2. ' y' → logprob: -8.87514877319336
    3. '(y' → logprob: -11.75014877319336
    4. 'x' → logprob: -14.00014877319336
    5. '(' → logprob: -15.75014877319336
    6. '
' → logprob: -16.25014877319336
    7. ')' → logprob: -16.37514877319336
    8. '           ' → logprob: -17.25014877319336
    9. '(x' → logprob: -17.62514877319336
    10. '                   ' → logprob: -17.62514877319336

Token 459: '_m' (ID: 1285)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008904983988031745
    2. ')]' → logprob: -7.250890731811523
    3. ']=' → logprob: -8.875890731811523
    4. ')' → logprob: -10.375890731811523
    5. '])' → logprob: -12.875890731811523
    6. ']]' → logprob: -13.250890731811523
    7. '_m' → logprob: -13.500890731811523
    8. ']+=' → logprob: -13.625890731811523
    9. ' ]' → logprob: -14.375890731811523
    10. ']+' → logprob: -14.500890731811523

Token 460: 'irror' (ID: 80004)
  Prédit: 'irror'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irror' → logprob: -8.220573363360018e-05
    2. 'mirror' → logprob: -9.500082015991211
    3. '1' → logprob: -13.000082015991211
    4. 'ir' → logprob: -13.750082015991211
    5. '   ' → logprob: -14.375082015991211
    6. ']' → logprob: -14.500082015991211
    7. 'rror' → logprob: -14.625082015991211
    8. 'irr' → logprob: -14.750082015991211
    9. 'or' → logprob: -14.875082015991211
    10. 'Mirror' → logprob: -15.125082015991211

Token 461: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5778002142906189
    2. ')]' → logprob: -0.8278002142906189
    3. ')' → logprob: -6.452800273895264
    4. ']=' → logprob: -8.952799797058105
    5. '])' → logprob: -8.952799797058105
    6. ' ]' → logprob: -11.077799797058105
    7. ']]' → logprob: -13.452799797058105
    8. ']+=' → logprob: -13.952799797058105
    9. '],' → logprob: -14.077799797058105
    10. '`]' → logprob: -14.577799797058105

Token 462: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06391962617635727
    2. ' =' → logprob: -2.8139195442199707
    3. ']' → logprob: -6.688919544219971
    4. ')' → logprob: -7.438919544219971
    5. ']=' → logprob: -9.188920021057129
    6. ')=' → logprob: -11.438920021057129
    7. 'new' → logprob: -12.813920021057129
    8. '<|end|>' → logprob: -14.938920021057129
    9. ')]' → logprob: -15.188920021057129
    10. ' ' → logprob: -15.438920021057129

Token 463: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.38687169551849365
    2. ' new' → logprob: -1.1368716955184937
    3. '_new' → logprob: -15.386871337890625
    4. 'New' → logprob: -15.511871337890625
    5. '	new' → logprob: -16.761871337890625
    6. '(new' → logprob: -17.136871337890625
    7. ')new' → logprob: -18.011871337890625
    8. '=' → logprob: -18.011871337890625
    9. '.new' → logprob: -18.136871337890625
    10. '   ' → logprob: -18.136871337890625

Token 464: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.5428926944732666
    2. 'get' → logprob: -1.0428926944732666
    3. 'new' → logprob: -2.7928926944732666
    4. '.get' → logprob: -5.4178924560546875
    5. ' get' → logprob: -8.042892456054688
    6. ' new' → logprob: -8.667892456054688
    7. '_get' → logprob: -8.792892456054688
    8. 'points' → logprob: -9.417892456054688
    9. '新' → logprob: -10.542892456054688
    10. 'Points' → logprob: -10.542892456054688

Token 465: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -6.420598219847307e-05
    2. 'get' → logprob: -9.7500638961792
    3. '.' → logprob: -12.3750638961792
    4. ' .' → logprob: -13.6250638961792
    5. '   ' → logprob: -16.625064849853516
    6. '].' → logprob: -17.000064849853516
    7. '
' → logprob: -17.000064849853516
    8. '_get' → logprob: -17.125064849853516
    9. '```' → logprob: -17.125064849853516
    10. '       ' → logprob: -17.500064849853516

Token 466: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.3596853831550106e-05
    2. '(' → logprob: -9.875053405761719
    3. '[(' → logprob: -13.875053405761719
    4. '(x' → logprob: -14.750053405761719
    5. '(new' → logprob: -15.625053405761719
    6. 'new' → logprob: -15.625053405761719
    7. '(
' → logprob: -15.750053405761719
    8. ' ((' → logprob: -16.25005340576172
    9. ' (' → logprob: -17.62505340576172
    10. '```' → logprob: -17.87505340576172

Token 467: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1602601855993271
    2. 'x' → logprob: -1.9102602005004883
    3. ' (' → logprob: -10.910260200500488
    4. '(' → logprob: -11.785260200500488
    5. ' x' → logprob: -12.285260200500488
    6. ',x' → logprob: -13.785260200500488
    7. 'new' → logprob: -13.785260200500488
    8. '0' → logprob: -14.410260200500488
    9. ',' → logprob: -14.535260200500488
    10. '"x' → logprob: -14.535260200500488

Token 468: ',' (ID: 11)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0011197380954399705
    2. '[(' → logprob: -7.251119613647461
    3. 'new' → logprob: -8.251119613647461
    4. '(new' → logprob: -9.751119613647461
    5. ',' → logprob: -9.876119613647461
    6. '((' → logprob: -11.626119613647461
    7. '           ' → logprob: -11.751119613647461
    8. ' (' → logprob: -12.376119613647461
    9. '(y' → logprob: -13.001119613647461
    10. 'x' → logprob: -13.126119613647461

Token 469: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.175925612449646
    2. 'x' → logprob: -2.1759257316589355
    3. '(x' → logprob: -3.3009257316589355
    4. ' y' → logprob: -4.8009257316589355
    5. '(y' → logprob: -6.3009257316589355
    6. ' x' → logprob: -8.175925254821777
    7. '0' → logprob: -8.300925254821777
    8. ' (' → logprob: -8.800925254821777
    9. '(' → logprob: -9.300925254821777
    10. 'new' → logprob: -10.050925254821777

Token 470: '_m' (ID: 1285)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032083578407764435
    2. '),' → logprob: -4.032083511352539
    3. '_m' → logprob: -4.532083511352539
    4. '],' → logprob: -6.032083511352539
    5. ' ,' → logprob: -8.532083511352539
    6. ',y' → logprob: -8.907083511352539
    7. ')' → logprob: -9.282083511352539
    8. ',m' → logprob: -10.157083511352539
    9. '           ' → logprob: -10.532083511352539
    10. '   ' → logprob: -10.657083511352539

Token 471: 'irror' (ID: 80004)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.9424761533737183
    2. 'irror' → logprob: -1.1924761533737183
    3. 'y' → logprob: -2.942476272583008
    4. ')' → logprob: -2.942476272583008
    5. '_y' → logprob: -3.442476272583008
    6. '1' → logprob: -3.567476272583008
    7. ',' → logprob: -3.567476272583008
    8. ' y' → logprob: -3.942476272583008
    9. '_i' → logprob: -4.442476272583008
    10. '_' → logprob: -4.567476272583008

Token 472: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038956227945163846
    2. '],' → logprob: -8.250389099121094
    3. '(),' → logprob: -9.875389099121094
    4. '),' → logprob: -10.000389099121094
    5. ' ,' → logprob: -10.750389099121094
    6. ')' → logprob: -12.000389099121094
    7. '[],' → logprob: -14.125389099121094
    8. '       ' → logprob: -14.375389099121094
    9. ']' → logprob: -14.375389099121094
    10. ',y' → logprob: -15.375389099121094

Token 473: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615399710834026
    2. ' ' → logprob: -4.758615493774414
    3. 'new' → logprob: -14.508615493774414
    4. ' new' → logprob: -15.758615493774414
    5. ')' → logprob: -16.008615493774414
    6. '   ' → logprob: -17.383615493774414
    7. '```' → logprob: -18.008615493774414
    8. '
' → logprob: -18.008615493774414
    9. ' y' → logprob: -18.258615493774414
    10. '1' → logprob: -18.383615493774414

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005824613617733121
    2. ' ' → logprob: -7.500582695007324
    3. 'cnt' → logprob: -11.375582695007324
    4. 'new' → logprob: -11.500582695007324
    5. ' new' → logprob: -12.750582695007324
    6. ')' → logprob: -13.500582695007324
    7. '   ' → logprob: -14.000582695007324
    8. 'points' → logprob: -14.625582695007324
    9. ' cnt' → logprob: -14.750582695007324
    10. ' points' → logprob: -15.250582695007324

Token 475: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010636976920068264
    2. ',' → logprob: -5.260636806488037
    3. '+' → logprob: -5.760636806488037
    4. ')+' → logprob: -6.260636806488037
    5. ']' → logprob: -9.010637283325195
    6. ' +' → logprob: -9.135637283325195
    7. ' )' → logprob: -10.510637283325195
    8. ']+' → logprob: -10.635637283325195
    9. '+)' → logprob: -11.260637283325195
    10. ' ,' → logprob: -12.135637283325195

Token 476: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38707205653190613
    2. ' +' → logprob: -1.1370720863342285
    3. '0' → logprob: -8.63707160949707
    4. ' ' → logprob: -10.88707160949707
    5. ')' → logprob: -13.26207160949707
    6. '>' → logprob: -14.63707160949707
    7. ' ' → logprob: -15.01207160949707
    8. '+c' → logprob: -15.01207160949707
    9. '   ' → logprob: -15.26207160949707
    10. ',' → logprob: -15.26207160949707

Token 477: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00026181264547631145
    2. ' cnt' → logprob: -8.250262260437012
    3. '(cnt' → logprob: -14.875262260437012
    4. '	cnt' → logprob: -16.125261306762695
    5. 'count' → logprob: -17.375261306762695
    6. '[cnt' → logprob: -17.500261306762695
    7. '   ' → logprob: -19.625261306762695
    8. '_cnt' → logprob: -19.625261306762695
    9. 'cn' → logprob: -19.625261306762695
    10. ' ' → logprob: -19.750261306762695

Token 478: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23081964254379272
    2. 'points' → logprob: -1.9808197021484375
    3. '               ' → logprob: -3.3558197021484375
    4. ' points' → logprob: -4.1058197021484375
    5. '                   ' → logprob: -4.7308197021484375
    6. '                       ' → logprob: -5.3558197021484375
    7. '       ' → logprob: -6.6058197021484375
    8. '                           ' → logprob: -6.8558197021484375
    9. '```' → logprob: -7.6058197021484375
    10. '
' → logprob: -9.480819702148438

Token 479: '                   ' (ID: 699)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.0882842540740967
    2. '                   ' → logprob: -1.5882842540740967
    3. '           ' → logprob: -1.5882842540740967
    4. '                           ' → logprob: -2.5882842540740967
    5. '                       ' → logprob: -2.5882842540740967
    6. '               ' → logprob: -2.8382842540740967
    7. 'h' → logprob: -4.213284492492676
    8. '```' → logprob: -4.838284492492676
    9. '       ' → logprob: -5.213284492492676
    10. ' w' → logprob: -5.338284492492676

Token 480: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.0004754751571454108
    2. ' h' → logprob: -8.250475883483887
    3. '                   ' → logprob: -9.250475883483887
    4. '           ' → logprob: -10.000475883483887
    5. '```' → logprob: -10.375475883483887
    6. '                       ' → logprob: -11.500475883483887
    7. '               ' → logprob: -11.500475883483887
    8. '       ' → logprob: -11.750475883483887
    9. '   ' → logprob: -12.375475883483887
    10. '``' → logprob: -13.000475883483887

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '＝' → logprob: -17.173587799072266
    4. ' ' → logprob: -17.923587799072266
    5. ',' → logprob: -18.048587799072266
    6. '=cut' → logprob: -18.923587799072266
    7. '=c' → logprob: -19.298587799072266
    8. ')' → logprob: -19.673587799072266
    9. '   ' → logprob: -19.673587799072266
    10. '*=' → logprob: -19.923587799072266

Token 482: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002570481738075614
    2. '2' → logprob: -8.50025749206543
    3. ' c' → logprob: -9.87525749206543
    4. '   ' → logprob: -14.00025749206543
    5. ' ' → logprob: -15.12525749206543
    6. 'p' → logprob: -15.37525749206543
    7. 't' → logprob: -15.62525749206543
    8. '(c' → logprob: -15.62525749206543
    9. '_c' → logprob: -15.75025749206543
    10. '	c' → logprob: -16.12525749206543

Token 483: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0008090290939435363
    2. 'i' → logprob: -7.125809192657471
    3. '_c' → logprob: -13.250808715820312
    4. '_' → logprob: -13.500808715820312
    5. '```' → logprob: -14.750808715820312
    6. 'c' → logprob: -15.500808715820312
    7. '   ' → logprob: -16.000808715820312
    8. '-' → logprob: -16.125808715820312
    9. ' i' → logprob: -16.250808715820312
    10. '­i' → logprob: -16.750808715820312

Token 484: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08963370323181152
    2. ' *' → logprob: -2.4646337032318115
    3. '<|end|>' → logprob: -7.589633941650391
    4. ')' → logprob: -9.33963394165039
    5. '+' → logprob: -10.96463394165039
    6. ')*' → logprob: -11.08963394165039
    7. '<|end|>' → logprob: -11.71463394165039
    8. '	' → logprob: -12.08963394165039
    9. '
' → logprob: -12.21463394165039
    10. '               ' → logprob: -12.33963394165039

Token 485: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۲' → logprob: -17.2500057220459
    4. '   ' → logprob: -17.5000057220459
    5. '２' → logprob: -18.6250057220459
    6. '२' → logprob: -18.7500057220459
    7. '```' → logprob: -19.1250057220459
    8. '<|end|>' → logprob: -19.3750057220459
    9. '٢' → logprob: -19.5000057220459
    10. '২' → logprob: -19.5625057220459

Token 486: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.875003814697266
    4. '۲' → logprob: -19.125003814697266
    5. '２' → logprob: -19.687503814697266
    6. '1' → logprob: -19.750003814697266
    7. '  ' → logprob: -19.937503814697266
    8. '```' → logprob: -19.937503814697266
    9. '२' → logprob: -20.125003814697266
    10. 'two' → logprob: -20.500003814697266

Token 487: '
' (ID: 198)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5804495215415955
    2. '           ' → logprob: -0.8304495215415955
    3. ' points' → logprob: -5.58044958114624
    4. '               ' → logprob: -7.45544958114624
    5. '       ' → logprob: -9.330449104309082
    6. '                   ' → logprob: -11.080449104309082
    7. '(points' → logprob: -11.330449104309082
    8. '   ' → logprob: -11.705449104309082
    9. '	points' → logprob: -11.705449104309082
    10. 'Points' → logprob: -12.080449104309082

Token 488: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07482980936765671
    2. 'points' → logprob: -2.8248298168182373
    3. ' points' → logprob: -5.199829578399658
    4. '               ' → logprob: -5.699829578399658
    5. '       ' → logprob: -5.949829578399658
    6. '```' → logprob: -7.699829578399658
    7. '                   ' → logprob: -8.824830055236816
    8. '            
' → logprob: -8.824830055236816
    9. '_points' → logprob: -9.324830055236816
    10. '(points' → logprob: -9.449830055236816

Token 489: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.09628871828317642
    2. '           ' → logprob: -2.4712886810302734
    3. ' points' → logprob: -4.971288681030273
    4. '               ' → logprob: -8.846288681030273
    5. '       ' → logprob: -8.971288681030273
    6. '	points' → logprob: -9.596288681030273
    7. '   ' → logprob: -10.846288681030273
    8. '(points' → logprob: -11.471288681030273
    9. '                   ' → logprob: -12.346288681030273
    10. '```' → logprob: -12.596288681030273

Token 490: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011703446507453918
    2. ' =' → logprob: -6.7511701583862305
    3. '=new' → logprob: -16.126171112060547
    4. ' new' → logprob: -16.876171112060547
    5. '=

' → logprob: -18.126171112060547
    6. ',' → logprob: -18.251171112060547
    7. '=
' → logprob: -19.001171112060547
    8. '＝' → logprob: -19.126171112060547
    9. ')' → logprob: -20.376171112060547
    10. '=}' → logprob: -21.126171112060547

Token 491: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0002613358374219388
    2. ' new' → logprob: -8.250261306762695
    3. 'New' → logprob: -19.125261306762695
    4. '_new' → logprob: -20.000261306762695
    5. '	new' → logprob: -20.250261306762695
    6. ')new' → logprob: -21.125261306762695
    7. '$new' → logprob: -21.250261306762695
    8. '{' → logprob: -21.375261306762695
    9. '(new' → logprob: -21.625261306762695
    10. '```' → logprob: -21.875261306762695

Token 492: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0005539863486774266
    2. 'points' → logprob: -7.500554084777832
    3. 'Points' → logprob: -14.625554084777832
    4. 'oints' → logprob: -15.000554084777832
    5. ' points' → logprob: -16.500553131103516
    6. '_POINTS' → logprob: -16.875553131103516
    7. 'w' → logprob: -17.125553131103516
    8. '(points' → logprob: -18.250553131103516
    9. '	points' → logprob: -18.375553131103516
    10. 'new' → logprob: -18.375553131103516

Token 493: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016877710819244385
    2. '
' → logprob: -4.6418776512146
    3. '           ' → logprob: -5.3918776512146
    4. '   ' → logprob: -6.8918776512146
    5. '        
' → logprob: -7.1418776512146
    6. '<|end|>' → logprob: -8.016878128051758
    7. '    
' → logprob: -9.141878128051758
    8. 'print' → logprob: -9.391878128051758
    9. '            
' → logprob: -10.516878128051758
    10. 'for' → logprob: -10.516878128051758

Token 494: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043425481766462326
    2. 'print' → logprob: -4.168425559997559
    3. 'count' → logprob: -4.418425559997559
    4. 'total' → logprob: -4.668425559997559
    5. 'result' → logprob: -5.793425559997559
    6. '```' → logprob: -7.168425559997559
    7. 'for' → logprob: -7.543425559997559
    8. 'counts' → logprob: -8.043425559997559
    9. '        
' → logprob: -8.543425559997559
    10. '           ' → logprob: -8.668425559997559

Token 495: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8116850852966309
    2. '       ' → logprob: -1.0616850852966309
    3. 'print' → logprob: -2.311685085296631
    4. 'for' → logprob: -3.061685085296631
    5. 'count' → logprob: -3.936685085296631
    6. 'answer' → logprob: -4.061685085296631
    7. 'total' → logprob: -4.186685085296631
    8. 'counts' → logprob: -5.311685085296631
    9. 'output' → logprob: -6.561685085296631
    10. '   ' → logprob: -6.686685085296631

Token 496: ' After' (ID: 6311)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36017945408821106
    2. 'result' → logprob: -1.9851794242858887
    3. 'answer' → logprob: -2.4851794242858887
    4. 'ans' → logprob: -3.6101794242858887
    5. 'total' → logprob: -3.9851794242858887
    6. 'res' → logprob: -4.360179424285889
    7. 'count' → logprob: -5.110179424285889
    8. 'answers' → logprob: -5.360179424285889
    9. 'counts' → logprob: -5.860179424285889
    10. '       ' → logprob: -6.360179424285889

Token 497: ' unfolding' (ID: 125754)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7578845620155334
    2. 'all' → logprob: -1.6328845024108887
    3. 'sum' → logprob: -2.2578845024108887
    4. 'points' → logprob: -3.0078845024108887
    5. 'calcul' → logprob: -3.0078845024108887
    6. 'this' → logprob: -3.5078845024108887
    7. 'the' → logprob: -3.6328845024108887
    8. 'fold' → logprob: -3.7578845024108887
    9. '#' → logprob: -4.257884502410889
    10. 'processing' → logprob: -5.632884502410889

Token 498: ' all' (ID: 722)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12261161208152771
    2. 'for' → logprob: -3.2476115226745605
    3. ',' → logprob: -3.3726115226745605
    4. '       ' → logprob: -3.9976115226745605
    5. ' for' → logprob: -4.3726115226745605
    6. '
' → logprob: -5.6226115226745605
    7. 'count' → logprob: -5.8726115226745605
    8. 'print' → logprob: -5.8726115226745605
    9. 'total' → logprob: -7.6226115226745605
    10. 'sum' → logprob: -8.247611999511719

Token 499: ' folds' (ID: 102877)
  Prédit: 'fold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fold' → logprob: -0.05671239271759987
    2. 'points' → logprob: -3.3067123889923096
    3. 'for' → logprob: -4.431712627410889
    4. 'p' → logprob: -5.556712627410889
    5. ' folds' → logprob: -6.056712627410889
    6. 'tokens' → logprob: -8.80671215057373
    7. 'the' → logprob: -9.68171215057373
    8. ' points' → logprob: -10.43171215057373
    9. '(p' → logprob: -10.55671215057373
    10. ' folding' → logprob: -10.55671215057373

Token 500: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5995864272117615
    2. ',' → logprob: -1.7245864868164062
    3. 'print' → logprob: -2.3495864868164062
    4. 'for' → logprob: -2.3495864868164062
    5. '       ' → logprob: -3.3495864868164062
    6. ' for' → logprob: -3.4745864868164062
    7. 'count' → logprob: -5.474586486816406
    8. 'total' → logprob: -5.724586486816406
    9. '
' → logprob: -6.349586486816406
    10. '            
' → logprob: -6.349586486816406

Token 501: ' sum' (ID: 4215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4758298099040985
    2. ' for' → logprob: -1.350829839706421
    3. '           ' → logprob: -3.100829839706421
    4. 'total' → logprob: -3.600829839706421
    5. ' total' → logprob: -4.475829601287842
    6. 'answer' → logprob: -4.600829601287842
    7. 'count' → logprob: -4.725829601287842
    8. 'result' → logprob: -4.975829601287842
    9. ' answer' → logprob: -6.225829601287842
    10. ' result' → logprob: -6.600829601287842

Token 502: ' counts' (ID: 28991)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.628413736820221
    2. 'up' → logprob: -1.8784136772155762
    3. '((' → logprob: -3.128413677215576
    4. '=' → logprob: -3.378413677215576
    5. '   ' → logprob: -3.503413677215576
    6. 'the' → logprob: -3.628413677215576
    7. '(count' → logprob: -3.628413677215576
    8. '           ' → logprob: -3.878413677215576
    9. '(cnt' → logprob: -4.003413677215576
    10. '(' → logprob: -4.003413677215576

Token 503: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35448938608169556
    2. '       ' → logprob: -1.8544893264770508
    3. 'total' → logprob: -2.104489326477051
    4. 'result' → logprob: -4.979489326477051
    5. 'count' → logprob: -5.104489326477051
    6. ' total' → logprob: -6.104489326477051
    7. 'for' → logprob: -6.604489326477051
    8. 'sum' → logprob: -6.854489326477051
    9. '   ' → logprob: -7.354489326477051
    10. 'print' → logprob: -7.604489326477051

Token 504: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0365327596664429
    2. 'each' → logprob: -1.0365327596664429
    3. 'points' → logprob: -1.4115327596664429
    4. 'the' → logprob: -4.161532878875732
    5. ' points' → logprob: -4.411532878875732
    6. ' all' → logprob: -4.411532878875732
    7. ' each' → logprob: -5.286532878875732
    8. '(points' → logprob: -7.911532878875732
    9. ' the' → logprob: -8.161532402038574
    10. '           ' → logprob: -8.411532402038574

Token 505: ' initial' (ID: 4871)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.006498650647699833
    2. ' points' → logprob: -5.25649881362915
    3. 'positions' → logprob: -6.88149881362915
    4. '(points' → logprob: -8.756498336791992
    5. 'point' → logprob: -9.756498336791992
    6. '(' → logprob: -12.631498336791992
    7. 'coordinates' → logprob: -12.756498336791992
    8. 'keys' → logprob: -12.756498336791992
    9. 'tokens' → logprob: -13.006498336791992
    10. 'lines' → logprob: -13.131498336791992

Token 506: ' paper' (ID: 6651)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3149542808532715
    2. 'positions' → logprob: -1.8149542808532715
    3. ' points' → logprob: -3.0649542808532715
    4. 's' → logprob: -4.0649542808532715
    5. '(' → logprob: -4.1899542808532715
    6. '(points' → logprob: -4.4399542808532715
    7. ' (' → logprob: -5.5649542808532715
    8. ' positions' → logprob: -5.9399542808532715
    9. '(x' → logprob: -6.0649542808532715
    10. '           ' → logprob: -6.1899542808532715

Token 507: ' coordinates' (ID: 27933)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7139022350311279
    2. ' points' → logprob: -1.088902235031128
    3. '           ' → logprob: -2.338902235031128
    4. '       ' → logprob: -3.963902235031128
    5. 'positions' → logprob: -4.713902473449707
    6. 'for' → logprob: -4.838902473449707
    7. 's' → logprob: -5.088902473449707
    8. 'tokens' → logprob: -5.463902473449707
    9. ',' → logprob: -5.838902473449707
    10. ' for' → logprob: -5.963902473449707

Token 508: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005406403914093971
    2. 'total' → logprob: -6.130406379699707
    3. 'sum' → logprob: -6.630406379699707
    4. 'count' → logprob: -7.755406379699707
    5. '
' → logprob: -7.880406379699707
    6. 'result' → logprob: -8.005406379699707
    7. 'output' → logprob: -8.880406379699707
    8. '       ' → logprob: -9.005406379699707
    9. ' total' → logprob: -9.130406379699707
    10. '            
' → logprob: -9.630406379699707

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005431662313640118
    2. ' for' → logprob: -6.380431652069092
    3. 'total' → logprob: -6.630431652069092
    4. ' total' → logprob: -7.255431652069092
    5. '       ' → logprob: -7.755431652069092
    6. 'for' → logprob: -8.13043212890625
    7. 'result' → logprob: -8.50543212890625
    8. '            
' → logprob: -8.63043212890625
    9. 'count' → logprob: -8.88043212890625
    10. 'print' → logprob: -9.50543212890625

Token 510: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8914219737052917
    2. 'result' → logprob: -1.3914220333099365
    3. 'answer' → logprob: -1.6414220333099365
    4. 'print' → logprob: -2.2664220333099365
    5. 'count' → logprob: -4.016421794891357
    6. 'ans' → logprob: -5.016421794891357
    7. ' total' → logprob: -5.391421794891357
    8. '           ' → logprob: -5.641421794891357
    9. 'for' → logprob: -5.641421794891357
    10. '       ' → logprob: -6.266421794891357

Token 511: ' sum' (ID: 4215)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.8283045291900635
    2. 'total' → logprob: -0.9533045291900635
    3. 'result' → logprob: -1.9533045291900635
    4. 'print' → logprob: -4.453304290771484
    5. 'ans' → logprob: -4.578304290771484
    6. 'count' → logprob: -4.828304290771484
    7. 'for' → logprob: -6.453304290771484
    8. '           ' → logprob: -6.578304290771484
    9. 'res' → logprob: -7.203304290771484
    10. 'sum' → logprob: -7.828304290771484

Token 512: ' counts' (ID: 28991)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6022970080375671
    2. 'count' → logprob: -1.602297067642212
    3. ' =' → logprob: -1.977297067642212
    4. 'cnt' → logprob: -3.352297067642212
    5. 'of' → logprob: -4.227296829223633
    6. '_count' → logprob: -4.352296829223633
    7. '_' → logprob: -4.602296829223633
    8. '_of' → logprob: -4.852296829223633
    9. '+=' → logprob: -5.477296829223633
    10. '_points' → logprob: -5.477296829223633

Token 513: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9142571687698364
    2. ' =' → logprob: -1.6642571687698364
    3. '           ' → logprob: -1.7892571687698364
    4. 'total' → logprob: -2.289257049560547
    5. '
' → logprob: -2.539257049560547
    6. 'result' → logprob: -3.789257049560547
    7. 'count' → logprob: -4.539257049560547
    8. 'print' → logprob: -4.914257049560547
    9. '       ' → logprob: -5.289257049560547
    10. 'sum' → logprob: -5.414257049560547

Token 514: ' all' (ID: 722)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.10466629266738892
    2. ' points' → logprob: -2.354666233062744
    3. 'all' → logprob: -7.104666233062744
    4. 'point' → logprob: -7.229666233062744
    5. '(points' → logprob: -7.479666233062744
    6. 'values' → logprob: -7.729666233062744
    7. 'value' → logprob: -7.729666233062744
    8. ' all' → logprob: -8.104666709899902
    9. 'p' → logprob: -8.229666709899902
    10. 'v' → logprob: -8.604666709899902

Token 515: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.03176409378647804
    2. ' points' → logprob: -3.531764030456543
    3. 'value' → logprob: -7.531764030456543
    4. 'values' → logprob: -7.781764030456543
    5. 'point' → logprob: -8.156764030456543
    6. '(points' → logprob: -8.281764030456543
    7. 'v' → logprob: -8.656764030456543
    8. 'count' → logprob: -9.531764030456543
    9. 'counts' → logprob: -10.031764030456543
    10. 'cnt' → logprob: -10.156764030456543

Token 516: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7986117601394653
    2. ' =' → logprob: -1.7986117601394653
    3. '=' → logprob: -2.048611640930176
    4. 'result' → logprob: -3.173611640930176
    5. '(sum' → logprob: -3.298611640930176
    6. '=sum' → logprob: -3.423611640930176
    7. 'total' → logprob: -3.548611640930176
    8. '(total' → logprob: -3.923611640930176
    9. '
' → logprob: -3.923611640930176
    10. 'sum' → logprob: -4.048611640930176

Token 517: ' after' (ID: 1934)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42629072070121765
    2. '           ' → logprob: -1.42629075050354
    3. 'total' → logprob: -2.80129075050354
    4. '       ' → logprob: -4.051290512084961
    5. 'result' → logprob: -4.176290512084961
    6. 'count' → logprob: -5.551290512084961
    7. 'sum' → logprob: -6.051290512084961
    8. 'print' → logprob: -6.051290512084961
    9. 'answer' → logprob: -6.301290512084961
    10. ' total' → logprob: -6.926290512084961

Token 518: ' unfolding' (ID: 125754)
  Prédit: 'fold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fold' → logprob: -0.3768768012523651
    2. 'un' → logprob: -1.8768768310546875
    3. ' unfolding' → logprob: -2.1268768310546875
    4. ' folding' → logprob: -4.5018768310546875
    5. 'for' → logprob: -4.7518768310546875
    6. '   ' → logprob: -5.0018768310546875
    7. '           ' → logprob: -5.6268768310546875
    8. '       ' → logprob: -6.1268768310546875
    9. 'points' → logprob: -6.2518768310546875
    10. ' folds' → logprob: -6.5018768310546875

Token 519: ' jumps' (ID: 65613)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.916320264339447
    2. 'result' → logprob: -1.0413203239440918
    3. '           ' → logprob: -2.291320323944092
    4. 'answer' → logprob: -3.291320323944092
    5. 'sum' → logprob: -3.541320323944092
    6. '
' → logprob: -3.666320323944092
    7. 'count' → logprob: -4.541320323944092
    8. ' total' → logprob: -4.666320323944092
    9. ' result' → logprob: -5.041320323944092
    10. 'ans' → logprob: -5.041320323944092

Token 520: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042129360139369965
    2. '
' → logprob: -3.9171292781829834
    3. 'total' → logprob: -5.0421295166015625
    4. '       ' → logprob: -5.6671295166015625
    5. 'sum' → logprob: -6.5421295166015625
    6. '=' → logprob: -6.6671295166015625
    7. ',' → logprob: -6.6671295166015625
    8. ' for' → logprob: -6.6671295166015625
    9. ' total' → logprob: -7.0421295166015625
    10. ' =' → logprob: -7.1671295166015625

Token 521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10996487736701965
    2. 'total' → logprob: -2.6099648475646973
    3. 'sum' → logprob: -4.984964847564697
    4. 'result' → logprob: -4.984964847564697
    5. '       ' → logprob: -5.484964847564697
    6. ' total' → logprob: -5.734964847564697
    7. '
' → logprob: -5.984964847564697
    8. '```' → logprob: -6.734964847564697
    9. 'for' → logprob: -6.859964847564697
    10. 'count' → logprob: -6.984964847564697

Token 522: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8934963941574097
    2. 'total' (adapté à ' total') → logprob: -0.8934963941574097
    3. 'answer' → logprob: -2.768496513366699
    4. 'print' → logprob: -3.018496513366699
    5. 'count' → logprob: -3.643496513366699
    6. '           ' → logprob: -4.018496513366699
    7. ' total' → logprob: -4.518496513366699
    8. ' result' → logprob: -5.143496513366699
    9. '       ' → logprob: -6.018496513366699
    10. 'ans' → logprob: -6.268496513366699

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5780712366104126
    2. '=' → logprob: -1.7030712366104126
    3. '_count' → logprob: -1.7030712366104126
    4. '_points' → logprob: -3.203071117401123
    5. '_' → logprob: -3.953071117401123
    6. '_counts' → logprob: -4.328071117401123
    7. ' +=' → logprob: -7.078071117401123
    8. ' _' → logprob: -8.078071594238281
    9. 'count' → logprob: -8.828071594238281
    10. '_p' → logprob: -8.828071594238281

Token 524: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6813973188400269
    2. 'sum' → logprob: -1.0563973188400269
    3. ' sum' → logprob: -1.9313973188400269
    4. ' ' → logprob: -6.556397438049316
    5. '   ' → logprob: -11.306397438049316
    6. '	sum' → logprob: -13.681397438049316
    7. '           ' → logprob: -13.931397438049316
    8. '(sum' → logprob: -13.931397438049316
    9. '  ' → logprob: -14.056397438049316
    10. '=sum' → logprob: -14.931397438049316

Token 525: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.47435107827186584
    2. '0' → logprob: -0.9743510484695435
    3. ' sum' → logprob: -8.224350929260254
    4. ' ' → logprob: -12.349350929260254
    5. '   ' → logprob: -13.974350929260254
    6. '(sum' → logprob: -15.224350929260254
    7. '	sum' → logprob: -15.849350929260254
    8. '=sum' → logprob: -15.849350929260254
    9. '       ' → logprob: -17.22435188293457
    10. '1' → logprob: -17.22435188293457

Token 526: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008846191689372063
    2. '
' → logprob: -4.883846282958984
    3. ' for' → logprob: -8.133846282958984
    4. '       ' → logprob: -8.133846282958984
    5. 'for' → logprob: -8.508846282958984
    6. '<|end|>' → logprob: -8.508846282958984
    7. '               ' → logprob: -9.633846282958984
    8. '		' → logprob: -10.133846282958984
    9. '                   ' → logprob: -10.383846282958984
    10. '          ' → logprob: -10.883846282958984

Token 527: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002436662558466196
    2. ' for' → logprob: -6.502436637878418
    3. 'for' → logprob: -7.877436637878418
    4. '
' → logprob: -8.502436637878418
    5. '       ' → logprob: -9.002436637878418
    6. '<|end|>' → logprob: -9.377436637878418
    7. '   ' → logprob: -9.877436637878418
    8. '               ' → logprob: -10.627436637878418
    9. '                   ' → logprob: -11.127436637878418
    10. '                           ' → logprob: -11.627436637878418

Token 528: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.041110746562480927
    2. '           ' → logprob: -3.2911107540130615
    3. ' for' → logprob: -5.791110515594482
    4. '       ' → logprob: -12.04111099243164
    5. '   ' → logprob: -12.79111099243164
    6. '	for' → logprob: -14.04111099243164
    7. '```' → logprob: -15.66611099243164
    8. '               ' → logprob: -16.29111099243164
    9. ' ' → logprob: -16.41611099243164
    10. '		' → logprob: -16.91611099243164

Token 529: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5436716079711914
    2. ' (' → logprob: -1.0436716079711914
    3. 'x' → logprob: -3.4186716079711914
    4. ' x' → logprob: -4.418671607971191
    5. '(_,' → logprob: -4.668671607971191
    6. '_,' → logprob: -5.918671607971191
    7. 'pos' → logprob: -6.543671607971191
    8. ' coord' → logprob: -6.668671607971191
    9. ' _,' → logprob: -6.918671607971191
    10. '(' → logprob: -7.043671607971191

Token 530: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00022308611369226128
    2. ' x' → logprob: -8.625223159790039
    3. '_x' → logprob: -10.875223159790039
    4. '(x' → logprob: -11.000223159790039
    5. '_,' → logprob: -12.500223159790039
    6. ',' → logprob: -13.500223159790039
    7. '   ' → logprob: -14.375223159790039
    8. ',x' → logprob: -14.375223159790039
    9. ')x' → logprob: -14.500223159790039
    10. ' (' → logprob: -15.375223159790039

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022085432428866625
    2. ',y' → logprob: -6.127208709716797
    3. ' ,' → logprob: -10.752208709716797
    4. ',
' → logprob: -15.002208709716797
    5. ',x' → logprob: -15.127208709716797
    6. ',user' → logprob: -15.127208709716797
    7. ',p' → logprob: -15.252208709716797
    8. 'y' → logprob: -16.252208709716797
    9. '‌,' → logprob: -16.252208709716797
    10. ',value' → logprob: -16.502208709716797

Token 532: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02975083328783512
    2. ' y' → logprob: -3.5297508239746094
    3. ',y' → logprob: -15.40475082397461
    4. ',' → logprob: -16.52975082397461
    5. '	y' → logprob: -19.52975082397461
    6. ')y' → logprob: -19.77975082397461
    7. 'x' → logprob: -20.52975082397461
    8. ''y' → logprob: -21.65475082397461
    9. '           ' → logprob: -22.40475082397461
    10. '‘y' → logprob: -22.77975082397461

Token 533: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10105512291193008
    2. ',' → logprob: -2.351055145263672
    3. ',),' → logprob: -7.476055145263672
    4. ')' → logprob: -9.101055145263672
    5. '           ' → logprob: -9.226055145263672
    6. ',)' → logprob: -10.726055145263672
    7. ' ),' → logprob: -10.851055145263672
    8. ' ,' → logprob: -11.851055145263672
    9. '               ' → logprob: -12.476055145263672
    10. ' in' → logprob: -12.601055145263672

Token 534: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.31334352493286133
    2. ' cnt' → logprob: -1.3133435249328613
    3. 'count' → logprob: -9.438343048095703
    4. ' count' → logprob: -13.188343048095703
    5. '	cnt' → logprob: -15.563343048095703
    6. '(cnt' → logprob: -16.813343048095703
    7. '_cnt' → logprob: -16.938343048095703
    8. 'ct' → logprob: -17.438343048095703
    9. 'Cnt' → logprob: -18.563343048095703
    10. 'counts' → logprob: -19.563343048095703

Token 535: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0700145736336708
    2. 'in' → logprob: -2.695014476776123
    3. '+=' → logprob: -10.695014953613281
    4. '	in' → logprob: -11.070014953613281
    5. ' +=' → logprob: -11.445014953613281
    6. '=' → logprob: -12.070014953613281
    7. 's' → logprob: -12.445014953613281
    8. '<|end|>' → logprob: -12.695014953613281
    9. ',' → logprob: -12.945014953613281
    10. ' ' → logprob: -13.195014953613281

Token 536: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.03367197886109352
    2. ' points' → logprob: -3.4086720943450928
    3. 'new' → logprob: -11.283672332763672
    4. '(points' → logprob: -12.283672332763672
    5. 'p' → logprob: -13.658672332763672
    6. 'items' → logprob: -13.783672332763672
    7. '	points' → logprob: -13.908672332763672
    8. '_points' → logprob: -13.908672332763672
    9. '```' → logprob: -14.283672332763672
    10. '.points' → logprob: -14.408672332763672

Token 537: '.items' (ID: 19607)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35414251685142517
    2. 'in' → logprob: -1.2291425466537476
    3. ':' → logprob: -5.854142665863037
    4. '+=' → logprob: -6.104142665863037
    5. ' +=' → logprob: -8.979142189025879
    6. ',' → logprob: -9.354142189025879
    7. ':
' → logprob: -9.604142189025879
    8. '	in' → logprob: -9.604142189025879
    9. '```' → logprob: -9.854142189025879
    10. '.' → logprob: -10.354142189025879

Token 538: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.29593491554260254
    2. '():' → logprob: -1.5459349155426025
    3. '()' → logprob: -3.1709349155426025
    4. '():
' → logprob: -7.920934677124023
    5. ' in' → logprob: -8.045934677124023
    6. '()):
' → logprob: -9.295934677124023
    7. '():

' → logprob: -9.545934677124023
    8. 'in' → logprob: -9.670934677124023
    9. '(),' → logprob: -9.795934677124023
    10. ':' → logprob: -11.170934677124023

Token 539: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022410491481423378
    2. '           ' → logprob: -4.0224103927612305
    3. ' total' → logprob: -5.5224103927612305
    4. 'total' → logprob: -10.02241039276123
    5. '<|end|>' → logprob: -10.02241039276123
    6. '	           ' → logprob: -10.64741039276123
    7. '   ' → logprob: -10.77241039276123
    8. '       ' → logprob: -11.02241039276123
    9. '(total' → logprob: -11.02241039276123
    10. '              ' → logprob: -11.02241039276123

Token 540: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35716482996940613
    2. ' total' → logprob: -1.6071648597717285
    3. ' if' → logprob: -2.7321648597717285
    4. 'total' → logprob: -3.4821648597717285
    5. 'if' → logprob: -5.9821648597717285
    6. '                   ' → logprob: -6.8571648597717285
    7. '   ' → logprob: -8.10716438293457
    8. '           ' → logprob: -9.10716438293457
    9. '       ' → logprob: -10.48216438293457
    10. '(total' → logprob: -11.48216438293457

Token 541: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05503855645656586
    2. 'total' → logprob: -3.6800384521484375
    3. '               ' → logprob: -4.0550384521484375
    4. ' if' → logprob: -4.5550384521484375
    5. ' total' → logprob: -8.430038452148438
    6. '           ' → logprob: -9.305038452148438
    7. '   ' → logprob: -9.680038452148438
    8. 'x' → logprob: -9.680038452148438
    9. '                   ' → logprob: -10.930038452148438
    10. '#' → logprob: -11.055038452148438

Token 542: ' inside' (ID: 6772)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029842812567949295
    2. ' ' → logprob: -3.5298428535461426
    3. 'x' → logprob: -10.279842376708984
    4. '   ' → logprob: -11.029842376708984
    5. '               ' → logprob: -11.154842376708984
    6. '                   ' → logprob: -11.529842376708984
    7. ' x' → logprob: -11.904842376708984
    8. '           ' → logprob: -13.154842376708984
    9. '(' → logprob: -13.404842376708984
    10. '                ' → logprob: -13.654842376708984

Token 543: ' original' (ID: 4756)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7288244962692261
    2. ' ' → logprob: -0.7288244962692261
    3. ' (' → logprob: -3.8538246154785156
    4. '(' → logprob: -5.103824615478516
    5. '               ' → logprob: -5.728824615478516
    6. ' x' → logprob: -5.728824615478516
    7. 'x' → logprob: -7.228824615478516
    8. '                   ' → logprob: -8.978824615478516
    9. '   ' → logprob: -9.228824615478516
    10. '                ' → logprob: -9.478824615478516

Token 544: ' paper' (ID: 6651)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5240836143493652
    2. ' ' → logprob: -1.8990836143493652
    3. ' (' → logprob: -2.8990836143493652
    4. '(' → logprob: -3.2740836143493652
    5. 'width' → logprob: -3.3990836143493652
    6. ' if' → logprob: -3.5240836143493652
    7. '               ' → logprob: -3.5240836143493652
    8. ' n' → logprob: -3.7740836143493652
    9. ' width' → logprob: -3.7740836143493652
    10. 'if' → logprob: -4.399083614349365

Token 545: ' dimensions' (ID: 23995)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.204147070646286
    2. '               ' → logprob: -1.8291471004486084
    3. '0' → logprob: -4.454146862030029
    4. 'if' → logprob: -5.704146862030029
    5. ' (' → logprob: -5.704146862030029
    6. ' and' → logprob: -6.454146862030029
    7. '                   ' → logprob: -6.829146862030029
    8. ' ' → logprob: -7.329146862030029
    9. ' x' → logprob: -7.704146862030029
    10. '(n' → logprob: -7.704146862030029

Token 546: ' add' (ID: 1147)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14443503320217133
    2. '               ' → logprob: -2.394434928894043
    3. ' (' → logprob: -4.269434928894043
    4. 'if' → logprob: -4.269434928894043
    5. ' x' → logprob: -5.269434928894043
    6. '0' → logprob: -5.769434928894043
    7. '                   ' → logprob: -6.144434928894043
    8. ' ' → logprob: -6.769434928894043
    9. '```' → logprob: -7.019434928894043
    10. '                ' → logprob: -7.394434928894043

Token 547: ' count' (ID: 3605)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5582063794136047
    2. ' total' → logprob: -1.18320631980896
    3. ' if' → logprob: -3.43320631980896
    4. 'if' → logprob: -3.55820631980896
    5. 'width' → logprob: -4.558206558227539
    6. 'cnt' → logprob: -4.558206558227539
    7. ' cnt' → logprob: -4.558206558227539
    8. '               ' → logprob: -4.683206558227539
    9. '                   ' → logprob: -5.558206558227539
    10. ' width' → logprob: -5.933206558227539

Token 548: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030021851416677237
    2. ' (' → logprob: -6.753002166748047
    3. ' if' → logprob: -7.253002166748047
    4. '(' → logprob: -8.128002166748047
    5. '                   ' → logprob: -8.628002166748047
    6. '           ' → logprob: -8.628002166748047
    7. '                ' → logprob: -8.878002166748047
    8. '```' → logprob: -9.378002166748047
    9. '              ' → logprob: -9.628002166748047
    10. '<|end|>' → logprob: -10.378002166748047

Token 549: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007059985073283315
    2. '                   ' → logprob: -8.37570571899414
    3. '                ' → logprob: -8.62570571899414
    4. '```' → logprob: -9.00070571899414
    5. '              ' → logprob: -10.00070571899414
    6. '           ' → logprob: -10.37570571899414
    7. ' if' → logprob: -10.50070571899414
    8. ' (' → logprob: -10.75070571899414
    9. '<|end|>' → logprob: -11.62570571899414
    10. '(' → logprob: -11.87570571899414

Token 550: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10770110040903091
    2. '               ' → logprob: -2.357701063156128
    3. 'if' (adapté à ' if') → logprob: -5.357701301574707
    4. '                ' → logprob: -5.982701301574707
    5. '            ' → logprob: -9.357701301574707
    6. '           ' → logprob: -9.857701301574707
    7. ' ' → logprob: -10.357701301574707
    8. '0' → logprob: -10.482701301574707
    9. '                   ' → logprob: -11.732701301574707
    10. '    ' → logprob: -12.107701301574707

Token 551: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1004832461476326
    2. ' ' → logprob: -2.3504831790924072
    3. 'x' → logprob: -8.850482940673828
    4. ' x' → logprob: -8.975482940673828
    5. '                   ' → logprob: -13.100482940673828
    6. '               ' → logprob: -13.350482940673828
    7. '   ' → logprob: -14.225482940673828
    8. ' (' → logprob: -14.350482940673828
    9. '(' → logprob: -14.475482940673828
    10. '                ' → logprob: -14.600482940673828

Token 552: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037228144356049597
    2. ' ' → logprob: -8.000371932983398
    3. 'x' → logprob: -10.250371932983398
    4. '(' → logprob: -14.250371932983398
    5. ' x' → logprob: -14.375371932983398
    6. '   ' → logprob: -16.1253719329834
    7. '`' → logprob: -16.8753719329834
    8. '(x' → logprob: -17.7503719329834
    9. '               ' → logprob: -17.8753719329834
    10. ' (' → logprob: -17.8753719329834

Token 553: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5763886570930481
    2. '<=' → logprob: -0.8263886570930481
    3. '<' → logprob: -8.201388359069824
    4. ' <' → logprob: -8.701388359069824
    5. '```' → logprob: -13.076388359069824
    6. 'x' → logprob: -14.076388359069824
    7. ')<=' → logprob: -14.076388359069824
    8. '   ' → logprob: -14.201388359069824
    9. 'and' → logprob: -14.326388359069824
    10. '<x' → logprob: -14.451388359069824

Token 554: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.306760805164231e-05
    2. ' x' → logprob: -11.25001335144043
    3. '                   ' → logprob: -19.00001335144043
    4. '	x' → logprob: -19.12501335144043
    5. '               ' → logprob: -19.75001335144043
    6. ')x' → logprob: -19.87501335144043
    7. '<|end|>' → logprob: -19.87501335144043
    8. '   ' → logprob: -20.00001335144043
    9. '           ' → logprob: -20.62501335144043
    10. ' ' → logprob: -20.62501335144043

Token 555: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.13137294352054596
    2. ' <' → logprob: -2.1313729286193848
    3. ' and' → logprob: -6.131372928619385
    4. 'and' → logprob: -6.631372928619385
    5. '<n' → logprob: -7.256372928619385
    6. '<x' → logprob: -8.506373405456543
    7. '<size' → logprob: -11.631373405456543
    8. '<len' → logprob: -11.756373405456543
    9. '<int' → logprob: -12.756373405456543
    10. '<m' → logprob: -13.131373405456543

Token 556: ' n' (ID: 297)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.05510591343045235
    2. 'n' → logprob: -2.9301059246063232
    3. ' width' → logprob: -8.430106163024902
    4. ' n' → logprob: -12.930106163024902
    5. 'height' → logprob: -13.680106163024902
    6. '   ' → logprob: -14.805106163024902
    7. 'w' → logprob: -14.930106163024902
    8. '	width' → logprob: -15.305106163024902
    9. '    ' → logprob: -15.555106163024902
    10. '	n' → logprob: -16.680105209350586

Token 557: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011048054322600365
    2. 'and' → logprob: -4.511047840118408
    3. '           ' → logprob: -15.261048316955566
    4. ' ' → logprob: -16.76104736328125
    5. '               ' → logprob: -16.88604736328125
    6. '       ' → logprob: -17.13604736328125
    7. '   ' → logprob: -18.38604736328125
    8. '	and' → logprob: -18.51104736328125
    9. '```' → logprob: -19.51104736328125
    10. '        ' → logprob: -19.51104736328125

Token 558: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757150895893574
    2. ' ' → logprob: -4.634757041931152
    3. ' y' → logprob: -14.509757041931152
    4. 'y' → logprob: -15.009757041931152
    5. '   ' → logprob: -15.384757041931152
    6. '  ' → logprob: -16.63475799560547
    7. '    ' → logprob: -17.50975799560547
    8. ' ' → logprob: -17.50975799560547
    9. 'm' → logprob: -18.25975799560547
    10. ' m' → logprob: -18.50975799560547

Token 559: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010010226629674435
    2. 'y' → logprob: -4.635010242462158
    3. ' ' → logprob: -8.885009765625
    4. ' y' → logprob: -9.135009765625
    5. 'm' → logprob: -11.885009765625
    6. '   ' → logprob: -14.385009765625
    7. '  ' → logprob: -16.010009765625
    8. '
' → logprob: -16.385009765625
    9. '    ' → logprob: -16.510009765625
    10. ' m' → logprob: -17.135009765625

Token 560: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3188774287700653
    2. '<' → logprob: -1.3188774585723877
    3. '<m' → logprob: -5.318877220153809
    4. 'm' → logprob: -7.693877220153809
    5. ' m' → logprob: -8.568877220153809
    6. '<n' → logprob: -10.818877220153809
    7. '<p' → logprob: -11.443877220153809
    8. 'y' → logprob: -11.943877220153809
    9. '   ' → logprob: -12.443877220153809
    10. ' ' → logprob: -12.693877220153809

Token 561: ' y' (ID: 342)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.166338137816638e-05
    2. ' m' → logprob: -10.500031471252441
    3. '   ' → logprob: -13.125031471252441
    4. 'y' → logprob: -13.500031471252441
    5. '    ' → logprob: -15.000031471252441
    6. '  ' → logprob: -16.000032424926758
    7. 'x' → logprob: -16.750032424926758
    8. '       ' → logprob: -16.750032424926758
    9. ' ' → logprob: -17.250032424926758
    10. '     ' → logprob: -17.500032424926758

Token 562: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.36650800704956055
    2. ' <' → logprob: -1.2415080070495605
    3. '<m' → logprob: -4.1165080070495605
    4. '<n' → logprob: -6.4915080070495605
    5. '<p' → logprob: -9.866508483886719
    6. '<t' → logprob: -12.366508483886719
    7. '<int' → logprob: -12.491508483886719
    8. 'n' → logprob: -12.741508483886719
    9. '<size' → logprob: -12.866508483886719
    10. 'm' → logprob: -12.991508483886719

Token 563: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.32523515378125e-05
    2. ' m' → logprob: -9.750062942504883
    3. '   ' → logprob: -12.375062942504883
    4. '    ' → logprob: -15.500062942504883
    5. '  ' → logprob: -16.000062942504883
    6. 'n' → logprob: -16.375062942504883
    7. '```' → logprob: -16.500062942504883
    8. ' ' → logprob: -17.000062942504883
    9. '       ' → logprob: -17.000062942504883
    10. '	m' → logprob: -17.375062942504883

Token 564: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37179744243621826
    2. ':' → logprob: -1.4967974424362183
    3. '                   ' → logprob: -2.496797561645508
    4. '               ' → logprob: -5.621797561645508
    5. '                       ' → logprob: -8.371797561645508
    6. ' and' → logprob: -8.496797561645508
    7. '           ' → logprob: -9.121797561645508
    8. '):
' → logprob: -9.871797561645508
    9. 'and' → logprob: -10.996797561645508
    10. ',' → logprob: -11.121797561645508

Token 565: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002644351334311068
    2. '               ' → logprob: -9.000264167785645
    3. ' total' → logprob: -9.750264167785645
    4. '                       ' → logprob: -10.125264167785645
    5. 'total' → logprob: -10.875264167785645
    6. '   ' → logprob: -11.750264167785645
    7. '                  ' → logprob: -12.250264167785645
    8. '           ' → logprob: -12.500264167785645
    9. '       ' → logprob: -13.250264167785645
    10. '```' → logprob: -13.750264167785645

Token 566: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.1482408344745636
    2. ' total' → logprob: -2.148240804672241
    3. '                   ' → logprob: -3.898240804672241
    4. '                       ' → logprob: -7.77324104309082
    5. '               ' → logprob: -8.02324104309082
    6. '   ' → logprob: -10.52324104309082
    7. '       ' → logprob: -11.14824104309082
    8. '           ' → logprob: -11.77324104309082
    9. '_total' → logprob: -13.02324104309082
    10. '	total' → logprob: -13.02324104309082

Token 567: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47424596548080444
    2. ' +=' → logprob: -0.9742459654808044
    3. '                   ' → logprob: -9.72424602508545
    4. '               ' → logprob: -10.47424602508545
    5. '           ' → logprob: -10.59924602508545
    6. ']+=' → logprob: -11.22424602508545
    7. '```' → logprob: -11.72424602508545
    8. '                ' → logprob: -11.97424602508545
    9. '=' → logprob: -12.09924602508545
    10. '                    ' → logprob: -12.34924602508545

Token 568: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0031781906727701426
    2. ' cnt' → logprob: -5.753178119659424
    3. '(cnt' → logprob: -15.128178596496582
    4. '	cnt' → logprob: -16.253177642822266
    5. 'count' → logprob: -17.128177642822266
    6. '[cnt' → logprob: -17.878177642822266
    7. '                   ' → logprob: -18.378177642822266
    8. '               ' → logprob: -18.628177642822266
    9. '_cnt' → logprob: -19.628177642822266
    10. 'Cnt' → logprob: -20.003177642822266

Token 569: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05507782846689224
    2. '
' → logprob: -2.9300777912139893
    3. 'print' → logprob: -9.55507755279541
    4. '       ' → logprob: -10.43007755279541
    5. '            
' → logprob: -10.68007755279541
    6. '    
' → logprob: -10.93007755279541
    7. '```' → logprob: -11.68007755279541
    8. '<|end|>' → logprob: -12.18007755279541
    9. '
' → logprob: -12.30507755279541
    10. '        
' → logprob: -12.43007755279541

Token 570: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4891248941421509
    2. '       ' → logprob: -0.9891248941421509
    3. 'print' → logprob: -4.614124774932861
    4. '
' → logprob: -5.489124774932861
    5. '   ' → logprob: -7.364124774932861
    6. ' print' → logprob: -8.61412525177002
    7. '        
' → logprob: -10.73912525177002
    8. '```' → logprob: -10.73912525177002
    9. '    
' → logprob: -11.48912525177002
    10. '            
' → logprob: -12.23912525177002

Token 571: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.39612191915512085
    2. '       ' → logprob: -1.1461219787597656
    3. '           ' → logprob: -4.771121978759766
    4. ' print' → logprob: -7.396121978759766
    5. '
' → logprob: -9.771121978759766
    6. '   ' → logprob: -10.271121978759766
    7. '```' → logprob: -10.396121978759766
    8. '        
' → logprob: -14.646121978759766
    9. '	print' → logprob: -14.771121978759766
    10. '            
' → logprob: -15.771121978759766

Token 572: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0027740863151848316
    2. '(' → logprob: -6.002774238586426
    3. 'total' → logprob: -8.252774238586426
    4. '('' → logprob: -10.752774238586426
    5. '()' → logprob: -12.002774238586426
    6. ' total' → logprob: -12.877774238586426
    7. '(p' → logprob: -13.127774238586426
    8. ' (' → logprob: -13.252774238586426
    9. '(f' → logprob: -13.252774238586426
    10. '("' → logprob: -13.877774238586426

Token 573: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ' )' → logprob: -13.250006675720215
    3. ')
' → logprob: -13.625006675720215
    4. '       ' → logprob: -13.750006675720215
    5. '())' → logprob: -13.750006675720215
    6. '()' → logprob: -15.125006675720215
    7. ')`' → logprob: -15.500006675720215
    8. '           ' → logprob: -15.625006675720215
    9. '`)' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.2500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 571
Tokens correctement prédits (1ère position, stricte): 222
Tokens correctement prédits (1ère position, avec adaptation): 243
Tokens correctement prédits (top 10): 470
Précision stricte (1ère position): 38.88%
Précision adaptée (1ère position): 42.56%
Précision (top 10): 82.31%
================================================================================
