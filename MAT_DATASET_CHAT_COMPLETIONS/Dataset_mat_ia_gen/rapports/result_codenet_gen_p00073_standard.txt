================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
while True:
    x = int(input())
    h = int(input())
    if x == 0 and h == 0:
        break
    l = math.sqrt(h**2 + (x/2)**2)
    S = x**2 + 2 * x * l
    print(f"{S:.6f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'while' (ID: 7032)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005792465526610613
    2. '```' → logprob: -8.750578880310059
    3. '\n' → logprob: -9.000578880310059
    4. '<|end|>' → logprob: -9.625578880310059
    5. '\' → logprob: -9.750578880310059
    6. 'import' → logprob: -10.250578880310059
    7. '.pi' → logprob: -10.625578880310059
    8. '.e' → logprob: -10.875578880310059
    9. 'def' → logprob: -11.375578880310059
    10. '.

' → logprob: -11.625578880310059

Token 4: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0044030556455254555
    2. ' (' → logprob: -6.754403114318848
    3. '  ' → logprob: -7.129403114318848
    4. '```' → logprob: -7.129403114318848
    5. '(' → logprob: -7.629403114318848
    6. ''' → logprob: -7.629403114318848
    7. '"' → logprob: -8.504403114318848
    8. '`' → logprob: -9.004403114318848
    9. '_' → logprob: -9.754403114318848
    10. ' ' → logprob: -9.879403114318848

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012166214582975954
    2. '():' → logprob: -9.7501220703125
    3. ' :' → logprob: -10.5001220703125
    4. ':
' → logprob: -11.2501220703125
    5. ':**' → logprob: -12.1251220703125
    6. '(:' → logprob: -12.5001220703125
    7. '):' → logprob: -12.8751220703125
    8. '```' → logprob: -13.3751220703125
    9. '':'' → logprob: -13.5001220703125
    10. '':' → logprob: -13.5001220703125

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11020268499851227
    2. '```' → logprob: -2.7352027893066406
    3. '    
' → logprob: -4.235202789306641
    4. '    ' → logprob: -4.860202789306641
    5. ' ' → logprob: -5.110202789306641
    6. '    
    
' → logprob: -6.110202789306641
    7. ' 
' → logprob: -6.235202789306641
    8. '<|end|>' → logprob: -6.735202789306641
    9. '  
' → logprob: -6.860202789306641
    10. '`' → logprob: -7.235202789306641

Token 7: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035034600645303726
    2. '```' → logprob: -4.035034656524658
    3. 'user' → logprob: -5.160034656524658
    4. ' user' → logprob: -6.160034656524658
    5. '    
' → logprob: -6.160034656524658
    6. 'input' → logprob: -6.535034656524658
    7. 'x' (adapté à ' x') → logprob: -7.160034656524658
    8. 'pass' → logprob: -7.285034656524658
    9. 'n' → logprob: -7.285034656524658
    10. 'inp' → logprob: -7.410034656524658

Token 8: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0443228483200073
    2. ' ' → logprob: -1.1693228483200073
    3. '=' → logprob: -2.169322967529297
    4. '.' → logprob: -2.294322967529297
    5. ' =' → logprob: -2.419322967529297
    6. '[' → logprob: -4.669322967529297
    7. ')' → logprob: -5.044322967529297
    8. ' +=' → logprob: -5.794322967529297
    9. '  ' → logprob: -5.919322967529297
    10. '   ' → logprob: -6.169322967529297

Token 9: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.9588640332221985
    2. ' float' → logprob: -1.2088639736175537
    3. ' input' → logprob: -1.5838639736175537
    4. ' math' → logprob: -2.7088639736175537
    5. 'int' → logprob: -3.8338639736175537
    6. 'input' → logprob: -4.208864212036133
    7. 'float' → logprob: -4.833864212036133
    8. 'math' → logprob: -6.583864212036133
    9. ' ' → logprob: -8.583864212036133
    10. ' eval' → logprob: -9.708864212036133

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10028570890426636
    2. '(input' → logprob: -2.350285768508911
    3. '(x' → logprob: -10.100285530090332
    4. ' (' → logprob: -11.475285530090332
    5. 'input' → logprob: -11.850285530090332
    6. '(math' → logprob: -11.850285530090332
    7. '()' → logprob: -12.100285530090332
    8. '(
' → logprob: -12.600285530090332
    9. '('' → logprob: -13.975285530090332
    10. '(user' → logprob: -14.975285530090332

Token 11: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3231664001941681
    2. '()' → logprob: -1.3231663703918457
    3. '())' → logprob: -5.323166370391846
    4. '('' → logprob: -5.823166370391846
    5. ')' → logprob: -7.073166370391846
    6. '("("' → logprob: -7.948166370391846
    7. '(""))' → logprob: -8.698166847229004
    8. '()))' → logprob: -8.823166847229004
    9. '(
' → logprob: -8.948166847229004
    10. '(()' → logprob: -9.448166847229004

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7338181138038635
    2. ' ' → logprob: -1.2338180541992188
    3. ')' → logprob: -2.3588180541992188
    4. '<|end|>' → logprob: -2.8588180541992188
    5. '    ' → logprob: -3.7338180541992188
    6. '+' → logprob: -4.108818054199219
    7. ' if' → logprob: -4.108818054199219
    8. '  ' → logprob: -4.983818054199219
    9. '%' → logprob: -6.233818054199219
    10. '    
' → logprob: -6.608818054199219

Token 13: ' h' (ID: 312)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7677221894264221
    2. '   ' → logprob: -1.6427221298217773
    3. ' ' → logprob: -2.0177221298217773
    4. '+' → logprob: -2.5177221298217773
    5. '```' → logprob: -3.3927221298217773
    6. '+
' → logprob: -4.017722129821777
    7. ')' → logprob: -4.142722129821777
    8. '    ' → logprob: -4.267722129821777
    9. ' +' → logprob: -4.517722129821777
    10. 'if' → logprob: -5.267722129821777

Token 14: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07215410470962524
    2. ' ' → logprob: -3.9471540451049805
    3. ' =' → logprob: -4.6971540451049805
    4. 'elp' → logprob: -5.0721540451049805
    5. ' **' → logprob: -5.4471540451049805
    6. '**' → logprob: -5.4471540451049805
    7. '   ' → logprob: -5.5721540451049805
    8. '=' → logprob: -5.6971540451049805
    9. 'igh' → logprob: -6.0721540451049805
    10. '>' → logprob: -6.1971540451049805

Token 15: ' int' (ID: 677)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5161120295524597
    2. ' x' → logprob: -1.1411120891571045
    3. 'math' → logprob: -3.2661120891571045
    4. 'x' → logprob: -4.141111850738525
    5. ' ' → logprob: -4.516111850738525
    6. ' int' → logprob: -4.766111850738525
    7. ' (' → logprob: -5.516111850738525
    8. ' abs' → logprob: -6.141111850738525
    9. '   ' → logprob: -7.266111850738525
    10. ' max' → logprob: -7.516111850738525

Token 16: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1302260011434555
    2. '(input' → logprob: -2.880225896835327
    3. '(math' → logprob: -2.880225896835327
    4. '(x' → logprob: -5.130226135253906
    5. ' (' → logprob: -6.380226135253906
    6. ')' → logprob: -6.880226135253906
    7. '()' → logprob: -7.255226135253906
    8. ' ' → logprob: -8.755226135253906
    9. ' )' → logprob: -9.380226135253906
    10. '())' → logprob: -9.880226135253906

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.46590930223464966
    2. ')' → logprob: -1.2159092426300049
    3. '()' → logprob: -2.590909242630005
    4. '))' → logprob: -7.715909481048584
    5. '()))' → logprob: -8.590909004211426
    6. '(' → logprob: -8.715909004211426
    7. ' ())' → logprob: -9.465909004211426
    8. '`)' → logprob: -10.090909004211426
    9. '   ' → logprob: -10.215909004211426
    10. '')' → logprob: -10.840909004211426

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09606490284204483
    2. ' ' → logprob: -3.471064805984497
    3. '<|end|>' → logprob: -4.096065044403076
    4. '    ' → logprob: -4.221065044403076
    5. ')' → logprob: -4.221065044403076
    6. '    
' → logprob: -5.846065044403076
    7. '  ' → logprob: -6.221065044403076
    8. '\n' → logprob: -6.346065044403076
    9. ' 
' → logprob: -6.346065044403076
    10. ' if' → logprob: -6.846065044403076

Token 19: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3712449371814728
    2. ' if' → logprob: -1.3712449073791504
    3. 'if' (adapté à ' if') → logprob: -3.1212449073791504
    4. '    ' → logprob: -5.62124490737915
    5. ' ' → logprob: -5.87124490737915
    6. ')' → logprob: -6.49624490737915
    7. '  ' → logprob: -7.62124490737915
    8. 'n' → logprob: -7.87124490737915
    9. 's' → logprob: -7.99624490737915
    10. '```' → logprob: -8.121245384216309

Token 20: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.003892946057021618
    2. 'x' → logprob: -6.25389289855957
    3. ' h' → logprob: -6.62889289855957
    4. ' ' → logprob: -7.62889289855957
    5. ' not' → logprob: -9.50389289855957
    6. ' ' → logprob: -10.00389289855957
    7. ' (' → logprob: -11.12889289855957
    8. ' abs' → logprob: -11.75389289855957
    9. ' math' → logprob: -12.62889289855957
    10. 'h' → logprob: -12.87889289855957

Token 21: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8517739772796631
    2. ' <' → logprob: -1.726773977279663
    3. ' ==' → logprob: -1.976773977279663
    4. '>' → logprob: -2.601773977279663
    5. ' <=' → logprob: -2.851773977279663
    6. '==' → logprob: -3.101773977279663
    7. ' >=' → logprob: -3.226773977279663
    8. '<' → logprob: -3.851773977279663
    9. '<=' → logprob: -5.476774215698242
    10. '>=' → logprob: -5.476774215698242

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47963982820510864
    2. ' ' → logprob: -0.9796398282051086
    3. ' -' → logprob: -6.479640007019043
    4. '-' → logprob: -6.604640007019043
    5. 'h' → logprob: -6.729640007019043
    6. ' h' → logprob: -6.729640007019043
    7. ' y' → logprob: -9.729640007019043
    8. 'y' → logprob: -9.854640007019043
    9. '1' → logprob: -10.104640007019043
    10. '   ' → logprob: -10.729640007019043

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014223448000848293
    2. ' ' → logprob: -4.389223575592041
    3. '-' → logprob: -6.889223575592041
    4. 'h' → logprob: -7.514223575592041
    5. '1' → logprob: -10.139223098754883
    6. ' -' → logprob: -10.139223098754883
    7. ' h' → logprob: -10.639223098754883
    8. 'y' → logprob: -11.264223098754883
    9. '  ' → logprob: -12.639223098754883
    10. '5' → logprob: -12.826723098754883

Token 24: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1630384624004364
    2. ':' → logprob: -2.038038492202759
    3. 'and' → logprob: -4.16303825378418
    4. ' or' → logprob: -5.53803825378418
    5. ' ' → logprob: -8.03803825378418
    6. ' :' → logprob: -8.66303825378418
    7. '   ' → logprob: -9.03803825378418
    8. ':
' → logprob: -11.41303825378418
    9. '  ' → logprob: -11.53803825378418
    10. '    ' → logprob: -11.78803825378418

Token 25: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.47409164905548096
    2. 'h' → logprob: -0.974091649055481
    3. ' y' → logprob: -11.974091529846191
    4. 'y' → logprob: -11.974091529846191
    5. '	h' → logprob: -13.849091529846191
    6. ' ' → logprob: -14.349091529846191
    7. ' ' → logprob: -15.599091529846191
    8. 'x' → logprob: -15.849091529846191
    9. '   ' → logprob: -17.099092483520508
    10. ' x' → logprob: -17.224092483520508

Token 26: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006802287418395281
    2. '==' → logprob: -5.006802082061768
    3. ' ' → logprob: -9.881802558898926
    4. '<|end|>' → logprob: -11.131802558898926
    5. ' =' → logprob: -11.881802558898926
    6. ' ' → logprob: -12.256802558898926
    7. '=' → logprob: -12.256802558898926
    8. '<|end|>' → logprob: -13.631802558898926
    9. '  ' → logprob: -14.381802558898926
    10. '0' → logprob: -14.506802558898926

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141421258449554
    2. ' ' → logprob: -1.7014142274856567
    3. '  ' → logprob: -15.076414108276367
    4. '   ' → logprob: -15.326414108276367
    5. '<|end|>' → logprob: -16.201414108276367
    6. ' ' → logprob: -16.701414108276367
    7. '<|end|>' → logprob: -16.951414108276367
    8. '۰' → logprob: -17.076414108276367
    9. '    ' → logprob: -18.013914108276367
    10. ' ' → logprob: -18.638914108276367

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009756443090736866
    2. ' ' → logprob: -4.634756565093994
    3. '  ' → logprob: -15.384756088256836
    4. '   ' → logprob: -16.259756088256836
    5. '1' → logprob: -17.322256088256836
    6. '۰' → logprob: -17.884756088256836
    7. ' ' → logprob: -18.009756088256836
    8. '```' → logprob: -18.134756088256836
    9. '<|end|>' → logprob: -18.572256088256836
    10. '    ' → logprob: -18.822256088256836

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.97155623533763e-05
    2. ':
' → logprob: -9.500089645385742
    3. '   ' → logprob: -11.500089645385742
    4. '       ' → logprob: -13.500089645385742
    5. ' :' → logprob: -13.500089645385742
    6. ':return' → logprob: -14.000089645385742
    7. '):' → logprob: -14.125089645385742
    8. '.' → logprob: -16.500089645385742
    9. ',' → logprob: -16.750089645385742
    10. ':**' → logprob: -16.875089645385742

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007860712707042694
    2. ':' → logprob: -4.8828606605529785
    3. '   ' → logprob: -8.507861137390137
    4. ':
' → logprob: -11.007861137390137
    5. '	break' → logprob: -12.257861137390137
    6. '	' → logprob: -12.382861137390137
    7. '    ' → logprob: -12.507861137390137
    8. '     ' → logprob: -12.507861137390137
    9. ' break' → logprob: -12.632861137390137
    10. '\n' → logprob: -12.632861137390137

Token 31: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2546791136264801
    2. '       ' → logprob: -1.5046790838241577
    3. 'break' (adapté à ' break') → logprob: -6.254679203033447
    4. '   ' → logprob: -7.254679203033447
    5. '	break' → logprob: -9.254678726196289
    6. '           ' → logprob: -11.754678726196289
    7. '    ' → logprob: -12.754678726196289
    8. '_break' → logprob: -13.004678726196289
    9. '\n' → logprob: -13.129678726196289
    10. ' ' → logprob: -13.879678726196289

Token 32: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10465383529663086
    2. ':' → logprob: -2.479653835296631
    3. '    
' → logprob: -5.229653835296631
    4. ',' → logprob: -5.979653835296631
    5. '<|end|>' → logprob: -6.354653835296631
    6. '  
' → logprob: -6.979653835296631
    7. '\n' → logprob: -6.979653835296631
    8. ':
' → logprob: -7.104653835296631
    9. '```' → logprob: -7.104653835296631
    10. ')' → logprob: -7.354653835296631

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00859258882701397
    2. '<|end|>' → logprob: -5.88359260559082
    3. '    
' → logprob: -6.25859260559082
    4. '```' → logprob: -6.88359260559082
    5. ':' → logprob: -7.25859260559082
    6. ',' → logprob: -7.38359260559082
    7. ')' → logprob: -8.38359260559082
    8. '  
' → logprob: -8.88359260559082
    9. '  ' → logprob: -9.00859260559082
    10. '
' → logprob: -9.00859260559082

Token 34: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07552708685398102
    2. ' area' → logprob: -3.8255271911621094
    3. ' if' → logprob: -4.700527191162109
    4. '```' → logprob: -4.825527191162109
    5. 'area' → logprob: -4.950527191162109
    6. ' s' → logprob: -5.950527191162109
    7. '    ' → logprob: -6.075527191162109
    8. '    
' → logprob: -6.075527191162109
    9. 's' → logprob: -6.325527191162109
    10. 'print' → logprob: -6.325527191162109

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2664395570755005
    2. '=' → logprob: -1.6414395570755005
    3. 'ength' → logprob: -3.516439437866211
    4. 'en' → logprob: -5.766439437866211
    5. 'ine' → logprob: -6.016439437866211
    6. 'e' → logprob: -6.641439437866211
    7. '_' → logprob: -7.141439437866211
    8. ' ' → logprob: -7.516439437866211
    9. 'eng' → logprob: -7.516439437866211
    10. '   ' → logprob: -9.016439437866211

Token 36: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.30580487847328186
    2. 'math' → logprob: -1.5558048486709595
    3. '(math' → logprob: -3.305804967880249
    4. ' (' → logprob: -4.68080472946167
    5. '(h' → logprob: -5.93080472946167
    6. '(' → logprob: -6.93080472946167
    7. ' h' → logprob: -7.30580472946167
    8. 'h' → logprob: -7.55580472946167
    9. ' ' → logprob: -8.180805206298828
    10. 'm' → logprob: -8.555805206298828

Token 37: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0044288127683103085
    2. '.h' → logprob: -5.504428863525391
    3. '.' → logprob: -8.62942886352539
    4. '.ceil' → logprob: -9.12942886352539
    5. '.pow' → logprob: -10.00442886352539
    6. '.atan' → logprob: -11.75442886352539
    7. '.c' → logprob: -13.12942886352539
    8. '.s' → logprob: -13.75442886352539
    9. '.Sqrt' → logprob: -13.75442886352539
    10. '```' → logprob: -14.00442886352539

Token 38: '(h' (ID: 8120)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.22862395644187927
    2. '((' → logprob: -1.7286239862442017
    3. '(' → logprob: -4.103623867034912
    4. '(h' → logprob: -4.603623867034912
    5. '(l' → logprob: -8.85362434387207
    6. 'x' → logprob: -9.10362434387207
    7. '(pow' → logprob: -10.35362434387207
    8. 'h' → logprob: -11.35362434387207
    9. '(abs' → logprob: -12.47862434387207
    10. ' (' → logprob: -12.85362434387207

Token 39: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.012572872452437878
    2. '*' → logprob: -4.637572765350342
    3. ' **' → logprob: -6.262572765350342
    4. '2' → logprob: -7.262572765350342
    5. ' *' → logprob: -8.7625732421875
    6. '*l' → logprob: -11.2625732421875
    7. '²' → logprob: -11.7625732421875
    8. ' ' → logprob: -11.8875732421875
    9. '*x' → logprob: -12.5125732421875
    10. '*h' → logprob: -12.8875732421875

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005248579662293196
    2. ' ' → logprob: -5.255248546600342
    3. '   ' → logprob: -11.8802490234375
    4. '**' → logprob: -13.2552490234375
    5. '```' → logprob: -13.2552490234375
    6. '+' → logprob: -14.5052490234375
    7. ')' → logprob: -14.6302490234375
    8. '  ' → logprob: -14.7552490234375
    9. '²' → logprob: -14.8802490234375
    10. '

' → logprob: -15.1927490234375

Token 41: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760889053344727
    2. '+' → logprob: -0.8260889053344727
    3. '   ' → logprob: -9.951088905334473
    4. '+x' → logprob: -10.451088905334473
    5. ')' → logprob: -11.076088905334473
    6. ' ' → logprob: -11.451088905334473
    7. '+)' → logprob: -11.951088905334473
    8. '    ' → logprob: -12.076088905334473
    9. ' plus' → logprob: -12.576088905334473
    10. ' ' → logprob: -12.576088905334473

Token 42: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.052144426852464676
    2. ' x' → logprob: -3.5521445274353027
    3. '(' → logprob: -4.052144527435303
    4. '4' → logprob: -6.052144527435303
    5. ' (' → logprob: -6.302144527435303
    6. '(x' → logprob: -7.927144527435303
    7. ' ' → logprob: -8.802144050598145
    8. '2' → logprob: -10.802144050598145
    9. '   ' → logprob: -11.052144050598145
    10. 'l' → logprob: -11.927144050598145

Token 43: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011293967254459858
    2. '2' → logprob: -4.636293888092041
    3. '(' → logprob: -7.011293888092041
    4. ' x' → logprob: -8.0112943649292
    5. '(x' → logprob: -9.1362943649292
    6. '4' → logprob: -9.5112943649292
    7. '   ' → logprob: -10.5112943649292
    8. ' ' → logprob: -10.5112943649292
    9. ' (' → logprob: -10.7612943649292
    10. 'l' → logprob: -11.5112943649292

Token 44: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.42561009526252747
    2. ')' → logprob: -2.175610065460205
    3. ')**' → logprob: -2.675610065460205
    4. '*' → logprob: -2.925610065460205
    5. ' /' → logprob: -2.925610065460205
    6. ' *' → logprob: -3.925610065460205
    7. '**' → logprob: -4.175610065460205
    8. ' )' → logprob: -4.300610065460205
    9. '2' → logprob: -6.050610065460205
    10. ' **' → logprob: -6.425610065460205

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018154787831008434
    2. ' ' → logprob: -6.376815319061279
    3. '1' → logprob: -10.751815795898438
    4. '3' → logprob: -11.251815795898438
    5. '100' → logprob: -11.376815795898438
    6. '  ' → logprob: -11.501815795898438
    7. '   ' → logprob: -11.501815795898438
    8. '10' → logprob: -12.001815795898438
    9. '4' → logprob: -12.189315795898438
    10. '0' → logprob: -12.251815795898438

Token 46: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.25231412053108215
    2. ')' → logprob: -1.5023140907287598
    3. ' )' → logprob: -7.87731409072876
    4. '**' → logprob: -13.627314567565918
    5. '**)' → logprob: -13.877314567565918
    6. ' ' → logprob: -14.252314567565918
    7. '))' → logprob: -14.502314567565918
    8. ')))' → logprob: -14.502314567565918
    9. '`)' → logprob: -14.627314567565918
    10. '）' → logprob: -15.002314567565918

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001789881061995402
    2. ' ' → logprob: -8.750179290771484
    3. ')' → logprob: -11.125179290771484
    4. '**' → logprob: -12.375179290771484
    5. ')**' → logprob: -14.250179290771484
    6. '²' → logprob: -15.500179290771484
    7. '*' → logprob: -16.250179290771484
    8. '```' → logprob: -16.500179290771484
    9. '۲' → logprob: -16.625179290771484
    10. ' )' → logprob: -16.937679290771484

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000500370399095118
    2. ')
' → logprob: -7.875500202178955
    3. ' )' → logprob: -9.375500679016113
    4. '   ' → logprob: -10.875500679016113
    5. ')
' → logprob: -12.000500679016113
    6. '))' → logprob: -13.250500679016113
    7. ' ' → logprob: -13.375500679016113
    8. ')*' → logprob: -13.500500679016113
    9. ')**' → logprob: -14.000500679016113
    10. ')

' → logprob: -14.125500679016113

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06377457827329636
    2. 'print' → logprob: -3.438774585723877
    3. ')' → logprob: -4.563774585723877
    4. '<|end|>' → logprob: -5.313774585723877
    5. ' print' → logprob: -5.938774585723877
    6. '    ' → logprob: -6.313774585723877
    7. '    
' → logprob: -6.813774585723877
    8. ' if' → logprob: -6.938774585723877
    9. 's' → logprob: -7.063774585723877
    10. ' ' → logprob: -7.188774585723877

Token 50: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9407358169555664
    2. 'print' → logprob: -2.0657358169555664
    3. ' print' → logprob: -2.6907358169555664
    4. 'r' → logprob: -2.8157358169555664
    5. ')' → logprob: -3.0657358169555664
    6. 't' → logprob: -3.0657358169555664
    7. 'a' → logprob: -3.1907358169555664
    8. 's' → logprob: -3.1907358169555664
    9. '    ' → logprob: -3.3157358169555664
    10. 'c' → logprob: -4.565735816955566

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20625624060630798
    2. '=' → logprob: -1.7062562704086304
    3. 'urface' → logprob: -5.95625638961792
    4. 'A' → logprob: -7.20625638961792
    5. 'u' → logprob: -7.70625638961792
    6. 'a' → logprob: -8.331255912780762
    7. ' ' → logprob: -8.956255912780762
    8. 'ur' → logprob: -9.331255912780762
    9. '=A' → logprob: -9.331255912780762
    10. '_' → logprob: -9.456255912780762

Token 52: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6941491365432739
    2. '(x' → logprob: -1.319149136543274
    3. 'l' → logprob: -2.6941490173339844
    4. '(' → logprob: -2.9441490173339844
    5. '2' → logprob: -3.4441490173339844
    6. '(l' → logprob: -3.5691490173339844
    7. '(math' → logprob: -3.9441490173339844
    8. '(h' → logprob: -4.819149017333984
    9. 'math' → logprob: -4.819149017333984
    10. '((' → logprob: -5.069149017333984

Token 53: '**' (ID: 410)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9288225173950195
    2. '**' → logprob: -1.3038225173950195
    3. '*l' → logprob: -1.5538225173950195
    4. '/' → logprob: -2.4288225173950195
    5. '2' → logprob: -4.5538225173950195
    6. ' *' → logprob: -4.8038225173950195
    7. '+' → logprob: -4.9288225173950195
    8. 'l' → logprob: -6.3038225173950195
    9. '+l' → logprob: -6.4288225173950195
    10. ' +' → logprob: -6.4288225173950195

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.375296592712402
    3. '   ' → logprob: -10.250296592712402
    4. '3' → logprob: -11.625296592712402
    5. '**' → logprob: -12.000296592712402
    6. '22' → logprob: -12.625296592712402
    7. '/' → logprob: -13.500296592712402
    8. '  ' → logprob: -13.562796592712402
    9. '²' → logprob: -14.000296592712402
    10. '1' → logprob: -14.125296592712402

Token 55: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3236311674118042
    2. '+' → logprob: -1.3236311674118042
    3. '<|end|>' → logprob: -5.198631286621094
    4. '*' → logprob: -6.323631286621094
    5. ' -' → logprob: -6.448631286621094
    6. ' ' → logprob: -7.948631286621094
    7. '-' → logprob: -8.198631286621094
    8. ' *' → logprob: -8.198631286621094
    9. '+l' → logprob: -9.323631286621094
    10. '<|end|>' → logprob: -9.573631286621094

Token 56: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.47541576623916626
    2. '2' → logprob: -0.9754157662391663
    3. ' ' → logprob: -6.7254157066345215
    4. '(' → logprob: -8.97541618347168
    5. '   ' → logprob: -12.22541618347168
    6. 'math' → logprob: -13.47541618347168
    7. ' (' → logprob: -13.60041618347168
    8. '(x' → logprob: -13.60041618347168
    9. 'x' → logprob: -13.97541618347168
    10. '	' → logprob: -14.72541618347168

Token 57: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.25212496519088745
    2. '2' → logprob: -1.5021250247955322
    3. ' ' → logprob: -9.002124786376953
    4. '(' → logprob: -9.627124786376953
    5. '   ' → logprob: -12.752124786376953
    6. '(x' → logprob: -13.877124786376953
    7. 'math' → logprob: -13.877124786376953
    8. 'x' → logprob: -14.252124786376953
    9. '```' → logprob: -14.627124786376953
    10. ' (' → logprob: -14.877124786376953

Token 58: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.35925769805908203
    2. '*x' → logprob: -1.234257698059082
    3. '*l' → logprob: -4.859257698059082
    4. ' *' → logprob: -6.734257698059082
    5. '*h' → logprob: -6.859257698059082
    6. '*(' → logprob: -7.359257698059082
    7. '*object' → logprob: -10.359257698059082
    8. '*s' → logprob: -11.109257698059082
    9. '*S' → logprob: -11.609257698059082
    10. '*((' → logprob: -11.734257698059082

Token 59: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030444640666246414
    2. '*x' → logprob: -3.655444622039795
    3. '*' → logprob: -6.405444622039795
    4. ' x' → logprob: -6.655444622039795
    5. ' *' → logprob: -7.780444622039795
    6. '(x' → logprob: -8.155445098876953
    7. 'xl' → logprob: -8.405445098876953
    8. 'xh' → logprob: -8.780445098876953
    9. '*l' → logprob: -10.655445098876953
    10. '*(' → logprob: -11.155445098876953

Token 60: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.522635817527771
    2. '*l' → logprob: -1.397635817527771
    3. '*h' → logprob: -1.897635817527771
    4. ' *' → logprob: -4.6476359367370605
    5. 'l' → logprob: -9.147635459899902
    6. 'h' → logprob: -10.022635459899902
    7. '*x' → logprob: -10.147635459899902
    8. '*s' → logprob: -10.147635459899902
    9. '<|end|>' → logprob: -11.022635459899902
    10. ' ' → logprob: -11.022635459899902

Token 61: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002926234155893326
    2. ' l' → logprob: -5.877926349639893
    3. 'h' → logprob: -10.502925872802734
    4. 'math' → logprob: -10.877925872802734
    5. '<|end|>' → logprob: -10.877925872802734
    6. ' math' → logprob: -11.252925872802734
    7. '*l' → logprob: -11.252925872802734
    8. ' ' → logprob: -11.377925872802734
    9. 's' → logprob: -11.877925872802734
    10. '   ' → logprob: -12.377925872802734

Token 62: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.30643555521965027
    2. '   ' → logprob: -1.4314355850219727
    3. ' print' → logprob: -3.8064355850219727
    4. '<|end|>' → logprob: -6.431435585021973
    5. '
' → logprob: -7.181435585021973
    6. '	print' → logprob: -8.681435585021973
    7. ' ' → logprob: -10.556435585021973
    8. '.print' → logprob: -10.681435585021973
    9. ')' → logprob: -10.681435585021973
    10. '  ' → logprob: -11.056435585021973

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3254889249801636
    2. 'print' → logprob: -1.3254889249801636
    3. ' print' → logprob: -5.075489044189453
    4. '
' → logprob: -5.325489044189453
    5. '    
' → logprob: -7.825489044189453
    6. '<|end|>' → logprob: -7.950489044189453
    7. '```' → logprob: -9.575489044189453
    8. '	print' → logprob: -9.700489044189453
    9. ',' → logprob: -10.700489044189453
    10. '.print' → logprob: -11.325489044189453

Token 64: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3679126799106598
    2. 'print' (adapté à ' print') → logprob: -1.2429126501083374
    3. ' print' → logprob: -3.992912769317627
    4. '```' → logprob: -8.242912292480469
    5. ',' → logprob: -8.992912292480469
    6. '.' → logprob: -9.117912292480469
    7. '    
' → logprob: -9.992912292480469
    8. '\' → logprob: -10.117912292480469
    9. '	print' → logprob: -10.117912292480469
    10. ' ' → logprob: -10.117912292480469

Token 65: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39320340752601624
    2. '(S' → logprob: -1.1432033777236938
    3. '(round' → logprob: -5.268203258514404
    4. '(s' → logprob: -7.893203258514404
    5. '(int' → logprob: -8.518203735351562
    6. '('' → logprob: -8.643203735351562
    7. '(f' → logprob: -8.768203735351562
    8. '(math' → logprob: -9.143203735351562
    9. '()' → logprob: -9.268203735351562
    10. '("' → logprob: -10.768203735351562

Token 66: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.13544625043869019
    2. '{' → logprob: -2.385446310043335
    3. ''{' → logprob: -3.760446310043335
    4. '"S' → logprob: -4.885446071624756
    5. '"' → logprob: -5.760446071624756
    6. ''S' → logprob: -8.635446548461914
    7. '"The' → logprob: -8.885446548461914
    8. 'S' → logprob: -9.760446548461914
    9. '{x' → logprob: -9.760446548461914
    10. '"L' → logprob: -10.010446548461914

Token 67: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.3915141355246305e-05
    2. 'x' → logprob: -11.25002384185791
    3. ' S' → logprob: -12.12502384185791
    4. 'l' → logprob: -13.00002384185791
    5. 'math' → logprob: -13.62502384185791
    6. '   ' → logprob: -14.00002384185791
    7. 'int' → logprob: -14.75002384185791
    8. 'h' → logprob: -15.87502384185791
    9. ' ' → logprob: -16.000024795532227
    10. '    ' → logprob: -16.250024795532227

Token 68: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.015111875720322132
    2. ':' → logprob: -4.265111923217773
    3. ' :.' → logprob: -7.390111923217773
    4. ' :' → logprob: -9.390111923217773
    5. '}")' → logprob: -9.390111923217773
    6. '")' → logprob: -9.890111923217773
    7. '}' → logprob: -10.015111923217773
    8. ' .' → logprob: -10.640111923217773
    9. '.' → logprob: -10.890111923217773
    10. ')' → logprob: -11.890111923217773

Token 69: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2752942442893982
    2. '3' → logprob: -1.775294303894043
    3. '6' → logprob: -3.150294303894043
    4. '4' → logprob: -4.275294303894043
    5. '5' → logprob: -5.025294303894043
    6. '1' → logprob: -5.275294303894043
    7. '0' → logprob: -6.650294303894043
    8. '7' → logprob: -7.025294303894043
    9. '10' → logprob: -8.650294303894043
    10. '8' → logprob: -8.775294303894043

Token 70: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.981667537620524e-06
    2. 'g' → logprob: -14.000001907348633
    3. '}' → logprob: -14.375001907348633
    4. 'e' → logprob: -15.000001907348633
    5. '}")' → logprob: -16.125001907348633
    6. 'lf' → logprob: -17.750001907348633
    7. '{' → logprob: -17.875001907348633
    8. '```' → logprob: -18.375001907348633
    9. '
' → logprob: -18.625001907348633
    10. 'Lf' → logprob: -18.750001907348633

Token 71: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -2.4153549020411447e-05
    2. '}")
' → logprob: -11.37502384185791
    3. '")' → logprob: -12.12502384185791
    4. '}' → logprob: -12.62502384185791
    5. ' }' → logprob: -13.87502384185791
    6. '}"' → logprob: -13.87502384185791
    7. '}")
' → logprob: -13.87502384185791
    8. '}")

' → logprob: -14.87502384185791
    9. ')")' → logprob: -15.25002384185791
    10. '}')' → logprob: -16.250024795532227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 60
Précision stricte (1ère position): 49.28%
Précision adaptée (1ère position): 49.28%
Précision (top 10): 86.96%
================================================================================
