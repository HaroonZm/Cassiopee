================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

DIRECTIONS = [-5, 5, -1, 1, -6, 6, -4, 4]

def neighbors(i):
    r, c = divmod(i, 4)
    res = []
    # vertical and horizontal
    for dr, dc in [(-1,0),(1,0),(0,-1),(0,1)]:
        nr, nc = r+dr, c+dc
        if 0 <= nr < 5 and 0 <= nc < 4:
            res.append(nr*4+nc)
    # diagonal
    for dr, dc in [(-1,-1),(-1,1),(1,-1),(1,1)]:
        nr, nc = r+dr, c+dc
        if 0 <= nr < 5 and 0 <= nc < 4:
            res.append(nr*4+nc)
    return res

adjacent = [neighbors(i) for i in range(20)]

def compact(cards):
    new_cards = [c for c in cards if c != 0]
    new_cards += [0]*(20 - len(new_cards))
    return tuple(new_cards)

from functools import lru_cache

@lru_cache(None)
def dfs(cards):
    cards = compact(cards)
    # find pairs
    pairs = []
    for i in range(20):
        if cards[i]==0:
            continue
        for j in adjacent[i]:
            if j > i and cards[j] == cards[i]:
                pairs.append((i,j))
    if not pairs:
        return sum(1 for c in cards if c !=0)
    res = 20
    for i,j in pairs:
        lst = list(cards)
        lst[i] = 0
        lst[j] = 0
        res = min(res, dfs(tuple(lst)))
    return res

def main():
    input = sys.stdin.read().strip().split()
    n = int(input[0])
    idx = 1
    for _ in range(n):
        cards = tuple(int(x) for x in input[idx:idx+20])
        idx += 20
        print(dfs(cards))
    # no further input to process

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975533962249756
    2. '\n' → logprob: -0.8225533962249756
    3. '<|end|>' → logprob: -3.5725533962249756
    4. '\' → logprob: -4.322553634643555
    5. 'newline' → logprob: -5.072553634643555
    6. 'import' → logprob: -5.322553634643555
    7. '<|end|>' → logprob: -5.947553634643555
    8. '```' → logprob: -6.572553634643555
    9. '' → logprob: -6.822553634643555
    10. '
' → logprob: -6.947553634643555

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2007883671903983e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.4590666890144348
    2. 't' → logprob: -1.58406662940979
    3. '_' → logprob: -3.20906662940979
    4. 'default' → logprob: -3.33406662940979
    5. 'set' → logprob: -4.084066867828369
    6. 's' → logprob: -4.584066867828369
    7. 'rl' → logprob: -4.834066867828369
    8. '_trace' → logprob: -4.959066867828369
    9. 'f' → logprob: -5.334066867828369
    10. 'rec' → logprob: -5.584066867828369

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00040815072134137154
    2. 'ursive' → logprob: -8.250408172607422
    3. 'urs' → logprob: -10.375408172607422
    4. 'limit' → logprob: -10.625408172607422
    5. 'urf' → logprob: -10.625408172607422
    6. 'ur' → logprob: -10.875408172607422
    7. '_limit' → logprob: -11.250408172607422
    8. '_' → logprob: -11.625408172607422
    9. 'ursor' → logprob: -12.500408172607422
    10. 'ursively' → logprob: -12.750408172607422

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.5320696830749512
    2. 'limit' → logprob: -1.1570696830749512
    3. '_depth' → logprob: -2.407069683074951
    4. '_' → logprob: -5.907069683074951
    5. 'depth' → logprob: -5.907069683074951
    6. 'error' → logprob: -6.907069683074951
    7. '_error' → logprob: -7.532069683074951
    8. '_limits' → logprob: -8.78207015991211
    9. '('_' → logprob: -8.90707015991211
    10. '_stack' → logprob: -9.15707015991211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004525180906057358
    2. '9' → logprob: -6.004525184631348
    3. '8' → logprob: -6.504525184631348
    4. '6' → logprob: -7.504525184631348
    5. ' ' → logprob: -16.25452423095703
    6. '```' → logprob: -17.25452423095703
    7. ')' → logprob: -17.62952423095703
    8. '(' → logprob: -19.75452423095703
    9. '``' → logprob: -20.00452423095703
    10. '}' → logprob: -20.00452423095703

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. '))' → logprob: -12.375005722045898
    3. ' )' → logprob: -13.500005722045898
    4. ')
' → logprob: -16.1250057220459
    5. ')))' → logprob: -16.8750057220459
    6. '`)' → logprob: -17.2500057220459
    7. ')`' → logprob: -17.3750057220459
    8. '```' → logprob: -17.6250057220459
    9. '')' → logprob: -18.1250057220459
    10. ' ' → logprob: -18.2500057220459

Token 13: 'D' (ID: 35)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046513643115758896
    2. '
' → logprob: -3.546513557434082
    3. '

' → logprob: -4.921513557434082
    4. '```' → logprob: -5.296513557434082
    5. '\' → logprob: -6.421513557434082
    6. '
' → logprob: -7.046513557434082
    7. 'class' → logprob: -7.546513557434082
    8. '\n' → logprob: -7.671513557434082
    9. 'import' → logprob: -8.046513557434082
    10. ')' → logprob: -8.921513557434082

Token 14: 'IRE' (ID: 12934)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.010507570579648018
    2. 'P' → logprob: -5.260507583618164
    3. 'EF' → logprob: -6.135507583618164
    4. 'ef' → logprob: -6.760507583618164
    5. 'I' → logprob: -7.760507583618164
    6. 'R' → logprob: -8.010507583618164
    7. 'F' → logprob: -8.135507583618164
    8. 'e' → logprob: -8.260507583618164
    9. 'D' → logprob: -8.885507583618164
    10. 'EP' → logprob: -9.010507583618164

Token 15: 'CTIONS' (ID: 66897)
  Prédit: 'CTIONS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CTIONS' → logprob: -0.011953349225223064
    2. 'CTION' → logprob: -4.886953353881836
    3. 'CT' → logprob: -5.511953353881836
    4. 'C' → logprob: -8.386953353881836
    5. 'CTS' → logprob: -10.261953353881836
    6. '_C' → logprob: -12.011953353881836
    7. '```' → logprob: -12.011953353881836
    8. ' CT' → logprob: -12.386953353881836
    9. '_CT' → logprob: -12.386953353881836
    10. '_' → logprob: -12.636953353881836

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007790451403707266
    2. '=' → logprob: -4.882790565490723
    3. '[' → logprob: -10.382790565490723
    4. '_' → logprob: -10.382790565490723
    5. '[:]' → logprob: -10.507790565490723
    6. '.' → logprob: -10.632790565490723
    7. ':' → logprob: -10.757790565490723
    8. ' =
' → logprob: -11.507790565490723
    9. ' =[' → logprob: -11.507790565490723
    10. '```' → logprob: -11.882790565490723

Token 17: ' [-' (ID: 20191)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.04285964369773865
    2. '[(' → logprob: -3.2928595542907715
    3. ' [' → logprob: -5.5428595542907715
    4. ' [
' → logprob: -7.9178595542907715
    5. '[' → logprob: -8.16786003112793
    6. ' ' → logprob: -9.41786003112793
    7. ' [[' → logprob: -9.91786003112793
    8. '[
' → logprob: -10.29286003112793
    9. ' {(' → logprob: -10.29286003112793
    10. ' ['' → logprob: -11.16786003112793

Token 18: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030578780570067465
    2. '(' → logprob: -8.125306129455566
    3. '2' → logprob: -11.750306129455566
    4. ' ' → logprob: -14.125306129455566
    5. ' (' → logprob: -15.000306129455566
    6. '9' → logprob: -15.625306129455566
    7. '3' → logprob: -16.00030517578125
    8. '4' → logprob: -16.00030517578125
    9. '-' → logprob: -16.25030517578125
    10. '0' → logprob: -16.50030517578125

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005129986093379557
    2. ' ,' → logprob: -7.625513076782227
    3. ',-' → logprob: -11.000513076782227
    4. '-' → logprob: -13.000513076782227
    5. ' -' → logprob: -13.000513076782227
    6. '0' → logprob: -13.000513076782227
    7. '1' → logprob: -14.500513076782227
    8. '5' → logprob: -15.375513076782227
    9. '7' → logprob: -15.625513076782227
    10. ' ,-' → logprob: -16.000513076782227

Token 20: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6454254388809204
    2. '5' → logprob: -1.5204254388809204
    3. ' ' → logprob: -1.8954254388809204
    4. '4' → logprob: -2.770425319671631
    5. '1' → logprob: -3.770425319671631
    6. ' -' → logprob: -4.145425319671631
    7. '+' → logprob: -5.770425319671631
    8. '6' → logprob: -6.270425319671631
    9. ' +' → logprob: -9.520425796508789
    10. '3' → logprob: -10.145425796508789

Token 21: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30629295110702515
    2. '-' → logprob: -1.80629301071167
    3. '4' → logprob: -2.43129301071167
    4. '6' → logprob: -4.93129301071167
    5. ' ' → logprob: -5.80629301071167
    6. '+' → logprob: -6.93129301071167
    7. '5' → logprob: -8.431292533874512
    8. ' -' → logprob: -8.681292533874512
    9. '3' → logprob: -10.181292533874512
    10. '2' → logprob: -12.743792533874512

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019221604452468455
    2. ' ,' → logprob: -8.875192642211914
    3. ']' → logprob: -10.375192642211914
    4. ',-' → logprob: -11.625192642211914
    5. '<|end|>' → logprob: -12.125192642211914
    6. ',
' → logprob: -13.375192642211914
    7. ')' → logprob: -13.500192642211914
    8. '0' → logprob: -14.625192642211914
    9. '-' → logprob: -14.750192642211914
    10. '<|end|>' → logprob: -14.875192642211914

Token 23: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3881726562976837
    2. '-' → logprob: -1.1381726264953613
    3. '1' → logprob: -7.013172626495361
    4. ' ' → logprob: -8.01317310333252
    5. ',' → logprob: -9.76317310333252
    6. ',-' → logprob: -12.51317310333252
    7. '0' → logprob: -13.01317310333252
    8. ' ' → logprob: -13.95067310333252
    9. '  ' → logprob: -14.76317310333252
    10. '```' → logprob: -14.76317310333252

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.750005722045898
    3. '4' → logprob: -13.125005722045898
    4. '```' → logprob: -15.687505722045898
    5. '6' → logprob: -16.2500057220459
    6. '11' → logprob: -16.7500057220459
    7. '१' → logprob: -17.4375057220459
    8. '10' → logprob: -17.4375057220459
    9. '-' → logprob: -17.5000057220459
    10. '146' → logprob: -17.7500057220459

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0052572377026081085
    2. ' ,' → logprob: -5.2552571296691895
    3. '<|end|>' → logprob: -11.130257606506348
    4. ']' → logprob: -12.505257606506348
    5. '0' → logprob: -13.880257606506348
    6. ' ]' → logprob: -14.130257606506348
    7. '<|end|>' → logprob: -14.505257606506348
    8. ' ' → logprob: -14.630257606506348
    9. '1' → logprob: -14.880257606506348
    10. ')' → logprob: -15.130257606506348

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021985520143061876
    2. ' ' → logprob: -6.127198696136475
    3. '+' → logprob: -11.252198219299316
    4. ' +' → logprob: -15.252198219299316
    5. '```' → logprob: -17.064699172973633
    6. ',' → logprob: -17.689699172973633
    7. '۱' → logprob: -17.877199172973633
    8. '0' → logprob: -17.877199172973633
    9. '`' → logprob: -17.939699172973633
    10. '１' → logprob: -17.939699172973633

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012594614236149937
    2. ' ' → logprob: -9.125125885009766
    3. '+' → logprob: -11.000125885009766
    4. ' +' → logprob: -15.750125885009766
    5. '```' → logprob: -16.625125885009766
    6. ']' → logprob: -18.125125885009766
    7. '１' → logprob: -18.187625885009766
    8. '۱' → logprob: -18.375125885009766
    9. '0' → logprob: -18.375125885009766
    10. '`' → logprob: -18.750125885009766

Token 28: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.558399319241289e-05
    2. ',' → logprob: -11.000025749206543
    3. ' ]' → logprob: -12.000025749206543
    4. ')' → logprob: -13.250025749206543
    5. '])' → logprob: -15.125025749206543
    6. '`]' → logprob: -15.500025749206543
    7. ')]' → logprob: -15.750025749206543
    8. '']' → logprob: -16.500024795532227
    9. '<|end|>' → logprob: -16.500024795532227
    10. '}' → logprob: -17.125024795532227

Token 29: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3104962706565857
    2. '-' → logprob: -1.4354963302612305
    3. ' ' → logprob: -4.8104963302612305
    4. ']' → logprob: -4.9354963302612305
    5. '0' → logprob: -4.9354963302612305
    6. ' ]' → logprob: -5.9354963302612305
    7. '(-' → logprob: -6.1854963302612305
    8. ' (-' → logprob: -7.5604963302612305
    9. '5' → logprob: -8.18549633026123
    10. ' (' → logprob: -8.93549633026123

Token 30: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7390338778495789
    2. '5' → logprob: -1.6140339374542236
    3. '4' → logprob: -1.7390339374542236
    4. 'sys' → logprob: -2.8640339374542236
    5. '10' → logprob: -3.6140339374542236
    6. '1' → logprob: -3.8640339374542236
    7. '50' → logprob: -3.9890339374542236
    8. '100' → logprob: -5.2390336990356445
    9. 'D' → logprob: -5.4890336990356445
    10. '```' → logprob: -5.7390336990356445

Token 31: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25306808948516846
    2. ',' → logprob: -1.5030680894851685
    3. ' ]' → logprob: -6.878067970275879
    4. ' ,' → logprob: -9.378067970275879
    5. '`]' → logprob: -12.253067970275879
    6. '<|end|>' → logprob: -12.503067970275879
    7. ')' → logprob: -12.753067970275879
    8. ')]' → logprob: -13.503067970275879
    9. ']>' → logprob: -13.878067970275879
    10. '6' → logprob: -14.003067970275879

Token 32: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.04859020933508873
    2. ' ' → logprob: -3.0485901832580566
    3. ' -' → logprob: -14.423590660095215
    4. '+' → logprob: -15.111090660095215
    5. ',' → logprob: -15.486090660095215
    6. '-' → logprob: -15.548590660095215
    7. ' ' → logprob: -15.548590660095215
    8. ' +' → logprob: -15.611090660095215
    9. '  ' → logprob: -15.673590660095215
    10. '۶' → logprob: -15.798590660095215

Token 33: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.005931758787482977
    2. ' ' → logprob: -5.130931854248047
    3. '-' → logprob: -13.505931854248047
    4. '+' → logprob: -14.693431854248047
    5. ' -' → logprob: -15.255931854248047
    6. '۶' → logprob: -15.443431854248047
    7. '' → logprob: -15.818431854248047
    8. '६' → logprob: -15.818431854248047
    9. '```' → logprob: -15.818431854248047
    10. '৬' → logprob: -16.380931854248047

Token 34: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10026974976062775
    2. ',' → logprob: -2.3502697944641113
    3. ' ]' → logprob: -9.725269317626953
    4. ' ,' → logprob: -14.475269317626953
    5. ')' → logprob: -14.725269317626953
    6. '],' → logprob: -14.725269317626953
    7. '`]' → logprob: -14.850269317626953
    8. '```' → logprob: -14.975269317626953
    9. '}' → logprob: -15.225269317626953
    10. '']' → logprob: -16.350269317626953

Token 35: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43139851093292236
    2. ' -' → logprob: -1.0563985109329224
    3. ' ' → logprob: -6.806398391723633
    4. '10' → logprob: -8.056398391723633
    5. '7' → logprob: -8.181398391723633
    6. '0' → logprob: -8.306398391723633
    7. ',' → logprob: -8.556398391723633
    8. ')' → logprob: -9.056398391723633
    9. '])' → logprob: -9.556398391723633
    10. '5' → logprob: -9.681398391723633

Token 36: '4' (ID: 19)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.02440510503947735
    2. '4' → logprob: -3.899405002593994
    3. '-' → logprob: -6.399405002593994
    4. '```' → logprob: -6.649405002593994
    5. '5' → logprob: -8.024405479431152
    6. '``' → logprob: -8.399405479431152
    7. '10' → logprob: -9.524405479431152
    8. '1' → logprob: -10.399405479431152
    9. '{' → logprob: -10.399405479431152
    10. ' ' → logprob: -10.586905479431152

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0076843504793941975
    2. ']' → logprob: -4.882684230804443
    3. ' ,' → logprob: -9.882684707641602
    4. ' ]' → logprob: -10.632684707641602
    5. '<|end|>' → logprob: -14.382684707641602
    6. ')' → logprob: -14.757684707641602
    7. '`]' → logprob: -15.507684707641602
    8. ',
' → logprob: -15.882684707641602
    9. '}' → logprob: -15.882684707641602
    10. '0' → logprob: -16.0701847076416

Token 38: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34977325797080994
    2. '4' → logprob: -1.2247732877731323
    3. ' ' → logprob: -7.099773406982422
    4. ' -' → logprob: -7.599773406982422
    5. '```' → logprob: -13.849773406982422
    6. '  ' → logprob: -15.474773406982422
    7. '' → logprob: -15.599773406982422
    8. '   ' → logprob: -15.974773406982422
    9. '	' → logprob: -16.099773406982422
    10. '}' → logprob: -16.599773406982422

Token 39: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0002466774603817612
    2. '-' → logprob: -8.37524700164795
    3. ' ' → logprob: -11.12524700164795
    4. ' -' → logprob: -14.12524700164795
    5. '```' → logprob: -14.87524700164795
    6. '' → logprob: -16.375246047973633
    7. '৪' → logprob: -17.500246047973633
    8. '۴' → logprob: -17.750246047973633
    9. '४' → logprob: -18.250246047973633
    10. '+' → logprob: -18.375246047973633

Token 40: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -5.200166469876422e-06
    2. ')' → logprob: -13.000004768371582
    3. ',' → logprob: -13.625004768371582
    4. ' ]' → logprob: -13.750004768371582
    5. '])' → logprob: -15.625004768371582
    6. '}' → logprob: -16.0000057220459
    7. '']' → logprob: -16.3750057220459
    8. '`]' → logprob: -16.3750057220459
    9. '```' → logprob: -16.3750057220459
    10. ')]' → logprob: -16.6250057220459

Token 41: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009344948455691338
    2. 'n' → logprob: -5.759345054626465
    3. 'class' → logprob: -6.384345054626465
    4. 'visited' → logprob: -6.509345054626465
    5. 'N' → logprob: -6.634345054626465
    6. 'for' → logprob: -7.509345054626465
    7. 'board' → logprob: -7.509345054626465
    8. 'from' → logprob: -8.884345054626465
    9. 'dp' → logprob: -9.259345054626465
    10. 'grid' → logprob: -9.509345054626465

Token 42: ' neighbors' (ID: 31655)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.008648726157844067
    2. ' solve' → logprob: -5.133648872375488
    3. ' bfs' → logprob: -6.633648872375488
    4. 'dfs' → logprob: -8.258648872375488
    5. ' is' → logprob: -8.633648872375488
    6. ' valid' → logprob: -9.008648872375488
    7. ' knight' → logprob: -9.008648872375488
    8. ' depth' → logprob: -9.133648872375488
    9. ' chess' → logprob: -9.383648872375488
    10. ' can' → logprob: -9.508648872375488

Token 43: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1593591868877411
    2. '(node' → logprob: -2.5343592166900635
    3. '(pos' → logprob: -3.2843592166900635
    4. '(position' → logprob: -3.6593592166900635
    5. '(i' → logprob: -6.034358978271484
    6. '(index' → logprob: -7.284358978271484
    7. '(cell' → logprob: -7.284358978271484
    8. '(idx' → logprob: -8.159358978271484
    9. '(n' → logprob: -8.534358978271484
    10. '(x' → logprob: -8.659358978271484

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03615108132362366
    2. ',' → logprob: -3.411151170730591
    3. ')' → logprob: -6.036150932312012
    4. ' ):' → logprob: -9.911150932312012
    5. '):
' → logprob: -10.161150932312012
    6. ':' → logprob: -11.536150932312012
    7. ' ,' → logprob: -12.411150932312012
    8. '=' → logprob: -13.786150932312012
    9. '   ' → logprob: -14.161150932312012
    10. ' ' → logprob: -14.286150932312012

Token 45: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5245782732963562
    2. '   ' → logprob: -0.8995782732963562
    3. ':return' → logprob: -7.899578094482422
    4. ',' → logprob: -8.024578094482422
    5. '):' → logprob: -8.149578094482422
    6. ':list' → logprob: -9.274578094482422
    7. '```' → logprob: -10.024578094482422
    8. ':
' → logprob: -10.149578094482422
    9. ' :' → logprob: -10.274578094482422
    10. '  ' → logprob: -10.774578094482422

Token 46: ' r' (ID: 428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8318778872489929
    2. 'return' → logprob: -0.9568778872489929
    3. '   ' → logprob: -2.8318779468536377
    4. 'result' → logprob: -3.2068779468536377
    5. 'neighbors' → logprob: -3.3318779468536377
    6. ' for' → logprob: -3.8318779468536377
    7. ' return' → logprob: -4.706877708435059
    8. 'res' → logprob: -5.081877708435059
    9. ' neighbors' → logprob: -5.581877708435059
    10. 'n' → logprob: -6.331877708435059

Token 47: ',' (ID: 11)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.03745362535119057
    2. ' =' → logprob: -3.9124536514282227
    3. 'ows' → logprob: -4.912453651428223
    4. ',' → logprob: -5.037453651428223
    5. '=' → logprob: -6.037453651428223
    6. 'eturn' → logprob: -8.037453651428223
    7. '=row' → logprob: -9.412453651428223
    8. ' ' → logprob: -9.662453651428223
    9. ' ow' → logprob: -10.787453651428223
    10. '=int' → logprob: -11.537453651428223

Token 48: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2520768642425537
    2. ' c' → logprob: -1.5020768642425537
    3. ' =' → logprob: -9.752077102661133
    4. 'i' → logprob: -10.877077102661133
    5. '<|end|>' → logprob: -10.877077102661133
    6. ' ' → logprob: -11.002077102661133
    7. ' i' → logprob: -11.502077102661133
    8. '=' → logprob: -11.877077102661133
    9. 'q' → logprob: -12.252077102661133
    10. 'r' → logprob: -12.752077102661133

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25196558237075806
    2. '=' → logprob: -1.5019655227661133
    3. ',' → logprob: -10.376965522766113
    4. ')' → logprob: -13.126965522766113
    5. ' =)' → logprob: -13.876965522766113
    6. '   ' → logprob: -14.626965522766113
    7. ' =
' → logprob: -14.876965522766113
    8. ' ' → logprob: -15.001965522766113
    9. '<|end|>' → logprob: -15.251965522766113
    10. '＝' → logprob: -15.626965522766113

Token 50: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.45663124322891235
    2. ' i' → logprob: -1.2066311836242676
    3. 'i' → logprob: -3.3316311836242676
    4. 'div' → logprob: -3.4566311836242676
    5. '   ' → logprob: -9.206631660461426
    6. '(i' → logprob: -13.456631660461426
    7. '```' → logprob: -13.456631660461426
    8. '	div' → logprob: -13.581631660461426
    9. ' ' → logprob: -13.706631660461426
    10. ' (' → logprob: -14.081631660461426

Token 51: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.292907877039397e-06
    2. 'ide' → logprob: -12.87500286102295
    3. 'ision' → logprob: -14.87500286102295
    4. '(i' → logprob: -15.75000286102295
    5. 'i' → logprob: -16.125003814697266
    6. 'm' → logprob: -17.875003814697266
    7. 'mode' → logprob: -18.125003814697266
    8. 'size' → logprob: -19.125003814697266
    9. 'idend' → logprob: -19.125003814697266
    10. 'and' → logprob: -19.125003814697266

Token 52: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.23917081207037e-05
    2. '(' → logprob: -10.500041961669922
    3. 'i' → logprob: -11.250041961669922
    4. ' i' → logprob: -13.750041961669922
    5. ')i' → logprob: -15.375041961669922
    6. ',i' → logprob: -16.250041961669922
    7. '(
' → logprob: -16.375041961669922
    8. '[i' → logprob: -16.750041961669922
    9. ')' → logprob: -16.875041961669922
    10. ' (' → logprob: -17.250041961669922

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008871606551110744
    2. ' ,' → logprob: -7.250887393951416
    3. '(' → logprob: -9.000886917114258
    4. '5' → logprob: -10.750886917114258
    5. '7' → logprob: -11.875886917114258
    6. ')' → logprob: -11.875886917114258
    7. '6' → logprob: -12.625886917114258
    8. '8' → logprob: -13.125886917114258
    9. ' ' → logprob: -13.250886917114258
    10. ' (' → logprob: -13.375886917114258

Token 54: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.04445803537964821
    2. '6' → logprob: -3.1694581508636475
    3. ' ' → logprob: -6.544457912445068
    4. '7' → logprob: -11.544458389282227
    5. '   ' → logprob: -12.544458389282227
    6. '4' → logprob: -13.169458389282227
    7. '9' → logprob: -13.794458389282227
    8. '8' → logprob: -13.794458389282227
    9. '  ' → logprob: -14.169458389282227
    10. '```' → logprob: -14.419458389282227

Token 55: '4' (ID: 19)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2537122666835785
    2. '6' → logprob: -1.5037122964859009
    3. ' ' → logprob: -6.503712177276611
    4. '7' → logprob: -8.62871265411377
    5. '9' → logprob: -10.37871265411377
    6. '4' → logprob: -10.62871265411377
    7. '8' → logprob: -11.12871265411377
    8. '   ' → logprob: -11.50371265411377
    9. ')' → logprob: -12.12871265411377
    10. '```' → logprob: -12.25371265411377

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004907185211777687
    2. ')
' → logprob: -7.625490665435791
    3. ')

' → logprob: -13.62549114227295
    4. ' )' → logprob: -14.75049114227295
    5. ')
' → logprob: -15.00049114227295
    6. '   ' → logprob: -16.000490188598633
    7. '))' → logprob: -16.375490188598633
    8. '4' → logprob: -16.375490188598633
    9. ')`' → logprob: -16.500490188598633
    10. '7' → logprob: -16.625490188598633

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6786567568778992
    2. '
' → logprob: -0.8036567568778992
    3. '    
' → logprob: -3.553656816482544
    4. '  
' → logprob: -5.053656578063965
    5. '<|end|>' → logprob: -5.178656578063965
    6. '   
' → logprob: -6.303656578063965
    7. ' 
' → logprob: -7.178656578063965
    8. '```' → logprob: -8.303656578063965
    9. '  ' → logprob: -8.678656578063965
    10. ')' → logprob: -8.803656578063965

Token 58: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6496819853782654
    2. ' for' → logprob: -2.02468204498291
    3. 'neighbors' → logprob: -2.02468204498291
    4. 'for' → logprob: -2.77468204498291
    5. ' neighbors' → logprob: -3.02468204498291
    6. 'n' → logprob: -3.52468204498291
    7. 'result' → logprob: -3.64968204498291
    8. ' result' → logprob: -4.77468204498291
    9. '    
' → logprob: -4.89968204498291
    10. 'neighbor' → logprob: -5.39968204498291

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02066882885992527
    2. '=' → logprob: -3.8956687450408936
    3. '=[]' → logprob: -9.145668983459473
    4. 'ult' → logprob: -11.145668983459473
    5. '=[]
' → logprob: -13.395668983459473
    6. 's' → logprob: -13.645668983459473
    7. ' ' → logprob: -13.770668983459473
    8. 'ults' → logprob: -14.770668983459473
    9. 't' → logprob: -15.020668983459473
    10. ',' → logprob: -15.395668983459473

Token 60: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07896547019481659
    2. ' []' → logprob: -2.578965425491333
    3. '[' → logprob: -10.328965187072754
    4. '[]
' → logprob: -10.703965187072754
    5. ' [' → logprob: -10.953965187072754
    6. ' []
' → logprob: -13.578965187072754
    7. '[]}' → logprob: -14.703965187072754
    8. ' ' → logprob: -14.953965187072754
    9. '[]

' → logprob: -14.953965187072754
    10. '   ' → logprob: -15.078965187072754

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017366360872983932
    2. '    
' → logprob: -4.392366409301758
    3. ' for' → logprob: -6.142366409301758
    4. '    ' → logprob: -6.892366409301758
    5. '<|end|>' → logprob: -7.267366409301758
    6. 'for' → logprob: -7.517366409301758
    7. '
' → logprob: -8.892366409301758
    8. ' ' → logprob: -9.517366409301758
    9. '	for' → logprob: -9.767366409301758
    10. ' 
' → logprob: -10.142366409301758

Token 62: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01147476863116026
    2. ' for' → logprob: -4.511474609375
    3. '   ' → logprob: -7.761474609375
    4. '	for' → logprob: -14.011474609375
    5. 'if' → logprob: -16.136474609375
    6. '```' → logprob: -16.136474609375
    7. '  ' → logprob: -17.136474609375
    8. ' ' → logprob: -17.136474609375
    9. '    
' → logprob: -17.511474609375
    10. '<|end|>' → logprob: -18.886474609375

Token 63: ' vertical' (ID: 17679)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4758782982826233
    2. 'for' → logprob: -0.9758782982826233
    3. ' if' → logprob: -6.8508782386779785
    4. 'if' → logprob: -7.4758782386779785
    5. '   ' → logprob: -8.725878715515137
    6. ' r' → logprob: -12.100878715515137
    7. 'r' → logprob: -12.600878715515137
    8. ' ' → logprob: -13.600878715515137
    9. '	for' → logprob: -14.725878715515137
    10. '#' → logprob: -14.850878715515137

Token 64: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.652834951877594
    2. ' for' → logprob: -0.777834951877594
    3. 'if' → logprob: -4.777834892272949
    4. '   ' → logprob: -4.902834892272949
    5. ' if' → logprob: -5.527834892272949
    6. '<|end|>' → logprob: -10.02783489227295
    7. '	for' → logprob: -10.40283489227295
    8. ' and' → logprob: -10.90283489227295
    9. ' ' → logprob: -11.02783489227295
    10. '  ' → logprob: -11.40283489227295

Token 65: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.28282061219215393
    2. ' horizontal' → logprob: -1.4078205823898315
    3. 'orizontal' → logprob: -6.657820701599121
    4. 'hor' → logprob: -9.032820701599121
    5. 'Horizontal' → logprob: -10.032820701599121
    6. '_horizontal' → logprob: -10.282820701599121
    7. '   ' → logprob: -10.532820701599121
    8. '-horizontal' → logprob: -10.532820701599121
    9. '#' → logprob: -10.782820701599121
    10. 'vertical' → logprob: -10.907820701599121

Token 66: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.656869649887085
    2. 'for' → logprob: -0.781869649887085
    3. '   ' → logprob: -3.906869649887085
    4. 'if' → logprob: -6.406869888305664
    5. ' directions' → logprob: -6.781869888305664
    6. ' if' → logprob: -8.156869888305664
    7. 'moves' → logprob: -8.656869888305664
    8. '<|end|>' → logprob: -9.281869888305664
    9. 'dire' → logprob: -9.406869888305664
    10. ' lines' → logprob: -9.406869888305664

Token 67: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49174028635025024
    2. '   ' → logprob: -1.6167402267456055
    3. ' for' → logprob: -1.7417402267456055
    4. 'if' → logprob: -4.4917402267456055
    5. ' if' → logprob: -6.2417402267456055
    6. '```' → logprob: -6.9917402267456055
    7. '<|end|>' → logprob: -7.8667402267456055
    8. 'moves' → logprob: -10.241740226745605
    9. '	for' → logprob: -10.741740226745605
    10. ' directions' → logprob: -10.741740226745605

Token 68: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.26849988102912903
    2. ' for' → logprob: -1.5184998512268066
    3. '   ' → logprob: -4.768499851226807
    4. 'if' → logprob: -5.018499851226807
    5. ' if' → logprob: -6.643499851226807
    6. '```' → logprob: -10.768500328063965
    7. '	for' → logprob: -13.768500328063965
    8. ' ' → logprob: -14.018500328063965
    9. '``' → logprob: -15.143500328063965
    10. '  ' → logprob: -15.143500328063965

Token 69: ' dr' (ID: 1498)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18626083433628082
    2. 'dr' → logprob: -1.8112608194351196
    3. ' d' → logprob: -5.93626070022583
    4. ' dr' → logprob: -5.93626070022583
    5. 'delta' → logprob: -7.68626070022583
    6. 'dir' → logprob: -8.436261177062988
    7. 'dc' → logprob: -8.436261177062988
    8. '   ' → logprob: -9.561261177062988
    9. 'dx' → logprob: -9.936261177062988
    10. 'direction' → logprob: -10.186261177062988

Token 70: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1257942020893097
    2. ',' → logprob: -2.2507941722869873
    3. 'in' → logprob: -4.750794410705566
    4. ' ,' → logprob: -5.625794410705566
    5. ' ' → logprob: -7.500794410705566
    6. '  ' → logprob: -10.875794410705566
    7. '   ' → logprob: -11.000794410705566
    8. 's' → logprob: -11.875794410705566
    9. ',in' → logprob: -12.000794410705566
    10. 'd' → logprob: -12.250794410705566

Token 71: ' dc' (ID: 37843)
  Prédit: ' dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dc' → logprob: -0.1603544056415558
    2. 'dc' → logprob: -1.9103543758392334
    3. '_dc' → logprob: -9.410354614257812
    4. ' ' → logprob: -10.160354614257812
    5. '   ' → logprob: -12.410354614257812
    6. '  ' → logprob: -13.410354614257812
    7. '.dc' → logprob: -13.535354614257812
    8. '    ' → logprob: -13.660354614257812
    9. '(dc' → logprob: -14.785354614257812
    10. '```' → logprob: -15.285354614257812

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007651584688574076
    2. 'in' → logprob: -4.8826518058776855
    3. '<|end|>' → logprob: -10.507651329040527
    4. ',' → logprob: -11.507651329040527
    5. 's' → logprob: -13.132651329040527
    6. ' ' → logprob: -13.507651329040527
    7. '	in' → logprob: -14.007651329040527
    8. ')' → logprob: -14.007651329040527
    9. '<|end|>' → logprob: -14.257651329040527
    10. '  ' → logprob: -14.757651329040527

Token 73: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.08832329511642456
    2. ' [(' → logprob: -2.9633233547210693
    3. '[' → logprob: -3.4633233547210693
    4. ' [' → logprob: -6.96332311630249
    5. '((' → logprob: -8.463323593139648
    6. '[((' → logprob: -8.463323593139648
    7. ' ((' → logprob: -8.838323593139648
    8. ' ' → logprob: -10.963323593139648
    9. '[-' → logprob: -11.213323593139648
    10. '[
' → logprob: -12.088323593139648

Token 74: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.38775408267974854
    2. '(' → logprob: -1.1377540826797485
    3. ' (' → logprob: -7.262753963470459
    4. ' (-' → logprob: -8.762754440307617
    5. '   ' → logprob: -10.637754440307617
    6. ' ' → logprob: -15.387754440307617
    7. '-' → logprob: -15.762754440307617
    8. '
' → logprob: -16.012754440307617
    9. '[-' → logprob: -16.137754440307617
    10. '  ' → logprob: -16.137754440307617

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -11.250020980834961
    3. '5' → logprob: -12.125020980834961
    4. '0' → logprob: -14.000020980834961
    5. ')' → logprob: -15.125020980834961
    6. ',' → logprob: -15.562520980834961
    7. '   ' → logprob: -15.750020980834961
    8. '2' → logprob: -16.31252098083496
    9. '-' → logprob: -16.50002098083496
    10. '    ' → logprob: -16.62502098083496

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009456383413635194
    2. ' ,' → logprob: -7.125945568084717
    3. '),' → logprob: -9.000946044921875
    4. '<|end|>' → logprob: -11.250946044921875
    5. ',),' → logprob: -13.125946044921875
    6. '‌,' → logprob: -14.375946044921875
    7. ' ),' → logprob: -15.000946044921875
    8. '),(' → logprob: -15.000946044921875
    9. ')' → logprob: -15.125946044921875
    10. ' ' → logprob: -15.500946044921875

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022859513759613
    2. ' ' → logprob: -1.9102286100387573
    3. ')' → logprob: -12.910228729248047
    4. '  ' → logprob: -14.410228729248047
    5. '),' → logprob: -15.597728729248047
    6. '۰' → logprob: -15.722728729248047
    7. ' ' → logprob: -15.785228729248047
    8. '<|end|>' → logprob: -15.847728729248047
    9. '

' → logprob: -16.035228729248047
    10. ' 

' → logprob: -16.097728729248047

Token 78: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0002571673830971122
    2. ' ),' → logprob: -9.00025749206543
    3. '),(' → logprob: -9.00025749206543
    4. ')' → logprob: -12.00025749206543
    5. '),
' → logprob: -13.50025749206543
    6. '),

' → logprob: -14.12525749206543
    7. ')],' → logprob: -14.62525749206543
    8. '):' → logprob: -14.62525749206543
    9. ',' → logprob: -14.75025749206543
    10. '],' → logprob: -15.37525749206543

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00076114950934425
    2. '0' → logprob: -7.875761032104492
    3. ' ' → logprob: -7.875761032104492
    4. ')' → logprob: -15.500761032104492
    5. '   ' → logprob: -15.750761032104492
    6. '+' → logprob: -15.750761032104492
    7. '```' → logprob: -15.750761032104492
    8. '

' → logprob: -15.875761032104492
    9. '-' → logprob: -16.125761032104492
    10. ',' → logprob: -16.375761032104492

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04258036985993385
    2. '),(' → logprob: -3.2925803661346436
    3. '),' → logprob: -6.292580604553223
    4. ')' → logprob: -6.667580604553223
    5. '<|end|>' → logprob: -7.292580604553223
    6. ' ,' → logprob: -8.417580604553223
    7. '0' → logprob: -8.417580604553223
    8. ',)' → logprob: -8.792580604553223
    9. ',),' → logprob: -9.667580604553223
    10. ' ' → logprob: -10.667580604553223

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.9186317482963204e-05
    2. ' ' → logprob: -10.000049591064453
    3. '<|end|>' → logprob: -12.750049591064453
    4. ')' → logprob: -15.000049591064453
    5. ',' → logprob: -16.250049591064453
    6. '```' → logprob: -16.625049591064453
    7. '۰' → logprob: -16.812549591064453
    8. '  ' → logprob: -17.062549591064453
    9. '<|end|>' → logprob: -17.687549591064453
    10. '   ' → logprob: -17.812549591064453

Token 82: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6843433380126953
    2. ')' → logprob: -1.3093433380126953
    3. ')]' → logprob: -2.1843433380126953
    4. '),(' → logprob: -2.4343433380126953
    5. '):' → logprob: -3.8093433380126953
    6. ' ),' → logprob: -6.559343338012695
    7. ' )' → logprob: -7.309343338012695
    8. ')],' → logprob: -8.059343338012695
    9. '):(' → logprob: -8.934343338012695
    10. ' ):' → logprob: -9.059343338012695

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014692598779220134
    2. ' ' → logprob: -8.875146865844727
    3. '-' → logprob: -12.750146865844727
    4. ')' → logprob: -13.625146865844727
    5. ',' → logprob: -13.625146865844727
    6. '   ' → logprob: -14.875146865844727
    7. '  ' → logprob: -15.250146865844727
    8. '```' → logprob: -15.500146865844727
    9. '),' → logprob: -15.750146865844727
    10. '1' → logprob: -15.875146865844727

Token 84: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06212778389453888
    2. ',-' → logprob: -2.8121278285980225
    3. '<|end|>' → logprob: -9.687128067016602
    4. '1' → logprob: -10.312128067016602
    5. ' ,' → logprob: -10.562128067016602
    6. '-' → logprob: -12.187128067016602
    7. ',None' → logprob: -12.562128067016602
    8. ',)' → logprob: -12.687128067016602
    9. '),' → logprob: -13.437128067016602
    10. '<|end|>' → logprob: -13.437128067016602

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '<|end|>' → logprob: -13.000004768371582
    3. ',' → logprob: -13.875004768371582
    4. ' ' → logprob: -14.000004768371582
    5. ')' → logprob: -15.500004768371582
    6. '<|end|>' → logprob: -16.625003814697266
    7. '),' → logprob: -18.125003814697266
    8. '```' → logprob: -18.125003814697266
    9. ')>' → logprob: -18.875003814697266
    10. '  ' → logprob: -19.062503814697266

Token 86: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.009406832978129387
    2. '),' → logprob: -4.759407043457031
    3. ')' → logprob: -7.509407043457031
    4. ')]' → logprob: -8.884407043457031
    5. ' ),' → logprob: -9.884407043457031
    6. ',' → logprob: -10.009407043457031
    7. ')])' → logprob: -13.384407043457031
    8. '))' → logprob: -13.509407043457031
    9. '],[' → logprob: -13.634407043457031
    10. ' )' → logprob: -13.759407043457031

Token 87: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.070975071750581e-05
    2. ' ' → logprob: -10.500030517578125
    3. ')' → logprob: -13.750030517578125
    4. '0' → logprob: -13.875030517578125
    5. '```' → logprob: -14.937530517578125
    6. '<|end|>' → logprob: -15.875030517578125
    7. '+' → logprob: -16.000030517578125
    8. '-' → logprob: -16.750030517578125
    9. '),' → logprob: -17.250030517578125
    10. '   ' → logprob: -17.312530517578125

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033009357284754515
    2. '1' → logprob: -6.37830114364624
    3. ')]' → logprob: -7.00330114364624
    4. ')' → logprob: -7.62830114364624
    5. ',)' → logprob: -9.503300666809082
    6. '0' → logprob: -10.378300666809082
    7. '):' → logprob: -10.503300666809082
    8. ' ,' → logprob: -10.503300666809082
    9. ')])' → logprob: -11.753300666809082
    10. ' ' → logprob: -12.003300666809082

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.762356209335849e-05
    2. ' ' → logprob: -10.25003719329834
    3. '0' → logprob: -14.00003719329834
    4. '-' → logprob: -14.37503719329834
    5. ')' → logprob: -14.87503719329834
    6. '+' → logprob: -15.50003719329834
    7. '```' → logprob: -16.250038146972656
    8. '<|end|>' → logprob: -16.375038146972656
    9. '   ' → logprob: -17.000038146972656
    10. '  ' → logprob: -17.250038146972656

Token 90: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21562744677066803
    2. '):' → logprob: -1.7156274318695068
    3. ')]' → logprob: -4.340627670288086
    4. ' ):' → logprob: -7.840627670288086
    5. ' )' → logprob: -8.090627670288086
    6. ':' → logprob: -8.840627670288086
    7. '   ' → logprob: -9.340627670288086
    8. ')):' → logprob: -10.465627670288086
    9. ']):' → logprob: -10.465627670288086
    10. ']:' → logprob: -10.590627670288086

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021383915096521378
    2. '):' → logprob: -3.8963840007781982
    3. '       ' → logprob: -8.271384239196777
    4. ',' → logprob: -8.521384239196777
    5. '<|end|>' → logprob: -8.521384239196777
    6. ']:' → logprob: -9.146384239196777
    7. '   ' → logprob: -10.521384239196777
    8. ':
' → logprob: -10.771384239196777
    9. '<|end|>' → logprob: -11.896384239196777
    10. ' :' → logprob: -11.896384239196777

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13679948449134827
    2. '<|end|>' → logprob: -2.1367995738983154
    3. '   ' → logprob: -6.011799335479736
    4. ' ' → logprob: -6.136799335479736
    5. '    ' → logprob: -6.136799335479736
    6. '<|end|>' → logprob: -6.636799335479736
    7. ')' → logprob: -8.011799812316895
    8. ',' → logprob: -8.261799812316895
    9. '        
' → logprob: -8.261799812316895
    10. ':' → logprob: -8.761799812316895

Token 93: ' nr' (ID: 24055)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4760848581790924
    2. '=' → logprob: -0.97608482837677
    3. ',' → logprob: -6.2260847091674805
    4. '=r' → logprob: -11.10108470916748
    5. ' ,' → logprob: -12.22608470916748
    6. ' ' → logprob: -12.60108470916748
    7. '=n' → logprob: -13.47608470916748
    8. '=int' → logprob: -14.22608470916748
    9. '>' → logprob: -14.72608470916748
    10. ' =)' → logprob: -14.97608470916748

Token 95: ' nc' (ID: 39841)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.694634199142456
    2. ' c' → logprob: -0.694634199142456
    3. ' =' → logprob: -6.944634437561035
    4. '<|end|>' → logprob: -8.569634437561035
    5. ' ' → logprob: -9.069634437561035
    6. '=' → logprob: -9.069634437561035
    7. '  ' → logprob: -10.569634437561035
    8. '=c' → logprob: -10.819634437561035
    9. '    ' → logprob: -11.069634437561035
    10. '   ' → logprob: -11.194634437561035

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1797831803560257
    2. '=' → logprob: -1.8047832250595093
    3. ' ' → logprob: -10.80478286743164
    4. '<|end|>' → logprob: -11.67978286743164
    5. ')' → logprob: -13.05478286743164
    6. ',' → logprob: -13.17978286743164
    7. '=n' → logprob: -13.55478286743164
    8. '=r' → logprob: -14.17978286743164
    9. '=int' → logprob: -14.30478286743164
    10. '    ' → logprob: -14.55478286743164

Token 97: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.048593614250421524
    2. 'r' → logprob: -3.048593521118164
    3. ' ' → logprob: -12.173593521118164
    4. ' (' → logprob: -15.423593521118164
    5. '	r' → logprob: -16.048593521118164
    6. '<|end|>' → logprob: -16.048593521118164
    7. '(r' → logprob: -16.298593521118164
    8. ' ' → logprob: -16.548593521118164
    9. '  ' → logprob: -16.673593521118164
    10. '   ' → logprob: -16.798593521118164

Token 98: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519353926181793
    2. '+' → logprob: -1.501935362815857
    3. '<|end|>' → logprob: -13.126935005187988
    4. ' ' → logprob: -13.251935005187988
    5. '+r' → logprob: -13.501935005187988
    6. '+d' → logprob: -15.501935005187988
    7. ' +
' → logprob: -16.126935958862305
    8. ' +=' → logprob: -16.251935958862305
    9. ' plus' → logprob: -16.251935958862305
    10. 'dr' → logprob: -16.501935958862305

Token 99: 'dr' (ID: 4541)
  Prédit: 'dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -3.583550642360933e-05
    2. ' dr' → logprob: -10.250036239624023
    3. '	dr' → logprob: -15.125036239624023
    4. ' ' → logprob: -16.750036239624023
    5. '<|end|>' → logprob: -16.875036239624023
    6. '(dr' → logprob: -18.250036239624023
    7. '_dr' → logprob: -18.375036239624023
    8. 'd' → logprob: -18.375036239624023
    9. '  ' → logprob: -19.250036239624023
    10. '   ' → logprob: -19.375036239624023

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001298927003517747
    2. ',n' → logprob: -7.126298904418945
    3. ' ,' → logprob: -8.251298904418945
    4. '<|end|>' → logprob: -8.501298904418945
    5. ',c' → logprob: -10.876298904418945
    6. ' ' → logprob: -12.626298904418945
    7. '<|end|>' → logprob: -12.751298904418945
    8. ',
' → logprob: -13.751298904418945
    9. '‌,' → logprob: -14.626298904418945
    10. ',num' → logprob: -14.876298904418945

Token 101: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20143720507621765
    2. 'c' → logprob: -1.70143723487854
    3. '   ' → logprob: -11.326436996459961
    4. ' ' → logprob: -11.951436996459961
    5. '    ' → logprob: -12.951436996459961
    6. '  ' → logprob: -13.326436996459961
    7. '	c' → logprob: -13.951436996459961
    8. '       ' → logprob: -16.07643699645996
    9. '+c' → logprob: -16.20143699645996
    10. '     ' → logprob: -16.82643699645996

Token 102: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.314625690924004e-05
    2. ' +' → logprob: -10.250073432922363
    3. '+c' → logprob: -10.250073432922363
    4. '<|end|>' → logprob: -13.125073432922363
    5. '+C' → logprob: -15.750073432922363
    6. '+=' → logprob: -17.000072479248047
    7. '+
' → logprob: -17.375072479248047
    8. '+r' → logprob: -17.625072479248047
    9. '+d' → logprob: -17.625072479248047
    10. '+xml' → logprob: -18.125072479248047

Token 103: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.002486476907506585
    2. ' dc' → logprob: -6.002486705780029
    3. '1' → logprob: -12.002486228942871
    4. '(dc' → logprob: -12.752486228942871
    5. '.dc' → logprob: -14.377486228942871
    6. '0' → logprob: -14.752486228942871
    7. ' ' → logprob: -15.127486228942871
    8. '_dc' → logprob: -15.127486228942871
    9. '<|end|>' → logprob: -15.502486228942871
    10. 'cc' → logprob: -17.502487182617188

Token 104: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16422328352928162
    2. ' if' → logprob: -2.4142231941223145
    3. '<|end|>' → logprob: -3.1642231941223145
    4. 'if' (adapté à ' if') → logprob: -4.2892231941223145
    5. ' ' → logprob: -5.7892231941223145
    6. '   ' → logprob: -6.4142231941223145
    7. '        
' → logprob: -8.289223670959473
    8. '```' → logprob: -8.414223670959473
    9. '<|end|>' → logprob: -8.414223670959473
    10. ' 
' → logprob: -9.039223670959473

Token 107: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11286330223083496
    2. '0' → logprob: -2.237863302230835
    3. ' ' → logprob: -10.362863540649414
    4. ' (' → logprob: -12.737863540649414
    5. '  ' → logprob: -13.237863540649414
    6. ' nr' → logprob: -13.487863540649414
    7. '(' → logprob: -13.737863540649414
    8. 'nr' → logprob: -14.362863540649414
    9. '   ' → logprob: -14.862863540649414
    10. '012' → logprob: -15.987863540649414

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028083212673664093
    2. ' ' → logprob: -5.877808094024658
    3. 'nr' → logprob: -13.877808570861816
    4. '(' → logprob: -14.002808570861816
    5. '   ' → logprob: -14.502808570861816
    6. ' (' → logprob: -15.377808570861816
    7. ' ' → logprob: -15.502808570861816
    8. '  ' → logprob: -15.877808570861816
    9. ' nr' → logprob: -15.877808570861816
    10. '012' → logprob: -16.0028076171875

Token 109: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.061981018632650375
    2. '<=' → logprob: -2.811980962753296
    3. ' ' → logprob: -12.186981201171875
    4. '<|end|>' → logprob: -13.186981201171875
    5. ')<=' → logprob: -13.936981201171875
    6. ' <=",' → logprob: -14.061981201171875
    7. ',' → logprob: -14.436981201171875
    8. ')' → logprob: -14.436981201171875
    9. ']<=' → logprob: -14.686981201171875
    10. ' ' → logprob: -14.936981201171875

Token 110: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.008626040071249008
    2. ' nr' → logprob: -4.7586259841918945
    3. 'nc' → logprob: -11.508625984191895
    4. '_nr' → logprob: -14.008625984191895
    5. 'n' → logprob: -15.133625984191895
    6. '.nr' → logprob: -15.883625984191895
    7. ' nc' → logprob: -16.25862693786621
    8. ' ' → logprob: -18.25862693786621
    9. 'nt' → logprob: -18.75862693786621
    10. ' ' → logprob: -18.75862693786621

Token 111: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0895833820104599
    2. ' <' → logprob: -2.464583396911621
    3. ' and' → logprob: -7.589583396911621
    4. 'and' → logprob: -9.214583396911621
    5. '<|end|>' → logprob: -10.839583396911621
    6. '<len' → logprob: -12.214583396911621
    7. '<size' → logprob: -12.714583396911621
    8. ' ' → logprob: -12.964583396911621
    9. '<n' → logprob: -13.714583396911621
    10. '[' → logprob: -13.714583396911621

Token 112: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.004113188479095697
    2. ' ' → logprob: -6.00411319732666
    3. '4' → logprob: -6.75411319732666
    4. '6' → logprob: -7.75411319732666
    5. '2' → logprob: -11.37911319732666
    6. '1' → logprob: -11.50411319732666
    7. '   ' → logprob: -11.75411319732666
    8. '8' → logprob: -12.62911319732666
    9. '7' → logprob: -12.75411319732666
    10. '10' → logprob: -13.50411319732666

Token 113: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005123580805957317
    2. '6' → logprob: -5.755123615264893
    3. '4' → logprob: -6.255123615264893
    4. '7' → logprob: -12.130123138427734
    5. ' ' → logprob: -12.255123138427734
    6. '8' → logprob: -12.380123138427734
    7. '2' → logprob: -13.130123138427734
    8. '10' → logprob: -13.255123138427734
    9. '   ' → logprob: -13.255123138427734
    10. '3' → logprob: -13.755123138427734

Token 114: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02975500375032425
    2. 'and' → logprob: -3.529755115509033
    3. ' ' → logprob: -12.404754638671875
    4. '   ' → logprob: -15.779754638671875
    5. '	and' → logprob: -15.904754638671875
    6. '<|end|>' → logprob: -17.154754638671875
    7. '0' → logprob: -17.279754638671875
    8. '    ' → logprob: -17.529754638671875
    9. '  ' → logprob: -17.904754638671875
    10. '       ' → logprob: -18.154754638671875

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4741825759410858
    2. ' ' → logprob: -0.9741826057434082
    3. '   ' → logprob: -10.09918212890625
    4. '  ' → logprob: -10.22418212890625
    5. '    ' → logprob: -11.34918212890625
    6. '4' → logprob: -11.84918212890625
    7. ' ' → logprob: -12.97418212890625
    8. '     ' → logprob: -13.59918212890625
    9. '       ' → logprob: -13.72418212890625
    10. '      ' → logprob: -14.03668212890625

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.049591485410928726
    2. ' ' → logprob: -3.049591541290283
    3. '4' → logprob: -6.924591541290283
    4. '   ' → logprob: -11.549591064453125
    5. 'nc' → logprob: -12.674591064453125
    6. ' nc' → logprob: -13.049591064453125
    7. '  ' → logprob: -13.674591064453125
    8. '    ' → logprob: -14.112091064453125
    9. '1' → logprob: -14.924591064453125
    10. '
' → logprob: -14.987091064453125

Token 117: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04111338034272194
    2. '<=' → logprob: -3.7911133766174316
    3. ' ' → logprob: -4.416113376617432
    4. ' <' → logprob: -5.916113376617432
    5. 'c' → logprob: -7.166113376617432
    6. '<' → logprob: -7.416113376617432
    7. '0' → logprob: -7.916113376617432
    8. '        ' → logprob: -8.16611385345459
    9. ' nc' → logprob: -8.66611385345459
    10. '   ' → logprob: -8.91611385345459

Token 118: ' nc' (ID: 39841)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.009759039618074894
    2. ' ' → logprob: -4.634758949279785
    3. '   ' → logprob: -13.259758949279785
    4. 'c' → logprob: -15.009758949279785
    5. 'nc' → logprob: -15.259758949279785
    6. '  ' → logprob: -15.509758949279785
    7. ' nc' → logprob: -16.8222599029541
    8. 'n' → logprob: -17.0097599029541
    9. 'col' → logprob: -17.0722599029541
    10. '1' → logprob: -17.0722599029541

Token 119: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11283423006534576
    2. '<' → logprob: -2.2378342151641846
    3. '4' → logprob: -11.987833976745605
    4. ' ' → logprob: -12.362833976745605
    5. '0' → logprob: -14.487833976745605
    6. '<int' → logprob: -15.987833976745605
    7. '<len' → logprob: -16.237834930419922
    8. ' ' → logprob: -16.362834930419922
    9. '<size' → logprob: -16.487834930419922
    10. '<n' → logprob: -16.737834930419922

Token 120: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.05488758534193039
    2. ' ' → logprob: -2.929887533187866
    3. '   ' → logprob: -13.242387771606445
    4. '5' → logprob: -13.804887771606445
    5. '```' → logprob: -14.554887771606445
    6. '  ' → logprob: -15.492387771606445
    7. ' ' → logprob: -16.054887771606445
    8. '' → logprob: -16.429887771606445
    9. '<|end|>' → logprob: -16.429887771606445
    10. '.' → logprob: -16.679887771606445

Token 121: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00023154958034865558
    2. ' ' → logprob: -8.375231742858887
    3. '   ' → logprob: -15.375231742858887
    4. '```' → logprob: -15.750231742858887
    5. '۴' → logprob: -16.50023078918457
    6. '5' → logprob: -16.62523078918457
    7. '' → logprob: -16.87523078918457
    8. '<|end|>' → logprob: -16.93773078918457
    9. 'python' → logprob: -17.18773078918457
    10. '४' → logprob: -17.25023078918457

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015444930642843246
    2. ' and' → logprob: -5.015444755554199
    3. ':
' → logprob: -5.390444755554199
    4. '           ' → logprob: -6.265444755554199
    5. '       ' → logprob: -6.265444755554199
    6. ' :' → logprob: -9.0154447555542
    7. ',' → logprob: -9.3904447555542
    8. '):' → logprob: -9.5154447555542
    9. 'and' → logprob: -11.2654447555542
    10. '):
' → logprob: -12.1404447555542

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012214169837534428
    2. '       ' → logprob: -7.501221179962158
    3. '<|end|>' → logprob: -8.126221656799316
    4. '            
' → logprob: -8.376221656799316
    5. '        
' → logprob: -10.501221656799316
    6. '<|end|>' → logprob: -11.001221656799316
    7. '               ' → logprob: -11.126221656799316
    8. '```' → logprob: -11.251221656799316
    9. ' res' → logprob: -11.626221656799316
    10. ' ' → logprob: -11.751221656799316

Token 124: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.3599986732006073
    2. ' res' → logprob: -1.2349987030029297
    3. '           ' → logprob: -5.23499870300293
    4. '               ' → logprob: -5.23499870300293
    5. '       ' → logprob: -7.85999870300293
    6. '
' → logprob: -7.98499870300293
    7. '            
' → logprob: -10.48499870300293
    8. ' 
' → logprob: -11.10999870300293
    9. '	res' → logprob: -11.23499870300293
    10. '                
' → logprob: -11.35999870300293

Token 125: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004099773708730936
    2. '.' → logprob: -5.5040998458862305
    3. '.add' → logprob: -12.12909984588623
    4. ' .' → logprob: -12.37909984588623
    5. '.app' → logprob: -12.50409984588623
    6. '.ap' → logprob: -13.00409984588623
    7. '.extend' → logprob: -13.12909984588623
    8. '.Append' → logprob: -13.25409984588623
    9. '.py' → logprob: -14.00409984588623
    10. ').' → logprob: -14.87909984588623

Token 126: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013519029598683119
    2. 'nr' → logprob: -7.126351833343506
    3. ' nr' → logprob: -7.751351833343506
    4. '(' → logprob: -9.751352310180664
    5. ' (' → logprob: -10.001352310180664
    6. '((' → logprob: -12.251352310180664
    7. 'n' → logprob: -12.376352310180664
    8. '_nr' → logprob: -13.626352310180664
    9. '.nr' → logprob: -13.876352310180664
    10. '	n' → logprob: -14.876352310180664

Token 127: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004097003838978708
    2. 'w' → logprob: -9.375410079956055
    3. 't' → logprob: -9.625410079956055
    4. 'nr' → logprob: -9.750410079956055
    5. 'rr' → logprob: -10.625410079956055
    6. ')' → logprob: -10.625410079956055
    7. '*' → logprob: -10.750410079956055
    8. '+' → logprob: -10.875410079956055
    9. '   ' → logprob: -11.375410079956055
    10. 'rw' → logprob: -11.500410079956055

Token 128: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.008614926598966122
    2. ' *' → logprob: -4.758615016937256
    3. '```' → logprob: -15.633614540100098
    4. '4' → logprob: -15.883614540100098
    5. '**' → logprob: -16.508615493774414
    6. ' ' → logprob: -16.883615493774414
    7. '   ' → logprob: -17.383615493774414
    8. '*
' → logprob: -18.383615493774414
    9. '"*' → logprob: -18.758615493774414
    10. ' ' → logprob: -18.883615493774414

Token 129: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.625003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '' → logprob: -19.500003814697266
    6. '۴' → logprob: -19.750003814697266
    7. '  ' → logprob: -20.000003814697266
    8. '<|end|>' → logprob: -20.125003814697266
    9. 'c' → logprob: -20.250003814697266
    10. '４' → logprob: -20.562503814697266

Token 130: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029757557436823845
    2. ' +' → logprob: -3.529757499694824
    3. '+c' → logprob: -12.029757499694824
    4. '+n' → logprob: -15.029757499694824
    5. '+
' → logprob: -15.154757499694824
    6. '+xml' → logprob: -15.779757499694824
    7. '＋' → logprob: -16.15475845336914
    8. ' plus' → logprob: -16.90475845336914
    9. ' ' → logprob: -16.90475845336914
    10. ' ' → logprob: -17.77975845336914

Token 131: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.00020509003661572933
    2. ' nc' → logprob: -8.500205039978027
    3. '_nc' → logprob: -13.750205039978027
    4. '.nc' → logprob: -15.500205039978027
    5. 'Nc' → logprob: -16.000205993652344
    6. '
' → logprob: -16.250205993652344
    7. ' ' → logprob: -16.875205993652344
    8. '   ' → logprob: -17.125205993652344
    9. '  ' → logprob: -17.500205993652344
    10. '    ' → logprob: -18.375205993652344

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001847062085289508
    2. ' )' → logprob: -9.000185012817383
    3. ')
' → logprob: -9.750185012817383
    4. ')return' → logprob: -13.500185012817383
    5. '   ' → logprob: -14.250185012817383
    6. '       ' → logprob: -15.625185012817383
    7. '))' → logprob: -16.000185012817383
    8. ')`' → logprob: -16.125185012817383
    9. ' )
' → logprob: -16.625185012817383
    10. ')

' → logprob: -16.625185012817383

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000585918256547302
    2. 'return' → logprob: -8.375585556030273
    3. '	return' → logprob: -9.125585556030273
    4. '<|end|>' → logprob: -9.375585556030273
    5. ' return' → logprob: -9.500585556030273
    6. '    
' → logprob: -10.500585556030273
    7. ',' → logprob: -11.375585556030273
    8. ')' → logprob: -11.500585556030273
    9. '       ' → logprob: -11.750585556030273
    10. '.' → logprob: -12.250585556030273

Token 134: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.115268275141716
    2. 'return' → logprob: -2.2402682304382324
    3. '	return' → logprob: -6.990268230438232
    4. 'for' → logprob: -7.115268230438232
    5. '    
' → logprob: -8.61526870727539
    6. '```' → logprob: -8.61526870727539
    7. ' return' → logprob: -8.74026870727539
    8. '
' → logprob: -9.61526870727539
    9. ' ' → logprob: -10.61526870727539
    10. '<|end|>' → logprob: -11.24026870727539

Token 135: ' diagonal' (ID: 71638)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5428216457366943
    2. '#' → logprob: -1.0428216457366943
    3. 'di' → logprob: -3.0428216457366943
    4. '   ' → logprob: -4.417821884155273
    5. ' for' → logprob: -5.917821884155273
    6. ' diagonal' → logprob: -6.542821884155273
    7. 'diag' → logprob: -6.917821884155273
    8. ' #' → logprob: -8.167821884155273
    9. 'return' → logprob: -8.167821884155273
    10. 'def' → logprob: -8.417821884155273

Token 136: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12070447206497192
    2. 'for' → logprob: -2.870704412460327
    3. '
' → logprob: -2.995704412460327
    4. '   ' → logprob: -5.120704650878906
    5. '<|end|>' → logprob: -7.120704650878906
    6. '  
' → logprob: -9.870704650878906
    7. 's' → logprob: -10.245704650878906
    8. 'For' → logprob: -10.370704650878906
    9. '    
' → logprob: -10.620704650878906
    10. '	for' → logprob: -10.745704650878906

Token 137: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4802284836769104
    2. 'for' → logprob: -0.9802284836769104
    3. '   ' → logprob: -5.105228424072266
    4. '<|end|>' → logprob: -10.105228424072266
    5. '
' → logprob: -11.230228424072266
    6. '	for' → logprob: -11.980228424072266
    7. '```' → logprob: -12.730228424072266
    8. 'For' → logprob: -13.855228424072266
    9. ' ' → logprob: -13.855228424072266
    10. '<|end|>' → logprob: -14.355228424072266

Token 138: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5768102407455444
    2. ' for' → logprob: -1.0768102407455444
    3. '   ' → logprob: -2.326810359954834
    4. '	for' → logprob: -11.076809883117676
    5. '
' → logprob: -11.951809883117676
    6. '    
' → logprob: -13.451809883117676
    7. ' ' → logprob: -13.701809883117676
    8. '  ' → logprob: -14.826809883117676
    9. '```' → logprob: -15.326809883117676
    10. '       ' → logprob: -15.576809883117676

Token 139: ' dr' (ID: 1498)
  Prédit: ' dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.015227762050926685
    2. 'dr' → logprob: -4.265227794647217
    3. '(dr' → logprob: -7.015227794647217
    4. ' (' → logprob: -9.015227317810059
    5. '(' → logprob: -10.765227317810059
    6. ' ' → logprob: -12.015227317810059
    7. '	dr' → logprob: -12.515227317810059
    8. '-' → logprob: -13.015227317810059
    9. '1' → logprob: -13.265227317810059
    10. '(-' → logprob: -13.515227317810059

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009102103300392628
    2. ' in' → logprob: -5.259101867675781
    3. ' ,' → logprob: -6.134101867675781
    4. 'in' → logprob: -6.384101867675781
    5. ',d' → logprob: -14.009101867675781
    6. ' ' → logprob: -14.384101867675781
    7. '1' → logprob: -14.634101867675781
    8. '<|end|>' → logprob: -14.634101867675781
    9. ',value' → logprob: -15.134101867675781
    10. ',
' → logprob: -15.134101867675781

Token 141: ' dc' (ID: 37843)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.23044224083423615
    2. ' dc' → logprob: -1.6054422855377197
    3. '-d' → logprob: -5.855442047119141
    4. '-' → logprob: -6.355442047119141
    5. ' -' → logprob: -8.48044204711914
    6. '_dc' → logprob: -9.23044204711914
    7. ' ' → logprob: -9.85544204711914
    8. '[-' → logprob: -11.10544204711914
    9. '(dc' → logprob: -11.10544204711914
    10. '.dc' → logprob: -12.10544204711914

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018188809975981712
    2. 'in' → logprob: -4.018188953399658
    3. ' ' → logprob: -10.3931884765625
    4. ',' → logprob: -13.8931884765625
    5. '   ' → logprob: -13.8931884765625
    6. 'In' → logprob: -14.0181884765625
    7. '```' → logprob: -14.0181884765625
    8. '1' → logprob: -14.3931884765625
    9. ' ,' → logprob: -14.3931884765625
    10. '  ' → logprob: -14.3931884765625

Token 143: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6946147680282593
    2. ' [' → logprob: -0.6946147680282593
    3. '[-' → logprob: -6.694614887237549
    4. ' [-' → logprob: -9.06961441040039
    5. '[(' → logprob: -9.56961441040039
    6. ' [(' → logprob: -10.69461441040039
    7. ' ' → logprob: -11.69461441040039
    8. '[
' → logprob: -12.56961441040039
    9. ' (-' → logprob: -12.81961441040039
    10. '[((' → logprob: -13.06961441040039

Token 144: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00033677343162707984
    2. ' (-' → logprob: -8.000336647033691
    3. '   ' → logprob: -13.750336647033691
    4. '-' → logprob: -15.625336647033691
    5. '(' → logprob: -16.250337600708008
    6. '((-' → logprob: -18.000337600708008
    7. ' ' → logprob: -18.500337600708008
    8. '
' → logprob: -19.250337600708008
    9. '  ' → logprob: -19.250337600708008
    10. '*(-' → logprob: -19.625337600708008

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.500012397766113
    3. '<|end|>' → logprob: -14.437512397766113
    4. '-' → logprob: -14.750012397766113
    5. '
' → logprob: -15.062512397766113
    6. ',' → logprob: -16.250011444091797
    7. '{' → logprob: -16.437511444091797
    8. '2' → logprob: -16.625011444091797
    9. '১' → logprob: -16.625011444091797
    10. '۱' → logprob: -16.625011444091797

Token 146: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0700172409415245
    2. ',' → logprob: -2.6950173377990723
    3. '-' → logprob: -10.695016860961914
    4. ' ,-' → logprob: -10.945016860961914
    5. ' ,' → logprob: -11.070016860961914
    6. '<|end|>' → logprob: -12.070016860961914
    7. ',-

' → logprob: -12.570016860961914
    8. ',-
' → logprob: -13.070016860961914
    9. ',
' → logprob: -13.320016860961914
    10. ',#' → logprob: -13.445016860961914

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -15.437505722045898
    4. ',' → logprob: -15.812505722045898
    5. '<|end|>' → logprob: -16.9375057220459
    6. ')' → logprob: -17.0000057220459
    7. '-' → logprob: -17.1250057220459
    8. '۱' → logprob: -17.7500057220459
    9. '１' → logprob: -18.0000057220459
    10. '১' → logprob: -18.0000057220459

Token 148: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.5764842629432678
    2. '),' → logprob: -0.8264842629432678
    3. ',' → logprob: -7.826484203338623
    4. ' ),' → logprob: -8.951484680175781
    5. '),
' → logprob: -11.826484680175781
    6. ',),' → logprob: -13.076484680175781
    7. '],[' → logprob: -13.326484680175781
    8. ')' → logprob: -13.701484680175781
    9. ' ,' → logprob: -14.201484680175781
    10. '   ' → logprob: -14.701484680175781

Token 149: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.010368362069129944
    2. ' (-' → logprob: -5.010368347167969
    3. '(' → logprob: -5.635368347167969
    4. ' (' → logprob: -9.510368347167969
    5. '-' → logprob: -12.885368347167969
    6. ' -' → logprob: -15.885368347167969
    7. '(+' → logprob: -16.76036834716797
    8. ' ' → logprob: -16.76036834716797
    9. '1' → logprob: -17.26036834716797
    10. ' (+' → logprob: -18.76036834716797

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -11.500022888183594
    3. '<|end|>' → logprob: -11.750022888183594
    4. '2' → logprob: -14.250022888183594
    5. ',' → logprob: -14.250022888183594
    6. '<|end|>' → logprob: -14.875022888183594
    7. '0' → logprob: -15.312522888183594
    8. ')' → logprob: -15.687522888183594
    9. '{' → logprob: -15.875022888183594
    10. '   ' → logprob: -15.875022888183594

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009769308380782604
    2. '1' → logprob: -4.634769439697266
    3. ' ,' → logprob: -11.384769439697266
    4. ' ' → logprob: -14.134769439697266
    5. ',+' → logprob: -14.384769439697266
    6. ',
' → logprob: -15.384769439697266
    7. '0' → logprob: -15.509769439697266
    8. ',-' → logprob: -16.259769439697266
    9. ',

' → logprob: -17.322269439697266
    10. '```' → logprob: -17.759769439697266

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -10.875020027160645
    3. '+' → logprob: -14.250020027160645
    4. '<|end|>' → logprob: -14.375020027160645
    5. '0' → logprob: -15.750020027160645
    6. '-' → logprob: -16.75002098083496
    7. '```' → logprob: -18.31252098083496
    8. ',' → logprob: -18.75002098083496
    9. '2' → logprob: -18.81252098083496
    10. '
' → logprob: -18.93752098083496

Token 153: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7069634199142456
    2. '),(' → logprob: -0.7069634199142456
    3. ',' → logprob: -4.331963539123535
    4. ' ),' → logprob: -8.081963539123535
    5. '):' → logprob: -8.956963539123535
    6. ',(' → logprob: -10.331963539123535
    7. ' ,' → logprob: -10.456963539123535
    8. ')' → logprob: -10.956963539123535
    9. '],' → logprob: -11.206963539123535
    10. '],[' → logprob: -11.581963539123535

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. ' ' → logprob: -10.25003719329834
    3. '```' → logprob: -14.75003719329834
    4. '
' → logprob: -15.25003719329834
    5. '+' → logprob: -15.62503719329834
    6. ',' → logprob: -15.87503719329834
    7. '0' → logprob: -16.125036239624023
    8. '-' → logprob: -16.375036239624023
    9. '<|end|>' → logprob: -16.625036239624023
    10. '   ' → logprob: -17.312536239624023

Token 155: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.08970683813095093
    2. ',' → logprob: -3.0897068977355957
    3. '-' → logprob: -3.2147068977355957
    4. '1' → logprob: -9.339706420898438
    5. '<|end|>' → logprob: -11.214706420898438
    6. ' -' → logprob: -11.464706420898438
    7. ',-
' → logprob: -13.339706420898438
    8. ',-

' → logprob: -14.339706420898438
    9. '",-' → logprob: -14.339706420898438
    10. ',
' → logprob: -14.589706420898438

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.625017166137695
    3. '<|end|>' → logprob: -12.000017166137695
    4. '-' → logprob: -13.750017166137695
    5. '<|end|>' → logprob: -15.250017166137695
    6. '```' → logprob: -16.187517166137695
    7. ' -' → logprob: -16.750017166137695
    8. '...' → logprob: -17.125017166137695
    9. ')' → logprob: -17.187517166137695
    10. ',' → logprob: -17.312517166137695

Token 157: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0002683688362594694
    2. '),' → logprob: -8.25026798248291
    3. ' ),' → logprob: -12.00026798248291
    4. ',' → logprob: -14.75026798248291
    5. '(' → logprob: -15.75026798248291
    6. ',(' → logprob: -16.250268936157227
    7. '],[' → logprob: -16.500268936157227
    8. '),
' → logprob: -16.625268936157227
    9. ' ' → logprob: -17.750268936157227
    10. '#' → logprob: -17.750268936157227

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.811348480870947e-05
    2. ' ' → logprob: -10.00004768371582
    3. '<|end|>' → logprob: -13.75004768371582
    4. '-' → logprob: -14.62504768371582
    5. ',' → logprob: -15.00004768371582
    6. '```' → logprob: -15.25004768371582
    7. ')' → logprob: -15.50004768371582
    8. '   ' → logprob: -16.75004768371582
    9. '
' → logprob: -16.75004768371582
    10. '+' → logprob: -16.87504768371582

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.542423165636137e-05
    2. '1' → logprob: -9.500085830688477
    3. ' ,' → logprob: -12.000085830688477
    4. '<|end|>' → logprob: -12.375085830688477
    5. ',
' → logprob: -16.250085830688477
    6. ')' → logprob: -17.375085830688477
    7. ' ' → logprob: -17.750085830688477
    8. '<|end|>' → logprob: -18.000085830688477
    9. '```' → logprob: -18.750085830688477
    10. '0' → logprob: -18.875085830688477

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.375015258789062
    3. ')' → logprob: -12.875015258789062
    4. '<|end|>' → logprob: -14.125015258789062
    5. '```' → logprob: -17.375015258789062
    6. '+' → logprob: -17.875015258789062
    7. '">' → logprob: -18.250015258789062
    8. ']' → logprob: -18.500015258789062
    9. '<|end|>' → logprob: -18.500015258789062
    10. ')]' → logprob: -18.625015258789062

Token 161: ')]' (ID: 15710)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4817834496498108
    2. ')' → logprob: -0.9817834496498108
    3. ')]' → logprob: -5.106783390045166
    4. ' ):' → logprob: -7.356783390045166
    5. ']:' → logprob: -7.606783390045166
    6. '):
' → logprob: -8.856783866882324
    7. ' )' → logprob: -9.231783866882324
    8. '   ' → logprob: -9.481783866882324
    9. ']):' → logprob: -9.606783866882324
    10. ':' → logprob: -9.981783866882324

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004992632195353508
    2. ':
' → logprob: -5.379992485046387
    3. '       ' → logprob: -8.379992485046387
    4. ',' → logprob: -10.004992485046387
    5. '):' → logprob: -10.254992485046387
    6. '<|end|>' → logprob: -10.379992485046387
    7. '   ' → logprob: -11.629992485046387
    8. ':

' → logprob: -12.004992485046387
    9. '):
' → logprob: -12.129992485046387
    10. ' :' → logprob: -12.379992485046387

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000660015270113945
    2. '<|end|>' → logprob: -7.875659942626953
    3. '    ' → logprob: -9.750659942626953
    4. '   ' → logprob: -9.875659942626953
    5. ',' → logprob: -10.000659942626953
    6. '<|end|>' → logprob: -10.750659942626953
    7. '      ' → logprob: -10.875659942626953
    8. '
' → logprob: -11.125659942626953
    9. '        
' → logprob: -11.250659942626953
    10. ')' → logprob: -11.500659942626953

Token 164: ' nr' (ID: 24055)
  Prédit: ' nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nr' → logprob: -0.055475544184446335
    2. 'nr' (adapté à ' nr') → logprob: -3.0554754734039307
    3. '       ' → logprob: -5.05547571182251
    4. '   ' → logprob: -8.680475234985352
    5. '
' → logprob: -9.555475234985352
    6. '           ' → logprob: -9.930475234985352
    7. '    ' → logprob: -10.055475234985352
    8. 'n' → logprob: -10.555475234985352
    9. '        ' → logprob: -10.805475234985352
    10. ' if' → logprob: -10.930475234985352

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16991941630840302
    2. '=' → logprob: -1.9199193716049194
    3. ' =' → logprob: -4.669919490814209
    4. ' ,' → logprob: -8.91991901397705
    5. '<|end|>' → logprob: -9.04491901397705
    6. ' ' → logprob: -11.41991901397705
    7. ',n' → logprob: -13.04491901397705
    8. '   ' → logprob: -13.16991901397705
    9. ',
' → logprob: -13.29491901397705
    10. ',r' → logprob: -13.41991901397705

Token 166: ' nc' (ID: 39841)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.288862407207489
    2. ' c' → logprob: -1.4138624668121338
    3. 'r' → logprob: -4.913862228393555
    4. ' r' → logprob: -8.163862228393555
    5. ' ' → logprob: -11.163862228393555
    6. 'rc' → logprob: -11.538862228393555
    7. '   ' → logprob: -11.538862228393555
    8. '  ' → logprob: -11.788862228393555
    9. '    ' → logprob: -12.038862228393555
    10. 'nc' → logprob: -12.788862228393555

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.57594233751297
    2. '=' → logprob: -0.82594233751297
    3. ' ' → logprob: -13.075942039489746
    4. '   ' → logprob: -14.700942039489746
    5. ',' → logprob: -15.575942039489746
    6. '    ' → logprob: -16.200942993164062
    7. ' =
' → logprob: -16.575942993164062
    8. ')' → logprob: -17.325942993164062
    9. '```' → logprob: -17.700942993164062
    10. '<|end|>' → logprob: -17.700942993164062

Token 168: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.2254246026277542
    2. 'r' → logprob: -1.6004246473312378
    3. ' ' → logprob: -12.600424766540527
    4. '   ' → logprob: -13.225424766540527
    5. '<|end|>' → logprob: -13.475424766540527
    6. '	r' → logprob: -14.225424766540527
    7. '  ' → logprob: -14.662924766540527
    8. 'dr' → logprob: -14.662924766540527
    9. '(r' → logprob: -14.787924766540527
    10. ' ' → logprob: -15.037924766540527

Token 169: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07069189846515656
    2. '-' → logprob: -2.6956918239593506
    3. ' +' → logprob: -7.57069206237793
    4. '+-' → logprob: -8.57069206237793
    5. ' -' → logprob: -10.57069206237793
    6. '-dr' → logprob: -11.57069206237793
    7. ' dr' → logprob: -12.44569206237793
    8. '+
' → logprob: -12.44569206237793
    9. 'dr' → logprob: -12.69569206237793
    10. '+r' → logprob: -13.44569206237793

Token 170: 'dr' (ID: 4541)
  Prédit: 'dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.0012221322394907475
    2. 'dc' → logprob: -7.626222133636475
    3. '-' → logprob: -8.001221656799316
    4. ' dr' → logprob: -8.001221656799316
    5. '1' → logprob: -10.251221656799316
    6. 'd' → logprob: -11.376221656799316
    7. ' ' → logprob: -11.751221656799316
    8. '-dr' → logprob: -13.126221656799316
    9. ' -' → logprob: -13.501221656799316
    10. '(dr' → logprob: -14.001221656799316

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.710618905955926e-05
    2. ' ,' → logprob: -9.750097274780273
    3. ',n' → logprob: -10.375097274780273
    4. ',c' → logprob: -12.000097274780273
    5. ',
' → logprob: -13.625097274780273
    6. '       ' → logprob: -16.125097274780273
    7. '<|end|>' → logprob: -16.125097274780273
    8. ' ' → logprob: -17.250097274780273
    9. ',r' → logprob: -18.250097274780273
    10. '   ' → logprob: -18.250097274780273

Token 172: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022808849811554
    2. ' c' → logprob: -1.9102281332015991
    3. ' ' → logprob: -13.16022777557373
    4. '   ' → logprob: -13.53522777557373
    5. '       ' → logprob: -15.53522777557373
    6. '	c' → logprob: -15.91022777557373
    7. '    ' → logprob: -15.91022777557373
    8. '
' → logprob: -15.91022777557373
    9. '  ' → logprob: -16.410228729248047
    10. ' ' → logprob: -16.910228729248047

Token 173: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.040457421680912e-05
    2. ' +' → logprob: -9.625070571899414
    3. '+c' → logprob: -12.500070571899414
    4. '+
' → logprob: -14.875070571899414
    5. ',' → logprob: -16.500070571899414
    6. 'c' → logprob: -17.250070571899414
    7. ' ' → logprob: -17.250070571899414
    8. '+

' → logprob: -18.125070571899414
    9. '
' → logprob: -18.250070571899414
    10. '  ' → logprob: -18.625070571899414

Token 174: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.00030185774085111916
    2. ' dc' → logprob: -8.1253023147583
    3. 'dr' → logprob: -13.2503023147583
    4. '(dc' → logprob: -13.5003023147583
    5. '.dc' → logprob: -14.3753023147583
    6. ' ' → logprob: -14.5003023147583
    7. '_dc' → logprob: -14.6253023147583
    8. '1' → logprob: -14.7503023147583
    9. 'd' → logprob: -15.1253023147583
    10. 'c' → logprob: -16.500301361083984

Token 175: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07113099843263626
    2. ',' → logprob: -2.6961309909820557
    3. ' if' → logprob: -6.946131229400635
    4. 'if' → logprob: -8.571130752563477
    5. '<|end|>' → logprob: -11.321130752563477
    6. ' ,' → logprob: -11.571130752563477
    7. '   ' → logprob: -11.946130752563477
    8. '           ' → logprob: -12.446130752563477
    9. ',
' → logprob: -13.321130752563477
    10. '      ' → logprob: -13.571130752563477

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005462417611852288
    2. ' if' → logprob: -7.750546455383301
    3. 'if' → logprob: -9.7505464553833
    4. '   ' → logprob: -10.7505464553833
    5. '<|end|>' → logprob: -11.2505464553833
    6. ',' → logprob: -11.3755464553833
    7. '           ' → logprob: -12.3755464553833
    8. '```' → logprob: -12.5005464553833
    9. '      ' → logprob: -14.1255464553833
    10. ')' → logprob: -15.0005464553833

Token 177: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16492941975593567
    2. 'if' (adapté à ' if') → logprob: -2.1649293899536133
    3. '       ' → logprob: -3.2899293899536133
    4. '   ' → logprob: -11.289929389953613
    5. ' ' → logprob: -12.414929389953613
    6. '	if' → logprob: -12.664929389953613
    7. '        ' → logprob: -12.914929389953613
    8. ',' → logprob: -12.914929389953613
    9. '           ' → logprob: -13.039929389953613
    10. '        
' → logprob: -13.789929389953613

Token 178: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17976991832256317
    2. '0' → logprob: -1.8047698736190796
    3. ' (' → logprob: -11.429769515991211
    4. '(' → logprob: -12.054769515991211
    5. ' abs' → logprob: -13.179769515991211
    6. ' ' → logprob: -13.179769515991211
    7. 'abs' → logprob: -13.179769515991211
    8. '  ' → logprob: -14.679769515991211
    9. '   ' → logprob: -15.117269515991211
    10. '    ' → logprob: -15.242269515991211

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14276982843875885
    2. ' ' → logprob: -2.0177698135375977
    3. ' (' → logprob: -10.517769813537598
    4. '(' → logprob: -11.392769813537598
    5. '   ' → logprob: -11.392769813537598
    6. '-' → logprob: -11.705269813537598
    7. '  ' → logprob: -11.830269813537598
    8. ' -' → logprob: -12.017769813537598
    9. 'nr' → logprob: -12.017769813537598
    10. ' nr' → logprob: -12.642769813537598

Token 180: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.15177902579307556
    2. '>=' → logprob: -2.9017789363861084
    3. ' <' → logprob: -3.5267789363861084
    4. ' <=' → logprob: -3.6517789363861084
    5. ' ' → logprob: -3.7767789363861084
    6. '<' → logprob: -5.7767791748046875
    7. '<=' → logprob: -6.7767791748046875
    8. ' >' → logprob: -6.9017791748046875
    9. '>' → logprob: -7.1517791748046875
    10. '0' → logprob: -7.1517791748046875

Token 181: ' nr' (ID: 24055)
  Prédit: ' nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nr' → logprob: -0.6932063698768616
    2. 'nr' → logprob: -0.6932063698768616
    3. ' nc' → logprob: -10.943206787109375
    4. '_nr' → logprob: -10.943206787109375
    5. 'nc' → logprob: -11.193206787109375
    6. 'n' → logprob: -12.443206787109375
    7. '.nr' → logprob: -12.818206787109375
    8. ' ' → logprob: -13.818206787109375
    9. 'Nr' → logprob: -14.068206787109375
    10. '
' → logprob: -14.943206787109375

Token 182: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4742755591869354
    2. ' <' → logprob: -0.9742755889892578
    3. ' and' → logprob: -9.099275588989258
    4. 'and' → logprob: -9.849275588989258
    5. ' ' → logprob: -10.974275588989258
    6. '<n' → logprob: -11.599275588989258
    7. '        ' → logprob: -13.224275588989258
    8. '<|end|>' → logprob: -14.474275588989258
    9. '+' → logprob: -14.724275588989258
    10. '       ' → logprob: -14.849275588989258

Token 183: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.12695182859897614
    2. ' ' → logprob: -2.1269519329071045
    3. '4' → logprob: -10.876952171325684
    4. '<|end|>' → logprob: -13.689452171325684
    5. '6' → logprob: -14.189452171325684
    6. ' ' → logprob: -14.376952171325684
    7. '
' → logprob: -15.251952171325684
    8. '1' → logprob: -15.314452171325684
    9. '  ' → logprob: -15.564452171325684
    10. '```' → logprob: -15.564452171325684

Token 184: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0007133854669518769
    2. ' ' → logprob: -7.250713348388672
    3. '4' → logprob: -12.875713348388672
    4. '6' → logprob: -14.625713348388672
    5. '   ' → logprob: -15.875713348388672
    6. '<|end|>' → logprob: -16.875713348388672
    7. '```' → logprob: -17.188213348388672
    8. '
' → logprob: -17.188213348388672
    9. '1' → logprob: -17.313213348388672
    10. ' five' → logprob: -17.500713348388672

Token 185: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011050650849938393
    2. 'and' → logprob: -4.511050701141357
    3. ' <' → logprob: -13.6360502243042
    4. ' ' → logprob: -13.8860502243042
    5. '<' → logprob: -14.5110502243042
    6. '0' → logprob: -17.011051177978516
    7. '        ' → logprob: -17.386051177978516
    8. ' ' → logprob: -17.761051177978516
    9. '       ' → logprob: -18.136051177978516
    10. ',' → logprob: -18.511051177978516

Token 186: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5232275128364563
    2. ' ' → logprob: -0.8982275128364563
    3. '    ' → logprob: -10.77322769165039
    4. '       ' → logprob: -11.02322769165039
    5. '   ' → logprob: -11.02322769165039
    6. '        ' → logprob: -11.39822769165039
    7. '  ' → logprob: -11.77322769165039
    8. ' nc' → logprob: -12.02322769165039
    9. 'nc' → logprob: -12.39822769165039
    10. '4' → logprob: -12.52322769165039

Token 187: '0' (ID: 15)
  Prédit: ' nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nc' → logprob: -0.22134067118167877
    2. 'nc' → logprob: -1.8463406562805176
    3. '0' → logprob: -3.4713406562805176
    4. ' ' → logprob: -4.721340656280518
    5. '4' → logprob: -7.971340656280518
    6. 'c' → logprob: -9.221341133117676
    7. ' n' → logprob: -9.721341133117676
    8. '   ' → logprob: -9.846341133117676
    9. 'n' → logprob: -9.971341133117676
    10. ' c' → logprob: -10.346341133117676

Token 188: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6328263282775879
    2. ' <' → logprob: -0.7578263282775879
    3. ' ' → logprob: -9.13282585144043
    4. '        ' → logprob: -9.88282585144043
    5. '    ' → logprob: -11.25782585144043
    6. '4' → logprob: -11.38282585144043
    7. '<n' → logprob: -12.13282585144043
    8. ' <=' → logprob: -12.50782585144043
    9. 'and' → logprob: -12.50782585144043
    10. 'c' → logprob: -12.50782585144043

Token 189: ' nc' (ID: 39841)
  Prédit: ' nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nc' → logprob: -0.18204405903816223
    2. 'nc' → logprob: -1.8070440292358398
    3. '4' → logprob: -6.93204402923584
    4. 'c' → logprob: -7.18204402923584
    5. ' c' → logprob: -8.18204402923584
    6. ' ' → logprob: -8.43204402923584
    7. '_nc' → logprob: -11.18204402923584
    8. '   ' → logprob: -11.93204402923584
    9. 'n' → logprob: -12.30704402923584
    10. '  ' → logprob: -12.55704402923584

Token 190: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06198270246386528
    2. '<' → logprob: -2.8119826316833496
    3. ' ' → logprob: -11.436983108520508
    4. '4' → logprob: -13.936983108520508
    5. ' <
' → logprob: -14.686983108520508
    6. '<|end|>' → logprob: -14.686983108520508
    7. '<int' → logprob: -14.936983108520508
    8. '<n' → logprob: -15.436983108520508
    9. '0' → logprob: -15.561983108520508
    10. 'and' → logprob: -15.624483108520508

Token 191: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.009756559506058693
    2. ' ' → logprob: -4.634756565093994
    3. '   ' → logprob: -15.509756088256836
    4. '5' → logprob: -16.384756088256836
    5. '  ' → logprob: -16.759756088256836
    6. '' → logprob: -17.384756088256836
    7. '<|end|>' → logprob: -17.384756088256836
    8. '４' → logprob: -17.509756088256836
    9. '۴' → logprob: -17.697256088256836
    10. '```' → logprob: -18.009756088256836

Token 192: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.75006675720215
    4. '<|end|>' → logprob: -18.00006675720215
    5. '۴' → logprob: -18.12506675720215
    6. '' → logprob: -18.37506675720215
    7. '４' → logprob: -18.43756675720215
    8. '5' → logprob: -18.81256675720215
    9. '٤' → logprob: -19.00006675720215
    10. '  ' → logprob: -19.12506675720215

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015996592119336128
    2. ':
' → logprob: -4.39099645614624
    3. '           ' → logprob: -6.14099645614624
    4. ' and' → logprob: -6.76599645614624
    5. 'and' → logprob: -9.765996932983398
    6. '       ' → logprob: -9.890996932983398
    7. '):' → logprob: -10.265996932983398
    8. ',' → logprob: -11.515996932983398
    9. '               ' → logprob: -12.515996932983398
    10. ' :' → logprob: -12.515996932983398

Token 194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004822697374038398
    2. 'res' → logprob: -7.750482082366943
    3. ' res' → logprob: -10.000482559204102
    4. '               ' → logprob: -12.625482559204102
    5. '          ' → logprob: -13.250482559204102
    6. '       ' → logprob: -15.125482559204102
    7. '            
' → logprob: -15.750482559204102
    8. '```' → logprob: -15.875482559204102
    9. '         ' → logprob: -16.0004825592041
    10. ' ' → logprob: -16.5004825592041

Token 195: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.03076605126261711
    2. ' res' → logprob: -3.905766010284424
    3. '           ' → logprob: -4.780766010284424
    4. '               ' → logprob: -6.655766010284424
    5. '       ' → logprob: -7.655766010284424
    6. '   ' → logprob: -11.655766487121582
    7. '	res' → logprob: -12.030766487121582
    8. ',res' → logprob: -13.530766487121582
    9. '
' → logprob: -13.655766487121582
    10. '```' → logprob: -13.905766487121582

Token 196: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007160080131143332
    2. '.' → logprob: -7.250716209411621
    3. '.app' → logprob: -13.000716209411621
    4. ' .' → logprob: -13.375716209411621
    5. 'append' → logprob: -13.500716209411621
    6. '.extend' → logprob: -15.375716209411621
    7. '.Append' → logprob: -15.500716209411621
    8. ').' → logprob: -15.625716209411621
    9. '.add' → logprob: -16.750715255737305
    10. '].' → logprob: -17.000715255737305

Token 197: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.633853652398102e-05
    2. '(' → logprob: -10.125056266784668
    3. 'n' → logprob: -11.250056266784668
    4. '((' → logprob: -13.375056266784668
    5. ' (' → logprob: -13.625056266784668
    6. 'nr' → logprob: -15.875056266784668
    7. '(
' → logprob: -16.000057220458984
    8. '   ' → logprob: -17.000057220458984
    9. 'r' → logprob: -17.500057220458984
    10. '	n' → logprob: -17.750057220458984

Token 198: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03844558820128441
    2. '*' → logprob: -3.413445472717285
    3. 'c' → logprob: -5.913445472717285
    4. 'rc' → logprob: -7.913445472717285
    5. '4' → logprob: -8.038445472717285
    6. '   ' → logprob: -8.663445472717285
    7. '
' → logprob: -9.038445472717285
    8. ' ' → logprob: -9.038445472717285
    9. 'nr' → logprob: -9.288445472717285
    10. ')' → logprob: -9.413445472717285

Token 199: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2664456789934775e-06
    2. ' *' → logprob: -14.500000953674316
    3. '*
' → logprob: -15.500000953674316
    4. '4' → logprob: -15.750000953674316
    5. '**' → logprob: -16.625001907348633
    6. '```' → logprob: -16.625001907348633
    7. ''*' → logprob: -16.625001907348633
    8. '
' → logprob: -16.875001907348633
    9. ')*' → logprob: -17.625001907348633
    10. '"*' → logprob: -17.875001907348633

Token 200: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'c' → logprob: -14.500015258789062
    4. 'nc' → logprob: -17.000015258789062
    5. '
' → logprob: -17.500015258789062
    6. '   ' → logprob: -17.625015258789062
    7. '' → logprob: -18.125015258789062
    8. '  ' → logprob: -18.375015258789062
    9. '```' → logprob: -18.375015258789062
    10. '

' → logprob: -18.500015258789062

Token 201: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00022547018306795508
    2. ' +' → logprob: -8.875225067138672
    3. '+c' → logprob: -9.375225067138672
    4. '+n' → logprob: -14.625225067138672
    5. '+
' → logprob: -15.375225067138672
    6. '+xml' → logprob: -18.000225067138672
    7. '+

' → logprob: -18.250225067138672
    8. '＋' → logprob: -18.625225067138672
    9. '+k' → logprob: -18.875225067138672
    10. '+C' → logprob: -19.000225067138672

Token 202: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.0003386806638445705
    2. ' nc' → logprob: -8.000338554382324
    3. 'c' → logprob: -12.875338554382324
    4. '_nc' → logprob: -15.000338554382324
    5. '.nc' → logprob: -16.12533950805664
    6. '   ' → logprob: -16.37533950805664
    7. '
' → logprob: -16.50033950805664
    8. ' ' → logprob: -16.87533950805664
    9. 'Nc' → logprob: -17.50033950805664
    10. 'cn' → logprob: -18.00033950805664

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029923528200015426
    2. ')
' → logprob: -8.125299453735352
    3. ')return' → logprob: -14.000299453735352
    4. ')
' → logprob: -14.375299453735352
    5. ')

' → logprob: -14.375299453735352
    6. '   ' → logprob: -14.500299453735352
    7. ' )' → logprob: -14.750299453735352
    8. '       ' → logprob: -15.500299453735352
    9. '+' → logprob: -17.00029945373535
    10. 'return' → logprob: -17.50029945373535

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001592822722159326
    2. 'return' → logprob: -6.626592636108398
    3. ' return' → logprob: -8.251592636108398
    4. '	return' → logprob: -12.626592636108398
    5. '       ' → logprob: -14.001592636108398
    6. '    
' → logprob: -14.251592636108398
    7. ':return' → logprob: -14.626592636108398
    8. '```' → logprob: -15.876592636108398
    9. '<|end|>' → logprob: -16.2515926361084
    10. 'eturn' → logprob: -16.2515926361084

Token 205: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06250916421413422
    2. 'return' (adapté à ' return') → logprob: -2.812509059906006
    3. ' return' → logprob: -7.562509059906006
    4. '	return' → logprob: -11.562509536743164
    5. '```' → logprob: -12.312509536743164
    6. '    
' → logprob: -12.562509536743164
    7. '       ' → logprob: -13.812509536743164
    8. '
' → logprob: -13.812509536743164
    9. ')' → logprob: -14.312509536743164
    10. ' ' → logprob: -14.437509536743164

Token 206: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.011047814972698689
    2. ' res' → logprob: -4.511047840118408
    3. '(res' → logprob: -17.88604736328125
    4. ' ' → logprob: -18.38604736328125
    5. '	res' → logprob: -18.51104736328125
    6. 're' → logprob: -18.63604736328125
    7. 'sorted' → logprob: -19.76104736328125
    8. '   ' → logprob: -19.88604736328125
    9. 'r' → logprob: -20.26104736328125
    10. 'resi' → logprob: -20.76104736328125

Token 207: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: 'adj' (ID: 57001)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020501483231782913
    2. '#' → logprob: -4.645501613616943
    3. 'd' → logprob: -5.270501613616943
    4. 'D' → logprob: -6.645501613616943
    5. '\' → logprob: -7.520501613616943
    6. 'n' → logprob: -7.645501613616943
    7. '
' → logprob: -7.895501613616943
    8. '```' → logprob: -8.145501136779785
    9. 'A' → logprob: -8.270501136779785
    10. '[' → logprob: -8.520501136779785

Token 209: 'acent' (ID: 28063)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.012414992786943913
    2. 'ac' → logprob: -4.762414932250977
    3. 'acent' → logprob: -6.012414932250977
    4. ' =' → logprob: -6.887414932250977
    5. '_list' → logprob: -9.637414932250977
    6. '=' → logprob: -9.887414932250977
    7. '[]' → logprob: -9.887414932250977
    8. '```' → logprob: -10.012414932250977
    9. '[' → logprob: -10.637414932250977
    10. '=[]' → logprob: -10.762414932250977

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9031178951263428
    2. '(' → logprob: -1.0281178951263428
    3. '=' → logprob: -2.2781178951263428
    4. 's' → logprob: -2.4031178951263428
    5. '_' → logprob: -4.528118133544922
    6. '[' → logprob: -4.653118133544922
    7. '_indices' → logprob: -5.278118133544922
    8. '_nodes' → logprob: -5.528118133544922
    9. '=[]' → logprob: -6.153118133544922
    10. '_positions' → logprob: -6.153118133544922

Token 211: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004841273184865713
    2. '{' → logprob: -5.629841327667236
    3. '{}' → logprob: -7.129841327667236
    4. ' [[]' → logprob: -9.004840850830078
    5. '[list' → logprob: -9.504840850830078
    6. '[n' → logprob: -9.754840850830078
    7. '[len' → logprob: -10.754840850830078
    8. '[]' → logprob: -10.879840850830078
    9. '[node' → logprob: -10.879840850830078
    10. ' [' → logprob: -11.004840850830078

Token 212: 'neighbors' (ID: 192470)
  Prédit: 'neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.004852072801440954
    2. '[]' → logprob: -5.379852294921875
    3. ' neighbors' → logprob: -8.504852294921875
    4. ' []' → logprob: -11.504852294921875
    5. '[' → logprob: -12.004852294921875
    6. '[]
' → logprob: -13.254852294921875
    7. '[]}' → logprob: -13.254852294921875
    8. ']' → logprob: -13.254852294921875
    9. 'set' → logprob: -13.379852294921875
    10. 'neighbor' → logprob: -13.504852294921875

Token 213: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0802738870552275e-05
    2. ' (' → logprob: -12.12501049041748
    3. '(' → logprob: -12.37501049041748
    4. '(x' → logprob: -14.12501049041748
    5. '(n' → logprob: -15.37501049041748
    6. '(j' → logprob: -16.375011444091797
    7. '](' → logprob: -17.125011444091797
    8. ']' → logprob: -17.500011444091797
    9. '(s' → logprob: -18.500011444091797
    10. '(ii' → logprob: -18.625011444091797

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.085517113911919e-05
    2. '(i' → logprob: -10.25005054473877
    3. '(' → logprob: -11.62505054473877
    4. ' )' → logprob: -12.12505054473877
    5. '()' → logprob: -15.12505054473877
    6. ')`' → logprob: -15.62505054473877
    7. '))' → logprob: -15.75005054473877
    8. '())' → logprob: -16.125051498413086
    9. ')i' → logprob: -16.375051498413086
    10. ',)' → logprob: -17.375051498413086

Token 215: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2635536789894104
    2. 'for' → logprob: -1.5135536193847656
    3. ')' → logprob: -5.263553619384766
    4. '(' → logprob: -5.763553619384766
    5. '()' → logprob: -6.013553619384766
    6. '(i' → logprob: -7.513553619384766
    7. '   ' → logprob: -8.888553619384766
    8. ']' → logprob: -9.388553619384766
    9. '	for' → logprob: -11.013553619384766
    10. ' ' → logprob: -12.263553619384766

Token 216: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868713676929474
    2. 'range' → logprob: -1.136871337890625
    3. 'i' → logprob: -15.011871337890625
    4. '(range' → logprob: -17.136871337890625
    5. ' i' → logprob: -17.386871337890625
    6. '	range' → logprob: -18.636871337890625
    7. ' ' → logprob: -18.886871337890625
    8. '_range' → logprob: -21.136871337890625
    9. 'Range' → logprob: -21.136871337890625
    10. '  ' → logprob: -22.511871337890625

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08074910193681717
    2. ' range' → logprob: -2.580749034881592
    3. ' ' → logprob: -6.705749034881592
    4. 'range' → logprob: -7.580749034881592
    5. 'in' → logprob: -9.08074951171875
    6. '(range' → logprob: -11.83074951171875
    7. ' i' → logprob: -14.08074951171875
    8. '	range' → logprob: -14.33074951171875
    9. '  ' → logprob: -15.20574951171875
    10. ' xrange' → logprob: -15.70574951171875

Token 218: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '(range' → logprob: -18.50020408630371
    4. '	range' → logprob: -20.25020408630371
    5. '```' → logprob: -21.62520408630371
    6. 'r' → logprob: -21.62520408630371
    7. 'rang' → logprob: -21.87520408630371
    8. 'ran' → logprob: -22.12520408630371
    9. '   ' → logprob: -22.12520408630371
    10. '
' → logprob: -22.25020408630371

Token 219: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011048289015889168
    2. '20' → logprob: -4.511048316955566
    3. '   ' → logprob: -16.38604736328125
    4. ' ' → logprob: -16.63604736328125
    5. '(
' → logprob: -17.01104736328125
    6. '```' → logprob: -17.01104736328125
    7. ']' → logprob: -17.13604736328125
    8. '25' → logprob: -17.26104736328125
    9. ' (' → logprob: -17.38604736328125
    10. '((' → logprob: -18.01104736328125

Token 220: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '2' → logprob: -18.25
    4. '   ' → logprob: -19.125
    5. '(' → logprob: -19.375
    6. '25' → logprob: -19.75
    7. '```' → logprob: -20.125
    8. '24' → logprob: -20.375
    9. '0' → logprob: -20.5
    10. '5' → logprob: -20.875

Token 221: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.060365608893335e-05
    2. ')' → logprob: -10.250041007995605
    3. ']' → logprob: -12.250041007995605
    4. ')]
' → logprob: -15.375041007995605
    5. ' )' → logprob: -16.50004005432129
    6. ')}' → logprob: -17.00004005432129
    7. '))' → logprob: -17.62504005432129
    8. '')]' → logprob: -17.75004005432129
    9. ')],' → logprob: -18.12504005432129
    10. ')
' → logprob: -18.12504005432129

Token 222: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003491705865599215
    2. 'visited' → logprob: -8.500349044799805
    3. 'for' → logprob: -10.250349044799805
    4. 'from' → logprob: -10.375349044799805
    5. 'class' → logprob: -10.500349044799805
    6. 'import' → logprob: -10.750349044799805
    7. '#' → logprob: -11.750349044799805
    8. 'dp' → logprob: -12.375349044799805
    9. 'stack' → logprob: -12.875349044799805
    10. '```' → logprob: -13.125349044799805

Token 223: ' compact' (ID: 21126)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.13681912422180176
    2. ' solve' → logprob: -2.3868191242218018
    3. ' find' → logprob: -5.136818885803223
    4. ' bfs' → logprob: -5.136818885803223
    5. ' main' → logprob: -5.386818885803223
    6. ' can' → logprob: -5.511818885803223
    7. 'dfs' → logprob: -5.761818885803223
    8. ' count' → logprob: -5.886818885803223
    9. ' is' → logprob: -6.136818885803223
    10. ' search' → logprob: -6.636818885803223

Token 224: '(cards' (ID: 161529)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.1181926727294922
    2. '_set' → logprob: -1.8681926727294922
    3. '(state' → logprob: -2.368192672729492
    4. '_repr' → logprob: -2.368192672729492
    5. '_map' → logprob: -2.993192672729492
    6. '(' → logprob: -3.618192672729492
    7. '_encode' → logprob: -3.868192672729492
    8. '_path' → logprob: -3.993192672729492
    9. '_string' → logprob: -3.993192672729492
    10. '_code' → logprob: -4.243192672729492

Token 225: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010354911908507347
    2. ',' → logprob: -4.885354995727539
    3. '):
' → logprob: -7.010354995727539
    4. ':' → logprob: -7.010354995727539
    5. '_list' → logprob: -8.010354995727539
    6. ' ):' → logprob: -9.010354995727539
    7. '_mask' → logprob: -9.635354995727539
    8. '_' → logprob: -10.010354995727539
    9. '_states' → logprob: -10.010354995727539
    10. '_positions' → logprob: -10.010354995727539

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11565371602773666
    2. '[' → logprob: -3.6156537532806396
    3. ' []' → logprob: -4.2406535148620605
    4. '    ' → logprob: -4.3656535148620605
    5. '[]' → logprob: -4.4906535148620605
    6. ' s' → logprob: -4.4906535148620605
    7. '    
' → logprob: -5.1156535148620605
    8. ' return' → logprob: -5.2406535148620605
    9. ' ' → logprob: -5.3656535148620605
    10. '"' → logprob: -6.3656535148620605

Token 227: ' new' (ID: 620)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6163155436515808
    2. ' s' → logprob: -2.3663156032562256
    3. 'return' → logprob: -2.4913156032562256
    4. ' res' → logprob: -2.4913156032562256
    5. '   ' → logprob: -3.2413156032562256
    6. ' bit' → logprob: -3.3663156032562256
    7. ' bits' → logprob: -4.1163153648376465
    8. ' result' → logprob: -4.2413153648376465
    9. ' mask' → logprob: -4.3663153648376465
    10. ' from' → logprob: -4.4913153648376465

Token 228: '_cards' (ID: 101651)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6540159583091736
    2. '_cards' → logprob: -0.9040159583091736
    3. '_' → logprob: -3.0290160179138184
    4. '=' → logprob: -4.154016017913818
    5. ' ' → logprob: -5.279016017913818
    6. '_state' → logprob: -6.404016017913818
    7. '_card' → logprob: -7.029016017913818
    8. '_set' → logprob: -7.654016017913818
    9. '_list' → logprob: -7.904016017913818
    10. ' _' → logprob: -8.15401554107666

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38712984323501587
    2. ' =' → logprob: -1.137129783630371
    3. '=[]' → logprob: -8.387129783630371
    4. ' ' → logprob: -11.887129783630371
    5. '[:]' → logprob: -12.137129783630371
    6. '=[]
' → logprob: -12.512129783630371
    7. '[' → logprob: -12.637129783630371
    8. ' =[' → logprob: -13.012129783630371
    9. ',' → logprob: -13.262129783630371
    10. '[]' → logprob: -13.387129783630371

Token 230: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00879573542624712
    2. '[' → logprob: -5.008795738220215
    3. 'set' → logprob: -7.258795738220215
    4. '{}' → logprob: -7.758795738220215
    5. '[c' → logprob: -8.133795738220215
    6. '[]
' → logprob: -8.758795738220215
    7. ' []' → logprob: -9.133795738220215
    8. '['' → logprob: -9.383795738220215
    9. 'sorted' → logprob: -10.008795738220215
    10. '""' → logprob: -10.133795738220215

Token 231: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1793687641620636
    2. 'card' → logprob: -2.304368734359741
    3. 'x' → logprob: -3.429368734359741
    4. '0' → logprob: -4.05436897277832
    5. ']' → logprob: -4.92936897277832
    6. '[]' → logprob: -6.05436897277832
    7. 'i' → logprob: -6.55436897277832
    8. 'cards' → logprob: -7.05436897277832
    9. 'False' → logprob: -7.80436897277832
    10. 'str' → logprob: -7.80436897277832

Token 232: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.632709801197052
    2. 'for' → logprob: -0.757709801197052
    3. ' ' → logprob: -9.882709503173828
    4. '   ' → logprob: -11.507709503173828
    5. '[' → logprob: -11.632709503173828
    6. '
' → logprob: -12.007709503173828
    7. '	for' → logprob: -12.257709503173828
    8. ' 
' → logprob: -12.882709503173828
    9. ' if' → logprob: -12.882709503173828
    10. '-' → logprob: -13.007709503173828

Token 233: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3874064087867737
    2. ' c' → logprob: -1.137406349182129
    3. ' cards' → logprob: -7.762406349182129
    4. 'cards' → logprob: -9.387406349182129
    5. 'card' → logprob: -11.512406349182129
    6. '	c' → logprob: -11.887406349182129
    7. ' ' → logprob: -13.012406349182129
    8. ' card' → logprob: -13.262406349182129
    9. ')c' → logprob: -13.762406349182129
    10. '
' → logprob: -14.574906349182129

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3158632218837738
    2. 'in' → logprob: -1.3158632516860962
    3. 'c' → logprob: -6.190863132476807
    4. ' ' → logprob: -7.815863132476807
    5. 'n' → logprob: -9.690863609313965
    6. '  ' → logprob: -10.690863609313965
    7. ' c' → logprob: -11.065863609313965
    8. '   ' → logprob: -12.065863609313965
    9. 'not' → logprob: -12.065863609313965
    10. ',' → logprob: -12.440863609313965

Token 235: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.07915414869785309
    2. ' cards' → logprob: -2.5791542530059814
    3. '(cards' → logprob: -9.079154014587402
    4. '   ' → logprob: -10.079154014587402
    5. ' ' → logprob: -10.579154014587402
    6. '
' → logprob: -11.079154014587402
    7. 'c' → logprob: -11.266654014587402
    8. 'card' → logprob: -11.266654014587402
    9. '.cards' → logprob: -11.579154014587402
    10. '[' → logprob: -12.079154014587402

Token 236: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.002476604888215661
    2. 'if' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.502476692199707
    4. ']' → logprob: -15.127476692199707
    5. '	if' → logprob: -16.12747573852539
    6. '   ' → logprob: -17.37747573852539
    7. ' in' → logprob: -18.00247573852539
    8. ' ]' → logprob: -18.25247573852539
    9. ' not' → logprob: -18.37747573852539
    10. '  ' → logprob: -18.37747573852539

Token 237: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01605759747326374
    2. ' c' → logprob: -4.14105749130249
    3. '   ' → logprob: -12.016057968139648
    4. ' ' → logprob: -12.016057968139648
    5. ' not' → logprob: -12.391057968139648
    6. 'not' → logprob: -12.641057968139648
    7. '  ' → logprob: -14.141057968139648
    8. ')c' → logprob: -14.266057968139648
    9. '
' → logprob: -14.641057968139648
    10. '_' → logprob: -15.266057968139648

Token 238: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.8783463835716248
    2. ']' → logprob: -1.1283464431762695
    3. ' !=' → logprob: -1.8783464431762695
    4. ' is' → logprob: -3.2533464431762695
    5. '>' → logprob: -3.6283464431762695
    6. 'is' → logprob: -4.2533464431762695
    7. ')' → logprob: -5.0033464431762695
    8. '[' → logprob: -5.3783464431762695
    9. ')]' → logprob: -5.8783464431762695
    10. '>=' → logprob: -6.3783464431762695

Token 239: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7141698598861694
    2. '-' → logprob: -1.4641698598861694
    3. ''.' → logprob: -1.9641698598861694
    4. 'None' → logprob: -2.339169979095459
    5. ''' → logprob: -4.464169979095459
    6. ' None' → logprob: -5.214169979095459
    7. ''*' → logprob: -5.464169979095459
    8. ' ' → logprob: -5.589169979095459
    9. ''-' → logprob: -5.589169979095459
    10. '.' → logprob: -5.964169979095459

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3911631107330322
    2. '-' → logprob: -2.0161631107330322
    3. ''.' → logprob: -2.0161631107330322
    4. 'None' → logprob: -3.6411631107330322
    5. ''' → logprob: -4.516162872314453
    6. ''*' → logprob: -5.016162872314453
    7. ''-' → logprob: -5.266162872314453
    8. '.' → logprob: -6.266162872314453
    9. '".' → logprob: -6.391162872314453
    10. ''#' → logprob: -7.016162872314453

Token 241: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019341122824698687
    2. ' ]' → logprob: -6.251934051513672
    3. ']
' → logprob: -13.126934051513672
    4. '   ' → logprob: -14.001934051513672
    5. ',' → logprob: -14.376934051513672
    6. ')]' → logprob: -14.376934051513672
    7. ' or' → logprob: -14.751934051513672
    8. '()]' → logprob: -15.126934051513672
    9. ')' → logprob: -15.626934051513672
    10. ']

' → logprob: -16.126934051513672

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00739329494535923
    2. '    
' → logprob: -5.7573933601379395
    3. '    ' → logprob: -6.6323933601379395
    4. '<|end|>' → logprob: -7.5073933601379395
    5. ' ' → logprob: -7.8823933601379395
    6. '[' → logprob: -7.8823933601379395
    7. '
' → logprob: -8.382392883300781
    8. '   
' → logprob: -8.507392883300781
    9. 'new' → logprob: -8.632392883300781
    10. ' new' → logprob: -8.632392883300781

Token 243: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6247915029525757
    2. 'new' (adapté à ' new') → logprob: -0.8747915029525757
    3. 'return' → logprob: -3.9997916221618652
    4. ' return' → logprob: -4.624791622161865
    5. '   ' → logprob: -4.874791622161865
    6. ' while' → logprob: -4.999791622161865
    7. 'while' → logprob: -5.499791622161865
    8. '0' → logprob: -8.124791145324707
    9. ' ' → logprob: -8.999791145324707
    10. '    
' → logprob: -9.499791145324707

Token 244: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0032263139728456736
    2. '_' → logprob: -5.878226280212402
    3. '_length' → logprob: -9.378226280212402
    4. '_card' → logprob: -9.503226280212402
    5. '_len' → logprob: -10.253226280212402
    6. '_size' → logprob: -10.378226280212402
    7. '_c' → logprob: -10.628226280212402
    8. '_count' → logprob: -10.628226280212402
    9. '_tokens' → logprob: -10.753226280212402
    10. '_new' → logprob: -11.003226280212402

Token 245: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.17215664684772491
    2. '+=' → logprob: -1.9221566915512085
    3. ' +=' → logprob: -4.797156810760498
    4. '.' → logprob: -5.672156810760498
    5. '+' → logprob: -9.29715633392334
    6. '.append' → logprob: -10.42215633392334
    7. '=' → logprob: -10.67215633392334
    8. '+=(' → logprob: -11.67215633392334
    9. ' .' → logprob: -12.17215633392334
    10. '.=' → logprob: -12.79715633392334

Token 246: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004307884373702109
    2. ' [' → logprob: -7.750430583953857
    3. '([' → logprob: -16.625431060791016
    4. '   ' → logprob: -17.000431060791016
    5. '0' → logprob: -17.750431060791016
    6. ' ' → logprob: -17.875431060791016
    7. '['' → logprob: -19.000431060791016
    8. '(' → logprob: -20.000431060791016
    9. '[
' → logprob: -20.250431060791016
    10. '[-' → logprob: -20.500431060791016

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.625059127807617
    4. '
' → logprob: -17.875059127807617
    5. ']' → logprob: -19.125059127807617
    6. '  ' → logprob: -19.500059127807617
    7. ',' → logprob: -20.000059127807617
    8. '```' → logprob: -20.187559127807617
    9. '(' → logprob: -20.312559127807617
    10. '    ' → logprob: -20.625059127807617

Token 248: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005396892665885389
    2. ']*(' → logprob: -7.625539779663086
    3. ']*' → logprob: -9.875539779663086
    4. ' for' → logprob: -16.375539779663086
    5. ' ]' → logprob: -17.375539779663086
    6. ']+' → logprob: -17.375539779663086
    7. 'for' → logprob: -18.000539779663086
    8. '```' → logprob: -19.500539779663086
    9. '"]' → logprob: -20.000539779663086
    10. '   ' → logprob: -20.125539779663086

Token 249: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0007710324716754258
    2. ' ' → logprob: -7.5007710456848145
    3. 'len' → logprob: -8.500770568847656
    4. ' len' → logprob: -11.250770568847656
    5. '(' → logprob: -14.375770568847656
    6. '4' → logprob: -14.750770568847656
    7. '
' → logprob: -16.000770568847656
    8. '2' → logprob: -16.125770568847656
    9. '   ' → logprob: -16.250770568847656
    10. '25' → logprob: -16.375770568847656

Token 250: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03297578915953636
    2. '-' → logprob: -3.907975673675537
    3. '-l' → logprob: -4.407975673675537
    4. ' ' → logprob: -8.657976150512695
    5. ' len' → logprob: -13.407976150512695
    6. '[len' → logprob: -14.282976150512695
    7. 'len' → logprob: -14.657976150512695
    8. '   ' → logprob: -15.407976150512695
    9. ' ' → logprob: -16.282976150512695
    10. '  ' → logprob: -16.282976150512695

Token 251: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.547789674485102e-05
    2. ' len' → logprob: -10.250035285949707
    3. '(len' → logprob: -17.500036239624023
    4. '   ' → logprob: -20.625036239624023
    5. '	len' → logprob: -21.000036239624023
    6. ' ' → logprob: -22.500036239624023
    7. '[len' → logprob: -23.000036239624023
    8. '=len' → logprob: -23.875036239624023
    9. 'le' → logprob: -24.625036239624023
    10. '
' → logprob: -24.625036239624023

Token 252: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.318681188422488e-05
    2. 'new' → logprob: -11.50001335144043
    3. '(cards' → logprob: -12.87501335144043
    4. ')new' → logprob: -16.00001335144043
    5. ' new' → logprob: -16.50001335144043
    6. '(' → logprob: -16.62501335144043
    7. '(c' → logprob: -16.87501335144043
    8. '	new' → logprob: -18.50001335144043
    9. ',new' → logprob: -19.00001335144043
    10. '=new' → logprob: -19.75001335144043

Token 253: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00016063073417171836
    2. 'new' → logprob: -8.875160217285156
    3. '(cards' → logprob: -11.750160217285156
    4. 'cards' → logprob: -11.750160217285156
    5. '(new' → logprob: -12.750160217285156
    6. '_new' → logprob: -13.625160217285156
    7. '_' → logprob: -14.500160217285156
    8. ' cards' → logprob: -16.750160217285156
    9. '```' → logprob: -16.750160217285156
    10. 'Cards' → logprob: -17.125160217285156

Token 254: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.062087565660476685
    2. ')' → logprob: -2.8120875358581543
    3. '))
' → logprob: -9.437088012695312
    4. ' ))' → logprob: -10.687088012695312
    5. ')
' → logprob: -11.812088012695312
    6. ' )' → logprob: -12.312088012695312
    7. ')))' → logprob: -13.562088012695312
    8. '])' → logprob: -13.687088012695312
    9. '))

' → logprob: -13.812088012695312
    10. '));' → logprob: -14.687088012695312

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007484526373445988
    2. ' return' → logprob: -5.507484436035156
    3. 'return' → logprob: -5.757484436035156
    4. '
' → logprob: -9.132484436035156
    5. '	return' → logprob: -9.257484436035156
    6. '    
' → logprob: -10.507484436035156
    7. ':return' → logprob: -13.257484436035156
    8. ')' → logprob: -13.382484436035156
    9. ',' → logprob: -13.632484436035156
    10. ' 
' → logprob: -13.882484436035156

Token 256: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5380451083183289
    2. 'return' (adapté à ' return') → logprob: -1.0380451679229736
    3. '   ' → logprob: -2.7880451679229736
    4. '	return' → logprob: -8.163044929504395
    5. '
' → logprob: -9.913044929504395
    6. ':return' → logprob: -10.288044929504395
    7. ' 
' → logprob: -11.288044929504395
    8. 'def' → logprob: -11.413044929504395
    9. ' ' → logprob: -11.663044929504395
    10. '    
' → logprob: -12.038044929504395

Token 257: ' tuple' (ID: 31311)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07894454151391983
    2. ' new' → logprob: -2.578944444656372
    3. '[new' → logprob: -9.953944206237793
    4. '[' → logprob: -12.578944206237793
    5. 'tuple' → logprob: -13.078944206237793
    6. ' tuple' → logprob: -15.078944206237793
    7. ' [' → logprob: -15.453944206237793
    8. '(new' → logprob: -15.453944206237793
    9. 'list' → logprob: -15.703944206237793
    10. ' ' → logprob: -15.703944206237793

Token 258: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.00150390958879143
    2. 'new' → logprob: -6.501503944396973
    3. '(' → logprob: -13.626503944396973
    4. ' new' → logprob: -15.876503944396973
    5. '[new' → logprob: -16.001502990722656
    6. ')new' → logprob: -16.626502990722656
    7. '(
' → logprob: -17.876502990722656
    8. '((' → logprob: -18.501502990722656
    9. '([' → logprob: -19.126502990722656
    10. '	new' → logprob: -19.251502990722656

Token 259: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -5.676981345459353e-06
    2. 'cards' → logprob: -12.750005722045898
    3. '(cards' → logprob: -13.250005722045898
    4. '_' → logprob: -14.750005722045898
    5. '_c' → logprob: -15.625005722045898
    6. ' cards' → logprob: -16.2500057220459
    7. 'new' → logprob: -16.3750057220459
    8. '_new' → logprob: -17.0000057220459
    9. '_card' → logprob: -17.5000057220459
    10. 'Cards' → logprob: -17.7500057220459

Token 260: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.375
    3. ' )' → logprob: -17.0
    4. ')`' → logprob: -18.75
    5. '))' → logprob: -19.375
    6. ')#' → logprob: -19.75
    7. '),' → logprob: -20.25
    8. ')return' → logprob: -20.375
    9. '())' → logprob: -20.75
    10. ')

' → logprob: -21.5

Token 261: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6037370562553406
    2. '
' → logprob: -0.8537370562553406
    3. '

' → logprob: -4.103736877441406
    4. '<|end|>' → logprob: -4.853736877441406
    5. '\' → logprob: -6.853736877441406
    6. '\n' → logprob: -7.603736877441406
    7. '```' → logprob: -7.978736877441406
    8. '<|end|>' → logprob: -8.353736877441406
    9. '
' → logprob: -8.728736877441406
    10. '  
' → logprob: -9.353736877441406

Token 262: ' functools' (ID: 142636)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.061995361000299454
    2. ' collections' → logprob: -2.811995267868042
    3. ' functools' → logprob: -10.686995506286621
    4. 'fun' → logprob: -12.936995506286621
    5. 'copy' → logprob: -13.811995506286621
    6. 'heap' → logprob: -14.186995506286621
    7. ' itertools' → logprob: -14.686995506286621
    8. 'math' → logprob: -16.186994552612305
    9. 'collection' → logprob: -16.311994552612305
    10. ' copy' → logprob: -16.436994552612305

Token 263: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.038384098559617996
    2. ' import' → logprob: -3.288384199142456
    3. '_import' → logprob: -8.163384437561035
    4. '	import' → logprob: -10.288384437561035
    5. 'from' → logprob: -11.538384437561035
    6. '```' → logprob: -12.413384437561035
    7. '32' → logprob: -13.163384437561035
    8. ''import' → logprob: -13.788384437561035
    9. '_' → logprob: -14.413384437561035
    10. ' ' → logprob: -14.538384437561035

Token 264: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0009307525469921529
    2. 'cache' → logprob: -7.0009307861328125
    3. ' l' → logprob: -11.000930786132812
    4. 'reduce' → logprob: -13.625930786132812
    5. 'cached' → logprob: -13.875930786132812
    6. 'wrap' → logprob: -15.625930786132812
    7. '```' → logprob: -16.125930786132812
    8. '	l' → logprob: -16.250930786132812
    9. '@' → logprob: -17.750930786132812
    10. 'ls' → logprob: -18.125930786132812

Token 265: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.3856492842023727e-06
    2. 'RU' → logprob: -14.000000953674316
    3. 'r' → logprob: -15.125000953674316
    4. 'Ru' → logprob: -16.250001907348633
    5. ' ru' → logprob: -16.625001907348633
    6. 'fu' → logprob: -17.375001907348633
    7. '_ru' → logprob: -17.375001907348633
    8. 'ruz' → logprob: -17.500001907348633
    9. 'ruh' → logprob: -17.750001907348633
    10. 'ruff' → logprob: -17.750001907348633

Token 266: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.020659834146499634
    2. 'cache' → logprob: -3.895659923553467
    3. 'import' → logprob: -10.395659446716309
    4. '```' → logprob: -10.395659446716309
    5. 'c' → logprob: -11.020659446716309
    6. '_cached' → logprob: -11.770659446716309
    7. 'cached' → logprob: -12.145659446716309
    8. 'ru' → logprob: -12.270659446716309
    9. 'r' → logprob: -12.520659446716309
    10. '_CACHE' → logprob: -13.270659446716309

Token 267: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.07120659202337265
    2. '
' → logprob: -2.696206569671631
    3. '@
' → logprob: -7.071206569671631
    4. '

' → logprob: -9.196207046508789
    5. '@login' → logprob: -9.321207046508789
    6. '<|end|>' → logprob: -10.571207046508789
    7. 'def' → logprob: -10.696207046508789
    8. '@example' → logprob: -11.071207046508789
    9. '@n' → logprob: -11.071207046508789
    10. '@app' → logprob: -11.071207046508789

Token 268: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -2.2200749754119897e-06
    2. '
' → logprob: -13.875001907348633
    3. 'def' → logprob: -14.500001907348633
    4. '@
' → logprob: -14.875001907348633
    5. ' @' → logprob: -15.125001907348633
    6. '```' → logprob: -16.750001907348633
    7. '@n' → logprob: -17.250001907348633
    8. '\' → logprob: -17.750001907348633
    9. '@\' → logprob: -18.000001907348633
    10. '

' → logprob: -18.250001907348633

Token 269: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.9361264946837764e-07
    2. ' l' → logprob: -16.25
    3. '```' → logprob: -16.625
    4. '@' → logprob: -17.5
    5. '
' → logprob: -18.625
    6. 'cache' → logprob: -19.25
    7. 'staticmethod' → logprob: -19.875
    8. 'r' → logprob: -20.5
    9. 'lr' → logprob: -20.5
    10. '`' → logprob: -20.625

Token 270: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.002512285253033042
    2. 'r' → logprob: -6.002512454986572
    3. '@' → logprob: -10.252511978149414
    4. 'rl' → logprob: -14.002511978149414
    5. '```' → logprob: -15.127511978149414
    6. 'rc' → logprob: -16.127511978149414
    7. 'u' → logprob: -17.127511978149414
    8. 'RU' → logprob: -17.127511978149414
    9. ' ru' → logprob: -17.502511978149414
    10. 'ру' → logprob: -17.877511978149414

Token 271: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00015717383939772844
    2. '_cached' → logprob: -9.125157356262207
    3. 'cache' → logprob: -10.250157356262207
    4. '_' → logprob: -12.375157356262207
    5. '.cache' → logprob: -13.125157356262207
    6. '@' → logprob: -13.625157356262207
    7. 'cached' → logprob: -13.750157356262207
    8. ' _' → logprob: -14.000157356262207
    9. '_c' → logprob: -14.000157356262207
    10. '```' → logprob: -14.750157356262207

Token 272: '(None' (ID: 65126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004783376585692167
    2. '(None' → logprob: -6.2547831535339355
    3. '(max' → logprob: -6.5047831535339355
    4. '
' → logprob: -6.7547831535339355
    5. '(def' → logprob: -9.379783630371094
    6. '(' → logprob: -10.254783630371094
    7. '(False' → logprob: -10.629783630371094
    8. 'max' → logprob: -10.879783630371094
    9. '    
' → logprob: -11.504783630371094
    10. ' def' → logprob: -12.254783630371094

Token 273: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6941189765930176
    2. ')
' → logprob: -0.6941189765930176
    3. 'def' → logprob: -6.944118976593018
    4. ')
' → logprob: -13.06911849975586
    5. ')`
' → logprob: -13.06911849975586
    6. ')

' → logprob: -13.94411849975586
    7. ')`' → logprob: -14.06911849975586
    8. '
' → logprob: -15.31911849975586
    9. '())
' → logprob: -16.06911849975586
    10. ')\
' → logprob: -16.06911849975586

Token 274: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.2378600735682994e-05
    2. '
' → logprob: -10.375032424926758
    3. ' def' → logprob: -13.750032424926758
    4. '(def' → logprob: -19.250032424926758
    5. '('' → logprob: -20.375032424926758
    6. '-def' → logprob: -20.625032424926758
    7. 'ndef' → logprob: -20.750032424926758
    8. '\' → logprob: -20.875032424926758
    9. ':def' → logprob: -20.875032424926758
    10. '(' → logprob: -21.125032424926758

Token 275: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.06106453761458397
    2. 'solve' → logprob: -4.061064720153809
    3. 'can' → logprob: -4.311064720153809
    4. 'search' → logprob: -4.436064720153809
    5. 'dp' → logprob: -4.561064720153809
    6. ' dfs' → logprob: -5.436064720153809
    7. 'min' → logprob: -7.186064720153809
    8. 'f' → logprob: -8.061064720153809
    9. 'count' → logprob: -8.686064720153809
    10. 'go' → logprob: -9.436064720153809

Token 276: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.030540484935045242
    2. '(state' → logprob: -3.5305404663085938
    3. '(' → logprob: -7.655540466308594
    4. '(c' → logprob: -9.280540466308594
    5. '(card' → logprob: -9.530540466308594
    6. '(states' → logprob: -9.655540466308594
    7. '(deck' → logprob: -10.155540466308594
    8. ' (' → logprob: -11.405540466308594
    9. '(current' → logprob: -11.655540466308594
    10. '(board' → logprob: -12.155540466308594

Token 277: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.054919298738241196
    2. '):
' → logprob: -2.9299192428588867
    3. ' ):' → logprob: -11.054919242858887
    4. '):
' → logprob: -11.804919242858887
    5. ')' → logprob: -12.304919242858887
    6. ':' → logprob: -12.429919242858887
    7. ',' → logprob: -12.679919242858887
    8. '):

' → logprob: -14.054919242858887
    9. '   ' → logprob: -14.304919242858887
    10. ' ):
' → logprob: -15.054919242858887

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008162157610058784
    2. 'if' → logprob: -5.258162021636963
    3. ' if' → logprob: -5.883162021636963
    4. 'max' → logprob: -9.758162498474121
    5. '    
' → logprob: -10.883162498474121
    6. 'cards' → logprob: -11.008162498474121
    7. '    ' → logprob: -11.633162498474121
    8. ' ' → logprob: -12.008162498474121
    9. ' max' → logprob: -12.383162498474121
    10. 'count' → logprob: -12.508162498474121

Token 279: ' cards' (ID: 10541)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31668922305107117
    2. 'res' → logprob: -1.6916892528533936
    3. 'max' → logprob: -3.8166892528533936
    4. 'cards' (adapté à ' cards') → logprob: -3.8166892528533936
    5. 'moves' → logprob: -4.3166890144348145
    6. 'best' → logprob: -4.8166890144348145
    7. '   ' → logprob: -5.0666890144348145
    8. 'ans' → logprob: -5.0666890144348145
    9. ' if' → logprob: -6.0666890144348145
    10. 'result' → logprob: -6.4416890144348145

Token 280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019006486982107162
    2. ' =' → logprob: -4.144006252288818
    3. ')' → logprob: -6.644006252288818
    4. '==' → logprob: -7.269006252288818
    5. '<|end|>' → logprob: -7.394006252288818
    6. '<|end|>' → logprob: -10.019006729125977
    7. ')=' → logprob: -10.144006729125977
    8. '=
' → logprob: -10.394006729125977
    9. '=[]' → logprob: -10.519006729125977
    10. ',' → logprob: -10.769006729125977

Token 281: ' compact' (ID: 21126)
  Prédit: 'compact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compact' → logprob: -0.002900570398196578
    2. ' compact' → logprob: -5.87790060043335
    3. 'tuple' → logprob: -10.127900123596191
    4. 'cards' → logprob: -10.627900123596191
    5. 'list' → logprob: -11.002900123596191
    6. 'comp' → logprob: -12.002900123596191
    7. ' tuple' → logprob: -12.377900123596191
    8. '   ' → logprob: -13.252900123596191
    9. '
' → logprob: -13.627900123596191
    10. ' list' → logprob: -14.377900123596191

Token 282: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.125015258789062
    3. '(card' → logprob: -16.250015258789062
    4. '((' → logprob: -16.500015258789062
    5. ' (' → logprob: -17.125015258789062
    6. '(chars' → logprob: -17.125015258789062
    7. '(tuple' → logprob: -17.250015258789062
    8. '(
' → logprob: -17.625015258789062
    9. '(items' → logprob: -17.750015258789062
    10. '(c' → logprob: -18.250015258789062

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006723183207213879
    2. ')
' → logprob: -5.006723403930664
    3. ' )' → logprob: -12.756723403930664
    4. ')
' → logprob: -13.131723403930664
    5. ')

' → logprob: -13.506723403930664
    6. '   ' → logprob: -14.381723403930664
    7. ')`' → logprob: -14.381723403930664
    8. '))' → logprob: -15.881723403930664
    9. ' )
' → logprob: -16.881723403930664
    10. ')#' → logprob: -17.006723403930664

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012861471623182297
    2. ' if' → logprob: -5.012861251831055
    3. '
' → logprob: -5.887861251831055
    4. '    
' → logprob: -6.887861251831055
    5. '<|end|>' → logprob: -7.012861251831055
    6. 'if' → logprob: -7.387861251831055
    7. ',' → logprob: -8.387861251831055
    8. '    ' → logprob: -8.762861251831055
    9. ' ' → logprob: -8.887861251831055
    10. ':' → logprob: -9.637861251831055

Token 285: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05388842150568962
    2. 'res' → logprob: -3.4288883209228516
    3. 'result' → logprob: -5.178888320922852
    4. 'max' → logprob: -5.428888320922852
    5. 'ans' → logprob: -5.678888320922852
    6. ' if' → logprob: -6.303888320922852
    7. 'moves' → logprob: -6.803888320922852
    8. 'results' → logprob: -7.428888320922852
    9. 'for' → logprob: -7.553888320922852
    10. '   ' → logprob: -7.803888320922852

Token 286: ' find' (ID: 1646)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015490120276808739
    2. 'ans' → logprob: -5.5154900550842285
    3. 'res' → logprob: -5.5154900550842285
    4. 'max' → logprob: -5.6404900550842285
    5. 'for' → logprob: -7.0154900550842285
    6. 'moves' → logprob: -7.1404900550842285
    7. 'result' → logprob: -7.5154900550842285
    8. 'answer' → logprob: -8.015490531921387
    9. 'best' → logprob: -8.390490531921387
    10. '   ' → logprob: -8.515490531921387

Token 287: ' pairs' (ID: 24702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9008439183235168
    2. 'zero' → logprob: -1.400843858718872
    3. ' zero' → logprob: -1.900843858718872
    4. ' ' → logprob: -3.650843858718872
    5. ' cards' → logprob: -3.775843858718872
    6. 'i' → logprob: -3.900843858718872
    7. 'cards' → logprob: -3.900843858718872
    8. 'idx' → logprob: -4.275844097137451
    9. ' i' → logprob: -4.525844097137451
    10. 'pos' → logprob: -4.650844097137451

Token 288: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011065863072872162
    2. ' for' → logprob: -5.51106595993042
    3. ':' → logprob: -6.13606595993042
    4. '<|end|>' → logprob: -6.38606595993042
    5. 'for' → logprob: -6.76106595993042
    6. ',' → logprob: -7.13606595993042
    7. '    
' → logprob: -8.261065483093262
    8. 'indices' → logprob: -8.761065483093262
    9. '
' → logprob: -9.261065483093262
    10. '<|end|>' → logprob: -9.386065483093262

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007654661778360605
    2. 'pairs' → logprob: -5.757654666900635
    3. 'for' → logprob: -6.257654666900635
    4. ' for' → logprob: -6.382654666900635
    5. ' pairs' → logprob: -7.507654666900635
    6. 'indices' → logprob: -8.632654190063477
    7. 'positions' → logprob: -10.132654190063477
    8. 'def' → logprob: -11.007654190063477
    9. ' indices' → logprob: -11.382654190063477
    10. 'pair' → logprob: -11.382654190063477

Token 290: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' (adapté à ' pairs') → logprob: -0.54623943567276
    2. 'for' → logprob: -1.0462393760681152
    3. 'positions' → logprob: -4.046239376068115
    4. 'indices' → logprob: -4.046239376068115
    5. 'res' → logprob: -5.046239376068115
    6. 'n' → logprob: -5.046239376068115
    7. 'pos' → logprob: -5.171239376068115
    8. ' for' → logprob: -5.671239376068115
    9. '   ' → logprob: -5.921239376068115
    10. ' pairs' → logprob: -6.171239376068115

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47417202591896057
    2. ' =' → logprob: -0.9741719961166382
    3. '=[]' → logprob: -9.47417163848877
    4. ',' → logprob: -12.22417163848877
    5. '   ' → logprob: -12.59917163848877
    6. ':' → logprob: -12.97417163848877
    7. 's' → logprob: -13.22417163848877
    8. ' ' → logprob: -13.72417163848877
    9. '[]' → logprob: -14.22417163848877
    10. '=[]
' → logprob: -14.59917163848877

Token 292: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0279995203018188
    2. '[]
' → logprob: -1.0279995203018188
    3. '[(' → logprob: -1.7779995203018188
    4. '{}' → logprob: -2.2779994010925293
    5. '{}
' → logprob: -4.402999401092529
    6. 'set' → logprob: -8.027999877929688
    7. '[' → logprob: -8.527999877929688
    8. '[
' → logprob: -9.277999877929688
    9. '{' → logprob: -9.527999877929688
    10. '[]

' → logprob: -9.527999877929688

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5254230499267578
    2. ' for' → logprob: -1.4004230499267578
    3. 'for' → logprob: -1.9004230499267578
    4. '
' → logprob: -5.150423049926758
    5. '<|end|>' → logprob: -5.525423049926758
    6. ' ' → logprob: -7.400423049926758
    7. '[' → logprob: -7.775423049926758
    8. '    
' → logprob: -7.775423049926758
    9. ',' → logprob: -8.025423049926758
    10. '[]' → logprob: -8.400423049926758

Token 294: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009433758445084095
    2. ' for' → logprob: -4.759433746337891
    3. 'n' → logprob: -8.75943374633789
    4. 'positions' → logprob: -8.88443374633789
    5. 'indices' → logprob: -8.88443374633789
    6. 'seen' → logprob: -9.13443374633789
    7. 'pos' → logprob: -9.25943374633789
    8. '   ' → logprob: -9.38443374633789
    9. '20' → logprob: -10.25943374633789
    10. ' seen' → logprob: -11.13443374633789

Token 295: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01663094386458397
    2. ' i' → logprob: -4.141631126403809
    3. 'x' → logprob: -7.891631126403809
    4. 'idx' → logprob: -9.016631126403809
    5. 'v' → logprob: -10.266631126403809
    6. ' idx' → logprob: -10.766631126403809
    7. 'a' → logprob: -11.391631126403809
    8. 'c' → logprob: -11.766631126403809
    9. 'j' → logprob: -11.891631126403809
    10. ' x' → logprob: -12.641631126403809

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6207998991012573
    2. 'in' → logprob: -1.2457998991012573
    3. ',' → logprob: -1.7457998991012573
    4. ' ,' → logprob: -8.495800018310547
    5. ' ' → logprob: -11.370800018310547
    6. ',c' → logprob: -11.620800018310547
    7. ',in' → logprob: -11.745800018310547
    8. '```' → logprob: -12.120800018310547
    9. '0' → logprob: -12.620800018310547
    10. 'range' → logprob: -12.745800018310547

Token 297: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004309076175559312
    2. ' range' → logprob: -7.750431060791016
    3. '   ' → logprob: -16.500431060791016
    4. ' ' → logprob: -16.875431060791016
    5. '
' → logprob: -17.500431060791016
    6. '(range' → logprob: -18.125431060791016
    7. '	range' → logprob: -18.250431060791016
    8. '  ' → logprob: -18.375431060791016
    9. '20' → logprob: -18.500431060791016
    10. '```' → logprob: -18.875431060791016

Token 298: '(' (ID: 7)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.07017405331134796
    2. '19' → logprob: -2.695173978805542
    3. 'len' → logprob: -8.945174217224121
    4. '15' → logprob: -9.695174217224121
    5. '18' → logprob: -11.195174217224121
    6. '(' → logprob: -11.320174217224121
    7. '10' → logprob: -11.945174217224121
    8. '0' → logprob: -12.695174217224121
    9. '16' → logprob: -12.820174217224121
    10. '14' → logprob: -13.570174217224121

Token 299: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.22543707489967346
    2. '19' → logprob: -1.600437045097351
    3. 'len' → logprob: -11.47543716430664
    4. '18' → logprob: -11.72543716430664
    5. '15' → logprob: -12.85043716430664
    6. '10' → logprob: -14.10043716430664
    7. '16' → logprob: -14.47543716430664
    8. '1' → logprob: -14.85043716430664
    9. '17' → logprob: -14.85043716430664
    10. '
' → logprob: -14.97543716430664

Token 300: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0632563903927803
    2. '):' → logprob: -2.8132565021514893
    3. '-' → logprob: -6.68825626373291
    4. ' -' → logprob: -10.68825626373291
    5. '   ' → logprob: -11.68825626373291
    6. '):
' → logprob: -12.18825626373291
    7. ')' → logprob: -13.43825626373291
    8. '):

' → logprob: -13.43825626373291
    9. '
' → logprob: -14.06325626373291
    10. ' ):
' → logprob: -14.06325626373291

Token 301: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35123446583747864
    2. ' if' → logprob: -2.1012344360351562
    3. '       ' → logprob: -2.3512344360351562
    4. '   ' → logprob: -3.2262344360351562
    5. 'for' → logprob: -3.4762344360351562
    6. 'if' → logprob: -5.726234436035156
    7. ' ' → logprob: -5.976234436035156
    8. '<|end|>' → logprob: -6.976234436035156
    9. '    ' → logprob: -7.226234436035156
    10. '	for' → logprob: -8.601234436035156

Token 302: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31300824880599976
    2. ' for' → logprob: -1.4380083084106445
    3. 'if' (adapté à ' if') → logprob: -3.8130083084106445
    4. ' if' → logprob: -4.8130083084106445
    5. '   ' → logprob: -6.8130083084106445
    6. '    ' → logprob: -10.688008308410645
    7. '	for' → logprob: -11.188008308410645
    8. '       ' → logprob: -11.938008308410645
    9. ' ' → logprob: -12.438008308410645
    10. '  ' → logprob: -13.313008308410645

Token 303: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.3133836090564728
    2. ' cards' → logprob: -1.3133835792541504
    3. '(cards' → logprob: -9.938384056091309
    4. '   ' → logprob: -10.938384056091309
    5. '.cards' → logprob: -11.188384056091309
    6. ' i' → logprob: -11.688384056091309
    7. 'i' → logprob: -11.813384056091309
    8. ' not' → logprob: -12.063384056091309
    9. ' ' → logprob: -12.063384056091309
    10. '0' → logprob: -13.188384056091309

Token 304: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.1782583391759545e-05
    2. '[' → logprob: -10.625031471252441
    3. ' i' → logprob: -13.250031471252441
    4. 'i' → logprob: -13.375031471252441
    5. ' and' → logprob: -13.625031471252441
    6. 'and' → logprob: -14.000031471252441
    7. ' [' → logprob: -14.625031471252441
    8. '[
' → logprob: -14.625031471252441
    9. '!=' → logprob: -14.750031471252441
    10. '[I' → logprob: -15.750031471252441

Token 305: ']==' (ID: 34128)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.7503969073295593
    2. ']' → logprob: -1.500396966934204
    3. ' !=' → logprob: -1.750396966934204
    4. ']!=' → logprob: -3.125396966934204
    5. '==' → logprob: -3.500396966934204
    6. '>' → logprob: -3.750396966934204
    7. 'and' → logprob: -4.500396728515625
    8. ']==' → logprob: -4.500396728515625
    9. ' and' → logprob: -5.250396728515625
    10. ' ==' → logprob: -5.750396728515625

Token 306: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015298592625185847
    2. ' ' → logprob: -6.626529693603516
    3. 'cards' → logprob: -8.751529693603516
    4. '1' → logprob: -10.376529693603516
    5. '2' → logprob: -12.251529693603516
    6. ''' → logprob: -13.251529693603516
    7. ' cards' → logprob: -13.501529693603516
    8. '   ' → logprob: -13.626529693603516
    9. '
' → logprob: -13.626529693603516
    10. 'c' → logprob: -14.251529693603516

Token 307: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0711146667599678
    2. ':' → logprob: -3.0711147785186768
    3. ':
' → logprob: -4.946114540100098
    4. ' and' → logprob: -5.071114540100098
    5. 'or' → logprob: -5.196114540100098
    6. ' ' → logprob: -6.696114540100098
    7. 'and' → logprob: -7.196114540100098
    8. ':return' → logprob: -7.446114540100098
    9. ' :' → logprob: -8.196114540100098
    10. ' continue' → logprob: -8.321114540100098

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7113434672355652
    2. '       ' → logprob: -1.46134352684021
    3. ':' → logprob: -1.71134352684021
    4. ' or' → logprob: -2.96134352684021
    5. ' continue' → logprob: -4.086343288421631
    6. ':
' → logprob: -4.461343288421631
    7. ' ' → logprob: -5.461343288421631
    8. '   ' → logprob: -5.961343288421631
    9. ' :' → logprob: -5.961343288421631
    10. '
' → logprob: -6.836343288421631

Token 309: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.40408453345298767
    2. ' continue' → logprob: -1.15408456325531
    3. '           ' → logprob: -4.2790846824646
    4. '	continue' → logprob: -6.1540846824646
    5. '       ' → logprob: -7.1540846824646
    6. '               ' → logprob: -9.279084205627441
    7. '   ' → logprob: -9.654084205627441
    8. '0' → logprob: -10.154084205627441
    9. 'contin' → logprob: -10.279084205627441
    10. '_continue' → logprob: -10.279084205627441

Token 310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027485599741339684
    2. '<|end|>' → logprob: -4.027485370635986
    3. '
' → logprob: -5.402485370635986
    4. '   ' → logprob: -6.027485370635986
    5. ' ' → logprob: -7.402485370635986
    6. ',' → logprob: -8.027485847473145
    7. '<|end|>' → logprob: -8.402485847473145
    8. ' for' → logprob: -8.402485847473145
    9. '    
' → logprob: -8.527485847473145
    10. '    ' → logprob: -8.652485847473145

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07625181972980499
    2. 'for' → logprob: -3.451251745223999
    3. ' for' → logprob: -3.701251745223999
    4. '   ' → logprob: -4.076251983642578
    5. '	for' → logprob: -11.576251983642578
    6. '           ' → logprob: -11.826251983642578
    7. ' ' → logprob: -11.951251983642578
    8. '     ' → logprob: -12.201251983642578
    9. '    ' → logprob: -12.576251983642578
    10. '	   ' → logprob: -12.701251983642578

Token 312: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11535294353961945
    2. ' for' → logprob: -2.2403528690338135
    3. '   ' → logprob: -5.990353107452393
    4. '       ' → logprob: -11.365352630615234
    5. '	for' → logprob: -12.115352630615234
    6. ' ' → logprob: -12.615352630615234
    7. '  ' → logprob: -13.615352630615234
    8. '    ' → logprob: -14.115352630615234
    9. 'j' → logprob: -14.865352630615234
    10. '           ' → logprob: -15.365352630615234

Token 313: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002450446132570505
    2. ' j' → logprob: -6.627450466156006
    3. 'n' → logprob: -7.877450466156006
    4. 'adj' → logprob: -8.127449989318848
    5. 'nj' → logprob: -8.627449989318848
    6. 'nei' → logprob: -9.377449989318848
    7. '   ' → logprob: -10.127449989318848
    8. 'a' → logprob: -10.127449989318848
    9. ' nxt' → logprob: -10.752449989318848
    10. 'nx' → logprob: -11.252449989318848

Token 314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012680222280323505
    2. 'in' → logprob: -4.3876800537109375
    3. ' ' → logprob: -8.762680053710938
    4. '	in' → logprob: -12.262680053710938
    5. ' i' → logprob: -12.637680053710938
    6. '<|end|>' → logprob: -13.637680053710938
    7. ',' → logprob: -13.762680053710938
    8. ')' → logprob: -14.387680053710938
    9. 'i' → logprob: -14.512680053710938
    10. '    ' → logprob: -14.762680053710938

Token 315: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6196085810661316
    2. ' adjacent' → logprob: -1.4946086406707764
    3. ' range' → logprob: -1.8696086406707764
    4. 'range' → logprob: -2.4946086406707764
    5. ' adjacency' → logprob: -8.244608879089355
    6. 'neighbors' → logprob: -8.744608879089355
    7. '[' → logprob: -9.494608879089355
    8. 'Adjacent' → logprob: -9.994608879089355
    9. '[i' → logprob: -9.994608879089355
    10. '(range' → logprob: -10.119608879089355

Token 316: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '(i' → logprob: -14.00000286102295
    3. '[j' → logprob: -14.25000286102295
    4. '[' → logprob: -14.62500286102295
    5. ' [' → logprob: -15.00000286102295
    6. '[I' → logprob: -16.625001907348633
    7. '```' → logprob: -16.750001907348633
    8. 'i' → logprob: -16.875001907348633
    9. '
' → logprob: -17.375001907348633
    10. '[s' → logprob: -17.875001907348633

Token 317: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.001676971442066133
    2. '):' → logprob: -7.1266770362854
    3. ':' → logprob: -7.6266770362854
    4. ']:
' → logprob: -8.626676559448242
    5. ']):' → logprob: -9.626676559448242
    6. ']' → logprob: -9.876676559448242
    7. '}:' → logprob: -10.251676559448242
    8. '>:' → logprob: -10.626676559448242
    9. ']:
' → logprob: -11.751676559448242
    10. '       ' → logprob: -12.126676559448242

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029334835708141327
    2. '<|end|>' → logprob: -6.627933502197266
    3. '       ' → logprob: -7.127933502197266
    4. ' if' → logprob: -7.752933502197266
    5. '	       ' → logprob: -8.627933502197266
    6. '<|end|>' → logprob: -9.252933502197266
    7. '               ' → logprob: -10.752933502197266
    8. 'if' → logprob: -10.752933502197266
    9. '```' → logprob: -12.002933502197266
    10. ',' → logprob: -12.127933502197266

Token 319: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5638322830200195
    2. '               ' → logprob: -1.5638322830200195
    3. '           ' → logprob: -1.6888322830200195
    4. 'if' (adapté à ' if') → logprob: -3.4388322830200195
    5. '<|end|>' → logprob: -5.6888322830200195
    6. '       ' → logprob: -6.8138322830200195
    7. '            ' → logprob: -9.18883228302002
    8. ' ' → logprob: -9.81383228302002
    9. '	       ' → logprob: -10.81383228302002
    10. '   ' → logprob: -11.43883228302002

Token 320: ' j' (ID: 441)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.012565218843519688
    2. ' cards' → logprob: -4.3875651359558105
    3. '   ' → logprob: -10.262565612792969
    4. 'j' → logprob: -12.012565612792969
    5. '(cards' → logprob: -12.137565612792969
    6. ' ' → logprob: -12.637565612792969
    7. 'i' → logprob: -13.887565612792969
    8. 'c' → logprob: -14.137565612792969
    9. 'cars' → logprob: -14.262565612792969
    10. '           ' → logprob: -14.512565612792969

Token 321: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4316648840904236
    2. ' >' → logprob: -1.0566649436950684
    3. ' !=' → logprob: -7.056664943695068
    4. ' <' → logprob: -7.931664943695068
    5. '!=' → logprob: -7.931664943695068
    6. 'i' → logprob: -8.18166446685791
    7. ' i' → logprob: -8.30666446685791
    8. '<|end|>' → logprob: -8.30666446685791
    9. '<i' → logprob: -8.93166446685791
    10. ']>' → logprob: -8.93166446685791

Token 322: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00038038729690015316
    2. ' i' → logprob: -7.875380516052246
    3. '<|end|>' → logprob: -15.625380516052246
    4. '   ' → logprob: -16.50037956237793
    5. ' ' → logprob: -17.12537956237793
    6. '
' → logprob: -17.50037956237793
    7. '=i' → logprob: -17.87537956237793
    8. '	i' → logprob: -18.00037956237793
    9. '=' → logprob: -18.12537956237793
    10. ')i' → logprob: -18.50037956237793

Token 323: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07891358435153961
    2. 'and' → logprob: -2.578913688659668
    3. '           ' → logprob: -10.703913688659668
    4. '               ' → logprob: -14.328913688659668
    5. ' ' → logprob: -15.453913688659668
    6. '            ' → logprob: -16.20391273498535
    7. '       ' → logprob: -16.32891273498535
    8. '          ' → logprob: -16.32891273498535
    9. '	and' → logprob: -16.32891273498535
    10. ',' → logprob: -16.70391273498535

Token 324: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.02331535890698433
    2. ' cards' → logprob: -3.7733154296875
    3. '           ' → logprob: -10.2733154296875
    4. '(cards' → logprob: -10.8983154296875
    5. '   ' → logprob: -12.7733154296875
    6. ' ' → logprob: -12.8983154296875
    7. '               ' → logprob: -13.5233154296875
    8. '.cards' → logprob: -13.6483154296875
    9. 'j' → logprob: -13.7733154296875
    10. '0' → logprob: -14.0233154296875

Token 325: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005955583415925503
    2. '[i' → logprob: -5.130955696105957
    3. 'j' → logprob: -11.255955696105957
    4. '[' → logprob: -12.005955696105957
    5. ')[' → logprob: -12.755955696105957
    6. '][' → logprob: -13.630955696105957
    7. '==' → logprob: -13.755955696105957
    8. '```' → logprob: -14.255955696105957
    9. ' [' → logprob: -15.005955696105957
    10. ' j' → logprob: -15.005955696105957

Token 326: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.22771510481834412
    2. ']' → logprob: -1.6027151346206665
    3. '[i' → logprob: -6.477715015411377
    4. '==' → logprob: -7.727715015411377
    5. ' ==' → logprob: -9.602715492248535
    6. ')==' → logprob: -9.727715492248535
    7. ' ]' → logprob: -9.852715492248535
    8. '[j' → logprob: -9.977715492248535
    9. '']==' → logprob: -10.727715492248535
    10. 'i' → logprob: -10.852715492248535

Token 327: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4751850962638855
    2. ' ==' → logprob: -0.9751850962638855
    3. ']==' → logprob: -7.100184917449951
    4. ')==' → logprob: -9.47518539428711
    5. ' ' → logprob: -9.60018539428711
    6. ' and' → logprob: -10.60018539428711
    7. '()==' → logprob: -10.85018539428711
    8. '[' → logprob: -11.22518539428711
    9. ']' → logprob: -11.22518539428711
    10. 'and' → logprob: -11.47518539428711

Token 328: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.018165279179811478
    2. ' cards' → logprob: -4.018165111541748
    3. ' ' → logprob: -12.768165588378906
    4. '(cards' → logprob: -12.768165588378906
    5. '   ' → logprob: -12.893165588378906
    6. 'card' → logprob: -13.393165588378906
    7. '.cards' → logprob: -13.518165588378906
    8. 'cars' → logprob: -13.893165588378906
    9. 'codes' → logprob: -14.893165588378906
    10. '           ' → logprob: -15.268165588378906

Token 329: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9623810658231378e-05
    2. 'i' → logprob: -10.875020027160645
    3. '```' → logprob: -15.000020027160645
    4. '[' → logprob: -16.625019073486328
    5. '[j' → logprob: -17.000019073486328
    6. '[
' → logprob: -17.250019073486328
    7. '`' → logprob: -17.250019073486328
    8. '(i' → logprob: -17.250019073486328
    9. ' [' → logprob: -17.375019073486328
    10. '   ' → logprob: -17.750019073486328

Token 330: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.452728271484375
    2. ']:' → logprob: -1.327728271484375
    3. '):' → logprob: -2.827728271484375
    4. ':
' → logprob: -4.202728271484375
    5. ']:
' → logprob: -4.577728271484375
    6. '):
' → logprob: -4.952728271484375
    7. ' and' → logprob: -5.327728271484375
    8. '           ' → logprob: -6.952728271484375
    9. '       ' → logprob: -6.952728271484375
    10. ']' → logprob: -8.077728271484375

Token 331: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007156503852456808
    2. ',' → logprob: -8.125715255737305
    3. ':' → logprob: -9.000715255737305
    4. '           ' → logprob: -9.500715255737305
    5. ':
' → logprob: -9.875715255737305
    6. ',p' → logprob: -10.000715255737305
    7. ' pairs' → logprob: -10.125715255737305
    8. '                   ' → logprob: -10.500715255737305
    9. '):
' → logprob: -11.375715255737305
    10. '                
' → logprob: -12.125715255737305

Token 332: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.26798737049102783
    2. 'pairs' (adapté à ' pairs') → logprob: -1.8929873704910278
    3. '               ' → logprob: -2.5179872512817383
    4. '                   ' → logprob: -5.642987251281738
    5. 'p' → logprob: -8.892987251281738
    6. ',p' → logprob: -10.017987251281738
    7. '_pairs' → logprob: -10.392987251281738
    8. ' p' → logprob: -10.642987251281738
    9. '           ' → logprob: -11.267987251281738
    10. '   ' → logprob: -11.642987251281738

Token 333: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007283978629857302
    2. '.' → logprob: -7.250728607177734
    3. ' .' → logprob: -11.000728607177734
    4. '               ' → logprob: -13.875728607177734
    5. '                   ' → logprob: -15.625728607177734
    6. ').' → logprob: -15.750728607177734
    7. '].' → logprob: -15.750728607177734
    8. 'append' → logprob: -15.875728607177734
    9. '.app' → logprob: -16.375728607177734
    10. '.Append' → logprob: -17.250728607177734

Token 334: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.001894010347314179
    2. '(i' → logprob: -6.501893997192383
    3. '(' → logprob: -7.876893997192383
    4. '   ' → logprob: -11.376893997192383
    5. ' (' → logprob: -15.501893997192383
    6. ' ' → logprob: -15.626893997192383
    7. '  ' → logprob: -16.251893997192383
    8. '(j' → logprob: -16.376893997192383
    9. ' ((' → logprob: -16.751893997192383
    10. '[(' → logprob: -16.876893997192383

Token 335: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002614550176076591
    2. ' i' → logprob: -8.875261306762695
    3. '(i' → logprob: -9.250261306762695
    4. '   ' → logprob: -11.000261306762695
    5. 'j' → logprob: -13.125261306762695
    6. ')i' → logprob: -13.500261306762695
    7. ')' → logprob: -13.625261306762695
    8. ' (' → logprob: -14.125261306762695
    9. ' ' → logprob: -14.125261306762695
    10. ',i' → logprob: -14.250261306762695

Token 336: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01105442550033331
    2. ',j' → logprob: -4.511054515838623
    3. ' ,' → logprob: -12.511054039001465
    4. ',
' → logprob: -12.761054039001465
    5. ',)' → logprob: -17.38605499267578
    6. 'j' → logprob: -18.13605499267578
    7. '   ' → logprob: -18.51105499267578
    8. ',

' → logprob: -18.51105499267578
    9. ')' → logprob: -18.51105499267578
    10. '‌,' → logprob: -18.63605499267578

Token 337: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00024524700711481273
    2. '))
' → logprob: -8.625245094299316
    3. ')' → logprob: -9.750245094299316
    4. ' ))' → logprob: -12.750245094299316
    5. ',' → logprob: -13.500245094299316
    6. ')))' → logprob: -13.875245094299316
    7. '   ' → logprob: -14.375245094299316
    8. '),' → logprob: -15.000245094299316
    9. '       ' → logprob: -15.500245094299316
    10. '               ' → logprob: -15.625245094299316

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011712945997714996
    2. '<|end|>' → logprob: -7.626171112060547
    3. '    
' → logprob: -7.876171112060547
    4. ',' → logprob: -9.501171112060547
    5. '.' → logprob: -9.626171112060547
    6. ' for' → logprob: -9.751171112060547
    7. ')' → logprob: -10.126171112060547
    8. '
' → logprob: -11.001171112060547
    9. '  
' → logprob: -11.876171112060547
    10. 'for' → logprob: -11.876171112060547

Token 339: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1274476051330566
    2. ' for' → logprob: -1.1274476051330566
    3. ' if' → logprob: -1.5024476051330566
    4. 'if' (adapté à ' if') → logprob: -2.6274476051330566
    5. 'for' → logprob: -2.8774476051330566
    6. '    
' → logprob: -7.627447605133057
    7. ' ' → logprob: -8.252447128295898
    8. '
' → logprob: -9.252447128295898
    9. ' 
' → logprob: -10.252447128295898
    10. ',' → logprob: -10.502447128295898

Token 340: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008717869408428669
    2. 'not' → logprob: -4.758718013763428
    3. ' len' → logprob: -9.75871753692627
    4. ' pairs' → logprob: -10.38371753692627
    5. 'len' → logprob: -11.88371753692627
    6. 'pairs' → logprob: -12.00871753692627
    7. ' cards' → logprob: -14.00871753692627
    8. ' ' → logprob: -14.75871753692627
    9. '   ' → logprob: -16.508718490600586
    10. '	not' → logprob: -16.883718490600586

Token 341: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.10020839422941208
    2. ' pairs' → logprob: -2.350208282470703
    3. '_pairs' → logprob: -13.975208282470703
    4. 'pair' → logprob: -15.225208282470703
    5. 'p' → logprob: -15.475208282470703
    6. 'cards' → logprob: -16.225208282470703
    7. 'Pairs' → logprob: -16.350208282470703
    8. 'airs' → logprob: -17.350208282470703
    9. ' ' → logprob: -17.350208282470703
    10. '   ' → logprob: -17.475208282470703

Token 342: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011665337951853871
    2. ':
' → logprob: -6.876166343688965
    3. ':return' → logprob: -9.001166343688965
    4. ' :' → logprob: -11.501166343688965
    5. '):' → logprob: -16.50116729736328
    6. 'return' → logprob: -16.50116729736328
    7. ':
' → logprob: -16.87616729736328
    8. ':

' → logprob: -16.87616729736328
    9. ' :
' → logprob: -17.25116729736328
    10. '():' → logprob: -17.50116729736328

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003908250015228987
    2. 'return' → logprob: -6.253908157348633
    3. ' return' → logprob: -6.378908157348633
    4. '   ' → logprob: -8.253908157348633
    5. '
' → logprob: -11.753908157348633
    6. '           ' → logprob: -12.753908157348633
    7. ',' → logprob: -13.378908157348633
    8. '	' → logprob: -13.878908157348633
    9. '        
' → logprob: -14.003908157348633
    10. ':return' → logprob: -14.003908157348633

Token 344: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014980592764914036
    2. ' return' → logprob: -4.889980792999268
    3. '       ' → logprob: -5.014980792999268
    4. '   ' → logprob: -7.264980792999268
    5. '0' → logprob: -13.26498031616211
    6. '#' → logprob: -13.38998031616211
    7. '
' → logprob: -13.38998031616211
    8. '	return' → logprob: -13.51498031616211
    9. 'for' → logprob: -14.13998031616211
    10. 'if' → logprob: -14.38998031616211

Token 345: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6254986524581909
    2. ' ' → logprob: -1.375498652458191
    3. 'False' → logprob: -2.5004987716674805
    4. 'None' → logprob: -3.6254987716674805
    5. 'True' → logprob: -3.7504987716674805
    6. 'float' → logprob: -3.8754987716674805
    7. ' None' → logprob: -4.3754987716674805
    8. '1' → logprob: -4.5004987716674805
    9. ' False' → logprob: -4.7504987716674805
    10. ' True' → logprob: -4.8754987716674805

Token 346: '(' (ID: 7)
  Prédit: '(cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.2477525919675827
    2. '(' → logprob: -1.8727525472640991
    3. '(c' → logprob: -2.9977526664733887
    4. '(card' → logprob: -4.622752666473389
    5. 'cards' → logprob: -5.372752666473389
    6. '(x' → logprob: -7.622752666473389
    7. '([' → logprob: -7.747752666473389
    8. '1' → logprob: -9.37275218963623
    9. '(v' → logprob: -9.74775218963623
    10. '(value' → logprob: -9.74775218963623

Token 347: '1' (ID: 16)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.4142923653125763
    2. 'c' → logprob: -1.664292335510254
    3. '1' → logprob: -2.164292335510254
    4. 'card' → logprob: -3.414292335510254
    5. '(' → logprob: -7.789292335510254
    6. '[' → logprob: -7.914292335510254
    7. '[c' → logprob: -8.164292335510254
    8. '(cards' → logprob: -8.289292335510254
    9. 'v' → logprob: -8.539292335510254
    10. 'val' → logprob: -8.914292335510254

Token 348: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18346072733402252
    2. 'for' → logprob: -1.8084607124328613
    3. ' if' → logprob: -6.683460712432861
    4. 'if' → logprob: -7.308460712432861
    5. '(c' → logprob: -7.558460712432861
    6. '
' → logprob: -7.933460712432861
    7. 'c' → logprob: -8.05846118927002
    8. ')' → logprob: -8.68346118927002
    9. ',' → logprob: -9.05846118927002
    10. ' ' → logprob: -9.55846118927002

Token 349: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.128058522939682
    2. 'x' → logprob: -2.128058433532715
    3. ' c' → logprob: -7.003058433532715
    4. ' x' → logprob: -9.253058433532715
    5. 'i' → logprob: -9.503058433532715
    6. 'v' → logprob: -10.128058433532715
    7. '_' → logprob: -12.253058433532715
    8. 'card' → logprob: -13.253058433532715
    9. 'p' → logprob: -13.753058433532715
    10. '   ' → logprob: -14.128058433532715

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025429665111005306
    2. 'in' → logprob: -6.002542972564697
    3. 'c' → logprob: -9.752542495727539
    4. ' ' → logprob: -11.752542495727539
    5. ' c' → logprob: -14.752542495727539
    6. '   ' → logprob: -14.877542495727539
    7. '  ' → logprob: -15.627542495727539
    8. '
' → logprob: -16.37754249572754
    9. 'import' → logprob: -16.75254249572754
    10. 'd' → logprob: -17.50254249572754

Token 351: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.1427219659090042
    2. ' cards' → logprob: -2.0177218914031982
    3. '(cards' → logprob: -10.767722129821777
    4. '.cards' → logprob: -11.767722129821777
    5. 'c' → logprob: -12.267722129821777
    6. ' ' → logprob: -12.517722129821777
    7. 'card' → logprob: -13.017722129821777
    8. '
' → logprob: -13.142722129821777
    9. '   ' → logprob: -13.392722129821777
    10. 'cars' → logprob: -14.392722129821777

Token 352: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.007610293570905924
    2. 'if' → logprob: -4.882610321044922
    3. ' ' → logprob: -12.757610321044922
    4. '   ' → logprob: -14.507610321044922
    5. ')' → logprob: -15.632610321044922
    6. '    ' → logprob: -16.007610321044922
    7. '  ' → logprob: -16.257610321044922
    8. '	if' → logprob: -16.507610321044922
    9. '>' → logprob: -16.882610321044922
    10. ' c' → logprob: -17.007610321044922

Token 353: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0889502614736557
    2. ' c' → logprob: -2.4639501571655273
    3. '   ' → logprob: -12.338950157165527
    4. ' ' → logprob: -12.338950157165527
    5. '	c' → logprob: -14.463950157165527
    6. ')c' → logprob: -14.588950157165527
    7. '  ' → logprob: -14.963950157165527
    8. '    ' → logprob: -15.963950157165527
    9. '0' → logprob: -15.963950157165527
    10. '     ' → logprob: -16.088951110839844

Token 354: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.28068625926971436
    2. ' !=' → logprob: -1.6556862592697144
    3. '>' → logprob: -3.030686378479004
    4. ')' → logprob: -5.530686378479004
    5. ')!=' → logprob: -7.405686378479004
    6. ' >' → logprob: -8.155686378479004
    7. '0' → logprob: -9.405686378479004
    8. ')>' → logprob: -9.405686378479004
    9. '==' → logprob: -9.905686378479004
    10. ' not' → logprob: -9.905686378479004

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150178715586662
    2. ' ' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.768150329589844
    4. '  ' → logprob: -17.268150329589844
    5. '   ' → logprob: -17.393150329589844
    6. ')' → logprob: -17.518150329589844
    7. '1' → logprob: -17.643150329589844
    8. '
' → logprob: -17.893150329589844
    9. '2' → logprob: -18.330650329589844
    10. '=' → logprob: -19.143150329589844

Token 356: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012201975914649665
    2. ')
' → logprob: -9.3751220703125
    3. ' )' → logprob: -10.5001220703125
    4. '),' → logprob: -11.8751220703125
    5. '   ' → logprob: -13.7501220703125
    6. ')+' → logprob: -14.6251220703125
    7. ' ' → logprob: -15.5001220703125
    8. '))' → logprob: -15.6251220703125
    9. '  ' → logprob: -15.6251220703125
    10. ')

' → logprob: -16.0001220703125

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1141209751367569
    2. '    
' → logprob: -2.3641209602355957
    3. '
' → logprob: -4.364120960235596
    4. '  
' → logprob: -7.614120960235596
    5. '   
' → logprob: -8.739121437072754
    6. ' 
' → logprob: -8.864121437072754
    7. '        
' → logprob: -9.614121437072754
    8. '<|end|>' → logprob: -10.239121437072754
    9. 'return' → logprob: -10.739121437072754
    10. '0' → logprob: -10.864121437072754

Token 358: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.24351896345615387
    2. 'best' → logprob: -2.2435190677642822
    3. 'max' → logprob: -2.9935190677642822
    4. '   ' → logprob: -3.9935190677642822
    5. ' res' → logprob: -4.368518829345703
    6. 'ans' → logprob: -4.368518829345703
    7. 'min' → logprob: -5.243518829345703
    8. 'result' → logprob: -5.618518829345703
    9. ' best' → logprob: -6.368518829345703
    10. 'ret' → logprob: -6.493518829345703

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693051993846893
    2. '=' → logprob: -2.1269304752349854
    3. '   ' → logprob: -13.626930236816406
    4. ' =
' → logprob: -15.126930236816406
    5. 's' → logprob: -15.501930236816406
    6. '  ' → logprob: -15.626930236816406
    7. ' ' → logprob: -16.126930236816406
    8. '    ' → logprob: -16.501930236816406
    9. '=int' → logprob: -16.626930236816406
    10. '=max' → logprob: -16.751930236816406

Token 360: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04225187376141548
    2. 'min' → logprob: -4.042252063751221
    3. '10' → logprob: -4.417252063751221
    4. '20' → logprob: -5.167252063751221
    5. '0' → logprob: -5.667252063751221
    6. 'max' → logprob: -6.667252063751221
    7. '100' → logprob: -7.417252063751221
    8. ' float' → logprob: -8.292251586914062
    9. 'len' → logprob: -8.542251586914062
    10. '1' → logprob: -9.042251586914062

Token 361: '20' (ID: 455)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.056119635701179504
    2. 'min' → logprob: -3.306119680404663
    3. '10' → logprob: -4.306119441986084
    4. '20' → logprob: -6.181119441986084
    5. 'max' → logprob: -6.556119441986084
    6. '100' → logprob: -7.681119441986084
    7. '0' → logprob: -8.806119918823242
    8. 'len' → logprob: -9.056119918823242
    9. '1' → logprob: -9.431119918823242
    10. ' float' → logprob: -10.056119918823242

Token 362: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012591471895575523
    2. '   ' → logprob: -5.012591361999512
    3. '<|end|>' → logprob: -5.762591361999512
    4. '    
' → logprob: -7.262591361999512
    5. '+' → logprob: -7.762591361999512
    6. '
' → logprob: -8.387591361999512
    7. '<|end|>' → logprob: -8.387591361999512
    8. '  
' → logprob: -8.762591361999512
    9. '-' → logprob: -8.887591361999512
    10. ' 
' → logprob: -9.012591361999512

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03799466788768768
    2. '    
' → logprob: -3.912994623184204
    3. '
' → logprob: -4.537994861602783
    4. ' for' → logprob: -5.287994861602783
    5. 'for' → logprob: -6.787994861602783
    6. '<|end|>' → logprob: -9.037994384765625
    7. '	
' → logprob: -9.537994384765625
    8. ' 
' → logprob: -9.787994384765625
    9. '	for' → logprob: -9.787994384765625
    10. '  
' → logprob: -9.912994384765625

Token 364: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2840999662876129
    2. 'for' (adapté à ' for') → logprob: -1.7840999364852905
    3. '   ' → logprob: -2.53410005569458
    4. '    
' → logprob: -11.284099578857422
    5. '	for' → logprob: -11.784099578857422
    6. '
' → logprob: -12.034099578857422
    7. ' ' → logprob: -15.159099578857422
    8. ' 
' → logprob: -15.409099578857422
    9. '```' → logprob: -15.409099578857422
    10. '  
' → logprob: -15.659099578857422

Token 365: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012794747948646545
    2. '(i' → logprob: -5.2627949714660645
    3. ' i' → logprob: -5.3877949714660645
    4. 'pair' → logprob: -6.7627949714660645
    5. 'p' → logprob: -7.2627949714660645
    6. 'pi' → logprob: -7.3877949714660645
    7. 'x' → logprob: -8.887794494628906
    8. 'a' → logprob: -8.887794494628906
    9. ' (' → logprob: -9.512794494628906
    10. ' pair' → logprob: -10.137794494628906

Token 366: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20218563079833984
    2. ',j' → logprob: -1.7021856307983398
    3. ',p' → logprob: -7.57718563079834
    4. ' ,' → logprob: -8.95218563079834
    5. '_,' → logprob: -10.07718563079834
    6. ',(' → logprob: -10.20218563079834
    7. ',v' → logprob: -10.32718563079834
    8. 'p' → logprob: -12.07718563079834
    9. '1' → logprob: -13.32718563079834
    10. 'j' → logprob: -13.32718563079834

Token 367: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16049443185329437
    2. 'in' → logprob: -1.9104944467544556
    3. ',' → logprob: -8.285494804382324
    4. ')' → logprob: -11.660494804382324
    5. ' ' → logprob: -12.660494804382324
    6. ' ,' → logprob: -13.535494804382324
    7. '```' → logprob: -13.660494804382324
    8. '   ' → logprob: -14.410494804382324
    9. '	in' → logprob: -14.660494804382324
    10. '
' → logprob: -15.160494804382324

Token 368: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.06994020938873291
    2. ' pairs' → logprob: -2.6949400901794434
    3. '_pairs' → logprob: -13.944940567016602
    4. '[' → logprob: -13.944940567016602
    5. '   ' → logprob: -14.194940567016602
    6. 'pair' → logprob: -14.819940567016602
    7. ' ' → logprob: -15.444940567016602
    8. 'p' → logprob: -15.569940567016602
    9. '[p' → logprob: -15.694940567016602
    10. 'Pairs' → logprob: -15.694940567016602

Token 369: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4742083251476288
    2. ':
' → logprob: -0.9742083549499512
    3. '       ' → logprob: -9.974207878112793
    4. '   ' → logprob: -10.599207878112793
    5. '):
' → logprob: -10.724207878112793
    6. ':
' → logprob: -10.974207878112793
    7. ',' → logprob: -11.474207878112793
    8. '):' → logprob: -12.349207878112793
    9. ':

' → logprob: -13.099207878112793
    10. ' :
' → logprob: -13.349207878112793

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03305571526288986
    2. ' new' → logprob: -3.5330557823181152
    3. 'new' → logprob: -6.033055782318115
    4. '        
' → logprob: -8.658055305480957
    5. ' cards' → logprob: -8.658055305480957
    6. '   ' → logprob: -8.783055305480957
    7. 'cards' → logprob: -8.908055305480957
    8. '
' → logprob: -10.158055305480957
    9. '           ' → logprob: -10.408055305480957
    10. ' if' → logprob: -10.658055305480957

Token 371: ' lst' (ID: 33384)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.14137838780879974
    2. ' new' → logprob: -2.516378402709961
    3. '       ' → logprob: -3.016378402709961
    4. 'cards' → logprob: -7.016378402709961
    5. 'next' → logprob: -7.641378402709961
    6. 'tmp' → logprob: -8.766378402709961
    7. '   ' → logprob: -9.016378402709961
    8. 'temp' → logprob: -9.266378402709961
    9. 'lst' (adapté à ' lst') → logprob: -9.891378402709961
    10. 'nc' → logprob: -10.391378402709961

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048594068735837936
    2. '=' → logprob: -3.0485939979553223
    3. '_cards' → logprob: -12.79859447479248
    4. '=list' → logprob: -13.79859447479248
    5. 's' → logprob: -13.92359447479248
    6. 'cards' → logprob: -14.29859447479248
    7. '(cards' → logprob: -15.17359447479248
    8. ' ' → logprob: -15.79859447479248
    9. ' =[' → logprob: -15.92359447479248
    10. '   ' → logprob: -16.173593521118164

Token 373: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.505351095460355e-05
    2. ' list' → logprob: -9.500075340270996
    3. '[list' → logprob: -16.25007438659668
    4. '   ' → logprob: -19.25007438659668
    5. '[' → logprob: -20.12507438659668
    6. 'lst' → logprob: -21.50007438659668
    7. '(list' → logprob: -21.87507438659668
    8. '	list' → logprob: -23.12507438659668
    9. 'lists' → logprob: -23.12507438659668
    10. '=list' → logprob: -23.25007438659668

Token 374: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -5.512236498361744e-07
    2. 'cards' → logprob: -15.000000953674316
    3. '(' → logprob: -16.75
    4. ' cards' → logprob: -17.5
    5. '(card' → logprob: -18.0
    6. '/cards' → logprob: -18.5
    7. '(chars' → logprob: -19.25
    8. '(c' → logprob: -19.5
    9. '.cards' → logprob: -20.0
    10. '(
' → logprob: -20.0

Token 375: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07892481982707977
    2. ')' → logprob: -2.5789248943328857
    3. ')
' → logprob: -10.328925132751465
    4. ')

' → logprob: -13.328925132751465
    5. ' )
' → logprob: -14.953925132751465
    6. ')c' → logprob: -15.828925132751465
    7. ')`
' → logprob: -16.57892417907715
    8. '())
' → logprob: -17.57892417907715
    9. '),' → logprob: -17.57892417907715
    10. ' )' → logprob: -17.70392417907715

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.153795766294934e-06
    2. 'lst' → logprob: -12.375005722045898
    3. '        
' → logprob: -14.625005722045898
    4. ' lst' → logprob: -14.875005722045898
    5. '           ' → logprob: -15.500005722045898
    6. '   ' → logprob: -15.500005722045898
    7. ',' → logprob: -16.2500057220459
    8. '```' → logprob: -16.3750057220459
    9. '      ' → logprob: -16.7500057220459
    10. '	' → logprob: -16.8750057220459

Token 377: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.04202502220869064
    2. '       ' → logprob: -3.292025089263916
    3. ' lst' → logprob: -5.542025089263916
    4. '   ' → logprob: -10.167024612426758
    5. '           ' → logprob: -11.917024612426758
    6. '```' → logprob: -12.042024612426758
    7. '        
' → logprob: -13.917024612426758
    8. ' ' → logprob: -14.167024612426758
    9. '(lst' → logprob: -14.542024612426758
    10. 'l' → logprob: -14.667024612426758

Token 378: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[j' → logprob: -13.750001907348633
    3. ' [' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '
' → logprob: -16.875001907348633
    6. '[' → logprob: -17.000001907348633
    7. ')[' → logprob: -17.250001907348633
    8. 'i' → logprob: -17.250001907348633
    9. '```' → logprob: -17.375001907348633
    10. '[I' → logprob: -17.750001907348633

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007060007657855749
    2. ']=' → logprob: -5.0070600509643555
    3. '=' → logprob: -8.382060050964355
    4. '],' → logprob: -9.382060050964355
    5. ' ]' → logprob: -11.257060050964355
    6. ',' → logprob: -11.382060050964355
    7. ' =' → logprob: -12.132060050964355
    8. ']==' → logprob: -14.507060050964355
    9. ']
' → logprob: -15.257060050964355
    10. ']='' → logprob: -15.757060050964355

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006145407445728779
    2. ' =' → logprob: -5.131145477294922
    3. ',' → logprob: -8.756145477294922
    4. '=
' → logprob: -10.006145477294922
    5. '=

' → logprob: -11.756145477294922
    6. '=l' → logprob: -12.881145477294922
    7. ',l' → logprob: -13.881145477294922
    8. ']=' → logprob: -14.006145477294922
    9. ' =
' → logprob: -14.506145477294922
    10. '>' → logprob: -14.631145477294922

Token 381: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. 'lst' → logprob: -13.250001907348633
    3. ' ' → logprob: -15.250001907348633
    4. '       ' → logprob: -17.875001907348633
    5. '           ' → logprob: -18.000001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '```' → logprob: -19.875001907348633
    8. '000' → logprob: -20.250001907348633
    9. '        ' → logprob: -20.250001907348633
    10. '۰' → logprob: -20.625001907348633

Token 382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5570885807392187e-05
    2. 'lst' → logprob: -11.125015258789062
    3. ' ' → logprob: -14.375015258789062
    4. '<|end|>' → logprob: -17.000015258789062
    5. '```' → logprob: -18.125015258789062
    6. '       ' → logprob: -18.125015258789062
    7. '           ' → logprob: -18.250015258789062
    8. '
' → logprob: -18.562515258789062
    9. '۰' → logprob: -19.000015258789062
    10. ' lst' → logprob: -19.187515258789062

Token 383: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.166338137816638e-05
    2. 'lst' → logprob: -11.000031471252441
    3. '   ' → logprob: -11.875031471252441
    4. ',' → logprob: -12.500031471252441
    5. '<|end|>' → logprob: -13.000031471252441
    6. ' lst' → logprob: -14.250031471252441
    7. '           ' → logprob: -15.000031471252441
    8. ' ' → logprob: -15.625031471252441
    9. '     ' → logprob: -16.000032424926758
    10. '      ' → logprob: -16.000032424926758

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.873571692267433e-05
    2. 'lst' → logprob: -9.625068664550781
    3. ' lst' → logprob: -13.750068664550781
    4. '   ' → logprob: -13.875068664550781
    5. '<|end|>' → logprob: -15.375068664550781
    6. '           ' → logprob: -16.00006866455078
    7. ',' → logprob: -16.50006866455078
    8. '      ' → logprob: -16.62506866455078
    9. '     ' → logprob: -17.12506866455078
    10. '        
' → logprob: -17.37506866455078

Token 385: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.007252465467900038
    2. '       ' → logprob: -5.1322526931762695
    3. ' lst' → logprob: -6.6322526931762695
    4. 'list' → logprob: -12.50725269317627
    5. '.lst' → logprob: -14.63225269317627
    6. 'l' → logprob: -14.75725269317627
    7. '(lst' → logprob: -15.00725269317627
    8. '_lst' → logprob: -15.00725269317627
    9. '   ' → logprob: -15.50725269317627
    10. '      ' → logprob: -15.88225269317627

Token 386: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.77627644513268e-06
    2. 'j' → logprob: -12.625008583068848
    3. ' [' → logprob: -13.125008583068848
    4. '[' → logprob: -13.125008583068848
    5. '][' → logprob: -14.250008583068848
    6. '```' → logprob: -15.625008583068848
    7. '   ' → logprob: -15.875008583068848
    8. '[i' → logprob: -16.000009536743164
    9. ']' → logprob: -16.250009536743164
    10. '[js' → logprob: -16.500009536743164

Token 387: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007997079752385616
    2. '=' → logprob: -5.382997035980225
    3. ']=' → logprob: -5.757997035980225
    4. ' =' → logprob: -8.882997512817383
    5. ' ]' → logprob: -9.632997512817383
    6. ')' → logprob: -12.257997512817383
    7. '<|end|>' → logprob: -12.757997512817383
    8. ']==' → logprob: -15.132997512817383
    9. '']' → logprob: -15.632997512817383
    10. ']+=' → logprob: -15.882997512817383

Token 388: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975083328783512
    2. ' =' → logprob: -3.5297508239746094
    3. '<|end|>' → logprob: -15.02975082397461
    4. '=
' → logprob: -17.02975082397461
    5. ' ' → logprob: -17.40475082397461
    6. ')' → logprob: -17.77975082397461
    7. ']=' → logprob: -18.65475082397461
    8. '0' → logprob: -18.77975082397461
    9. ']' → logprob: -19.15475082397461
    10. ')=' → logprob: -19.52975082397461

Token 389: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -15.500553131103516
    4. '۰' → logprob: -18.500553131103516
    5. '```' → logprob: -19.125553131103516
    6. '   ' → logprob: -19.375553131103516
    7. '  ' → logprob: -20.813053131103516
    8. ' ' → logprob: -20.875553131103516
    9. '00' → logprob: -20.938053131103516
    10. '=' → logprob: -21.063053131103516

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.875001907348633
    3. '<|end|>' → logprob: -14.250001907348633
    4. '۰' → logprob: -18.000001907348633
    5. '```' → logprob: -19.125001907348633
    6. '<|end|>' → logprob: -19.125001907348633
    7. '=' → logprob: -20.937501907348633
    8. '০' → logprob: -21.000001907348633
    9. '   ' → logprob: -21.500001907348633
    10. '٠' → logprob: -22.000001907348633

Token 391: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006355804391205311
    2. '
' → logprob: -5.2563557624816895
    3. '<|end|>' → logprob: -8.131356239318848
    4. '        
' → logprob: -8.256356239318848
    5. ',' → logprob: -8.381356239318848
    6. ')' → logprob: -9.506356239318848
    7. '
' → logprob: -9.756356239318848
    8. '   ' → logprob: -9.881356239318848
    9. '  
' → logprob: -10.006356239318848
    10. 'res' → logprob: -11.256356239318848

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000260382192209363
    2. '<|end|>' → logprob: -9.250260353088379
    3. '        
' → logprob: -10.375260353088379
    4. '   ' → logprob: -10.375260353088379
    5. ',' → logprob: -10.625260353088379
    6. ')' → logprob: -11.125260353088379
    7. ' res' → logprob: -11.250260353088379
    8. ' for' → logprob: -11.750260353088379
    9. ' next' → logprob: -12.000260353088379
    10. ' try' → logprob: -12.250260353088379

Token 393: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0005787697155028582
    2. 'score' → logprob: -9.250578880310059
    3. ' res' → logprob: -9.375578880310059
    4. 'temp' → logprob: -9.625578880310059
    5. 'cost' → logprob: -9.750578880310059
    6. 'tmp' → logprob: -9.875578880310059
    7. 'result' → logprob: -10.500578880310059
    8. 'rest' → logprob: -10.500578880310059
    9. 'moves' → logprob: -10.500578880310059
    10. 'new' → logprob: -10.500578880310059

Token 394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693734467029572
    2. '=' → logprob: -2.1269373893737793
    3. '=min' → logprob: -11.626936912536621
    4. '   ' → logprob: -15.626936912536621
    5. 'min' → logprob: -16.126937866210938
    6. '=max' → logprob: -17.376937866210938
    7. '＝' → logprob: -17.876937866210938
    8. '.=' → logprob: -19.126937866210938
    9. ',' → logprob: -20.251937866210938
    10. '_=' → logprob: -20.376937866210938

Token 395: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5759394764900208
    2. ' min' → logprob: -0.8259394764900208
    3. '	min' → logprob: -16.950939178466797
    4. '(min' → logprob: -17.825939178466797
    5. '=min' → logprob: -18.825939178466797
    6. '[min' → logprob: -19.575939178466797
    7. '_min' → logprob: -19.700939178466797
    8. 'max' → logprob: -19.825939178466797
    9. '.min' → logprob: -20.200939178466797
    10. ',min' → logprob: -20.950939178466797

Token 396: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0007106438861228526
    2. '(' → logprob: -7.250710487365723
    3. '(
' → logprob: -14.125710487365723
    4. ' (' → logprob: -17.00071144104004
    5. '(

' → logprob: -17.75071144104004
    6. 'res' → logprob: -18.50071144104004
    7. '=res' → logprob: -20.25071144104004
    8. '(re' → logprob: -20.25071144104004
    9. '(r' → logprob: -20.37571144104004
    10. ',res' → logprob: -20.50071144104004

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057032231241464615
    2. ',res' → logprob: -3.057032346725464
    3. '(res' → logprob: -4.807032108306885
    4. ',d' → logprob: -9.682032585144043
    5. 'res' → logprob: -9.807032585144043
    6. 'dfs' → logprob: -9.932032585144043
    7. '(' → logprob: -10.307032585144043
    8. ' ,' → logprob: -10.807032585144043
    9. ',
' → logprob: -11.182032585144043
    10. '(
' → logprob: -13.932032585144043

Token 398: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00030185774085111916
    2. ' dfs' → logprob: -8.1253023147583
    3. 'df' → logprob: -12.7503023147583
    4. '1' → logprob: -13.1253023147583
    5. '   ' → logprob: -15.1253023147583
    6. '
' → logprob: -15.3753023147583
    7. 'lambda' → logprob: -16.125301361083984
    8. ' ' → logprob: -16.500301361083984
    9. 'd' → logprob: -17.000301361083984
    10. 'ds' → logprob: -17.250301361083984

Token 399: '(tuple' (ID: 133029)
  Prédit: '(tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -9.686778503237292e-05
    2. '(' → logprob: -9.250097274780273
    3. '(t' → logprob: -15.125097274780273
    4. ' (' → logprob: -15.500097274780273
    5. 'tuple' → logprob: -16.375097274780273
    6. ' tuple' → logprob: -16.750097274780273
    7. '((' → logprob: -17.000097274780273
    8. '(
' → logprob: -17.625097274780273
    9. '(

' → logprob: -20.000097274780273
    10. '```' → logprob: -20.000097274780273

Token 400: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0005543439765460789
    2. 'lst' → logprob: -7.50055456161499
    3. ' lst' → logprob: -14.250554084777832
    4. '(' → logprob: -15.750554084777832
    5. '_lst' → logprob: -15.875554084777832
    6. '(ls' → logprob: -15.875554084777832
    7. '(
' → logprob: -16.00055503845215
    8. '(l' → logprob: -16.37555503845215
    9. ')' → logprob: -16.75055503845215
    10. 'Lst' → logprob: -17.37555503845215

Token 401: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.019353225827217102
    2. ')' → logprob: -4.26935338973999
    3. '))' → logprob: -5.26935338973999
    4. ')+' → logprob: -11.019352912902832
    5. ' ' → logprob: -12.269352912902832
    6. ')))
' → logprob: -12.269352912902832
    7. '))+' → logprob: -13.144352912902832
    8. '))))' → logprob: -14.894352912902832
    9. '())))' → logprob: -15.019352912902832
    10. '),' → logprob: -15.394352912902832

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05549664795398712
    2. 'return' → logprob: -3.0554966926574707
    3. ' return' → logprob: -5.055496692657471
    4. '
' → logprob: -7.805496692657471
    5. '    
' → logprob: -9.930496215820312
    6. '	return' → logprob: -10.180496215820312
    7. '  ' → logprob: -11.805496215820312
    8. '```' → logprob: -13.055496215820312
    9. ':return' → logprob: -13.430496215820312
    10. '       ' → logprob: -13.555496215820312

Token 403: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015064085833728313
    2. '   ' → logprob: -4.265064239501953
    3. ' return' → logprob: -7.015064239501953
    4. '	return' → logprob: -14.515064239501953
    5. '
' → logprob: -14.765064239501953
    6. '```' → logprob: -14.765064239501953
    7. '  ' → logprob: -15.515064239501953
    8. '    
' → logprob: -15.640064239501953
    9. ' ' → logprob: -15.890064239501953
    10. 'eturn' → logprob: -17.015064239501953

Token 404: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00861456897109747
    2. ' res' → logprob: -4.758614540100098
    3. '(res' → logprob: -20.258615493774414
    4. '	res' → logprob: -22.008615493774414
    5. ' ' → logprob: -23.133615493774414
    6. '_res' → logprob: -23.383615493774414
    7. 'return' → logprob: -23.883615493774414
    8. '$res' → logprob: -24.008615493774414
    9. 're' → logprob: -24.133615493774414
    10. ' ' → logprob: -24.258615493774414

Token 405: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3211527168750763
    2. 'print' → logprob: -1.696152687072754
    3. '<|end|>' → logprob: -2.571152687072754
    4. '<|end|>' → logprob: -5.446152687072754
    5. '```' → logprob: -5.571152687072754
    6. '0' → logprob: -6.321152687072754
    7. ')' → logprob: -6.571152687072754
    8. '...' → logprob: -6.946152687072754
    9. '.' → logprob: -7.196152687072754
    10. 'if' → logprob: -8.946152687072754

Token 407: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.003372461535036564
    2. ' solve' → logprob: -6.003372669219971
    3. 'main' → logprob: -7.128372669219971
    4. 'solve' → logprob: -9.878372192382812
    5. ' minimal' → logprob: -11.003372192382812
    6. ' solution' → logprob: -11.378372192382812
    7. ' run' → logprob: -12.503372192382812
    8. ' play' → logprob: -13.003372192382812
    9. ' minimize' → logprob: -13.753372192382812
    10. ' parse' → logprob: -13.878372192382812

Token 408: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.5107177862082608e-05
    2. '():
' → logprob: -11.250024795532227
    3. ' ():' → logprob: -11.500024795532227
    4. '()' → logprob: -14.125024795532227
    5. '_' → logprob: -14.625024795532227
    6. '(' → logprob: -14.875024795532227
    7. '():
' → logprob: -15.250024795532227
    8. '(":' → logprob: -17.500024795532227
    9. '():

' → logprob: -17.750024795532227
    10. '()>' → logprob: -17.875024795532227

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2243242859840393
    2. ' import' → logprob: -1.9743242263793945
    3. ' input' → logprob: -3.9743242263793945
    4. 'import' → logprob: -4.0993242263793945
    5. ' cards' → logprob: -4.0993242263793945
    6. ' data' → logprob: -4.9743242263793945
    7. 'n' → logprob: -7.4743242263793945
    8. 'input' → logprob: -7.8493242263793945
    9. '<|end|>' → logprob: -7.8493242263793945
    10. ' readline' → logprob: -8.349324226379395

Token 410: ' input' (ID: 3422)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.1209515631198883
    2. ' cards' → logprob: -2.9959516525268555
    3. 'import' → logprob: -3.1209516525268555
    4. '   ' → logprob: -4.1209516525268555
    5. 'lines' → logprob: -7.2459516525268555
    6. ' import' → logprob: -7.4959516525268555
    7. '_cards' → logprob: -7.4959516525268555
    8. 'input' (adapté à ' input') → logprob: -7.8709516525268555
    9. 'board' → logprob: -8.620951652526855
    10. 'data' → logprob: -8.620951652526855

Token 411: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6263658404350281
    2. '_data' → logprob: -1.1263659000396729
    3. '_line' → logprob: -2.751365900039673
    4. ' =' → logprob: -3.501365900039673
    5. '=' → logprob: -4.376365661621094
    6. '_cards' → logprob: -4.501365661621094
    7. '_lines' → logprob: -4.626365661621094
    8. '_str' → logprob: -5.376365661621094
    9. '_list' → logprob: -5.751365661621094
    10. 'data' → logprob: -6.001365661621094

Token 412: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05926975607872009
    2. 'sys' → logprob: -3.059269666671753
    3. ' input' → logprob: -4.809269905090332
    4. 'input' → logprob: -6.059269905090332
    5. ' lambda' → logprob: -9.184269905090332
    6. 'lambda' → logprob: -11.059269905090332
    7. ' open' → logprob: -12.059269905090332
    8. 'open' → logprob: -12.684269905090332
    9. ' iter' → logprob: -13.184269905090332
    10. ' __' → logprob: -13.434269905090332

Token 413: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.4974866644479334e-05
    2. '.argv' → logprob: -12.000015258789062
    3. '.stdout' → logprob: -12.625015258789062
    4. 'stdin' → logprob: -12.875015258789062
    5. '.' → logprob: -13.375015258789062
    6. '.std' → logprob: -14.250015258789062
    7. '.input' → logprob: -15.125015258789062
    8. '.readline' → logprob: -15.500015258789062
    9. '.modules' → logprob: -17.125015258789062
    10. '.st' → logprob: -17.125015258789062

Token 414: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.5027299822540954e-05
    2. 'read' → logprob: -10.875055313110352
    3. '.read' → logprob: -11.375055313110352
    4. '.readlines' → logprob: -11.375055313110352
    5. '.stdin' → logprob: -12.250055313110352
    6. '.' → logprob: -12.750055313110352
    7. 'buffer' → logprob: -13.125055313110352
    8. '.buffer' → logprob: -13.250055313110352
    9. ' readline' → logprob: -14.875055313110352
    10. 'stdin' → logprob: -15.000055313110352

Token 415: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2014937400817871
    2. '()' → logprob: -1.701493740081787
    3. '()
' → logprob: -9.701494216918945
    4. 'line' → logprob: -11.451494216918945
    5. '()

' → logprob: -12.951494216918945
    6. '()`' → logprob: -13.576494216918945
    7. '()\' → logprob: -13.701494216918945
    8. '())' → logprob: -13.951494216918945
    9. '.split' → logprob: -15.076494216918945
    10. '()).' → logprob: -15.201494216918945

Token 416: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014324045740067959
    2. 'split' → logprob: -4.264324188232422
    3. 'rstrip' → logprob: -8.764324188232422
    4. ' strip' → logprob: -12.764324188232422
    5. 'decode' → logprob: -14.514324188232422
    6. 'read' → logprob: -14.889324188232422
    7. ' split' → logprob: -15.014324188232422
    8. 'replace' → logprob: -15.764324188232422
    9. 'plit' → logprob: -17.639324188232422
    10. 'text' → logprob: -18.514324188232422

Token 417: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25206258893013
    2. '().' → logprob: -1.5020625591278076
    3. '()
' → logprob: -9.002062797546387
    4. '()`' → logprob: -12.502062797546387
    5. '()\' → logprob: -12.627062797546387
    6. '()

' → logprob: -14.127062797546387
    7. '(),' → logprob: -14.877062797546387
    8. '()
' → logprob: -14.877062797546387
    9. '(' → logprob: -15.002062797546387
    10. '())' → logprob: -15.377062797546387

Token 418: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.125
    3. '(split' → logprob: -16.875
    4. 'replace' → logprob: -18.125
    5. 'spl' → logprob: -18.375
    6. 'strip' → logprob: -19.25
    7. 'sp' → logprob: -19.625
    8. '```' → logprob: -20.25
    9. ' ' → logprob: -20.625
    10. '   ' → logprob: -20.75

Token 419: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002920830447692424
    2. '()
' → logprob: -9.00029182434082
    3. '(' → logprob: -9.25029182434082
    4. '()\' → logprob: -9.87529182434082
    5. '()]' → logprob: -12.37529182434082
    6. 'def' → logprob: -12.75029182434082
    7. '()`' → logprob: -13.00029182434082
    8. '())' → logprob: -13.00029182434082
    9. ' ()' → logprob: -13.25029182434082
    10. '('\' → logprob: -13.37529182434082

Token 420: '   ' (ID: 271)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.10879508405923843
    2. '   ' → logprob: -2.733795166015625
    3. ' cards' → logprob: -3.733795166015625
    4. 'deck' → logprob: -5.108795166015625
    5. 'board' → logprob: -5.983795166015625
    6. 'card' → logprob: -6.233795166015625
    7. 'n' → logprob: -7.233795166015625
    8. '(cards' → logprob: -8.108795166015625
    9. 'colors' → logprob: -8.233795166015625
    10. 'arr' → logprob: -8.483795166015625

Token 421: ' n' (ID: 297)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.00038574778591282666
    2. 'n' (adapté à ' n') → logprob: -9.000385284423828
    3. 'N' → logprob: -9.375385284423828
    4. 'nums' → logprob: -10.125385284423828
    5. 'counts' → logprob: -10.125385284423828
    6. ' cards' → logprob: -11.000385284423828
    7. 'deck' → logprob: -11.375385284423828
    8. 'for' → logprob: -11.750385284423828
    9. 'if' → logprob: -12.250385284423828
    10. '   ' → logprob: -12.250385284423828

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2523777484893799
    2. '=' → logprob: -1.5023777484893799
    3. '=int' → logprob: -7.877377510070801
    4. ',' → logprob: -10.0023775100708
    5. '=n' → logprob: -12.0023775100708
    6. ' ' → logprob: -12.1273775100708
    7. '=len' → logprob: -12.6273775100708
    8. '   ' → logprob: -12.8773775100708
    9. '  ' → logprob: -13.2523775100708
    10. 'um' → logprob: -13.6273775100708

Token 423: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018212920054793358
    2. 'len' → logprob: -4.018212795257568
    3. ' int' → logprob: -10.393213272094727
    4. '20' → logprob: -10.893213272094727
    5. 'input' → logprob: -12.768213272094727
    6. '1' → logprob: -12.893213272094727
    7. '(int' → logprob: -12.893213272094727
    8. ' len' → logprob: -13.393213272094727
    9. '(len' → logprob: -13.768213272094727
    10. '[int' → logprob: -13.768213272094727

Token 424: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00016790216614026576
    2. 'input' → logprob: -8.750167846679688
    3. '(' → logprob: -11.625167846679688
    4. '(
' → logprob: -15.375167846679688
    5. '(len' → logprob: -16.125167846679688
    6. ' input' → logprob: -16.750167846679688
    7. '=input' → logprob: -17.375167846679688
    8. ',input' → logprob: -17.875167846679688
    9. ' (' → logprob: -18.250167846679688
    10. '(n' → logprob: -18.375167846679688

Token 425: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00030697984038852155
    2. '(' → logprob: -8.125307083129883
    3. '()[' → logprob: -11.500307083129883
    4. ' [' → logprob: -15.250307083129883
    5. ')' → logprob: -15.500307083129883
    6. '()' → logprob: -15.750307083129883
    7. '0' → logprob: -16.250307083129883
    8. '[
' → logprob: -17.000307083129883
    9. '```' → logprob: -17.250307083129883
    10. 'index' → logprob: -17.375307083129883

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.250001907348633
    3. '[' → logprob: -14.625001907348633
    4. '1' → logprob: -15.875001907348633
    5. '
' → logprob: -16.000001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '(' → logprob: -17.625001907348633
    8. '```' → logprob: -18.875001907348633
    9. ')' → logprob: -19.250001907348633
    10. '2' → logprob: -19.750001907348633

Token 427: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0002100965939462185
    2. '])
' → logprob: -8.87520980834961
    3. ')' → logprob: -9.62520980834961
    4. ']' → logprob: -13.62520980834961
    5. ' ])' → logprob: -13.62520980834961
    6. ')]' → logprob: -14.50020980834961
    7. ')])' → logprob: -14.87520980834961
    8. ')
' → logprob: -15.75020980834961
    9. '))' → logprob: -16.00020980834961
    10. ''])' → logprob: -16.00020980834961

Token 428: '   ' (ID: 271)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.02156197279691696
    2. ' cards' → logprob: -4.271562099456787
    3. 'colors' → logprob: -5.896562099456787
    4. 'deck' → logprob: -6.771562099456787
    5. 'idx' → logprob: -6.771562099456787
    6. 'data' → logprob: -8.021561622619629
    7. '   ' → logprob: -8.271561622619629
    8. 'arr' → logprob: -8.521561622619629
    9. 'pos' → logprob: -8.646561622619629
    10. 'a' → logprob: -8.896561622619629

Token 429: ' idx' (ID: 14016)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.0025194191839545965
    2. ' cards' → logprob: -6.127519607543945
    3. 'colors' → logprob: -8.877519607543945
    4. 'data' → logprob: -10.002519607543945
    5. 'idx' (adapté à ' idx') → logprob: -10.627519607543945
    6. '   ' → logprob: -10.752519607543945
    7. 'values' → logprob: -10.752519607543945
    8. 'vals' → logprob: -11.377519607543945
    9. 'deck' → logprob: -11.752519607543945
    10. 'card' → logprob: -11.877519607543945

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13241663575172424
    2. ' =' → logprob: -2.1324167251586914
    3. 's' → logprob: -5.257416725158691
    4. 'x' → logprob: -8.632416725158691
    5. '_' → logprob: -11.007416725158691
    6. '```' → logprob: -11.007416725158691
    7. '_=' → logprob: -11.507416725158691
    8. '0' → logprob: -11.757416725158691
    9. '_tokens' → logprob: -11.882416725158691
    10. '1' → logprob: -12.382416725158691

Token 431: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'n' → logprob: -16.000019073486328
    4. '   ' → logprob: -17.000019073486328
    5. '2' → logprob: -17.500019073486328
    6. '１' → logprob: -19.250019073486328
    7. '```' → logprob: -19.437519073486328
    8. '  ' → logprob: -19.500019073486328
    9. '    ' → logprob: -20.062519073486328
    10. 'int' → logprob: -20.062519073486328

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '2' → logprob: -16.125001907348633
    4. 'n' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '0' → logprob: -17.750001907348633
    7. '１' → logprob: -18.312501907348633
    8. '```' → logprob: -18.625001907348633
    9. 'int' → logprob: -18.750001907348633
    10. '  ' → logprob: -19.312501907348633

Token 433: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01903175748884678
    2. 'cards' → logprob: -4.144031524658203
    3. 'for' → logprob: -6.019031524658203
    4. ' cards' → logprob: -8.394031524658203
    5. ' for' → logprob: -9.644031524658203
    6. '(cards' → logprob: -9.769031524658203
    7. '    
' → logprob: -9.894031524658203
    8. 'deck' → logprob: -10.394031524658203
    9. 'card' → logprob: -10.519031524658203
    10. '_cards' → logprob: -10.769031524658203

Token 434: '   ' (ID: 271)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.6713185906410217
    2. '   ' → logprob: -0.9213185906410217
    3. 'for' → logprob: -3.046318531036377
    4. ' cards' → logprob: -3.796318531036377
    5. ' for' → logprob: -5.046318531036377
    6. 'board' → logprob: -5.296318531036377
    7. 'card' → logprob: -5.546318531036377
    8. 'deck' → logprob: -6.171318531036377
    9. 'boards' → logprob: -7.171318531036377
    10. '(cards' → logprob: -7.671318531036377

Token 435: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5297876596450806
    2. 'cards' → logprob: -0.9047876596450806
    3. 'results' → logprob: -6.029787540435791
    4. 'deck' → logprob: -6.654787540435791
    5. ' for' → logprob: -7.154787540435791
    6. 'while' → logprob: -7.904787540435791
    7. ' cards' → logprob: -7.904787540435791
    8. 'board' → logprob: -8.15478801727295
    9. 'answers' → logprob: -8.27978801727295
    10. 'boards' → logprob: -8.52978801727295

Token 436: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5759404897689819
    2. '_' → logprob: -0.8259404897689819
    3. ' in' → logprob: -14.950940132141113
    4. ' range' → logprob: -15.075940132141113
    5. ' i' → logprob: -15.825940132141113
    6. '_i' → logprob: -16.07594108581543
    7. '_n' → logprob: -17.57594108581543
    8. '_=' → logprob: -17.82594108581543
    9. '_range' → logprob: -17.95094108581543
    10. ' ' → logprob: -18.20094108581543

Token 437: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1041008234024048
    2. ' in' → logprob: -1.1041008234024048
    3. 'range' → logprob: -1.1041008234024048
    4. ' range' → logprob: -5.229100704193115
    5. 'n' → logprob: -9.229101181030273
    6. ' ' → logprob: -11.729101181030273
    7. '  ' → logprob: -12.604101181030273
    8. '   ' → logprob: -13.729101181030273
    9. '(range' → logprob: -13.729101181030273
    10. 'ange' → logprob: -14.354101181030273

Token 438: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.0126840758603066e-05
    2. ' range' → logprob: -10.125040054321289
    3. '(range' → logprob: -17.75004005432129
    4. '
' → logprob: -18.62504005432129
    5. 'n' → logprob: -18.87504005432129
    6. '	range' → logprob: -19.00004005432129
    7. 'r' → logprob: -19.25004005432129
    8. 'in' → logprob: -19.62504005432129
    9. '```' → logprob: -20.00004005432129
    10. 'ange' → logprob: -20.25004005432129

Token 439: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00021390743495430797
    2. 'n' → logprob: -8.500213623046875
    3. '(' → logprob: -11.500213623046875
    4. ' n' → logprob: -15.250213623046875
    5. ' (' → logprob: -17.000213623046875
    6. '_n' → logprob: -17.750213623046875
    7. ',' → logprob: -18.750213623046875
    8. '(
' → logprob: -18.875213623046875
    9. ',n' → logprob: -19.625213623046875
    10. ')n' → logprob: -19.625213623046875

Token 440: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032637494150549173
    2. '):
' → logprob: -6.3782639503479
    3. ':' → logprob: -6.5032639503479
    4. '():' → logprob: -10.128263473510742
    5. '   ' → logprob: -11.753263473510742
    6. ')' → logprob: -12.003263473510742
    7. ',' → logprob: -12.878263473510742
    8. '}:' → logprob: -13.378263473510742
    9. '():
' → logprob: -14.003263473510742
    10. ':
' → logprob: -14.253263473510742

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023264100309461355
    2. '   ' → logprob: -6.127326488494873
    3. 'cards' → logprob: -9.752326011657715
    4. '<|end|>' → logprob: -10.377326011657715
    5. 'tokens' → logprob: -10.877326011657715
    6. '     ' → logprob: -12.377326011657715
    7. ',' → logprob: -12.877326011657715
    8. '	   ' → logprob: -12.877326011657715
    9. '      ' → logprob: -13.127326011657715
    10. '```' → logprob: -13.252326011657715

Token 442: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.010074908845126629
    2. ' cards' → logprob: -4.760075092315674
    3. '   ' → logprob: -6.760075092315674
    4. 'board' → logprob: -9.385074615478516
    5. 'deck' → logprob: -10.135074615478516
    6. 'counts' → logprob: -10.885074615478516
    7. 'card' → logprob: -11.010074615478516
    8. 'vals' → logprob: -11.135074615478516
    9. 'arr' → logprob: -11.135074615478516
    10. 'grid' → logprob: -11.260074615478516

Token 443: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002185270190239
    2. ' =' → logprob: -2.3502185344696045
    3. '=[]' → logprob: -12.100218772888184
    4. '=[' → logprob: -13.350218772888184
    5. '   ' → logprob: -13.850218772888184
    6. '=[]
' → logprob: -14.600218772888184
    7. '=list' → logprob: -14.725218772888184
    8. 's' → logprob: -14.725218772888184
    9. '_list' → logprob: -14.850218772888184
    10. '=
' → logprob: -14.975218772888184

Token 444: ' tuple' (ID: 31311)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.24020442366600037
    2. '[' → logprob: -1.7402044534683228
    3. '[]' → logprob: -3.740204334259033
    4. '[list' → logprob: -4.740204334259033
    5. 'tuple' → logprob: -5.365204334259033
    6. ' list' → logprob: -7.990204334259033
    7. '[]
' → logprob: -8.115204811096191
    8. ' [' → logprob: -8.990204811096191
    9. ' []' → logprob: -10.490204811096191
    10. ' tuple' → logprob: -10.615204811096191

Token 445: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.25205230712890625
    2. '(map' → logprob: -1.5020523071289062
    3. 'int' → logprob: -9.877052307128906
    4. '(' → logprob: -10.252052307128906
    5. '[int' → logprob: -10.877052307128906
    6. 'map' → logprob: -11.127052307128906
    7. '([' → logprob: -13.252052307128906
    8. '(sorted' → logprob: -14.752052307128906
    9. '<int' → logprob: -14.877052307128906
    10. ' map' → logprob: -15.877052307128906

Token 446: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0009836276294663548
    2. '(input' → logprob: -7.375983715057373
    3. '(c' → logprob: -8.500983238220215
    4. 'x' → logprob: -9.125983238220215
    5. '(i' → logprob: -10.500983238220215
    6. '(v' → logprob: -11.500983238220215
    7. 'input' → logprob: -12.375983238220215
    8. '(a' → logprob: -14.000983238220215
    9. '(s' → logprob: -14.250983238220215
    10. 'c' → logprob: -14.375983238220215

Token 447: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.351697033504024e-05
    2. 'input' → logprob: -9.750083923339844
    3. '(input' → logprob: -11.500083923339844
    4. 'for' → logprob: -11.875083923339844
    5. 'x' → logprob: -12.125083923339844
    6. '(x' → logprob: -14.375083923339844
    7. '=input' → logprob: -14.500083923339844
    8. ' )' → logprob: -15.000083923339844
    9. 'in' → logprob: -15.250083923339844
    10. ' for' → logprob: -15.500083923339844

Token 448: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9622321724891663
    2. ' for' → logprob: -0.9622321724891663
    3. 'for' → logprob: -1.4622321128845215
    4. 'input' → logprob: -6.4622321128845215
    5. '(input' → logprob: -6.4622321128845215
    6. 'x' → logprob: -7.8372321128845215
    7. ' input' → logprob: -7.9622321128845215
    8. '=input' → logprob: -9.21223258972168
    9. '(x' → logprob: -10.08723258972168
    10. '[input' → logprob: -10.46223258972168

Token 449: ' x' (ID: 1215)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931853294372559
    2. ' input' → logprob: -0.6931853294372559
    3. 'x' → logprob: -10.318185806274414
    4. ' x' → logprob: -12.568185806274414
    5. '(input' → logprob: -14.693185806274414
    6. '_input' → logprob: -15.068185806274414
    7. ' ' → logprob: -15.068185806274414
    8. 'in' → logprob: -15.568185806274414
    9. ' in' → logprob: -15.943185806274414
    10. '_' → logprob: -16.193185806274414

Token 450: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011206261813640594
    2. 'in' → logprob: -4.511206150054932
    3. 'input' → logprob: -8.76120662689209
    4. ' input' → logprob: -13.76120662689209
    5. 'inp' → logprob: -15.01120662689209
    6. 'import' → logprob: -16.636205673217773
    7. ' inp' → logprob: -16.761205673217773
    8. 'i' → logprob: -17.136205673217773
    9. 'x' → logprob: -17.136205673217773
    10. ',input' → logprob: -17.386205673217773

Token 451: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0485873706638813
    2. ' input' → logprob: -3.0485873222351074
    3. '(input' → logprob: -17.298587799072266
    4. ' ' → logprob: -19.048587799072266
    5. '	input' → logprob: -20.423587799072266
    6. '<input' → logprob: -20.548587799072266
    7. '[input' → logprob: -20.798587799072266
    8. '
' → logprob: -21.423587799072266
    9. '.input' → logprob: -22.173587799072266
    10. 'import' → logprob: -22.173587799072266

Token 452: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.7848862373502925e-05
    2. 'idx' → logprob: -10.500027656555176
    3. '(idx' → logprob: -16.000028610229492
    4. ' idx' → logprob: -16.125028610229492
    5. '[' → logprob: -16.500028610229492
    6. '   ' → logprob: -19.000028610229492
    7. '	idx' → logprob: -19.250028610229492
    8. ' [' → logprob: -20.125028610229492
    9. '[
' → logprob: -20.375028610229492
    10. '_idx' → logprob: -20.625028610229492

Token 453: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004211124498397112
    2. 'idx' → logprob: -5.754210948944092
    3. ' :' → logprob: -7.129210948944092
    4. ' idx' → logprob: -8.62921142578125
    5. '[idx' → logprob: -10.50421142578125
    6. '	idx' → logprob: -11.87921142578125
    7. '(idx' → logprob: -12.12921142578125
    8. '1' → logprob: -12.50421142578125
    9. '   ' → logprob: -12.50421142578125
    10. ' ' → logprob: -13.00421142578125

Token 454: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.5570885807392187e-05
    2. ' idx' → logprob: -11.125015258789062
    3. '(idx' → logprob: -14.500015258789062
    4. '[idx' → logprob: -16.000015258789062
    5. '	idx' → logprob: -16.500015258789062
    6. '   ' → logprob: -17.125015258789062
    7. '
' → logprob: -17.250015258789062
    8. '       ' → logprob: -19.000015258789062
    9. ' ' → logprob: -19.875015258789062
    10. '           ' → logprob: -20.000015258789062

Token 455: '+' (ID: 10)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.004054179415106773
    2. '[idx' → logprob: -6.254054069519043
    3. '+' → logprob: -6.629054069519043
    4. ' idx' → logprob: -7.379054069519043
    5. '(idx' → logprob: -9.379054069519043
    6. '   ' → logprob: -10.129054069519043
    7. '       ' → logprob: -11.504054069519043
    8. '16' → logprob: -11.754054069519043
    9. '4' → logprob: -11.879054069519043
    10. '24' → logprob: -12.004054069519043

Token 456: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '25' → logprob: -17.25
    4. '2' → logprob: -17.875
    5. '30' → logprob: -18.125
    6. '24' → logprob: -18.625
    7. '(' → logprob: -19.0
    8. '   ' → logprob: -19.375
    9. '0' → logprob: -19.875
    10. '{' → logprob: -20.1875

Token 457: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.3869536221027374
    2. '])' → logprob: -1.136953592300415
    3. ']);' → logprob: -9.761953353881836
    4. '])
' → logprob: -10.886953353881836
    5. '])

' → logprob: -12.386953353881836
    6. ')
' → logprob: -14.761953353881836
    7. ']);
' → logprob: -14.761953353881836
    8. ']' → logprob: -15.136953353881836
    9. ' ])
' → logprob: -15.136953353881836
    10. ' ])' → logprob: -15.511953353881836

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030593499541282654
    2. 'idx' → logprob: -6.253059387207031
    3. '	idx' → logprob: -7.878059387207031
    4. ' idx' → logprob: -8.253059387207031
    5. '   ' → logprob: -8.628059387207031
    6. '[idx' → logprob: -8.753059387207031
    7. '<|end|>' → logprob: -9.628059387207031
    8. '	' → logprob: -11.003059387207031
    9. '
' → logprob: -11.003059387207031
    10. '        
' → logprob: -11.378059387207031

Token 459: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0008471485925838351
    2. ' idx' → logprob: -7.750847339630127
    3. '       ' → logprob: -8.625846862792969
    4. '	idx' → logprob: -8.875846862792969
    5. '   ' → logprob: -9.750846862792969
    6. 'index' → logprob: -10.500846862792969
    7. 'print' → logprob: -12.625846862792969
    8. '_idx' → logprob: -12.750846862792969
    9. '
' → logprob: -13.250846862792969
    10. 'indx' → logprob: -13.375846862792969

Token 460: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00012582694762386382
    2. ' +=' → logprob: -9.000125885009766
    3. '=' → logprob: -13.250125885009766
    4. '+' → logprob: -14.750125885009766
    5. ']+=' → logprob: -15.375125885009766
    6. '+="' → logprob: -17.125125885009766
    7. '+='' → logprob: -17.250125885009766
    8. '+=(' → logprob: -18.000125885009766
    9. '```' → logprob: -19.250125885009766
    10. '   ' → logprob: -20.125125885009766

Token 461: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '２０' → logprob: -20.875
    4. '202' → logprob: -22.125
    5. '   ' → logprob: -22.5
    6. '2' → logprob: -24.375
    7. '```' → logprob: -24.625
    8. '۲۰' → logprob: -24.875
    9. ' veinte' → logprob: -25.375
    10. '২০' → logprob: -25.375

Token 462: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: 0.0
    2. ' ' → logprob: -20.875
    3. '２０' → logprob: -22.875
    4. '202' → logprob: -24.0
    5. '2' → logprob: -25.75
    6. '25' → logprob: -26.75
    7. '   ' → logprob: -26.75
    8. '30' → logprob: -27.0
    9. '```' → logprob: -27.25
    10. '0' → logprob: -27.375

Token 463: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010662222281098366
    2. '   ' → logprob: -5.010662078857422
    3. 'print' → logprob: -6.260662078857422
    4. 'result' → logprob: -6.385662078857422
    5. '        
' → logprob: -9.135662078857422
    6. 'res' → logprob: -9.260662078857422
    7. '```' → logprob: -10.760662078857422
    8. '<|end|>' → logprob: -10.760662078857422
    9. '    
' → logprob: -10.885662078857422
    10. '
' → logprob: -11.010662078857422

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08671224117279053
    2. 'print' → logprob: -2.83671236038208
    3. '   ' → logprob: -3.83671236038208
    4. 'result' → logprob: -5.96171236038208
    5. ' print' → logprob: -8.461711883544922
    6. ' result' → logprob: -10.336711883544922
    7. '```' → logprob: -11.086711883544922
    8. '<|end|>' → logprob: -11.586711883544922
    9. '        
' → logprob: -12.086711883544922
    10. 'res' → logprob: -12.086711883544922

Token 465: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005435001221485436
    2. 'result' → logprob: -7.750543594360352
    3. ' print' → logprob: -9.500543594360352
    4. '   ' → logprob: -11.250543594360352
    5. 'res' → logprob: -11.250543594360352
    6. 'ans' → logprob: -11.875543594360352
    7. 'answer' → logprob: -12.500543594360352
    8. '       ' → logprob: -15.000543594360352
    9. '    
' → logprob: -15.125543594360352
    10. 'r' → logprob: -15.375543594360352

Token 466: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.500005722045898
    3. 'dfs' → logprob: -13.500005722045898
    4. 'd' → logprob: -16.7500057220459
    5. '(
' → logprob: -16.8750057220459
    6. '(min' → logprob: -17.8750057220459
    7. ' dfs' → logprob: -17.8750057220459
    8. '(len' → logprob: -17.8750057220459
    9. '(df' → logprob: -18.0000057220459
    10. 'DFS' → logprob: -18.2500057220459

Token 467: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -3.4121114822482923e-06
    2. '(fs' → logprob: -13.375003814697266
    3. 'dfs' → logprob: -13.500003814697266
    4. 'f' → logprob: -15.125003814697266
    5. 'efs' → logprob: -16.625003814697266
    6. 'FS' → logprob: -17.250003814697266
    7. 'ds' → logprob: -17.375003814697266
    8. 's' → logprob: -18.000003814697266
    9. '(d' → logprob: -18.125003814697266
    10. '(cards' → logprob: -18.125003814697266

Token 468: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.875
    3. ')(' → logprob: -16.375
    4. '(card' → logprob: -17.25
    5. ')' → logprob: -17.625
    6. '(tokens' → logprob: -17.625
    7. '/cards' → logprob: -18.625
    8. '(chars' → logprob: -18.875
    9. '(c' → logprob: -19.0
    10. ' (' → logprob: -19.125

Token 469: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10027050226926804
    2. '))' → logprob: -2.3502705097198486
    3. '())' → logprob: -9.72527027130127
    4. ')))' → logprob: -12.97527027130127
    5. '()' → logprob: -14.47527027130127
    6. '   ' → logprob: -15.10027027130127
    7. '()))' → logprob: -15.47527027130127
    8. ')")' → logprob: -15.47527027130127
    9. ' )' → logprob: -15.97527027130127
    10. ')`' → logprob: -16.100271224975586

Token 470: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006379256024956703
    2. '
' → logprob: -5.631379127502441
    3. '<|end|>' → logprob: -6.131379127502441
    4. '```' → logprob: -8.131379127502441
    5. ' if' → logprob: -8.756379127502441
    6. '\n' → logprob: -9.756379127502441
    7. '#' → logprob: -10.631379127502441
    8. '  
' → logprob: -11.381379127502441
    9. '    
' → logprob: -11.631379127502441
    10. '<|end|>' → logprob: -11.631379127502441

Token 471: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0025880273897200823
    2. '<|end|>' → logprob: -6.252587795257568
    3. '
' → logprob: -8.002588272094727
    4. ' if' → logprob: -8.502588272094727
    5. '```' → logprob: -9.502588272094727
    6. '#' (adapté à ' #') → logprob: -11.627588272094727
    7. '\n' → logprob: -11.627588272094727
    8. '\' → logprob: -11.752588272094727
    9. 'main' → logprob: -11.877588272094727
    10. '<|end|>' → logprob: -13.127588272094727

Token 472: ' no' (ID: 860)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027233891189098358
    2. '<|end|>' → logprob: -3.652233839035034
    3. 'main' → logprob: -7.652234077453613
    4. '
' → logprob: -8.402234077453613
    5. ' if' → logprob: -9.527234077453613
    6. '#' → logprob: -10.027234077453613
    7. '```' → logprob: -10.152234077453613
    8. 'return' → logprob: -10.402234077453613
    9. ')' → logprob: -11.027234077453613
    10. '<|end|>' → logprob: -11.402234077453613

Token 473: ' further' (ID: 6544)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03606577217578888
    2. 'w' → logprob: -4.161065578460693
    3. '<|end|>' → logprob: -4.161065578460693
    4. '#' → logprob: -6.536065578460693
    5. 'main' → logprob: -6.661065578460693
    6. '
' → logprob: -8.661066055297852
    7. '```' → logprob: -8.786066055297852
    8. ' if' → logprob: -9.036066055297852
    9. 'x' → logprob: -9.036066055297852
    10. 'f' → logprob: -9.036066055297852

Token 474: ' input' (ID: 3422)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02079796977341175
    2. '<|end|>' → logprob: -4.145798206329346
    3. '
' → logprob: -5.895798206329346
    4. 'main' → logprob: -6.270798206329346
    5. '```' → logprob: -10.020797729492188
    6. ' if' → logprob: -10.520797729492188
    7. '<|end|>' → logprob: -11.520797729492188
    8. '#' → logprob: -11.645797729492188
    9. '\n' → logprob: -11.895797729492188
    10. '(main' → logprob: -12.895797729492188

Token 476: ' process' (ID: 2273)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5989788174629211
    2. 'process' → logprob: -0.8489788174629211
    3. 'main' → logprob: -4.3489789962768555
    4. 'return' → logprob: -5.2239789962768555
    5. 'parse' → logprob: -5.8489789962768555
    6. 'handle' → logprob: -7.5989789962768555
    7. 'import' → logprob: -8.348978996276855
    8. '#' → logprob: -8.723978996276855
    9. ' process' → logprob: -8.973978996276855
    10. 'exit' → logprob: -9.098978996276855

Token 477: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1245000883936882
    2. '<|end|>' → logprob: -2.374500036239624
    3. '
' → logprob: -3.749500036239624
    4. ' if' → logprob: -8.499500274658203
    5. '```' → logprob: -9.124500274658203
    6. '<|end|>' → logprob: -9.499500274658203
    7. '\n' → logprob: -10.374500274658203
    8. '#' → logprob: -11.249500274658203
    9. '...' → logprob: -11.874500274658203
    10. '

' → logprob: -11.999500274658203

Token 478: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0011399771319702268
    2. '
' → logprob: -7.126140117645264
    3. '<|end|>' → logprob: -8.251139640808105
    4. ' if' → logprob: -10.001139640808105
    5. '```' → logprob: -11.126139640808105
    6. '#' → logprob: -11.751139640808105
    7. 'main' → logprob: -13.126139640808105
    8. '\n' → logprob: -13.501139640808105
    9. '<|end|>' → logprob: -14.126139640808105
    10. '...' → logprob: -14.251139640808105

Token 479: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011050296947360039
    2. ' __' → logprob: -4.511050224304199
    3. 'name' → logprob: -13.5110502243042
    4. '/__' → logprob: -14.2610502243042
    5. 'True' → logprob: -15.7610502243042
    6. '(__' → logprob: -16.886051177978516
    7. '_name' → logprob: -17.011051177978516
    8. '___' → logprob: -17.136051177978516
    9. 'Name' → logprob: -17.636051177978516
    10. '.__' → logprob: -18.136051177978516

Token 480: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009706872515380383
    2. '==' → logprob: -5.009706974029541
    3. ' ==' → logprob: -6.509706974029541
    4. ' __' → logprob: -7.634706974029541
    5. '.__' → logprob: -8.009706497192383
    6. '__.__' → logprob: -8.134706497192383
    7. 'name' → logprob: -9.509706497192383
    8. '.' → logprob: -9.884706497192383
    9. '```' → logprob: -10.259706497192383
    10. '.py' → logprob: -10.509706497192383

Token 481: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0014184460742399096
    2. '==' → logprob: -6.626418590545654
    3. '__.__' → logprob: -9.626418113708496
    4. ' ==' → logprob: -10.876418113708496
    5. '=="' → logprob: -12.126418113708496
    6. '__.' → logprob: -13.751418113708496
    7. '=='' → logprob: -14.626418113708496
    8. '__["' → logprob: -16.001419067382812
    9. '__('' → logprob: -16.126419067382812
    10. '===' → logprob: -16.751419067382812

Token 482: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8162806034088135
    2. '__' → logprob: -0.8162806034088135
    3. ' ==' → logprob: -2.4412806034088135
    4. '=="' → logprob: -3.5662806034088135
    5. '=='' → logprob: -7.566280364990234
    6. '===' → logprob: -12.316280364990234
    7. '=' → logprob: -12.441280364990234
    8. ' =="' → logprob: -12.691280364990234
    9. '__.__' → logprob: -12.816280364990234
    10. '==
' → logprob: -12.816280364990234

Token 483: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12693282961845398
    2. ''' → logprob: -2.1269328594207764
    3. '__' → logprob: -13.251933097839355
    4. ' "__' → logprob: -13.251933097839355
    5. ''"' → logprob: -14.501933097839355
    6. ' '__' → logprob: -16.00193214416504
    7. '"user' → logprob: -16.00193214416504
    8. ''s' → logprob: -16.87693214416504
    9. '"name' → logprob: -16.87693214416504
    10. '"'' → logprob: -16.87693214416504

Token 484: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0012453512754291296
    2. '__' → logprob: -6.751245498657227
    3. '"' → logprob: -10.126245498657227
    4. '_main' → logprob: -10.626245498657227
    5. 'name' → logprob: -12.126245498657227
    6. ''' → logprob: -13.251245498657227
    7. ' main' → logprob: -13.626245498657227
    8. '__":
' → logprob: -14.126245498657227
    9. 'm' → logprob: -15.376245498657227
    10. '```' → logprob: -15.376245498657227

Token 485: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.062330421060323715
    2. '__' → logprob: -2.812330484390259
    3. '__':
' → logprob: -8.06233024597168
    4. '__.__' → logprob: -10.68733024597168
    5. '__.' → logprob: -10.81233024597168
    6. '__["' → logprob: -12.81233024597168
    7. '__
' → logprob: -14.56233024597168
    8. '__
' → logprob: -15.18733024597168
    9. '_' → logprob: -15.43733024597168
    10. '.' → logprob: -15.43733024597168

Token 486: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003926656674593687
    2. '   ' → logprob: -6.253926753997803
    3. '	main' → logprob: -6.378926753997803
    4. ' main' → logprob: -8.128926277160645
    5. '_main' → logprob: -13.253926277160645
    6. ' ' → logprob: -13.878926277160645
    7. '  ' → logprob: -14.503926277160645
    8. '(main' → logprob: -15.128926277160645
    9. 'import' → logprob: -15.503926277160645
    10. '    
' → logprob: -15.628926277160645

Token 487: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -14.75
    3. '	main' → logprob: -19.0
    4. '   ' → logprob: -20.0
    5. '.main' → logprob: -24.375
    6. '_main' → logprob: -24.5
    7. '(main' → logprob: -25.0
    8. 'import' → logprob: -25.125
    9. 'mainwindow' → logprob: -28.0
    10. '```' → logprob: -28.0

Token 488: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 486
Tokens correctement prédits (1ère position, stricte): 238
Tokens correctement prédits (1ère position, avec adaptation): 257
Tokens correctement prédits (top 10): 439
Précision stricte (1ère position): 48.97%
Précision adaptée (1ère position): 52.88%
Précision (top 10): 90.33%
================================================================================
