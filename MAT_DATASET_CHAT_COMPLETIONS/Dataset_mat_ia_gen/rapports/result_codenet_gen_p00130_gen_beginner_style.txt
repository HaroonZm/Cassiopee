================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
for _ in range(n):
    s = input()
    parts = []
    i = 0
    while i < len(s):
        if s[i].islower():
            parts.append(s[i])
            i += 1
        else:
            if s[i] == '-' and i+1 < len(s) and (s[i+1] == '<' or s[i+1] == '>'):
                parts.append(s[i:i+2])
                i += 2
            else:
                i += 1

    # Reconstruct edges according to moves
    edges = {}
    # edges will store adjacency: car -> (front_car, back_car)
    # but here we store neighbors: for each car, set of neighbors based on moves
    
    # From the moves, build adjacency list undirected graph
    for i in range(0, len(parts)-2, 2):
        car1 = parts[i]
        move = parts[i+1]
        car2 = parts[i+2]

        # If car1 not in edges, add empty set
        if car1 not in edges:
            edges[car1] = set()
        if car2 not in edges:
            edges[car2] = set()

        # According to direction, link car1 and car2
        # move '->' means car2 is after car1, link both ways for undirected graph
        # move '<-' means car2 is before car1, same as above, undirected

        edges[car1].add(car2)
        edges[car2].add(car1)

    # Find the ends of the train - cars that have only one neighbor
    ends = [car for car, neigh in edges.items() if len(neigh) == 1]

    # The train is a chain, so exactly two ends
    # We choose one end to start output

    start = ends[0]

    # Reconstruct the order by walking along edges
    order = [start]
    prev = None
    current = start

    while True:
        neighbors = edges[current]
        next_car = None
        for neigh in neighbors:
            if neigh != prev:
                next_car = neigh
                break
        if next_car is None:
            break
        order.append(next_car)
        prev = current
        current = next_car

    print("".join(order))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008712020353414118
    2. ''' → logprob: -8.250871658325195
    3. '('' → logprob: -8.625871658325195
    4. '(n' → logprob: -8.875871658325195
    5. '`' → logprob: -9.125871658325195
    6. '```' → logprob: -9.375871658325195
    7. '()' → logprob: -11.125871658325195
    8. '("("' → logprob: -11.125871658325195
    9. '_' → logprob: -11.375871658325195
    10. ')' → logprob: -11.625871658325195

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'for' (ID: 1938)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06328916549682617
    2. ' i' → logprob: -2.938289165496826
    3. '  ' → logprob: -5.438289165496826
    4. ' n' → logprob: -5.563289165496826
    5. 'i' → logprob: -9.438289642333984
    6. '_' → logprob: -10.938289642333984
    7. ' ' → logprob: -11.188289642333984
    8. ' )' → logprob: -11.438289642333984
    9. ' ‌' → logprob: -11.438289642333984
    10. 'n' → logprob: -12.313289642333984

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006499601062387228
    2. 'in' → logprob: -5.131499767303467
    3. ' ' → logprob: -7.506499767303467
    4. '  ' → logprob: -11.881499290466309
    5. 'n' → logprob: -12.256499290466309
    6. ',' → logprob: -13.006499290466309
    7. ' n' → logprob: -13.381499290466309
    8. 'range' → logprob: -13.631499290466309
    9. ' ,' → logprob: -13.881499290466309
    10. ' i' → logprob: -14.131499290466309

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868761360645294
    2. ' range' → logprob: -1.136876106262207
    3. ' ' → logprob: -13.511876106262207
    4. '	range' → logprob: -13.511876106262207
    5. 'n' → logprob: -13.886876106262207
    6. '_range' → logprob: -14.636876106262207
    7. ' n' → logprob: -15.261876106262207
    8. '(range' → logprob: -15.261876106262207
    9. '_' → logprob: -15.761876106262207
    10. '```' → logprob: -16.261877059936523

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002370416419580579
    2. '(n' → logprob: -6.252370357513428
    3. ' (' → logprob: -7.752370357513428
    4. '(range' → logprob: -11.752370834350586
    5. '(
' → logprob: -12.752370834350586
    6. '(len' → logprob: -14.877370834350586
    7. '(i' → logprob: -15.752370834350586
    8. '(int' → logprob: -15.752370834350586
    9. '(

' → logprob: -16.252370834350586
    10. '('' → logprob: -16.877370834350586

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5763532519340515
    2. ')' → logprob: -0.8263532519340515
    3. ':' → logprob: -7.826353073120117
    4. ' )' → logprob: -12.576353073120117
    5. ' ):' → logprob: -13.451353073120117
    6. ':)' → logprob: -13.576353073120117
    7. '):
' → logprob: -13.951353073120117
    8. '))' → logprob: -14.076353073120117
    9. '`)' → logprob: -14.076353073120117
    10. '),' → logprob: -14.576353073120117

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025593761820346117
    2. '    
' → logprob: -6.002559185028076
    3. '```' → logprob: -10.502559661865234
    4. '    ' → logprob: -11.752559661865234
    5. '   ' → logprob: -11.877559661865234
    6. 'print' → logprob: -11.877559661865234
    7. 'input' → logprob: -12.502559661865234
    8. ' ' → logprob: -12.627559661865234
    9. ' 
' → logprob: -12.877559661865234
    10. ' input' → logprob: -13.002559661865234

Token 12: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15531079471111298
    2. 'print' → logprob: -3.030310869216919
    3. 'x' → logprob: -4.03031063079834
    4. 'name' → logprob: -4.03031063079834
    5. 'data' → logprob: -4.28031063079834
    6. 'a' → logprob: -4.53031063079834
    7. 'line' → logprob: -4.78031063079834
    8. 's' (adapté à ' s') → logprob: -5.28031063079834
    9. 'text' → logprob: -5.40531063079834
    10. 'input' → logprob: -5.90531063079834

Token 13: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9734864830970764
    2. 'tr' → logprob: -1.0984864234924316
    3. ' =' → logprob: -1.8484864234924316
    4. 'trip' → logprob: -2.9734864234924316
    5. '=' → logprob: -4.223486423492432
    6. ' ' → logprob: -4.223486423492432
    7. '=input' → logprob: -4.223486423492432
    8. 'input' → logprob: -4.848486423492432
    9. ' .' → logprob: -4.848486423492432
    10. '.append' → logprob: -5.598486423492432

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.28116557002067566
    2. 'input' → logprob: -1.406165599822998
    3. '=input' → logprob: -12.28116512298584
    4. '(input' → logprob: -12.78116512298584
    5. 'int' → logprob: -13.15616512298584
    6. ' ' → logprob: -13.90616512298584
    7. ' int' → logprob: -14.15616512298584
    8. '	input' → logprob: -14.28116512298584
    9. 'str' → logprob: -14.28116512298584
    10. '"' → logprob: -14.40616512298584

Token 15: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16706255078315735
    2. '()' → logprob: -1.917062520980835
    3. '('' → logprob: -5.167062759399414
    4. '("("' → logprob: -7.667062759399414
    5. '("' → logprob: -9.042062759399414
    6. ')' → logprob: -9.042062759399414
    7. '"' → logprob: -9.417062759399414
    8. '```' → logprob: -9.667062759399414
    9. ''' → logprob: -9.917062759399414
    10. '(
' → logprob: -10.167062759399414

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029839929193258286
    2. 'print' → logprob: -4.279839992523193
    3. 'if' → logprob: -5.154839992523193
    4. '[' → logprob: -6.404839992523193
    5. ' if' → logprob: -6.404839992523193
    6. ' ' → logprob: -6.404839992523193
    7. '    ' → logprob: -6.779839992523193
    8. ')' → logprob: -6.904839992523193
    9. '.' → logprob: -8.154839515686035
    10. '_' → logprob: -8.279839515686035

Token 17: ' parts' (ID: 7881)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38591423630714417
    2. '   ' → logprob: -2.0109143257141113
    3. 'count' → logprob: -2.6359143257141113
    4. ' if' → logprob: -2.8859143257141113
    5. 'print' → logprob: -4.385914325714111
    6. 'i' → logprob: -5.135914325714111
    7. 'words' → logprob: -5.135914325714111
    8. 'result' → logprob: -5.760914325714111
    9. 't' → logprob: -5.885914325714111
    10. ')' → logprob: -6.010914325714111

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1461676061153412
    2. '=' → logprob: -2.021167516708374
    3. '.' → logprob: -5.771167755126953
    4. '[' → logprob: -8.896167755126953
    5. ')' → logprob: -9.396167755126953
    6. '.split' → logprob: -10.146167755126953
    7. '_' → logprob: -10.271167755126953
    8. 's' → logprob: -11.021167755126953
    9. '.=' → logprob: -11.021167755126953
    10. '   ' → logprob: -11.896167755126953

Token 19: ' []
' (ID: 8911)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12693041563034058
    2. 's' → logprob: -2.1269304752349854
    3. ' ' → logprob: -14.751930236816406
    4. 'list' → logprob: -14.876930236816406
    5. ' list' → logprob: -15.001930236816406
    6. '[]' → logprob: -15.251930236816406
    7. '	s' → logprob: -15.501930236816406
    8. '[' → logprob: -15.626930236816406
    9. ' []' → logprob: -15.876930236816406
    10. ''s' → logprob: -16.126930236816406

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40351343154907227
    2. 'for' → logprob: -1.6535134315490723
    3. '.' → logprob: -2.9035134315490723
    4. 'if' → logprob: -2.9035134315490723
    5. ' for' → logprob: -4.653513431549072
    6. ' if' → logprob: -4.653513431549072
    7. ' ' → logprob: -6.028513431549072
    8. 'tokens' → logprob: -6.653513431549072
    9. 'parts' → logprob: -6.778513431549072
    10. 'p' → logprob: -6.903513431549072

Token 21: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08197411149740219
    2. 'if' → logprob: -3.0819740295410156
    3. ' for' → logprob: -3.9569740295410156
    4. '   ' → logprob: -5.831974029541016
    5. 'parts' → logprob: -5.831974029541016
    6. 'i' (adapté à ' i') → logprob: -6.206974029541016
    7. 'p' → logprob: -6.456974029541016
    8. ' if' → logprob: -7.081974029541016
    9. 'tokens' → logprob: -7.331974029541016
    10. 'token' → logprob: -7.456974029541016

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8001116514205933
    2. ' =' → logprob: -0.8001116514205933
    3. 'f' → logprob: -3.175111770629883
    4. ' ' → logprob: -3.550111770629883
    5. 'n' → logprob: -3.675111770629883
    6. ' +=' → logprob: -6.300111770629883
    7. 'nt' → logprob: -6.800111770629883
    8. '+' → logprob: -7.550111770629883
    9. 's' → logprob: -7.675111770629883
    10. '<|end|>' → logprob: -7.800111770629883

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1801714152097702
    2. ' ' → logprob: -1.8051713705062866
    3. '1' → logprob: -7.805171489715576
    4. '2' → logprob: -11.930171012878418
    5. ' len' → logprob: -12.055171012878418
    6. '3' → logprob: -14.055171012878418
    7. 'len' → logprob: -14.117671012878418
    8. ' ' → logprob: -14.367671012878418
    9. ' i' → logprob: -14.492671012878418
    10. '4' → logprob: -14.492671012878418

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009870808571577072
    2. ' ' → logprob: -7.2509870529174805
    3. '1' → logprob: -8.25098705291748
    4. 'len' → logprob: -11.62598705291748
    5. '2' → logprob: -12.87598705291748
    6. ' len' → logprob: -13.37598705291748
    7. '-' → logprob: -14.50098705291748
    8. '   ' → logprob: -15.00098705291748
    9. 's' → logprob: -15.25098705291748
    10. '3' → logprob: -15.50098705291748

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04614410921931267
    2. ' while' → logprob: -3.1711440086364746
    3. ' ' → logprob: -6.296144008636475
    4. '   ' → logprob: -7.171144008636475
    5. ')' → logprob: -9.296144485473633
    6. '```' → logprob: -9.546144485473633
    7. 'w' → logprob: -9.671144485473633
    8. 'n' → logprob: -9.796144485473633
    9. 'len' → logprob: -10.046144485473633
    10. '  ' → logprob: -10.671144485473633

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.034208033233881
    2. 'i' → logprob: -3.409208059310913
    3. ' s' → logprob: -8.284208297729492
    4. ' ' → logprob: -8.409208297729492
    5. 's' → logprob: -9.784208297729492
    6. ' True' → logprob: -10.909208297729492
    7. 'True' → logprob: -12.534208297729492
    8. '  ' → logprob: -12.909208297729492
    9. '    ' → logprob: -13.659208297729492
    10. ' len' → logprob: -14.034208297729492

Token 29: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2322332113981247
    2. '<' → logprob: -1.6072331666946411
    3. ' <=' → logprob: -5.357233047485352
    4. '<=' → logprob: -6.982233047485352
    5. ' ' → logprob: -7.107233047485352
    6. '<len' → logprob: -8.982233047485352
    7. '<|end|>' → logprob: -10.232233047485352
    8. '+' → logprob: -10.357233047485352
    9. '<int' → logprob: -10.857233047485352
    10. '<size' → logprob: -11.107233047485352

Token 30: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.014165041036903858
    2. 'len' → logprob: -4.264164924621582
    3. '(len' → logprob: -13.639164924621582
    4. '=len' → logprob: -15.389164924621582
    5. ' ' → logprob: -16.2641658782959
    6. '	len' → logprob: -18.2641658782959
    7. '[len' → logprob: -18.3891658782959
    8. '<len' → logprob: -18.3891658782959
    9. ',len' → logprob: -19.0141658782959
    10. '   ' → logprob: -20.5141658782959

Token 31: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0004378214362077415
    2. '(' → logprob: -7.7504377365112305
    3. 's' → logprob: -11.87543773651123
    4. '(
' → logprob: -16.625438690185547
    5. ')' → logprob: -17.000438690185547
    6. ' (' → logprob: -18.625438690185547
    7. '(S' → logprob: -18.875438690185547
    8. '(parts' → logprob: -18.875438690185547
    9. '(

' → logprob: -19.125438690185547
    10. '(n' → logprob: -19.125438690185547

Token 32: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0488568544387817
    2. ' and' → logprob: -1.0488568544387817
    3. '):' → logprob: -1.2988568544387817
    4. 'and' → logprob: -4.048856735229492
    5. '):
' → logprob: -4.798856735229492
    6. ':' → logprob: -8.298856735229492
    7. ' )' → logprob: -8.548856735229492
    8. ' ):' → logprob: -8.923856735229492
    9. '   ' → logprob: -9.173856735229492
    10. ' ' → logprob: -10.048856735229492

Token 33: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27480483055114746
    2. ' ' → logprob: -2.8998048305511475
    3. 'if' → logprob: -2.8998048305511475
    4. '    ' → logprob: -3.0248048305511475
    5. '   ' → logprob: -3.1498048305511475
    6. '       ' → logprob: -3.5248048305511475
    7. ':' → logprob: -6.399805068969727
    8. 'j' → logprob: -7.024805068969727
    9. '  ' → logprob: -7.274805068969727
    10. ')' → logprob: -7.774805068969727

Token 34: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23817512392997742
    2. ' ' → logprob: -2.4881751537323
    3. 'if' (adapté à ' if') → logprob: -2.7381751537323
    4. '    ' → logprob: -3.4881751537323
    5. '   ' → logprob: -4.363174915313721
    6. '       ' → logprob: -4.738174915313721
    7. ' c' → logprob: -5.988174915313721
    8. 'j' → logprob: -6.738174915313721
    9. 'c' → logprob: -6.988174915313721
    10. '  ' → logprob: -7.238174915313721

Token 35: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.016604211181402206
    2. 's' → logprob: -4.266604423522949
    3. ' ' → logprob: -6.766604423522949
    4. ' not' → logprob: -7.141604423522949
    5. ' i' → logprob: -8.01660442352295
    6. 'i' → logprob: -10.26660442352295
    7. ' (' → logprob: -10.26660442352295
    8. ' '' → logprob: -10.26660442352295
    9. 'not' → logprob: -11.26660442352295
    10. '(s' → logprob: -11.89160442352295

Token 36: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008637258782982826
    2. '[' → logprob: -4.758637428283691
    3. '[int' → logprob: -13.008637428283691
    4. '[j' → logprob: -13.133637428283691
    5. '   ' → logprob: -13.258637428283691
    6. '.startswith' → logprob: -13.258637428283691
    7. ' [' → logprob: -13.508637428283691
    8. '[in' → logprob: -13.633637428283691
    9. '[:' → logprob: -14.133637428283691
    10. '==' → logprob: -14.258637428283691

Token 37: '].' (ID: 1651)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.463189959526062
    2. '==' → logprob: -1.088189959526062
    3. '=' → logprob: -4.463190078735352
    4. '.is' → logprob: -5.588190078735352
    5. ' in' → logprob: -5.713190078735352
    6. ')' → logprob: -6.088190078735352
    7. '[' → logprob: -6.088190078735352
    8. '.' → logprob: -6.088190078735352
    9. ' ' → logprob: -6.463190078735352
    10. ']' → logprob: -6.588190078735352

Token 38: 'isl' (ID: 13495)
  Prédit: 'isdigit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -0.13551954925060272
    2. 'is' → logprob: -2.135519504547119
    3. 'iss' → logprob: -5.885519504547119
    4. 'isl' → logprob: -6.010519504547119
    5. 'isal' → logprob: -6.635519504547119
    6. 'upper' → logprob: -7.260519504547119
    7. ''' → logprob: -7.760519504547119
    8. ''is' → logprob: -8.760519981384277
    9. 'lower' → logprob: -8.885519981384277
    10. 'isas' → logprob: -8.885519981384277

Token 39: 'ower' (ID: 1611)
  Prédit: 'ower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ower' → logprob: -0.0011814195895567536
    2. 'ow' → logprob: -7.001181602478027
    3. 'alpha' → logprob: -9.126181602478027
    4. 'o' → logprob: -9.626181602478027
    5. 'owe' → logprob: -10.251181602478027
    6. 'lower' → logprob: -11.126181602478027
    7. 'a' → logprob: -11.376181602478027
    8. 'upper' → logprob: -12.001181602478027
    9. 'etter' → logprob: -12.126181602478027
    10. 'OWER' → logprob: -12.376181602478027

Token 40: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4746047556400299
    2. '()' → logprob: -0.9746047258377075
    3. '())' → logprob: -7.724604606628418
    4. '(' → logprob: -9.974604606628418
    5. '()==' → logprob: -11.349604606628418
    6. '():
' → logprob: -11.974604606628418
    7. '()):
' → logprob: -13.099604606628418
    8. '):' → logprob: -13.224604606628418
    9. '()]' → logprob: -13.224604606628418
    10. '()}' → logprob: -13.224604606628418

Token 41: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29685178399086
    2. ' and' → logprob: -2.046851873397827
    3. ':' → logprob: -2.921851873397827
    4. '       ' → logprob: -3.171851873397827
    5. ' or' → logprob: -3.921851873397827
    6. '        ' → logprob: -6.296851634979248
    7. ' ' → logprob: -6.421851634979248
    8. '<|end|>' → logprob: -6.671851634979248
    9. ')' → logprob: -6.796851634979248
    10. ' :' → logprob: -7.171851634979248

Token 42: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.037226930260658264
    2. 'parts' (adapté à ' parts') → logprob: -4.662227153778076
    3. '           ' → logprob: -4.912227153778076
    4. '        ' → logprob: -5.537227153778076
    5. ' if' → logprob: -5.537227153778076
    6. ' i' → logprob: -5.662227153778076
    7. '       ' → logprob: -6.037227153778076
    8. ' j' → logprob: -6.412227153778076
    9. 'j' → logprob: -7.162227153778076
    10. '            ' → logprob: -7.787227153778076

Token 43: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004206020850688219
    2. '.' → logprob: -5.50420618057251
    3. '().' → logprob: -9.129205703735352
    4. ' .' → logprob: -11.879205703735352
    5. '=' → logprob: -13.004205703735352
    6. '.Append' → logprob: -13.254205703735352
    7. '.extend' → logprob: -13.629205703735352
    8. 'append' → logprob: -13.879205703735352
    9. '+' → logprob: -14.129205703735352
    10. '_append' → logprob: -14.129205703735352

Token 44: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.06890902668237686
    2. '('' → logprob: -3.318908929824829
    3. '(' → logprob: -3.568908929824829
    4. '("("' → logprob: -6.443909168243408
    5. '((' → logprob: -7.818909168243408
    6. 's' → logprob: -9.94390869140625
    7. '('_' → logprob: -9.94390869140625
    8. '("' → logprob: -10.44390869140625
    9. '(i' → logprob: -10.56890869140625
    10. '("'"' → logprob: -11.44390869140625

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.868328920158092e-05
    2. '[' → logprob: -11.625028610229492
    3. '[j' → logprob: -11.875028610229492
    4. '[:' → logprob: -12.000028610229492
    5. '[a' → logprob: -13.750028610229492
    6. '```' → logprob: -14.125028610229492
    7. '[start' → logprob: -14.250028610229492
    8. ')' → logprob: -14.375028610229492
    9. 'i' → logprob: -14.375028610229492
    10. '[I' → logprob: -15.250028610229492

Token 46: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23034140467643738
    2. '.lower' → logprob: -2.2303414344787598
    3. '.upper' → logprob: -3.1053414344787598
    4. '])' → logprob: -3.3553414344787598
    5. '))' → logprob: -4.98034143447876
    6. '+' → logprob: -6.23034143447876
    7. ' )' → logprob: -6.73034143447876
    8. '       ' → logprob: -6.85534143447876
    9. ']' → logprob: -7.23034143447876
    10. '.' → logprob: -7.23034143447876

Token 47: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9211092591285706
    2. '       ' → logprob: -1.0461091995239258
    3. 'i' → logprob: -1.5461091995239258
    4. ' i' → logprob: -3.796109199523926
    5. '               ' → logprob: -5.796109199523926
    6. ')' → logprob: -6.171109199523926
    7. '   ' → logprob: -6.296109199523926
    8. '+' → logprob: -6.421109199523926
    9. '[i' → logprob: -6.796109199523926
    10. 's' → logprob: -7.546109199523926

Token 48: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00305364653468132
    2. ' i' → logprob: -6.003053665161133
    3. '           ' → logprob: -7.628053665161133
    4. '       ' → logprob: -9.503053665161133
    5. '   ' → logprob: -12.003053665161133
    6. '               ' → logprob: -12.503053665161133
    7. ')' → logprob: -13.628053665161133
    8. '_i' → logprob: -13.753053665161133
    9. ' ' → logprob: -14.253053665161133
    10. '            
' → logprob: -14.503053665161133

Token 49: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.45634281635284424
    2. '+' → logprob: -1.2063428163528442
    3. ' +=' → logprob: -2.7063426971435547
    4. '=' → logprob: -8.331342697143555
    5. '++' → logprob: -9.956342697143555
    6. ' +' → logprob: -11.456342697143555
    7. '1' → logprob: -11.456342697143555
    8. '+++' → logprob: -11.581342697143555
    9. ')' → logprob: -12.706342697143555
    10. 'i' → logprob: -13.081342697143555

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.625009536743164
    4. '2' → logprob: -17.125009536743164
    5. '3' → logprob: -18.125009536743164
    6. '   ' → logprob: -18.312509536743164
    7. '4' → logprob: -18.937509536743164
    8. '0' → logprob: -19.062509536743164
    9. '１' → logprob: -19.812509536743164
    10. '۱' → logprob: -19.937509536743164

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '2' → logprob: -16.75000762939453
    4. '```' → logprob: -16.87500762939453
    5. '<|end|>' → logprob: -16.93750762939453
    6. '0' → logprob: -17.43750762939453
    7. '3' → logprob: -18.25000762939453
    8. '4' → logprob: -18.43750762939453
    9. '+' → logprob: -18.50000762939453
    10. '   ' → logprob: -19.00000762939453

Token 52: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0616077296435833
    2. 'elif' → logprob: -2.936607837677002
    3. 'else' → logprob: -5.311607837677002
    4. ' elif' → logprob: -7.311607837677002
    5. '   ' → logprob: -7.936607837677002
    6. ' else' → logprob: -8.436607360839844
    7. '```' → logprob: -8.436607360839844
    8. '           ' → logprob: -9.061607360839844
    9. ')' → logprob: -9.811607360839844
    10. '
' → logprob: -10.936607360839844

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2918814420700073
    2. 'elif' → logprob: -1.4168814420700073
    3. 'else' → logprob: -5.291881561279297
    4. '   ' → logprob: -6.416881561279297
    5. ' elif' → logprob: -6.416881561279297
    6. '```' → logprob: -6.541881561279297
    7. '           ' → logprob: -7.291881561279297
    8. ' else' → logprob: -9.416881561279297
    9. '``' → logprob: -10.666881561279297
    10. ')' → logprob: -10.791881561279297

Token 54: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.1358087956905365
    2. 'else' (adapté à ' else') → logprob: -2.1358087062835693
    3. '       ' → logprob: -5.510808944702148
    4. ' elif' → logprob: -5.885808944702148
    5. ' else' → logprob: -6.260808944702148
    6. '   ' → logprob: -9.760808944702148
    7. '```' → logprob: -10.260808944702148
    8. '	elif' → logprob: -11.760808944702148
    9. '           ' → logprob: -13.010808944702148
    10. 'elseif' → logprob: -13.385808944702148

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009968562982976437
    2. ':
' → logprob: -4.6349687576293945
    3. '           ' → logprob: -8.884968757629395
    4. '       ' → logprob: -10.634968757629395
    5. ' if' → logprob: -12.009968757629395
    6. '{' → logprob: -12.009968757629395
    7. ' :' → logprob: -12.134968757629395
    8. 'if' → logprob: -12.259968757629395
    9. '[' → logprob: -12.384968757629395
    10. 's' → logprob: -12.509968757629395

Token 56: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33070361614227295
    2. ' i' → logprob: -2.7057037353515625
    3. '       ' → logprob: -3.2057037353515625
    4. ' parts' → logprob: -3.2057037353515625
    5. ' if' → logprob: -3.3307037353515625
    6. ' j' → logprob: -3.5807037353515625
    7. 'j' → logprob: -3.7057037353515625
    8. 'i' → logprob: -4.4557037353515625
    9. '   ' → logprob: -4.9557037353515625
    10. ' n' → logprob: -5.5807037353515625

Token 57: ' if' (ID: 538)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.19415277242660522
    2. ' j' → logprob: -2.69415283203125
    3. '           ' → logprob: -3.44415283203125
    4. 'count' → logprob: -3.94415283203125
    5. 'num' → logprob: -4.19415283203125
    6. '   ' → logprob: -4.69415283203125
    7. 'if' (adapté à ' if') → logprob: -4.81915283203125
    8. 'start' → logprob: -5.44415283203125
    9. ' count' → logprob: -6.19415283203125
    10. ' if' → logprob: -6.19415283203125

Token 58: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26877492666244507
    2. 'i' → logprob: -1.7687749862670898
    3. ' s' → logprob: -2.89377498626709
    4. 's' → logprob: -5.26877498626709
    5. ' not' → logprob: -6.51877498626709
    6. ' ' → logprob: -6.64377498626709
    7. ' parts' → logprob: -7.01877498626709
    8. ' (' → logprob: -8.01877498626709
    9. ' len' → logprob: -8.76877498626709
    10. '(i' → logprob: -8.76877498626709

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010390079842181876
    2. '[' → logprob: -9.375103950500488
    3. '(i' → logprob: -12.250103950500488
    4. 'i' → logprob: -12.875103950500488
    5. '+' → logprob: -13.375103950500488
    6. '.startswith' → logprob: -13.375103950500488
    7. 'isdigit' → logprob: -13.875103950500488
    8. '```' → logprob: -14.375103950500488
    9. '==' → logprob: -14.500103950500488
    10. '   ' → logprob: -14.500103950500488

Token 60: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.611423909664154
    2. ' ==' → logprob: -1.2364239692687988
    3. '.is' → logprob: -2.861423969268799
    4. '+' → logprob: -3.361423969268799
    5. 'isdigit' → logprob: -3.361423969268799
    6. '[' → logprob: -4.611423969268799
    7. '[i' → logprob: -4.736423969268799
    8. 'is' → logprob: -5.361423969268799
    9. '-' → logprob: -5.986423969268799
    10. ']' → logprob: -6.611423969268799

Token 61: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8574917316436768
    2. ' ==' → logprob: -0.8574917316436768
    3. '.is' → logprob: -2.2324917316436768
    4. 'isdigit' → logprob: -3.4824917316436768
    5. 'is' → logprob: -5.607491493225098
    6. ' in' → logprob: -6.232491493225098
    7. '=='' → logprob: -6.482491493225098
    8. ':' → logprob: -7.357491493225098
    9. '[' → logprob: -7.357491493225098
    10. '[i' → logprob: -7.482491493225098

Token 62: ' '-'' (ID: 59558)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11670082062482834
    2. ''A' → logprob: -3.6167008876800537
    3. ''<' → logprob: -4.616700649261475
    4. ''_' → logprob: -4.616700649261475
    5. ''{' → logprob: -4.991700649261475
    6. ''-' → logprob: -4.991700649261475
    7. ''#' → logprob: -4.991700649261475
    8. ''C' → logprob: -4.991700649261475
    9. ''"' → logprob: -5.116700649261475
    10. ''S' → logprob: -5.491700649261475

Token 63: ' and' (ID: 326)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.39420396089553833
    2. '-' → logprob: -1.1442039012908936
    3. ' and' → logprob: -5.519204139709473
    4. ' ' → logprob: -6.019204139709473
    5. ':' → logprob: -9.144204139709473
    6. '=' → logprob: -9.144204139709473
    7. '->' → logprob: -9.269204139709473
    8. '&' → logprob: -9.269204139709473
    9. '>-' → logprob: -9.394204139709473
    10. ' >' → logprob: -9.769204139709473

Token 64: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.44820263981819153
    2. 'i' → logprob: -1.0732026100158691
    3. ' (' → logprob: -4.573202610015869
    4. ' ' → logprob: -5.823202610015869
    5. '(i' → logprob: -6.323202610015869
    6. 's' → logprob: -6.573202610015869
    7. ' s' → logprob: -6.948202610015869
    8. '(' → logprob: -8.073203086853027
    9. '  ' → logprob: -8.198203086853027
    10. '>' → logprob: -8.823203086853027

Token 65: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20183058083057404
    2. ' +' → logprob: -1.7018306255340576
    3. ' >' → logprob: -8.701830863952637
    4. '>' → logprob: -9.201830863952637
    5. ' ' → logprob: -9.576830863952637
    6. '0' → logprob: -10.701830863952637
    7. ' <' → logprob: -11.076830863952637
    8. '-' → logprob: -11.951830863952637
    9. '+i' → logprob: -11.951830863952637
    10. '   ' → logprob: -12.076830863952637

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031714143697172403
    2. ' ' → logprob: -6.128171443939209
    3. '2' → logprob: -7.003171443939209
    4. '+' → logprob: -11.12817096710205
    5. ' <' → logprob: -11.12817096710205
    6. '3' → logprob: -11.25317096710205
    7. '<' → logprob: -11.87817096710205
    8. '```' → logprob: -12.00317096710205
    9. '   ' → logprob: -12.94067096710205
    10. '<|end|>' → logprob: -13.00317096710205

Token 67: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09803570061922073
    2. '<' → logprob: -2.4730358123779297
    3. '<|end|>' → logprob: -4.84803581237793
    4. ' ' → logprob: -7.09803581237793
    5. '<len' → logprob: -8.47303581237793
    6. '<n' → logprob: -10.72303581237793
    7. ')' → logprob: -10.97303581237793
    8. '<|end|>' → logprob: -11.09803581237793
    9. '[' → logprob: -11.22303581237793
    10. ' less' → logprob: -11.84803581237793

Token 68: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011705794604495168
    2. ' len' → logprob: -6.751170635223389
    3. '<len' → logprob: -16.251171112060547
    4. '(len' → logprob: -16.501171112060547
    5. ' ' → logprob: -16.751171112060547
    6. '=len' → logprob: -16.876171112060547
    7. 'length' → logprob: -17.251171112060547
    8. '   ' → logprob: -17.251171112060547
    9. '	len' → logprob: -17.751171112060547
    10. '[len' → logprob: -18.626171112060547

Token 69: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009140860638581216
    2. 's' → logprob: -7.000914096832275
    3. '(' → logprob: -13.000913619995117
    4. ' s' → logprob: -15.875913619995117
    5. ')' → logprob: -16.750913619995117
    6. ' (' → logprob: -17.000913619995117
    7. ')s' → logprob: -18.000913619995117
    8. '(parts' → logprob: -18.875913619995117
    9. '```' → logprob: -19.500913619995117
    10. ' ' → logprob: -19.625913619995117

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5848209857940674
    2. ' and' → logprob: -1.2098209857940674
    3. 'and' → logprob: -1.9598209857940674
    4. 's' → logprob: -5.959820747375488
    5. ' )' → logprob: -7.209820747375488
    6. '           ' → logprob: -9.959820747375488
    7. '):' → logprob: -9.959820747375488
    8. ')s' → logprob: -10.084820747375488
    9. ' ' → logprob: -10.209820747375488
    10. ' s' → logprob: -10.584820747375488

Token 71: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.22544829547405243
    2. ' and' → logprob: -1.6004482507705688
    3. '<|end|>' → logprob: -11.350448608398438
    4. '	and' → logprob: -11.975448608398438
    5. ' ' → logprob: -12.225448608398438
    6. '           ' → logprob: -12.475448608398438
    7. ':' → logprob: -13.600448608398438
    8. 's' → logprob: -13.850448608398438
    9. '```' → logprob: -14.100448608398438
    10. '<|end|>' → logprob: -14.350448608398438

Token 72: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31650570034980774
    2. 's' → logprob: -1.3165056705474854
    3. ''s' → logprob: -6.6915059089660645
    4. ' ' → logprob: -6.8165059089660645
    5. ' '' → logprob: -8.316505432128906
    6. 'ord' → logprob: -9.066505432128906
    7. ''' → logprob: -9.066505432128906
    8. ' ord' → logprob: -9.316505432128906
    9. ' not' → logprob: -9.566505432128906
    10. ' (' → logprob: -9.691505432128906

Token 73: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09366945177316666
    2. ''s' → logprob: -2.8436694145202637
    3. ''' → logprob: -4.343669414520264
    4. '65' → logprob: -5.593669414520264
    5. '97' → logprob: -5.843669414520264
    6. ' s' → logprob: -6.093669414520264
    7. ')' → logprob: -6.843669414520264
    8. '   ' → logprob: -6.968669414520264
    9. '')' → logprob: -6.968669414520264
    10. 'ord' → logprob: -7.218669414520264

Token 74: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011129142512800172
    2. 'i' → logprob: -9.25011157989502
    3. '[' → logprob: -11.87511157989502
    4. ')' → logprob: -13.87511157989502
    5. '```' → logprob: -13.87511157989502
    6. '   ' → logprob: -14.12511157989502
    7. 'I' → logprob: -14.75011157989502
    8. '[++' → logprob: -14.75011157989502
    9. ')[' → logprob: -14.87511157989502
    10. '[j' → logprob: -15.00011157989502

Token 75: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008462690748274326
    2. '[i' → logprob: -5.008462905883789
    3. 'i' → logprob: -6.633462905883789
    4. ' +' → logprob: -8.383462905883789
    5. '+i' → logprob: -9.508462905883789
    6. '-' → logprob: -10.258462905883789
    7. '   ' → logprob: -10.508462905883789
    8. ']' → logprob: -11.133462905883789
    9. ']+' → logprob: -11.633462905883789
    10. ' ' → logprob: -12.133462905883789

Token 76: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06921687722206116
    2. '1' → logprob: -3.3192169666290283
    3. '0' → logprob: -4.069216728210449
    4. '[i' → logprob: -5.069216728210449
    5. ']' → logprob: -6.569216728210449
    6. '(i' → logprob: -6.944216728210449
    7. ' ' → logprob: -7.069216728210449
    8. ')' → logprob: -7.069216728210449
    9. '+' → logprob: -7.444216728210449
    10. '   ' → logprob: -7.569216728210449

Token 77: ']' (ID: 60)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.7833929657936096
    2. '].' → logprob: -1.5333929061889648
    3. ').' → logprob: -2.283392906188965
    4. '==' → logprob: -2.658392906188965
    5. ' ==' → logprob: -3.033392906188965
    6. 'is' → logprob: -3.658392906188965
    7. ']' → logprob: -3.783392906188965
    8. '.' → logprob: -3.783392906188965
    9. 'isdigit' → logprob: -5.158392906188965
    10. ')' → logprob: -5.408392906188965

Token 78: ' ==' (ID: 951)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.23439787328243256
    2. '==' → logprob: -2.1093978881835938
    3. '.' → logprob: -3.2343978881835938
    4. 'is' → logprob: -3.7343978881835938
    5. ' ==' → logprob: -4.734397888183594
    6. 'isdigit' → logprob: -5.734397888183594
    7. 'isl' → logprob: -5.859397888183594
    8. '>=' → logprob: -6.109397888183594
    9. ').' → logprob: -6.609397888183594
    10. '=='' → logprob: -6.734397888183594

Token 79: ' '<' (ID: 8144)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.5567759871482849
    2. ''' → logprob: -1.4317760467529297
    3. ''>' → logprob: -2.3067760467529297
    4. ''s' → logprob: -3.1817760467529297
    5. ''.' → logprob: -5.05677604675293
    6. ''a' → logprob: -5.30677604675293
    7. ''A' → logprob: -5.68177604675293
    8. '')' → logprob: -5.80677604675293
    9. ''<' → logprob: -5.80677604675293
    10. ''+' → logprob: -6.05677604675293

Token 80: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2091875970363617
    2. '-' → logprob: -2.3341875076293945
    3. '<' → logprob: -2.9591875076293945
    4. ')' → logprob: -3.9591875076293945
    5. ' or' → logprob: -4.9591875076293945
    6. ''' → logprob: -5.2091875076293945
    7. ' ' → logprob: -6.5841875076293945
    8. '>' → logprob: -6.9591875076293945
    9. '0' → logprob: -7.5841875076293945
    10. '')' → logprob: -7.6466875076293945

Token 81: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.013586617074906826
    2. ')' → logprob: -4.763586521148682
    3. 'or' → logprob: -5.763586521148682
    4. '=' → logprob: -7.263586521148682
    5. '):' → logprob: -8.26358699798584
    6. ' ' → logprob: -8.51358699798584
    7. '<|end|>' → logprob: -8.88858699798584
    8. '):
' → logprob: -9.13858699798584
    9. '):

' → logprob: -9.63858699798584
    10. '       ' → logprob: -10.01358699798584

Token 82: ' s' (ID: 265)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34591221809387207
    2. ''=' → logprob: -1.970912218093872
    3. ''-' → logprob: -2.345912218093872
    4. '-' → logprob: -4.095911979675293
    5. ''' → logprob: -4.095911979675293
    6. ''>' → logprob: -4.720911979675293
    7. '='' → logprob: -6.095911979675293
    8. ' '='' → logprob: -6.470911979675293
    9. ' '=' → logprob: -6.470911979675293
    10. '-=' → logprob: -6.845911979675293

Token 83: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018566839396953583
    2. '='' → logprob: -5.518566608428955
    3. '==' → logprob: -5.518566608428955
    4. ''=' → logprob: -6.018566608428955
    5. ''-' → logprob: -6.768566608428955
    6. '-' → logprob: -6.768566608428955
    7. ' =' → logprob: -7.018566608428955
    8. '[' → logprob: -7.143566608428955
    9. ''' → logprob: -7.268566608428955
    10. ' ' → logprob: -7.768566608428955

Token 84: '+' (ID: 10)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.17063570022583
    2. '+' → logprob: -1.92063570022583
    3. ''+' → logprob: -2.04563570022583
    4. ''-' → logprob: -2.42063570022583
    5. ''' → logprob: -2.54563570022583
    6. ''>' → logprob: -2.67063570022583
    7. '[i' → logprob: -3.04563570022583
    8. '==' → logprob: -3.42063570022583
    9. 'i' → logprob: -4.29563570022583
    10. '-' → logprob: -4.29563570022583

Token 85: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19047872722148895
    2. '-' → logprob: -2.190478801727295
    3. '>' → logprob: -4.815478801727295
    4. '-=' → logprob: -4.940478801727295
    5. ''>' → logprob: -5.190478801727295
    6. ' ' → logprob: -5.315478801727295
    7. '">' → logprob: -5.440478801727295
    8. '-)' → logprob: -5.690478801727295
    9. ''=' → logprob: -5.815478801727295
    10. 'i' → logprob: -5.940478801727295

Token 86: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2780880928039551
    2. '==' → logprob: -1.778088092803955
    3. '|' → logprob: -3.778088092803955
    4. ')' → logprob: -3.903088092803955
    5. '='' → logprob: -4.528088092803955
    6. '[' → logprob: -5.403088092803955
    7. ' ==' → logprob: -5.778088092803955
    8. ']' → logprob: -6.403088092803955
    9. '=='' → logprob: -6.528088092803955
    10. '>' → logprob: -6.653088092803955

Token 87: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002329267328605056
    2. '-' → logprob: -7.502329349517822
    3. '==' → logprob: -7.502329349517822
    4. '='' → logprob: -7.877329349517822
    5. ''=' → logprob: -8.127328872680664
    6. '[' → logprob: -9.502328872680664
    7. '=-' → logprob: -9.502328872680664
    8. ')' → logprob: -9.752328872680664
    9. ''-' → logprob: -9.877328872680664
    10. ' =' → logprob: -10.002328872680664

Token 88: ' '>' (ID: 133732)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.49740108847618103
    2. '=' → logprob: -1.9974011182785034
    3. ''=' → logprob: -2.122400999069214
    4. '-' → logprob: -2.997400999069214
    5. ''>' → logprob: -3.247400999069214
    6. ''' → logprob: -3.622400999069214
    7. ' '-')' → logprob: -4.872401237487793
    8. ' '=' → logprob: -5.872401237487793
    9. ' '='' → logprob: -6.372401237487793
    10. ' '-'' → logprob: -6.372401237487793

Token 89: ''):
' (ID: 26539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7581495046615601
    2. ')' → logprob: -0.8831495046615601
    3. '):
' → logprob: -2.3831496238708496
    4. ''):' → logprob: -4.13314962387085
    5. ''):
' → logprob: -5.50814962387085
    6. '')' → logprob: -6.13314962387085
    7. ' ):' → logprob: -7.00814962387085
    8. ' )' → logprob: -7.75814962387085
    9. '):

' → logprob: -7.88314962387085
    10. ' ):
' → logprob: -8.383149147033691

Token 90: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03468242660164833
    2. ':' → logprob: -4.284682273864746
    3. '           ' → logprob: -5.159682273864746
    4. ' ' → logprob: -5.659682273864746
    5. '<|end|>' → logprob: -5.659682273864746
    6. ' and' → logprob: -6.784682273864746
    7. '                ' → logprob: -6.784682273864746
    8. '            ' → logprob: -7.159682273864746
    9. '              ' → logprob: -7.159682273864746
    10. ' :' → logprob: -7.534682273864746

Token 91: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.06885574012994766
    2. 'parts' (adapté à ' parts') → logprob: -3.0688557624816895
    3. '           ' → logprob: -4.8188557624816895
    4. 'i' → logprob: -5.5688557624816895
    5. ' i' → logprob: -6.1938557624816895
    6. '               ' → logprob: -6.3188557624816895
    7. '            ' → logprob: -6.9438557624816895
    8. '                   ' → logprob: -7.5688557624816895
    9. ' if' → logprob: -7.5688557624816895
    10. '                ' → logprob: -7.9438557624816895

Token 92: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.37167972326278687
    2. '.append' → logprob: -1.3716797828674316
    3. '.extend' → logprob: -2.8716797828674316
    4. '<|end|>' → logprob: -9.996679306030273
    5. '.pop' → logprob: -10.996679306030273
    6. ' .' → logprob: -11.246679306030273
    7. '.remove' → logprob: -11.371679306030273
    8. '.clear' → logprob: -11.871679306030273
    9. '.add' → logprob: -11.996679306030273
    10. '.Append' → logprob: -12.121679306030273

Token 93: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.43298155069351196
    2. '('' → logprob: -1.1829814910888672
    3. '("' → logprob: -3.682981491088867
    4. '('-' → logprob: -4.932981491088867
    5. '(' → logprob: -5.057981491088867
    6. '('<' → logprob: -5.932981491088867
    7. '('--' → logprob: -6.432981491088867
    8. 's' → logprob: -6.932981491088867
    9. '("-' → logprob: -7.557981491088867
    10. '("<' → logprob: -8.682981491088867

Token 94: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -10.875020027160645
    3. 'i' → logprob: -15.375020027160645
    4. '[:' → logprob: -15.500020027160645
    5. '[I' → logprob: -16.625019073486328
    6. ''[' → logprob: -16.750019073486328
    7. '(i' → logprob: -17.250019073486328
    8. '[
' → logprob: -17.250019073486328
    9. '"' → logprob: -17.500019073486328
    10. '[j' → logprob: -17.625019073486328

Token 95: ':i' (ID: 34041)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7379134297370911
    2. ')' → logprob: -0.8629134297370911
    3. '-' → logprob: -3.1129133701324463
    4. ')+' → logprob: -4.237913608551025
    5. 'i' → logprob: -4.612913608551025
    6. '+i' → logprob: -4.737913608551025
    7. '[i' → logprob: -5.487913608551025
    8. ' +' → logprob: -6.112913608551025
    9. '')' → logprob: -6.487913608551025
    10. ']+' → logprob: -6.612913608551025

Token 96: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003782416461035609
    2. '2' → logprob: -8.375378608703613
    3. '3' → logprob: -8.875378608703613
    4. ' +' → logprob: -12.000378608703613
    5. '4' → logprob: -13.500378608703613
    6. '+
' → logprob: -16.375377655029297
    7. '6' → logprob: -16.500377655029297
    8. '+i' → logprob: -16.500377655029297
    9. '   ' → logprob: -17.375377655029297
    10. ']+' → logprob: -17.750377655029297

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2127087504486553e-05
    2. '3' → logprob: -11.250021934509277
    3. ' ' → logprob: -11.750021934509277
    4. '   ' → logprob: -14.750021934509277
    5. '+' → logprob: -15.250021934509277
    6. '
' → logprob: -15.375021934509277
    7. '```' → logprob: -16.625022888183594
    8. '-' → logprob: -16.937522888183594
    9. '  ' → logprob: -17.250022888183594
    10. '           ' → logprob: -17.250022888183594

Token 98: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.38760581612586975
    2. '])
' → logprob: -1.1376057863235474
    3. ')
' → logprob: -7.762605667114258
    4. ')' → logprob: -8.512605667114258
    5. '])
' → logprob: -10.012605667114258
    6. ']' → logprob: -10.137605667114258
    7. '])

' → logprob: -11.762605667114258
    8. '           ' → logprob: -12.387605667114258
    9. ']
' → logprob: -12.887605667114258
    10. ']);' → logprob: -12.887605667114258

Token 99: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001049736310960725
    2. '                
' → logprob: -10.125104904174805
    3. '           ' → logprob: -10.250104904174805
    4. '                   ' → logprob: -11.250104904174805
    5. '```' → logprob: -12.500104904174805
    6. 'i' → logprob: -12.625104904174805
    7. '              ' → logprob: -13.250104904174805
    8. '
' → logprob: -13.500104904174805
    9. '                ' → logprob: -14.000104904174805
    10. '            
' → logprob: -14.125104904174805

Token 100: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.05707794055342674
    2. '               ' → logprob: -3.1820778846740723
    3. ' i' → logprob: -4.807077884674072
    4. '                   ' → logprob: -5.307077884674072
    5. '           ' → logprob: -7.932077884674072
    6. '
' → logprob: -8.05707836151123
    7. 'break' → logprob: -9.30707836151123
    8. '   ' → logprob: -10.30707836151123
    9. '```' → logprob: -11.80707836151123
    10. ' 
' → logprob: -11.93207836151123

Token 101: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08223053067922592
    2. ' +=' → logprob: -2.582230567932129
    3. '+' → logprob: -5.707230567932129
    4. '=' → logprob: -12.332230567932129
    5. ' +' → logprob: -12.332230567932129
    6. ' ' → logprob: -13.332230567932129
    7. '   ' → logprob: -14.457230567932129
    8. '```' → logprob: -14.582230567932129
    9. '           ' → logprob: -14.832230567932129
    10. ']+=' → logprob: -14.957230567932129

Token 102: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -15.875007629394531
    4. '```' → logprob: -18.25000762939453
    5. '۲' → logprob: -18.87500762939453
    6. '２' → logprob: -19.87500762939453
    7. '  ' → logprob: -20.12500762939453
    8. '
' → logprob: -20.56250762939453
    9. '	' → logprob: -21.00000762939453
    10. ' ' → logprob: -21.31250762939453

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.6250057220459
    4. '۲' → logprob: -18.5000057220459
    5. '２' → logprob: -20.0000057220459
    6. '```' → logprob: -20.0000057220459
    7. '  ' → logprob: -20.7500057220459
    8. '२' → logprob: -21.2500057220459
    9. '২' → logprob: -21.7500057220459
    10. '₂' → logprob: -21.8125057220459

Token 104: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006200145464390516
    2. 'else' → logprob: -5.131200313568115
    3. ' else' → logprob: -8.881199836730957
    4. '       ' → logprob: -9.881199836730957
    5. '               ' → logprob: -10.756199836730957
    6. '<|end|>' → logprob: -10.756199836730957
    7. 'elif' → logprob: -10.756199836730957
    8. '```' → logprob: -11.256199836730957
    9. 'continue' → logprob: -13.881199836730957
    10. ')' → logprob: -14.006199836730957

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0048364149406552315
    2. 'else' → logprob: -5.379836559295654
    3. ' else' → logprob: -9.129836082458496
    4. '       ' → logprob: -10.129836082458496
    5. '<|end|>' → logprob: -10.754836082458496
    6. '               ' → logprob: -10.879836082458496
    7. '```' → logprob: -11.254836082458496
    8. 'elif' → logprob: -11.504836082458496
    9. '		' → logprob: -13.379836082458496
    10. '<|end|>' → logprob: -14.754836082458496

Token 106: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.053574807941913605
    2. '       ' → logprob: -3.553574800491333
    3. ' else' → logprob: -3.803574800491333
    4. '           ' → logprob: -7.053575038909912
    5. 'elif' → logprob: -7.928575038909912
    6. '	else' → logprob: -11.553574562072754
    7. '<|end|>' → logprob: -12.303574562072754
    8. '```' → logprob: -12.803574562072754
    9. ' elif' → logprob: -12.928574562072754
    10. '               ' → logprob: -12.928574562072754

Token 107: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1730649620294571
    2. ':' → logprob: -2.048064947128296
    3. ':
' → logprob: -3.673064947128296
    4. '           ' → logprob: -5.673065185546875
    5. '<|end|>' → logprob: -7.798065185546875
    6. 'i' → logprob: -8.923065185546875
    7. '   ' → logprob: -9.548065185546875
    8. '```' → logprob: -9.673065185546875
    9. '       ' → logprob: -9.798065185546875
    10. 's' → logprob: -10.173065185546875

Token 108: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8050078749656677
    2. '               ' → logprob: -1.4300079345703125
    3. 'parts' → logprob: -1.6800079345703125
    4. ' parts' → logprob: -2.8050079345703125
    5. 'i' → logprob: -3.0550079345703125
    6. '   ' → logprob: -4.3050079345703125
    7. '       ' → logprob: -5.6800079345703125
    8. ' i' → logprob: -6.5550079345703125
    9. 'break' → logprob: -7.4300079345703125
    10. '```' → logprob: -8.180007934570312

Token 109: ' i' (ID: 575)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.05856352671980858
    2. 'break' → logprob: -3.433563470840454
    3. 'i' (adapté à ' i') → logprob: -4.183563709259033
    4. ' parts' → logprob: -5.183563709259033
    5. '   ' → logprob: -5.808563709259033
    6. '           ' → logprob: -8.183563232421875
    7. '       ' → logprob: -8.933563232421875
    8. 'pass' → logprob: -10.183563232421875
    9. 'raise' → logprob: -10.433563232421875
    10. ' break' → logprob: -10.433563232421875

Token 110: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07976247370243073
    2. ' +=' → logprob: -2.5797624588012695
    3. '+' → logprob: -7.0797624588012695
    4. '=' → logprob: -10.70476245880127
    5. '   ' → logprob: -12.82976245880127
    6. '<|end|>' → logprob: -13.57976245880127
    7. ']+=' → logprob: -14.20476245880127
    8. '```' → logprob: -14.45476245880127
    9. ')' → logprob: -14.57976245880127
    10. ' ' → logprob: -14.70476245880127

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.37500762939453
    4. '0' → logprob: -17.62500762939453
    5. '```' → logprob: -17.87500762939453
    6. '  ' → logprob: -18.93750762939453
    7. '<|end|>' → logprob: -18.93750762939453
    8. '3' → logprob: -19.00000762939453
    9. '۱' → logprob: -19.56250762939453
    10. '１' → logprob: -19.87500762939453

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -17.000003814697266
    4. '   ' → logprob: -18.562503814697266
    5. '3' → logprob: -18.812503814697266
    6. '2' → logprob: -19.125003814697266
    7. '```' → logprob: -19.437503814697266
    8. '<|end|>' → logprob: -20.000003814697266
    9. '１' → logprob: -20.312503814697266
    10. '১' → logprob: -20.375003814697266

Token 113: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7522453665733337
    2. 'for' → logprob: -1.5022454261779785
    3. '<|end|>' → logprob: -1.8772454261779785
    4. 'print' → logprob: -2.6272454261779785
    5. '#' → logprob: -4.0022454261779785
    6. 'if' → logprob: -4.1272454261779785
    7. ' for' → logprob: -4.2522454261779785
    8. '```' → logprob: -4.8772454261779785
    9. '       ' → logprob: -5.3772454261779785
    10. ')' → logprob: -5.3772454261779785

Token 115: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46516868472099304
    2. 'print' → logprob: -1.5901687145233154
    3. 'result' → logprob: -2.2151687145233154
    4. 'if' → logprob: -3.5901687145233154
    5. 'output' → logprob: -5.465168476104736
    6. 'res' → logprob: -5.465168476104736
    7. ' for' → logprob: -5.840168476104736
    8. '#' (adapté à ' #') → logprob: -5.965168476104736
    9. '   ' → logprob: -5.965168476104736
    10. 'parts' → logprob: -5.965168476104736

Token 116: ' Re' (ID: 907)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.156488060951233
    2. 'result' → logprob: -1.406488060951233
    3. 'for' → logprob: -1.781488060951233
    4. 'if' → logprob: -3.2814879417419434
    5. 'print' → logprob: -3.2814879417419434
    6. ' for' → logprob: -3.5314879417419434
    7. ' #' → logprob: -3.5314879417419434
    8. 'parts' → logprob: -3.9064879417419434
    9. 'res' → logprob: -4.281487941741943
    10. ' if' → logprob: -4.406487941741943

Token 117: 'construct' (ID: 17936)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023845601826906204
    2. 'verse' → logprob: -4.023845672607422
    3. 'arr' → logprob: -7.148845672607422
    4. 'constructed' → logprob: -7.398845672607422
    5. 'turn' → logprob: -7.523845672607422
    6. 'move' → logprob: -7.648845672607422
    7. 'construct' → logprob: -7.773845672607422
    8. 'versed' → logprob: -7.773845672607422
    9. '#' → logprob: -7.898845672607422
    10. 'st' → logprob: -8.023845672607422

Token 118: ' edges' (ID: 22569)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8571658134460449
    2. 'ed' → logprob: -1.107165813446045
    3. 'ing' → logprob: -2.732165813446045
    4. 'output' → logprob: -3.107165813446045
    5. '   ' → logprob: -3.232165813446045
    6. 's' → logprob: -3.732165813446045
    7. 'the' → logprob: -4.732165813446045
    8. 'parts' → logprob: -4.982165813446045
    9. 'answer' → logprob: -4.982165813446045
    10. ' and' → logprob: -5.482165813446045

Token 119: ' according' (ID: 7065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6521055698394775
    2. 'edges' → logprob: -0.7771055698394775
    3. ' edges' → logprob: -4.402105331420898
    4. 'for' → logprob: -5.527105331420898
    5. ' for' → logprob: -6.152105331420898
    6. 'graph' → logprob: -8.152105331420898
    7. 'edge' → logprob: -8.652105331420898
    8. '(edges' → logprob: -9.527105331420898
    9. '<|end|>' → logprob: -9.777105331420898
    10. '    
' → logprob: -10.027105331420898

Token 120: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.002269085729494691
    2. ' to' → logprob: -6.127269268035889
    3. 'ly' → logprob: -10.25226879119873
    4. '_to' → logprob: -11.62726879119873
    5. '<|end|>' → logprob: -11.75226879119873
    6. 't' → logprob: -11.87726879119873
    7. '```' → logprob: -12.37726879119873
    8. '
' → logprob: -12.50226879119873
    9. ' ' → logprob: -12.87726879119873
    10. '   ' → logprob: -13.00226879119873

Token 121: ' moves' (ID: 19523)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7386566400527954
    2. ' the' → logprob: -0.9886566400527954
    3. 'parts' → logprob: -2.238656520843506
    4. ' parts' → logprob: -3.363656520843506
    5. '#' → logprob: -6.113656520843506
    6. '"' → logprob: -6.988656520843506
    7. ' their' → logprob: -7.113656520843506
    8. 'their' → logprob: -7.113656520843506
    9. ' ' → logprob: -7.488656520843506
    10. 'len' → logprob: -8.113656997680664

Token 122: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0123437643051147
    2. '   ' → logprob: -1.3873437643051147
    3. '<|end|>' → logprob: -1.5123437643051147
    4. 'for' → logprob: -2.6373438835144043
    5. 'edges' → logprob: -3.1373438835144043
    6. '<|end|>' → logprob: -3.7623438835144043
    7. ' edges' → logprob: -4.762343883514404
    8. '
' → logprob: -5.137343883514404
    9. ':' → logprob: -6.262343883514404
    10. '```' → logprob: -6.262343883514404

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8219718933105469
    2. 'edges' → logprob: -0.8219718933105469
    3. ' for' → logprob: -2.821971893310547
    4. 'for' → logprob: -3.071971893310547
    5. ' edges' → logprob: -4.571971893310547
    6. '<|end|>' → logprob: -7.446971893310547
    7. '    
' → logprob: -7.571971893310547
    8. '
' → logprob: -7.571971893310547
    9. '```' → logprob: -7.571971893310547
    10. 'edge' → logprob: -7.571971893310547

Token 124: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.06008819118142128
    2. 'for' → logprob: -3.8100881576538086
    3. ' edges' → logprob: -4.060088157653809
    4. 'graph' → logprob: -5.060088157653809
    5. '   ' → logprob: -5.435088157653809
    6. ' for' → logprob: -5.685088157653809
    7. 'result' → logprob: -7.185088157653809
    8. 'adj' → logprob: -7.185088157653809
    9. 'moves' → logprob: -7.435088157653809
    10. 'edge' → logprob: -7.810088157653809

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023276694118976593
    2. '=' → logprob: -3.7732768058776855
    3. '_' → logprob: -11.398276329040527
    4. ')' → logprob: -11.898276329040527
    5. '=[]' → logprob: -13.023276329040527
    6. ',' → logprob: -13.398276329040527
    7. '.' → logprob: -13.523276329040527
    8. ':' → logprob: -13.648276329040527
    9. 's' → logprob: -13.648276329040527
    10. '[' → logprob: -13.648276329040527

Token 126: ' {}
' (ID: 11421)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06696377694606781
    2. ' []' → logprob: -2.8169636726379395
    3. 'set' → logprob: -5.6919636726379395
    4. '{}' → logprob: -6.8169636726379395
    5. '[' → logprob: -8.566964149475098
    6. ' set' → logprob: -8.941964149475098
    7. '[]
' → logprob: -9.316964149475098
    8. '[]}' → logprob: -10.441964149475098
    9. '{' → logprob: -11.066964149475098
    10. ' {}' → logprob: -11.566964149475098

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009755735285580158
    2. ' for' → logprob: -5.259755611419678
    3. 'for' → logprob: -5.509755611419678
    4. '<|end|>' → logprob: -8.009756088256836
    5. '    
' → logprob: -10.134756088256836
    6. 'edges' → logprob: -11.009756088256836
    7. '       ' → logprob: -11.634756088256836
    8. '
' → logprob: -11.634756088256836
    9. '<|end|>' → logprob: -12.134756088256836
    10. 'tokens' → logprob: -12.259756088256836

Token 128: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04851945489645004
    2. '   ' → logprob: -4.048519611358643
    3. 'current' → logprob: -4.423519611358643
    4. ' for' → logprob: -5.298519611358643
    5. 'u' → logprob: -5.423519611358643
    6. 'prev' → logprob: -6.673519611358643
    7. 'last' → logprob: -6.673519611358643
    8. 'j' → logprob: -6.923519611358643
    9. 'from' → logprob: -7.548519611358643
    10. 'moves' → logprob: -7.548519611358643

Token 129: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18159779906272888
    2. ' for' → logprob: -1.8065978288650513
    3. 'i' → logprob: -7.181597709655762
    4. ' i' → logprob: -8.431597709655762
    5. 'prev' → logprob: -8.431597709655762
    6. 'edges' → logprob: -9.181597709655762
    7. '   ' → logprob: -9.306597709655762
    8. 'from' → logprob: -9.556597709655762
    9. 'graph' → logprob: -10.056597709655762
    10. '#' → logprob: -10.306597709655762

Token 130: ' will' (ID: 738)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2787668704986572
    2. '=' → logprob: -1.6537668704986572
    3. '.setdefault' → logprob: -3.2787668704986572
    4. '[' → logprob: -5.153766632080078
    5. 'from' → logprob: -6.278766632080078
    6. '[s' → logprob: -6.903766632080078
    7. '<|end|>' → logprob: -7.403766632080078
    8. 'def' → logprob: -7.528766632080078
    9. 'for' → logprob: -7.528766632080078
    10. ' ' → logprob: -8.028766632080078

Token 131: ' store' (ID: 4897)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5307230949401855
    2. 'be' → logprob: -0.9057230949401855
    3. '<|end|>' → logprob: -6.0307230949401855
    4. 'store' → logprob: -6.9057230949401855
    5. 'continue' → logprob: -6.9057230949401855
    6. 'default' → logprob: -7.5307230949401855
    7. ' ' → logprob: -7.7807230949401855
    8. ' defaultdict' → logprob: -8.030723571777344
    9. ' continue' → logprob: -8.280723571777344
    10. ' store' → logprob: -8.280723571777344

Token 132: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.641068458557129
    2. ' adjacency' → logprob: -2.016068458557129
    3. 'the' → logprob: -2.391068458557129
    4. ' the' → logprob: -2.391068458557129
    5. ' nodes' → logprob: -2.516068458557129
    6. 'from' → logprob: -3.016068458557129
    7. 'nodes' → logprob: -3.141068458557129
    8. 'a' → logprob: -3.516068458557129
    9. 'connections' → logprob: -3.766068458557129
    10. 'pairs' → logprob: -3.766068458557129

Token 133: ':' (ID: 25)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.31090623140335083
    2. ' lists' → logprob: -1.935906171798706
    3. '_lists' → logprob: -3.060906171798706
    4. 'lists' → logprob: -3.560906171798706
    5. 'list' → logprob: -3.685906171798706
    6. '<|end|>' → logprob: -4.810906410217285
    7. ' =' → logprob: -5.185906410217285
    8. '=' → logprob: -5.810906410217285
    9. '_' → logprob: -6.685906410217285
    10. ' list' → logprob: -6.685906410217285

Token 134: ' car' (ID: 1669)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -1.597240924835205
    2. ' {' → logprob: -1.847240924835205
    3. ' for' → logprob: -2.097240924835205
    4. '{}' → logprob: -2.097240924835205
    5. ' defaultdict' → logprob: -2.097240924835205
    6. 'for' → logprob: -2.472240924835205
    7. ' parts' → logprob: -2.847240924835205
    8. 'from' → logprob: -3.097240924835205
    9. ' edges' → logprob: -3.847240924835205
    10. 'default' → logprob: -4.347240924835205

Token 135: ' ->' (ID: 2747)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45596379041671753
    2. ' =' → logprob: -1.0809638500213623
    3. '1' → logprob: -4.455963611602783
    4. '=' → logprob: -5.830963611602783
    5. '_' → logprob: -5.955963611602783
    6. '_from' → logprob: -6.205963611602783
    7. '_id' → logprob: -6.705963611602783
    8. ':' → logprob: -7.080963611602783
    9. '_list' → logprob: -7.330963611602783
    10. ',' → logprob: -7.455963611602783

Token 136: ' (' (ID: 350)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7402148842811584
    2. 'list' → logprob: -1.4902148246765137
    3. '[' → logprob: -2.4902148246765137
    4. '{' → logprob: -2.9902148246765137
    5. '[next' → logprob: -3.2402148246765137
    6. 'next' → logprob: -3.3652148246765137
    7. 'car' → logprob: -3.7402148246765137
    8. ' set' → logprob: -3.9902148246765137
    9. ' list' → logprob: -4.365214824676514
    10. 'destination' → logprob: -5.115214824676514

Token 137: 'front' (ID: 10313)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.403720736503601
    2. 'car' → logprob: -1.778720736503601
    3. 'set' → logprob: -2.0287208557128906
    4. '{' → logprob: -2.7787208557128906
    5. 'left' → logprob: -2.7787208557128906
    6. 'destination' → logprob: -3.2787208557128906
    7. 'direction' → logprob: -3.4037208557128906
    8. '[' → logprob: -3.7787208557128906
    9. 'neighbor' → logprob: -3.7787208557128906
    10. 'front' → logprob: -4.028720855712891

Token 138: '_car' (ID: 62991)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01490298006683588
    2. '_car' → logprob: -4.5149030685424805
    3. 'car' → logprob: -6.1399030685424805
    4. ' ,' → logprob: -6.8899030685424805
    5. ')' → logprob: -9.01490306854248
    6. ' car' → logprob: -9.13990306854248
    7. '_neighbor' → logprob: -9.38990306854248
    8. '_edge' → logprob: -9.63990306854248
    9. '_,' → logprob: -10.51490306854248
    10. 's' → logprob: -10.76490306854248

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022154422476887703
    2. ')' → logprob: -6.502215385437012
    3. ' ,' → logprob: -7.877215385437012
    4. 's' → logprob: -9.002215385437012
    5. 'set' → logprob: -10.252215385437012
    6. ',)' → logprob: -10.377215385437012
    7. '),' → logprob: -11.252215385437012
    8. '<|end|>' → logprob: -11.252215385437012
    9. ',set' → logprob: -11.377215385437012
    10. '   ' → logprob: -11.502215385437012

Token 140: ' back' (ID: 1602)
  Prédit: 'rear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rear' → logprob: -0.5474823713302612
    2. 'back' → logprob: -0.9224823713302612
    3. ' rear' → logprob: -4.422482490539551
    4. ' back' → logprob: -4.547482490539551
    5. ')' → logprob: -7.922482490539551
    6. 'tail' → logprob: -8.04748249053955
    7. 'behind' → logprob: -8.29748249053955
    8. 'None' → logprob: -8.92248249053955
    9. 'front' → logprob: -9.67248249053955
    10. 're' → logprob: -9.79748249053955

Token 141: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.047990117222070694
    2. ')' → logprob: -3.172990083694458
    3. ')_' → logprob: -6.047990322113037
    4. 'car' → logprob: -6.172990322113037
    5. '_c' → logprob: -8.297989845275879
    6. '_)' → logprob: -8.922989845275879
    7. '_' → logprob: -10.297989845275879
    8. ',' → logprob: -10.797989845275879
    9. '),' → logprob: -10.922989845275879
    10. 'Car' → logprob: -11.422989845275879

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.954393079970032e-05
    2. ')
' → logprob: -10.750049591064453
    3. ' )' → logprob: -11.250049591064453
    4. ',' → logprob: -12.500049591064453
    5. ')

' → logprob: -12.500049591064453
    6. '   ' → logprob: -13.000049591064453
    7. '}' → logprob: -13.375049591064453
    8. ')}' → logprob: -14.000049591064453
    9. '),' → logprob: -14.375049591064453
    10. '})' → logprob: -15.000049591064453

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16059920191764832
    2. '
' → logprob: -2.2855992317199707
    3. '    
' → logprob: -3.5355992317199707
    4. '<|end|>' → logprob: -4.285599231719971
    5. '\n' → logprob: -6.660599231719971
    6. '  
' → logprob: -6.785599231719971
    7. ' 
' → logprob: -8.660598754882812
    8. '<|end|>' → logprob: -8.785598754882812
    9. '   
' → logprob: -9.160598754882812
    10. '       ' → logprob: -9.410598754882812

Token 144: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3897542357444763
    2. 'for' → logprob: -1.764754295349121
    3. '   ' → logprob: -3.139754295349121
    4. ' for' → logprob: -3.139754295349121
    5. '    
' → logprob: -3.889754295349121
    6. ' 
' → logprob: -4.139754295349121
    7. '<|end|>' → logprob: -4.139754295349121
    8. '  
' → logprob: -5.389754295349121
    9. 'n' → logprob: -6.014754295349121
    10. '\n' → logprob: -6.264754295349121

Token 145: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.032349757850170135
    2. ' for' → logprob: -3.5323498249053955
    3. 'car' → logprob: -6.782349586486816
    4. 'front' → logprob: -7.657349586486816
    5. '   ' → logprob: -7.907349586486816
    6. 'edges' → logprob: -8.532349586486816
    7. 'i' → logprob: -9.532349586486816
    8. 'cars' → logprob: -10.032349586486816
    9. 'prev' → logprob: -10.157349586486816
    10. ' car' → logprob: -10.407349586486816

Token 146: ' here' (ID: 2105)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3861714601516724
    2. 'for' → logprob: -1.7611714601516724
    3. ' we' → logprob: -2.011171340942383
    4. ' the' → logprob: -2.136171340942383
    5. ' only' → logprob: -2.636171340942383
    6. ' in' → logprob: -3.386171340942383
    7. 'we' → logprob: -3.511171340942383
    8. 'the' → logprob: -4.011171340942383
    9. ' you' → logprob: -4.261171340942383
    10. ' let's' → logprob: -4.386171340942383

Token 147: ' we' (ID: 581)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0510153770446777
    2. 'we' → logprob: -1.0510153770446777
    3. ' we' → logprob: -1.5510153770446777
    4. ''s' → logprob: -3.8010153770446777
    5. 's' → logprob: -4.801015377044678
    6. ' the' → logprob: -4.926015377044678
    7. ' is' → logprob: -4.926015377044678
    8. 'the' → logprob: -5.051015377044678
    9. 'for' → logprob: -5.926015377044678
    10. ' for' → logprob: -6.176015377044678

Token 148: ' store' (ID: 4897)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.7649801969528198
    2. ''ll' → logprob: -1.3899801969528198
    3. ' can' → logprob: -3.0149803161621094
    4. ' only' → logprob: -3.2649803161621094
    5. ' are' → logprob: -3.3899803161621094
    6. ' will' → logprob: -3.5149803161621094
    7. ''re' → logprob: -3.5149803161621094
    8. 'need' → logprob: -3.5149803161621094
    9. ' don't' → logprob: -4.514980316162109
    10. ' want' → logprob: -4.639980316162109

Token 149: ' neighbors' (ID: 31655)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.7021440863609314
    2. ' edges' → logprob: -2.202144145965576
    3. 'as' → logprob: -2.452144145965576
    4. 'edges' → logprob: -2.827144145965576
    5. 'car' → logprob: -3.077144145965576
    6. 'adj' → logprob: -3.202144145965576
    7. ' two' → logprob: -3.952144145965576
    8. 'both' → logprob: -4.327144145965576
    9. ' adjacency' → logprob: -4.327144145965576
    10. 'for' → logprob: -4.452144145965576

Token 150: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' for' (ID: 395)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.7162827849388123
    2. '[]' → logprob: -1.591282844543457
    3. '{' → logprob: -2.091282844543457
    4. ' edges' → logprob: -2.716282844543457
    5. 'edges' → logprob: -3.091282844543457
    6. ' {' → logprob: -4.216282844543457
    7. ' []' → logprob: -4.466282844543457
    8. ' {}' → logprob: -4.466282844543457
    9. '[' → logprob: -4.966282844543457
    10. ' parts' → logprob: -5.341282844543457

Token 152: ' each' (ID: 2454)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4421360194683075
    2. ' car' → logprob: -1.1921360492706299
    3. 'each' → logprob: -3.69213604927063
    4. ' each' → logprob: -4.192135810852051
    5. ' key' → logprob: -5.567135810852051
    6. 'key' → logprob: -6.067135810852051
    7. 'c' → logprob: -6.317135810852051
    8. 'k' → logprob: -7.067135810852051
    9. ' edges' → logprob: -7.567135810852051
    10. ' k' → logprob: -7.817135810852051

Token 153: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.22573018074035645
    2. ' car' → logprob: -1.7257301807403564
    3. 'parts' → logprob: -4.725729942321777
    4. ' parts' → logprob: -4.975729942321777
    5. 'part' → logprob: -6.600729942321777
    6. ' node' → logprob: -6.725729942321777
    7. 'token' → logprob: -6.975729942321777
    8. 'node' → logprob: -6.975729942321777
    9. ' part' → logprob: -7.100729942321777
    10. ' key' → logprob: -7.225729942321777

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2193252593278885
    2. ':' → logprob: -2.969325304031372
    3. ' edges' → logprob: -3.344325304031372
    4. 'edges' → logprob: -3.469325304031372
    5. ' =' → logprob: -3.844325304031372
    6. ' in' → logprob: -4.094325065612793
    7. '=' → logprob: -5.094325065612793
    8. '[]' → logprob: -5.469325065612793
    9. '_edges' → logprob: -5.469325065612793
    10. ' ,' → logprob: -5.719325065612793

Token 155: ' set' (ID: 920)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.008583664894104
    2. '[' → logprob: -1.633583664894104
    3. 'edges' → logprob: -2.1335835456848145
    4. 'if' → logprob: -3.0085835456848145
    5. ' if' → logprob: -3.0085835456848145
    6. '[]' → logprob: -3.3835835456848145
    7. 'front' → logprob: -3.6335835456848145
    8. ' [' → logprob: -3.8835835456848145
    9. ' set' → logprob: -4.0085835456848145
    10. ' front' → logprob: -4.0085835456848145

Token 156: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012014202075079083
    2. '<|end|>' → logprob: -8.126201629638672
    3. ' edges' → logprob: -8.376201629638672
    4. ' of' → logprob: -8.751201629638672
    5. '(edges' → logprob: -8.876201629638672
    6. 'edges' → logprob: -9.126201629638672
    7. '()
' → logprob: -10.376201629638672
    8. 'neighbors' → logprob: -10.501201629638672
    9. '<|end|>' → logprob: -10.751201629638672
    10. '(),' → logprob: -10.876201629638672

Token 157: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.04597015678882599
    2. 'adj' → logprob: -4.0459699630737305
    3. 'connected' → logprob: -4.5459699630737305
    4. ' neighbors' → logprob: -4.7959699630737305
    5. 'neighbor' → logprob: -6.0459699630737305
    6. 'edges' → logprob: -6.5459699630737305
    7. 'connections' → logprob: -6.9209699630737305
    8. 'its' → logprob: -7.4209699630737305
    9. ' connected' → logprob: -7.4209699630737305
    10. 'parts' → logprob: -7.5459699630737305

Token 158: ' based' (ID: 4122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46177348494529724
    2. '<|end|>' → logprob: -1.4617735147476196
    3. ' =' → logprob: -3.08677339553833
    4. '
' → logprob: -3.21177339553833
    5. '.setdefault' → logprob: -4.21177339553833
    6. '<|end|>' → logprob: -4.33677339553833
    7. '=' → logprob: -5.08677339553833
    8. '    
' → logprob: -5.46177339553833
    9. ',' → logprob: -6.08677339553833
    10. ' ' → logprob: -6.08677339553833

Token 159: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.2766030430793762
    2. '_' → logprob: -3.0266029834747314
    3. ' on' → logprob: -3.1516029834747314
    4. '_edges' → logprob: -3.5266029834747314
    5. '<|end|>' → logprob: -3.5266029834747314
    6. ')' → logprob: -4.0266032218933105
    7. '.setdefault' → logprob: -4.2766032218933105
    8. 's' → logprob: -4.4016032218933105
    9. ']' → logprob: -4.6516032218933105
    10. '.append' → logprob: -4.6516032218933105

Token 160: ' moves' (ID: 19523)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.9697868824005127
    2. ' the' → logprob: -1.8447868824005127
    3. 'the' → logprob: -2.2197868824005127
    4. 'direction' → logprob: -2.3447868824005127
    5. ' parts' → logprob: -2.5947868824005127
    6. ' direction' → logprob: -2.5947868824005127
    7. 'edges' → logprob: -3.5947868824005127
    8. ' edges' → logprob: -3.7197868824005127
    9. 'moves' → logprob: -4.469786643981934
    10. ' moves' → logprob: -4.969786643981934

Token 161: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12789835035800934
    2. '<|end|>' → logprob: -2.5028984546661377
    3. '
' → logprob: -4.127898216247559
    4. ' for' → logprob: -4.877898216247559
    5. '<|end|>' → logprob: -5.127898216247559
    6. 'for' → logprob: -5.752898216247559
    7. '    
' → logprob: -5.752898216247559
    8. ',' → logprob: -7.627898216247559
    9. ' ' → logprob: -8.127898216247559
    10. '  
' → logprob: -8.252898216247559

Token 162: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.420999139547348
    2. '   ' → logprob: -1.1709991693496704
    3. ' for' → logprob: -3.670999050140381
    4. '<|end|>' → logprob: -5.295999050140381
    5. 'from' → logprob: -7.045999050140381
    6. '    
' → logprob: -7.920999050140381
    7. 'continue' → logprob: -8.045999526977539
    8. 'car' → logprob: -8.420999526977539
    9. '<|end|>' → logprob: -8.920999526977539
    10. '  ' → logprob: -8.920999526977539

Token 163: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012111874530091882
    2. '   ' → logprob: -7.376211166381836
    3. ' for' → logprob: -7.626211166381836
    4. 'car' → logprob: -10.376211166381836
    5. '    
' → logprob: -10.626211166381836
    6. 'from' → logprob: -11.126211166381836
    7. ' ' → logprob: -12.876211166381836
    8. '
' → logprob: -12.876211166381836
    9. 'i' → logprob: -13.001211166381836
    10. ' 
' → logprob: -13.126211166381836

Token 164: ' From' (ID: 7217)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16414974629878998
    2. '#' → logprob: -3.664149761199951
    3. 'car' → logprob: -3.789149761199951
    4. 'prev' → logprob: -4.164149761199951
    5. 'front' → logprob: -4.289149761199951
    6. 'from' → logprob: -4.539149761199951
    7. ' for' → logprob: -4.664149761199951
    8. 'visited' → logprob: -4.789149761199951
    9. 'graph' → logprob: -5.164149761199951
    10. 'neighbors' → logprob: -5.164149761199951

Token 165: ' the' (ID: 290)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.6125116944313049
    2. ' parts' → logprob: -1.8625116348266602
    3. '0' → logprob: -2.23751163482666
    4. 'range' → logprob: -2.48751163482666
    5. 'for' → logprob: -3.48751163482666
    6. 'i' → logprob: -3.73751163482666
    7. ' range' → logprob: -4.23751163482666
    8. ' i' → logprob: -4.73751163482666
    9. ' for' → logprob: -5.11251163482666
    10. ' ' → logprob: -5.23751163482666

Token 166: ' moves' (ID: 19523)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.05977148190140724
    2. 'for' → logprob: -3.3097715377807617
    3. ' parts' → logprob: -4.309771537780762
    4. 'len' → logprob: -6.684771537780762
    5. ' for' → logprob: -7.059771537780762
    6. 'range' → logprob: -7.184771537780762
    7. '"' → logprob: -7.434771537780762
    8. '   ' → logprob: -7.559771537780762
    9. 'previous' → logprob: -7.559771537780762
    10. 'i' → logprob: -7.684771537780762

Token 167: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4957582354545593
    2. ' for' → logprob: -1.245758295059204
    3. 'for' → logprob: -2.370758295059204
    4. ',' → logprob: -5.245758056640625
    5. '<|end|>' → logprob: -6.120758056640625
    6. ':' → logprob: -6.995758056640625
    7. '    ' → logprob: -8.370758056640625
    8. '<|end|>' → logprob: -8.620758056640625
    9. '  ' → logprob: -8.870758056640625
    10. 'edges' → logprob: -9.370758056640625

Token 168: ' build' (ID: 3024)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0509832538664341
    2. ' for' → logprob: -3.175983190536499
    3. 'edges' → logprob: -6.300983428955078
    4. '   ' → logprob: -6.925983428955078
    5. '<|end|>' → logprob: -6.925983428955078
    6. '#' → logprob: -7.300983428955078
    7. 'neighbors' → logprob: -7.425983428955078
    8. '...' → logprob: -7.675983428955078
    9. 'car' → logprob: -7.675983428955078
    10. 'prev' → logprob: -8.550983428955078

Token 169: ' adjacency' (ID: 177015)
  Prédit: ' adjacency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.8600946068763733
    2. ' a' → logprob: -1.4850945472717285
    3. 'adj' → logprob: -2.6100945472717285
    4. 'a' → logprob: -2.6100945472717285
    5. ' for' → logprob: -2.9850945472717285
    6. 'for' → logprob: -3.1100945472717285
    7. ' an' → logprob: -3.4850945472717285
    8. ' edges' → logprob: -4.2350945472717285
    9. 'neighbors' → logprob: -4.3600945472717285
    10. ' neighbors' → logprob: -4.4850945472717285

Token 170: ' list' (ID: 1562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.424783319234848
    2. 'for' → logprob: -1.5497833490371704
    3. ' for' → logprob: -2.049783229827881
    4. '    
' → logprob: -6.424783229827881
    5. '<|end|>' → logprob: -6.424783229827881
    6. 'edges' → logprob: -7.049783229827881
    7. 'graph' → logprob: -8.299783706665039
    8. ' edges' → logprob: -8.674783706665039
    9. '
' → logprob: -9.174783706665039
    10. '<|end|>' → logprob: -9.799783706665039

Token 171: ' und' (ID: 844)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10239569842815399
    2. 'for' → logprob: -2.97739577293396
    3. ' for' → logprob: -3.47739577293396
    4. '    
' → logprob: -4.602395534515381
    5. '
' → logprob: -5.352395534515381
    6. 'edges' → logprob: -7.977395534515381
    7. '<|end|>' → logprob: -8.602396011352539
    8. '	for' → logprob: -9.977396011352539
    9. '    ' → logprob: -10.227396011352539
    10. ' edges' → logprob: -10.602396011352539

Token 172: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.002319987630471587
    2. 'er' → logprob: -6.127319812774658
    3. 'efined' → logprob: -9.752320289611816
    4. '   ' → logprob: -10.752320289611816
    5. 'ir' → logprob: -11.627320289611816
    6. 'irectional' → logprob: -11.752320289611816
    7. 'ers' → logprob: -12.127320289611816
    8. '```' → logprob: -12.252320289611816
    9. 'es' → logprob: -12.502320289611816
    10. 'ere' → logprob: -12.627320289611816

Token 173: ' graph' (ID: 7465)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6997777223587036
    2. ' for' → logprob: -0.9497777223587036
    3. '   ' → logprob: -2.574777603149414
    4. '<|end|>' → logprob: -4.074777603149414
    5. 'edges' → logprob: -4.449777603149414
    6. '<|end|>' → logprob: -5.449777603149414
    7. ' edges' → logprob: -5.824777603149414
    8. '    
' → logprob: -6.699777603149414
    9. '
' → logprob: -7.074777603149414
    10. ' ' → logprob: -7.449777603149414

Token 174: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05113765224814415
    2. 'for' → logprob: -3.926137685775757
    3. '
' → logprob: -4.551137447357178
    4. '    
' → logprob: -4.676137447357178
    5. ' for' → logprob: -4.926137447357178
    6. '<|end|>' → logprob: -6.426137447357178
    7. 'edges' → logprob: -7.051137447357178
    8. ' edges' → logprob: -9.301137924194336
    9. '<|end|>' → logprob: -9.301137924194336
    10. '    ' → logprob: -9.426137924194336

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009180297143757343
    2. '<|end|>' → logprob: -4.884180068969727
    3. '    
' → logprob: -7.259180068969727
    4. ' for' → logprob: -8.134180068969727
    5. 'for' → logprob: -8.384180068969727
    6. '<|end|>' → logprob: -9.134180068969727
    7. '    ' → logprob: -9.509180068969727
    8. '
' → logprob: -9.634180068969727
    9. '       ' → logprob: -10.884180068969727
    10. '  ' → logprob: -11.134180068969727

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.045065585523843765
    2. '   ' → logprob: -3.1700656414031982
    3. ' for' → logprob: -7.170065402984619
    4. 'graph' → logprob: -7.920065402984619
    5. '    
' → logprob: -8.545065879821777
    6. 'from' → logprob: -8.545065879821777
    7. 'adj' → logprob: -8.670065879821777
    8. 'edges' → logprob: -8.795065879821777
    9. 'neighbors' → logprob: -8.920065879821777
    10. 'car' → logprob: -10.545065879821777

Token 177: ' i' (ID: 575)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.4409261643886566
    2. 'j' → logprob: -2.1909260749816895
    3. 'idx' → logprob: -2.1909260749816895
    4. ' j' → logprob: -2.1909260749816895
    5. 'i' → logprob: -5.0659260749816895
    6. ' move' → logprob: -5.9409260749816895
    7. ' i' → logprob: -5.9409260749816895
    8. 'index' → logprob: -6.1909260749816895
    9. ' part' → logprob: -6.3159260749816895
    10. 'move' → logprob: -6.4409260749816895

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03010404296219349
    2. 'in' → logprob: -3.530104160308838
    3. ' ' → logprob: -8.15510368347168
    4. ',' → logprob: -10.40510368347168
    5. 'range' → logprob: -10.90510368347168
    6. ' range' → logprob: -11.53010368347168
    7. '  ' → logprob: -13.28010368347168
    8. '   ' → logprob: -13.90510368347168
    9. 'n' → logprob: -14.03010368347168
    10. ')' → logprob: -14.28010368347168

Token 179: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006721876095980406
    2. ' range' → logprob: -5.0067219734191895
    3. ' ' → logprob: -13.006721496582031
    4. '   ' → logprob: -13.381721496582031
    5. 'parts' → logprob: -13.506721496582031
    6. '  ' → logprob: -14.256721496582031
    7. '	range' → logprob: -15.756721496582031
    8. '(range' → logprob: -16.00672149658203
    9. 'rang' → logprob: -16.50672149658203
    10. 'r' → logprob: -16.63172149658203

Token 180: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.6478575468063354
    2. 'len' → logprob: -0.8978575468063354
    3. '1' → logprob: -3.647857666015625
    4. ' len' → logprob: -3.647857666015625
    5. '(' → logprob: -4.147857666015625
    6. ' ' → logprob: -6.647857666015625
    7. '0' → logprob: -9.522857666015625
    8. '2' → logprob: -9.772857666015625
    9. '   ' → logprob: -10.272857666015625
    10. '	len' → logprob: -11.272857666015625

Token 181: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.007275549229234457
    2. '1' → logprob: -5.132275581359863
    3. ' len' → logprob: -6.632275581359863
    4. ' ' → logprob: -11.132275581359863
    5. '(len' → logprob: -11.632275581359863
    6. '   ' → logprob: -12.632275581359863
    7. '0' → logprob: -13.757275581359863
    8. '  ' → logprob: -14.757275581359863
    9. '	len' → logprob: -15.007275581359863
    10. '2' → logprob: -15.757275581359863

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21181119978427887
    2. 'len' → logprob: -2.5868113040924072
    3. ',len' → logprob: -2.7118113040924072
    4. ' len' → logprob: -3.8368113040924072
    5. '(len' → logprob: -4.586811065673828
    6. ' ,' → logprob: -4.836811065673828
    7. '-' → logprob: -6.086811065673828
    8. 'n' → logprob: -6.461811065673828
    9. ' -' → logprob: -6.461811065673828
    10. ' n' → logprob: -6.586811065673828

Token 183: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005547016044147313
    2. ' len' → logprob: -7.50055456161499
    3. '   ' → logprob: -13.875555038452148
    4. ' ' → logprob: -14.375555038452148
    5. '(len' → logprob: -15.375555038452148
    6. '  ' → logprob: -16.75055503845215
    7. '	len' → logprob: -18.00055503845215
    8. '    ' → logprob: -19.25055503845215
    9. '       ' → logprob: -19.37555503845215
    10. '[len' → logprob: -20.00055503845215

Token 184: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -1.1472419600977446e-06
    2. 'parts' → logprob: -14.000000953674316
    3. '(' → logprob: -16.750001907348633
    4. ' parts' → logprob: -17.375001907348633
    5. '(edges' → logprob: -17.375001907348633
    6. '(s' → logprob: -17.625001907348633
    7. '(part' → logprob: -17.875001907348633
    8. '(points' → logprob: -18.000001907348633
    9. ')' → logprob: -18.250001907348633
    10. '(par' → logprob: -19.625001907348633

Token 185: ')-' (ID: 14080)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6610942482948303
    2. '-' → logprob: -0.7860942482948303
    3. ')' → logprob: -3.6610941886901855
    4. ' )' → logprob: -6.7860941886901855
    5. '):' → logprob: -7.5360941886901855
    6. ' ' → logprob: -8.411094665527344
    7. ',' → logprob: -8.786094665527344
    8. ')-' → logprob: -9.411094665527344
    9. '):
' → logprob: -9.786094665527344
    10. ' ):' → logprob: -10.036094665527344

Token 186: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.727905979962088e-05
    2. '2' → logprob: -10.00004768371582
    3. ' ' → logprob: -13.25004768371582
    4. '   ' → logprob: -18.00004768371582
    5. '3' → logprob: -19.00004768371582
    6. '１' → logprob: -19.25004768371582
    7. '  ' → logprob: -19.37504768371582
    8. '0' → logprob: -20.93754768371582
    9. '```' → logprob: -20.93754768371582
    10. ')' → logprob: -21.06254768371582

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035097955260425806
    2. '):' → logprob: -5.878509998321533
    3. ' ,' → logprob: -7.628509998321533
    4. '):
' → logprob: -8.753509521484375
    5. ')' → logprob: -10.253509521484375
    6. '3' → logprob: -12.253509521484375
    7. '   ' → logprob: -12.503509521484375
    8. '1' → logprob: -12.503509521484375
    9. '2' → logprob: -13.003509521484375
    10. ':' → logprob: -13.253509521484375

Token 188: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21073316037654877
    2. '1' → logprob: -2.21073317527771
    3. ' ' → logprob: -2.58573317527771
    4. '3' → logprob: -5.335732936859131
    5. ')' → logprob: -8.460733413696289
    6. '4' → logprob: -12.335733413696289
    7. '   ' → logprob: -12.335733413696289
    8. ' )' → logprob: -12.773233413696289
    9. '  ' → logprob: -12.898233413696289
    10. '```' → logprob: -13.210733413696289

Token 189: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02574104629456997
    2. '1' → logprob: -3.9007411003112793
    3. '3' → logprob: -5.900741100311279
    4. ' ' → logprob: -6.025741100311279
    5. ')' → logprob: -11.025740623474121
    6. '4' → logprob: -11.900740623474121
    7. '   ' → logprob: -12.650740623474121
    8. '  ' → logprob: -13.838240623474121
    9. '```' → logprob: -14.025740623474121
    10. ' )' → logprob: -14.463240623474121

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2510501742362976
    2. '):
' → logprob: -1.8760502338409424
    3. ',' → logprob: -2.8760502338409424
    4. ' ):' → logprob: -5.126049995422363
    5. ')' → logprob: -5.626049995422363
    6. ' ):
' → logprob: -6.876049995422363
    7. ':' → logprob: -7.251049995422363
    8. ' ,' → logprob: -7.251049995422363
    9. '):
' → logprob: -9.126049995422363
    10. '+' → logprob: -9.251049995422363

Token 191: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015811458230018616
    2. '       ' → logprob: -4.265811443328857
    3. ' if' → logprob: -7.140811443328857
    4. 'if' → logprob: -8.265811920166016
    5. ',' → logprob: -8.515811920166016
    6. ':' → logprob: -9.390811920166016
    7. ')' → logprob: -9.640811920166016
    8. '<|end|>' → logprob: -9.890811920166016
    9. '    ' → logprob: -10.890811920166016
    10. 's' → logprob: -10.953311920166016

Token 192: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' (adapté à ' car') → logprob: -0.6326127648353577
    2. '   ' → logprob: -1.882612705230713
    3. 'u' → logprob: -2.757612705230713
    4. '       ' → logprob: -3.007612705230713
    5. 'a' → logprob: -3.132612705230713
    6. 'front' → logprob: -3.132612705230713
    7. 'if' → logprob: -3.757612705230713
    8. ' u' → logprob: -3.882612705230713
    9. ' car' → logprob: -3.882612705230713
    10. 'from' → logprob: -4.257612705230713

Token 193: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42916953563690186
    2. '=' → logprob: -1.0541695356369019
    3. ',' → logprob: -8.179169654846191
    4. '1' → logprob: -9.804169654846191
    5. '_' → logprob: -10.179169654846191
    6. 's' → logprob: -10.304169654846191
    7. ')' → logprob: -11.304169654846191
    8. ']' → logprob: -11.429169654846191
    9. 'a' → logprob: -11.554169654846191
    10. '_front' → logprob: -12.304169654846191

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871955871582031
    2. '=' → logprob: -1.1371955871582031
    3. ',' → logprob: -8.137195587158203
    4. '   ' → logprob: -11.762195587158203
    5. ' ' → logprob: -12.137195587158203
    6. ')' → logprob: -12.512195587158203
    7. ']' → logprob: -12.887195587158203
    8. 'parts' → logprob: -13.262195587158203
    9. ' =
' → logprob: -13.387195587158203
    10. '[' → logprob: -13.637195587158203

Token 195: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.029788445681333542
    2. ' parts' → logprob: -3.5297884941101074
    3. '(parts' → logprob: -10.77978801727295
    4. '   ' → logprob: -11.90478801727295
    5. ' ' → logprob: -12.15478801727295
    6. 's' → logprob: -13.40478801727295
    7. '.parts' → logprob: -14.52978801727295
    8. '[' → logprob: -14.77978801727295
    9. '  ' → logprob: -14.90478801727295
    10. ')' → logprob: -15.27978801727295

Token 196: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020473242329899222
    2. '[' → logprob: -8.500205039978027
    3. ' [' → logprob: -15.000205039978027
    4. 'i' → logprob: -15.375205039978027
    5. '   ' → logprob: -15.625205039978027
    6. '```' → logprob: -16.50020408630371
    7. '
' → logprob: -17.00020408630371
    8. '	' → logprob: -17.00020408630371
    9. '[-' → logprob: -17.37520408630371
    10. '[
' → logprob: -17.37520408630371

Token 197: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.28602293133735657
    2. ']' → logprob: -1.5360229015350342
    3. '+' → logprob: -3.411022901535034
    4. ']
' → logprob: -8.036023139953613
    5. ']

' → logprob: -10.411023139953613
    6. ' ]
' → logprob: -10.536023139953613
    7. '[' → logprob: -10.786023139953613
    8. '][' → logprob: -10.911023139953613
    9. '+
' → logprob: -11.036023139953613
    10. ' ]' → logprob: -11.286023139953613

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22124673426151276
    2. 'edge' → logprob: -2.4712467193603516
    3. 'move' → logprob: -2.8462467193603516
    4. 'next' → logprob: -4.221246719360352
    5. '   ' → logprob: -4.721246719360352
    6. 'car' → logprob: -5.471246719360352
    7. 'direction' → logprob: -5.596246719360352
    8. 'op' → logprob: -5.971246719360352
    9. 'if' → logprob: -6.096246719360352
    10. 'm' → logprob: -6.096246719360352

Token 199: ' move' (ID: 5275)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.10360140353441238
    2. ' parts' → logprob: -2.6036014556884766
    3. '       ' → logprob: -4.853601455688477
    4. 'car' → logprob: -5.353601455688477
    5. 'edges' → logprob: -5.353601455688477
    6. 'move' (adapté à ' move') → logprob: -6.353601455688477
    7. '(parts' → logprob: -6.978601455688477
    8. '           ' → logprob: -7.103601455688477
    9. 'edge' → logprob: -7.478601455688477
    10. '   ' → logprob: -7.603601455688477

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931739449501038
    2. ' =' → logprob: -0.6931739449501038
    3. 's' → logprob: -11.068174362182617
    4. ' ' → logprob: -12.318174362182617
    5. '  ' → logprob: -13.193174362182617
    6. '<|end|>' → logprob: -14.318174362182617
    7. '   ' → logprob: -14.443174362182617
    8. ',' → logprob: -14.568174362182617
    9. '<|end|>' → logprob: -14.568174362182617
    10. 'parts' → logprob: -14.568174362182617

Token 201: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.3134627342224121
    2. ' parts' → logprob: -1.313462734222412
    3. '(parts' → logprob: -8.81346321105957
    4. ' ' → logprob: -10.81346321105957
    5. '   ' → logprob: -10.93846321105957
    6. '  ' → logprob: -12.18846321105957
    7. '.parts' → logprob: -12.43846321105957
    8. '_parts' → logprob: -13.18846321105957
    9. ' partes' → logprob: -14.68846321105957
    10. '    ' → logprob: -14.93846321105957

Token 202: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -14.250000953674316
    3. '{i' → logprob: -16.25
    4. '[' → logprob: -18.0
    5. '(i' → logprob: -18.625
    6. '```' → logprob: -19.25
    7. '=i' → logprob: -21.125
    8. '+i' → logprob: -21.375
    9. '	i' → logprob: -22.25
    10. ' i' → logprob: -22.375

Token 203: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.024604277219623e-05
    2. ']' → logprob: -10.375040054321289
    3. '1' → logprob: -12.375040054321289
    4. ' +' → logprob: -12.750040054321289
    5. '[' → logprob: -14.750040054321289
    6. ']+' → logprob: -15.000040054321289
    7. '+i' → logprob: -15.000040054321289
    8. '+]' → logprob: -15.500040054321289
    9. 'i' → logprob: -15.875040054321289
    10. ':i' → logprob: -16.50004005432129

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -14.750001907348633
    4. '```' → logprob: -16.812501907348633
    5. '   ' → logprob: -16.875001907348633
    6. '۱' → logprob: -17.875001907348633
    7. '１' → logprob: -18.187501907348633
    8. '0' → logprob: -18.812501907348633
    9. '  ' → logprob: -19.125001907348633
    10. ']' → logprob: -19.312501907348633

Token 205: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.14271049201488495
    2. ']' → logprob: -2.0177104473114014
    3. ']
' → logprob: -10.89271068572998
    4. ']

' → logprob: -12.01771068572998
    5. ')
' → logprob: -12.39271068572998
    6. '']
' → logprob: -13.39271068572998
    7. ' ]
' → logprob: -13.76771068572998
    8. ')' → logprob: -14.14271068572998
    9. '']' → logprob: -14.26771068572998
    10. ' ]' → logprob: -14.64271068572998

Token 206: '       ' (ID: 309)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.08157941699028015
    2. '       ' → logprob: -2.5815794467926025
    3. ' car' → logprob: -6.581579208374023
    4. '<|end|>' → logprob: -7.831579208374023
    5. '   ' → logprob: -7.956579208374023
    6. '	car' → logprob: -8.081579208374023
    7. ')' → logprob: -9.331579208374023
    8. '(car' → logprob: -10.456579208374023
    9. ' ' → logprob: -10.706579208374023
    10. ',' → logprob: -10.706579208374023

Token 207: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' (adapté à ' car') → logprob: -0.00010080150241265073
    2. ' car' → logprob: -9.875101089477539
    3. '       ' → logprob: -10.375101089477539
    4. '   ' → logprob: -11.250101089477539
    5. '	car' → logprob: -13.000101089477539
    6. '
' → logprob: -14.250101089477539
    7. 'cars' → logprob: -14.250101089477539
    8. 'card' → logprob: -15.500101089477539
    9. '```' → logprob: -15.625101089477539
    10. '=' → logprob: -15.875101089477539

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '=' → logprob: -14.625000953674316
    3. ' =' → logprob: -15.625000953674316
    4. ' ' → logprob: -17.5
    5. '```' → logprob: -17.5
    6. '   ' → logprob: -17.875
    7. 's' → logprob: -18.125
    8. '_' → logprob: -18.375
    9. '₂' → logprob: -18.5
    10. '２' → logprob: -18.5

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759400725364685
    2. '=' → logprob: -0.8259400725364685
    3. ' ' → logprob: -14.700940132141113
    4. 'parts' → logprob: -16.450939178466797
    5. ')' → logprob: -16.700939178466797
    6. ' parts' → logprob: -16.700939178466797
    7. '   ' → logprob: -17.450939178466797
    8. ' =
' → logprob: -17.575939178466797
    9. '=
' → logprob: -17.950939178466797
    10. '(parts' → logprob: -18.200939178466797

Token 210: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.5759544372558594
    2. 'parts' → logprob: -0.8259544372558594
    3. '(parts' → logprob: -11.20095443725586
    4. '.parts' → logprob: -14.57595443725586
    5. ' ' → logprob: -15.32595443725586
    6. ' partes' → logprob: -15.95095443725586
    7. '   ' → logprob: -16.07595443725586
    8. ' ' → logprob: -16.45095443725586
    9. 'Parts' → logprob: -16.57595443725586
    10. '_parts' → logprob: -16.70095443725586

Token 211: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.875003814697266
    3. 'i' → logprob: -14.500003814697266
    4. '[
' → logprob: -14.750003814697266
    5. '(i' → logprob: -15.750003814697266
    6. '{i' → logprob: -16.125003814697266
    7. ' i' → logprob: -16.375003814697266
    8. ']' → logprob: -16.875003814697266
    9. '```' → logprob: -17.250003814697266
    10. 's' → logprob: -17.375003814697266

Token 212: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.700132997939363e-05
    2. '2' → logprob: -11.750017166137695
    3. ' +' → logprob: -11.875017166137695
    4. ']' → logprob: -14.125017166137695
    5. '+
' → logprob: -14.625017166137695
    6. ']+' → logprob: -15.125017166137695
    7. '[' → logprob: -15.375017166137695
    8. '+i' → logprob: -15.500017166137695
    9. 'i' → logprob: -16.750017166137695
    10. '   ' → logprob: -17.250017166137695

Token 213: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. '0' → logprob: -12.500006675720215
    3. ' ' → logprob: -13.125006675720215
    4. '1' → logprob: -14.375006675720215
    5. '```' → logprob: -15.375006675720215
    6. '
' → logprob: -16.00000762939453
    7. '3' → logprob: -16.68750762939453
    8. '-' → logprob: -17.25000762939453
    9. '   ' → logprob: -17.37500762939453
    10. ']' → logprob: -17.37500762939453

Token 214: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.708705484867096
    2. ']' → logprob: -0.708705484867096
    3. ')
' → logprob: -4.458705425262451
    4. ']
' → logprob: -6.208705425262451
    5. '<|end|>' → logprob: -7.458705425262451
    6. '       ' → logprob: -7.833705425262451
    7. '
' → logprob: -8.33370590209961
    8. '```' → logprob: -8.95870590209961
    9. '   ' → logprob: -9.20870590209961
    10. '])' → logprob: -9.33370590209961

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012633726000785828
    2. '   ' → logprob: -5.387633800506592
    3. ' if' → logprob: -6.012633800506592
    4. 'if' → logprob: -6.137633800506592
    5. '        
' → logprob: -6.512633800506592
    6. '
' → logprob: -7.762633800506592
    7. '<|end|>' → logprob: -8.137633323669434
    8. ')' → logprob: -8.262633323669434
    9. 'edges' → logprob: -8.262633323669434
    10. '    
' → logprob: -8.512633323669434

Token 216: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014401834458112717
    2. '   ' → logprob: -5.014401912689209
    3. 'for' → logprob: -5.639401912689209
    4. 'edges' → logprob: -6.014401912689209
    5. '       ' → logprob: -6.764401912689209
    6. ' if' → logprob: -7.639401912689209
    7. '#' (adapté à ' #') → logprob: -11.63940143585205
    8. ' edges' → logprob: -12.38940143585205
    9. '
' → logprob: -13.26440143585205
    10. ' for' → logprob: -13.51440143585205

Token 217: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21257828176021576
    2. ' if' → logprob: -1.962578296661377
    3. 'for' → logprob: -3.337578296661377
    4. '   ' → logprob: -4.962578296661377
    5. ' for' → logprob: -5.587578296661377
    6. '       ' → logprob: -5.712578296661377
    7. 'edges' → logprob: -7.212578296661377
    8. ' edges' → logprob: -7.587578296661377
    9. '
' → logprob: -9.337577819824219
    10. '#' → logprob: -10.212577819824219

Token 218: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.16515207290649414
    2. 'car' → logprob: -2.040152072906494
    3. ' move' → logprob: -3.915152072906494
    4. 'move' → logprob: -6.415152072906494
    5. '   ' → logprob: -8.415151596069336
    6. ' not' → logprob: -8.665151596069336
    7. ' parts' → logprob: -9.665151596069336
    8. '    ' → logprob: -10.165151596069336
    9. ' ' → logprob: -10.165151596069336
    10. '	car' → logprob: -10.415151596069336

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013464801304508
    2. '2' → logprob: -9.750134468078613
    3. ' not' → logprob: -10.000134468078613
    4. 'not' → logprob: -10.500134468078613
    5. '```' → logprob: -14.000134468078613
    6. ' in' → logprob: -14.500134468078613
    7. ' ' → logprob: -15.125134468078613
    8. '
' → logprob: -15.125134468078613
    9. 's' → logprob: -15.187634468078613
    10. 'edges' → logprob: -15.562634468078613

Token 220: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.005950841121375561
    2. 'not' → logprob: -5.130950927734375
    3. ' in' → logprob: -11.005950927734375
    4. ' !=' → logprob: -13.505950927734375
    5. 'in' → logprob: -13.630950927734375
    6. '!=' → logprob: -14.005950927734375
    7. ')' → logprob: -14.255950927734375
    8. ' no' → logprob: -15.005950927734375
    9. '==' → logprob: -15.630950927734375
    10. 'n' → logprob: -15.755950927734375

Token 221: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4754699170589447
    2. 'in' → logprob: -0.9754699468612671
    3. ' not' → logprob: -6.725470066070557
    4. 'not' → logprob: -8.600469589233398
    5. 's' → logprob: -13.350469589233398
    6. ' ' → logprob: -13.850469589233398
    7. '_in' → logprob: -14.600469589233398
    8. '[' → logprob: -14.725469589233398
    9. ' edges' → logprob: -14.725469589233398
    10. 'e' → logprob: -14.850469589233398

Token 222: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.47408005595207214
    2. 'edges' → logprob: -0.9740800857543945
    3. '.edges' → logprob: -13.724080085754395
    4. '(edges' → logprob: -14.099080085754395
    5. '_edges' → logprob: -14.724080085754395
    6. 'edge' → logprob: -15.474080085754395
    7. '   ' → logprob: -15.599080085754395
    8. 'Edges' → logprob: -16.349079132080078
    9. ' ' → logprob: -16.724079132080078
    10. 'car' → logprob: -17.099079132080078

Token 223: ',' (ID: 11)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004588672425597906
    2. 'not' → logprob: -5.754588603973389
    3. '.setdefault' → logprob: -7.129588603973389
    4. ':' → logprob: -7.879588603973389
    5. ' in' → logprob: -9.254589080810547
    6. '       ' → logprob: -10.504589080810547
    7. 'in' → logprob: -10.629589080810547
    8. ':
' → logprob: -10.754589080810547
    9. '   ' → logprob: -10.879589080810547
    10. ':not' → logprob: -10.879589080810547

Token 224: ' add' (ID: 1147)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2820876836776733
    2. ' edges' → logprob: -1.2820876836776733
    3. '       ' → logprob: -1.6570876836776733
    4. '           ' → logprob: -1.9070876836776733
    5. 'if' → logprob: -2.657087802886963
    6. 'edges' → logprob: -3.657087802886963
    7. '   ' → logprob: -4.782087802886963
    8. ' not' → logprob: -7.282087802886963
    9. 'not' → logprob: -8.657087326049805
    10. '```' → logprob: -8.782087326049805

Token 225: ' empty' (ID: 8213)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5256472826004028
    2. ' edges' → logprob: -1.0256472826004028
    3. 'if' → logprob: -3.6506471633911133
    4. 'edges' → logprob: -4.025647163391113
    5. ' car' → logprob: -5.900647163391113
    6. '       ' → logprob: -6.400647163391113
    7. '   ' → logprob: -7.025647163391113
    8. '           ' → logprob: -8.400647163391113
    9. '_edges' → logprob: -8.650647163391113
    10. ' keys' → logprob: -8.900647163391113

Token 226: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0979103222489357
    2. ' set' → logprob: -2.5979104042053223
    3. 'list' → logprob: -4.722910404205322
    4. ' list' → logprob: -5.722910404205322
    5. 'edges' → logprob: -5.972910404205322
    6. ' edges' → logprob: -6.597910404205322
    7. 'dict' → logprob: -6.847910404205322
    8. '   ' → logprob: -7.222910404205322
    9. '[]' → logprob: -7.847910404205322
    10. '{' → logprob: -8.347909927368164

Token 227: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2880051136016846
    2. ' if' → logprob: -1.2880051136016846
    3. '.setdefault' → logprob: -1.2880051136016846
    4. 'if' → logprob: -2.7880051136016846
    5. ':' → logprob: -2.9130051136016846
    6. '   ' → logprob: -3.1630051136016846
    7. ':
' → logprob: -4.9130048751831055
    8. 'edges' → logprob: -6.5380048751831055
    9. '           ' → logprob: -6.7880048751831055
    10. ' edges' → logprob: -6.9130048751831055

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21267658472061157
    2. ' if' → logprob: -1.9626765251159668
    3. '   ' → logprob: -3.962676525115967
    4. '.setdefault' → logprob: -4.087676525115967
    5. ':' → logprob: -5.087676525115967
    6. 'if' → logprob: -5.587676525115967
    7. ' =' → logprob: -6.837676525115967
    8. '<|end|>' → logprob: -6.962676525115967
    9. ':
' → logprob: -7.212676525115967
    10. ',' → logprob: -7.837676525115967

Token 229: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1573125720024109
    2. '       ' → logprob: -2.0323126316070557
    3. 'if' (adapté à ' if') → logprob: -4.282312393188477
    4. '   ' → logprob: -7.282312393188477
    5. '<|end|>' → logprob: -11.532312393188477
    6. '```' → logprob: -12.282312393188477
    7. '.setdefault' → logprob: -12.407312393188477
    8. '	if' → logprob: -12.532312393188477
    9. '           ' → logprob: -12.907312393188477
    10. ',' → logprob: -13.407312393188477

Token 230: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.16022716462612152
    2. 'car' → logprob: -1.9102271795272827
    3. '	car' → logprob: -13.035226821899414
    4. ' parts' → logprob: -14.910226821899414
    5. '(car' → logprob: -15.285226821899414
    6. ' ' → logprob: -17.160226821899414
    7. 'Car' → logprob: -17.285226821899414
    8. '   ' → logprob: -17.285226821899414
    9. 'c' → logprob: -17.660226821899414
    10. ' cars' → logprob: -17.660226821899414

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. 'not' → logprob: -12.750007629394531
    3. ' not' → logprob: -13.250007629394531
    4. '2' → logprob: -14.375007629394531
    5. '```' → logprob: -14.500007629394531
    6. 'car' → logprob: -14.875007629394531
    7. ' ' → logprob: -15.375007629394531
    8. '[' → logprob: -15.625007629394531
    9. '.get' → logprob: -15.875007629394531
    10. '.setdefault' → logprob: -15.875007629394531

Token 232: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5759425163269043
    2. 'not' → logprob: -0.8259425163269043
    3. ']' → logprob: -13.450942993164062
    4. ')' → logprob: -13.950942993164062
    5. '=' → logprob: -14.950942993164062
    6. '	not' → logprob: -15.450942993164062
    7. '(not' → logprob: -16.700942993164062
    8. '_not' → logprob: -17.325942993164062
    9. 'in' → logprob: -17.450942993164062
    10. ':not' → logprob: -17.575942993164062

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05333060026168823
    2. 'in' → logprob: -3.303330659866333
    3. ' edges' → logprob: -4.678330421447754
    4. 'edges' → logprob: -5.178330421447754
    5. '(edges' → logprob: -8.678330421447754
    6. ']' → logprob: -10.803330421447754
    7. '_edges' → logprob: -11.053330421447754
    8. '   ' → logprob: -11.678330421447754
    9. ' not' → logprob: -12.178330421447754
    10. '	in' → logprob: -12.303330421447754

Token 234: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.005233763717114925
    2. ' edges' → logprob: -5.2552337646484375
    3. '.edges' → logprob: -17.380233764648438
    4. '(edges' → logprob: -17.630233764648438
    5. '_edges' → logprob: -19.255233764648438
    6. 'edge' → logprob: -19.880233764648438
    7. 'Edges' → logprob: -20.005233764648438
    8. 'ed' → logprob: -20.755233764648438
    9. 'parts' → logprob: -21.255233764648438
    10. '   ' → logprob: -21.380233764648438

Token 235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012600413523614407
    2. ':
' → logprob: -4.387600421905518
    3. '=' → logprob: -9.88759994506836
    4. ']' → logprob: -11.76259994506836
    5. '[' → logprob: -11.88759994506836
    6. ' =' → logprob: -12.38759994506836
    7. '   ' → logprob: -12.51259994506836
    8. ']:' → logprob: -12.63759994506836
    9. '):' → logprob: -13.01259994506836
    10. '       ' → logprob: -13.13759994506836

Token 236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5355781316757202
    2. ' edges' → logprob: -1.0355781316757202
    3. 'edges' → logprob: -3.5355782508850098
    4. '       ' → logprob: -4.66057825088501
    5. ':
' → logprob: -5.16057825088501
    6. ':' → logprob: -5.28557825088501
    7. '   ' → logprob: -5.66057825088501
    8. '(edges' → logprob: -6.03557825088501
    9. '{' → logprob: -6.66057825088501
    10. ' =' → logprob: -7.28557825088501

Token 237: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5759616494178772
    2. 'edges' (adapté à ' edges') → logprob: -0.8259616494178772
    3. '           ' → logprob: -11.32596206665039
    4. 'set' → logprob: -12.57596206665039
    5. '(edges' → logprob: -13.57596206665039
    6. '.edges' → logprob: -13.82596206665039
    7. '   ' → logprob: -14.07596206665039
    8. '{' → logprob: -14.32596206665039
    9. '       ' → logprob: -14.57596206665039
    10. '{}' → logprob: -14.70096206665039

Token 238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011853496544063091
    2. '=' → logprob: -7.001185417175293
    3. 'car' → logprob: -8.251185417175293
    4. ']' → logprob: -11.626185417175293
    5. ' =' → logprob: -12.751185417175293
    6. ']=' → logprob: -14.751185417175293
    7. '[c' → logprob: -16.126184463500977
    8. ' car' → logprob: -16.126184463500977
    9. '[...]' → logprob: -16.626184463500977
    10. '(car' → logprob: -16.876184463500977

Token 239: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.981667537620524e-06
    2. ' car' → logprob: -13.375001907348633
    3. '(car' → logprob: -16.000001907348633
    4. 'cars' → logprob: -16.250001907348633
    5. ']' → logprob: -16.375001907348633
    6. '[' → logprob: -16.750001907348633
    7. '	car' → logprob: -17.500001907348633
    8. '_car' → logprob: -18.625001907348633
    9. 'Car' → logprob: -19.125001907348633
    10. ')' → logprob: -19.375001907348633

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02102516032755375
    2. '[' → logprob: -4.64602518081665
    3. 'car' → logprob: -5.14602518081665
    4. ']' → logprob: -5.27102518081665
    5. '(car' → logprob: -9.271024703979492
    6. '```' → logprob: -9.771024703979492
    7. ' car' → logprob: -10.021024703979492
    8. ']=' → logprob: -11.021024703979492
    9. '][' → logprob: -11.396024703979492
    10. '	car' → logprob: -11.896024703979492

Token 241: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010962257510982454
    2. ']=' → logprob: -9.125109672546387
    3. '=' → logprob: -14.875109672546387
    4. ' ]' → logprob: -16.50010871887207
    5. '']' → logprob: -16.62510871887207
    6. '"]' → logprob: -16.87510871887207
    7. ']={' → logprob: -17.00010871887207
    8. 'set' → logprob: -17.12510871887207
    9. ' =' → logprob: -17.50010871887207
    10. '   ' → logprob: -19.50010871887207

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416798122227192
    2. ' =' → logprob: -4.264167785644531
    3. ']' → logprob: -12.639167785644531
    4. ']=' → logprob: -14.014167785644531
    5. '=set' → logprob: -15.014167785644531
    6. 'set' → logprob: -17.63916778564453
    7. '=[]' → logprob: -18.13916778564453
    8. ')' → logprob: -18.63916778564453
    9. ')=' → logprob: -19.51416778564453
    10. '＝' → logprob: -19.63916778564453

Token 243: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.006720705423504114
    2. ' set' → logprob: -5.006720542907715
    3. '[]' → logprob: -13.006720542907715
    4. '   ' → logprob: -14.131720542907715
    5. '	set' → logprob: -14.131720542907715
    6. '{}' → logprob: -14.381720542907715
    7. '{' → logprob: -15.006720542907715
    8. ' ' → logprob: -15.506720542907715
    9. '(set' → logprob: -16.00672149658203
    10. ' []' → logprob: -16.25672149658203

Token 244: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002661039761733264
    2. '()
' → logprob: -8.250266075134277
    3. '()

' → logprob: -12.500266075134277
    4. '()
' → logprob: -14.625266075134277
    5. '()]' → logprob: -15.250266075134277
    6. '())' → logprob: -16.000267028808594
    7. '()>' → logprob: -17.125267028808594
    8. '()}' → logprob: -17.250267028808594
    9. '()`' → logprob: -17.250267028808594
    10. '()</' → logprob: -17.375267028808594

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010906213894486427
    2. ' edges' → logprob: -5.260906219482422
    3. 'edges' → logprob: -5.385906219482422
    4. '<|end|>' → logprob: -7.010906219482422
    5. '(edges' → logprob: -9.260906219482422
    6. '.edges' → logprob: -10.885906219482422
    7. '   ' → logprob: -11.260906219482422
    8. '        
' → logprob: -11.260906219482422
    9. '           ' → logprob: -11.385906219482422
    10. '<|end|>' → logprob: -12.010906219482422

Token 246: ' if' (ID: 538)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.30529719591140747
    2. '       ' → logprob: -1.4302971363067627
    3. ' edges' → logprob: -3.8052971363067627
    4. '   ' → logprob: -7.555297374725342
    5. 'if' (adapté à ' if') → logprob: -7.555297374725342
    6. '.edges' → logprob: -8.930296897888184
    7. '(edges' → logprob: -9.180296897888184
    8. '        
' → logprob: -9.555296897888184
    9. '<|end|>' → logprob: -9.555296897888184
    10. '```' → logprob: -10.055296897888184

Token 247: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0040838588029146194
    2. ' car' → logprob: -5.504083633422852
    3. '   ' → logprob: -12.254083633422852
    4. '(car' → logprob: -15.254083633422852
    5. '	car' → logprob: -15.254083633422852
    6. ' ' → logprob: -16.37908363342285
    7. 'Car' → logprob: -17.75408363342285
    8. '       ' → logprob: -17.87908363342285
    9. '  ' → logprob: -18.25408363342285
    10. 'cars' → logprob: -18.25408363342285

Token 248: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.615255839889869e-05
    2. 'car' → logprob: -9.750096321105957
    3. '1' → logprob: -10.875096321105957
    4. ' car' → logprob: -11.625096321105957
    5. '[' → logprob: -12.125096321105957
    6. '```' → logprob: -13.625096321105957
    7. '(car' → logprob: -13.875096321105957
    8. '   ' → logprob: -14.625096321105957
    9. 's' → logprob: -15.125096321105957
    10. '
' → logprob: -15.375096321105957

Token 249: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07889000326395035
    2. 'not' → logprob: -2.578890085220337
    3. ']' → logprob: -15.578889846801758
    4. '	not' → logprob: -16.828889846801758
    5. ')' → logprob: -17.578889846801758
    6. ' in' → logprob: -17.953889846801758
    7. 'in' → logprob: -19.203889846801758
    8. '[' → logprob: -19.328889846801758
    9. ':not' → logprob: -19.828889846801758
    10. ',' → logprob: -19.828889846801758

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009497996419668198
    2. 'in' → logprob: -4.884498119354248
    3. 'edges' → logprob: -7.009498119354248
    4. ' edges' → logprob: -7.134498119354248
    5. '           ' → logprob: -9.50949764251709
    6. ' not' → logprob: -9.75949764251709
    7. '(edges' → logprob: -10.25949764251709
    8. 'not' → logprob: -11.75949764251709
    9. '[' → logprob: -12.50949764251709
    10. '_edges' → logprob: -13.13449764251709

Token 251: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3132665753364563
    2. ' edges' → logprob: -1.3132665157318115
    3. '(edges' → logprob: -12.43826675415039
    4. '.edges' → logprob: -14.18826675415039
    5. '   ' → logprob: -17.06326675415039
    6. 'edge' → logprob: -17.31326675415039
    7. ' ' → logprob: -17.43826675415039
    8. 'Edges' → logprob: -17.81326675415039
    9. '_edges' → logprob: -17.81326675415039
    10. '```' → logprob: -18.06326675415039

Token 252: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.020141350105404854
    2. ':' → logprob: -4.145141124725342
    3. '           ' → logprob: -5.645141124725342
    4. '{
' → logprob: -8.2701416015625
    5. '   ' → logprob: -9.1451416015625
    6. '       ' → logprob: -9.3951416015625
    7. '[' → logprob: -10.3951416015625
    8. '):
' → logprob: -10.6451416015625
    9. 'edges' → logprob: -10.6451416015625
    10. ']:
' → logprob: -10.7701416015625

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003476531943306327
    2. '       ' → logprob: -6.378476619720459
    3. 'edges' → logprob: -7.503476619720459
    4. ':
' → logprob: -7.753476619720459
    5. '{
' → logprob: -8.1284761428833
    6. '   ' → logprob: -8.2534761428833
    7. ' edges' → logprob: -8.5034761428833
    8. '               ' → logprob: -11.1284761428833
    9. '(edges' → logprob: -12.1284761428833
    10. '[' → logprob: -13.3784761428833

Token 254: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.31338369846343994
    2. ' edges' → logprob: -1.31338369846344
    3. '   ' → logprob: -9.688384056091309
    4. '           ' → logprob: -10.063384056091309
    5. '       ' → logprob: -11.438384056091309
    6. '(edges' → logprob: -12.688384056091309
    7. '.edges' → logprob: -13.438384056091309
    8. ' ' → logprob: -14.938384056091309
    9. '               ' → logprob: -15.438384056091309
    10. '```' → logprob: -15.438384056091309

Token 255: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.458980300929397e-05
    2. 'edges' → logprob: -10.00008487701416
    3. 'car' → logprob: -10.25008487701416
    4. '   ' → logprob: -13.62508487701416
    5. '{' → logprob: -13.75008487701416
    6. '           ' → logprob: -14.75008487701416
    7. ' edges' → logprob: -15.25008487701416
    8. '       ' → logprob: -15.37508487701416
    9. '=' → logprob: -15.62508487701416
    10. '[c' → logprob: -16.125083923339844

Token 256: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.033806946128606796
    2. 'edges' → logprob: -3.4088070392608643
    3. 'cars' → logprob: -9.658806800842285
    4. '[' → logprob: -10.533806800842285
    5. ' edges' → logprob: -10.533806800842285
    6. ' car' → logprob: -11.158806800842285
    7. '{' → logprob: -11.658806800842285
    8. 'parts' → logprob: -11.783806800842285
    9. '   ' → logprob: -12.283806800842285
    10. '(car' → logprob: -13.533806800842285

Token 257: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001860174525063485
    2. 'car' → logprob: -8.6251859664917
    3. '```' → logprob: -13.1251859664917
    4. '[' → logprob: -13.5001859664917
    5. '1' → logprob: -13.8751859664917
    6. '(car' → logprob: -14.7501859664917
    7. ']' → logprob: -15.2501859664917
    8. '
' → logprob: -15.6251859664917
    9. ' car' → logprob: -15.7501859664917
    10. 's' → logprob: -15.7501859664917

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000770436367020011
    2. ' ]' → logprob: -8.000770568847656
    3. ']=' → logprob: -8.250770568847656
    4. ' =' → logprob: -9.000770568847656
    5. '=' → logprob: -10.125770568847656
    6. '   ' → logprob: -12.875770568847656
    7. '           ' → logprob: -12.875770568847656
    8. ']={' → logprob: -13.250770568847656
    9. '].' → logprob: -13.500770568847656
    10. '']' → logprob: -14.500770568847656

Token 259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196970492601395
    2. ' =' → logprob: -2.811969757080078
    3. '           ' → logprob: -13.186969757080078
    4. '=set' → logprob: -16.311969757080078
    5. '=
' → logprob: -17.186969757080078
    6. '   ' → logprob: -17.686969757080078
    7. '               ' → logprob: -18.936969757080078
    8. '       ' → logprob: -19.186969757080078
    9. 'edges' → logprob: -19.436969757080078
    10. ' ' → logprob: -19.686969757080078

Token 260: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0007099286303855479
    2. ' set' → logprob: -7.2507100105285645
    3. '	set' → logprob: -19.750709533691406
    4. '=set' → logprob: -21.375709533691406
    5. '(set' → logprob: -21.500709533691406
    6. '   ' → logprob: -21.875709533691406
    7. ' ' → logprob: -22.250709533691406
    8. ')set' → logprob: -22.250709533691406
    9. '.set' → logprob: -24.000709533691406
    10. '  ' → logprob: -24.625709533691406

Token 261: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13059785962104797
    2. '()
' → logprob: -2.1305978298187256
    3. '       ' → logprob: -5.630598068237305
    4. '()

' → logprob: -9.755598068237305
    5. '()
' → logprob: -11.505598068237305
    6. '()\' → logprob: -12.380598068237305
    7. '()`' → logprob: -14.380598068237305
    8. '())' → logprob: -14.505598068237305
    9. ')' → logprob: -14.630598068237305
    10. '   ' → logprob: -15.005598068237305

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20926524698734283
    2. 'edges' → logprob: -1.7092652320861816
    3. ' edges' → logprob: -4.959265232086182
    4. '   ' → logprob: -7.209265232086182
    5. '```' → logprob: -10.45926570892334
    6. 'if' → logprob: -11.33426570892334
    7. '(edges' → logprob: -11.95926570892334
    8. '        
' → logprob: -12.33426570892334
    9. '.edges' → logprob: -12.45926570892334
    10. '           ' → logprob: -12.70926570892334

Token 263: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.28370407223701477
    2. 'if' → logprob: -1.7837040424346924
    3. '       ' → logprob: -3.0337040424346924
    4. ' edges' → logprob: -3.7837040424346924
    5. ' if' → logprob: -5.2837042808532715
    6. '   ' → logprob: -6.0337042808532715
    7. '
' → logprob: -8.533703804016113
    8. '        
' → logprob: -8.783703804016113
    9. '```' → logprob: -9.033703804016113
    10. '(edges' → logprob: -10.033703804016113

Token 264: ' According' (ID: 16344)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2049543410539627
    2. 'edges' → logprob: -1.7049543857574463
    3. '       ' → logprob: -6.454954147338867
    4. '   ' → logprob: -7.454954147338867
    5. ' if' → logprob: -7.579954147338867
    6. '#' → logprob: -7.829954147338867
    7. ' edges' → logprob: -8.204954147338867
    8. '```' → logprob: -9.704954147338867
    9. 'edge' → logprob: -10.079954147338867
    10. 'direction' → logprob: -10.954954147338867

Token 265: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03852921351790428
    2. ' to' → logprob: -3.28852915763855
    3. '       ' → logprob: -8.163529396057129
    4. '_to' → logprob: -8.913529396057129
    5. 'ly' → logprob: -11.288529396057129
    6. 'if' → logprob: -11.538529396057129
    7. '=' → logprob: -11.788529396057129
    8. '   ' → logprob: -11.788529396057129
    9. 't' → logprob: -12.038529396057129
    10. '
' → logprob: -12.038529396057129

Token 266: ' direction' (ID: 9262)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.04302316531538963
    2. ' move' → logprob: -3.168023109436035
    3. '(move' → logprob: -10.918023109436035
    4. '	move' → logprob: -12.293023109436035
    5. ' ' → logprob: -15.043023109436035
    6. '   ' → logprob: -15.168023109436035
    7. '.move' → logprob: -15.293023109436035
    8. 'mov' → logprob: -16.29302406311035
    9. 'moves' → logprob: -16.41802406311035
    10. '_move' → logprob: -16.54302406311035

Token 267: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04814315214753151
    2. '<|end|>' → logprob: -3.548143148422241
    3. ' if' → logprob: -4.42314338684082
    4. ',' → logprob: -6.54814338684082
    5. ' =' → logprob: -6.54814338684082
    6. '=' → logprob: -6.79814338684082
    7. '<|end|>' → logprob: -7.17314338684082
    8. 'if' → logprob: -7.54814338684082
    9. ':' → logprob: -7.92314338684082
    10. '           ' → logprob: -8.54814338684082

Token 268: ' link' (ID: 3461)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15824401378631592
    2. ' if' → logprob: -2.0332441329956055
    3. 'edges' → logprob: -4.5332441329956055
    4. ' edges' → logprob: -5.5332441329956055
    5. '       ' → logprob: -7.4082441329956055
    6. '   ' → logprob: -9.533244132995605
    7. '
' → logprob: -10.533244132995605
    8. '           ' → logprob: -10.908244132995605
    9. '        
' → logprob: -12.283244132995605
    10. '```' → logprob: -12.908244132995605

Token 269: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1214784383773804
    2. 'car' → logprob: -1.6214784383773804
    3. ' if' → logprob: -1.7464784383773804
    4. '(car' → logprob: -2.12147855758667
    5. 'if' → logprob: -2.87147855758667
    6. ' car' → logprob: -3.49647855758667
    7. ' edges' → logprob: -3.62147855758667
    8. 'edges' → logprob: -3.62147855758667
    9. '=' → logprob: -4.37147855758667
    10. '   ' → logprob: -4.49647855758667

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25819167494773865
    2. 's' → logprob: -1.508191704750061
    3. 'if' → logprob: -6.0081915855407715
    4. '2' → logprob: -6.8831915855407715
    5. 'car' → logprob: -7.3831915855407715
    6. '   ' → logprob: -7.3831915855407715
    7. '       ' → logprob: -7.5081915855407715
    8. ' if' → logprob: -7.6331915855407715
    9. '(car' → logprob: -9.38319206237793
    10. '[' → logprob: -9.75819206237793

Token 271: ' and' (ID: 326)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.10944879800081253
    2. '.' → logprob: -2.4844489097595215
    3. 'edges' → logprob: -4.7344489097595215
    4. ' and' → logprob: -5.1094489097595215
    5. ' edges' → logprob: -6.1094489097595215
    6. '.edges' → logprob: -7.3594489097595215
    7. 'and' → logprob: -7.4844489097595215
    8. '   ' → logprob: -7.4844489097595215
    9. '       ' → logprob: -7.9844489097595215
    10. ' .' → logprob: -8.484448432922363

Token 272: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0017029138980433345
    2. ' car' → logprob: -6.376702785491943
    3. '(car' → logprob: -15.251703262329102
    4. '	car' → logprob: -15.501703262329102
    5. 'cars' → logprob: -16.3767032623291
    6. '   ' → logprob: -17.1267032623291
    7. '_car' → logprob: -18.0017032623291
    8. '.car' → logprob: -18.1267032623291
    9. ' ' → logprob: -18.2517032623291
    10. 'Car' → logprob: -18.3767032623291

Token 273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07889287173748016
    2. '1' → logprob: -2.578892946243286
    3. '```' → logprob: -13.578892707824707
    4. '
' → logprob: -14.078892707824707
    5. '   ' → logprob: -15.453892707824707
    6. ' ' → logprob: -16.078893661499023
    7. '[' → logprob: -16.141393661499023
    8. 'car' → logprob: -16.391393661499023
    9. 's' → logprob: -16.516393661499023
    10. '(car' → logprob: -17.016393661499023

Token 274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5539118051528931
    2. '<|end|>' → logprob: -1.803911805152893
    3. ' if' → logprob: -2.3039116859436035
    4. '
' → logprob: -2.4289116859436035
    5. ' edges' → logprob: -4.0539116859436035
    6. '   ' → logprob: -4.6789116859436035
    7. '.add' → logprob: -4.8039116859436035
    8. 'if' → logprob: -5.3039116859436035
    9. '.setdefault' → logprob: -5.4289116859436035
    10. 'edges' → logprob: -5.5539116859436035

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029602274298667908
    2. '<|end|>' → logprob: -6.252960205078125
    3. ' if' → logprob: -7.377960205078125
    4. '        
' → logprob: -8.252960205078125
    5. 'if' → logprob: -10.627960205078125
    6. '   ' → logprob: -10.627960205078125
    7. ',' → logprob: -11.377960205078125
    8. '<|end|>' → logprob: -11.502960205078125
    9. ' 
' → logprob: -11.627960205078125
    10. ' =' → logprob: -11.627960205078125

Token 276: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7634567022323608
    2. 'if' → logprob: -0.8884567022323608
    3. '       ' → logprob: -2.5134568214416504
    4. 'edges' → logprob: -3.7634568214416504
    5. ' edges' → logprob: -4.01345682144165
    6. '
' → logprob: -9.388456344604492
    7. '   ' → logprob: -9.513456344604492
    8. '        
' → logprob: -10.013456344604492
    9. '           ' → logprob: -10.388456344604492
    10. '```' → logprob: -10.638456344604492

Token 277: ' move' (ID: 5275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6754195690155029
    2. '       ' → logprob: -0.9254195690155029
    3. ' if' → logprob: -2.550419569015503
    4. '   ' → logprob: -4.550419807434082
    5. 'edges' → logprob: -5.300419807434082
    6. ' edges' → logprob: -6.925419807434082
    7. '	if' → logprob: -10.800419807434082
    8. '```' → logprob: -11.050419807434082
    9. '
' → logprob: -11.175419807434082
    10. '        
' → logprob: -11.300419807434082

Token 278: ' '' (ID: 461)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.372836709022522
    2. ' ==' → logprob: -1.247836709022522
    3. '=' → logprob: -3.9978365898132324
    4. ' =' → logprob: -5.372836589813232
    5. '=="' → logprob: -7.997836589813232
    6. '=='' → logprob: -8.87283706665039
    7. '[' → logprob: -8.99783706665039
    8. '===' → logprob: -9.12283706665039
    9. '==
' → logprob: -9.24783706665039
    10. ']==' → logprob: -9.24783706665039

Token 279: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.014740060083568096
    2. '<' → logprob: -4.889739990234375
    3. '-' → logprob: -5.014739990234375
    4. '<-' → logprob: -8.014739990234375
    5. '-'' → logprob: -10.764739990234375
    6. '>' → logprob: -10.889739990234375
    7. '<>' → logprob: -11.514739990234375
    8. ''' → logprob: -11.639739990234375
    9. ''<' → logprob: -11.639739990234375
    10. '->_' → logprob: -11.639739990234375

Token 280: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2258109301328659
    2. '':' → logprob: -1.6008108854293823
    3. '':
' → logprob: -9.350811004638672
    4. ' '' → logprob: -9.725811004638672
    5. '']' → logprob: -9.975811004638672
    6. '',' → logprob: -10.350811004638672
    7. ''>' → logprob: -10.350811004638672
    8. ''=>' → logprob: -10.600811004638672
    9. '':
' → logprob: -10.975811004638672
    10. '')' → logprob: -11.225811004638672

Token 281: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3113633394241333
    2. 'edges' → logprob: -2.1863632202148438
    3. ' car' → logprob: -2.5613632202148438
    4. ' edges' → logprob: -2.5613632202148438
    5. 'edge' → logprob: -8.311363220214844
    6. 'from' → logprob: -9.186363220214844
    7. '   ' → logprob: -9.436363220214844
    8. ' that' → logprob: -9.561363220214844
    9. ' from' → logprob: -10.311363220214844
    10. 'add' → logprob: -10.311363220214844

Token 283: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006928850896656513
    2. '2' → logprob: -5.63192892074585
    3. 's' → logprob: -6.13192892074585
    4. 'edges' → logprob: -7.00692892074585
    5. ' edges' → logprob: -8.756928443908691
    6. ' ' → logprob: -10.631928443908691
    7. '```' → logprob: -11.131928443908691
    8. '_edges' → logprob: -11.256928443908691
    9. '   ' → logprob: -11.631928443908691
    10. 'parts' → logprob: -11.631928443908691

Token 284: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03926350921392441
    2. ' in' → logprob: -4.164263725280762
    3. 'is' → logprob: -4.914263725280762
    4. 's' → logprob: -6.039263725280762
    5. ' can' → logprob: -6.164263725280762
    6. ' edges' → logprob: -6.164263725280762
    7. ' should' → logprob: -6.914263725280762
    8. ' appears' → logprob: -6.914263725280762
    9. ')' → logprob: -7.039263725280762
    10. 'in' → logprob: -7.164263725280762

Token 285: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -1.0177069902420044
    2. ' in' → logprob: -1.3927069902420044
    3. ' behind' → logprob: -2.142706871032715
    4. 'after' → logprob: -2.767706871032715
    5. ' to' → logprob: -3.267706871032715
    6. 'behind' → logprob: -3.392706871032715
    7. ' a' → logprob: -3.642706871032715
    8. ' ahead' → logprob: -3.767706871032715
    9. ' on' → logprob: -4.267706871032715
    10. ' added' → logprob: -4.392706871032715

Token 286: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.43041542172431946
    2. ' car' → logprob: -1.055415391921997
    3. '(car' → logprob: -7.055415630340576
    4. ' edges' → logprob: -8.555415153503418
    5. ' parts' → logprob: -8.805415153503418
    6. ' in' → logprob: -8.930415153503418
    7. '<|end|>' → logprob: -9.555415153503418
    8. '	car' → logprob: -9.555415153503418
    9. 'parts' → logprob: -9.680415153503418
    10. 'cars' → logprob: -10.180415153503418

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5077617764472961
    2. '[' → logprob: -1.2577617168426514
    3. ' car' → logprob: -2.6327617168426514
    4. 'car' → logprob: -3.5077617168426514
    5. '   ' → logprob: -5.0077619552612305
    6. '       ' → logprob: -6.3827619552612305
    7. 'edges' → logprob: -6.8827619552612305
    8. '(car' → logprob: -7.1327619552612305
    9. '[
' → logprob: -7.8827619552612305
    10. '.setdefault' → logprob: -8.63276195526123

Token 288: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006433275993913412
    2. ' edges' → logprob: -5.381433486938477
    3. 'edges' → logprob: -7.256433486938477
    4. '   ' → logprob: -8.256433486938477
    5. '
' → logprob: -8.881433486938477
    6. '        
' → logprob: -9.131433486938477
    7. ',' → logprob: -9.131433486938477
    8. '           ' → logprob: -9.381433486938477
    9. '<|end|>' → logprob: -9.381433486938477
    10. ' if' → logprob: -9.631433486938477

Token 289: ' link' (ID: 3461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7633374333381653
    2. 'edges' → logprob: -1.2633373737335205
    3. ' edges' → logprob: -1.3883373737335205
    4. '   ' → logprob: -7.2633376121521
    5. '.edges' → logprob: -8.638337135314941
    6. '(edges' → logprob: -8.638337135314941
    7. '<|end|>' → logprob: -9.138337135314941
    8. '           ' → logprob: -9.388337135314941
    9. 'spaces' → logprob: -9.763337135314941
    10. ' ' → logprob: -9.950837135314941

Token 290: ' both' (ID: 2973)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5616394877433777
    2. 'edges' → logprob: -1.3116395473480225
    3. '(car' → logprob: -2.6866395473480225
    4. ' edges' → logprob: -2.6866395473480225
    5. ' car' → logprob: -3.9366395473480225
    6. '(edges' → logprob: -6.436639308929443
    7. '[' → logprob: -6.811639308929443
    8. 'cars' → logprob: -7.061639308929443
    9. '   ' → logprob: -7.311639308929443
    10. '	car' → logprob: -9.811639785766602

Token 291: ' ways' (ID: 6984)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40757226943969727
    2. ' edges' → logprob: -1.2825722694396973
    3. 'edges' → logprob: -3.1575722694396973
    4. '   ' → logprob: -4.907572269439697
    5. '(edges' → logprob: -6.157572269439697
    6. ',' → logprob: -6.907572269439697
    7. ' parts' → logprob: -7.032572269439697
    8. '.edges' → logprob: -7.032572269439697
    9. '
' → logprob: -7.532572269439697
    10. '           ' → logprob: -7.782572269439697

Token 292: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016363603994250298
    2. ' edges' → logprob: -4.516363620758057
    3. 'edges' → logprob: -5.516363620758057
    4. '   ' → logprob: -8.266363143920898
    5. '        
' → logprob: -8.516363143920898
    6. ',' → logprob: -8.641363143920898
    7. '(edges' → logprob: -8.766363143920898
    8. '<|end|>' → logprob: -8.891363143920898
    9. '
' → logprob: -9.141363143920898
    10. '.edges' → logprob: -9.641363143920898

Token 293: ' und' (ID: 844)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.6222559809684753
    2. 'neighbors' → logprob: -2.24725604057312
    3. ' und' → logprob: -2.74725604057312
    4. 'und' → logprob: -2.74725604057312
    5. ' True' → logprob: -2.74725604057312
    6. ' traversal' → logprob: -3.24725604057312
    7. ' neighbors' → logprob: -3.62225604057312
    8. 'True' → logprob: -3.62225604057312
    9. ' connectivity' → logprob: -4.122255802154541
    10. ' edges' → logprob: -4.372255802154541

Token 294: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.2706640958786011
    2. 'edges' → logprob: -1.520664095878601
    3. '_edges' → logprob: -4.770664215087891
    4. ' edges' → logprob: -5.145664215087891
    5. 'ges' → logprob: -5.645664215087891
    6. 'er' → logprob: -7.895664215087891
    7. '(edges' → logprob: -9.14566421508789
    8. '       ' → logprob: -9.52066421508789
    9. '   ' → logprob: -10.27066421508789
    10. 'ir' → logprob: -10.64566421508789

Token 295: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4673568904399872
    2. ' edges' → logprob: -1.7173569202423096
    3. 'edges' → logprob: -1.8423569202423096
    4. '
' → logprob: -4.9673566818237305
    5. '   ' → logprob: -5.0923566818237305
    6. '<|end|>' → logprob: -5.3423566818237305
    7. '           ' → logprob: -5.5923566818237305
    8. '(edges' → logprob: -5.8423566818237305
    9. '.edges' → logprob: -5.9673566818237305
    10. ' parts' → logprob: -5.9673566818237305

Token 296: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01933991350233555
    2. ' edges' → logprob: -4.5193400382995605
    3. 'edges' → logprob: -5.3943400382995605
    4. '        
' → logprob: -6.2693400382995605
    5. '
' → logprob: -7.7693400382995605
    6. '<|end|>' → logprob: -7.8943400382995605
    7. ',' → logprob: -8.144339561462402
    8. '(edges' → logprob: -8.519339561462402
    9. '   ' → logprob: -9.269339561462402
    10. '.edges' → logprob: -9.269339561462402

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17632335424423218
    2. ' edges' → logprob: -2.176323413848877
    3. '   ' → logprob: -3.801323413848877
    4. 'edges' → logprob: -3.801323413848877
    5. '<|end|>' → logprob: -6.301323413848877
    6. '(edges' → logprob: -7.801323413848877
    7. '
' → logprob: -8.176322937011719
    8. '.edges' → logprob: -8.551322937011719
    9. '        
' → logprob: -8.926322937011719
    10. '           ' → logprob: -9.051322937011719

Token 298: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43129676580429077
    2. ' edges' → logprob: -1.3062968254089355
    3. 'edges' → logprob: -2.5562968254089355
    4. '        
' → logprob: -7.1812968254089355
    5. '
' → logprob: -8.431296348571777
    6. '   ' → logprob: -8.431296348571777
    7. '(edges' → logprob: -8.431296348571777
    8. '.edges' → logprob: -8.556296348571777
    9. ' 
' → logprob: -9.556296348571777
    10. '           ' → logprob: -10.056296348571777

Token 299: ' move' (ID: 5275)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.7445109486579895
    2. 'edges' → logprob: -1.1195108890533447
    3. '       ' → logprob: -1.6195108890533447
    4. '   ' → logprob: -8.494510650634766
    5. '.edges' → logprob: -8.994510650634766
    6. '(edges' → logprob: -9.494510650634766
    7. '```' → logprob: -9.494510650634766
    8. '        
' → logprob: -10.244510650634766
    9. '
' → logprob: -10.494510650634766
    10. '           ' → logprob: -10.994510650634766

Token 300: ' '<' (ID: 8144)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47738897800445557
    2. '==' → logprob: -0.9773889780044556
    3. '=='' → logprob: -6.227388858795166
    4. ' =' → logprob: -7.977388858795166
    5. '=' → logprob: -8.102389335632324
    6. ''' → logprob: -8.477389335632324
    7. '=="' → logprob: -8.727389335632324
    8. ' '' → logprob: -9.727389335632324
    9. '===' → logprob: -10.102389335632324
    10. ' =='' → logprob: -10.102389335632324

Token 301: '-'' (ID: 52594)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.12006579339504242
    2. '-' → logprob: -2.495065689086914
    3. '-'' → logprob: -3.495065689086914
    4. '-->' → logprob: -9.745065689086914
    5. '=' → logprob: -10.245065689086914
    6. ''-' → logprob: -10.370065689086914
    7. ''' → logprob: -10.620065689086914
    8. '--' → logprob: -10.745065689086914
    9. '='' → logprob: -10.995065689086914
    10. ' -' → logprob: -11.120065689086914

Token 302: ' means' (ID: 4748)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3574919700622559
    2. ':' → logprob: -2.232491970062256
    3. ' and' → logprob: -2.482491970062256
    4. ' edges' → logprob: -2.482491970062256
    5. '           ' → logprob: -2.732491970062256
    6. '   ' → logprob: -2.857491970062256
    7. ' parts' → logprob: -2.857491970062256
    8. 'edges' → logprob: -2.982491970062256
    9. ' if' → logprob: -3.107491970062256
    10. 'parts' → logprob: -3.607491970062256

Token 303: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3347983956336975
    2. 'edges' → logprob: -1.9597983360290527
    3. ' edges' → logprob: -2.3347983360290527
    4. ' car' → logprob: -3.0847983360290527
    5. ' parts' → logprob: -8.209798812866211
    6. '   ' → logprob: -8.459798812866211
    7. 'cars' → logprob: -8.459798812866211
    8. 'parts' → logprob: -8.584798812866211
    9. '       ' → logprob: -9.834798812866211
    10. ' cars' → logprob: -10.959798812866211

Token 304: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.054912641644477844
    2. '1' → logprob: -2.929912567138672
    3. ' ' → logprob: -10.929912567138672
    4. '   ' → logprob: -12.804912567138672
    5. 's' → logprob: -13.054912567138672
    6. '```' → logprob: -14.054912567138672
    7. ' not' → logprob: -14.179912567138672
    8. ' edges' → logprob: -14.179912567138672
    9. '[' → logprob: -14.429912567138672
    10. ' is' → logprob: -14.679912567138672

Token 305: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0041299303993582726
    2. ' not' → logprob: -6.004129886627197
    3. ' and' → logprob: -8.004130363464355
    4. ' edges' → logprob: -8.004130363464355
    5. ' are' → logprob: -8.379130363464355
    6. ' in' → logprob: -8.879130363464355
    7. ' ' → logprob: -9.004130363464355
    8. ' also' → logprob: -9.129130363464355
    9. '<|end|>' → logprob: -9.254130363464355
    10. 'is' → logprob: -9.504130363464355

Token 306: ' before' (ID: 2254)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'after' → logprob: -0.10369006544351578
    2. ' after' → logprob: -2.6036901473999023
    3. 'before' → logprob: -3.8536901473999023
    4. ' before' → logprob: -5.728690147399902
    5. ' edges' → logprob: -11.228690147399902
    6. 'edges' → logprob: -11.603690147399902
    7. 'ahead' → logprob: -11.728690147399902
    8. ' ahead' → logprob: -12.353690147399902
    9. '_after' → logprob: -13.103690147399902
    10. 'parts' → logprob: -13.978690147399902

Token 307: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.6939049959182739
    2. 'car' → logprob: -0.6939049959182739
    3. '(car' → logprob: -7.193904876708984
    4. '_car' → logprob: -13.443904876708984
    5. '	car' → logprob: -13.443904876708984
    6. ' the' → logprob: -14.193904876708984
    7. ' ' → logprob: -14.443904876708984
    8. 'cars' → logprob: -14.693904876708984
    9. '   ' → logprob: -14.818904876708984
    10. '       ' → logprob: -15.318904876708984

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013019033940508962
    2. '2' → logprob: -7.3763017654418945
    3. 'car' → logprob: -7.3763017654418945
    4. ' car' → logprob: -10.876301765441895
    5. '```' → logprob: -11.501301765441895
    6. ' ' → logprob: -12.501301765441895
    7. '   ' → logprob: -12.626301765441895
    8. 'the' → logprob: -13.126301765441895
    9. 'edges' → logprob: -13.626301765441895
    10. 's' → logprob: -13.751301765441895

Token 309: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002655085874721408
    2. ' edges' → logprob: -6.877655029296875
    3. 'edges' → logprob: -7.377655029296875
    4. '   ' → logprob: -8.127655029296875
    5. '<|end|>' → logprob: -8.252655029296875
    6. ',' → logprob: -8.627655029296875
    7. '        
' → logprob: -9.502655029296875
    8. '           ' → logprob: -9.877655029296875
    9. ':' → logprob: -10.127655029296875
    10. '(edges' → logprob: -11.377655029296875

Token 310: ' same' (ID: 2684)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.18482322990894318
    2. '       ' → logprob: -2.1848232746124268
    3. 'edges' → logprob: -2.9348232746124268
    4. ' parts' → logprob: -6.559823036193848
    5. '           ' → logprob: -6.934823036193848
    6. '   ' → logprob: -8.184823036193848
    7. 'parts' → logprob: -9.434823036193848
    8. '.edges' → logprob: -9.872323036193848
    9. '```' → logprob: -9.997323036193848
    10. '_edges' → logprob: -10.247323036193848

Token 311: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5857873558998108
    2. 'edges' → logprob: -1.210787296295166
    3. '
' → logprob: -2.710787296295166
    4. ' edges' → logprob: -2.960787296295166
    5. '   ' → logprob: -4.210787296295166
    6. '           ' → logprob: -5.085787296295166
    7. '```' → logprob: -6.085787296295166
    8. '        
' → logprob: -6.960787296295166
    9. '(edges' → logprob: -7.710787296295166
    10. ':
' → logprob: -8.210787773132324

Token 312: ' above' (ID: 5151)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5958617925643921
    2. 'car' → logprob: -1.470861792564392
    3. ' edges' → logprob: -1.845861792564392
    4. ''' → logprob: -3.7208619117736816
    5. 'parts' → logprob: -4.345861911773682
    6. ' car' → logprob: -4.845861911773682
    7. 'move' → logprob: -5.845861911773682
    8. '   ' → logprob: -6.095861911773682
    9. ' parts' → logprob: -6.345861911773682
    10. 'for' → logprob: -6.720861911773682

Token 313: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024125272408127785
    2. ' edges' → logprob: -4.274125099182129
    3. 'edges' → logprob: -4.774125099182129
    4. '   ' → logprob: -7.649125099182129
    5. '        
' → logprob: -8.024125099182129
    6. '```' → logprob: -8.649125099182129
    7. '           ' → logprob: -9.149125099182129
    8. '
' → logprob: -9.274125099182129
    9. '(edges' → logprob: -9.524125099182129
    10. '<|end|>' → logprob: -9.774125099182129

Token 314: ' und' (ID: 844)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5387187004089355
    2. '       ' → logprob: -1.0387187004089355
    3. 'edges' → logprob: -2.7887187004089355
    4. '   ' → logprob: -7.7887187004089355
    5. '```' → logprob: -8.163719177246094
    6. '           ' → logprob: -8.538719177246094
    7. '(edges' → logprob: -9.913719177246094
    8. '.edges' → logprob: -10.163719177246094
    9. ' parts' → logprob: -10.288719177246094
    10. '        
' → logprob: -10.663719177246094

Token 315: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.5332866907119751
    2. 'edges' → logprob: -0.9082866907119751
    3. '_edges' → logprob: -6.1582865715026855
    4. 'ers' → logprob: -6.2832865715026855
    5. ' edges' → logprob: -6.4082865715026855
    6. 'er' → logprob: -6.4082865715026855
    7. 'efined' → logprob: -6.6582865715026855
    8. 'Edges' → logprob: -7.5332865715026855
    9. 'ed' → logprob: -8.658287048339844
    10. 'for' → logprob: -9.033287048339844

Token 316: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08398271352052689
    2. '   ' → logprob: -3.4589827060699463
    3. 'edges' → logprob: -3.8339827060699463
    4. ' edges' → logprob: -4.083982944488525
    5. '
' → logprob: -5.458982944488525
    6. '        
' → logprob: -6.083982944488525
    7. '```' → logprob: -7.208982944488525
    8. '.edges' → logprob: -7.458982944488525
    9. '           ' → logprob: -7.583982944488525
    10. '    
' → logprob: -7.708982944488525

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030857637524604797
    2. 'edges' → logprob: -4.030857563018799
    3. ' edges' → logprob: -4.405857563018799
    4. '   ' → logprob: -8.155858039855957
    5. '        
' → logprob: -10.030858039855957
    6. '```' → logprob: -10.155858039855957
    7. '(edges' → logprob: -11.155858039855957
    8. '           ' → logprob: -11.280858039855957
    9. '.edges' → logprob: -12.030858039855957
    10. '      ' → logprob: -13.030858039855957

Token 318: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.3326033651828766
    2. '       ' → logprob: -1.9576033353805542
    3. ' edges' → logprob: -1.9576033353805542
    4. '   ' → logprob: -7.832603454589844
    5. '.edges' → logprob: -9.832603454589844
    6. '(edges' → logprob: -10.207603454589844
    7. '
' → logprob: -11.082603454589844
    8. '        
' → logprob: -11.332603454589844
    9. ' ' → logprob: -11.832603454589844
    10. '```' → logprob: -12.082603454589844

Token 319: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '[cell' → logprob: -14.625000953674316
    3. '[cur' → logprob: -15.000000953674316
    4. '[c' → logprob: -16.125001907348633
    5. '```' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '\[' → logprob: -17.625001907348633
    8. '[col' → logprob: -18.000001907348633
    9. '[current' → logprob: -18.125001907348633
    10. '[user' → logprob: -18.500001907348633

Token 320: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.500004768371582
    3. ' car' → logprob: -13.750004768371582
    4. 'c' → logprob: -17.1250057220459
    5. '(car' → logprob: -17.2500057220459
    6. '	car' → logprob: -18.1250057220459
    7. '```' → logprob: -18.1250057220459
    8. 'Car' → logprob: -18.5000057220459
    9. '   ' → logprob: -19.1250057220459
    10. 'cars' → logprob: -19.5000057220459

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009262301027774811
    2. '2' → logprob: -7.1259260177612305
    3. 'car' → logprob: -9.62592601776123
    4. '[' → logprob: -10.25092601776123
    5. 's' → logprob: -12.00092601776123
    6. ']' → logprob: -12.12592601776123
    7. '```' → logprob: -12.75092601776123
    8. '   ' → logprob: -13.37592601776123
    9. ' car' → logprob: -13.75092601776123
    10. '][' → logprob: -14.12592601776123

Token 322: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0009667263948358595
    2. '.add' → logprob: -7.000966548919678
    3. '.' → logprob: -10.000967025756836
    4. ']' → logprob: -11.625967025756836
    5. ' ].' → logprob: -14.250967025756836
    6. '}.' → logprob: -15.750967025756836
    7. ' .' → logprob: -16.625967025756836
    8. ''].' → logprob: -17.375967025756836
    9. ').' → logprob: -17.500967025756836
    10. '   ' → logprob: -18.000967025756836

Token 323: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. ' add' → logprob: -18.75
    3. '.add' → logprob: -19.375
    4. 'append' → logprob: -19.75
    5. 'adde' → logprob: -22.0
    6. '	add' → logprob: -22.375
    7. 'ad' → logprob: -23.0
    8. 'update' → logprob: -23.625
    9. 'addi' → logprob: -23.75
    10. '   ' → logprob: -24.0

Token 324: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -1.5048530030981055e-06
    2. 'car' → logprob: -13.500001907348633
    3. '(' → logprob: -17.750001907348633
    4. '	car' → logprob: -18.375001907348633
    5. ' car' → logprob: -20.250001907348633
    6. '(Car' → logprob: -21.250001907348633
    7. '_car' → logprob: -21.375001907348633
    8. '(
' → logprob: -22.125001907348633
    9. '(c' → logprob: -22.375001907348633
    10. '/car' → logprob: -22.375001907348633

Token 325: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -18.25
    3. '
' → logprob: -18.5
    4. '[' → logprob: -18.625
    5. '۲' → logprob: -20.0
    6. '_' → logprob: -20.6875
    7. '₂' → logprob: -21.0625
    8. 's' → logprob: -21.4375
    9. '-' → logprob: -21.5
    10. '２' → logprob: -21.625

Token 326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519516944885254
    2. ')
' → logprob: -1.5019516944885254
    3. '       ' → logprob: -11.376951217651367
    4. ')
' → logprob: -12.001951217651367
    5. '   ' → logprob: -14.251951217651367
    6. ')

' → logprob: -14.376951217651367
    7. ' )' → logprob: -14.376951217651367
    8. 'edges' → logprob: -14.501951217651367
    9. ' )
' → logprob: -14.501951217651367
    10. '<|end|>' → logprob: -14.501951217651367

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1038961112499237
    2. 'edges' → logprob: -2.478896141052246
    3. ' edges' → logprob: -4.228896141052246
    4. '   ' → logprob: -8.478896141052246
    5. '(edges' → logprob: -10.353896141052246
    6. '.edges' → logprob: -10.728896141052246
    7. '           ' → logprob: -12.728896141052246
    8. '```' → logprob: -12.853896141052246
    9. '        
' → logprob: -12.978896141052246
    10. ' ' → logprob: -13.228896141052246

Token 328: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.0017198040150105953
    2. ' edges' → logprob: -6.376719951629639
    3. '       ' → logprob: -11.50171947479248
    4. '   ' → logprob: -12.00171947479248
    5. '.edges' → logprob: -14.12671947479248
    6. '(edges' → logprob: -15.25171947479248
    7. '           ' → logprob: -15.87671947479248
    8. 'car' → logprob: -16.376720428466797
    9. 'parts' → logprob: -17.251720428466797
    10. '```' → logprob: -17.626720428466797

Token 329: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. 'car' → logprob: -14.000000953674316
    3. 'edges' → logprob: -15.875000953674316
    4. '[c' → logprob: -17.500001907348633
    5. '```' → logprob: -17.500001907348633
    6. '][' → logprob: -17.750001907348633
    7. '(car' → logprob: -18.375001907348633
    8. '	car' → logprob: -18.875001907348633
    9. '[
' → logprob: -19.250001907348633
    10. '\[' → logprob: -20.000001907348633

Token 330: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: 0.0
    2. ' car' → logprob: -18.0
    3. 'c' → logprob: -19.75
    4. 'cars' → logprob: -19.75
    5. '(car' → logprob: -19.875
    6. '   ' → logprob: -21.0
    7. '[' → logprob: -21.25
    8. 'cat' → logprob: -21.375
    9. '
' → logprob: -21.5
    10. 'ca' → logprob: -22.0

Token 331: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. '1' → logprob: -13.125004768371582
    3. 's' → logprob: -13.500004768371582
    4. '[' → logprob: -14.250004768371582
    5. 'car' → logprob: -15.125004768371582
    6. '```' → logprob: -15.250004768371582
    7. '₂' → logprob: -16.0000057220459
    8. ']' → logprob: -17.1250057220459
    9. '   ' → logprob: -17.7500057220459
    10. ')' → logprob: -18.0000057220459

Token 332: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.006357462145388126
    2. '.add' → logprob: -5.506357669830322
    3. ').' → logprob: -7.131357669830322
    4. '.' → logprob: -7.631357669830322
    5. ']' → logprob: -7.756357669830322
    6. '}.' → logprob: -7.881357669830322
    7. '[' → logprob: -8.756357192993164
    8. ')' → logprob: -11.006357192993164
    9. ' ].' → logprob: -12.631357192993164
    10. ' .' → logprob: -12.756357192993164

Token 333: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. ' add' → logprob: -16.75
    3. '.add' → logprob: -18.25
    4. '	add' → logprob: -20.125
    5. '(add' → logprob: -21.25
    6. ')add' → logprob: -21.25
    7. 'adde' → logprob: -21.375
    8. 'append' → logprob: -22.125
    9. '_add' → logprob: -22.25
    10. 'adds' → logprob: -23.0

Token 334: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -4.842555426876061e-06
    2. 'car' → logprob: -12.250004768371582
    3. '(' → logprob: -18.6250057220459
    4. '(c' → logprob: -19.2500057220459
    5. '	car' → logprob: -19.7500057220459
    6. '(Car' → logprob: -21.0000057220459
    7. 'Car' → logprob: -22.0000057220459
    8. ' car' → logprob: -22.1250057220459
    9. '.car' → logprob: -22.5000057220459
    10. '(cat' → logprob: -23.0000057220459

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008182040764950216
    2. 'car' → logprob: -7.125818252563477
    3. '[' → logprob: -11.875818252563477
    4. ' car' → logprob: -12.125818252563477
    5. ')' → logprob: -15.000818252563477
    6. '(car' → logprob: -15.500818252563477
    7. '```' → logprob: -15.625818252563477
    8. '	car' → logprob: -16.250818252563477
    9. ']' → logprob: -16.500818252563477
    10. '[user' → logprob: -16.750818252563477

Token 336: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')
' → logprob: -12.50001049041748
    3. '}' → logprob: -13.25001049041748
    4. '   ' → logprob: -13.62501049041748
    5. '<|end|>' → logprob: -13.62501049041748
    6. ' )' → logprob: -14.00001049041748
    7. '       ' → logprob: -14.75001049041748
    8. '()' → logprob: -15.00001049041748
    9. '```' → logprob: -15.12501049041748
    10. '())' → logprob: -15.37501049041748

Token 337: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1452399045228958
    2. '   ' → logprob: -2.89523983001709
    3. '#' → logprob: -3.14523983001709
    4. 'from' → logprob: -3.64523983001709
    5. '    
' → logprob: -5.77023983001709
    6. ' visited' → logprob: -6.64523983001709
    7. '
' → logprob: -7.02023983001709
    8. 'def' → logprob: -7.52023983001709
    9. '```' → logprob: -7.77023983001709
    10. 'print' → logprob: -8.02023983001709

Token 338: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1006021499633789
    2. 'from' → logprob: -3.350602149963379
    3. '#' (adapté à ' #') → logprob: -3.725602149963379
    4. '   ' → logprob: -3.850602149963379
    5. 'components' → logprob: -5.600602149963379
    6. 'order' → logprob: -6.225602149963379
    7. 'def' → logprob: -6.350602149963379
    8. 'all' → logprob: -7.100602149963379
    9. 'result' → logprob: -7.225602149963379
    10. 'chains' → logprob: -7.600602149963379

Token 339: ' Find' (ID: 9764)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.07851327955722809
    2. '#' → logprob: -3.0785133838653564
    3. 'from' → logprob: -4.578513145446777
    4. 'all' → logprob: -5.328513145446777
    5. 'order' → logprob: -5.703513145446777
    6. 'def' → logprob: -6.203513145446777
    7. 'start' → logprob: -6.578513145446777
    8. 'used' → logprob: -6.828513145446777
    9. 'components' → logprob: -6.828513145446777
    10. 'seen' → logprob: -6.828513145446777

Token 340: ' the' (ID: 290)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.20033657550811768
    2. ' visited' → logprob: -2.075336456298828
    3. 'all' → logprob: -4.700336456298828
    4. '#' → logprob: -4.700336456298828
    5. 'chains' → logprob: -4.700336456298828
    6. 'order' → logprob: -5.325336456298828
    7. 'components' → logprob: -5.450336456298828
    8. 'start' → logprob: -5.700336456298828
    9. '   ' → logprob: -5.950336456298828
    10. 'def' → logprob: -6.325336456298828

Token 341: ' ends' (ID: 17095)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09010616689920425
    2. 'ends' → logprob: -2.590106248855591
    3. 'end' → logprob: -5.090106010437012
    4. 'visited' → logprob: -6.090106010437012
    5. 'starts' → logprob: -7.340106010437012
    6. 'all' → logprob: -7.340106010437012
    7. '#' → logprob: -7.715106010437012
    8. 'chain' → logprob: -8.215106010437012
    9. 'starting' → logprob: -8.965106010437012
    10. ' ends' → logprob: -9.215106010437012

Token 342: ' of' (ID: 328)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.007267155218869448
    2. '   ' → logprob: -5.257266998291016
    3. ' ends' → logprob: -6.632266998291016
    4. 'end' → logprob: -7.507266998291016
    5. 'nodes' → logprob: -9.257266998291016
    6. 'c' → logprob: -10.632266998291016
    7. 'starts' → logprob: -11.007266998291016
    8. 'start' → logprob: -12.507266998291016
    9. 'for' → logprob: -12.632266998291016
    10. '#' → logprob: -12.882266998291016

Token 343: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3077140152454376
    2. 'edges' → logprob: -1.6827139854431152
    3. ' the' → logprob: -2.9327139854431152
    4. ' edges' → logprob: -3.8077139854431152
    5. 'chain' → logprob: -7.182713985443115
    6. 'chains' → logprob: -7.307713985443115
    7. 'paths' → logprob: -7.432713985443115
    8. 'a' → logprob: -7.807713985443115
    9. ' chains' → logprob: -8.557714462280273
    10. ' chain' → logprob: -8.557714462280273

Token 344: ' train' (ID: 8513)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.40655162930488586
    2. 'path' → logprob: -2.2815515995025635
    3. ' chain' → logprob: -2.2815515995025635
    4. 'line' → logprob: -3.1565515995025635
    5. 'train' → logprob: -3.1565515995025635
    6. 'graph' → logprob: -3.5315515995025635
    7. ' line' → logprob: -5.406551837921143
    8. ' path' → logprob: -5.656551837921143
    9. ' graph' → logprob: -6.406551837921143
    10. 'chains' → logprob: -6.781551837921143

Token 345: ' -' (ID: 533)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.0006980192265473306
    2. '   ' → logprob: -7.875698089599609
    3. 'end' → logprob: -8.75069808959961
    4. ' ends' → logprob: -9.37569808959961
    5. 'starts' → logprob: -10.12569808959961
    6. 'start' → logprob: -10.87569808959961
    7. '#' → logprob: -12.75069808959961
    8. 'nodes' → logprob: -13.12569808959961
    9. 'for' → logprob: -13.25069808959961
    10. 'tails' → logprob: -13.62569808959961

Token 346: ' cars' (ID: 13653)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.0070878262631595135
    2. ' ends' → logprob: -5.132087707519531
    3. 'end' → logprob: -6.882087707519531
    4. 'start' → logprob: -9.757087707519531
    5. 'starts' → logprob: -10.257087707519531
    6. '#' → logprob: -11.507087707519531
    7. 'degree' → logprob: -12.132087707519531
    8. 'nodes' → logprob: -12.507087707519531
    9. ' endpoints' → logprob: -12.882087707519531
    10. 'queue' → logprob: -13.382087707519531

Token 347: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6361908316612244
    2. '=' → logprob: -1.3861908912658691
    3. 'with' → logprob: -2.011190891265869
    4. 'ends' → logprob: -3.011190891265869
    5. '   ' → logprob: -3.636190891265869
    6. 'that' → logprob: -5.761190891265869
    7. 'all' → logprob: -6.136190891265869
    8. '=end' → logprob: -6.136190891265869
    9. 'end' → logprob: -6.386190891265869
    10. 'which' → logprob: -7.136190891265869

Token 348: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.10067836195230484
    2. ' have' → logprob: -2.3506784439086914
    3. 'len' → logprob: -7.850678443908691
    4. 'appear' → logprob: -10.600678443908691
    5. 'in' → logprob: -10.850678443908691
    6. ' in' → logprob: -11.100678443908691
    7. '   ' → logprob: -11.725678443908691
    8. '_have' → logprob: -12.225678443908691
    9. 'has' → logprob: -12.850678443908691
    10. ' len' → logprob: -13.475678443908691

Token 349: ' only' (ID: 1606)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.13749001920223236
    2. 'only' → logprob: -2.3874900341033936
    3. '1' → logprob: -3.3874900341033936
    4. 'edges' → logprob: -6.2624897956848145
    5. 'exact' → logprob: -7.5124897956848145
    6. 'one' → logprob: -9.262490272521973
    7. ' only' → logprob: -9.387490272521973
    8. ' len' → logprob: -9.512490272521973
    9. 'degree' → logprob: -9.762490272521973
    10. 'neighbors' → logprob: -11.512490272521973

Token 350: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.10775943845510483
    2. '1' → logprob: -2.857759475708008
    3. ' one' → logprob: -3.107759475708008
    4. ' ' → logprob: -9.857759475708008
    5. '_one' → logprob: -12.232759475708008
    6. 'One' → logprob: -13.982759475708008
    7. 'len' → logprob: -16.482759475708008
    8. '   ' → logprob: -17.357759475708008
    9. '
' → logprob: -17.857759475708008
    10. 'ONE' → logprob: -18.107759475708008

Token 351: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0013250032206997275
    2. ' neighbor' → logprob: -6.7513251304626465
    3. 'neighbors' → logprob: -9.001324653625488
    4. 'connection' → logprob: -11.251324653625488
    5. 'edge' → logprob: -11.751324653625488
    6. 'adj' → logprob: -12.251324653625488
    7. '_neighbor' → logprob: -12.876324653625488
    8. ' neighbors' → logprob: -13.251324653625488
    9. '_neighbors' → logprob: -14.501324653625488
    10. '```' → logprob: -15.876324653625488

Token 352: '
' (ID: 198)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.0035613463260233402
    2. '   ' → logprob: -6.003561496734619
    3. 'end' → logprob: -6.878561496734619
    4. ' ends' → logprob: -10.003561019897461
    5. 'tails' → logprob: -12.253561019897461
    6. '```' → logprob: -13.503561019897461
    7. 'starts' → logprob: -13.628561019897461
    8. 'chain' → logprob: -14.753561019897461
    9. '    
' → logprob: -15.253561019897461
    10. 'start' → logprob: -15.503561019897461

Token 353: '   ' (ID: 271)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.019901929423213005
    2. '   ' → logprob: -4.269901752471924
    3. 'end' → logprob: -5.394901752471924
    4. ' ends' → logprob: -6.769901752471924
    5. '```' → logprob: -11.769902229309082
    6. 'starts' → logprob: -12.269902229309082
    7. ' endpoints' → logprob: -12.269902229309082
    8. '    
' → logprob: -12.394902229309082
    9. 'tails' → logprob: -12.519902229309082
    10. 'start' → logprob: -13.894902229309082

Token 354: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' (adapté à ' ends') → logprob: -0.0005426656571216881
    2. 'end' → logprob: -7.750542640686035
    3. ' ends' → logprob: -9.375542640686035
    4. '   ' → logprob: -11.125542640686035
    5. 'starts' → logprob: -12.375542640686035
    6. 'tails' → logprob: -12.750542640686035
    7. '```' → logprob: -13.125542640686035
    8. 'start' → logprob: -13.875542640686035
    9. 'chain' → logprob: -14.500542640686035
    10. 'heads' → logprob: -15.125542640686035

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759577751159668
    2. '=' → logprob: -0.8259577751159668
    3. '=[]' → logprob: -11.700958251953125
    4. 's' → logprob: -12.450958251953125
    5. '   ' → logprob: -12.575958251953125
    6. '=[' → logprob: -13.825958251953125
    7. '＝' → logprob: -15.075958251953125
    8. ' ' → logprob: -15.200958251953125
    9. '  ' → logprob: -15.450958251953125
    10. ' =[' → logprob: -15.825958251953125

Token 356: ' [' (ID: 723)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.38218095898628235
    2. '[' → logprob: -1.63218092918396
    3. '[k' → logprob: -2.88218092918396
    4. '[key' → logprob: -3.38218092918396
    5. '[i' → logprob: -5.132181167602539
    6. ' [' → logprob: -5.132181167602539
    7. '[name' → logprob: -5.382181167602539
    8. '[node' → logprob: -6.257181167602539
    9. '[a' → logprob: -6.257181167602539
    10. '[token' → logprob: -6.632181167602539

Token 357: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.014510054141283035
    2. 'node' → logprob: -4.264510154724121
    3. 'c' → logprob: -8.264510154724121
    4. 'k' → logprob: -9.639510154724121
    5. 'v' → logprob: -11.639510154724121
    6. 'x' → logprob: -12.014510154724121
    7. ' car' → logprob: -12.389510154724121
    8. 'key' → logprob: -12.389510154724121
    9. ' node' → logprob: -14.889510154724121
    10. 'cars' → logprob: -15.889510154724121

Token 358: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12693293392658234
    2. 'for' → logprob: -2.1269328594207764
    3. 'car' → logprob: -12.501933097839355
    4. ' car' → logprob: -14.376933097839355
    5. ' ' → logprob: -15.001933097839355
    6. '   ' → logprob: -16.25193214416504
    7. '
' → logprob: -16.37693214416504
    8. '	for' → logprob: -16.37693214416504
    9. 'k' → logprob: -16.62693214416504
    10. ' in' → logprob: -18.25193214416504

Token 359: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0024762547109276056
    2. ' car' → logprob: -6.002476215362549
    3. 'edges' → logprob: -15.127476692199707
    4. 'cars' → logprob: -15.252476692199707
    5. '(car' → logprob: -16.62747573852539
    6. '	car' → logprob: -18.12747573852539
    7. ' edges' → logprob: -18.25247573852539
    8. 'edge' → logprob: -18.62747573852539
    9. 'parts' → logprob: -19.87747573852539
    10. ',' → logprob: -20.25247573852539

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009377855458296835
    2. 'car' → logprob: -7.6259379386901855
    3. 'in' → logprob: -8.000937461853027
    4. ' in' → logprob: -9.125937461853027
    5. ' car' → logprob: -12.375937461853027
    6. ' ,' → logprob: -14.375937461853027
    7. ',in' → logprob: -14.875937461853027
    8. '(car' → logprob: -15.500937461853027
    9. ',c' → logprob: -16.000938415527344
    10. '	car' → logprob: -16.000938415527344

Token 361: ' neigh' (ID: 9109)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.032046061009168625
    2. 'nbr' → logprob: -3.78204607963562
    3. ' neighbors' → logprob: -5.282045841217041
    4. 'ne' → logprob: -5.782045841217041
    5. ' nbr' → logprob: -8.5320463180542
    6. 'nei' → logprob: -8.6570463180542
    7. ' neigh' → logprob: -9.1570463180542
    8. 'adj' → logprob: -9.9070463180542
    9. 'nb' → logprob: -9.9070463180542
    10. 'neighbor' → logprob: -11.5320463180542

Token 362: ' in' (ID: 306)
  Prédit: 'bors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bors' → logprob: -0.0010058967163786292
    2. 's' → logprob: -7.001006126403809
    3. 'bours' → logprob: -9.876006126403809
    4. 'b' → logprob: -10.501006126403809
    5. 'ors' → logprob: -11.626006126403809
    6. 'bor' → logprob: -12.626006126403809
    7. ' in' → logprob: -12.876006126403809
    8. 'ighbors' → logprob: -14.876006126403809
    9. 'bo' → logprob: -16.876005172729492
    10. 'hors' → logprob: -17.626005172729492

Token 363: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0024769625160843134
    2. ' edges' → logprob: -6.002477169036865
    3. '.edges' → logprob: -14.877476692199707
    4. '   ' → logprob: -15.252476692199707
    5. '(edges' → logprob: -15.752476692199707
    6. '```' → logprob: -16.502477645874023
    7. 'edge' → logprob: -16.502477645874023
    8. 'errors' → logprob: -16.877477645874023
    9. '
' → logprob: -17.252477645874023
    10. 'parts' → logprob: -17.627477645874023

Token 364: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0005564896273426712
    2. 'items' → logprob: -7.500556468963623
    3. 'if' → logprob: -13.000556945800781
    4. ' if' → logprob: -14.625556945800781
    5. '.' → logprob: -14.875556945800781
    6. '.iteritems' → logprob: -15.375556945800781
    7. ' .' → logprob: -16.50055694580078
    8. '   ' → logprob: -16.87555694580078
    9. ' items' → logprob: -18.12555694580078
    10. '	items' → logprob: -18.62555694580078

Token 365: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.029847231227905e-05
    2. 'if' → logprob: -9.750080108642578
    3. ' if' → logprob: -11.250080108642578
    4. 'items' → logprob: -12.000080108642578
    5. ')' → logprob: -13.250080108642578
    6. '   ' → logprob: -14.500080108642578
    7. '()]' → logprob: -15.250080108642578
    8. '.items' → logprob: -16.000080108642578
    9. ' ()' → logprob: -16.500080108642578
    10. '()
' → logprob: -17.000080108642578

Token 366: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16026607155799866
    2. ' if' → logprob: -1.9102660417556763
    3. '   ' → logprob: -10.160265922546387
    4. '	if' → logprob: -14.160265922546387
    5. '       ' → logprob: -14.285265922546387
    6. ' ' → logprob: -14.910265922546387
    7. '```' → logprob: -15.035265922546387
    8. ')' → logprob: -15.285265922546387
    9. '()' → logprob: -15.410265922546387
    10. '    ' → logprob: -15.535265922546387

Token 367: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.15310683415737e-05
    2. ' len' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.37502098083496
    4. '(len' → logprob: -19.50002098083496
    5. '	len' → logprob: -22.00002098083496
    6. ' ' → logprob: -22.87502098083496
    7. '
' → logprob: -23.25002098083496
    8. '  ' → logprob: -23.50002098083496
    9. 'le' → logprob: -24.00002098083496
    10. '=len' → logprob: -24.12502098083496

Token 368: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -1.6240566083070007e-06
    2. 'ne' → logprob: -13.375001907348633
    3. '(' → logprob: -16.750001907348633
    4. '(n' → logprob: -17.875001907348633
    5. ' (' → logprob: -19.000001907348633
    6. '/ne' → logprob: -19.875001907348633
    7. '```' → logprob: -20.125001907348633
    8. '(
' → logprob: -20.125001907348633
    9. '(le' → logprob: -21.500001907348633
    10. '(edges' → logprob: -21.625001907348633

Token 369: 'igh' (ID: 1251)
  Prédit: 'igh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igh' → logprob: -0.0007352970424108207
    2. 'gh' → logprob: -7.750735282897949
    3. 'ighbors' → logprob: -8.50073528289795
    4. '(ne' → logprob: -9.75073528289795
    5. 'ig' → logprob: -11.12573528289795
    6. '==' → logprob: -11.62573528289795
    7. '(' → logprob: -12.87573528289795
    8. '1' → logprob: -13.12573528289795
    9. 'IGH' → logprob: -13.25073528289795
    10. 'g' → logprob: -13.25073528289795

Token 370: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1730307638645172
    2. ')' → logprob: -1.9230307340621948
    3. ' ==' → logprob: -4.798030853271484
    4. ')==' → logprob: -5.423030853271484
    5. ']==' → logprob: -10.298030853271484
    6. '()' → logprob: -11.173030853271484
    7. ']' → logprob: -12.173030853271484
    8. '=' → logprob: -12.173030853271484
    9. '()==' → logprob: -12.423030853271484
    10. '}' → logprob: -13.798030853271484

Token 371: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07890389114618301
    2. ' ==' → logprob: -2.578903913497925
    3. ']==' → logprob: -11.828904151916504
    4. ')==' → logprob: -12.953904151916504
    5. '()==' → logprob: -13.828904151916504
    6. '1' → logprob: -13.953904151916504
    7. '==
' → logprob: -14.328904151916504
    8. '=' → logprob: -14.453904151916504
    9. '===' → logprob: -14.578904151916504
    10. ')' → logprob: -15.328904151916504

Token 372: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -18.750001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '
' → logprob: -20.500001907348633
    6. '۱' → logprob: -21.000001907348633
    7. 'exact' → logprob: -21.375001907348633
    8. '１' → logprob: -21.812501907348633
    9. '=' → logprob: -21.937501907348633
    10. '  ' → logprob: -21.937501907348633

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.625
    4. '   ' → logprob: -19.125
    5. '
' → logprob: -19.625
    6. '۱' → logprob: -21.0
    7. '2' → logprob: -21.1875
    8. '{' → logprob: -21.4375
    9. 'exact' → logprob: -21.5
    10. '１' → logprob: -21.75

Token 374: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.759734732331708e-05
    2. ' ]' → logprob: -11.125017166137695
    3. ')]' → logprob: -13.500017166137695
    4. ']
' → logprob: -13.875017166137695
    5. '()]' → logprob: -15.375017166137695
    6. ']

' → logprob: -15.750017166137695
    7. '   ' → logprob: -16.500017166137695
    8. ')' → logprob: -16.750017166137695
    9. '`]' → logprob: -16.875017166137695
    10. ' or' → logprob: -17.375017166137695

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9095358848571777
    2. 'visited' → logprob: -1.0345358848571777
    3. 'order' → logprob: -2.7845358848571777
    4. 'from' → logprob: -2.7845358848571777
    5. 'if' → logprob: -3.2845358848571777
    6. 'car' → logprob: -3.9095358848571777
    7. 'prev' → logprob: -4.159535884857178
    8. '#' → logprob: -4.909535884857178
    9. 'front' → logprob: -4.909535884857178
    10. 'pos' → logprob: -5.409535884857178

Token 376: ' #' (ID: 1069)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.848231315612793
    2. 'if' → logprob: -1.723231315612793
    3. 'train' → logprob: -1.973231315612793
    4. 'path' → logprob: -2.098231315612793
    5. 'sequence' → logprob: -2.723231315612793
    6. 'result' → logprob: -3.598231315612793
    7. 'chain' → logprob: -4.098231315612793
    8. 'from' → logprob: -5.348231315612793
    9. 'start' → logprob: -5.348231315612793
    10. 'res' → logprob: -5.348231315612793

Token 377: ' The' (ID: 623)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.7516177892684937
    2. 'if' → logprob: -1.1266177892684937
    3. 'start' → logprob: -2.376617908477783
    4. 'visited' → logprob: -3.001617908477783
    5. 'result' → logprob: -4.126617908477783
    6. 'path' → logprob: -4.501617908477783
    7. 'res' → logprob: -4.751617908477783
    8. 'sequence' → logprob: -5.001617908477783
    9. 'train' → logprob: -5.251617908477783
    10. 'from' → logprob: -5.376617908477783

Token 378: ' train' (ID: 8513)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5567916631698608
    2. 'start' → logprob: -1.4317916631698608
    3. 'result' → logprob: -3.3067917823791504
    4. 'from' → logprob: -3.3067917823791504
    5. 'train' → logprob: -3.4317917823791504
    6. 'sequence' → logprob: -3.9317917823791504
    7. 'order' → logprob: -4.05679178237915
    8. 'def' → logprob: -4.30679178237915
    9. ' if' → logprob: -4.80679178237915
    10. 'path' → logprob: -5.18179178237915

Token 379: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46354079246520996
    2. ' =' → logprob: -1.71354079246521
    3. 'car' → logprob: -2.96354079246521
    4. 'sequence' → logprob: -3.33854079246521
    5. 'order' → logprob: -3.46354079246521
    6. 'can' → logprob: -4.338541030883789
    7. 'cars' → logprob: -4.588541030883789
    8. 'starts' → logprob: -4.713541030883789
    9. 'is' → logprob: -4.963541030883789
    10. '=[]' → logprob: -5.463541030883789

Token 380: ' a' (ID: 261)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.5094153881072998
    2. '[]' → logprob: -1.8844153881072998
    3. ' ends' → logprob: -2.1344153881073
    4. '[' → logprob: -2.7594153881073
    5. ' []' → logprob: -3.5094153881073
    6. ' [' → logprob: -3.5094153881073
    7. '[]
' → logprob: -5.884415626525879
    8. '""' → logprob: -7.509415626525879
    9. ' []
' → logprob: -7.884415626525879
    10. '   ' → logprob: -8.259415626525879

Token 381: ' chain' (ID: 13464)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07585089653730392
    2. '[]' → logprob: -3.5758509635925293
    3. 'deque' → logprob: -3.7008509635925293
    4. ' list' → logprob: -4.200850963592529
    5. 'linear' → logprob: -6.075850963592529
    6. '[' → logprob: -6.700850963592529
    7. '[]
' → logprob: -7.950850963592529
    8. '[end' → logprob: -8.075850486755371
    9. '[list' → logprob: -8.075850486755371
    10. 'line' → logprob: -8.700850486755371

Token 382: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12125762552022934
    2. 'car' → logprob: -3.4962575435638428
    3. 'train' → logprob: -3.9962575435638428
    4. '
' → logprob: -4.121257781982422
    5. 'chain' → logprob: -4.246257781982422
    6. 'order' → logprob: -5.246257781982422
    7. ',' → logprob: -5.371257781982422
    8. 'start' → logprob: -5.371257781982422
    9. 'current' → logprob: -5.496257781982422
    10. 'sequence' → logprob: -5.621257781982422

Token 383: ' so' (ID: 813)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.13343526422977448
    2. ' start' → logprob: -2.6334352493286133
    3. 'visited' → logprob: -4.383435249328613
    4. 'result' → logprob: -4.633435249328613
    5. 'path' → logprob: -5.133435249328613
    6. ' path' → logprob: -5.258435249328613
    7. 'train' → logprob: -5.508435249328613
    8. '   ' → logprob: -5.883435249328613
    9. 'order' → logprob: -6.008435249328613
    10. 'chain' → logprob: -6.383435249328613

Token 384: ' exactly' (ID: 9707)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3205186128616333
    2. ' start' → logprob: -1.4455186128616333
    3. '   ' → logprob: -4.820518493652344
    4. '#' → logprob: -4.820518493652344
    5. 'current' → logprob: -4.820518493652344
    6. 'if' → logprob: -5.695518493652344
    7. ' current' → logprob: -5.945518493652344
    8. ' if' → logprob: -6.320518493652344
    9. ' #' → logprob: -6.320518493652344
    10. 'visited' → logprob: -6.570518493652344

Token 385: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11719448864459991
    2. 'two' → logprob: -2.367194414138794
    3. ' two' → logprob: -4.117194652557373
    4. ' ' → logprob: -7.992194652557373
    5. 'len' → logprob: -8.617194175720215
    6. '   ' → logprob: -10.367194175720215
    7. '```' → logprob: -13.617194175720215
    8. '_two' → logprob: -13.742194175720215
    9. ' len' → logprob: -14.492194175720215
    10. 'Two' → logprob: -15.242194175720215

Token 386: ' ends' (ID: 17095)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33776435256004333
    2. ' if' → logprob: -1.3377643823623657
    3. '.' → logprob: -4.962764263153076
    4. 'cars' → logprob: -5.087764263153076
    5. '   ' → logprob: -5.462764263153076
    6. 'ends' → logprob: -6.212764263153076
    7. 'assert' → logprob: -6.337764263153076
    8. ',' → logprob: -7.587764263153076
    9. '
' → logprob: -7.712764263153076
    10. 'print' → logprob: -7.837764263153076

Token 387: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8685150146484375
    2. '   ' → logprob: -1.1185150146484375
    3. '
' → logprob: -2.1185150146484375
    4. ' if' → logprob: -2.1185150146484375
    5. 'assert' → logprob: -5.4935150146484375
    6. '    
' → logprob: -5.7435150146484375
    7. ':' → logprob: -6.1185150146484375
    8. '.' → logprob: -6.8685150146484375
    9. ',' → logprob: -7.1185150146484375
    10. '<|end|>' → logprob: -7.7435150146484375

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9267463088035583
    2. 'if' → logprob: -0.9267463088035583
    3. 'start' → logprob: -1.8017463684082031
    4. '
' → logprob: -4.051746368408203
    5. ' if' → logprob: -4.301746368408203
    6. 'assert' → logprob: -5.926746368408203
    7. 'current' → logprob: -6.176746368408203
    8. 'car' → logprob: -6.676746368408203
    9. '    
' → logprob: -6.801746368408203
    10. 'train' → logprob: -6.926746368408203

Token 389: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10292980074882507
    2. '   ' → logprob: -2.9779298305511475
    3. 'assert' → logprob: -3.6029298305511475
    4. ' if' → logprob: -4.227929592132568
    5. 'start' → logprob: -5.602929592132568
    6. ' assert' → logprob: -7.977929592132568
    7. '
' → logprob: -8.227930068969727
    8. 'visited' → logprob: -8.852930068969727
    9. 'first' → logprob: -8.977930068969727
    10. 'prev' → logprob: -9.102930068969727

Token 390: ' We' (ID: 1416)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6614221930503845
    2. 'if' → logprob: -0.7864221930503845
    3. 'order' → logprob: -4.661422252655029
    4. 'assert' → logprob: -4.786422252655029
    5. 'path' → logprob: -5.536422252655029
    6. '   ' → logprob: -6.661422252655029
    7. 'visited' → logprob: -6.911422252655029
    8. 'current' → logprob: -7.161422252655029
    9. ' if' → logprob: -7.536422252655029
    10. 'result' → logprob: -7.536422252655029

Token 391: ' choose' (ID: 5655)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -1.7158708572387695
    2. 'if' → logprob: -1.8408708572387695
    3. ' need' → logprob: -1.8408708572387695
    4. ' if' → logprob: -2.2158708572387695
    5. 'start' → logprob: -2.3408708572387695
    6. ' can' → logprob: -2.7158708572387695
    7. 'need' → logprob: -3.0908708572387695
    8. ' continue' → logprob: -3.5908708572387695
    9. 'continue' → logprob: -3.5908708572387695
    10. ' will' → logprob: -4.2158708572387695

Token 392: ' one' (ID: 1001)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.5781556367874146
    2. 'start' → logprob: -0.8281556367874146
    3. 'starts' → logprob: -6.578155517578125
    4. ' ends' → logprob: -7.703155517578125
    5. ' start' → logprob: -8.828155517578125
    6. 'first' → logprob: -9.203155517578125
    7. 'end' → logprob: -9.953155517578125
    8. 'left' → logprob: -10.328155517578125
    9. 'current' → logprob: -11.578155517578125
    10. 'front' → logprob: -11.953155517578125

Token 393: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.08512230962514877
    2. 'start' → logprob: -2.7101223468780518
    3. ' =' → logprob: -4.710122108459473
    4. '=' → logprob: -6.210122108459473
    5. 'ends' → logprob: -6.585122108459473
    6. '=end' → logprob: -6.585122108459473
    7. ' end' → logprob: -8.210122108459473
    8. 'of' → logprob: -8.585122108459473
    9. '   ' → logprob: -8.710122108459473
    10. '=start' → logprob: -8.835122108459473

Token 394: ' to' (ID: 316)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.36465057730674744
    2. '   ' → logprob: -1.8646506071090698
    3. ' as' → logprob: -2.4896504878997803
    4. ' to' → logprob: -3.9896504878997803
    5. 'as' → logprob: -4.239650726318359
    6. 'current' → logprob: -4.489650726318359
    7. 'to' → logprob: -4.614650726318359
    8. ' start' → logprob: -5.364650726318359
    9. 'car' → logprob: -5.864650726318359
    10. 'train' → logprob: -6.864650726318359

Token 395: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.38943424820899963
    2. ' start' → logprob: -1.6394342184066772
    3. ' reconstruct' → logprob: -2.514434337615967
    4. 're' → logprob: -3.514434337615967
    5. 'dfs' → logprob: -5.014434337615967
    6. 'build' → logprob: -5.889434337615967
    7. 'visit' → logprob: -7.014434337615967
    8. 'output' → logprob: -7.014434337615967
    9. ' build' → logprob: -7.014434337615967
    10. 'print' → logprob: -7.014434337615967

Token 396: ' output' (ID: 4733)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.25114133954048157
    2. '   ' → logprob: -2.251141309738159
    3. 'current' → logprob: -3.376141309738159
    4. 'pos' → logprob: -3.626141309738159
    5. 'car' → logprob: -3.751141309738159
    6. 'node' → logprob: -4.376141548156738
    7. 'curr' → logprob: -5.001141548156738
    8. 'cur' → logprob: -5.626141548156738
    9. 'from' → logprob: -5.751141548156738
    10. 'train' → logprob: -6.001141548156738

Token 397: '

' (ID: 279)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.025086760520935
    2. 'pos' → logprob: -1.650086760520935
    3. 'current' → logprob: -2.0250868797302246
    4. '   ' → logprob: -2.1500868797302246
    5. 'start' → logprob: -2.2750868797302246
    6. 'cur' → logprob: -3.7750868797302246
    7. '
' → logprob: -4.150086879730225
    8. 'curr' → logprob: -4.525086879730225
    9. 'node' → logprob: -4.900086879730225
    10. ' car' → logprob: -5.025086879730225

Token 398: '   ' (ID: 271)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.15800108015537262
    2. 'result' → logprob: -3.533001184463501
    3. 'current' → logprob: -3.533001184463501
    4. 'order' → logprob: -3.908001184463501
    5. 'train' → logprob: -3.908001184463501
    6. '   ' → logprob: -4.158000946044922
    7. 'res' → logprob: -4.533000946044922
    8. 'path' → logprob: -5.158000946044922
    9. 'pos' → logprob: -5.658000946044922
    10. 'output' → logprob: -5.783000946044922

Token 399: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.07513073831796646
    2. 'order' → logprob: -3.4501307010650635
    3. 'path' → logprob: -4.325130939483643
    4. 'train' → logprob: -4.575130939483643
    5. 'res' → logprob: -5.200130939483643
    6. 'result' → logprob: -5.325130939483643
    7. 'current' → logprob: -5.700130939483643
    8. 'curr' → logprob: -6.700130939483643
    9. 'chain' → logprob: -7.450130939483643
    10. 'sequence' → logprob: -7.450130939483643

Token 400: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300662875175476
    2. '=' → logprob: -3.168006658554077
    3. ',' → logprob: -12.043006896972656
    4. '_' → logprob: -14.418006896972656
    5. '=end' → logprob: -14.793006896972656
    6. ')' → logprob: -15.543006896972656
    7. ' ' → logprob: -15.668006896972656
    8. '=start' → logprob: -16.543006896972656
    9. 'car' → logprob: -17.543006896972656
    10. '   ' → logprob: -17.668006896972656

Token 401: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -2.1888679839321412e-05
    2. ' ends' → logprob: -10.750021934509277
    3. 'edges' → logprob: -15.375021934509277
    4. 'parts' → logprob: -15.750021934509277
    5. '   ' → logprob: -18.12502098083496
    6. 'Ends' → logprob: -18.12502098083496
    7. 'end' → logprob: -18.87502098083496
    8. 'starts' → logprob: -19.12502098083496
    9. 'ents' → logprob: -19.50002098083496
    10. 'ENDS' → logprob: -19.87502098083496

Token 402: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -15.875
    3. ' [' → logprob: -18.875
    4. '```' → logprob: -19.0
    5. '][' → logprob: -19.625
    6. 's' → logprob: -20.25
    7. '\[' → logprob: -21.0
    8. '(' → logprob: -21.0
    9. '   ' → logprob: -21.125
    10. '()[' → logprob: -21.875

Token 403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '-' → logprob: -16.625
    4. '[' → logprob: -17.75
    5. '   ' → logprob: -18.5
    6. '
' → logprob: -19.25
    7. '```' → logprob: -19.5
    8. '۰' → logprob: -19.75
    9. '1' → logprob: -19.9375
    10. '０' → logprob: -21.0625

Token 404: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024962294846773148
    2. ' ]' → logprob: -6.627496242523193
    3. ']
' → logprob: -7.127496242523193
    4. '
' → logprob: -8.127495765686035
    5. ')' → logprob: -9.877495765686035
    6. ']

' → logprob: -11.752495765686035
    7. '<|end|>' → logprob: -12.502495765686035
    8. '```' → logprob: -13.502495765686035
    9. 'for' → logprob: -14.002495765686035
    10. '}' → logprob: -14.127495765686035

Token 405: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6985966563224792
    2. 'order' → logprob: -0.9485966563224792
    3. 'train' → logprob: -2.823596715927124
    4. 'res' → logprob: -3.823596715927124
    5. 'output' → logprob: -4.073596477508545
    6. 'sequence' → logprob: -4.698596477508545
    7. '   ' → logprob: -5.573596477508545
    8. 'chain' → logprob: -6.073596477508545
    9. 'ordered' → logprob: -7.448596477508545
    10. 'path' → logprob: -8.073596954345703

Token 406: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3106335699558258
    2. 'order' → logprob: -1.5606335401535034
    3. 'res' → logprob: -3.060633659362793
    4. 'train' → logprob: -5.060633659362793
    5. 'sequence' → logprob: -6.310633659362793
    6. 'output' → logprob: -6.810633659362793
    7. 'path' → logprob: -8.310633659362793
    8. 'ordered' → logprob: -8.560633659362793
    9. 'chain' → logprob: -8.685633659362793
    10. 'ordering' → logprob: -9.310633659362793

Token 407: ' Re' (ID: 907)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.6138157844543457
    2. 'result' → logprob: -1.1138157844543457
    3. 'res' → logprob: -2.1138157844543457
    4. 'train' → logprob: -5.738815784454346
    5. 'sequence' → logprob: -6.238815784454346
    6. 'ordered' → logprob: -6.363815784454346
    7. 'visited' → logprob: -6.738815784454346
    8. 'from' → logprob: -7.488815784454346
    9. 'output' → logprob: -8.363815307617188
    10. 'chain' → logprob: -8.613815307617188

Token 408: 'construct' (ID: 17936)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07433836907148361
    2. 'constructed' → logprob: -2.699338436126709
    3. 'ordered' → logprob: -6.699338436126709
    4. 'order' → logprob: -6.824338436126709
    5. 'construction' → logprob: -7.074338436126709
    6. 'result' → logprob: -7.824338436126709
    7. 'built' → logprob: -8.69933795928955
    8. 'visited' → logprob: -8.82433795928955
    9. 'construct' → logprob: -9.57433795928955
    10. 'cons' → logprob: -9.69933795928955

Token 409: ' the' (ID: 290)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.2749090790748596
    2. 'train' → logprob: -2.274909019470215
    3. 'result' → logprob: -2.399909019470215
    4. 'chain' → logprob: -4.149909019470215
    5. 'res' → logprob: -4.524909019470215
    6. 'sequence' → logprob: -4.774909019470215
    7. 'path' → logprob: -5.024909019470215
    8. ' order' → logprob: -6.524909019470215
    9. '   ' → logprob: -7.274909019470215
    10. 'output' → logprob: -7.399909019470215

Token 410: ' order' (ID: 2569)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.11613909155130386
    2. 'order' → logprob: -2.8661391735076904
    3. 'result' → logprob: -3.4911391735076904
    4. 'chain' → logprob: -4.491138935089111
    5. 'sequence' → logprob: -4.866138935089111
    6. 'res' → logprob: -6.491138935089111
    7. 'path' → logprob: -6.741138935089111
    8. 'route' → logprob: -8.61613941192627
    9. 'ordered' → logprob: -8.74113941192627
    10. ' train' → logprob: -9.86613941192627

Token 411: ' by' (ID: 656)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.13063834607601166
    2. 'result' → logprob: -2.505638360977173
    3. '   ' → logprob: -3.505638360977173
    4. ' order' → logprob: -5.755638122558594
    5. 'output' → logprob: -6.005638122558594
    6. 'sequence' → logprob: -6.630638122558594
    7. 'train' → logprob: -6.755638122558594
    8. 'res' → logprob: -7.005638122558594
    9. 'ordered' → logprob: -7.130638122558594
    10. 'answer' → logprob: -8.380638122558594

Token 412: ' walking' (ID: 15015)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5962777733802795
    2. 'dfs' → logprob: -1.7212777137756348
    3. '[' → logprob: -2.4712777137756348
    4. ' visiting' → logprob: -3.0962777137756348
    5. '[]' → logprob: -3.3462777137756348
    6. 'deque' → logprob: -3.3462777137756348
    7. 'result' → logprob: -4.346277713775635
    8. ' dfs' → logprob: -4.596277713775635
    9. '[]
' → logprob: -4.846277713775635
    10. ' bfs' → logprob: -5.096277713775635

Token 413: ' along' (ID: 4251)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.17028848826885223
    2. 'along' → logprob: -2.670288562774658
    3. ' through' → logprob: -3.045288562774658
    4. 'from' → logprob: -3.795288562774658
    5. ' along' → logprob: -4.670288562774658
    6. 'current' → logprob: -5.420288562774658
    7. 'down' → logprob: -6.670288562774658
    8. '   ' → logprob: -7.295288562774658
    9. 'prev' → logprob: -7.420288562774658
    10. 'visited' → logprob: -7.795288562774658

Token 414: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.05143957585096359
    2. 'the' → logprob: -3.3014395236968994
    3. ' edges' → logprob: -4.9264397621154785
    4. '[' → logprob: -6.0514397621154785
    5. 'parts' → logprob: -6.5514397621154785
    6. 'neighbors' → logprob: -7.0514397621154785
    7. ' the' → logprob: -7.6764397621154785
    8. 'start' → logprob: -8.05143928527832
    9. '[start' → logprob: -8.30143928527832
    10. '[]' → logprob: -9.92643928527832

Token 415: '
' (ID: 198)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.08971478790044785
    2. 'result' → logprob: -2.589714765548706
    3. '   ' → logprob: -5.089715003967285
    4. 'output' → logprob: -7.089715003967285
    5. 'res' → logprob: -7.339715003967285
    6. 'sequence' → logprob: -7.464715003967285
    7. 'ordered' → logprob: -7.464715003967285
    8. 'train' → logprob: -7.589715003967285
    9. '
' → logprob: -7.839715003967285
    10. ' order' → logprob: -7.839715003967285

Token 416: '   ' (ID: 271)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.06298767030239105
    2. 'result' → logprob: -3.0629875659942627
    3. '   ' → logprob: -4.937987804412842
    4. 'res' → logprob: -5.312987804412842
    5. ' order' → logprob: -7.437987804412842
    6. 'path' → logprob: -7.562987804412842
    7. 'output' → logprob: -8.062987327575684
    8. 'ordered' → logprob: -8.562987327575684
    9. 'sequence' → logprob: -8.812987327575684
    10. 'train' → logprob: -9.312987327575684

Token 417: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.007355901878327131
    2. 'result' → logprob: -5.007355690002441
    3. 'res' → logprob: -7.882355690002441
    4. '   ' → logprob: -9.007355690002441
    5. 'train' → logprob: -10.132355690002441
    6. 'output' → logprob: -10.257355690002441
    7. ' order' → logprob: -10.632355690002441
    8. 'ordered' → logprob: -11.257355690002441
    9. 'path' → logprob: -11.507355690002441
    10. 'sequence' → logprob: -12.382355690002441

Token 418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008617054671049118
    2. '=' → logprob: -4.758616924285889
    3. ',' → logprob: -14.258617401123047
    4. ' ' → logprob: -14.383617401123047
    5. '=[]' → logprob: -14.383617401123047
    6. '=[]
' → logprob: -15.258617401123047
    7. '   ' → logprob: -16.008617401123047
    8. '  ' → logprob: -16.508617401123047
    9. '[' → logprob: -16.508617401123047
    10. ' =[' → logprob: -16.758617401123047

Token 419: ' [' (ID: 723)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0007213685312308371
    2. '[' → logprob: -7.250721454620361
    3. '[end' → logprob: -12.125720977783203
    4. '[first' → logprob: -13.625720977783203
    5. '[next' → logprob: -14.125720977783203
    6. '[str' → logprob: -14.875720977783203
    7. '[result' → logprob: -14.875720977783203
    8. ' [' → logprob: -15.000720977783203
    9. '[left' → logprob: -15.375720977783203
    10. '[]
' → logprob: -15.500720977783203

Token 420: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: 0.0
    2. ' start' → logprob: -17.0
    3. '   ' → logprob: -21.375
    4. '[start' → logprob: -22.25
    5. '
' → logprob: -23.75
    6. ' ' → logprob: -24.5
    7. 'starts' → logprob: -25.375
    8. '	start' → logprob: -25.375
    9. '(start' → logprob: -26.25
    10. '  ' → logprob: -26.375

Token 421: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3134956657886505
    2. ']
' → logprob: -1.3134956359863281
    3. ']

' → logprob: -9.438495635986328
    4. ' ]' → logprob: -9.563495635986328
    5. ' ]
' → logprob: -9.938495635986328
    6. ']
' → logprob: -10.313495635986328
    7. '
' → logprob: -14.188495635986328
    8. ',' → logprob: -14.438495635986328
    9. '[' → logprob: -14.938495635986328
    10. '   ' → logprob: -15.563495635986328

Token 422: '   ' (ID: 271)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.10013635456562042
    2. ' prev' → logprob: -2.9751362800598145
    3. 'current' → logprob: -3.4751362800598145
    4. '   ' → logprob: -4.7251362800598145
    5. ' current' → logprob: -6.2251362800598145
    6. '
' → logprob: -6.6001362800598145
    7. 'last' → logprob: -7.9751362800598145
    8. ' last' → logprob: -9.100136756896973
    9. '    
' → logprob: -9.225136756896973
    10. 'curr' → logprob: -9.225136756896973

Token 423: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.0011728443205356598
    2. 'current' → logprob: -7.00117301940918
    3. 'while' → logprob: -8.50117301940918
    4. ' prev' → logprob: -10.00117301940918
    5. 'visited' → logprob: -12.12617301940918
    6. 'last' → logprob: -13.00117301940918
    7. 'previous' → logprob: -13.12617301940918
    8. 'curr' → logprob: -13.75117301940918
    9. 'cur' → logprob: -14.75117301940918
    10. '   ' → logprob: -14.87617301940918

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012512356042861938
    2. ' =' → logprob: -4.38751220703125
    3. ',' → logprob: -13.51251220703125
    4. '=None' → logprob: -13.76251220703125
    5. '_' → logprob: -15.63751220703125
    6. '_=' → logprob: -16.63751220703125
    7. ' ' → logprob: -17.38751220703125
    8. ')' → logprob: -17.63751220703125
    9. 'None' → logprob: -17.88751220703125
    10. 's' → logprob: -18.38751220703125

Token 425: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.583550642360933e-05
    2. ' None' → logprob: -10.250036239624023
    3. 'start' → logprob: -15.000036239624023
    4. '''' → logprob: -17.125036239624023
    5. '   ' → logprob: -17.875036239624023
    6. ' ' → logprob: -18.625036239624023
    7. 'none' → logprob: -18.750036239624023
    8. '""' → logprob: -19.750036239624023
    9. '  ' → logprob: -19.875036239624023
    10. '_None' → logprob: -19.875036239624023

Token 426: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07452492415904999
    2. '   ' → logprob: -3.1995248794555664
    3. 'while' → logprob: -4.324524879455566
    4. ' current' → logprob: -5.199524879455566
    5. 'next' → logprob: -5.199524879455566
    6. 'curr' → logprob: -5.574524879455566
    7. 'cur' → logprob: -7.074524879455566
    8. ' while' → logprob: -7.449524879455566
    9. '    
' → logprob: -7.449524879455566
    10. 'for' → logprob: -8.574524879455566

Token 427: '   ' (ID: 271)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16397571563720703
    2. 'while' → logprob: -2.163975715637207
    3. '   ' → logprob: -4.163975715637207
    4. ' current' → logprob: -4.788975715637207
    5. ' while' → logprob: -5.538975715637207
    6. 'curr' → logprob: -5.538975715637207
    7. '
' → logprob: -6.663975715637207
    8. 'cur' → logprob: -6.913975715637207
    9. 'for' → logprob: -7.163975715637207
    10. 'next' → logprob: -7.288975715637207

Token 428: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.06102808192372322
    2. 'while' → logprob: -3.186028003692627
    3. 'curr' → logprob: -4.311028003692627
    4. 'cur' → logprob: -5.686028003692627
    5. ' current' → logprob: -8.061028480529785
    6. 'next' → logprob: -8.436028480529785
    7. 'start' → logprob: -8.561028480529785
    8. 'for' → logprob: -8.561028480529785
    9. ' while' → logprob: -9.811028480529785
    10. '
' → logprob: -10.311028480529785

Token 429: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. '=start' → logprob: -15.701414108276367
    4. ',' → logprob: -15.951414108276367
    5. '=end' → logprob: -15.951414108276367
    6. ' ' → logprob: -16.451414108276367
    7. ')' → logprob: -17.826414108276367
    8. '<|end|>' → logprob: -18.076414108276367
    9. ' =
' → logprob: -19.076414108276367
    10. 's' → logprob: -19.201414108276367

Token 430: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0008065330912359059
    2. ' start' → logprob: -7.1258063316345215
    3. 'starts' → logprob: -14.00080680847168
    4. 'order' → logprob: -14.25080680847168
    5. 'ends' → logprob: -15.25080680847168
    6. 'orders' → logprob: -16.37580680847168
    7. 'end' → logprob: -16.75080680847168
    8. '	start' → logprob: -17.50080680847168
    9. ' ' → logprob: -17.75080680847168
    10. '   ' → logprob: -17.87580680847168

Token 431: '

' (ID: 279)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8723108172416687
    2. 'while' → logprob: -1.3723108768463135
    3. '
' → logprob: -1.7473108768463135
    4. '   ' → logprob: -1.9973108768463135
    5. '    
' → logprob: -4.247310638427734
    6. '<|end|>' → logprob: -6.622310638427734
    7. '  
' → logprob: -7.247310638427734
    8. ' 
' → logprob: -7.247310638427734
    9. ' next' → logprob: -8.122310638427734
    10. '	while' → logprob: -8.497310638427734

Token 432: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07807577401399612
    2. '   ' → logprob: -2.828075885772705
    3. 'current' → logprob: -4.953075885772705
    4. ' while' → logprob: -5.078075885772705
    5. 'next' → logprob: -6.203075885772705
    6. '    
' → logprob: -8.203075408935547
    7. '```' → logprob: -8.703075408935547
    8. 'for' → logprob: -9.328075408935547
    9. '
' → logprob: -9.953075408935547
    10. '	while' → logprob: -10.953075408935547

Token 433: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.000536232371814549
    2. ' while' → logprob: -8.25053596496582
    3. 'next' → logprob: -9.12553596496582
    4. 'for' → logprob: -9.37553596496582
    5. 'current' → logprob: -9.87553596496582
    6. '   ' → logprob: -10.50053596496582
    7. '```' → logprob: -14.50053596496582
    8. '    
' → logprob: -14.62553596496582
    9. '
' → logprob: -14.62553596496582
    10. 'neighbors' → logprob: -15.12553596496582

Token 434: ' True' (ID: 6432)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.010517957620322704
    2. ' len' → logprob: -5.1355180740356445
    3. 'True' → logprob: -5.7605180740356445
    4. 'current' → logprob: -7.1355180740356445
    5. 'edges' → logprob: -7.6355180740356445
    6. ' True' → logprob: -9.010518074035645
    7. ' edges' → logprob: -11.260518074035645
    8. '(len' → logprob: -12.260518074035645
    9. ' current' → logprob: -12.385518074035645
    10. 'order' → logprob: -13.010518074035645

Token 435: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03169377148151398
    2. ':
' → logprob: -3.656693696975708
    3. '       ' → logprob: -5.406693935394287
    4. '   ' → logprob: -7.156693935394287
    5. '=' → logprob: -10.781693458557129
    6. ':

' → logprob: -11.031693458557129
    7. '):
' → logprob: -11.406693458557129
    8. ',' → logprob: -11.531693458557129
    9. ' and' → logprob: -11.531693458557129
    10. '):' → logprob: -11.531693458557129

Token 436: '       ' (ID: 309)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.4751700162887573
    2. '       ' → logprob: -1.2251700162887573
    3. '   ' → logprob: -2.600170135498047
    4. 'next' → logprob: -5.600170135498047
    5. 'ne' → logprob: -5.725170135498047
    6. ' neighbors' → logprob: -5.975170135498047
    7. '```' → logprob: -7.350170135498047
    8. '_neighbors' → logprob: -10.350170135498047
    9. 'nei' → logprob: -11.100170135498047
    10. ' next' → logprob: -11.475170135498047

Token 437: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.3218931555747986
    2. '       ' → logprob: -1.3218932151794434
    3. 'ne' → logprob: -5.821893215179443
    4. '   ' → logprob: -5.946893215179443
    5. 'next' → logprob: -5.946893215179443
    6. ' neighbors' → logprob: -8.071892738342285
    7. 'neighbor' → logprob: -9.821892738342285
    8. 'nei' → logprob: -10.821892738342285
    9. 'found' → logprob: -12.321892738342285
    10. 'nbr' → logprob: -12.821892738342285

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687896728515625
    2. '=' → logprob: -1.1368789672851562
    3. '   ' → logprob: -12.261878967285156
    4. '=current' → logprob: -14.011878967285156
    5. 's' → logprob: -14.136878967285156
    6. 'for' → logprob: -14.761878967285156
    7. 'current' → logprob: -14.761878967285156
    8. ':' → logprob: -14.886878967285156
    9. ' ' → logprob: -16.761878967285156
    10. '.' → logprob: -16.761878967285156

Token 439: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0018114368431270123
    2. 'list' → logprob: -6.751811504364014
    3. ' edges' → logprob: -7.376811504364014
    4. '(edges' → logprob: -12.251811027526855
    5. ' list' → logprob: -12.751811027526855
    6. '[' → logprob: -12.751811027526855
    7. '   ' → logprob: -13.126811027526855
    8. 'edge' → logprob: -13.626811027526855
    9. '.edges' → logprob: -14.376811027526855
    10. 'Edges' → logprob: -15.751811027526855

Token 440: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.0280383548888494e-06
    2. 'current' → logprob: -14.000000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[cur' → logprob: -17.625001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '[curr' → logprob: -19.750001907348633
    7. '.get' → logprob: -20.500001907348633
    8. ' [' → logprob: -21.875001907348633
    9. '=current' → logprob: -21.875001907348633
    10. '[c' → logprob: -22.000001907348633

Token 441: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3022766709327698
    2. ' -' → logprob: -1.552276611328125
    3. ']' → logprob: -3.052276611328125
    4. '-copy' → logprob: -7.177276611328125
    5. '.copy' → logprob: -7.427276611328125
    6. ']-' → logprob: -8.302276611328125
    7. '].' → logprob: -8.677276611328125
    8. 'copy' → logprob: -10.302276611328125
    9. ']
' → logprob: -11.427276611328125
    10. '-set' → logprob: -11.802276611328125

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05312228947877884
    2. 'next' → logprob: -3.0531222820281982
    3. ' next' → logprob: -5.803122520446777
    4. '        
' → logprob: -7.428122520446777
    5. 'for' → logprob: -8.553122520446777
    6. 'neighbors' → logprob: -9.053122520446777
    7. ' for' → logprob: -9.178122520446777
    8. '[next' → logprob: -9.428122520446777
    9. '.next' → logprob: -9.553122520446777
    10. 'current' → logprob: -9.803122520446777

Token 443: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.0004938178462907672
    2. '       ' → logprob: -8.000494003295898
    3. ' nxt' → logprob: -9.500494003295898
    4. ' next' → logprob: -10.250494003295898
    5. 'neighbor' → logprob: -10.750494003295898
    6. 'if' → logprob: -11.750494003295898
    7. '        
' → logprob: -12.250494003295898
    8. 'neighbors' → logprob: -12.250494003295898
    9. 'n' → logprob: -12.625494003295898
    10. '[next' → logprob: -13.750494003295898

Token 444: '_car' (ID: 62991)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.9603663086891174
    2. '_' → logprob: -1.8353662490844727
    3. ' =' → logprob: -2.3353662490844727
    4. '_nodes' → logprob: -2.4603662490844727
    5. '_car' → logprob: -2.5853662490844727
    6. '=' → logprob: -2.8353662490844727
    7. '_candidates' → logprob: -3.0853662490844727
    8. 'car' → logprob: -3.2103662490844727
    9. '_neighbors' → logprob: -3.4603662490844727
    10. '_=' → logprob: -5.210366249084473

Token 445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16034181416034698
    2. ' =' → logprob: -1.9103418588638306
    3. 's' → logprob: -9.2853422164917
    4. '=None' → logprob: -10.7853422164917
    5. '_candidates' → logprob: -14.1603422164917
    6. ' ' → logprob: -14.5353422164917
    7. 'for' → logprob: -14.9103422164917
    8. ' None' → logprob: -14.9103422164917
    9. 'None' → logprob: -15.0353422164917
    10. '   ' → logprob: -15.0353422164917

Token 446: ' None' (ID: 4662)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.1278858631849289
    2. 'next' → logprob: -2.5028858184814453
    3. 'None' → logprob: -4.377885818481445
    4. '(None' → logprob: -4.627885818481445
    5. '[next' → logprob: -4.877885818481445
    6. '(ne' → logprob: -5.877885818481445
    7. 'neighbors' → logprob: -6.252885818481445
    8. '[' → logprob: -6.752885818481445
    9. ' (' → logprob: -7.377885818481445
    10. '(list' → logprob: -7.627885818481445

Token 447: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3038555383682251
    2. ' for' → logprob: -1.428855538368225
    3. 'for' → logprob: -3.9288554191589355
    4. '<|end|>' → logprob: -6.5538554191589355
    5. '   ' → logprob: -7.5538554191589355
    6. '	for' → logprob: -7.8038554191589355
    7. '        
' → logprob: -8.553855895996094
    8. '        ' → logprob: -10.178855895996094
    9. ')' → logprob: -10.553855895996094
    10. ' 
' → logprob: -10.928855895996094

Token 448: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42247891426086426
    2. 'for' → logprob: -1.4224789142608643
    3. '       ' → logprob: -2.2974789142608643
    4. '<|end|>' → logprob: -6.922478675842285
    5. '        
' → logprob: -8.047478675842285
    6. '        ' → logprob: -8.172478675842285
    7. '   ' → logprob: -8.172478675842285
    8. ' 
' → logprob: -8.297478675842285
    9. ' ' → logprob: -8.422478675842285
    10. '    ' → logprob: -9.172478675842285

Token 449: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20692770183086395
    2. '       ' → logprob: -1.7069276571273804
    3. ' for' → logprob: -5.20692777633667
    4. '   ' → logprob: -10.956927299499512
    5. '[' → logprob: -13.956927299499512
    6. '        
' → logprob: -14.456927299499512
    7. '
' → logprob: -14.456927299499512
    8. '	for' → logprob: -15.081927299499512
    9. '[next' → logprob: -15.331927299499512
    10. 'next' → logprob: -15.706927299499512

Token 450: ' neigh' (ID: 9109)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.08810339123010635
    2. 'nbr' → logprob: -3.0881032943725586
    3. 'nb' → logprob: -3.5881032943725586
    4. 'nei' → logprob: -5.463103294372559
    5. 'n' → logprob: -5.713103294372559
    6. 'ne' → logprob: -6.338103294372559
    7. ' neighbor' → logprob: -6.838103294372559
    8. ' neigh' → logprob: -7.588103294372559
    9. 'node' → logprob: -9.963103294372559
    10. 'car' → logprob: -10.588103294372559

Token 451: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0833294540643692
    2. 'in' → logprob: -2.583329439163208
    3. 'or' → logprob: -5.458329677581787
    4. '       ' → logprob: -9.958329200744629
    5. 's' → logprob: -10.208329200744629
    6. '   ' → logprob: -10.583329200744629
    7. 'ors' → logprob: -11.458329200744629
    8. '	in' → logprob: -11.583329200744629
    9. 'bor' → logprob: -11.958329200744629
    10. ' ' → logprob: -11.958329200744629

Token 452: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -2.2200749754119897e-06
    2. ' neighbors' → logprob: -13.375001907348633
    3. 'ne' → logprob: -14.500001907348633
    4. 'edges' → logprob: -16.500001907348633
    5. 'neighbor' → logprob: -18.500001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '_neighbors' → logprob: -19.375001907348633
    8. '(ne' → logprob: -19.500001907348633
    9. 'sorted' → logprob: -20.250001907348633
    10. 'neur' → logprob: -20.750001907348633

Token 453: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5485703945159912
    2. ':
' → logprob: -1.0485703945159912
    3. '           ' → logprob: -3.173570394515991
    4. ' if' → logprob: -4.42357063293457
    5. '       ' → logprob: -4.79857063293457
    6. '<|end|>' → logprob: -5.29857063293457
    7. '<|end|>' → logprob: -6.54857063293457
    8. 'if' → logprob: -6.92357063293457
    9. ',' → logprob: -7.17357063293457
    10. '():
' → logprob: -8.04857063293457

Token 454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025784267112612724
    2. ' if' → logprob: -3.7757842540740967
    3. 'if' → logprob: -6.025784492492676
    4. '```' → logprob: -10.525784492492676
    5. '       ' → logprob: -10.650784492492676
    6. '   ' → logprob: -11.025784492492676
    7. ',' → logprob: -11.150784492492676
    8. '<|end|>' → logprob: -11.775784492492676
    9. ' that' → logprob: -11.900784492492676
    10. '<|end|>' → logprob: -12.150784492492676

Token 455: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07687581330537796
    2. 'if' (adapté à ' if') → logprob: -2.701875925064087
    3. '           ' → logprob: -5.326875686645508
    4. '               ' → logprob: -6.201875686645508
    5. '       ' → logprob: -10.701875686645508
    6. '```' → logprob: -12.576875686645508
    7. '   ' → logprob: -13.326875686645508
    8. '	if' → logprob: -13.951875686645508
    9. '	       ' → logprob: -13.951875686645508
    10. ',' → logprob: -15.201875686645508

Token 456: ' neigh' (ID: 9109)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.0005818653153255582
    2. ' neigh' → logprob: -7.500581741333008
    3. '   ' → logprob: -11.500581741333008
    4. '(ne' → logprob: -12.125581741333008
    5. 'neq' → logprob: -12.125581741333008
    6. ' ne' → logprob: -12.750581741333008
    7. 'neh' → logprob: -14.125581741333008
    8. '  ' → logprob: -14.500581741333008
    9. '    ' → logprob: -14.500581741333008
    10. 'neighbor' → logprob: -14.500581741333008

Token 457: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.018150178715586662
    2. '!=' → logprob: -4.018150329589844
    3. ')!=' → logprob: -15.768150329589844
    4. '()!=' → logprob: -16.768150329589844
    5. ']!=' → logprob: -17.518150329589844
    6. '!==' → logprob: -18.143150329589844
    7. '!='' → logprob: -18.268150329589844
    8. ' ' → logprob: -18.893150329589844
    9. ' !==' → logprob: -19.143150329589844
    10. '!="' → logprob: -19.143150329589844

Token 458: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0007168424781411886
    2. ' prev' → logprob: -7.875716686248779
    3. 'current' → logprob: -8.000717163085938
    4. ' current' → logprob: -14.000717163085938
    5. 'previous' → logprob: -15.250717163085938
    6. '	prev' → logprob: -15.875717163085938
    7. '   ' → logprob: -16.375717163085938
    8. 'pre' → logprob: -16.625717163085938
    9. ' ' → logprob: -17.250717163085938
    10. '(prev' → logprob: -17.375717163085938

Token 459: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.006316127721220255
    2. ':' → logprob: -5.131316184997559
    3. '               ' → logprob: -8.131316184997559
    4. '           ' → logprob: -9.756316184997559
    5. '):
' → logprob: -11.256316184997559
    6. ' and' → logprob: -11.756316184997559
    7. ':

' → logprob: -12.631316184997559
    8. ':
' → logprob: -12.881316184997559
    9. '[next' → logprob: -12.881316184997559
    10. 'next' → logprob: -13.256316184997559

Token 460: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06018146499991417
    2. 'next' → logprob: -3.1851813793182373
    3. ' next' → logprob: -4.185181617736816
    4. '(next' → logprob: -7.185181617736816
    5. '[next' → logprob: -7.310181617736816
    6. ':
' → logprob: -8.560181617736816
    7. '.next' → logprob: -9.560181617736816
    8. ',next' → logprob: -9.685181617736816
    9. 'Next' → logprob: -10.810181617736816
    10. ':' → logprob: -11.060181617736816

Token 461: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.1603068858385086
    2. ' next' → logprob: -1.9103069305419922
    3. '                   ' → logprob: -10.035306930541992
    4. '               ' → logprob: -10.535306930541992
    5. '           ' → logprob: -12.410306930541992
    6. '	next' → logprob: -12.535306930541992
    7. '.next' → logprob: -13.160306930541992
    8. '[next' → logprob: -13.535306930541992
    9. '(next' → logprob: -14.535306930541992
    10. ',next' → logprob: -14.785306930541992

Token 462: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -12.500006675720215
    3. '=' → logprob: -13.875006675720215
    4. '=_' → logprob: -14.000006675720215
    5. ' =' → logprob: -15.000006675720215
    6. 'Car' → logprob: -15.000006675720215
    7. '_c' → logprob: -15.625006675720215
    8. 'car' → logprob: -15.875006675720215
    9. '_token' → logprob: -16.12500762939453
    10. '<Car' → logprob: -16.25000762939453

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. '_car' → logprob: -15.160224914550781
    4. ' ' → logprob: -15.910224914550781
    5. '<|end|>' → logprob: -16.28522491455078
    6. '   ' → logprob: -16.41022491455078
    7. ',' → logprob: -16.53522491455078
    8. ' =
' → logprob: -16.78522491455078
    9. '=
' → logprob: -17.03522491455078
    10. '       ' → logprob: -17.66022491455078

Token 464: ' neigh' (ID: 9109)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -6.76628842484206e-05
    2. ' neigh' → logprob: -9.625067710876465
    3. 'neq' → logprob: -14.750067710876465
    4. '   ' → logprob: -14.750067710876465
    5. 'neighbors' → logprob: -15.750067710876465
    6. '(ne' → logprob: -16.50006675720215
    7. 'neh' → logprob: -16.75006675720215
    8. 'neighbor' → logprob: -16.75006675720215
    9. ' ' → logprob: -17.00006675720215
    10. ' ne' → logprob: -17.25006675720215

Token 465: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004990590969100595
    2. '       ' → logprob: -7.625499248504639
    3. 'break' → logprob: -12.62549877166748
    4. '<|end|>' → logprob: -12.75049877166748
    5. '           ' → logprob: -13.75049877166748
    6. '                
' → logprob: -14.00049877166748
    7. ' break' → logprob: -14.50049877166748
    8. '```' → logprob: -15.12549877166748
    9. '
' → logprob: -15.37549877166748
    10. '                   ' → logprob: -15.37549877166748

Token 466: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009215848403982818
    2. '       ' → logprob: -7.000921726226807
    3. 'break' → logprob: -12.000921249389648
    4. ' break' → logprob: -14.125921249389648
    5. '           ' → logprob: -14.375921249389648
    6. '   ' → logprob: -15.000921249389648
    7. '			' → logprob: -15.250921249389648
    8. 'if' → logprob: -15.375921249389648
    9. '```' → logprob: -15.375921249389648
    10. '		       ' → logprob: -15.500921249389648

Token 467: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26175156235694885
    2. 'break' (adapté à ' break') → logprob: -1.6367515325546265
    3. ' break' → logprob: -3.386751651763916
    4. '       ' → logprob: -6.386751651763916
    5. '           ' → logprob: -8.886751174926758
    6. '	break' → logprob: -10.636751174926758
    7. '
' → logprob: -12.261751174926758
    8. '                   ' → logprob: -12.511751174926758
    9. '   ' → logprob: -12.636751174926758
    10. '              ' → logprob: -13.386751174926758

Token 468: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034991037100553513
    2. '
' → logprob: -5.7534990310668945
    3. '        
' → logprob: -8.503499031066895
    4. '   ' → logprob: -9.628499031066895
    5. '<|end|>' → logprob: -11.503499031066895
    6. '    
' → logprob: -11.628499031066895
    7. '```' → logprob: -11.878499031066895
    8. 'if' → logprob: -12.378499031066895
    9. '\n' → logprob: -12.878499031066895
    10. '                
' → logprob: -12.878499031066895

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033856455702334642
    2. '   ' → logprob: -6.753385543823242
    3. '
' → logprob: -7.003385543823242
    4. '        
' → logprob: -7.503385543823242
    5. '<|end|>' → logprob: -8.378385543823242
    6. ' if' → logprob: -8.878385543823242
    7. 'prev' → logprob: -9.378385543823242
    8. 'if' → logprob: -9.753385543823242
    9. ' prev' → logprob: -10.753385543823242
    10. '    
' → logprob: -10.753385543823242

Token 470: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0033326568081974983
    2. ' if' → logprob: -6.253332614898682
    3. '       ' → logprob: -7.003332614898682
    4. '   ' → logprob: -7.628332614898682
    5. '```' → logprob: -12.00333309173584
    6. 'prev' → logprob: -14.25333309173584
    7. '           ' → logprob: -14.62833309173584
    8. '	if' → logprob: -15.25333309173584
    9. '        
' → logprob: -15.50333309173584
    10. 'If' → logprob: -16.378332138061523

Token 471: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.102450892329216
    2. ' next' → logprob: -2.3524508476257324
    3. 'not' → logprob: -6.352450847625732
    4. ' not' → logprob: -7.602450847625732
    5. '	next' → logprob: -16.60245132446289
    6. '   ' → logprob: -16.72745132446289
    7. '(next' → logprob: -17.10245132446289
    8. '[next' → logprob: -18.85245132446289
    9. '       ' → logprob: -19.47745132446289
    10. '.next' → logprob: -19.72745132446289

Token 472: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -5.796184723294573e-06
    2. 'Car' → logprob: -13.750005722045898
    3. '_c' → logprob: -13.875005722045898
    4. 'car' → logprob: -13.875005722045898
    5. '==' → logprob: -14.750005722045898
    6. 'next' → logprob: -15.000005722045898
    7. '_' → logprob: -15.000005722045898
    8. '_ca' → logprob: -15.250005722045898
    9. '_next' → logprob: -15.375005722045898
    10. ' ==' → logprob: -15.500005722045898

Token 473: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07895192503929138
    2. 'is' → logprob: -2.578951835632324
    3. '==' → logprob: -9.703951835632324
    4. 'None' → logprob: -14.578951835632324
    5. ' ==' → logprob: -14.953951835632324
    6. ' None' → logprob: -16.07895278930664
    7. '=None' → logprob: -16.57895278930664
    8. '	is' → logprob: -17.20395278930664
    9. '=' → logprob: -17.70395278930664
    10. ')' → logprob: -17.82895278930664

Token 474: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015023599844425917
    2. ' None' → logprob: -6.501502513885498
    3. '=None' → logprob: -18.626502990722656
    4. '   ' → logprob: -19.251502990722656
    5. 'none' → logprob: -19.501502990722656
    6. '_None' → logprob: -19.751502990722656
    7. '(None' → logprob: -21.126502990722656
    8. '_none' → logprob: -21.876502990722656
    9. ',None' → logprob: -22.126502990722656
    10. ' ' → logprob: -24.001502990722656

Token 475: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1376383751630783
    2. ':
' → logprob: -2.6376383304595947
    3. ':' → logprob: -2.8876383304595947
    4. '       ' → logprob: -6.637638568878174
    5. '   ' → logprob: -11.262638092041016
    6. '          ' → logprob: -12.012638092041016
    7. '		' → logprob: -12.262638092041016
    8. '               ' → logprob: -12.637638092041016
    9. '):
' → logprob: -13.137638092041016
    10. ':
' → logprob: -13.137638092041016

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022284770966507494
    2. '       ' → logprob: -8.500223159790039
    3. 'break' → logprob: -11.500223159790039
    4. '   ' → logprob: -12.750223159790039
    5. '		' → logprob: -13.000223159790039
    6. '               ' → logprob: -13.250223159790039
    7. ' break' → logprob: -14.000223159790039
    8. '	break' → logprob: -14.500223159790039
    9. '	       ' → logprob: -15.000223159790039
    10. '```' → logprob: -15.625223159790039

Token 477: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004425490275025368
    2. '       ' → logprob: -5.754425525665283
    3. 'break' (adapté à ' break') → logprob: -6.754425525665283
    4. '   ' → logprob: -9.754425048828125
    5. ' break' → logprob: -11.504425048828125
    6. '	break' → logprob: -12.129425048828125
    7. '               ' → logprob: -12.254425048828125
    8. '		' → logprob: -13.004425048828125
    9. '          ' → logprob: -15.254425048828125
    10. '	       ' → logprob: -15.879425048828125

Token 478: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03031454235315323
    2. '
' → logprob: -3.5303144454956055
    3. '        
' → logprob: -7.9053144454956055
    4. 'prev' → logprob: -8.905314445495605
    5. '   ' → logprob: -10.530314445495605
    6. '
' → logprob: -11.530314445495605
    7. '    
' → logprob: -11.655314445495605
    8. '  
' → logprob: -12.655314445495605
    9. '       
' → logprob: -13.030314445495605
    10. '```' → logprob: -13.405314445495605

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09679041057825089
    2. '   ' → logprob: -2.471790313720703
    3. '
' → logprob: -5.471790313720703
    4. 'prev' → logprob: -5.971790313720703
    5. '        
' → logprob: -7.346790313720703
    6. '    
' → logprob: -8.471790313720703
    7. '	prev' → logprob: -9.596790313720703
    8. ' prev' → logprob: -9.971790313720703
    9. '```' → logprob: -10.846790313720703
    10. '  
' → logprob: -11.096790313720703

Token 480: ' order' (ID: 2569)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.6126806139945984
    2. '   ' → logprob: -1.2376806735992432
    3. 'order' (adapté à ' order') → logprob: -2.362680673599243
    4. '       ' → logprob: -2.612680673599243
    5. ' prev' → logprob: -8.112680435180664
    6. '	prev' → logprob: -9.487680435180664
    7. ' order' → logprob: -10.237680435180664
    8. '    
' → logprob: -10.487680435180664
    9. '```' → logprob: -10.612680435180664
    10. '
' → logprob: -10.862680435180664

Token 481: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -13.750000953674316
    3. '.app' → logprob: -17.250001907348633
    4. '.ap' → logprob: -18.500001907348633
    5. ' .' → logprob: -19.500001907348633
    6. 'append' → logprob: -20.250001907348633
    7. '.extend' → logprob: -20.750001907348633
    8. '_append' → logprob: -21.250001907348633
    9. '.Append' → logprob: -21.750001907348633
    10. '.push' → logprob: -22.500001907348633

Token 482: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. 'next' → logprob: -18.1250057220459
    4. ' next' → logprob: -20.5000057220459
    5. '((' → logprob: -21.8750057220459
    6. '(n' → logprob: -21.8750057220459
    7. '(ne' → logprob: -22.1250057220459
    8. '[next' → logprob: -22.2500057220459
    9. '(
' → logprob: -22.3750057220459
    10. '(current' → logprob: -22.7500057220459

Token 483: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -3.128163257315464e-07
    2. 'Car' → logprob: -16.75
    3. '_' → logprob: -17.125
    4. '_c' → logprob: -17.125
    5. '```' → logprob: -17.25
    6. '(next' → logprob: -18.0
    7. '_token' → logprob: -18.125
    8. '<Car' → logprob: -18.375
    9. 'car' → logprob: -18.5
    10. '[' → logprob: -18.625

Token 484: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030789092183113098
    2. '
' → logprob: -3.6557891368865967
    3. ')
' → logprob: -5.655788898468018
    4. ')' → logprob: -7.280788898468018
    5. ',' → logprob: -9.030789375305176
    6. 'prev' → logprob: -9.280789375305176
    7. '        
' → logprob: -10.405789375305176
    8. '   ' → logprob: -11.780789375305176
    9. ',
' → logprob: -11.905789375305176
    10. '<|end|>' → logprob: -11.905789375305176

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06904610991477966
    2. '
' → logprob: -3.4440460205078125
    3. 'prev' → logprob: -3.6940460205078125
    4. '   ' → logprob: -5.1940460205078125
    5. '```' → logprob: -6.4440460205078125
    6. '	prev' → logprob: -6.6940460205078125
    7. ' prev' → logprob: -6.8190460205078125
    8. '        
' → logprob: -8.319046020507812
    9. '    
' → logprob: -9.944046020507812
    10. '``' → logprob: -10.694046020507812

Token 486: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -9.253090865968261e-06
    2. '   ' → logprob: -12.000009536743164
    3. '	prev' → logprob: -13.500009536743164
    4. ' prev' → logprob: -14.000009536743164
    5. '
' → logprob: -14.625009536743164
    6. '       ' → logprob: -15.000009536743164
    7. '        
' → logprob: -17.250009536743164
    8. '           ' → logprob: -17.500009536743164
    9. '    
' → logprob: -17.500009536743164
    10. '.prev' → logprob: -18.250009536743164

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519994080066681
    2. ' =' → logprob: -1.5019993782043457
    3. ',' → logprob: -9.626999855041504
    4. '=current' → logprob: -12.376999855041504
    5. ',current' → logprob: -16.251998901367188
    6. 'current' → logprob: -17.251998901367188
    7. '=
' → logprob: -17.876998901367188
    8. ' current' → logprob: -19.501998901367188
    9. '＝' → logprob: -19.626998901367188
    10. ')' → logprob: -19.751998901367188

Token 488: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.5048530030981055e-06
    2. ' current' → logprob: -13.500001907348633
    3. 'next' → logprob: -17.750001907348633
    4. 'cur' → logprob: -24.250001907348633
    5. '$current' → logprob: -24.375001907348633
    6. '	current' → logprob: -24.875001907348633
    7. '(current' → logprob: -25.125001907348633
    8. '_current' → logprob: -25.375001907348633
    9. '.current' → logprob: -25.875001907348633
    10. 'Current' → logprob: -26.000001907348633

Token 489: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.01816738210618496
    2. '
' → logprob: -4.643167495727539
    3. ' current' → logprob: -4.893167495727539
    4. '       ' → logprob: -7.768167495727539
    5. '[current' → logprob: -8.518167495727539
    6. ',current' → logprob: -9.143167495727539
    7. '<|end|>' → logprob: -10.393167495727539
    8. '	current' → logprob: -10.643167495727539
    9. '        
' → logprob: -10.768167495727539
    10. '   ' → logprob: -10.893167495727539

Token 490: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.002750546205788851
    2. ' current' → logprob: -6.252750396728516
    3. '
' → logprob: -7.127750396728516
    4. '	current' → logprob: -12.127750396728516
    5. ',current' → logprob: -12.252750396728516
    6. '[current' → logprob: -12.752750396728516
    7. '_current' → logprob: -12.877750396728516
    8. 'Current' → logprob: -14.002750396728516
    9. ' 
' → logprob: -14.502750396728516
    10. '
' → logprob: -14.627750396728516

Token 491: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -2.339278580620885e-06
    2. ' current' → logprob: -13.000001907348633
    3. '
' → logprob: -21.375001907348633
    4. '.current' → logprob: -21.625001907348633
    5. '_current' → logprob: -22.250001907348633
    6. '	current' → logprob: -22.375001907348633
    7. 'Current' → logprob: -22.375001907348633
    8. '[current' → logprob: -22.875001907348633
    9. '$current' → logprob: -23.000001907348633
    10. '=current' → logprob: -23.500001907348633

Token 492: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. '=current' → logprob: -17.001928329467773
    4. ' +=' → logprob: -18.751928329467773
    5. ' ' → logprob: -18.876928329467773
    6. '=end' → logprob: -19.001928329467773
    7. '.=' → logprob: -19.376928329467773
    8. '_' → logprob: -19.501928329467773
    9. '＝' → logprob: -19.751928329467773
    10. '_=' → logprob: -19.876928329467773

Token 493: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0007099286303855479
    2. ' next' → logprob: -7.2507100105285645
    3. '	next' → logprob: -22.125709533691406
    4. '_next' → logprob: -23.000709533691406
    5. '[next' → logprob: -23.000709533691406
    6. '.next' → logprob: -23.125709533691406
    7. '(next' → logprob: -23.500709533691406
    8. 'Next' → logprob: -24.875709533691406
    9. 'new' → logprob: -26.875709533691406
    10. ',next' → logprob: -27.375709533691406

Token 494: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.7432603272027336e-06
    2. '_c' → logprob: -14.000001907348633
    3. 'car' → logprob: -14.875001907348633
    4. 'Car' → logprob: -15.000001907348633
    5. '_' → logprob: -16.500001907348633
    6. '_next' → logprob: -16.625001907348633
    7. '<Car' → logprob: -17.250001907348633
    8. '_cart' → logprob: -17.625001907348633
    9. '```' → logprob: -18.375001907348633
    10. '_cat' → logprob: -18.375001907348633

Token 495: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2076488435268402
    2. 'print' → logprob: -1.7076488733291626
    3. '    
' → logprob: -5.457648754119873
    4. '
' → logprob: -6.957648754119873
    5. ' print' → logprob: -8.207649230957031
    6. '```' → logprob: -8.207649230957031
    7. '  
' → logprob: -8.457649230957031
    8. 'for' → logprob: -9.582649230957031
    9. '   
' → logprob: -9.832649230957031
    10. ' 
' → logprob: -9.957649230957031

Token 496: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10080522298812866
    2. '   ' → logprob: -2.3508052825927734
    3. '```' → logprob: -8.350805282592773
    4. 'for' → logprob: -8.850805282592773
    5. '    
' → logprob: -9.225805282592773
    6. ' print' → logprob: -9.350805282592773
    7. '
' → logprob: -10.600805282592773
    8. 'output' → logprob: -13.850805282592773
    9. '``' → logprob: -13.850805282592773
    10. '        
' → logprob: -13.850805282592773

Token 497: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014297730289399624
    2. '   ' → logprob: -4.264297962188721
    3. '```' → logprob: -9.264297485351562
    4. 'for' → logprob: -10.514297485351562
    5. ' print' → logprob: -11.764297485351562
    6. '
' → logprob: -13.014297485351562
    7. '    
' → logprob: -13.639297485351562
    8. '``' → logprob: -14.889297485351562
    9. '`' → logprob: -15.639297485351562
    10. 'result' → logprob: -16.014297485351562

Token 498: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.06198034808039665
    2. '("' → logprob: -2.8119802474975586
    3. '(' → logprob: -11.311980247497559
    4. '(*' → logprob: -15.311980247497559
    5. '(""' → logprob: -16.186981201171875
    6. '''.' → logprob: -16.936981201171875
    7. '(('' → logprob: -17.061981201171875
    8. '(("' → logprob: -17.686981201171875
    9. '("("' → logprob: -17.811981201171875
    10. '('').' → logprob: -18.436981201171875

Token 499: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09153514355421066
    2. '''.' → logprob: -2.4665350914001465
    3. ' "".' → logprob: -6.9665350914001465
    4. ''' → logprob: -7.5915350914001465
    5. '"-' → logprob: -7.8415350914001465
    6. ' ''.' → logprob: -7.9665350914001465
    7. '".' → logprob: -8.716535568237305
    8. '""' → logprob: -9.216535568237305
    9. '("' → logprob: -10.591535568237305
    10. '-' → logprob: -10.591535568237305

Token 500: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -9.088346359931165e-07
    2. ' join' → logprob: -14.375000953674316
    3. 'print' → logprob: -15.625000953674316
    4. 'strip' → logprob: -16.875
    5. 'jo' → logprob: -17.75
    6. '```' → logprob: -17.75
    7. 'j' → logprob: -18.75
    8. 'replace' → logprob: -20.25
    9. '.' → logprob: -20.375
    10. '.join' → logprob: -20.5

Token 501: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -2.7610454708337784e-05
    2. 'order' → logprob: -10.500027656555176
    3. ' order' → logprob: -18.50002670288086
    4. ')' → logprob: -18.75002670288086
    5. '$order' → logprob: -19.75002670288086
    6. '	order' → logprob: -20.12502670288086
    7. '(' → logprob: -20.25002670288086
    8. '(ord' → logprob: -20.50002670288086
    9. '/order' → logprob: -21.00002670288086
    10. '(
' → logprob: -21.50002670288086

Token 502: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018169960007071495
    2. '))' → logprob: -4.01816987991333
    3. '())' → logprob: -10.893170356750488
    4. ')))' → logprob: -14.643170356750488
    5. '})' → logprob: -14.893170356750488
    6. '])' → logprob: -15.268170356750488
    7. ')`' → logprob: -15.893170356750488
    8. '()' → logprob: -16.518169403076172
    9. ')")' → logprob: -16.518169403076172
    10. ' )' → logprob: -17.268169403076172


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 500
Tokens correctement prédits (1ère position, stricte): 176
Tokens correctement prédits (1ère position, avec adaptation): 201
Tokens correctement prédits (top 10): 386
Précision stricte (1ère position): 35.20%
Précision adaptée (1ère position): 40.20%
Précision (top 10): 77.20%
================================================================================
