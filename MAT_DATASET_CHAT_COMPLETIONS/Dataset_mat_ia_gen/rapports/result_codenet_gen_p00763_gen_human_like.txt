================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def readints():
    return list(map(int, sys.stdin.readline().split()))

def compute_fares(p, q, r):
    # Build fare table lookup for fare(distance)
    # distance up to max distance (q[-1] or big enough)
    max_dist = q[-1] if q else 10**9
    fare = [0]*(max_dist+1)
    idx = 0
    for dist in range(1, max_dist+1):
        if idx < len(q) and dist > q[idx]:
            idx += 1
        fare[dist] = fare[dist-1] + r[idx]
    return fare

def fare_cost(fare_table, dist):
    if dist == 0:
        return 0
    if dist < len(fare_table):
        return fare_table[dist]
    # In case of distance beyond precomputed, calculate on the fly
    # Should not happen since we took max_dist big enough
    return fare_table[-1] + sum(fare_table[-1] for _ in range(dist - len(fare_table) + 1))

def main():
    # Read until line of five zeros
    while True:
        n,m,c,s,g = readints()
        if n == 0 and m == 0 and c == 0 and s == 0 and g == 0:
            break

        # Lines: each has x_i, y_i, d_i, c_i (stations connected, distance, company)
        edges = [[] for _ in range(n+1)]
        for _ in range(m):
            x,y,d,cc = readints()
            edges[x].append((y,d,cc))
            edges[y].append((x,d,cc))

        # Fare tables per company
        p = [0]*(c+1)
        for i in range(1,c+1):
            p[i] = int(sys.stdin.readline())

        q = [[]]*(c+1)
        r = [[]]*(c+1)
        for i in range(1,c+1):
            q[i] = []
            while True:
                line = sys.stdin.readline().strip()
                if line == '-1':
                    break
                q[i].extend(map(int,line.split()))

        for i in range(1,c+1):
            r[i] = []
            while True:
                line = sys.stdin.readline().strip()
                if line == '-1':
                    break
                r[i].extend(map(int,line.split()))

        # Build fare lookup tables for each company
        fare_tables = [None]*(c+1)
        for i in range(1,c+1):
            fare_tables[i] = compute_fares(p[i], q[i], r[i])

        # Use modified Dijkstra with state: (station, current_company, dist_in_company_section)
        # Current_company = 0 means no current company (start state)
        # dist_in_company_section: distance traveled in current company's continuous section
        INF = 10**15
        dist = [ [ [INF]*(201) for _ in range(c+1)] for __ in range(n+1) ]
        # Max distance on single line is up to 200, so dist_in_company_section max 200 sufficient

        # Start state: at s, no company chosen yet, dist 0
        dist[s][0][0] = 0
        pq = []
        heapq.heappush(pq, (0, s, 0, 0))  # (cost, station, current_company, dist_in_current_section)

        while pq:
            cost, u, comp, dd = heapq.heappop(pq)
            if dist[u][comp][dd] < cost:
                continue
            if u == g:
                print(cost)
                break
            for v,dline,cc in edges[u]:
                if comp == 0:
                    # From no company, start a new section with company cc and distance dline
                    new_dist = dline
                    f = fare_tables[cc][new_dist]
                    total_cost = cost + f
                    if total_cost < dist[v][cc][new_dist]:
                        dist[v][cc][new_dist] = total_cost
                        heapq.heappush(pq, (total_cost, v, cc, new_dist))
                else:
                    if cc == comp:
                        # Continue with same company section
                        new_dist = dd + dline
                        if new_dist > 200:
                            # Dist too large, skip (should not happen since max line is 200, but continuous may exceed??)
                            # According to problem max d_i=200, sum can be larger than that. We must handle bigger dist
                            # We'll handle up to max 10000 sum distance for safety.
                            # So increase array size or ignore here.
                            # We'll increase dist_in_company_section max to 10000.
                            # Refactor dist as [n+1][c+1][max_dist+1], where max dist approx m*200=2,000,000 too big.
                            # To avoid memory explosion, we'll use dictionary instead of list.
                            # So need to update code for dist. Let's do this now.
                            continue

                        fnew = fare_tables[comp][new_dist]
                        # cost previously had fare for section with dist dd, now fare with new_dist, need to adjust cost
                        # previous cost includes fare_tables[comp][dd], so difference is fare_tables[comp][new_dist]-fare_tables[comp][dd]
                        total_cost = cost + (fnew - fare_tables[comp][dd])
                        if total_cost < dist[v][comp][new_dist]:
                            dist[v][comp][new_dist] = total_cost
                            heapq.heappush(pq, (total_cost, v, comp, new_dist))

                    else:
                        # Different company, close previous section and start new with cc
                        # Previous section fare is included already in cost, so add new section fare for dline
                        fnew = fare_tables[cc][dline]
                        total_cost = cost + fnew
                        if total_cost < dist[v][cc][dline]:
                            dist[v][cc][dline] = total_cost
                            heapq.heappush(pq, (total_cost, v, cc, dline))
        else:
            # Not break => cannot reach g
            print(-1)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023321842309087515
    2. 'os' → logprob: -8.37523365020752
    3. ' math' → logprob: -13.87523365020752
    4. ' re' → logprob: -14.37523365020752
    5. '"os' → logprob: -14.87523365020752
    6. ' json' → logprob: -15.12523365020752
    7. '_os' → logprob: -15.87523365020752
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -16.750232696533203
    10. ' ' → logprob: -17.000232696533203

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.85235276655294e-05
    2. '.' → logprob: -9.375088691711426
    3. '#' → logprob: -14.000088691711426
    4. '_' → logprob: -14.375088691711426
    5. 'queue' → logprob: -14.500088691711426
    6. '[' → logprob: -15.000088691711426
    7. 'ify' → logprob: -15.250088691711426
    8. '=' → logprob: -15.750088691711426
    9. 's' → logprob: -15.875088691711426
    10. ',' → logprob: -16.25008773803711

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21790528297424316
    2. '
' → logprob: -2.467905282974243
    3. '\n' → logprob: -3.217905282974243
    4. '\' → logprob: -3.592905282974243
    5. '<|end|>' → logprob: -4.592905044555664
    6. '.
' → logprob: -4.967905044555664
    7. '

' → logprob: -4.967905044555664
    8. 'import' → logprob: -5.342905044555664
    9. '' → logprob: -5.467905044555664
    10. '```' → logprob: -5.717905044555664

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06600640714168549
    2. '\' → logprob: -3.8160064220428467
    3. '
' → logprob: -4.191006183624268
    4. '\n' → logprob: -4.316006183624268
    5. 'def' → logprob: -5.566006183624268
    6. '' → logprob: -6.316006183624268
    7. '```' → logprob: -6.441006183624268
    8. '

' → logprob: -7.191006183624268
    9. '.
' → logprob: -7.316006183624268
    10. ',' → logprob: -7.316006183624268

Token 8: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001130094169639051
    2. ' a' → logprob: -8.126130104064941
    3. ' find' → logprob: -8.501130104064941
    4. ' shortest' → logprob: -8.501130104064941
    5. ' process' → logprob: -9.876130104064941
    6. ' space' → logprob: -9.876130104064941
    7. '_' → logprob: -10.001130104064941
    8. ' d' → logprob: -10.251130104064941
    9. ' solve' → logprob: -10.251130104064941
    10. ' heap' → logprob: -10.876130104064941

Token 9: 'ints' (ID: 20448)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3150877356529236
    2. '_' → logprob: -1.3150877952575684
    3. '_line' → logprob: -6.815087795257568
    4. ')' → logprob: -8.81508731842041
    5. '_data' → logprob: -9.56508731842041
    6. ' (' → logprob: -9.56508731842041
    7. '_input' → logprob: -9.94008731842041
    8. '_file' → logprob: -10.06508731842041
    9. '(_' → logprob: -10.31508731842041
    10. '_(' → logprob: -10.69008731842041

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016319863498210907
    2. '():' → logprob: -4.141319751739502
    3. '(:' → logprob: -9.01632022857666
    4. ' (' → logprob: -9.64132022857666
    5. '("("' → logprob: -10.89132022857666
    6. '(":' → logprob: -11.51632022857666
    7. '(a' → logprob: -11.76632022857666
    8. '(line' → logprob: -12.01632022857666
    9. '```' → logprob: -12.14132022857666
    10. '):' → logprob: -12.26632022857666

Token 11: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016553683206439018
    2. '():' → logprob: -5.14155387878418
    3. '[]' → logprob: -5.64155387878418
    4. ' ()' → logprob: -6.39155387878418
    5. ' return' → logprob: -6.76655387878418
    6. '()\' → logprob: -6.89155387878418
    7. '   ' → logprob: -7.14155387878418
    8. '(' → logprob: -7.26655387878418
    9. 'return' → logprob: -7.39155387878418
    10. '[:]' → logprob: -8.64155387878418

Token 12: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1929580718278885
    2. 'return' (adapté à ' return') → logprob: -1.942958116531372
    3. '   ' → logprob: -3.442958116531372
    4. '    ' → logprob: -9.192957878112793
    5. '	return' → logprob: -9.567957878112793
    6. ' ' → logprob: -10.317957878112793
    7. '[]' → logprob: -11.567957878112793
    8. '  ' → logprob: -12.067957878112793
    9. '   ' → logprob: -12.942957878112793
    10. ' ' → logprob: -13.442957878112793

Token 13: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.012818168848752975
    2. ' map' → logprob: -5.012818336486816
    3. ' []' → logprob: -5.512818336486816
    4. 'list' → logprob: -6.762818336486816
    5. ' [' → logprob: -7.387818336486816
    6. ' ' → logprob: -8.762818336486816
    7. '[' → logprob: -9.762818336486816
    8. '[]' → logprob: -10.512818336486816
    9. 'map' → logprob: -11.137818336486816
    10. ' sys' → logprob: -11.637818336486816

Token 14: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.023592159152030945
    2. '(' → logprob: -3.773592233657837
    3. '(int' → logprob: -8.023591995239258
    4. '(sys' → logprob: -11.648591995239258
    5. ' map' → logprob: -12.773591995239258
    6. '(eval' → logprob: -13.273591995239258
    7. '(

' → logprob: -13.773591995239258
    8. '(
' → logprob: -13.773591995239258
    9. '(input' → logprob: -14.523591995239258
    10. '_map' → logprob: -14.773591995239258

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000965891988016665
    2. 'int' → logprob: -7.2509660720825195
    3. '<int' → logprob: -8.87596607208252
    4. '(' → logprob: -9.37596607208252
    5. '=int' → logprob: -11.00096607208252
    6. '[int' → logprob: -12.12596607208252
    7. ',int' → logprob: -12.25096607208252
    8. '```' → logprob: -13.62596607208252
    9. ' int' → logprob: -14.00096607208252
    10. '(
' → logprob: -14.37596607208252

Token 16: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.24473626911640167
    2. ',' → logprob: -1.6197363138198853
    3. ',input' → logprob: -4.994736194610596
    4. '(input' → logprob: -5.619736194610596
    5. '(' → logprob: -5.619736194610596
    6. '=sys' → logprob: -6.369736194610596
    7. 'sys' → logprob: -6.494736194610596
    8. ' sys' → logprob: -7.494736194610596
    9. 'input' → logprob: -7.994736194610596
    10. '))' → logprob: -8.244736671447754

Token 17: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.040741823613643646
    2. ' sys' → logprob: -3.2907419204711914
    3. 'input' → logprob: -6.040741920471191
    4. '(sys' → logprob: -8.790741920471191
    5. ' input' → logprob: -9.790741920471191
    6. '=sys' → logprob: -9.790741920471191
    7. '	sys' → logprob: -10.165741920471191
    8. ')' → logprob: -11.790741920471191
    9. 'stdin' → logprob: -13.040741920471191
    10. '))' → logprob: -14.165741920471191

Token 18: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01103863213211298
    2. '.' → logprob: -4.636038780212402
    3. '.argv' → logprob: -6.761038780212402
    4. '.stdout' → logprob: -9.511038780212402
    5. '.std' → logprob: -10.636038780212402
    6. '.readline' → logprob: -11.136038780212402
    7. ' .' → logprob: -12.136038780212402
    8. '.input' → logprob: -13.386038780212402
    9. '.st' → logprob: -13.886038780212402
    10. ' stdin' → logprob: -14.386038780212402

Token 19: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00452791154384613
    2. '.read' → logprob: -5.879528045654297
    3. '.' → logprob: -6.379528045654297
    4. '.readlines' → logprob: -10.879528045654297
    5. ').' → logprob: -13.254528045654297
    6. '.)' → logprob: -13.254528045654297
    7. ')' → logprob: -13.879528045654297
    8. '.buffer' → logprob: -14.504528045654297
    9. '.stdin' → logprob: -14.504528045654297
    10. ' .' → logprob: -14.629528045654297

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.09280567616224289
    2. '()))' → logprob: -2.4678056240081787
    3. '()' → logprob: -6.217805862426758
    4. '())' → logprob: -6.342805862426758
    5. '())))' → logprob: -9.967805862426758
    6. '()));' → logprob: -10.842805862426758
    7. '))' → logprob: -11.217805862426758
    8. ' ().' → logprob: -12.342805862426758
    9. '(' → logprob: -12.967805862426758
    10. '()-' → logprob: -12.967805862426758

Token 21: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.02127690799534321
    2. 'split' → logprob: -4.021276950836182
    3. 'rstrip' → logprob: -5.771276950836182
    4. ' strip' → logprob: -12.146276473999023
    5. 'read' → logprob: -14.021276473999023
    6. ' split' → logprob: -16.271276473999023
    7. ')' → logprob: -17.396276473999023
    8. '-strip' → logprob: -17.771276473999023
    9. 'rs' → logprob: -18.021276473999023
    10. ' ' → logprob: -18.521276473999023

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6119177341461182
    2. '))' → logprob: -0.8619177341461182
    3. ')))' → logprob: -3.611917734146118
    4. '()' → logprob: -5.361917495727539
    5. '())))' → logprob: -6.486917495727539
    6. '())' → logprob: -6.611917495727539
    7. ')' → logprob: -7.236917495727539
    8. '(' → logprob: -10.111917495727539
    9. '()))
' → logprob: -12.861917495727539
    10. ' ))' → logprob: -12.986917495727539

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06271731853485107
    2. 'class' → logprob: -3.0627174377441406
    3. 'n' → logprob: -4.937717437744141
    4. '
' → logprob: -5.812717437744141
    5. '\' → logprob: -6.312717437744141
    6. '\n' → logprob: -6.812717437744141
    7. 'd' → logprob: -8.06271743774414
    8. '' → logprob: -8.18771743774414
    9. '

' → logprob: -9.06271743774414
    10. '```' → logprob: -9.93771743774414

Token 24: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0801202580332756
    2. ' solve' → logprob: -2.830120325088501
    3. ' find' → logprob: -5.955120086669922
    4. 'main' → logprob: -6.080120086669922
    5. ' process' → logprob: -6.205120086669922
    6. ' ' → logprob: -6.455120086669922
    7. ' heaps' → logprob: -6.455120086669922
    8. ' top' → logprob: -6.580120086669922
    9. ' heap' → logprob: -6.830120086669922
    10. ' d' → logprob: -7.080120086669922

Token 25: '_f' (ID: 1337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30954355001449585
    2. '_max' → logprob: -2.1845436096191406
    3. '_' → logprob: -2.6845436096191406
    4. '_heap' → logprob: -3.9345436096191406
    5. '_sum' → logprob: -4.434543609619141
    6. '_dist' → logprob: -5.184543609619141
    7. '_cost' → logprob: -5.184543609619141
    8. '_total' → logprob: -5.309543609619141
    9. '_distance' → logprob: -5.684543609619141
    10. '_scores' → logprob: -5.934543609619141

Token 26: 'ares' (ID: 7458)
  Prédit: 'requency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'requency' → logprob: -0.824251651763916
    2. 'requencies' → logprob: -1.574251651763916
    3. 'low' → logprob: -2.074251651763916
    4. 'unction' → logprob: -2.324251651763916
    5. 'req' → logprob: -2.574251651763916
    6. '(req' → logprob: -4.824251651763916
    7. 'inal' → logprob: -5.199251651763916
    8. '(low' → logprob: -5.324251651763916
    9. 'l' → logprob: -5.699251651763916
    10. 'e' → logprob: -5.824251651763916

Token 27: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004162214230746031
    2. '_' → logprob: -6.254162311553955
    3. 'def' → logprob: -8.379161834716797
    4. '(f' → logprob: -8.504161834716797
    5. '```' → logprob: -9.629161834716797
    6. '<|end|>' → logprob: -9.629161834716797
    7. '(user' → logprob: -9.879161834716797
    8. '(n' → logprob: -9.879161834716797
    9. '(def' → logprob: -9.879161834716797
    10. '()' → logprob: -9.879161834716797

Token 28: ',' (ID: 11)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.49460870027542114
    2. 'r' → logprob: -1.8696086406707764
    3. 'os' → logprob: -3.3696086406707764
    4. 'ar' → logprob: -3.4946086406707764
    5. 'e' → logprob: -3.6196086406707764
    6. ',' → logprob: -3.6196086406707764
    7. 'l' → logprob: -3.9946086406707764
    8. 'rices' → logprob: -4.2446088790893555
    9. 'oints' → logprob: -4.3696088790893555
    10. 'ath' → logprob: -4.4946088790893555

Token 29: ' q' (ID: 2335)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8390288352966309
    2. 'q' → logprob: -1.9640288352966309
    3. 'n' → logprob: -2.339028835296631
    4. 'd' → logprob: -2.339028835296631
    5. 'dist' → logprob: -2.589028835296631
    6. 'r' → logprob: -3.214028835296631
    7. 'k' → logprob: -3.339028835296631
    8. 's' → logprob: -3.464028835296631
    9. 't' → logprob: -3.464028835296631
    10. 'c' → logprob: -3.589028835296631

Token 30: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0532870814204216
    2. ',' → logprob: -3.0532870292663574
    3. ')' → logprob: -5.428287029266357
    4. '):
' → logprob: -9.053287506103516
    5. ')):' → logprob: -9.428287506103516
    6. ' ):' → logprob: -11.178287506103516
    7. ':' → logprob: -11.303287506103516
    8. ',p' → logprob: -11.428287506103516
    9. '):
' → logprob: -12.053287506103516
    10. '[' → logprob: -12.428287506103516

Token 31: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.46474987268447876
    2. 's' → logprob: -2.214749813079834
    3. ' r' → logprob: -2.214749813079834
    4. ' s' → logprob: -2.839749813079834
    5. 'n' → logprob: -3.589749813079834
    6. ' fares' → logprob: -4.089749813079834
    7. ' n' → logprob: -4.589749813079834
    8. 'start' → logprob: -4.839749813079834
    9. 'dist' → logprob: -5.589749813079834
    10. 'a' → logprob: -5.714749813079834

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012358720414340496
    2. ',' → logprob: -4.512358665466309
    3. ')' → logprob: -7.012358665466309
    4. ' ):' → logprob: -8.012358665466309
    5. '):
' → logprob: -10.262358665466309
    6. ')):' → logprob: -12.137358665466309
    7. '):
' → logprob: -12.262358665466309
    8. '=' → logprob: -12.512358665466309
    9. '**' → logprob: -12.637358665466309
    10. '_' → logprob: -12.637358665466309

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04704342409968376
    2. ':' → logprob: -3.4220433235168457
    3. '):' → logprob: -5.172043323516846
    4. ' ' → logprob: -5.672043323516846
    5. ')' → logprob: -6.922043323516846
    6. '    ' → logprob: -7.047043323516846
    7. '    
' → logprob: -7.922043323516846
    8. '       ' → logprob: -8.172043800354004
    9. ' :' → logprob: -8.297043800354004
    10. '  ' → logprob: -8.297043800354004

Token 34: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18455228209495544
    2. ' ' → logprob: -2.3095521926879883
    3. '    ' → logprob: -3.8095521926879883
    4. ' return' → logprob: -4.309552192687988
    5. ' if' → logprob: -5.309552192687988
    6. ' 
' → logprob: -5.684552192687988
    7. 'return' → logprob: -6.059552192687988
    8. '    
' → logprob: -6.434552192687988
    9. '[' → logprob: -6.559552192687988
    10. '     
' → logprob: -6.809552192687988

Token 35: ' Build' (ID: 10885)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7326743602752686
    2. ' if' → logprob: -2.2326743602752686
    3. ' max' → logprob: -2.6076743602752686
    4. ' f' → logprob: -3.1076743602752686
    5. ' ' → logprob: -3.4826743602752686
    6. ' cost' → logprob: -3.9826743602752686
    7. ' space' → logprob: -3.9826743602752686
    8. ' p' → logprob: -3.9826743602752686
    9. ' return' → logprob: -3.9826743602752686
    10. ' #' → logprob: -4.107674598693848

Token 36: ' fare' (ID: 25285)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.1652139276266098
    2. '_graph' → logprob: -2.4152138233184814
    3. ' adjacency' → logprob: -3.7902138233184814
    4. 'graph' → logprob: -4.0402140617370605
    5. '(graph' → logprob: -5.5402140617370605
    6. ' a' → logprob: -5.5402140617370605
    7. ' (' → logprob: -5.7902140617370605
    8. '_' → logprob: -6.4152140617370605
    9. '(p' → logprob: -6.6652140617370605
    10. '_adj' → logprob: -7.0402140617370605

Token 37: ' table' (ID: 3293)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002709772903472185
    2. '_s' → logprob: -7.002709865570068
    3. '_map' → logprob: -7.377709865570068
    4. '_graph' → logprob: -7.502709865570068
    5. '_list' → logprob: -9.00270938873291
    6. ' =' → logprob: -9.00270938873291
    7. ' s' → logprob: -9.12770938873291
    8. '_' → logprob: -9.87770938873291
    9. '=' → logprob: -10.12770938873291
    10. '_matrix' → logprob: -10.25270938873291

Token 38: ' lookup' (ID: 37342)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8228628039360046
    2. '   ' → logprob: -1.1978628635406494
    3. ':' → logprob: -2.1978628635406494
    4. '[' → logprob: -2.3228628635406494
    5. '<|end|>' → logprob: -4.32286262512207
    6. ' ' → logprob: -5.07286262512207
    7. ')' → logprob: -5.32286262512207
    8. '[]' → logprob: -5.32286262512207
    9. ',' → logprob: -5.69786262512207
    10. '=' → logprob: -5.69786262512207

Token 39: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0547010898590088
    2. ' =' → logprob: -1.1797010898590088
    3. '[' → logprob: -2.054701089859009
    4. '   ' → logprob: -2.179701089859009
    5. ' ' → logprob: -3.054701089859009
    6. '[p' → logprob: -4.05470085144043
    7. ',' → logprob: -5.30470085144043
    8. '  ' → logprob: -5.80470085144043
    9. ')' → logprob: -5.92970085144043
    10. '=' → logprob: -6.17970085144043

Token 40: ' fare' (ID: 25285)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8542250394821167
    2. ' all' → logprob: -1.4792250394821167
    3. ' each' → logprob: -2.4792251586914062
    4. ' i' → logprob: -2.6042251586914062
    5. ' range' → logprob: -3.3542251586914062
    6. ' r' → logprob: -3.6042251586914062
    7. ' ' → logprob: -4.229225158691406
    8. ' the' → logprob: -4.354225158691406
    9. ' max' → logprob: -4.729225158691406
    10. 'r' → logprob: -4.729225158691406

Token 41: '(distance' (ID: 105203)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05432840436697006
    2. ' =' → logprob: -3.804328441619873
    3. ' ' → logprob: -3.929328441619873
    4. ')' → logprob: -5.679328441619873
    5. '[' → logprob: -6.304328441619873
    6. '=' → logprob: -6.804328441619873
    7. ' for' → logprob: -7.054328441619873
    8. '   ' → logprob: -7.304328441619873
    9. ']' → logprob: -7.554328441619873
    10. ',' → logprob: -7.804328441619873

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09679452329874039
    2. 's' → logprob: -2.721794605255127
    3. '):' → logprob: -4.346794605255127
    4. ',' → logprob: -5.221794605255127
    5. '=' → logprob: -5.721794605255127
    6. ' )' → logprob: -6.471794605255127
    7. '+' → logprob: -7.721794605255127
    8. '[' → logprob: -8.096794128417969
    9. ' ' → logprob: -8.096794128417969
    10. ')=' → logprob: -8.096794128417969

Token 43: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9785036444664001
    2. ':' → logprob: -1.478503704071045
    3. '):' → logprob: -1.603503704071045
    4. '   ' → logprob: -2.728503704071045
    5. ')' → logprob: -3.228503704071045
    6. '[' → logprob: -3.603503704071045
    7. '=' → logprob: -4.103503704071045
    8. ',' → logprob: -4.478503704071045
    9. ' ' → logprob: -4.603503704071045
    10. 's' → logprob: -4.728503704071045

Token 44: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8346143960952759
    2. ' =' → logprob: -2.0846142768859863
    3. 'distance' → logprob: -2.4596142768859863
    4. ')' → logprob: -2.5846142768859863
    5. '):' → logprob: -3.0846142768859863
    6. '   ' → logprob: -3.0846142768859863
    7. 'fare' → logprob: -3.3346142768859863
    8. '[' → logprob: -3.8346142768859863
    9. ' fare' → logprob: -3.9596142768859863
    10. ' ' → logprob: -4.084614276885986

Token 45: ' distance' (ID: 9324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.391782283782959
    2. '   ' → logprob: -1.516782283782959
    3. 'distance' → logprob: -1.891782283782959
    4. ' ' → logprob: -2.141782283782959
    5. ' )' → logprob: -2.766782283782959
    6. ' fare' → logprob: -3.016782283782959
    7. 'fare' → logprob: -3.516782283782959
    8. ' distances' → logprob: -3.641782283782959
    9. ' fares' → logprob: -3.766782283782959
    10. ' distance' → logprob: -4.391782283782959

Token 46: ' up' (ID: 869)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8867203593254089
    2. 's' → logprob: -1.1367204189300537
    3. ')' → logprob: -1.6367204189300537
    4. '=' → logprob: -3.0117204189300537
    5. ' ' → logprob: -4.386720180511475
    6. ' )' → logprob: -5.761720180511475
    7. '):' → logprob: -7.011720180511475
    8. ']' → logprob: -7.261720180511475
    9. ')=' → logprob: -7.511720180511475
    10. '+' → logprob: -7.636720180511475

Token 47: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1433498859405518
    2. '=' → logprob: -1.2683498859405518
    3. ' =' → logprob: -1.6433498859405518
    4. 's' → logprob: -2.1433498859405518
    5. '[' → logprob: -4.268349647521973
    6. ' ' → logprob: -4.268349647521973
    7. ',' → logprob: -4.393349647521973
    8. '   ' → logprob: -4.643349647521973
    9. ' )' → logprob: -4.893349647521973
    10. '_to' → logprob: -5.393349647521973

Token 48: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6239503622055054
    2. ' r' → logprob: -1.7489503622055054
    3. 'r' → logprob: -1.8739503622055054
    4. '100' → logprob: -2.873950481414795
    5. ' max' → logprob: -3.873950481414795
    6. '10' → logprob: -4.123950481414795
    7. '200' → logprob: -4.748950481414795
    8. ' p' → logprob: -5.248950481414795
    9. 'max' → logprob: -5.248950481414795
    10. '500' → logprob: -5.373950481414795

Token 49: ' distance' (ID: 9324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4238961935043335
    2. '_' → logprob: -1.4238961935043335
    3. '_distance' → logprob: -3.048896312713623
    4. '(p' → logprob: -3.798896312713623
    5. ')' → logprob: -4.923896312713623
    6. ' =' → logprob: -5.173896312713623
    7. ' ' → logprob: -5.798896312713623
    8. '_r' → logprob: -5.923896312713623
    9. '=' → logprob: -5.923896312713623
    10. '(r' → logprob: -6.298896312713623

Token 50: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19080866873264313
    2. ' ' → logprob: -2.5658087730407715
    3. '=' → logprob: -3.3158087730407715
    4. ')' → logprob: -3.5658087730407715
    5. '_' → logprob: -4.0658087730407715
    6. ',' → logprob: -6.0658087730407715
    7. '   ' → logprob: -6.4408087730407715
    8. ':' → logprob: -6.5658087730407715
    9. ' _' → logprob: -6.6908087730407715
    10. ' )' → logprob: -6.9408087730407715

Token 51: 'q' (ID: 80)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5918599367141724
    2. ' p' → logprob: -2.591859817504883
    3. 'max' → logprob: -2.716859817504883
    4. ' ' → logprob: -2.841859817504883
    5. ')' → logprob: -2.966859817504883
    6. ' =' → logprob: -3.216859817504883
    7. 'r' → logprob: -3.341859817504883
    8. 'p' → logprob: -3.716859817504883
    9. ',' → logprob: -3.966859817504883
    10. ' r' → logprob: -3.966859817504883

Token 52: '[-' (ID: 17503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41918879747390747
    2. ' -' → logprob: -1.7941887378692627
    3. '):' → logprob: -2.7941887378692627
    4. '-' → logprob: -3.5441887378692627
    5. '+' → logprob: -3.9191887378692627
    6. '-p' → logprob: -4.169188976287842
    7. ' )' → logprob: -4.419188976287842
    8. ',' → logprob: -4.794188976287842
    9. '),' → logprob: -5.294188976287842
    10. '   ' → logprob: -5.419188976287842

Token 53: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6727814078330994
    2. '0' → logprob: -1.5477814674377441
    3. '])' → logprob: -1.7977814674377441
    4. '1' → logprob: -2.547781467437744
    5. ']+' → logprob: -5.047781467437744
    6. ' -' → logprob: -5.172781467437744
    7. ']' → logprob: -5.547781467437744
    8. ' ' → logprob: -5.547781467437744
    9. ')' → logprob: -5.672781467437744
    10. '])+' → logprob: -6.047781467437744

Token 54: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2868591248989105
    2. ']' → logprob: -1.536859154701233
    3. ']+' → logprob: -3.6618590354919434
    4. ']))' → logprob: -5.411859035491943
    5. ' ])' → logprob: -7.036859035491943
    6. ')' → logprob: -7.161859035491943
    7. '])+' → logprob: -7.411859035491943
    8. '+' → logprob: -7.786859035491943
    9. '])]' → logprob: -8.286859512329102
    10. ' ]' → logprob: -8.786859512329102

Token 55: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2747245132923126
    2. '+' → logprob: -2.0247244834899902
    3. ' +' → logprob: -3.1497244834899902
    4. '])' → logprob: -3.6497244834899902
    5. '   ' → logprob: -5.14972448348999
    6. ')+' → logprob: -5.14972448348999
    7. ')])' → logprob: -5.27472448348999
    8. '))' → logprob: -5.27472448348999
    9. ' )' → logprob: -5.52472448348999
    10. ']' → logprob: -5.89972448348999

Token 56: ' big' (ID: 3464)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.8691190481185913
    2. ' p' → logprob: -0.9941190481185913
    3. 'r' → logprob: -1.9941190481185913
    4. 'p' → logprob: -3.494119167327881
    5. ' max' → logprob: -3.619119167327881
    6. 'max' → logprob: -5.244119167327881
    7. ' q' → logprob: -5.369119167327881
    8. ' len' → logprob: -5.869119167327881
    9. 'len' → logprob: -6.494119167327881
    10. 'q' → logprob: -6.744119167327881

Token 57: ' enough' (ID: 4951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8537629842758179
    2. 'gest' → logprob: -1.4787629842758179
    3. ' ' → logprob: -1.9787629842758179
    4. ' )' → logprob: -2.1037631034851074
    5. ' space' → logprob: -3.3537631034851074
    6. 'space' → logprob: -4.103763103485107
    7. '_' → logprob: -5.603763103485107
    8. '   ' → logprob: -6.353763103485107
    9. ' p' → logprob: -6.353763103485107
    10. '  ' → logprob: -6.478763103485107

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08343923836946487
    2. ' )' → logprob: -2.583439350128174
    3. '+' → logprob: -6.583439350128174
    4. '):' → logprob: -6.833439350128174
    5. ' +' → logprob: -7.208439350128174
    6. ' ' → logprob: -7.708439350128174
    7. '   ' → logprob: -8.083438873291016
    8. ')
' → logprob: -9.333438873291016
    9. '),' → logprob: -9.958438873291016
    10. '  ' → logprob: -10.083438873291016

Token 59: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4085903465747833
    2. '   ' → logprob: -1.658590316772461
    3. '):' → logprob: -2.533590316772461
    4. ')' → logprob: -3.158590316772461
    5. ' ' → logprob: -5.033590316772461
    6. ',' → logprob: -5.158590316772461
    7. '[' → logprob: -6.033590316772461
    8. '
' → logprob: -6.533590316772461
    9. '):
' → logprob: -6.533590316772461
    10. ':
' → logprob: -6.908590316772461

Token 60: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5850459933280945
    2. 'max' (adapté à ' max') → logprob: -1.8350460529327393
    3. ' max' → logprob: -2.3350460529327393
    4. ' ' → logprob: -2.3350460529327393
    5. ':' → logprob: -3.3350460529327393
    6. ')' → logprob: -3.8350460529327393
    7. '    ' → logprob: -4.71004581451416
    8. 'n' → logprob: -5.21004581451416
    9. '):' → logprob: -6.08504581451416
    10. ' :' → logprob: -6.46004581451416

Token 61: '_dist' (ID: 37968)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.027370426803827286
    2. '_dist' → logprob: -3.7773704528808594
    3. '_d' → logprob: -6.027370452880859
    4. '_' → logprob: -6.527370452880859
    5. 'dist' → logprob: -9.52737045288086
    6. '_q' → logprob: -9.77737045288086
    7. 'distance' → logprob: -10.15237045288086
    8. '_dis' → logprob: -11.40237045288086
    9. '=' → logprob: -11.65237045288086
    10. 'd' → logprob: -11.90237045288086

Token 62: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10047677904367447
    2. ' =' → logprob: -2.6004767417907715
    3. 'ance' → logprob: -3.8504767417907715
    4. '=max' → logprob: -10.10047721862793
    5. '=int' → logprob: -10.85047721862793
    6. '=

' → logprob: -12.22547721862793
    7. '   ' → logprob: -12.47547721862793
    8. ',' → logprob: -12.60047721862793
    9. '=len' → logprob: -13.47547721862793
    10. ' ' → logprob: -13.72547721862793

Token 63: ' q' (ID: 2335)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.05318650230765343
    2. ' q' → logprob: -3.3031864166259766
    3. 'max' → logprob: -4.428186416625977
    4. ' ' → logprob: -6.803186416625977
    5. ' r' → logprob: -7.053186416625977
    6. 'q' → logprob: -7.053186416625977
    7. ' p' → logprob: -9.053186416625977
    8. 'r' → logprob: -9.803186416625977
    9. '100' → logprob: -10.928186416625977
    10. ' int' → logprob: -11.178186416625977

Token 64: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002993544621858746
    2. '[' → logprob: -8.125299453735352
    3. ' [-' → logprob: -13.750299453735352
    4. '-' → logprob: -13.750299453735352
    5. '   ' → logprob: -14.625299453735352
    6. '[
' → logprob: -15.250299453735352
    7. '][-' → logprob: -15.500299453735352
    8. '[len' → logprob: -15.750299453735352
    9. '```' → logprob: -16.87529945373535
    10. ')' → logprob: -17.37529945373535

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -13.500004768371582
    3. '   ' → logprob: -14.562504768371582
    4. '

' → logprob: -14.750004768371582
    5. 'len' → logprob: -14.750004768371582
    6. ']' → logprob: -14.812504768371582
    7. '  ' → logprob: -14.937504768371582
    8. '
' → logprob: -15.187504768371582
    9. '```' → logprob: -15.437504768371582
    10. '-' → logprob: -15.625004768371582

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005110184196382761
    2. ']+' → logprob: -6.130110263824463
    3. '])' → logprob: -6.130110263824463
    4. ' ]' → logprob: -7.380110263824463
    5. ')' → logprob: -9.380109786987305
    6. ')]' → logprob: -11.505109786987305
    7. ']
' → logprob: -11.880109786987305
    8. ' ])' → logprob: -11.880109786987305
    9. '])+' → logprob: -12.880109786987305
    10. ' if' → logprob: -13.505109786987305

Token 67: ' if' (ID: 538)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6363002061843872
    2. '+' → logprob: -0.7613002061843872
    3. '
' → logprob: -5.886300086975098
    4. ' ' → logprob: -8.136300086975098
    5. '   ' → logprob: -9.011300086975098
    6. '<|end|>' → logprob: -9.261300086975098
    7. '+
' → logprob: -9.386300086975098
    8. ' 
' → logprob: -9.761300086975098
    9. ' if' → logprob: -9.761300086975098
    10. ' +
' → logprob: -10.011300086975098

Token 68: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5021889209747314
    2. 'q' → logprob: -1.5021889209747314
    3. ' len' → logprob: -2.3771889209747314
    4. 'len' → logprob: -2.8771889209747314
    5. ' p' → logprob: -4.627188682556152
    6. ' r' → logprob: -5.127188682556152
    7. 'r' → logprob: -5.752188682556152
    8. 'p' → logprob: -6.127188682556152
    9. ' ' → logprob: -6.877188682556152
    10. '  ' → logprob: -8.627188682556152

Token 69: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8071685433387756
    2. ' is' → logprob: -1.1821684837341309
    3. 'else' → logprob: -1.5571684837341309
    4. '>=' → logprob: -4.557168483734131
    5. ' >=' → logprob: -5.057168483734131
    6. '<|end|>' → logprob: -5.182168483734131
    7. '>' → logprob: -5.432168483734131
    8. ' >' → logprob: -5.932168483734131
    9. ' ' → logprob: -5.932168483734131
    10. '[' → logprob: -7.182168483734131

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.178052619099617
    2. '0' → logprob: -2.0530526638031006
    3. ' r' → logprob: -4.3030524253845215
    4. '100' → logprob: -4.8030524253845215
    5. 'r' → logprob: -4.9280524253845215
    6. '1' → logprob: -6.0530524253845215
    7. '10' → logprob: -6.4280524253845215
    8. ' max' → logprob: -7.1780524253845215
    9. ' p' → logprob: -7.9280524253845215
    10. ' float' → logprob: -8.67805290222168

Token 71: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1627856343984604
    2. 'r' → logprob: -2.912785530090332
    3. '100' → logprob: -3.162785530090332
    4. '10' → logprob: -3.287785530090332
    5. ' ' → logprob: -5.037785530090332
    6. 'p' → logprob: -5.537785530090332
    7. '1' → logprob: -5.787785530090332
    8. 'float' → logprob: -7.037785530090332
    9. 'max' → logprob: -7.912785530090332
    10. '   ' → logprob: -7.912785530090332

Token 72: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5068779587745667
    2. '00' → logprob: -1.0068778991699219
    3. '000' → logprob: -4.131877899169922
    4. '**' → logprob: -4.381877899169922
    5. '   ' → logprob: -7.381877899169922
    6. '+' → logprob: -7.381877899169922
    7. ' +' → logprob: -7.506877899169922
    8. '```' → logprob: -7.506877899169922
    9. ' ' → logprob: -8.381877899169922
    10. '    
' → logprob: -8.506877899169922

Token 73: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.14599569141864777
    2. '6' → logprob: -2.645995616912842
    3. '7' → logprob: -2.895995616912842
    4. '5' → logprob: -5.395995616912842
    5. '8' → logprob: -5.520995616912842
    6. '12' → logprob: -7.895995616912842
    7. '10' → logprob: -7.895995616912842
    8. '15' → logprob: -8.64599609375
    9. '18' → logprob: -8.77099609375
    10. '14' → logprob: -11.14599609375

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16962507367134094
    2. '<|end|>' → logprob: -2.4196250438690186
    3. '+' → logprob: -3.5446250438690186
    4. '   ' → logprob: -4.669625282287598
    5. '    
' → logprob: -5.169625282287598
    6. ')' → logprob: -5.169625282287598
    7. '<|end|>' → logprob: -5.669625282287598
    8. ' ' → logprob: -6.169625282287598
    9. ' +' → logprob: -6.419625282287598
    10. ':' → logprob: -6.544625282287598

Token 75: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16428346931934357
    2. '   ' → logprob: -2.164283514022827
    3. '    
' → logprob: -4.039283275604248
    4. '<|end|>' → logprob: -5.289283275604248
    5. '
' → logprob: -5.914283275604248
    6. ')' → logprob: -6.414283275604248
    7. '  
' → logprob: -6.664283275604248
    8. ' +' → logprob: -6.664283275604248
    9. '+' → logprob: -6.789283275604248
    10. ' 
' → logprob: -7.289283275604248

Token 76: ' fare' (ID: 25285)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0222522020339966
    2. '
' → logprob: -1.6472522020339966
    3. ' fare' → logprob: -1.7722522020339966
    4. '    
' → logprob: -2.897252082824707
    5. ',' → logprob: -3.522252082824707
    6. 'fare' (adapté à ' fare') → logprob: -3.897252082824707
    7. ' 
' → logprob: -4.022252082824707
    8. ')' → logprob: -4.397252082824707
    9. ':' → logprob: -4.397252082824707
    10. 'distance' → logprob: -4.522252082824707

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6963801383972168
    2. 's' → logprob: -0.8213801383972168
    3. '=' → logprob: -3.321380138397217
    4. '_table' → logprob: -3.696380138397217
    5. ' ' → logprob: -8.071380615234375
    6. '_' → logprob: -8.571380615234375
    7. '_s' → logprob: -9.446380615234375
    8. '   ' → logprob: -10.071380615234375
    9. '[' → logprob: -10.196380615234375
    10. '=[]' → logprob: -10.321380615234375

Token 78: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47571876645088196
    2. ' [' → logprob: -0.9757187366485596
    3. '[p' → logprob: -7.350718975067139
    4. '[r' → logprob: -7.350718975067139
    5. '[q' → logprob: -8.47571849822998
    6. '[int' → logprob: -9.97571849822998
    7. '[max' → logprob: -10.22571849822998
    8. '[a' → logprob: -11.60071849822998
    9. '[f' → logprob: -11.97571849822998
    10. ' ' → logprob: -12.10071849822998

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026173729449510574
    2. '10' → logprob: -4.1511735916137695
    3. 'float' → logprob: -4.6511735916137695
    4. 'max' → logprob: -8.27617359161377
    5. 'int' → logprob: -9.77617359161377
    6. '100' → logprob: -9.77617359161377
    7. ' ' → logprob: -9.90117359161377
    8. 'None' → logprob: -10.52617359161377
    9. ']' → logprob: -10.65117359161377
    10. 'r' → logprob: -11.52617359161377

Token 80: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038379523903131485
    2. ']*(' → logprob: -5.753838062286377
    3. ']*' → logprob: -7.378838062286377
    4. ']+' → logprob: -11.253837585449219
    5. ' ]' → logprob: -11.878837585449219
    6. ' for' → logprob: -12.003837585449219
    7. 'for' → logprob: -12.128837585449219
    8. '])' → logprob: -13.378837585449219
    9. ')' → logprob: -13.628837585449219
    10. ')]' → logprob: -14.753837585449219

Token 81: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.8889261304575484e-06
    2. ' max' → logprob: -12.500003814697266
    3. '(max' → logprob: -15.875003814697266
    4. '[max' → logprob: -19.000003814697266
    5. 'ma' → logprob: -20.000003814697266
    6. ',max' → logprob: -20.000003814697266
    7. '=max' → logprob: -20.125003814697266
    8. '	max' → logprob: -20.125003814697266
    9. '0' → logprob: -20.250003814697266
    10. ':max' → logprob: -20.375003814697266

Token 82: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0001294030516874045
    2. '_' → logprob: -9.875129699707031
    3. 'dist' → logprob: -10.000129699707031
    4. '+' → logprob: -10.625129699707031
    5. ' _' → logprob: -13.500129699707031
    6. 'Dist' → logprob: -13.750129699707031
    7. '_d' → logprob: -14.375129699707031
    8. '	dist' → logprob: -14.375129699707031
    9. ' ' → logprob: -14.500129699707031
    10. ' +' → logprob: -14.625129699707031

Token 83: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005530327325686812
    2. ' +' → logprob: -7.500553131103516
    3. ')' → logprob: -17.500553131103516
    4. ')+' → logprob: -17.875553131103516
    5. '+xml' → logprob: -19.125553131103516
    6. '+
' → logprob: -19.625553131103516
    7. ' ' → logprob: -19.875553131103516
    8. '+r' → logprob: -20.125553131103516
    9. '+)' → logprob: -20.125553131103516
    10. '()+' → logprob: -20.250553131103516

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. '2' → logprob: -11.250024795532227
    3. ' ' → logprob: -11.375024795532227
    4. '   ' → logprob: -16.375024795532227
    5. '  ' → logprob: -17.250024795532227
    6. '10' → logprob: -17.250024795532227
    7. ')' → logprob: -17.687524795532227
    8. '100' → logprob: -18.062524795532227
    9. '```' → logprob: -18.250024795532227
    10. '+' → logprob: -18.437524795532227

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009621966164559126
    2. ')
' → logprob: -7.000962257385254
    3. ' )' → logprob: -10.500962257385254
    4. ')

' → logprob: -11.250962257385254
    5. ')
' → logprob: -11.625962257385254
    6. ')

' → logprob: -15.125962257385254
    7. ' )
' → logprob: -15.375962257385254
    8. '+' → logprob: -15.625962257385254
    9. ')#' → logprob: -16.000961303710938
    10. '),' → logprob: -16.250961303710938

Token 86: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7502315640449524
    2. '   ' → logprob: -0.8752315640449524
    3. 'for' → logprob: -2.3752315044403076
    4. ' i' → logprob: -4.875231742858887
    5. 'i' → logprob: -5.500231742858887
    6. ' current' → logprob: -7.000231742858887
    7. '
' → logprob: -7.125231742858887
    8. ' last' → logprob: -7.125231742858887
    9. 'current' → logprob: -7.250231742858887
    10. ')' → logprob: -7.750231742858887

Token 87: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2282891273498535
    2. ' for' → logprob: -1.4782891273498535
    3. 'i' → logprob: -1.8532891273498535
    4. 'idx' (adapté à ' idx') → logprob: -2.8532891273498535
    5. 'current' → logprob: -2.9782891273498535
    6. 'j' → logprob: -2.9782891273498535
    7. 'last' → logprob: -3.3532891273498535
    8. ' last' → logprob: -3.3532891273498535
    9. ' i' → logprob: -3.8532891273498535
    10. 'cur' → logprob: -4.1032891273498535

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030560730025172234
    2. '=' → logprob: -3.5305607318878174
    3. ' ' → logprob: -7.155560493469238
    4. '  ' → logprob: -11.780560493469238
    5. 's' → logprob: -12.030560493469238
    6. ',' → logprob: -12.155560493469238
    7. '<|end|>' → logprob: -12.905560493469238
    8. '   ' → logprob: -13.030560493469238
    9. '<|end|>' → logprob: -14.530560493469238
    10. ')' → logprob: -14.530560493469238

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010569384321570396
    2. ' ' → logprob: -4.6355695724487305
    3. '1' → logprob: -7.1355695724487305
    4. '<|end|>' → logprob: -11.63556957244873
    5. '   ' → logprob: -13.26056957244873
    6. '  ' → logprob: -13.38556957244873
    7. '-' → logprob: -14.26056957244873
    8. '[' → logprob: -14.32306957244873
    9. 'len' → logprob: -14.51056957244873
    10. '<|end|>' → logprob: -14.69806957244873

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004724987084046006
    2. '1' → logprob: -7.750472545623779
    3. ' ' → logprob: -10.125472068786621
    4. 'len' → logprob: -14.250472068786621
    5. '[' → logprob: -15.000472068786621
    6. '-' → logprob: -15.250472068786621
    7. '   ' → logprob: -15.687972068786621
    8. '<|end|>' → logprob: -16.062973022460938
    9. '  ' → logprob: -16.187973022460938
    10. '...' → logprob: -17.062973022460938

Token 91: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9475323557853699
    2. 'for' → logprob: -1.3225324153900146
    3. '   ' → logprob: -1.9475324153900146
    4. '<|end|>' → logprob: -2.4475324153900146
    5. ' ' → logprob: -2.8225324153900146
    6. '
' → logprob: -4.3225321769714355
    7. ' while' → logprob: -4.9475321769714355
    8. '  ' → logprob: -5.1975321769714355
    9. ' 
' → logprob: -5.3225321769714355
    10. 'd' → logprob: -5.8225321769714355

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1334124207496643
    2. ' for' → logprob: -2.1334123611450195
    3. 'f' → logprob: -5.7584123611450195
    4. ' ' → logprob: -6.7584123611450195
    5. 'd' → logprob: -7.3834123611450195
    6. 'n' → logprob: -8.00841236114502
    7. 'i' → logprob: -8.50841236114502
    8. ')' → logprob: -8.88341236114502
    9. 'q' → logprob: -9.00841236114502
    10. ',' → logprob: -9.25841236114502

Token 94: ' dist' (ID: 3601)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18595027923583984
    2. ' ' → logprob: -1.8109502792358398
    3. ' range' → logprob: -6.18595027923584
    4. ' in' → logprob: -6.43595027923584
    5. ' _' → logprob: -7.31095027923584
    6. 'i' → logprob: -7.31095027923584
    7. '_' → logprob: -8.56095027923584
    8. ' r' → logprob: -8.56095027923584
    9. ' idx' → logprob: -8.56095027923584
    10. ')' → logprob: -9.06095027923584

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029359303414821625
    2. 'in' → logprob: -3.6543593406677246
    3. ',' → logprob: -6.404359340667725
    4. ' ' → logprob: -7.154359340667725
    5. ' ,' → logprob: -8.279358863830566
    6. '=' → logprob: -9.154358863830566
    7. ' =' → logprob: -9.404358863830566
    8. '   ' → logprob: -10.404358863830566
    9. '  ' → logprob: -10.529358863830566
    10. ')' → logprob: -10.779358863830566

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008629352785646915
    2. 'range' → logprob: -4.758629322052002
    3. ' q' → logprob: -11.38362979888916
    4. ' ' → logprob: -13.63362979888916
    5. '(range' → logprob: -13.63362979888916
    6. '	range' → logprob: -14.75862979888916
    7. 'q' → logprob: -15.50862979888916
    8. ' xrange' → logprob: -15.75862979888916
    9. '  ' → logprob: -16.633628845214844
    10. ' r' → logprob: -16.633628845214844

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.031083691865205765
    2. '(max' → logprob: -3.531083583831787
    3. '(q' → logprob: -6.656083583831787
    4. '1' → logprob: -10.656084060668945
    5. '(len' → logprob: -11.031084060668945
    6. ' (' → logprob: -12.406084060668945
    7. ' max' → logprob: -14.031084060668945
    8. ' ' → logprob: -14.531084060668945
    9. 'max' → logprob: -14.781084060668945
    10. '(m' → logprob: -15.406084060668945

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6996910572052002
    2. 'max' → logprob: -0.6996910572052002
    3. ' max' → logprob: -5.199690818786621
    4. ' ' → logprob: -7.324690818786621
    5. 'q' → logprob: -8.449690818786621
    6. 'len' → logprob: -9.324690818786621
    7. '   ' → logprob: -11.324690818786621
    8. '0' → logprob: -11.449690818786621
    9. ' q' → logprob: -11.949690818786621
    10. '(max' → logprob: -12.574690818786621

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047363635152578354
    2. ' ,' → logprob: -3.172363519668579
    3. ',max' → logprob: -5.547363758087158
    4. '   ' → logprob: -8.42236328125
    5. ',len' → logprob: -8.92236328125
    6. ' ' → logprob: -9.42236328125
    7. 'max' → logprob: -11.92236328125
    8. ' max' → logprob: -12.17236328125
    9. ',q' → logprob: -12.67236328125
    10. ',
' → logprob: -13.29736328125

Token 100: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005545823951251805
    2. ' max' → logprob: -7.50055456161499
    3. 'len' → logprob: -13.375555038452148
    4. '	max' → logprob: -18.50055503845215
    5. '(max' → logprob: -18.87555503845215
    6. '[max' → logprob: -19.37555503845215
    7. ' len' → logprob: -19.37555503845215
    8. 'm' → logprob: -20.12555503845215
    9. '   ' → logprob: -21.37555503845215
    10. ',max' → logprob: -21.50055503845215

Token 101: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00034476007567718625
    2. 'dist' → logprob: -8.000345230102539
    3. 'Dist' → logprob: -12.750345230102539
    4. 'q' → logprob: -13.625345230102539
    5. '   ' → logprob: -14.000345230102539
    6. '	dist' → logprob: -14.375345230102539
    7. '_len' → logprob: -14.750345230102539
    8. '_' → logprob: -15.125345230102539
    9. '[' → logprob: -15.250345230102539
    10. ')' → logprob: -15.250345230102539

Token 102: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06230846792459488
    2. '):' → logprob: -2.9373085498809814
    3. ' +' → logprob: -4.937308311462402
    4. '):
' → logprob: -8.687308311462402
    5. ' ):' → logprob: -10.062308311462402
    6. ')' → logprob: -12.562308311462402
    7. '   ' → logprob: -12.812308311462402
    8. ' ' → logprob: -13.062308311462402
    9. ':' → logprob: -13.937308311462402
    10. '1' → logprob: -14.187308311462402

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -15.87501335144043
    4. ')' → logprob: -16.12501335144043
    5. '2' → logprob: -16.62501335144043
    6. '+' → logprob: -17.25001335144043
    7. '   ' → logprob: -17.31251335144043
    8. '):
' → logprob: -17.50001335144043
    9. '
' → logprob: -18.12501335144043
    10. '0' → logprob: -19.18751335144043

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.036360785365104675
    2. '):
' → logprob: -3.411360740661621
    3. ':' → logprob: -6.661360740661621
    4. ')' → logprob: -7.036360740661621
    5. ' ):' → logprob: -7.661360740661621
    6. ' ):
' → logprob: -10.036360740661621
    7. ',' → logprob: -11.411360740661621
    8. '):
' → logprob: -11.786360740661621
    9. ' )' → logprob: -12.161360740661621
    10. '   ' → logprob: -12.161360740661621

Token 105: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.350847452878952
    2. '       ' → logprob: -1.8508474826812744
    3. '<|end|>' → logprob: -3.2258474826812744
    4. ' if' → logprob: -3.6008474826812744
    5. ')' → logprob: -3.8508474826812744
    6. '   ' → logprob: -4.225847244262695
    7. '    ' → logprob: -4.475847244262695
    8. ' fare' → logprob: -4.850847244262695
    9. ' 
' → logprob: -5.350847244262695
    10. 's' → logprob: -5.725847244262695

Token 106: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0717782974243164
    2. ' while' → logprob: -1.1967782974243164
    3. 'fare' → logprob: -2.1967782974243164
    4. ' if' → logprob: -2.3217782974243164
    5. '   ' → logprob: -2.9467782974243164
    6. 'if' (adapté à ' if') → logprob: -2.9467782974243164
    7. ' fare' → logprob: -3.1967782974243164
    8. '	while' → logprob: -9.571778297424316
    9. ' ' → logprob: -9.821778297424316
    10. '       ' → logprob: -10.321778297424316

Token 107: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.08248050510883331
    2. 'idx' → logprob: -3.2074804306030273
    3. ' dist' → logprob: -3.3324804306030273
    4. 'dist' → logprob: -6.082480430603027
    5. ' q' → logprob: -7.832480430603027
    6. '	idx' → logprob: -8.457480430603027
    7. 'q' → logprob: -9.957480430603027
    8. '	dist' → logprob: -10.957480430603027
    9. '   ' → logprob: -11.332480430603027
    10. ' ' → logprob: -11.332480430603027

Token 108: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6922474503517151
    2. '<len' → logprob: -1.3172473907470703
    3. ' <' → logprob: -1.9422473907470703
    4. '+' → logprob: -2.4422473907470703
    5. ' +' → logprob: -7.19224739074707
    6. '>=' → logprob: -8.56724739074707
    7. '<n' → logprob: -9.19224739074707
    8. '<size' → logprob: -9.69224739074707
    9. '==' → logprob: -10.19224739074707
    10. '<th' → logprob: -10.56724739074707

Token 109: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.252146452665329
    2. ' len' → logprob: -1.5021464824676514
    3. 'r' → logprob: -9.37714672088623
    4. 'p' → logprob: -10.12714672088623
    5. ' p' → logprob: -10.12714672088623
    6. ' r' → logprob: -10.37714672088623
    7. '(len' → logprob: -11.75214672088623
    8. ' ' → logprob: -12.50214672088623
    9. 'q' → logprob: -12.87714672088623
    10. '	len' → logprob: -13.25214672088623

Token 110: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.4010602831840515
    2. '(r' → logprob: -1.1510603427886963
    3. '(p' → logprob: -4.276060104370117
    4. 'r' → logprob: -9.401060104370117
    5. 'q' → logprob: -9.651060104370117
    6. '(' → logprob: -10.401060104370117
    7. 'p' → logprob: -12.026060104370117
    8. '(f' → logprob: -13.151060104370117
    9. ' (' → logprob: -13.401060104370117
    10. '

' → logprob: -14.026060104370117

Token 111: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5039114952087402
    2. 'and' → logprob: -1.5039114952087402
    3. ')' → logprob: -1.7539114952087402
    4. ' )' → logprob: -7.75391149520874
    5. ' ' → logprob: -10.753911972045898
    6. '-' → logprob: -11.503911972045898
    7. ' и' → logprob: -13.003911972045898
    8. '   ' → logprob: -13.128911972045898
    9. '       ' → logprob: -13.378911972045898
    10. '0' → logprob: -13.503911972045898

Token 112: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47410765290260315
    2. 'and' → logprob: -0.9741076231002808
    3. ' ' → logprob: -11.97410774230957
    4. '   ' → logprob: -12.09910774230957
    5. '-' → logprob: -12.59910774230957
    6. '+' → logprob: -12.84910774230957
    7. '==' → logprob: -13.09910774230957
    8. '	and' → logprob: -13.22410774230957
    9. '=' → logprob: -13.84910774230957
    10. 'a' → logprob: -14.09910774230957

Token 113: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.14649610221385956
    2. 'dist' → logprob: -2.021496057510376
    3. ' q' → logprob: -5.771496295928955
    4. 'q' → logprob: -7.396496295928955
    5. ' ' → logprob: -10.396495819091797
    6. '   ' → logprob: -11.021495819091797
    7. '	dist' → logprob: -11.021495819091797
    8. ' p' → logprob: -12.271495819091797
    9. '(dist' → logprob: -12.583995819091797
    10. '  ' → logprob: -13.021495819091797

Token 114: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.3370152711868286
    2. '>=' → logprob: -1.5870152711868286
    3. ' >' → logprob: -1.7120152711868286
    4. ' >=' → logprob: -2.212015151977539
    5. '==' → logprob: -2.212015151977539
    6. ' ==' → logprob: -2.337015151977539
    7. '<=' → logprob: -3.962015151977539
    8. ' <=' → logprob: -4.087015151977539
    9. ' ' → logprob: -8.212015151977539
    10. '<' → logprob: -8.462015151977539

Token 115: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.038047224283218384
    2. ' q' → logprob: -3.2880473136901855
    3. '	q' → logprob: -13.288046836853027
    4. '   ' → logprob: -14.163046836853027
    5. '<|end|>' → logprob: -14.413046836853027
    6. ' ' → logprob: -14.663046836853027
    7. 'Q' → logprob: -15.163046836853027
    8. '[q' → logprob: -15.163046836853027
    9. '<|end|>' → logprob: -15.538046836853027
    10. '$q' → logprob: -15.663046836853027

Token 116: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.857719275401905e-05
    2. 'idx' → logprob: -10.625038146972656
    3. '[' → logprob: -11.250038146972656
    4. '	idx' → logprob: -15.000038146972656
    5. ' idx' → logprob: -15.500038146972656
    6. '(idx' → logprob: -15.750038146972656
    7. ' [' → logprob: -15.875038146972656
    8. '[
' → logprob: -16.125038146972656
    9. '```' → logprob: -16.500038146972656
    10. '[id' → logprob: -16.625038146972656

Token 117: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39404547214508057
    2. ']:' → logprob: -1.2690454721450806
    3. '):
' → logprob: -4.019045352935791
    4. ']):' → logprob: -4.394045352935791
    5. ':' → logprob: -5.269045352935791
    6. ']:
' → logprob: -6.019045352935791
    7. ' ):' → logprob: -6.644045352935791
    8. '[' → logprob: -6.644045352935791
    9. ']' → logprob: -7.144045352935791
    10. ']):
' → logprob: -7.269045352935791

Token 118: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11326234042644501
    2. ':' → logprob: -2.738262414932251
    3. ' idx' → logprob: -4.613262176513672
    4. '   ' → logprob: -4.863262176513672
    5. '           ' → logprob: -4.988262176513672
    6. ':
' → logprob: -5.738262176513672
    7. 'idx' → logprob: -6.238262176513672
    8. '):' → logprob: -6.238262176513672
    9. '[idx' → logprob: -6.613262176513672
    10. '<|end|>' → logprob: -6.738262176513672

Token 119: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.7701168656349182
    2. ' idx' → logprob: -1.0201168060302734
    3. '       ' → logprob: -1.7701168060302734
    4. '	idx' → logprob: -5.770116806030273
    5. '   ' → logprob: -6.270116806030273
    6. '           ' → logprob: -8.145116806030273
    7. '               ' → logprob: -8.145116806030273
    8. '[idx' → logprob: -8.145116806030273
    9. '(idx' → logprob: -9.145116806030273
    10. '	   ' → logprob: -9.645116806030273

Token 120: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931958794593811
    2. '+=' → logprob: -0.6931958794593811
    3. '=' → logprob: -10.443196296691895
    4. '   ' → logprob: -11.568196296691895
    5. '+' → logprob: -12.443196296691895
    6. ']+=' → logprob: -12.443196296691895
    7. ' =' → logprob: -14.193196296691895
    8. '    ' → logprob: -14.443196296691895
    9. '<|end|>' → logprob: -14.693196296691895
    10. '```' → logprob: -15.693196296691895

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '0' → logprob: -16.625085830688477
    4. '   ' → logprob: -17.625085830688477
    5. '
' → logprob: -18.625085830688477
    6. '```' → logprob: -19.312585830688477
    7. '+' → logprob: -19.375085830688477
    8. '  ' → logprob: -20.375085830688477
    9. ' ' → logprob: -20.875085830688477
    10. '<|end|>' → logprob: -20.937585830688477

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -12.250008583068848
    3. '0' → logprob: -12.500008583068848
    4. '```' → logprob: -17.12500762939453
    5. '   ' → logprob: -18.75000762939453
    6. '
' → logprob: -19.06250762939453
    7. '+' → logprob: -20.18750762939453
    8. '<|end|>' → logprob: -20.31250762939453
    9. '2' → logprob: -20.50000762939453
    10. '  ' → logprob: -20.56250762939453

Token 123: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13123787939548492
    2. '    
' → logprob: -3.6312379837036133
    3. ' 
' → logprob: -3.6312379837036133
    4. '
' → logprob: -3.7562379837036133
    5. '       ' → logprob: -3.8812379837036133
    6. ' fare' → logprob: -4.881237983703613
    7. ')' → logprob: -5.256237983703613
    8. '<|end|>' → logprob: -5.506237983703613
    9. '  
' → logprob: -6.631237983703613
    10. '[' → logprob: -7.006237983703613

Token 124: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02508462965488434
    2. '       ' → logprob: -4.650084495544434
    3. ' fare' → logprob: -4.900084495544434
    4. ' 
' → logprob: -6.525084495544434
    5. '    
' → logprob: -6.525084495544434
    6. '
' → logprob: -6.775084495544434
    7. ')' → logprob: -7.025084495544434
    8. ' ' → logprob: -7.650084495544434
    9. ' if' → logprob: -7.650084495544434
    10. 'fare' → logprob: -7.775084495544434

Token 125: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' (adapté à ' fare') → logprob: -0.2279791682958603
    2. ' fare' → logprob: -2.2279791831970215
    3. '   ' → logprob: -2.3529791831970215
    4. ' if' → logprob: -8.602978706359863
    5. '
' → logprob: -8.852978706359863
    6. 'if' → logprob: -8.852978706359863
    7. ' ' → logprob: -9.227978706359863
    8. 'fa' → logprob: -9.290478706359863
    9. 'fair' → logprob: -9.790478706359863
    10. '  ' → logprob: -9.977978706359863

Token 126: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.028536492725834e-05
    2. 'dist' → logprob: -10.000070571899414
    3. '=' → logprob: -11.500070571899414
    4. ' [' → logprob: -12.625070571899414
    5. '(dist' → logprob: -13.000070571899414
    6. ' dist' → logprob: -13.625070571899414
    7. '[s' → logprob: -14.250070571899414
    8. 's' → logprob: -14.375070571899414
    9. '_dist' → logprob: -14.375070571899414
    10. '][' → logprob: -14.500070571899414

Token 127: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00013738969573751092
    2. ' dist' → logprob: -9.000137329101562
    3. ']' → logprob: -11.500137329101562
    4. 'idx' → logprob: -13.875137329101562
    5. '	dist' → logprob: -13.875137329101562
    6. '][' → logprob: -14.625137329101562
    7. '_dist' → logprob: -15.250137329101562
    8. '(dist' → logprob: -15.250137329101562
    9. 'd' → logprob: -15.625137329101562
    10. '   ' → logprob: -15.750137329101562

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004581942630466074
    2. ']=' → logprob: -7.750458240509033
    3. '=' → logprob: -11.000457763671875
    4. ' ]' → logprob: -11.625457763671875
    5. ']+=' → logprob: -13.875457763671875
    6. ')' → logprob: -14.875457763671875
    7. 's' → logprob: -15.000457763671875
    8. ' =' → logprob: -16.000457763671875
    9. '[' → logprob: -16.500457763671875
    10. '-' → logprob: -16.875457763671875

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0141762038692832
    2. ' =' → logprob: -4.264176368713379
    3. '+=' → logprob: -11.764176368713379
    4. ' +=' → logprob: -12.514176368713379
    5. ')' → logprob: -14.889176368713379
    6. ']' → logprob: -15.139176368713379
    7. 's' → logprob: -15.389176368713379
    8. ']=' → logprob: -16.514175415039062
    9. '=

' → logprob: -16.514175415039062
    10. '=f' → logprob: -16.764175415039062

Token 130: ' fare' (ID: 25285)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05841095745563507
    2. 'p' → logprob: -2.933410882949829
    3. ' r' → logprob: -5.808411121368408
    4. ' p' → logprob: -7.808411121368408
    5. '   ' → logprob: -9.55841064453125
    6. ' ' → logprob: -10.93341064453125
    7. 'max' → logprob: -11.55841064453125
    8. '	r' → logprob: -12.55841064453125
    9. '  ' → logprob: -13.37091064453125
    10. '(r' → logprob: -13.68341064453125

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011796315666288137
    2. 'dist' → logprob: -6.7511796951293945
    3. '[max' → logprob: -12.876179695129395
    4. '(dist' → logprob: -13.001179695129395
    5. ' dist' → logprob: -13.251179695129395
    6. ' [' → logprob: -14.001179695129395
    7. '[q' → logprob: -15.001179695129395
    8. '[-' → logprob: -15.126179695129395
    9. '[d' → logprob: -15.251179695129395
    10. '	dist' → logprob: -15.501179695129395

Token 132: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.9981420336989686e-05
    2. ' dist' → logprob: -10.875020027160645
    3. '[' → logprob: -14.125020027160645
    4. '(dist' → logprob: -15.625020027160645
    5. '-' → logprob: -16.750019073486328
    6. '	dist' → logprob: -17.625019073486328
    7. '-dist' → logprob: -19.500019073486328
    8. 'd' → logprob: -19.875019073486328
    9. 'def' → logprob: -20.000019073486328
    10. '   ' → logprob: -20.125019073486328

Token 133: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030140820890665054
    2. '[' → logprob: -3.7801408767700195
    3. 'dist' → logprob: -5.0301408767700195
    4. '-dist' → logprob: -8.53014087677002
    5. ' -' → logprob: -9.03014087677002
    6. '[-' → logprob: -12.15514087677002
    7. ']' → logprob: -12.78014087677002
    8. ' dist' → logprob: -12.90514087677002
    9. '(dist' → logprob: -12.90514087677002
    10. '_dist' → logprob: -13.15514087677002

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.309382373117842e-05
    2. ' ' → logprob: -10.375033378601074
    3. ']' → logprob: -13.875033378601074
    4. '
' → logprob: -15.375033378601074
    5. '   ' → logprob: -15.750033378601074
    6. 'def' → logprob: -16.250032424926758
    7. '```' → logprob: -16.250032424926758
    8. '-' → logprob: -16.812532424926758
    9. 'dist' → logprob: -16.812532424926758
    10. '<|end|>' → logprob: -17.375032424926758

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02651021257042885
    2. ']+' → logprob: -3.651510238647461
    3. '+' → logprob: -9.276510238647461
    4. ' ]' → logprob: -10.026510238647461
    5. ' if' → logprob: -10.401510238647461
    6. ')' → logprob: -10.776510238647461
    7. ']+=' → logprob: -12.151510238647461
    8. 'if' → logprob: -12.776510238647461
    9. ' +' → logprob: -12.776510238647461
    10. ')+' → logprob: -13.276510238647461

Token 136: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12595513463020325
    2. ' +' → logprob: -2.250955104827881
    3. '+r' → logprob: -4.375955104827881
    4. '+p' → logprob: -8.625955581665039
    5. ' if' → logprob: -9.375955581665039
    6. 'r' → logprob: -10.125955581665039
    7. 'if' → logprob: -10.375955581665039
    8. ']+' → logprob: -10.375955581665039
    9. 'p' → logprob: -11.125955581665039
    10. ' plus' → logprob: -11.250955581665039

Token 137: ' r' (ID: 428)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6985935568809509
    2. 'r' → logprob: -0.6985935568809509
    3. '(p' → logprob: -5.573593616485596
    4. '(r' → logprob: -6.698593616485596
    5. '(' → logprob: -8.698593139648438
    6. ' p' → logprob: -9.198593139648438
    7. ' r' → logprob: -9.323593139648438
    8. ' (' → logprob: -11.073593139648438
    9. '0' → logprob: -12.323593139648438
    10. 'q' → logprob: -12.448593139648438

Token 138: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0006271334132179618
    2. 'idx' → logprob: -7.500627040863037
    3. '[' → logprob: -9.625627517700195
    4. ' idx' → logprob: -12.625627517700195
    5. ' [' → logprob: -14.000627517700195
    6. '[id' → logprob: -14.375627517700195
    7. '	idx' → logprob: -14.375627517700195
    8. '[max' → logprob: -14.500627517700195
    9. '[i' → logprob: -15.000627517700195
    10. '[p' → logprob: -15.500627517700195

Token 139: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004170873435214162
    2. ' ]' → logprob: -8.37541675567627
    3. ')]' → logprob: -9.37541675567627
    4. ']
' → logprob: -10.50041675567627
    5. '[' → logprob: -10.62541675567627
    6. ')' → logprob: -10.87541675567627
    7. '])' → logprob: -11.62541675567627
    8. ']*' → logprob: -11.87541675567627
    9. '<|end|>' → logprob: -12.87541675567627
    10. '-' → logprob: -13.00041675567627

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7149474024772644
    2. '<|end|>' → logprob: -0.9649474024772644
    3. '
' → logprob: -2.339947462081909
    4. '\n' → logprob: -3.839947462081909
    5. '    
' → logprob: -5.71494722366333
    6. '	return' → logprob: -6.83994722366333
    7. 'return' → logprob: -6.83994722366333
    8. ' return' → logprob: -6.96494722366333
    9. '<|end|>' → logprob: -6.96494722366333
    10. ' ' → logprob: -6.96494722366333

Token 141: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.00016623330884613097
    2. ' fare' → logprob: -8.750165939331055
    3. 'far' → logprob: -12.750165939331055
    4. 'f' → logprob: -13.000165939331055
    5. 'fa' → logprob: -13.375165939331055
    6. 'fair' → logprob: -14.000165939331055
    7. 'Fare' → logprob: -17.125165939331055
    8. '(f' → logprob: -17.875165939331055
    9. 'fee' → logprob: -18.750165939331055
    10. '[f' → logprob: -19.250165939331055

Token 143: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00045545989996753633
    2. '
' → logprob: -8.625455856323242
    3. '```' → logprob: -9.000455856323242
    4. ' def' → logprob: -9.625455856323242
    5. '#' → logprob: -10.500455856323242
    6. 'import' → logprob: -11.250455856323242
    7. '<|end|>' → logprob: -11.625455856323242
    8. '    
' → logprob: -12.125455856323242
    9. '\' → logprob: -12.250455856323242
    10. '[' → logprob: -12.750455856323242

Token 145: ' fare' (ID: 25285)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5678131580352783
    2. ' main' → logprob: -1.1928131580352783
    3. 'd' → logprob: -2.8178131580352783
    4. 'main' → logprob: -3.1928131580352783
    5. ' solve' → logprob: -3.8178131580352783
    6. 'solve' → logprob: -5.317812919616699
    7. ' shortest' → logprob: -7.442812919616699
    8. ' solution' → logprob: -8.4428129196167
    9. ' min' → logprob: -8.5678129196167
    10. ' find' → logprob: -8.9428129196167

Token 146: '_cost' (ID: 36820)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008004531264305115
    2. '(distance' → logprob: -4.883004665374756
    3. '(p' → logprob: -8.633004188537598
    4. '_distance' → logprob: -9.258004188537598
    5. '(dist' → logprob: -10.383004188537598
    6. 's' → logprob: -11.258004188537598
    7. '_' → logprob: -11.633004188537598
    8. '(s' → logprob: -11.758004188537598
    9. '(f' → logprob: -12.383004188537598
    10. 'distance' → logprob: -12.508004188537598

Token 147: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8591201305389404
    2. '(p' → logprob: -1.4841201305389404
    3. '(distance' → logprob: -1.4841201305389404
    4. '(start' → logprob: -3.1091201305389404
    5. '(s' → logprob: -3.4841201305389404
    6. '(from' → logprob: -4.2341203689575195
    7. '(source' → logprob: -4.6091203689575195
    8. '(u' → logprob: -5.2341203689575195
    9. '(path' → logprob: -5.4841203689575195
    10. '(d' → logprob: -5.8591203689575195

Token 148: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.1954934000968933
    2. ')' → logprob: -2.695493459701538
    3. '(' → logprob: -2.945493459701538
    4. 'a' → logprob: -4.195493221282959
    5. 'or' → logprob: -4.445493221282959
    6. 'ares' → logprob: -4.820493221282959
    7. '[' → logprob: -5.070493221282959
    8. 'rom' → logprob: -5.445493221282959
    9. 'ar' → logprob: -5.695493221282959
    10. 'unction' → logprob: -6.195493221282959

Token 149: '_table' (ID: 11721)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015060516307130456
    2. ' ,' → logprob: -6.7515058517456055
    3. '[' → logprob: -9.751505851745605
    4. ',d' → logprob: -9.751505851745605
    5. 'distance' → logprob: -10.001505851745605
    6. '):' → logprob: -10.001505851745605
    7. 's' → logprob: -10.501505851745605
    8. ',p' → logprob: -10.876505851745605
    9. ',f' → logprob: -11.126505851745605
    10. ',start' → logprob: -11.876505851745605

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001114616054110229
    2. ' ,' → logprob: -6.876114845275879
    3. ',p' → logprob: -10.876114845275879
    4. '):' → logprob: -11.251114845275879
    5. ',d' → logprob: -11.376114845275879
    6. '[' → logprob: -11.501114845275879
    7. ',f' → logprob: -11.876114845275879
    8. 'distance' → logprob: -12.376114845275879
    9. ',n' → logprob: -12.876114845275879
    10. '   ' → logprob: -13.626114845275879

Token 151: ' dist' (ID: 3601)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9926050305366516
    2. 'dist' → logprob: -1.3676049709320068
    3. 'distance' → logprob: -1.4926049709320068
    4. 'd' → logprob: -2.867604970932007
    5. ' start' → logprob: -3.242604970932007
    6. ' dist' → logprob: -3.867604970932007
    7. ' distance' → logprob: -4.742605209350586
    8. 'a' → logprob: -4.867605209350586
    9. 's' → logprob: -5.117605209350586
    10. 'from' → logprob: -5.492605209350586

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007069521816447377
    2. '):
' → logprob: -8.000706672668457
    3. ')' → logprob: -8.125706672668457
    4. ' ):' → logprob: -9.500706672668457
    5. ':' → logprob: -16.000707626342773
    6. '):

' → logprob: -16.125707626342773
    7. ' )' → logprob: -16.125707626342773
    8. '):
' → logprob: -16.250707626342773
    9. ' ' → logprob: -16.375707626342773
    10. ')：' → logprob: -16.625707626342773

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21530616283416748
    2. ' return' → logprob: -1.7153061628341675
    3. 'return' → logprob: -4.715306282043457
    4. ' if' → logprob: -6.465306282043457
    5. '[' → logprob: -6.840306282043457
    6. ':' → logprob: -6.965306282043457
    7. ' fare' → logprob: -7.965306282043457
    8. ':return' → logprob: -8.340306282043457
    9. '    ' → logprob: -8.715306282043457
    10. 'if' → logprob: -9.340306282043457

Token 154: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20356905460357666
    2. 'return' → logprob: -1.7035690546035767
    3. ' if' → logprob: -6.203568935394287
    4. 'if' (adapté à ' if') → logprob: -9.453569412231445
    5. ' fare' → logprob: -10.453569412231445
    6. '   ' → logprob: -10.953569412231445
    7. 'fare' → logprob: -12.578569412231445
    8. ':return' → logprob: -14.453569412231445
    9. ' 
' → logprob: -14.828569412231445
    10. 'def' → logprob: -15.203569412231445

Token 155: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.029763920232653618
    2. 'dist' → logprob: -3.52976393699646
    3. '0' → logprob: -12.279764175415039
    4. ' not' → logprob: -12.529764175415039
    5. ' ' → logprob: -12.779764175415039
    6. '	dist' → logprob: -13.404764175415039
    7. '(dist' → logprob: -14.904764175415039
    8. '_dist' → logprob: -16.40476417541504
    9. 'not' → logprob: -16.40476417541504
    10. '1' → logprob: -16.65476417541504

Token 156: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.2678048610687256
    2. ' >=' → logprob: -1.6428048610687256
    3. ' <' → logprob: -2.0178048610687256
    4. ' >' → logprob: -2.0178048610687256
    5. '<=' → logprob: -2.7678048610687256
    6. '>' → logprob: -2.8928048610687256
    7. '==' → logprob: -3.1428048610687256
    8. ' ==' → logprob: -3.1428048610687256
    9. '>=' → logprob: -3.5178048610687256
    10. '<' → logprob: -3.7678048610687256

Token 157: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715967319905758
    2. ' ' → logprob: -5.006715774536133
    3. ' -' → logprob: -15.756715774536133
    4. '-' → logprob: -15.881715774536133
    5. 'None' → logprob: -16.006715774536133
    6. '   ' → logprob: -16.256715774536133
    7. ' None' → logprob: -17.006715774536133
    8. '  ' → logprob: -17.756715774536133
    9. 'float' → logprob: -18.631715774536133
    10. '```' → logprob: -18.881715774536133

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020628207130357623
    2. ' ' → logprob: -8.500205993652344
    3. '-' → logprob: -13.875205993652344
    4. 'None' → logprob: -14.562705993652344
    5. ' -' → logprob: -15.250205993652344
    6. 'float' → logprob: -15.812705993652344
    7. '   ' → logprob: -15.937705993652344
    8. 'sys' → logprob: -16.187705993652344
    9. 'undefined' → logprob: -16.187705993652344
    10. ')' → logprob: -16.812705993652344

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3430929183959961
    2. ':
' → logprob: -1.718092918395996
    3. ':return' → logprob: -2.218092918395996
    4. '   ' → logprob: -6.843092918395996
    5. ' return' → logprob: -8.218092918395996
    6. 'return' → logprob: -8.468092918395996
    7. ')' → logprob: -9.093092918395996
    8. ' ' → logprob: -9.218092918395996
    9. '
' → logprob: -9.343092918395996
    10. '0' → logprob: -9.718092918395996

Token 160: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1702968329191208
    2. ' return' → logprob: -2.5452969074249268
    3. '       ' → logprob: -3.2952969074249268
    4. '   ' → logprob: -3.9202969074249268
    5. ' ' → logprob: -4.420296669006348
    6. 'return' → logprob: -5.045296669006348
    7. ' 
' → logprob: -6.670296669006348
    8. '
' → logprob: -7.045296669006348
    9. ':return' → logprob: -8.670296669006348
    10. '	return' → logprob: -8.795296669006348

Token 161: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38738319277763367
    2. ' return' → logprob: -1.137383222579956
    3. '0' → logprob: -7.762382984161377
    4. '   ' → logprob: -9.387383460998535
    5. ' ' → logprob: -13.762383460998535
    6. '	return' → logprob: -13.887383460998535
    7. '       ' → logprob: -15.012383460998535
    8. '
' → logprob: -15.637383460998535
    9. ':return' → logprob: -15.887383460998535
    10. 'eturn' → logprob: -16.76238250732422

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. 'fare' → logprob: -16.437585830688477
    4. '   ' → logprob: -17.000085830688477
    5. '```' → logprob: -17.812585830688477
    6. 'f' → logprob: -17.812585830688477
    7. ' ' → logprob: -18.625085830688477
    8. '  ' → logprob: -18.937585830688477
    9. '`' → logprob: -19.062585830688477
    10. ' fare' → logprob: -19.125085830688477

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'fare' → logprob: -17.000003814697266
    4. '```' → logprob: -17.312503814697266
    5. 'f' → logprob: -17.687503814697266
    6. '۰' → logprob: -18.562503814697266
    7. '   ' → logprob: -18.812503814697266
    8. '000' → logprob: -18.875003814697266
    9. 'fa' → logprob: -19.062503814697266
    10. 'zero' → logprob: -19.562503814697266

Token 164: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019840920343995094
    2. '    
' → logprob: -4.769840717315674
    3. ' return' → logprob: -6.019840717315674
    4. 'return' → logprob: -6.269840717315674
    5. '<|end|>' → logprob: -6.269840717315674
    6. ' 
' → logprob: -6.394840717315674
    7. '
' → logprob: -6.644840717315674
    8. ')' → logprob: -7.894840717315674
    9. '  
' → logprob: -7.894840717315674
    10. ' if' → logprob: -8.644841194152832

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018169092945754528
    2. ' return' → logprob: -7.126816749572754
    3. '    
' → logprob: -7.876816749572754
    4. ' else' → logprob: -8.876816749572754
    5. 'return' → logprob: -9.126816749572754
    6. ' 
' → logprob: -9.251816749572754
    7. ' if' → logprob: -9.376816749572754
    8. '
' → logprob: -9.626816749572754
    9. ' elif' → logprob: -10.501816749572754
    10. '<|end|>' → logprob: -10.501816749572754

Token 166: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06412895023822784
    2. ' return' → logprob: -3.064128875732422
    3. 'if' (adapté à ' if') → logprob: -4.564128875732422
    4. ' if' → logprob: -5.939128875732422
    5. '   ' → logprob: -6.064128875732422
    6. ' ' → logprob: -11.314128875732422
    7. '	return' → logprob: -11.814128875732422
    8. ':return' → logprob: -12.689128875732422
    9. '```' → logprob: -12.814128875732422
    10. ')' → logprob: -12.814128875732422

Token 167: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5759432911872864
    2. ' dist' → logprob: -0.8259432911872864
    3. '	dist' → logprob: -13.700942993164062
    4. 'len' → logprob: -13.950942993164062
    5. '(dist' → logprob: -14.700942993164062
    6. '1' → logprob: -15.075942993164062
    7. '0' → logprob: -15.200942993164062
    8. ' len' → logprob: -15.450942993164062
    9. 'd' → logprob: -15.700942993164062
    10. '_dist' → logprob: -15.825942993164062

Token 168: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.9021188616752625
    2. ' >=' → logprob: -1.4021189212799072
    3. '>' → logprob: -2.0271189212799072
    4. ' >' → logprob: -2.5271189212799072
    5. '<' → logprob: -2.6521189212799072
    6. ' <' → logprob: -3.1521189212799072
    7. '<=' → logprob: -4.152118682861328
    8. ' <=' → logprob: -5.152118682861328
    9. '<len' → logprob: -6.527118682861328
    10. '-' → logprob: -8.652118682861328

Token 169: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00010747690976131707
    2. '0' → logprob: -9.500107765197754
    3. ' len' → logprob: -10.500107765197754
    4. '=len' → logprob: -12.625107765197754
    5. '1' → logprob: -14.125107765197754
    6. '(len' → logprob: -14.250107765197754
    7. '<len' → logprob: -15.750107765197754
    8. '	len' → logprob: -18.000106811523438
    9. 'length' → logprob: -18.125106811523438
    10. '2' → logprob: -18.375106811523438

Token 170: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -9.2576454335358e-05
    2. 'fare' → logprob: -9.875092506408691
    3. '(' → logprob: -10.250092506408691
    4. ' fare' → logprob: -12.500092506408691
    5. 'f' → logprob: -13.375092506408691
    6. ' (' → logprob: -15.375092506408691
    7. 'Fare' → logprob: -16.125093460083008
    8. '	f' → logprob: -17.375093460083008
    9. '_f' → logprob: -18.750093460083008
    10. ')' → logprob: -19.375093460083008

Token 171: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.0007171963807195425
    2. 'fare' → logprob: -7.3757171630859375
    3. 'air' → logprob: -10.500717163085938
    4. 'ar' → logprob: -10.750717163085938
    5. '```' → logprob: -12.000717163085938
    6. '   ' → logprob: -12.375717163085938
    7. 'ares' → logprob: -12.750717163085938
    8. 'ale' → logprob: -12.750717163085938
    9. 'a' → logprob: -13.125717163085938
    10. ' fare' → logprob: -13.625717163085938

Token 172: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.00034893216798081994
    2. ')' → logprob: -8.375349044799805
    3. '_cost' → logprob: -9.750349044799805
    4. 'table' → logprob: -10.625349044799805
    5. '_' → logprob: -10.750349044799805
    6. ')_' → logprob: -12.000349044799805
    7. '_)' → logprob: -13.250349044799805
    8. 'cost' → logprob: -13.750349044799805
    9. ')table' → logprob: -13.750349044799805
    10. '_TABLE' → logprob: -13.875349044799805

Token 173: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018635060638189316
    2. '):' → logprob: -4.018635272979736
    3. ')' → logprob: -7.643635272979736
    4. ' ):
' → logprob: -12.518634796142578
    5. '):
' → logprob: -13.643634796142578
    6. '):

' → logprob: -14.393634796142578
    7. ' ):' → logprob: -15.393634796142578
    8. ':
' → logprob: -16.268634796142578
    9. '   ' → logprob: -16.268634796142578
    10. ':' → logprob: -17.393634796142578

Token 174: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6682788729667664
    2. 'return' → logprob: -1.5432789325714111
    3. '       ' → logprob: -1.6682789325714111
    4. ' return' → logprob: -2.543278932571411
    5. ':return' → logprob: -5.168278694152832
    6. '	return' → logprob: -7.793278694152832
    7. ':
' → logprob: -9.168278694152832
    8. ':' → logprob: -9.168278694152832
    9. ')return' → logprob: -10.543278694152832
    10. '    ' → logprob: -10.793278694152832

Token 175: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003302358789369464
    2. ' return' → logprob: -5.753302574157715
    3. '   ' → logprob: -9.003302574157715
    4. '	return' → logprob: -13.628302574157715
    5. '
' → logprob: -15.128302574157715
    6. ':return' → logprob: -16.1283016204834
    7. '{return' → logprob: -17.8783016204834
    8. '       ' → logprob: -17.8783016204834
    9. '```' → logprob: -17.8783016204834
    10. ')return' → logprob: -18.7533016204834

Token 176: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.061970487236976624
    2. ' fare' → logprob: -2.8119704723358154
    3. 'fair' → logprob: -13.186970710754395
    4. 'fee' → logprob: -14.936970710754395
    5. 'fa' → logprob: -15.311970710754395
    6. 'Fare' → logprob: -15.936970710754395
    7. 'far' → logprob: -16.311969757080078
    8. ' fair' → logprob: -16.436969757080078
    9. ' ' → logprob: -16.936969757080078
    10. 'f' → logprob: -17.561969757080078

Token 177: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -9.794061770662665e-05
    2. '_cost' → logprob: -9.37509822845459
    3. '[' → logprob: -12.12509822845459
    4. 'table' → logprob: -12.50009822845459
    5. 'cost' → logprob: -13.00009822845459
    6. '[_' → logprob: -14.87509822845459
    7. '<table' → logprob: -15.12509822845459
    8. '_TABLE' → logprob: -15.75009822845459
    9. '_' → logprob: -15.87509822845459
    10. ' _' → logprob: -15.87509822845459

Token 178: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. 'dist' → logprob: -14.125000953674316
    3. '[
' → logprob: -18.125
    4. ' [' → logprob: -18.125
    5. '```' → logprob: -19.75
    6. ' dist' → logprob: -19.875
    7. '
' → logprob: -21.0
    8. '[d' → logprob: -21.125
    9. '	dist' → logprob: -21.25
    10. '(dist' → logprob: -21.625

Token 179: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -9.65101717156358e-05
    2. ' dist' → logprob: -9.250096321105957
    3. '[' → logprob: -15.000096321105957
    4. '_dist' → logprob: -16.500097274780273
    5. '	dist' → logprob: -18.250097274780273
    6. '.dist' → logprob: -19.875097274780273
    7. '(dist' → logprob: -20.375097274780273
    8. 'd' → logprob: -20.500097274780273
    9. '   ' → logprob: -21.500097274780273
    10. ']' → logprob: -21.625097274780273

Token 180: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003231067443266511
    2. ')' → logprob: -6.253231048583984
    3. ']
' → logprob: -6.753231048583984
    4. ' ]' → logprob: -9.003231048583984
    5. '])' → logprob: -12.753231048583984
    6. '<|end|>' → logprob: -13.003231048583984
    7. ')
' → logprob: -13.378231048583984
    8. ')]' → logprob: -13.503231048583984
    9. ' )' → logprob: -13.753231048583984
    10. '[' → logprob: -14.378231048583984

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6499492526054382
    2. 'else' → logprob: -0.8999492526054382
    3. ' else' → logprob: -3.274949312210083
    4. 'return' → logprob: -3.524949312210083
    5. ' return' → logprob: -5.524949073791504
    6. '    
' → logprob: -9.899949073791504
    7. '	else' → logprob: -11.524949073791504
    8. '	return' → logprob: -12.149949073791504
    9. ' ' → logprob: -12.899949073791504
    10. ' 
' → logprob: -13.274949073791504

Token 182: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.040738049894571304
    2. ' return' → logprob: -3.290738105773926
    3. 'else' → logprob: -6.790738105773926
    4. '#' (adapté à ' #') → logprob: -7.540738105773926
    5. 'fare' → logprob: -7.665738105773926
    6. '   ' → logprob: -7.790738105773926
    7. ' else' → logprob: -9.790738105773926
    8. ' fare' → logprob: -10.165738105773926
    9. ' #' → logprob: -10.915738105773926
    10. '
' → logprob: -11.665738105773926

Token 183: ' In' (ID: 730)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15017841756343842
    2. '#' → logprob: -2.2751784324645996
    3. ' return' → logprob: -3.4001784324645996
    4. ' #' → logprob: -6.5251784324646
    5. '   ' → logprob: -7.7751784324646
    6. 'import' → logprob: -8.650177955627441
    7. 'times' → logprob: -9.025177955627441
    8. 'dist' → logprob: -9.150177955627441
    9. 'segments' → logprob: -9.275177955627441
    10. 'extra' → logprob: -9.525177955627441

Token 184: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.19146311283111572
    2. ' this' → logprob: -2.066462993621826
    3. ' that' → logprob: -3.566462993621826
    4. 'case' → logprob: -4.191462993621826
    5. '#' → logprob: -5.941462993621826
    6. ' the' → logprob: -7.316462993621826
    7. ' such' → logprob: -8.816463470458984
    8. 'stead' → logprob: -8.816463470458984
    9. 'voke' → logprob: -9.066463470458984
    10. 'this' → logprob: -9.066463470458984

Token 185: ' of' (ID: 328)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.34948408603668213
    2. ' dist' → logprob: -1.2244840860366821
    3. ' the' → logprob: -8.09948444366455
    4. ' of' → logprob: -8.09948444366455
    5. ' fare' → logprob: -8.59948444366455
    6. 'distance' → logprob: -10.09948444366455
    7. 'len' → logprob: -10.22448444366455
    8. 'the' → logprob: -10.22448444366455
    9. 'fare' → logprob: -10.34948444366455
    10. ' len' → logprob: -10.97448444366455

Token 186: ' distance' (ID: 9324)
  Prédit: ' large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.6747835278511047
    2. 'large' → logprob: -1.04978346824646
    3. ' very' → logprob: -2.92478346824646
    4. 'very' → logprob: -3.54978346824646
    5. 'dist' → logprob: -3.67478346824646
    6. 'distance' → logprob: -4.424783706665039
    7. 'larg' → logprob: -5.674783706665039
    8. ' distances' → logprob: -5.799783706665039
    9. ' dist' → logprob: -5.924783706665039
    10. 'long' → logprob: -6.674783706665039

Token 187: ' beyond' (ID: 11615)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1060783863067627
    2. 'greater' → logprob: -1.3560783863067627
    3. 'ex' → logprob: -2.1060783863067627
    4. ' greater' → logprob: -2.6060783863067627
    5. ' exceeding' → logprob: -2.7310783863067627
    6. 'b' → logprob: -2.9810783863067627
    7. ' beyond' → logprob: -3.2310783863067627
    8. 'larg' → logprob: -3.4810783863067627
    9. ' >' → logprob: -3.9810783863067627
    10. ' longer' → logprob: -5.356078147888184

Token 188: ' pre' (ID: 876)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.17644546926021576
    2. 'len' → logprob: -1.926445484161377
    3. 'the' → logprob: -4.926445484161377
    4. ' fare' → logprob: -5.426445484161377
    5. 'max' → logprob: -6.301445484161377
    6. ' len' → logprob: -6.676445484161377
    7. ' the' → logprob: -7.176445484161377
    8. 'pre' → logprob: -8.676445007324219
    9. 'last' → logprob: -9.676445007324219
    10. '```' → logprob: -9.676445007324219

Token 189: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.011226779781281948
    2. 'cal' → logprob: -5.386226654052734
    3. ' computed' → logprob: -6.011226654052734
    4. 'built' → logprob: -6.511226654052734
    5. 'pared' → logprob: -7.136226654052734
    6. 'c' → logprob: -7.886226654052734
    7. 'd' → logprob: -8.761226654052734
    8. '-' → logprob: -8.761226654052734
    9. 'compiled' → logprob: -9.011226654052734
    10. 'defined' → logprob: -9.136226654052734

Token 190: ',' (ID: 11)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.1412668228149414
    2. ' fare' → logprob: -2.3912668228149414
    3. 'range' → logprob: -4.391266822814941
    4. ' range' → logprob: -4.641266822814941
    5. 'table' → logprob: -4.641266822814941
    6. ' table' → logprob: -5.516266822814941
    7. 'max' → logprob: -7.016266822814941
    8. 'array' → logprob: -7.266266822814941
    9. ' max' → logprob: -8.016266822814941
    10. ' array' → logprob: -8.266266822814941

Token 191: ' calculate' (ID: 17950)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2138592153787613
    2. ' return' → logprob: -1.7138592004776
    3. '#' → logprob: -4.7138590812683105
    4. '   ' → logprob: -6.5888590812683105
    5. 'last' → logprob: -7.3388590812683105
    6. ' #' → logprob: -7.4638590812683105
    7. ' last' → logprob: -8.088859558105469
    8. 'idx' → logprob: -8.838859558105469
    9. 'increment' → logprob: -8.963859558105469
    10. ' idx' → logprob: -10.088859558105469

Token 192: ' on' (ID: 402)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fare' → logprob: -1.2167339324951172
    2. 'return' → logprob: -1.4667339324951172
    3. ' return' → logprob: -1.7167339324951172
    4. ' fare' → logprob: -1.9667339324951172
    5. '   ' → logprob: -1.9667339324951172
    6. 'cost' → logprob: -5.341733932495117
    7. ' cost' → logprob: -5.841733932495117
    8. '       ' → logprob: -7.216733932495117
    9. '    ' → logprob: -7.216733932495117
    10. 'for' → logprob: -7.591733932495117

Token 193: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1137036681175232
    2. ' the' → logprob: -2.238703727722168
    3. ' demand' → logprob: -8.113703727722168
    4. 'd' → logprob: -8.488703727722168
    5. '-the' → logprob: -8.988703727722168
    6. '   ' → logprob: -9.238703727722168
    7. 'fare' → logprob: -10.238703727722168
    8. ' fly' → logprob: -10.488703727722168
    9. ' spot' → logprob: -10.488703727722168
    10. '```' → logprob: -11.238703727722168

Token 194: ' fly' (ID: 14360)
  Prédit: 'fly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fly' → logprob: -0.005241106729954481
    2. ' fly' → logprob: -5.2552409172058105
    3. 'last' → logprob: -12.755241394042969
    4. '   ' → logprob: -13.380241394042969
    5. 'spot' → logprob: -14.005241394042969
    6. 'flies' → logprob: -14.380241394042969
    7. '#' → logprob: -14.630241394042969
    8. 'next' → logprob: -14.880241394042969
    9. '```' → logprob: -16.13024139404297
    10. 'same' → logprob: -16.38024139404297

Token 195: '
' (ID: 198)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.37900230288505554
    2. '   ' → logprob: -1.504002332687378
    3. 'return' → logprob: -2.504002332687378
    4. ' fare' → logprob: -6.129002094268799
    5. ' dist' → logprob: -6.254002094268799
    6. '    ' → logprob: -7.129002094268799
    7. ' last' → logprob: -7.254002094268799
    8. ' idx' → logprob: -7.379002094268799
    9. ' cost' → logprob: -7.629002094268799
    10. '       ' → logprob: -7.629002094268799

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6281928420066833
    2. ' return' → logprob: -1.1281929016113281
    3. 'return' → logprob: -2.878192901611328
    4. ' ' → logprob: -3.878192901611328
    5. ' 
' → logprob: -4.253192901611328
    6. '    ' → logprob: -4.253192901611328
    7. '+' → logprob: -5.253192901611328
    8. '```' → logprob: -5.628192901611328
    9. '       ' → logprob: -5.878192901611328
    10. '0' → logprob: -5.878192901611328

Token 197: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11914486438035965
    2. ' return' → logprob: -2.369144916534424
    3. 'cost' → logprob: -4.244144916534424
    4. ' cost' → logprob: -6.869144916534424
    5. '   ' → logprob: -6.994144916534424
    6. 'fare' → logprob: -7.869144916534424
    7. 'total' → logprob: -8.119144439697266
    8. 'extra' → logprob: -8.244144439697266
    9. 'last' → logprob: -8.369144439697266
    10. 'c' → logprob: -8.869144439697266

Token 198: ' Should' (ID: 18057)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15879122912883759
    2. 'last' → logprob: -2.5337913036346436
    3. 'extra' → logprob: -3.5337913036346436
    4. ' return' → logprob: -4.4087910652160645
    5. 'cost' → logprob: -4.4087910652160645
    6. ' last' → logprob: -6.4087910652160645
    7. 'idx' → logprob: -6.5337910652160645
    8. '   ' → logprob: -6.5337910652160645
    9. 'additional' → logprob: -6.5337910652160645
    10. 'base' → logprob: -6.7837910652160645

Token 199: ' not' (ID: 625)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4114532470703125
    2. ' not' → logprob: -1.6614532470703125
    3. ' be' → logprob: -1.9114532470703125
    4. 'fare' → logprob: -2.2864532470703125
    5. ' return' → logprob: -2.5364532470703125
    6. 'be' → logprob: -2.6614532470703125
    7. 'not' → logprob: -2.6614532470703125
    8. 'continue' → logprob: -3.2864532470703125
    9. ' fare' → logprob: -3.2864532470703125
    10. ' continue' → logprob: -4.9114532470703125

Token 200: ' happen' (ID: 5659)
  Prédit: ' happen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' happen' → logprob: -0.6578225493431091
    2. 'h' → logprob: -1.282822608947754
    3. 'occur' → logprob: -2.407822608947754
    4. 'usually' → logprob: -3.282822608947754
    5. 'normally' → logprob: -3.907822608947754
    6. 'be' → logprob: -4.532822608947754
    7. ' usually' → logprob: -4.657822608947754
    8. 'raise' → logprob: -4.907822608947754
    9. 'really' → logprob: -5.157822608947754
    10. ' normally' → logprob: -5.282822608947754

Token 201: ' since' (ID: 3630)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17743746936321259
    2. ' return' → logprob: -1.927437424659729
    3. ' raise' → logprob: -5.1774373054504395
    4. 'return' → logprob: -5.8024373054504395
    5. '<|end|>' → logprob: -6.1774373054504395
    6. ' ' → logprob: -6.1774373054504395
    7. ' but' → logprob: -6.9274373054504395
    8. '    ' → logprob: -7.0524373054504395
    9. ',' → logprob: -7.0524373054504395
    10. ')' → logprob: -8.052437782287598

Token 202: ' we' (ID: 581)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.5340895056724548
    2. 'dist' → logprob: -1.4090895652770996
    3. 'max' → logprob: -2.1590895652770996
    4. 'q' → logprob: -3.7840895652770996
    5. ' fare' → logprob: -4.0340895652771
    6. ' dist' → logprob: -5.7840895652771
    7. 'len' → logprob: -5.9090895652771
    8. 'p' → logprob: -6.2840895652771
    9. ' max' → logprob: -6.6590895652771
    10. 'idx' → logprob: -7.4090895652771

Token 203: ' took' (ID: 6066)
  Prédit: ' pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.6215885877609253
    2. 'pre' → logprob: -0.9965885877609253
    3. 'return' → logprob: -2.996588706970215
    4. 'have' → logprob: -3.996588706970215
    5. ' return' → logprob: -4.621588706970215
    6. ' have' → logprob: -5.621588706970215
    7. ' always' → logprob: -6.121588706970215
    8. 'always' → logprob: -6.121588706970215
    9. 'build' → logprob: -6.246588706970215
    10. ' prec' → logprob: -6.746588706970215

Token 204: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004740791395306587
    2. ' max' → logprob: -5.8797407150268555
    3. 'q' → logprob: -6.6297407150268555
    4. 'fare' → logprob: -8.129740715026855
    5. 'a' → logprob: -9.379740715026855
    6. 'maximum' → logprob: -9.629740715026855
    7. 'large' → logprob: -9.879740715026855
    8. 'p' → logprob: -10.129740715026855
    9. 'big' → logprob: -10.379740715026855
    10. 'the' → logprob: -11.629740715026855

Token 205: '_dist' (ID: 37968)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3379766643047333
    2. 'return' → logprob: -1.5879766941070557
    3. '+' → logprob: -3.5879766941070557
    4. '   ' → logprob: -3.8379766941070557
    5. ' ' → logprob: -4.337976455688477
    6. ')' → logprob: -5.087976455688477
    7. 'def' → logprob: -6.462976455688477
    8. ' +' → logprob: -6.712976455688477
    9. ' else' → logprob: -6.837976455688477
    10. '<|end|>' → logprob: -6.962976455688477

Token 206: ' big' (ID: 3464)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: ' enough' (ID: 4951)
  Prédit: ' enough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enough' → logprob: -1.0558782815933228
    2. ')' → logprob: -1.3058782815933228
    3. ' ' → logprob: -2.180878162384033
    4. '   ' → logprob: -2.430878162384033
    5. '    ' → logprob: -2.930878162384033
    6. ' )' → logprob: -3.680878162384033
    7. 'def' → logprob: -4.055878162384033
    8. '+' → logprob: -4.555878162384033
    9. '```' → logprob: -4.555878162384033
    10. '<|end|>' → logprob: -4.805878162384033

Token 208: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.489334374666214
    2. ' ' → logprob: -1.8643343448638916
    3. ' return' → logprob: -2.1143343448638916
    4. 'return' → logprob: -3.1143343448638916
    5. '    ' → logprob: -3.9893343448638916
    6. ' 
' → logprob: -4.364334583282471
    7. ')' → logprob: -4.739334583282471
    8. '<|end|>' → logprob: -5.114334583282471
    9. '    
' → logprob: -5.239334583282471
    10. '
' → logprob: -5.614334583282471

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28986379504203796
    2. ' return' → logprob: -1.7898638248443604
    3. 'return' → logprob: -3.5398638248443604
    4. ' ' → logprob: -3.7898638248443604
    5. ')' → logprob: -4.164863586425781
    6. '0' → logprob: -5.164863586425781
    7. '    ' → logprob: -5.789863586425781
    8. ' 
' → logprob: -6.289863586425781
    9. ' )' → logprob: -6.414863586425781
    10. ' raise' → logprob: -7.164863586425781

Token 210: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006692276336252689
    2. ' return' → logprob: -5.256692409515381
    3. 'total' → logprob: -7.881692409515381
    4. 'last' → logprob: -8.381691932678223
    5. 'extra' → logprob: -8.756691932678223
    6. 'd' → logprob: -8.881691932678223
    7. '#' → logprob: -9.006691932678223
    8. 'dist' → logprob: -9.256691932678223
    9. 'cost' → logprob: -9.631691932678223
    10. 'distance' → logprob: -10.006691932678223

Token 211: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.024687066674232483
    2. ' fare' → logprob: -4.39968729019165
    3. 'float' → logprob: -4.89968729019165
    4. '0' → logprob: -6.14968729019165
    5. 'None' → logprob: -7.64968729019165
    6. '-' → logprob: -7.77468729019165
    7. ' float' → logprob: -7.89968729019165
    8. ' ' → logprob: -8.274686813354492
    9. ' None' → logprob: -8.899686813354492
    10. 'sys' → logprob: -9.399686813354492

Token 212: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.18475615978240967
    2. '_cost' → logprob: -2.184756278991699
    3. '[-' → logprob: -3.434756278991699
    4. '[' → logprob: -3.809756278991699
    5. '[len' → logprob: -7.184756278991699
    6. '[_' → logprob: -7.934756278991699
    7. '_dist' → logprob: -8.4347562789917
    8. '[max' → logprob: -9.0597562789917
    9. 'dist' → logprob: -9.4347562789917
    10. 'cost' → logprob: -10.3097562789917

Token 213: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.023301033303141594
    2. '-' → logprob: -3.773301124572754
    3. '[' → logprob: -10.273301124572754
    4. '[len' → logprob: -11.523301124572754
    5. '[min' → logprob: -12.273301124572754
    6. ' -' → logprob: -12.773301124572754
    7. '-f' → logprob: -13.523301124572754
    8. '-dist' → logprob: -14.523301124572754
    9. '-def' → logprob: -14.898301124572754
    10. '[max' → logprob: -15.023301124572754

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '2' → logprob: -17.375
    4. '
' → logprob: -17.5625
    5. '   ' → logprob: -17.625
    6. '```' → logprob: -18.0
    7. '１' → logprob: -19.0
    8. '

' → logprob: -19.375
    9. ' ' → logprob: -19.5625
    10. '۱' → logprob: -19.75

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2763752043247223
    2. ')' → logprob: -1.5263751745224
    3. '+' → logprob: -4.5263752937316895
    4. ']+' → logprob: -4.6513752937316895
    5. '])' → logprob: -6.5263752937316895
    6. ' +' → logprob: -7.4013752937316895
    7. ')+' → logprob: -7.6513752937316895
    8. ' ]' → logprob: -7.7763752937316895
    9. ' )' → logprob: -7.9013752937316895
    10. '<|end|>' → logprob: -8.651374816894531

Token 216: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' sum' (ID: 4215)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9287959933280945
    2. '(r' → logprob: -1.0537960529327393
    3. ' (' → logprob: -2.3037960529327393
    4. ' r' → logprob: -2.8037960529327393
    5. 'fare' → logprob: -3.1787960529327393
    6. ' fare' → logprob: -3.3037960529327393
    7. '(f' → logprob: -4.55379581451416
    8. '(' → logprob: -5.92879581451416
    9. '(dist' → logprob: -6.80379581451416
    10. 'dist' → logprob: -7.42879581451416

Token 218: '(f' (ID: 1526)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.000556012790184468
    2. '(' → logprob: -7.750555992126465
    3. '([' → logprob: -9.375555992126465
    4. '((' → logprob: -10.875555992126465
    5. 'r' → logprob: -11.000555992126465
    6. '(
' → logprob: -13.250555992126465
    7. '[r' → logprob: -13.875555992126465
    8. '(f' → logprob: -14.500555992126465
    9. ' (' → logprob: -14.750555992126465
    10. '(i' → logprob: -15.000555992126465

Token 219: 'are' (ID: 644)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7259607315063477
    2. '[r' → logprob: -0.7259607315063477
    3. '(r' → logprob: -4.225960731506348
    4. '[' → logprob: -4.850960731506348
    5. 'or' → logprob: -5.975960731506348
    6. ' r' → logprob: -5.975960731506348
    7. '(' → logprob: -6.725960731506348
    8. '([' → logprob: -7.475960731506348
    9. '[(' → logprob: -7.975960731506348
    10. '[i' → logprob: -8.100960731506348

Token 220: '_table' (ID: 11721)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.8389622569084167
    2. '[idx' → logprob: -1.3389623165130615
    3. 'r' → logprob: -1.9639623165130615
    4. '[' → logprob: -2.3389623165130615
    5. '[len' → logprob: -3.3389623165130615
    6. '_r' → logprob: -3.9639623165130615
    7. ')' → logprob: -5.463962078094482
    8. '   ' → logprob: -6.713962078094482
    9. '[(' → logprob: -6.838962078094482
    10. '[-' → logprob: -7.088962078094482

Token 221: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.37735140323638916
    2. ')' → logprob: -2.1273512840270996
    3. '[' → logprob: -2.1273512840270996
    4. '[len' → logprob: -2.6273512840270996
    5. '[idx' → logprob: -6.6273512840271
    6. '[:' → logprob: -7.3773512840271
    7. '[(' → logprob: -8.377351760864258
    8. '[:-' → logprob: -8.377351760864258
    9. '[i' → logprob: -8.627351760864258
    10. ')
' → logprob: -8.877351760864258

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00384722463786602
    2. '-' → logprob: -6.503847122192383
    3. '2' → logprob: -6.878847122192383
    4. '[-' → logprob: -8.503847122192383
    5. 'idx' → logprob: -8.628847122192383
    6. ']' → logprob: -8.878847122192383
    7. ':' → logprob: -8.878847122192383
    8. 'len' → logprob: -9.253847122192383
    9. '[' → logprob: -9.316347122192383
    10. ':-' → logprob: -10.003847122192383

Token 223: ']' (ID: 60)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5692927241325378
    2. '+' → logprob: -0.9442927241325378
    3. '[' → logprob: -3.3192927837371826
    4. ' +' → logprob: -5.8192925453186035
    5. '[len' → logprob: -6.5692925453186035
    6. '[-' → logprob: -6.8192925453186035
    7. '[idx' → logprob: -7.1942925453186035
    8. ':]' → logprob: -7.1942925453186035
    9. '-' → logprob: -7.5692925453186035
    10. '])' → logprob: -7.9442925453186035

Token 224: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.662310004234314
    2. ')' → logprob: -1.037310004234314
    3. '[len' → logprob: -2.7873101234436035
    4. ':' → logprob: -3.7873101234436035
    5. '[idx' → logprob: -4.1623101234436035
    6. '[r' → logprob: -5.0373101234436035
    7. '+' → logprob: -5.5373101234436035
    8. 'dist' → logprob: -5.6623101234436035
    9. '[q' → logprob: -5.9123101234436035
    10. ':)' → logprob: -6.5373101234436035

Token 225: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.618001053633634e-05
    2. ' _' → logprob: -10.750025749206543
    3. '_dist' → logprob: -13.375025749206543
    4. 'i' → logprob: -14.000025749206543
    5. '_=' → logprob: -14.375025749206543
    6. 'dist' → logprob: -14.500025749206543
    7. '_]' → logprob: -14.500025749206543
    8. '_)' → logprob: -15.375025749206543
    9. '_
' → logprob: -16.00002670288086
    10. '_

' → logprob: -16.00002670288086

Token 226: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3422339856624603
    2. ' range' → logprob: -1.4672340154647827
    3. '_' → logprob: -2.842233896255493
    4. ' in' → logprob: -7.842234134674072
    5. ' _' → logprob: -7.842234134674072
    6. 'in' → logprob: -9.592233657836914
    7. ' ' → logprob: -10.592233657836914
    8. 'dist' → logprob: -10.717233657836914
    9. '_range' → logprob: -10.842233657836914
    10. '	range' → logprob: -11.592233657836914

Token 227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019342314917594194
    2. ' range' → logprob: -6.251934051513672
    3. '_' → logprob: -12.126934051513672
    4. '_range' → logprob: -16.001934051513672
    5. '   ' → logprob: -16.876934051513672
    6. '	range' → logprob: -16.876934051513672
    7. ' ' → logprob: -17.751934051513672
    8. '(range' → logprob: -18.751934051513672
    9. '  ' → logprob: -19.001934051513672
    10. '```' → logprob: -19.001934051513672

Token 228: '(dist' (ID: 78981)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.018710298463702202
    2. '(dist' → logprob: -4.018710136413574
    3. ' dist' → logprob: -7.518710136413574
    4. '	dist' → logprob: -11.643710136413574
    5. '   ' → logprob: -12.143710136413574
    6. '_dist' → logprob: -13.143710136413574
    7. '(' → logprob: -14.268710136413574
    8. '1' → logprob: -15.018710136413574
    9. '.dist' → logprob: -16.51871109008789
    10. '    ' → logprob: -16.76871109008789

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28462672233581543
    2. '-' → logprob: -1.4096267223358154
    3. '-l' → logprob: -5.7846269607543945
    4. '[len' → logprob: -9.034626960754395
    5. '[-' → logprob: -9.409626960754395
    6. ')]' → logprob: -9.534626960754395
    7. ')' → logprob: -10.284626960754395
    8. '[' → logprob: -10.409626960754395
    9. '+' → logprob: -10.659626960754395
    10. '-length' → logprob: -11.284626960754395

Token 230: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.044232018291950226
    2. '(len' → logprob: -3.169232130050659
    3. ' len' → logprob: -6.79423189163208
    4. ' (' → logprob: -9.419232368469238
    5. '(' → logprob: -10.794232368469238
    6. '[len' → logprob: -12.044232368469238
    7. '   ' → logprob: -13.044232368469238
    8. '	len' → logprob: -14.169232368469238
    9. '1' → logprob: -14.419232368469238
    10. ' ' → logprob: -15.794232368469238

Token 231: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.3795937522663735e-05
    2. 'f' → logprob: -11.37502384185791
    3. '(' → logprob: -12.00002384185791
    4. 'fare' → logprob: -13.62502384185791
    5. 'of' → logprob: -13.62502384185791
    6. '	f' → logprob: -14.12502384185791
    7. ' (' → logprob: -14.37502384185791
    8. '[f' → logprob: -14.37502384185791
    9. ')' → logprob: -14.62502384185791
    10. '_f' → logprob: -15.00002384185791

Token 232: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.00021629150433000177
    2. 're' → logprob: -8.875216484069824
    3. 'e' → logprob: -10.000216484069824
    4. 'er' → logprob: -11.500216484069824
    5. 'ar' → logprob: -12.250216484069824
    6. ')' → logprob: -12.250216484069824
    7. 'fare' → logprob: -13.250216484069824
    8. '[' → logprob: -13.625216484069824
    9. 'ee' → logprob: -13.750216484069824
    10. '_are' → logprob: -14.000216484069824

Token 233: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0001625379954930395
    2. 'table' → logprob: -9.750162124633789
    3. ')' → logprob: -10.250162124633789
    4. '[' → logprob: -11.125162124633789
    5. ')])' → logprob: -11.625162124633789
    6. ')+' → logprob: -11.750162124633789
    7. ')table' → logprob: -12.250162124633789
    8. ')]' → logprob: -12.250162124633789
    9. '))' → logprob: -12.375162124633789
    10. 'able' → logprob: -12.500162124633789

Token 234: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010946538299322128
    2. ')))' → logprob: -5.510946750640869
    3. ')' → logprob: -5.760946750640869
    4. '[' → logprob: -6.260946750640869
    5. ']))' → logprob: -7.510946750640869
    6. ')]' → logprob: -7.760946750640869
    7. ')])' → logprob: -8.135946273803711
    8. '+' → logprob: -8.385946273803711
    9. '-' → logprob: -9.135946273803711
    10. ' ))' → logprob: -10.510946273803711

Token 235: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0389062874019146
    2. '+' → logprob: -4.288906097412109
    3. ')' → logprob: -4.538906097412109
    4. '[' → logprob: -4.913906097412109
    5. ')])' → logprob: -5.913906097412109
    6. ')]' → logprob: -6.538906097412109
    7. ')))' → logprob: -6.788906097412109
    8. ']))' → logprob: -7.163906097412109
    9. '])' → logprob: -9.41390609741211
    10. '   ' → logprob: -10.16390609741211

Token 236: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.141186450899113e-05
    2. 'dist' → logprob: -11.125020980834961
    3. ' ' → logprob: -12.125020980834961
    4. ')' → logprob: -14.000020980834961
    5. '(dist' → logprob: -16.00002098083496
    6. '   ' → logprob: -16.87502098083496
    7. ' dist' → logprob: -17.12502098083496
    8. '```' → logprob: -17.50002098083496
    9. '0' → logprob: -18.50002098083496
    10. 'len' → logprob: -18.87502098083496

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'idx' → logprob: -15.000004768371582
    4. 'len' → logprob: -15.875004768371582
    5. '   ' → logprob: -16.1250057220459
    6. '```' → logprob: -16.1250057220459
    7. ')' → logprob: -16.2500057220459
    8. '0' → logprob: -17.3750057220459
    9. '2' → logprob: -17.6250057220459
    10. 'dist' → logprob: -17.7500057220459

Token 238: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04872554913163185
    2. ')' → logprob: -3.0487256050109863
    3. ')))' → logprob: -9.298725128173828
    4. ' ))' → logprob: -10.298725128173828
    5. ' )' → logprob: -12.048725128173828
    6. '))
' → logprob: -13.173725128173828
    7. '])' → logprob: -13.548725128173828
    8. '   ' → logprob: -14.048725128173828
    9. ')
' → logprob: -14.673725128173828
    10. ' ' → logprob: -14.673725128173828

Token 239: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' main' (ID: 2758)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.396589070558548
    2. 'd' → logprob: -1.1465890407562256
    3. ' solve' → logprob: -5.646589279174805
    4. ' main' → logprob: -6.021589279174805
    5. 'solve' → logprob: -6.396589279174805
    6. 'main' → logprob: -7.021589279174805
    7. ' shortest' → logprob: -7.521589279174805
    8. 'def' → logprob: -8.146589279174805
    9. 'short' → logprob: -10.146589279174805
    10. 'compute' → logprob: -10.146589279174805

Token 241: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011823653243482113
    2. '(' → logprob: -4.511823654174805
    3. ':' → logprob: -8.136823654174805
    4. '(:' → logprob: -8.261823654174805
    5. '():
' → logprob: -9.261823654174805
    6. '(":' → logprob: -9.636823654174805
    7. '()' → logprob: -10.886823654174805
    8. '):' → logprob: -11.636823654174805
    9. ' ():' → logprob: -12.011823654174805
    10. '(':' → logprob: -12.636823654174805

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02672729268670082
    2. ' n' → logprob: -3.7767271995544434
    3. ' import' → logprob: -6.276727199554443
    4. 'n' → logprob: -7.401727199554443
    5. '    ' → logprob: -8.776727676391602
    6. ' pass' → logprob: -8.901727676391602
    7. 'import' → logprob: -8.901727676391602
    8. ' input' → logprob: -9.026727676391602
    9. ' readline' → logprob: -9.151727676391602
    10. ' ' → logprob: -9.776727676391602

Token 243: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20200584828853607
    2. 'n' → logprob: -1.7020058631896973
    3. '   ' → logprob: -7.577005863189697
    4. ' N' → logprob: -10.327005386352539
    5. '	n' → logprob: -10.827005386352539
    6. ' import' → logprob: -11.702005386352539
    7. 'N' → logprob: -12.077005386352539
    8. 'import' → logprob: -12.452005386352539
    9. ' input' → logprob: -13.077005386352539
    10. ' pass' → logprob: -13.077005386352539

Token 244: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07865830510854721
    2. ' n' → logprob: -2.70365834236145
    3. 'N' → logprob: -5.328658103942871
    4. '   ' → logprob: -5.953658103942871
    5. ' N' → logprob: -7.578658103942871
    6. 'input' → logprob: -8.453658103942871
    7. 'data' → logprob: -8.703658103942871
    8. ' input' → logprob: -9.578658103942871
    9. 'import' → logprob: -9.578658103942871
    10. ' data' → logprob: -10.203658103942871

Token 245: ' until' (ID: 4609)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4430087208747864
    2. '   ' → logprob: -1.3180086612701416
    3. 'n' → logprob: -2.9430086612701416
    4. ' n' → logprob: -4.693008899688721
    5. 'input' → logprob: -5.193008899688721
    6. ' input' → logprob: -5.318008899688721
    7. 'p' → logprob: -6.068008899688721
    8. ' line' → logprob: -6.068008899688721
    9. ' inputs' → logprob: -6.193008899688721
    10. 'line' → logprob: -6.568008899688721

Token 246: ' line' (ID: 2543)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -1.0797737836837769
    2. ' EOF' → logprob: -1.2047737836837769
    3. ' True' → logprob: -1.4547737836837769
    4. ' False' → logprob: -2.5797739028930664
    5. 'False' → logprob: -3.3297739028930664
    6. 'True' → logprob: -4.329773902893066
    7. ' sys' → logprob: -6.954773902893066
    8. ' eof' → logprob: -7.079773902893066
    9. ' ' → logprob: -8.704773902893066
    10. ' line' → logprob: -9.329773902893066

Token 247: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06381741166114807
    2. '=' → logprob: -2.8138175010681152
    3. ':' → logprob: -7.313817501068115
    4. 's' → logprob: -8.063817024230957
    5. '   ' → logprob: -8.438817024230957
    6. '=line' → logprob: -8.938817024230957
    7. '()' → logprob: -9.313817024230957
    8. '=input' → logprob: -9.438817024230957
    9. ' ' → logprob: -9.688817024230957
    10. '(' → logprob: -9.938817024230957

Token 248: ' five' (ID: 6468)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.39237111806869507
    2. 'input' → logprob: -1.7673711776733398
    3. 'code' → logprob: -2.26737117767334
    4. ' input' → logprob: -3.26737117767334
    5. '#' → logprob: -5.01737117767334
    6. 'EOF' → logprob: -6.01737117767334
    7. ' EOF' → logprob: -7.76737117767334
    8. '_code' → logprob: -7.89237117767334
    9. 'def' → logprob: -8.14237117767334
    10. 'codes' → logprob: -8.26737117767334

Token 249: ' zeros' (ID: 42274)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8194951415061951
    2. ' ' → logprob: -1.9444952011108398
    3. '#' → logprob: -2.69449520111084
    4. 'tokens' → logprob: -2.81949520111084
    5. 's' → logprob: -3.44449520111084
    6. ' _' → logprob: -3.69449520111084
    7. ' tokens' → logprob: -3.81949520111084
    8. '   ' → logprob: -4.06949520111084
    9. '_tokens' → logprob: -4.06949520111084
    10. ' words' → logprob: -4.06949520111084

Token 250: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7244148850440979
    2. '   ' → logprob: -0.8494148850440979
    3. '():' → logprob: -3.724414825439453
    4. '<|end|>' → logprob: -3.849414825439453
    5. '(' → logprob: -4.349414825439453
    6. ' ' → logprob: -5.224414825439453
    7. ' :' → logprob: -5.349414825439453
    8. '  ' → logprob: -6.099414825439453
    9. '       ' → logprob: -6.224414825439453
    10. '()' → logprob: -6.224414825439453

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003424969967454672
    2. 'while' → logprob: -6.378425121307373
    3. ' while' → logprob: -7.003425121307373
    4. '    
' → logprob: -7.378425121307373
    5. '	while' → logprob: -9.503424644470215
    6. '
' → logprob: -9.878424644470215
    7. '```' → logprob: -11.378424644470215
    8. '(' → logprob: -12.128424644470215
    9. ' line' → logprob: -12.503424644470215
    10. '<|end|>' → logprob: -12.503424644470215

Token 252: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4051210582256317
    2. ' while' → logprob: -1.155121088027954
    3. 'while' (adapté à ' while') → logprob: -4.030120849609375
    4. ' line' → logprob: -8.905120849609375
    5. '	while' → logprob: -9.530120849609375
    6. '    
' → logprob: -9.655120849609375
    7. 'line' → logprob: -10.780120849609375
    8. ' lines' → logprob: -12.280120849609375
    9. '
' → logprob: -12.405120849609375
    10. ' for' → logprob: -13.030120849609375

Token 253: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03805044665932655
    2. 'True' → logprob: -3.288050413131714
    3. '(True' → logprob: -11.663050651550293
    4. ' ' → logprob: -15.413050651550293
    5. '=True' → logprob: -16.538049697875977
    6. '   ' → logprob: -16.663049697875977
    7. '  ' → logprob: -17.288049697875977
    8. '1' → logprob: -19.163049697875977
    9. ' Tru' → logprob: -19.288049697875977
    10. ' ' → logprob: -19.288049697875977

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05023937672376633
    2. '       ' → logprob: -3.925239324569702
    3. ':
' → logprob: -4.050239562988281
    4. '   ' → logprob: -4.925239562988281
    5. ',' → logprob: -6.050239562988281
    6. '():' → logprob: -6.550239562988281
    7. ' :' → logprob: -9.175239562988281
    8. '):' → logprob: -9.300239562988281
    9. '():
' → logprob: -9.550239562988281
    10. '[' → logprob: -9.800239562988281

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01047194842249155
    2. '   ' → logprob: -4.635471820831299
    3. ' line' → logprob: -8.010472297668457
    4. '    ' → logprob: -8.760472297668457
    5. '<|end|>' → logprob: -10.135472297668457
    6. '     ' → logprob: -10.635472297668457
    7. ' readline' → logprob: -10.885472297668457
    8. '        
' → logprob: -11.010472297668457
    9. '      ' → logprob: -11.010472297668457
    10. '```' → logprob: -11.010472297668457

Token 256: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.05836721509695053
    2. ' line' → logprob: -2.9333672523498535
    3. 'l' → logprob: -6.6833672523498535
    4. 's' → logprob: -6.8083672523498535
    5. 'n' (adapté à ' n') → logprob: -7.9333672523498535
    6. '   ' → logprob: -8.183366775512695
    7. 'a' → logprob: -8.308366775512695
    8. 'data' → logprob: -9.433366775512695
    9. ' s' → logprob: -10.433366775512695
    10. 'parts' → logprob: -10.558366775512695

Token 257: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10772401094436646
    2. ' ,' → logprob: -2.6077239513397217
    3. ' =' → logprob: -3.7327239513397217
    4. '=' → logprob: -5.482724189758301
    5. ' ' → logprob: -8.8577241897583
    6. ' ==' → logprob: -10.2327241897583
    7. ' >' → logprob: -10.4827241897583
    8. ',n' → logprob: -10.6077241897583
    9. '   ' → logprob: -11.2327241897583
    10. ',m' → logprob: -12.1077241897583

Token 258: ',c' (ID: 22261)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.31483420729637146
    2. ',' → logprob: -1.6898342370986938
    3. ',p' → logprob: -3.5648341178894043
    4. ',q' → logprob: -3.6898341178894043
    5. ',r' → logprob: -4.939834117889404
    6. ',c' → logprob: -5.314834117889404
    7. ',f' → logprob: -5.564834117889404
    8. ',d' → logprob: -5.814834117889404
    9. ' =' → logprob: -5.814834117889404
    10. ',s' → logprob: -6.189834117889404

Token 259: ',s' (ID: 20379)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7244592308998108
    2. ',' → logprob: -1.099459171295166
    3. ' =' → logprob: -2.349459171295166
    4. ',k' → logprob: -2.974459171295166
    5. ',p' → logprob: -4.724459171295166
    6. ',d' → logprob: -4.849459171295166
    7. ',n' → logprob: -4.974459171295166
    8. ',w' → logprob: -6.349459171295166
    9. ',v' → logprob: -6.599459171295166
    10. ',q' → logprob: -6.599459171295166

Token 260: ',g' (ID: 44461)
  Prédit: ',t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.5222154855728149
    2. ',k' → logprob: -1.147215485572815
    3. ',p' → logprob: -3.8972153663635254
    4. ',q' → logprob: -4.147215366363525
    5. ',d' → logprob: -4.397215366363525
    6. ',e' → logprob: -4.647215366363525
    7. ',' → logprob: -4.772215366363525
    8. ',f' → logprob: -5.397215366363525
    9. ',v' → logprob: -5.647215366363525
    10. ',x' → logprob: -5.647215366363525

Token 261: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1798717975616455
    2. ' =' → logprob: -1.8048717975616455
    3. '=input' → logprob: -9.929871559143066
    4. ',' → logprob: -10.054871559143066
    5. '=line' → logprob: -11.179871559143066
    6. '=sys' → logprob: -11.429871559143066
    7. ',n' → logprob: -13.929871559143066
    8. ',p' → logprob: -13.929871559143066
    9. '=list' → logprob: -13.929871559143066
    10. ' ' → logprob: -13.929871559143066

Token 262: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.7473215460777283
    2. ' map' → logprob: -0.9973215460777283
    3. 'map' → logprob: -2.372321605682373
    4. 'read' → logprob: -2.747321605682373
    5. ' list' → logprob: -9.497321128845215
    6. 'list' → logprob: -10.372321128845215
    7. ' tuple' → logprob: -11.372321128845215
    8. '	read' → logprob: -12.247321128845215
    9. ' ' → logprob: -12.372321128845215
    10. 'tuple' → logprob: -12.622321128845215

Token 263: 'ints' (ID: 20448)
  Prédit: 'ints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.0004991783644072711
    2. '()' → logprob: -8.25049877166748
    3. 'int' → logprob: -8.37549877166748
    4. 'inte' → logprob: -13.25049877166748
    5. '(' → logprob: -13.62549877166748
    6. '().' → logprob: -14.37549877166748
    7. ' ints' → logprob: -14.37549877166748
    8. '())' → logprob: -14.62549877166748
    9. '```' → logprob: -14.62549877166748
    10. 'line' → logprob: -14.75049877166748

Token 264: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.76628842484206e-05
    2. '()
' → logprob: -9.625067710876465
    3. '();' → logprob: -15.000067710876465
    4. '()
' → logprob: -15.375067710876465
    5. '()

' → logprob: -15.500067710876465
    6. '()`' → logprob: -15.875067710876465
    7. '()]' → logprob: -16.00006675720215
    8. ' ()' → logprob: -16.12506675720215
    9. '()\' → logprob: -16.37506675720215
    10. '():' → logprob: -16.37506675720215

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20030486583709717
    2. '<|end|>' → logprob: -1.8253048658370972
    3. '   ' → logprob: -5.075304985046387
    4. '        
' → logprob: -5.200304985046387
    5. '
' → logprob: -5.700304985046387
    6. ':' → logprob: -6.700304985046387
    7. '<|end|>' → logprob: -7.075304985046387
    8. '  
' → logprob: -7.450304985046387
    9. ':
' → logprob: -7.575304985046387
    10. ' ' → logprob: -7.950304985046387

Token 266: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2157403528690338
    2. ' if' → logprob: -2.215740442276001
    3. '       ' → logprob: -2.465740442276001
    4. '
' → logprob: -11.090740203857422
    5. '   ' → logprob: -11.465740203857422
    6. '	if' → logprob: -11.715740203857422
    7. '        
' → logprob: -13.965740203857422
    8. ' ' → logprob: -14.465740203857422
    9. '      ' → logprob: -14.715740203857422
    10. '	' → logprob: -15.090740203857422

Token 267: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2520105540752411
    2. ' n' → logprob: -1.5020105838775635
    3. '(n' → logprob: -9.627010345458984
    4. ' (' → logprob: -12.002010345458984
    5. ' not' → logprob: -12.252010345458984
    6. '(' → logprob: -13.252010345458984
    7. '0' → logprob: -13.752010345458984
    8. ' ' → logprob: -14.002010345458984
    9. 'not' → logprob: -15.002010345458984
    10. '[n' → logprob: -15.002010345458984

Token 268: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1002156138420105
    2. '==' → logprob: -2.3502156734466553
    3. '=' → logprob: -12.600215911865234
    4. ' ' → logprob: -12.600215911865234
    5. '   ' → logprob: -14.725215911865234
    6. ',' → logprob: -15.100215911865234
    7. '0' → logprob: -15.100215911865234
    8. ')==' → logprob: -15.100215911865234
    9. '()==' → logprob: -15.600215911865234
    10. ' =' → logprob: -15.975215911865234

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'm' → logprob: -19.750003814697266
    4. 'c' → logprob: -21.000003814697266
    5. '۰' → logprob: -22.500003814697266
    6. '   ' → logprob: -23.125003814697266
    7. '  ' → logprob: -23.750003814697266
    8. '
' → logprob: -23.875003814697266
    9. '```' → logprob: -23.875003814697266
    10. '    ' → logprob: -24.000003814697266

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. 'm' → logprob: -14.000000953674316
    3. ' ' → logprob: -14.875000953674316
    4. 'c' → logprob: -20.250001907348633
    5. '۰' → logprob: -21.125001907348633
    6. ' m' → logprob: -21.500001907348633
    7. 's' → logprob: -21.500001907348633
    8. '```' → logprob: -22.000001907348633
    9. '
' → logprob: -23.250001907348633
    10. ' ' → logprob: -23.375001907348633

Token 271: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2014186978340149
    2. 'and' → logprob: -1.7014186382293701
    3. '	and' → logprob: -12.20141887664795
    4. ' ' → logprob: -15.95141887664795
    5. 'm' → logprob: -16.076417922973633
    6. '   ' → logprob: -17.201417922973633
    7. '    ' → logprob: -17.326417922973633
    8. ' и' → logprob: -17.326417922973633
    9. ',' → logprob: -17.451417922973633
    10. '<|end|>' → logprob: -17.951417922973633

Token 272: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00020354038861114532
    2. ' m' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.75020408630371
    4. '	m' → logprob: -19.00020408630371
    5. '  ' → logprob: -20.87520408630371
    6. '    ' → logprob: -21.50020408630371
    7. ' ' → logprob: -21.62520408630371
    8. '     ' → logprob: -23.00020408630371
    9. '
' → logprob: -23.12520408630371
    10. ' ' → logprob: -23.50020408630371

Token 273: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07889331132173538
    2. ' ==' → logprob: -2.5788934230804443
    3. 'c' → logprob: -13.453893661499023
    4. '=' → logprob: -13.578893661499023
    5. ' ' → logprob: -15.203893661499023
    6. '===' → logprob: -15.203893661499023
    7. '0' → logprob: -16.578893661499023
    8. '()==' → logprob: -16.953893661499023
    9. '```' → logprob: -17.703893661499023
    10. '==
' → logprob: -17.703893661499023

Token 274: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000556843588128686
    2. ' ' → logprob: -7.500556945800781
    3. 'c' → logprob: -12.500556945800781
    4. ' c' → logprob: -16.25055694580078
    5. '   ' → logprob: -18.37555694580078
    6. '  ' → logprob: -18.50055694580078
    7. 's' → logprob: -18.62555694580078
    8. '<|end|>' → logprob: -20.12555694580078
    9. '۰' → logprob: -20.37555694580078
    10. ' s' → logprob: -20.75055694580078

Token 275: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. 'c' → logprob: -15.75000286102295
    4. '=' → logprob: -19.375003814697266
    5. 's' → logprob: -19.750003814697266
    6. '۰' → logprob: -19.875003814697266
    7. '```' → logprob: -19.875003814697266
    8. '  ' → logprob: -20.750003814697266
    9. '   ' → logprob: -20.875003814697266
    10. '00' → logprob: -21.312503814697266

Token 276: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038044705986976624
    2. 'and' → logprob: -3.2880446910858154
    3. ' ' → logprob: -13.538044929504395
    4. '0' → logprob: -14.038044929504395
    5. 'c' → logprob: -14.788044929504395
    6. '	and' → logprob: -15.413044929504395
    7. '```' → logprob: -15.788044929504395
    8. ',' → logprob: -16.163043975830078
    9. '  ' → logprob: -16.913043975830078
    10. '<|end|>' → logprob: -17.163043975830078

Token 277: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0024756586644798517
    2. ' c' → logprob: -6.002475738525391
    3. '	c' → logprob: -17.50247573852539
    4. ' ' → logprob: -17.75247573852539
    5. '   ' → logprob: -18.50247573852539
    6. '  ' → logprob: -18.87747573852539
    7. ')c' → logprob: -21.75247573852539
    8. '
' → logprob: -21.87747573852539
    9. '```' → logprob: -23.00247573852539
    10. '    ' → logprob: -23.25247573852539

Token 278: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.048598501831293106
    2. ' ==' → logprob: -3.048598527908325
    3. 's' → logprob: -11.798598289489746
    4. '=' → logprob: -13.548598289489746
    5. '0' → logprob: -13.923598289489746
    6. ' ' → logprob: -13.923598289489746
    7. ' s' → logprob: -16.548599243164062
    8. '===' → logprob: -16.548599243164062
    9. '()==' → logprob: -16.673599243164062
    10. ')==' → logprob: -16.923599243164062

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620591644197702
    2. ' ' → logprob: -5.379620552062988
    3. 's' → logprob: -15.504620552062988
    4. ' s' → logprob: -17.754621505737305
    5. '   ' → logprob: -18.004621505737305
    6. '  ' → logprob: -18.129621505737305
    7. ' and' → logprob: -18.879621505737305
    8. 'and' → logprob: -18.879621505737305
    9. ' ' → logprob: -20.067121505737305
    10. '۰' → logprob: -20.129621505737305

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. 's' → logprob: -17.500009536743164
    4. '۰' → logprob: -18.375009536743164
    5. '  ' → logprob: -19.562509536743164
    6. '   ' → logprob: -19.687509536743164
    7. '00' → logprob: -19.875009536743164
    8. 'and' → logprob: -20.125009536743164
    9. '```' → logprob: -20.125009536743164
    10. '=' → logprob: -20.250009536743164

Token 281: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038044821470975876
    2. 'and' → logprob: -3.2880449295043945
    3. '0' → logprob: -13.413044929504395
    4. ' ' → logprob: -13.413044929504395
    5. '```' → logprob: -16.163043975830078
    6. '	and' → logprob: -16.788043975830078
    7. '  ' → logprob: -17.788043975830078
    8. ' ' → logprob: -17.788043975830078
    9. 'x' → logprob: -17.788043975830078
    10. 's' → logprob: -17.913043975830078

Token 282: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12692958116531372
    2. ' s' → logprob: -2.126929521560669
    3. 'g' → logprob: -13.75192928314209
    4. '   ' → logprob: -15.62692928314209
    5. ' g' → logprob: -16.251930236816406
    6. ' ' → logprob: -16.251930236816406
    7. '  ' → logprob: -16.376930236816406
    8. '	s' → logprob: -16.751930236816406
    9. '0' → logprob: -18.376930236816406
    10. '    ' → logprob: -19.126930236816406

Token 283: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20141363143920898
    2. '==' → logprob: -1.701413631439209
    3. ' ' → logprob: -15.701414108276367
    4. 'and' → logprob: -17.451414108276367
    5. '0' → logprob: -17.576414108276367
    6. '=' → logprob: -17.576414108276367
    7. ' and' → logprob: -17.701414108276367
    8. ' ' → logprob: -17.826414108276367
    9. '```' → logprob: -17.951414108276367
    10. '()==' → logprob: -18.076414108276367

Token 284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00593117019161582
    2. ' ' → logprob: -5.130931377410889
    3. 'g' → logprob: -13.63093090057373
    4. ' and' → logprob: -14.63093090057373
    5. 'and' → logprob: -14.75593090057373
    6. '   ' → logprob: -15.38093090057373
    7. '  ' → logprob: -15.88093090057373
    8. ' g' → logprob: -16.130931854248047
    9. ' ' → logprob: -16.755931854248047
    10. '=' → logprob: -17.130931854248047

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001239196863025427
    2. ' ' → logprob: -9.125123977661133
    3. 'g' → logprob: -11.250123977661133
    4. '```' → logprob: -14.687623977661133
    5. ' g' → logprob: -14.937623977661133
    6. ' and' → logprob: -15.687623977661133
    7. 'and' → logprob: -15.750123977661133
    8. '``' → logprob: -15.875123977661133
    9. 's' → logprob: -15.937623977661133
    10. '   ' → logprob: -16.125123977661133

Token 286: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023251304402947426
    2. 'and' → logprob: -3.7732512950897217
    3. ' ' → logprob: -12.6482515335083
    4. 'g' → logprob: -13.3982515335083
    5. '0' → logprob: -14.1482515335083
    6. '```' → logprob: -16.023250579833984
    7. '	and' → logprob: -16.648250579833984
    8. 'a' → logprob: -17.148250579833984
    9. '   ' → logprob: -17.523250579833984
    10. ' и' → logprob: -17.648250579833984

Token 287: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0024788661394268274
    2. ' g' → logprob: -6.002479076385498
    3. '0' → logprob: -13.00247859954834
    4. '   ' → logprob: -14.37747859954834
    5. '  ' → logprob: -15.75247859954834
    6. ' ' → logprob: -16.002479553222656
    7. '	g' → logprob: -16.877479553222656
    8. '    ' → logprob: -17.502479553222656
    9. ' ' → logprob: -18.502479553222656
    10. '
' → logprob: -19.252479553222656

Token 288: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.160251647233963
    2. '==' → logprob: -1.9102516174316406
    3. ')==' → logprob: -11.66025161743164
    4. '0' → logprob: -12.03525161743164
    5. ':' → logprob: -12.53525161743164
    6. '=' → logprob: -12.78525161743164
    7. ' ' → logprob: -13.03525161743164
    8. '()==' → logprob: -13.16025161743164
    9. ' =' → logprob: -14.16025161743164
    10. ']==' → logprob: -14.41025161743164

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.750204086303711
    4. '  ' → logprob: -16.25020408630371
    5. '```' → logprob: -17.62520408630371
    6. '۰' → logprob: -17.93770408630371
    7. '    ' → logprob: -18.81270408630371
    8. ' ' → logprob: -19.18770408630371
    9. '     ' → logprob: -19.25020408630371
    10. '``' → logprob: -19.37520408630371

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -18.875001907348633
    4. '```' → logprob: -19.000001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '０' → logprob: -20.937501907348633
    7. '``' → logprob: -21.000001907348633
    8. '০' → logprob: -21.125001907348633
    9. '  ' → logprob: -21.187501907348633
    10. '०' → logprob: -21.375001907348633

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5759614706039429
    2. ':
' → logprob: -0.8259614706039429
    3. ':return' → logprob: -11.700961112976074
    4. '   ' → logprob: -11.950961112976074
    5. '       ' → logprob: -12.325961112976074
    6. ':
' → logprob: -13.450961112976074
    7. '):
' → logprob: -14.325961112976074
    8. '():
' → logprob: -15.575961112976074
    9. '           ' → logprob: -15.575961112976074
    10. ' :
' → logprob: -15.950961112976074

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013291679788380861
    2. '       ' → logprob: -6.626328945159912
    3. '		' → logprob: -14.25132942199707
    4. '          ' → logprob: -14.25132942199707
    5. ' break' → logprob: -14.25132942199707
    6. '   ' → logprob: -14.62632942199707
    7. '
' → logprob: -15.37632942199707
    8. '               ' → logprob: -15.87632942199707
    9. '     ' → logprob: -15.87632942199707
    10. 'break' → logprob: -16.12632942199707

Token 293: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06024197116494179
    2. ' break' → logprob: -3.060241937637329
    3. '       ' → logprob: -4.560242176055908
    4. 'return' → logprob: -6.935242176055908
    5. '	break' → logprob: -9.56024169921875
    6. '           ' → logprob: -9.56024169921875
    7. ' return' → logprob: -12.06024169921875
    8. '   ' → logprob: -12.31024169921875
    9. '_break' → logprob: -13.56024169921875
    10. '               ' → logprob: -14.31024169921875

Token 294: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02646552212536335
    2. '        
' → logprob: -4.15146541595459
    3. '<|end|>' → logprob: -4.90146541595459
    4. '
' → logprob: -6.15146541595459
    5. '   ' → logprob: -8.27646541595459
    6. '```' → logprob: -8.40146541595459
    7. '    
' → logprob: -8.77646541595459
    8. '            
' → logprob: -10.02646541595459
    9. '<|end|>' → logprob: -10.15146541595459
    10. ',' → logprob: -10.77646541595459

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011081179603934288
    2. '   ' → logprob: -5.011081218719482
    3. 'graph' → logprob: -6.261081218719482
    4. ' edges' → logprob: -7.386081218719482
    5. ' graph' → logprob: -7.636081218719482
    6. 'edges' → logprob: -7.636081218719482
    7. '```' → logprob: -7.636081218719482
    8. '        
' → logprob: -8.261080741882324
    9. '	graph' → logprob: -10.011080741882324
    10. '
' → logprob: -10.136080741882324

Token 296: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.02973070740699768
    2. 'adj' → logprob: -4.029730796813965
    3. 'edges' → logprob: -4.529730796813965
    4. ' graph' → logprob: -7.654730796813965
    5. '   ' → logprob: -8.654730796813965
    6. ' edges' → logprob: -10.154730796813965
    7. ' adj' → logprob: -10.904730796813965
    8. '       ' → logprob: -11.654730796813965
    9. 'Graph' → logprob: -12.529730796813965
    10. 'roads' → logprob: -12.904730796813965

Token 297: ' Lines' (ID: 63442)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.16897109150886536
    2. 'adj' → logprob: -2.293971061706543
    3. 'edges' → logprob: -3.168971061706543
    4. ' graph' → logprob: -4.668971061706543
    5. ' adj' → logprob: -6.418971061706543
    6. ' edges' → logprob: -7.043971061706543
    7. 'dist' → logprob: -8.668971061706543
    8. '#' → logprob: -8.918971061706543
    9. 'roads' → logprob: -9.418971061706543
    10. 'Graph' → logprob: -9.793971061706543

Token 298: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24270856380462646
    2. ' =' → logprob: -1.6177085638046265
    3. '=[]' → logprob: -5.492708683013916
    4. '       ' → logprob: -5.617708683013916
    5. 'for' → logprob: -5.867708683013916
    6. '=[]
' → logprob: -5.992708683013916
    7. 'graph' → logprob: -6.492708683013916
    8. ' for' → logprob: -7.492708683013916
    9. '   ' → logprob: -7.617708683013916
    10. ' of' → logprob: -7.992708683013916

Token 299: ' each' (ID: 2454)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.32189705967903137
    2. ' graph' → logprob: -1.821897029876709
    3. 'edges' → logprob: -3.196897029876709
    4. ' edges' → logprob: -3.321897029876709
    5. '[]' → logprob: -3.571897029876709
    6. '       ' → logprob: -5.321897029876709
    7. '   ' → logprob: -6.821897029876709
    8. ' []' → logprob: -7.321897029876709
    9. 'adj' → logprob: -7.821897029876709
    10. '	graph' → logprob: -8.321897506713867

Token 300: ' has' (ID: 853)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8767505884170532
    2. '=' → logprob: -1.6267505884170532
    3. ' for' → logprob: -2.2517504692077637
    4. '_' → logprob: -2.2517504692077637
    5. 'for' → logprob: -2.2517504692077637
    6. ' =' → logprob: -4.501750469207764
    7. '_edge' → logprob: -4.501750469207764
    8. '_edges' → logprob: -4.626750469207764
    9. ' with' → logprob: -5.001750469207764
    10. 'of' → logprob: -5.376750469207764

Token 301: ' x' (ID: 1215)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.13589058816432953
    2. ' u' → logprob: -2.135890483856201
    3. 'a' → logprob: -5.010890483856201
    4. ' a' → logprob: -7.385890483856201
    5. '   ' → logprob: -7.510890483856201
    6. ' sys' → logprob: -8.26089096069336
    7. 'sys' → logprob: -8.26089096069336
    8. 'x' → logprob: -8.38589096069336
    9. ' three' → logprob: -9.01089096069336
    10. '  ' → logprob: -11.01089096069336

Token 302: '_i' (ID: 10853)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.8109662532806396
    2. ',' → logprob: -1.1859662532806396
    3. ' ,' → logprob: -2.1859662532806396
    4. ' =' → logprob: -2.5609662532806396
    5. 'y' → logprob: -3.1859662532806396
    6. '=' → logprob: -5.435966491699219
    7. '   ' → logprob: -5.435966491699219
    8. ',m' → logprob: -5.935966491699219
    9. ' y' → logprob: -6.810966491699219
    10. '_' → logprob: -7.060966491699219

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3623373210430145
    2. ' =' → logprob: -1.487337350845337
    3. '=' → logprob: -2.987337350845337
    4. '_' → logprob: -4.112337112426758
    5. 's' → logprob: -6.362337112426758
    6. ',n' → logprob: -6.487337112426758
    7. '   ' → logprob: -6.737337112426758
    8. ' ,' → logprob: -7.112337112426758
    9. 'for' → logprob: -7.362337112426758
    10. '_,' → logprob: -7.612337112426758

Token 304: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.763666947837919e-05
    2. ' y' → logprob: -10.62504768371582
    3. 'a' → logprob: -10.87504768371582
    4. 't' → logprob: -14.00004768371582
    5. 'x' → logprob: -14.87504768371582
    6. '	y' → logprob: -15.00004768371582
    7. 'z' → logprob: -15.12504768371582
    8. 'd' → logprob: -15.25004768371582
    9. 'u' → logprob: -15.25004768371582
    10. 'h' → logprob: -15.25004768371582

Token 305: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25969430804252625
    2. ',m' → logprob: -1.6346943378448486
    3. '_i' → logprob: -5.2596940994262695
    4. '_m' → logprob: -5.3846940994262695
    5. ',i' → logprob: -5.3846940994262695
    6. 'm' → logprob: -5.5096940994262695
    7. 'i' → logprob: -6.1346940994262695
    8. '_' → logprob: -6.2596940994262695
    9. 's' → logprob: -6.3846940994262695
    10. ',_' → logprob: -6.5096940994262695

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0881586074829102
    2. 'for' → logprob: -1.2131586074829102
    3. ' =' → logprob: -2.21315860748291
    4. '=' → logprob: -2.21315860748291
    5. ' for' → logprob: -2.21315860748291
    6. '       ' → logprob: -3.96315860748291
    7. '=[]
' → logprob: -5.46315860748291
    8. '=[]' → logprob: -5.83815860748291
    9. '   ' → logprob: -5.96315860748291
    10. '[]' → logprob: -6.21315860748291

Token 307: ' d' (ID: 272)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.19808444380760193
    2. 'd' → logprob: -2.4480843544006348
    3. 'w' → logprob: -3.0730843544006348
    4. 't' → logprob: -4.073084354400635
    5. 'l' → logprob: -4.448084354400635
    6. 'cost' → logprob: -5.198084354400635
    7. 'a' → logprob: -5.948084354400635
    8. 'f' → logprob: -6.073084354400635
    9. 'v' → logprob: -6.573084354400635
    10. 'k' → logprob: -6.698084354400635

Token 308: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7797061204910278
    2. '=' → logprob: -1.4047061204910278
    3. 'for' → logprob: -2.5297060012817383
    4. '       ' → logprob: -2.9047060012817383
    5. '[]' → logprob: -3.2797060012817383
    6. '   ' → logprob: -3.5297060012817383
    7. '=[]' → logprob: -3.7797060012817383
    8. ',' → logprob: -4.279706001281738
    9. ' for' → logprob: -4.654706001281738
    10. 's' → logprob: -4.654706001281738

Token 309: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24080343544483185
    2. 'edges' → logprob: -1.7408034801483154
    3. 'for' → logprob: -3.7408034801483154
    4. 'graph' → logprob: -4.990803241729736
    5. ' edges' → logprob: -5.865803241729736
    6. ' for' → logprob: -6.365803241729736
    7. '(edges' → logprob: -6.865803241729736
    8. ',' → logprob: -7.240803241729736
    9. '   ' → logprob: -7.490803241729736
    10. '        
' → logprob: -7.990803241729736

Token 310: ' c' (ID: 274)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.9671128392219543
    2. 'f' → logprob: -1.7171127796173096
    3. 'w' → logprob: -1.7171127796173096
    4. 'p' → logprob: -2.7171127796173096
    5. 'l' → logprob: -2.8421127796173096
    6. 't' → logprob: -3.5921127796173096
    7. 'c' → logprob: -3.7171127796173096
    8. 'cost' → logprob: -3.9671127796173096
    9. ' z' → logprob: -4.592113018035889
    10. 'fare' → logprob: -4.842113018035889

Token 311: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7964658737182617
    2. '=' → logprob: -1.1714658737182617
    3. '_' → logprob: -2.7964658737182617
    4. ',' → logprob: -3.0464658737182617
    5. '_i' → logprob: -3.2964658737182617
    6. 'x' → logprob: -4.421465873718262
    7. ')' → logprob: -4.421465873718262
    8. 'ost' → logprob: -4.546465873718262
    9. '   ' → logprob: -4.546465873718262
    10. 's' → logprob: -4.671465873718262

Token 312: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.217399463057518
    2. 'edges' → logprob: -2.2173993587493896
    3. 'graph' → logprob: -3.0923993587493896
    4. ' edges' → logprob: -3.7173993587493896
    5. '	' → logprob: -5.467399597167969
    6. ' graph' → logprob: -5.717399597167969
    7. '	graph' → logprob: -5.967399597167969
    8. ',' → logprob: -6.467399597167969
    9. '        
' → logprob: -7.217399597167969
    10. '
' → logprob: -7.342399597167969

Token 313: 'stations' (ID: 118443)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007327844388782978
    2. ' )' → logprob: -5.257328033447266
    3. '       ' → logprob: -7.757328033447266
    4. 'n' → logprob: -8.382328033447266
    5. ')
' → logprob: -8.507328033447266
    6. ')n' → logprob: -8.507328033447266
    7. '   ' → logprob: -8.632328033447266
    8. ',' → logprob: -8.757328033447266
    9. 'x' → logprob: -9.007328033447266
    10. 'for' → logprob: -9.132328033447266

Token 314: ' connected' (ID: 12079)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12304525077342987
    2. ',' → logprob: -2.3730452060699463
    3. '=' → logprob: -5.248045444488525
    4. '       ' → logprob: -5.373045444488525
    5. '):' → logprob: -5.873045444488525
    6. ' =' → logprob: -5.998045444488525
    7. '):
' → logprob: -6.498045444488525
    8. ' )' → logprob: -6.998045444488525
    9. '   ' → logprob: -7.123045444488525
    10. 's' → logprob: -7.373045444488525

Token 315: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0669718012213707
    2. ',' → logprob: -2.941971778869629
    3. ')
' → logprob: -6.316971778869629
    4. '):
' → logprob: -6.316971778869629
    5. ' by' → logprob: -6.441971778869629
    6. '=' → logprob: -6.691971778869629
    7. '):' → logprob: -6.691971778869629
    8. '),' → logprob: -6.941971778869629
    9. '   ' → logprob: -7.066971778869629
    10. '       ' → logprob: -7.191971778869629

Token 316: ' distance' (ID: 9324)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.1918888092041016
    2. 'fare' → logprob: -1.6918888092041016
    3. 'cost' → logprob: -1.8168888092041016
    4. '   ' → logprob: -2.5668888092041016
    5. ' fare' → logprob: -3.1918888092041016
    6. 't' → logprob: -3.4418888092041016
    7. 'p' → logprob: -3.6918888092041016
    8. 'l' → logprob: -3.8168888092041016
    9. 'time' → logprob: -4.066888809204102
    10. 'capacity' → logprob: -4.441888809204102

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3157880902290344
    2. ')' → logprob: -1.3157880306243896
    3. '=' → logprob: -7.065788269042969
    4. ' ,' → logprob: -8.315788269042969
    5. ')
' → logprob: -8.440788269042969
    6. '),' → logprob: -8.440788269042969
    7. ' between' → logprob: -8.690788269042969
    8. '):
' → logprob: -8.940788269042969
    9. '):' → logprob: -8.940788269042969
    10. ')=' → logprob: -9.065788269042969

Token 318: ' company' (ID: 3175)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.9135816693305969
    2. ' cost' → logprob: -1.5385816097259521
    3. 'fare' → logprob: -1.5385816097259521
    4. 'price' → logprob: -3.163581609725952
    5. ' fare' → logprob: -3.288581609725952
    6. '   ' → logprob: -3.413581609725952
    7. 'f' → logprob: -4.288581848144531
    8. ' price' → logprob: -4.663581848144531
    9. 'p' → logprob: -4.663581848144531
    10. 'capacity' → logprob: -5.913581848144531

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005662570474669337
    2. ')
' → logprob: -7.750566482543945
    3. 's' → logprob: -10.125566482543945
    4. '):
' → logprob: -10.375566482543945
    5. '   ' → logprob: -11.125566482543945
    6. '):' → logprob: -11.375566482543945
    7. ' )' → logprob: -12.000566482543945
    8. '=' → logprob: -12.500566482543945
    9. ',' → logprob: -12.625566482543945
    10. '<|end|>' → logprob: -13.000566482543945

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001631378778256476
    2. '```' → logprob: -7.501631259918213
    3. '        
' → logprob: -8.501631736755371
    4. 'edges' → logprob: -8.626631736755371
    5. ' lines' → logprob: -8.626631736755371
    6. ' edges' → logprob: -8.751631736755371
    7. '   ' → logprob: -9.501631736755371
    8. '<|end|>' → logprob: -9.626631736755371
    9. ',' → logprob: -10.001631736755371
    10. 'for' → logprob: -10.376631736755371

Token 321: ' edges' (ID: 22569)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.15362411737442017
    2. 'edges' (adapté à ' edges') → logprob: -2.5286240577697754
    3. ' graph' → logprob: -2.9036240577697754
    4. ' edges' → logprob: -5.278624057769775
    5. '       ' → logprob: -6.153624057769775
    6. 'adj' → logprob: -8.653624534606934
    7. '	graph' → logprob: -8.653624534606934
    8. 'lines' → logprob: -9.653624534606934
    9. 'graphs' → logprob: -9.903624534606934
    10. '   ' → logprob: -10.028624534606934

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741222560405731
    2. '=' → logprob: -0.9741222858428955
    3. '=[]' → logprob: -10.099122047424316
    4. '   ' → logprob: -12.974122047424316
    5. '[]' → logprob: -14.099122047424316
    6. ',' → logprob: -15.224122047424316
    7. '[' → logprob: -15.349122047424316
    8. '＝' → logprob: -16.099123001098633
    9. '.append' → logprob: -16.099123001098633
    10. '=[]
' → logprob: -16.474123001098633

Token 323: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00922388769686222
    2. ' []' → logprob: -4.759223937988281
    3. '[]
' → logprob: -7.509223937988281
    4. '[' → logprob: -9.759223937988281
    5. ' []
' → logprob: -13.634223937988281
    6. ' [' → logprob: -13.759223937988281
    7. ' [[]' → logprob: -15.259223937988281
    8. '[]

' → logprob: -15.384223937988281
    9. '{}' → logprob: -15.509223937988281
    10. '[]}' → logprob: -15.884223937988281

Token 324: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20143917202949524
    2. 'for' → logprob: -1.7014391422271729
    3. ']' → logprob: -11.451438903808594
    4. '	for' → logprob: -11.951438903808594
    5. 'n' → logprob: -13.201438903808594
    6. '   ' → logprob: -13.326438903808594
    7. ',' → logprob: -13.326438903808594
    8. '       ' → logprob: -13.326438903808594
    9. ',n' → logprob: -13.951438903808594
    10. ')' → logprob: -15.201438903808594

Token 325: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0025397518184036016
    2. ' _' → logprob: -6.12753963470459
    3. ' range' → logprob: -8.12753963470459
    4. ' in' → logprob: -10.50253963470459
    5. 'range' → logprob: -10.50253963470459
    6. '_range' → logprob: -13.12753963470459
    7. 'in' → logprob: -13.25253963470459
    8. '_i' → logprob: -14.87753963470459
    9. '_=' → logprob: -16.002540588378906
    10. '(range' → logprob: -16.127540588378906

Token 326: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16158784925937653
    2. ' in' → logprob: -2.661587953567505
    3. 'range' → logprob: -2.661587953567505
    4. '_' → logprob: -4.786587715148926
    5. ' range' → logprob: -6.786587715148926
    6. 'i' → logprob: -10.161587715148926
    7. 'n' → logprob: -11.911587715148926
    8. ' ' → logprob: -12.161587715148926
    9. 'x' → logprob: -12.411587715148926
    10. 'ange' → logprob: -13.036587715148926

Token 327: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38687145709991455
    2. ' range' → logprob: -1.1368714570999146
    3. '_range' → logprob: -15.136871337890625
    4. '_' → logprob: -16.011871337890625
    5. '(range' → logprob: -18.511871337890625
    6. '	range' → logprob: -19.886871337890625
    7. '0' → logprob: -20.636871337890625
    8. '
' → logprob: -22.511871337890625
    9. 'Range' → logprob: -22.636871337890625
    10. '   ' → logprob: -22.761871337890625

Token 328: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6939705610275269
    2. '(n' → logprob: -0.6939705610275269
    3. ' n' → logprob: -7.193970680236816
    4. ' (' → logprob: -9.693970680236816
    5. '(' → logprob: -12.068970680236816
    6. '	n' → logprob: -13.193970680236816
    7. '   ' → logprob: -13.818970680236816
    8. '
' → logprob: -14.818970680236816
    9. ')n' → logprob: -14.943970680236816
    10. ',n' → logprob: -15.068970680236816

Token 329: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013360745506361127
    2. ')]
' → logprob: -6.626336097717285
    3. ')]
' → logprob: -12.501336097717285
    4. '+' → logprob: -13.251336097717285
    5. ']' → logprob: -13.251336097717285
    6. ')]

' → logprob: -13.626336097717285
    7. ' )' → logprob: -14.001336097717285
    8. ')' → logprob: -14.126336097717285
    9. '>]' → logprob: -17.37633514404297
    10. '   ' → logprob: -17.50133514404297

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.625009536743164
    4. '```' → logprob: -17.000009536743164
    5. '2' → logprob: -17.125009536743164
    6. ')' → logprob: -17.625009536743164
    7. '
' → logprob: -17.625009536743164
    8. '0' → logprob: -17.875009536743164
    9. 'm' → logprob: -18.000009536743164
    10. ']' → logprob: -18.375009536743164

Token 331: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008792304433882236
    2. ']' → logprob: -4.758792400360107
    3. ')' → logprob: -8.88379192352295
    4. ')]
' → logprob: -10.38379192352295
    5. ']
' → logprob: -12.38379192352295
    6. ' ]' → logprob: -13.75879192352295
    7. ')]

' → logprob: -14.50879192352295
    8. '}]' → logprob: -14.88379192352295
    9. '>]' → logprob: -14.88379192352295
    10. '])' → logprob: -15.00879192352295

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07381555438041687
    2. ' for' → logprob: -2.8238155841827393
    3. '   ' → logprob: -4.94881534576416
    4. 'for' → logprob: -5.44881534576416
    5. '	for' → logprob: -8.82381534576416
    6. '<|end|>' → logprob: -9.07381534576416
    7. '```' → logprob: -9.94881534576416
    8. '        
' → logprob: -11.07381534576416
    9. '	' → logprob: -11.07381534576416
    10. ' ' → logprob: -11.07381534576416

Token 333: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20315542817115784
    2. ' for' → logprob: -1.7031553983688354
    3. '       ' → logprob: -6.453155517578125
    4. '   ' → logprob: -8.953155517578125
    5. '	for' → logprob: -10.453155517578125
    6. '```' → logprob: -12.078155517578125
    7. ' ' → logprob: -14.453155517578125
    8. '
' → logprob: -15.078155517578125
    9. '        
' → logprob: -16.328155517578125
    10. '  ' → logprob: -17.078155517578125

Token 334: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01105170976370573
    2. ' _' → logprob: -4.511051654815674
    3. '_i' → logprob: -12.886052131652832
    4. ' i' → logprob: -13.886052131652832
    5. 'i' → logprob: -16.261051177978516
    6. '_=' → logprob: -16.261051177978516
    7. '_
' → logprob: -16.761051177978516
    8. ' _
' → logprob: -17.011051177978516
    9. '_

' → logprob: -18.511051177978516
    10. '_]' → logprob: -18.636051177978516

Token 335: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07954154163599014
    2. 'in' → logprob: -2.9545414447784424
    3. 'range' → logprob: -3.8295414447784424
    4. ' range' → logprob: -5.9545416831970215
    5. ' ' → logprob: -10.454541206359863
    6. '  ' → logprob: -12.204541206359863
    7. 'import' → logprob: -12.829541206359863
    8. 'm' → logprob: -12.954541206359863
    9. 'int' → logprob: -13.329541206359863
    10. '_' → logprob: -14.204541206359863

Token 336: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00038038729690015316
    2. ' range' → logprob: -7.875380516052246
    3. 'm' → logprob: -16.00037956237793
    4. '   ' → logprob: -17.12537956237793
    5. ' ' → logprob: -17.62537956237793
    6. '	range' → logprob: -17.62537956237793
    7. '(range' → logprob: -18.25037956237793
    8. '```' → logprob: -18.25037956237793
    9. '  ' → logprob: -18.62537956237793
    10. 'r' → logprob: -19.37537956237793

Token 337: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.001175343873910606
    2. 'm' → logprob: -6.751175403594971
    3. ' m' → logprob: -12.876174926757812
    4. ' (' → logprob: -13.251174926757812
    5. '(' → logprob: -14.376174926757812
    6. '	m' → logprob: -15.251174926757812
    7. ',m' → logprob: -18.251174926757812
    8. '_m' → logprob: -19.001174926757812
    9. ')m' → logprob: -19.876174926757812
    10. '   ' → logprob: -20.001174926757812

Token 338: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.42900505661964417
    2. '):' → logprob: -1.0540050268173218
    3. '):
' → logprob: -9.054004669189453
    4. ')' → logprob: -9.554004669189453
    5. ':' → logprob: -10.304004669189453
    6. '   ' → logprob: -11.054004669189453
    7. '():
' → logprob: -11.304004669189453
    8. '       ' → logprob: -11.804004669189453
    9. ',' → logprob: -11.929004669189453
    10. '```' → logprob: -11.929004669189453

Token 339: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1774829924106598
    2. '       ' → logprob: -2.052483081817627
    3. ' x' → logprob: -4.177483081817627
    4. '           ' → logprob: -5.302483081817627
    5. ' readline' → logprob: -5.302483081817627
    6. ',' → logprob: -6.302483081817627
    7. 'x' → logprob: -6.302483081817627
    8. ' ' → logprob: -7.052483081817627
    9. '	   ' → logprob: -7.177483081817627
    10. '    ' → logprob: -7.302483081817627

Token 340: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00861681904643774
    2. ' x' → logprob: -4.758616924285889
    3. 'u' → logprob: -13.50861644744873
    4. '   ' → logprob: -14.88361644744873
    5. 'a' → logprob: -15.13361644744873
    6. 'xi' → logprob: -16.008617401123047
    7. '	x' → logprob: -16.133617401123047
    8. ' u' → logprob: -17.508617401123047
    9. 'import' → logprob: -18.383617401123047
    10. ' xi' → logprob: -19.008617401123047

Token 341: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012878182344138622
    2. '_,' → logprob: -4.76287841796875
    3. '_i' → logprob: -6.51287841796875
    4. ',_' → logprob: -6.76287841796875
    5. 'i' → logprob: -7.76287841796875
    6. ' ,' → logprob: -7.88787841796875
    7. ',y' → logprob: -7.88787841796875
    8. ',i' → logprob: -8.26287841796875
    9. '_' → logprob: -9.38787841796875
    10. ',x' → logprob: -9.88787841796875

Token 342: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12082056701183319
    2. ',c' → logprob: -2.2458205223083496
    3. ',d' → logprob: -5.12082052230835
    4. ' ,' → logprob: -7.24582052230835
    5. ',z' → logprob: -7.74582052230835
    6. ',w' → logprob: -7.87082052230835
    7. ',s' → logprob: -9.495820999145508
    8. ',int' → logprob: -9.870820999145508
    9. ',v' → logprob: -10.120820999145508
    10. ',line' → logprob: -10.370820999145508

Token 343: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14836324751377106
    2. ',' → logprob: -2.1483633518218994
    3. ' =' → logprob: -4.27336311340332
    4. ',i' → logprob: -5.77336311340332
    5. ',_' → logprob: -7.27336311340332
    6. ',x' → logprob: -7.52336311340332
    7. ',c' → logprob: -7.89836311340332
    8. ',p' → logprob: -8.02336311340332
    9. ',s' → logprob: -8.39836311340332
    10. ',l' → logprob: -8.52336311340332

Token 344: 'cc' (ID: 710)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5706432461738586
    2. 'co' → logprob: -1.5706431865692139
    3. 'c' → logprob: -2.945643186569214
    4. 'cc' → logprob: -2.945643186569214
    5. 'ci' → logprob: -3.320643186569214
    6. 'k' → logprob: -3.570643186569214
    7. 'cost' → logprob: -4.570643424987793
    8. 'C' → logprob: -4.820643424987793
    9. 'w' → logprob: -5.070643424987793
    10. 'company' → logprob: -5.070643424987793

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12726153433322906
    2. ' =' → logprob: -2.1272616386413574
    3. '=sys' → logprob: -8.2522611618042
    4. 'c' → logprob: -9.8772611618042
    5. '=line' → logprob: -11.5022611618042
    6. '=int' → logprob: -12.7522611618042
    7. '   ' → logprob: -13.3772611618042
    8. '=input' → logprob: -13.5022611618042
    9. 'i' → logprob: -14.1272611618042
    10. ' ' → logprob: -14.3772611618042

Token 346: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3878379464149475
    2. ' read' → logprob: -1.1378378868103027
    3. 'map' → logprob: -7.637837886810303
    4. ' map' → logprob: -7.637837886810303
    5. ' ' → logprob: -13.887838363647461
    6. '	read' → logprob: -14.137838363647461
    7. 'list' → logprob: -14.262838363647461
    8. '   ' → logprob: -15.387838363647461
    9. ' list' → logprob: -16.26283836364746
    10. '  ' → logprob: -16.51283836364746

Token 347: 'ints' (ID: 20448)
  Prédit: 'ints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.003192804753780365
    2. 'int' → logprob: -5.753192901611328
    3. ' ints' → logprob: -11.878192901611328
    4. 'sys' → logprob: -12.253192901611328
    5. ')' → logprob: -13.628192901611328
    6. '(int' → logprob: -14.878192901611328
    7. '()' → logprob: -15.128192901611328
    8. 'intes' → logprob: -15.753192901611328
    9. '
' → logprob: -15.878192901611328
    10. 'in' → logprob: -16.003192901611328

Token 348: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4198065400123596
    2. '<|end|>' → logprob: -1.2948064804077148
    3. '
' → logprob: -3.544806480407715
    4. '<|end|>' → logprob: -4.169806480407715
    5. '           ' → logprob: -4.294806480407715
    6. '()' → logprob: -5.919806480407715
    7. ')
' → logprob: -6.169806480407715
    8. '   ' → logprob: -7.419806480407715
    9. '            
' → logprob: -7.794806480407715
    10. ' ' → logprob: -7.794806480407715

Token 349: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022491037379950285
    2. ' edges' → logprob: -6.877249240875244
    3. '<|end|>' → logprob: -7.752249240875244
    4. '   ' → logprob: -8.002248764038086
    5. '       ' → logprob: -8.252248764038086
    6. 'edges' → logprob: -9.877248764038086
    7. '
' → logprob: -10.127248764038086
    8. '            
' → logprob: -10.627248764038086
    9. '<|end|>' → logprob: -11.002248764038086
    10. '	       ' → logprob: -11.627248764038086

Token 350: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.031844694167375565
    2. '           ' → logprob: -4.031844615936279
    3. 'edges' (adapté à ' edges') → logprob: -4.406844615936279
    4. '       ' → logprob: -6.906844615936279
    5. '   ' → logprob: -9.156845092773438
    6. '.edges' → logprob: -9.781845092773438
    7. '(edges' → logprob: -10.031845092773438
    8. ' cost' → logprob: -10.281845092773438
    9. '_edges' → logprob: -10.531845092773438
    10. ' if' → logprob: -10.781845092773438

Token 351: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.750000953674316
    3. '[y' → logprob: -15.125000953674316
    4. 'x' → logprob: -15.125000953674316
    5. ' [' → logprob: -17.000001907348633
    6. '```' → logprob: -19.000001907348633
    7. '[int' → logprob: -19.125001907348633
    8. '[c' → logprob: -19.250001907348633
    9. '(x' → logprob: -20.000001907348633
    10. '
' → logprob: -20.000001907348633

Token 352: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0029479898512363434
    2. '][' → logprob: -6.252947807312012
    3. '[x' → logprob: -7.377947807312012
    4. '[y' → logprob: -8.377947807312012
    5. ']' → logprob: -9.502947807312012
    6. '[' → logprob: -10.377947807312012
    7. ' ].' → logprob: -10.627947807312012
    8. '.append' → logprob: -10.877947807312012
    9. '   ' → logprob: -12.377947807312012
    10. '       ' → logprob: -12.502947807312012

Token 353: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3856492842023727e-06
    2. ' append' → logprob: -13.875000953674316
    3. '.append' → logprob: -15.000000953674316
    4. 'appen' → logprob: -17.500001907348633
    5. '_append' → logprob: -17.500001907348633
    6. 'push' → logprob: -19.125001907348633
    7. '```' → logprob: -19.375001907348633
    8. 'app' → logprob: -19.375001907348633
    9. 'Append' → logprob: -19.750001907348633
    10. '	append' → logprob: -19.750001907348633

Token 354: '((' (ID: 2054)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.4783453941345215
    2. '((' → logprob: -0.9783453941345215
    3. '(' → logprob: -5.4783453941345215
    4. ' (' → logprob: -9.47834587097168
    5. '   ' → logprob: -12.47834587097168
    6. '(
' → logprob: -13.72834587097168
    7. '(x' → logprob: -14.22834587097168
    8. ' ((' → logprob: -15.47834587097168
    9. '```' → logprob: -15.47834587097168
    10. '(Y' → logprob: -15.97834587097168

Token 355: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00029625516617670655
    2. ' y' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.000295639038086
    4. '	y' → logprob: -17.250295639038086
    5. '
' → logprob: -17.625295639038086
    6. ',y' → logprob: -17.625295639038086
    7. ')y' → logprob: -18.250295639038086
    8. ''y' → logprob: -18.375295639038086
    9. ' ' → logprob: -18.875295639038086
    10. '    ' → logprob: -19.125295639038086

Token 356: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6949512958526611
    2. ',d' → logprob: -0.6949512958526611
    3. ' ,' → logprob: -6.319951057434082
    4. ',
' → logprob: -14.069951057434082
    5. 'd' → logprob: -14.069951057434082
    6. '   ' → logprob: -14.944951057434082
    7. ' d' → logprob: -15.694951057434082
    8. ' ' → logprob: -16.5699520111084
    9. ',b' → logprob: -16.6949520111084
    10. '‌,' → logprob: -17.0699520111084

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009286141721531749
    2. ',c' → logprob: -7.3759284019470215
    3. ' ,' → logprob: -8.12592887878418
    4. ',
' → logprob: -13.62592887878418
    5. ',int' → logprob: -14.25092887878418
    6. ',f' → logprob: -14.37592887878418
    7. ',ll' → logprob: -14.50092887878418
    8. ',p' → logprob: -15.00092887878418
    9. ',d' → logprob: -15.12592887878418
    10. ',current' → logprob: -15.37592887878418

Token 358: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.00010533124441280961
    2. ' cc' → logprob: -9.250104904174805
    3. 'c' → logprob: -11.875104904174805
    4. '	cc' → logprob: -13.750104904174805
    5. '(cc' → logprob: -15.125104904174805
    6. '           ' → logprob: -15.625104904174805
    7. '_cc' → logprob: -16.250104904174805
    8. '   ' → logprob: -16.375104904174805
    9. 'cco' → logprob: -16.500104904174805
    10. 'ccc' → logprob: -16.500104904174805

Token 359: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0013669042382389307
    2. ' ))' → logprob: -6.876367092132568
    3. '))
' → logprob: -8.50136661529541
    4. ',' → logprob: -9.50136661529541
    5. ')' → logprob: -10.25136661529541
    6. '));' → logprob: -11.75136661529541
    7. '<|end|>' → logprob: -12.50136661529541
    8. '   ' → logprob: -13.12636661529541
    9. ' ' → logprob: -13.75136661529541
    10. ' ))
' → logprob: -14.12636661529541

Token 360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005544631858356297
    2. '       ' → logprob: -8.250554084777832
    3. 'edges' → logprob: -8.875554084777832
    4. ' edges' → logprob: -9.625554084777832
    5. '	       ' → logprob: -9.875554084777832
    6. '   ' → logprob: -10.625554084777832
    7. '		' → logprob: -12.500554084777832
    8. '	   ' → logprob: -13.000554084777832
    9. '(edges' → logprob: -13.500554084777832
    10. '<|end|>' → logprob: -14.125554084777832

Token 361: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.05560872703790665
    2. ' edges' → logprob: -2.9306087493896484
    3. '       ' → logprob: -7.930608749389648
    4. '           ' → logprob: -7.930608749389648
    5. '.edges' → logprob: -12.930608749389648
    6. '(edges' → logprob: -13.305608749389648
    7. '   ' → logprob: -13.430608749389648
    8. '_edges' → logprob: -14.805608749389648
    9. 'Edges' → logprob: -16.05560874938965
    10. '        ' → logprob: -16.05560874938965

Token 362: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.6060808522743173e-05
    2. '[' → logprob: -11.125025749206543
    3. '[x' → logprob: -11.500025749206543
    4. 'y' → logprob: -14.625025749206543
    5. ' [' → logprob: -15.375025749206543
    6. '   ' → logprob: -16.25002670288086
    7. '[s' → logprob: -17.12502670288086
    8. '```' → logprob: -17.25002670288086
    9. '[c' → logprob: -17.37502670288086
    10. '[
' → logprob: -17.50002670288086

Token 363: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.3960254192352295
    2. '].' → logprob: -1.1460254192352295
    3. '.append' → logprob: -4.771025657653809
    4. '.' → logprob: -7.896025657653809
    5. ')' → logprob: -9.271025657653809
    6. '}.' → logprob: -9.396025657653809
    7. '           ' → logprob: -10.771025657653809
    8. ',' → logprob: -11.146025657653809
    9. '.app' → logprob: -11.271025657653809
    10. ']' → logprob: -11.396025657653809

Token 364: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. '.append' → logprob: -15.250000953674316
    3. ' append' → logprob: -15.250000953674316
    4. 'app' → logprob: -15.375000953674316
    5. 'appen' → logprob: -16.125
    6. '	append' → logprob: -19.25
    7. 'add' → logprob: -21.375
    8. 'Append' → logprob: -22.0
    9. 'prepend' → logprob: -22.375
    10. '_append' → logprob: -22.5

Token 365: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7050109505653381
    2. '(x' → logprob: -0.7050109505653381
    3. ' (' → logprob: -5.080010890960693
    4. '(' → logprob: -5.205010890960693
    5. '(
' → logprob: -9.580011367797852
    6. '(y' → logprob: -11.330011367797852
    7. ' ((' → logprob: -13.580011367797852
    8. ',' → logprob: -14.455011367797852
    9. '```' → logprob: -14.705011367797852
    10. '[(' → logprob: -15.330011367797852

Token 366: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38712239265441895
    2. '(x' → logprob: -1.137122392654419
    3. '(' → logprob: -9.01212215423584
    4. ' (' → logprob: -9.38712215423584
    5. ' x' → logprob: -10.63712215423584
    6. '(
' → logprob: -11.26212215423584
    7. ',x' → logprob: -12.13712215423584
    8. ')x' → logprob: -14.01212215423584
    9. ',' → logprob: -14.51212215423584
    10. '
' → logprob: -14.51212215423584

Token 367: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0022644479759037495
    2. ',' → logprob: -6.127264499664307
    3. ' ,' → logprob: -9.627264022827148
    4. ',(' → logprob: -11.377264022827148
    5. '   ' → logprob: -14.377264022827148
    6. '	' → logprob: -15.002264022827148
    7. ' ' → logprob: -15.252264022827148
    8. '	d' → logprob: -15.627264022827148
    9. ',
' → logprob: -15.877264022827148
    10. '       ' → logprob: -16.25226402282715

Token 368: ',' (ID: 11)
  Prédit: ',d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.026559090241789818
    2. ',' → logprob: -3.6515591144561768
    3. ' ,' → logprob: -8.276558876037598
    4. ',(' → logprob: -13.401558876037598
    5. ',
' → logprob: -13.776558876037598
    6. ',,' → logprob: -14.901558876037598
    7. '   ' → logprob: -15.151558876037598
    8. '))' → logprob: -15.276558876037598
    9. '           ' → logprob: -15.651558876037598
    10. ' ' → logprob: -16.151559829711914

Token 369: 'cc' (ID: 710)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25842490792274475
    2. 'cc' → logprob: -1.5084248781204224
    3. 'c' → logprob: -5.258424758911133
    4. ' d' → logprob: -7.008424758911133
    5. 'dcc' → logprob: -8.883424758911133
    6. ' cc' → logprob: -9.883424758911133
    7. ',' → logprob: -10.133424758911133
    8. ')' → logprob: -10.383424758911133
    9. 'dc' → logprob: -10.508424758911133
    10. 'cd' → logprob: -11.383424758911133

Token 370: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006733018439263105
    2. ')' → logprob: -5.006732940673828
    3. '))
' → logprob: -11.381732940673828
    4. ' ))' → logprob: -12.756732940673828
    5. ')))' → logprob: -13.131732940673828
    6. ' )' → logprob: -15.006732940673828
    7. '));' → logprob: -15.131732940673828
    8. ')
' → logprob: -15.631732940673828
    9. '       ' → logprob: -16.006732940673828
    10. '   ' → logprob: -16.006732940673828

Token 371: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14575223624706268
    2. '       ' → logprob: -2.395752191543579
    3. '
' → logprob: -3.270752191543579
    4. 'p' → logprob: -6.645752429962158
    5. '    
' → logprob: -6.770752429962158
    6. '```' → logprob: -6.770752429962158
    7. '        
' → logprob: -7.270752429962158
    8. '  
' → logprob: -8.270751953125
    9. ' p' → logprob: -8.395751953125
    10. ' companies' → logprob: -8.520751953125

Token 372: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01971493288874626
    2. '#' (adapté à ' #') → logprob: -4.394714832305908
    3. 'k' → logprob: -6.519714832305908
    4. 'company' → logprob: -6.769714832305908
    5. 'companies' → logprob: -7.269714832305908
    6. 'K' → logprob: -7.644714832305908
    7. 'P' → logprob: -7.644714832305908
    8. 'r' → logprob: -7.769714832305908
    9. 'num' → logprob: -7.894714832305908
    10. 'q' → logprob: -7.894714832305908

Token 373: ' Fare' (ID: 123047)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0265300273895264
    2. 'companies' → logprob: -1.4015300273895264
    3. 'company' → logprob: -2.1515300273895264
    4. '#' → logprob: -2.1515300273895264
    5. 'fare' → logprob: -2.7765300273895264
    6. 'fa' → logprob: -3.1515300273895264
    7. 'comp' → logprob: -4.6515302658081055
    8. 'prices' → logprob: -4.9015302658081055
    9. 'r' → logprob: -5.0265302658081055
    10. 'cost' → logprob: -5.9015302658081055

Token 374: ' tables' (ID: 16584)
  Prédit: '_tables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tables' → logprob: -1.3142668008804321
    2. '_ranges' → logprob: -1.5642668008804321
    3. '_comp' → logprob: -1.6892668008804321
    4. 'tables' → logprob: -2.8142666816711426
    5. '_br' → logprob: -2.8142666816711426
    6. 's' → logprob: -3.4392666816711426
    7. 'companies' → logprob: -3.4392666816711426
    8. 'ranges' → logprob: -3.8142666816711426
    9. '_info' → logprob: -3.9392666816711426
    10. '_table' → logprob: -4.189266681671143

Token 375: ' per' (ID: 777)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.4104118347167969
    2. '       ' → logprob: -1.4104118347167969
    3. ' fare' → logprob: -2.660411834716797
    4. 'company' → logprob: -5.035411834716797
    5. ' fares' → logprob: -5.410411834716797
    6. 'f' → logprob: -5.785411834716797
    7. 'p' → logprob: -6.035411834716797
    8. '=' → logprob: -6.785411834716797
    9. 'tables' → logprob: -7.160411834716797
    10. ' =' → logprob: -7.160411834716797

Token 376: ' company' (ID: 3175)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.0031970853451639414
    2. ' company' → logprob: -5.753197193145752
    3. '_company' → logprob: -12.253196716308594
    4. 'line' → logprob: -12.503196716308594
    5. 'companies' → logprob: -13.253196716308594
    6. 'c' → logprob: -13.378196716308594
    7. '-company' → logprob: -14.003196716308594
    8. ' ' → logprob: -14.378196716308594
    9. 'station' → logprob: -14.378196716308594
    10. 'Company' → logprob: -14.503196716308594

Token 377: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3252640962600708
    2. ' fare' → logprob: -1.9502640962600708
    3. 'fare' → logprob: -2.4502639770507812
    4. ' fares' → logprob: -4.325263977050781
    5. 'f' → logprob: -4.575263977050781
    6. 'p' → logprob: -5.075263977050781
    7. ' =' → logprob: -5.200263977050781
    8. 'c' → logprob: -5.825263977050781
    9. '=' → logprob: -5.950263977050781
    10. 'r' → logprob: -6.325263977050781

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3590049147605896
    2. 'fa' → logprob: -1.8590049743652344
    3. 'f' → logprob: -2.7340049743652344
    4. 'fare' → logprob: -2.7340049743652344
    5. 'company' → logprob: -4.859004974365234
    6. 'p' → logprob: -6.359004974365234
    7. 'companies' → logprob: -6.609004974365234
    8. '   ' → logprob: -7.234004974365234
    9. 'fas' → logprob: -7.359004974365234
    10. 'r' → logprob: -7.984004974365234

Token 379: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.017861340194940567
    2. 'fare' → logprob: -5.142861366271973
    3. 'company' → logprob: -5.392861366271973
    4. 'companies' → logprob: -5.642861366271973
    5. 'fa' → logprob: -6.892861366271973
    6. '   ' → logprob: -7.142861366271973
    7. 'f' → logprob: -7.642861366271973
    8. 'P' → logprob: -8.392861366271973
    9. 'comp' → logprob: -8.517861366271973
    10. 'r' → logprob: -8.767861366271973

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.124810129404068
    2. ' =' → logprob: -2.249810218811035
    3. ',q' → logprob: -5.124810218811035
    4. ',' → logprob: -5.249810218811035
    5. '=[]' → logprob: -7.749810218811035
    6. 'q' → logprob: -9.374810218811035
    7. ',c' → logprob: -9.499810218811035
    8. ',r' → logprob: -10.249810218811035
    9. '=[]
' → logprob: -10.874810218811035
    10. '=q' → logprob: -10.999810218811035

Token 381: ' [' (ID: 723)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.49399182200431824
    2. '[]' → logprob: -1.1189918518066406
    3. ' read' → logprob: -3.6189918518066406
    4. '[' → logprob: -4.368991851806641
    5. '{}' → logprob: -4.618991851806641
    6. ' []' → logprob: -5.243991851806641
    7. '[]
' → logprob: -5.743991851806641
    8. ' [' → logprob: -6.243991851806641
    9. '[int' → logprob: -6.243991851806641
    10. 'int' → logprob: -7.743991851806641

Token 382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7573862075805664
    2. ']' → logprob: -0.7573862075805664
    3. ']
' → logprob: -3.1323862075805664
    4. 'int' → logprob: -4.257386207580566
    5. ']int' → logprob: -6.382386207580566
    6. 'None' → logprob: -6.632386207580566
    7. ' ]' → logprob: -8.007386207580566
    8. '1' → logprob: -8.757386207580566
    9. 'read' → logprob: -9.007386207580566
    10. ']

' → logprob: -9.132386207580566

Token 383: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023992260918021202
    2. ',' → logprob: -4.14899206161499
    3. ']
' → logprob: -5.02399206161499
    4. ' ]' → logprob: -7.39899206161499
    5. ',
' → logprob: -7.52399206161499
    6. ']*' → logprob: -9.648992538452148
    7. ' for' → logprob: -10.023992538452148
    8. ']

' → logprob: -11.398992538452148
    9. ' ]
' → logprob: -11.523992538452148
    10. ' ,' → logprob: -11.523992538452148

Token 384: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005560774821788073
    2. '101' → logprob: -6.130560874938965
    3. '100' → logprob: -6.505560874938965
    4. '(c' → logprob: -7.755560874938965
    5. '11' → logprob: -7.755560874938965
    6. '21' → logprob: -8.255560874938965
    7. '(' → logprob: -8.380560874938965
    8. '51' → logprob: -8.755560874938965
    9. '501' → logprob: -8.880560874938965
    10. '10' → logprob: -10.130560874938965

Token 385: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015572358388453722
    2. '+c' → logprob: -6.751557350158691
    3. ' +' → logprob: -8.001557350158691
    4. ')' → logprob: -10.626557350158691
    5. '+
' → logprob: -11.001557350158691
    6. ')
' → logprob: -12.001557350158691
    7. '+C' → logprob: -13.626557350158691
    8. 'c' → logprob: -14.126557350158691
    9. ')c' → logprob: -14.376557350158691
    10. '+)' → logprob: -14.876557350158691

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.263011578586884e-05
    2. ' ' → logprob: -10.125042915344238
    3. '2' → logprob: -13.000042915344238
    4. '   ' → logprob: -16.000041961669922
    5. '
' → logprob: -17.000041961669922
    6. ')' → logprob: -17.750041961669922
    7. '```' → logprob: -17.875041961669922
    8. '0' → logprob: -18.375041961669922
    9. '  ' → logprob: -18.625041961669922
    10. '01' → logprob: -19.312541961669922

Token 387: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932424306869507
    2. ')
' → logprob: -0.6932424306869507
    3. ')p' → logprob: -9.818242073059082
    4. ' )
' → logprob: -11.193242073059082
    5. ')c' → logprob: -11.818242073059082
    6. ' )' → logprob: -12.193242073059082
    7. ')
' → logprob: -12.193242073059082
    8. ')

' → logprob: -12.818242073059082
    9. ')s' → logprob: -12.943242073059082
    10. '),' → logprob: -13.943242073059082

Token 388: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.18887130916118622
    2. '       ' → logprob: -1.8138712644577026
    3. ' q' → logprob: -4.813871383666992
    4. 'r' → logprob: -8.063871383666992
    5. '   ' → logprob: -8.438871383666992
    6. 'for' → logprob: -8.813871383666992
    7. '	q' → logprob: -9.813871383666992
    8. ',q' → logprob: -10.438871383666992
    9. ' for' → logprob: -10.688871383666992
    10. ' ' → logprob: -10.876371383666992

Token 389: ' for' (ID: 395)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.007082383614033461
    2. 'for' (adapté à ' for') → logprob: -5.382082462310791
    3. 'r' → logprob: -6.132082462310791
    4. ' q' → logprob: -9.882081985473633
    5. 'fare' → logprob: -10.132081985473633
    6. ' for' → logprob: -10.507081985473633
    7. 'heap' → logprob: -10.757081985473633
    8. 's' → logprob: -11.007081985473633
    9. 'qs' → logprob: -11.132081985473633
    10. '   ' → logprob: -11.257081985473633

Token 390: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08823610097169876
    2. 'company' → logprob: -2.838236093521118
    3. ' i' → logprob: -3.838236093521118
    4. ' company' → logprob: -6.088236331939697
    5. 'cc' → logprob: -6.838236331939697
    6. 'comp' → logprob: -7.713236331939697
    7. '_i' → logprob: -8.213235855102539
    8. '_' → logprob: -9.338235855102539
    9. ' comp' → logprob: -9.588235855102539
    10. '_company' → logprob: -9.588235855102539

Token 391: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42883676290512085
    2. ' in' → logprob: -1.0538368225097656
    3. 'i' → logprob: -10.553836822509766
    4. 'n' → logprob: -10.553836822509766
    5. ' ' → logprob: -10.678836822509766
    6. 'c' → logprob: -11.553836822509766
    7. '```' → logprob: -11.803836822509766
    8. '1' → logprob: -12.053836822509766
    9. ',' → logprob: -12.303836822509766
    10. '_' → logprob: -12.303836822509766

Token 392: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234594456851482
    2. ' range' → logprob: -5.255234718322754
    3. '1' → logprob: -14.255234718322754
    4. 'in' → logprob: -16.505233764648438
    5. ' ' → logprob: -16.880233764648438
    6. '   ' → logprob: -17.130233764648438
    7. '(range' → logprob: -17.755233764648438
    8. '  ' → logprob: -18.005233764648438
    9. ' in' → logprob: -18.630233764648438
    10. '	range' → logprob: -19.005233764648438

Token 393: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07893352210521698
    2. '(' → logprob: -2.5789334774017334
    3. '   ' → logprob: -10.328933715820312
    4. ' ' → logprob: -11.953933715820312
    5. '
' → logprob: -13.328933715820312
    6. 'c' → logprob: -13.703933715820312
    7. ' (' → logprob: -13.828933715820312
    8. ',' → logprob: -15.453933715820312
    9. '	' → logprob: -15.953933715820312
    10. '    ' → logprob: -15.953933715820312

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.141186450899113e-05
    2. ' ' → logprob: -11.375020980834961
    3. 'c' → logprob: -12.000020980834961
    4. '   ' → logprob: -12.750020980834961
    5. '(' → logprob: -15.000020980834961
    6. '
' → logprob: -16.25002098083496
    7. '2' → logprob: -16.25002098083496
    8. 's' → logprob: -16.75002098083496
    9. '    ' → logprob: -17.06252098083496
    10. '  ' → logprob: -17.62502098083496

Token 395: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02391194738447666
    2. ',c' → logprob: -3.773911952972412
    3. ' ,' → logprob: -7.523911952972412
    4. 'c' → logprob: -9.398911476135254
    5. '1' → logprob: -10.773911476135254
    6. '   ' → logprob: -11.023911476135254
    7. ',p' → logprob: -13.148911476135254
    8. ',
' → logprob: -13.648911476135254
    9. '(' → logprob: -13.898911476135254
    10. '(c' → logprob: -14.523911476135254

Token 396: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0032548350282013416
    2. ' +' → logprob: -5.7532548904418945
    3. '1' → logprob: -10.003254890441895
    4. '):
' → logprob: -11.628254890441895
    5. '+i' → logprob: -12.003254890441895
    6. '   ' → logprob: -12.253254890441895
    7. ',' → logprob: -12.503254890441895
    8. '       ' → logprob: -13.753254890441895
    9. 'i' → logprob: -13.878254890441895
    10. '
' → logprob: -13.878254890441895

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001898171496577561
    2. '+' → logprob: -6.501898288726807
    3. ' ' → logprob: -8.001897811889648
    4. 'i' → logprob: -10.501897811889648
    5. '```' → logprob: -11.126897811889648
    6. ')' → logprob: -12.376897811889648
    7. '   ' → logprob: -12.626897811889648
    8. '=' → logprob: -13.001897811889648
    9. '):
' → logprob: -13.376897811889648
    10. ' +' → logprob: -13.501897811889648

Token 398: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28127920627593994
    2. '):
' → logprob: -1.40627920627594
    3. '):
' → logprob: -9.781279563903809
    4. ':' → logprob: -10.156279563903809
    5. ' ):' → logprob: -11.656279563903809
    6. ')' → logprob: -11.781279563903809
    7. ' ):
' → logprob: -12.531279563903809
    8. '):

' → logprob: -12.531279563903809
    9. '   ' → logprob: -13.156279563903809
    10. '():
' → logprob: -13.281279563903809

Token 399: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1961725801229477
    2. ' p' → logprob: -2.4461724758148193
    3. 'p' → logprob: -2.9461724758148193
    4. '           ' → logprob: -4.696172714233398
    5. '   ' → logprob: -4.821172714233398
    6. 'r' → logprob: -5.196172714233398
    7. ' q' → logprob: -5.696172714233398
    8. ',' → logprob: -5.821172714233398
    9. 'q' → logprob: -6.071172714233398
    10. ' r' → logprob: -6.446172714233398

Token 400: ' p' (ID: 275)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5231348872184753
    2. 'line' → logprob: -1.6481349468231201
    3. 'p' (adapté à ' p') → logprob: -2.27313494682312
    4. 'k' → logprob: -3.14813494682312
    5. 'l' → logprob: -3.64813494682312
    6. 'length' → logprob: -4.898134708404541
    7. 'len' → logprob: -5.023134708404541
    8. 'qi' → logprob: -5.648134708404541
    9. 'arr' → logprob: -6.023134708404541
    10. 'params' → logprob: -6.023134708404541

Token 401: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4323544502258301
    2. ' =' → logprob: -2.05735445022583
    3. ',' → logprob: -2.55735445022583
    4. '[i' → logprob: -2.55735445022583
    5. '_line' → logprob: -3.93235445022583
    6. ',p' → logprob: -4.55735445022583
    7. '=int' → logprob: -5.18235445022583
    8. 'p' → logprob: -5.43235445022583
    9. 'i' → logprob: -5.80735445022583
    10. 'line' → logprob: -5.93235445022583

Token 402: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.263600468635559
    2. '],' → logprob: -1.638600468635559
    3. ']=' → logprob: -1.888600468635559
    4. ' =' → logprob: -2.1386003494262695
    5. ']' → logprob: -2.3886003494262695
    6. '=' → logprob: -2.6386003494262695
    7. ')' → logprob: -3.8886003494262695
    8. '),' → logprob: -4.0136003494262695
    9. ')=' → logprob: -4.3886003494262695
    10. '=int' → logprob: -4.5136003494262695

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5905352234840393
    2. ',' → logprob: -0.9655352234840393
    3. ' =' → logprob: -3.9655351638793945
    4. ',q' → logprob: -3.9655351638793945
    5. '=int' → logprob: -4.5905351638793945
    6. ',p' → logprob: -4.7155351638793945
    7. ',m' → logprob: -5.4655351638793945
    8. ',c' → logprob: -7.0905351638793945
    9. 'p' → logprob: -7.0905351638793945
    10. ',n' → logprob: -7.9655351638793945

Token 404: ' int' (ID: 677)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.20161965489387512
    2. 'int' → logprob: -1.8266196250915527
    3. 'list' → logprob: -4.701619625091553
    4. ' read' → logprob: -4.951619625091553
    5. 'len' → logprob: -6.576619625091553
    6. '[' → logprob: -6.701619625091553
    7. '[int' → logprob: -6.951619625091553
    8. ' int' → logprob: -7.326619625091553
    9. '1' → logprob: -7.451619625091553
    10. ' [' → logprob: -8.951620101928711

Token 405: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.023984460160136223
    2. '(input' → logprob: -3.773984432220459
    3. 'input' → logprob: -7.648984432220459
    4. 'sys' → logprob: -8.273984909057617
    5. '(' → logprob: -12.148984909057617
    6. '=sys' → logprob: -14.648984909057617
    7. '()' → logprob: -14.773984909057617
    8. ' sys' → logprob: -15.273984909057617
    9. '(stdin' → logprob: -15.773984909057617
    10. ' input' → logprob: -15.773984909057617

Token 406: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00024608144303783774
    2. 'stdin' → logprob: -8.375246047973633
    3. '.readline' → logprob: -11.250246047973633
    4. '(stdin' → logprob: -13.750246047973633
    5. '.stdout' → logprob: -14.625246047973633
    6. ' stdin' → logprob: -14.875246047973633
    7. '.' → logprob: -15.125246047973633
    8. '.argv' → logprob: -15.125246047973633
    9. '.std' → logprob: -17.625246047973633
    10. 'input' → logprob: -18.750246047973633

Token 407: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.054500666621607e-06
    2. '().' → logprob: -13.25000286102295
    3. ' readline' → logprob: -14.25000286102295
    4. '.' → logprob: -15.25000286102295
    5. '.stdin' → logprob: -15.87500286102295
    6. '())' → logprob: -16.125003814697266
    7. 'line' → logprob: -17.000003814697266
    8. ')' → logprob: -17.000003814697266
    9. '()' → logprob: -17.750003814697266
    10. 'stdin' → logprob: -18.000003814697266

Token 408: '())

' (ID: 27654)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6933486461639404
    2. '())' → logprob: -0.6933486461639404
    3. '()' → logprob: -8.56834888458252
    4. '())
' → logprob: -12.06834888458252
    5. ')' → logprob: -12.81834888458252
    6. ' ())' → logprob: -13.19334888458252
    7. '();)' → logprob: -14.81834888458252
    8. '()
' → logprob: -14.81834888458252
    9. '())

' → logprob: -15.81834888458252
    10. '(' → logprob: -15.94334888458252

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4062105417251587
    2. 'q' → logprob: -1.1562105417251587
    3. '           ' → logprob: -4.156210422515869
    4. ' q' → logprob: -5.906210422515869
    5. '   ' → logprob: -8.906210899353027
    6. 'r' → logprob: -9.031210899353027
    7. '        
' → logprob: -9.156210899353027
    8. ',q' → logprob: -9.281210899353027
    9. '	q' → logprob: -10.031210899353027
    10. '#' → logprob: -10.031210899353027

Token 410: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.020887523889541626
    2. '       ' → logprob: -4.02088737487793
    3. '           ' → logprob: -6.39588737487793
    4. 'for' → logprob: -7.64588737487793
    5. '#' → logprob: -8.64588737487793
    6. '   ' → logprob: -9.64588737487793
    7. ' q' → logprob: -9.77088737487793
    8. 'r' → logprob: -9.77088737487793
    9. 'pq' → logprob: -10.14588737487793
    10. '
' → logprob: -10.64588737487793

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5294714570045471
    2. ' =' → logprob: -0.9044714570045471
    3. '=[]' → logprob: -5.654471397399902
    4. ',' → logprob: -6.279471397399902
    5. 's' → logprob: -8.029471397399902
    6. '=[]
' → logprob: -8.654471397399902
    7. ',q' → logprob: -8.904471397399902
    8. '[i' → logprob: -9.279471397399902
    9. '=[' → logprob: -9.654471397399902
    10. '[' → logprob: -10.779471397399902

Token 412: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43708524107933044
    2. '[]' → logprob: -1.0620852708816528
    3. '[[' → logprob: -6.187085151672363
    4. '[q' → logprob: -6.312085151672363
    5. '[p' → logprob: -6.437085151672363
    6. '[]
' → logprob: -6.562085151672363
    7. ' [[]' → logprob: -6.937085151672363
    8. '[i' → logprob: -9.312085151672363
    9. '[int' → logprob: -9.687085151672363
    10. '[][]' → logprob: -9.937085151672363

Token 413: ']*(' (ID: 92627)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06522280722856522
    2. ' for' → logprob: -3.31522274017334
    3. '(i' → logprob: -4.06522274017334
    4. ']' → logprob: -5.31522274017334
    5. '[i' → logprob: -6.19022274017334
    6. ',' → logprob: -7.44022274017334
    7. '
' → logprob: -7.69022274017334
    8. ']*(' → logprob: -7.69022274017334
    9. ',i' → logprob: -8.19022274017334
    10. '()' → logprob: -8.56522274017334

Token 414: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014180909842252731
    2. '(c' → logprob: -4.264181137084961
    3. '   ' → logprob: -12.014181137084961
    4. ' c' → logprob: -12.514181137084961
    5. '
' → logprob: -13.264181137084961
    6. '(' → logprob: -13.389181137084961
    7. ' (' → logprob: -13.889181137084961
    8. '1' → logprob: -14.264181137084961
    9. '           ' → logprob: -14.764181137084961
    10. '	c' → logprob: -14.889181137084961

Token 415: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.166338137816638e-05
    2. '1' → logprob: -10.750031471252441
    3. ' +' → logprob: -12.250031471252441
    4. '+
' → logprob: -12.500031471252441
    5. '+)' → logprob: -13.750031471252441
    6. '+c' → logprob: -14.875031471252441
    7. ')' → logprob: -16.000032424926758
    8. ')+' → logprob: -16.875032424926758
    9. '+

' → logprob: -17.250032424926758
    10. '+i' → logprob: -18.375032424926758

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. '+' → logprob: -12.750008583068848
    3. '(' → logprob: -12.875008583068848
    4. ' ' → logprob: -13.750008583068848
    5. 'c' → logprob: -14.375008583068848
    6. '2' → logprob: -14.875008583068848
    7. '
' → logprob: -15.375008583068848
    8. '=' → logprob: -15.375008583068848
    9. '(i' → logprob: -15.750008583068848
    10. '```' → logprob: -16.000009536743164

Token 417: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006435725372284651
    2. ')
' → logprob: -7.375643730163574
    3. '<|end|>' → logprob: -11.375643730163574
    4. '[' → logprob: -13.500643730163574
    5. '[q' → logprob: -14.625643730163574
    6. ']' → logprob: -14.750643730163574
    7. '
' → logprob: -15.000643730163574
    8. ')

' → logprob: -15.000643730163574
    9. ' )' → logprob: -15.250643730163574
    10. '   ' → logprob: -15.500643730163574

Token 418: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8165308237075806
    2. '[' → logprob: -0.9415308237075806
    3. '[
' → logprob: -2.941530704498291
    4. ' =' → logprob: -3.191530704498291
    5. '=' → logprob: -3.316530704498291
    6. '[]
' → logprob: -4.691530704498291
    7. '[i' → logprob: -4.816530704498291
    8. '[]' → logprob: -5.441530704498291
    9. '\n' → logprob: -5.941530704498291
    10. '  
' → logprob: -5.941530704498291

Token 419: ' r' (ID: 428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05096864327788353
    2. ' for' → logprob: -3.300968647003174
    3. 'q' → logprob: -5.550968647003174
    4. '[' → logprob: -5.925968647003174
    5. '
' → logprob: -6.050968647003174
    6. '[q' → logprob: -6.175968647003174
    7. '<|end|>' → logprob: -7.425968647003174
    8. '[
' → logprob: -8.675968170166016
    9. '	for' → logprob: -8.675968170166016
    10. ' ' → logprob: -8.800968170166016

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38692817091941833
    2. ' =' → logprob: -1.1369282007217407
    3. '=[' → logprob: -10.13692855834961
    4. '=[]' → logprob: -11.63692855834961
    5. '[' → logprob: -12.51192855834961
    6. ' =[' → logprob: -12.63692855834961
    7. ' ' → logprob: -14.26192855834961
    8. '  ' → logprob: -15.76192855834961
    9. '   ' → logprob: -15.76192855834961
    10. ',' → logprob: -15.88692855834961

Token 421: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029928555712103844
    2. ' [[]' → logprob: -3.52992844581604
    3. '[]' → logprob: -8.779928207397461
    4. '[[' → logprob: -10.904928207397461
    5. ' [' → logprob: -12.404928207397461
    6. '[][' → logprob: -15.279928207397461
    7. '[n' → logprob: -15.529928207397461
    8. '[][]' → logprob: -15.654928207397461
    9. '[]
' → logprob: -15.654928207397461
    10. '[N' → logprob: -15.779928207397461

Token 422: ']*(' (ID: 92627)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.6643355488777161
    2. ']*(' → logprob: -1.5393354892730713
    3. ')*(' → logprob: -2.7893354892730713
    4. '=' → logprob: -2.7893354892730713
    5. '*(' → logprob: -2.9143354892730713
    6. '+' → logprob: -3.5393354892730713
    7. '[c' → logprob: -3.6643354892730713
    8. ')' → logprob: -5.41433572769165
    9. 'c' → logprob: -5.53933572769165
    10. ']' → logprob: -5.78933572769165

Token 423: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0076437825337052345
    2. '(c' → logprob: -4.882643699645996
    3. ' c' → logprob: -11.632643699645996
    4. '(' → logprob: -12.007643699645996
    5. ')c' → logprob: -12.007643699645996
    6. ' (' → logprob: -12.382643699645996
    7. '1' → logprob: -12.632643699645996
    8. '   ' → logprob: -13.382643699645996
    9. '	c' → logprob: -14.007643699645996
    10. ')' → logprob: -14.007643699645996

Token 424: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.688212614681106e-05
    2. ' +' → logprob: -11.375017166137695
    3. '1' → logprob: -12.875017166137695
    4. '+
' → logprob: -13.250017166137695
    5. ')+' → logprob: -15.375017166137695
    6. '   ' → logprob: -15.750017166137695
    7. '=' → logprob: -16.125017166137695
    8. '+

' → logprob: -16.250017166137695
    9. '```' → logprob: -16.375017166137695
    10. ')' → logprob: -16.500017166137695

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. '+' → logprob: -12.37501335144043
    3. ' ' → logprob: -12.37501335144043
    4. '0' → logprob: -14.00001335144043
    5. '```' → logprob: -14.00001335144043
    6. '(' → logprob: -14.31251335144043
    7. '5' → logprob: -14.56251335144043
    8. '2' → logprob: -14.87501335144043
    9. ')' → logprob: -15.56251335144043
    10. '=' → logprob: -15.75001335144043

Token 426: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027694785967469215
    2. ')
' → logprob: -8.250276565551758
    3. '<|end|>' → logprob: -11.250276565551758
    4. ')

' → logprob: -14.125276565551758
    5. ' )' → logprob: -14.625276565551758
    6. '
' → logprob: -14.875276565551758
    7. '),' → logprob: -16.125276565551758
    8. '   ' → logprob: -16.250276565551758
    9. '[' → logprob: -16.250276565551758
    10. '       ' → logprob: -16.375276565551758

Token 427: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028714552521705627
    2. '       ' → logprob: -4.278714656829834
    3. '<|end|>' → logprob: -4.653714656829834
    4. '[' → logprob: -7.278714656829834
    5. '        
' → logprob: -7.528714656829834
    6. '   ' → logprob: -7.528714656829834
    7. ' for' → logprob: -7.778714656829834
    8. '  
' → logprob: -7.903714656829834
    9. ' 
' → logprob: -7.903714656829834
    10. '\n' → logprob: -8.028714179992676

Token 428: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7591139078140259
    2. '
' → logprob: -1.5091139078140259
    3. ' for' → logprob: -2.0091137886047363
    4. '       ' → logprob: -2.2591137886047363
    5. '<|end|>' → logprob: -3.6341137886047363
    6. '[' → logprob: -3.7591137886047363
    7. '+' → logprob: -5.759113788604736
    8. '\t' → logprob: -5.884113788604736
    9. '\n' → logprob: -6.009113788604736
    10. '        
' → logprob: -6.134113788604736

Token 429: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04859520494937897
    2. ' i' → logprob: -3.0485951900482178
    3. '_i' → logprob: -12.048595428466797
    4. '_' → logprob: -13.673595428466797
    5. '	i' → logprob: -14.673595428466797
    6. ' ' → logprob: -16.048595428466797
    7. 'c' → logprob: -16.673595428466797
    8. 'I' → logprob: -17.048595428466797
    9. '(i' → logprob: -17.173595428466797
    10. '   ' → logprob: -17.298595428466797

Token 430: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03807339444756508
    2. 'in' → logprob: -3.2880733013153076
    3. ' ' → logprob: -11.288073539733887
    4. '=' → logprob: -12.288073539733887
    5. '	in' → logprob: -12.788073539733887
    6. ',' → logprob: -13.413073539733887
    7. ')' → logprob: -13.538073539733887
    8. 'i' → logprob: -13.663073539733887
    9. ' =' → logprob: -13.913073539733887
    10. '1' → logprob: -14.038073539733887

Token 431: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602538824081421
    2. ' range' → logprob: -1.910253882408142
    3. '1' → logprob: -10.910253524780273
    4. '(range' → logprob: -12.160253524780273
    5. '(' → logprob: -12.660253524780273
    6. 'in' → logprob: -13.660253524780273
    7. ' in' → logprob: -13.910253524780273
    8. ' ' → logprob: -14.035253524780273
    9. '	range' → logprob: -16.660253524780273
    10. '   ' → logprob: -16.910253524780273

Token 432: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031813981477171183
    2. '1' → logprob: -5.753181457519531
    3. ' (' → logprob: -13.628181457519531
    4. '   ' → logprob: -14.253181457519531
    5. ',' → logprob: -14.503181457519531
    6. ' ' → logprob: -14.503181457519531
    7. 'def' → logprob: -15.503181457519531
    8. '```' → logprob: -15.878181457519531
    9. '...' → logprob: -16.25318145751953
    10. 'in' → logprob: -16.37818145751953

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.980854959692806e-05
    2. ' ' → logprob: -9.750069618225098
    3. '   ' → logprob: -11.500069618225098
    4. 'c' → logprob: -15.000069618225098
    5. '(' → logprob: -15.250069618225098
    6. '
' → logprob: -15.500069618225098
    7. '    ' → logprob: -15.875069618225098
    8. '  ' → logprob: -15.875069618225098
    9. '       ' → logprob: -16.812570571899414
    10. ',' → logprob: -17.250070571899414

Token 434: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3491099178791046
    2. ',c' → logprob: -1.2241098880767822
    3. ' ,' → logprob: -7.474110126495361
    4. 'c' → logprob: -9.974109649658203
    5. '(c' → logprob: -10.474109649658203
    6. ',(' → logprob: -11.474109649658203
    7. ',
' → logprob: -12.599109649658203
    8. ',i' → logprob: -12.599109649658203
    9. ',len' → logprob: -14.224109649658203
    10. '   ' → logprob: -14.349109649658203

Token 435: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000374546303646639
    2. ')+' → logprob: -8.625374794006348
    3. ']+' → logprob: -9.125374794006348
    4. ' +' → logprob: -9.750374794006348
    5. '+i' → logprob: -11.500374794006348
    6. ')+(' → logprob: -12.250374794006348
    7. '()+' → logprob: -12.625374794006348
    8. '+
' → logprob: -13.250374794006348
    9. '+[' → logprob: -13.500374794006348
    10. '```' → logprob: -14.000374794006348

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7491250875755213e-05
    2. ' ' → logprob: -11.125027656555176
    3. '```' → logprob: -12.125027656555176
    4. '0' → logprob: -13.500027656555176
    5. '   ' → logprob: -13.875027656555176
    6. 'i' → logprob: -14.062527656555176
    7. '+' → logprob: -14.312527656555176
    8. '2' → logprob: -14.625027656555176
    9. '
' → logprob: -14.687527656555176
    10. ')' → logprob: -15.062527656555176

Token 437: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8365359306335449
    2. ':
' → logprob: -1.336535930633545
    3. '):
' → logprob: -1.336535930633545
    4. '):' → logprob: -3.336535930633545
    5. '():
' → logprob: -5.211535930633545
    6. '   ' → logprob: -9.586536407470703
    7. '():' → logprob: -9.961536407470703
    8. ']:
' → logprob: -9.961536407470703
    9. '       ' → logprob: -10.211536407470703
    10. ']:' → logprob: -11.086536407470703

Token 438: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42210739850997925
    2. '   ' → logprob: -1.672107458114624
    3. '       ' → logprob: -2.047107458114624
    4. '	   ' → logprob: -4.547107219696045
    5. '	       ' → logprob: -5.297107219696045
    6. '<|end|>' → logprob: -5.422107219696045
    7. ' q' → logprob: -6.422107219696045
    8. ',' → logprob: -7.172107219696045
    9. ' readline' → logprob: -7.172107219696045
    10. '		   ' → logprob: -7.797107219696045

Token 439: ' q' (ID: 2335)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.973139762878418
    2. 'q' (adapté à ' q') → logprob: -1.348139762878418
    3. 'line' → logprob: -1.598139762878418
    4. ' q' → logprob: -1.973139762878418
    5. '           ' → logprob: -4.348139762878418
    6. ' parts' → logprob: -6.348139762878418
    7. 'qr' → logprob: -6.473139762878418
    8. ' lines' → logprob: -7.973139762878418
    9. 'parts' → logprob: -7.973139762878418
    10. ' qr' → logprob: -7.973139762878418

Token 440: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4272752852994017e-05
    2. 'i' → logprob: -12.00002384185791
    3. ' =' → logprob: -12.00002384185791
    4. '=' → logprob: -12.12502384185791
    5. ' [' → logprob: -13.00002384185791
    6. '=i' → logprob: -13.87502384185791
    7. '=[' → logprob: -13.87502384185791
    8. '\[' → logprob: -14.75002384185791
    9. '_i' → logprob: -15.25002384185791
    10. '   ' → logprob: -15.25002384185791

Token 441: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32689982652664185
    2. '=' → logprob: -1.951899766921997
    3. ']=' → logprob: -2.076899766921997
    4. ' =' → logprob: -4.701900005340576
    5. '=[]' → logprob: -6.451900005340576
    6. ')' → logprob: -7.576900005340576
    7. ' ]' → logprob: -8.826899528503418
    8. ')=' → logprob: -9.451899528503418
    9. ',' → logprob: -9.826899528503418
    10. '=[]
' → logprob: -10.701899528503418

Token 442: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01662883535027504
    2. ' =' → logprob: -4.141628742218018
    3. '=[]' → logprob: -7.516628742218018
    4. ',' → logprob: -10.266629219055176
    5. '=line' → logprob: -12.641629219055176
    6. '=[]
' → logprob: -13.141629219055176
    7. '=list' → logprob: -13.266629219055176
    8. '.append' → logprob: -13.391629219055176
    9. '=[' → logprob: -13.766629219055176
    10. '=q' → logprob: -14.141629219055176

Token 443: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12793998420238495
    2. 'read' → logprob: -2.3779399394989014
    3. '[]' → logprob: -3.7529399394989014
    4. ' list' → logprob: -6.3779401779174805
    5. '[' → logprob: -6.5029401779174805
    6. '[list' → logprob: -7.8779401779174805
    7. ' read' → logprob: -8.75294017791748
    8. ' []' → logprob: -9.75294017791748
    9. '[]
' → logprob: -10.12794017791748
    10. '[]

' → logprob: -10.25294017791748

Token 444: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: ' while' (ID: 2049)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14311204850673676
    2. ' r' → logprob: -2.0181119441986084
    3. '           ' → logprob: -8.768112182617188
    4. '       ' → logprob: -9.393112182617188
    5. 'for' → logprob: -9.518112182617188
    6. ' for' → logprob: -10.143112182617188
    7. 'q' → logprob: -10.643112182617188
    8. ' q' → logprob: -11.393112182617188
    9. '(r' → logprob: -11.893112182617188
    10. '[r' → logprob: -11.893112182617188

Token 446: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005258422344923019
    2. ' True' → logprob: -5.255258560180664
    3. 'len' → logprob: -11.130258560180664
    4. '(True' → logprob: -11.755258560180664
    5. '   ' → logprob: -13.880258560180664
    6. 'q' → logprob: -14.130258560180664
    7. 'true' → logprob: -15.130258560180664
    8. ' ' → logprob: -16.505258560180664
    9. '  ' → logprob: -16.880258560180664
    10. '1' → logprob: -17.130258560180664

Token 447: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6173011064529419
    2. 'line' → logprob: -1.367301106452942
    3. ' line' → logprob: -2.6173009872436523
    4. 'q' → logprob: -3.4923009872436523
    5. '   ' → logprob: -3.4923009872436523
    6. ':' → logprob: -3.6173009872436523
    7. 'tokens' → logprob: -4.992300987243652
    8. '       ' → logprob: -5.117300987243652
    9. 'token' → logprob: -5.367300987243652
    10. '               ' → logprob: -5.492300987243652

Token 448: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1618158221244812
    2. 'line' → logprob: -2.161815881729126
    3. ' line' → logprob: -3.536815881729126
    4. '               ' → logprob: -5.786815643310547
    5. 'token' → logprob: -7.036815643310547
    6. '	line' → logprob: -7.661815643310547
    7. '   ' → logprob: -8.411815643310547
    8. '#line' → logprob: -8.411815643310547
    9. 'tokens' → logprob: -9.411815643310547
    10. '       ' → logprob: -10.036815643310547

Token 449: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0032604155130684376
    2. '           ' → logprob: -6.003260612487793
    3. ' line' → logprob: -7.253260612487793
    4. 'arr' → logprob: -10.003260612487793
    5. 'vals' → logprob: -11.503260612487793
    6. '	line' → logprob: -12.003260612487793
    7. '               ' → logprob: -12.753260612487793
    8. 'parts' → logprob: -12.878260612487793
    9. 'ln' → logprob: -13.503260612487793
    10. 'l' → logprob: -13.628260612487793

Token 450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3874185383319855
    2. '=' → logprob: -1.137418508529663
    3. '=line' → logprob: -7.637418746948242
    4. '           ' → logprob: -10.512418746948242
    5. 'line' → logprob: -11.762418746948242
    6. 'tokens' → logprob: -11.887418746948242
    7. '   ' → logprob: -11.887418746948242
    8. 's' → logprob: -12.512418746948242
    9. '               ' → logprob: -13.262418746948242
    10. '		' → logprob: -13.512418746948242

Token 451: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00012403888104017824
    2. ' sys' → logprob: -9.000123977661133
    3. 'input' → logprob: -14.750123977661133
    4. '           ' → logprob: -17.250123977661133
    5. '(sys' → logprob: -17.625123977661133
    6. 'int' → logprob: -17.875123977661133
    7. '   ' → logprob: -18.375123977661133
    8. '=sys' → logprob: -18.500123977661133
    9. '               ' → logprob: -18.625123977661133
    10. '	sys' → logprob: -18.750123977661133

Token 452: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04742616415023804
    2. '.stdin' → logprob: -3.672426223754883
    3. 'stdin' → logprob: -3.922426223754883
    4. 'sys' → logprob: -7.422426223754883
    5. 'line' → logprob: -8.797426223754883
    6. 'in' → logprob: -9.297426223754883
    7. '=sys' → logprob: -9.422426223754883
    8. '(stdin' → logprob: -9.672426223754883
    9. 'stdout' → logprob: -10.672426223754883
    10. '```' → logprob: -11.297426223754883

Token 453: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.35706390615087e-05
    2. '().' → logprob: -11.250033378601074
    3. 'stdin' → logprob: -11.875033378601074
    4. 'line' → logprob: -12.625033378601074
    5. 'read' → logprob: -12.750033378601074
    6. 'sys' → logprob: -13.250033378601074
    7. '.stdin' → logprob: -13.375033378601074
    8. ' readline' → logprob: -13.750033378601074
    9. '(stdin' → logprob: -14.625033378601074
    10. 'stdout' → logprob: -14.625033378601074

Token 454: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008017649524845183
    2. '()' → logprob: -7.3758015632629395
    3. '()
' → logprob: -9.375802040100098
    4. '               ' → logprob: -10.000802040100098
    5. '.strip' → logprob: -10.375802040100098
    6. '():
' → logprob: -12.375802040100098
    7. '.rstrip' → logprob: -13.125802040100098
    8. '           ' → logprob: -13.250802040100098
    9. '();' → logprob: -14.000802040100098
    10. 'rstrip' → logprob: -14.000802040100098

Token 455: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0003278368094470352
    2. 'rstrip' → logprob: -8.500328063964844
    3. 'split' → logprob: -10.000328063964844
    4. '.strip' → logprob: -10.375328063964844
    5. ' strip' → logprob: -10.375328063964844
    6. '               ' → logprob: -11.500328063964844
    7. ' stripped' → logprob: -12.875328063964844
    8. '_strip' → logprob: -13.375328063964844
    9. 'if' → logprob: -14.375328063964844
    10. 'break' → logprob: -14.500328063964844

Token 456: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01800278015434742
    2. '()
' → logprob: -4.268002986907959
    3. '():
' → logprob: -6.518002986907959
    4. '               ' → logprob: -6.893002986907959
    5. '()==' → logprob: -8.3930025100708
    6. '<|end|>' → logprob: -8.5180025100708
    7. '           ' → logprob: -8.6430025100708
    8. '())' → logprob: -8.8930025100708
    9. '<|end|>' → logprob: -9.0180025100708
    10. '():' → logprob: -9.7680025100708

Token 457: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11773388087749481
    2. '           ' → logprob: -2.242733955383301
    3. 'if' → logprob: -5.992733955383301
    4. '       ' → logprob: -6.867733955383301
    5. ' if' → logprob: -7.367733955383301
    6. '<|end|>' → logprob: -7.992733955383301
    7. '   ' → logprob: -8.9927339553833
    8. '<|end|>' → logprob: -9.3677339553833
    9. '                   ' → logprob: -9.7427339553833
    10. 'tokens' → logprob: -10.3677339553833

Token 458: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0437234602868557
    2. '               ' → logprob: -3.4187233448028564
    3. ' if' → logprob: -4.9187235832214355
    4. '           ' → logprob: -5.9187235832214355
    5. '	if' → logprob: -11.543723106384277
    6. '       ' → logprob: -12.043723106384277
    7. '   ' → logprob: -12.043723106384277
    8. 'tokens' → logprob: -12.918723106384277
    9. '                   ' → logprob: -13.668723106384277
    10. 'token' → logprob: -13.918723106384277

Token 459: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.05789244920015335
    2. 'not' → logprob: -3.4328925609588623
    3. ' not' → logprob: -4.307892322540283
    4. ' line' → logprob: -4.557892322540283
    5. '(line' → logprob: -12.557892799377441
    6. '#line' → logprob: -13.182892799377441
    7. 'len' → logprob: -13.557892799377441
    8. '	line' → logprob: -13.807892799377441
    9. '[line' → logprob: -14.682892799377441
    10. '   ' → logprob: -14.932892799377441

Token 460: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10054857283830643
    2. ' ==' → logprob: -2.350548505783081
    3. '()==' → logprob: -8.10054874420166
    4. '=='' → logprob: -11.22554874420166
    5. '==
' → logprob: -11.47554874420166
    6. '.startswith' → logprob: -12.60054874420166
    7. '=="' → logprob: -12.72554874420166
    8. ')==' → logprob: -13.10054874420166
    9. '()' → logprob: -13.22554874420166
    10. ']==' → logprob: -13.60054874420166

Token 461: ' '-' (ID: 17489)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8729323744773865
    2. ''' → logprob: -0.8729323744773865
    3. '"":' → logprob: -2.8729324340820312
    4. '''' → logprob: -2.9979324340820312
    5. '""' → logprob: -3.4979324340820312
    6. ''-' → logprob: -3.9979324340820312
    7. '"-' → logprob: -4.872932434082031
    8. '-' → logprob: -8.247932434082031
    9. '0' → logprob: -8.372932434082031
    10. ''#' → logprob: -8.622932434082031

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003370118502061814
    2. '-' → logprob: -8.000336647033691
    3. '}' → logprob: -14.125336647033691
    4. '#' → logprob: -15.750336647033691
    5. ' ' → logprob: -15.875336647033691
    6. '<|end|>' → logprob: -16.375337600708008
    7. '0' → logprob: -16.750337600708008
    8. '}-' → logprob: -16.875337600708008
    9. '-end' → logprob: -17.000337600708008
    10. '```' → logprob: -17.250337600708008

Token 463: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.0626574158668518
    2. '':' → logprob: -2.812657356262207
    3. '':
' → logprob: -7.812657356262207
    4. ''):
' → logprob: -8.687657356262207
    5. ''' → logprob: -9.687657356262207
    6. ':
' → logprob: -10.937657356262207
    7. '\n' → logprob: -11.687657356262207
    8. ':' → logprob: -12.062657356262207
    9. '":
' → logprob: -12.187657356262207
    10. '):
' → logprob: -12.687657356262207

Token 464: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008584582828916609
    2. ':
' → logprob: -7.875858306884766
    3. '           ' → logprob: -8.750858306884766
    4. ':' → logprob: -9.375858306884766
    5. '               ' → logprob: -9.375858306884766
    6. 'break' → logprob: -9.875858306884766
    7. ' break' → logprob: -9.875858306884766
    8. '   ' → logprob: -10.750858306884766
    9. ',' → logprob: -12.000858306884766
    10. '		           ' → logprob: -12.500858306884766

Token 465: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.7337703108787537
    2. ' break' → logprob: -0.9837703108787537
    3. '                   ' → logprob: -1.9837703704833984
    4. '               ' → logprob: -5.108770370483398
    5. '	break' → logprob: -6.733770370483398
    6. '           ' → logprob: -6.983770370483398
    7. '   ' → logprob: -8.608770370483398
    8. '                       ' → logprob: -9.608770370483398
    9. '_break' → logprob: -10.858770370483398
    10. '				' → logprob: -12.733770370483398

Token 466: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017011257587000728
    2. '<|end|>' → logprob: -6.876701354980469
    3. 'tokens' → logprob: -8.126701354980469
    4. ',' → logprob: -9.126701354980469
    5. ' tokens' → logprob: -9.626701354980469
    6. '           ' → logprob: -9.626701354980469
    7. '       ' → logprob: -10.751701354980469
    8. '                
' → logprob: -10.751701354980469
    9. '<|end|>' → logprob: -10.751701354980469
    10. 'token' → logprob: -10.876701354980469

Token 467: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004408990498632193
    2. 'tokens' → logprob: -5.754408836364746
    3. '           ' → logprob: -7.754408836364746
    4. '       ' → logprob: -9.004408836364746
    5. 'token' → logprob: -9.004408836364746
    6. '```' → logprob: -9.129408836364746
    7. 'q' → logprob: -9.254408836364746
    8. ' tokens' → logprob: -9.504408836364746
    9. '<|end|>' → logprob: -9.754408836364746
    10. 's' → logprob: -10.004408836364746

Token 468: ' q' (ID: 2335)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5057865381240845
    2. ' parts' → logprob: -2.130786418914795
    3. '           ' → logprob: -2.255786418914795
    4. ' tokens' → logprob: -2.880786418914795
    5. ' q' → logprob: -3.755786418914795
    6. 'tokens' → logprob: -4.005786418914795
    7. ' values' → logprob: -4.630786418914795
    8. 'q' (adapté à ' q') → logprob: -4.880786418914795
    9. ' n' → logprob: -4.880786418914795
    10. ' nums' → logprob: -5.005786418914795

Token 469: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001205893131555058
    2. 'i' → logprob: -10.250120162963867
    3. ' =' → logprob: -10.250120162963867
    4. '_i' → logprob: -10.500120162963867
    5. '_line' → logprob: -11.375120162963867
    6. '=' → logprob: -12.500120162963867
    7. 's' → logprob: -12.625120162963867
    8. 'line' → logprob: -14.500120162963867
    9. '=i' → logprob: -15.000120162963867
    10. '_idx' → logprob: -15.625120162963867

Token 470: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03888026624917984
    2. '].' → logprob: -3.2888803482055664
    3. '.append' → logprob: -7.288880348205566
    4. ']' → logprob: -9.663880348205566
    5. ').' → logprob: -9.788880348205566
    6. 'i' → logprob: -11.913880348205566
    7. 'append' → logprob: -12.163880348205566
    8. '][' → logprob: -12.288880348205566
    9. '[' → logprob: -12.913880348205566
    10. '_i' → logprob: -13.163880348205566

Token 471: 'extend' (ID: 52011)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. '.append' → logprob: -15.000000953674316
    3. ' append' → logprob: -15.250000953674316
    4. 'extend' → logprob: -15.500000953674316
    5. '	append' → logprob: -17.375
    6. 'appen' → logprob: -17.625
    7. '_append' → logprob: -19.25
    8. 'appe' → logprob: -19.375
    9. 'ap' → logprob: -19.875
    10. 'app' → logprob: -20.625

Token 472: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.25355803966522217
    2. '(list' → logprob: -1.5035580396652222
    3. '(' → logprob: -6.753558158874512
    4. 'list' → logprob: -8.753558158874512
    5. '([' → logprob: -8.878558158874512
    6. 'map' → logprob: -9.253558158874512
    7. '(int' → logprob: -10.378558158874512
    8. '(line' → logprob: -11.378558158874512
    9. ' list' → logprob: -11.753558158874512
    10. '(tuple' → logprob: -11.878558158874512

Token 473: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0025735176168382168
    2. '(' → logprob: -6.002573490142822
    3. 'int' → logprob: -9.37757396697998
    4. '(
' → logprob: -12.12757396697998
    5. ',int' → logprob: -13.00257396697998
    6. ')' → logprob: -13.37757396697998
    7. ' int' → logprob: -13.87757396697998
    8. '=int' → logprob: -14.00257396697998
    9. ' (' → logprob: -14.12757396697998
    10. '[int' → logprob: -14.62757396697998

Token 474: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.019489556550979614
    2. ',line' → logprob: -4.019489765167236
    3. ',' → logprob: -6.769489765167236
    4. '(' → logprob: -9.269489288330078
    5. '#line' → logprob: -10.769489288330078
    6. ' (' → logprob: -10.769489288330078
    7. ',(' → logprob: -11.019489288330078
    8. '[line' → logprob: -11.394489288330078
    9. '=line' → logprob: -11.644489288330078
    10. '(split' → logprob: -12.394489288330078

Token 475: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008340472122654319
    2. '.split' → logprob: -7.125833988189697
    3. '.strip' → logprob: -10.875834465026855
    4. '()))' → logprob: -12.875834465026855
    5. '('').' → logprob: -13.000834465026855
    6. '()' → logprob: -13.125834465026855
    7. '())' → logprob: -14.000834465026855
    8. '.readline' → logprob: -14.125834465026855
    9. '.' → logprob: -14.500834465026855
    10. 'split' → logprob: -15.125834465026855

Token 476: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00525284931063652
    2. '))' → logprob: -5.880252838134766
    3. '()))
' → logprob: -6.130252838134766
    4. '()' → logprob: -8.630252838134766
    5. '())' → logprob: -10.005252838134766
    6. '(' → logprob: -10.755252838134766
    7. '()));' → logprob: -11.255252838134766
    8. '()))

' → logprob: -12.005252838134766
    9. '))
' → logprob: -13.755252838134766
    10. '()))
' → logprob: -13.755252838134766

Token 477: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 478: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011926259845495224
    2. ' for' → logprob: -5.261926174163818
    3. '<|end|>' → logprob: -5.511926174163818
    4. 'for' (adapté à ' for') → logprob: -6.886926174163818
    5. '   ' → logprob: -7.011926174163818
    6. '```' → logprob: -9.136926651000977
    7. '[' → logprob: -9.261926651000977
    8. 'r' → logprob: -9.261926651000977
    9. ' ' → logprob: -9.261926651000977
    10. '        
' → logprob: -9.511926651000977

Token 479: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20144052803516388
    2. ' i' → logprob: -1.7014405727386475
    3. '_' → logprob: -11.826440811157227
    4. '_i' → logprob: -11.826440811157227
    5. ' ' → logprob: -12.076440811157227
    6. '	i' → logprob: -13.076440811157227
    7. '(i' → logprob: -13.701440811157227
    8. '   ' → logprob: -14.326440811157227
    9. ' _' → logprob: -14.451440811157227
    10. '[i' → logprob: -14.826440811157227

Token 480: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0014228529762476683
    2. 'in' → logprob: -6.626422882080078
    3. '[i' → logprob: -9.876422882080078
    4. '[' → logprob: -10.501422882080078
    5. ' ' → logprob: -12.251422882080078
    6. ' i' → logprob: -12.751422882080078
    7. '(' → logprob: -13.001422882080078
    8. '(i' → logprob: -13.626422882080078
    9. ',' → logprob: -13.751422882080078
    10. '   ' → logprob: -13.876422882080078

Token 481: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07920294255018234
    2. ' range' → logprob: -2.579202890396118
    3. '1' → logprob: -8.329202651977539
    4. '(' → logprob: -9.829202651977539
    5. ' ' → logprob: -11.829202651977539
    6. '(range' → logprob: -12.204202651977539
    7. 'in' → logprob: -12.704202651977539
    8. ' in' → logprob: -13.204202651977539
    9. ' (' → logprob: -15.329202651977539
    10. '   ' → logprob: -16.07920265197754

Token 482: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.231182826217264e-05
    2. ' (' → logprob: -9.625072479248047
    3. '1' → logprob: -12.125072479248047
    4. ',' → logprob: -14.750072479248047
    5. 'range' → logprob: -16.000072479248047
    6. ' range' → logprob: -16.500072479248047
    7. ' in' → logprob: -16.750072479248047
    8. 'def' → logprob: -17.375072479248047
    9. '```' → logprob: -18.125072479248047
    10. 'import' → logprob: -18.250072479248047

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.274932143744081e-05
    2. ' ' → logprob: -10.250042915344238
    3. '(' → logprob: -12.500042915344238
    4. '   ' → logprob: -13.500042915344238
    5. 'c' → logprob: -15.000042915344238
    6. '
' → logprob: -15.062542915344238
    7. 's' → logprob: -15.187542915344238
    8. ',' → logprob: -15.812542915344238
    9. ')' → logprob: -15.937542915344238
    10. '0' → logprob: -16.062541961669922

Token 484: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0025880273897200823
    2. ',' → logprob: -6.002587795257568
    3. ',(' → logprob: -10.127588272094727
    4. 'c' → logprob: -10.627588272094727
    5. '(c' → logprob: -10.752588272094727
    6. ' ,' → logprob: -11.377588272094727
    7. ',q' → logprob: -12.252588272094727
    8. '       ' → logprob: -12.752588272094727
    9. '(' → logprob: -13.127588272094727
    10. 'range' → logprob: -13.877588272094727

Token 485: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011927806917810813
    2. ' +' → logprob: -10.00011920928955
    3. '+i' → logprob: -10.25011920928955
    4. '+c' → logprob: -11.37511920928955
    5. '1' → logprob: -12.00011920928955
    6. ']+' → logprob: -12.25011920928955
    7. '()+' → logprob: -12.37511920928955
    8. '```' → logprob: -13.12511920928955
    9. '(' → logprob: -13.25011920928955
    10. '[i' → logprob: -13.62511920928955

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022940391500014812
    2. ' ' → logprob: -8.750229835510254
    3. '+' → logprob: -9.750229835510254
    4. '```' → logprob: -12.750229835510254
    5. 'i' → logprob: -13.000229835510254
    6. '(' → logprob: -13.375229835510254
    7. '   ' → logprob: -13.625229835510254
    8. '5' → logprob: -14.000229835510254
    9. '       ' → logprob: -14.250229835510254
    10. '
' → logprob: -14.500229835510254

Token 487: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34166720509529114
    2. ':' → logprob: -1.3416671752929688
    3. '):
' → logprob: -3.7166671752929688
    4. '   ' → logprob: -6.466667175292969
    5. '):' → logprob: -7.091667175292969
    6. '           ' → logprob: -7.341667175292969
    7. ',' → logprob: -8.466667175292969
    8. '       ' → logprob: -9.091667175292969
    9. '():
' → logprob: -9.091667175292969
    10. ' :
' → logprob: -9.716667175292969

Token 488: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6312881708145142
    2. 'r' → logprob: -1.3812881708145142
    3. '           ' → logprob: -2.2562880516052246
    4. '       ' → logprob: -2.3812880516052246
    5. ' r' → logprob: -4.131288051605225
    6. '	r' → logprob: -6.131288051605225
    7. '```' → logprob: -8.256288528442383
    8. ' ' → logprob: -8.506288528442383
    9. '[r' → logprob: -8.631288528442383
    10. '               ' → logprob: -8.756288528442383

Token 489: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.005717016290873289
    2. ' r' → logprob: -5.505716800689697
    3. 'line' → logprob: -6.630716800689697
    4. '   ' → logprob: -9.255717277526855
    5. ' line' → logprob: -9.505717277526855
    6. '           ' → logprob: -9.880717277526855
    7. 'if' → logprob: -10.755717277526855
    8. '       ' → logprob: -10.880717277526855
    9. ' if' → logprob: -12.005717277526855
    10. 'tokens' → logprob: -12.005717277526855

Token 490: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. ' =' → logprob: -13.62500286102295
    3. 'i' → logprob: -14.37500286102295
    4. '=' → logprob: -15.25000286102295
    5. '(i' → logprob: -15.50000286102295
    6. 's' → logprob: -15.87500286102295
    7. '=[' → logprob: -16.000003814697266
    8. '[' → logprob: -16.125003814697266
    9. '   ' → logprob: -16.125003814697266
    10. '\[' → logprob: -16.125003814697266

Token 491: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007937708869576454
    2. ']=' → logprob: -5.132937908172607
    3. '=' → logprob: -6.382937908172607
    4. ')' → logprob: -9.00793743133545
    5. ' =' → logprob: -9.25793743133545
    6. ' ]' → logprob: -9.75793743133545
    7. '].' → logprob: -10.50793743133545
    8. ']+=' → logprob: -12.38293743133545
    9. ')=' → logprob: -12.88293743133545
    10. '=[]' → logprob: -13.75793743133545

Token 492: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11309020221233368
    2. ' =' → logprob: -2.2380902767181396
    3. '=[]' → logprob: -8.363090515136719
    4. '=[' → logprob: -11.238090515136719
    5. '.append' → logprob: -12.488090515136719
    6. '=[]
' → logprob: -12.988090515136719
    7. '=line' → logprob: -13.113090515136719
    8. ' =[' → logprob: -13.363090515136719
    9. '=list' → logprob: -13.488090515136719
    10. '+=' → logprob: -13.863090515136719

Token 493: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06843245029449463
    2. 'read' → logprob: -2.818432331085205
    3. '[]' → logprob: -5.443432331085205
    4. ' list' → logprob: -6.818432331085205
    5. '[' → logprob: -7.818432331085205
    6. '[list' → logprob: -7.943432331085205
    7. ' read' → logprob: -9.318432807922363
    8. '[]
' → logprob: -10.318432807922363
    9. 'fare' → logprob: -10.693432807922363
    10. ' []' → logprob: -10.818432807922363

Token 494: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0979576110839844
    2. ' for' → logprob: -1.2229576110839844
    3. 'for' → logprob: -1.8479576110839844
    4. '       ' → logprob: -2.2229576110839844
    5. '<|end|>' → logprob: -2.5979576110839844
    6. 'while' → logprob: -5.597957611083984
    7. 'line' → logprob: -5.972957611083984
    8. '   ' → logprob: -6.097957611083984
    9. '<|end|>' → logprob: -6.222957611083984
    10. ' =' → logprob: -6.222957611083984

Token 495: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1659408807754517
    2. 'while' (adapté à ' while') → logprob: -1.4159408807754517
    3. 'r' → logprob: -1.5409408807754517
    4. 'line' → logprob: -1.7909408807754517
    5. 'if' → logprob: -2.915940761566162
    6. '           ' → logprob: -5.415940761566162
    7. 'lines' → logprob: -6.415940761566162
    8. 'tokens' → logprob: -7.165940761566162
    9. ' while' → logprob: -7.540940761566162
    10. 'count' → logprob: -7.790940761566162

Token 496: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.014197707176208496
    2. ' True' → logprob: -4.264197826385498
    3. '(True' → logprob: -11.51419734954834
    4. '   ' → logprob: -11.63919734954834
    5. 'line' → logprob: -11.63919734954834
    6. ' ' → logprob: -12.63919734954834
    7. 'len' → logprob: -13.26419734954834
    8. '  ' → logprob: -14.88919734954834
    9. '1' → logprob: -15.13919734954834
    10. 'true' → logprob: -15.26419734954834

Token 497: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12791870534420013
    2. ':' → logprob: -2.2529187202453613
    3. ':
' → logprob: -5.252918720245361
    4. ' line' → logprob: -6.127918720245361
    5. '(line' → logprob: -6.377918720245361
    6. 'line' → logprob: -6.502918720245361
    7. '=line' → logprob: -6.502918720245361
    8. '<|end|>' → logprob: -7.502918720245361
    9. ' =' → logprob: -7.877918720245361
    10. '[line' → logprob: -8.252918243408203

Token 498: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024742774665355682
    2. 'line' → logprob: -4.149742603302002
    3. 'True' → logprob: -5.274742603302002
    4. ' line' → logprob: -6.649742603302002
    5. ' True' → logprob: -6.899742603302002
    6. '           ' → logprob: -8.14974308013916
    7. 'true' → logprob: -8.52474308013916
    8. '=True' → logprob: -8.77474308013916
    9. '   ' → logprob: -9.02474308013916
    10. '	line' → logprob: -9.27474308013916

Token 499: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0006514362758025527
    2. '           ' → logprob: -7.6256513595581055
    3. ' line' → logprob: -9.250651359558105
    4. 'True' → logprob: -10.000651359558105
    5. '          ' → logprob: -12.375651359558105
    6. 'len' → logprob: -12.500651359558105
    7. '       ' → logprob: -12.750651359558105
    8. '(line' → logprob: -12.875651359558105
    9. '               ' → logprob: -13.500651359558105
    10. '   ' → logprob: -13.500651359558105

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4760691523551941
    2. '=' → logprob: -0.9760691523551941
    3. '=line' → logprob: -6.35106897354126
    4. '=sys' → logprob: -8.476069450378418
    5. '           ' → logprob: -11.476069450378418
    6. '               ' → logprob: -11.601069450378418
    7. 'line' → logprob: -12.601069450378418
    8. '		' → logprob: -12.976069450378418
    9. '()' → logprob: -13.851069450378418
    10. ':' → logprob: -13.976069450378418

Token 501: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759414434432983
    2. ' sys' → logprob: -0.8259414434432983
    3. '=sys' → logprob: -14.32594108581543
    4. '           ' → logprob: -15.07594108581543
    5. '(sys' → logprob: -15.07594108581543
    6. 'input' → logprob: -15.20094108581543
    7. '	sys' → logprob: -15.32594108581543
    8. 'line' → logprob: -16.32594108581543
    9. 'int' → logprob: -16.45094108581543
    10. '               ' → logprob: -16.57594108581543

Token 502: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.018301649019122124
    2. '.readline' → logprob: -4.018301486968994
    3. 'stdin' → logprob: -9.268301963806152
    4. '=sys' → logprob: -10.643301963806152
    5. 'in' → logprob: -11.518301963806152
    6. 'sys' → logprob: -11.643301963806152
    7. '(stdin' → logprob: -12.268301963806152
    8. '.stdout' → logprob: -12.643301963806152
    9. '```' → logprob: -13.643301963806152
    10. 'input' → logprob: -14.143301963806152

Token 503: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1875571544806007e-05
    2. '.stdin' → logprob: -11.750011444091797
    3. '.strip' → logprob: -12.875011444091797
    4. '().' → logprob: -14.000011444091797
    5. 'strip' → logprob: -15.375011444091797
    6. 'stdin' → logprob: -15.750011444091797
    7. '```' → logprob: -16.625011444091797
    8. 'line' → logprob: -17.625011444091797
    9. '.rstrip' → logprob: -17.625011444091797
    10. '.readlines' → logprob: -17.875011444091797

Token 504: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.64708495605737e-05
    2. '               ' → logprob: -10.000066757202148
    3. '()' → logprob: -11.250066757202148
    4. '.strip' → logprob: -12.375066757202148
    5. '():
' → logprob: -13.125066757202148
    6. '           ' → logprob: -14.250066757202148
    7. '=' → logprob: -15.375066757202148
    8. '                   ' → logprob: -15.625066757202148
    9. '()
' → logprob: -15.875066757202148
    10. '>().' → logprob: -16.50006675720215

Token 505: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -7.896309739408025e-07
    2. '.strip' → logprob: -14.500000953674316
    3. ' strip' → logprob: -16.125
    4. 'rstrip' → logprob: -16.125
    5. '(strip' → logprob: -19.5
    6. '```' → logprob: -19.5
    7. '               ' → logprob: -19.625
    8. 'split' → logprob: -20.625
    9. '_strip' → logprob: -21.0
    10. '-strip' → logprob: -21.125

Token 506: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028809761628508568
    2. '()' → logprob: -3.6538097858428955
    3. '():
' → logprob: -6.653809547424316
    4. '<|end|>' → logprob: -7.528809547424316
    5. '           ' → logprob: -8.528809547424316
    6. '()
' → logprob: -9.028809547424316
    7. '().' → logprob: -9.528809547424316
    8. '())' → logprob: -10.028809547424316
    9. '<|end|>' → logprob: -10.153809547424316
    10. '(),' → logprob: -10.528809547424316

Token 507: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09050892293453217
    2. '           ' → logprob: -2.5905089378356934
    3. 'if' → logprob: -4.840508937835693
    4. '<|end|>' → logprob: -6.465508937835693
    5. ' if' → logprob: -6.715508937835693
    6. '       ' → logprob: -7.590508937835693
    7. '   ' → logprob: -8.590508460998535
    8. '<|end|>' → logprob: -9.840508460998535
    9. '                   ' → logprob: -10.090508460998535
    10. '```' → logprob: -11.090508460998535

Token 508: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1167139783501625
    2. 'if' (adapté à ' if') → logprob: -2.2417140007019043
    3. '           ' → logprob: -5.991714000701904
    4. ' if' → logprob: -6.866714000701904
    5. '                   ' → logprob: -8.991713523864746
    6. '              ' → logprob: -9.116713523864746
    7. '             ' → logprob: -10.866713523864746
    8. '                ' → logprob: -11.116713523864746
    9. '       ' → logprob: -11.116713523864746
    10. '            ' → logprob: -11.741713523864746

Token 509: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.31326475739479065
    2. ' line' → logprob: -1.3132647275924683
    3. ' ' → logprob: -14.063264846801758
    4. '(line' → logprob: -14.188264846801758
    5. '	line' → logprob: -14.188264846801758
    6. '[line' → logprob: -15.188264846801758
    7. '   ' → logprob: -15.563264846801758
    8. '#line' → logprob: -15.938264846801758
    9. '=line' → logprob: -16.063264846801758
    10. '-line' → logprob: -17.188264846801758

Token 510: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0891432836651802
    2. '==' → logprob: -2.4641432762145996
    3. '=='' → logprob: -8.714143753051758
    4. '==-' → logprob: -11.089143753051758
    5. ' =='' → logprob: -11.714143753051758
    6. '()==' → logprob: -11.964143753051758
    7. ' ' → logprob: -13.589143753051758
    8. '==
' → logprob: -13.714143753051758
    9. '===' → logprob: -13.839143753051758
    10. '=' → logprob: -13.839143753051758

Token 511: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.0002786167024169117
    2. '-' → logprob: -8.37527847290039
    3. ' '-' → logprob: -10.00027847290039
    4. '"-' → logprob: -13.12527847290039
    5. '('-' → logprob: -14.75027847290039
    6. ' -' → logprob: -16.62527847290039
    7. '’-' → logprob: -16.87527847290039
    8. '   ' → logprob: -17.00027847290039
    9. ' ' → logprob: -17.12527847290039
    10. '''' → logprob: -17.50027847290039

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '-' → logprob: -14.625000953674316
    3. ' ' → logprob: -16.75
    4. '2' → logprob: -18.0
    5. '```' → logprob: -18.0
    6. '
' → logprob: -18.5625
    7. '   ' → logprob: -18.8125
    8. ''' → logprob: -19.125
    9. '0' → logprob: -19.75
    10. ' -' → logprob: -19.875

Token 513: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.740708589553833
    2. ':
' → logprob: -1.365708589553833
    3. ':' → logprob: -1.490708589553833
    4. '':
' → logprob: -3.865708589553833
    5. '':' → logprob: -4.615708351135254
    6. '                   ' → logprob: -4.865708351135254
    7. '               ' → logprob: -6.365708351135254
    8. '   ' → logprob: -7.490708351135254
    9. ''):
' → logprob: -7.740708351135254
    10. '):
' → logprob: -7.865708351135254

Token 514: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016391629353165627
    2. 'break' → logprob: -4.266391754150391
    3. '               ' → logprob: -6.641391754150391
    4. ' break' → logprob: -7.516391754150391
    5. '       ' → logprob: -8.76639175415039
    6. '                   ' → logprob: -9.14139175415039
    7. '   ' → logprob: -9.51639175415039
    8. '	break' → logprob: -11.14139175415039
    9. ':' → logprob: -11.39139175415039
    10. ':
' → logprob: -12.76639175415039

Token 515: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0032019545324146748
    2. ' break' → logprob: -5.753201961517334
    3. '	break' → logprob: -11.003201484680176
    4. '               ' → logprob: -12.128201484680176
    5. '           ' → logprob: -13.128201484680176
    6. '       ' → logprob: -16.003202438354492
    7. '_break' → logprob: -17.003202438354492
    8. '                   ' → logprob: -17.503202438354492
    9. '   ' → logprob: -17.503202438354492
    10. '```' → logprob: -17.628202438354492

Token 516: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6972257494926453
    2. '               ' → logprob: -0.6972257494926453
    3. '<|end|>' → logprob: -6.322225570678711
    4. 'r' → logprob: -7.572225570678711
    5. '                   ' → logprob: -7.947225570678711
    6. '       ' → logprob: -8.072225570678711
    7. 'tokens' → logprob: -8.072225570678711
    8. ',' → logprob: -8.697225570678711
    9. '<|end|>' → logprob: -9.197225570678711
    10. '   ' → logprob: -9.572225570678711

Token 517: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36115869879722595
    2. '               ' → logprob: -1.3611587285995483
    3. 'r' → logprob: -3.486158609390259
    4. '       ' → logprob: -4.861158847808838
    5. '<|end|>' → logprob: -5.486158847808838
    6. ' r' → logprob: -6.111158847808838
    7. '                   ' → logprob: -6.986158847808838
    8. '   ' → logprob: -7.986158847808838
    9. '```' → logprob: -8.23615837097168
    10. '<|end|>' → logprob: -9.36115837097168

Token 518: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0005632805987261236
    2. ' r' → logprob: -7.625563144683838
    3. '               ' → logprob: -9.750563621520996
    4. '           ' → logprob: -11.500563621520996
    5. '   ' → logprob: -13.000563621520996
    6. '                   ' → logprob: -13.125563621520996
    7. '              ' → logprob: -14.625563621520996
    8. 'parts' → logprob: -15.000563621520996
    9. '	r' → logprob: -15.250563621520996
    10. '                ' → logprob: -15.625563621520996

Token 519: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. '[c' → logprob: -16.0
    4. 's' → logprob: -17.0
    5. 'i' → logprob: -17.375
    6. '[I' → logprob: -17.625
    7. '
' → logprob: -18.25
    8. '[int' → logprob: -18.25
    9. '```' → logprob: -18.5
    10. '   ' → logprob: -18.625

Token 520: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012459473218768835
    2. '].' → logprob: -6.876245975494385
    3. '.extend' → logprob: -9.376245498657227
    4. ']' → logprob: -10.376245498657227
    5. '][' → logprob: -10.876245498657227
    6. 'i' → logprob: -11.126245498657227
    7. '.' → logprob: -11.126245498657227
    8. '[].' → logprob: -12.001245498657227
    9. '(i' → logprob: -12.126245498657227
    10. '[' → logprob: -12.126245498657227

Token 521: 'extend' (ID: 52011)
  Prédit: 'extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extend' → logprob: -2.0219828002154827e-05
    2. '.extend' → logprob: -11.000020027160645
    3. 'append' → logprob: -12.750020027160645
    4. ' extend' → logprob: -14.375020027160645
    5. 'extends' → logprob: -17.25002098083496
    6. '
' → logprob: -18.62502098083496
    7. '_extend' → logprob: -19.87502098083496
    8. 'expand' → logprob: -20.25002098083496
    9. '.' → logprob: -21.12502098083496
    10. 'ext' → logprob: -21.62502098083496

Token 522: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.31427961587905884
    2. '(map' → logprob: -1.314279556274414
    3. ' map' → logprob: -7.064279556274414
    4. 'list' → logprob: -8.814279556274414
    5. '(list' → logprob: -11.314279556274414
    6. '	map' → logprob: -14.314279556274414
    7. ' list' → logprob: -14.939279556274414
    8. ',map' → logprob: -15.564279556274414
    9. '(' → logprob: -16.439279556274414
    10. ' (' → logprob: -16.564279556274414

Token 523: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009244420798495412
    2. 'int' → logprob: -7.000924587249756
    3. ',int' → logprob: -12.000924110412598
    4. ' int' → logprob: -12.250924110412598
    5. '=int' → logprob: -14.125924110412598
    6. '[int' → logprob: -14.250924110412598
    7. ']int' → logprob: -14.750924110412598
    8. ':int' → logprob: -16.375925064086914
    9. '<int' → logprob: -16.625925064086914
    10. ' (' → logprob: -17.125925064086914

Token 524: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.02045055665075779
    2. ',line' → logprob: -4.020450592041016
    3. '(int' → logprob: -6.270450592041016
    4. ',' → logprob: -8.520450592041016
    5. ',int' → logprob: -8.895450592041016
    6. '=line' → logprob: -10.395450592041016
    7. 'line' → logprob: -10.770450592041016
    8. '[line' → logprob: -12.145450592041016
    9. ')' → logprob: -12.395450592041016
    10. 'int' → logprob: -12.520450592041016

Token 525: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.012541078962385654
    2. '().' → logprob: -4.3875412940979
    3. ' .' → logprob: -11.012540817260742
    4. '.' → logprob: -12.137540817260742
    5. '.strip' → logprob: -12.637540817260742
    6. '()' → logprob: -13.387540817260742
    7. '(split' → logprob: -13.512540817260742
    8. '.readline' → logprob: -14.012540817260742
    9. 'split' → logprob: -14.137540817260742
    10. '))' → logprob: -14.387540817260742

Token 526: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20223937928676605
    2. '))' → logprob: -1.7022393941879272
    3. '()))
' → logprob: -7.577239513397217
    4. '()' → logprob: -8.202239036560059
    5. '))
' → logprob: -11.077239036560059
    6. '()))

' → logprob: -11.952239036560059
    7. '()));' → logprob: -12.077239036560059
    8. ' ))' → logprob: -12.577239036560059
    9. '())' → logprob: -12.577239036560059
    10. '               ' → logprob: -14.077239036560059

Token 527: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1632361263036728
    2. '       ' → logprob: -2.163236141204834
    3. '<|end|>' → logprob: -3.663236141204834
    4. '   ' → logprob: -5.788236141204834
    5. '        
' → logprob: -5.788236141204834
    6. 'for' → logprob: -6.413236141204834
    7. '    
' → logprob: -7.163236141204834
    8. '```' → logprob: -7.288236141204834
    9. 'def' → logprob: -8.913235664367676
    10. '<|end|>' → logprob: -8.913235664367676

Token 528: ' #' (ID: 1069)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.5451520085334778
    2. '       ' → logprob: -1.670151948928833
    3. '#' (adapté à ' #') → logprob: -2.420151948928833
    4. ' fare' → logprob: -2.795151948928833
    5. 'fa' → logprob: -3.045151948928833
    6. '   ' → logprob: -4.170152187347412
    7. 'f' → logprob: -5.170152187347412
    8. ' #' → logprob: -5.545152187347412
    9. ' fares' → logprob: -6.045152187347412
    10. '
' → logprob: -6.420152187347412

Token 529: ' Build' (ID: 10885)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.4186321794986725
    2. 'fa' → logprob: -1.16863214969635
    3. '#' → logprob: -3.6686322689056396
    4. '   ' → logprob: -6.7936320304870605
    5. ' #' → logprob: -6.7936320304870605
    6. ' fare' → logprob: -7.0436320304870605
    7. 'for' → logprob: -7.5436320304870605
    8. 'far' → logprob: -7.6686320304870605
    9. 'f' → logprob: -8.168632507324219
    10. ' fares' → logprob: -8.856132507324219

Token 530: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.012452318333089352
    2. ' fare' → logprob: -4.887452125549316
    3. 'fa' → logprob: -5.512452125549316
    4. '#' → logprob: -7.887452125549316
    5. 'f' → logprob: -8.887452125549316
    6. '   ' → logprob: -10.012452125549316
    7. 'fair' → logprob: -10.012452125549316
    8. 'for' → logprob: -10.262452125549316
    9. 'far' → logprob: -10.512452125549316
    10. ' fares' → logprob: -10.762452125549316

Token 531: ' lookup' (ID: 37342)
  Prédit: '_tables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.13467533886432648
    2. '_table' → logprob: -2.1346752643585205
    3. 'tables' → logprob: -5.1346755027771
    4. 's' → logprob: -7.5096755027771
    5. 'table' → logprob: -7.5096755027771
    6. ' =' → logprob: -8.634675025939941
    7. '_cost' → logprob: -9.134675025939941
    8. '_' → logprob: -9.259675025939941
    9. '_f' → logprob: -9.384675025939941
    10. '=' → logprob: -9.634675025939941

Token 532: ' tables' (ID: 16584)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5111719965934753
    2. '       ' → logprob: -2.51117205619812
    3. ' tables' → logprob: -2.63617205619812
    4. ' fare' → logprob: -3.13617205619812
    5. 'fare' → logprob: -3.26117205619812
    6. '_tables' → logprob: -3.38617205619812
    7. 'tables' → logprob: -3.38617205619812
    8. 's' → logprob: -4.011171817779541
    9. '_lookup' → logprob: -4.136171817779541
    10. '_f' → logprob: -4.511171817779541

Token 533: ' for' (ID: 395)
  Prédit: ' fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fare' → logprob: -0.16423967480659485
    2. '       ' → logprob: -2.1642396450042725
    3. '   ' → logprob: -3.9142396450042725
    4. 'fare' → logprob: -4.164239883422852
    5. ' for' → logprob: -7.789239883422852
    6. ' fares' → logprob: -8.539239883422852
    7. 'for' → logprob: -9.164239883422852
    8. '	f' → logprob: -9.914239883422852
    9. 'Fare' → logprob: -9.914239883422852
    10. ',' → logprob: -10.164239883422852

Token 534: ' each' (ID: 2454)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.120686411857605
    2. 'range' → logprob: -1.120686411857605
    3. ' i' → logprob: -1.745686411857605
    4. 'i' → logprob: -1.870686411857605
    5. '[i' → logprob: -5.3706865310668945
    6. ' fare' → logprob: -5.7456865310668945
    7. 'for' → logprob: -5.8706865310668945
    8. 'fare' → logprob: -6.1206865310668945
    9. ' for' → logprob: -7.3706865310668945
    10. '_' → logprob: -7.3706865310668945

Token 535: ' company' (ID: 3175)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5115002393722534
    2. 'company' → logprob: -1.6365002393722534
    3. ' i' → logprob: -2.011500358581543
    4. ' company' → logprob: -2.636500358581543
    5. 'for' → logprob: -9.636500358581543
    6. '   ' → logprob: -9.886500358581543
    7. ' ' → logprob: -10.136500358581543
    8. '
' → logprob: -10.636500358581543
    9. '_company' → logprob: -10.761500358581543
    10. ' for' → logprob: -10.886500358581543

Token 536: '
' (ID: 198)
  Prédit: ' fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fare' → logprob: -0.27749404311180115
    2. '       ' → logprob: -2.152493953704834
    3. 'fare' → logprob: -2.152493953704834
    4. '   ' → logprob: -4.902493953704834
    5. ' fares' → logprob: -6.527493953704834
    6. '        
' → logprob: -8.777494430541992
    7. '
' → logprob: -9.402494430541992
    8. ',' → logprob: -9.527494430541992
    9. 'Fare' → logprob: -9.652494430541992
    10. '	f' → logprob: -9.839994430541992

Token 537: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5342712998390198
    2. '       ' → logprob: -1.534271240234375
    3. 'fare' → logprob: -2.284271240234375
    4. ' fare' → logprob: -2.409271240234375
    5. 'fa' → logprob: -7.034271240234375
    6. '	f' → logprob: -7.284271240234375
    7. 'for' → logprob: -7.284271240234375
    8. 'f' → logprob: -7.534271240234375
    9. '        
' → logprob: -7.721771240234375
    10. '```' → logprob: -7.784271240234375

Token 538: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' (adapté à ' fare') → logprob: -0.22092334926128387
    2. '   ' → logprob: -2.09592342376709
    3. 'fa' → logprob: -2.97092342376709
    4. ' fare' → logprob: -4.47092342376709
    5. '       ' → logprob: -5.09592342376709
    6. 'f' → logprob: -5.59592342376709
    7. 'lookup' → logprob: -7.09592342376709
    8. ' fares' → logprob: -8.09592342376709
    9. 'fair' → logprob: -8.22092342376709
    10. '	f' → logprob: -8.34592342376709

Token 539: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.05753957852721214
    2. '_table' → logprob: -3.307539463043213
    3. 's' → logprob: -4.557539463043213
    4. '_' → logprob: -5.557539463043213
    5. ' =' → logprob: -6.182539463043213
    6. '_lookup' → logprob: -6.307539463043213
    7. '=' → logprob: -7.807539463043213
    8. '_cost' → logprob: -7.932539463043213
    9. 'tables' → logprob: -9.682539939880371
    10. 'Tables' → logprob: -9.932539939880371

Token 540: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048601001501083374
    2. '=' → logprob: -3.048600912094116
    3. '[' → logprob: -11.923601150512695
    4. '=[]' → logprob: -12.923601150512695
    5. '=[' → logprob: -13.173601150512695
    6. ' =[' → logprob: -13.298601150512695
    7. '   ' → logprob: -15.798601150512695
    8. '_' → logprob: -15.923601150512695
    9. ' ' → logprob: -16.048601150512695
    10. ',' → logprob: -16.048601150512695

Token 541: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061995361000299454
    2. ' [' → logprob: -2.811995267868042
    3. ' [[]' → logprob: -10.686995506286621
    4. '{}' → logprob: -13.436995506286621
    5. ' [{}' → logprob: -13.561995506286621
    6. '[[' → logprob: -13.561995506286621
    7. '[]' → logprob: -14.436995506286621
    8. '{' → logprob: -16.686994552612305
    9. ' {}' → logprob: -17.436994552612305
    10. '[s' → logprob: -17.561994552612305

Token 542: 'None' (ID: 8505)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.32269784808158875
    2. 'None' → logprob: -1.9476978778839111
    3. '[' → logprob: -2.197697877883911
    4. '{}' → logprob: -3.947697877883911
    5. ']' → logprob: -6.447697639465332
    6. 'compute' → logprob: -7.947697639465332
    7. '{' → logprob: -8.322697639465332
    8. '[]}' → logprob: -8.447697639465332
    9. '0' → logprob: -9.197697639465332
    10. '[]
' → logprob: -9.197697639465332

Token 543: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03022942692041397
    2. ']*(' → logprob: -3.905229330062866
    3. ']+' → logprob: -5.030229568481445
    4. ']
' → logprob: -5.905229568481445
    5. ']*' → logprob: -8.530229568481445
    6. 'for' → logprob: -9.155229568481445
    7. ' ]' → logprob: -10.780229568481445
    8. '*(' → logprob: -11.405229568481445
    9. ' for' → logprob: -11.905229568481445
    10. 'def' → logprob: -12.030229568481445

Token 544: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.13388703338569e-06
    2. '(c' → logprob: -11.750009536743164
    3. ' c' → logprob: -14.000009536743164
    4. 'len' → logprob: -15.375009536743164
    5. '   ' → logprob: -16.625009536743164
    6. '
' → logprob: -16.875009536743164
    7. '0' → logprob: -18.625009536743164
    8. '[c' → logprob: -18.750009536743164
    9. '```' → logprob: -18.875009536743164
    10. '	c' → logprob: -18.875009536743164

Token 545: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3425219549390022e-05
    2. ' +' → logprob: -11.25001335144043
    3. '+
' → logprob: -14.87501335144043
    4. '+c' → logprob: -18.12501335144043
    5. '+)' → logprob: -18.25001335144043
    6. '1' → logprob: -18.25001335144043
    7. '()+' → logprob: -18.87501335144043
    8. ')+' → logprob: -19.12501335144043
    9. '+[' → logprob: -19.25001335144043
    10. '＋' → logprob: -19.87501335144043

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. '+' → logprob: -13.000005722045898
    3. ' ' → logprob: -13.500005722045898
    4. '2' → logprob: -13.625005722045898
    5. '(' → logprob: -15.625005722045898
    6. '   ' → logprob: -16.0000057220459
    7. '```' → logprob: -16.0000057220459
    8. '
' → logprob: -16.2500057220459
    9. '{' → logprob: -17.5000057220459
    10. '       ' → logprob: -18.2500057220459

Token 547: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1269686371088028
    2. ')' → logprob: -2.1269686222076416
    3. ')
' → logprob: -10.876968383789062
    4. '   ' → logprob: -11.126968383789062
    5. ')

' → logprob: -12.501968383789062
    6. ' )
' → logprob: -13.626968383789062
    7. '
' → logprob: -14.126968383789062
    8. ']
' → logprob: -15.126968383789062
    9. ' )' → logprob: -15.626968383789062
    10. '       ' → logprob: -15.626968383789062

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26810455322265625
    2. ' for' → logprob: -1.6431045532226562
    3. 'for' → logprob: -4.143104553222656
    4. '   ' → logprob: -4.268104553222656
    5. '	for' → logprob: -4.768104553222656
    6. '<|end|>' → logprob: -5.768104553222656
    7. '        
' → logprob: -9.643104553222656
    8. '```' → logprob: -10.018104553222656
    9. ' ' → logprob: -10.893104553222656
    10. '           ' → logprob: -10.893104553222656

Token 549: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009579830802977085
    2. ' for' → logprob: -4.759579658508301
    3. '       ' → logprob: -7.009579658508301
    4. '   ' → logprob: -9.7595796585083
    5. '	for' → logprob: -12.5095796585083
    6. '```' → logprob: -16.634580612182617
    7. ' ' → logprob: -16.759580612182617
    8. '           ' → logprob: -17.884580612182617
    9. '  ' → logprob: -18.634580612182617
    10. 'def' → logprob: -19.134580612182617

Token 550: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31332966685295105
    2. ' i' → logprob: -1.3133296966552734
    3. 'company' → logprob: -9.938329696655273
    4. ' company' → logprob: -11.813329696655273
    5. ' comp' → logprob: -12.688329696655273
    6. 'comp' → logprob: -12.688329696655273
    7. '_i' → logprob: -13.063329696655273
    8. 'c' → logprob: -14.188329696655273
    9. 'idx' → logprob: -14.438329696655273
    10. ' ' → logprob: -14.688329696655273

Token 551: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014174911193549633
    2. 'in' → logprob: -4.264174938201904
    3. '	in' → logprob: -13.139174461364746
    4. ' ' → logprob: -13.389174461364746
    5. 'import' → logprob: -13.639174461364746
    6. '   ' → logprob: -13.764174461364746
    7. '<|end|>' → logprob: -14.264174461364746
    8. '```' → logprob: -14.264174461364746
    9. 'In' → logprob: -14.389174461364746
    10. ')' → logprob: -14.514174461364746

Token 552: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004081367049366236
    2. ' range' → logprob: -5.5040812492370605
    3. '1' → logprob: -12.879081726074219
    4. '(range' → logprob: -14.879081726074219
    5. ' ' → logprob: -16.87908172607422
    6. '(' → logprob: -17.25408172607422
    7. '   ' → logprob: -18.12908172607422
    8. '```' → logprob: -18.12908172607422
    9. '	range' → logprob: -18.87908172607422
    10. 'in' → logprob: -19.25408172607422

Token 553: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002615742268972099
    2. '1' → logprob: -8.250261306762695
    3. ' (' → logprob: -15.875261306762695
    4. '   ' → logprob: -16.625261306762695
    5. 'def' → logprob: -17.500261306762695
    6. ',' → logprob: -18.250261306762695
    7. 'range' → logprob: -18.625261306762695
    8. '(
' → logprob: -18.750261306762695
    9. ' ' → logprob: -19.375261306762695
    10. '```' → logprob: -20.000261306762695

Token 554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -14.87500286102295
    4. '(' → logprob: -16.000003814697266
    5. '
' → logprob: -16.875003814697266
    6. 'c' → logprob: -18.000003814697266
    7. '```' → logprob: -18.750003814697266
    8. 'range' → logprob: -19.375003814697266
    9. '  ' → logprob: -19.687503814697266
    10. ',' → logprob: -19.750003814697266

Token 555: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.628437876701355
    2. ',c' → logprob: -0.878437876701355
    3. 'c' → logprob: -3.0034379959106445
    4. ' ,' → logprob: -7.0034379959106445
    5. '(c' → logprob: -7.7534379959106445
    6. '1' → logprob: -9.503437995910645
    7. ' c' → logprob: -9.753437995910645
    8. '   ' → logprob: -11.128437995910645
    9. ';c' → logprob: -11.753437995910645
    10. ',
' → logprob: -11.878437995910645

Token 556: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002153378736693412
    2. ' +' → logprob: -8.625215530395508
    3. '+c' → logprob: -10.750215530395508
    4. '1' → logprob: -11.625215530395508
    5. '       ' → logprob: -13.625215530395508
    6. 'c' → logprob: -14.000215530395508
    7. '   ' → logprob: -14.250215530395508
    8. '()+' → logprob: -14.375215530395508
    9. '(' → logprob: -14.375215530395508
    10. '           ' → logprob: -15.375215530395508

Token 557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04461628571152687
    2. 'c' → logprob: -3.169616222381592
    3. 'i' → logprob: -7.044616222381592
    4. '   ' → logprob: -8.66961669921875
    5. '(' → logprob: -9.04461669921875
    6. '```' → logprob: -9.16961669921875
    7. '(c' → logprob: -9.29461669921875
    8. '+' → logprob: -9.54461669921875
    9. '(i' → logprob: -9.54461669921875
    10. ' ' → logprob: -10.54461669921875

Token 558: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3872069716453552
    2. '):' → logprob: -1.13720703125
    3. '):
' → logprob: -8.88720703125
    4. ':' → logprob: -9.13720703125
    5. ':
' → logprob: -10.01220703125
    6. ')' → logprob: -10.88720703125
    7. '   ' → logprob: -11.26220703125
    8. '():
' → logprob: -12.26220703125
    9. '):

' → logprob: -12.63720703125
    10. ' ):
' → logprob: -12.76220703125

Token 559: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6107416749000549
    2. ' fare' → logprob: -0.9857416749000549
    3. 'fare' → logprob: -2.48574161529541
    4. '           ' → logprob: -7.73574161529541
    5. '   ' → logprob: -8.73574161529541
    6. 'Fare' → logprob: -11.48574161529541
    7. ' fares' → logprob: -11.86074161529541
    8. '```' → logprob: -12.73574161529541
    9. ' Fare' → logprob: -13.48574161529541
    10. ',' → logprob: -13.73574161529541

Token 560: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' (adapté à ' fare') → logprob: -0.0020064341370016336
    2. ' fare' → logprob: -6.252006530761719
    3. '       ' → logprob: -9.752006530761719
    4. '   ' → logprob: -12.002006530761719
    5. 'fa' → logprob: -12.127006530761719
    6. 'fair' → logprob: -12.502006530761719
    7. '           ' → logprob: -13.377006530761719
    8. 'Fare' → logprob: -14.252006530761719
    9. 'f' → logprob: -14.377006530761719
    10. 'far' → logprob: -14.502006530761719

Token 561: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -12.62501049041748
    3. '[_' → logprob: -13.00001049041748
    4. 's' → logprob: -13.50001049041748
    5. 'tables' → logprob: -14.25001049041748
    6. '_table' → logprob: -14.50001049041748
    7. '_tabs' → logprob: -14.62501049041748
    8. '_t' → logprob: -15.62501049041748
    9. '[i' → logprob: -15.62501049041748
    10. ' _' → logprob: -16.125009536743164

Token 562: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023289501667022705
    2. '=' → logprob: -4.023289680480957
    3. ' =' → logprob: -5.398289680480957
    4. '[' → logprob: -7.898289680480957
    5. ' [' → logprob: -8.773289680480957
    6. 'i' → logprob: -11.398289680480957
    7. ']' → logprob: -11.773289680480957
    8. '.append' → logprob: -11.898289680480957
    9. 'compute' → logprob: -11.898289680480957
    10. ')' → logprob: -12.148289680480957

Token 563: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17062564194202423
    2. ']' → logprob: -2.045625686645508
    3. ' =' → logprob: -3.920625686645508
    4. ')' → logprob: -5.170625686645508
    5. ']=' → logprob: -6.295625686645508
    6. ')=' → logprob: -8.545625686645508
    7. ' ]' → logprob: -11.795625686645508
    8. '   ' → logprob: -12.795625686645508
    9. ' )' → logprob: -13.545625686645508
    10. '=f' → logprob: -13.920625686645508

Token 564: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615042082965374
    2. ' =' → logprob: -4.758615016937256
    3. '=f' → logprob: -14.508615493774414
    4. '=create' → logprob: -18.383615493774414
    5. '   ' → logprob: -19.508615493774414
    6. '＝' → logprob: -20.008615493774414
    7. '=cut' → logprob: -20.258615493774414
    8. '=
' → logprob: -20.383615493774414
    9. ')' → logprob: -20.383615493774414
    10. ' ' → logprob: -20.508615493774414

Token 565: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0004306692280806601
    2. ' compute' → logprob: -7.750430583953857
    3. '[' → logprob: -17.750431060791016
    4. 'calculate' → logprob: -19.000431060791016
    5. '   ' → logprob: -19.125431060791016
    6. '.compute' → logprob: -19.125431060791016
    7. 'computer' → logprob: -20.375431060791016
    8. 'create' → logprob: -20.375431060791016
    9. 'computed' → logprob: -20.500431060791016
    10. ' [' → logprob: -20.750431060791016

Token 566: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.00000286102295
    3. 'f' → logprob: -15.50000286102295
    4. ' _' → logprob: -17.625001907348633
    5. '(_' → logprob: -17.750001907348633
    6. '(' → logprob: -18.875001907348633
    7. '```' → logprob: -19.750001907348633
    8. '(f' → logprob: -19.875001907348633
    9. '_p' → logprob: -19.875001907348633
    10. 'fare' → logprob: -19.875001907348633

Token 567: 'ares' (ID: 7458)
  Prédit: 'ares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ares' → logprob: -0.4443913996219635
    2. 'are' → logprob: -1.0693913698196411
    3. '_' → logprob: -4.819391250610352
    4. 'a' → logprob: -6.319391250610352
    5. '_f' → logprob: -6.444391250610352
    6. '_are' → logprob: -6.694391250610352
    7. 'ar' → logprob: -7.444391250610352
    8. '(' → logprob: -7.694391250610352
    9. 'fa' → logprob: -7.819391250610352
    10. '(_' → logprob: -8.319391250610352

Token 568: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0009506448986940086
    2. ' (' → logprob: -7.250950813293457
    3. '(' → logprob: -8.500950813293457
    4. '(i' → logprob: -10.750950813293457
    5. '((' → logprob: -11.750950813293457
    6. '(
' → logprob: -12.750950813293457
    7. 'p' → logprob: -13.250950813293457
    8. '(P' → logprob: -14.125950813293457
    9. '```' → logprob: -14.375950813293457
    10. '(q' → logprob: -14.875950813293457

Token 569: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016921341011766344
    2. ',' → logprob: -9.250168800354004
    3. ',i' → logprob: -10.375168800354004
    4. '(i' → logprob: -10.625168800354004
    5. ',q' → logprob: -12.375168800354004
    6. '[' → logprob: -12.750168800354004
    7. '[q' → logprob: -13.250168800354004
    8. 'i' → logprob: -13.375168800354004
    9. ',[' → logprob: -13.500168800354004
    10. ')[' → logprob: -13.750168800354004

Token 570: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.28950706124305725
    2. ',' → logprob: -1.5395070314407349
    3. '[i' → logprob: -3.5395071506500244
    4. '][' → logprob: -5.664506912231445
    5. ',q' → logprob: -5.914506912231445
    6. '],[' → logprob: -7.039506912231445
    7. ' ,' → logprob: -8.539506912231445
    8. ']' → logprob: -9.039506912231445
    9. 'q' → logprob: -9.039506912231445
    10. '[q' → logprob: -9.289506912231445

Token 571: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00038134094211272895
    2. ' q' → logprob: -7.8753814697265625
    3. '   ' → logprob: -14.625381469726562
    4. '	q' → logprob: -16.000381469726562
    5. '
' → logprob: -16.125381469726562
    6. '       ' → logprob: -16.250381469726562
    7. '     ' → logprob: -16.500381469726562
    8. '    ' → logprob: -16.625381469726562
    9. '           ' → logprob: -16.625381469726562
    10. ' ' → logprob: -17.000381469726562

Token 572: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. '```' → logprob: -13.250003814697266
    3. 'i' → logprob: -14.625003814697266
    4. ',i' → logprob: -15.375003814697266
    5. ' [' → logprob: -15.375003814697266
    6. '[
' → logprob: -15.750003814697266
    7. '[I' → logprob: -15.875003814697266
    8. '[' → logprob: -16.000003814697266
    9. '(i' → logprob: -16.750003814697266
    10. ',' → logprob: -17.000003814697266

Token 573: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5840319395065308
    2. '],' → logprob: -1.4590319395065308
    3. ',' → logprob: -1.5840319395065308
    4. ',i' → logprob: -5.58403205871582
    5. 'i' → logprob: -7.08403205871582
    6. ']' → logprob: -9.95903205871582
    7. ' ,' → logprob: -10.58403205871582
    8. '][' → logprob: -10.95903205871582
    9. '),' → logprob: -10.95903205871582
    10. '(i' → logprob: -11.33403205871582

Token 574: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004078401252627373
    2. ' r' → logprob: -5.504078388214111
    3. '	r' → logprob: -18.504077911376953
    4. '   ' → logprob: -18.754077911376953
    5. '[r' → logprob: -20.504077911376953
    6. '_r' → logprob: -20.879077911376953
    7. ' ' → logprob: -21.504077911376953
    8. '  ' → logprob: -21.879077911376953
    9. '       ' → logprob: -22.129077911376953
    10. '
' → logprob: -22.379077911376953

Token 575: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.25
    3. ')' → logprob: -17.125
    4. '[' → logprob: -17.25
    5. '```' → logprob: -17.75
    6. '(i' → logprob: -18.125
    7. '[I' → logprob: -18.125
    8. ',i' → logprob: -18.875
    9. ')[' → logprob: -19.0
    10. ' i' → logprob: -19.375

Token 576: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. '[i' → logprob: -12.750005722045898
    3. ' )' → logprob: -13.125005722045898
    4. ')
' → logprob: -14.500005722045898
    5. '))' → logprob: -15.625005722045898
    6. ')i' → logprob: -15.750005722045898
    7. ')`' → logprob: -16.5000057220459
    8. '[' → logprob: -16.6250057220459
    9. '])' → logprob: -18.0000057220459
    10. ');' → logprob: -18.0000057220459

Token 577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04948144406080246
    2. '
' → logprob: -3.6744813919067383
    3. 'dist' → logprob: -4.924481391906738
    4. '        
' → logprob: -5.174481391906738
    5. 'import' → logprob: -5.549481391906738
    6. 'def' → logprob: -6.299481391906738
    7. '```' → logprob: -6.549481391906738
    8. '   ' → logprob: -6.549481391906738
    9. '#' → logprob: -8.049481391906738
    10. 'distance' → logprob: -8.049481391906738

Token 578: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0464874766767025
    2. '       ' → logprob: -3.54648756980896
    3. 'import' → logprob: -4.546487331390381
    4. '   ' → logprob: -6.171487331390381
    5. 'INF' → logprob: -6.171487331390381
    6. '#' (adapté à ' #') → logprob: -6.546487331390381
    7. 'distance' → logprob: -9.046487808227539
    8. 'inf' → logprob: -9.171487808227539
    9. ' dist' → logprob: -9.671487808227539
    10. 'dp' → logprob: -10.296487808227539

Token 579: ' Use' (ID: 7649)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04993663728237152
    2. 'import' → logprob: -3.549936532974243
    3. 'INF' → logprob: -4.424936771392822
    4. '#' → logprob: -5.049936771392822
    5. 'distance' → logprob: -7.674936771392822
    6. 'def' → logprob: -7.924936771392822
    7. 'inf' → logprob: -8.174936294555664
    8. 'cost' → logprob: -8.924936294555664
    9. 'dp' → logprob: -9.174936294555664
    10. 'start' → logprob: -9.674936294555664

Token 580: ' modified' (ID: 19209)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.13910773396492004
    2. ' import' → logprob: -2.8891077041625977
    3. 'dist' → logprob: -3.2641077041625977
    4. ' heap' → logprob: -4.014107704162598
    5. 'heap' → logprob: -4.514107704162598
    6. ' dist' → logprob: -5.639107704162598
    7. 'def' → logprob: -6.639107704162598
    8. 'distance' → logprob: -6.764107704162598
    9. '#' → logprob: -8.139107704162598
    10. 'd' → logprob: -9.014107704162598

Token 581: ' D' (ID: 415)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.18087489902973175
    2. 'def' → logprob: -2.055874824523926
    3. 'heap' → logprob: -4.555874824523926
    4. 'dist' → logprob: -4.680874824523926
    5. 'd' → logprob: -4.680874824523926
    6. ' import' → logprob: -5.680874824523926
    7. 'distance' → logprob: -6.180874824523926
    8. '#' → logprob: -6.680874824523926
    9. 'D' → logprob: -7.680874824523926
    10. 'sys' → logprob: -8.055874824523926

Token 582: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0019843061454594135
    2. 'ijk' → logprob: -6.251984119415283
    3. 'ij' → logprob: -10.501984596252441
    4. 'jik' → logprob: -10.626984596252441
    5. '   ' → logprob: -13.376984596252441
    6. 'ijks' → logprob: -13.876984596252441
    7. 'jk' → logprob: -14.126984596252441
    8. '```' → logprob: -14.876984596252441
    9. 'ijs' → logprob: -15.376984596252441
    10. 'j' → logprob: -16.001983642578125

Token 583: ' with' (ID: 483)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.32813334465026855
    2. '       ' → logprob: -2.0781333446502686
    3. 'distance' → logprob: -3.5781333446502686
    4. '(dist' → logprob: -3.5781333446502686
    5. ' dist' → logprob: -3.7031333446502686
    6. ' distances' → logprob: -4.203133583068848
    7. '   ' → logprob: -4.203133583068848
    8. ' (' → logprob: -4.578133583068848
    9. '(distance' → logprob: -4.578133583068848
    10. 'import' → logprob: -4.703133583068848

Token 584: ' state' (ID: 2608)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7413479685783386
    2. 'import' → logprob: -0.8663479685783386
    3. ' heap' → logprob: -3.6163480281829834
    4. 'cost' → logprob: -3.9913480281829834
    5. ' import' → logprob: -4.616347789764404
    6. 'dist' → logprob: -4.741347789764404
    7. 'priority' → logprob: -5.366347789764404
    8. '(cost' → logprob: -5.491347789764404
    9. 'def' → logprob: -5.741347789764404
    10. '(start' → logprob: -5.866347789764404

Token 585: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.254900574684143
    2. ' (' → logprob: -1.504900574684143
    3. ' =' → logprob: -1.754900574684143
    4. 'import' → logprob: -1.879900574684143
    5. '(queue' → logprob: -3.8799004554748535
    6. 'def' → logprob: -4.2549004554748535
    7. '(heap' → logprob: -4.2549004554748535
    8. 'dist' → logprob: -4.3799004554748535
    9. '(' → logprob: -4.3799004554748535
    10. '       ' → logprob: -4.5049004554748535

Token 586: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8756425380706787
    2. ' (' → logprob: -1.3756425380706787
    3. 'heap' → logprob: -2.3756425380706787
    4. '(node' → logprob: -2.7506425380706787
    5. '(heap' → logprob: -2.8756425380706787
    6. ' heap' → logprob: -3.6256425380706787
    7. '[]' → logprob: -4.250642776489258
    8. '   ' → logprob: -4.500642776489258
    9. '(priority' → logprob: -4.750642776489258
    10. '[]
' → logprob: -5.125642776489258

Token 587: 'station' (ID: 27999)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.14226080477237701
    2. 'current' → logprob: -2.767260789871216
    3. 'company' → logprob: -3.517260789871216
    4. 'c' → logprob: -4.267261028289795
    5. ' cost' → logprob: -5.142261028289795
    6. 'distance' → logprob: -5.642261028289795
    7. 'city' → logprob: -5.892261028289795
    8. 'station' → logprob: -6.017261028289795
    9. '(cost' → logprob: -6.017261028289795
    10. ' current' → logprob: -6.142261028289795

Token 588: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008058571256697178
    2. ' ,' → logprob: -5.008058547973633
    3. ',current' → logprob: -7.758058547973633
    4. ',c' → logprob: -8.008058547973633
    5. ',state' → logprob: -8.508058547973633
    6. '<|end|>' → logprob: -9.758058547973633
    7. ',int' → logprob: -10.008058547973633
    8. ',node' → logprob: -10.383058547973633
    9. '_cost' → logprob: -10.508058547973633
    10. ')' → logprob: -10.633058547973633

Token 589: ' current' (ID: 2208)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.02861110493540764
    2. 'cost' → logprob: -4.278611183166504
    3. ' company' → logprob: -4.403611183166504
    4. 'current' → logprob: -7.153611183166504
    5. 'fare' → logprob: -7.403611183166504
    6. ' cost' → logprob: -8.528611183166504
    7. 'used' → logprob: -9.278611183166504
    8. 'c' → logprob: -9.528611183166504
    9. 'total' → logprob: -9.653611183166504
    10. ' fare' → logprob: -9.903611183166504

Token 590: '_company' (ID: 77215)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.0033977674320340157
    2. 'cost' → logprob: -6.5033979415893555
    3. ' company' → logprob: -7.1283979415893555
    4. '_company' → logprob: -7.2533979415893555
    5. 'fare' → logprob: -8.753397941589355
    6. 'cc' → logprob: -9.878397941589355
    7. 'line' → logprob: -10.628397941589355
    8. 'distance' → logprob: -10.753397941589355
    9. 'time' → logprob: -11.003397941589355
    10. 'card' → logprob: -11.628397941589355

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3137447237968445
    2. ')' → logprob: -1.3137447834014893
    3. ',state' → logprob: -8.43874454498291
    4. ' ,' → logprob: -10.06374454498291
    5. ')
' → logprob: -10.43874454498291
    6. ' )' → logprob: -10.68874454498291
    7. '_,' → logprob: -10.81374454498291
    8. ',current' → logprob: -10.81374454498291
    9. ',)' → logprob: -11.18874454498291
    10. ',user' → logprob: -11.43874454498291

Token 592: ' dist' (ID: 3601)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.9949525594711304
    2. 'fare' → logprob: -0.9949525594711304
    3. 'current' → logprob: -2.11995267868042
    4. 'total' → logprob: -3.36995267868042
    5. 'distance' → logprob: -3.86995267868042
    6. 'acc' → logprob: -4.24495267868042
    7. ' cost' → logprob: -4.49495267868042
    8. ' fare' → logprob: -4.61995267868042
    9. ' current' → logprob: -4.86995267868042
    10. 'prev' → logprob: -4.86995267868042

Token 593: '_in' (ID: 2267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1646752506494522
    2. 'ance' → logprob: -1.914675235748291
    3. ',' → logprob: -5.789675235748291
    4. ' )' → logprob: -7.414675235748291
    5. ')
' → logprob: -7.664675235748291
    6. '),' → logprob: -9.28967571258545
    7. ',)' → logprob: -9.91467571258545
    8. '):
' → logprob: -10.03967571258545
    9. '):' → logprob: -10.78967571258545
    10. ')**' → logprob: -11.41467571258545

Token 594: '_company' (ID: 77215)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.4871512651443481
    2. 'trip' → logprob: -1.4871512651443481
    3. 'fare' → logprob: -1.8621512651443481
    4. 'path' → logprob: -2.1121511459350586
    5. '_trip' → logprob: -2.2371511459350586
    6. 'edge' → logprob: -3.4871511459350586
    7. 'route' → logprob: -3.6121511459350586
    8. 'stance' → logprob: -4.237151145935059
    9. '_path' → logprob: -4.362151145935059
    10. 'state' → logprob: -4.612151145935059

Token 595: '_section' (ID: 41389)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5277637243270874
    2. ',' → logprob: -1.0277637243270874
    3. ')
' → logprob: -3.277763843536377
    4. ',state' → logprob: -4.527763843536377
    5. 'ance' → logprob: -6.652763843536377
    6. '   ' → logprob: -7.902763843536377
    7. ' ,' → logprob: -8.277763366699219
    8. 'ation' → logprob: -8.527763366699219
    9. ' )' → logprob: -8.652763366699219
    10. 'distance' → logprob: -8.902763366699219

Token 596: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021099045872688293
    2. ',' → logprob: -3.896099090576172
    3. ')
' → logprob: -8.271099090576172
    4. '   ' → logprob: -9.271099090576172
    5. ' )' → logprob: -9.771099090576172
    6. ',state' → logprob: -9.771099090576172
    7. ')`' → logprob: -11.146099090576172
    8. '       ' → logprob: -11.771099090576172
    9. ',)' → logprob: -12.021099090576172
    10. '),' → logprob: -12.146099090576172

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006431140936911106
    2. 'import' → logprob: -5.8814311027526855
    3. '
' → logprob: -6.3814311027526855
    4. '   ' → logprob: -7.3814311027526855
    5. 'dist' → logprob: -7.3814311027526855
    6. 'queue' → logprob: -8.756431579589844
    7. '        
' → logprob: -9.131431579589844
    8. '<|end|>' → logprob: -9.506431579589844
    9. 'distance' → logprob: -9.756431579589844
    10. '           ' → logprob: -9.881431579589844

Token 598: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7462496757507324
    2. 'dist' → logprob: -0.7462496757507324
    3. '       ' → logprob: -3.3712496757507324
    4. '   ' → logprob: -4.246249675750732
    5. 'heap' → logprob: -6.621249675750732
    6. ' dist' → logprob: -7.621249675750732
    7. ' import' → logprob: -7.746249675750732
    8. 'dp' → logprob: -8.12125015258789
    9. 'distance' → logprob: -9.12125015258789
    10. 'INF' → logprob: -9.24625015258789

Token 599: ' Current' (ID: 14536)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5715455412864685
    2. 'dist' → logprob: -1.0715456008911133
    3. 'heap' → logprob: -3.0715456008911133
    4. '   ' → logprob: -3.8215456008911133
    5. '       ' → logprob: -4.196545600891113
    6. ' dist' → logprob: -6.321545600891113
    7. 'hq' → logprob: -6.321545600891113
    8. 'pq' → logprob: -6.571545600891113
    9. 'visited' → logprob: -7.196545600891113
    10. 'INF' → logprob: -7.196545600891113

Token 600: '_company' (ID: 77215)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9957398772239685
    2. '_station' → logprob: -1.2457399368286133
    3. '_distance' → logprob: -2.6207399368286133
    4. '_dist' → logprob: -2.6207399368286133
    5. 'import' → logprob: -3.1207399368286133
    6. '_company' → logprob: -3.2457399368286133
    7. '       ' → logprob: -3.7457399368286133
    8. '_line' → logprob: -4.495739936828613
    9. 'distance' → logprob: -4.620739936828613
    10. 'station' → logprob: -4.620739936828613

Token 601: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05006511136889458
    2. '=' → logprob: -3.425065040588379
    3. ',' → logprob: -4.175065040588379
    4. ')' → logprob: -7.925065040588379
    5. ' is' → logprob: -8.800065040588379
    6. ' ,' → logprob: -9.175065040588379
    7. '<|end|>' → logprob: -9.175065040588379
    8. 'import' → logprob: -10.425065040588379
    9. 's' → logprob: -10.550065040588379
    10. ' ==' → logprob: -10.800065040588379

Token 602: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5822257399559021
    2. '-' → logprob: -0.8322257399559021
    3. 'None' → logprob: -5.332225799560547
    4. 'c' → logprob: -7.332225799560547
    5. ' -' → logprob: -7.707225799560547
    6. ' ' → logprob: -8.332225799560547
    7. ' None' → logprob: -10.207225799560547
    8. 's' → logprob: -10.582225799560547
    9. '[' → logprob: -11.707225799560547
    10. '[-' → logprob: -12.457225799560547

Token 603: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.433547705411911
    2. '-' → logprob: -1.0585477352142334
    3. 'None' → logprob: -5.558547496795654
    4. 'c' → logprob: -7.183547496795654
    5. ' -' → logprob: -9.183547973632812
    6. '[-' → logprob: -10.058547973632812
    7. ' ' → logprob: -10.683547973632812
    8. '[' → logprob: -10.808547973632812
    9. 's' → logprob: -11.058547973632812
    10. ' None' → logprob: -12.433547973632812

Token 604: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 605: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.16398249566555023
    2. 'any' → logprob: -1.9139825105667114
    3. ' no' → logprob: -6.163982391357422
    4. 'none' → logprob: -7.663982391357422
    5. 'not' → logprob: -7.788982391357422
    6. 'start' → logprob: -8.538982391357422
    7. 'starting' → logprob: -8.538982391357422
    8. 'unknown' → logprob: -9.038982391357422
    9. 'None' → logprob: -9.538982391357422
    10. 'free' → logprob: -9.663982391357422

Token 606: ' current' (ID: 2208)
  Prédit: ' company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.8786302804946899
    2. 'company' → logprob: -1.12863028049469
    3. ' current' → logprob: -2.0036301612854004
    4. 'current' → logprob: -2.6286301612854004
    5. ' trip' → logprob: -4.2536301612854
    6. ' journey' → logprob: -4.6286301612854
    7. 'trip' → logprob: -5.2536301612854
    8. ' ride' → logprob: -5.5036301612854
    9. '_company' → logprob: -5.5036301612854
    10. 'travel' → logprob: -6.0036301612854

Token 607: ' company' (ID: 3175)
  Prédit: '_company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -0.695986807346344
    2. 'company' → logprob: -0.945986807346344
    3. ' company' → logprob: -2.320986747741699
    4. '_' → logprob: -4.695986747741699
    5. '   ' → logprob: -6.695986747741699
    6. '       ' → logprob: -6.820986747741699
    7. '_trip' → logprob: -7.320986747741699
    8. ' _' → logprob: -8.1959867477417
    9. ' ride' → logprob: -8.1959867477417
    10. '```' → logprob: -8.3209867477417

Token 608: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04185617342591286
    2. 'import' → logprob: -3.541856288909912
    3. '   ' → logprob: -5.041856288909912
    4. 'dist' → logprob: -5.791856288909912
    5. '
' → logprob: -6.291856288909912
    6. ' import' → logprob: -8.291855812072754
    7. ' dist' → logprob: -9.166855812072754
    8. 'distance' → logprob: -9.541855812072754
    9. 'from' → logprob: -9.666855812072754
    10. '        
' → logprob: -9.916855812072754

Token 609: 'start' (ID: 5236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015684260055422783
    2. ',' → logprob: -5.890684127807617
    3. ' )' → logprob: -6.015684127807617
    4. ')
' → logprob: -6.140684127807617
    5. ' yet' → logprob: -6.390684127807617
    6. 'selected' → logprob: -7.015684127807617
    7. '),' → logprob: -7.140684127807617
    8. 'state' → logprob: -7.265684127807617
    9. ' selected' → logprob: -8.015684127807617
    10. '#' → logprob: -8.015684127807617

Token 610: ' state' (ID: 2608)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004092408809810877
    2. 'state' → logprob: -6.004092216491699
    3. ')
' → logprob: -7.129092216491699
    4. ' state' → logprob: -8.2540922164917
    5. ',' → logprob: -8.7540922164917
    6. ' )' → logprob: -9.5040922164917
    7. ' station' → logprob: -10.0040922164917
    8. ' at' → logprob: -10.1290922164917
    9. '),' → logprob: -10.1290922164917
    10. '       ' → logprob: -10.1290922164917

Token 611: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02569352090358734
    2. '       ' → logprob: -4.025693416595459
    3. ')
' → logprob: -4.900693416595459
    4. ' )' → logprob: -10.275693893432617
    5. ',' → logprob: -11.150693893432617
    6. ').' → logprob: -11.650693893432617
    7. '   ' → logprob: -12.275693893432617
    8. ')

' → logprob: -12.525693893432617
    9. '),' → logprob: -13.150693893432617
    10. ')
' → logprob: -13.275693893432617

Token 612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006622650660574436
    2. '   ' → logprob: -5.631622791290283
    3. 'import' → logprob: -6.006622791290283
    4. 'dist' → logprob: -7.881622791290283
    5. '
' → logprob: -10.006622314453125
    6. 'queue' → logprob: -10.756622314453125
    7. '        
' → logprob: -10.881622314453125
    8. '```' → logprob: -11.131622314453125
    9. 'heap' → logprob: -11.256622314453125
    10. ' import' → logprob: -11.506622314453125

Token 613: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6440209746360779
    2. 'dist' → logprob: -1.5190210342407227
    3. 'import' → logprob: -1.7690210342407227
    4. '   ' → logprob: -2.8940210342407227
    5. ' import' → logprob: -4.144021034240723
    6. ' dist' → logprob: -5.144021034240723
    7. 'heap' → logprob: -5.644021034240723
    8. 'dp' → logprob: -6.144021034240723
    9. 'pq' → logprob: -7.144021034240723
    10. '
' → logprob: -7.519021034240723

Token 614: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.35324981808662415
    2. 'import' → logprob: -1.3532497882843018
    3. 'heap' → logprob: -4.103250026702881
    4. '   ' → logprob: -4.228250026702881
    5. '       ' → logprob: -5.478250026702881
    6. ' dist' → logprob: -7.353250026702881
    7. 'visited' → logprob: -7.478250026702881
    8. '
' → logprob: -7.728250026702881
    9. 'INF' → logprob: -7.728250026702881
    10. 'distance' → logprob: -7.853250026702881

Token 615: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.46211379766464233
    2. '_' → logprob: -1.587113857269287
    3. ' =' → logprob: -2.337113857269287
    4. ',' → logprob: -3.462113857269287
    5. '_state' → logprob: -4.962113857269287
    6. '=' → logprob: -5.462113857269287
    7. '_states' → logprob: -5.462113857269287
    8. ')' → logprob: -5.712113857269287
    9. '   ' → logprob: -5.837113857269287
    10. 's' → logprob: -6.212113857269287

Token 616: '_company' (ID: 77215)
  Prédit: '_company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -0.0009096754365600646
    2. 'company' → logprob: -7.750909805297852
    3. '_current' → logprob: -8.125909805297852
    4. '_' → logprob: -9.375909805297852
    5. '_comp' → logprob: -10.000909805297852
    6. '_section' → logprob: -10.875909805297852
    7. '_station' → logprob: -12.125909805297852
    8. '
' → logprob: -12.625909805297852
    9. '   ' → logprob: -12.750909805297852
    10. 'current' → logprob: -13.000909805297852

Token 617: '_section' (ID: 41389)
  Prédit: '_section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_section' → logprob: -0.6338079571723938
    2. '_' → logprob: -1.008807897567749
    3. ' =' → logprob: -3.133807897567749
    4. '_segment' → logprob: -4.258808135986328
    5. '_in' → logprob: -4.383808135986328
    6. '=' → logprob: -4.508808135986328
    7. '   ' → logprob: -5.258808135986328
    8. ')' → logprob: -5.883808135986328
    9. ',' → logprob: -5.883808135986328
    10. '_sections' → logprob: -6.508808135986328

Token 618: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39484530687332153
    2. '=' → logprob: -1.1448452472686768
    3. ',' → logprob: -5.394845485687256
    4. '   ' → logprob: -6.644845485687256
    5. ')' → logprob: -6.894845485687256
    6. '_states' → logprob: -8.269845008850098
    7. 'import' → logprob: -9.144845008850098
    8. ' +=' → logprob: -9.519845008850098
    9. '_queue' → logprob: -9.769845008850098
    10. 's' → logprob: -9.894845008850098

Token 619: ' distance' (ID: 9324)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04314020648598671
    2. ' ' → logprob: -3.168140172958374
    3. 'None' → logprob: -10.168140411376953
    4. ' None' → logprob: -10.793140411376953
    5. '[' → logprob: -11.168140411376953
    6. '[]' → logprob: -11.543140411376953
    7. 'dist' → logprob: -11.668140411376953
    8. ' dist' → logprob: -12.168140411376953
    9. '{}' → logprob: -12.293140411376953
    10. 'max' → logprob: -12.668140411376953

Token 620: ' traveled' (ID: 52741)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3316098749637604
    2. ' =' → logprob: -1.456609845161438
    3. '_tr' → logprob: -4.206609725952148
    4. '<|end|>' → logprob: -4.206609725952148
    5. ')' → logprob: -5.081609725952148
    6. ' ' → logprob: -6.706609725952148
    7. 'tr' → logprob: -6.831609725952148
    8. '   ' → logprob: -6.956609725952148
    9. ' traveled' → logprob: -7.081609725952148
    10. 'covered' → logprob: -7.081609725952148

Token 621: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7784506678581238
    2. '_in' → logprob: -2.1534507274627686
    3. ' in' → logprob: -2.2784507274627686
    4. '   ' → logprob: -2.9034507274627686
    5. ' so' → logprob: -3.2784507274627686
    6. ')' → logprob: -3.2784507274627686
    7. '_since' → logprob: -3.6534507274627686
    8. 'since' → logprob: -3.7784507274627686
    9. 'so' → logprob: -3.9034507274627686
    10. ' since' → logprob: -4.0284504890441895

Token 622: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10585387051105499
    2. ' current' → logprob: -2.855853796005249
    3. 'the' → logprob: -3.480853796005249
    4. 'company' → logprob: -4.730854034423828
    5. 'that' → logprob: -6.230854034423828
    6. 'this' → logprob: -7.730854034423828
    7. ' the' → logprob: -7.855854034423828
    8. ' that' → logprob: -8.855854034423828
    9. ' company' → logprob: -9.605854034423828
    10. ' ' → logprob: -9.855854034423828

Token 623: ' company's' (ID: 40960)
  Prédit: '_company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_company' → logprob: -0.5857303142547607
    2. '_' → logprob: -0.8357303142547607
    3. ' _' → logprob: -5.08573055267334
    4. ' company' → logprob: -6.46073055267334
    5. '_comp' → logprob: -7.08573055267334
    6. 'company' → logprob: -7.21073055267334
    7. ')' → logprob: -9.71073055267334
    8. ' ' → logprob: -9.83573055267334
    9. ' line' → logprob: -10.21073055267334
    10. '_f' → logprob: -10.33573055267334

Token 624: ' continuous' (ID: 27979)
  Prédit: 'section'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.6852295994758606
    2. 'segment' → logprob: -0.8102295994758606
    3. ' section' → logprob: -3.810229539871216
    4. ' segment' → logprob: -4.560229778289795
    5. 'line' → logprob: -4.685229778289795
    6. 'route' → logprob: -5.685229778289795
    7. 'network' → logprob: -6.310229778289795
    8. 'current' → logprob: -7.310229778289795
    9. 'service' → logprob: -7.435229778289795
    10. ' network' → logprob: -7.560229778289795

Token 625: ' section' (ID: 7102)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5165938138961792
    2. 'section' → logprob: -1.0165938138961792
    3. ' segment' → logprob: -3.7665939331054688
    4. ' section' → logprob: -4.766593933105469
    5. 'path' → logprob: -5.641593933105469
    6. '_segment' → logprob: -5.891593933105469
    7. '_section' → logprob: -6.641593933105469
    8. 'route' → logprob: -7.266593933105469
    9. ' path' → logprob: -8.391593933105469
    10. 'trip' → logprob: -8.891593933105469

Token 626: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09557997435331345
    2. 'import' → logprob: -2.4705798625946045
    3. '
' → logprob: -6.095580101013184
    4. 'dist' → logprob: -6.470580101013184
    5. '   ' → logprob: -6.845580101013184
    6. 'from' → logprob: -7.220580101013184
    7. 'distance' → logprob: -8.470580101013184
    8. '        
' → logprob: -8.595580101013184
    9. ' import' → logprob: -9.345580101013184
    10. ',' → logprob: -9.595580101013184

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06676441431045532
    2. '
' → logprob: -3.4417643547058105
    3. '<|end|>' → logprob: -4.0667643547058105
    4. '   ' → logprob: -4.4417643547058105
    5. '        
' → logprob: -6.8167643547058105
    6. ',' → logprob: -7.3167643547058105
    7. ')' → logprob: -7.8167643547058105
    8. '    
' → logprob: -8.191764831542969
    9. '```' → logprob: -8.566764831542969
    10. '<|end|>' → logprob: -8.691764831542969

Token 628: ' INF' (ID: 69196)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6767240762710571
    2. 'import' → logprob: -0.9267240762710571
    3. '   ' → logprob: -2.9267239570617676
    4. 'dist' → logprob: -3.5517239570617676
    5. ' import' → logprob: -4.676723957061768
    6. 'heap' → logprob: -6.801723957061768
    7. ' dist' → logprob: -7.176723957061768
    8. 'dp' → logprob: -7.301723957061768
    9. '
' → logprob: -7.926723957061768
    10. 'pq' → logprob: -7.926723957061768

Token 629: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03372073918581009
    2. '=' → logprob: -3.4087207317352295
    3. '=int' → logprob: -9.783720970153809
    4. '=float' → logprob: -11.908720970153809
    5. ')' → logprob: -12.033720970153809
    6. '   ' → logprob: -12.783720970153809
    7. ',' → logprob: -13.908720970153809
    8. '<|end|>' → logprob: -13.908720970153809
    9. ' ' → logprob: -14.908720970153809
    10. '    ' → logprob: -15.783720970153809

Token 630: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00023441045777872205
    2. 'float' → logprob: -8.375234603881836
    3. '1' → logprob: -13.000234603881836
    4. 'int' → logprob: -13.625234603881836
    5. ' ' → logprob: -14.875234603881836
    6. '100' → logprob: -18.250234603881836
    7. ' float' → logprob: -18.500234603881836
    8. 'sys' → logprob: -19.625234603881836
    9. '   ' → logprob: -19.750234603881836
    10. '１０' → logprob: -20.250234603881836

Token 631: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007345817284658551
    2. 'float' → logprob: -7.250734806060791
    3. 'int' → logprob: -11.000734329223633
    4. '1' → logprob: -11.750734329223633
    5. 'sys' → logprob: -16.750734329223633
    6. ' ' → logprob: -17.625734329223633
    7. '(' → logprob: -18.500734329223633
    8. ' float' → logprob: -18.750734329223633
    9. '100' → logprob: -19.250734329223633
    10. '2' → logprob: -19.875734329223633

Token 632: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06242170184850693
    2. '15' → logprob: -3.0624217987060547
    3. '10' → logprob: -4.562421798706055
    4. '18' → logprob: -6.062421798706055
    5. '12' → logprob: -7.062421798706055
    6. '**' → logprob: -9.687421798706055
    7. '14' → logprob: -10.062421798706055
    8. '13' → logprob: -11.812421798706055
    9. '16' → logprob: -13.062421798706055
    10. '09' → logprob: -13.687421798706055

Token 633: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.23336341977119446
    2. '9' → logprob: -1.608363389968872
    3. '12' → logprob: -5.983363628387451
    4. '10' → logprob: -6.233363628387451
    5. '18' → logprob: -6.483363628387451
    6. '14' → logprob: -6.608363628387451
    7. '13' → logprob: -7.983363628387451
    8. '16' → logprob: -8.733363151550293
    9. '11' → logprob: -10.233363151550293
    10. '7' → logprob: -11.358363151550293

Token 634: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8378973603248596
    2. '
' → logprob: -1.0878973007202148
    3. '   ' → logprob: -2.087897300720215
    4. '       ' → logprob: -3.087897300720215
    5. 'distance' → logprob: -3.212897300720215
    6. 'dp' → logprob: -4.337897300720215
    7. ' dist' → logprob: -5.712897300720215
    8. 'import' → logprob: -6.837897300720215
    9. '	dist' → logprob: -7.462897300720215
    10. ' distances' → logprob: -7.587897300720215

Token 635: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8582234978675842
    2. 'dp' → logprob: -1.7332234382629395
    3. '   ' → logprob: -1.8582234382629395
    4. '       ' → logprob: -1.8582234382629395
    5. 'distance' → logprob: -2.8582234382629395
    6. 'visited' → logprob: -4.3582234382629395
    7. ' dist' → logprob: -5.6082234382629395
    8. '
' → logprob: -6.1082234382629395
    9. 'states' → logprob: -6.2332234382629395
    10. ' distances' → logprob: -6.2332234382629395

Token 636: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.009619143791496754
    2. 'import' → logprob: -5.509619235992432
    3. 'dp' → logprob: -5.759619235992432
    4. '   ' → logprob: -6.509619235992432
    5. 'distance' → logprob: -8.009618759155273
    6. ' dist' → logprob: -8.384618759155273
    7. 'start' → logprob: -9.009618759155273
    8. 'cost' → logprob: -9.259618759155273
    9. 'from' → logprob: -10.134618759155273
    10. ' import' → logprob: -11.134618759155273

Token 637: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31359803676605225
    2. '=' → logprob: -1.3135980367660522
    3. '=[' → logprob: -9.063597679138184
    4. 's' → logprob: -9.188597679138184
    5. ')' → logprob: -10.438597679138184
    6. ',' → logprob: -11.313597679138184
    7. '[' → logprob: -11.563597679138184
    8. '   ' → logprob: -11.563597679138184
    9. 'ances' → logprob: -11.563597679138184
    10. '=[]' → logprob: -11.688597679138184

Token 638: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.005186913069337606
    2. ' [[[' → logprob: -5.505187034606934
    3. '[' → logprob: -7.255187034606934
    4. ' [[' → logprob: -8.005187034606934
    5. ' [' → logprob: -10.255187034606934
    6. '[{' → logprob: -10.505187034606934
    7. '{' → logprob: -12.880187034606934
    8. '{}' → logprob: -13.880187034606934
    9. ' [{}' → logprob: -14.630187034606934
    10. '   ' → logprob: -15.005187034606934

Token 639: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.01137518510222435
    2. '[' → logprob: -4.5113749504089355
    3. '{}' → logprob: -8.886375427246094
    4. '[{' → logprob: -9.386375427246094
    5. '[(' → logprob: -10.011375427246094
    6. '{' → logprob: -10.136375427246094
    7. ' [[' → logprob: -11.511375427246094
    8. 'dict' → logprob: -12.386375427246094
    9. ' [' → logprob: -12.636375427246094
    10. '[
' → logprob: -14.386375427246094

Token 640: ' [' (ID: 723)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.3164069950580597
    2. '[' → logprob: -1.3164069652557373
    3. ' [' → logprob: -6.066407203674316
    4. '{' → logprob: -7.191407203674316
    5. '{}' → logprob: -10.691407203674316
    6. '(' → logprob: -11.066407203674316
    7. 'dict' → logprob: -11.441407203674316
    8. '[[' → logprob: -12.316407203674316
    9. '[(' → logprob: -12.441407203674316
    10. ' INF' → logprob: -13.316407203674316

Token 641: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.0
    3. 'False' → logprob: -17.875
    4. ' INF' → logprob: -18.125
    5. '-INF' → logprob: -18.625
    6. '_INF' → logprob: -18.625
    7. 'inf' → logprob: -19.375
    8. 'float' → logprob: -19.5
    9. '
' → logprob: -19.625
    10. 'IN' → logprob: -19.75

Token 642: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1976618468761444
    2. ']*(' → logprob: -2.072661876678467
    3. ']*' → logprob: -3.322661876678467
    4. ' for' → logprob: -4.697661876678467
    5. 'for' → logprob: -4.822661876678467
    6. ']+' → logprob: -9.697661399841309
    7. ',' → logprob: -9.822661399841309
    8. ' ]' → logprob: -10.072661399841309
    9. ')' → logprob: -10.197661399841309
    10. '](' → logprob: -10.572661399841309

Token 643: '201' (ID: 667)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4583114683628082
    2. '101' → logprob: -1.8333114385604858
    3. 'max' → logprob: -2.7083115577697754
    4. '10' → logprob: -3.0833115577697754
    5. 'p' → logprob: -3.2083115577697754
    6. '500' → logprob: -4.458311557769775
    7. '501' → logprob: -4.708311557769775
    8. '110' → logprob: -4.958311557769775
    9. '200' → logprob: -5.458311557769775
    10. '105' → logprob: -5.833311557769775

Token 644: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025575917679816484
    2. ')]' → logprob: -6.002557754516602
    3. '0' → logprob: -10.502557754516602
    4. ')
' → logprob: -10.877557754516602
    5. '+' → logprob: -11.752557754516602
    6. ']' → logprob: -11.877557754516602
    7. 'for' → logprob: -12.627557754516602
    8. ')])' → logprob: -13.127557754516602
    9. ' )' → logprob: -13.252557754516602
    10. '))' → logprob: -13.252557754516602

Token 645: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16178874671459198
    2. 'for' → logprob: -1.9117887020111084
    3. ')' → logprob: -6.6617889404296875
    4. ']' → logprob: -9.036788940429688
    5. '<|end|>' → logprob: -9.786788940429688
    6. '	for' → logprob: -10.036788940429688
    7. '   ' → logprob: -10.911788940429688
    8. '       ' → logprob: -11.161788940429688
    9. ' ' → logprob: -11.411788940429688
    10. ')]' → logprob: -12.036788940429688

Token 646: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10050275176763535
    2. '_c' → logprob: -2.8505027294158936
    3. ' _' → logprob: -3.3505027294158936
    4. '_company' → logprob: -6.475502967834473
    5. '_j' → logprob: -8.100502967834473
    6. '_cc' → logprob: -8.475502967834473
    7. '__' → logprob: -8.725502967834473
    8. 'c' → logprob: -9.100502967834473
    9. '_comp' → logprob: -9.100502967834473
    10. '_i' → logprob: -9.475502967834473

Token 647: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6673224568367004
    2. ' in' → logprob: -0.7923224568367004
    3. 'range' → logprob: -3.4173223972320557
    4. 'c' → logprob: -7.292322635650635
    5. ' range' → logprob: -7.917322635650635
    6. '_' → logprob: -8.667322158813477
    7. 'x' → logprob: -10.167322158813477
    8. ' ' → logprob: -11.417322158813477
    9. 'i' → logprob: -11.542322158813477
    10. '_c' → logprob: -11.917322158813477

Token 648: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008737954311072826
    2. ' range' → logprob: -4.758738040924072
    3. '(range' → logprob: -9.008737564086914
    4. '(c' → logprob: -14.008737564086914
    5. 'c' → logprob: -15.758737564086914
    6. '	range' → logprob: -17.508737564086914
    7. '[c' → logprob: -17.758737564086914
    8. '   ' → logprob: -18.508737564086914
    9. '_range' → logprob: -19.008737564086914
    10. ' ' → logprob: -19.883737564086914

Token 649: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.007769289892166853
    2. 'c' → logprob: -4.8827691078186035
    3. '(' → logprob: -9.382769584655762
    4. ' (' → logprob: -9.632769584655762
    5. '(n' → logprob: -12.882769584655762
    6. ' c' → logprob: -13.132769584655762
    7. '   ' → logprob: -13.257769584655762
    8. '((' → logprob: -14.382769584655762
    9. '[c' → logprob: -14.382769584655762
    10. 'n' → logprob: -14.507769584655762

Token 650: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8624639324116288e-06
    2. ' +' → logprob: -13.250001907348633
    3. '+
' → logprob: -17.125001907348633
    4. '+)' → logprob: -21.000001907348633
    5. '()+' → logprob: -21.750001907348633
    6. '```' → logprob: -21.875001907348633
    7. '+[' → logprob: -21.875001907348633
    8. '+c' → logprob: -22.000001907348633
    9. '＋' → logprob: -22.250001907348633
    10. ')+' → logprob: -22.500001907348633

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006561548914760351
    2. '+' → logprob: -5.506561756134033
    3. '2' → logprob: -6.006561756134033
    4. ' ' → logprob: -11.506561279296875
    5. '   ' → logprob: -13.506561279296875
    6. '(' → logprob: -13.506561279296875
    7. '5' → logprob: -13.631561279296875
    8. 'c' → logprob: -14.256561279296875
    9. '```' → logprob: -14.256561279296875
    10. ' +' → logprob: -14.631561279296875

Token 652: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0643429160118103
    2. ')]' → logprob: -2.814342975616455
    3. ']' → logprob: -6.064342975616455
    4. '       ' → logprob: -10.939342498779297
    5. ' )' → logprob: -11.314342498779297
    6. ' ]' → logprob: -11.689342498779297
    7. '   ' → logprob: -11.689342498779297
    8. '           ' → logprob: -14.939342498779297
    9. '}' → logprob: -15.439342498779297
    10. '))' → logprob: -15.689342498779297

Token 653: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2987605333328247
    2. ']' → logprob: -1.6737605333328247
    3. 'for' → logprob: -3.173760414123535
    4. '       ' → logprob: -4.048760414123535
    5. ' ]' → logprob: -4.548760414123535
    6. '   ' → logprob: -7.923760414123535
    7. '           ' → logprob: -8.548760414123535
    8. ' in' → logprob: -9.673760414123535
    9. '               ' → logprob: -9.798760414123535
    10. ' ' → logprob: -9.798760414123535

Token 654: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1235077828168869
    2. '_' → logprob: -2.4985077381134033
    3. 'range' → logprob: -3.4985077381134033
    4. ' _' → logprob: -5.748507976531982
    5. '_range' → logprob: -8.373507499694824
    6. '(range' → logprob: -8.498507499694824
    7. ' in' → logprob: -9.748507499694824
    8. '_n' → logprob: -10.498507499694824
    9. '(n' → logprob: -10.998507499694824
    10. 'n' → logprob: -12.998507499694824

Token 655: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07909180968999863
    2. 'in' → logprob: -2.579091787338257
    3. '_' → logprob: -8.579092025756836
    4. '_in' → logprob: -11.829092025756836
    5. 'range' → logprob: -12.954092025756836
    6. 's' → logprob: -13.954092025756836
    7. ' ' → logprob: -14.079092025756836
    8. 'i' → logprob: -14.579092025756836
    9. 'n' → logprob: -14.579092025756836
    10. 'c' → logprob: -14.954092025756836

Token 656: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02326178550720215
    2. ' range' → logprob: -3.773261785507202
    3. '(range' → logprob: -11.023262023925781
    4. '	range' → logprob: -17.89826202392578
    5. '[' → logprob: -18.64826202392578
    6. 'n' → logprob: -21.02326202392578
    7. ' ' → logprob: -21.27326202392578
    8. '.range' → logprob: -21.27326202392578
    9. '   ' → logprob: -21.27326202392578
    10. '[n' → logprob: -21.39826202392578

Token 657: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03973495587706566
    2. 'range' → logprob: -3.9147348403930664
    3. '(range' → logprob: -4.039734840393066
    4. ' range' → logprob: -6.914734840393066
    5. ' (' → logprob: -7.914734840393066
    6. '[n' → logprob: -10.539734840393066
    7. 'n' → logprob: -10.914734840393066
    8. '   ' → logprob: -13.039734840393066
    9. '(' → logprob: -13.789734840393066
    10. '((' → logprob: -14.414734840393066

Token 658: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5048530030981055e-06
    2. ' +' → logprob: -14.375001907348633
    3. '+
' → logprob: -14.375001907348633
    4. '1' → logprob: -16.125001907348633
    5. ')+' → logprob: -16.875001907348633
    6. '+)' → logprob: -17.000001907348633
    7. '＋' → logprob: -17.750001907348633
    8. '()+' → logprob: -17.875001907348633
    9. ')]' → logprob: -18.000001907348633
    10. ']+' → logprob: -18.250001907348633

Token 659: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016086915275081992
    2. '2' → logprob: -8.750161170959473
    3. '
' → logprob: -14.375161170959473
    4. ' ' → logprob: -14.750161170959473
    5. '```' → logprob: -15.250161170959473
    6. '+' → logprob: -15.375161170959473
    7. '0' → logprob: -15.687661170959473
    8. '   ' → logprob: -15.812661170959473
    9. ')' → logprob: -16.125160217285156
    10. '6' → logprob: -16.375160217285156

Token 660: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10276234149932861
    2. ']' → logprob: -2.352762222290039
    3. ')' → logprob: -6.102762222290039
    4. '       ' → logprob: -8.352762222290039
    5. ' ]' → logprob: -10.102762222290039
    6. '   ' → logprob: -10.602762222290039
    7. '}]' → logprob: -12.977762222290039
    8. ')]
' → logprob: -13.102762222290039
    9. ']
' → logprob: -13.227762222290039
    10. ']]' → logprob: -13.977762222290039

Token 661: ' ]
' (ID: 10213)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2019558548927307
    2. ']' → logprob: -1.826955795288086
    3. ')' → logprob: -4.576955795288086
    4. '<|end|>' → logprob: -4.701955795288086
    5. '   ' → logprob: -7.326955795288086
    6. ' ]' → logprob: -7.576955795288086
    7. '
' → logprob: -7.826955795288086
    8. '<|end|>' → logprob: -8.076955795288086
    9. ')]' → logprob: -8.326955795288086
    10. '           ' → logprob: -9.076955795288086

Token 662: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03078712709248066
    2. '<|end|>' → logprob: -4.030786991119385
    3. '	for' → logprob: -5.530786991119385
    4. '   ' → logprob: -5.655786991119385
    5. ' for' → logprob: -6.405786991119385
    6. 'for' → logprob: -7.030786991119385
    7. '	continue' → logprob: -7.155786991119385
    8. '	' → logprob: -8.155787467956543
    9. '```' → logprob: -8.655787467956543
    10. '	s' → logprob: -8.905787467956543

Token 663: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4747614860534668
    2. '       ' → logprob: -1.0997614860534668
    3. 'for' → logprob: -3.474761486053467
    4. '   ' → logprob: -4.474761486053467
    5. ' for' → logprob: -7.224761486053467
    6. '	dist' → logprob: -7.849761486053467
    7. '```' → logprob: -7.849761486053467
    8. 'heap' → logprob: -8.224761962890625
    9. ' dist' → logprob: -8.349761962890625
    10. 'start' → logprob: -8.849761962890625

Token 664: ' Max' (ID: 10093)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6978870034217834
    2. 'dist' → logprob: -0.6978870034217834
    3. 'heap' → logprob: -5.947886943817139
    4. 'for' → logprob: -7.072886943817139
    5. 'pq' → logprob: -7.947886943817139
    6. 'from' → logprob: -8.197887420654297
    7. 'start' → logprob: -8.322887420654297
    8. 'hq' → logprob: -8.697887420654297
    9. '   ' → logprob: -9.072887420654297
    10. ' import' → logprob: -10.447887420654297

Token 665: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22572237253189087
    2. '_dist' → logprob: -1.975722312927246
    3. 'distance' → logprob: -3.350722312927246
    4. '_distance' → logprob: -3.600722312927246
    5. 'd' → logprob: -7.350722312927246
    6. '_station' → logprob: -9.600722312927246
    7. 'Dist' → logprob: -9.725722312927246
    8. '```' → logprob: -9.975722312927246
    9. '_d' → logprob: -10.225722312927246
    10. 'len' → logprob: -10.475722312927246

Token 666: ' on' (ID: 402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40588635206222534
    2. ' =' → logprob: -2.03088641166687
    3. 'dist' → logprob: -2.53088641166687
    4. '_in' → logprob: -2.78088641166687
    5. '_dist' → logprob: -4.030886173248291
    6. '_per' → logprob: -4.280886173248291
    7. 'per' → logprob: -4.530886173248291
    8. 'allowed' → logprob: -6.155886173248291
    9. '_limit' → logprob: -6.155886173248291
    10. '_allowed' → logprob: -6.405886173248291

Token 667: ' single' (ID: 4590)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'company' → logprob: -1.1924245357513428
    2. 'each' → logprob: -2.4424245357513428
    3. 'line' → logprob: -2.5674245357513428
    4. '201' → logprob: -2.8174245357513428
    5. 'fare' → logprob: -2.8174245357513428
    6. ' fare' → logprob: -3.4424245357513428
    7. 'c' → logprob: -3.4424245357513428
    8. 'edge' → logprob: -3.4424245357513428
    9. 'edges' → logprob: -3.5674245357513428
    10. 'q' → logprob: -3.6924245357513428

Token 668: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.82757568359375
    2. 'line' → logprob: -1.57757568359375
    3. ' segment' → logprob: -1.82757568359375
    4. 'segment' → logprob: -1.95257568359375
    5. ' edge' → logprob: -3.82757568359375
    6. 'edge' → logprob: -4.70257568359375
    7. ' leg' → logprob: -5.07757568359375
    8. 'trip' → logprob: -5.57757568359375
    9. ' trip' → logprob: -5.82757568359375
    10. 'company' → logprob: -6.07757568359375

Token 669: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9908638596534729
    2. ' =' → logprob: -1.2408638000488281
    3. '       ' → logprob: -1.7408638000488281
    4. '   ' → logprob: -2.865863800048828
    5. 'segment' → logprob: -3.490863800048828
    6. ' for' → logprob: -4.365863800048828
    7. 'for' → logprob: -4.365863800048828
    8. ' is' → logprob: -5.240863800048828
    9. ' segment' → logprob: -5.490863800048828
    10. '
' → logprob: -5.615863800048828

Token 670: ' up' (ID: 869)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0028980709612369537
    2. ' ' → logprob: -5.877898216247559
    3. '   ' → logprob: -9.877898216247559
    4. '201' → logprob: -11.002898216247559
    5. '  ' → logprob: -11.377898216247559
    6. '100' → logprob: -11.877898216247559
    7. ' ' → logprob: -13.377898216247559
    8. '20' → logprob: -14.002898216247559
    9. '```' → logprob: -14.502898216247559
    10. '0' → logprob: -14.502898216247559

Token 671: ' to' (ID: 316)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.3532426953315735
    2. 'to' → logprob: -1.6032426357269287
    3. '201' → logprob: -2.8532426357269287
    4. '       ' → logprob: -3.8532426357269287
    5. '   ' → logprob: -5.103242874145508
    6. 'loaded' → logprob: -5.603242874145508
    7. 'p' → logprob: -6.478242874145508
    8. '100' → logprob: -6.478242874145508
    9. '250' → logprob: -7.228242874145508
    10. ' to' → logprob: -7.353242874145508

Token 672: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.875018119812012
    3. '100' → logprob: -12.250018119812012
    4. '201' → logprob: -13.125018119812012
    5. '
' → logprob: -14.125018119812012
    6. '   ' → logprob: -14.500018119812012
    7. 'max' → logprob: -14.875018119812012
    8. '```' → logprob: -15.000018119812012
    9. '20' → logprob: -15.125018119812012
    10. 'd' → logprob: -15.125018119812012

Token 673: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -3.292907877039397e-06
    2. '100' → logprob: -13.75000286102295
    3. ' ' → logprob: -14.75000286102295
    4. 'max' → logprob: -14.75000286102295
    5. '
' → logprob: -14.87500286102295
    6. '201' → logprob: -15.75000286102295
    7. '20' → logprob: -16.000003814697266
    8. '```' → logprob: -16.000003814697266
    9. 'c' → logprob: -16.500003814697266
    10. '0' → logprob: -16.875003814697266

Token 674: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012151932343840599
    2. '   ' → logprob: -4.887151718139648
    3. 'for' → logprob: -6.137151718139648
    4. ' for' → logprob: -6.262151718139648
    5. '	' → logprob: -9.137151718139648
    6. 'dist' → logprob: -9.762151718139648
    7. '```' → logprob: -9.887151718139648
    8. '	for' → logprob: -10.137151718139648
    9. 'heap' → logprob: -10.262151718139648
    10. '        
' → logprob: -10.762151718139648

Token 675: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0818646103143692
    2. 'dist' → logprob: -2.831864595413208
    3. ' for' → logprob: -5.206864833831787
    4. 'start' → logprob: -5.331864833831787
    5. 'for' → logprob: -5.706864833831787
    6. 'import' → logprob: -6.706864833831787
    7. '   ' → logprob: -6.956864833831787
    8. ' dist' → logprob: -7.081864833831787
    9. '...' → logprob: -7.831864833831787
    10. '#' → logprob: -7.831864833831787

Token 676: ' dist' (ID: 3601)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.38241469860076904
    2. 'for' → logprob: -2.2574148178100586
    3. 'dist' → logprob: -3.1324148178100586
    4. '   ' → logprob: -3.2574148178100586
    5. 'start' → logprob: -3.6324148178100586
    6. '       ' → logprob: -3.6324148178100586
    7. 'heap' → logprob: -3.8824148178100586
    8. 'from' → logprob: -4.132414817810059
    9. ' for' → logprob: -4.132414817810059
    10. '#' → logprob: -4.757414817810059

Token 677: '_in' (ID: 2267)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.292153924703598
    2. '[n' → logprob: -1.9171539545059204
    3. ' =' → logprob: -3.667153835296631
    4. '[s' → logprob: -3.792153835296631
    5. '=' → logprob: -4.542153835296631
    6. 's' → logprob: -4.792153835296631
    7. ')' → logprob: -5.167153835296631
    8. ']' → logprob: -5.167153835296631
    9. ' is' → logprob: -5.917153835296631
    10. 'max' → logprob: -6.167153835296631

Token 678: '_company' (ID: 77215)
  Prédit: '_company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -0.06816880404949188
    2. 'company' → logprob: -3.568168878555298
    3. '_section' → logprob: -3.693168878555298
    4. '_' → logprob: -5.193168640136719
    5. 'section' → logprob: -6.693168640136719
    6. '_in' → logprob: -6.943168640136719
    7. '_station' → logprob: -7.068168640136719
    8. '_range' → logprob: -7.193168640136719
    9. 'range' → logprob: -7.318168640136719
    10. ' ' → logprob: -7.943168640136719

Token 679: '_section' (ID: 41389)
  Prédit: '_section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_section' → logprob: -0.0005426656571216881
    2. 'section' → logprob: -7.875542640686035
    3. '_sections' → logprob: -10.125542640686035
    4. '_index' → logprob: -11.125542640686035
    5. '_max' → logprob: -11.125542640686035
    6. '_in' → logprob: -11.125542640686035
    7. '   ' → logprob: -11.500542640686035
    8. '_limit' → logprob: -11.875542640686035
    9. '_segment' → logprob: -11.875542640686035
    10. 'max' → logprob: -12.000542640686035

Token 680: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3725215792655945
    2. ' =' → logprob: -1.6225216388702393
    3. 'max' → logprob: -2.7475216388702393
    4. '+=' → logprob: -4.62252140045166
    5. '<=' → logprob: -4.74752140045166
    6. '_max' → logprob: -5.49752140045166
    7. ' can' → logprob: -6.12252140045166
    8. ')' → logprob: -6.24752140045166
    9. ' is' → logprob: -6.24752140045166
    10. '   ' → logprob: -6.24752140045166

Token 681: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034417107701301575
    2. ' =' → logprob: -3.659417152404785
    3. '+=' → logprob: -5.909417152404785
    4. '_size' → logprob: -6.409417152404785
    5. '+' → logprob: -7.284417152404785
    6. 'size' → logprob: -7.409417152404785
    7. '_distance' → logprob: -7.534417152404785
    8. '_length' → logprob: -7.784417152404785
    9. '_len' → logprob: -8.284417152404785
    10. '_index' → logprob: -8.909417152404785

Token 682: '200' (ID: 1179)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0016077011823654175
    2. '=
' → logprob: -6.626607894897461
    3. ' =' → logprob: -8.876607894897461
    4. '200' → logprob: -9.126607894897461
    5. '201' → logprob: -11.251607894897461
    6. '+=' → logprob: -11.626607894897461
    7. '<=' → logprob: -13.126607894897461
    8. '=

' → logprob: -13.126607894897461
    9. '==' → logprob: -13.376607894897461
    10. 'is' → logprob: -13.876607894897461

Token 683: ' sufficient' (ID: 21920)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14970383048057556
    2. '<|end|>' → logprob: -3.0247037410736084
    3. '   ' → logprob: -3.3997037410736084
    4. '
' → logprob: -3.5247037410736084
    5. ')' → logprob: -4.0247039794921875
    6. '        
' → logprob: -5.8997039794921875
    7. '<|end|>' → logprob: -6.6497039794921875
    8. '    
' → logprob: -7.2747039794921875
    9. '	' → logprob: -7.2747039794921875
    10. '[' → logprob: -7.3997039794921875

Token 684: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0715605616569519
    2. '   ' → logprob: -2.6965606212615967
    3. ' for' → logprob: -7.071560382843018
    4. 'for' → logprob: -7.696560382843018
    5. '
' → logprob: -8.946560859680176
    6. '	for' → logprob: -9.946560859680176
    7. '```' → logprob: -9.946560859680176
    8. '<|end|>' → logprob: -10.696560859680176
    9. '        
' → logprob: -11.196560859680176
    10. 'next' → logprob: -11.696560859680176

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002237089676782489
    2. '   ' → logprob: -6.377237319946289
    3. 'dist' → logprob: -8.252237319946289
    4. '```' → logprob: -8.752237319946289
    5. ' for' → logprob: -10.752237319946289
    6. '	' → logprob: -11.002237319946289
    7. '	dist' → logprob: -11.252237319946289
    8. '           ' → logprob: -11.502237319946289
    9. '        
' → logprob: -11.502237319946289
    10. 'for' → logprob: -11.627237319946289

Token 686: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.769008219242096
    2. 'dist' → logprob: -1.1440081596374512
    3. '       ' → logprob: -1.8940081596374512
    4. 'heap' → logprob: -3.144008159637451
    5. 'for' → logprob: -4.769008159637451
    6. 'import' → logprob: -4.894008159637451
    7. ' dist' → logprob: -6.394008159637451
    8. 'queue' → logprob: -6.394008159637451
    9. 'start' → logprob: -6.394008159637451
    10. ' for' → logprob: -6.894008159637451

Token 687: ' Start' (ID: 7972)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3178449273109436
    2. 'heap' → logprob: -1.5678448677062988
    3. 'dist' → logprob: -2.942844867706299
    4. 'start' → logprob: -5.442844867706299
    5. 'hq' → logprob: -5.442844867706299
    6. 'pq' → logprob: -6.817844867706299
    7. 'from' → logprob: -7.192844867706299
    8. 'h' → logprob: -8.692845344543457
    9. '   ' → logprob: -9.067845344543457
    10. 'queue' → logprob: -9.067845344543457

Token 688: ' state' (ID: 2608)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8083389401435852
    2. '_station' → logprob: -1.4333388805389404
    3. ' =' → logprob: -2.4333388805389404
    4. 'state' → logprob: -2.6833388805389404
    5. '_state' → logprob: -2.8083388805389404
    6. '_dist' → logprob: -3.9333388805389404
    7. 'queue' → logprob: -4.1833391189575195
    8. '_queue' → logprob: -4.3083391189575195
    9. 'station' → logprob: -4.4333391189575195
    10. '   ' → logprob: -4.8083391189575195

Token 689: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018100541085004807
    2. 'start' → logprob: -5.518100738525391
    3. '   ' → logprob: -5.768100738525391
    4. 'queue' → logprob: -5.893100738525391
    5. 'dist' → logprob: -6.143100738525391
    6. ' =' → logprob: -6.893100738525391
    7. 'stack' → logprob: -7.393100738525391
    8. 'heap' → logprob: -7.393100738525391
    9. '
' → logprob: -7.518100738525391
    10. ' (' → logprob: -7.768100738525391

Token 690: ' at' (ID: 540)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3456704616546631
    2. 'heap' → logprob: -2.220670461654663
    3. ' dist' → logprob: -2.345670461654663
    4. ' heap' → logprob: -2.845670461654663
    5. 'import' → logprob: -3.970670461654663
    6. '   ' → logprob: -4.970670700073242
    7. '       ' → logprob: -6.845670700073242
    8. ' import' → logprob: -6.970670700073242
    9. 'queue' → logprob: -6.970670700073242
    10. 'hq' → logprob: -8.095670700073242

Token 691: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017820450011640787
    2. ' s' → logprob: -6.376781940460205
    3. '   ' → logprob: -9.876782417297363
    4. '0' → logprob: -12.001782417297363
    5. '1' → logprob: -12.126782417297363
    6. '(s' → logprob: -12.126782417297363
    7. '
' → logprob: -13.001782417297363
    8. ',' → logprob: -13.001782417297363
    9. '`s' → logprob: -13.376782417297363
    10. '```' → logprob: -13.501782417297363

Token 692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05901223048567772
    2. '[' → logprob: -3.3090121746063232
    3. '[s' → logprob: -4.184012413024902
    4. '       ' → logprob: -6.684012413024902
    5. ' ,' → logprob: -6.684012413024902
    6. '0' → logprob: -7.309012413024902
    7. ',s' → logprob: -7.434012413024902
    8. ' [' → logprob: -7.559012413024902
    9. ',
' → logprob: -8.184012413024902
    10. '][' → logprob: -8.434012413024902

Token 693: ' no' (ID: 860)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01203321572393179
    2. 'c' → logprob: -5.262032985687256
    3. 'current' → logprob: -5.637032985687256
    4. ' ' → logprob: -6.012032985687256
    5. ' current' → logprob: -8.137033462524414
    6. ' c' → logprob: -8.637033462524414
    7. '   ' → logprob: -9.637033462524414
    8. 's' → logprob: -10.262033462524414
    9. 'prev' → logprob: -10.262033462524414
    10. '       ' → logprob: -10.762033462524414

Token 694: ' company' (ID: 3175)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -1.2169115543365479
    2. ' current' → logprob: -1.5919115543365479
    3. ' company' → logprob: -1.5919115543365479
    4. '_company' → logprob: -1.7169115543365479
    5. '_' → logprob: -2.716911554336548
    6. 'current' → logprob: -3.216911554336548
    7. '_current' → logprob: -5.091911315917969
    8. ' _' → logprob: -5.841911315917969
    9. ' ' → logprob: -6.841911315917969
    10. 'c' → logprob: -8.591911315917969

Token 695: ' chosen' (ID: 16180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0994894802570343
    2. 'dist' → logprob: -3.349489450454712
    3. ' dist' → logprob: -3.349489450454712
    4. ' ,' → logprob: -4.599489688873291
    5. ' =' → logprob: -4.974489688873291
    6. '_dist' → logprob: -5.974489688873291
    7. '   ' → logprob: -6.849489688873291
    8. '=' → logprob: -7.099489688873291
    9. '_,' → logprob: -7.349489688873291
    10. '       ' → logprob: -7.849489688873291

Token 696: ' yet' (ID: 5073)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.884887158870697
    2. '       ' → logprob: -1.6348872184753418
    3. ' dist' → logprob: -1.6348872184753418
    4. ',' → logprob: -2.259887218475342
    5. '   ' → logprob: -2.509887218475342
    6. '	dist' → logprob: -5.384887218475342
    7. '
' → logprob: -5.634887218475342
    8. ' ,' → logprob: -5.884887218475342
    9. ',
' → logprob: -9.259886741638184
    10. 'queue' → logprob: -9.259886741638184

Token 697: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3664785921573639
    2. 'dist' → logprob: -1.9914785623550415
    3. '   ' → logprob: -2.366478681564331
    4. ' dist' → logprob: -3.366478681564331
    5. '
' → logprob: -3.991478681564331
    6. '	dist' → logprob: -4.116478443145752
    7. ',' → logprob: -5.366478443145752
    8. '        
' → logprob: -7.116478443145752
    9. '\t' → logprob: -8.36647891998291
    10. '    
' → logprob: -8.36647891998291

Token 698: ' dist' (ID: 3601)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7787984609603882
    2. 'dist' → logprob: -0.7787984609603882
    3. ' dist' → logprob: -2.6537985801696777
    4. ' ' → logprob: -5.028798580169678
    5. '       ' → logprob: -5.778798580169678
    6. '   ' → logprob: -6.903798580169678
    7. '           ' → logprob: -8.02879810333252
    8. 'c' → logprob: -8.77879810333252
    9. ' c' → logprob: -9.40379810333252
    10. 'current' → logprob: -9.40379810333252

Token 699: ' ' (ID: 220)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0002656271681189537
    2. '=' → logprob: -9.000266075134277
    3. '[' → logprob: -9.625266075134277
    4. ' =' → logprob: -9.875266075134277
    5. '   ' → logprob: -11.500266075134277
    6. 'in' → logprob: -12.625266075134277
    7. ' ' → logprob: -13.500266075134277
    8. '_' → logprob: -13.875266075134277
    9. '[s' → logprob: -14.000266075134277
    10. '_from' → logprob: -14.125266075134277

Token 700: '0' (ID: 15)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.2170248180627823
    2. '=' → logprob: -1.967024803161621
    3. '0' → logprob: -3.092024803161621
    4. ' =' → logprob: -4.967024803161621
    5. ' ' → logprob: -6.217024803161621
    6. 'in' → logprob: -7.967024803161621
    7. '[' → logprob: -7.967024803161621
    8. '   ' → logprob: -9.717024803161621
    9. '_' → logprob: -11.217024803161621
    10. '```' → logprob: -11.592024803161621

Token 701: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8913712501525879
    2. 'dist' → logprob: -0.8913712501525879
    3. '       ' → logprob: -2.391371250152588
    4. '	dist' → logprob: -2.766371250152588
    5. '
' → logprob: -4.016371250152588
    6. ' dist' → logprob: -5.141371250152588
    7. '    
' → logprob: -8.01637077331543
    8. '        
' → logprob: -8.51637077331543
    9. '\t' → logprob: -8.64137077331543
    10. '	queue' → logprob: -8.76637077331543

Token 702: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3119666874408722
    2. '   ' → logprob: -1.8119666576385498
    3. 'dist' → logprob: -2.43696665763855
    4. '
' → logprob: -4.436966896057129
    5. '	dist' → logprob: -5.811966896057129
    6. ' dist' → logprob: -6.811966896057129
    7. '```' → logprob: -7.186966896057129
    8. '        
' → logprob: -9.186966896057129
    9. '    
' → logprob: -9.436966896057129
    10. 'heap' → logprob: -10.061966896057129

Token 703: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.42466598749160767
    2. 'heap' → logprob: -1.174665927886963
    3. '   ' → logprob: -3.924665927886963
    4. '       ' → logprob: -4.549665927886963
    5. 'pq' → logprob: -6.424665927886963
    6. 'import' → logprob: -6.549665927886963
    7. 'queue' → logprob: -6.799665927886963
    8. ' heap' → logprob: -6.924665927886963
    9. 'hq' → logprob: -7.174665927886963
    10. ' dist' → logprob: -7.799665927886963

Token 704: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.000000953674316
    3. '][' → logprob: -15.250000953674316
    4. 's' → logprob: -16.000001907348633
    5. '```' → logprob: -16.125001907348633
    6. ' [' → logprob: -17.000001907348633
    7. ')[' → logprob: -17.375001907348633
    8. '=s' → logprob: -17.625001907348633
    9. '<|end|>' → logprob: -18.375001907348633
    10. '(s' → logprob: -18.375001907348633

Token 705: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.2987729102605954e-05
    2. ' ][' → logprob: -10.750042915344238
    3. ']' → logprob: -11.125042915344238
    4. '[s' → logprob: -12.625042915344238
    5. ')][' → logprob: -13.750042915344238
    6. '[' → logprob: -14.500042915344238
    7. '][]' → logprob: -14.875042915344238
    8. '   ' → logprob: -15.125042915344238
    9. '       ' → logprob: -15.500042915344238
    10. '],' → logprob: -15.625042915344238

Token 706: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۰' → logprob: -19.625
    4. '<|end|>' → logprob: -21.0
    5. '০' → logprob: -21.5
    6. '000' → logprob: -21.75
    7. '```' → logprob: -21.75
    8. '   ' → logprob: -22.125
    9. '०' → logprob: -22.25
    10. '#' → logprob: -22.375

Token 707: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.337155355140567e-05
    2. '[' → logprob: -10.125062942504883
    3. '0' → logprob: -11.250062942504883
    4. ' ][' → logprob: -12.125062942504883
    5. ']' → logprob: -12.375062942504883
    6. '"][' → logprob: -15.375062942504883
    7. ''][' → logprob: -15.750062942504883
    8. '```' → logprob: -16.875062942504883
    9. '()][' → logprob: -17.250062942504883
    10. '   ' → logprob: -17.250062942504883

Token 708: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '۰' → logprob: -19.75
    4. '০' → logprob: -22.125
    5. '000' → logprob: -22.125
    6. '०' → logprob: -22.75
    7. '00' → logprob: -23.125
    8. '٠' → logprob: -23.625
    9. '<|end|>' → logprob: -24.0
    10. '   ' → logprob: -24.0

Token 709: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000954098126385361
    2. ']=' → logprob: -7.3759541511535645
    3. '=' → logprob: -8.125953674316406
    4. ' =' → logprob: -10.500953674316406
    5. ' ]' → logprob: -13.375953674316406
    6. ']+=' → logprob: -13.625953674316406
    7. ')' → logprob: -14.375953674316406
    8. '<|end|>' → logprob: -14.625953674316406
    9. ']==' → logprob: -15.625953674316406
    10. '[' → logprob: -16.750953674316406

Token 710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024819016456604
    2. ' =' → logprob: -1.9102481603622437
    3. ']=' → logprob: -11.285247802734375
    4. ']' → logprob: -11.535247802734375
    5. '=True' → logprob: -14.910247802734375
    6. '[' → logprob: -15.285247802734375
    7. ')' → logprob: -15.410247802734375
    8. ',' → logprob: -15.535247802734375
    9. ')=' → logprob: -15.785247802734375
    10. '=False' → logprob: -16.035247802734375

Token 711: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '۰' → logprob: -19.375
    4. '   ' → logprob: -20.125
    5. '০' → logprob: -21.25
    6. '(' → logprob: -21.75
    7. '000' → logprob: -21.8125
    8. '00' → logprob: -22.0
    9. 'int' → logprob: -22.375
    10. '=' → logprob: -22.375

Token 712: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '۰' → logprob: -20.25
    4. '   ' → logprob: -21.0
    5. 'int' → logprob: -22.375
    6. '০' → logprob: -22.5
    7. '(' → logprob: -22.75
    8. '000' → logprob: -22.75
    9. '00' → logprob: -22.75
    10. 's' → logprob: -23.0625

Token 713: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07162857800722122
    2. '   ' → logprob: -2.8216285705566406
    3. 'pq' → logprob: -5.571628570556641
    4. 'import' → logprob: -5.946628570556641
    5. 'queue' → logprob: -6.446628570556641
    6. 'heap' → logprob: -7.071628570556641
    7. '	queue' → logprob: -7.571628570556641
    8. '	' → logprob: -10.07162857055664
    9. '	import' → logprob: -10.32162857055664
    10. '```' → logprob: -10.32162857055664

Token 714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44622915983200073
    2. '   ' → logprob: -1.5712292194366455
    3. 'pq' → logprob: -2.1962292194366455
    4. 'queue' → logprob: -4.071228981018066
    5. '	queue' → logprob: -4.196228981018066
    6. 'heap' → logprob: -5.321228981018066
    7. 'import' → logprob: -6.446228981018066
    8. '	p' → logprob: -7.321228981018066
    9. ' queue' → logprob: -7.696228981018066
    10. 'priority' → logprob: -8.821228981018066

Token 715: ' pq' (ID: 65424)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3013938069343567
    2. 'heap' → logprob: -2.051393747329712
    3. 'pq' (adapté à ' pq') → logprob: -2.801393747329712
    4. '   ' → logprob: -3.301393747329712
    5. 'queue' → logprob: -3.551393747329712
    6. '       ' → logprob: -5.926393985748291
    7. 'hq' → logprob: -6.301393985748291
    8. 'q' → logprob: -7.301393985748291
    9. ' heap' → logprob: -9.301393508911133
    10. ' import' → logprob: -9.301393508911133

Token 716: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30377522110939026
    2. '=' → logprob: -1.4287751913070679
    3. '=[]' → logprob: -3.8037753105163574
    4. '.' → logprob: -11.0537748336792
    5. 'import' → logprob: -11.1787748336792
    6. '=[]
' → logprob: -11.4287748336792
    7. '<|end|>' → logprob: -11.6787748336792
    8. '=[' → logprob: -11.8037748336792
    9. ' ' → logprob: -12.4287748336792
    10. 'heap' → logprob: -12.5537748336792

Token 717: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0004528374411165714
    2. '[]' → logprob: -7.750452995300293
    3. ' [(' → logprob: -10.750452995300293
    4. '[]
' → logprob: -14.250452995300293
    5. '[' → logprob: -17.250452041625977
    6. ' []' → logprob: -17.500452041625977
    7. '[((' → logprob: -18.625452041625977
    8. '[]

' → logprob: -19.000452041625977
    9. '[],' → logprob: -20.250452041625977
    10. '[]}' → logprob: -21.500452041625977

Token 718: '       ' (ID: 309)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4217056930065155
    2. 'import' → logprob: -1.296705722808838
    3. ' heap' → logprob: -3.171705722808838
    4. '       ' → logprob: -4.171705722808838
    5. '(heap' → logprob: -4.671705722808838
    6. '   ' → logprob: -5.796705722808838
    7. ' import' → logprob: -7.921705722808838
    8. '.heap' → logprob: -8.92170524597168
    9. '```' → logprob: -9.17170524597168
    10. 'he' → logprob: -9.54670524597168

Token 719: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.00327598350122571
    2. 'import' → logprob: -5.7532758712768555
    3. ' heap' → logprob: -9.628275871276855
    4. '```' → logprob: -11.128275871276855
    5. '(heap' → logprob: -11.878275871276855
    6. 'he' → logprob: -12.503275871276855
    7. '   ' → logprob: -13.003275871276855
    8. 'pq' → logprob: -13.253275871276855
    9. 'for' → logprob: -14.628275871276855
    10. 'while' → logprob: -14.628275871276855

Token 720: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.054500666621607e-06
    2. '```' → logprob: -13.37500286102295
    3. '.he' → logprob: -14.37500286102295
    4. 'he' → logprob: -15.12500286102295
    5. 'push' → logprob: -15.50000286102295
    6. 'import' → logprob: -16.750003814697266
    7. 'p' → logprob: -17.375003814697266
    8. 'hq' → logprob: -17.500003814697266
    9. '[' → logprob: -17.625003814697266
    10. 'heap' → logprob: -17.625003814697266

Token 721: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.868328920158092e-05
    2. '.heap' → logprob: -10.500028610229492
    3. '.' → logprob: -14.000028610229492
    4. 'he' → logprob: -16.750028610229492
    5. '.push' → logprob: -16.875028610229492
    6. ' he' → logprob: -17.250028610229492
    7. '.He' → logprob: -17.750028610229492
    8. '.h' → logprob: -17.875028610229492
    9. ').' → logprob: -18.250028610229492
    10. ' .' → logprob: -18.250028610229492

Token 722: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.5928495486150496e-05
    2. 'pp' → logprob: -11.500016212463379
    3. 'ap' → logprob: -12.125016212463379
    4. 'push' → logprob: -15.250016212463379
    5. '```' → logprob: -17.625015258789062
    6. 'q' → logprob: -18.500015258789062
    7. 'append' → logprob: -18.750015258789062
    8. '[' → logprob: -19.000015258789062
    9. 'p' → logprob: -19.125015258789062
    10. '...' → logprob: -19.250015258789062

Token 723: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.031389180570840836
    2. 'ul' → logprob: -5.281389236450195
    3. 'p' → logprob: -5.531389236450195
    4. 'op' → logprob: -5.656389236450195
    5. 'al' → logprob: -5.781389236450195
    6. 'le' → logprob: -5.781389236450195
    7. 'u' → logprob: -5.906389236450195
    8. 'q' → logprob: -5.906389236450195
    9. 'pp' → logprob: -6.156389236450195
    10. 'l' → logprob: -7.031389236450195

Token 724: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. '(q' → logprob: -16.125
    4. ' (' → logprob: -17.5
    5. '(
' → logprob: -18.75
    6. 'pq' → logprob: -18.875
    7. '((' → logprob: -20.75
    8. '```' → logprob: -21.375
    9. 'import' → logprob: -21.5
    10. '   ' → logprob: -21.75

Token 725: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10112990438938141
    2. '(p' → logprob: -2.3511300086975098
    3. '(q' → logprob: -7.10113000869751
    4. 'pq' → logprob: -9.351129531860352
    5. ' pq' → logprob: -12.976129531860352
    6. 'vq' → logprob: -12.976129531860352
    7. 'p' → logprob: -13.726129531860352
    8. 'Q' → logprob: -13.976129531860352
    9. 'dq' → logprob: -13.976129531860352
    10. '?q' → logprob: -14.226129531860352

Token 726: ',' (ID: 11)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0686701089143753
    2. '(' → logprob: -3.0686700344085693
    3. '(p' → logprob: -3.9436700344085693
    4. ')' → logprob: -7.818670272827148
    5. ')((' → logprob: -10.068670272827148
    6. ',' → logprob: -10.943670272827148
    7. ')(' → logprob: -11.318670272827148
    8. ' (' → logprob: -12.193670272827148
    9. '```' → logprob: -12.193670272827148
    10. ',(' → logprob: -12.568670272827148

Token 727: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.226628895296017e-06
    2. ' (' → logprob: -12.000007629394531
    3. '(s' → logprob: -13.875007629394531
    4. '0' → logprob: -17.62500762939453
    5. '   ' → logprob: -18.00000762939453
    6. '((' → logprob: -19.62500762939453
    7. '(t' → logprob: -22.00000762939453
    8. '[' → logprob: -22.12500762939453
    9. '(sr' → logprob: -22.12500762939453
    10. '```' → logprob: -22.37500762939453

Token 728: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(' → logprob: -17.875
    3. ' ' → logprob: -20.375
    4. '   ' → logprob: -23.125
    5. '۰' → logprob: -23.375
    6. ')' → logprob: -23.75
    7. '```' → logprob: -24.125
    8. '000' → logprob: -24.25
    9. 'dist' → logprob: -24.375
    10. '00' → logprob: -24.875

Token 729: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04860462248325348
    2. ',s' → logprob: -3.048604726791382
    3. 's' → logprob: -11.423604965209961
    4. ' ,' → logprob: -12.048604965209961
    5. ' s' → logprob: -15.798604965209961
    6. ',
' → logprob: -16.04860496520996
    7. '	s' → logprob: -17.17360496520996
    8. '(s' → logprob: -17.17360496520996
    9. ',n' → logprob: -17.67360496520996
    10. '```' → logprob: -18.04860496520996

Token 730: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1472419600977446e-06
    2. ' s' → logprob: -13.750000953674316
    3. '[s' → logprob: -18.250001907348633
    4. '(s' → logprob: -19.375001907348633
    5. '{s' → logprob: -19.625001907348633
    6. '`s' → logprob: -19.875001907348633
    7. '	s' → logprob: -20.625001907348633
    8. '<s' → logprob: -20.625001907348633
    9. ')s' → logprob: -20.750001907348633
    10. '_s' → logprob: -21.250001907348633

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ' ,' → logprob: -10.87502384185791
    3. '0' → logprob: -12.25002384185791
    4. '```' → logprob: -18.750022888183594
    5. ' ' → logprob: -19.250022888183594
    6. ',
' → logprob: -19.375022888183594
    7. '   ' → logprob: -20.125022888183594
    8. ')' → logprob: -20.500022888183594
    9. '))' → logprob: -20.625022888183594
    10. '[' → logprob: -21.125022888183594

Token 732: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.0
    4. '۰' → logprob: -20.25
    5. '```' → logprob: -20.875
    6. '<|end|>' → logprob: -21.875
    7. ')' → logprob: -22.0
    8. ',' → logprob: -22.1875
    9. '  ' → logprob: -22.4375
    10. '০' → logprob: -22.625

Token 733: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -20.25
    4. '   ' → logprob: -21.0
    5. '<|end|>' → logprob: -21.125
    6. '```' → logprob: -21.25
    7. ')' → logprob: -21.3125
    8. '[' → logprob: -22.3125
    9. '00' → logprob: -22.375
    10. '000' → logprob: -22.5

Token 734: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4868770196917467e-05
    2. '0' → logprob: -11.000024795532227
    3. ' ,' → logprob: -11.750024795532227
    4. '))' → logprob: -15.750024795532227
    5. ',
' → logprob: -17.250024795532227
    6. '```' → logprob: -17.875024795532227
    7. ' ' → logprob: -18.875024795532227
    8. '   ' → logprob: -19.125024795532227
    9. ')))' → logprob: -19.250024795532227
    10. '[' → logprob: -19.500024795532227

Token 735: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.375
    4. '۰' → logprob: -21.0
    5. '```' → logprob: -22.75
    6. '  ' → logprob: -22.75
    7. '<|end|>' → logprob: -23.125
    8. '00' → logprob: -23.25
    9. '000' → logprob: -23.25
    10. ')' → logprob: -23.375

Token 736: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.5000057220459
    4. '۰' → logprob: -19.8750057220459
    5. '  ' → logprob: -20.8750057220459
    6. ')' → logprob: -21.2500057220459
    7. '<|end|>' → logprob: -21.5000057220459
    8. '```' → logprob: -21.7500057220459
    9. '০' → logprob: -22.0000057220459
    10. '00' → logprob: -22.0625057220459

Token 737: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005002511315979064
    2. ')' → logprob: -7.625500202178955
    3. '))
' → logprob: -11.500500679016113
    4. ')))' → logprob: -13.500500679016113
    5. ' ))' → logprob: -14.750500679016113
    6. '   ' → logprob: -16.000499725341797
    7. '));' → logprob: -16.375499725341797
    8. ')
' → logprob: -16.500499725341797
    9. '),' → logprob: -17.250499725341797
    10. '))

' → logprob: -17.375499725341797

Token 738: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6801998615264893
    2. '   ' → logprob: -0.8051998615264893
    3. ' while' → logprob: -3.8051998615264893
    4. '       ' → logprob: -3.9301998615264893
    5. '```' → logprob: -6.30519962310791
    6. '	while' → logprob: -6.43019962310791
    7. '
' → logprob: -7.43019962310791
    8. ')' → logprob: -8.30519962310791
    9. '<|end|>' → logprob: -8.93019962310791
    10. '    
' → logprob: -9.80519962310791

Token 739: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6857209205627441
    2. ')' → logprob: -0.8107209205627441
    3. '   ' → logprob: -3.310720920562744
    4. ' while' → logprob: -5.060720920562744
    5. '```' → logprob: -6.310720920562744
    6. ',' → logprob: -6.435720920562744
    7. '<|end|>' → logprob: -6.435720920562744
    8. '.' → logprob: -7.060720920562744
    9. ':' → logprob: -7.685720920562744
    10. '       ' → logprob: -7.685720920562744

Token 740: ' (' (ID: 350)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.32483580708503723
    2. '0' → logprob: -1.3248357772827148
    3. 'dist' → logprob: -4.949835777282715
    4. 'total' → logprob: -6.449835777282715
    5. '(' → logprob: -7.074835777282715
    6. '(cost' → logprob: -7.199835777282715
    7. 'distance' → logprob: -7.449835777282715
    8. 'import' → logprob: -8.199835777282715
    9. 'heap' → logprob: -9.324835777282715
    10. 'time' → logprob: -9.824835777282715

Token 741: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5791911482810974
    2. '0' → logprob: -0.8291911482810974
    3. 'dist' → logprob: -5.954191207885742
    4. 'total' → logprob: -7.454191207885742
    5. 'distance' → logprob: -10.454191207885742
    6. 'acc' → logprob: -11.329191207885742
    7. 'curr' → logprob: -11.329191207885742
    8. 'current' → logprob: -12.204191207885742
    9. ' cost' → logprob: -13.079191207885742
    10. 'time' → logprob: -13.079191207885742

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.897412822581828e-05
    2. ' ,' → logprob: -10.500068664550781
    3. ')' → logprob: -11.000068664550781
    4. ',time' → logprob: -12.125068664550781
    5. ',
' → logprob: -13.000068664550781
    6. ',p' → logprob: -13.250068664550781
    7. ',user' → logprob: -13.500068664550781
    8. ',s' → logprob: -13.500068664550781
    9. ',n' → logprob: -13.625068664550781
    10. '<|end|>' → logprob: -13.625068664550781

Token 743: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.03157735615968704
    2. 'node' → logprob: -3.9065773487091064
    3. ' station' → logprob: -4.5315775871276855
    4. 'u' → logprob: -9.656577110290527
    5. 'current' → logprob: -9.781577110290527
    6. ' node' → logprob: -9.906577110290527
    7. 'state' → logprob: -11.656577110290527
    8. 'st' → logprob: -11.656577110290527
    9. 'location' → logprob: -12.156577110290527
    10. 's' → logprob: -12.656577110290527

Token 744: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001521526137366891
    2. ')' → logprob: -6.626521587371826
    3. '<|end|>' → logprob: -9.751521110534668
    4. ' ,' → logprob: -9.876521110534668
    5. '```' → logprob: -11.501521110534668
    6. ',next' → logprob: -11.876521110534668
    7. ',n' → logprob: -12.001521110534668
    8. ',None' → logprob: -12.126521110534668
    9. ',user' → logprob: -12.251521110534668
    10. ',
' → logprob: -12.376521110534668

Token 745: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2991126477718353
    2. 'company' → logprob: -1.7991126775741577
    3. 'curr' → logprob: -2.674112558364868
    4. 'cur' → logprob: -3.799112558364868
    5. 'comp' → logprob: -7.174112796783447
    6. ' current' → logprob: -7.424112796783447
    7. 'cc' → logprob: -8.424112319946289
    8. ' curr' → logprob: -10.299112319946289
    9. ' company' → logprob: -10.299112319946289
    10. 'c' → logprob: -10.799112319946289

Token 746: '_company' (ID: 77215)
  Prédit: '_company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -0.523421049118042
    2. 'company' → logprob: -0.898421049118042
    3. '_' → logprob: -9.148421287536621
    4. ' company' → logprob: -9.273421287536621
    5. '```' → logprob: -10.773421287536621
    6. 'Company' → logprob: -11.523421287536621
    7. '
' → logprob: -11.898421287536621
    8. '_comp' → logprob: -11.898421287536621
    9. ')' → logprob: -12.148421287536621
    10. '   ' → logprob: -12.523421287536621

Token 747: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.68022444692906e-05
    2. ' ,' → logprob: -10.250046730041504
    3. ')' → logprob: -12.125046730041504
    4. ',
' → logprob: -13.250046730041504
    5. 'distance' → logprob: -13.875046730041504
    6. '0' → logprob: -14.375046730041504
    7. ',d' → logprob: -14.500046730041504
    8. 'dist' → logprob: -14.625046730041504
    9. '   ' → logprob: -14.750046730041504
    10. '```' → logprob: -14.750046730041504

Token 748: ' dist' (ID: 3601)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07961101084947586
    2. 'dist' → logprob: -2.57961106300354
    3. ' dist' → logprob: -8.079610824584961
    4. ' ' → logprob: -8.454610824584961
    5. 'distance' → logprob: -8.579610824584961
    6. '_dist' → logprob: -13.329610824584961
    7. '   ' → logprob: -13.454610824584961
    8. '```' → logprob: -13.704610824584961
    9. 'Dist' → logprob: -14.079610824584961
    10. '	dist' → logprob: -14.079610824584961

Token 749: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0014939149841666222
    2. ')' → logprob: -6.62649393081665
    3. '_' → logprob: -9.376493453979492
    4. 'in' → logprob: -11.251493453979492
    5. '_section' → logprob: -11.876493453979492
    6. '_current' → logprob: -11.876493453979492
    7. ')
' → logprob: -11.876493453979492
    8. '```' → logprob: -12.001493453979492
    9. '_)' → logprob: -12.126493453979492
    10. '_into' → logprob: -12.501493453979492

Token 750: '_current' (ID: 23981)
  Prédit: '_company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -0.08315713703632355
    2. 'company' → logprob: -2.5831570625305176
    3. 'current' → logprob: -5.708157062530518
    4. '_current' → logprob: -7.208157062530518
    5. 'section' → logprob: -10.083157539367676
    6. 'Company' → logprob: -10.083157539367676
    7. '_section' → logprob: -10.833157539367676
    8. '
' → logprob: -10.833157539367676
    9. '_' → logprob: -10.958157539367676
    10. '```' → logprob: -10.958157539367676

Token 751: '_section' (ID: 41389)
  Prédit: '_company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -0.31629806756973267
    2. '_section' → logprob: -1.316298007965088
    3. 'company' → logprob: -6.316298007965088
    4. 'section' → logprob: -7.066298007965088
    5. '_' → logprob: -8.441298484802246
    6. '_line' → logprob: -9.816298484802246
    7. '_comp' → logprob: -10.191298484802246
    8. '_segment' → logprob: -11.191298484802246
    9. '_station' → logprob: -11.441298484802246
    10. ')' → logprob: -11.566298484802246

Token 752: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. '))' → logprob: -12.250005722045898
    3. ' )' → logprob: -14.125005722045898
    4. ')
' → logprob: -16.1250057220459
    5. ')`' → logprob: -17.2500057220459
    6. '```' → logprob: -17.3750057220459
    7. ')))' → logprob: -17.5000057220459
    8. '`)' → logprob: -17.6250057220459
    9. '   ' → logprob: -18.0000057220459
    10. ')")' → logprob: -18.0000057220459

Token 753: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.006339333951473236
    2. '   ' → logprob: -5.8813395500183105
    3. ' while' → logprob: -6.0063395500183105
    4. '```' → logprob: -7.0063395500183105
    5. '	while' → logprob: -9.006339073181152
    6. 'While' → logprob: -10.631339073181152
    7. '       ' → logprob: -12.006339073181152
    8. ')' → logprob: -12.506339073181152
    9. '``' → logprob: -14.006339073181152
    10. '<|end|>' → logprob: -14.881339073181152

Token 754: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0005045388825237751
    2. '   ' → logprob: -8.250504493713379
    3. '```' → logprob: -8.500504493713379
    4. ' while' → logprob: -10.250504493713379
    5. '	while' → logprob: -12.625504493713379
    6. '       ' → logprob: -14.250504493713379
    7. 'While' → logprob: -15.000504493713379
    8. '``' → logprob: -15.500504493713379
    9. '
' → logprob: -16.500505447387695
    10. '    
' → logprob: -18.375505447387695

Token 755: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.00015955790877342224
    2. ' pq' → logprob: -8.75015926361084
    3. 'len' → logprob: -14.00015926361084
    4. '   ' → logprob: -16.000160217285156
    5. ' ' → logprob: -16.375160217285156
    6. 'p' → logprob: -16.375160217285156
    7. '
' → logprob: -18.875160217285156
    8. 'pv' → logprob: -19.125160217285156
    9. '       ' → logprob: -19.250160217285156
    10. '     ' → logprob: -20.000160217285156

Token 756: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18209174275398254
    2. ':' → logprob: -1.8070917129516602
    3. '[' → logprob: -6.68209171295166
    4. ' and' → logprob: -7.55709171295166
    5. 'and' → logprob: -7.80709171295166
    6. '):
' → logprob: -9.30709171295166
    7. '=' → logprob: -11.30709171295166
    8. ',' → logprob: -11.68209171295166
    9. ':

' → logprob: -11.68209171295166
    10. '```' → logprob: -11.68209171295166

Token 757: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2066754549741745
    2. '       ' → logprob: -2.3316755294799805
    3. 'cost' → logprob: -3.0816755294799805
    4. '```' → logprob: -4.0816755294799805
    5. '(cost' → logprob: -4.9566755294799805
    6. '               ' → logprob: -5.0816755294799805
    7. ',' → logprob: -5.0816755294799805
    8. '_,' → logprob: -5.9566755294799805
    9. '   ' → logprob: -6.8316755294799805
    10. ' cost' → logprob: -7.2066755294799805

Token 758: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.000649529043585062
    2. '(cost' → logprob: -7.500649452209473
    3. 'cur' → logprob: -9.875649452209473
    4. ' cost' → logprob: -10.625649452209473
    5. 'curr' → logprob: -11.875649452209473
    6. 'c' → logprob: -12.250649452209473
    7. '```' → logprob: -13.375649452209473
    8. 'heap' → logprob: -13.750649452209473
    9. '_cost' → logprob: -13.750649452209473
    10. '0' → logprob: -13.875649452209473

Token 759: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.176947600673884e-05
    2. ',c' → logprob: -11.375021934509277
    3. ',u' → logprob: -12.750021934509277
    4. ',current' → logprob: -12.875021934509277
    5. ',next' → logprob: -14.250021934509277
    6. ',node' → logprob: -14.500021934509277
    7. ' ,' → logprob: -14.625021934509277
    8. '_,' → logprob: -14.750021934509277
    9. ',n' → logprob: -14.750021934509277
    10. ',p' → logprob: -15.125021934509277

Token 760: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0316748283803463
    2. 'station' → logprob: -3.531674861907959
    3. 'v' → logprob: -7.031674861907959
    4. 'cur' → logprob: -7.531674861907959
    5. 'node' → logprob: -8.5316743850708
    6. ' station' → logprob: -9.0316743850708
    7. 'st' → logprob: -9.6566743850708
    8. ' u' → logprob: -9.7816743850708
    9. 'pos' → logprob: -10.1566743850708
    10. 'curr' → logprob: -11.2816743850708

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ' ,' → logprob: -12.250008583068848
    3. ',u' → logprob: -12.750008583068848
    4. '_,' → logprob: -15.250008583068848
    5. ',v' → logprob: -15.750008583068848
    6. ',c' → logprob: -16.37500762939453
    7. 'u' → logprob: -16.75000762939453
    8. ',user' → logprob: -17.50000762939453
    9. ',t' → logprob: -17.87500762939453
    10. ',w' → logprob: -17.87500762939453

Token 762: ' comp' (ID: 1050)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.6549058556556702
    2. 'curr' → logprob: -0.9049058556556702
    3. 'cc' → logprob: -2.7799057960510254
    4. 'comp' → logprob: -5.154905796051025
    5. 'current' → logprob: -5.154905796051025
    6. 'company' → logprob: -6.279905796051025
    7. 'cu' → logprob: -8.279906272888184
    8. 'c' → logprob: -9.904906272888184
    9. 'com' → logprob: -10.154906272888184
    10. 'co' → logprob: -10.279906272888184

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006679982761852443
    2. ',current' → logprob: -7.750668048858643
    3. 'any' → logprob: -8.625667572021484
    4. '_,' → logprob: -10.375667572021484
    5. 'current' → logprob: -11.250667572021484
    6. ',_' → logprob: -12.500667572021484
    7. 'y' → logprob: -13.000667572021484
    8. ' ,' → logprob: -13.250667572021484
    9. '_current' → logprob: -13.625667572021484
    10. 'ny' → logprob: -14.000667572021484

Token 764: ' dd' (ID: 18636)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6193176507949829
    2. 'd' → logprob: -0.8693176507949829
    3. 'dis' → logprob: -4.494317531585693
    4. 'length' → logprob: -4.869317531585693
    5. 'cur' → logprob: -5.369317531585693
    6. 'seg' → logprob: -5.494317531585693
    7. 'di' → logprob: -5.744317531585693
    8. 'dd' → logprob: -6.119317531585693
    9. 'curr' → logprob: -6.244317531585693
    10. 'len' → logprob: -6.369317531585693

Token 765: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.09232154488563538
    2. ' =' → logprob: -2.9673216342926025
    3. '=' → logprob: -4.217321395874023
    4. ',' → logprob: -4.717321395874023
    5. '_' → logprob: -5.467321395874023
    6. 'istance' → logprob: -5.717321395874023
    7. 'i' → logprob: -5.717321395874023
    8. '_in' → logprob: -7.092321395874023
    9. 'is' → logprob: -7.342321395874023
    10. '_i' → logprob: -8.592321395874023

Token 766: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -2.165027217415627e-05
    2. ' heap' → logprob: -10.750021934509277
    3. 'he' → logprob: -15.625021934509277
    4. '(heap' → logprob: -18.12502098083496
    5. '.heap' → logprob: -20.00002098083496
    6. '_heap' → logprob: -20.75002098083496
    7. '
' → logprob: -21.37502098083496
    8. 'queue' → logprob: -22.75002098083496
    9. '   ' → logprob: -23.50002098083496
    10. 'Heap' → logprob: -24.62502098083496

Token 767: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.004741264507174492
    2. 'app' → logprob: -5.504741191864014
    3. 'p' → logprob: -7.879741191864014
    4. '       ' → logprob: -9.879741668701172
    5. 'ap' → logprob: -10.004741668701172
    6. '           ' → logprob: -10.254741668701172
    7. '=' → logprob: -10.379741668701172
    8. ' =' → logprob: -10.504741668701172
    9. 'op' → logprob: -10.504741668701172
    10. 'u' → logprob: -10.879741668701172

Token 768: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.21749891340732574
    2. 'q' → logprob: -1.9674988985061646
    3. '.pop' → logprob: -3.967499017715454
    4. 'he' → logprob: -3.967499017715454
    5. 'pop' → logprob: -4.967498779296875
    6. 'app' → logprob: -5.342498779296875
    7. '       ' → logprob: -7.092498779296875
    8. 'op' → logprob: -7.342498779296875
    9. ' he' → logprob: -7.717498779296875
    10. '.' → logprob: -7.717498779296875

Token 769: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.966313281329349e-05
    2. 'ap' → logprob: -10.500049591064453
    3. 'pp' → logprob: -10.875049591064453
    4. '```' → logprob: -13.500049591064453
    5. 'appe' → logprob: -14.250049591064453
    6. '[' → logprob: -14.750049591064453
    7. 'appen' → logprob: -15.750049591064453
    8. 'q' → logprob: -16.375049591064453
    9. 'a' → logprob: -16.625049591064453
    10. '``' → logprob: -16.750049591064453

Token 770: 'op' (ID: 467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.1485976278781891
    2. 'ush' → logprob: -2.3985977172851562
    3. 'op' → logprob: -3.1485977172851562
    4. 'ap' → logprob: -5.773597717285156
    5. 'pp' → logprob: -7.273597717285156
    6. 'q' → logprob: -8.148597717285156
    7. 'p' → logprob: -9.523597717285156
    8. 'pop' → logprob: -9.773597717285156
    9. 'push' → logprob: -10.148597717285156
    10. 'ul' → logprob: -10.648597717285156

Token 771: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0006439301068894565
    2. '(' → logprob: -7.375643730163574
    3. '(
' → logprob: -11.375643730163574
    4. 'pq' → logprob: -12.625643730163574
    5. ' (' → logprob: -14.500643730163574
    6. ')' → logprob: -14.625643730163574
    7. ',' → logprob: -15.000643730163574
    8. '(q' → logprob: -15.000643730163574
    9. '   ' → logprob: -15.250643730163574
    10. ',p' → logprob: -15.500643730163574

Token 772: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.292907877039397e-06
    2. '_q' → logprob: -13.75000286102295
    3. ')' → logprob: -14.00000286102295
    4. 'u' → logprob: -14.12500286102295
    5. ')
' → logprob: -14.75000286102295
    6. '_' → logprob: -15.87500286102295
    7. '	q' → logprob: -17.500003814697266
    8. 'pq' → logprob: -17.750003814697266
    9. '_)
' → logprob: -18.000003814697266
    10. 'Q' → logprob: -18.250003814697266

Token 773: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007386347278952599
    2. ')
' → logprob: -7.375738620758057
    3. '):
' → logprob: -9.500739097595215
    4. '           ' → logprob: -10.750739097595215
    5. '):' → logprob: -12.250739097595215
    6. '   ' → logprob: -13.250739097595215
    7. ')#' → logprob: -13.375739097595215
    8. '       ' → logprob: -13.500739097595215
    9. '),' → logprob: -14.375739097595215
    10. ')
' → logprob: -14.500739097595215

Token 774: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013032105751335621
    2. 'if' → logprob: -4.513031959533691
    3. ' if' → logprob: -6.638031959533691
    4. '       ' → logprob: -7.763031959533691
    5. '```' → logprob: -8.513031959533691
    6. '   ' → logprob: -10.263031959533691
    7. '            
' → logprob: -12.138031959533691
    8. '               ' → logprob: -13.388031959533691
    9. '<|end|>' → logprob: -13.388031959533691
    10. '
' → logprob: -14.513031959533691

Token 775: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01497202180325985
    2. '           ' → logprob: -4.26497220993042
    3. ' if' → logprob: -7.13997220993042
    4. '```' → logprob: -11.764971733093262
    5. 'for' → logprob: -12.889971733093262
    6. '            
' → logprob: -13.139971733093262
    7. '       ' → logprob: -13.514971733093262
    8. '   ' → logprob: -14.139971733093262
    9. '
' → logprob: -14.389971733093262
    10. '	if' → logprob: -16.264972686767578

Token 776: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09197648614645004
    2. 'u' → logprob: -2.7169764041900635
    3. 'cost' → logprob: -3.8419764041900635
    4. ' dist' → logprob: -8.966976165771484
    5. '(u' → logprob: -9.216976165771484
    6. '(dist' → logprob: -9.341976165771484
    7. '(cost' → logprob: -11.466976165771484
    8. ' u' → logprob: -12.466976165771484
    9. 'not' → logprob: -12.716976165771484
    10. 'd' → logprob: -12.716976165771484

Token 777: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.500000953674316
    3. 'u' → logprob: -15.500000953674316
    4. '```' → logprob: -17.5
    5. '<u' → logprob: -18.625
    6. '(u' → logprob: -19.25
    7. 'cost' → logprob: -19.25
    8. '[s' → logprob: -20.125
    9. ' [' → logprob: -20.125
    10. '[user' → logprob: -20.25

Token 778: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.5604751706123352
    2. '][' → logprob: -0.9354751706123352
    3. '[' → logprob: -3.3104751110076904
    4. ']' → logprob: -10.18547534942627
    5. '[user' → logprob: -10.56047534942627
    6. ' ][' → logprob: -11.43547534942627
    7. 'u' → logprob: -11.81047534942627
    8. '[cur' → logprob: -11.93547534942627
    9. ']==' → logprob: -11.93547534942627
    10. '```' → logprob: -11.93547534942627

Token 779: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.9361264946837764e-07
    2. ' comp' → logprob: -16.25
    3. '	comp' → logprob: -17.75
    4. '[' → logprob: -20.625
    5. '(comp' → logprob: -20.875
    6. '
' → logprob: -20.875
    7. '.comp' → logprob: -21.75
    8. '   ' → logprob: -21.875
    9. 'Comp' → logprob: -22.5
    10. '_comp' → logprob: -22.625

Token 780: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002870730822905898
    2. '[' → logprob: -5.877870559692383
    3. ']' → logprob: -10.127870559692383
    4. ' ][' → logprob: -12.252870559692383
    5. ']][' → logprob: -12.252870559692383
    6. ']==' → logprob: -12.877870559692383
    7. '           ' → logprob: -13.002870559692383
    8. '```' → logprob: -13.002870559692383
    9. '"][' → logprob: -13.377870559692383
    10. 'dd' → logprob: -13.877870559692383

Token 781: 'dd' (ID: 1183)
  Prédit: 'dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -1.0280383548888494e-06
    2. ' dd' → logprob: -13.875000953674316
    3. '(dd' → logprob: -17.125001907348633
    4. '_dd' → logprob: -19.000001907348633
    5. '
' → logprob: -20.125001907348633
    6. ' ' → logprob: -20.375001907348633
    7. '   ' → logprob: -20.625001907348633
    8. 'ddd' → logprob: -21.000001907348633
    9. 'ddl' → logprob: -21.125001907348633
    10. '  ' → logprob: -22.000001907348633

Token 782: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15774789452552795
    2. ']<' → logprob: -2.407747983932495
    3. ']!=' → logprob: -2.907747983932495
    4. '<' → logprob: -6.907747745513916
    5. ']>' → logprob: -8.282748222351074
    6. '!=' → logprob: -10.782748222351074
    7. ' <' → logprob: -11.907748222351074
    8. '<u' → logprob: -12.032748222351074
    9. '>' → logprob: -12.407748222351074
    10. 'continue' → logprob: -12.907748222351074

Token 783: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.035907309502363205
    2. '!=' → logprob: -3.53590726852417
    3. ' <' → logprob: -5.41090726852417
    4. ' !=' → logprob: -6.91090726852417
    5. '<u' → logprob: -8.160907745361328
    6. '<int' → logprob: -8.910907745361328
    7. '<v' → logprob: -9.285907745361328
    8. '<w' → logprob: -10.910907745361328
    9. '<ll' → logprob: -11.285907745361328
    10. '<n' → logprob: -11.285907745361328

Token 784: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -9.615255839889869e-05
    2. ' cost' → logprob: -9.250096321105957
    3. '(cost' → logprob: -20.62509536743164
    4. '   ' → logprob: -22.75009536743164
    5. '_cost' → logprob: -23.00009536743164
    6. ' ' → logprob: -23.62509536743164
    7. '.cost' → logprob: -24.00009536743164
    8. 'code' → logprob: -24.37509536743164
    9. '-cost' → logprob: -25.00009536743164
    10. 'Cost' → logprob: -25.12509536743164

Token 785: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11901776492595673
    2. ':
' → logprob: -2.2440178394317627
    3. '           ' → logprob: -5.744017601013184
    4. '               ' → logprob: -6.619017601013184
    5. 'continue' → logprob: -7.119017601013184
    6. '       ' → logprob: -7.744017601013184
    7. '   ' → logprob: -8.494017601013184
    8. ' continue' → logprob: -9.369017601013184
    9. '	continue' → logprob: -9.619017601013184
    10. '_continue' → logprob: -11.619017601013184

Token 786: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0078092580661177635
    2. 'continue' → logprob: -5.007809162139893
    3. ' continue' → logprob: -7.257809162139893
    4. '           ' → logprob: -8.25780963897705
    5. '	continue' → logprob: -9.63280963897705
    6. '   ' → logprob: -10.38280963897705
    7. '       ' → logprob: -10.75780963897705
    8. '_continue' → logprob: -12.25780963897705
    9. '```' → logprob: -13.00780963897705
    10. '			' → logprob: -13.38280963897705

Token 787: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.08933975547552109
    2. '               ' → logprob: -2.5893397331237793
    3. '           ' → logprob: -4.839339733123779
    4. ' continue' → logprob: -6.089339733123779
    5. '	continue' → logprob: -8.714340209960938
    6. '   ' → logprob: -11.089340209960938
    7. '_continue' → logprob: -11.214340209960938
    8. '                   ' → logprob: -11.714340209960938
    9. '       ' → logprob: -11.964340209960938
    10. '		' → logprob: -12.714340209960938

Token 788: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1533985733985901
    2. 'for' → logprob: -2.7783985137939453
    3. '       ' → logprob: -3.5283985137939453
    4. ' for' → logprob: -3.9033985137939453
    5. 'if' → logprob: -4.403398513793945
    6. '<|end|>' → logprob: -4.903398513793945
    7. '   ' → logprob: -5.028398513793945
    8. ' if' → logprob: -6.653398513793945
    9. '```' → logprob: -6.778398513793945
    10. '
' → logprob: -7.653398513793945

Token 789: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02799055352807045
    2. '       ' → logprob: -4.777990341186523
    3. '```' → logprob: -4.777990341186523
    4. 'if' → logprob: -5.402990341186523
    5. '<|end|>' → logprob: -6.152990341186523
    6. ' if' → logprob: -6.277990341186523
    7. ' for' → logprob: -7.152990341186523
    8. 'for' → logprob: -7.277990341186523
    9. '   ' → logprob: -7.902990341186523
    10. '	       ' → logprob: -9.652990341186523

Token 790: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16648854315280914
    2. '           ' → logprob: -1.916488528251648
    3. ' for' → logprob: -5.6664886474609375
    4. 'if' (adapté à ' if') → logprob: -6.1664886474609375
    5. '       ' → logprob: -7.4164886474609375
    6. '   ' → logprob: -10.166488647460938
    7. '            
' → logprob: -11.291488647460938
    8. '```' → logprob: -11.416488647460938
    9. '	for' → logprob: -11.541488647460938
    10. ' if' → logprob: -12.041488647460938

Token 791: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00017982252757064998
    2. ' u' → logprob: -8.6251802444458
    3. '(u' → logprob: -15.3751802444458
    4. '	u' → logprob: -16.750179290771484
    5. '[u' → logprob: -18.000179290771484
    6. '   ' → logprob: -18.625179290771484
    7. 'comp' → logprob: -21.000179290771484
    8. '
' → logprob: -21.250179290771484
    9. '<u' → logprob: -21.250179290771484
    10. '(' → logprob: -21.500179290771484

Token 792: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10020806640386581
    2. '==' → logprob: -2.350208044052124
    3. ')==' → logprob: -14.975208282470703
    4. '=' → logprob: -15.100208282470703
    5. '==
' → logprob: -15.225208282470703
    6. '()==' → logprob: -15.475208282470703
    7. ']==' → logprob: -15.475208282470703
    8. ' ' → logprob: -16.475208282470703
    9. ' =' → logprob: -17.100208282470703
    10. ')' → logprob: -17.225208282470703

Token 793: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.4855663721391466e-05
    2. ' g' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.875015258789062
    4. '	g' → logprob: -18.750015258789062
    5. '
' → logprob: -19.750015258789062
    6. ' ' → logprob: -20.000015258789062
    7. '_g' → logprob: -20.125015258789062
    8. '
' → logprob: -20.125015258789062
    9. ' ' → logprob: -20.750015258789062
    10. '  ' → logprob: -21.625015258789062

Token 794: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12834122776985168
    2. ':
' → logprob: -2.1283411979675293
    3. ' and' → logprob: -6.753341197967529
    4. 'and' → logprob: -8.878341674804688
    5. '<|end|>' → logprob: -10.003341674804688
    6. '           ' → logprob: -10.878341674804688
    7. ':return' → logprob: -11.128341674804688
    8. '       ' → logprob: -12.003341674804688
    9. '               ' → logprob: -12.503341674804688
    10. '   ' → logprob: -13.003341674804688

Token 795: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.376848902320489e-05
    2. '           ' → logprob: -10.625093460083008
    3. '
' → logprob: -10.750093460083008
    4. ' return' → logprob: -11.250093460083008
    5. '                   ' → logprob: -11.250093460083008
    6. 'return' → logprob: -12.000093460083008
    7. '```' → logprob: -12.375093460083008
    8. ' break' → logprob: -13.500093460083008
    9. 'break' → logprob: -13.500093460083008
    10. '                       ' → logprob: -13.500093460083008

Token 796: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010151672904612496
    2. 'break' → logprob: -10.000101089477539
    3. 'return' → logprob: -10.250101089477539
    4. '           ' → logprob: -11.750101089477539
    5. '               ' → logprob: -11.875101089477539
    6. ' print' → logprob: -12.125101089477539
    7. '```' → logprob: -14.750101089477539
    8. '       ' → logprob: -17.25010108947754
    9. '   ' → logprob: -17.50010108947754
    10. '                   ' → logprob: -18.12510108947754

Token 797: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0024781543761491776
    2. 'cost' → logprob: -6.002478122711182
    3. '(dist' → logprob: -13.12747859954834
    4. ' cost' → logprob: -15.25247859954834
    5. 'dist' → logprob: -16.002477645874023
    6. '(' → logprob: -16.252477645874023
    7. '(f' → logprob: -18.002477645874023
    8. '(int' → logprob: -18.252477645874023
    9. '(distance' → logprob: -18.627477645874023
    10. 'int' → logprob: -19.627477645874023

Token 798: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.028196170926094055
    2. ')' → logprob: -4.278196334838867
    3. '               ' → logprob: -4.278196334838867
    4. ')
' → logprob: -10.278196334838867
    5. '           ' → logprob: -11.028196334838867
    6. '                   ' → logprob: -11.528196334838867
    7. ')return' → logprob: -12.403196334838867
    8. '              ' → logprob: -14.903196334838867
    9. ')`
' → logprob: -15.028196334838867
    10. '                       ' → logprob: -15.403196334838867

Token 799: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0338761992752552
    2. '           ' → logprob: -3.4088761806488037
    3. 'continue' → logprob: -9.533876419067383
    4. '                   ' → logprob: -10.033876419067383
    5. ' continue' → logprob: -10.283876419067383
    6. '       ' → logprob: -10.283876419067383
    7. '   ' → logprob: -11.783876419067383
    8. '```' → logprob: -11.908876419067383
    9. '<|end|>' → logprob: -12.033876419067383
    10. '                       ' → logprob: -12.158876419067383

Token 800: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5246680378913879
    2. 'break' (adapté à ' break') → logprob: -1.0246679782867432
    3. 'return' → logprob: -3.024667978286743
    4. ' break' → logprob: -7.274668216705322
    5. '           ' → logprob: -10.399667739868164
    6. ' return' → logprob: -10.524667739868164
    7. 'continue' → logprob: -12.274667739868164
    8. '	break' → logprob: -13.024667739868164
    9. '       ' → logprob: -14.524667739868164
    10. '			' → logprob: -15.274667739868164

Token 801: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02193431556224823
    2. '       ' → logprob: -4.021934509277344
    3. 'else' → logprob: -6.271934509277344
    4. 'for' → logprob: -6.646934509277344
    5. '   ' → logprob: -8.271934509277344
    6. ' for' → logprob: -9.271934509277344
    7. '```' → logprob: -9.646934509277344
    8. '            
' → logprob: -10.146934509277344
    9. '<|end|>' → logprob: -10.771934509277344
    10. '          ' → logprob: -10.896934509277344

Token 802: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1938609480857849
    2. '       ' → logprob: -1.8188610076904297
    3. 'for' → logprob: -4.56886100769043
    4. '   ' → logprob: -6.19386100769043
    5. '```' → logprob: -7.19386100769043
    6. ' for' → logprob: -7.56886100769043
    7. 'else' → logprob: -8.81886100769043
    8. 'continue' → logprob: -10.06886100769043
    9. '        
' → logprob: -10.69386100769043
    10. '            
' → logprob: -11.06886100769043

Token 803: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06585507094860077
    2. '           ' → logprob: -2.815855026245117
    3. ' for' → logprob: -5.690855026245117
    4. '       ' → logprob: -7.690855026245117
    5. '   ' → logprob: -10.565855026245117
    6. '	for' → logprob: -11.440855026245117
    7. '```' → logprob: -11.815855026245117
    8. '            
' → logprob: -13.690855026245117
    9. '
' → logprob: -15.565855026245117
    10. '        
' → logprob: -15.565855026245117

Token 804: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6944822072982788
    2. '(v' → logprob: -0.6944822072982788
    3. ' v' → logprob: -7.444482326507568
    4. 'vv' → logprob: -8.06948184967041
    5. ' (' → logprob: -8.19448184967041
    6. '(u' → logprob: -10.31948184967041
    7. 'w' → logprob: -10.44448184967041
    8. '(' → logprob: -10.69448184967041
    9. 'to' → logprob: -11.69448184967041
    10. 'vw' → logprob: -11.94448184967041

Token 805: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7344902157783508
    2. ',w' → logprob: -0.7344902157783508
    3. ',d' → logprob: -3.234490156173706
    4. ',u' → logprob: -7.734490394592285
    5. ',v' → logprob: -7.984490394592285
    6. ' ,' → logprob: -8.484490394592285
    7. 'w' → logprob: -10.359490394592285
    8. '_,' → logprob: -10.609490394592285
    9. ',n' → logprob: -10.859490394592285
    10. ',c' → logprob: -11.234490394592285

Token 806: 'line' (ID: 1137)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.59018474817276
    2. ',' → logprob: -0.96518474817276
    3. ',d' → logprob: -3.2151846885681152
    4. ',c' → logprob: -5.090184688568115
    5. ',u' → logprob: -5.090184688568115
    6. ',e' → logprob: -5.340184688568115
    7. ',l' → logprob: -6.465184688568115
    8. ',in' → logprob: -6.715184688568115
    9. ',w' → logprob: -7.215184688568115
    10. ' ,' → logprob: -7.465184688568115

Token 807: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29501739144325256
    2. ',d' → logprob: -2.1700174808502197
    3. ',v' → logprob: -2.4200174808502197
    4. ',c' → logprob: -4.045017242431641
    5. ',line' → logprob: -4.045017242431641
    6. ',u' → logprob: -5.670017242431641
    7. ',w' → logprob: -5.795017242431641
    8. ',l' → logprob: -6.045017242431641
    9. ',t' → logprob: -6.170017242431641
    10. ',x' → logprob: -6.545017242431641

Token 808: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.4686702787876129
    2. 'comp' → logprob: -1.3436702489852905
    3. 'c' → logprob: -2.34367036819458
    4. 'line' → logprob: -5.21867036819458
    5. 'ccc' → logprob: -5.84367036819458
    6. 'company' → logprob: -6.09367036819458
    7. 'co' → logprob: -6.59367036819458
    8. 'com' → logprob: -6.71867036819458
    9. 'cmp' → logprob: -6.71867036819458
    10. 'cost' → logprob: -7.46867036819458

Token 809: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0052373106591403484
    2. 'in' → logprob: -5.255237102508545
    3. '   ' → logprob: -14.255237579345703
    4. ' ' → logprob: -14.380237579345703
    5. 'v' → logprob: -15.005237579345703
    6. '	in' → logprob: -15.005237579345703
    7. '       ' → logprob: -15.505237579345703
    8. '           ' → logprob: -15.755237579345703
    9. 'd' → logprob: -15.880237579345703
    10. 'n' → logprob: -16.005237579345703

Token 810: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.048592593520879745
    2. ' edges' → logprob: -3.0485925674438477
    3. '(edges' → logprob: -13.048592567443848
    4. '.edges' → logprob: -13.798592567443848
    5. '```' → logprob: -13.798592567443848
    6. '[' → logprob: -15.173592567443848
    7. '_edges' → logprob: -15.173592567443848
    8. '[(' → logprob: -16.173593521118164
    9. '   ' → logprob: -16.423593521118164
    10. '`' → logprob: -16.798593521118164

Token 811: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.7530574849806726e-05
    2. 'u' → logprob: -10.125057220458984
    3. '(u' → logprob: -12.375057220458984
    4. 'in' → logprob: -12.875057220458984
    5. ':' → logprob: -13.000057220458984
    6. ' in' → logprob: -13.250057220458984
    7. '           ' → logprob: -13.500057220458984
    8. ',u' → logprob: -13.750057220458984
    9. '```' → logprob: -14.000057220458984
    10. '[' → logprob: -14.250057220458984

Token 812: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31738030910491943
    2. '):
' → logprob: -1.3173803091049194
    3. ':' → logprob: -5.567380428314209
    4. ']:' → logprob: -9.31737995147705
    5. ':
' → logprob: -9.94237995147705
    6. ' in' → logprob: -10.19237995147705
    7. ']:
' → logprob: -10.44237995147705
    8. '):
' → logprob: -11.31737995147705
    9. '):

' → logprob: -11.31737995147705
    10. ')' → logprob: -11.44237995147705

Token 813: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003654956351965666
    2. '           ' → logprob: -6.128654956817627
    3. ' if' → logprob: -7.878654956817627
    4. ' new' → logprob: -8.378654479980469
    5. '```' → logprob: -8.628654479980469
    6. '                
' → logprob: -8.878654479980469
    7. ' next' → logprob: -9.128654479980469
    8. '                   ' → logprob: -9.878654479980469
    9. '	           ' → logprob: -9.878654479980469
    10. ' cost' → logprob: -10.128654479980469

Token 814: ' if' (ID: 538)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.547998309135437
    2. ' if' → logprob: -1.672998309135437
    3. ' next' → logprob: -1.672998309135437
    4. 'new' → logprob: -1.922998309135437
    5. ' new' → logprob: -2.2979984283447266
    6. 'if' (adapté à ' if') → logprob: -2.6729984283447266
    7. '                   ' → logprob: -3.4229984283447266
    8. '               ' → logprob: -3.6729984283447266
    9. ' nxt' → logprob: -4.547998428344727
    10. ' nd' → logprob: -4.797998428344727

Token 815: ' comp' (ID: 1050)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.3151279091835022
    2. 'comp' → logprob: -1.3151278495788574
    3. ' comp' → logprob: -6.690127849578857
    4. ' cc' → logprob: -7.440127849578857
    5. '   ' → logprob: -11.065128326416016
    6. '(comp' → logprob: -12.565128326416016
    7. '(cc' → logprob: -12.815128326416016
    8. '       ' → logprob: -13.315128326416016
    9. '           ' → logprob: -13.440128326416016
    10. '    ' → logprob: -13.690128326416016

Token 816: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22542650997638702
    2. '==' → logprob: -1.6004265546798706
    3. '==
' → logprob: -12.10042667388916
    4. ')==' → logprob: -12.85042667388916
    5. ']==' → logprob: -13.10042667388916
    6. ' !=' → logprob: -13.97542667388916
    7. '()==' → logprob: -14.85042667388916
    8. ' ' → logprob: -14.97542667388916
    9. '=' → logprob: -15.22542667388916
    10. ' ==
' → logprob: -15.22542667388916

Token 817: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010031944140791893
    2. 'cc' → logprob: -4.6350321769714355
    3. ' ' → logprob: -8.260031700134277
    4. ' cc' → logprob: -11.135031700134277
    5. '   ' → logprob: -14.135031700134277
    6. '(cc' → logprob: -15.072531700134277
    7. '	cc' → logprob: -15.135031700134277
    8. 'c' → logprob: -16.072532653808594
    9. '```' → logprob: -16.135032653808594
    10. '00' → logprob: -16.197532653808594

Token 818: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012661619111895561
    2. 'cc' → logprob: -4.387661457061768
    3. ' ' → logprob: -8.887661933898926
    4. ' cc' → logprob: -11.762661933898926
    5. '   ' → logprob: -13.262661933898926
    6. '(cc' → logprob: -14.762661933898926
    7. 'c' → logprob: -14.762661933898926
    8. '00' → logprob: -15.137661933898926
    9. 'v' → logprob: -15.200161933898926
    10. '	cc' → logprob: -15.450161933898926

Token 819: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31242576241493225
    2. ':
' → logprob: -2.0624258518218994
    3. ' or' → logprob: -2.3124258518218994
    4. ' and' → logprob: -3.9374258518218994
    5. '                   ' → logprob: -4.43742561340332
    6. '               ' → logprob: -5.18742561340332
    7. '                       ' → logprob: -5.81242561340332
    8. '                           ' → logprob: -7.68742561340332
    9. 'and' → logprob: -7.81242561340332
    10. '                               ' → logprob: -8.31242561340332

Token 820: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03894447535276413
    2. '               ' → logprob: -3.5389444828033447
    3. '                       ' → logprob: -5.538944244384766
    4. '                ' → logprob: -6.788944244384766
    5. '                    
' → logprob: -7.163944244384766
    6. ' if' → logprob: -7.288944244384766
    7. '                               ' → logprob: -7.288944244384766
    8. '                    ' → logprob: -8.163944244384766
    9. '                           ' → logprob: -8.288944244384766
    10. '                  ' → logprob: -9.163944244384766

Token 821: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.19142460823059082
    2. '#' (adapté à ' #') → logprob: -2.066424608230591
    3. 'next' → logprob: -4.191424369812012
    4. 'nc' → logprob: -4.816424369812012
    5. '                   ' → logprob: -5.191424369812012
    6. 'nd' → logprob: -5.191424369812012
    7. 'n' → logprob: -5.316424369812012
    8. ' new' → logprob: -5.691424369812012
    9. ' #' → logprob: -6.816424369812012
    10. '               ' → logprob: -6.816424369812012

Token 822: ' From' (ID: 7217)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.14742840826511383
    2. '#' → logprob: -2.147428512573242
    3. 'next' → logprob: -4.522428512573242
    4. 'nd' → logprob: -5.772428512573242
    5. 'if' → logprob: -6.147428512573242
    6. '                   ' → logprob: -6.147428512573242
    7. 'nc' → logprob: -7.522428512573242
    8. '               ' → logprob: -7.647428512573242
    9. 'n' → logprob: -8.022428512573242
    10. 'cost' → logprob: -9.147428512573242

Token 823: ' no' (ID: 860)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.5377223491668701
    2. 'v' → logprob: -1.4127223491668701
    3. '0' → logprob: -2.03772234916687
    4. ' cc' → logprob: -3.91272234916687
    5. ' v' → logprob: -4.412722587585449
    6. 'comp' → logprob: -5.037722587585449
    7. ' ' → logprob: -6.912722587585449
    8. 'no' → logprob: -7.537722587585449
    9. '   ' → logprob: -8.03772258758545
    10. 'any' → logprob: -8.16272258758545

Token 824: ' company' (ID: 3175)
  Prédit: ' company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.32211750745773315
    2. 'company' → logprob: -1.447117567062378
    3. ' current' → logprob: -4.072117328643799
    4. '_' → logprob: -5.447117328643799
    5. 'current' → logprob: -5.697117328643799
    6. 'comp' → logprob: -5.947117328643799
    7. '_comp' → logprob: -5.947117328643799
    8. '_company' → logprob: -6.072117328643799
    9. ' comp' → logprob: -6.197117328643799
    10. ' ' → logprob: -6.322117328643799

Token 825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7275363802909851
    2. ':' → logprob: -1.3525364398956299
    3. ':
' → logprob: -1.9775364398956299
    4. ' to' → logprob: -2.60253643989563
    5. 'to' → logprob: -4.102536201477051
    6. '                   ' → logprob: -4.602536201477051
    7. '                       ' → logprob: -4.727536201477051
    8. '               ' → logprob: -5.727536201477051
    9. '):
' → logprob: -6.227536201477051
    10. '                           ' → logprob: -6.477536201477051

Token 826: ' start' (ID: 1604)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6310687065124512
    2. ' new' → logprob: -0.8810687065124512
    3. '#' → logprob: -3.756068706512451
    4. 'next' → logprob: -4.881068706512451
    5. ' next' → logprob: -5.006068706512451
    6. '                   ' → logprob: -5.256068706512451
    7. 'n' → logprob: -5.506068706512451
    8. ' #' → logprob: -5.631068706512451
    9. '               ' → logprob: -7.381068706512451
    10. 'nc' → logprob: -8.00606918334961

Token 827: ' a' (ID: 261)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7682207822799683
    2. ' new' → logprob: -1.7682207822799683
    3. 'a' → logprob: -1.8932207822799683
    4. 'using' → logprob: -2.268220901489258
    5. ' a' → logprob: -2.893220901489258
    6. '                   ' → logprob: -3.768220901489258
    7. ' using' → logprob: -4.518220901489258
    8. 'with' → logprob: -4.893220901489258
    9. '                       ' → logprob: -5.768220901489258
    10. 'comp' → logprob: -6.018220901489258

Token 828: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.49535855650901794
    2. 'new' → logprob: -0.9953585863113403
    3. 'comp' → logprob: -4.245358467102051
    4. 'cc' → logprob: -5.745358467102051
    5. ' comp' → logprob: -7.120358467102051
    6. ' cc' → logprob: -7.120358467102051
    7. ' ' → logprob: -7.745358467102051
    8. 'company' → logprob: -8.37035846710205
    9. 'v' → logprob: -8.74535846710205
    10. ' v' → logprob: -8.74535846710205

Token 829: ' section' (ID: 7102)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.14737923443317413
    2. 'comp' → logprob: -2.522379159927368
    3. ' company' → logprob: -3.772379159927368
    4. '(' → logprob: -5.272379398345947
    5. ' (' → logprob: -5.272379398345947
    6. '_company' → logprob: -5.397379398345947
    7. '(comp' → logprob: -5.897379398345947
    8. 'trip' → logprob: -6.147379398345947
    9. '(company' → logprob: -6.147379398345947
    10. '_comp' → logprob: -6.397379398345947

Token 830: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6598984599113464
    2. '                   ' → logprob: -0.7848984599113464
    3. '                       ' → logprob: -4.909898281097412
    4. '                    
' → logprob: -5.409898281097412
    5. ',' → logprob: -5.659898281097412
    6. ':
' → logprob: -5.909898281097412
    7. ' if' → logprob: -6.409898281097412
    8. '                
' → logprob: -6.534898281097412
    9. '
' → logprob: -7.034898281097412
    10. '                        
' → logprob: -7.034898281097412

Token 831: ' company' (ID: 3175)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0032594730146229267
    2. 'd' → logprob: -6.378259658813477
    3. 'v' → logprob: -7.378259658813477
    4. '1' → logprob: -8.003259658813477
    5. ' cc' → logprob: -8.128259658813477
    6. 'comp' → logprob: -9.128259658813477
    7. 'the' → logprob: -9.878259658813477
    8. 'dd' → logprob: -10.378259658813477
    9. 'distance' → logprob: -10.628259658813477
    10. 'dist' → logprob: -10.753259658813477

Token 832: ' cc' (ID: 22988)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1857634782791138
    2. '=' → logprob: -1.5607634782791138
    3. ' =' → logprob: -1.5607634782791138
    4. 'cc' → logprob: -1.5607634782791138
    5. ' cc' → logprob: -3.185763359069824
    6. '(cc' → logprob: -4.810763359069824
    7. ' ,' → logprob: -4.935763359069824
    8. '                   ' → logprob: -6.310763359069824
    9. '_cc' → logprob: -6.810763359069824
    10. '```' → logprob: -7.060763359069824

Token 833: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09573402255773544
    2. '                   ' → logprob: -2.845734119415283
    3. '                
' → logprob: -4.345734119415283
    4. ',' → logprob: -4.970734119415283
    5. '                    
' → logprob: -5.220734119415283
    6. '                ' → logprob: -6.345734119415283
    7. '
' → logprob: -6.970734119415283
    8. '                        
' → logprob: -7.345734119415283
    9. ' 
' → logprob: -7.470734119415283
    10. '                       ' → logprob: -7.595734119415283

Token 834: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.26122984290122986
    2. '1' → logprob: -2.2612297534942627
    3. 'd' → logprob: -2.3862297534942627
    4. 'distance' → logprob: -3.6362297534942627
    5. 'new' → logprob: -5.886229991912842
    6. 'dd' → logprob: -6.136229991912842
    7. 'cost' → logprob: -7.136229991912842
    8. '0' → logprob: -7.761229991912842
    9. 'fare' → logprob: -8.386229515075684
    10. ' dist' → logprob: -8.761229515075684

Token 835: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9303426742553711
    2. ' =' → logprob: -1.305342674255371
    3. '=' → logprob: -1.555342674255371
    4. ' ' → logprob: -2.180342674255371
    5. '+' → logprob: -5.305342674255371
    6. '0' → logprob: -6.555342674255371
    7. 'd' → logprob: -6.680342674255371
    8. ' +' → logprob: -7.430342674255371
    9. ' +=' → logprob: -7.680342674255371
    10. '                   ' → logprob: -7.930342674255371

Token 836: 'line' (ID: 1137)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.10941547155380249
    2. ' =' → logprob: -3.7344155311584473
    3. '=' → logprob: -3.8594155311584473
    4. '_line' → logprob: -4.359415531158447
    5. 'line' → logprob: -4.609415531158447
    6. '_' → logprob: -4.734415531158447
    7. '+' → logprob: -4.859415531158447
    8. ' +' → logprob: -5.484415531158447
    9. '                   ' → logprob: -5.734415531158447
    10. '=line' → logprob: -5.859415531158447

Token 837: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11212784051895142
    2. ' if' → logprob: -3.1121277809143066
    3. '                   ' → logprob: -3.1121277809143066
    4. 'if' → logprob: -5.612127780914307
    5. '                
' → logprob: -5.862127780914307
    6. '                ' → logprob: -5.987127780914307
    7. ',' → logprob: -6.112127780914307
    8. '                    
' → logprob: -6.612127780914307
    9. 'token' → logprob: -7.362127780914307
    10. ' ' → logprob: -7.737127780914307

Token 838: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03320910036563873
    2. '                   ' → logprob: -3.6582090854644775
    3. '                
' → logprob: -5.908209323883057
    4. '                    
' → logprob: -6.408209323883057
    5. ' if' → logprob: -7.283209323883057
    6. '                       ' → logprob: -8.033208847045898
    7. ',' → logprob: -8.158208847045898
    8. ' 
' → logprob: -8.283208847045898
    9. '                        
' → logprob: -8.783208847045898
    10. '                ' → logprob: -8.908208847045898

Token 839: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.11148460954427719
    2. 'if' → logprob: -2.4864845275878906
    3. 'next' → logprob: -4.861484527587891
    4. 'nd' → logprob: -5.736484527587891
    5. '                   ' → logprob: -5.861484527587891
    6. ' new' → logprob: -6.236484527587891
    7. 'cost' → logprob: -6.361484527587891
    8. '               ' → logprob: -6.736484527587891
    9. 'n' → logprob: -6.861484527587891
    10. 'nc' → logprob: -7.111484527587891

Token 840: '_dist' (ID: 37968)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.07545766979455948
    2. 'cost' → logprob: -3.0754575729370117
    3. '_comp' → logprob: -3.8254575729370117
    4. '_dist' → logprob: -5.575457572937012
    5. 'comp' → logprob: -7.325457572937012
    6. 'dist' → logprob: -9.075457572937012
    7. '_c' → logprob: -9.950457572937012
    8. '_' → logprob: -10.575457572937012
    9. '_d' → logprob: -10.825457572937012
    10. '_distance' → logprob: -11.450457572937012

Token 841: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7012578248977661
    2. ' =' → logprob: -0.7012578248977661
    3. '_in' → logprob: -4.826257705688477
    4. '_' → logprob: -11.076257705688477
    5. '=_' → logprob: -11.076257705688477
    6. '_=' → logprob: -11.451257705688477
    7. '```' → logprob: -12.826257705688477
    8. ')' → logprob: -13.076257705688477
    9. ' ' → logprob: -13.076257705688477
    10. '   ' → logprob: -13.201257705688477

Token 842: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3856492842023727e-06
    2. ' d' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.500001907348633
    4. '                   ' → logprob: -17.750001907348633
    5. '	d' → logprob: -17.875001907348633
    6. '               ' → logprob: -18.000001907348633
    7. '           ' → logprob: -18.375001907348633
    8. 'dist' → logprob: -18.875001907348633
    9. '1' → logprob: -19.250001907348633
    10. '0' → logprob: -20.250001907348633

Token 843: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -7.874882430769503e-05
    2. 'd' → logprob: -9.750079154968262
    3. '_line' → logprob: -11.750079154968262
    4. '[line' → logprob: -12.250079154968262
    5. '[d' → logprob: -12.750079154968262
    6. '=d' → logprob: -14.000079154968262
    7. 'ine' → logprob: -14.500079154968262
    8. ' d' → logprob: -14.500079154968262
    9. '[' → logprob: -14.625079154968262
    10. '_d' → logprob: -15.000079154968262

Token 844: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09255694597959518
    2. '+' → logprob: -3.342556953430176
    3. '               ' → logprob: -3.842556953430176
    4. '<|end|>' → logprob: -4.717556953430176
    5. '                   ' → logprob: -5.217556953430176
    6. 'new' → logprob: -5.467556953430176
    7. '
' → logprob: -6.092556953430176
    8. '                
' → logprob: -6.342556953430176
    9. ' 
' → logprob: -6.467556953430176
    10. ' +' → logprob: -7.092556953430176

Token 845: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005002955440431833
    2. ' if' → logprob: -6.255002975463867
    3. '                   ' → logprob: -6.630002975463867
    4. 'if' → logprob: -6.755002975463867
    5. '                
' → logprob: -9.005002975463867
    6. '<|end|>' → logprob: -9.005002975463867
    7. '```' → logprob: -9.255002975463867
    8. 'new' → logprob: -9.880002975463867
    9. '                ' → logprob: -10.130002975463867
    10. '
' → logprob: -10.505002975463867

Token 846: ' f' (ID: 285)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6393964290618896
    2. 'new' → logprob: -0.7643964290618896
    3. 'base' → logprob: -6.639396667480469
    4. 'cost' → logprob: -7.014396667480469
    5. 'additional' → logprob: -7.264396667480469
    6. 'add' → logprob: -7.389396667480469
    7. 'fare' → logprob: -7.389396667480469
    8. '#' → logprob: -7.389396667480469
    9. 'increment' → logprob: -8.014396667480469
    10. 'next' → logprob: -8.264396667480469

Token 847: ' =' (ID: 314)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3464760482311249
    2. 'are' → logprob: -1.3464760780334473
    3. '_new' → logprob: -4.471476078033447
    4. 'cost' → logprob: -4.596476078033447
    5. 'ares' → logprob: -5.596476078033447
    6. 'or' → logprob: -6.096476078033447
    7. ' new' → logprob: -6.471476078033447
    8. '_cost' → logprob: -6.971476078033447
    9. ' =' → logprob: -8.096475601196289
    10. '=' → logprob: -8.096475601196289

Token 848: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.02165926992893219
    2. 'p' → logprob: -4.8966593742370605
    3. 'cost' → logprob: -5.1466593742370605
    4. ' fare' → logprob: -5.5216593742370605
    5. 'dist' → logprob: -5.7716593742370605
    6. '0' → logprob: -8.271658897399902
    7. ' p' → logprob: -9.021658897399902
    8. 'fa' → logprob: -9.646658897399902
    9. ' dist' → logprob: -9.709158897399902
    10. 'fair' → logprob: -9.771658897399902

Token 849: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -4.167648876318708e-05
    2. '[' → logprob: -10.500041961669922
    3. '[f' → logprob: -12.500041961669922
    4. '[_' → logprob: -12.625041961669922
    5. '[t' → logprob: -13.625041961669922
    6. '```' → logprob: -13.750041961669922
    7. '_' → logprob: -14.250041961669922
    8. 'tables' → logprob: -14.625041961669922
    9. '_tabs' → logprob: -14.625041961669922
    10. 's' → logprob: -14.750041961669922

Token 850: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003872974484693259
    2. 'cc' → logprob: -7.875387191772461
    3. '```' → logprob: -13.500387191772461
    4. ' [' → logprob: -14.000387191772461
    5. '=' → logprob: -14.125387191772461
    6. '[c' → logprob: -14.375387191772461
    7. 'comp' → logprob: -14.625387191772461
    8. '(cc' → logprob: -15.125387191772461
    9. ' cc' → logprob: -15.250387191772461
    10. '[i' → logprob: -15.375387191772461

Token 851: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -3.128163257315464e-07
    2. ' cc' → logprob: -15.25
    3. '	cc' → logprob: -17.25
    4. '_cc' → logprob: -18.0
    5. '[' → logprob: -18.375
    6. 'c' → logprob: -18.5
    7. '(cc' → logprob: -18.75
    8. '```' → logprob: -19.5
    9. '0' → logprob: -20.875
    10. '   ' → logprob: -21.125

Token 852: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08079429715871811
    2. '[new' → logprob: -2.580794334411621
    3. ']' → logprob: -6.705794334411621
    4. 'new' → logprob: -8.205794334411621
    5. '[' → logprob: -8.330794334411621
    6. ' ][' → logprob: -9.205794334411621
    7. ']
' → logprob: -11.455794334411621
    8. '```' → logprob: -11.705794334411621
    9. ')[' → logprob: -12.455794334411621
    10. '
' → logprob: -12.580794334411621

Token 853: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.0921942703134846e-05
    2. 'd' → logprob: -12.00001049041748
    3. '[new' → logprob: -13.37501049041748
    4. '
' → logprob: -14.00001049041748
    5. ' new' → logprob: -14.25001049041748
    6. 'min' → logprob: -14.50001049041748
    7. 'int' → logprob: -15.00001049041748
    8. 'f' → logprob: -15.50001049041748
    9. 'p' → logprob: -16.000011444091797
    10. '```' → logprob: -16.875011444091797

Token 854: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.02979828231036663
    2. 'dist' → logprob: -3.5297982692718506
    3. 'ist' → logprob: -10.77979850769043
    4. 'Dist' → logprob: -11.52979850769043
    5. 'new' → logprob: -11.90479850769043
    6. '```' → logprob: -12.90479850769043
    7. '[' → logprob: -13.15479850769043
    8. '	dist' → logprob: -13.40479850769043
    9. ']' → logprob: -13.90479850769043
    10. '[new' → logprob: -14.27979850769043

Token 855: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005147866904735565
    2. ']-' → logprob: -7.875514984130859
    3. ' ]' → logprob: -9.12551498413086
    4. ']
' → logprob: -10.87551498413086
    5. '<|end|>' → logprob: -13.25051498413086
    6. '])' → logprob: -13.62551498413086
    7. '-' → logprob: -14.12551498413086
    8. ']+' → logprob: -14.37551498413086
    9. ']]' → logprob: -14.62551498413086
    10. ']

' → logprob: -15.00051498413086

Token 856: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06279502063989639
    2. '                   ' → logprob: -2.9377949237823486
    3. ' if' → logprob: -5.937795162200928
    4. '<|end|>' → logprob: -6.812795162200928
    5. '                
' → logprob: -6.937795162200928
    6. 'if' → logprob: -7.437795162200928
    7. '                    
' → logprob: -7.937795162200928
    8. '                ' → logprob: -8.06279468536377
    9. ')' → logprob: -8.18779468536377
    10. '```' → logprob: -8.18779468536377

Token 857: ' total' (ID: 3609)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0254643727093935
    2. 'if' → logprob: -4.4004645347595215
    3. ' new' → logprob: -4.9004645347595215
    4. '               ' → logprob: -6.5254645347595215
    5. '                   ' → logprob: -6.7754645347595215
    6. 'total' (adapté à ' total') → logprob: -6.7754645347595215
    7. 'next' → logprob: -6.9004645347595215
    8. ' if' → logprob: -8.025464057922363
    9. 'additional' → logprob: -9.025464057922363
    10. 'n' → logprob: -10.150464057922363

Token 858: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0037365413736552
    2. 'cost' → logprob: -6.12873649597168
    3. '=' → logprob: -7.25373649597168
    4. ' =' → logprob: -7.25373649597168
    5. '_' → logprob: -9.75373649597168
    6. 'Cost' → logprob: -10.50373649597168
    7. ' cost' → logprob: -10.75373649597168
    8. '_COST' → logprob: -11.25373649597168
    9. '_price' → logprob: -12.87873649597168
    10. '+' → logprob: -12.87873649597168

Token 859: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132711946964264
    2. '=' → logprob: -1.313271164894104
    3. '+' → logprob: -12.188271522521973
    4. ' +' → logprob: -13.063271522521973
    5. ')' → logprob: -13.938271522521973
    6. ' =
' → logprob: -15.063271522521973
    7. ' +=' → logprob: -15.313271522521973
    8. ',' → logprob: -15.938271522521973
    9. ' ' → logprob: -16.063270568847656
    10. '```' → logprob: -16.063270568847656

Token 860: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.003601974807679653
    2. ' cost' → logprob: -5.628602027893066
    3. '   ' → logprob: -13.753602027893066
    4. '                   ' → logprob: -15.378602027893066
    5. '(cost' → logprob: -15.878602027893066
    6. '               ' → logprob: -16.12860107421875
    7. '
' → logprob: -16.62860107421875
    8. 'dist' → logprob: -17.00360107421875
    9. '           ' → logprob: -17.12860107421875
    10. 'price' → logprob: -17.25360107421875

Token 861: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.474165678024292
    2. '+' → logprob: -0.974165678024292
    3. '+
' → logprob: -9.849165916442871
    4. ' +
' → logprob: -10.599165916442871
    5. '+c' → logprob: -12.974165916442871
    6. '+d' → logprob: -13.224165916442871
    7. '+s' → logprob: -13.974165916442871
    8. '+b' → logprob: -14.224165916442871
    9. '+w' → logprob: -14.474165916442871
    10. '+h' → logprob: -14.724165916442871

Token 862: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.008800579234957695
    2. 'p' → logprob: -4.758800506591797
    3. ' f' → logprob: -9.258800506591797
    4. 'c' → logprob: -10.383800506591797
    5. 'fare' → logprob: -10.633800506591797
    6. '
' → logprob: -12.633800506591797
    7. '   ' → logprob: -12.633800506591797
    8. '(f' → logprob: -12.758800506591797
    9. 'new' → logprob: -12.758800506591797
    10. ' p' → logprob: -12.883800506591797

Token 863: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07094845175743103
    2. ' if' → logprob: -3.945948362350464
    3. '<|end|>' → logprob: -4.070948600769043
    4. '                   ' → logprob: -4.445948600769043
    5. '
' → logprob: -4.570948600769043
    6. ')' → logprob: -5.945948600769043
    7. '                
' → logprob: -6.195948600769043
    8. '<|end|>' → logprob: -6.695948600769043
    9. ' 
' → logprob: -7.320948600769043
    10. '                ' → logprob: -7.445948600769043

Token 864: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028473353013396263
    2. '                   ' → logprob: -4.778473377227783
    3. ' if' → logprob: -5.028473377227783
    4. '```' → logprob: -5.528473377227783
    5. 'if' → logprob: -5.653473377227783
    6. '                
' → logprob: -6.278473377227783
    7. '<|end|>' → logprob: -6.278473377227783
    8. ')' → logprob: -8.153472900390625
    9. '                ' → logprob: -8.403472900390625
    10. ',' → logprob: -8.653472900390625

Token 865: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0024684055242687464
    2. ' if' → logprob: -6.127468585968018
    3. '               ' → logprob: -8.25246810913086
    4. '                   ' → logprob: -11.25246810913086
    5. '```' → logprob: -12.62746810913086
    6. 'state' → logprob: -13.12746810913086
    7. 'next' → logprob: -13.25246810913086
    8. 'for' → logprob: -14.25246810913086
    9. 'nd' → logprob: -14.87746810913086
    10. 'new' → logprob: -15.00246810913086

Token 866: ' total' (ID: 3609)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.010981795378029346
    2. 'total' → logprob: -4.760981559753418
    3. 'new' → logprob: -6.760981559753418
    4. ' dist' → logprob: -6.760981559753418
    5. ' total' → logprob: -11.260981559753418
    6. '(dist' → logprob: -11.760981559753418
    7. '   ' → logprob: -11.885981559753418
    8. '	dist' → logprob: -12.135981559753418
    9. 'v' → logprob: -12.385981559753418
    10. ' new' → logprob: -12.885981559753418

Token 867: '_cost' (ID: 36820)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.02363966777920723
    2. 'dist' → logprob: -4.648639678955078
    3. '[v' → logprob: -5.273639678955078
    4. '_cost' → logprob: -5.523639678955078
    5. '[' → logprob: -5.898639678955078
    6. '[u' → logprob: -8.273639678955078
    7. '[s' → logprob: -8.648639678955078
    8. 's' → logprob: -8.648639678955078
    9. ' dist' → logprob: -8.773639678955078
    10. '][' → logprob: -9.648639678955078

Token 868: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.029876837506890297
    2. '<' → logprob: -3.529876947402954
    3. '<|end|>' → logprob: -9.279876708984375
    4. ' ' → logprob: -12.279876708984375
    5. '<th' → logprob: -12.529876708984375
    6. '<int' → logprob: -13.279876708984375
    7. '<len' → logprob: -13.279876708984375
    8. '[' → logprob: -13.279876708984375
    9. ',' → logprob: -13.654876708984375
    10. '<td' → logprob: -13.779876708984375

Token 869: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.9027791495318525e-05
    2. ' dist' → logprob: -10.875019073486328
    3. '
' → logprob: -17.375019073486328
    4. '	dist' → logprob: -18.250019073486328
    5. '(dist' → logprob: -18.375019073486328
    6. '   ' → logprob: -18.500019073486328
    7. '```' → logprob: -20.625019073486328
    8. 'Dist' → logprob: -21.500019073486328
    9. '.dist' → logprob: -21.750019073486328
    10. '_dist' → logprob: -22.250019073486328

Token 870: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.15441757265944e-05
    2. 'v' → logprob: -10.375031471252441
    3. '```' → logprob: -15.875031471252441
    4. '[u' → logprob: -17.125032424926758
    5. '<v' → logprob: -17.875032424926758
    6. '(v' → logprob: -18.375032424926758
    7. '[' → logprob: -18.625032424926758
    8. '	v' → logprob: -18.750032424926758
    9. '   ' → logprob: -19.000032424926758
    10. ' v' → logprob: -19.500032424926758

Token 871: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0052373106591403484
    2. '][' → logprob: -5.255237102508545
    3. '[' → logprob: -13.130237579345703
    4. 'v' → logprob: -14.130237579345703
    5. '}[' → logprob: -15.505237579345703
    6. ']' → logprob: -15.880237579345703
    7. '```' → logprob: -16.005237579345703
    8. ''][' → logprob: -16.255237579345703
    9. '"][' → logprob: -17.005237579345703
    10. '
' → logprob: -17.005237579345703

Token 872: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.6240566083070007e-06
    2. ' cc' → logprob: -13.375001907348633
    3. '	cc' → logprob: -17.125001907348633
    4. '(cc' → logprob: -17.250001907348633
    5. '_cc' → logprob: -18.750001907348633
    6. 'c' → logprob: -18.750001907348633
    7. 'Cc' → logprob: -20.000001907348633
    8. '```' → logprob: -20.375001907348633
    9. '[' → logprob: -21.125001907348633
    10. '0' → logprob: -21.375001907348633

Token 873: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06417904049158096
    2. '[new' → logprob: -2.814178943634033
    3. 'new' → logprob: -6.314178943634033
    4. '[' → logprob: -8.064179420471191
    5. ']' → logprob: -10.939179420471191
    6. ' ][' → logprob: -11.439179420471191
    7. '   ' → logprob: -11.564179420471191
    8. '[d' → logprob: -12.064179420471191
    9. ''][' → logprob: -12.189179420471191
    10. ']][' → logprob: -12.689179420471191

Token 874: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -6.957014556974173e-05
    2. 'd' → logprob: -9.625069618225098
    3. ' new' → logprob: -13.375069618225098
    4. '   ' → logprob: -14.000069618225098
    5. '[new' → logprob: -14.625069618225098
    6. '```' → logprob: -15.000069618225098
    7. '{' → logprob: -17.25006866455078
    8. '	new' → logprob: -17.37506866455078
    9. '
' → logprob: -17.37506866455078
    10. ')new' → logprob: -17.75006866455078

Token 875: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00028183520771563053
    2. 'new' → logprob: -9.125282287597656
    3. 'dist' → logprob: -9.375282287597656
    4. '```' → logprob: -10.500282287597656
    5. 'v' → logprob: -11.125282287597656
    6. 'line' → logprob: -11.500282287597656
    7. '+' → logprob: -11.750282287597656
    8. 'ew' → logprob: -12.500282287597656
    9. 'ist' → logprob: -12.625282287597656
    10. 'Dist' → logprob: -12.750282287597656

Token 876: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0015640194760635495
    2. ']:
' → logprob: -6.501564025878906
    3. ']' → logprob: -10.251564025878906
    4. ']):' → logprob: -11.501564025878906
    5. ']:
' → logprob: -11.751564025878906
    6. ':' → logprob: -12.876564025878906
    7. '):' → logprob: -13.001564025878906
    8. '']:' → logprob: -14.251564025878906
    9. ']:

' → logprob: -14.501564025878906
    10. '"]:' → logprob: -14.626564025878906

Token 877: '                       ' (ID: 968)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.6073115468025208
    2. '                       ' → logprob: -0.9823115468025208
    3. '                           ' → logprob: -2.732311487197876
    4. ':
' → logprob: -5.607311725616455
    5. '                   ' → logprob: -5.732311725616455
    6. ':' → logprob: -6.357311725616455
    7. '                                   ' → logprob: -6.857311725616455
    8. '):
' → logprob: -6.982311725616455
    9. '<|end|>' → logprob: -7.107311725616455
    10. '[' → logprob: -7.357311725616455

Token 878: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.051830269396305084
    2. ' dist' → logprob: -3.301830291748047
    3. '                           ' → logprob: -4.801830291748047
    4. '                       ' → logprob: -5.426830291748047
    5. '                               ' → logprob: -7.051830291748047
    6. '                        ' → logprob: -9.426830291748047
    7. '                            ' → logprob: -9.926830291748047
    8. '```' → logprob: -10.676830291748047
    9. '                                   ' → logprob: -11.176830291748047
    10. '                   ' → logprob: -11.176830291748047

Token 879: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.0280383548888494e-06
    2. 'v' → logprob: -14.000000953674316
    3. '<v' → logprob: -16.125001907348633
    4. '<|end|>' → logprob: -17.750001907348633
    5. '[' → logprob: -18.625001907348633
    6. '=v' → logprob: -19.000001907348633
    7. ',v' → logprob: -19.000001907348633
    8. '[u' → logprob: -19.000001907348633
    9. '```' → logprob: -19.250001907348633
    10. '	v' → logprob: -19.750001907348633

Token 880: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.05498756095767021
    2. '][' → logprob: -2.929987668991089
    3. '[' → logprob: -9.429987907409668
    4. '}[' → logprob: -11.554987907409668
    5. '[u' → logprob: -12.429987907409668
    6. ']' → logprob: -13.304987907409668
    7. 'v' → logprob: -13.429987907409668
    8. '>[' → logprob: -13.554987907409668
    9. ''][' → logprob: -13.929987907409668
    10. '<|end|>' → logprob: -14.054987907409668

Token 881: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. ' cc' → logprob: -17.0
    4. 'v' → logprob: -18.5
    5. '(cc' → logprob: -18.5
    6. 'c' → logprob: -18.875
    7. '	cc' → logprob: -19.625
    8. '_cc' → logprob: -20.875
    9. '```' → logprob: -20.875
    10. '   ' → logprob: -20.875

Token 882: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04827765002846718
    2. '[v' → logprob: -3.1732776165008545
    3. '[new' → logprob: -5.548277854919434
    4. '[' → logprob: -6.673277854919434
    5. 'new' → logprob: -10.298277854919434
    6. '                           ' → logprob: -11.048277854919434
    7. ''][' → logprob: -11.048277854919434
    8. ']][' → logprob: -12.048277854919434
    9. '"][' → logprob: -12.423277854919434
    10. ']' → logprob: -12.548277854919434

Token 883: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.8624639324116288e-06
    2. ' new' → logprob: -13.500001907348633
    3. '[new' → logprob: -14.875001907348633
    4. 'New' → logprob: -17.500001907348633
    5. '_new' → logprob: -17.875001907348633
    6. 'd' → logprob: -17.875001907348633
    7. '	new' → logprob: -18.875001907348633
    8. '(new' → logprob: -20.250001907348633
    9. '$new' → logprob: -20.375001907348633
    10. '[' → logprob: -20.500001907348633

Token 884: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0015635426389053464
    2. 'Dist' → logprob: -6.876563549041748
    3. 'dist' → logprob: -7.751563549041748
    4. 'new' → logprob: -9.37656307220459
    5. 'v' → logprob: -12.25156307220459
    6. '   ' → logprob: -13.12656307220459
    7. '```' → logprob: -13.50156307220459
    8. '[' → logprob: -13.75156307220459
    9. '_DIST' → logprob: -14.12656307220459
    10. '_new' → logprob: -14.25156307220459

Token 885: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08595389872789383
    2. ']=' → logprob: -2.585953950881958
    3. '=' → logprob: -4.960953712463379
    4. ' =' → logprob: -10.960953712463379
    5. ' ]' → logprob: -11.585953712463379
    6. ')' → logprob: -13.710953712463379
    7. ']+=' → logprob: -14.335953712463379
    8. '   ' → logprob: -14.460953712463379
    9. ')=' → logprob: -14.585953712463379
    10. '                       ' → logprob: -14.585953712463379

Token 886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.53050296427682e-05
    2. ' =' → logprob: -9.37508487701416
    3. ']=' → logprob: -15.12508487701416
    4. '=
' → logprob: -15.87508487701416
    5. '=

' → logprob: -17.625085830688477
    6. '.=' → logprob: -18.125085830688477
    7. ']' → logprob: -18.250085830688477
    8. ')=' → logprob: -18.250085830688477
    9. '＝' → logprob: -18.750085830688477
    10. '=True' → logprob: -19.125085830688477

Token 887: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00033546582562848926
    2. ' total' → logprob: -8.000335693359375
    3. '	total' → logprob: -18.375335693359375
    4. '(total' → logprob: -18.625335693359375
    5. '                           ' → logprob: -19.000335693359375
    6. '
' → logprob: -19.250335693359375
    7. 'Total' → logprob: -19.250335693359375
    8. '                               ' → logprob: -19.375335693359375
    9. '$total' → logprob: -19.375335693359375
    10. '                       ' → logprob: -20.375335693359375

Token 888: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.981667537620524e-06
    2. 'cost' → logprob: -13.375001907348633
    3. 'Cost' → logprob: -15.875001907348633
    4. '_dist' → logprob: -16.875001907348633
    5. '_code' → logprob: -17.125001907348633
    6. '_COST' → logprob: -17.125001907348633
    7. ' cost' → logprob: -17.500001907348633
    8. '-cost' → logprob: -17.750001907348633
    9. '_cos' → logprob: -18.500001907348633
    10. '_' → logprob: -18.875001907348633

Token 889: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007971887476742268
    2. '```' → logprob: -5.63297176361084
    3. '                           ' → logprob: -6.13297176361084
    4. '                   ' → logprob: -7.50797176361084
    5. '<|end|>' → logprob: -7.50797176361084
    6. '               ' → logprob: -8.25797176361084
    7. ')' → logprob: -8.38297176361084
    8. '                        
' → logprob: -8.63297176361084
    9. '                        ' → logprob: -9.13297176361084
    10. ',' → logprob: -9.25797176361084

Token 890: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001898171496577561
    2. '```' → logprob: -7.126898288726807
    3. '                           ' → logprob: -8.251897811889648
    4. '<|end|>' → logprob: -8.501897811889648
    5. '                   ' → logprob: -8.626897811889648
    6. '                        ' → logprob: -9.001897811889648
    7. '               ' → logprob: -9.126897811889648
    8. '                               ' → logprob: -10.001897811889648
    9. ')' → logprob: -10.126897811889648
    10. '                        
' → logprob: -10.501897811889648

Token 891: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.00011355629976605996
    2. ' heap' → logprob: -9.250113487243652
    3. '```' → logprob: -11.000113487243652
    4. '                           ' → logprob: -14.750113487243652
    5. '                       ' → logprob: -15.375113487243652
    6. '``' → logprob: -17.25011444091797
    7. '(heap' → logprob: -17.37511444091797
    8. '                   ' → logprob: -17.62511444091797
    9. '                               ' → logprob: -18.12511444091797
    10. '.heap' → logprob: -18.25011444091797

Token 892: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'app' → logprob: -15.750000953674316
    3. 'p' → logprob: -16.0
    4. 'push' → logprob: -16.5
    5. '```' → logprob: -16.875
    6. 'ql' → logprob: -18.25
    7. 'h' → logprob: -18.375
    8. 'qe' → logprob: -18.75
    9. 'replace' → logprob: -18.875
    10. '           ' → logprob: -18.875

Token 893: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00014823723176959902
    2. 'he' → logprob: -8.875147819519043
    3. '.heap' → logprob: -12.500147819519043
    4. 'q' → logprob: -13.500147819519043
    5. '```' → logprob: -13.875147819519043
    6. '.push' → logprob: -13.875147819519043
    7. ' he' → logprob: -14.500147819519043
    8. 'push' → logprob: -15.000147819519043
    9. '_he' → logprob: -15.375147819519043
    10. '.h' → logprob: -16.37514877319336

Token 894: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.030551010742783546
    2. 'pp' → logprob: -3.530550956726074
    3. 'push' → logprob: -7.280550956726074
    4. 'ush' → logprob: -9.530550956726074
    5. 'p' → logprob: -10.905550956726074
    6. '```' → logprob: -11.405550956726074
    7. 'ap' → logprob: -12.530550956726074
    8. '[' → logprob: -13.780550956726074
    9. '   ' → logprob: -14.405550956726074
    10. 'appen' → logprob: -14.530550956726074

Token 895: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.9623810658231378e-05
    2. 'push' → logprob: -11.000020027160645
    3. 'app' → logprob: -13.125020027160645
    4. 'sh' → logprob: -15.125020027160645
    5. 'pp' → logprob: -15.500020027160645
    6. 'op' → logprob: -15.500020027160645
    7. 'p' → logprob: -16.500019073486328
    8. '```' → logprob: -18.625019073486328
    9. 'ul' → logprob: -19.375019073486328
    10. 'usp' → logprob: -19.875019073486328

Token 896: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. '(
' → logprob: -17.0
    4. '(q' → logprob: -17.25
    5. 'pq' → logprob: -18.125
    6. ' (' → logprob: -18.25
    7. '   ' → logprob: -18.875
    8. '```' → logprob: -19.375
    9. '       ' → logprob: -20.125
    10. 'p' → logprob: -20.5

Token 897: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.001420472632162273
    2. '(p' → logprob: -6.751420497894287
    3. '(q' → logprob: -8.376420021057129
    4. 'pq' → logprob: -10.876420021057129
    5. 'vq' → logprob: -15.376420021057129
    6. 'dq' → logprob: -15.501420021057129
    7. '	q' → logprob: -15.626420021057129
    8. ' pq' → logprob: -16.501420974731445
    9. ',q' → logprob: -16.751420974731445
    10. '[q' → logprob: -16.876420974731445

Token 898: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0018636647146195173
    2. '(' → logprob: -7.001863479614258
    3. ',p' → logprob: -7.626863479614258
    4. ',' → logprob: -8.251863479614258
    5. '                       ' → logprob: -10.001863479614258
    6. '```' → logprob: -10.126863479614258
    7. ')' → logprob: -10.501863479614258
    8. ' (' → logprob: -10.626863479614258
    9. '                           ' → logprob: -11.126863479614258
    10. '(
' → logprob: -11.501863479614258

Token 899: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.31328028440475464
    2. '(' → logprob: -1.8132803440093994
    3. ' (' → logprob: -2.5632803440093994
    4. '(cost' → logprob: -3.5632803440093994
    5. '(p' → logprob: -8.06328010559082
    6. '   ' → logprob: -9.81328010559082
    7. '(t' → logprob: -10.18828010559082
    8. '(c' → logprob: -11.43828010559082
    9. '       ' → logprob: -12.31328010559082
    10. ' ' → logprob: -13.31328010559082

Token 900: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -4.084206375409849e-05
    2. ' total' → logprob: -10.500041007995605
    3. '(total' → logprob: -11.250041007995605
    4. '   ' → logprob: -16.62504005432129
    5. '                           ' → logprob: -17.37504005432129
    6. '	total' → logprob: -18.50004005432129
    7. 'tot' → logprob: -18.75004005432129
    8. 'cost' → logprob: -18.87504005432129
    9. '                               ' → logprob: -19.00004005432129
    10. '                                   ' → logprob: -19.50004005432129

Token 901: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.620622712536715e-05
    2. 'q' → logprob: -11.000045776367188
    3. 'cost' → logprob: -11.250045776367188
    4. '_code' → logprob: -11.750045776367188
    5. ' _' → logprob: -12.500045776367188
    6. '```' → logprob: -13.625045776367188
    7. '_COST' → logprob: -13.750045776367188
    8. '\' → logprob: -14.625045776367188
    9. '                   ' → logprob: -15.750045776367188
    10. '``' → logprob: -15.875045776367188

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003620265983045101
    2. ',v' → logprob: -5.628620147705078
    3. ' ,' → logprob: -10.878620147705078
    4. '                               ' → logprob: -15.128620147705078
    5. ',
' → logprob: -15.128620147705078
    6. '                           ' → logprob: -15.503620147705078
    7. ',u' → logprob: -16.253620147705078
    8. ',w' → logprob: -16.378620147705078
    9. '                       ' → logprob: -16.503620147705078
    10. ',x' → logprob: -17.003620147705078

Token 903: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.704273118884885e-07
    2. ' v' → logprob: -14.375000953674316
    3. '	v' → logprob: -19.25
    4. '   ' → logprob: -20.875
    5. ')v' → logprob: -20.875
    6. '$v' → logprob: -23.0
    7. '```' → logprob: -23.0
    8. '
' → logprob: -23.375
    9. 'vq' → logprob: -23.75
    10. '<v' → logprob: -24.375

Token 904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.550411151489243e-05
    2. ' ,' → logprob: -10.125055313110352
    3. '`,' → logprob: -12.250055313110352
    4. ',[' → logprob: -13.125055313110352
    5. '[' → logprob: -13.250055313110352
    6. ',c' → logprob: -13.750055313110352
    7. ',v' → logprob: -14.250055313110352
    8. ',,' → logprob: -14.500055313110352
    9. '<|end|>' → logprob: -14.750055313110352
    10. '```' → logprob: -14.875055313110352

Token 905: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -2.7729658540920354e-05
    2. ' cc' → logprob: -10.500027656555176
    3. '	cc' → logprob: -16.250028610229492
    4. '(cc' → logprob: -18.250028610229492
    5. 'ccc' → logprob: -19.125028610229492
    6. '_cc' → logprob: -19.875028610229492
    7. '   ' → logprob: -20.000028610229492
    8. '```' → logprob: -21.500028610229492
    9. '           ' → logprob: -21.625028610229492
    10. '       ' → logprob: -22.000028610229492

Token 906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016176922945305705
    2. ',new' → logprob: -6.501617908477783
    3. '[new' → logprob: -9.376617431640625
    4. ' ,' → logprob: -11.501617431640625
    5. ',[' → logprob: -11.751617431640625
    6. 'new' → logprob: -12.001617431640625
    7. '[' → logprob: -12.376617431640625
    8. '                           ' → logprob: -14.751617431640625
    9. '```' → logprob: -15.376617431640625
    10. '                               ' → logprob: -15.501617431640625

Token 907: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -2.339278580620885e-06
    2. ' new' → logprob: -13.000001907348633
    3. 'New' → logprob: -19.750001907348633
    4. '_new' → logprob: -20.250001907348633
    5. '	new' → logprob: -21.125001907348633
    6. '   ' → logprob: -21.125001907348633
    7. '                   ' → logprob: -21.625001907348633
    8. '               ' → logprob: -21.750001907348633
    9. '           ' → logprob: -22.625001907348633
    10. '$new' → logprob: -22.625001907348633

Token 908: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0007249409682117403
    2. 'dist' → logprob: -7.250724792480469
    3. 'new' → logprob: -11.250724792480469
    4. 'Dist' → logprob: -13.875724792480469
    5. '_new' → logprob: -15.250724792480469
    6. '```' → logprob: -15.625724792480469
    7. '	dist' → logprob: -16.00072479248047
    8. '+' → logprob: -16.50072479248047
    9. 'v' → logprob: -16.75072479248047
    10. 'line' → logprob: -16.87572479248047

Token 909: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00013810492237098515
    2. '                       ' → logprob: -9.625138282775879
    3. '))
' → logprob: -9.625138282775879
    4. '                   ' → logprob: -13.375138282775879
    5. ')))' → logprob: -13.500138282775879
    6. ' ))' → logprob: -13.625138282775879
    7. '                           ' → logprob: -14.625138282775879
    8. '               ' → logprob: -14.625138282775879
    9. ')' → logprob: -14.875138282775879
    10. '           ' → logprob: -15.625138282775879

Token 910: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4308604300022125
    2. '```' → logprob: -1.0558604001998901
    3. 'else' → logprob: -6.68086051940918
    4. '           ' → logprob: -7.55586051940918
    5. '                   ' → logprob: -8.68086051940918
    6. 'elif' → logprob: -9.68086051940918
    7. '       ' → logprob: -9.80586051940918
    8. '``' → logprob: -10.55586051940918
    9. ' else' → logprob: -10.93086051940918
    10. '              ' → logprob: -11.43086051940918

Token 911: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5802532434463501
    2. '               ' → logprob: -0.8302532434463501
    3. ' else' → logprob: -5.5802531242370605
    4. 'elif' → logprob: -7.8302531242370605
    5. '           ' → logprob: -8.955253601074219
    6. ' elif' → logprob: -13.205253601074219
    7. '   ' → logprob: -13.830253601074219
    8. '			' → logprob: -14.205253601074219
    9. '```' → logprob: -14.205253601074219
    10. '	else' → logprob: -14.455253601074219

Token 912: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.25171372294425964
    2. '               ' → logprob: -1.626713752746582
    3. '                ' → logprob: -4.501713752746582
    4. '                               ' → logprob: -6.001713752746582
    5. '                       ' → logprob: -6.126713752746582
    6. '                    ' → logprob: -6.501713752746582
    7. ':
' → logprob: -6.626713752746582
    8. '                           ' → logprob: -6.751713752746582
    9. ' if' → logprob: -7.251713752746582
    10. '           ' → logprob: -7.376713752746582

Token 913: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5333126783370972
    2. '                   ' → logprob: -0.9083126783370972
    3. '                ' → logprob: -5.158312797546387
    4. '                       ' → logprob: -6.658312797546387
    5. '                               ' → logprob: -6.783312797546387
    6. '```' → logprob: -7.533312797546387
    7. '                    ' → logprob: -8.158312797546387
    8. '           ' → logprob: -8.533312797546387
    9. '	               ' → logprob: -8.533312797546387
    10. ' if' → logprob: -8.908312797546387

Token 914: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7814350724220276
    2. ' if' → logprob: -1.4064350128173828
    3. '               ' → logprob: -1.5314350128173828
    4. 'if' (adapté à ' if') → logprob: -2.906435012817383
    5. '                ' → logprob: -4.531435012817383
    6. '                       ' → logprob: -4.906435012817383
    7. '                    ' → logprob: -5.781435012817383
    8. ' ' → logprob: -7.281435012817383
    9. '```' → logprob: -7.531435012817383
    10. ' new' → logprob: -7.781435012817383

Token 915: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.012629371136426926
    2. 'comp' → logprob: -4.387629508972168
    3. ' cc' → logprob: -9.262629508972168
    4. ' comp' → logprob: -11.262629508972168
    5. '   ' → logprob: -12.637629508972168
    6. '(cc' → logprob: -13.137629508972168
    7. 'dd' → logprob: -13.387629508972168
    8. 'c' → logprob: -13.387629508972168
    9. 'ccc' → logprob: -14.137629508972168
    10. 'com' → logprob: -14.387629508972168

Token 916: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4742486774921417
    2. ' ==' → logprob: -0.9742486476898193
    3. '!=' → logprob: -9.349248886108398
    4. ' !=' → logprob: -9.724248886108398
    5. ']==' → logprob: -11.349248886108398
    6. ')==' → logprob: -12.224248886108398
    7. '==
' → logprob: -12.474248886108398
    8. '[' → logprob: -13.224248886108398
    9. '()==' → logprob: -14.849248886108398
    10. '```' → logprob: -14.849248886108398

Token 917: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.0325924449716695e-05
    2. ' comp' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.250009536743164
    4. '	comp' → logprob: -17.250009536743164
    5. '(comp' → logprob: -20.000009536743164
    6. '       ' → logprob: -20.125009536743164
    7. '.comp' → logprob: -21.250009536743164
    8. '```' → logprob: -21.375009536743164
    9. '           ' → logprob: -21.500009536743164
    10. '               ' → logprob: -21.500009536743164

Token 918: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.468710720539093
    2. ':
' → logprob: -1.5937106609344482
    3. ':' → logprob: -2.2187106609344482
    4. ' and' → logprob: -2.9687106609344482
    5. '                   ' → logprob: -5.093710899353027
    6. '                        
' → logprob: -6.718710899353027
    7. '<|end|>' → logprob: -7.218710899353027
    8. 'and' → logprob: -7.343710899353027
    9. '                        ' → logprob: -7.843710899353027
    10. '                           ' → logprob: -7.968710899353027

Token 919: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.012055712752044201
    2. '                   ' → logprob: -5.38705587387085
    3. '                           ' → logprob: -6.51205587387085
    4. '                        
' → logprob: -6.51205587387085
    5. '                        ' → logprob: -7.13705587387085
    6. ' new' → logprob: -7.13705587387085
    7. '```' → logprob: -7.26205587387085
    8. '                               ' → logprob: -7.38705587387085
    9. '               ' → logprob: -8.387055397033691
    10. ' if' → logprob: -8.512055397033691

Token 920: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5807359218597412
    2. ' if' → logprob: -1.7057359218597412
    3. 'new' → logprob: -1.8307359218597412
    4. '                       ' → logprob: -3.330735921859741
    5. 'if' → logprob: -3.455735921859741
    6. '```' → logprob: -3.830735921859741
    7. '                           ' → logprob: -5.45573616027832
    8. ' #' → logprob: -5.83073616027832
    9. '#' (adapté à ' #') → logprob: -7.20573616027832
    10. '``' → logprob: -7.58073616027832

Token 921: ' Continue' (ID: 16958)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.055564187467098236
    2. ' new' → logprob: -3.3055641651153564
    3. 'if' → logprob: -4.3055644035339355
    4. '#' → logprob: -6.0555644035339355
    5. ' if' → logprob: -6.9305644035339355
    6. '```' → logprob: -8.555563926696777
    7. ' #' → logprob: -9.430563926696777
    8. 'next' → logprob: -9.430563926696777
    9. 'max' → logprob: -10.180563926696777
    10. '   ' → logprob: -10.680563926696777

Token 922: ' with' (ID: 483)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.23943805694580078
    2. 'current' → logprob: -2.364438056945801
    3. 'the' → logprob: -3.239438056945801
    4. '                       ' → logprob: -3.239438056945801
    5. 'dist' → logprob: -4.864438056945801
    6. '                               ' → logprob: -4.989438056945801
    7. 'existing' → logprob: -4.989438056945801
    8. 'new' → logprob: -5.114438056945801
    9. ' the' → logprob: -6.364438056945801
    10. ' current' → logprob: -6.614438056945801

Token 923: ' same' (ID: 2684)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.06522604078054428
    2. 'dist' → logprob: -3.0652260780334473
    3. 'new' → logprob: -4.940226078033447
    4. ' dd' → logprob: -5.190226078033447
    5. 'the' → logprob: -7.315226078033447
    6. 'distance' → logprob: -7.690226078033447
    7. 'd' → logprob: -7.815226078033447
    8. ' new' → logprob: -7.815226078033447
    9. 'same' → logprob: -8.190225601196289
    10. ' dist' → logprob: -8.315225601196289

Token 924: ' company' (ID: 3175)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.7081333994865417
    2. ' company' → logprob: -1.4581334590911865
    3. '_company' → logprob: -1.5831334590911865
    4. ' line' → logprob: -2.9581334590911865
    5. '_line' → logprob: -5.208133220672607
    6. 'line' → logprob: -5.333133220672607
    7. '_comp' → logprob: -6.083133220672607
    8. '   ' → logprob: -6.583133220672607
    9. ' company's' → logprob: -7.583133220672607
    10. ' ' → logprob: -7.708133220672607

Token 925: ' section' (ID: 7102)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.09670785814523697
    2. '                       ' → logprob: -2.971707820892334
    3. ':' → logprob: -4.346707820892334
    4. ':
' → logprob: -4.471707820892334
    5. ' and' → logprob: -5.471707820892334
    6. ',' → logprob: -6.096707820892334
    7. '```' → logprob: -6.221707820892334
    8. '                            
' → logprob: -6.596707820892334
    9. ' new' → logprob: -6.846707820892334
    10. '                               ' → logprob: -6.971707820892334

Token 926: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03826799988746643
    2. '                       ' → logprob: -3.5382680892944336
    3. ' new' → logprob: -5.663268089294434
    4. ',' → logprob: -7.288268089294434
    5. '                            
' → logprob: -7.288268089294434
    6. '                               ' → logprob: -7.413268089294434
    7. '```' → logprob: -7.538268089294434
    8. 'new' → logprob: -7.538268089294434
    9. '                            ' → logprob: -8.163268089294434
    10. '                   ' → logprob: -8.663268089294434

Token 927: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.01789483241736889
    2. '                       ' → logprob: -4.517894744873047
    3. '```' → logprob: -6.267894744873047
    4. '                               ' → logprob: -6.892894744873047
    5. ' new' → logprob: -7.142894744873047
    6. '                            
' → logprob: -7.392894744873047
    7. '                            ' → logprob: -7.392894744873047
    8. ',' → logprob: -7.642894744873047
    9. '                        ' → logprob: -8.517894744873047
    10. '                          ' → logprob: -8.642894744873047

Token 928: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.08268070966005325
    2. ' if' → logprob: -2.9576807022094727
    3. 'new' (adapté à ' new') → logprob: -3.7076807022094727
    4. 'if' → logprob: -6.582680702209473
    5. '                           ' → logprob: -7.582680702209473
    6. '                       ' → logprob: -8.332680702209473
    7. '                               ' → logprob: -8.582680702209473
    8. '```' → logprob: -8.957680702209473
    9. ' ' → logprob: -9.332680702209473
    10. ' 
' → logprob: -9.457680702209473

Token 929: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -7.481510692741722e-05
    2. '_distance' → logprob: -10.00007438659668
    3. '_' → logprob: -11.12507438659668
    4. 'dist' → logprob: -12.00007438659668
    5. '_token' → logprob: -13.00007438659668
    6. '_d' → logprob: -13.87507438659668
    7. 'Dist' → logprob: -14.00007438659668
    8. '_code' → logprob: -14.50007438659668
    9. '```' → logprob: -14.50007438659668
    10. '_line' → logprob: -14.62507438659668

Token 930: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760974287986755
    2. ' =' → logprob: -0.8260974287986755
    3. '+' → logprob: -9.20109748840332
    4. ' +' → logprob: -10.07609748840332
    5. ' +=' → logprob: -11.82609748840332
    6. '+=' → logprob: -11.95109748840332
    7. '                       ' → logprob: -15.07609748840332
    8. '                           ' → logprob: -15.45109748840332
    9. '                               ' → logprob: -16.07609748840332
    10. '                        ' → logprob: -16.20109748840332

Token 931: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -1.688212614681106e-05
    2. ' dd' → logprob: -11.000017166137695
    3. '(dd' → logprob: -16.500017166137695
    4. '_dd' → logprob: -17.625017166137695
    5. 'd' → logprob: -18.125017166137695
    6. 'new' → logprob: -18.375017166137695
    7. 'ddi' → logprob: -19.125017166137695
    8. 'dds' → logprob: -20.125017166137695
    9. 'dddd' → logprob: -20.250017166137695
    10. 'ddd' → logprob: -20.375017166137695

Token 932: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3589481711387634
    2. ' +' → logprob: -1.3589482307434082
    3. '+d' → logprob: -3.108948230743408
    4. '+D' → logprob: -11.73394775390625
    5. '+r' → logprob: -14.10894775390625
    6. '+t' → logprob: -14.85894775390625
    7. '+w' → logprob: -15.73394775390625
    8. '+k' → logprob: -15.85894775390625
    9. '＋' → logprob: -15.98394775390625
    10. '+b' → logprob: -15.98394775390625

Token 933: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019286326132714748
    2. ' d' → logprob: -6.251928806304932
    3. '	d' → logprob: -18.876928329467773
    4. '                   ' → logprob: -19.501928329467773
    5. '   ' → logprob: -20.126928329467773
    6. '_d' → logprob: -20.126928329467773
    7. ' ' → logprob: -20.126928329467773
    8. '1' → logprob: -20.626928329467773
    9. '                       ' → logprob: -20.751928329467773
    10. ''d' → logprob: -20.751928329467773

Token 934: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -5.512236498361744e-07
    2. '_line' → logprob: -16.0
    3. ' line' → logprob: -16.25
    4. 'd' → logprob: -16.25
    5. '```' → logprob: -16.375
    6. '[line' → logprob: -17.125
    7. '	line' → logprob: -17.75
    8. 'ine' → logprob: -17.875
    9. 'eline' → logprob: -18.25
    10. '(line' → logprob: -18.625

Token 935: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 936: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.12447167187929153
    2. ' if' → logprob: -2.374471664428711
    3. '```' → logprob: -4.374471664428711
    4. '                           ' → logprob: -5.624471664428711
    5. '<|end|>' → logprob: -5.624471664428711
    6. 'if' → logprob: -5.999471664428711
    7. '                        ' → logprob: -7.624471664428711
    8. '                               ' → logprob: -7.874471664428711
    9. '                        
' → logprob: -8.749471664428711
    10. '                   ' → logprob: -9.249471664428711

Token 937: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3136264383792877
    2. ' if' → logprob: -1.3136264085769653
    3. '                       ' → logprob: -8.188626289367676
    4. '```' → logprob: -9.563626289367676
    5. '                           ' → logprob: -11.688626289367676
    6. '                        
' → logprob: -13.188626289367676
    7. '           ' → logprob: -14.063626289367676
    8. '                   ' → logprob: -14.063626289367676
    9. '                        ' → logprob: -14.438626289367676
    10. '#' → logprob: -14.438626289367676

Token 938: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0015023599844425917
    2. ' new' → logprob: -6.501502513885498
    3. '0' → logprob: -16.876502990722656
    4. '```' → logprob: -18.001502990722656
    5. '   ' → logprob: -18.501502990722656
    6. '                       ' → logprob: -19.001502990722656
    7. 'New' → logprob: -19.376502990722656
    8. '	new' → logprob: -19.376502990722656
    9. '_new' → logprob: -19.626502990722656
    10. '                   ' → logprob: -19.626502990722656

Token 939: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.028544722124934196
    2. 'new' → logprob: -3.6535446643829346
    3. 'ist' → logprob: -7.028544902801514
    4. '<=' → logprob: -7.903544902801514
    5. '```' → logprob: -8.153544425964355
    6. 'ew' → logprob: -8.653544425964355
    7. '_new' → logprob: -8.903544425964355
    8. '<' → logprob: -8.903544425964355
    9. 'dist' → logprob: -9.278544425964355
    10. '>' → logprob: -10.403544425964355

Token 940: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.19286026060581207
    2. ' <=' → logprob: -2.5678603649139404
    3. '<' → logprob: -3.1928603649139404
    4. '>' → logprob: -3.3178603649139404
    5. '>=' → logprob: -4.067860126495361
    6. ' <' → logprob: -5.942860126495361
    7. ' >' → logprob: -6.942860126495361
    8. ' >=' → logprob: -7.692860126495361
    9. '<len' → logprob: -8.81786060333252
    10. '```' → logprob: -10.31786060333252

Token 941: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.625
    4. '  ' → logprob: -21.875
    5. '```' → logprob: -22.125
    6. '２００' → logprob: -22.375
    7. '20' → logprob: -23.375
    8. '0' → logprob: -23.625
    9. '২০০' → logprob: -24.125
    10. '`' → logprob: -24.25

Token 942: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.875003814697266
    4. 'max' → logprob: -18.625003814697266
    5. '```' → logprob: -18.625003814697266
    6. 'len' → logprob: -19.000003814697266
    7. '0' → logprob: -19.000003814697266
    8. '20' → logprob: -19.000003814697266
    9. '201' → logprob: -19.500003814697266
    10. '  ' → logprob: -19.750003814697266

Token 943: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013756769709289074
    2. ':
' → logprob: -4.38875675201416
    3. '                           ' → logprob: -6.88875675201416
    4. '                       ' → logprob: -9.26375675201416
    5. ':return' → logprob: -9.51375675201416
    6. '<|end|>' → logprob: -10.88875675201416
    7. '           ' → logprob: -12.01375675201416
    8. '                               ' → logprob: -12.13875675201416
    9. ' and' → logprob: -12.51375675201416
    10. '):' → logprob: -12.51375675201416

Token 944: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0530683659017086
    2. ' continue' → logprob: -3.3030683994293213
    3. 'continue' → logprob: -4.303068161010742
    4. '                               ' → logprob: -7.178068161010742
    5. '                       ' → logprob: -7.803068161010742
    6. '```' → logprob: -8.928068161010742
    7. '   ' → logprob: -11.178068161010742
    8. '	continue' → logprob: -11.303068161010742
    9. '                   ' → logprob: -11.678068161010742
    10. '                            ' → logprob: -11.803068161010742

Token 945: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00012725738633889705
    2. '                       ' → logprob: -10.000126838684082
    3. '                           ' → logprob: -10.000126838684082
    4. ' continue' → logprob: -10.500126838684082
    5. '   ' → logprob: -12.500126838684082
    6. '```' → logprob: -12.750126838684082
    7. '                               ' → logprob: -13.625126838684082
    8. '                   ' → logprob: -14.500126838684082
    9. '	continue' → logprob: -15.750126838684082
    10. ' ' → logprob: -15.750126838684082

Token 946: ' Dist' (ID: 35375)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00016229959146585315
    2. '                       ' → logprob: -9.500162124633789
    3. '                           ' → logprob: -10.000162124633789
    4. ' continue' → logprob: -10.500162124633789
    5. '   ' → logprob: -12.125162124633789
    6. '                   ' → logprob: -12.875162124633789
    7. '```' → logprob: -13.125162124633789
    8. 'continu' → logprob: -13.500162124633789
    9. '#' → logprob: -13.750162124633789
    10. '                               ' → logprob: -14.625162124633789

Token 947: ' too' (ID: 3101)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6987050771713257
    2. ' >' → logprob: -0.6987050771713257
    3. ' >=' → logprob: -5.823705196380615
    4. '>=' → logprob: -6.948705196380615
    5. ' <=' → logprob: -7.823705196380615
    6. '<=' → logprob: -8.698704719543457
    7. '                   ' → logprob: -8.948704719543457
    8. '                           ' → logprob: -9.073704719543457
    9. '                       ' → logprob: -9.198704719543457
    10. 'inue' → logprob: -9.198704719543457

Token 948: ' large' (ID: 4410)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05040646716952324
    2. ' >' → logprob: -3.3004064559936523
    3. ' large' → logprob: -5.425406455993652
    4. 'large' → logprob: -5.550406455993652
    5. '_large' → logprob: -6.925406455993652
    6. '>
' → logprob: -7.800406455993652
    7. '```' → logprob: -7.800406455993652
    8. ' big' → logprob: -8.050406455993652
    9. '   ' → logprob: -8.175406455993652
    10. ' long' → logprob: -8.300406455993652

Token 949: ',' (ID: 11)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2104150950908661
    2. '                               ' → logprob: -1.9604151248931885
    3. '                           ' → logprob: -3.2104151248931885
    4. ' continue' → logprob: -5.335414886474609
    5. '```' → logprob: -5.835414886474609
    6. '   ' → logprob: -8.58541488647461
    7. '                       ' → logprob: -8.58541488647461
    8. '                                   ' → logprob: -9.58541488647461
    9. '               ' → logprob: -9.58541488647461
    10. '	continue' → logprob: -9.83541488647461

Token 950: ' skip' (ID: 16677)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0009904148755595088
    2. ' continue' → logprob: -7.000990390777588
    3. '                           ' → logprob: -10.250990867614746
    4. '                               ' → logprob: -10.750990867614746
    5. '                       ' → logprob: -11.375990867614746
    6. '```' → logprob: -12.750990867614746
    7. 'break' → logprob: -13.000990867614746
    8. '   ' → logprob: -13.125990867614746
    9. '                   ' → logprob: -13.375990867614746
    10. '                                   ' → logprob: -13.875990867614746

Token 951: ' (' (ID: 350)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6211675405502319
    2. '                               ' → logprob: -1.371167540550232
    3. '                           ' → logprob: -1.621167540550232
    4. ' continue' → logprob: -4.6211676597595215
    5. '                       ' → logprob: -7.3711676597595215
    6. '```' → logprob: -7.9961676597595215
    7. '                                   ' → logprob: -8.996167182922363
    8. '                   ' → logprob: -9.621167182922363
    9. '           ' → logprob: -9.996167182922363
    10. '
' → logprob: -9.996167182922363

Token 952: 'should' (ID: 10618)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.001421664608642459
    2. ' continue' → logprob: -6.7514214515686035
    3. '                               ' → logprob: -8.876421928405762
    4. '                           ' → logprob: -9.751421928405762
    5. '```' → logprob: -10.001421928405762
    6. '                                   ' → logprob: -12.751421928405762
    7. '   ' → logprob: -13.251421928405762
    8. '                       ' → logprob: -13.751421928405762
    9. '	continue' → logprob: -14.626421928405762
    10. '                                       ' → logprob: -14.876421928405762

Token 953: ' not' (ID: 625)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.005175289697945118
    2. ' continue' → logprob: -5.5051751136779785
    3. '```' → logprob: -7.8801751136779785
    4. '_continue' → logprob: -8.130175590515137
    5. '                           ' → logprob: -8.380175590515137
    6. '	continue' → logprob: -9.755175590515137
    7. '                       ' → logprob: -10.005175590515137
    8. '                               ' → logprob: -10.755175590515137
    9. '                   ' → logprob: -11.755175590515137
    10. 'not' → logprob: -11.880175590515137

Token 954: ' happen' (ID: 5659)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.008315387181937695
    2. '```' → logprob: -5.508315563201904
    3. 'break' → logprob: -6.383315563201904
    4. 'be' → logprob: -7.383315563201904
    5. ')' → logprob: -8.008315086364746
    6. ' continue' → logprob: -8.258315086364746
    7. 'occur' → logprob: -8.258315086364746
    8. '                       ' → logprob: -8.383315086364746
    9. '                        
' → logprob: -8.633315086364746
    10. '   ' → logprob: -9.508315086364746

Token 955: ' since' (ID: 3630)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9725324511528015
    2. ')
' → logprob: -1.2225325107574463
    3. '                           ' → logprob: -1.2225325107574463
    4. '                       ' → logprob: -4.097532272338867
    5. '                               ' → logprob: -4.222532272338867
    6. 'continue' → logprob: -6.972532272338867
    7. '):
' → logprob: -8.847532272338867
    8. '                            ' → logprob: -9.347532272338867
    9. '                   ' → logprob: -9.597532272338867
    10. ',' → logprob: -9.597532272338867

Token 956: ' max' (ID: 2999)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8382952809333801
    2. 'new' → logprob: -0.8382952809333801
    3. 'd' → logprob: -3.3382952213287354
    4. 'edges' → logprob: -3.7132952213287354
    5. ' edges' → logprob: -4.3382954597473145
    6. ' d' → logprob: -4.5882954597473145
    7. 'dist' → logprob: -4.9632954597473145
    8. 'continue' → logprob: -5.2132954597473145
    9. 'fare' → logprob: -5.3382954597473145
    10. ' fare' → logprob: -5.4632954597473145

Token 957: ' line' (ID: 2543)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6453171968460083
    2. 'd' → logprob: -0.8953171968460083
    3. 'distance' → logprob: -3.8953170776367188
    4. ' new' → logprob: -4.270317077636719
    5. 'dist' → logprob: -4.270317077636719
    6. 'line' → logprob: -5.020317077636719
    7. '200' → logprob: -5.270317077636719
    8. '_d' → logprob: -6.270317077636719
    9. '_dist' → logprob: -6.270317077636719
    10. ' d' → logprob: -7.145317077636719

Token 958: ' is' (ID: 382)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.47966068983078003
    2. '_length' → logprob: -1.6046607494354248
    3. ' length' → logprob: -2.479660749435425
    4. 'distance' → logprob: -3.354660749435425
    5. '_distance' → logprob: -4.229660511016846
    6. '_dist' → logprob: -4.479660511016846
    7. '_d' → logprob: -4.854660511016846
    8. '_' → logprob: -4.979660511016846
    9. '_len' → logprob: -5.604660511016846
    10. 'dist' → logprob: -5.729660511016846

Token 959: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0005051348707638681
    2. ' ' → logprob: -7.625504970550537
    3. '<=' → logprob: -11.875505447387695
    4. '```' → logprob: -12.625505447387695
    5. '   ' → logprob: -13.625505447387695
    6. 'at' → logprob: -13.750505447387695
    7. '201' → logprob: -14.125505447387695
    8. ' <=' → logprob: -14.500505447387695
    9. '20' → logprob: -15.000505447387695
    10. 'd' → logprob: -15.125505447387695

Token 960: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -4.23917081207037e-05
    2. ' ' → logprob: -10.750041961669922
    3. '201' → logprob: -11.750041961669922
    4. '<=' → logprob: -12.625041961669922
    5. '```' → logprob: -13.000041961669922
    6. 'd' → logprob: -13.625041961669922
    7. '250' → logprob: -13.750041961669922
    8. '20' → logprob: -14.000041961669922
    9. '   ' → logprob: -14.250041961669922
    10. '100' → logprob: -14.625041961669922

Token 961: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3208288252353668
    2. ')' → logprob: -1.4458287954330444
    3. '                           ' → logprob: -3.570828914642334
    4. '                               ' → logprob: -5.195828914642334
    5. '                       ' → logprob: -5.695828914642334
    6. '):
' → logprob: -7.070828914642334
    7. ')
' → logprob: -7.195828914642334
    8. ',' → logprob: -10.070828437805176
    9. '               ' → logprob: -10.570828437805176
    10. '```' → logprob: -10.570828437805176

Token 962: ' but' (ID: 889)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.46046942472457886
    2. ' continue' → logprob: -1.4604694843292236
    3. 'continue' → logprob: -2.0854694843292236
    4. '                               ' → logprob: -4.4604692459106445
    5. '                       ' → logprob: -7.7104692459106445
    6. '                            ' → logprob: -9.085469245910645
    7. '                                   ' → logprob: -9.085469245910645
    8. '```' → logprob: -9.335469245910645
    9. ')
' → logprob: -9.710469245910645
    10. '           ' → logprob: -9.835469245910645

Token 963: ' continuous' (ID: 27979)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.040901120752096176
    2. ' continue' → logprob: -3.2909011840820312
    3. '                               ' → logprob: -6.540901184082031
    4. '                           ' → logprob: -6.665901184082031
    5. '```' → logprob: -9.790901184082031
    6. '                       ' → logprob: -10.040901184082031
    7. '   ' → logprob: -11.415901184082031
    8. '                                   ' → logprob: -11.790901184082031
    9. '	continue' → logprob: -12.290901184082031
    10. '                   ' → logprob: -12.415901184082031

Token 964: ' may' (ID: 1340)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -2.0776939392089844
    2. '                       ' → logprob: -2.2026939392089844
    3. 'sections' → logprob: -2.2026939392089844
    4. ' lines' → logprob: -2.8276939392089844
    5. 'section' → logprob: -2.8276939392089844
    6. 'line' → logprob: -3.2026939392089844
    7. '                           ' → logprob: -3.3276939392089844
    8. '_' → logprob: -3.3276939392089844
    9. 'segment' → logprob: -3.3276939392089844
    10. ')' → logprob: -3.4526939392089844

Token 965: ' exceed' (ID: 23275)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.4648555815219879
    2. 'be' → logprob: -1.5898555517196655
    3. '>' → logprob: -2.714855670928955
    4. ' be' → logprob: -3.589855670928955
    5. ' exceed' → logprob: -3.839855670928955
    6. 'continue' → logprob: -3.964855670928955
    7. 'break' → logprob: -4.714855670928955
    8. '```' → logprob: -4.964855670928955
    9. 'overflow' → logprob: -5.339855670928955
    10. 'skip' → logprob: -6.089855670928955

Token 966: '??' (ID: 6961)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.15096750855445862
    2. ' new' → logprob: -2.275967597961426
    3. 'new' → logprob: -3.525967597961426
    4. ' ' → logprob: -4.900967597961426
    5. '                   ' → logprob: -9.275967597961426
    6. '                       ' → logprob: -9.275967597961426
    7. ')' → logprob: -9.525967597961426
    8. '                           ' → logprob: -9.900967597961426
    9. '                               ' → logprob: -10.400967597961426
    10. '```' → logprob: -10.400967597961426

Token 967: ')
' (ID: 446)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.22566987574100494
    2. 'continue' → logprob: -2.4756698608398438
    3. ' continue' → logprob: -2.7256698608398438
    4. '                               ' → logprob: -2.9756698608398438
    5. '                       ' → logprob: -7.850669860839844
    6. '```' → logprob: -8.225669860839844
    7. ')
' → logprob: -8.350669860839844
    8. '           ' → logprob: -9.350669860839844
    9. '                                   ' → logprob: -9.850669860839844
    10. '                            ' → logprob: -9.850669860839844

Token 968: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.019824443385004997
    2. '                               ' → logprob: -4.144824504852295
    3. 'continue' → logprob: -6.019824504852295
    4. ' continue' → logprob: -7.519824504852295
    5. '```' → logprob: -7.894824504852295
    6. '                       ' → logprob: -8.019824028015137
    7. '   ' → logprob: -10.894824028015137
    8. '                                   ' → logprob: -10.894824028015137
    9. '           ' → logprob: -11.019824028015137
    10. '                   ' → logprob: -11.644824028015137

Token 969: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.016575844958424568
    2. '                               ' → logprob: -4.766575813293457
    3. '                           ' → logprob: -5.016575813293457
    4. ' continue' → logprob: -6.766575813293457
    5. '                       ' → logprob: -9.766575813293457
    6. '                                   ' → logprob: -10.391575813293457
    7. '	continue' → logprob: -10.641575813293457
    8. '```' → logprob: -11.016575813293457
    9. '   ' → logprob: -11.516575813293457
    10. '                   ' → logprob: -12.516575813293457

Token 970: ' According' (ID: 16344)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.35626158118247986
    2. '                           ' → logprob: -1.3562616109848022
    3. '                               ' → logprob: -3.3562614917755127
    4. '                       ' → logprob: -5.356261730194092
    5. ' continue' → logprob: -6.106261730194092
    6. '                                   ' → logprob: -9.356261253356934
    7. '```' → logprob: -9.856261253356934
    8. '                   ' → logprob: -9.856261253356934
    9. '   ' → logprob: -10.356261253356934
    10. '	continue' → logprob: -11.356261253356934

Token 971: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.42954233288764954
    2. ' to' → logprob: -1.0545423030853271
    3. '                           ' → logprob: -8.554542541503906
    4. '               ' → logprob: -8.804542541503906
    5. '                       ' → logprob: -9.054542541503906
    6. '_to' → logprob: -9.179542541503906
    7. '#' → logprob: -9.429542541503906
    8. '           ' → logprob: -10.054542541503906
    9. '                   ' → logprob: -10.179542541503906
    10. '                               ' → logprob: -10.804542541503906

Token 972: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2351534366607666
    2. 'continue' → logprob: -1.2351534366607666
    3. 'code' → logprob: -2.1101534366607666
    4. 'pass' → logprob: -2.4851534366607666
    5. 'problem' → logprob: -2.9851534366607666
    6. 'comment' → logprob: -3.1101534366607666
    7. 'fare' → logprob: -3.7351534366607666
    8. 'len' → logprob: -3.7351534366607666
    9. 'prev' → logprob: -3.9851534366607666
    10. '```' → logprob: -4.7351531982421875

Token 973: ' max' (ID: 2999)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.1102601289749146
    2. '                           ' → logprob: -1.7352601289749146
    3. 'description' → logprob: -1.8602601289749146
    4. ',' → logprob: -2.235260009765625
    5. 'statement' → logprob: -3.110260009765625
    6. ' description' → logprob: -3.360260009765625
    7. ' statement' → logprob: -3.485260009765625
    8. '                   ' → logprob: -3.860260009765625
    9. '                               ' → logprob: -3.985260009765625
    10. '#' → logprob: -3.985260009765625

Token 974: ' d' (ID: 272)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.0150582790374756
    2. 'dist' → logprob: -1.2650582790374756
    3. 'line' → logprob: -2.0150582790374756
    4. 'distance' → logprob: -2.1400582790374756
    5. 'new' → logprob: -3.2650582790374756
    6. ' line' → logprob: -3.7650582790374756
    7. '_distance' → logprob: -3.8900582790374756
    8. ' distance' → logprob: -5.265058517456055
    9. '_line' → logprob: -5.390058517456055
    10. ' new' → logprob: -5.765058517456055

Token 975: '_i' (ID: 10853)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.014548459090292454
    2. 'ist' → logprob: -4.889548301696777
    3. 'istance' → logprob: -5.514548301696777
    4. '_line' → logprob: -7.014548301696777
    5. '[line' → logprob: -7.389548301696777
    6. '=' → logprob: -8.514548301696777
    7. 'new' → logprob: -8.639548301696777
    8. '```' → logprob: -8.764548301696777
    9. '   ' → logprob: -8.889548301696777
    10. '<=' → logprob: -9.014548301696777

Token 976: '=' (ID: 28)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.1202585697174072
    2. '<=' → logprob: -1.1202585697174072
    3. ':
' → logprob: -1.4952585697174072
    4. '>' → logprob: -3.6202585697174072
    5. ':' → logprob: -4.370258331298828
    6. '```' → logprob: -4.495258331298828
    7. ')' → logprob: -4.620258331298828
    8. ' >' → logprob: -4.620258331298828
    9. '):
' → logprob: -4.745258331298828
    10. '                           ' → logprob: -4.745258331298828

Token 977: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0010560338851064444
    2. ' ' → logprob: -7.25105619430542
    3. '100' → logprob: -8.251055717468262
    4. '   ' → logprob: -10.876055717468262
    5. '250' → logprob: -11.001055717468262
    6. '300' → logprob: -11.751055717468262
    7. '50' → logprob: -12.001055717468262
    8. '20' → logprob: -12.251055717468262
    9. '500' → logprob: -12.251055717468262
    10. '                   ' → logprob: -12.626055717468262

Token 978: ',' (ID: 11)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.043825577944517136
    2. 'continue' → logprob: -4.168825626373291
    3. '                               ' → logprob: -4.418825626373291
    4. '                       ' → logprob: -4.918825626373291
    5. ' continue' → logprob: -5.168825626373291
    6. '```' → logprob: -6.543825626373291
    7. '
' → logprob: -8.043825149536133
    8. ',' → logprob: -9.043825149536133
    9. '                            ' → logprob: -9.543825149536133
    10. '           ' → logprob: -9.793825149536133

Token 979: ' sum' (ID: 4215)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.24424102902412415
    2. 'continue' → logprob: -1.6192409992218018
    3. ' continue' → logprob: -4.369241237640381
    4. '                       ' → logprob: -5.244241237640381
    5. '                               ' → logprob: -7.994241237640381
    6. '#' → logprob: -9.244240760803223
    7. '```' → logprob: -9.869240760803223
    8. '                   ' → logprob: -9.994240760803223
    9. '
' → logprob: -9.994240760803223
    10. '   ' → logprob: -10.494240760803223

Token 980: ' can' (ID: 665)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.75376296043396
    2. '_of' → logprob: -1.87876296043396
    3. 'of' → logprob: -2.25376296043396
    4. '+' → logprob: -2.37876296043396
    5. '>' → logprob: -2.37876296043396
    6. 'new' → logprob: -3.00376296043396
    7. ' >' → logprob: -3.12876296043396
    8. ' +=' → logprob: -3.37876296043396
    9. '+=' → logprob: -3.75376296043396
    10. '#' → logprob: -3.87876296043396

Token 981: ' be' (ID: 413)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.19452497363090515
    2. ' exceed' → logprob: -2.3195250034332275
    3. 'be' → logprob: -3.6945250034332275
    4. '>' → logprob: -3.6945250034332275
    5. 'continue' → logprob: -4.569524765014648
    6. ' be' → logprob: -4.694524765014648
    7. '                       ' → logprob: -6.569524765014648
    8. 'new' → logprob: -6.569524765014648
    9. 'not' → logprob: -6.569524765014648
    10. 'overflow' → logprob: -6.944524765014648

Token 982: ' larger' (ID: 12384)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.28468436002731323
    2. '>' → logprob: -1.784684419631958
    3. 'new' → logprob: -3.159684419631958
    4. 'more' → logprob: -4.159684181213379
    5. 'greater' → logprob: -5.159684181213379
    6. '#' → logprob: -5.534684181213379
    7. '201' → logprob: -5.909684181213379
    8. '...' → logprob: -6.159684181213379
    9. '```' → logprob: -6.284684181213379
    10. 'over' → logprob: -7.284684181213379

Token 983: ' than' (ID: 1572)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.07712271064519882
    2. '                       ' → logprob: -3.452122688293457
    3. '                               ' → logprob: -3.577122688293457
    4. 'continue' → logprob: -4.702122688293457
    5. ' continue' → logprob: -5.452122688293457
    6. ',' → logprob: -8.327122688293457
    7. '```' → logprob: -8.327122688293457
    8. '                   ' → logprob: -8.702122688293457
    9. '                                   ' → logprob: -8.952122688293457
    10. '                            ' → logprob: -9.452122688293457

Token 984: ' that' (ID: 484)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -6.742448022123426e-05
    2. ' ' → logprob: -9.875067710876465
    3. 'new' → logprob: -11.250067710876465
    4. '   ' → logprob: -14.250067710876465
    5. '
' → logprob: -14.750067710876465
    6. 'd' → logprob: -15.375067710876465
    7. '```' → logprob: -15.375067710876465
    8. '0' → logprob: -15.500067710876465
    9. ' ' → logprob: -15.500067710876465
    10. '  ' → logprob: -15.750067710876465

Token 985: '.' (ID: 13)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2752011716365814
    2. '                       ' → logprob: -1.5252012014389038
    3. '                               ' → logprob: -4.275201320648193
    4. 'continue' → logprob: -5.400201320648193
    5. '```' → logprob: -6.525201320648193
    6. ' continue' → logprob: -7.275201320648193
    7. '
' → logprob: -7.275201320648193
    8. ',' → logprob: -7.525201320648193
    9. '                   ' → logprob: -8.275200843811035
    10. '                        
' → logprob: -8.400200843811035

Token 986: ' We' (ID: 1416)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3946024477481842
    2. 'continue' → logprob: -1.3946024179458618
    3. '                               ' → logprob: -2.8946025371551514
    4. ' continue' → logprob: -3.8946025371551514
    5. '                       ' → logprob: -6.894602298736572
    6. '```' → logprob: -7.144602298736572
    7. '                                   ' → logprob: -9.39460277557373
    8. 'if' → logprob: -9.51960277557373
    9. '\n' → logprob: -9.64460277557373
    10. '\' → logprob: -9.89460277557373

Token 987: ' must' (ID: 2804)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5790101289749146
    2. ' continue' → logprob: -0.8290101289749146
    3. '                       ' → logprob: -6.704010009765625
    4. '                           ' → logprob: -7.079010009765625
    5. '                               ' → logprob: -8.204010009765625
    6. '	continue' → logprob: -8.829010009765625
    7. 'skip' → logprob: -9.079010009765625
    8. '                   ' → logprob: -9.329010009765625
    9. '```' → logprob: -9.329010009765625
    10. ' skip' → logprob: -10.204010009765625

Token 988: ' handle' (ID: 5318)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.019967015832662582
    2. 'skip' → logprob: -4.644967079162598
    3. 'handle' → logprob: -6.019967079162598
    4. '```' → logprob: -6.769967079162598
    5. ' continue' → logprob: -7.019967079162598
    6. 'limit' → logprob: -7.144967079162598
    7. 'allow' → logprob: -7.269967079162598
    8. 'split' → logprob: -7.269967079162598
    9. 'truncate' → logprob: -8.019967079162598
    10. 'check' → logprob: -8.144967079162598

Token 989: ' bigger' (ID: 17791)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.14597705006599426
    2. ' continue' → logprob: -2.145977020263672
    3. '                       ' → logprob: -5.395977020263672
    4. '                               ' → logprob: -5.520977020263672
    5. '                           ' → logprob: -6.020977020263672
    6. '
' → logprob: -6.020977020263672
    7. 'if' → logprob: -6.270977020263672
    8. '```' → logprob: -6.895977020263672
    9. ' if' → logprob: -7.145977020263672
    10. 'new' → logprob: -7.770977020263672

Token 990: ' dist' (ID: 3601)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7547367215156555
    2. 'new' → logprob: -0.8797367215156555
    3. ' distances' → logprob: -3.5047366619110107
    4. '
' → logprob: -3.7547366619110107
    5. 'tokens' → logprob: -4.62973690032959
    6. 'dist' → logprob: -4.75473690032959
    7. '[new' → logprob: -5.12973690032959
    8. '```' → logprob: -5.37973690032959
    9. '_dist' → logprob: -5.50473690032959
    10. 'sizes' → logprob: -5.50473690032959

Token 991: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5909553170204163
    2. '                       ' → logprob: -1.3409552574157715
    3. '                               ' → logprob: -2.5909552574157715
    4. ':
' → logprob: -3.9659552574157715
    5. '```' → logprob: -3.9659552574157715
    6. 'continue' → logprob: -4.4659552574157715
    7. '
' → logprob: -4.5909552574157715
    8. ' if' → logprob: -4.7159552574157715
    9. ' continue' → logprob: -4.8409552574157715
    10. 'else' → logprob: -5.0909552574157715

Token 992: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3071591258049011
    2. '                               ' → logprob: -2.057159185409546
    3. '```' → logprob: -2.557159185409546
    4. '                       ' → logprob: -3.057159185409546
    5. 'continue' → logprob: -5.057158946990967
    6. '``' → logprob: -6.557158946990967
    7. ' continue' → logprob: -6.807158946990967
    8. ' if' → logprob: -7.307158946990967
    9. 'else' → logprob: -7.682158946990967
    10. 'if' → logprob: -8.307159423828125

Token 993: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6625779271125793
    2. '                           ' → logprob: -0.9125779271125793
    3. '                       ' → logprob: -4.037578105926514
    4. ' continue' → logprob: -4.162578105926514
    5. '                               ' → logprob: -4.287578105926514
    6. 'fare' → logprob: -4.287578105926514
    7. '#' (adapté à ' #') → logprob: -4.787578105926514
    8. '```' → logprob: -5.537578105926514
    9. 'if' → logprob: -5.787578105926514
    10. 'for' → logprob: -6.037578105926514

Token 994: ' We'll' (ID: 46830)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0241279602050781
    2. 'continue' → logprob: -1.2741279602050781
    3. 'if' → logprob: -2.024127960205078
    4. 'fare' → logprob: -2.274127960205078
    5. '                       ' → logprob: -3.274127960205078
    6. '```' → logprob: -3.399127960205078
    7. '                           ' → logprob: -3.524127960205078
    8. 'new' → logprob: -4.524127960205078
    9. '``' → logprob: -5.649127960205078
    10. 'else' → logprob: -5.899127960205078

Token 995: ' handle' (ID: 5318)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5361983776092529
    2. 'extend' → logprob: -1.786198377609253
    3. 'cap' → logprob: -2.661198377609253
    4. 'expand' → logprob: -2.661198377609253
    5. 'use' → logprob: -3.911198377609253
    6. 'skip' → logprob: -4.036198616027832
    7. 'limit' → logprob: -4.161198616027832
    8. 'increase' → logprob: -4.286198616027832
    9. 'need' → logprob: -4.661198616027832
    10. 'cl' → logprob: -5.036198616027832

Token 996: ' up' (ID: 869)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7875803112983704
    2. ' new' → logprob: -1.2875802516937256
    3. 'if' → logprob: -2.1625802516937256
    4. '```' → logprob: -3.2875802516937256
    5. 'fare' → logprob: -3.2875802516937256
    6. 'continue' → logprob: -3.7875802516937256
    7. ' if' → logprob: -3.9125802516937256
    8. 'pass' → logprob: -5.287580490112305
    9. 'dist' → logprob: -5.537580490112305
    10. ' fare' → logprob: -5.662580490112305

Token 997: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6286343336105347
    2. '_to' → logprob: -1.6286343336105347
    3. ' to' → logprob: -2.378634452819824
    4. '                       ' → logprob: -3.503634452819824
    5. '```' → logprob: -3.503634452819824
    6. 'def' → logprob: -3.878634452819824
    7. '                   ' → logprob: -4.003634452819824
    8. '=' → logprob: -4.628634452819824
    9. '               ' → logprob: -4.753634452819824
    10. 'if' → logprob: -5.003634452819824

Token 998: ' max' (ID: 2999)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.47549474239349365
    2. '400' → logprob: -1.4754947423934937
    3. '201' → logprob: -2.725494861602783
    4. '250' → logprob: -2.975494861602783
    5. '300' → logprob: -4.100494861602783
    6. 'new' → logprob: -4.725494861602783
    7. '500' → logprob: -5.725494861602783
    8. '210' → logprob: -6.975494861602783
    9. 'max' → logprob: -7.100494861602783
    10. '401' → logprob: -7.850494861602783

Token 999: ' ' (ID: 220)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.022083695977926254
    2. 'new' → logprob: -4.647083759307861
    3. 'dist' → logprob: -5.147083759307861
    4. '```' → logprob: -6.272083759307861
    5. '_distance' → logprob: -6.397083759307861
    6. '_new' → logprob: -7.147083759307861
    7. '200' → logprob: -7.897083759307861
    8. '_' → logprob: -8.397083282470703
    9. ' new' → logprob: -8.397083282470703
    10. 'distance' → logprob: -8.522083282470703

Token 1000: '100' (ID: 1353)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.8662745952606201
    2. 'dist' → logprob: -0.9912745952606201
    3. '201' → logprob: -1.9912745952606201
    4. 'new' → logprob: -3.49127459526062
    5. '_dist' → logprob: -4.366274833679199
    6. '400' → logprob: -5.116274833679199
    7. '250' → logprob: -5.741274833679199
    8. 'max' → logprob: -5.866274833679199
    9. '500' → logprob: -5.866274833679199
    10. '300' → logprob: -5.991274833679199

Token 1001: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011880322359502316
    2. '1' → logprob: -5.261880397796631
    3. '```' → logprob: -6.136880397796631
    4. '...' → logprob: -6.261880397796631
    5. 'new' → logprob: -7.386880397796631
    6. ')' → logprob: -8.511879920959473
    7. '+' → logprob: -8.511879920959473
    8. ',' → logprob: -8.636879920959473
    9. ' ' → logprob: -8.636879920959473
    10. '00' → logprob: -8.636879920959473

Token 1002: ' sum' (ID: 4215)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2679295539855957
    2. '                           ' → logprob: -1.7679295539855957
    3. '                               ' → logprob: -4.267929553985596
    4. '```' → logprob: -4.392929553985596
    5. 'else' → logprob: -4.517929553985596
    6. '
' → logprob: -5.142929553985596
    7. ',' → logprob: -5.392929553985596
    8. ' else' → logprob: -5.517929553985596
    9. '...' → logprob: -6.142929553985596
    10. ' if' → logprob: -6.642929553985596

Token 1003: ' distance' (ID: 9324)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.43822789192199707
    2. '                           ' → logprob: -1.563227891921997
    3. '```' → logprob: -2.813227891921997
    4. '
' → logprob: -3.188227891921997
    5. '<|end|>' → logprob: -4.063227653503418
    6. ' if' → logprob: -5.313227653503418
    7. '...' → logprob: -5.438227653503418
    8. 'else' → logprob: -5.938227653503418
    9. ',' → logprob: -6.188227653503418
    10. '                               ' → logprob: -6.188227653503418

Token 1004: ' for' (ID: 395)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2528119385242462
    2. '                           ' → logprob: -2.127811908721924
    3. '
' → logprob: -3.002811908721924
    4. '```' → logprob: -3.627811908721924
    5. '...' → logprob: -4.877811908721924
    6. ',' → logprob: -5.127811908721924
    7. '<|end|>' → logprob: -5.377811908721924
    8. '                        
' → logprob: -6.127811908721924
    9. '                               ' → logprob: -6.127811908721924
    10. ')' → logprob: -7.252811908721924

Token 1005: ' safety' (ID: 9246)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.0235906839370728
    2. ' new' → logprob: -1.1485906839370728
    3. ' now' → logprob: -2.148590564727783
    4. 'dist' → logprob: -2.273590564727783
    5. 'now' → logprob: -3.148590564727783
    6. 'd' → logprob: -3.773590564727783
    7. 'the' → logprob: -4.773590564727783
    8. ' dist' → logprob: -5.273590564727783
    9. ' d' → logprob: -5.398590564727783
    10. 'each' → logprob: -5.898590564727783

Token 1006: '.
' (ID: 558)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5367710590362549
    2. '                               ' → logprob: -1.5367710590362549
    3. '                       ' → logprob: -2.036771059036255
    4. '```' → logprob: -3.911771059036255
    5. '...' → logprob: -4.036770820617676
    6. 'if' → logprob: -5.786770820617676
    7. ' if' → logprob: -5.786770820617676
    8. 'else' → logprob: -6.161770820617676
    9. '<|end|>' → logprob: -6.161770820617676
    10. '#' → logprob: -6.161770820617676

Token 1007: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.01829778403043747
    2. '                       ' → logprob: -4.1432976722717285
    3. '                               ' → logprob: -6.3932976722717285
    4. '```' → logprob: -8.393298149108887
    5. 'if' → logprob: -9.518298149108887
    6. '
' → logprob: -9.518298149108887
    7. ' if' → logprob: -9.643298149108887
    8. '                   ' → logprob: -10.518298149108887
    9. '           ' → logprob: -10.518298149108887
    10. '                            ' → logprob: -11.143298149108887

Token 1008: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.11378112435340881
    2. 'if' → logprob: -3.113781213760376
    3. 'continue' → logprob: -3.488781213760376
    4. ' if' → logprob: -4.488780975341797
    5. '                       ' → logprob: -5.363780975341797
    6. '                               ' → logprob: -5.488780975341797
    7. ' continue' → logprob: -6.113780975341797
    8. 'new' → logprob: -6.113780975341797
    9. '```' → logprob: -6.238780975341797
    10. 'for' → logprob: -6.363780975341797

Token 1009: ' So' (ID: 2632)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5794983506202698
    2. 'if' → logprob: -1.079498291015625
    3. ' if' → logprob: -3.454498291015625
    4. 'continue' → logprob: -3.579498291015625
    5. 'dist' → logprob: -4.329498291015625
    6. '#' → logprob: -4.954498291015625
    7. '```' → logprob: -5.454498291015625
    8. '                       ' → logprob: -5.579498291015625
    9. 'new' → logprob: -5.829498291015625
    10. 'max' → logprob: -5.954498291015625

Token 1010: ' increase' (ID: 7064)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5295714139938354
    2. 'new' → logprob: -1.4045714139938354
    3. 'max' → logprob: -2.529571533203125
    4. '                           ' → logprob: -3.904571533203125
    5. 'continue' → logprob: -3.904571533203125
    6. 'dist' → logprob: -4.279571533203125
    7. 'for' → logprob: -4.904571533203125
    8. ' if' → logprob: -5.029571533203125
    9. ' new' → logprob: -5.529571533203125
    10. '#' → logprob: -5.529571533203125

Token 1011: ' array' (ID: 2644)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9475687146186829
    2. 'dist' → logprob: -1.572568655014038
    3. ' new' → logprob: -1.822568655014038
    4. 'max' → logprob: -2.447568655014038
    5. '                   ' → logprob: -3.197568655014038
    6. '                       ' → logprob: -4.072568893432617
    7. 'len' → logprob: -4.197568893432617
    8. '               ' → logprob: -4.322568893432617
    9. 'the' → logprob: -4.447568893432617
    10. '```' → logprob: -4.697568893432617

Token 1012: ' size' (ID: 2349)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.9960614442825317
    2. '                       ' → logprob: -1.4960614442825317
    3. ']' → logprob: -2.371061325073242
    4. 'size' → logprob: -2.496061325073242
    5. '                               ' → logprob: -3.246061325073242
    6. '[' → logprob: -3.496061325073242
    7. '           ' → logprob: -3.871061325073242
    8. '       ' → logprob: -3.996061325073242
    9. 'dist' → logprob: -4.121061325073242
    10. ')' → logprob: -4.746061325073242

Token 1013: ' or' (ID: 503)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.35845106840133667
    2. ',' → logprob: -2.2334511280059814
    3. '                       ' → logprob: -2.4834511280059814
    4. '                           ' → logprob: -2.8584511280059814
    5. '```' → logprob: -4.358450889587402
    6. ',
' → logprob: -4.983450889587402
    7. ' from' → logprob: -5.233450889587402
    8. 'from' → logprob: -5.483450889587402
    9. '
' → logprob: -5.608450889587402
    10. '                   ' → logprob: -6.108450889587402

Token 1014: ' ignore' (ID: 17887)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.17539657652378082
    2. 'import' → logprob: -2.800396680831909
    3. '```' → logprob: -3.550396680831909
    4. '#' → logprob: -3.925396680831909
    5. 'break' → logprob: -4.17539644241333
    6. 'dist' → logprob: -4.17539644241333
    7. '                           ' → logprob: -4.42539644241333
    8. '
' → logprob: -6.17539644241333
    9. '...' → logprob: -6.17539644241333
    10. 'pass' → logprob: -6.30039644241333

Token 1015: ' here' (ID: 2105)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.20073360204696655
    2. '                               ' → logprob: -2.9507336616516113
    3. '```' → logprob: -2.9507336616516113
    4. '                       ' → logprob: -3.0757336616516113
    5. 'continue' → logprob: -4.325733661651611
    6. ')' → logprob: -5.575733661651611
    7. ' continue' → logprob: -5.825733661651611
    8. ')
' → logprob: -6.450733661651611
    9. '                                   ' → logprob: -6.575733661651611
    10. '``' → logprob: -6.700733661651611

Token 1016: '.
' (ID: 558)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.014767673797905445
    2. '                       ' → logprob: -5.264767646789551
    3. '                               ' → logprob: -5.514767646789551
    4. '```' → logprob: -5.764767646789551
    5. 'continue' → logprob: -6.389767646789551
    6. ' continue' → logprob: -8.51476764678955
    7. '
' → logprob: -8.88976764678955
    8. '                                   ' → logprob: -10.01476764678955
    9. '``' → logprob: -10.13976764678955
    10. '                   ' → logprob: -10.13976764678955

Token 1017: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5409414172172546
    2. '                       ' → logprob: -1.5409414768218994
    3. '                               ' → logprob: -2.0409414768218994
    4. '\' → logprob: -4.41594123840332
    5. '\n' → logprob: -4.91594123840332
    6. '...' → logprob: -5.04094123840332
    7. '```' → logprob: -5.29094123840332
    8. '                        
' → logprob: -5.41594123840332
    9. '#' → logprob: -5.41594123840332
    10. '
' → logprob: -5.54094123840332

Token 1018: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.006449612323194742
    2. '                               ' → logprob: -5.8814496994018555
    3. 'continue' → logprob: -6.3814496994018555
    4. '                       ' → logprob: -7.1314496994018555
    5. '#' (adapté à ' #') → logprob: -7.5064496994018555
    6. ' continue' → logprob: -8.881449699401855
    7. '```' → logprob: -9.631449699401855
    8. '           ' → logprob: -9.631449699401855
    9. '                                   ' → logprob: -10.006449699401855
    10. 'new' → logprob: -10.131449699401855

Token 1019: ' We'll' (ID: 46830)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.010835346765816212
    2. '                               ' → logprob: -5.63583517074585
    3. '#' → logprob: -5.88583517074585
    4. '                       ' → logprob: -6.13583517074585
    5. 'continue' → logprob: -7.26083517074585
    6. '```' → logprob: -7.26083517074585
    7. 'new' → logprob: -9.010835647583008
    8. ' continue' → logprob: -9.260835647583008
    9. '                            
' → logprob: -9.510835647583008
    10. '                            ' → logprob: -9.760835647583008

Token 1020: ' increase' (ID: 7064)
  Prédit: 'expand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expand' → logprob: -0.8289665579795837
    2. 'continue' → logprob: -1.5789666175842285
    3. 'resize' → logprob: -1.7039666175842285
    4. 'increase' → logprob: -2.2039666175842285
    5. 'extend' → logprob: -3.5789666175842285
    6. 'replace' → logprob: -4.4539666175842285
    7. 'skip' → logprob: -4.9539666175842285
    8. 'change' → logprob: -5.4539666175842285
    9. 'break' → logprob: -5.5789666175842285
    10. '#' → logprob: -6.5789666175842285

Token 1021: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2909136116504669
    2. 'the' → logprob: -2.4159135818481445
    3. '200' → logprob: -3.0409135818481445
    4. 'len' → logprob: -3.1659135818481445
    5. 'size' → logprob: -3.2909135818481445
    6. '```' → logprob: -4.1659135818481445
    7. '100' → logprob: -5.0409135818481445
    8. 'max' → logprob: -5.5409135818481445
    9. ' the' → logprob: -5.7909135818481445
    10. ' dist' → logprob: -6.2909135818481445

Token 1022: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.4903503954410553
    2. '_size' → logprob: -1.490350365638733
    3. 'size' → logprob: -2.9903504848480225
    4. ' =' → logprob: -3.1153504848480225
    5. '[v' → logprob: -4.615350246429443
    6. '                   ' → logprob: -4.740350246429443
    7. '   ' → logprob: -4.990350246429443
    8. '=' → logprob: -5.365350246429443
    9. '               ' → logprob: -5.615350246429443
    10. 's' → logprob: -5.740350246429443

Token 1023: '_company' (ID: 77215)
  Prédit: '_company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -0.47193387150764465
    2. 'company' → logprob: -1.4719338417053223
    3. 'current' → logprob: -2.2219338417053223
    4. '_current' → logprob: -3.7219338417053223
    5. 'section' → logprob: -4.596933841705322
    6. '_section' → logprob: -5.971933841705322
    7. '[' → logprob: -7.221933841705322
    8. '
' → logprob: -8.34693431854248
    9. '_' → logprob: -9.84693431854248
    10. '```' → logprob: -9.84693431854248

Token 1024: '_section' (ID: 41389)
  Prédit: '_section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_section' → logprob: -8.363617962459102e-05
    2. 'section' → logprob: -10.375083923339844
    3. '_sections' → logprob: -10.875083923339844
    4. '
' → logprob: -11.500083923339844
    5. '_SECTION' → logprob: -12.625083923339844
    6. '   ' → logprob: -12.625083923339844
    7. 'Section' → logprob: -13.125083923339844
    8. '[' → logprob: -13.375083923339844
    9. '_' → logprob: -13.500083923339844
    10. '_table' → logprob: -13.625083923339844

Token 1025: ' max' (ID: 2999)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.105120301246643
    2. '                       ' → logprob: -1.480120301246643
    3. ']' → logprob: -1.855120301246643
    4. '
' → logprob: -2.8551201820373535
    5. ']
' → logprob: -3.3551201820373535
    6. 'new' → logprob: -4.1051201820373535
    7. '                   ' → logprob: -4.3551201820373535
    8. '           ' → logprob: -4.4801201820373535
    9. '                        
' → logprob: -4.4801201820373535
    10. '...' → logprob: -4.6051201820373535

Token 1026: ' to' (ID: 316)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.37330418825149536
    2. 'size' → logprob: -2.1233041286468506
    3. '_' → logprob: -2.3733041286468506
    4. ' =' → logprob: -3.3733041286468506
    5. '=' → logprob: -4.62330436706543
    6. '200' → logprob: -4.99830436706543
    7. '       ' → logprob: -5.24830436706543
    8. '100' → logprob: -5.24830436706543
    9. ' size' → logprob: -5.37330436706543
    10. '
' → logprob: -5.49830436706543

Token 1027: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -6.24179228907451e-05
    2. '10' → logprob: -11.000061988830566
    3. '200' → logprob: -11.500061988830566
    4. '500' → logprob: -11.625061988830566
    5. '300' → logprob: -12.500061988830566
    6. '=' → logprob: -12.625061988830566
    7. '101' → logprob: -12.625061988830566
    8. '
' → logprob: -12.750061988830566
    9. '```' → logprob: -13.125061988830566
    10. '   ' → logprob: -13.125061988830566

Token 1028: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.4855663721391466e-05
    2. '500' → logprob: -11.875015258789062
    3. '200' → logprob: -12.375015258789062
    4. '300' → logprob: -13.875015258789062
    5. '10' → logprob: -14.000015258789062
    6. '101' → logprob: -14.250015258789062
    7. '400' → logprob: -14.500015258789062
    8. '150' → logprob: -15.750015258789062
    9. '201' → logprob: -16.000015258789062
    10. '999' → logprob: -16.125015258789062

Token 1029: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.37502774596214294
    2. '0' → logprob: -1.3750277757644653
    3. '01' → logprob: -3.000027656555176
    4. '1' → logprob: -5.375027656555176
    5. ']' → logprob: -5.500027656555176
    6. '000' → logprob: -7.875027656555176
    7. '001' → logprob: -8.000027656555176
    8. '```' → logprob: -8.375027656555176
    9. ']
' → logprob: -8.750027656555176
    10. '2' → logprob: -10.375027656555176

Token 1030: '.
' (ID: 558)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7454099059104919
    2. '
' → logprob: -0.8704099059104919
    3. '                       ' → logprob: -2.8704099655151367
    4. '<|end|>' → logprob: -3.4954099655151367
    5. '```' → logprob: -5.745409965515137
    6. '           ' → logprob: -6.245409965515137
    7. '                            
' → logprob: -6.370409965515137
    8. '       ' → logprob: -6.495409965515137
    9. ')' → logprob: -6.620409965515137
    10. '                        
' → logprob: -6.745409965515137

Token 1031: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3720013201236725
    2. '                       ' → logprob: -1.49700129032135
    3. '                            
' → logprob: -4.2470011711120605
    4. '#' → logprob: -4.3720011711120605
    5. '```' → logprob: -4.3720011711120605
    6. '                        
' → logprob: -4.6220011711120605
    7. '<|end|>' → logprob: -4.7470011711120605
    8. '...' → logprob: -4.7470011711120605
    9. '
' → logprob: -4.9970011711120605
    10. '\' → logprob: -6.7470011711120605

Token 1032: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.1369827687740326
    2. '#' (adapté à ' #') → logprob: -2.2619826793670654
    3. '                       ' → logprob: -5.1369829177856445
    4. '...' → logprob: -6.0119829177856445
    5. '```' → logprob: -6.1369829177856445
    6. '                               ' → logprob: -6.3869829177856445
    7. 'dist' → logprob: -6.3869829177856445
    8. 'new' → logprob: -6.3869829177856445
    9. '                            ' → logprob: -6.6369829177856445
    10. '                            
' → logprob: -6.8869829177856445

Token 1033: ' Ref' (ID: 14132)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37194550037384033
    2. '                           ' → logprob: -1.2469455003738403
    3. '                       ' → logprob: -5.246945381164551
    4. 'dist' → logprob: -5.496945381164551
    5. '```' → logprob: -6.371945381164551
    6. '       ' → logprob: -6.746945381164551
    7. 'new' → logprob: -6.871945381164551
    8. '...' → logprob: -6.871945381164551
    9. '                            
' → logprob: -6.871945381164551
    10. '                            ' → logprob: -6.871945381164551

Token 1034: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.040423378348350525
    2. 'lect' → logprob: -4.040423393249512
    3. 'er' → logprob: -4.415423393249512
    4. 'resh' → logprob: -5.165423393249512
    5. 'ine' → logprob: -6.040423393249512
    6. 'act' → logprob: -7.040423393249512
    7. 'actoring' → logprob: -7.790423393249512
    8. 'orm' → logprob: -8.290423393249512
    9. '#' → logprob: -9.540423393249512
    10. '
' → logprob: -10.290423393249512

Token 1035: ' dist' (ID: 3601)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0089370012283325
    2. '       ' → logprob: -1.3839370012283325
    3. '                           ' → logprob: -2.508936882019043
    4. '           ' → logprob: -3.133936882019043
    5. '#' → logprob: -3.133936882019043
    6. 'dist' → logprob: -3.633936882019043
    7. '<|end|>' → logprob: -3.633936882019043
    8. 'def' → logprob: -3.633936882019043
    9. '                       ' → logprob: -3.883936882019043
    10. 'import' → logprob: -4.008936882019043

Token 1036: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16839395463466644
    2. '_in' → logprob: -3.543393850326538
    3. '
' → logprob: -3.668393850326538
    4. ']' → logprob: -3.793393850326538
    5. '=' → logprob: -4.793394088745117
    6. '[
' → logprob: -4.793394088745117
    7. ')' → logprob: -4.918394088745117
    8. '#' → logprob: -5.168394088745117
    9. 'import' → logprob: -5.418394088745117
    10. '_size' → logprob: -5.793394088745117

Token 1037: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18288306891918182
    2. ' [' → logprob: -1.8078830242156982
    3. '[[' → logprob: -6.557883262634277
    4. '```' → logprob: -6.807883262634277
    5. '100' → logprob: -9.307883262634277
    6. '[n' → logprob: -9.432883262634277
    7. 'dist' → logprob: -9.807883262634277
    8. '[
' → logprob: -9.807883262634277
    9. ' [[[' → logprob: -9.932883262634277
    10. '...' → logprob: -9.932883262634277

Token 1038: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0650407075881958
    2. '[n' → logprob: -1.1900407075881958
    3. '100' → logprob: -2.1900405883789062
    4. 'n' → logprob: -2.3150405883789062
    5. ' [' → logprob: -2.5650405883789062
    6. '(n' → logprob: -3.4400405883789062
    7. '[u' → logprob: -4.940040588378906
    8. '```' → logprob: -4.940040588378906
    9. '   ' → logprob: -5.565040588378906
    10. '][' → logprob: -5.565040588378906

Token 1039: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.037899404764175415
    2. '][' → logprob: -3.4128994941711426
    3. ',' → logprob: -5.537899494171143
    4. ',
' → logprob: -10.162899017333984
    5. ' +' → logprob: -10.162899017333984
    6. '+,' → logprob: -10.162899017333984
    7. '
' → logprob: -10.287899017333984
    8. '```' → logprob: -10.912899017333984
    9. '[' → logprob: -11.037899017333984
    10. ',len' → logprob: -11.162899017333984

Token 1040: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023739850148558617
    2. '+' → logprob: -6.252374172210693
    3. '][' → logprob: -8.627373695373535
    4. '[' → logprob: -9.502373695373535
    5. '   ' → logprob: -10.252373695373535
    6. '=' → logprob: -10.377373695373535
    7. '```' → logprob: -10.502373695373535
    8. '
' → logprob: -10.627373695373535
    9. '	' → logprob: -11.252373695373535
    10. '\t' → logprob: -12.002373695373535

Token 1041: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001439459010725841
    2. ',' → logprob: -10.250144004821777
    3. '[' → logprob: -10.250144004821777
    4. '   ' → logprob: -11.000144004821777
    5. '[c' → logprob: -11.625144004821777
    6. ']' → logprob: -11.750144004821777
    7. ' ][' → logprob: -11.750144004821777
    8. '       ' → logprob: -11.875144004821777
    9. '           ' → logprob: -12.000144004821777
    10. '```' → logprob: -12.375144004821777

Token 1042: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0022458923049271107
    2. '][' → logprob: -6.752245903015137
    3. '[c' → logprob: -7.502245903015137
    4. ' c' → logprob: -8.002245903015137
    5. '(c' → logprob: -9.752245903015137
    6. '
' → logprob: -10.252245903015137
    7. '```' → logprob: -10.252245903015137
    8. '   ' → logprob: -11.377245903015137
    9. '0' → logprob: -11.877245903015137
    10. ']' → logprob: -12.377245903015137

Token 1043: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.5716304410016164e-05
    2. '1' → logprob: -10.375035285949707
    3. ' +' → logprob: -13.750035285949707
    4. '```' → logprob: -13.750035285949707
    5. '[' → logprob: -14.000035285949707
    6. '][' → logprob: -14.500035285949707
    7. '
' → logprob: -15.250035285949707
    8. '+
' → logprob: -15.625035285949707
    9. 'plus' → logprob: -15.875035285949707
    10. '++' → logprob: -16.125036239624023

Token 1044: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024382755509577692
    2. '+' → logprob: -8.500244140625
    3. '100' → logprob: -11.375244140625
    4. '   ' → logprob: -11.500244140625
    5. ' ' → logprob: -12.125244140625
    6. '
' → logprob: -12.500244140625
    7. '```' → logprob: -14.000244140625
    8. '01' → logprob: -14.000244140625
    9. '2' → logprob: -14.062744140625
    10. ' +' → logprob: -14.437744140625

Token 1045: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006509594968520105
    2. '[' → logprob: -7.500650882720947
    3. '100' → logprob: -10.500651359558105
    4. '```' → logprob: -11.000651359558105
    5. '*' → logprob: -11.500651359558105
    6. ''][' → logprob: -11.875651359558105
    7. '#' → logprob: -12.750651359558105
    8. '"][' → logprob: -12.875651359558105
    9. ']' → logprob: -12.875651359558105
    10. ']][' → logprob: -13.000651359558105

Token 1046: 'max' (ID: 3228)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -9.014684110297821e-06
    2. '
' → logprob: -13.125008583068848
    3. '   ' → logprob: -13.125008583068848
    4. '(' → logprob: -13.750008583068848
    5. '10' → logprob: -14.250008583068848
    6. '200' → logprob: -14.375008583068848
    7. ']' → logprob: -14.875008583068848
    8. '```' → logprob: -15.000008583068848
    9. ' ' → logprob: -15.125008583068848
    10. '`' → logprob: -15.500008583068848

Token 1047: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.45487385988235474
    2. 'dist' → logprob: -1.70487380027771
    3. '100' → logprob: -2.20487380027771
    4. '_distance' → logprob: -2.82987380027771
    5. 'distance' → logprob: -5.454874038696289
    6. 'Dist' → logprob: -5.704874038696289
    7. '=' → logprob: -5.829874038696289
    8. '```' → logprob: -6.704874038696289
    9. ' =' → logprob: -7.579874038696289
    10. '_length' → logprob: -7.579874038696289

Token 1048: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0514538437128067
    2. '_in' → logprob: -4.176454067230225
    3. ']' → logprob: -4.426454067230225
    4. '=' → logprob: -4.676454067230225
    5. ' +' → logprob: -4.926454067230225
    6. '100' → logprob: -6.301454067230225
    7. ']+' → logprob: -6.551454067230225
    8. '```' → logprob: -7.176454067230225
    9. ']
' → logprob: -7.676454067230225
    10. '_' → logprob: -8.051453590393066

Token 1049: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0007314971298910677
    2. '1' → logprob: -8.125731468200684
    3. '=' → logprob: -9.375731468200684
    4. ']' → logprob: -9.375731468200684
    5. '   ' → logprob: -9.625731468200684
    6. '
' → logprob: -9.875731468200684
    7. ' ' → logprob: -10.250731468200684
    8. '...' → logprob: -10.500731468200684
    9. '+' → logprob: -10.625731468200684
    10. '```' → logprob: -11.625731468200684

Token 1050: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11049295961856842
    2. ']
' → logprob: -2.3604929447174072
    3. '=' → logprob: -5.985493183135986
    4. '```' → logprob: -6.360493183135986
    5. ']:
' → logprob: -6.360493183135986
    6. '],' → logprob: -6.610493183135986
    7. ']=' → logprob: -7.360493183135986
    8. '+' → logprob: -7.610493183135986
    9. ']

' → logprob: -8.610492706298828
    10. ']
' → logprob: -9.110492706298828

Token 1051: ' where' (ID: 1919)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.16479404270648956
    2. '#' → logprob: -2.5397939682006836
    3. '
' → logprob: -3.5397939682006836
    4. '...' → logprob: -4.039793968200684
    5. '<|end|>' → logprob: -5.039793968200684
    6. '```' → logprob: -5.414793968200684
    7. '                            
' → logprob: -6.164793968200684
    8. '                       ' → logprob: -6.289793968200684
    9. '<|end|>' → logprob: -6.789793968200684
    10. ' #' → logprob: -7.039793968200684

Token 1052: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2823207378387451
    2. '100' → logprob: -1.4073207378387451
    3. '=' → logprob: -7.907320976257324
    4. '```' → logprob: -8.407320976257324
    5. '
' → logprob: -8.907320976257324
    6. 'dist' → logprob: -9.157320976257324
    7. 'MAX' → logprob: -9.532320976257324
    8. '#' → logprob: -9.657320976257324
    9. '`' → logprob: -9.907320976257324
    10. ' max' → logprob: -10.157320976257324

Token 1053: ' dist' (ID: 3601)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.04876619949936867
    2. 'dist' → logprob: -3.0487661361694336
    3. 'DIST' → logprob: -10.048766136169434
    4. '_distance' → logprob: -10.298766136169434
    5. 'Dist' → logprob: -10.548766136169434
    6. '100' → logprob: -10.923766136169434
    7. '```' → logprob: -11.048766136169434
    8. '_DIST' → logprob: -11.298766136169434
    9. '=' → logprob: -12.048766136169434
    10. '
' → logprob: -12.173766136169434

Token 1054: ' approx' (ID: 33956)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036215700674802065
    2. ' =' → logprob: -5.628621578216553
    3. '=
' → logprob: -11.503621101379395
    4. '=max' → logprob: -12.378621101379395
    5. '```' → logprob: -12.878621101379395
    6. '100' → logprob: -13.378621101379395
    7. ']=' → logprob: -13.878621101379395
    8. ']' → logprob: -15.003621101379395
    9. '+' → logprob: -15.003621101379395
    10. '   ' → logprob: -15.503621101379395

Token 1055: ' m' (ID: 284)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.031475476920604706
    2. '=' → logprob: -3.53147554397583
    3. ' ' → logprob: -7.28147554397583
    4. '10' → logprob: -7.78147554397583
    5. '```' → logprob: -8.406475067138672
    6. '`' → logprob: -8.531475067138672
    7. ' =' → logprob: -9.531475067138672
    8. '``' → logprob: -10.031475067138672
    9. '1' → logprob: -10.531475067138672
    10. '   ' → logprob: -11.156475067138672

Token 1056: '*' (ID: 9)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.457660436630249
    2. '100' → logprob: -1.582660436630249
    3. '...' → logprob: -1.707660436630249
    4. '<|end|>' → logprob: -2.582660436630249
    5. ']' → logprob: -2.707660436630249
    6. '#' → logprob: -3.332660436630249
    7. '                       ' → logprob: -3.582660436630249
    8. ',' → logprob: -3.707660436630249
    9. '       ' → logprob: -3.832660436630249
    10. '```' → logprob: -3.957660436630249

Token 1057: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.004188687074929476
    2. '201' → logprob: -6.129188537597656
    3. 'd' → logprob: -7.129188537597656
    4. ' ' → logprob: -7.629188537597656
    5. 'max' → logprob: -8.004188537597656
    6. '100' → logprob: -9.504188537597656
    7. 'line' → logprob: -9.629188537597656
    8. '   ' → logprob: -10.004188537597656
    9. '[' → logprob: -10.254188537597656
    10. '
' → logprob: -10.879188537597656

Token 1058: '=' (ID: 28)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.04728700593113899
    2. '#' → logprob: -4.2972869873046875
    3. '```' → logprob: -4.7972869873046875
    4. '       ' → logprob: -4.9222869873046875
    5. '...' → logprob: -5.2972869873046875
    6. '                       ' → logprob: -5.7972869873046875
    7. '<|end|>' → logprob: -5.9222869873046875
    8. '
' → logprob: -6.4222869873046875
    9. '           ' → logprob: -7.1722869873046875
    10. ']' → logprob: -7.6722869873046875

Token 1059: '2' (ID: 17)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.020684247836470604
    2. '200' → logprob: -3.895684242248535
    3. '201' → logprob: -9.520684242248535
    4. ' ' → logprob: -11.395684242248535
    5. '10' → logprob: -11.395684242248535
    6. '400' → logprob: -11.770684242248535
    7. 'n' → logprob: -12.270684242248535
    8. '(' → logprob: -12.395684242248535
    9. '   ' → logprob: -12.395684242248535
    10. '202' → logprob: -12.520684242248535

Token 1060: ',' (ID: 11)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03680531680583954
    2. '001' → logprob: -4.036805152893066
    3. '0' → logprob: -4.286805152893066
    4. '00' → logprob: -5.786805152893066
    5. '1' → logprob: -7.786805152893066
    6. '```' → logprob: -7.786805152893066
    7. '010' → logprob: -8.786805152893066
    8. '01' → logprob: -8.786805152893066
    9. '   ' → logprob: -9.536805152893066
    10. '       ' → logprob: -10.161805152893066

Token 1061: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.11771068722009659
    2. '001' → logprob: -2.992710590362549
    3. '100' → logprob: -3.367710590362549
    4. '010' → logprob: -4.742710590362549
    5. '0' → logprob: -5.367710590362549
    6. '200' → logprob: -5.867710590362549
    7. '00' → logprob: -6.867710590362549
    8. '002' → logprob: -6.992710590362549
    9. '
' → logprob: -7.367710590362549
    10. '201' → logprob: -7.492710590362549

Token 1062: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015287162736058235
    2. ']' → logprob: -6.015287399291992
    3. '       ' → logprob: -6.140287399291992
    4. '```' → logprob: -6.390287399291992
    5. '                       ' → logprob: -6.640287399291992
    6. ']
' → logprob: -6.765287399291992
    7. '                   ' → logprob: -7.015287399291992
    8. '
' → logprob: -7.140287399291992
    9. '           ' → logprob: -7.390287399291992
    10. '00' → logprob: -7.390287399291992

Token 1063: '000' (ID: 1302)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.032157063484192
    2. '000' → logprob: -1.282157063484192
    3. '100' → logprob: -2.0321569442749023
    4. '001' → logprob: -2.4071569442749023
    5. '...' → logprob: -2.9071569442749023
    6. '```' → logprob: -3.7821569442749023
    7. '0' → logprob: -4.282156944274902
    8. '
' → logprob: -4.282156944274902
    9. '#' → logprob: -4.657156944274902
    10. '[' → logprob: -4.907156944274902

Token 1064: ' too' (ID: 3101)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5289060473442078
    2. '...' → logprob: -2.6539061069488525
    3. '<|end|>' → logprob: -2.7789061069488525
    4. ']' → logprob: -2.9039061069488525
    5. '
' → logprob: -3.0289061069488525
    6. '#' → logprob: -3.4039061069488525
    7. '                       ' → logprob: -3.5289061069488525
    8. '       ' → logprob: -3.7789061069488525
    9. '[' → logprob: -3.9039061069488525
    10. '           ' → logprob: -4.403905868530273

Token 1065: ' big' (ID: 3464)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -1.4194456338882446
    2. ']' → logprob: -1.9194456338882446
    3. '```' → logprob: -2.044445514678955
    4. '
' → logprob: -2.544445514678955
    5. ']
' → logprob: -3.044445514678955
    6. '#' → logprob: -3.419445514678955
    7. '0' → logprob: -3.419445514678955
    8. '[' → logprob: -3.419445514678955
    9. '[
' → logprob: -3.419445514678955
    10. '000' → logprob: -3.669445514678955

Token 1066: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1067: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.38119742274284363
    2. '<|end|>' → logprob: -1.756197452545166
    3. '                       ' → logprob: -3.256197452545166
    4. '...' → logprob: -3.756197452545166
    5. '#' → logprob: -4.256197452545166
    6. '[' → logprob: -4.506197452545166
    7. '       ' → logprob: -4.756197452545166
    8. '                            ' → logprob: -4.756197452545166
    9. ')' → logprob: -5.256197452545166
    10. '           ' → logprob: -5.631197452545166

Token 1068: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.14364966750144958
    2. '...' → logprob: -2.8936495780944824
    3. '<|end|>' → logprob: -3.3936495780944824
    4. '#' (adapté à ' #') → logprob: -4.018649578094482
    5. '                       ' → logprob: -4.268649578094482
    6. '                            ' → logprob: -5.893649578094482
    7. ')' → logprob: -5.893649578094482
    8. '                               ' → logprob: -6.393649578094482
    9. '                   ' → logprob: -7.268649578094482
    10. '                            
' → logprob: -7.518649578094482

Token 1069: ' To' (ID: 2514)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5680546164512634
    2. '#' → logprob: -0.9430546164512634
    3. '...' → logprob: -3.443054676055908
    4. '                       ' → logprob: -5.193054676055908
    5. '                            ' → logprob: -7.068054676055908
    6. '                            
' → logprob: -7.443054676055908
    7. ' #' → logprob: -7.568054676055908
    8. 'new' → logprob: -7.693054676055908
    9. ')' → logprob: -7.693054676055908
    10. '                               ' → logprob: -8.06805419921875

Token 1070: ' avoid' (ID: 8397)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.361383318901062
    2. '#' → logprob: -1.361383318901062
    3. 'avoid' → logprob: -3.9863834381103516
    4. '...' → logprob: -5.236383438110352
    5. '                           ' → logprob: -5.236383438110352
    6. ' continue' → logprob: -5.611383438110352
    7. 'break' → logprob: -5.736383438110352
    8. ' #' → logprob: -6.236383438110352
    9. 'save' → logprob: -6.736383438110352
    10. '
' → logprob: -7.111383438110352

Token 1071: ' memory' (ID: 8197)
  Prédit: 'memory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memory' → logprob: -0.7090634703636169
    2. 'complex' → logprob: -2.3340635299682617
    3. 'continue' → logprob: -2.7090635299682617
    4. ' memory' → logprob: -3.0840635299682617
    5. 'code' → logprob: -3.3340635299682617
    6. '
' → logprob: -3.3340635299682617
    7. 'break' → logprob: -3.4590635299682617
    8. '```' → logprob: -3.5840635299682617
    9. 'continu' → logprob: -3.9590635299682617
    10. '#' → logprob: -4.084063529968262

Token 1072: ' explosion' (ID: 53199)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -1.0712968111038208
    2. 'limit' → logprob: -1.4462968111038208
    3. ' overflow' → logprob: -2.0712966918945312
    4. ',' → logprob: -3.0712966918945312
    5. 'limitations' → logprob: -3.1962966918945312
    6. '_' → logprob: -3.8212966918945312
    7. 'usage' → logprob: -3.8212966918945312
    8. 'limits' → logprob: -4.196296691894531
    9. 'over' → logprob: -4.321296691894531
    10. '_limit' → logprob: -4.321296691894531

Token 1073: ',' (ID: 11)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.041285887360572815
    2. '                       ' → logprob: -3.541285991668701
    3. ',' → logprob: -5.041285991668701
    4. '                               ' → logprob: -6.666285991668701
    5. '#' → logprob: -6.791285991668701
    6. '...' → logprob: -7.166285991668701
    7. 'continue' → logprob: -7.666285991668701
    8. '                   ' → logprob: -7.791285991668701
    9. '
' → logprob: -8.291285514831543
    10. '                            ' → logprob: -9.291285514831543

Token 1074: ' we'll' (ID: 22782)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3467371463775635
    2. '                           ' → logprob: -1.3467371463775635
    3. '                       ' → logprob: -4.346736907958984
    4. ' continue' → logprob: -4.596736907958984
    5. '#' → logprob: -5.846736907958984
    6. '                               ' → logprob: -6.596736907958984
    7. '```' → logprob: -6.596736907958984
    8. 'new' → logprob: -6.596736907958984
    9. '                   ' → logprob: -6.971736907958984
    10. '
' → logprob: -7.846736907958984

Token 1075: ' use' (ID: 1199)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.040725111961364746
    2. 'import' → logprob: -4.540725231170654
    3. 'skip' → logprob: -4.665725231170654
    4. 'limit' → logprob: -4.665725231170654
    5. '...' → logprob: -6.415725231170654
    6. ' continue' → logprob: -6.415725231170654
    7. 'pass' → logprob: -6.540725231170654
    8. '#' → logprob: -6.540725231170654
    9. 'implement' → logprob: -7.040725231170654
    10. 'use' → logprob: -7.665725231170654

Token 1076: ' dictionary' (ID: 22131)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02336101233959198
    2. 'dict' → logprob: -4.5233612060546875
    3. '{}' → logprob: -5.6483612060546875
    4. 'd' → logprob: -5.6483612060546875
    5. 'dictionary' → logprob: -6.1483612060546875
    6. ' a' → logprob: -6.7733612060546875
    7. 'default' → logprob: -7.8983612060546875
    8. 'import' → logprob: -8.148361206054688
    9. '{' → logprob: -8.398361206054688
    10. '
' → logprob: -8.773361206054688

Token 1077: ' instead' (ID: 7665)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8113076686859131
    2. '
' → logprob: -1.061307668685913
    3. ']
' → logprob: -2.811307668685913
    4. ')
' → logprob: -3.311307668685913
    5. ')' → logprob: -3.686307668685913
    6. '                   ' → logprob: -4.311307907104492
    7. '                       ' → logprob: -4.561307907104492
    8. ',
' → logprob: -4.811307907104492
    9. '                           ' → logprob: -5.311307907104492
    10. '               ' → logprob: -5.436307907104492

Token 1078: ' of' (ID: 328)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7400535345077515
    2. '                           ' → logprob: -1.9900535345077515
    3. ']' → logprob: -2.240053653717041
    4. '<|end|>' → logprob: -2.490053653717041
    5. '                   ' → logprob: -2.740053653717041
    6. '
' → logprob: -3.365053653717041
    7. ')' → logprob: -3.865053653717041
    8. '...' → logprob: -4.740053653717041
    9. '               ' → logprob: -4.740053653717041
    10. '       ' → logprob: -4.990053653717041

Token 1079: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3655298948287964
    2. 'dist' → logprob: -1.9905298948287964
    3. 'default' → logprob: -2.490530014038086
    4. '[' → logprob: -2.740530014038086
    5. ' list' → logprob: -5.615530014038086
    6. '[[' → logprob: -5.865530014038086
    7. 'lists' → logprob: -5.865530014038086
    8. '[]' → logprob: -6.240530014038086
    9. 'array' → logprob: -6.740530014038086
    10. 'dict' → logprob: -6.990530014038086

Token 1080: '.
' (ID: 558)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.0467501878738403
    2. ']' → logprob: -1.5467501878738403
    3. '<|end|>' → logprob: -1.7967501878738403
    4. '                           ' → logprob: -2.296750068664551
    5. '                   ' → logprob: -2.796750068664551
    6. ']
' → logprob: -3.921750068664551
    7. '
' → logprob: -4.296750068664551
    8. '               ' → logprob: -4.671750068664551
    9. ')' → logprob: -5.046750068664551
    10. '...' → logprob: -5.171750068664551

Token 1081: '                           ' (ID: 1686)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.0700849294662476
    2. '                           ' → logprob: -1.0700849294662476
    3. ']' → logprob: -1.9450849294662476
    4. '       ' → logprob: -3.570085048675537
    5. '[' → logprob: -3.945085048675537
    6. '                   ' → logprob: -4.195085048675537
    7. '[
' → logprob: -4.195085048675537
    8. '#' → logprob: -4.320085048675537
    9. '
' → logprob: -4.320085048675537
    10. '...' → logprob: -4.820085048675537

Token 1082: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.35214149951934814
    2. '                       ' → logprob: -2.2271413803100586
    3. '...' → logprob: -2.6021413803100586
    4. '#' (adapté à ' #') → logprob: -3.1021413803100586
    5. ']' → logprob: -4.227141380310059
    6. ')' → logprob: -4.602141380310059
    7. 'else' → logprob: -4.727141380310059
    8. '                   ' → logprob: -4.977141380310059
    9. '                            
' → logprob: -5.727141380310059
    10. '                            ' → logprob: -5.852141380310059

Token 1083: ' So' (ID: 2632)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.878259539604187
    2. '#' → logprob: -1.003259539604187
    3. ']' → logprob: -2.7532596588134766
    4. '                       ' → logprob: -2.8782596588134766
    5. '...' → logprob: -3.6282596588134766
    6. ')' → logprob: -3.7532596588134766
    7. '                   ' → logprob: -5.503259658813477
    8. 'import' → logprob: -5.878259658813477
    9. 'else' → logprob: -5.878259658813477
    10. '}' → logprob: -6.128259658813477

Token 1084: ' need' (ID: 1309)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.1798574924468994
    2. 'dist' → logprob: -1.3048574924468994
    3. 'import' → logprob: -1.8048574924468994
    4. '#' → logprob: -2.0548574924468994
    5. 'break' → logprob: -2.5548574924468994
    6. '```' → logprob: -3.9298574924468994
    7. 'continue' → logprob: -4.92985725402832
    8. '                       ' → logprob: -5.17985725402832
    9. 'pass' → logprob: -5.30485725402832
    10. 'def' → logprob: -5.42985725402832

Token 1085: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.20112742483615875
    2. ' to' → logprob: -1.8261274099349976
    3. 'import' → logprob: -4.576127529144287
    4. 'replace' → logprob: -6.451127529144287
    5. 'def' → logprob: -6.576127529144287
    6. '```' → logprob: -6.701127529144287
    7. ')' → logprob: -7.076127529144287
    8. '...' → logprob: -7.201127529144287
    9. 'more' → logprob: -7.701127529144287
    10. '#' → logprob: -7.701127529144287

Token 1086: ' update' (ID: 4027)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5583816170692444
    2. 'replace' → logprob: -1.1833815574645996
    3. 'break' → logprob: -3.4333815574645996
    4. 'continue' → logprob: -3.5583815574645996
    5. 'change' → logprob: -3.9333815574645996
    6. 'dist' → logprob: -4.6833815574646
    7. '#' → logprob: -4.8083815574646
    8. ' import' → logprob: -5.3083815574646
    9. 'convert' → logprob: -5.3083815574646
    10. '...' → logprob: -5.4333815574646

Token 1087: ' code' (ID: 3490)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23466762900352478
    2. '```' → logprob: -2.3596675395965576
    3. '#' → logprob: -2.8596675395965576
    4. 'import' → logprob: -3.9846675395965576
    5. 'def' → logprob: -4.609667778015137
    6. '
' → logprob: -4.734667778015137
    7. 'max' → logprob: -5.484667778015137
    8. ' dist' → logprob: -5.609667778015137
    9. '           ' → logprob: -5.609667778015137
    10. 'for' → logprob: -6.234667778015137

Token 1088: ' for' (ID: 395)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.1364043951034546
    2. '<|end|>' → logprob: -1.7614043951034546
    3. '
' → logprob: -2.136404514312744
    4. 'import' → logprob: -2.511404514312744
    5. '       ' → logprob: -3.136404514312744
    6. ']' → logprob: -3.136404514312744
    7. '#' → logprob: -3.261404514312744
    8. '                       ' → logprob: -3.761404514312744
    9. '...' → logprob: -3.886404514312744
    10. '           ' → logprob: -3.886404514312744

Token 1089: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10950981080532074
    2. 'd' → logprob: -4.1095099449157715
    3. '```' → logprob: -4.1095099449157715
    4. 'dict' → logprob: -4.2345099449157715
    5. 'def' → logprob: -4.4845099449157715
    6. 'distance' → logprob: -4.7345099449157715
    7. '#' → logprob: -5.3595099449157715
    8. 'from' → logprob: -5.6095099449157715
    9. 'the' → logprob: -5.7345099449157715
    10. 'import' → logprob: -5.8595099449157715

Token 1090: '.' (ID: 13)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3854950666427612
    2. '[
' → logprob: -2.010495185852051
    3. '                           ' → logprob: -2.010495185852051
    4. 'import' → logprob: -2.760495185852051
    5. '           ' → logprob: -3.010495185852051
    6. '#' → logprob: -3.010495185852051
    7. '       ' → logprob: -3.260495185852051
    8. '
' → logprob: -3.260495185852051
    9. ']
' → logprob: -3.385495185852051
    10. '                       ' → logprob: -3.635495185852051

Token 1091: ' Let's' (ID: 41021)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.40811729431152344
    2. '       ' → logprob: -2.2831172943115234
    3. '#' → logprob: -2.5331172943115234
    4. '                       ' → logprob: -3.4081172943115234
    5. '           ' → logprob: -3.5331172943115234
    6. '
' → logprob: -4.158117294311523
    7. '```' → logprob: -4.158117294311523
    8. '<|end|>' → logprob: -4.783117294311523
    9. '[' → logprob: -5.033117294311523
    10. ']' → logprob: -5.158117294311523

Token 1092: ' do' (ID: 621)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.47656887769699097
    2. 'replace' → logprob: -1.3515689373016357
    3. 'change' → logprob: -2.8515689373016357
    4. 'continue' → logprob: -3.7265689373016357
    5. 'switch' → logprob: -4.226568698883057
    6. 'break' → logprob: -5.101568698883057
    7. '#' → logprob: -5.601568698883057
    8. '           ' → logprob: -6.101568698883057
    9. 'convert' → logprob: -6.101568698883057
    10. 'stop' → logprob: -6.101568698883057

Token 1093: ' this' (ID: 495)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1826608180999756
    2. 'dist' → logprob: -1.3076608180999756
    3. 'import' → logprob: -1.9326608180999756
    4. '#' → logprob: -2.9326608180999756
    5. 'continue' → logprob: -3.3076608180999756
    6. '                   ' → logprob: -3.5576608180999756
    7. '           ' → logprob: -3.6826608180999756
    8. '                           ' → logprob: -3.8076608180999756
    9. 'from' → logprob: -3.9326608180999756
    10. '                       ' → logprob: -3.9326608180999756

Token 1094: ' now' (ID: 1954)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.940973162651062
    2. 'import' → logprob: -1.565973162651062
    3. '
' → logprob: -1.690973162651062
    4. '                           ' → logprob: -2.8159732818603516
    5. '<|end|>' → logprob: -3.4409732818603516
    6. '           ' → logprob: -3.5659732818603516
    7. ']' → logprob: -3.8159732818603516
    8. '```' → logprob: -4.190973281860352
    9. '#' → logprob: -4.440973281860352
    10. ')' → logprob: -4.815973281860352

Token 1095: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5979775190353394
    2. '                           ' → logprob: -1.0979775190353394
    3. 'import' → logprob: -2.722977638244629
    4. '
' → logprob: -3.847977638244629
    5. '#' → logprob: -4.722977638244629
    6. '           ' → logprob: -5.222977638244629
    7. '                       ' → logprob: -5.472977638244629
    8. '```' → logprob: -5.472977638244629
    9. '   ' → logprob: -6.597977638244629
    10. 'def' → logprob: -6.847977638244629

Token 1096: '                           ' (ID: 1686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4796719551086426
    2. '                           ' → logprob: -1.8546719551086426
    3. '<|end|>' → logprob: -2.7296719551086426
    4. '```' → logprob: -3.2296719551086426
    5. '           ' → logprob: -3.3546719551086426
    6. 'import' → logprob: -3.7296719551086426
    7. 'def' → logprob: -4.354671955108643
    8. '#' → logprob: -4.979671955108643
    9. '   ' → logprob: -5.604671955108643
    10. '                            
' → logprob: -5.604671955108643

Token 1097: ' continue' (ID: 4901)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.29847946763038635
    2. '#' → logprob: -1.923479437828064
    3. '                       ' → logprob: -4.0484795570373535
    4. '...' → logprob: -4.1734795570373535
    5. '       ' → logprob: -4.4234795570373535
    6. '                            
' → logprob: -4.4234795570373535
    7. '           ' → logprob: -4.5484795570373535
    8. '
' → logprob: -4.9234795570373535
    9. '                            ' → logprob: -5.4234795570373535
    10. '               ' → logprob: -5.5484795570373535

Token 1098: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1099: '                       ' (ID: 968)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3358393907546997
    2. '               ' → logprob: -2.96083927154541
    3. '           ' → logprob: -3.08583927154541
    4. '<|end|>' → logprob: -3.33583927154541
    5. '                       ' → logprob: -3.46083927154541
    6. '                           ' → logprob: -3.58583927154541
    7. '#' → logprob: -4.46083927154541
    8. 'import' → logprob: -4.46083927154541
    9. 'else' → logprob: -4.71083927154541
    10. '
' → logprob: -4.71083927154541

Token 1100: ' f' (ID: 285)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.13657832145690918
    2. '                   ' → logprob: -2.761578321456909
    3. '...' → logprob: -4.011578559875488
    4. 'new' → logprob: -4.011578559875488
    5. 'else' → logprob: -5.011578559875488
    6. '                           ' → logprob: -5.511578559875488
    7. '#' → logprob: -5.761578559875488
    8. '<|end|>' → logprob: -5.761578559875488
    9. 'v' → logprob: -6.011578559875488
    10. '               ' → logprob: -6.261578559875488

Token 1101: 'new' (ID: 1389)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20275595784187317
    2. '=' → logprob: -1.7027559280395508
    3. '[' → logprob: -8.20275592803955
    4. 'if' → logprob: -8.20275592803955
    5. ',' → logprob: -8.32775592803955
    6. 'new' → logprob: -9.07775592803955
    7. 'f' → logprob: -9.45275592803955
    8. '_new' → logprob: -9.45275592803955
    9. '   ' → logprob: -10.20275592803955
    10. '...' → logprob: -10.70275592803955

Token 1102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22644275426864624
    2. '=' → logprob: -1.601442813873291
    3. ',' → logprob: -7.351442813873291
    4. '[' → logprob: -8.226442337036133
    5. '   ' → logprob: -10.351442337036133
    6. ']' → logprob: -11.351442337036133
    7. '```' → logprob: -11.976442337036133
    8. 'new' → logprob: -12.101442337036133
    9. '_new' → logprob: -12.476442337036133
    10. ')' → logprob: -12.476442337036133

Token 1103: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.01195924449712038
    2. ' fare' → logprob: -4.511959075927734
    3. 'cost' → logprob: -7.136959075927734
    4. '   ' → logprob: -10.511959075927734
    5. ' cost' → logprob: -10.886959075927734
    6. '0' → logprob: -11.636959075927734
    7. 'far' → logprob: -11.761959075927734
    8. 'fa' → logprob: -11.761959075927734
    9. 'fair' → logprob: -11.761959075927734
    10. ' ' → logprob: -12.011959075927734

Token 1104: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -7.374227425316349e-05
    2. '[' → logprob: -9.750073432922363
    3. '[new' → logprob: -13.125073432922363
    4. 'tables' → logprob: -13.125073432922363
    5. 'new' → logprob: -13.375073432922363
    6. '[_' → logprob: -13.500073432922363
    7. 's' → logprob: -13.625073432922363
    8. '_' → logprob: -13.875073432922363
    9. '```' → logprob: -14.000073432922363
    10. '_table' → logprob: -14.250073432922363

Token 1105: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.0126840758603066e-05
    2. 'comp' → logprob: -10.500040054321289
    3. 'cc' → logprob: -11.625040054321289
    4. '[
' → logprob: -13.750040054321289
    5. '[new' → logprob: -15.125040054321289
    6. '```' → logprob: -15.125040054321289
    7. '
' → logprob: -15.625040054321289
    8. ' [' → logprob: -15.875040054321289
    9. '=' → logprob: -16.12504005432129
    10. '               ' → logprob: -16.25004005432129

Token 1106: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0336710587143898
    2. 'cc' → logprob: -3.4086711406707764
    3. '...' → logprob: -12.158671379089355
    4. '[' → logprob: -12.158671379089355
    5. ' comp' → logprob: -12.158671379089355
    6. '(comp' → logprob: -12.283671379089355
    7. 'com' → logprob: -13.908671379089355
    8. '```' → logprob: -14.283671379089355
    9. 'c' → logprob: -14.783671379089355
    10. '	comp' → logprob: -14.908671379089355

Token 1107: '][' (ID: 2696)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.03018084168434143
    2. '][' → logprob: -3.5301809310913086
    3. '[' → logprob: -8.280180931091309
    4. 'new' → logprob: -9.655180931091309
    5. ')[' → logprob: -10.030180931091309
    6. '                       ' → logprob: -11.155180931091309
    7. '}[' → logprob: -11.405180931091309
    8. ' [' → logprob: -11.905180931091309
    9. '```' → logprob: -12.030180931091309
    10. ' ][' → logprob: -12.530180931091309

Token 1108: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00024263552040793002
    2. 'min' → logprob: -8.375242233276367
    3. '
' → logprob: -12.500242233276367
    4. '200' → logprob: -13.000242233276367
    5. ' new' → logprob: -13.250242233276367
    6. 'max' → logprob: -13.375242233276367
    7. '[new' → logprob: -14.000242233276367
    8. '```' → logprob: -14.875242233276367
    9. '   ' → logprob: -15.500242233276367
    10. '-new' → logprob: -16.125242233276367

Token 1109: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.05130855739116669
    2. 'new' → logprob: -3.0513086318969727
    3. 'dist' → logprob: -5.926308631896973
    4. '_new' → logprob: -11.301308631896973
    5. ' new' → logprob: -11.801308631896973
    6. '[new' → logprob: -12.051308631896973
    7. '
' → logprob: -12.176308631896973
    8. ']' → logprob: -12.426308631896973
    9. '_d' → logprob: -13.051308631896973
    10. '```' → logprob: -13.301308631896973

Token 1110: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005215263459831476
    2. ']
' → logprob: -5.630215167999268
    3. ']+' → logprob: -6.755215167999268
    4. ' ]' → logprob: -8.130215644836426
    5. '[' → logprob: -9.880215644836426
    6. ']-' → logprob: -10.505215644836426
    7. '[new' → logprob: -11.255215644836426
    8. '+' → logprob: -11.505215644836426
    9. '                       ' → logprob: -11.630215644836426
    10. '-' → logprob: -12.005215644836426

Token 1111: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.017525210976600647
    2. ' if' → logprob: -4.7675251960754395
    3. 'if' → logprob: -5.7675251960754395
    4. '                           ' → logprob: -6.5175251960754395
    5. '<|end|>' → logprob: -7.2675251960754395
    6. '```' → logprob: -7.3925251960754395
    7. '.' → logprob: -7.5175251960754395
    8. '                               ' → logprob: -7.7675251960754395
    9. '                        
' → logprob: -7.7675251960754395
    10. '                   ' → logprob: -8.142525672912598

Token 1112: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06132692098617554
    2. '                       ' → logprob: -2.9363269805908203
    3. ' if' → logprob: -5.31132698059082
    4. 'total' → logprob: -6.68632698059082
    5. '                   ' → logprob: -9.56132698059082
    6. '                           ' → logprob: -9.56132698059082
    7. 'new' → logprob: -10.43632698059082
    8. '```' → logprob: -10.81132698059082
    9. '+' → logprob: -11.31132698059082
    10. 'for' → logprob: -11.93632698059082

Token 1113: ' cost' (ID: 3097)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04453384876251221
    2. '                       ' → logprob: -3.7945337295532227
    3. 'total' → logprob: -4.044533729553223
    4. 'new' → logprob: -6.919533729553223
    5. ' if' → logprob: -7.419533729553223
    6. 'old' → logprob: -7.669533729553223
    7. 'cost' → logprob: -8.169533729553223
    8. 'diff' → logprob: -8.419533729553223
    9. '                   ' → logprob: -8.544533729553223
    10. '```' → logprob: -8.669533729553223

Token 1114: ' previously' (ID: 14380)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7195285558700562
    2. '+' → logprob: -0.9695285558700562
    3. ' +=' → logprob: -3.7195286750793457
    4. 'new' → logprob: -3.8445286750793457
    5. ' =' → logprob: -3.9695286750793457
    6. '                   ' → logprob: -4.219528675079346
    7. '                       ' → logprob: -4.344528675079346
    8. 'diff' → logprob: -4.344528675079346
    9. '_diff' → logprob: -4.969528675079346
    10. '=' → logprob: -5.094528675079346

Token 1115: ' had' (ID: 1458)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35696157813072205
    2. ' +' → logprob: -1.3569616079330444
    3. '-' → logprob: -4.606961727142334
    4. ' -' → logprob: -5.106961727142334
    5. '=' → logprob: -5.231961727142334
    6. 'diff' → logprob: -5.731961727142334
    7. '                   ' → logprob: -6.231961727142334
    8. ' =' → logprob: -6.356961727142334
    9. '                       ' → logprob: -6.481961727142334
    10. ')' → logprob: -6.731961727142334

Token 1116: ' fare' (ID: 25285)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.36425289511680603
    2. ' -' → logprob: -2.114252805709839
    3. 'cost' → logprob: -2.364252805709839
    4. 'f' → logprob: -3.739252805709839
    5. ' cost' → logprob: -3.864252805709839
    6. 'fare' → logprob: -4.989253044128418
    7. 'dist' → logprob: -5.239253044128418
    8. '-f' → logprob: -5.614253044128418
    9. ' f' → logprob: -5.739253044128418
    10. '   ' → logprob: -5.989253044128418

Token 1117: ' for' (ID: 395)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -1.6696569919586182
    2. '_tables' → logprob: -1.7946569919586182
    3. '_cost' → logprob: -2.044656991958618
    4. '+' → logprob: -2.169656991958618
    5. 'diff' → logprob: -2.419656991958618
    6. ' +' → logprob: -3.169656991958618
    7. 'difference' → logprob: -3.669656991958618
    8. '-' → logprob: -3.669656991958618
    9. ' -' → logprob: -3.794656991958618
    10. '_so' → logprob: -4.169656753540039

Token 1118: ' section' (ID: 7102)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8222312927246094
    2. 'dd' → logprob: -1.4472312927246094
    3. 'the' → logprob: -1.6972312927246094
    4. 'previous' → logprob: -2.9472312927246094
    5. 'old' → logprob: -3.6972312927246094
    6. 'current' → logprob: -3.6972312927246094
    7. 'comp' → logprob: -4.572231292724609
    8. 'new' → logprob: -4.572231292724609
    9. 'prev' → logprob: -5.572231292724609
    10. 'company' → logprob: -5.947231292724609

Token 1119: ' with' (ID: 483)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1848174333572388
    2. ' -' → logprob: -1.5598174333572388
    3. '+' → logprob: -2.559817314147949
    4. '                   ' → logprob: -2.934817314147949
    5. ' +' → logprob: -2.934817314147949
    6. '#' → logprob: -3.809817314147949
    7. '[' → logprob: -3.809817314147949
    8. '[v' → logprob: -3.809817314147949
    9. '               ' → logprob: -4.184817314147949
    10. 'from' → logprob: -4.309817314147949

Token 1120: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.35937076807022095
    2. 'comp' → logprob: -1.8593707084655762
    3. 'distance' → logprob: -3.609370708465576
    4. ' dist' → logprob: -4.109370708465576
    5. 'current' → logprob: -4.234370708465576
    6. 'previous' → logprob: -4.484370708465576
    7. 'new' → logprob: -4.484370708465576
    8. 'fare' → logprob: -4.734370708465576
    9. 'the' → logprob: -4.859370708465576
    10. ' comp' → logprob: -5.109370708465576

Token 1121: ' dd' (ID: 18636)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9482164978981018
    2. '+' → logprob: -1.448216438293457
    3. '_in' → logprob: -1.698216438293457
    4. '-' → logprob: -3.948216438293457
    5. '[' → logprob: -4.198216438293457
    6. ' -' → logprob: -4.448216438293457
    7. ')' → logprob: -4.573216438293457
    8. '```' → logprob: -4.573216438293457
    9. '_so' → logprob: -4.698216438293457
    10. '=' → logprob: -4.698216438293457

Token 1122: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.30272936820983887
    2. '-' → logprob: -2.052729368209839
    3. '                       ' → logprob: -2.427729368209839
    4. ' +' → logprob: -3.802729368209839
    5. '+' → logprob: -4.302729606628418
    6. ')' → logprob: -6.427729606628418
    7. ',' → logprob: -6.677729606628418
    8. '```' → logprob: -6.802729606628418
    9. '
' → logprob: -7.052729606628418
    10. '                           ' → logprob: -7.427729606628418

Token 1123: ' now' (ID: 1954)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7861384153366089
    2. '                       ' → logprob: -0.7861384153366089
    3. ' #' → logprob: -3.0361385345458984
    4. '+' → logprob: -4.661138534545898
    5. 'new' → logprob: -5.536138534545898
    6. ' new' → logprob: -5.786138534545898
    7. ' +' → logprob: -5.911138534545898
    8. 'cost' → logprob: -6.161138534545898
    9. 'f' → logprob: -6.286138534545898
    10. ' f' → logprob: -6.536138534545898

Token 1124: ' fare' (ID: 25285)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.2740410566329956
    2. 'f' → logprob: -1.5240410566329956
    3. '-' → logprob: -2.149041175842285
    4. 'cost' → logprob: -2.274041175842285
    5. 'subtract' → logprob: -2.274041175842285
    6. '=' → logprob: -2.774041175842285
    7. '-=' → logprob: -3.149041175842285
    8. '```' → logprob: -4.399041175842285
    9. '                           ' → logprob: -4.524041175842285
    10. 'we' → logprob: -5.024041175842285

Token 1125: ' with' (ID: 483)
  Prédit: '_tables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.0800936296582222
    2. 'difference' → logprob: -4.330093860626221
    3. 'diff' → logprob: -4.580093860626221
    4. 'cost' → logprob: -4.830093860626221
    5. 'new' → logprob: -5.080093860626221
    6. ' =' → logprob: -5.705093860626221
    7. 'change' → logprob: -5.830093860626221
    8. 'tables' → logprob: -5.830093860626221
    9. 'for' → logprob: -5.830093860626221
    10. '[' → logprob: -5.955093860626221

Token 1126: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.03710770234465599
    2. ' new' → logprob: -3.6621077060699463
    3. 'comp' → logprob: -5.787107467651367
    4. '
' → logprob: -5.912107467651367
    5. 'f' → logprob: -6.287107467651367
    6. 'fare' → logprob: -6.912107467651367
    7. '[new' → logprob: -7.412107467651367
    8. '```' → logprob: -8.162107467651367
    9. '_new' → logprob: -8.287107467651367
    10. 'dist' → logprob: -8.412107467651367

Token 1127: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0007897364557720721
    2. '_' → logprob: -8.125789642333984
    3. '_cost' → logprob: -8.500789642333984
    4. '_distance' → logprob: -9.500789642333984
    5. 'Dist' → logprob: -9.750789642333984
    6. 'dist' → logprob: -9.875789642333984
    7. '_
' → logprob: -10.875789642333984
    8. '_comp' → logprob: -10.875789642333984
    9. '```' → logprob: -11.500789642333984
    10. 'new' → logprob: -11.625789642333984

Token 1128: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1656886786222458
    2. '-' → logprob: -2.2906887531280518
    3. '                       ' → logprob: -3.0406887531280518
    4. '```' → logprob: -7.040688514709473
    5. '                           ' → logprob: -7.540688514709473
    6. '
' → logprob: -7.790688514709473
    7. ' +' → logprob: -8.290688514709473
    8. ',' → logprob: -8.915688514709473
    9. '+' → logprob: -9.040688514709473
    10. '#' → logprob: -9.040688514709473

Token 1129: ' need' (ID: 1309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08039452880620956
    2. ' #' → logprob: -3.8303945064544678
    3. 'cost' → logprob: -4.205394744873047
    4. '-' → logprob: -4.705394744873047
    5. 'diff' → logprob: -4.955394744873047
    6. '                           ' → logprob: -5.205394744873047
    7. 'total' → logprob: -5.455394744873047
    8. 'prev' → logprob: -5.955394744873047
    9. '                       ' → logprob: -6.580394744873047
    10. '+' → logprob: -6.580394744873047

Token 1130: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.08339164406061172
    2. ' to' → logprob: -2.5833916664123535
    3. '=' → logprob: -5.9583916664123535
    4. '+=' → logprob: -7.3333916664123535
    5. '-' → logprob: -7.5833916664123535
    6. '-=' → logprob: -7.7083916664123535
    7. '_to' → logprob: -9.708391189575195
    8. 'cost' → logprob: -10.208391189575195
    9. ' =' → logprob: -10.333391189575195
    10. 's' → logprob: -10.458391189575195

Token 1131: ' adjust' (ID: 10266)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.917693018913269
    2. 'cost' → logprob: -1.417693018913269
    3. 'add' → logprob: -1.792693018913269
    4. 'subtract' → logprob: -2.2926931381225586
    5. 'adjust' → logprob: -3.0426931381225586
    6. 'replace' → logprob: -4.167693138122559
    7. 'f' → logprob: -4.792693138122559
    8. 'increment' → logprob: -5.917693138122559
    9. 'update' → logprob: -6.167693138122559
    10. 'remove' → logprob: -6.417693138122559

Token 1132: ' cost' (ID: 3097)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.4139541387557983
    2. 'prev' → logprob: -1.7889541387557983
    3. 'total' → logprob: -2.163954257965088
    4. '-' → logprob: -2.288954257965088
    5. '+' → logprob: -2.663954257965088
    6. 'cost' → logprob: -2.788954257965088
    7. 'diff' → logprob: -2.788954257965088
    8. ' +' → logprob: -3.163954257965088
    9. '
' → logprob: -3.538954257965088
    10. ' -' → logprob: -3.788954257965088

Token 1133: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9255949258804321
    2. '-' → logprob: -1.0505949258804321
    3. '                       ' → logprob: -1.4255949258804321
    4. ' +' → logprob: -5.800594806671143
    5. '+' → logprob: -6.050594806671143
    6. ' =' → logprob: -6.300594806671143
    7. '-token' → logprob: -7.050594806671143
    8. ',' → logprob: -7.175594806671143
    9. '                           ' → logprob: -7.300594806671143
    10. '-f' → logprob: -7.300594806671143

Token 1134: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3328036367893219
    2. '-' → logprob: -1.5828036069869995
    3. ' -' → logprob: -3.582803726196289
    4. '[-' → logprob: -4.207803726196289
    5. ' =' → logprob: -4.832803726196289
    6. '=' → logprob: -5.082803726196289
    7. '```' → logprob: -5.082803726196289
    8. ' +' → logprob: -5.832803726196289
    9. '+' → logprob: -5.832803726196289
    10. '-f' → logprob: -6.332803726196289

Token 1135: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03904639929533005
    2. 'total' → logprob: -3.789046287536621
    3. ' total' → logprob: -4.914046287536621
    4. 'new' → logprob: -6.414046287536621
    5. '```' → logprob: -6.789046287536621
    6. '                           ' → logprob: -6.914046287536621
    7. 'cost' → logprob: -7.164046287536621
    8. 'f' → logprob: -7.789046287536621
    9. ' new' → logprob: -8.039046287536621
    10. '#' (adapté à ' #') → logprob: -8.289046287536621

Token 1136: ' previous' (ID: 5880)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7720909714698792
    2. 'total' → logprob: -1.3970909118652344
    3. 'cost' → logprob: -1.7720909118652344
    4. 'new' → logprob: -3.3970909118652344
    5. 'prev' → logprob: -3.7720909118652344
    6. ' total' → logprob: -4.147090911865234
    7. '-' → logprob: -5.272090911865234
    8. '#' → logprob: -5.397090911865234
    9. 'diff' → logprob: -5.397090911865234
    10. 'f' → logprob: -5.647090911865234

Token 1137: ' cost' (ID: 3097)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.28606656193733215
    2. '_f' → logprob: -1.7860665321350098
    3. 'cost' → logprob: -3.9110665321350098
    4. '_code' → logprob: -4.03606653213501
    5. '_' → logprob: -4.03606653213501
    6. 'fare' → logprob: -5.41106653213501
    7. '+' → logprob: -6.28606653213501
    8. '```' → logprob: -6.41106653213501
    9. '
' → logprob: -6.66106653213501
    10. 'code' → logprob: -6.66106653213501

Token 1138: ' includes' (ID: 6664)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18376141786575317
    2. '-' → logprob: -1.9337613582611084
    3. '=' → logprob: -5.1837615966796875
    4. ' =' → logprob: -5.3087615966796875
    5. ' -=' → logprob: -5.3087615966796875
    6. '#' → logprob: -6.8087615966796875
    7. 'diff' → logprob: -6.8087615966796875
    8. ' +' → logprob: -7.0587615966796875
    9. '+' → logprob: -7.4337615966796875
    10. ' #' → logprob: -7.6837615966796875

Token 1139: ' fare' (ID: 25285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0044043064117432
    2. '(f' → logprob: -1.3794043064117432
    3. 'fare' → logprob: -1.3794043064117432
    4. '-f' → logprob: -2.504404306411743
    5. ' fare' → logprob: -4.254404067993164
    6. '-' → logprob: -4.504404067993164
    7. ' f' → logprob: -4.754404067993164
    8. 'cost' → logprob: -5.754404067993164
    9. ' (' → logprob: -6.129404067993164
    10. ' -' → logprob: -6.379404067993164

Token 1140: '_tables' (ID: 88363)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4664313495159149
    2. '-' → logprob: -1.5914313793182373
    3. 'for' → logprob: -2.0914313793182373
    4. '_for' → logprob: -4.216431140899658
    5. ' for' → logprob: -4.341431140899658
    6. '_tables' → logprob: -5.716431140899658
    7. '                   ' → logprob: -6.216431140899658
    8. '-for' → logprob: -6.341431140899658
    9. '#' → logprob: -6.466431140899658
    10. '[' → logprob: -7.341431140899658

Token 1141: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007025416707620025
    2. 'comp' → logprob: -8.625702857971191
    3. '[new' → logprob: -8.750702857971191
    4. 'for' → logprob: -9.500702857971191
    5. '[f' → logprob: -9.500702857971191
    6. 'new' → logprob: -9.625702857971191
    7. '_comp' → logprob: -11.125702857971191
    8. '                   ' → logprob: -11.125702857971191
    9. '```' → logprob: -11.250702857971191
    10. 'f' → logprob: -11.875702857971191

Token 1142: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00019209683523513377
    2. '[' → logprob: -8.625191688537598
    3. ' comp' → logprob: -12.250191688537598
    4. '(comp' → logprob: -13.250191688537598
    5. '][' → logprob: -14.000191688537598
    6. 'cc' → logprob: -14.000191688537598
    7. '	comp' → logprob: -14.000191688537598
    8. '```' → logprob: -14.125191688537598
    9. '_comp' → logprob: -14.625191688537598
    10. '   ' → logprob: -14.625191688537598

Token 1143: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00846895296126604
    2. '[new' → logprob: -5.383469104766846
    3. '][' → logprob: -5.758469104766846
    4. 'new' → logprob: -8.383468627929688
    5. '[f' → logprob: -8.508468627929688
    6. '
' → logprob: -10.258468627929688
    7. '```' → logprob: -10.758468627929688
    8. 'dd' → logprob: -10.883468627929688
    9. 'for' → logprob: -10.883468627929688
    10. '(dd' → logprob: -11.008468627929688

Token 1144: 'dd' (ID: 1183)
  Prédit: 'dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -7.028536492725834e-05
    2. 'new' → logprob: -9.875070571899414
    3. 'comp' → logprob: -11.875070571899414
    4. '
' → logprob: -13.000070571899414
    5. ' dd' → logprob: -13.250070571899414
    6. '```' → logprob: -13.375070571899414
    7. 'old' → logprob: -13.500070571899414
    8. '   ' → logprob: -13.625070571899414
    9. ' ' → logprob: -13.750070571899414
    10. '  ' → logprob: -15.000070571899414

Token 1145: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.042675867676734924
    2. ']+' → logprob: -4.167675971984863
    3. ']
' → logprob: -4.917675971984863
    4. '+' → logprob: -5.042675971984863
    5. ']-' → logprob: -5.292675971984863
    6. '-' → logprob: -6.417675971984863
    7. ' -' → logprob: -6.417675971984863
    8. '[' → logprob: -6.917675971984863
    9. '],' → logprob: -6.917675971984863
    10. '```' → logprob: -7.792675971984863

Token 1146: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.6895291805267334
    2. '#' → logprob: -1.1895291805267334
    3. ' #' → logprob: -2.8145291805267334
    4. '                       ' → logprob: -3.6895291805267334
    5. '-' → logprob: -4.0645294189453125
    6. 'subtract' → logprob: -4.5645294189453125
    7. 'cost' → logprob: -4.8145294189453125
    8. ' new' → logprob: -4.9395294189453125
    9. ' subtract' → logprob: -5.0645294189453125
    10. ' not' → logprob: -5.3145294189453125

Token 1147: ' difference' (ID: 9809)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6589756011962891
    2. 'total' → logprob: -1.658975601196289
    3. ' cost' → logprob: -2.158975601196289
    4. ' total' → logprob: -2.783975601196289
    5. 'f' → logprob: -3.658975601196289
    6. '#' → logprob: -4.158975601196289
    7. ' f' → logprob: -4.408975601196289
    8. 'new' → logprob: -4.658975601196289
    9. ' new' → logprob: -4.658975601196289
    10. '                       ' → logprob: -5.033975601196289

Token 1148: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21068555116653442
    2. '=' → logprob: -1.7106854915618896
    3. '=f' → logprob: -5.835685729980469
    4. '-' → logprob: -6.335685729980469
    5. ' -' → logprob: -6.835685729980469
    6. 'f' → logprob: -7.460685729980469
    7. '```' → logprob: -7.710685729980469
    8. '                       ' → logprob: -8.085685729980469
    9. ')' → logprob: -8.210685729980469
    10. ':' → logprob: -8.335685729980469

Token 1149: ' fare' (ID: 25285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5460678935050964
    2. 'fare' → logprob: -1.4210679531097412
    3. ' f' → logprob: -2.421067953109741
    4. ' fare' → logprob: -3.046067953109741
    5. '=f' → logprob: -4.046067714691162
    6. '`' → logprob: -4.671067714691162
    7. '(f' → logprob: -4.796067714691162
    8. '```' → logprob: -5.421067714691162
    9. '=' → logprob: -6.671067714691162
    10. ' =' → logprob: -7.546067714691162

Token 1150: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.04638062044978142
    2. '[new' → logprob: -3.5463805198669434
    3. '[' → logprob: -4.296380519866943
    4. 'new' → logprob: -6.671380519866943
    5. '[f' → logprob: -7.296380519866943
    6. '```' → logprob: -8.046380996704102
    7. '[t' → logprob: -9.296380996704102
    8. '_new' → logprob: -9.546380996704102
    9. '[_' → logprob: -9.671380996704102
    10. '   ' → logprob: -10.421380996704102

Token 1151: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7120533811976202e-05
    2. '```' → logprob: -12.500017166137695
    3. 'comp' → logprob: -12.875017166137695
    4. '
' → logprob: -13.500017166137695
    5. '[
' → logprob: -13.625017166137695
    6. '                   ' → logprob: -14.250017166137695
    7. '<|end|>' → logprob: -14.250017166137695
    8. '[new' → logprob: -14.500017166137695
    9. ' [' → logprob: -14.750017166137695
    10. '...' → logprob: -14.875017166137695

Token 1152: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -9.114600834436715e-05
    2. '[' → logprob: -9.375091552734375
    3. 'com' → logprob: -12.750091552734375
    4. '(comp' → logprob: -13.625091552734375
    5. '	comp' → logprob: -13.750091552734375
    6. ' comp' → logprob: -15.250091552734375
    7. '```' → logprob: -15.375091552734375
    8. '_comp' → logprob: -15.875091552734375
    9. '`' → logprob: -16.125091552734375
    10. '.comp' → logprob: -16.500091552734375

Token 1153: '][' (ID: 2696)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.5836029648780823
    2. '][' → logprob: -0.8336029648780823
    3. '[' → logprob: -5.0836029052734375
    4. 'new' → logprob: -7.5836029052734375
    5. '[next' → logprob: -7.5836029052734375
    6. '```' → logprob: -9.333602905273438
    7. '>[' → logprob: -10.083602905273438
    8. '}[' → logprob: -10.333602905273438
    9. ' ][' → logprob: -10.458602905273438
    10. ']' → logprob: -10.458602905273438

Token 1154: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0004444931691978127
    2. '[new' → logprob: -8.250444412231445
    3. 'dd' → logprob: -9.625444412231445
    4. 'f' → logprob: -9.750444412231445
    5. '```' → logprob: -11.375444412231445
    6. ' new' → logprob: -11.500444412231445
    7. '
' → logprob: -11.500444412231445
    8. '(new' → logprob: -12.125444412231445
    9. 'comp' → logprob: -12.250444412231445
    10. '`' → logprob: -12.875444412231445

Token 1155: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.930552313453518e-05
    2. 'Dist' → logprob: -10.375049591064453
    3. ']' → logprob: -11.875049591064453
    4. 'dist' → logprob: -12.625049591064453
    5. ']_' → logprob: -13.500049591064453
    6. '```' → logprob: -13.500049591064453
    7. '_]' → logprob: -13.750049591064453
    8. '_token' → logprob: -14.125049591064453
    9. '_' → logprob: -14.500049591064453
    10. '_DIST' → logprob: -15.000049591064453

Token 1156: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012872767634689808
    2. ']-' → logprob: -4.512872695922852
    3. '[' → logprob: -6.887872695922852
    4. '[new' → logprob: -7.637872695922852
    5. 'new' → logprob: -9.387872695922852
    6. '][' → logprob: -9.637872695922852
    7. ' -' → logprob: -9.762872695922852
    8. '-' → logprob: -9.887872695922852
    9. ']
' → logprob: -10.387872695922852
    10. '[next' → logprob: -11.762872695922852

Token 1157: 'fare' (ID: 40746)
  Prédit: 'fare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -3.011373155459296e-05
    2. ' fare' → logprob: -10.500030517578125
    3. '```' → logprob: -14.000030517578125
    4. 'far' → logprob: -14.500030517578125
    5. 'fair' → logprob: -14.500030517578125
    6. 'fa' → logprob: -15.500030517578125
    7. '`' → logprob: -15.750030517578125
    8. 'Fare' → logprob: -16.125030517578125
    9. '
' → logprob: -16.250030517578125
    10. 'fee' → logprob: -17.000030517578125

Token 1158: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.023822205141186714
    2. '[' → logprob: -3.77382230758667
    3. '```' → logprob: -9.398821830749512
    4. 'fare' → logprob: -9.648821830749512
    5. '[
' → logprob: -9.773821830749512
    6. '[f' → logprob: -10.023821830749512
    7. '[_' → logprob: -10.273821830749512
    8. '[s' → logprob: -10.523821830749512
    9. '[t' → logprob: -10.648821830749512
    10. '_[' → logprob: -10.898821830749512

Token 1159: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9981420336989686e-05
    2. '```' → logprob: -11.250020027160645
    3. 'comp' → logprob: -12.750020027160645
    4. '`' → logprob: -13.500020027160645
    5. '[
' → logprob: -13.875020027160645
    6. '   ' → logprob: -15.375020027160645
    7. '
' → logprob: -15.750020027160645
    8. '``' → logprob: -15.875020027160645
    9. '{' → logprob: -16.125019073486328
    10. ' [' → logprob: -16.125019073486328

Token 1160: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0001487140398239717
    2. '[' → logprob: -8.87514877319336
    3. '```' → logprob: -13.00014877319336
    4. ' comp' → logprob: -13.25014877319336
    5. '(comp' → logprob: -13.87514877319336
    6. '	comp' → logprob: -13.87514877319336
    7. 'com' → logprob: -14.00014877319336
    8. '`' → logprob: -14.12514877319336
    9. ' ' → logprob: -15.12514877319336
    10. '   ' → logprob: -15.50014877319336

Token 1161: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42874056100845337
    2. '][' → logprob: -1.0537405014038086
    3. ']' → logprob: -10.928740501403809
    4. '```' → logprob: -12.553740501403809
    5. ''][' → logprob: -13.053740501403809
    6. '
' → logprob: -13.053740501403809
    7. '`' → logprob: -13.053740501403809
    8. ' ][' → logprob: -13.303740501403809
    9. '...' → logprob: -13.678740501403809
    10. '}[' → logprob: -13.803740501403809

Token 1162: 'dd' (ID: 1183)
  Prédit: 'dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.00010902655776590109
    2. 'comp' → logprob: -9.37510871887207
    3. 'new' → logprob: -11.62510871887207
    4. '[' → logprob: -11.87510871887207
    5. ' dd' → logprob: -12.50010871887207
    6. 'old' → logprob: -13.62510871887207
    7. '
' → logprob: -14.00010871887207
    8. '(dd' → logprob: -14.25010871887207
    9. '```' → logprob: -14.87510871887207
    10. 'cc' → logprob: -14.87510871887207

Token 1163: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.42091649770736694
    2. ']' → logprob: -1.1709165573120117
    3. '])' → logprob: -3.9209165573120117
    4. '])
' → logprob: -4.420916557312012
    5. ')
' → logprob: -7.545916557312012
    6. ']
' → logprob: -8.295916557312012
    7. ')' → logprob: -8.420916557312012
    8. '                       ' → logprob: -8.920916557312012
    9. ']

' → logprob: -9.545916557312012
    10. '                   ' → logprob: -9.670916557312012

Token 1164: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006944118067622185
    2. ' +' → logprob: -5.756944179534912
    3. '                           ' → logprob: -7.006944179534912
    4. '+' → logprob: -7.131944179534912
    5. '                        
' → logprob: -7.631944179534912
    6. ')' → logprob: -8.006943702697754
    7. '                   ' → logprob: -8.756943702697754
    8. '```' → logprob: -8.881943702697754
    9. '                        ' → logprob: -9.006943702697754
    10. ' +
' → logprob: -9.256943702697754

Token 1165: ' total' (ID: 3609)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05514122173190117
    2. '                           ' → logprob: -3.3051412105560303
    3. '                        ' → logprob: -5.430141448974609
    4. '                               ' → logprob: -6.055141448974609
    5. ' new' → logprob: -6.805141448974609
    6. '                        
' → logprob: -6.930141448974609
    7. '+' → logprob: -7.055141448974609
    8. ' +' → logprob: -7.305141448974609
    9. '                            ' → logprob: -7.305141448974609
    10. '                   ' → logprob: -7.430141448974609

Token 1166: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00037800322752445936
    2. '_' → logprob: -9.250377655029297
    3. '_COST' → logprob: -9.250377655029297
    4. ' _' → logprob: -9.875377655029297
    5. ',' → logprob: -9.875377655029297
    6. ')' → logprob: -11.000377655029297
    7. ')_' → logprob: -11.250377655029297
    8. '_code' → logprob: -11.375377655029297
    9. 'cost' → logprob: -12.000377655029297
    10. '_price' → logprob: -12.250377655029297

Token 1167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4045266807079315
    2. ' +' → logprob: -1.779526710510254
    3. '=' → logprob: -2.029526710510254
    4. '+' → logprob: -3.529526710510254
    5. ' +=' → logprob: -6.029526710510254
    6. ' -' → logprob: -8.529526710510254
    7. ')' → logprob: -8.654526710510254
    8. ',' → logprob: -8.779526710510254
    9. '+=' → logprob: -9.404526710510254
    10. ' ' → logprob: -9.779526710510254

Token 1168: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6931480169296265
    2. 'cost' → logprob: -0.6931480169296265
    3. '   ' → logprob: -14.443147659301758
    4. '(cost' → logprob: -15.193147659301758
    5. ' ' → logprob: -17.443147659301758
    6. '_cost' → logprob: -17.818147659301758
    7. '           ' → logprob: -18.068147659301758
    8. '    ' → logprob: -18.193147659301758
    9. 'Cost' → logprob: -18.318147659301758
    10. '               ' → logprob: -18.693147659301758

Token 1169: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.26024329662323
    2. '+' → logprob: -1.51024329662323
    3. ' -' → logprob: -4.8852434158325195
    4. '-' → logprob: -7.2602434158325195
    5. '+(' → logprob: -11.63524341583252
    6. '-cost' → logprob: -13.51024341583252
    7. ' ' → logprob: -13.76024341583252
    8. ' +(' → logprob: -13.76024341583252
    9. '+
' → logprob: -13.88524341583252
    10. ' ' → logprob: -13.88524341583252

Token 1170: ' (' (ID: 350)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.8679283261299133
    2. 'f' → logprob: -1.1179282665252686
    3. ' f' → logprob: -2.1179282665252686
    4. 'fare' → logprob: -2.3679282665252686
    5. ' (' → logprob: -3.7429282665252686
    6. ' fare' → logprob: -4.242928504943848
    7. '(' → logprob: -7.117928504943848
    8. '	f' → logprob: -9.117928504943848
    9. '   ' → logprob: -9.617928504943848
    10. 'fa' → logprob: -10.430428504943848

Token 1171: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.47452956438064575
    2. 'fare' → logprob: -0.9745295643806458
    3. ' fare' → logprob: -8.849529266357422
    4. '(f' → logprob: -9.099529266357422
    5. ' f' → logprob: -10.099529266357422
    6. '   ' → logprob: -10.349529266357422
    7. '	f' → logprob: -10.349529266357422
    8. 'fee' → logprob: -11.349529266357422
    9. 'fair' → logprob: -11.349529266357422
    10. 'fa' → logprob: -11.474529266357422

Token 1172: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.022423429414629936
    2. '[new' → logprob: -4.272423267364502
    3. '_tables' → logprob: -4.897423267364502
    4. '_new' → logprob: -8.02242374420166
    5. '[' → logprob: -8.02242374420166
    6. 'Tables' → logprob: -10.89742374420166
    7. '```' → logprob: -11.02242374420166
    8. 'tables' → logprob: -11.52242374420166
    9. '
' → logprob: -11.52242374420166
    10. '(new' → logprob: -11.89742374420166

Token 1173: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5761681199073792
    2. ' -' → logprob: -0.8261681199073792
    3. '-f' → logprob: -8.451168060302734
    4. '-
' → logprob: -12.326168060302734
    5. '```' → logprob: -12.701168060302734
    6. '[' → logprob: -13.076168060302734
    7. '[-' → logprob: -13.701168060302734
    8. ' ' → logprob: -14.451168060302734
    9. '-d' → logprob: -14.701168060302734
    10. ' ' → logprob: -15.201168060302734

Token 1174: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -4.251091377227567e-05
    2. ' fare' → logprob: -10.125042915344238
    3. '   ' → logprob: -14.000042915344238
    4. 'fair' → logprob: -14.875042915344238
    5. '(f' → logprob: -15.000042915344238
    6. 'Fare' → logprob: -15.125042915344238
    7. 'fa' → logprob: -15.625042915344238
    8. 'fee' → logprob: -16.125041961669922
    9. '```' → logprob: -16.375041961669922
    10. 'f' → logprob: -16.500041961669922

Token 1175: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.0003781224077101797
    2. '[' → logprob: -8.000377655029297
    3. 'tables' → logprob: -10.375377655029297
    4. '[_' → logprob: -13.500377655029297
    5. 's' → logprob: -13.750377655029297
    6. '_tabs' → logprob: -13.750377655029297
    7. '_cost' → logprob: -13.875377655029297
    8. '```' → logprob: -14.000377655029297
    9. 'Tables' → logprob: -14.125377655029297
    10. '   ' → logprob: -14.125377655029297

Token 1176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. 'comp' → logprob: -16.0
    3. '```' → logprob: -16.0
    4. '[
' → logprob: -16.5
    5. '<|end|>' → logprob: -17.5
    6. ')[' → logprob: -17.75
    7. ')' → logprob: -18.0
    8. '`' → logprob: -18.875
    9. '(comp' → logprob: -19.0
    10. '[user' → logprob: -19.125

Token 1177: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.9361264946837764e-07
    2. ' comp' → logprob: -16.25
    3. '[' → logprob: -16.875
    4. '	comp' → logprob: -17.875
    5. '(comp' → logprob: -18.5
    6. 'com' → logprob: -18.75
    7. '```' → logprob: -20.875
    8. '_comp' → logprob: -21.125
    9. '   ' → logprob: -21.125
    10. 'Comp' → logprob: -21.5

Token 1178: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015192650025710464
    2. '][' → logprob: -6.501519203186035
    3. ')[' → logprob: -11.376519203186035
    4. '
' → logprob: -13.876519203186035
    5. '}[' → logprob: -14.001519203186035
    6. ']' → logprob: -14.376519203186035
    7. '```' → logprob: -14.376519203186035
    8. ' [' → logprob: -15.001519203186035
    9. '>[' → logprob: -15.001519203186035
    10. '[
' → logprob: -15.001519203186035

Token 1179: 'dd' (ID: 1183)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -5.32392441527918e-05
    2. '[' → logprob: -9.875053405761719
    3. 'com' → logprob: -14.625053405761719
    4. ' comp' → logprob: -14.750053405761719
    5. '(comp' → logprob: -15.000053405761719
    6. '	comp' → logprob: -15.375053405761719
    7. '```' → logprob: -16.25005340576172
    8. 'c' → logprob: -16.62505340576172
    9. '
' → logprob: -16.87505340576172
    10. 'dist' → logprob: -17.00005340576172

Token 1180: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07159816473722458
    2. ')' → logprob: -2.6965980529785156
    3. '])
' → logprob: -7.071598052978516
    4. ')
' → logprob: -7.571598052978516
    5. '[' → logprob: -8.821598052978516
    6. ')])' → logprob: -9.446598052978516
    7. ')]' → logprob: -10.446598052978516
    8. ']' → logprob: -10.946598052978516
    9. '])]' → logprob: -12.821598052978516
    10. '       ' → logprob: -13.196598052978516

Token 1181: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09074541181325912
    2. '<|end|>' → logprob: -2.965745449066162
    3. '               ' → logprob: -4.215745449066162
    4. '```' → logprob: -4.965745449066162
    5. '                        
' → logprob: -5.715745449066162
    6. '                           ' → logprob: -5.965745449066162
    7. ')' → logprob: -6.090745449066162
    8. '                               ' → logprob: -6.590745449066162
    9. '                   ' → logprob: -6.965745449066162
    10. '<|end|>' → logprob: -7.590745449066162

Token 1182: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3373832702636719
    2. 'if' (adapté à ' if') → logprob: -1.3373832702636719
    3. ' if' → logprob: -3.837383270263672
    4. '                   ' → logprob: -6.712383270263672
    5. '                           ' → logprob: -7.337383270263672
    6. '               ' → logprob: -8.212383270263672
    7. '                               ' → logprob: -9.337383270263672
    8. '                        
' → logprob: -11.087383270263672
    9. '```' → logprob: -11.462383270263672
    10. '           ' → logprob: -11.587383270263672

Token 1183: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.016154605895280838
    2. ' total' → logprob: -4.141154766082764
    3. 'dist' → logprob: -10.141154289245605
    4. 'new' → logprob: -10.516154289245605
    5. 'v' → logprob: -11.016154289245605
    6. ' v' → logprob: -11.141154289245605
    7. '(total' → logprob: -11.391154289245605
    8. ' dist' → logprob: -12.266154289245605
    9. '   ' → logprob: -13.516154289245605
    10. ' new' → logprob: -13.641154289245605

Token 1184: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.020223598927259445
    2. '_dist' → logprob: -4.520223617553711
    3. '[v' → logprob: -5.145223617553711
    4. '_total' → logprob: -6.270223617553711
    5. 'total' → logprob: -7.895223617553711
    6. 'cost' → logprob: -8.520223617553711
    7. '<v' → logprob: -8.645223617553711
    8. 'Cost' → logprob: -9.395223617553711
    9. '(v' → logprob: -9.770223617553711
    10. 'dist' → logprob: -9.895223617553711

Token 1185: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18011456727981567
    2. '<' → logprob: -1.805114507675171
    3. '<th' → logprob: -9.68011474609375
    4. ' <=' → logprob: -10.05511474609375
    5. '<=' → logprob: -10.18011474609375
    6. '<size' → logprob: -10.55511474609375
    7. '                           ' → logprob: -10.55511474609375
    8. '[' → logprob: -10.93011474609375
    9. '<n' → logprob: -11.05511474609375
    10. '<int' → logprob: -11.18011474609375

Token 1186: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -5.836499985889532e-05
    2. ' dist' → logprob: -9.7500581741333
    3. '	dist' → logprob: -18.250059127807617
    4. '```' → logprob: -19.250059127807617
    5. '(dist' → logprob: -19.625059127807617
    6. '   ' → logprob: -20.000059127807617
    7. 'Dist' → logprob: -20.000059127807617
    8. '.dist' → logprob: -20.625059127807617
    9. '_dist' → logprob: -20.875059127807617
    10. '           ' → logprob: -21.750059127807617

Token 1187: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.029786134138703346
    2. 'v' → logprob: -3.5297861099243164
    3. '[u' → logprob: -10.279786109924316
    4. '```' → logprob: -14.279786109924316
    5. ' v' → logprob: -14.904786109924316
    6. ')v' → logprob: -15.654786109924316
    7. '(v' → logprob: -15.779786109924316
    8. '	v' → logprob: -16.779787063598633
    9. '<v' → logprob: -17.404787063598633
    10. '[' → logprob: -17.529787063598633

Token 1188: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.2994620242971e-06
    2. 'comp' → logprob: -12.750008583068848
    3. '][' → logprob: -12.750008583068848
    4. '```' → logprob: -13.250008583068848
    5. '
' → logprob: -16.62500762939453
    6. '`' → logprob: -16.87500762939453
    7. '   ' → logprob: -17.00000762939453
    8. '       ' → logprob: -17.00000762939453
    9. ')' → logprob: -17.12500762939453
    10. 'cc' → logprob: -17.37500762939453

Token 1189: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0009131324477493763
    2. 'cc' → logprob: -7.000913143157959
    3. '[' → logprob: -13.8759126663208
    4. ' comp' → logprob: -14.8759126663208
    5. '(comp' → logprob: -16.500913619995117
    6. '   ' → logprob: -16.875913619995117
    7. '```' → logprob: -17.000913619995117
    8. '	comp' → logprob: -17.125913619995117
    9. 'c' → logprob: -17.250913619995117
    10. '
' → logprob: -17.375913619995117

Token 1190: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1848873496055603
    2. '[new' → logprob: -1.934887409210205
    3. '[' → logprob: -3.809887409210205
    4. 'new' → logprob: -6.184887409210205
    5. ']' → logprob: -10.434886932373047
    6. ' ][' → logprob: -10.559886932373047
    7. ''][' → logprob: -11.059886932373047
    8. '"][' → logprob: -11.809886932373047
    9. '           ' → logprob: -12.184886932373047
    10. '       ' → logprob: -12.309886932373047

Token 1191: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -8.65707261255011e-06
    2. ' new' → logprob: -11.750008583068848
    3. '[new' → logprob: -15.625008583068848
    4. '
' → logprob: -16.375009536743164
    5. '```' → logprob: -16.500009536743164
    6. '   ' → logprob: -16.750009536743164
    7. '{' → logprob: -17.000009536743164
    8. '0' → logprob: -17.250009536743164
    9. '_new' → logprob: -17.375009536743164
    10. 'New' → logprob: -17.500009536743164

Token 1192: '_dist' (ID: 37968)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.010426062159240246
    2. '_dist' → logprob: -4.635426044464111
    3. 'dist' → logprob: -8.51042652130127
    4. 'Dist' → logprob: -8.88542652130127
    5. '_new' → logprob: -9.13542652130127
    6. ' new' → logprob: -9.13542652130127
    7. '[new' → logprob: -10.13542652130127
    8. '```' → logprob: -10.26042652130127
    9. 'dd' → logprob: -11.13542652130127
    10. '_dd' → logprob: -11.51042652130127

Token 1193: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.31433358788490295
    2. ']:' → logprob: -1.3143335580825806
    3. ']' → logprob: -7.564333438873291
    4. ']:
' → logprob: -8.06433391571045
    5. ':' → logprob: -10.18933391571045
    6. '[' → logprob: -10.31433391571045
    7. ']):
' → logprob: -10.68933391571045
    8. ']:

' → logprob: -10.93933391571045
    9. ']>' → logprob: -11.06433391571045
    10. '):
' → logprob: -11.31433391571045

Token 1194: '                           ' (ID: 1686)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.6970605254173279
    2. '                           ' → logprob: -0.9470605254173279
    3. '                       ' → logprob: -3.4470605850219727
    4. '                            ' → logprob: -4.197060585021973
    5. '                                   ' → logprob: -4.322060585021973
    6. '```' → logprob: -4.447060585021973
    7. '[' → logprob: -4.697060585021973
    8. ')' → logprob: -4.947060585021973
    9. '                             ' → logprob: -5.697060585021973
    10. '                                           ' → logprob: -5.947060585021973

Token 1195: ' dist' (ID: 3601)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2763783633708954
    2. '                               ' → logprob: -1.5263783931732178
    3. '                            ' → logprob: -5.026378154754639
    4. 'heap' → logprob: -5.526378154754639
    5. 'dist' (adapté à ' dist') → logprob: -5.526378154754639
    6. '                       ' → logprob: -5.776378154754639
    7. '```' → logprob: -5.776378154754639
    8. '                                   ' → logprob: -7.401378154754639
    9. '						' → logprob: -7.526378154754639
    10. '                             ' → logprob: -7.651378154754639

Token 1196: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.3080716346157715e-05
    2. '[u' → logprob: -10.750022888183594
    3. 'v' → logprob: -13.625022888183594
    4. '<v' → logprob: -16.000022888183594
    5. '	v' → logprob: -17.250022888183594
    6. '=v' → logprob: -17.500022888183594
    7. '[' → logprob: -17.875022888183594
    8. '```' → logprob: -18.000022888183594
    9. '(v' → logprob: -18.250022888183594
    10. ')v' → logprob: -18.500022888183594

Token 1197: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0009156247251667082
    2. '][' → logprob: -7.00091552734375
    3. '[' → logprob: -14.12591552734375
    4. '[u' → logprob: -14.25091552734375
    5. ',v' → logprob: -14.37591552734375
    6. '```' → logprob: -14.75091552734375
    7. ')[' → logprob: -14.87591552734375
    8. '                           ' → logprob: -15.12591552734375
    9. 'v' → logprob: -15.50091552734375
    10. '           ' → logprob: -15.75091552734375

Token 1198: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0002258277963846922
    2. 'v' → logprob: -8.750226020812988
    3. 'cc' → logprob: -9.625226020812988
    4. 'c' → logprob: -15.000226020812988
    5. '[' → logprob: -15.125226020812988
    6. '[v' → logprob: -16.125225067138672
    7. 'com' → logprob: -16.250225067138672
    8. '```' → logprob: -16.250225067138672
    9. '(comp' → logprob: -16.375225067138672
    10. 'cost' → logprob: -16.375225067138672

Token 1199: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.002931821858510375
    2. '][' → logprob: -6.252931594848633
    3. '[new' → logprob: -7.002931594848633
    4. '[' → logprob: -9.627931594848633
    5. 'new' → logprob: -10.877931594848633
    6. '                           ' → logprob: -12.877931594848633
    7. ']' → logprob: -13.127931594848633
    8. '```' → logprob: -13.752931594848633
    9. '                               ' → logprob: -14.752931594848633
    10. 'v' → logprob: -15.127931594848633

Token 1200: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -4.4849443838757e-06
    2. '[new' → logprob: -13.000004768371582
    3. ' new' → logprob: -13.250004768371582
    4. '```' → logprob: -15.750004768371582
    5. '	new' → logprob: -16.000003814697266
    6. 'New' → logprob: -17.125003814697266
    7. '(new' → logprob: -17.125003814697266
    8. '_new' → logprob: -17.500003814697266
    9. '   ' → logprob: -17.875003814697266
    10. '{' → logprob: -18.250003814697266

Token 1201: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.3521157503128052
    2. 'new' → logprob: -1.2271157503128052
    3. '_new' → logprob: -6.977115631103516
    4. 'w' → logprob: -7.102115631103516
    5. 'ist' → logprob: -7.227115631103516
    6. '[new' → logprob: -7.977115631103516
    7. 'v' → logprob: -8.352115631103516
    8. ' new' → logprob: -8.852115631103516
    9. '_cost' → logprob: -8.977115631103516
    10. 'Dist' → logprob: -9.102115631103516

Token 1202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09130135178565979
    2. ']=' → logprob: -2.466301441192627
    3. '=' → logprob: -6.216301441192627
    4. '                           ' → logprob: -8.841300964355469
    5. ' =' → logprob: -9.716300964355469
    6. ')' → logprob: -10.091300964355469
    7. '                               ' → logprob: -10.716300964355469
    8. ']+=' → logprob: -11.216300964355469
    9. ']==' → logprob: -11.341300964355469
    10. ']:
' → logprob: -11.841300964355469

Token 1203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0020189285278320312
    2. ' =' → logprob: -6.752018928527832
    3. ']=' → logprob: -7.252018928527832
    4. ']' → logprob: -9.502018928527832
    5. '                           ' → logprob: -10.377018928527832
    6. '=
' → logprob: -11.377018928527832
    7. '                               ' → logprob: -11.502018928527832
    8. '[' → logprob: -12.877018928527832
    9. '=True' → logprob: -13.127018928527832
    10. ')=' → logprob: -13.377018928527832

Token 1204: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0007102862582542002
    2. ' total' → logprob: -7.250710487365723
    3. '                           ' → logprob: -15.875710487365723
    4. '                               ' → logprob: -16.375709533691406
    5. '	total' → logprob: -19.125709533691406
    6. '                                   ' → logprob: -19.250709533691406
    7. '(total' → logprob: -20.125709533691406
    8. 'Total' → logprob: -20.375709533691406
    9. '$total' → logprob: -20.375709533691406
    10. '   ' → logprob: -21.125709533691406

Token 1205: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -5.347765181795694e-05
    2. 'cost' → logprob: -10.500053405761719
    3. '_token' → logprob: -11.250053405761719
    4. 'Cost' → logprob: -11.750053405761719
    5. '_code' → logprob: -12.875053405761719
    6. '```' → logprob: -13.625053405761719
    7. '_COST' → logprob: -15.375053405761719
    8. '_tokens' → logprob: -15.875053405761719
    9. '-cost' → logprob: -16.25005340576172
    10. ' _' → logprob: -16.25005340576172

Token 1206: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0034155857283622026
    2. '                       ' → logprob: -6.253415584564209
    3. '                               ' → logprob: -7.003415584564209
    4. '<|end|>' → logprob: -8.503416061401367
    5. '```' → logprob: -9.253416061401367
    6. '                            ' → logprob: -9.753416061401367
    7. ')' → logprob: -10.128416061401367
    8. '                   ' → logprob: -10.128416061401367
    9. '                          ' → logprob: -10.628416061401367
    10. '                                   ' → logprob: -11.128416061401367

Token 1207: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0034904275089502335
    2. '                               ' → logprob: -6.003490447998047
    3. '```' → logprob: -7.628490447998047
    4. '                       ' → logprob: -7.753490447998047
    5. '                            ' → logprob: -10.628490447998047
    6. '                                   ' → logprob: -10.753490447998047
    7. '                             ' → logprob: -12.003490447998047
    8. '						' → logprob: -12.003490447998047
    9. '                   ' → logprob: -12.003490447998047
    10. '<|end|>' → logprob: -12.253490447998047

Token 1208: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0018201241036877036
    2. '                           ' → logprob: -6.376820087432861
    3. ' heap' → logprob: -9.87682056427002
    4. '                               ' → logprob: -10.50182056427002
    5. '```' → logprob: -10.62682056427002
    6. '                       ' → logprob: -12.37682056427002
    7. '           ' → logprob: -12.75182056427002
    8. '   ' → logprob: -13.25182056427002
    9. '                   ' → logprob: -13.25182056427002
    10. '               ' → logprob: -13.75182056427002

Token 1209: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.895480277715251e-06
    2. 'p' → logprob: -12.250008583068848
    3. 'push' → logprob: -13.000008583068848
    4. 'app' → logprob: -14.000008583068848
    5. '```' → logprob: -14.875008583068848
    6. 'pp' → logprob: -15.750008583068848
    7. 'he' → logprob: -16.375009536743164
    8. 'replace' → logprob: -16.500009536743164
    9. 'h' → logprob: -17.000009536743164
    10. '[' → logprob: -17.250009536743164

Token 1210: '.he' (ID: 67786)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.710723876953125
    2. '.he' → logprob: -0.710723876953125
    3. 'push' → logprob: -4.210723876953125
    4. 'q' → logprob: -6.210723876953125
    5. ' he' → logprob: -8.585723876953125
    6. '_he' → logprob: -8.710723876953125
    7. '_push' → logprob: -9.585723876953125
    8. 'app' → logprob: -9.585723876953125
    9. 'ush' → logprob: -9.960723876953125
    10. '.push' → logprob: -10.960723876953125

Token 1211: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0006259413785301149
    2. 'pp' → logprob: -7.500626087188721
    3. 'push' → logprob: -9.875625610351562
    4. '```' → logprob: -11.875625610351562
    5. '_app' → logprob: -12.500625610351562
    6. 'ap' → logprob: -12.625625610351562
    7. 'p' → logprob: -13.750625610351562
    8. 'App' → logprob: -13.875625610351562
    9. '_push' → logprob: -14.125625610351562
    10. '[' → logprob: -14.125625610351562

Token 1212: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.006088761612772942
    2. 'push' → logprob: -5.506088733673096
    3. 'pp' → logprob: -6.256088733673096
    4. 'p' → logprob: -10.131089210510254
    5. 'app' → logprob: -10.506089210510254
    6. 'op' → logprob: -11.756089210510254
    7. 'sh' → logprob: -11.881089210510254
    8. '```' → logprob: -12.006089210510254
    9. '_push' → logprob: -15.256089210510254
    10. '.push' → logprob: -15.631089210510254

Token 1213: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3856492842023727e-06
    2. 'pq' → logprob: -13.750000953674316
    3. '(q' → logprob: -15.875000953674316
    4. ' (' → logprob: -16.500001907348633
    5. '```' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.000001907348633
    7. 'p' → logprob: -18.125001907348633
    8. '(
' → logprob: -18.375001907348633
    9. '[p' → logprob: -18.625001907348633
    10. ' pq' → logprob: -19.625001907348633

Token 1214: 'q' (ID: 80)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.004534200299531221
    2. 'q' → logprob: -5.7545342445373535
    3. '(p' → logprob: -6.6295342445373535
    4. ' pq' → logprob: -10.629533767700195
    5. 'sq' → logprob: -12.629533767700195
    6. 'vq' → logprob: -13.379533767700195
    7. 'dq' → logprob: -13.629533767700195
    8. '(q' → logprob: -13.879533767700195
    9. 'p' → logprob: -14.004533767700195
    10. '[p' → logprob: -14.379533767700195

Token 1215: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00014180023572407663
    2. ',' → logprob: -9.125142097473145
    3. ',p' → logprob: -11.375142097473145
    4. ' (' → logprob: -11.500142097473145
    5. '(' → logprob: -12.500142097473145
    6. '(q' → logprob: -12.625142097473145
    7. 'pq' → logprob: -13.875142097473145
    8. '                   ' → logprob: -14.750142097473145
    9. '```' → logprob: -14.750142097473145
    10. '               ' → logprob: -14.750142097473145

Token 1216: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0033459672704339027
    2. 'pq' → logprob: -5.753345966339111
    3. ' (' → logprob: -8.75334644317627
    4. ' pq' → logprob: -12.00334644317627
    5. '   ' → logprob: -12.87834644317627
    6. 'p' → logprob: -13.87834644317627
    7. 'total' → logprob: -15.25334644317627
    8. '[p' → logprob: -15.87834644317627
    9. '       ' → logprob: -16.128345489501953
    10. '(' → logprob: -16.878345489501953

Token 1217: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -8.537868779967539e-06
    2. ' total' → logprob: -12.000008583068848
    3. '(total' → logprob: -13.000008583068848
    4. '   ' → logprob: -17.00000762939453
    5. 'pq' → logprob: -18.37500762939453
    6. '	total' → logprob: -18.87500762939453
    7. 'tot' → logprob: -18.87500762939453
    8. 'Total' → logprob: -20.12500762939453
    9. ',total' → logprob: -20.62500762939453
    10. '(' → logprob: -21.50000762939453

Token 1218: '_cost' (ID: 36820)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.39006873965263367
    2. '_cost' → logprob: -1.140068769454956
    3. 'cost' → logprob: -5.890068531036377
    4. 'new' → logprob: -9.015069007873535
    5. '_COST' → logprob: -9.265069007873535
    6. 'v' → logprob: -9.640069007873535
    7. '-cost' → logprob: -10.515069007873535
    8. 'Cost' → logprob: -11.015069007873535
    9. '`' → logprob: -11.140069007873535
    10. '```' → logprob: -11.140069007873535

Token 1219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010098267812281847
    2. ',p' → logprob: -7.126009941101074
    3. ',v' → logprob: -8.501009941101074
    4. ',q' → logprob: -14.001009941101074
    5. ' ,' → logprob: -14.376009941101074
    6. ',n' → logprob: -16.001008987426758
    7. ',
' → logprob: -16.751008987426758
    8. ',t' → logprob: -16.876008987426758
    9. ',u' → logprob: -17.001008987426758
    10. '```' → logprob: -17.001008987426758

Token 1220: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001234428636962548
    2. ' v' → logprob: -9.000123023986816
    3. '   ' → logprob: -19.375123977661133
    4. '	v' → logprob: -19.875123977661133
    5. 'vq' → logprob: -20.375123977661133
    6. ')v' → logprob: -21.625123977661133
    7. '(v' → logprob: -21.625123977661133
    8. 'u' → logprob: -22.125123977661133
    9. '$v' → logprob: -22.125123977661133
    10. '[v' → logprob: -23.375123977661133

Token 1221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.672236824873835e-05
    2. ' ,' → logprob: -9.500076293945312
    3. '`,' → logprob: -14.125076293945312
    4. '                               ' → logprob: -14.750076293945312
    5. '_,' → logprob: -16.250076293945312
    6. ',
' → logprob: -16.250076293945312
    7. '                           ' → logprob: -16.875076293945312
    8. '                                   ' → logprob: -16.875076293945312
    9. '```' → logprob: -17.250076293945312
    10. ',,' → logprob: -17.375076293945312

Token 1222: ' comp' (ID: 1050)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.2014707326889038
    2. 'comp' → logprob: -1.7014707326889038
    3. 'v' → logprob: -10.326470375061035
    4. ' cc' → logprob: -10.951470375061035
    5. ' comp' → logprob: -12.076470375061035
    6. 'c' → logprob: -15.201470375061035
    7. 'cost' → logprob: -15.576470375061035
    8. 'com' → logprob: -15.701470375061035
    9. 'vc' → logprob: -15.701470375061035
    10. 'pc' → logprob: -15.826470375061035

Token 1223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.660315895918757e-05
    2. ' ,' → logprob: -9.500076293945312
    3. ',new' → logprob: -13.750076293945312
    4. '                           ' → logprob: -15.875076293945312
    5. '               ' → logprob: -16.375076293945312
    6. '           ' → logprob: -16.750076293945312
    7. '`,' → logprob: -16.875076293945312
    8. '                               ' → logprob: -16.875076293945312
    9. 'new' → logprob: -17.000076293945312
    10. ',
' → logprob: -17.250076293945312

Token 1224: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -2.15310683415737e-05
    2. ' new' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.37502098083496
    4. '	new' → logprob: -19.75002098083496
    5. '```' → logprob: -19.75002098083496
    6. 'New' → logprob: -20.75002098083496
    7. ')new' → logprob: -21.37502098083496
    8. '_new' → logprob: -21.37502098083496
    9. '[new' → logprob: -22.50002098083496
    10. 'newline' → logprob: -22.62502098083496

Token 1225: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00032259183353744447
    2. 'dist' → logprob: -8.500322341918945
    3. 'Dist' → logprob: -9.250322341918945
    4. 'new' → logprob: -10.750322341918945
    5. '```' → logprob: -14.750322341918945
    6. '_cost' → logprob: -15.125322341918945
    7. '-dist' → logprob: -15.500322341918945
    8. '_new' → logprob: -15.500322341918945
    9. '	dist' → logprob: -16.125322341918945
    10. '_DIST' → logprob: -16.250322341918945

Token 1226: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00020616286201402545
    2. '))
' → logprob: -8.625205993652344
    3. '                           ' → logprob: -11.125205993652344
    4. '                       ' → logprob: -12.000205993652344
    5. ')))' → logprob: -13.625205993652344
    6. '               ' → logprob: -13.750205993652344
    7. '                               ' → logprob: -14.000205993652344
    8. '                   ' → logprob: -14.125205993652344
    9. '           ' → logprob: -14.375205993652344
    10. ')' → logprob: -14.375205993652344

Token 1227: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5595923066139221
    2. '               ' → logprob: -0.9345923066139221
    3. 'else' → logprob: -3.5595922470092773
    4. '                       ' → logprob: -5.309592247009277
    5. ' else' → logprob: -6.809592247009277
    6. '           ' → logprob: -7.559592247009277
    7. '       ' → logprob: -8.809592247009277
    8. '                           ' → logprob: -8.809592247009277
    9. '```' → logprob: -9.434592247009277
    10. '...' → logprob: -9.559592247009277

Token 1228: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04539667069911957
    2. '               ' → logprob: -3.295396566390991
    3. '                   ' → logprob: -5.17039680480957
    4. ' else' → logprob: -6.42039680480957
    5. '```' → logprob: -11.54539680480957
    6. 'elif' → logprob: -12.29539680480957
    7. '                       ' → logprob: -13.54539680480957
    8. '           ' → logprob: -14.42039680480957
    9. '{
' → logprob: -14.42039680480957
    10. '	else' → logprob: -15.42039680480957

Token 1229: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2733575403690338
    2. '                   ' → logprob: -1.8983575105667114
    3. ':' → logprob: -2.898357629776001
    4. ':
' → logprob: -3.773357629776001
    5. '                        
' → logprob: -5.773357391357422
    6. '{' → logprob: -7.023357391357422
    7. ' :' → logprob: -7.023357391357422
    8. '               ' → logprob: -7.273357391357422
    9. '                           ' → logprob: -7.273357391357422
    10. '{
' → logprob: -7.398357391357422

Token 1230: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03937869891524315
    2. '                   ' → logprob: -3.2893786430358887
    3. '```' → logprob: -6.914378643035889
    4. '#' → logprob: -8.664379119873047
    5. '               ' → logprob: -9.914379119873047
    6. '                           ' → logprob: -11.164379119873047
    7. 'new' → logprob: -11.289379119873047
    8. ' #' → logprob: -11.414379119873047
    9. '                        
' → logprob: -11.414379119873047
    10. '{
' → logprob: -11.539379119873047

Token 1231: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.48492637276649475
    2. '                       ' → logprob: -1.3599263429641724
    3. '                   ' → logprob: -2.484926462173462
    4. ' #' → logprob: -3.734926462173462
    5. 'new' → logprob: -4.109926223754883
    6. '```' → logprob: -6.359926223754883
    7. ' new' → logprob: -6.984926223754883
    8. 'if' → logprob: -7.484926223754883
    9. '                           ' → logprob: -8.359926223754883
    10. 'total' → logprob: -8.984926223754883

Token 1232: ' Different' (ID: 47255)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0651017352938652
    2. '                       ' → logprob: -2.9401016235351562
    3. 'new' → logprob: -4.690101623535156
    4. '                   ' → logprob: -7.815101623535156
    5. '```' → logprob: -7.815101623535156
    6. ' #' → logprob: -10.065101623535156
    7. '                           ' → logprob: -10.315101623535156
    8. '``' → logprob: -10.690101623535156
    9. '
' → logprob: -10.815101623535156
    10. 'total' → logprob: -11.440101623535156

Token 1233: ' company' (ID: 3175)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.19469110667705536
    2. ' company' → logprob: -1.8196910619735718
    3. '_company' → logprob: -4.444691181182861
    4. 'comp' → logprob: -6.069691181182861
    5. '_comp' → logprob: -7.819691181182861
    6. ' company's' → logprob: -9.694690704345703
    7. '```' → logprob: -9.944690704345703
    8. '                   ' → logprob: -10.694690704345703
    9. '(company' → logprob: -10.819690704345703
    10. ' comp' → logprob: -10.944690704345703

Token 1234: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.016433386132121086
    2. '                           ' → logprob: -5.766433238983154
    3. ' new' → logprob: -5.891433238983154
    4. ':
' → logprob: -6.141433238983154
    5. '                   ' → logprob: -6.766433238983154
    6. ':' → logprob: -6.891433238983154
    7. '
' → logprob: -6.891433238983154
    8. '```' → logprob: -6.891433238983154
    9. '                        
' → logprob: -7.016433238983154
    10. ' if' → logprob: -7.016433238983154

Token 1235: ' close' (ID: 5263)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27054259181022644
    2. '                       ' → logprob: -1.8955426216125488
    3. 'new' → logprob: -2.520542621612549
    4. ' new' → logprob: -5.645542621612549
    5. ' #' → logprob: -6.145542621612549
    6. '```' → logprob: -8.27054214477539
    7. '                           ' → logprob: -8.77054214477539
    8. '                   ' → logprob: -9.02054214477539
    9. '
' → logprob: -9.39554214477539
    10. '                        ' → logprob: -11.39554214477539

Token 1236: ' previous' (ID: 5880)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5060346126556396
    2. 'current' → logprob: -1.7560346126556396
    3. '                       ' → logprob: -3.1310346126556396
    4. 'that' → logprob: -3.3810346126556396
    5. 'section' → logprob: -3.3810346126556396
    6. '```' → logprob: -3.7560346126556396
    7. 'company' → logprob: -4.381034851074219
    8. '                   ' → logprob: -4.381034851074219
    9. ' the' → logprob: -4.506034851074219
    10. 'a' → logprob: -4.631034851074219

Token 1237: ' section' (ID: 7102)
  Prédit: 'section'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.4395294785499573
    2. 'company' → logprob: -1.8145294189453125
    3. '                       ' → logprob: -2.3145294189453125
    4. ' company' → logprob: -4.0645294189453125
    5. '```' → logprob: -4.0645294189453125
    6. ' section' → logprob: -4.3145294189453125
    7. '                   ' → logprob: -4.3145294189453125
    8. '#' → logprob: -4.8145294189453125
    9. '
' → logprob: -4.9395294189453125
    10. '_section' → logprob: -5.6895294189453125

Token 1238: ' and' (ID: 326)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.023307207971811295
    2. '                        
' → logprob: -5.1483073234558105
    3. '
' → logprob: -5.2733073234558105
    4. '```' → logprob: -5.7733073234558105
    5. ',' → logprob: -5.8983073234558105
    6. 'total' → logprob: -6.5233073234558105
    7. 'new' → logprob: -6.7733073234558105
    8. '                           ' → logprob: -7.8983073234558105
    9. ' total' → logprob: -8.023306846618652
    10. ')' → logprob: -8.148306846618652

Token 1239: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5788969993591309
    2. '#' → logprob: -0.8288969993591309
    3. '                       ' → logprob: -6.203896999359131
    4. ' start' → logprob: -7.953896999359131
    5. '
' → logprob: -8.203897476196289
    6. 'open' → logprob: -8.953897476196289
    7. 'new' → logprob: -9.828897476196289
    8. '                           ' → logprob: -9.953897476196289
    9. ' #' → logprob: -10.953897476196289
    10. 'begin' → logprob: -11.453897476196289

Token 1240: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.38817596435546875
    2. 'a' → logprob: -1.1381759643554688
    3. ' a' → logprob: -7.513175964355469
    4. ' new' → logprob: -7.638175964355469
    5. ' anew' → logprob: -9.263175964355469
    6. '_new' → logprob: -9.638175964355469
    7. '```' → logprob: -10.263175964355469
    8. '                           ' → logprob: -10.388175964355469
    9. '                       ' → logprob: -10.513175964355469
    10. '#' → logprob: -11.763175964355469

Token 1241: ' with' (ID: 483)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.02944079600274563
    2. 'section' → logprob: -4.654440879821777
    3. '_cost' → logprob: -4.779440879821777
    4. 'dist' → logprob: -5.654440879821777
    5. 'company' → logprob: -5.779440879821777
    6. '_' → logprob: -6.779440879821777
    7. '_comp' → logprob: -6.904440879821777
    8. '_company' → logprob: -7.154440879821777
    9. 'cost' → logprob: -8.029440879821777
    10. '_section' → logprob: -8.154440879821777

Token 1242: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0047824266366660595
    2. 'd' → logprob: -6.129782199859619
    3. ' cc' → logprob: -6.504782199859619
    4. 'new' → logprob: -8.004782676696777
    5. 'distance' → logprob: -8.504782676696777
    6. 'line' → logprob: -9.004782676696777
    7. 'the' → logprob: -9.129782676696777
    8. '0' → logprob: -9.254782676696777
    9. '1' → logprob: -9.379782676696777
    10. ' new' → logprob: -10.504782676696777

Token 1243: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.032840024679899216
    2. '                           ' → logprob: -4.407840251922607
    3. 'new' → logprob: -4.907840251922607
    4. ' new' → logprob: -5.282840251922607
    5. '                        
' → logprob: -6.032840251922607
    6. '
' → logprob: -6.282840251922607
    7. '```' → logprob: -6.407840251922607
    8. 'dist' → logprob: -8.03283977508545
    9. '                               ' → logprob: -8.40783977508545
    10. '                   ' → logprob: -8.53283977508545

Token 1244: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01297103799879551
    2. '```' → logprob: -4.637970924377441
    3. '                           ' → logprob: -6.887970924377441
    4. 'new' → logprob: -7.137970924377441
    5. '                        
' → logprob: -7.262970924377441
    6. '
' → logprob: -8.262970924377441
    7. '``' → logprob: -8.637970924377441
    8. ' new' → logprob: -9.387970924377441
    9. '                   ' → logprob: -10.262970924377441
    10. '                        ' → logprob: -10.262970924377441

Token 1245: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3935660123825073
    2. ' new' → logprob: -2.018566131591797
    3. '                       ' → logprob: -2.393566131591797
    4. 'f' → logprob: -3.143566131591797
    5. 'total' → logprob: -3.518566131591797
    6. ' f' → logprob: -4.518566131591797
    7. ' total' → logprob: -5.393566131591797
    8. 'fare' → logprob: -5.518566131591797
    9. '                           ' → logprob: -6.018566131591797
    10. '```' → logprob: -6.518566131591797

Token 1246: ' Previous' (ID: 55602)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0309769157320261
    2. '                       ' → logprob: -4.03097677230835
    3. 'total' → logprob: -5.40597677230835
    4. '```' → logprob: -6.40597677230835
    5. 'prev' → logprob: -6.65597677230835
    6. 'f' → logprob: -6.65597677230835
    7. '
' → logprob: -6.90597677230835
    8. 'fare' → logprob: -7.15597677230835
    9. '#' → logprob: -7.28097677230835
    10. 'base' → logprob: -7.90597677230835

Token 1247: ' section' (ID: 7102)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.7595082521438599
    2. 'dist' → logprob: -1.5095082521438599
    3. '_cost' → logprob: -1.7595082521438599
    4. 'total' → logprob: -3.3845081329345703
    5. '```' → logprob: -3.5095081329345703
    6. 'cost' → logprob: -4.25950813293457
    7. '_distance' → logprob: -4.75950813293457
    8. 'company' → logprob: -4.88450813293457
    9. 'distance' → logprob: -5.13450813293457
    10. '_company' → logprob: -5.25950813293457

Token 1248: ' fare' (ID: 25285)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.7464486956596375
    2. '_dist' → logprob: -2.3714487552642822
    3. '_distance' → logprob: -2.4964487552642822
    4. 'dist' → logprob: -2.6214487552642822
    5. 'distance' → logprob: -2.9964487552642822
    6. 'cost' → logprob: -3.1214487552642822
    7. '                       ' → logprob: -3.3714487552642822
    8. '_total' → logprob: -3.6214487552642822
    9. '```' → logprob: -3.7464487552642822
    10. '#' → logprob: -4.121448516845703

Token 1249: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1453375816345215
    2. '_cost' → logprob: -1.6453375816345215
    3. '_diff' → logprob: -1.7703375816345215
    4. 'diff' → logprob: -1.8953375816345215
    5. '=' → logprob: -3.1453375816345215
    6. '_tables' → logprob: -3.3953375816345215
    7. '_total' → logprob: -4.2703375816345215
    8. 'cost' → logprob: -4.6453375816345215
    9. 'difference' → logprob: -5.3953375816345215
    10. 'new' → logprob: -5.6453375816345215

Token 1250: ' included' (ID: 7360)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.5646516680717468
    2. 'cost' → logprob: -1.8146517276763916
    3. 'p' → logprob: -2.0646517276763916
    4. '0' → logprob: -2.1896517276763916
    5. 'paid' → logprob: -5.0646514892578125
    6. 'total' → logprob: -5.1896514892578125
    7. '+' → logprob: -5.8146514892578125
    8. 'c' → logprob: -5.8146514892578125
    9. ' fare' → logprob: -6.1896514892578125
    10. '(p' → logprob: -6.8146514892578125

Token 1251: ' already' (ID: 4279)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.15212802588939667
    2. '+' → logprob: -3.277127981185913
    3. ',' → logprob: -3.402127981185913
    4. '                        
' → logprob: -4.027128219604492
    5. ' +' → logprob: -4.402128219604492
    6. '```' → logprob: -5.027128219604492
    7. '
' → logprob: -5.277128219604492
    8. '                           ' → logprob: -5.402128219604492
    9. ' =' → logprob: -5.652128219604492
    10. '+
' → logprob: -6.027128219604492

Token 1252: ' in' (ID: 306)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.19197820127010345
    2. '
' → logprob: -2.0669782161712646
    3. '```' → logprob: -3.6919782161712646
    4. '                        
' → logprob: -4.1919779777526855
    5. 'new' → logprob: -6.0669779777526855
    6. '``' → logprob: -6.9419779777526855
    7. ',' → logprob: -6.9419779777526855
    8. '#' → logprob: -7.3169779777526855
    9. 'total' → logprob: -7.8169779777526855
    10. '`
' → logprob: -7.9419779777526855

Token 1253: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.002005483955144882
    2. 'total' → logprob: -6.627005577087402
    3. ' cost' → logprob: -7.877005577087402
    4. 'the' → logprob: -8.752005577087402
    5. 'dist' → logprob: -9.627005577087402
    6. 'code' → logprob: -9.877005577087402
    7. 'previous' → logprob: -11.627005577087402
    8. 'current' → logprob: -12.627005577087402
    9. '
' → logprob: -12.877005577087402
    10. '```' → logprob: -13.002005577087402

Token 1254: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04813418537378311
    2. '
' → logprob: -3.4231340885162354
    3. '                        
' → logprob: -4.4231343269348145
    4. '```' → logprob: -7.1731343269348145
    5. ',' → logprob: -7.6731343269348145
    6. '`
' → logprob: -8.923133850097656
    7. '                           ' → logprob: -9.298133850097656
    8. 'new' → logprob: -9.298133850097656
    9. '``' → logprob: -9.298133850097656
    10. '                        ' → logprob: -10.048133850097656

Token 1255: ' so' (ID: 813)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09441567957401276
    2. 'new' → logprob: -2.4694156646728516
    3. ' new' → logprob: -5.844415664672852
    4. '#' → logprob: -6.844415664672852
    5. '```' → logprob: -7.719415664672852
    6. '
' → logprob: -7.969415664672852
    7. '                        
' → logprob: -8.469415664672852
    8. '                           ' → logprob: -8.719415664672852
    9. '                        ' → logprob: -9.469415664672852
    10. '                   ' → logprob: -9.719415664672852

Token 1256: ' add' (ID: 1147)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.006777776870876551
    2. '#' → logprob: -5.756777763366699
    3. '
' → logprob: -6.631777763366699
    4. '```' → logprob: -7.256777763366699
    5. ' new' → logprob: -7.631777763366699
    6. 'fare' → logprob: -7.881777763366699
    7. 'f' → logprob: -8.7567777633667
    8. '                       ' → logprob: -8.8817777633667
    9. 'total' → logprob: -9.2567777633667
    10. '                           ' → logprob: -9.3817777633667

Token 1257: ' new' (ID: 620)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.05644293501973152
    2. ' fare' → logprob: -3.431442975997925
    3. 'p' → logprob: -4.056442737579346
    4. ' p' → logprob: -6.056442737579346
    5. 'cost' → logprob: -6.806442737579346
    6. '   ' → logprob: -7.931442737579346
    7. 'compute' → logprob: -8.431443214416504
    8. 'total' → logprob: -8.806443214416504
    9. '(p' → logprob: -8.931443214416504
    10. '```' → logprob: -9.181443214416504

Token 1258: ' section' (ID: 7102)
  Prédit: ' fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fare' → logprob: -1.147001028060913
    2. 'fare' → logprob: -1.522001028060913
    3. '_cost' → logprob: -1.647001028060913
    4. '_comp' → logprob: -2.647001028060913
    5. 'company' → logprob: -3.147001028060913
    6. '_company' → logprob: -3.772001028060913
    7. '_dist' → logprob: -4.022001266479492
    8. '_' → logprob: -4.147001266479492
    9. ' company' → logprob: -4.147001266479492
    10. 'cost' → logprob: -4.272001266479492

Token 1259: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fare' → logprob: -1.0367251634597778
    2. '_f' → logprob: -1.1617251634597778
    3. '_cost' → logprob: -2.2867250442504883
    4. 'f' → logprob: -3.0367250442504883
    5. ' =' → logprob: -3.2867250442504883
    6. 'cost' → logprob: -3.4117250442504883
    7. '+' → logprob: -3.6617250442504883
    8. '                   ' → logprob: -4.161725044250488
    9. 'total' → logprob: -4.286725044250488
    10. '=' → logprob: -4.411725044250488

Token 1260: ' for' (ID: 395)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02719445712864399
    2. '+' → logprob: -4.652194499969482
    3. '```' → logprob: -5.902194499969482
    4. '=' → logprob: -6.152194499969482
    5. ' +' → logprob: -6.277194499969482
    6. ' =' → logprob: -6.277194499969482
    7. '                        
' → logprob: -6.402194499969482
    8. ',' → logprob: -6.777194499969482
    9. '
' → logprob: -6.777194499969482
    10. '                           ' → logprob: -7.152194499969482

Token 1261: ' d' (ID: 272)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.5365723371505737
    2. 'fare' → logprob: -0.9115723371505737
    3. ' fare' → logprob: -5.661572456359863
    4. 'd' → logprob: -5.786572456359863
    5. ' cc' → logprob: -6.536572456359863
    6. 'new' → logprob: -7.036572456359863
    7. 'the' → logprob: -7.161572456359863
    8. '   ' → logprob: -7.286572456359863
    9. '```' → logprob: -7.786572456359863
    10. 'r' → logprob: -7.911572456359863

Token 1262: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00021093101531732827
    2. 'd' → logprob: -9.625210762023926
    3. '[line' → logprob: -10.250210762023926
    4. '_line' → logprob: -10.375210762023926
    5. '```' → logprob: -11.125210762023926
    6. 'cc' → logprob: -11.375210762023926
    7. 'ine' → logprob: -11.500210762023926
    8. ' line' → logprob: -12.125210762023926
    9. 'istance' → logprob: -12.125210762023926
    10. '=line' → logprob: -12.250210762023926

Token 1263: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20811200141906738
    2. '
' → logprob: -3.2081120014190674
    3. '+' → logprob: -3.7081120014190674
    4. '```' → logprob: -3.9581120014190674
    5. ' =' → logprob: -4.208111763000488
    6. '                           ' → logprob: -4.333111763000488
    7. '                        
' → logprob: -4.333111763000488
    8. ' +' → logprob: -4.333111763000488
    9. 'total' → logprob: -4.833111763000488
    10. '=' → logprob: -4.833111763000488

Token 1264: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09157136082649231
    2. '                        
' → logprob: -3.71657133102417
    3. '```' → logprob: -3.96657133102417
    4. '+' → logprob: -4.96657133102417
    5. ' total' → logprob: -5.21657133102417
    6. 'total' → logprob: -5.21657133102417
    7. ' new' → logprob: -5.34157133102417
    8. '                           ' → logprob: -5.34157133102417
    9. 'new' → logprob: -6.21657133102417
    10. ' f' → logprob: -6.21657133102417

Token 1265: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -1.2350959777832031
    2. 'total' → logprob: -1.4850959777832031
    3. '                       ' → logprob: -1.6100959777832031
    4. ' total' → logprob: -1.7350959777832031
    5. ' new' → logprob: -2.985095977783203
    6. 'f' (adapté à ' f') → logprob: -3.610095977783203
    7. 'new' → logprob: -3.860095977783203
    8. '                           ' → logprob: -5.610095977783203
    9. '```' → logprob: -5.985095977783203
    10. 'fare' → logprob: -8.110095977783203

Token 1266: 'new' (ID: 1389)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48326072096824646
    2. ' =' → logprob: -0.9832607507705688
    3. 'f' → logprob: -5.233260631561279
    4. 'fare' → logprob: -6.108260631561279
    5. '=f' → logprob: -7.233260631561279
    6. 'new' → logprob: -7.608260631561279
    7. '_new' → logprob: -8.733261108398438
    8. 'cc' → logprob: -9.233261108398438
    9. '_f' → logprob: -10.358261108398438
    10. '[' → logprob: -11.358261108398438

Token 1267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740838408470154
    2. ' =' → logprob: -0.9740838408470154
    3. '=f' → logprob: -12.09908390045166
    4. '   ' → logprob: -14.47408390045166
    5. '=
' → logprob: -15.84908390045166
    6. '[' → logprob: -16.099082946777344
    7. 'fare' → logprob: -16.224082946777344
    8. '```' → logprob: -16.474082946777344
    9. ' fare' → logprob: -16.724082946777344
    10. ' ' → logprob: -16.849082946777344

Token 1268: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -4.870950215263292e-05
    2. ' fare' → logprob: -10.000048637390137
    3. 'cost' → logprob: -13.625048637390137
    4. 'fair' → logprob: -14.000048637390137
    5. '   ' → logprob: -14.250048637390137
    6. 'fee' → logprob: -15.375048637390137
    7. 'far' → logprob: -15.625048637390137
    8. 'fa' → logprob: -16.750049591064453
    9. '  ' → logprob: -17.125049591064453
    10. ' ' → logprob: -17.625049591064453

Token 1269: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -3.1424973713001236e-05
    2. 'tables' → logprob: -11.625031471252441
    3. '[f' → logprob: -11.750031471252441
    4. 'new' → logprob: -12.500031471252441
    5. '[new' → logprob: -12.625031471252441
    6. '[' → logprob: -12.625031471252441
    7. '[t' → logprob: -13.500031471252441
    8. '[_' → logprob: -13.625031471252441
    9. 'Tables' → logprob: -15.125031471252441
    10. '```' → logprob: -15.500031471252441

Token 1270: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4868770196917467e-05
    2. 'cc' → logprob: -10.625024795532227
    3. '```' → logprob: -15.000024795532227
    4. '(cc' → logprob: -16.750024795532227
    5. '_cc' → logprob: -17.250024795532227
    6. '`' → logprob: -17.625024795532227
    7. ' [' → logprob: -17.750024795532227
    8. '[
' → logprob: -17.875024795532227
    9. ' cc' → logprob: -18.250024795532227
    10. ')[' → logprob: -18.375024795532227

Token 1271: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -9.088346359931165e-07
    2. ' cc' → logprob: -14.375000953674316
    3. '[' → logprob: -15.375000953674316
    4. 'c' → logprob: -18.75
    5. '(cc' → logprob: -19.0
    6. '	cc' → logprob: -19.25
    7. '
' → logprob: -19.75
    8. '```' → logprob: -20.125
    9. '   ' → logprob: -20.5
    10. '`' → logprob: -21.125

Token 1272: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2523246705532074
    2. '][' → logprob: -1.5023247003555298
    3. '[new' → logprob: -8.877325057983398
    4. ')[' → logprob: -9.377325057983398
    5. 'cc' → logprob: -9.627325057983398
    6. 'new' → logprob: -10.627325057983398
    7. '```' → logprob: -11.252325057983398
    8. ']' → logprob: -11.502325057983398
    9. '}[' → logprob: -11.752325057983398
    10. '>[' → logprob: -11.877325057983398

Token 1273: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5048530030981055e-06
    2. ' d' → logprob: -14.125001907348633
    3. '1' → logprob: -14.750001907348633
    4. 'new' → logprob: -15.000001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '```' → logprob: -17.625001907348633
    7. '[d' → logprob: -17.875001907348633
    8. '`' → logprob: -17.875001907348633
    9. 'f' → logprob: -18.125001907348633
    10. '0' → logprob: -18.125001907348633

Token 1274: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.7432603272027336e-06
    2. 'l' → logprob: -14.500001907348633
    3. '[line' → logprob: -14.875001907348633
    4. ' line' → logprob: -15.625001907348633
    5. '1' → logprob: -15.625001907348633
    6. 'd' → logprob: -16.125001907348633
    7. '`' → logprob: -16.500001907348633
    8. ' ' → logprob: -16.750001907348633
    9. '```' → logprob: -16.750001907348633
    10. '_line' → logprob: -16.875001907348633

Token 1275: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2017286866903305
    2. ']' → logprob: -1.7017287015914917
    3. ']
' → logprob: -8.451728820800781
    4. ')
' → logprob: -10.451728820800781
    5. ']+' → logprob: -10.826728820800781
    6. ')' → logprob: -11.451728820800781
    7. '                   ' → logprob: -11.951728820800781
    8. '                       ' → logprob: -11.951728820800781
    9. '])
' → logprob: -12.201728820800781
    10. '               ' → logprob: -12.201728820800781

Token 1276: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11650752276182175
    2. '```' → logprob: -2.8665075302124023
    3. 'total' → logprob: -3.8665075302124023
    4. ' total' → logprob: -4.366507530212402
    5. '                           ' → logprob: -4.991507530212402
    6. '(total' → logprob: -5.741507530212402
    7. '``' → logprob: -5.991507530212402
    8. '                        
' → logprob: -6.116507530212402
    9. '
' → logprob: -6.491507530212402
    10. '<|end|>' → logprob: -6.991507530212402

Token 1277: ' total' (ID: 3609)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2871251106262207
    2. 'total' (adapté à ' total') → logprob: -1.5371251106262207
    3. ' total' → logprob: -3.4121251106262207
    4. '                           ' → logprob: -7.287125110626221
    5. '```' → logprob: -7.412125110626221
    6. '+' → logprob: -9.537124633789062
    7. '                        
' → logprob: -9.787124633789062
    8. '(total' → logprob: -10.412124633789062
    9. '``' → logprob: -10.912124633789062
    10. '           ' → logprob: -10.912124633789062

Token 1278: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.759734732331708e-05
    2. '_code' → logprob: -11.625017166137695
    3. 'cost' → logprob: -12.000017166137695
    4. 'Cost' → logprob: -13.875017166137695
    5. '_COST' → logprob: -14.000017166137695
    6. '```' → logprob: -15.000017166137695
    7. '+' → logprob: -15.875017166137695
    8. '_C' → logprob: -16.875017166137695
    9. ' cost' → logprob: -17.000017166137695
    10. '_' → logprob: -17.375017166137695

Token 1279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.69388747215271
    2. ' =' → logprob: -0.69388747215271
    3. ' +=' → logprob: -7.568887710571289
    4. '+' → logprob: -9.318887710571289
    5. ' +' → logprob: -9.568887710571289
    6. '+=' → logprob: -9.818887710571289
    7. ')' → logprob: -12.568887710571289
    8. '   ' → logprob: -13.318887710571289
    9. ',' → logprob: -13.693887710571289
    10. '```' → logprob: -13.818887710571289

Token 1280: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1002068892121315
    2. ' cost' → logprob: -2.3502068519592285
    3. '(cost' → logprob: -15.850207328796387
    4. 'code' → logprob: -16.72520637512207
    5. '   ' → logprob: -17.60020637512207
    6. 'total' → logprob: -18.22520637512207
    7. 'Cost' → logprob: -18.72520637512207
    8. '_cost' → logprob: -18.97520637512207
    9. '0' → logprob: -19.97520637512207
    10. ' ' → logprob: -19.97520637512207

Token 1281: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692831456661224
    2. '+' → logprob: -2.1269283294677734
    3. '＋' → logprob: -17.001928329467773
    4. '+c' → logprob: -17.001928329467773
    5. ' ' → logprob: -17.251928329467773
    6. '+
' → logprob: -17.376928329467773
    7. ' +
' → logprob: -17.376928329467773
    8. '                       ' → logprob: -18.376928329467773
    9. '                           ' → logprob: -18.501928329467773
    10. '```' → logprob: -18.626928329467773

Token 1282: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06196993216872215
    2. ' f' → logprob: -2.8119699954986572
    3. '	f' → logprob: -14.061969757080078
    4. ' ' → logprob: -15.561969757080078
    5. ''f' → logprob: -15.561969757080078
    6. '(f' → logprob: -15.686969757080078
    7. 'fare' → logprob: -15.686969757080078
    8. '```' → logprob: -15.686969757080078
    9. ''' → logprob: -15.811969757080078
    10. '`' → logprob: -16.061969757080078

Token 1283: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -9.281485836254433e-05
    2. '[new' → logprob: -9.375092506408691
    3. '_new' → logprob: -12.250092506408691
    4. 'ew' → logprob: -13.875092506408691
    5. '(new' → logprob: -14.250092506408691
    6. ' new' → logprob: -14.375092506408691
    7. '[' → logprob: -15.250092506408691
    8. ')new' → logprob: -15.250092506408691
    9. '```' → logprob: -16.000093460083008
    10. '	new' → logprob: -16.000093460083008

Token 1284: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.022262899205088615
    2. '<|end|>' → logprob: -4.397263050079346
    3. '                        
' → logprob: -5.772263050079346
    4. ' if' → logprob: -6.272263050079346
    5. '                           ' → logprob: -6.897263050079346
    6. '
' → logprob: -6.897263050079346
    7. '               ' → logprob: -7.897263050079346
    8. 'if' → logprob: -7.897263050079346
    9. ')' → logprob: -7.897263050079346
    10. '```' → logprob: -8.272262573242188

Token 1285: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.009295100346207619
    2. '```' → logprob: -5.7592949867248535
    3. '<|end|>' → logprob: -6.2592949867248535
    4. '                           ' → logprob: -6.2592949867248535
    5. ' if' → logprob: -7.5092949867248535
    6. ')' → logprob: -7.7592949867248535
    7. '               ' → logprob: -8.134295463562012
    8. '                   ' → logprob: -8.384295463562012
    9. '                        
' → logprob: -8.509295463562012
    10. 'if' → logprob: -8.759295463562012

Token 1286: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03164445236325264
    2. '                       ' → logprob: -3.531644344329834
    3. ' if' → logprob: -6.281644344329834
    4. '                   ' → logprob: -11.406644821166992
    5. '```' → logprob: -12.531644821166992
    6. '               ' → logprob: -12.656644821166992
    7. '                           ' → logprob: -13.156644821166992
    8. '           ' → logprob: -13.906644821166992
    9. '                        
' → logprob: -15.406644821166992
    10. '       ' → logprob: -15.406644821166992

Token 1287: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.029752805829048157
    2. ' total' → logprob: -3.529752731323242
    3. 'dist' → logprob: -13.779752731323242
    4. '(total' → logprob: -14.404752731323242
    5. '                           ' → logprob: -15.029752731323242
    6. 'Total' → logprob: -16.154752731323242
    7. '   ' → logprob: -16.654752731323242
    8. '$total' → logprob: -16.779752731323242
    9. '	total' → logprob: -16.779752731323242
    10. ' dist' → logprob: -16.904752731323242

Token 1288: '_cost' (ID: 36820)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.583694338798523
    2. '[v' → logprob: -1.833694338798523
    3. 'dist' → logprob: -2.3336944580078125
    4. 'v' → logprob: -2.8336944580078125
    5. '_total' → logprob: -2.8336944580078125
    6. '_dist' → logprob: -3.5836944580078125
    7. '_cost' → logprob: -3.7086944580078125
    8. '<v' → logprob: -5.3336944580078125
    9. '(v' → logprob: -5.7086944580078125
    10. '<' → logprob: -6.9586944580078125

Token 1289: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6329360008239746
    2. ' <' → logprob: -0.7579360008239746
    3. '<v' → logprob: -8.507936477661133
    4. '[' → logprob: -9.882936477661133
    5. '<=' → logprob: -10.382936477661133
    6. ' <=' → logprob: -10.632936477661133
    7. '<n' → logprob: -12.507936477661133
    8. '<th' → logprob: -12.757936477661133
    9. '<|end|>' → logprob: -13.132936477661133
    10. '<size' → logprob: -13.257936477661133

Token 1290: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00033546582562848926
    2. ' dist' → logprob: -8.000335693359375
    3. '	dist' → logprob: -18.000335693359375
    4. '   ' → logprob: -18.375335693359375
    5. '(dist' → logprob: -18.500335693359375
    6. '```' → logprob: -18.750335693359375
    7. '.dist' → logprob: -19.250335693359375
    8. '_dist' → logprob: -19.750335693359375
    9. '
' → logprob: -20.000335693359375
    10. 'len' → logprob: -20.250335693359375

Token 1291: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.0206720617134124e-05
    2. 'v' → logprob: -11.50001049041748
    3. '<v' → logprob: -17.875009536743164
    4. '[u' → logprob: -18.375009536743164
    5. '[' → logprob: -18.625009536743164
    6. '(v' → logprob: -18.750009536743164
    7. '```' → logprob: -18.750009536743164
    8. '	v' → logprob: -19.250009536743164
    9. ',v' → logprob: -20.125009536743164
    10. ' v' → logprob: -20.250009536743164

Token 1292: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009788316674530506
    2. '][' → logprob: -4.634788513183594
    3. '```' → logprob: -11.259788513183594
    4. '       ' → logprob: -12.759788513183594
    5. '[v' → logprob: -12.884788513183594
    6. '}[' → logprob: -13.009788513183594
    7. ')[' → logprob: -13.134788513183594
    8. '           ' → logprob: -13.384788513183594
    9. '>[' → logprob: -14.009788513183594
    10. ']' → logprob: -14.009788513183594

Token 1293: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -2.816093228830141e-06
    2. 'c' → logprob: -14.12500286102295
    3. '[' → logprob: -14.37500286102295
    4. '```' → logprob: -14.37500286102295
    5. ' cc' → logprob: -14.87500286102295
    6. '][' → logprob: -15.37500286102295
    7. '
' → logprob: -15.75000286102295
    8. '0' → logprob: -16.875001907348633
    9. '...' → logprob: -17.500001907348633
    10. '(cc' → logprob: -17.625001907348633

Token 1294: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12317605316638947
    2. '[' → logprob: -2.248176097869873
    3. '[d' → logprob: -4.623176097869873
    4. '[c' → logprob: -8.123175621032715
    5. 'cc' → logprob: -9.873175621032715
    6. 'd' → logprob: -10.748175621032715
    7. ''][' → logprob: -10.873175621032715
    8. ']' → logprob: -10.873175621032715
    9. '```' → logprob: -10.998175621032715
    10. '   ' → logprob: -11.248175621032715

Token 1295: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2664456789934775e-06
    2. ' d' → logprob: -13.875000953674316
    3. '0' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '1' → logprob: -17.000001907348633
    6. '_d' → logprob: -18.625001907348633
    7. '	d' → logprob: -19.000001907348633
    8. 'new' → logprob: -19.125001907348633
    9. '```' → logprob: -19.125001907348633
    10. '           ' → logprob: -19.500001907348633

Token 1296: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.002227452350780368
    2. '[line' → logprob: -6.252227306365967
    3. 'eline' → logprob: -9.752227783203125
    4. 'iline' → logprob: -10.002227783203125
    5. 'new' → logprob: -10.127227783203125
    6. '[' → logprob: -10.752227783203125
    7. 'ist' → logprob: -10.877227783203125
    8. 'ine' → logprob: -11.002227783203125
    9. '][' → logprob: -11.002227783203125
    10. 'l' → logprob: -11.252227783203125

Token 1297: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.07893870770931244
    2. ']:
' → logprob: -2.5789387226104736
    3. ']:
' → logprob: -10.078938484191895
    4. ']:

' → logprob: -13.328938484191895
    5. ']' → logprob: -13.703938484191895
    6. '[' → logprob: -13.953938484191895
    7. ':' → logprob: -14.078938484191895
    8. '']:' → logprob: -14.953938484191895
    9. '"]:' → logprob: -14.953938484191895
    10. '       ' → logprob: -15.203938484191895

Token 1298: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3195270895957947
    2. '                       ' → logprob: -1.8195271492004395
    3. '                               ' → logprob: -3.0695271492004395
    4. '```' → logprob: -3.5695271492004395
    5. 'heap' → logprob: -4.6945271492004395
    6. '(heap' → logprob: -4.8195271492004395
    7. '   ' → logprob: -5.5695271492004395
    8. '[' → logprob: -5.6945271492004395
    9. '                   ' → logprob: -6.4445271492004395
    10. '               ' → logprob: -6.4445271492004395

Token 1299: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.011088847182691097
    2. ' dist' → logprob: -5.261088848114014
    3. '                           ' → logprob: -6.011088848114014
    4. '                               ' → logprob: -6.261088848114014
    5. 'heap' → logprob: -6.636088848114014
    6. '```' → logprob: -9.761088371276855
    7. '                            ' → logprob: -10.261088371276855
    8. '                       ' → logprob: -10.636088371276855
    9. '                                   ' → logprob: -11.636088371276855
    10. ' heap' → logprob: -11.761088371276855

Token 1300: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00020520923135336488
    2. 'v' → logprob: -8.500205039978027
    3. '(v' → logprob: -14.625205039978027
    4. '[' → logprob: -14.875205039978027
    5. '<v' → logprob: -14.875205039978027
    6. ',v' → logprob: -15.125205039978027
    7. '	v' → logprob: -15.875205039978027
    8. '```' → logprob: -16.375205993652344
    9. '$v' → logprob: -17.125205993652344
    10. ')v' → logprob: -17.375205993652344

Token 1301: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0009988710517063737
    2. '][' → logprob: -7.0009989738464355
    3. 'v' → logprob: -9.500998497009277
    4. '[' → logprob: -11.750998497009277
    5. '```' → logprob: -12.750998497009277
    6. ',v' → logprob: -15.125998497009277
    7. '<v' → logprob: -15.500998497009277
    8. '[s' → logprob: -15.500998497009277
    9. ']' → logprob: -15.500998497009277
    10. '[u' → logprob: -15.875998497009277

Token 1302: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.5760607719421387
    2. 'v' → logprob: -0.8260607719421387
    3. 'cost' → logprob: -9.451061248779297
    4. '[v' → logprob: -11.201061248779297
    5. 'comp' → logprob: -11.701061248779297
    6. '(v' → logprob: -11.826061248779297
    7. '(cc' → logprob: -12.451061248779297
    8. 'vq' → logprob: -12.701061248779297
    9. 'vv' → logprob: -13.451061248779297
    10. '```' → logprob: -13.451061248779297

Token 1303: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06575562059879303
    2. '[v' → logprob: -2.815755605697632
    3. 'cc' → logprob: -5.815755844116211
    4. 'v' → logprob: -7.440755844116211
    5. '[c' → logprob: -8.815755844116211
    6. '][' → logprob: -10.190755844116211
    7. '(cc' → logprob: -11.565755844116211
    8. '```' → logprob: -11.940755844116211
    9. ']' → logprob: -13.565755844116211
    10. '           ' → logprob: -13.565755844116211

Token 1304: 'd' (ID: 67)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0028248466551303864
    2. 'd' → logprob: -5.877824783325195
    3. '[v' → logprob: -11.002824783325195
    4. 'new' → logprob: -13.877824783325195
    5. '[d' → logprob: -14.627824783325195
    6. 'cost' → logprob: -14.752824783325195
    7. '```' → logprob: -15.002824783325195
    8. 'total' → logprob: -15.127824783325195
    9. ' v' → logprob: -15.252824783325195
    10. 'dist' → logprob: -15.377824783325195

Token 1305: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00018971276585943997
    2. 'l' → logprob: -9.750189781188965
    3. '[line' → logprob: -9.750189781188965
    4. '[' → logprob: -10.875189781188965
    5. 'iline' → logprob: -11.500189781188965
    6. 'eline' → logprob: -11.875189781188965
    7. ']' → logprob: -12.250189781188965
    8. '```' → logprob: -12.250189781188965
    9. 'ine' → logprob: -12.375189781188965
    10. '   ' → logprob: -12.625189781188965

Token 1306: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03166743740439415
    2. ']=' → logprob: -3.531667470932007
    3. '                           ' → logprob: -6.781667232513428
    4. '=' → logprob: -7.531667232513428
    5. ')' → logprob: -8.781667709350586
    6. '                               ' → logprob: -10.531667709350586
    7. ' ]' → logprob: -11.406667709350586
    8. ']==' → logprob: -11.531667709350586
    9. ']+=' → logprob: -11.656667709350586
    10. ' =' → logprob: -12.281667709350586

Token 1307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012733307667076588
    2. ' =' → logprob: -4.387733459472656
    3. ']=' → logprob: -9.512733459472656
    4. ']' → logprob: -9.637733459472656
    5. '                           ' → logprob: -9.637733459472656
    6. '=
' → logprob: -11.512733459472656
    7. '                               ' → logprob: -12.637733459472656
    8. ')' → logprob: -12.762733459472656
    9. '=True' → logprob: -14.512733459472656
    10. '                            ' → logprob: -14.637733459472656

Token 1308: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.003178071230649948
    2. ' total' → logprob: -5.753178119659424
    3. '                           ' → logprob: -15.628177642822266
    4. '                               ' → logprob: -16.253177642822266
    5. '   ' → logprob: -17.378177642822266
    6. '	total' → logprob: -17.628177642822266
    7. '                                   ' → logprob: -18.128177642822266
    8. 'Total' → logprob: -18.878177642822266
    9. '                       ' → logprob: -19.003177642822266
    10. 'tot' → logprob: -19.253177642822266

Token 1309: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0016641122056171298
    2. 'cost' → logprob: -6.501664161682129
    3. 'total' → logprob: -9.501664161682129
    4. 'new' → logprob: -9.751664161682129
    5. '_code' → logprob: -11.751664161682129
    6. 'Cost' → logprob: -11.876664161682129
    7. '_total' → logprob: -13.001664161682129
    8. '
' → logprob: -13.251664161682129
    9. '+' → logprob: -13.376664161682129
    10. '   ' → logprob: -13.501664161682129

Token 1310: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.009937054477632046
    2. '```' → logprob: -5.009937286376953
    3. '                               ' → logprob: -6.509937286376953
    4. ')' → logprob: -7.634937286376953
    5. '                       ' → logprob: -8.009937286376953
    6. '                            
' → logprob: -8.384937286376953
    7. '                            ' → logprob: -9.009937286376953
    8. 'heap' → logprob: -9.384937286376953
    9. '<|end|>' → logprob: -9.634937286376953
    10. ')
' → logprob: -9.884937286376953

Token 1311: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.23249107599258423
    2. '                               ' → logprob: -2.4824910163879395
    3. '```' → logprob: -2.4824910163879395
    4. ')' → logprob: -3.8574910163879395
    5. '                       ' → logprob: -4.8574910163879395
    6. '                                   ' → logprob: -6.3574910163879395
    7. '                             ' → logprob: -6.6074910163879395
    8. '[' → logprob: -6.7324910163879395
    9. '``' → logprob: -6.9824910163879395
    10. '                            ' → logprob: -6.9824910163879395

Token 1312: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.017982525750994682
    2. '```' → logprob: -4.267982482910156
    3. '                           ' → logprob: -5.642982482910156
    4. '                               ' → logprob: -8.642982482910156
    5. ' heap' → logprob: -10.017982482910156
    6. '``' → logprob: -10.642982482910156
    7. '                       ' → logprob: -11.642982482910156
    8. '                                   ' → logprob: -12.517982482910156
    9. '                            ' → logprob: -13.017982482910156
    10. '               ' → logprob: -13.017982482910156

Token 1313: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.868328920158092e-05
    2. 'ush' → logprob: -10.875028610229492
    3. 'p' → logprob: -11.750028610229492
    4. '```' → logprob: -13.875028610229492
    5. 'app' → logprob: -15.125028610229492
    6. 'push' → logprob: -15.750028610229492
    7. 'h' → logprob: -16.000028610229492
    8. '[' → logprob: -16.000028610229492
    9. '.he' → logprob: -16.500028610229492
    10. 'he' → logprob: -16.875028610229492

Token 1314: '.he' (ID: 67786)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.17626918852329254
    2. '.he' → logprob: -2.176269292831421
    3. 'ush' → logprob: -3.301269292831421
    4. 'push' → logprob: -4.551269054412842
    5. 'app' → logprob: -8.17626953125
    6. 'heap' → logprob: -8.30126953125
    7. 'q' → logprob: -9.55126953125
    8. '.push' → logprob: -10.05126953125
    9. 'h' → logprob: -10.55126953125
    10. '.heap' → logprob: -10.92626953125

Token 1315: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.01942642219364643
    2. 'pp' → logprob: -4.144426345825195
    3. 'ush' → logprob: -6.019426345825195
    4. 'ap' → logprob: -7.644426345825195
    5. 'push' → logprob: -7.769426345825195
    6. 'p' → logprob: -10.644426345825195
    7. 'op' → logprob: -11.769426345825195
    8. '```' → logprob: -12.019426345825195
    9. 'q' → logprob: -12.269426345825195
    10. 'appen' → logprob: -12.769426345825195

Token 1316: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00035274302354082465
    2. 'push' → logprob: -8.87535285949707
    3. 'sh' → logprob: -9.00035285949707
    4. 'p' → logprob: -10.25035285949707
    5. 'pp' → logprob: -10.37535285949707
    6. 'op' → logprob: -11.75035285949707
    7. 'app' → logprob: -12.62535285949707
    8. 'q' → logprob: -12.62535285949707
    9. 'h' → logprob: -12.75035285949707
    10. 'u' → logprob: -13.50035285949707

Token 1317: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.1041145626222715e-05
    2. 'pq' → logprob: -11.500011444091797
    3. 'p' → logprob: -14.375011444091797
    4. '```' → logprob: -15.500011444091797
    5. '   ' → logprob: -17.125011444091797
    6. '(q' → logprob: -17.375011444091797
    7. '(
' → logprob: -17.875011444091797
    8. '       ' → logprob: -19.250011444091797
    9. ' (' → logprob: -19.250011444091797
    10. '           ' → logprob: -19.375011444091797

Token 1318: 'q' (ID: 80)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.13113689422607422
    2. 'q' → logprob: -2.131136894226074
    3. '(p' → logprob: -5.506136894226074
    4. ' pq' → logprob: -10.381136894226074
    5. 'dq' → logprob: -10.381136894226074
    6. '[p' → logprob: -10.631136894226074
    7. 'p' → logprob: -10.881136894226074
    8. 'vq' → logprob: -11.631136894226074
    9. 'sq' → logprob: -11.756136894226074
    10. 'hq' → logprob: -12.506136894226074

Token 1319: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0004450892156455666
    2. 'pq' → logprob: -7.7504448890686035
    3. 'p' → logprob: -11.375445365905762
    4. '```' → logprob: -13.750445365905762
    5. ')' → logprob: -14.500445365905762
    6. ',p' → logprob: -15.125445365905762
    7. '   ' → logprob: -15.500445365905762
    8. '(q' → logprob: -15.875445365905762
    9. ' pq' → logprob: -16.000444412231445
    10. '<p' → logprob: -16.125444412231445

Token 1320: ' (' (ID: 350)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -1.9266199160483666e-05
    2. '(p' → logprob: -11.500019073486328
    3. ' pq' → logprob: -11.625019073486328
    4. '   ' → logprob: -16.750019073486328
    5. 'p' → logprob: -17.625019073486328
    6. 'dist' → logprob: -18.375019073486328
    7. 'pv' → logprob: -18.750019073486328
    8. '```' → logprob: -19.500019073486328
    9. 'sq' → logprob: -19.625019073486328
    10. 'PQ' → logprob: -20.125019073486328

Token 1321: 'total' (ID: 9577)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -6.630610641877865e-06
    2. 'total' → logprob: -12.750006675720215
    3. '(p' → logprob: -12.875006675720215
    4. ' pq' → logprob: -14.750006675720215
    5. '   ' → logprob: -15.375006675720215
    6. 'dist' → logprob: -15.625006675720215
    7. 'pv' → logprob: -16.3750057220459
    8. 'p' → logprob: -17.0000057220459
    9. '(total' → logprob: -17.3750057220459
    10. '(v' → logprob: -17.6250057220459

Token 1322: '_cost' (ID: 36820)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.524006187915802
    2. 'pq' → logprob: -0.899006187915802
    3. 'p' → logprob: -7.649006366729736
    4. ',p' → logprob: -9.899005889892578
    5. 'sq' → logprob: -10.149005889892578
    6. ')' → logprob: -10.274005889892578
    7. '[p' → logprob: -10.524005889892578
    8. 'hq' → logprob: -10.524005889892578
    9. '```' → logprob: -10.899005889892578
    10. '(p' → logprob: -11.024005889892578

Token 1323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5777765512466431
    2. ',p' → logprob: -0.8277765512466431
    3. 'pq' → logprob: -6.5777764320373535
    4. '(p' → logprob: -7.8277764320373535
    5. 'p' → logprob: -10.452776908874512
    6. ' ,' → logprob: -11.452776908874512
    7. ' pq' → logprob: -13.202776908874512
    8. ',q' → logprob: -13.327776908874512
    9. ',
' → logprob: -14.577776908874512
    10. '   ' → logprob: -14.702776908874512

Token 1324: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.676292231422849e-05
    2. ' v' → logprob: -11.000017166137695
    3. 'vq' → logprob: -18.000017166137695
    4. ')v' → logprob: -18.375017166137695
    5. '	v' → logprob: -18.625017166137695
    6. '$v' → logprob: -21.875017166137695
    7. '[v' → logprob: -22.125017166137695
    8. '```' → logprob: -22.750017166137695
    9. '(v' → logprob: -22.750017166137695
    10. 'vj' → logprob: -22.875017166137695

Token 1325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2961512513575144e-05
    2. ' ,' → logprob: -10.750022888183594
    3. '`,' → logprob: -15.125022888183594
    4. '_,' → logprob: -15.375022888183594
    5. '[' → logprob: -15.625022888183594
    6. ',
' → logprob: -16.125022888183594
    7. '		' → logprob: -16.250022888183594
    8. '```' → logprob: -16.500022888183594
    9. '‌,' → logprob: -16.625022888183594
    10. '               ' → logprob: -16.750022888183594

Token 1326: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -5.836499985889532e-05
    2. ' cc' → logprob: -9.7500581741333
    3. '	cc' → logprob: -17.250059127807617
    4. 'v' → logprob: -18.375059127807617
    5. '(cc' → logprob: -19.125059127807617
    6. '   ' → logprob: -19.750059127807617
    7. ' ' → logprob: -20.125059127807617
    8. '_cc' → logprob: -20.375059127807617
    9. 'c' → logprob: -20.750059127807617
    10. 'ccc' → logprob: -21.000059127807617

Token 1327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002879414474591613
    2. ',d' → logprob: -5.877879619598389
    3. ' ,' → logprob: -9.87787914276123
    4. 'd' → logprob: -12.00287914276123
    5. '`,' → logprob: -12.00287914276123
    6. '                           ' → logprob: -13.00287914276123
    7. '```' → logprob: -13.25287914276123
    8. ',line' → logprob: -14.25287914276123
    9. ',new' → logprob: -14.37787914276123
    10. '[' → logprob: -14.37787914276123

Token 1328: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5570885807392187e-05
    2. ' d' → logprob: -11.125015258789062
    3. '           ' → logprob: -15.125015258789062
    4. '   ' → logprob: -15.500015258789062
    5. '                   ' → logprob: -16.875015258789062
    6. '    ' → logprob: -17.125015258789062
    7. '          ' → logprob: -17.125015258789062
    8. '  ' → logprob: -17.250015258789062
    9. '               ' → logprob: -17.375015258789062
    10. '       ' → logprob: -17.750015258789062

Token 1329: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0001222508290084079
    2. '[line' → logprob: -10.1251220703125
    3. 'ist' → logprob: -11.1251220703125
    4. 'iline' → logprob: -11.3751220703125
    5. 'inline' → logprob: -11.5001220703125
    6. '```' → logprob: -11.6251220703125
    7. '1' → logprob: -11.8751220703125
    8. 'oline' → logprob: -12.2501220703125
    9. 'eline' → logprob: -12.2501220703125
    10. 'l' → logprob: -12.3751220703125

Token 1330: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006657703779637814
    2. ')' → logprob: -5.506657600402832
    3. '                       ' → logprob: -7.131657600402832
    4. '                           ' → logprob: -7.256657600402832
    5. '))
' → logprob: -7.631657600402832
    6. '               ' → logprob: -7.756657600402832
    7. '                   ' → logprob: -9.631657600402832
    8. '           ' → logprob: -9.756657600402832
    9. ')))' → logprob: -10.631657600402832
    10. '                               ' → logprob: -12.756657600402832

Token 1331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5158073902130127
    2. '<|end|>' → logprob: -1.1408073902130127
    3. '```' → logprob: -3.2658073902130127
    4. ')' → logprob: -4.265807151794434
    5. '   ' → logprob: -5.265807151794434
    6. '           ' → logprob: -5.390807151794434
    7. '
' → logprob: -5.515807151794434
    8. '[' → logprob: -5.765807151794434
    9. '               ' → logprob: -6.015807151794434
    10. '                           ' → logprob: -6.140807151794434

Token 1332: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1333: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35856112837791443
    2. ':' → logprob: -1.4835611581802368
    3. ':
' → logprob: -2.6085610389709473
    4. '       ' → logprob: -8.608561515808105
    5. '	       ' → logprob: -8.733561515808105
    6. '		' → logprob: -9.483561515808105
    7. '               ' → logprob: -9.608561515808105
    8. '   ' → logprob: -10.108561515808105
    9. ' continue' → logprob: -10.233561515808105
    10. 'continue' → logprob: -10.358561515808105

Token 1334: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006271459627896547
    2. '       ' → logprob: -5.1312713623046875
    3. 'print' → logprob: -8.381271362304688
    4. '	       ' → logprob: -9.881271362304688
    5. '   ' → logprob: -10.381271362304688
    6. 'continue' → logprob: -11.381271362304688
    7. '               ' → logprob: -11.506271362304688
    8. '```' → logprob: -12.256271362304688
    9. '		' → logprob: -13.006271362304688
    10. ' print' → logprob: -13.881271362304688

Token 1335: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2667980492115021
    2. '           ' → logprob: -1.5167980194091797
    3. '       ' → logprob: -4.26679801940918
    4. '   ' → logprob: -7.64179801940918
    5. ' print' → logprob: -9.26679801940918
    6. '               ' → logprob: -9.39179801940918
    7. '```' → logprob: -9.76679801940918
    8. '	       ' → logprob: -12.14179801940918
    9. '	print' → logprob: -12.64179801940918
    10. '                   ' → logprob: -12.76679801940918

Token 1336: ' Not' (ID: 4037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11715397983789444
    2. '       ' → logprob: -2.6171538829803467
    3. '           ' → logprob: -3.3671538829803467
    4. '   ' → logprob: -5.867154121398926
    5. ' print' → logprob: -8.617154121398926
    6. '               ' → logprob: -10.492154121398926
    7. '	print' → logprob: -12.617154121398926
    8. '```' → logprob: -12.742154121398926
    9. '	       ' → logprob: -13.117154121398926
    10. '                   ' → logprob: -13.242154121398926

Token 1337: ' break' (ID: 2338)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.05531855300068855
    2. 'print' → logprob: -3.555318593978882
    3. '_found' → logprob: -4.305318355560303
    4. '           ' → logprob: -5.430318355560303
    5. 'Found' → logprob: -5.930318355560303
    6. '       ' → logprob: -6.055318355560303
    7. ' found' → logprob: -6.930318355560303
    8. '               ' → logprob: -7.555318355560303
    9. '   ' → logprob: -8.305318832397461
    10. ' print' → logprob: -8.930318832397461

Token 1338: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16697731614112854
    2. ':' → logprob: -3.2919774055480957
    3. ':
' → logprob: -3.2919774055480957
    4. 'print' → logprob: -3.5419774055480957
    5. '               ' → logprob: -3.7919774055480957
    6. '       ' → logprob: -3.7919774055480957
    7. '                   ' → logprob: -6.291977405548096
    8. ',' → logprob: -7.166977405548096
    9. '   ' → logprob: -7.291977405548096
    10. '(print' → logprob: -7.416977405548096

Token 1339: ' cannot' (ID: 6284)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00125570734962821
    2. '       ' → logprob: -7.251255512237549
    3. ' print' → logprob: -8.001255989074707
    4. '           ' → logprob: -8.501255989074707
    5. '   ' → logprob: -12.001255989074707
    6. '```' → logprob: -13.876255989074707
    7. '	print' → logprob: -15.751255989074707
    8. '               ' → logprob: -16.87625503540039
    9. '``' → logprob: -17.62625503540039
    10. 'continue' → logprob: -18.62625503540039

Token 1340: ' reach' (ID: 7627)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009924658574163914
    2. 'find' → logprob: -5.63492488861084
    3. 'reach' → logprob: -5.75992488861084
    4. ' print' → logprob: -5.88492488861084
    5. 'be' → logprob: -8.75992488861084
    6. ' reach' → logprob: -9.13492488861084
    7. ' be' → logprob: -10.88492488861084
    8. ' find' → logprob: -10.88492488861084
    9. '-' → logprob: -11.13492488861084
    10. '       ' → logprob: -11.25992488861084

Token 1341: ' g' (ID: 329)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38389986753463745
    2. '       ' → logprob: -1.3838999271392822
    3. '           ' → logprob: -2.8838999271392822
    4. '(-' → logprob: -4.633899688720703
    5. '-' → logprob: -6.758899688720703
    6. '(' → logprob: -7.508899688720703
    7. '(print' → logprob: -8.258899688720703
    8. '   ' → logprob: -8.508899688720703
    9. ' print' → logprob: -8.508899688720703
    10. '               ' → logprob: -9.633899688720703

Token 1342: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20908932387828827
    2. '       ' → logprob: -1.7090892791748047
    3. '```' → logprob: -5.584089279174805
    4. 'print' → logprob: -5.709089279174805
    5. '   ' → logprob: -7.834089279174805
    6. '               ' → logprob: -9.459089279174805
    7. '``' → logprob: -9.834089279174805
    8. '		' → logprob: -11.459089279174805
    9. '
' → logprob: -11.459089279174805
    10. '	       ' → logprob: -11.834089279174805

Token 1343: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26942965388298035
    2. '       ' → logprob: -1.5194296836853027
    3. 'print' → logprob: -4.269429683685303
    4. '   ' → logprob: -6.519429683685303
    5. '	       ' → logprob: -7.019429683685303
    6. '```' → logprob: -7.144429683685303
    7. '		' → logprob: -9.519429206848145
    8. '	' → logprob: -10.269429206848145
    9. '               ' → logprob: -10.394429206848145
    10. '	   ' → logprob: -10.769429206848145

Token 1344: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.028191305696964264
    2. '       ' → logprob: -3.778191328048706
    3. '           ' → logprob: -5.528191089630127
    4. '```' → logprob: -7.653191089630127
    5. '   ' → logprob: -8.028191566467285
    6. ' print' → logprob: -8.903191566467285
    7. '``' → logprob: -11.528191566467285
    8. '	print' → logprob: -11.653191566467285
    9. '	       ' → logprob: -12.903191566467285
    10. '               ' → logprob: -14.278191566467285

Token 1345: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13009203970432281
    2. '(-' → logprob: -2.130092144012451
    3. '("' → logprob: -6.630092144012451
    4. '   ' → logprob: -7.130092144012451
    5. '('' → logprob: -8.005091667175293
    6. '"' → logprob: -8.505091667175293
    7. '(' → logprob: -8.880091667175293
    8. ' -' → logprob: -9.005091667175293
    9. 'Impossible' → logprob: -9.755091667175293
    10. '       ' → logprob: -10.005091667175293

Token 1346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -20.5
    3. ' ' → logprob: -21.125
    4. '
' → logprob: -21.625
    5. '2' → logprob: -22.625
    6. '۱' → logprob: -22.875
    7. '```' → logprob: -23.0
    8. '{' → logprob: -23.0
    9. '   ' → logprob: -23.125
    10. 'print' → logprob: -24.125

Token 1347: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.250005722045898
    3. '       ' → logprob: -15.125005722045898
    4. '<|end|>' → logprob: -15.125005722045898
    5. ')}' → logprob: -15.875005722045898
    6. '())' → logprob: -16.2500057220459
    7. '`)' → logprob: -16.3750057220459
    8. '```' → logprob: -16.6250057220459
    9. '   ' → logprob: -16.7500057220459
    10. ')}}' → logprob: -16.8750057220459

Token 1348: 'if' (ID: 366)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2911015748977661
    2. '   ' → logprob: -2.6661014556884766
    3. '[' → logprob: -3.0411014556884766
    4. '```' → logprob: -3.1661014556884766
    5. '<|end|>' → logprob: -3.2911014556884766
    6. ')' → logprob: -3.5411014556884766
    7. ']' → logprob: -4.416101455688477
    8. '<|end|>' → logprob: -6.416101455688477
    9. '[
' → logprob: -6.541101455688477
    10. '        ' → logprob: -6.916101455688477

Token 1349: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12694984674453735
    2. '__' → logprob: -2.1269497871398926
    3. '```' → logprob: -11.37695026397705
    4. 'if' → logprob: -13.12695026397705
    5. '/__' → logprob: -13.12695026397705
    6. '___' → logprob: -13.25195026397705
    7. '_' → logprob: -14.37695026397705
    8. 'name' → logprob: -14.37695026397705
    9. '.__' → logprob: -14.75195026397705
    10. '____' → logprob: -14.75195026397705

Token 1350: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.043752897530794144
    2. ' ==' → logprob: -3.793752908706665
    3. '==' → logprob: -4.168752670288086
    4. '=="' → logprob: -6.043752670288086
    5. 'name' → logprob: -7.418752670288086
    6. '=='' → logprob: -8.043752670288086
    7. ' __' → logprob: -8.418752670288086
    8. '__.__' → logprob: -8.543752670288086
    9. '```' → logprob: -8.918752670288086
    10. '__":
' → logprob: -8.918752670288086

Token 1351: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0044658430851995945
    2. '```' → logprob: -6.3794660568237305
    3. '__.__' → logprob: -6.8794660568237305
    4. '==' → logprob: -7.8794660568237305
    5. '__('' → logprob: -8.00446605682373
    6. '__["' → logprob: -8.37946605682373
    7. '=="' → logprob: -8.50446605682373
    8. '__":
' → logprob: -8.75446605682373
    9. '__':
' → logprob: -9.87946605682373
    10. '__((' → logprob: -9.87946605682373

Token 1352: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1680937260389328
    2. '==' → logprob: -2.043093681335449
    3. '=="' → logprob: -4.168093681335449
    4. '=='' → logprob: -4.918093681335449
    5. ' ==' → logprob: -6.668093681335449
    6. '```' → logprob: -7.168093681335449
    7. '__.__' → logprob: -9.66809368133545
    8. '__('' → logprob: -9.91809368133545
    9. '__["' → logprob: -10.79309368133545
    10. '___' → logprob: -11.16809368133545

Token 1353: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04859315976500511
    2. ''' → logprob: -3.048593044281006
    3. '__' → logprob: -12.173593521118164
    4. ' "__' → logprob: -14.423593521118164
    5. '"user' → logprob: -17.173593521118164
    6. ' '__' → logprob: -17.548593521118164
    7. '"name' → logprob: -18.048593521118164
    8. ''"' → logprob: -18.173593521118164
    9. '"class' → logprob: -18.673593521118164
    10. ''user' → logprob: -18.923593521118164

Token 1354: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20166905224323273
    2. '__' → logprob: -1.7016690969467163
    3. ''' → logprob: -8.451668739318848
    4. '"' → logprob: -10.701668739318848
    5. 'name' → logprob: -10.951668739318848
    6. '_main' → logprob: -13.701668739318848
    7. '__':
' → logprob: -15.076668739318848
    8. ' main' → logprob: -15.326668739318848
    9. '```' → logprob: -16.326669692993164
    10. '__":
' → logprob: -16.451669692993164

Token 1355: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.06442742049694061
    2. '__' → logprob: -3.314427375793457
    3. '__":
' → logprob: -3.689427375793457
    4. '():
' → logprob: -7.439427375793457
    5. '__:' → logprob: -8.939427375793457
    6. '__()
' → logprob: -9.439427375793457
    7. ':' → logprob: -9.439427375793457
    8. '==' → logprob: -10.814427375793457
    9. '```' → logprob: -11.064427375793457
    10. '__.__' → logprob: -11.064427375793457

Token 1356: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.25731900334358215
    2. '   ' → logprob: -1.5073189735412598
    3. '	main' → logprob: -5.25731897354126
    4. ' main' → logprob: -8.757319450378418
    5. '_main' → logprob: -12.882319450378418
    6. '(main' → logprob: -13.007319450378418
    7. '```' → logprob: -13.257319450378418
    8. '  ' → logprob: -14.507319450378418
    9. '    
' → logprob: -14.757319450378418
    10. ' ' → logprob: -14.882319450378418

Token 1357: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '   ' → logprob: -20.0
    4. '	main' → logprob: -20.5
    5. 'sys' → logprob: -22.0
    6. 'import' → logprob: -22.25
    7. '_main' → logprob: -25.625
    8. '(main' → logprob: -26.125
    9. '.main' → logprob: -26.625
    10. 'Main' → logprob: -26.625

Token 1358: '()' (ID: 416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0933871269226074
    2. ']' → logprob: -1.7183871269226074
    3. '   ' → logprob: -1.7183871269226074
    4. ')' → logprob: -2.0933871269226074
    5. '[' → logprob: -2.3433871269226074
    6. '<|end|>' → logprob: -3.8433871269226074
    7. '```' → logprob: -3.8433871269226074
    8. '#' → logprob: -4.843387126922607
    9. '           ' → logprob: -5.218387126922607
    10. '        ' → logprob: -5.343387126922607


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1356
Tokens correctement prédits (1ère position, stricte): 485
Tokens correctement prédits (1ère position, avec adaptation): 532
Tokens correctement prédits (top 10): 1012
Précision stricte (1ère position): 35.77%
Précision adaptée (1ère position): 39.23%
Précision (top 10): 74.63%
================================================================================
